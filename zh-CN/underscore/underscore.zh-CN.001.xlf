<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="underscore">
    <body>
      <group id="underscore">
        <trans-unit id="54f697a1ff421e46f37022813a88d0937a82090c" translate="yes" xml:space="preserve">
          <source>&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5371e12170b1bf1c6f13fc11149280233af83d02" translate="yes" xml:space="preserve">
          <source>&amp;amp;#96;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcd75fda7ddeec0a0d5bc1a6ece059742520455b" translate="yes" xml:space="preserve">
          <source>&amp;amp;#x27;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36ca13a828bbf6074bf576d1ea16304357c44095" translate="yes" xml:space="preserve">
          <source>&amp;amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="862059e25b895f2ab235c38592095ef910c58ff6" translate="yes" xml:space="preserve">
          <source>&amp;amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2c655981423d25a71363f60eabee492fed4f6ac" translate="yes" xml:space="preserve">
          <source>&amp;amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ed5bfc6cbd621614a810a050f66d082b7e6fbb3" translate="yes" xml:space="preserve">
          <source>&amp;amp;quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9502e9cccc30dc5d0642fff2f79cfbab1d5de010" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2009&amp;ndash;2018 Jeremy Ashkenas, DocumentCloud and Investigative Reporters &amp;amp; Editors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="715afa8c9462398025fda6e0a71189ea70c1766f" translate="yes" xml:space="preserve">
          <source>&amp;lt;% &amp;hellip; %&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f65d86b1c98620a385114c9e072baf0a9f5b8147" translate="yes" xml:space="preserve">
          <source>&amp;lt;%- &amp;hellip; %&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d46b53f52c7d01bff620a367f767f538a5193d9e" translate="yes" xml:space="preserve">
          <source>&amp;lt;%= &amp;hellip; %&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b75960926bfd698a3d29f4a9d9b714d45d4495e6" translate="yes" xml:space="preserve">
          <source>&amp;lt;%= ... %&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fa13fa70e05bb6f00aaab23560b1a5948fcc9ea" translate="yes" xml:space="preserve">
          <source>'s type,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="772addc7509a1799ca53f71a745d82e7079b5e36" translate="yes" xml:space="preserve">
          <source>(element, index, list)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7739136dc697141cd8d76585cab6736b910f012b" translate="yes" xml:space="preserve">
          <source>(or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a618152e5ba59e34b51e9c68aa348cca884c9cbb" translate="yes" xml:space="preserve">
          <source>(or key) of the iteration, and finally a reference to the entire</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27a36c1597c994533f5ce8add665c0c8b81b0ab3" translate="yes" xml:space="preserve">
          <source>(value, key, list)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="687487452f19ded1cdc8db3a835c9ae1e67b2551" translate="yes" xml:space="preserve">
          <source>) of the iteration, and finally a reference to the entire</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d41919407ce8f78b6cd89401353e39179fec9ab2" translate="yes" xml:space="preserve">
          <source>).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8278d2adba7612cf98a492d21a4ac4c78acb1202" translate="yes" xml:space="preserve">
          <source>, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="764a67f7365b000d2bcffe42ecc264c20f0355de" translate="yes" xml:space="preserve">
          <source>, and if you'd like to disable the execution on the trailing-edge, pass</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f653fcfa5af9d386498c77408f6453bda56fe5e6" translate="yes" xml:space="preserve">
          <source>, as well as execute arbitrary JavaScript code, with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dde241f0f22cc4dab72c38ffa38583161771d6fc" translate="yes" xml:space="preserve">
          <source>, but instead of returning a list of values, returns a count for the number of values in that group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd05a17c42de09233ed2cb0c1ae643c99b0b145" translate="yes" xml:space="preserve">
          <source>, but uses a safe reference to the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcccc5fafdbef2e06b82034bea5981e54a0dc61b" translate="yes" xml:space="preserve">
          <source>, but without all of the property descriptor jazz.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65a9e82e1c776af004f57deb82a1b2a5d15a67f7" translate="yes" xml:space="preserve">
          <source>, then the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4f12e25d4a190d380f417cb25ed1897b88fb3aa" translate="yes" xml:space="preserve">
          <source>-Infinity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a52ce780950d4d969792a2559cd519d7ee8c727" translate="yes" xml:space="preserve">
          <source>.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="379da45f7c93d539616f3f7b0aac10e44fbb8662" translate="yes" xml:space="preserve">
          <source>. &lt;b&gt;methodNames&lt;/b&gt; are required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b8679feb317f0525d7ab89290af623108837dce" translate="yes" xml:space="preserve">
          <source>. &lt;b&gt;predicate&lt;/b&gt; is transformed through &lt;a href=&quot;#iteratee&quot;&gt;&lt;b&gt;iteratee&lt;/b&gt;&lt;/a&gt; to facilitate shorthand syntaxes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="634b04ef5a8995a38689faff5e9f97afe15ae8a4" translate="yes" xml:space="preserve">
          <source>. If &lt;b&gt;list&lt;/b&gt; is a JavaScript object, &lt;b&gt;iteratee&lt;/b&gt;'s arguments will be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a686004386fdf01eca460567468760ca92af4d6" translate="yes" xml:space="preserve">
          <source>. If you wish to interpolate a value, and have it be HTML-escaped, use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3cd7a3889f2087f2538436791d62e6f55cdd066" translate="yes" xml:space="preserve">
          <source>. Returns a list of integers from &lt;b&gt;start&lt;/b&gt; (inclusive) to &lt;b&gt;stop&lt;/b&gt; (exclusive), incremented (or decremented) by &lt;b&gt;step&lt;/b&gt;, exclusive. Note that ranges that &lt;b&gt;stop&lt;/b&gt; before they &lt;b&gt;start&lt;/b&gt; are considered to be zero-length instead of negative &amp;mdash; if you'd like a negative range, use a negative &lt;b&gt;step&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="310a44e3ab34419200158b5b0c5e8f0c38ad3b5c" translate="yes" xml:space="preserve">
          <source>. Returns the &lt;b&gt;list&lt;/b&gt; for chaining.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="271a7600e0592b248825aa43a741efb963444473" translate="yes" xml:space="preserve">
          <source>. Takes an object and returns a function which will return the value of a provided property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2fc3e877df243faef6e10caf7a5ebf993492db3" translate="yes" xml:space="preserve">
          <source>. When you evaluate a template function, pass in a &lt;b&gt;data&lt;/b&gt; object that has properties corresponding to the template's free variables. The &lt;b&gt;settings&lt;/b&gt; argument should be a hash containing any</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7736015cfa961ad4c007b073c9bb1ef33149ce2" translate="yes" xml:space="preserve">
          <source>.cancel()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05a79f06cf3f67f726dae68d18a2290f6c9a50c9" translate="yes" xml:space="preserve">
          <source>:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0141d8767066bd5ed3f6c9e7a31741d96aa025ea" translate="yes" xml:space="preserve">
          <source>; &lt;b&gt;step&lt;/b&gt; defaults to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="321025813be9701909ae90c629d3d63f1b869c66" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;after&lt;/b&gt;&lt;code&gt;_.after(count, function)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89c10f7eae7a65378117e3450464b47b8f222d55" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;allKeys&lt;/b&gt;&lt;code&gt;_.allKeys(object)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="400612edc6a4a3e982ab0c0a49a4d48598537b14" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;before&lt;/b&gt;&lt;code&gt;_.before(count, function)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c0899ec7de30f9b431a1ad918731a6692ff47cf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;bind&lt;/b&gt;&lt;code&gt;_.bind(function, object, *arguments)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="785aedbc12aa47754d75da3712f5b05da606da52" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;bindAll&lt;/b&gt;&lt;code&gt;_.bindAll(object, *methodNames)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f31af03df9c126dabdc66f2d11c92899812e880c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;chain&lt;/b&gt;&lt;code&gt;_.chain(obj)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b29b7df79be8e4b69114f975e7d54d95f69faba" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;chunk&lt;/b&gt;&lt;code&gt;_.chunk(array, length)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcdb747e5039022b7cdf12ba9c7a2e99b2ff1a88" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;clone&lt;/b&gt;&lt;code&gt;_.clone(object)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f040d0d55f83a6400e0a5517b15ee1afb6a41093" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;compact&lt;/b&gt;&lt;code&gt;_.compact(list)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d59c110197e878496cbee347e9fe3dc38650ac9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;compose&lt;/b&gt;&lt;code&gt;_.compose(*functions)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19d8484288b8210e7acaa1ffdb13acd5d187e87b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;constant&lt;/b&gt;&lt;code&gt;_.constant(value)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e51a48d3358c0bbe0ec12aa3d5c89a6ae3a8cfd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;contains&lt;/b&gt;&lt;code&gt;_.contains(list, value, [fromIndex])&lt;/code&gt;Aliases: &lt;b&gt;include&lt;/b&gt;, &lt;b&gt;includes&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53c5486417457be01db9bd7dee327a72f3fd72c5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;countBy&lt;/b&gt;&lt;code&gt;_.countBy(list, iteratee, [context])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39470b00c22f6f4a2b65d18cedc5ae9ffaed970b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;create&lt;/b&gt;&lt;code&gt;_.create(prototype, props)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f57171bce673940bbdbfbf802e7fa6448c8d9ad3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;debounce&lt;/b&gt;&lt;code&gt;_.debounce(function, wait, [immediate])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad7518cbe0a6627e69e083142e3a91bdfb7eef1e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;defaults&lt;/b&gt;&lt;code&gt;_.defaults(object, *defaults)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="464d5330592d2b60b1aa49e29feae37d1dcf6f90" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;defer&lt;/b&gt;&lt;code&gt;_.defer(function, *arguments)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca0a40ba3aeaf03d3a8a79a51eb558e5eaae2b28" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;delay&lt;/b&gt;&lt;code&gt;_.delay(function, wait, *arguments)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6052fe62dcff628d83c5a2f51c251f16b1695e2a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;difference&lt;/b&gt;&lt;code&gt;_.difference(array, *others)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2359ec3917269a5ca0e0967b950e96d0c91c6ad" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;each&lt;/b&gt;&lt;code&gt;_.each(list, iteratee, [context])&lt;/code&gt;Alias: &lt;b&gt;forEach&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8090b1d71335229a761f399b4209ac303b56072" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;escape&lt;/b&gt;&lt;code&gt;_.escape(string)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0503dab39f210da4fb6e68b2ba2258bebe42050" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;every&lt;/b&gt;&lt;code&gt;_.every(list, [predicate], [context])&lt;/code&gt;Alias: &lt;b&gt;all&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6fbb3ce6b1ce9a50da17aa122038e86d559d001" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;extend&lt;/b&gt;&lt;code&gt;_.extend(destination, *sources)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38162fdacfea0c28e5cd9885bad347bfea16cbd0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;extendOwn&lt;/b&gt;&lt;code&gt;_.extendOwn(destination, *sources)&lt;/code&gt;Alias: &lt;b&gt;assign&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93013ebe4a1e8c1754c8b40ccccda9c3d6421f3b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;filter&lt;/b&gt;&lt;code&gt;_.filter(list, predicate, [context])&lt;/code&gt;Alias: &lt;b&gt;select&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f538f9cf17b2519390bbfe802743a6608b34faa" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;find&lt;/b&gt;&lt;code&gt;_.find(list, predicate, [context])&lt;/code&gt;Alias: &lt;b&gt;detect&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="157999fa01ab80ebda05e7845226e8139b379103" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;findIndex&lt;/b&gt;&lt;code&gt;_.findIndex(array, predicate, [context])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae5e2f4a5f97665d7f4a7bcf853e19fab47633ba" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;findKey&lt;/b&gt;&lt;code&gt;_.findKey(object, predicate, [context])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="518209a6e7c9aadd3f1b28bd3e76d5acf3d02822" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;findLastIndex&lt;/b&gt;&lt;code&gt;_.findLastIndex(array, predicate, [context])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc0b0b6ce1daf191589daa3d25425f7344794a35" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;findWhere&lt;/b&gt;&lt;code&gt;_.findWhere(list, properties)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bb8d7b11528e58302eb5d359e1fc6d062fd3e61" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;first&lt;/b&gt;&lt;code&gt;_.first(array, [n])&lt;/code&gt;Aliases: &lt;b&gt;head&lt;/b&gt;, &lt;b&gt;take&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f1660eea4268246738d8f42bd14e4087696ccd5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;flatten&lt;/b&gt;&lt;code&gt;_.flatten(array, [shallow])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6fb6b5d8956258564eadf446a8795d28462edac" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;functions&lt;/b&gt;&lt;code&gt;_.functions(object)&lt;/code&gt;Alias: &lt;b&gt;methods&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43a40670a804f7d9d13994beb343c70597dd0157" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;groupBy&lt;/b&gt;&lt;code&gt;_.groupBy(list, iteratee, [context])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d6187b89bc1f13482ea4afe897bdbb8c62f39f5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;has&lt;/b&gt;&lt;code&gt;_.has(object, key)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aafc0609f477607834074ca02d6aea5a9a8acb95" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;identity&lt;/b&gt;&lt;code&gt;_.identity(value)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8805e6e2922f15569da909a952f3ea5ffb96cdda" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;indexBy&lt;/b&gt;&lt;code&gt;_.indexBy(list, iteratee, [context])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84696c95d98e61fdc0e548277cc921e0fa1ba7a3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;indexOf&lt;/b&gt;&lt;code&gt;_.indexOf(array, value, [isSorted])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="711250aa5d1ef13f8ea42c55d82ad60502750d5f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;initial&lt;/b&gt;&lt;code&gt;_.initial(array, [n])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="820292ad39afc4e8226f9df123b0a4bd1a550cb6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;intersection&lt;/b&gt;&lt;code&gt;_.intersection(*arrays)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="091c4d51abc72173af311bde36eb04fdec4111d7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;invert&lt;/b&gt;&lt;code&gt;_.invert(object)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="239a4dd36f2cded180de24232ea1fd60950f65f7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;invoke&lt;/b&gt;&lt;code&gt;_.invoke(list, methodName, *arguments)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b80b841187e4a5924875c72639a96cd7a8f544f2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;isArguments&lt;/b&gt;&lt;code&gt;_.isArguments(object)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f241e9157b5e14e934f501163f1a0fced462352c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;isArray&lt;/b&gt;&lt;code&gt;_.isArray(object)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3374d82f5b297d5186de187af9a49aab89a2440a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;isBoolean&lt;/b&gt;&lt;code&gt;_.isBoolean(object)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f31354e83a7d6ab1b0834597c93d826812f9b5e8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;isDate&lt;/b&gt;&lt;code&gt;_.isDate(object)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c43e9f9f4c06937777cd9acecdfc3e673cf48ae" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;isElement&lt;/b&gt;&lt;code&gt;_.isElement(object)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df44642413668ed802af98d59b8be65c4461b63" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;isEmpty&lt;/b&gt;&lt;code&gt;_.isEmpty(object)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="754a1d9788c411891f60511588d5e01cdb75f2f5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;isEqual&lt;/b&gt;&lt;code&gt;_.isEqual(object, other)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef0cda6f2251bce7ad5264ca7a02e473e9eb01b6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;isError&lt;/b&gt;&lt;code&gt;_.isError(object)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d216c1131b82f7bee6915ca31c42913849632e68" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;isFinite&lt;/b&gt;&lt;code&gt;_.isFinite(object)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b048bc8306c4af9305d61ae57fc7fbabec39ace6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;isFunction&lt;/b&gt;&lt;code&gt;_.isFunction(object)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a9a81373849561e5f890d1ce6e9af2301586198" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;isMap&lt;/b&gt;&lt;code&gt;_.isMap(object)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daec414ae24ba22c6501bf6fe629adfb6b601c09" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;isMatch&lt;/b&gt;&lt;code&gt;_.isMatch(object, properties)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e133862ad569a021df718164e6b364b223a2ccba" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;isNaN&lt;/b&gt;&lt;code&gt;_.isNaN(object)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55151778c7b3532996a5849dd1090b6a0c5f3606" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;isNull&lt;/b&gt;&lt;code&gt;_.isNull(object)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ee940fcd702c1480db6b36af86deebb77f1f6ce" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;isNumber&lt;/b&gt;&lt;code&gt;_.isNumber(object)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20764e456aa759ef0df65967b2772800554b4645" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;isObject&lt;/b&gt;&lt;code&gt;_.isObject(value)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b91c37637ddfc783721dfebb64327250b40de29d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;isRegExp&lt;/b&gt;&lt;code&gt;_.isRegExp(object)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a914b624197fc2e1eef2a51e11715e3d1fa5b7ec" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;isSet&lt;/b&gt;&lt;code&gt;_.isSet(object)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="306f9f41113e177808a416c9083e22a57bfc52c7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;isString&lt;/b&gt;&lt;code&gt;_.isString(object)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37094695c222edd963019ca292416619bf05637e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;isSymbol&lt;/b&gt;&lt;code&gt;_.isSymbol(object)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaecc8069209b89562e2c70a65299ea6da253544" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;isUndefined&lt;/b&gt;&lt;code&gt;_.isUndefined(value)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15eccd06f9b5b3ecb9500a57501b2eb730abe788" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;isWeakMap&lt;/b&gt;&lt;code&gt;_.isWeakMap(object)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0120df673911eafb180a0b1a95b39a52d01b42a9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;isWeakSet&lt;/b&gt;&lt;code&gt;_.isWeakSet(object)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2180b6888aee632ee09edca2a5b167f16f422ea1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;iteratee&lt;/b&gt;&lt;code&gt;_.iteratee(value, [context])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2400c45b5abd17b99d30b2865742af454348f80" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;keys&lt;/b&gt;&lt;code&gt;_.keys(object)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1c18be6dd90f838fea01154a24e9901b7f6c13b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;last&lt;/b&gt;&lt;code&gt;_.last(array, [n])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="465d5887c04f7fa14131330cc5bdae29d8145327" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;lastIndexOf&lt;/b&gt;&lt;code&gt;_.lastIndexOf(array, value, [fromIndex])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49003ac1b630eda8bcbae8b2ddc8c8b49ccf531a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;map&lt;/b&gt;&lt;code&gt;_.map(list, iteratee, [context])&lt;/code&gt;Alias: &lt;b&gt;collect&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7651bb581104c7bb5a208229194a4b809a08af32" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;mapObject&lt;/b&gt;&lt;code&gt;_.mapObject(object, iteratee, [context])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bac983a55d939f6b5ab63e8a715a8fd0eeee1006" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;matcher&lt;/b&gt;&lt;code&gt;_.matcher(attrs)&lt;/code&gt;Alias: &lt;b&gt;matches&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc385a33da9745817f43efa01117678ad6eb0b76" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;max&lt;/b&gt;&lt;code&gt;_.max(list, [iteratee], [context])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81aacd116b9b5d867572bc3e45b27c8214c36b13" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;memoize&lt;/b&gt;&lt;code&gt;_.memoize(function, [hashFunction])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ad507a89958f750002fcb7bf5be3c2a439d460c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;min&lt;/b&gt;&lt;code&gt;_.min(list, [iteratee], [context])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="148bc8d31d05286657cf3c478161b4638e1494c3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;mixin&lt;/b&gt;&lt;code&gt;_.mixin(object)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95456cd945ce296eac9c25447d88229f264d7e0d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;negate&lt;/b&gt;&lt;code&gt;_.negate(predicate)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="655853500a6e74df5e86a941f3eea32392760ae6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;noConflict&lt;/b&gt;&lt;code&gt;_.noConflict()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="468eee95539e9337756fd7157f88fd7a98a2be72" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;noop&lt;/b&gt;&lt;code&gt;_.noop()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd9a514d416e8f41c6cf3a7bed138b1d6e1a0cd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;now&lt;/b&gt;&lt;code&gt;_.now()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="652d1386f0462068e02ec850389836d145544643" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;object&lt;/b&gt;. Any nested objects or arrays will be copied by reference, not duplicated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4462afc3201df212737f3e1682d43a54582c786b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;object&lt;/b&gt;&lt;code&gt;_.object(list, [values])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58c4a1a293db99e4a175389b45bd4888b2e96353" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;omit&lt;/b&gt;&lt;code&gt;_.omit(object, *keys)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="378fd301d2e60d1a8b4a3bd56d9af30cd96b5582" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;once&lt;/b&gt;&lt;code&gt;_.once(function)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a73799b0a08fe85ce7d5cd86a0bb89ca6c7bc9b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;pairs&lt;/b&gt;&lt;code&gt;_.pairs(object)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd9760d2455fda89c6dbd8709d275118d71d8da" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;partial&lt;/b&gt;&lt;code&gt;_.partial(function, *arguments)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f884823086e9c5985b1ef3221c25cdbef70b447" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;partition&lt;/b&gt;&lt;code&gt;_.partition(list, predicate)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="482718c656401369e70a7159cfc458ff4c56e000" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;pick&lt;/b&gt;&lt;code&gt;_.pick(object, *keys)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="407ff68b73cf0e780f4202931de44e18a3e8f459" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;pluck&lt;/b&gt;&lt;code&gt;_.pluck(list, propertyName)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf4aff8f5c36367f8bc495b0280ea23cbeefc354" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;property&lt;/b&gt;&lt;code&gt;_.property(path)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c564d84ddd131bc87721bd3ad486dce072f521a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;propertyOf&lt;/b&gt;&lt;code&gt;_.propertyOf(object)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95f74c6ec84578fb5c9ad952f56e7e81b3f8159b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;random&lt;/b&gt;&lt;code&gt;_.random(min, max)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9820b4f3eeca1748356d63d6d0fd5bec8e8625b8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;range&lt;/b&gt;&lt;code&gt;_.range([start], stop, [step])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21ca9d8b33e3be01f8c5ed11d49215f355ca3e7f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;reduce&lt;/b&gt;&lt;code&gt;_.reduce(list, iteratee, [memo], [context])&lt;/code&gt;Aliases: &lt;b&gt;inject&lt;/b&gt;, &lt;b&gt;foldl&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcbf83006298e709ed9a41c65aec213855d5c8c6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;reduceRight&lt;/b&gt;&lt;code&gt;_.reduceRight(list, iteratee, [memo], [context])&lt;/code&gt;Alias: &lt;b&gt;foldr&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be88cef9656af317c7bdafb14025c7a75b47fca6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;reject&lt;/b&gt;&lt;code&gt;_.reject(list, predicate, [context])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15275b11885f4d2f3abb5fe295013cab8843fd87" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;rest&lt;/b&gt;&lt;code&gt;_.rest(array, [index])&lt;/code&gt;Aliases: &lt;b&gt;tail&lt;/b&gt;, &lt;b&gt;drop&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b166deaafe9e46903688277126615d53bd811a7b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;restArguments&lt;/b&gt;&lt;code&gt;_.restArguments(function, [startIndex])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fbda747e9247be9f3f4d2ced4b6427ad0457afd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;result&lt;/b&gt;&lt;code&gt;_.result(object, property, [defaultValue])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a933c85a680dcf792f99a6ab51bc13452b25d5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;sample&lt;/b&gt;&lt;code&gt;_.sample(list, [n])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0954317456e26ece02158350edad5c957d18e857" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;shuffle&lt;/b&gt;&lt;code&gt;_.shuffle(list)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b651ab23e1071f802a01c862662dbfc1282139c1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;size&lt;/b&gt;&lt;code&gt;_.size(list)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abe9b857082ad098ce9ddcc2f558ccba6bb58f00" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;some&lt;/b&gt;&lt;code&gt;_.some(list, [predicate], [context])&lt;/code&gt;Alias: &lt;b&gt;any&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a4e55cfe7204d7304c24f0f9cefcb42a432ac89" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;sortBy&lt;/b&gt;&lt;code&gt;_.sortBy(list, iteratee, [context])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db6479f89bd50eccb2e71d5fbfda1c0fe17a4a7a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;sortedIndex&lt;/b&gt;&lt;code&gt;_.sortedIndex(array, value, [iteratee], [context])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="251e4f4b847ca53a4a66d9b99f1388904fba09a5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;tap&lt;/b&gt;&lt;code&gt;_.tap(object, interceptor)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fcdf437fb97a5f825c1702b290caf77f0ab8fe6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;template&lt;/b&gt;&lt;code&gt;_.template(templateString, [settings])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa47d8bd1ebb8730c84bf935e8715dde2e912fb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;throttle&lt;/b&gt;&lt;code&gt;_.throttle(function, wait, [options])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cbd882091d43774d843d1a768fdf931ecef2ee6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;times&lt;/b&gt;&lt;code&gt;_.times(n, iteratee, [context])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0840d28d3a5e142d92496a518d3d9b0604c74642" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;toArray&lt;/b&gt;&lt;code&gt;_.toArray(list)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="824209ada8d0430eb1362559bd4977f138131c84" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;unescape&lt;/b&gt;&lt;code&gt;_.unescape(string)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b71050941d39adbabbc383ff6504422cf108ebdf" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;union&lt;/b&gt;&lt;code&gt;_.union(*arrays)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddeea0beb41c7256c45da8944a165b9222ad4994" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;uniq&lt;/b&gt;&lt;code&gt;_.uniq(array, [isSorted], [iteratee])&lt;/code&gt;Alias: &lt;b&gt;unique&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aae5ee0b513dc51188547346f9b0692ac8b36f4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;uniqueId&lt;/b&gt;&lt;code&gt;_.uniqueId([prefix])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f896fc27fc3730fead0af3f9bb512a06d933c11" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;unzip&lt;/b&gt;&lt;code&gt;_.unzip(array)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d9a206f48dfc4b5dd8cb5a5c783899e7b94e17d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;value&lt;/b&gt;&lt;code&gt;_.chain(obj).value()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36381b795beb3148bd38c1fa66ca393161b512f4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;values&lt;/b&gt;&lt;code&gt;_.values(object)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d6197100cbf2987a53faaea2265696d68268cc3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;where&lt;/b&gt;&lt;code&gt;_.where(list, properties)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e115b26c0a5a9bdd5553d523b208dadcc120ab5e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;without&lt;/b&gt;&lt;code&gt;_.without(array, *values)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68117c625a7c1eb638524ae9dc3a07af20d6e0b5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;wrap&lt;/b&gt;&lt;code&gt;_.wrap(function, wrapper)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e5615d022a4b70955140f82a6202fb9ef8ebfde" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;zip&lt;/b&gt;&lt;code&gt;_.zip(*arrays)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="381f3c7dc3e19da842ecd45032a3113efab07966" translate="yes" xml:space="preserve">
          <source>A convenient version of what is perhaps the most common use-case for &lt;b&gt;map&lt;/b&gt;: extracting a list of property values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="234c6df08fbb031de5a125b7352d0e977337a645" translate="yes" xml:space="preserve">
          <source>A function to create flexibly-numbered lists of integers, handy for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47c608c14bb9ffb633c56fd9edd159f386372757" translate="yes" xml:space="preserve">
          <source>Allows you to extend Underscore with your own utility functions. Pass a hash of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99bbf307bedf67f29b6abf7e78cc925088dec026" translate="yes" xml:space="preserve">
          <source>Also known as &lt;b&gt;inject&lt;/b&gt; and &lt;b&gt;foldl&lt;/b&gt;, reduce boils down a &lt;b&gt;list&lt;/b&gt; of values into a single value. &lt;b&gt;Memo&lt;/b&gt; is the initial state of the reduction, and each successive step of it should be returned by &lt;b&gt;iteratee&lt;/b&gt;. The iteratee is passed four arguments: the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="107004472b7ba4e5e31f3082ee1fb5a1239eec61" translate="yes" xml:space="preserve">
          <source>Array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa02d3f49bf321fb5979b03ac56b6cd9657dfad" translate="yes" xml:space="preserve">
          <source>Array Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8c4e366943443cb73024f75da368499a8503a9b" translate="yes" xml:space="preserve">
          <source>At the end of the &lt;b&gt;wait&lt;/b&gt; interval, the function will be called with the arguments that were passed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2620f7ae85b9b2f6173844f85ca6c88305882f4b" translate="yes" xml:space="preserve">
          <source>Bind a &lt;b&gt;function&lt;/b&gt; to an &lt;b&gt;object&lt;/b&gt;, meaning that whenever the function is called, the value of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f032dddbeb262dd75302882f2a41e26784d1497f" translate="yes" xml:space="preserve">
          <source>Binds a number of methods on the &lt;b&gt;object&lt;/b&gt;, specified by &lt;b&gt;methodNames&lt;/b&gt;, to be run in the context of that object whenever they are invoked. Very handy for binding functions that are going to be used as event handlers, which would otherwise be invoked with a fairly useless</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5f3ae854ba751b08f55dd6e9c16aac8e4b5af82" translate="yes" xml:space="preserve">
          <source>By default, &lt;b&gt;template&lt;/b&gt; places the values from your data in the local scope via the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="841b7c5a98a68c257dfd5f3a92f197d9bb3e53a9" translate="yes" xml:space="preserve">
          <source>By default, &lt;b&gt;throttle&lt;/b&gt; will execute the function as soon as you call it for the first time, and, if you call it again any number of times during the &lt;b&gt;wait&lt;/b&gt; period, as soon as that period is over. If you'd like to disable the leading-edge call, pass</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91f63fb778fbf778d23c69d5a31e985a9cacf308" translate="yes" xml:space="preserve">
          <source>Calling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="419f94c29b7819946c3f7bd778e52d5b06670d39" translate="yes" xml:space="preserve">
          <source>Calls the method named by &lt;b&gt;methodName&lt;/b&gt; on each value in the &lt;b&gt;list&lt;/b&gt;. Any extra arguments passed to &lt;b&gt;invoke&lt;/b&gt; will be forwarded on to the method invocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="480bd17189258d07915ad129dccf24a948c44df7" translate="yes" xml:space="preserve">
          <source>Chaining</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27391b56e92f8f1e5a570ee0224dfeced54dd55c" translate="yes" xml:space="preserve">
          <source>Chunks an &lt;b&gt;array&lt;/b&gt; into multiple arrays, each containing &lt;b&gt;length&lt;/b&gt; or fewer items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30c54a96f8011b39819ba18bcb53fcbb092d650d" translate="yes" xml:space="preserve">
          <source>Collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e513e8e02ee9a068d31dec6d4d82ba7ac4a3b16" translate="yes" xml:space="preserve">
          <source>Collection Functions (Arrays or Objects)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9f73f7e852fb0309fa54ea6dbad864e132543d6" translate="yes" xml:space="preserve">
          <source>Compiles JavaScript templates into functions that can be evaluated for rendering. Useful for rendering complicated bits of HTML from JSON data sources. Template functions can both interpolate values, using</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7b8c11b0f46fbf7ae4595df0ac1c643f8b7e8ed" translate="yes" xml:space="preserve">
          <source>Computes the list of values that are the intersection of all the &lt;b&gt;arrays&lt;/b&gt;. Each value in the result is present in each of the &lt;b&gt;arrays&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="004ced943499f562d011b2380ab01b7d3070ebad" translate="yes" xml:space="preserve">
          <source>Computes the union of the passed-in &lt;b&gt;arrays&lt;/b&gt;: the list of unique items, in order, that are present in one or more of the &lt;b&gt;arrays&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3110b15a4c9a8675555333f72cc62589e601ed5c" translate="yes" xml:space="preserve">
          <source>Convert an object into a list of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4542b828728d6d70908e97cce86bdf387497e5a" translate="yes" xml:space="preserve">
          <source>Converts arrays into objects. Pass either a single list of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81c621ef754107386735a80074e49c09725ea12f" translate="yes" xml:space="preserve">
          <source>Create a shallow-copied clone of the provided</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0f68d61123f3ff6c0d208de1552fdf6520d4e1e" translate="yes" xml:space="preserve">
          <source>Creates a function that returns the same value that is used as the argument of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f91f7330e24e73aa9ecb02fc96adf43ab8b2fc" translate="yes" xml:space="preserve">
          <source>Creates a new object with the given prototype, optionally attaching &lt;b&gt;props&lt;/b&gt; as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59f8f522a53a2182b78044d85a4417df17aeaa85" translate="yes" xml:space="preserve">
          <source>Creates a real Array from the &lt;b&gt;list&lt;/b&gt; (anything that can be iterated over). Useful for transmuting the &lt;b&gt;arguments&lt;/b&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6405075def9afd969429b4db7ee2f80d3a9aee8" translate="yes" xml:space="preserve">
          <source>Creates a version of the function that can be called no more than &lt;b&gt;count&lt;/b&gt; times. The result of the last function call is memoized and returned when &lt;b&gt;count&lt;/b&gt; has been reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3fcc8fd50b3fb3e869ae04575069afaf9bc1fd2" translate="yes" xml:space="preserve">
          <source>Creates a version of the function that can only be called one time. Repeated calls to the modified function will have no effect, returning the value from the original call. Useful for initialization functions, instead of having to set a boolean flag and then check it later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="641b6663efd6aef7670c25e7979f2541382bce9c" translate="yes" xml:space="preserve">
          <source>Creates a version of the function that will only be run after being called &lt;b&gt;count&lt;/b&gt; times. Useful for grouping asynchronous responses, where you want to be sure that all the async calls have finished, before proceeding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dd1c1036d4d1efebea755609cb752d5797e184a" translate="yes" xml:space="preserve">
          <source>Creates and returns a new debounced version of the passed function which will postpone its execution until after &lt;b&gt;wait&lt;/b&gt; milliseconds have elapsed since the last time it was invoked. Useful for implementing behavior that should only happen</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6709fa29a643ea72528a3babddd606b6b12f7c65" translate="yes" xml:space="preserve">
          <source>Creates and returns a new, throttled version of the passed function, that, when invoked repeatedly, will only actually call the original function at most once per every &lt;b&gt;wait&lt;/b&gt; milliseconds. Useful for rate-limiting events that occur faster than you can keep up with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49abf0999a757a743156daecb7b6c45f2c21d978" translate="yes" xml:space="preserve">
          <source>Defers invoking the &lt;b&gt;function&lt;/b&gt; until the current call stack has cleared, similar to using &lt;b&gt;setTimeout&lt;/b&gt; with a delay of 0. Useful for performing expensive computations or HTML rendering in chunks without blocking the UI thread from updating. If you pass the optional &lt;b&gt;arguments&lt;/b&gt;, they will be forwarded on to the &lt;b&gt;function&lt;/b&gt; when it is invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba151a1a3305ddb83059b038362354247bb9d9b3" translate="yes" xml:space="preserve">
          <source>Does the object contain the given key? Identical to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8718df03acd796c1aa3c2319467e740eae95a267" translate="yes" xml:space="preserve">
          <source>Escapes a string for insertion into HTML, replacing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a6480a9f243f401c253ce14eec09c5c11850c48" translate="yes" xml:space="preserve">
          <source>Extracts the value of a wrapped object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63dff595b7dbb5ddb1e82a68fc0e21d4e890a852" translate="yes" xml:space="preserve">
          <source>Flattens a nested &lt;b&gt;array&lt;/b&gt; (the nesting can be to any depth). If you pass &lt;b&gt;shallow&lt;/b&gt;, the array will only be flattened a single level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e410ad1472b42cb42cc98962428637290b6706" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1a5ae904d8f0706786062f1270c578de34f90a3" translate="yes" xml:space="preserve">
          <source>Function (uh, ahem) Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9591c94eb26ed6ef3a0f71e0b5a914f911bed94b" translate="yes" xml:space="preserve">
          <source>Generate a globally-unique id for client-side models or DOM elements that need one. If &lt;b&gt;prefix&lt;/b&gt; is passed, the id will be appended to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cde2fb35274698d3b6068512193b7f354a020a1" translate="yes" xml:space="preserve">
          <source>Generates a callback that can be applied to each element in a collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9f736b6470b168c82a49368553bc3973cf3920f" translate="yes" xml:space="preserve">
          <source>Give control of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b9fed7afb1dfc0fafc8990f3a7b10f42501d7e1" translate="yes" xml:space="preserve">
          <source>Given a &lt;b&gt;list&lt;/b&gt;, and an &lt;a href=&quot;#iteratee&quot;&gt;&lt;b&gt;iteratee&lt;/b&gt;&lt;/a&gt; function that returns a key for each element in the list (or a property name), returns an object with an index of each item. Just like &lt;a href=&quot;#groupBy&quot;&gt;groupBy&lt;/a&gt;, but for when you know your keys are unique.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="039e79b92dcec98290c7a09825d68efa22d249de" translate="yes" xml:space="preserve">
          <source>If ERB-style delimiters aren't your cup of tea, you can change Underscore's template settings to use different symbols to set off interpolated code. Define an &lt;b&gt;interpolate&lt;/b&gt; regex to match expressions that should be interpolated verbatim, an &lt;b&gt;escape&lt;/b&gt; regex to match expressions that should be inserted after being HTML-escaped, and an &lt;b&gt;evaluate&lt;/b&gt; regex to match expressions that should be evaluated without insertion into the resulting string. You may define or omit any combination of the three. For example, to perform &lt;a href=&quot;https://github.com/janl/mustache.js#readme&quot;&gt;Mustache.js&lt;/a&gt;-style templating:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fce7fa0f160732a5b5d28259b7b783f383178c8d" translate="yes" xml:space="preserve">
          <source>If no match is found, or if &lt;b&gt;list&lt;/b&gt; is empty,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f8c4b1eae3792292d6a739d94d4553740ac27eb" translate="yes" xml:space="preserve">
          <source>If no memo is passed to the initial invocation of reduce, the iteratee is not invoked on the first element of the list. The first element is instead passed as the memo in the invocation of the iteratee on the next element in the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd2a30982ee1ba61192161d801f1cef2ce465d5" translate="yes" xml:space="preserve">
          <source>If the value of the named &lt;b&gt;property&lt;/b&gt; is a function then invoke it with the &lt;b&gt;object&lt;/b&gt; as context; otherwise, return it. If a default value is provided and the property doesn't exist or is undefined then the default will be returned. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="319a8927d718d94df01190d832a2c118ae5c0542" translate="yes" xml:space="preserve">
          <source>If you need to cancel a scheduled debounce, you can call</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31c64e86906aa5cd87aae271faf48ea2880d9818" translate="yes" xml:space="preserve">
          <source>If you need to cancel a scheduled throttle, you can call</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="532e10706488c95346fde2889f1251125ea5a018" translate="yes" xml:space="preserve">
          <source>In addition, the &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/prototype&quot;&gt;Array prototype's methods&lt;/a&gt; are proxied through the chained Underscore object, so you can slip a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0219fd54bd5841008b18c414a5b2dea331bad1c5" translate="yes" xml:space="preserve">
          <source>Infinity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3a4fa0942c4d22470ade666c7626e9ffd5ece57" translate="yes" xml:space="preserve">
          <source>Inverse of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0f730bffd587b80e44fd14d1e0d1cd9a684adc1" translate="yes" xml:space="preserve">
          <source>Invokes &lt;b&gt;interceptor&lt;/b&gt; with the &lt;b&gt;object&lt;/b&gt;, and then returns &lt;b&gt;object&lt;/b&gt;. The primary purpose of this method is to &quot;tap into&quot; a method chain, in order to perform operations on intermediate results within the chain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b3fff4f58c94ff5df9c6fb5e1de587c793c0080" translate="yes" xml:space="preserve">
          <source>Invokes the given iteratee function &lt;b&gt;n&lt;/b&gt; times. Each invocation of &lt;a href=&quot;#iteratee&quot;&gt;&lt;b&gt;iteratee&lt;/b&gt;&lt;/a&gt; is called with an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56041237204b3ba7837605ae821ce083ffd693da" translate="yes" xml:space="preserve">
          <source>Iterates over a &lt;b&gt;list&lt;/b&gt; of elements, yielding each in turn to an &lt;b&gt;iteratee&lt;/b&gt; function. The &lt;b&gt;iteratee&lt;/b&gt; is bound to the &lt;b&gt;context&lt;/b&gt; object, if one is passed. Each invocation of &lt;b&gt;iteratee&lt;/b&gt; is called with three arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58fd3b1b83cc7fc933d72fe934bdb6e534441281" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT License.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf0c2edb81079bd08ca3f1d9b68eea3a2f3b613a" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#findIndex&quot;&gt;&lt;tt&gt;_.findIndex&lt;/tt&gt;&lt;/a&gt; but iterates the array in reverse, returning the index closest to the end where the &lt;strong&gt;predicate&lt;/strong&gt; truth test passes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61d71498eeae544b11368124f2c4ff7e3a609d19" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#map&quot;&gt;map&lt;/a&gt;, but for objects. Transform the value of each property in turn.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c617834c8dafa51bd5111930bdb38c78abfa9156" translate="yes" xml:space="preserve">
          <source>Like &lt;b&gt;extend&lt;/b&gt;, but only copies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ef8aafea71933ec74c59775ff609f122a2654f7" translate="yes" xml:space="preserve">
          <source>Looks through each value in the &lt;b&gt;list&lt;/b&gt;, returning an array of all the values that &lt;a href=&quot;#matches&quot;&gt;matches&lt;/a&gt; the key-value pairs listed in &lt;b&gt;properties&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cccced2b978160bd410b104aa2f39eb8cba1bcdd" translate="yes" xml:space="preserve">
          <source>Looks through each value in the &lt;b&gt;list&lt;/b&gt;, returning an array of all the values that pass a truth test (&lt;b&gt;predicate&lt;/b&gt;). &lt;b&gt;predicate&lt;/b&gt; is transformed through &lt;a href=&quot;#iteratee&quot;&gt;&lt;b&gt;iteratee&lt;/b&gt;&lt;/a&gt; to facilitate shorthand syntaxes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="647aa10f936d6e59fb7d8c44d6935994b05fe4ab" translate="yes" xml:space="preserve">
          <source>Looks through each value in the &lt;b&gt;list&lt;/b&gt;, returning the first one that passes a truth test (&lt;b&gt;predicate&lt;/b&gt;), or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9e19c5e03e68b8725698405d28fb9c143b0dbba" translate="yes" xml:space="preserve">
          <source>Looks through the &lt;b&gt;list&lt;/b&gt; and returns the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb52c4701f841223ae2f68269ac919fe7caa782c" translate="yes" xml:space="preserve">
          <source>Memoizes a given &lt;b&gt;function&lt;/b&gt; by caching the computed result. Useful for speeding up slow-running computations. If passed an optional &lt;b&gt;hashFunction&lt;/b&gt;, it will be used to compute the hash key for storing the result, based on the arguments to the original function. The default &lt;b&gt;hashFunction&lt;/b&gt; just uses the first argument to the memoized function as the key. The cache of memoized values is available as the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="927c7d4c4c379cd36fc0547031732baf0630f7c8" translate="yes" xml:space="preserve">
          <source>Merges together the values of each of the &lt;b&gt;arrays&lt;/b&gt; with the values at the corresponding position. Useful when you have separate data sources that are coordinated through matching array indexes. Use with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4237fbad7900e8dbe61fbaf49bbea422b1fdfe03" translate="yes" xml:space="preserve">
          <source>Much like &lt;b&gt;setTimeout&lt;/b&gt;, invokes &lt;b&gt;function&lt;/b&gt; after &lt;b&gt;wait&lt;/b&gt; milliseconds. If you pass the optional &lt;b&gt;arguments&lt;/b&gt;, they will be forwarded on to the &lt;b&gt;function&lt;/b&gt; when it is invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7fd9c68f804acda665d2ab082217bb1583318f2" translate="yes" xml:space="preserve">
          <source>NaN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05a2a8746fe10231011b4d6850be527a41c1c732" translate="yes" xml:space="preserve">
          <source>NodeList</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8a08d1175cb931f4d95eae91d73748afd6f216d" translate="yes" xml:space="preserve">
          <source>Note: All array functions will also work on the &lt;b&gt;arguments&lt;/b&gt; object. However, Underscore functions are not designed to work on &quot;sparse&quot; arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b4891b96d4a6ef3950c499c5806a76a28997ebf" translate="yes" xml:space="preserve">
          <source>Note: Collection functions work on arrays, objects, and array-like objects such as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="484e98b3a3a6af0cdb90bec1cf44a25c49fa071f" translate="yes" xml:space="preserve">
          <source>Note: this is not the same as the native &lt;b&gt;isNaN&lt;/b&gt; function, which will also return true for many other not-number values, such as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2883f191bc5ebfdc16c0813eff659b35363ea69b" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7498fd4851fe2f1f5c2c86ac323f9b74632f23b5" translate="yes" xml:space="preserve">
          <source>Object Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a42b2cb26fd0b66638431a9c02cdf33aa816b233" translate="yes" xml:space="preserve">
          <source>Object-Oriented Style</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afeac9832f20f4f960fcbf8efdf9a36bb14b252d" translate="yes" xml:space="preserve">
          <source>Object.create</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0814148a0c4cc44fb1b7ee7a2af52c884a96c39" translate="yes" xml:space="preserve">
          <source>Partially apply a function by filling in any number of its &lt;b&gt;arguments&lt;/b&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7cd56f2a2a3f47830760edfb89946eb7b9e2cd1" translate="yes" xml:space="preserve">
          <source>Pass</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e51c3822cc7913d0b8d93e253e9fcbc18583cb96" translate="yes" xml:space="preserve">
          <source>Performs an optimized deep comparison between the two objects, to determine if they should be considered equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4881bebefdddebb8b5c13b75d59b4c4f6e88e086" translate="yes" xml:space="preserve">
          <source>Precompiling your templates can be a big help when debugging errors you can't reproduce. This is because precompiled templates can provide line numbers and a stack trace, something that is not possible when compiling templates on the client. The &lt;b&gt;source&lt;/b&gt; property is available on the compiled template function for easy precompilation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14fa223619c04d79d28bbfda8b89b86385468ddf" translate="yes" xml:space="preserve">
          <source>Produce a random sample from the &lt;b&gt;list&lt;/b&gt;. Pass a number to return &lt;b&gt;n&lt;/b&gt; random elements from the list. Otherwise a single random item will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e5213d42f6dd20c4b6f0d610fbc025c218114af" translate="yes" xml:space="preserve">
          <source>Produces a duplicate-free version of the &lt;b&gt;array&lt;/b&gt;, using</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71c3a1c1e170ea8575d1aec7bdd8b46874e6d944" translate="yes" xml:space="preserve">
          <source>Produces a new array of values by mapping each value in &lt;b&gt;list&lt;/b&gt; through a transformation function (&lt;a href=&quot;#iteratee&quot;&gt;&lt;b&gt;iteratee&lt;/b&gt;&lt;/a&gt;). The iteratee is passed three arguments: the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb55f47b49ea7aa71ebf8633eabe7c5c4a28d637" translate="yes" xml:space="preserve">
          <source>Retrieve</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac77428472a796a229103c1203f73c91aa9e4e82" translate="yes" xml:space="preserve">
          <source>Retrieve all the names of the &lt;b&gt;object&lt;/b&gt;'s own enumerable properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a81b330db28501cd0ee757f239d4c2520a823484" translate="yes" xml:space="preserve">
          <source>Return a copy of the &lt;b&gt;object&lt;/b&gt;, filtered to omit the blacklisted &lt;b&gt;keys&lt;/b&gt; (or array of keys). Alternatively accepts a predicate indicating which keys to omit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0327e7e3b904622141318332d2324884a1fbf0d7" translate="yes" xml:space="preserve">
          <source>Return a copy of the &lt;b&gt;object&lt;/b&gt;, filtered to only have values for the whitelisted &lt;b&gt;keys&lt;/b&gt; (or array of valid keys). Alternatively accepts a predicate indicating which keys to pick.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b45b7dcca8e46792e6c10b4f87c74110d447b4e" translate="yes" xml:space="preserve">
          <source>Return all of the values of the &lt;b&gt;object&lt;/b&gt;'s own properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa8fc080137336dedbfc1f1994a873ba5cbe615d" translate="yes" xml:space="preserve">
          <source>Return the number of values in the &lt;b&gt;list&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9582a02f141fc4b345b2936eba691cd0654efebc" translate="yes" xml:space="preserve">
          <source>Returns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb7c592e17e536fb2c2b5cfdd00824e547457c80" translate="yes" xml:space="preserve">
          <source>Returns &lt;b&gt;object&lt;/b&gt; after filling in its</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef643eaebd57a76af937c9ea3a42e07ad6ba27b" translate="yes" xml:space="preserve">
          <source>Returns a (stably) sorted copy of &lt;b&gt;list&lt;/b&gt;, ranked in ascending order by the results of running each value through &lt;a href=&quot;#iteratee&quot;&gt;&lt;b&gt;iteratee&lt;/b&gt;&lt;/a&gt;. iteratee may also be the string name of the property to sort by (eg.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="893e41000d42ce73c7a1c030ceeb715f59111f89" translate="yes" xml:space="preserve">
          <source>Returns a copy of the &lt;b&gt;array&lt;/b&gt; with all instances of the &lt;b&gt;values&lt;/b&gt; removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c37f4fafd3adbe40210abba62fab85e5e0d6503" translate="yes" xml:space="preserve">
          <source>Returns a copy of the &lt;b&gt;list&lt;/b&gt; with all falsy values removed. In JavaScript,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b671ec53057d0490407a400c799e7795efd3531e" translate="yes" xml:space="preserve">
          <source>Returns a copy of the &lt;b&gt;object&lt;/b&gt; where the keys have become the values and the values the keys. For this to work, all of your object's values should be unique and string serializable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="374b173a894d2be60c36d93b903e3f9a9bc4c7af" translate="yes" xml:space="preserve">
          <source>Returns a function that will return the specified property of any passed-in object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c452f5e741c412910c8051338e1d5855a105a967" translate="yes" xml:space="preserve">
          <source>Returns a new negated version of the &lt;a href=&quot;#iteratee&quot;&gt;&lt;b&gt;predicate&lt;/b&gt;&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80d643c63cd7db0d2adc64e241ad4414d707cb70" translate="yes" xml:space="preserve">
          <source>Returns a predicate function that will tell you if a passed in object contains all of the key/value properties present in &lt;b&gt;attrs&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="558f460b18a02fa13494b2166568d97ebb06a69d" translate="yes" xml:space="preserve">
          <source>Returns a random integer between &lt;b&gt;min&lt;/b&gt; and &lt;b&gt;max&lt;/b&gt;, inclusive. If you only pass one argument, it will return a number between</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f14e3f591afde58a3222c12a2df10c24b1b880e4" translate="yes" xml:space="preserve">
          <source>Returns a shuffled copy of the &lt;b&gt;list&lt;/b&gt;, using a version of the &lt;a href=&quot;http://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle&quot;&gt;Fisher-Yates shuffle&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="260b01196a51befd96681a07705f6f480b1bb2d3" translate="yes" xml:space="preserve">
          <source>Returns a sorted list of the names of every method in an object &amp;mdash; that is to say, the name of every function property of the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba6087fa2c19b2b9f5064e573df0d5b9c8fc425f" translate="yes" xml:space="preserve">
          <source>Returns a version of the &lt;b&gt;function&lt;/b&gt; that, when called, receives all arguments from and beyond &lt;b&gt;startIndex&lt;/b&gt; collected into a single array. If you don&amp;rsquo;t pass an explicit &lt;b&gt;startIndex&lt;/b&gt;, it will be determined by looking at the number of arguments to the &lt;b&gt;function&lt;/b&gt; itself. Similar to ES6&amp;rsquo;s &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters&quot;&gt;rest parameters syntax&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4236527c8ba9d3bec4028139534f53af756484ee" translate="yes" xml:space="preserve">
          <source>Returns a wrapped object. Calling methods on this object will continue to return wrapped objects until</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d6ec79875adeb839564d9f9da522e91a955201" translate="yes" xml:space="preserve">
          <source>Returns an integer timestamp for the current time, using the fastest method available in the runtime. Useful for implementing timing/animation functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100ce4b1bf1ec719eaee6705a1752dacfbf0af25" translate="yes" xml:space="preserve">
          <source>Returns everything but the last entry of the array. Especially useful on the arguments object. Pass &lt;b&gt;n&lt;/b&gt; to exclude the last &lt;b&gt;n&lt;/b&gt; elements from the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3078710e2c546ceb1c040450e6fd5a45f5f4945" translate="yes" xml:space="preserve">
          <source>Returns the &lt;b&gt;rest&lt;/b&gt; of the elements in an array. Pass an &lt;b&gt;index&lt;/b&gt; to return the values of the array from that index onward.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf724a3684434037dd536c6b27922a4353b938f1" translate="yes" xml:space="preserve">
          <source>Returns the composition of a list of &lt;b&gt;functions&lt;/b&gt;, where each function consumes the return value of the function that follows. In math terms, composing the functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a4e8cc354089186d2893148af31d7c1a37d6571" translate="yes" xml:space="preserve">
          <source>Returns the first element of an &lt;b&gt;array&lt;/b&gt;. Passing &lt;b&gt;n&lt;/b&gt; will return the first &lt;b&gt;n&lt;/b&gt; elements of the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eeb3fce211d333edc202b6de8c244c9c34534fb" translate="yes" xml:space="preserve">
          <source>Returns the index at which &lt;b&gt;value&lt;/b&gt; can be found in the &lt;b&gt;array&lt;/b&gt;, or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a73d34d0755f87916177a5fcb2d24419aa00558" translate="yes" xml:space="preserve">
          <source>Returns the index of the last occurrence of &lt;b&gt;value&lt;/b&gt; in the &lt;b&gt;array&lt;/b&gt;, or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88250283b8b715bf70d9d5bcf8e7cea63d0659af" translate="yes" xml:space="preserve">
          <source>Returns the last element of an &lt;b&gt;array&lt;/b&gt;. Passing &lt;b&gt;n&lt;/b&gt; will return the last &lt;b&gt;n&lt;/b&gt; elements of the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a39fce4343f4db1a7885d18ef0fac312e544c9" translate="yes" xml:space="preserve">
          <source>Returns the maximum value in &lt;b&gt;list&lt;/b&gt;. If an &lt;a href=&quot;#iteratee&quot;&gt;&lt;b&gt;iteratee&lt;/b&gt;&lt;/a&gt; function is provided, it will be used on each value to generate the criterion by which the value is ranked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="783642ae96a2f2c511550135302e777b29e9d471" translate="yes" xml:space="preserve">
          <source>Returns the minimum value in &lt;b&gt;list&lt;/b&gt;. If an &lt;a href=&quot;#iteratee&quot;&gt;&lt;b&gt;iteratee&lt;/b&gt;&lt;/a&gt; function is provided, it will be used on each value to generate the criterion by which the value is ranked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd09424d158aa21c2139e0d46eca547be994d84" translate="yes" xml:space="preserve">
          <source>Returns the same value that is used as the argument. In math:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cbe91c26e9e159cba5c7bae9ebad49a3a38f872" translate="yes" xml:space="preserve">
          <source>Returns the values in &lt;b&gt;list&lt;/b&gt; without the elements that the truth test (&lt;b&gt;predicate&lt;/b&gt;) passes. The opposite of &lt;b&gt;filter&lt;/b&gt;. &lt;b&gt;predicate&lt;/b&gt; is transformed through &lt;a href=&quot;#iteratee&quot;&gt;&lt;b&gt;iteratee&lt;/b&gt;&lt;/a&gt; to facilitate shorthand syntaxes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84f8748f2bf4d165a2500e930231bb83def7a110" translate="yes" xml:space="preserve">
          <source>Shallowly copy all of the properties &lt;strong&gt;in&lt;/strong&gt; the &lt;b&gt;source&lt;/b&gt; objects over to the &lt;b&gt;destination&lt;/b&gt; object, and return the &lt;b&gt;destination&lt;/b&gt; object. Any nested objects or arrays will be copied by reference, not duplicated. It's in-order, so the last source will override properties of the same name in previous arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6a2e56e46aac62bed4cc8566d97037af1d72ac7" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#findIndex&quot;&gt;&lt;tt&gt;_.findIndex&lt;/tt&gt;&lt;/a&gt; but for keys in objects. Returns the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff230ecce65cdae120714e24f70abb08b711cad8" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#indexOf&quot;&gt;&lt;tt&gt;_.indexOf&lt;/tt&gt;&lt;/a&gt;, returns the first index where the &lt;strong&gt;predicate&lt;/strong&gt; truth test passes; otherwise returns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd8ed9aff6a46e73ebe102270840bca671b70f1b" translate="yes" xml:space="preserve">
          <source>Similar to &lt;b&gt;without&lt;/b&gt;, but returns the values from &lt;b&gt;array&lt;/b&gt; that are not present in the &lt;b&gt;other&lt;/b&gt; arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b72b5cd4b3a4dc9bf3119e0a94441e7f29f82a7" translate="yes" xml:space="preserve">
          <source>Sorts a list into groups and returns a count for the number of objects in each group. Similar to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="184ef08c6f5471561e336123e9e1eb66d64fed3e" translate="yes" xml:space="preserve">
          <source>Split &lt;b&gt;list&lt;/b&gt; into two arrays: one whose elements all satisfy &lt;b&gt;predicate&lt;/b&gt; and one whose elements all do not satisfy &lt;b&gt;predicate&lt;/b&gt;. &lt;b&gt;predicate&lt;/b&gt; is transformed through &lt;a href=&quot;#iteratee&quot;&gt;&lt;b&gt;iteratee&lt;/b&gt;&lt;/a&gt; to facilitate shorthand syntaxes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f6b42f9f84eff52fb24fa5d7547d3d0e05698e2" translate="yes" xml:space="preserve">
          <source>Splits a collection into sets, grouped by the result of running each value through &lt;b&gt;iteratee&lt;/b&gt;. If &lt;b&gt;iteratee&lt;/b&gt; is a string instead of a function, groups by the property named by &lt;b&gt;iteratee&lt;/b&gt; on each of the values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6dd2d90e7a3a11a593cb37a6c0fbe6f01d97dc7" translate="yes" xml:space="preserve">
          <source>Tells you if the keys and values in &lt;b&gt;properties&lt;/b&gt; are contained in &lt;b&gt;object&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eb38cbab68682352818c81bd868415a4b1acb09" translate="yes" xml:space="preserve">
          <source>The following Underscore methods transform their predicates through</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873471642102f3ba44a7a5c8dfd66132914c5705" translate="yes" xml:space="preserve">
          <source>The opposite of &lt;a href=&quot;#escape&quot;&gt;&lt;b&gt;escape&lt;/b&gt;&lt;/a&gt;, replaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6df169522c05ea62040a863e934ca85bcdd19d6f" translate="yes" xml:space="preserve">
          <source>The opposite of &lt;a href=&quot;#zip&quot;&gt;zip&lt;/a&gt;. Given an &lt;b&gt;array&lt;/b&gt; of arrays, returns a series of new arrays, the first of which contains all of the first elements in the input arrays, the second of which contains all of the second elements, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c651272ace2ac2eb0df463fdf9597c15bcedce2e" translate="yes" xml:space="preserve">
          <source>The right-associative version of &lt;b&gt;reduce&lt;/b&gt;. &lt;b&gt;Foldr&lt;/b&gt; is not as useful in JavaScript as it would be in a language with lazy evaluation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="124252e9c91e58bed5eb35f5e7118006b3cf5512" translate="yes" xml:space="preserve">
          <source>This function looks useless, but is used throughout Underscore as a default iteratee.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee9c57534494d4b341b17674e2374f10d4aa90fd" translate="yes" xml:space="preserve">
          <source>Underscore.js</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73714e67ac043eca4a0d0899e0a46de925d336ba" translate="yes" xml:space="preserve">
          <source>Uses a binary search to determine the index at which the &lt;b&gt;value&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89189507b2a074e98b2e877227343a6e1f27b3ab" translate="yes" xml:space="preserve">
          <source>Utility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bf056ede57539fe7ab422f88b516c58223a0adf" translate="yes" xml:space="preserve">
          <source>Utility Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a6f4ec593c7f1604547b3802db965bff3bd906" translate="yes" xml:space="preserve">
          <source>Wraps the first &lt;b&gt;function&lt;/b&gt; inside of the &lt;b&gt;wrapper&lt;/b&gt; function, passing it as the first argument. This allows the &lt;b&gt;wrapper&lt;/b&gt; to execute code before and after the &lt;b&gt;function&lt;/b&gt; runs, adjust the arguments, and execute it conditionally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22d0b06ab6697336780029eb518e6cdd2c05382e" translate="yes" xml:space="preserve">
          <source>You can also use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e8246e6a48bea0a046ab6a833f7b26a7d848cba" translate="yes" xml:space="preserve">
          <source>You can use Underscore in either an object-oriented or a functional style, depending on your preference. The following two lines of code are identical ways to double a list of numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ce54292cd4bb43dd0804eb1315ab2ef17b3fb8b" translate="yes" xml:space="preserve">
          <source>You may overwrite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0965523009b5d6676bb26436c27533a2e9030bf5" translate="yes" xml:space="preserve">
          <source>[key, value]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5adcee3476ec7b08fd96d23e148fe8c21bb83173" translate="yes" xml:space="preserve">
          <source>_.after</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7218b091e3a5685908d4158ac87c528ca9bca38" translate="yes" xml:space="preserve">
          <source>_.allKeys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d361fd1bede0e2e5733215131a38ced33d4f812" translate="yes" xml:space="preserve">
          <source>_.before</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="883be3519012649b3e136185b68e7c1ee345a5ac" translate="yes" xml:space="preserve">
          <source>_.bind</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f43c07afaefe5b4ffa5d35c75251c9e48f9f4e9c" translate="yes" xml:space="preserve">
          <source>_.bindAll</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e71ff4cbfe1dc65dcc14bad517b14d7635a6d210" translate="yes" xml:space="preserve">
          <source>_.chain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7daffe6c6243099d28cdc8d314e05ae4681cccb5" translate="yes" xml:space="preserve">
          <source>_.chunk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="463fe1ec222d24e63e41aad5542bfcdb5e9b882d" translate="yes" xml:space="preserve">
          <source>_.clone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4fa78d8ae2a1fb95c23de054619bfab567f7853" translate="yes" xml:space="preserve">
          <source>_.compact</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5afd7f8d5a467b9e43515a891038ca01132b19e" translate="yes" xml:space="preserve">
          <source>_.compose</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd78bb4e152c329e07eca914cf2741abba627012" translate="yes" xml:space="preserve">
          <source>_.constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="903d663039be978a1a28c732f18e54d085ccafcb" translate="yes" xml:space="preserve">
          <source>_.countBy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80a52faa24c2f83b84556e06c70edc9410f2faca" translate="yes" xml:space="preserve">
          <source>_.create</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dfb7e2d38ce6739a23c3bfaa198086a161de69b" translate="yes" xml:space="preserve">
          <source>_.debounce</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391253508a4c29652b62ac766b6c592fca317712" translate="yes" xml:space="preserve">
          <source>_.defaults</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="297308616030c0aff6f544389aab73aee8e130c7" translate="yes" xml:space="preserve">
          <source>_.defer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba24b016b603594cf35365b89987ad1cb7b6b8ef" translate="yes" xml:space="preserve">
          <source>_.delay</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93cee9f25507ca895f86b45c29f37afbb940ff2e" translate="yes" xml:space="preserve">
          <source>_.difference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84a11d3008e4299d3a696bdda3bc70be0a01c6cb" translate="yes" xml:space="preserve">
          <source>_.escape</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ffc6ed39d6a3062612b4402a636f0ff2b2ca058" translate="yes" xml:space="preserve">
          <source>_.every</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="911d554801fdc1962f8c148c4e3ab34164c5ab30" translate="yes" xml:space="preserve">
          <source>_.extend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb20f38f49d835d947cf15bbb8c4766c1459fe51" translate="yes" xml:space="preserve">
          <source>_.extendOwn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25a26184c279cd245f0bd8d914e40ff830ed76dc" translate="yes" xml:space="preserve">
          <source>_.find</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94dd1fc8869948fcea3051cd8a3925a88b7ab230" translate="yes" xml:space="preserve">
          <source>_.findIndex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="446fff3caac16a9a6f2c850a110a47774c4a5e13" translate="yes" xml:space="preserve">
          <source>_.findKey</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94143b23a45d612fb5c88ae5ec1dcb89b7ca6118" translate="yes" xml:space="preserve">
          <source>_.findLastIndex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2153d8b25c8ebd00bce4e18c2cb4fd7a4802c88d" translate="yes" xml:space="preserve">
          <source>_.findWhere</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf24c71784f0150ddd26bd45e0d29bb0413eac3" translate="yes" xml:space="preserve">
          <source>_.flatten</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50fdac20a6edd1b16e26e7627b3fb1653bd9e1ba" translate="yes" xml:space="preserve">
          <source>_.forEach</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e972d1ecec48efdee0d4210319a7f7890c764e9f" translate="yes" xml:space="preserve">
          <source>_.groupBy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4676eda56bf6c7e8fae7b6a793911c830ff53ad8" translate="yes" xml:space="preserve">
          <source>_.has</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fddf88a1b10621842be783bcd1cc53d25c5cde7" translate="yes" xml:space="preserve">
          <source>_.identity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="198e9da3ce7c44e8b41b2e7f093ccada2e4366e6" translate="yes" xml:space="preserve">
          <source>_.includes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7c8f52086cf8e28706449382900efe4fe75c3c1" translate="yes" xml:space="preserve">
          <source>_.indexBy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="899579ef53513a4e5f7e52186ab875f4ed9a801f" translate="yes" xml:space="preserve">
          <source>_.indexOf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6df4ad53e20bbdf452089b199af516f9cc5b6ea5" translate="yes" xml:space="preserve">
          <source>_.initial</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dbc0968d6973c5be7a313168446377a5a41ba42" translate="yes" xml:space="preserve">
          <source>_.intersection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27445c6020eafba0534b81568f84f6c967389ba2" translate="yes" xml:space="preserve">
          <source>_.invert</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49f371bb4da85cfef3e6ced3a9b452300c0a9ff7" translate="yes" xml:space="preserve">
          <source>_.invoke</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddde1fce0bca32f24df3cedfcf075ec30a65487a" translate="yes" xml:space="preserve">
          <source>_.isArguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de8cf27dfeb985faa985a40627eecf7aa3f2ea16" translate="yes" xml:space="preserve">
          <source>_.isArray</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b967fe91d8b5d8cf2d75744f695785901d9ca0d" translate="yes" xml:space="preserve">
          <source>_.isBoolean</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50d4c43b98a6b0a74cc3b75456a69d82f79760b4" translate="yes" xml:space="preserve">
          <source>_.isDate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c81a56683eb2eda2c1da6235b55f6a49436183b" translate="yes" xml:space="preserve">
          <source>_.isElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="958178293dfe0e66ccdf66ae2511a43334871e1e" translate="yes" xml:space="preserve">
          <source>_.isEmpty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b408aeca4208d4d72f40768383a4bf0f8e81835" translate="yes" xml:space="preserve">
          <source>_.isEqual</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06f9973266c18674894e6bd251b8b3fb63c3b0b8" translate="yes" xml:space="preserve">
          <source>_.isError</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca6d61224c4fa6d54561df58769c5c6a1187fcdf" translate="yes" xml:space="preserve">
          <source>_.isFinite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80ac10371a51ab30451f09d60e12db81bf155a38" translate="yes" xml:space="preserve">
          <source>_.isFunction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="865298146d6d8e45e169fdaf89f3fff5beb1cdc2" translate="yes" xml:space="preserve">
          <source>_.isMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b342082a221d8e5cef1b4bcad13d6afedd42867" translate="yes" xml:space="preserve">
          <source>_.isMatch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75878ed1aba19b01aefbaf3b755e1f5bfeb0d34b" translate="yes" xml:space="preserve">
          <source>_.isNaN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e967b8daba27a3c713961524795708a94ce40b4" translate="yes" xml:space="preserve">
          <source>_.isNull</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd74a24bae3ad2d74467435706bb60b12b8c8ef9" translate="yes" xml:space="preserve">
          <source>_.isNumber</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8fca159adabc762df55ca91ff5558ac09c9cd05" translate="yes" xml:space="preserve">
          <source>_.isObject</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c157ed20170fcea9a9b9b7754434d95d6d6eddf" translate="yes" xml:space="preserve">
          <source>_.isRegExp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a146c0b15908b5aabcc799037e642bb807fae6" translate="yes" xml:space="preserve">
          <source>_.isSet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db855ef2bccc97def97a3fad8d3c77fe7a41bc91" translate="yes" xml:space="preserve">
          <source>_.isString</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cef61492a6a85f213d40b00417ce38c316a4736b" translate="yes" xml:space="preserve">
          <source>_.isSymbol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc7cd48da3c540ddc16454afc32af20f7cbc4407" translate="yes" xml:space="preserve">
          <source>_.isUndefined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1177e318274f97ec583c478ff99e59085282350" translate="yes" xml:space="preserve">
          <source>_.isWeakMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="006e0ea631650982cde3ef8a464fdb39eea8eb52" translate="yes" xml:space="preserve">
          <source>_.isWeakSet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40088f1b64d5eb7bec358821b81f5cf84e1ef259" translate="yes" xml:space="preserve">
          <source>_.iteratee</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="067c9ba7810f7e3022ac4d87913b7b7ea09aeed4" translate="yes" xml:space="preserve">
          <source>_.keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cdff5b4b6428a0c0df45bb0acbf9525e6a13608" translate="yes" xml:space="preserve">
          <source>_.last</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c013a42962e1ff0e93930a76f688100926a99535" translate="yes" xml:space="preserve">
          <source>_.lastIndexOf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b137e62ae74b4864b04dcf2711c237be44184f5" translate="yes" xml:space="preserve">
          <source>_.map</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="330d07e90e0543d66fd1dc0a03e71722cf92b903" translate="yes" xml:space="preserve">
          <source>_.mapObject</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0c905f9ff31b8b3d8b2d60962c9d55439981bb6" translate="yes" xml:space="preserve">
          <source>_.matches</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef5268360fe74820d28c9dde9478320f1c263440" translate="yes" xml:space="preserve">
          <source>_.max</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ff1e58eeda64ec641976877bd79317c6179838" translate="yes" xml:space="preserve">
          <source>_.memoize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="907575e88784518efde4ddc5dc55e8770d71bc94" translate="yes" xml:space="preserve">
          <source>_.methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eea45a420e6f9b5f64900ca22d2953f5d3535f9f" translate="yes" xml:space="preserve">
          <source>_.min</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95fcde68e3e6a044a3f325d836612480ed3365e7" translate="yes" xml:space="preserve">
          <source>_.mixin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dbe324896cfc247bd3711c51ce34c88058609c0" translate="yes" xml:space="preserve">
          <source>_.negate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f026d5380372087eb956e4e212bb484ccf9d097" translate="yes" xml:space="preserve">
          <source>_.noConflict</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="167b175d2e85beba695f3f43c9f225a5ca40cd02" translate="yes" xml:space="preserve">
          <source>_.noop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2643df71e8a4241f67c45eb440c2696804a6e025" translate="yes" xml:space="preserve">
          <source>_.now</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47a20bae8001ee342225138a8d19a8678eaf8f35" translate="yes" xml:space="preserve">
          <source>_.object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21a870fef0aa05acbf67dbffb0ad6bd1e8be8a29" translate="yes" xml:space="preserve">
          <source>_.omit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5807ed60a53e42099ba989dd8d986d7ca0fd9d34" translate="yes" xml:space="preserve">
          <source>_.once</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76e7806429af4a5c0d2e9501a29fbba343cac6de" translate="yes" xml:space="preserve">
          <source>_.pairs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04a85afc3921cd4df5f9f78c24343daaadd8f4bb" translate="yes" xml:space="preserve">
          <source>_.partial</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc78ab1be51662fdf9675e6d80020f811f791100" translate="yes" xml:space="preserve">
          <source>_.partition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68d60cb4168c8eb7d046b94b4c94bd6f90e8912e" translate="yes" xml:space="preserve">
          <source>_.pick</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7df9af7b4b232179b9d62cf4dd60e79df752611a" translate="yes" xml:space="preserve">
          <source>_.pluck</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64be48037f7ee79caa80ae0efff570c40dfb4fd3" translate="yes" xml:space="preserve">
          <source>_.property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff84206e7592aaff23aaf22bb3fae9618ae39198" translate="yes" xml:space="preserve">
          <source>_.propertyOf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c42be1341017ca6eda7497983f7a80c24db9e8ee" translate="yes" xml:space="preserve">
          <source>_.random</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f37f1ca5b9dc28de35c20e49116ed3d0c6ad4738" translate="yes" xml:space="preserve">
          <source>_.range</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8e3c0bfd1b03c2213904483c87975fea80d153d" translate="yes" xml:space="preserve">
          <source>_.reduce</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e86a525e3b4d234c66c61cd6ec08c29f148c59d3" translate="yes" xml:space="preserve">
          <source>_.reduceRight</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="233244717c335b0c72a16d71eb7547e6c645eca8" translate="yes" xml:space="preserve">
          <source>_.reject</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf149742a7e0cd529e644620c6c91be3b1948fa" translate="yes" xml:space="preserve">
          <source>_.restArguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8800550b58b590cebdcb65c61ed7e32f9cbd6207" translate="yes" xml:space="preserve">
          <source>_.result</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33dbf7901c9fff91136a138029666130aec7063b" translate="yes" xml:space="preserve">
          <source>_.sample</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1686ad12710c3b0278977bd68d3bbc880c778c7b" translate="yes" xml:space="preserve">
          <source>_.select</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55e9cab4cf4cb89954056a76393cbcf7fb3a622a" translate="yes" xml:space="preserve">
          <source>_.shuffle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3454fa9825f85681660f7f3959901b9e4ee6d7bc" translate="yes" xml:space="preserve">
          <source>_.size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e709ad352a24c7df7b90d013264bfd52f20d4040" translate="yes" xml:space="preserve">
          <source>_.some</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5df075db032417d23e30142f308eca5534d27076" translate="yes" xml:space="preserve">
          <source>_.sortBy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a33fb65b979e00f35661469ecbe8aa458ce6da6" translate="yes" xml:space="preserve">
          <source>_.sortedIndex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ea2eecae3e73b5096a5ac9b724a42d1b647d278" translate="yes" xml:space="preserve">
          <source>_.tail</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="990cc2a6941ec4cf730a5c5ea29d6b195a7aef02" translate="yes" xml:space="preserve">
          <source>_.take</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5af7e8cc319001e98d54abe76e536347ce49c3f3" translate="yes" xml:space="preserve">
          <source>_.tap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bebb56c8d539ac71ca9007ea518d50a13a9de998" translate="yes" xml:space="preserve">
          <source>_.template</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf2097937db7b2c99c7507a71b6a8c368c0385f" translate="yes" xml:space="preserve">
          <source>_.templateSettings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="768dfbdc6a9c17029533e49561c226dedd2c2100" translate="yes" xml:space="preserve">
          <source>_.throttle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f2aa55d2e0421a31849f351f2ebbd9dc6848a0d" translate="yes" xml:space="preserve">
          <source>_.times</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b37ff931a9c88bd8aeab61f5d523f902c7e1ce5" translate="yes" xml:space="preserve">
          <source>_.toArray</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ea05754b733a77c44ec6c22390b40e96a32c4ad" translate="yes" xml:space="preserve">
          <source>_.unescape</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b044b501b8b4bd6361f19c0b40007f36238e39bf" translate="yes" xml:space="preserve">
          <source>_.union</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="406b71cb2590de1f1c254c11d7019226ca94ec8e" translate="yes" xml:space="preserve">
          <source>_.unique</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ea537e5b565947ad7bd1a6242239adda3281a38" translate="yes" xml:space="preserve">
          <source>_.uniqueId</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e6b9a9fb6f2de3c794096317aad6b08d02e4c3c" translate="yes" xml:space="preserve">
          <source>_.unzip</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7684cf771d145660c7f5031c3943a16d53924c7" translate="yes" xml:space="preserve">
          <source>_.value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdd9b4faba39de65bcdd63fd5c60512ac319b9a2" translate="yes" xml:space="preserve">
          <source>_.values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f00770024ca7b2b2b0c4b9ef692c5edd167396f5" translate="yes" xml:space="preserve">
          <source>_.where</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5bf7de4b3884ac65747905fe7e66095dd053871" translate="yes" xml:space="preserve">
          <source>_.without</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd5d246413bb7a21396c740fad5b3979f325bcbc" translate="yes" xml:space="preserve">
          <source>_.wrap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b6d2fcc23f69e208453fd64fe8ca986574c627f" translate="yes" xml:space="preserve">
          <source>_.zip</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e15bb5c01e7dd56499e37c634cf791d3a519aee" translate="yes" xml:space="preserve">
          <source>`</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="405906c9d5be6ae5393ca65fb0e7c38e0d585ecb" translate="yes" xml:space="preserve">
          <source>after</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d87c448044defb778f33158d8ccf94a20531d600" translate="yes" xml:space="preserve">
          <source>all</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85f55ff3ef60a0dde6a59cf88d3e6d5547b1a393" translate="yes" xml:space="preserve">
          <source>and similar. But it works by duck-typing, so avoid passing objects with a numeric</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3aa3aef02cf703522ac1a13cdb2cd4b3624b7d1" translate="yes" xml:space="preserve">
          <source>and that number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69f45da1683c501696ebfa086d25192af3807dc6" translate="yes" xml:space="preserve">
          <source>apply</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0e6e99e8e8f9d4ef221347373b4df9744bfb694" translate="yes" xml:space="preserve">
          <source>are all falsy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6113fcc0087a740a829ade91437ba652092ab0e1" translate="yes" xml:space="preserve">
          <source>argument. Produces an array of the returned values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="536f158f6dfd529865dcb865a97bb16804e34d70" translate="yes" xml:space="preserve">
          <source>arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="679aab35e7bc29fd6b46ed5fa20a7f86654a6fe8" translate="yes" xml:space="preserve">
          <source>be inserted into the &lt;b&gt;array&lt;/b&gt; in order to maintain the &lt;b&gt;array&lt;/b&gt;'s sorted order. If an &lt;a href=&quot;#iteratee&quot;&gt;&lt;b&gt;iteratee&lt;/b&gt;&lt;/a&gt; function is provided, it will be used to compute the sort ranking of each value, including the &lt;b&gt;value&lt;/b&gt; you pass. The iteratee may also be the string name of the property to sort by (eg.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b03592806efabfeeb709f5a70a7c172669b00538" translate="yes" xml:space="preserve">
          <source>cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cf64e447b84b497b2491b7af072a229eefe2651" translate="yes" xml:space="preserve">
          <source>chain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdd4e24b6316bb7fb02f4edfa0d686479ce86b20" translate="yes" xml:space="preserve">
          <source>changing its dynamic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5cec9ea22e0dcb3d1e1798f0f4fa65de7ea7e34" translate="yes" xml:space="preserve">
          <source>characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="292fee69ef180803485da6d8c29ceb14c42400e6" translate="yes" xml:space="preserve">
          <source>checks if the length property is 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edf1cf92b6eaab689c15a4690ef463d689cb78dc" translate="yes" xml:space="preserve">
          <source>countBy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e940d2a8aa21109d83a8b3dad4cee386dabe8439" translate="yes" xml:space="preserve">
          <source>defaultValue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eedab1d4dd5e5848097aa12ba0e71f86aa3815dd" translate="yes" xml:space="preserve">
          <source>definitions to have your functions added to the Underscore object, as well as the OOP wrapper. Returns the Underscore object to facilitate chaining.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b32f279e548b6fceef4343170778273bfe60658c" translate="yes" xml:space="preserve">
          <source>each</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5873f666d03fb3fb39d0db9c71b5e1f769334088" translate="yes" xml:space="preserve">
          <source>every</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85de6fc076bb64abc609febd43c1646859f4253d" translate="yes" xml:space="preserve">
          <source>f()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05bf3be3236d1afda96f08c7eb9b827ae83d9b8" translate="yes" xml:space="preserve">
          <source>f(g(h()))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de86f389f943663ee1bb92ba8d89a9a111fc1ba2" translate="yes" xml:space="preserve">
          <source>f(x) = x</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb6efb98ba5972a9b5090dc2e517fe14d12cb04" translate="yes" xml:space="preserve">
          <source>false</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bb4ca75941b7bbc5bc6a12be44b22fc9c8d234e" translate="yes" xml:space="preserve">
          <source>filter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ded8dae5786fb0e9e6ffb657401fd861ba2efe11" translate="yes" xml:space="preserve">
          <source>find</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="201f7c33b08faf0c85da688358d022dbeafe0e29" translate="yes" xml:space="preserve">
          <source>findIndex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0753878dc975ad72be956545820414650e1cc5d" translate="yes" xml:space="preserve">
          <source>findKey</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="599f366bf40c6cebd33562b050a7d04e031741f2" translate="yes" xml:space="preserve">
          <source>findLastIndex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0996a37c13d44c3b06074939d43fa3759bd32c1" translate="yes" xml:space="preserve">
          <source>first</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57d08fc98f8e98406df88ccc56121e572e7b2f4" translate="yes" xml:space="preserve">
          <source>for &lt;b&gt;isSorted&lt;/b&gt; to use a faster binary search ... or, pass a number as the third argument in order to look for the first matching value in the array after the given index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d748551c8017078dba7b5c679b10b926ccaff8f4" translate="yes" xml:space="preserve">
          <source>for &lt;b&gt;isSorted&lt;/b&gt; will run a much faster algorithm. If you want to compute unique items based on a transformation, pass an &lt;a href=&quot;#iteratee&quot;&gt;&lt;b&gt;iteratee&lt;/b&gt;&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4132e1b95fca65a67bc261079a550af172959b4" translate="yes" xml:space="preserve">
          <source>for the &lt;b&gt;immediate&lt;/b&gt; argument to cause &lt;b&gt;debounce&lt;/b&gt; to trigger the function on the leading instead of the trailing edge of the &lt;b&gt;wait&lt;/b&gt; interval. Useful in circumstances like preventing accidental double-clicks on a &quot;submit&quot; button from firing a second time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97b9f36838b66e99914d2530dd73112fa56c87ca" translate="yes" xml:space="preserve">
          <source>from within JavaScript code. This is sometimes more convenient than using</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7316d4a82b8394cb33eccce840e4699842d4d351" translate="yes" xml:space="preserve">
          <source>function, in case it's been &lt;a href=&quot;http://www.pixelstech.net/article/1326986170-An-Object-is-not-a-Hash&quot;&gt;overridden accidentally&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef68006fafd056c6e3e3428ee60695faa2bd71be" translate="yes" xml:space="preserve">
          <source>g()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efb22615df12aa7f71e4c5d9ccbcd20e67a8dacd" translate="yes" xml:space="preserve">
          <source>groupBy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fede5687e1795cd9e8b406606bfdc076b508e151" translate="yes" xml:space="preserve">
          <source>h()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b53baa551b37bbffca61ed8e7a6fca66fcd123" translate="yes" xml:space="preserve">
          <source>hasOwnProperty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33a5c4dd0d5cf7165433e98e4c30b4751738ba7e" translate="yes" xml:space="preserve">
          <source>if &lt;b&gt;object&lt;/b&gt; inherits from an Error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c6201ac7a18732cec4db07426e1378a9c2fe8f" translate="yes" xml:space="preserve">
          <source>if &lt;b&gt;object&lt;/b&gt; is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5240446161fc4cf1b4ba7a739fee361fd111d05e" translate="yes" xml:space="preserve">
          <source>if &lt;b&gt;object&lt;/b&gt; is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map&quot;&gt;Map&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee82a1944e310b214cea09907596294f4d6f389e" translate="yes" xml:space="preserve">
          <source>if &lt;b&gt;object&lt;/b&gt; is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&quot;&gt;Set&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2742188803f68b8ec989233d366bcf1cfc2c7125" translate="yes" xml:space="preserve">
          <source>if &lt;b&gt;object&lt;/b&gt; is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol&quot;&gt;Symbol&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b70b0cee3271f03076e1050fffe4d777bc9049b" translate="yes" xml:space="preserve">
          <source>if &lt;b&gt;object&lt;/b&gt; is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap&quot;&gt;WeakMap&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="380bc456afdb2113fe31625de970bd822ff9c5df" translate="yes" xml:space="preserve">
          <source>if &lt;b&gt;object&lt;/b&gt; is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet&quot;&gt;WeakSet&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85f3f5587e4911b221e078aa1d03af3935e8945b" translate="yes" xml:space="preserve">
          <source>if &lt;b&gt;object&lt;/b&gt; is a DOM element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fa164326c6747a6c6b7be1cdf6ecef5f88c8054" translate="yes" xml:space="preserve">
          <source>if &lt;b&gt;object&lt;/b&gt; is a Date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aa5dbd7d534574fbd0eb91cfc808ac26309f24a" translate="yes" xml:space="preserve">
          <source>if &lt;b&gt;object&lt;/b&gt; is a Function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeb032fc698f97fcd09afadb8ae724e5ef9dc1d5" translate="yes" xml:space="preserve">
          <source>if &lt;b&gt;object&lt;/b&gt; is a Number (including</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2015ec6ca8fc4bb3c1302aaa1ebe6b98470a78db" translate="yes" xml:space="preserve">
          <source>if &lt;b&gt;object&lt;/b&gt; is a RegExp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57cc31d7e6c25ab0d31910a696b06b60729a054f" translate="yes" xml:space="preserve">
          <source>if &lt;b&gt;object&lt;/b&gt; is a String.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f9bd5bfdeed6fc13b50cc4351fc66177fc9f03e" translate="yes" xml:space="preserve">
          <source>if &lt;b&gt;object&lt;/b&gt; is a finite Number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24df2e54bcb88f3bdd0a508c3e003a22bdcd5907" translate="yes" xml:space="preserve">
          <source>if &lt;b&gt;object&lt;/b&gt; is an Arguments object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7650096503b1a008fca83ebd59e1817895701de" translate="yes" xml:space="preserve">
          <source>if &lt;b&gt;object&lt;/b&gt; is an Array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f3beb4678d4075faa35ad16b0fbe9062b5b74e8" translate="yes" xml:space="preserve">
          <source>if &lt;b&gt;object&lt;/b&gt; is either</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2623ac3ae44d7675011ebb31e9f46923638bf593" translate="yes" xml:space="preserve">
          <source>if &lt;b&gt;value&lt;/b&gt; is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46f55b47dc6c76370b1ec2f85955379245b5b647" translate="yes" xml:space="preserve">
          <source>if &lt;b&gt;value&lt;/b&gt; is an Object. Note that JavaScript arrays and functions are objects, while (normal) strings and numbers are not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4cb108249f8307a8a55b9b21e1d74fe6973386c" translate="yes" xml:space="preserve">
          <source>if all of the values in the &lt;b&gt;list&lt;/b&gt; pass the &lt;b&gt;predicate&lt;/b&gt; truth test. Short-circuits and stops traversing the list if a false element is found. &lt;b&gt;predicate&lt;/b&gt; is transformed through &lt;a href=&quot;#iteratee&quot;&gt;&lt;b&gt;iteratee&lt;/b&gt;&lt;/a&gt; to facilitate shorthand syntaxes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ced8801ac810cbaf8b554582d4abca298d79cb2" translate="yes" xml:space="preserve">
          <source>if an enumerable &lt;b&gt;object&lt;/b&gt; contains no values (no enumerable own-properties). For strings and array-like objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="066da81869cf20b86cd55f0d4ce96a7dc68f18ea" translate="yes" xml:space="preserve">
          <source>if any of the values in the &lt;b&gt;list&lt;/b&gt; pass the &lt;b&gt;predicate&lt;/b&gt; truth test. Short-circuits and stops traversing the list if a true element is found. &lt;b&gt;predicate&lt;/b&gt; is transformed through &lt;a href=&quot;#iteratee&quot;&gt;&lt;b&gt;iteratee&lt;/b&gt;&lt;/a&gt; to facilitate shorthand syntaxes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05a11c9624b055f2fe47f46461149bfe0d07951d" translate="yes" xml:space="preserve">
          <source>if no value passes the test. The function returns as soon as it finds an acceptable element, and doesn't traverse the entire list. &lt;b&gt;predicate&lt;/b&gt; is transformed through &lt;a href=&quot;#iteratee&quot;&gt;&lt;b&gt;iteratee&lt;/b&gt;&lt;/a&gt; to facilitate shorthand syntaxes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf2dca92e7c6e18bc8d10c65344dd9d7ae79ab56" translate="yes" xml:space="preserve">
          <source>if the &lt;b&gt;value&lt;/b&gt; is present in the &lt;b&gt;list&lt;/b&gt;. Uses &lt;b&gt;indexOf&lt;/b&gt; internally, if &lt;b&gt;list&lt;/b&gt; is an Array. Use &lt;b&gt;fromIndex&lt;/b&gt; to start your search at a given index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="925fef2c8bc6234ff1e57d4d5b71583e44f4888e" translate="yes" xml:space="preserve">
          <source>if the value of &lt;b&gt;object&lt;/b&gt; is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94b14efd8e6fed3ffd51192cb5289f9c1230560d" translate="yes" xml:space="preserve">
          <source>if value is not present in the &lt;b&gt;array&lt;/b&gt;. If you're working with a large array, and you know that the array is already sorted, pass</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a84946af47ebc2013d306171dd7ffbfa65ad2b7" translate="yes" xml:space="preserve">
          <source>if value is not present. Pass &lt;b&gt;fromIndex&lt;/b&gt; to start your search at a given index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e052b2d5b44687ef74c926e43830781713d4af31" translate="yes" xml:space="preserve">
          <source>in your list of &lt;b&gt;arguments&lt;/b&gt; to specify an argument that should not be pre-filled, but left open to supply at call-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e540cdd1328b2b21e29a95405c301b9313b7c346" translate="yes" xml:space="preserve">
          <source>index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd85c321422288af137b973c56bd2f3fdbda0c3d" translate="yes" xml:space="preserve">
          <source>indexBy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc186ec879eece4447c93d8f2057288ad65977b5" translate="yes" xml:space="preserve">
          <source>into your chain, and continue to modify the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3117bfb8a2d0dcf9802a8607d218c2d48f5c651f" translate="yes" xml:space="preserve">
          <source>irrespective of the arguments passed to it. Useful as the default for optional callback arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c53907a2bf8046c2fe0a48dc2aaead2c888c222e" translate="yes" xml:space="preserve">
          <source>is a function its result will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff5abb18151f79838786f0c26966318f8647a15" translate="yes" xml:space="preserve">
          <source>is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2127d1fda4bfd9d216ccc2ecc2547f5f9812a502" translate="yes" xml:space="preserve">
          <source>is returned if &lt;b&gt;list&lt;/b&gt; is empty, so an &lt;a href=&quot;#isEmpty&quot;&gt;isEmpty&lt;/a&gt; guard may be required. Non-numerical values in &lt;b&gt;list&lt;/b&gt; will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a62f2225bf70bfaccbc7f1ef2a397836717377de" translate="yes" xml:space="preserve">
          <source>key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d54973f528b01019a58a52d34d518405a01b891" translate="yes" xml:space="preserve">
          <source>length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b62be4bddaa5661c7d6b8e36e28159314df5c7" translate="yes" xml:space="preserve">
          <source>list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad8469d02bf20e8435cd957ccebdbc71d62878c" translate="yes" xml:space="preserve">
          <source>loop cannot be broken out of &amp;mdash; to break, use &lt;b&gt;_.find&lt;/b&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce295b37d89bcbe4ce1eb7200603cff6223c8c7e" translate="yes" xml:space="preserve">
          <source>loops. &lt;b&gt;start&lt;/b&gt;, if omitted, defaults to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37745ed7a0f005fb14522c5cc7c1ba3d9e0df579" translate="yes" xml:space="preserve">
          <source>map</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a65eee95b28766f6a480ab9c2360831cdac2a6c" translate="yes" xml:space="preserve">
          <source>mapObject</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0706025b2bbcec1ed8d64822f4eccd96314938d0" translate="yes" xml:space="preserve">
          <source>max</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a5216fe977520748c5a10d1e3bd89077f9a9fb0" translate="yes" xml:space="preserve">
          <source>may be specified as a simple key, or as an array of object keys or array indexes, for deep property fetching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5c0cba68b55bc343b292366cf8981586e237dab" translate="yes" xml:space="preserve">
          <source>memo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6c935d4f3c7b220fa038613a1f9c1b56b255a86" translate="yes" xml:space="preserve">
          <source>min</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04a0fc4588df631752e40e27a91c841d99c73fbd" translate="yes" xml:space="preserve">
          <source>most recently</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be88ca4242c76e8253ac62474851065032d6833" translate="yes" xml:space="preserve">
          <source>null</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4b557bb9aea11803af3981976e9f1fcb067d3ff" translate="yes" xml:space="preserve">
          <source>object.hasOwnProperty(key)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3609f2f3ce4dcf737b1670082b569c99d424a041" translate="yes" xml:space="preserve">
          <source>on the debounced function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d55fd5b9462b3a169fe4871d7664f8d94e096b72" translate="yes" xml:space="preserve">
          <source>on the throttled function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3927572c45dc7a8d20da56759afcb9b30937e4d2" translate="yes" xml:space="preserve">
          <source>or a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbf63c6adba57ff2a18d83d55deff3db5e89b043" translate="yes" xml:space="preserve">
          <source>own</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784428d4ddbc9d1da681ced19469b50dcf90cc93" translate="yes" xml:space="preserve">
          <source>pairs, or a list of keys, and a list of values. Passing by pairs is the reverse of &lt;a href=&quot;#pairs&quot;&gt;pairs&lt;/a&gt;. If duplicate keys exist, the last value wins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e411b7db5d6eec13859137561c44d53b855556da" translate="yes" xml:space="preserve">
          <source>pairs. The opposite of &lt;a href=&quot;#object&quot;&gt;object&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88faac11dac221116e7705b81a183fd08668de4b" translate="yes" xml:space="preserve">
          <source>partition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3150ecd5e0294534a81ae047ddac559de481d774" translate="yes" xml:space="preserve">
          <source>path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68c46e84d76d2e7e686e5158bf598909abd4e45b" translate="yes" xml:space="preserve">
          <source>plain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d0d5876e6710ebb4f309b5af01090cb97381d06" translate="yes" xml:space="preserve">
          <source>print</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24c5fb14936b7b8d27e72e207aca33e4a45b11f8" translate="yes" xml:space="preserve">
          <source>produces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7a4a464072398bda8c81bea1c63799763f06427" translate="yes" xml:space="preserve">
          <source>properties over to the destination object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8278343fb39452127fe296434d484afd042e72d" translate="yes" xml:space="preserve">
          <source>properties with the first value present in the following list of &lt;b&gt;defaults&lt;/b&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df433d104ef9c15ca67624b8afd89fd0c391e2a1" translate="yes" xml:space="preserve">
          <source>properties. Basically,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0762f044d921881141a5bb697c38a27e0329a25" translate="yes" xml:space="preserve">
          <source>property on the returned function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="655d74f122c660cd3ff56e14a5009cd5f778633a" translate="yes" xml:space="preserve">
          <source>property. It's also good to note that an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc867c03d6f1f4385a2475b4be1137e585036dd1" translate="yes" xml:space="preserve">
          <source>push</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90afb8c10d80d7b84837590eb43cb0b81ca22390" translate="yes" xml:space="preserve">
          <source>reject</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75470a3076d8da06e21a0f542f3a535af3f72e94" translate="yes" xml:space="preserve">
          <source>reverse</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6dc9bc9f77b486a13b3f63ffb2ffd1cb3fef4db" translate="yes" xml:space="preserve">
          <source>should</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb875812858d27b22cb2b75f992dffadc1b05c66" translate="yes" xml:space="preserve">
          <source>some</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3adc28a9a4a7af6e6ec2bb0968554d049edb777" translate="yes" xml:space="preserve">
          <source>sortBy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a1ac2d523ce3511e7215ec28943a4b1edb17b3" translate="yes" xml:space="preserve">
          <source>sortedIndex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9085cf49383d7e4666d2a2af4089f175353ec7f7" translate="yes" xml:space="preserve">
          <source>statement. However, you can specify a single variable name with the &lt;b&gt;variable&lt;/b&gt; setting. This can significantly improve the speed at which a template is able to render.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="226a3394e9b32a88e120b1faae218add4fb76827" translate="yes" xml:space="preserve">
          <source>supports a number of shorthand syntaxes for common callback use cases. Depending upon</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95cf956d87561a96ba325cfdca49382a93d4ed74" translate="yes" xml:space="preserve">
          <source>that should be overridden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4c6a0b9620beb551774e0500b8c4b450a32771d" translate="yes" xml:space="preserve">
          <source>the input has stopped arriving. For example: rendering a preview of a Markdown comment, recalculating a layout after the window has stopped being resized, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa783769bf72f26be808df9e293cab72e52aedbd" translate="yes" xml:space="preserve">
          <source>the names of &lt;b&gt;object&lt;/b&gt;'s own and inherited properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2543fff3bfa6f144c2f06a7de6cd10c0b650cae" translate="yes" xml:space="preserve">
          <source>this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0344bf18bc159b69a7cd6be15adc5bfd3bac587" translate="yes" xml:space="preserve">
          <source>to pass in an array of arrays. If you're working with a matrix of nested arrays, this can be used to transpose the matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b6068f9de5777d20350322010481f4d59d40ab9" translate="yes" xml:space="preserve">
          <source>to retrieve the final value. Here's an example of chaining together a &lt;b&gt;map/flatten/reduce&lt;/b&gt;, in order to get the word count of every word in a song.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94b8a8dbc0b3a02c485d3a2235c91d34476b9cc8" translate="yes" xml:space="preserve">
          <source>to test object equality. In particular only the first occurrence of each value is kept. If you know in advance that the &lt;b&gt;array&lt;/b&gt; is sorted, passing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c03658d6d7232d8a33fdaf8d4014171d6ecd9c2" translate="yes" xml:space="preserve">
          <source>to the debounced function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ffe533b830f08a0326348a9160afafc8ada44db" translate="yes" xml:space="preserve">
          <source>true</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d4cd07616a542891b7ec2d0257b3a24b69856e" translate="yes" xml:space="preserve">
          <source>undefined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42c53cdf8dcda07ef06c4014d43c03ab4ba1798b" translate="yes" xml:space="preserve">
          <source>uniq</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f32b67c7e26342af42efabc674d441dca0a281c5" translate="yes" xml:space="preserve">
          <source>value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="583e97662081c49a75e5ecea14129cc833161fa3" translate="yes" xml:space="preserve">
          <source>value that &lt;a href=&quot;#matches&quot;&gt;matches&lt;/a&gt; all of the key-value pairs listed in &lt;b&gt;properties&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c442a4701a4d52d19161776475f282adc87bbe2" translate="yes" xml:space="preserve">
          <source>value. A close cousin of &lt;a href=&quot;#bind&quot;&gt;bind&lt;/a&gt;. You may pass</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82fa525d8ca28fcf2e5c734501bdfd36627ee380" translate="yes" xml:space="preserve">
          <source>variable back to its previous owner. Returns a reference to the &lt;b&gt;Underscore&lt;/b&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="541ff26604af13c264cb34d91a810027c01fff07" translate="yes" xml:space="preserve">
          <source>where the &lt;b&gt;predicate&lt;/b&gt; truth test passes or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ef44a7f700e88aec4c8b15477ecc69c13f947c3" translate="yes" xml:space="preserve">
          <source>will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d4e3d383f2b4a8ea7f904ace8be6add77f538a5" translate="yes" xml:space="preserve">
          <source>will be the &lt;b&gt;object&lt;/b&gt;. Optionally, pass &lt;b&gt;arguments&lt;/b&gt; to the &lt;b&gt;function&lt;/b&gt; to pre-fill them, also known as &lt;b&gt;partial application&lt;/b&gt;. For partial application without context binding, use &lt;a href=&quot;#partial&quot;&gt;partial&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9a6059ffe2fd179bb9e3d784fb150afdeb7c54f" translate="yes" xml:space="preserve">
          <source>will cause all future method calls to return wrapped objects. When you've finished the computation, call</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a838b6acb762a3b940bffb31476f9eddf67174" translate="yes" xml:space="preserve">
          <source>will return:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fcd25a39d2037183044a8897e9a5333d727fded" translate="yes" xml:space="preserve">
          <source>with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcb4f1da574152197293aa807529e492801787c2" translate="yes" xml:space="preserve">
          <source>with their unescaped counterparts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a77ba6cd706b9d91b48dbe1eab7bd341fd4b61" translate="yes" xml:space="preserve">
          <source>with your own custom function, if you want additional or different shorthand syntaxes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d4e654c613ea68bffeeab1587b7dbac44826c2b" translate="yes" xml:space="preserve">
          <source>without</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9720cb3f70820ec78618c43828ef86c7b7301fb" translate="yes" xml:space="preserve">
          <source>{leading: false}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a53d3db24585f2351774fe00b37f1357f86f8c07" translate="yes" xml:space="preserve">
          <source>{name: function}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56d069f606d449d04b8157f70733665a41cd9430" translate="yes" xml:space="preserve">
          <source>{trailing: false}</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
