<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="d3">
    <body>
      <group id="d3">
        <trans-unit id="99dc5a1fd8aae4d7e84aefd4e03386e38abf0e9d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;dispatch&lt;/em&gt;.&lt;b&gt;copy&lt;/b&gt;() &lt;a href=&quot;https://github.com/d3/d3-dispatch/blob/master/src/dispatch.js#L49&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3ac630602bfd02ccf6421b3379107e8aeddcf3e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;dispatch&lt;/em&gt;.&lt;b&gt;on&lt;/b&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fefa4f9cbb4ce7ecc9b7cadabd28734402bd8f66" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;dsv&lt;/em&gt;.&lt;b&gt;parse&lt;/b&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d37a579394cae5775eb9d205d66e7522023745" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;event&lt;/em&gt;.sourceEvent - the underlying input event, such as mousemove or touchmove.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="931b698f5ddf0a8779e65afbaee79762c0634b96" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;event&lt;/em&gt;.target - the associated &lt;a href=&quot;#zoom&quot;&gt;zoom behavior&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd48dad55fc0c3f6cb771ae794eabc7610a34d99" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;event&lt;/em&gt;.transform - the current &lt;a href=&quot;#zoom-transforms&quot;&gt;zoom transform&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d17179d91cbc5d05224f7efa2ee10dc9ebed9762" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;event&lt;/em&gt;.type - the string &amp;ldquo;start&amp;rdquo;, &amp;ldquo;zoom&amp;rdquo; or &amp;ldquo;end&amp;rdquo;; see &lt;a href=&quot;#zoom_on&quot;&gt;&lt;em&gt;zoom&lt;/em&gt;.on&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a6c9fde68999fa9d0d58794e31a1753706ad631" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;graticule&lt;/em&gt;.majorExtent ↦ &lt;a href=&quot;../../../d3-geo#graticule_extentMajor&quot;&gt;&lt;em&gt;graticule&lt;/em&gt;.extentMajor&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3dcb77ead75db1e7cdd77014d7fe42f5a86d194" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;graticule&lt;/em&gt;.majorStep ↦ &lt;a href=&quot;../../../d3-geo#graticule_stepMajor&quot;&gt;&lt;em&gt;graticule&lt;/em&gt;.stepMajor&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8cfffaea21dba8aebee92e284372754a77fc6ef" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;graticule&lt;/em&gt;.minorExtent ↦ &lt;a href=&quot;../../../d3-geo#graticule_extentMinor&quot;&gt;&lt;em&gt;graticule&lt;/em&gt;.extentMinor&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff4f2c909dc941109d08e46f0b02803ed68259c5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;graticule&lt;/em&gt;.minorStep ↦ &lt;a href=&quot;../../../d3-geo#graticule_stepMinor&quot;&gt;&lt;em&gt;graticule&lt;/em&gt;.stepMinor&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c2770cf6b5d135be33dc359193118cc7b6255db" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;k&lt;/em&gt; 0 &lt;em&gt;t&lt;sub&gt;x&lt;/sub&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95dc101f0b8be2f0c5cc4872e94a8f59ea4a437e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;multiple&lt;/em&gt;⁶</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbcb6f8f92bd18e3bc1ea52e85aaf736ddcc415a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;node&lt;/em&gt;.children - an array of child nodes, if any; undefined for leaf nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d72ae7d14362d3de09b98ec3caba71f3debad349" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;node&lt;/em&gt;.data - the associated data, as specified to the &lt;a href=&quot;#hierarchy&quot;&gt;constructor&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff046e5c24e52c5b4a2e90d0321e3122726d0808" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;node&lt;/em&gt;.depth - zero for the root node, and increasing by one for each descendant generation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a938a13100f739f339a98698b22ffd35ee15c498" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;node&lt;/em&gt;.height - zero for leaf nodes, and the greatest distance from any descendant leaf for internal nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc164064015bbe94c592e2851ab536b6137cd550" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;node&lt;/em&gt;.i - the index of the associated point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95e7853524720595d246d8e6831105959861a8ef" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;node&lt;/em&gt;.next - the next &lt;em&gt;node&lt;/em&gt; on the hull</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a1aa69c3386d431d99225a3e5becf742c7b55c6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;node&lt;/em&gt;.parent - the parent node, or null for the root node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98568320cbe0d8411aac220a94e66881f241e817" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;node&lt;/em&gt;.prev - the previous &lt;em&gt;node&lt;/em&gt; on the hull</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2109ba91fa32076c34d6a5c3796100c35d0197e7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;node&lt;/em&gt;.r - the radius of the circle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cec264acdf6c5450489f9ae007e53d035364e74d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;node&lt;/em&gt;.t - the index of the (incoming or outgoing?) associated halfedge</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e7091466b1f6030fd165934ab69a9566efda9e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;node&lt;/em&gt;.value - the summed value of the node and its &lt;a href=&quot;#node_descendants&quot;&gt;descendants&lt;/a&gt;; optional, see &lt;a href=&quot;#node_sum&quot;&gt;&lt;em&gt;node&lt;/em&gt;.sum&lt;/a&gt; and &lt;a href=&quot;#node_count&quot;&gt;&lt;em&gt;node&lt;/em&gt;.count&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="912b9988ee59492c0111159ac4ab12cb74f02eff" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;node&lt;/em&gt;.x - the &lt;em&gt;x&lt;/em&gt;-coordinate of the associated point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fe958ab42996b2ae530c6f998e6c1d27bf47c7e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;node&lt;/em&gt;.x - the &lt;em&gt;x&lt;/em&gt;-coordinate of the circle&amp;rsquo;s center</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af719e095c9471ba59beb491cb4ffcab56551840" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;node&lt;/em&gt;.x - the &lt;em&gt;x&lt;/em&gt;-coordinate of the node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef070afbe0baa4def1ea2a188133bad4692ddd3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;node&lt;/em&gt;.x0 - the left edge of the rectangle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d1f2ce2cdb7d2794220a6049bc6f60919923511" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;node&lt;/em&gt;.x1 - the right edge of the rectangle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50e675ab43fe5e8c81265c29ee4690588bc2fcf5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;node&lt;/em&gt;.y - the &lt;em&gt;y&lt;/em&gt;-coordinate of the associated point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="688c2b072f3c3f828fbec748d3c5dd2b5b14a3b3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;node&lt;/em&gt;.y - the &lt;em&gt;y&lt;/em&gt;-coordinate of the circle&amp;rsquo;s center</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fe9c3169371da4d71fceecf0eec28644639bb80" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;node&lt;/em&gt;.y - the &lt;em&gt;y&lt;/em&gt;-coordinate of the node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea8c2db8876125aa5d404a6b68ec860caa30808" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;node&lt;/em&gt;.y0 - the top edge of the rectangle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1580b86633fe21308f7f7c8a0fb39a4e5e0be2bf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;node&lt;/em&gt;.y1 - the bottom edge of the rectangle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e10de2fd35c375c70348df53c81b1953407ec97e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;transform&lt;/em&gt;.k - the scale factor &lt;em&gt;k&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="205714b18ed6299206d2368329bc6ad4193d0226" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;transform&lt;/em&gt;.x - the translation amount &lt;em&gt;t&lt;sub&gt;x&lt;/sub&gt;&lt;/em&gt; along the &lt;em&gt;x&lt;/em&gt;-axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8c31cb70d25d4b5adcf21e61326779e8748951" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;transform&lt;/em&gt;.y - the translation amount &lt;em&gt;t&lt;sub&gt;y&lt;/sub&gt;&lt;/em&gt; along the &lt;em&gt;y&lt;/em&gt;-axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="859f2a50f58cc3616c6440c5780a7b0e62b53436" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Adjacency diagrams&lt;/strong&gt; show topology through the relative placement of nodes. They may also encode a quantitative dimension in the area of each node, for example to show revenue or file size. The &lt;a href=&quot;#partition&quot;&gt;&amp;ldquo;icicle&amp;rdquo; diagram&lt;/a&gt; uses rectangles, while the &amp;ldquo;sunburst&amp;rdquo; uses annular segments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e43d016428ba7f1fef11910dcc33123f648fb46d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecation notice&lt;/strong&gt;: Consider using the newer &lt;a href=&quot;d3-delaunay&quot;&gt;d3-delaunay&lt;/a&gt; instead of d3-voronoi. Based on &lt;a href=&quot;https://github.com/mapbox/delaunator&quot;&gt;Delaunator&lt;/a&gt;, d3-delaunay is 5-10&amp;times; faster than d3-voronoi to construct the Delaunay triangulation or the Voronoi diagram, is more robust numerically, has Canvas rendering built-in, allows traversal of the Delaunay graph, and a variety of other improvements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="313301e7f4886a92d3c79de7153d71d5540e6710" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Enclosure diagrams&lt;/strong&gt; also use an area encoding, but show topology through containment. A &lt;a href=&quot;#treemap&quot;&gt;treemap&lt;/a&gt; recursively subdivides area into rectangles. &lt;a href=&quot;#pack&quot;&gt;Circle-packing&lt;/a&gt; tightly nests circles; this is not as space-efficient as a treemap, but perhaps more readily shows topology.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eff44371128b986aa2255d777adb68589bda6a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Node-link diagrams&lt;/strong&gt; show topology using discrete marks for nodes and links, such as a circle for each node and a line connecting each parent and child. The &lt;a href=&quot;#tree&quot;&gt;&amp;ldquo;tidy&amp;rdquo; tree&lt;/a&gt; is delightfully compact, while the &lt;a href=&quot;#cluster&quot;&gt;dendrogram&lt;/a&gt; places leaves at the same level. (These have both polar and Cartesian forms.) &lt;a href=&quot;https://bl.ocks.org/mbostock/1093025&quot;&gt;Indented trees&lt;/a&gt; are useful for interactive browsing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a43fd4bd4d07aca02368746b620ce63ddda8ee68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This module is deprecated as of D3 5.0; please use &lt;a href=&quot;d3-fetch&quot;&gt;d3-fetch&lt;/a&gt; instead.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cd8acdb9c229cf3538a8960f70336ec42a95761" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;d3-cam16&lt;/strong&gt; is an under-development update to &lt;a href=&quot;https://github.com/connorgr/d3-cam02&quot;&gt;d3-cam02&lt;/a&gt;. It fixes many underlying computational bugs and performance concerns while still preserving perceptual accuracy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dcd4ce23d88e2ee9568ba546c007c63d9131c1b" translate="yes" xml:space="preserve">
          <source>A</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece1d268947b2f6762aa122df2c856ca3d875da4" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#geoModifiedStereographic&quot;&gt;modified stereographic&lt;/a&gt; projection for Alaska.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ffbc56a773d073f93ac385dd31b713d634bbeb9" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#geoModifiedStereographic&quot;&gt;modified stereographic&lt;/a&gt; projection for Europe and Africa. Typically clipped to the geographic extent [[-40&amp;deg;, -40&amp;deg;], [80&amp;deg;, 80&amp;deg;]].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="705c7ce3cbec5745ee589e21197dd1cec9b39d8d" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#geoModifiedStereographic&quot;&gt;modified stereographic&lt;/a&gt; projection for the Pacific ocean.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5baf0ed7ca998cd4c953d068ae282c308363b1d" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#geoModifiedStereographic&quot;&gt;modified stereographic&lt;/a&gt; projection for the United States including Alaska and Hawaii. Typically clipped to the geographic extent [[-180&amp;deg;, 15&amp;deg;], [-50&amp;deg;, 75&amp;deg;]].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e05fad7bc499eff4e88102c2d51b44a09707dd9f" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#geoModifiedStereographic&quot;&gt;modified stereographic&lt;/a&gt; projection for the conterminous United States.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da268830d6f95c224c646af98a817e77a18311be" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://en.wikipedia.org/wiki/Quadtree&quot;&gt;quadtree&lt;/a&gt; recursively partitions two-dimensional space into squares, dividing each square into four equally-sized squares. Each distinct point exists in a unique leaf &lt;a href=&quot;#nodes&quot;&gt;node&lt;/a&gt;; coincident points are represented by a linked list. Quadtrees can accelerate various spatial operations, such as the &lt;a href=&quot;https://en.wikipedia.org/wiki/Barnes%E2%80%93Hut_simulation&quot;&gt;Barnes&amp;ndash;Hut approximation&lt;/a&gt; for computing many-body forces, collision detection, and searching for nearby points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="771831680d062669b8698f487a9442118abdc1f5" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;force&lt;/em&gt; is simply a function that modifies nodes&amp;rsquo; positions or velocities; in this context, a &lt;em&gt;force&lt;/em&gt; can apply a classical physical force such as electrical charge or gravity, or it can resolve a geometric constraint, such as keeping nodes within a bounding box or keeping linked nodes a fixed distance apart. For example, a simple positioning force that moves nodes towards the origin ⟨0,0⟩ might be implemented as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d72ebb0b04236f0eafd5dd7921b194ced3517c69" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;queue&lt;/strong&gt; evaluates zero or more &lt;em&gt;deferred&lt;/em&gt; asynchronous tasks with configurable concurrency: you control how many tasks run at the same time. When all the tasks complete, or an error occurs, the queue passes the results to your &lt;em&gt;await&lt;/em&gt; callback. This library is similar to &lt;a href=&quot;https://github.com/caolan/async&quot;&gt;Async.js&lt;/a&gt;&amp;rsquo;s &lt;a href=&quot;https://github.com/caolan/async#paralleltasks-callback&quot;&gt;parallel&lt;/a&gt; (when &lt;em&gt;concurrency&lt;/em&gt; is infinite), &lt;a href=&quot;https://github.com/caolan/async#seriestasks-callback&quot;&gt;series&lt;/a&gt; (when &lt;em&gt;concurrency&lt;/em&gt; is 1), and &lt;a href=&quot;https://github.com/caolan/async#queue&quot;&gt;queue&lt;/a&gt;, but features a much smaller footprint: as of release 2, d3-queue is about 700 bytes gzipped, compared to 4,300 for Async.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e684ef5c960b5d94c680d3741c7a5b0df2ac2da" translate="yes" xml:space="preserve">
          <source>A butterfly projection inspired by Steve Waterman&amp;rsquo;s design.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90f03a4f4b6531f82041a059b9f60e8de059a332" translate="yes" xml:space="preserve">
          <source>A calculator for humanity&amp;rsquo;s peculiar conventions of time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be6251f0c73686e6a6a56848a29f5e2e0bc1b049" translate="yes" xml:space="preserve">
          <source>A categorical shape encoding, as in a scatterplot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbdc28a3f136c4b5b9156aa0448b56ac9bd5bdd3" translate="yes" xml:space="preserve">
          <source>A child quadrant may be undefined if it is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c93d366ef68104e0ee62fbd6ff45a9d300cfebb" translate="yes" xml:space="preserve">
          <source>A clipping function which transforms a stream such that geometries (lines or polygons) that cross the antimeridian line are cut in two, one on each side. Typically used for pre-clipping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7608ab62d9f72b8a0415a567f61dadf0a90dfc3" translate="yes" xml:space="preserve">
          <source>A common data type in JavaScript is the &lt;em&gt;associative array&lt;/em&gt;, or more simply the &lt;em&gt;object&lt;/em&gt;, which has a set of named properties. The standard mechanism for iterating over the keys (or property names) in an associative array is the &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Statements/for...in&quot;&gt;for&amp;hellip;in loop&lt;/a&gt;. However, note that the iteration order is undefined. D3 provides several methods for converting associative arrays to standard arrays with numeric indexes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8de38b278ee470688a5613a80489408f88602a5" translate="yes" xml:space="preserve">
          <source>A common reason to specify a custom interpolator is to change the color space of interpolation. For example, to use &lt;a href=&quot;d3-interpolate#interpolateHcl&quot;&gt;HCL&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a765f96cf395eec4cd0a4ecb102f839aebc8ad0c" translate="yes" xml:space="preserve">
          <source>A convenience method for &lt;a href=&quot;#projection_fitExtent&quot;&gt;&lt;em&gt;projection&lt;/em&gt;.fitExtent&lt;/a&gt; where the top-left corner of the extent is [0, 0]. The following two statements are equivalent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6813d43f2ac846c022428aafa5427ce6b66b334e" translate="yes" xml:space="preserve">
          <source>A convenience method for &lt;a href=&quot;#projection_fitSize&quot;&gt;&lt;em&gt;projection&lt;/em&gt;.fitSize&lt;/a&gt; where the height is automatically chosen from the aspect ratio of &lt;em&gt;object&lt;/em&gt; and the given constraint on &lt;em&gt;width&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a55d9667ea89e24ee457c3cb213a00d358f98e0" translate="yes" xml:space="preserve">
          <source>A convenience method for &lt;a href=&quot;#projection_fitSize&quot;&gt;&lt;em&gt;projection&lt;/em&gt;.fitSize&lt;/a&gt; where the width is automatically chosen from the aspect ratio of &lt;em&gt;object&lt;/em&gt; and the given contraint on &lt;em&gt;height&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bcf03d647bc054ac8ba0c697e2677def650879c" translate="yes" xml:space="preserve">
          <source>A convenience method for directly generating the default 10&amp;deg; global graticule as a GeoJSON MultiLineString geometry object. Equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b3dba41a3ca335b840cfb662a6ce0facfdf1561" translate="yes" xml:space="preserve">
          <source>A convenience method for setting the &lt;a href=&quot;#band_paddingInner&quot;&gt;inner&lt;/a&gt; and &lt;a href=&quot;#band_paddingOuter&quot;&gt;outer&lt;/a&gt; padding to the same &lt;em&gt;padding&lt;/em&gt; value. If &lt;em&gt;padding&lt;/em&gt; is not specified, returns the inner padding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f0c4b7270f2256edd12ef43d111088593a645bc" translate="yes" xml:space="preserve">
          <source>A convenience method on top of &lt;a href=&quot;d3-selection#selection_attr&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.attr&lt;/a&gt; for setting multiple attributes. If the specified &lt;em&gt;values&lt;/em&gt; is an object, the values may be specified either as strings or functions. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45564175da10de999c3e8a1432a29cf00dceff05" translate="yes" xml:space="preserve">
          <source>A convenience method on top of &lt;a href=&quot;d3-selection#selection_property&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.property&lt;/a&gt; for setting multiple element properties. If the specified &lt;em&gt;values&lt;/em&gt; is an object, the values may be specified either as strings or functions. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17e6c74ce1deca9bff65793418b5c88b284c90e2" translate="yes" xml:space="preserve">
          <source>A convenience method on top of &lt;a href=&quot;d3-selection#selection_style&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.style&lt;/a&gt; for setting multiple style properties. If the specified &lt;em&gt;values&lt;/em&gt; is an object, the values may be specified either as strings or functions. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f972aa439d2da4f91bcf4e2deba9dd55d2c2959" translate="yes" xml:space="preserve">
          <source>A good hierarchical visualization facilitates rapid multiscale inference: micro-observations of individual elements and macro-observations of large groups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81637d9cfa0fa0de99f8acfe4f081ccd82479df6" translate="yes" xml:space="preserve">
          <source>A layout for working with image-based map tiles. This can be used to create a simple slippy map, or to render standard map tiles (&lt;em&gt;e.g.&lt;/em&gt;, Mapbox, Mapzen, CloudMade, Bing) as a base layer behind a vector layer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9dbc7c2bcedf9db2609eee86bb923174fcf01a5" translate="yes" xml:space="preserve">
          <source>A more aesthetically-pleasing and perceptually-effective cyclical hue encoding is to use &lt;a href=&quot;d3-scale-chromatic#interpolateRainbow&quot;&gt;d3.interpolateRainbow&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ebdde5145dbb2cabd1f760c6c50fe28000b06cd" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../../../d3-drag#drag_container&quot;&gt;&lt;em&gt;drag&lt;/em&gt;.container&lt;/a&gt; method lets you override the parent element that defines the drag gesture coordinate system. This defaults to the parent node of the element to which the drag behavior was applied. For dragging on Canvas elements, you probably want to use the Canvas element as the container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa10909687b02d322294f0d62bf613d2983a92b5" translate="yes" xml:space="preserve">
          <source>A new selection representing the &lt;a href=&quot;#selection_merge&quot;&gt;union&lt;/a&gt; of entering and updating circles is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8f892749a5b97068ef906262ea1d1c1f7f9f55e" translate="yes" xml:space="preserve">
          <source>A non-hierarchical implementation is also available as &lt;a href=&quot;../../../d3-hierarchy#packSiblings&quot;&gt;d3.packSiblings&lt;/a&gt;, and the smallest enclosing circle implementation is available as &lt;a href=&quot;../../../d3-hierarchy#packEnclose&quot;&gt;d3.packEnclose&lt;/a&gt;. &lt;a href=&quot;../../../d3-hierarchy#pack_padding&quot;&gt;Pack padding&lt;/a&gt; now applies between a parent and its children, as well as between adjacent siblings. In addition, you can now specify padding as a function that is computed dynamically for each parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="635da734aa3b331489493df4c9c87d3e16d2ffa5" translate="yes" xml:space="preserve">
          <source>A null accessor is also allowed, indicating that the previously-computed &lt;a href=&quot;#area_y0&quot;&gt;y0&lt;/a&gt; value should be reused for the y1 value. When an area is &lt;a href=&quot;#_area&quot;&gt;generated&lt;/a&gt;, the y1 accessor will be invoked for each &lt;a href=&quot;#area_defined&quot;&gt;defined&lt;/a&gt; element in the input data array, being passed the element &lt;code&gt;d&lt;/code&gt;, the index &lt;code&gt;i&lt;/code&gt;, and the array &lt;code&gt;data&lt;/code&gt; as three arguments. See &lt;a href=&quot;#area_x0&quot;&gt;&lt;em&gt;area&lt;/em&gt;.x0&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b65b92272ae16e572d2fdfa8566483ee4cfec9ff" translate="yes" xml:space="preserve">
          <source>A smooth cubic B&amp;eacute;zier curve from a source to a target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dabec1c39ee268524a657e4d3f9392c6d08180eb" translate="yes" xml:space="preserve">
          <source>A special value for &lt;a href=&quot;#ordinal_unknown&quot;&gt;&lt;em&gt;ordinal&lt;/em&gt;.unknown&lt;/a&gt; that enables implicit domain construction: unknown values are implicitly added to the domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0ccda0517bd06e8b29f9714c783d806c07de0f0" translate="yes" xml:space="preserve">
          <source>A spline or polyline, as in a line chart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58f0d0dca208534020d340766be605132a27c337" translate="yes" xml:space="preserve">
          <source>A suitable bisect function could be constructed as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ef51ae537933558f9d620dd0f3e6e9fa51db73f" translate="yes" xml:space="preserve">
          <source>A transition is a &lt;a href=&quot;d3-selection&quot;&gt;selection&lt;/a&gt;-like interface for animating changes to the DOM. Instead of applying changes instantaneously, transitions smoothly interpolate the DOM from its current state to the desired target state over a given duration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eda7533581f4974fc4c48d78e904c18efc01a1a" translate="yes" xml:space="preserve">
          <source>A variation that is more appropriate for radial layouts reduces the separation gap proportionally to the radius:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35e85fa9075fa33bbb553317df361cd1208a065f" translate="yes" xml:space="preserve">
          <source>A word of caution: it is tempting to use plain objects as maps, but this causes &lt;a href=&quot;http://www.devthought.com/2012/01/18/an-object-is-not-a-hash/&quot;&gt;unexpected behavior&lt;/a&gt; when built-in property names are used as keys, such as &lt;code&gt;object[&quot;__proto__&quot;] = 42&lt;/code&gt; and &lt;code&gt;&quot;hasOwnProperty&quot; in object&lt;/code&gt;. If you cannot guarantee that map keys and set values will be safe, use &lt;a href=&quot;#maps&quot;&gt;maps&lt;/a&gt; and &lt;a href=&quot;#sets&quot;&gt;sets&lt;/a&gt; (or their ES6 equivalents) instead of plain objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="392e131276d8c7e05261a0000c46c46210cf97bc" translate="yes" xml:space="preserve">
          <source>ADDED ↦ &lt;a href=&quot;../../../d3-shape#symbolStar&quot;&gt;d3.symbolStar&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4652efb3c0858d664df85b2617ed2150f70c6ca4" translate="yes" xml:space="preserve">
          <source>ADDED ↦ &lt;a href=&quot;../../../d3-shape#symbolWye&quot;&gt;d3.symbolWye&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="066bb86454435979bd3381819b90a5729f2a237a" translate="yes" xml:space="preserve">
          <source>ADDED ↦ &lt;a href=&quot;../../../d3-time#timeMillisecond&quot;&gt;d3.timeMillisecond&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02a2f0abfa906f138a4b471a003008232dc46b35" translate="yes" xml:space="preserve">
          <source>ADDED ↦ &lt;a href=&quot;../../../d3-time#utcMillisecond&quot;&gt;d3.utcMillisecond&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b276f94cd8d0e74a21de6e5939b8c10ca9a975d6" translate="yes" xml:space="preserve">
          <source>API Reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d319d8fd568ecba51bd00c03dfa9ece2252aa62" translate="yes" xml:space="preserve">
          <source>Abel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2432c422d300a340aa39cc58a062be80386cf4fb" translate="yes" xml:space="preserve">
          <source>Aborts any active tasks, invoking each active task&amp;rsquo;s &lt;em&gt;task&lt;/em&gt;.abort function, if any. Also prevents any new tasks from starting, and immediately invokes the &lt;a href=&quot;#queue_await&quot;&gt;&lt;em&gt;queue&lt;/em&gt;.await&lt;/a&gt; or &lt;a href=&quot;#queue_awaitAll&quot;&gt;&lt;em&gt;queue&lt;/em&gt;.awaitAll&lt;/a&gt; callback with an error indicating that the queue was aborted. See the &lt;a href=&quot;#d3-queue&quot;&gt;introduction&lt;/a&gt; for an example implementation of an abortable task. Note that if your tasks are not abortable, any running tasks will continue to run, even after the await callback has been invoked with the abort error. The await callback is invoked exactly once on abort, and so is not called when any running tasks subsequently succeed or fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d6d8b901dbe4632d64dd590ee8f4165fc26e553" translate="yes" xml:space="preserve">
          <source>Aborts this request, if it is currently in-flight, and returns this request instance. See &lt;a href=&quot;http://www.w3.org/TR/XMLHttpRequest/#the-abort%28%29-method&quot;&gt;XMLHttpRequest&amp;rsquo;s abort&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b0d5cd8a64c1689b2574eeecad8b7af1dac4568" translate="yes" xml:space="preserve">
          <source>Accept &lt;a href=&quot;http://ndjson.org/&quot;&gt;newline-delimited JSON&lt;/a&gt; as input, with one feature per line, and generate newline-delimited JSON as output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19259db51d2fdea303ab54d5a58012650c0fc65c" translate="yes" xml:space="preserve">
          <source>Accept &lt;a href=&quot;http://ndjson.org/&quot;&gt;newline-delimited JSON&lt;/a&gt; as input, with one feature per line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8af2e17b6dab2c17ccc7b08ffe521fb0fcc8623b" translate="yes" xml:space="preserve">
          <source>Additional prefixes may be assigned as needed to create elements or attributes in other namespaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31889be09a8519360ec0eb80737148dbfd63a1e6" translate="yes" xml:space="preserve">
          <source>Adds or removes a &lt;em&gt;listener&lt;/em&gt; to each selected element for the specified event &lt;em&gt;typenames&lt;/em&gt;. The &lt;em&gt;typenames&lt;/em&gt; is a string event type, such as &lt;code&gt;click&lt;/code&gt;, &lt;code&gt;mouseover&lt;/code&gt;, or &lt;code&gt;submit&lt;/code&gt;; any &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events&quot;&gt;DOM event type&lt;/a&gt; supported by your browser may be used. The type may be optionally followed by a period (&lt;code&gt;.&lt;/code&gt;) and a name; the optional name allows multiple callbacks to be registered to receive events of the same type, such as &lt;code&gt;click.foo&lt;/code&gt; and &lt;code&gt;click.bar&lt;/code&gt;. To specify multiple typenames, separate typenames with spaces, such as &lt;code&gt;input change&lt;/code&gt; or &lt;code&gt;click.foo click.bar&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f378967557f82f0879dc397d2660f0996cdb341f" translate="yes" xml:space="preserve">
          <source>Adds or removes a &lt;em&gt;listener&lt;/em&gt; to each selected element for the specified event &lt;em&gt;typenames&lt;/em&gt;. The &lt;em&gt;typenames&lt;/em&gt; is one of the following string event types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d67ca2eb59db626da3442caec924d9b82df9418" translate="yes" xml:space="preserve">
          <source>Adds the specified &lt;em&gt;datum&lt;/em&gt; to the quadtree, deriving its coordinates ⟨&lt;em&gt;x&lt;/em&gt;,&lt;em&gt;y&lt;/em&gt;⟩ using the current &lt;a href=&quot;#quadtree_x&quot;&gt;&lt;em&gt;x&lt;/em&gt;-&lt;/a&gt; and &lt;a href=&quot;#quadtree_y&quot;&gt;&lt;em&gt;y&lt;/em&gt;-&lt;/a&gt;accessors, and returns the quadtree. If the new point is outside the current &lt;a href=&quot;#quadtree_extent&quot;&gt;extent&lt;/a&gt; of the quadtree, the quadtree is automatically expanded to &lt;a href=&quot;#quadtree_cover&quot;&gt;cover&lt;/a&gt; the new point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e774c1bbfad5bc98796ad43c39b232c558ea5ef" translate="yes" xml:space="preserve">
          <source>Adds the specified &lt;em&gt;value&lt;/em&gt; string to this set. Returns the set, allowing chaining. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a5a7ccee8f490fbb95568873f12c3c205038978" translate="yes" xml:space="preserve">
          <source>Adds the specified array of &lt;em&gt;data&lt;/em&gt; to the quadtree, deriving each element&amp;rsquo;s coordinates ⟨&lt;em&gt;x&lt;/em&gt;,&lt;em&gt;y&lt;/em&gt;⟩ using the current &lt;a href=&quot;#quadtree_x&quot;&gt;&lt;em&gt;x&lt;/em&gt;-&lt;/a&gt; and &lt;a href=&quot;#quadtree_y&quot;&gt;&lt;em&gt;y&lt;/em&gt;-&lt;/a&gt;accessors, and return this quadtree. This is approximately equivalent to calling &lt;a href=&quot;#quadtree_add&quot;&gt;&lt;em&gt;quadtree&lt;/em&gt;.add&lt;/a&gt; repeatedly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68db0db4a8d4f35ac76ceb747718e72ef8e00de5" translate="yes" xml:space="preserve">
          <source>Adds the specified asynchronous &lt;em&gt;task&lt;/em&gt; callback to the queue, with any optional &lt;em&gt;arguments&lt;/em&gt;. The &lt;em&gt;task&lt;/em&gt; is a function that will be called when the task should start. It is passed the specified optional &lt;em&gt;arguments&lt;/em&gt; and an additional &lt;em&gt;callback&lt;/em&gt; as the last argument; the callback must be invoked by the task when it finishes. The task must invoke the callback with two arguments: the &lt;em&gt;error&lt;/em&gt;, if any, and the &lt;em&gt;result&lt;/em&gt; of the task. To return multiple results from a single callback, wrap the results in an object or array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bebddb6ecaccafda65598aa86e9680c3bf36a57e" translate="yes" xml:space="preserve">
          <source>Adds, removes or gets the &lt;em&gt;callback&lt;/em&gt; for the specified &lt;em&gt;typenames&lt;/em&gt;. If a &lt;em&gt;callback&lt;/em&gt; function is specified, it is registered for the specified (fully-qualified) &lt;em&gt;typenames&lt;/em&gt;. If a callback was already registered for the given &lt;em&gt;typenames&lt;/em&gt;, the existing callback is removed before the new callback is added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed1010bb3ccb1753fff3049156985a776305fb5c" translate="yes" xml:space="preserve">
          <source>After selecting elements and creating a transition with &lt;a href=&quot;#selection_transition&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.transition&lt;/a&gt;, use the transition&amp;rsquo;s transformation methods to affect document content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d28b1a89a51d2f6614bd853304b9baff9f28a47" translate="yes" xml:space="preserve">
          <source>After selecting elements, use the selection&amp;rsquo;s transformation methods to affect document content. For example, to set the name attribute and color style of an anchor element:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ce68b85fe832af2f999a70df115b81a9e2caf4" translate="yes" xml:space="preserve">
          <source>Airy&amp;rsquo;s minimum-error azimuthal projection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="525f584f485cbbcfa635b6de6516506309357734" translate="yes" xml:space="preserve">
          <source>Alan K. Philbrick&amp;rsquo;s interrupted &lt;a href=&quot;#geoSinuMollweide&quot;&gt;sinu-Mollweide projection&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab134980561799438f9737f13321a37b7aa0c5f8" translate="yes" xml:space="preserve">
          <source>Albers&amp;rsquo; &lt;a href=&quot;#geoConicEqualArea&quot;&gt;equal-area conic projection&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1556f6809f1a34d3cea213ff245f930c65f77dfa" translate="yes" xml:space="preserve">
          <source>Albers&amp;rsquo; conic equal-area projection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f98af889bcca2080fc4f7397958b3203d6d12e9" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#interval_floor&quot;&gt;&lt;em&gt;interval&lt;/em&gt;.floor&lt;/a&gt;. For example, &lt;a href=&quot;#timeYear&quot;&gt;d3.timeYear&lt;/a&gt;(&lt;em&gt;date&lt;/em&gt;) and d3.timeYear.floor(&lt;em&gt;date&lt;/em&gt;) are equivalent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a57fb21975ca9ef055fc68ecaa4de021077d9d8" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#timeSunday&quot;&gt;d3.timeSunday&lt;/a&gt;; 7 days and typically 168 hours. Weeks in local time may range from 167 to 169 hours due on daylight saving.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6515c7a06dfa9d5b706814de4c155f05c033418" translate="yes" xml:space="preserve">
          <source>Aliases for &lt;a href=&quot;#timeDay&quot;&gt;d3.timeDay&lt;/a&gt;.&lt;a href=&quot;#interval_range&quot;&gt;range&lt;/a&gt; and &lt;a href=&quot;#timeDay&quot;&gt;d3.utcDay&lt;/a&gt;.&lt;a href=&quot;#interval_range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="959547af6c32118a7ceafecd15b89d694512f847" translate="yes" xml:space="preserve">
          <source>Aliases for &lt;a href=&quot;#timeFriday&quot;&gt;d3.timeFriday&lt;/a&gt;.&lt;a href=&quot;#interval_range&quot;&gt;range&lt;/a&gt; and &lt;a href=&quot;#timeFriday&quot;&gt;d3.utcFriday&lt;/a&gt;.&lt;a href=&quot;#interval_range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edbfe5d8d4b5ef8700789f30405ed23374d9d2e3" translate="yes" xml:space="preserve">
          <source>Aliases for &lt;a href=&quot;#timeHour&quot;&gt;d3.timeHour&lt;/a&gt;.&lt;a href=&quot;#interval_range&quot;&gt;range&lt;/a&gt; and &lt;a href=&quot;#timeHour&quot;&gt;d3.utcHour&lt;/a&gt;.&lt;a href=&quot;#interval_range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="530f79c3cd328df525c9d2361d47fe9026432015" translate="yes" xml:space="preserve">
          <source>Aliases for &lt;a href=&quot;#timeMillisecond&quot;&gt;d3.timeMillisecond&lt;/a&gt;.&lt;a href=&quot;#interval_range&quot;&gt;range&lt;/a&gt; and &lt;a href=&quot;#timeMillisecond&quot;&gt;d3.utcMillisecond&lt;/a&gt;.&lt;a href=&quot;#interval_range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d2df2991ac94851bc487d5a10f605047f0cf13c" translate="yes" xml:space="preserve">
          <source>Aliases for &lt;a href=&quot;#timeMinute&quot;&gt;d3.timeMinute&lt;/a&gt;.&lt;a href=&quot;#interval_range&quot;&gt;range&lt;/a&gt; and &lt;a href=&quot;#timeMinute&quot;&gt;d3.utcMinute&lt;/a&gt;.&lt;a href=&quot;#interval_range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ac88c9b4402c79b19b100775c1c6cf5a18fa043" translate="yes" xml:space="preserve">
          <source>Aliases for &lt;a href=&quot;#timeMonday&quot;&gt;d3.timeMonday&lt;/a&gt;.&lt;a href=&quot;#interval_range&quot;&gt;range&lt;/a&gt; and &lt;a href=&quot;#timeMonday&quot;&gt;d3.utcMonday&lt;/a&gt;.&lt;a href=&quot;#interval_range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7c0fcd496d4f6ba8731d4a16b7388ba3c647532" translate="yes" xml:space="preserve">
          <source>Aliases for &lt;a href=&quot;#timeMonth&quot;&gt;d3.timeMonth&lt;/a&gt;.&lt;a href=&quot;#interval_range&quot;&gt;range&lt;/a&gt; and &lt;a href=&quot;#timeMonth&quot;&gt;d3.utcMonth&lt;/a&gt;.&lt;a href=&quot;#interval_range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aafbc2cf22dc4c2d318b7fa1c4c4573c4d6e5671" translate="yes" xml:space="preserve">
          <source>Aliases for &lt;a href=&quot;#timeSaturday&quot;&gt;d3.timeSaturday&lt;/a&gt;.&lt;a href=&quot;#interval_range&quot;&gt;range&lt;/a&gt; and &lt;a href=&quot;#timeSaturday&quot;&gt;d3.utcSaturday&lt;/a&gt;.&lt;a href=&quot;#interval_range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="397c3af1775f98d84e24599238b68163a141f0f0" translate="yes" xml:space="preserve">
          <source>Aliases for &lt;a href=&quot;#timeSecond&quot;&gt;d3.timeSecond&lt;/a&gt;.&lt;a href=&quot;#interval_range&quot;&gt;range&lt;/a&gt; and &lt;a href=&quot;#timeSecond&quot;&gt;d3.utcSecond&lt;/a&gt;.&lt;a href=&quot;#interval_range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0f87958141ee57306c0a509a667caae907784cd" translate="yes" xml:space="preserve">
          <source>Aliases for &lt;a href=&quot;#timeSunday&quot;&gt;d3.timeSunday&lt;/a&gt;.&lt;a href=&quot;#interval_range&quot;&gt;range&lt;/a&gt; and &lt;a href=&quot;#timeSunday&quot;&gt;d3.utcSunday&lt;/a&gt;.&lt;a href=&quot;#interval_range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6a988d0340abbc8facee9bf0b27b9ec637d767c" translate="yes" xml:space="preserve">
          <source>Aliases for &lt;a href=&quot;#timeThursday&quot;&gt;d3.timeThursday&lt;/a&gt;.&lt;a href=&quot;#interval_range&quot;&gt;range&lt;/a&gt; and &lt;a href=&quot;#timeThursday&quot;&gt;d3.utcThursday&lt;/a&gt;.&lt;a href=&quot;#interval_range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b75fd5fe57a3ae903305dae03b03b4e8f1326e9" translate="yes" xml:space="preserve">
          <source>Aliases for &lt;a href=&quot;#timeTuesday&quot;&gt;d3.timeTuesday&lt;/a&gt;.&lt;a href=&quot;#interval_range&quot;&gt;range&lt;/a&gt; and &lt;a href=&quot;#timeTuesday&quot;&gt;d3.utcTuesday&lt;/a&gt;.&lt;a href=&quot;#interval_range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="585fbe7ccf248294aafdb634f8b184e2320710ca" translate="yes" xml:space="preserve">
          <source>Aliases for &lt;a href=&quot;#timeWednesday&quot;&gt;d3.timeWednesday&lt;/a&gt;.&lt;a href=&quot;#interval_range&quot;&gt;range&lt;/a&gt; and &lt;a href=&quot;#timeWednesday&quot;&gt;d3.utcWednesday&lt;/a&gt;.&lt;a href=&quot;#interval_range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec28013782d0f724734c20468174c4c3ab2a7234" translate="yes" xml:space="preserve">
          <source>Aliases for &lt;a href=&quot;#timeWeek&quot;&gt;d3.timeWeek&lt;/a&gt;.&lt;a href=&quot;#interval_range&quot;&gt;range&lt;/a&gt; and &lt;a href=&quot;#timeWeek&quot;&gt;d3.utcWeek&lt;/a&gt;.&lt;a href=&quot;#interval_range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ce7a04c1e6d6bac5999a8f2fd4918fe8453b6af" translate="yes" xml:space="preserve">
          <source>Aliases for &lt;a href=&quot;#timeYear&quot;&gt;d3.timeYear&lt;/a&gt;.&lt;a href=&quot;#interval_range&quot;&gt;range&lt;/a&gt; and &lt;a href=&quot;#timeYear&quot;&gt;d3.utcYear&lt;/a&gt;.&lt;a href=&quot;#interval_range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6124a484237dd22f0916a9e10c03afb87bac84c9" translate="yes" xml:space="preserve">
          <source>All colors now have opacity exposed as &lt;em&gt;color&lt;/em&gt;.opacity, which is a number in [0, 1]. You can pass an optional opacity argument to the color space constructors &lt;a href=&quot;../../../d3-color#rgb&quot;&gt;d3.rgb&lt;/a&gt;, &lt;a href=&quot;../../../d3-color#hsl&quot;&gt;d3.hsl&lt;/a&gt;, &lt;a href=&quot;../../../d3-color#lab&quot;&gt;d3.lab&lt;/a&gt;, &lt;a href=&quot;../../../d3-color#hcl&quot;&gt;d3.hcl&lt;/a&gt; or &lt;a href=&quot;../../../d3-color#cubehelix&quot;&gt;d3.cubehelix&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45c73099a9e20ccef7ac63d26f707c71823e94b0" translate="yes" xml:space="preserve">
          <source>All fields on each row object will be coerced to strings. For more control over which and how fields are formatted, first map &lt;em&gt;rows&lt;/em&gt; to an array of array of string, and then use &lt;a href=&quot;#dsv_formatRows&quot;&gt;&lt;em&gt;dsv&lt;/em&gt;.formatRows&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a11cfa72a607160834069fe4c548f0470c0acb4e" translate="yes" xml:space="preserve">
          <source>Allen K. Philbrick&amp;rsquo;s Sinu-Mollweide projection. See also the &lt;a href=&quot;#interruptedSinuMollweide&quot;&gt;interrupted form&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b92b79dc0846121a0216c222d524c8248846ed59" translate="yes" xml:space="preserve">
          <source>Allows native drag-and-drop and text selection on the specified &lt;em&gt;window&lt;/em&gt;; undoes the effect of &lt;a href=&quot;#dragDisable&quot;&gt;d3.dragDisable&lt;/a&gt;. This method is intended to be called on mouseup, preceded by &lt;a href=&quot;#dragDisable&quot;&gt;d3.dragDisable&lt;/a&gt; on mousedown. If &lt;em&gt;noclick&lt;/em&gt; is true, this method also temporarily suppresses click events. The suppression of click events expires after a zero-millisecond timeout, such that it only suppress the click event that would immediately follow the current mouseup event, if any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0e0771b1c1b567fcc34693d5ccd31e6ffb3f076" translate="yes" xml:space="preserve">
          <source>Also renamed for consistency:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f382c335c17c4fbafec481a83a4c6d3d7c67e4d" translate="yes" xml:space="preserve">
          <source>Alternatively, pass a test function to &lt;a href=&quot;d3-time#interval_filter&quot;&gt;&lt;em&gt;interval&lt;/em&gt;.filter&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f93851cba6398809ffbd05d57697e5137223468" translate="yes" xml:space="preserve">
          <source>Alternatively, the container may be specified as the element directly, such as &lt;code&gt;drag.container(canvas)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58b6750c93f96466bda6c3058ed6b934dd14f16f" translate="yes" xml:space="preserve">
          <source>Alternatively, use &lt;a href=&quot;#zoom_filter&quot;&gt;&lt;em&gt;zoom&lt;/em&gt;.filter&lt;/a&gt; for greater control over which events can initiate zoom gestures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f798554c0d0d98b42c67145335c06664bbf8d944" translate="yes" xml:space="preserve">
          <source>Alternatively, you can pass a function which returns an object, allowing you to share some computational effort across multiple attributes, or to determine which attribute to set dynamically:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12206e1caf7b170624684396b9a61c4cb8ede587" translate="yes" xml:space="preserve">
          <source>Although continuous scales typically have two values each in their domain and range, specifying more than two values produces a piecewise scale. For example, to create a &lt;a href=&quot;#diverging-scales&quot;&gt;diverging color scale&lt;/a&gt; that interpolates between white and red for negative values, and white and green for positive values, say:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20af8fd4755762f524e7810b8b1ce5e22b626a01" translate="yes" xml:space="preserve">
          <source>Although somewhat unusual, this default behavior has the benefit of providing both local and global context: for example, formatting a sequence of ticks as [11 PM, Mon 07, 01 AM] reveals information about hours, dates, and day simultaneously, rather than just the hours [11 PM, 12 AM, 01 AM]. See &lt;a href=&quot;d3-time-format&quot;&gt;d3-time-format&lt;/a&gt; if you&amp;rsquo;d like to roll your own conditional time format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5120470125873bb3d4889dcc30c8b32b1cfebda9" translate="yes" xml:space="preserve">
          <source>Although the data-join can be used simply to create (to &lt;em&gt;enter&lt;/em&gt;) a set of elements corresponding to data, more generally the data-join is designed to let you create, destroy or update elements as needed so that the resulting DOM corresponds to the new data. The data-join lets you do this efficiently by executing only the minimum necessary operations on each state of element (entering, updating, or exiting), and allows you to declare concise animated transitions between states as well. Here is a simple example of the &lt;a href=&quot;http://bl.ocks.org/mbostock/3808218&quot;&gt;General Update Pattern&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afa30269d2c1758dcb3fda24f1ba5bc1077b46fd" translate="yes" xml:space="preserve">
          <source>An Uint64Array [&lt;em&gt;vx0&lt;/em&gt;, &lt;em&gt;vy0&lt;/em&gt;, &lt;em&gt;wx0&lt;/em&gt;, &lt;em&gt;wy0&lt;/em&gt;, &amp;hellip;] where each non-zero quadruple describes an open (infinite) cell on the outer hull, giving the directions of two open half-lines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="110bc16a342e02e3318d081595b013710539719e" translate="yes" xml:space="preserve">
          <source>An alias for &lt;a href=&quot;#locale_format&quot;&gt;&lt;em&gt;locale&lt;/em&gt;.format&lt;/a&gt; on the &lt;a href=&quot;#formatDefaultLocale&quot;&gt;default locale&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="306242d86d890509e9916b0d012622e6cfc3968c" translate="yes" xml:space="preserve">
          <source>An alias for &lt;a href=&quot;#locale_format&quot;&gt;&lt;em&gt;locale&lt;/em&gt;.format&lt;/a&gt; on the &lt;a href=&quot;#timeFormatDefaultLocale&quot;&gt;default locale&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a6290bcd3d17d68516b220276e53defe3dd9b4b" translate="yes" xml:space="preserve">
          <source>An alias for &lt;a href=&quot;#locale_formatPrefix&quot;&gt;&lt;em&gt;locale&lt;/em&gt;.formatPrefix&lt;/a&gt; on the &lt;a href=&quot;#formatDefaultLocale&quot;&gt;default locale&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06082b391f0803d8018f913ae895eb6e800fbf48" translate="yes" xml:space="preserve">
          <source>An alias for &lt;a href=&quot;#locale_parse&quot;&gt;&lt;em&gt;locale&lt;/em&gt;.parse&lt;/a&gt; on the &lt;a href=&quot;#timeFormatDefaultLocale&quot;&gt;default locale&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e7665fbc3206dbc03c66a07425494d142c2b3ee" translate="yes" xml:space="preserve">
          <source>An alias for &lt;a href=&quot;#locale_utcFormat&quot;&gt;&lt;em&gt;locale&lt;/em&gt;.utcFormat&lt;/a&gt; on the &lt;a href=&quot;#timeFormatDefaultLocale&quot;&gt;default locale&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a615209739c1bcc54a47bee449475f5accb02b35" translate="yes" xml:space="preserve">
          <source>An alias for &lt;a href=&quot;#locale_utcParse&quot;&gt;&lt;em&gt;locale&lt;/em&gt;.utcParse&lt;/a&gt; on the &lt;a href=&quot;#timeFormatDefaultLocale&quot;&gt;default locale&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dd0b302c727b633b7362c5ec0fa2e04faf85da5" translate="yes" xml:space="preserve">
          <source>An alias for &lt;a href=&quot;#voronoi_extent&quot;&gt;&lt;em&gt;voronoi&lt;/em&gt;.extent&lt;/a&gt; where the minimum &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; of the extent are ⟨0,0⟩. Equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7c4c96aa6eb73747cacab179719ffe4db3fb585" translate="yes" xml:space="preserve">
          <source>An arbitrary &lt;em&gt;node&lt;/em&gt; on the convex hull. The convex hull is represented as a linked list of nodes, which each &lt;em&gt;node&lt;/em&gt; being an object with the following properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d1a834af5d298611ba6db4f52fb90796ccde876" translate="yes" xml:space="preserve">
          <source>An area, defined by a bounding topline and baseline, as in an area chart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8ede66d69c3545c5403e8dec169ec19a5c3a97e" translate="yes" xml:space="preserve">
          <source>An array containing the set of all built-in symbol types: &lt;a href=&quot;#symbolCircle&quot;&gt;circle&lt;/a&gt;, &lt;a href=&quot;#symbolCross&quot;&gt;cross&lt;/a&gt;, &lt;a href=&quot;#symbolDiamond&quot;&gt;diamond&lt;/a&gt;, &lt;a href=&quot;#symbolSquare&quot;&gt;square&lt;/a&gt;, &lt;a href=&quot;#symbolStar&quot;&gt;star&lt;/a&gt;, &lt;a href=&quot;#symbolTriangle&quot;&gt;triangle&lt;/a&gt;, and &lt;a href=&quot;#symbolWye&quot;&gt;wye&lt;/a&gt;. Useful for constructing the range of an &lt;a href=&quot;d3-scale#ordinal-scales&quot;&gt;ordinal scale&lt;/a&gt; should you wish to use a shape encoding for categorical data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ede73704982bbc8336521f5b38e88fd0ac14758" translate="yes" xml:space="preserve">
          <source>An array of eight categorical colors represented as RGB hexadecimal strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ec2e1c6531d22eac02d2f7a5a48961f854a4623" translate="yes" xml:space="preserve">
          <source>An array of nine categorical colors represented as RGB hexadecimal strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52acf0b459b9ba47bf0bb5e0c8e6276c8bbc3eb3" translate="yes" xml:space="preserve">
          <source>An array of ten categorical colors represented as RGB hexadecimal strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f0daf16d6b4b0945e067afb773f789ac455bb6f" translate="yes" xml:space="preserve">
          <source>An array of twelve categorical colors represented as RGB hexadecimal strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="359efdd893d66fd502be584a66844f539d1ed2a1" translate="yes" xml:space="preserve">
          <source>An axis consists of a &lt;a href=&quot;https://www.w3.org/TR/SVG/paths.html#PathElement&quot;&gt;path element&lt;/a&gt; of class &amp;ldquo;domain&amp;rdquo; representing the extent of the scale&amp;rsquo;s domain, followed by transformed &lt;a href=&quot;https://www.w3.org/TR/SVG/struct.html#Groups&quot;&gt;g elements&lt;/a&gt; of class &amp;ldquo;tick&amp;rdquo; representing each of the scale&amp;rsquo;s ticks. Each tick has a &lt;a href=&quot;https://www.w3.org/TR/SVG/shapes.html#LineElement&quot;&gt;line element&lt;/a&gt; to draw the tick line, and a &lt;a href=&quot;https://www.w3.org/TR/SVG/text.html#TextElement&quot;&gt;text element&lt;/a&gt; for the tick label. For example, here is a typical bottom-oriented axis:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="658152905db32a44ffa2f4f3a2088d3a7c12255a" translate="yes" xml:space="preserve">
          <source>An efficient queue for managing thousands of concurrent animations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c1be66001e8dfefbf74abd114401b1f8ec5ae74" translate="yes" xml:space="preserve">
          <source>An interrupted &lt;a href=&quot;#geoSinusoidal&quot;&gt;sinusoidal projection&lt;/a&gt; with asymmetrical lobe boundaries that emphasize land masses over oceans, after the Swedish</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e73fd4fe2a7e41962087dfee0efe005bc552a8b" translate="yes" xml:space="preserve">
          <source>An optional &lt;em&gt;accessor&lt;/em&gt; function may be specified, which is equivalent to calling &lt;em&gt;array&lt;/em&gt;.map(&lt;em&gt;accessor&lt;/em&gt;) before computing the quantile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c0ba51c374c4291f89a76797be77b31ae1c2957" translate="yes" xml:space="preserve">
          <source>An optional &lt;em&gt;count&lt;/em&gt; may be specified to affect how many ticks are generated. If &lt;em&gt;count&lt;/em&gt; is not specified, it defaults to 10. The specified &lt;em&gt;count&lt;/em&gt; is only a hint; the scale may return more or fewer values depending on the domain. For example, to create ten default ticks, say:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eefeaa0d56e561dd89a62365d713aa34533c3b9" translate="yes" xml:space="preserve">
          <source>An optional &lt;em&gt;options&lt;/em&gt; object may specify characteristics about the event listener, such as whether it is capturing or passive; see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener&quot;&gt;&lt;em&gt;element&lt;/em&gt;.addEventListener&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b506c98429cd0230a684b438ac4bcc69a3758a4" translate="yes" xml:space="preserve">
          <source>An optional &lt;em&gt;row&lt;/em&gt; conversion function may be specified to map and filter row objects to a more-specific representation; see &lt;a href=&quot;d3-dsv#dsv_parse&quot;&gt;&lt;em&gt;dsv&lt;/em&gt;.parse&lt;/a&gt; for details. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ca43c441a96958feac8d705135f3a32fb437dda" translate="yes" xml:space="preserve">
          <source>An optional &lt;em&gt;specifier&lt;/em&gt; allows a &lt;a href=&quot;d3-format#locale_format&quot;&gt;custom format&lt;/a&gt; where the precision of the format is automatically set by the scale as appropriate for the tick interval. For example, to format percentage change, you might say:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24921a6591dd4668ec6c68dcfda16516cb913a23" translate="yes" xml:space="preserve">
          <source>An optional tick &lt;em&gt;count&lt;/em&gt; argument allows greater control over the step size used to extend the bounds, guaranteeing that the returned &lt;a href=&quot;#time_ticks&quot;&gt;ticks&lt;/a&gt; will exactly cover the domain. Alternatively, a &lt;a href=&quot;d3-time#intervals&quot;&gt;time &lt;em&gt;interval&lt;/em&gt;&lt;/a&gt; may be specified to explicitly set the ticks. If an &lt;em&gt;interval&lt;/em&gt; is specified, an optional &lt;em&gt;step&lt;/em&gt; may also be specified to skip some ticks. For example, &lt;code&gt;time.nice(d3.timeSecond, 10)&lt;/code&gt; will extend the domain to an even ten seconds (0, 10, 20,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa79b8dd1f9dcb4ecf516de2cd51de3d8f252f4c" translate="yes" xml:space="preserve">
          <source>And finally &lt;strong&gt;iteration methods&lt;/strong&gt; that apply functions to elements in the array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6476db20d1a2ad7ce3a1343b448ebfc62c0c949" translate="yes" xml:space="preserve">
          <source>And get this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15aa87cc63a0326ef5e878fe6ab6af0ab562c080" translate="yes" xml:space="preserve">
          <source>And here is a density contour plot showing the relationship between the weight and price of 53,940 diamonds:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd21179e471067255e31c8a35037ea42bc51b5d1" translate="yes" xml:space="preserve">
          <source>And the following code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc300a018dfe0e8b834279500b7180d1018d4bd3" translate="yes" xml:space="preserve">
          <source>And then applied as &lt;em&gt;bisectDate&lt;/em&gt;(&lt;em&gt;array&lt;/em&gt;, &lt;em&gt;date&lt;/em&gt;), returning an index. Note that the comparator is always passed the search value &lt;em&gt;x&lt;/em&gt; as the second argument. Use a comparator rather than an accessor if you want values to be sorted in an order different than natural order, such as in descending rather than ascending order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9d7f20385c94a880d22a67ca0d332062ecae3bd" translate="yes" xml:space="preserve">
          <source>And then to use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="138cc864532933a54922daf6fade9f8e004431c6" translate="yes" xml:space="preserve">
          <source>And you got this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbb4f9a0e1e48826f73ed937d19a2dabeb898492" translate="yes" xml:space="preserve">
          <source>Animated transitions for &lt;a href=&quot;#selections&quot;&gt;selections&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23b04267d1988a2fd2ba0e3846eefcd8319e65a1" translate="yes" xml:space="preserve">
          <source>Any &lt;a href=&quot;#projection_clipExtent&quot;&gt;clip extent&lt;/a&gt; is ignored when determining the new scale and translate. The &lt;a href=&quot;#projection_precision&quot;&gt;precision&lt;/a&gt; used to compute the bounding box of the given &lt;em&gt;object&lt;/em&gt; is computed at an effective scale of 150.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73309bbb06aba7aeb2950d062da813ca97445b94" translate="yes" xml:space="preserve">
          <source>Any additional arguments provided to &lt;a href=&quot;#queue_defer&quot;&gt;&lt;em&gt;queue&lt;/em&gt;.defer&lt;/a&gt; are automatically passed along to the task function before the callback argument. You can also use method chaining for conciseness, avoiding the need for a local variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8949ef695f6eabb7474971b41f52f9ceb81fbe7" translate="yes" xml:space="preserve">
          <source>Any existing circles (that are descendants of the &lt;code&gt;svg&lt;/code&gt; selection) are &lt;a href=&quot;#selection_selectAll&quot;&gt;selected&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2e61525e5ad4aea71b90e0b7b3bd748ddef3554" translate="yes" xml:space="preserve">
          <source>Any existing circles that do &lt;em&gt;not&lt;/em&gt; match new data&amp;mdash;the &lt;em&gt;exit&lt;/em&gt; selection&amp;mdash;are removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b718d19a52bb0eb6cac4091d806f326bd98055f7" translate="yes" xml:space="preserve">
          <source>Any threshold values outside the &lt;a href=&quot;#histogram_domain&quot;&gt;domain&lt;/a&gt; are ignored. The first &lt;em&gt;bin&lt;/em&gt;.x0 is always equal to the minimum domain value, and the last &lt;em&gt;bin&lt;/em&gt;.x1 is always equal to the maximum domain value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17ef0695bac5a748391040dfd4b7967bb5150551" translate="yes" xml:space="preserve">
          <source>Apples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5249727b1448503e2e306c1422228b3d4689945a" translate="yes" xml:space="preserve">
          <source>Applies a zero baseline and normalizes the values for each point such that the topline is always one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45a67ddff23359b5705f010d37bc832266d3e6e9" translate="yes" xml:space="preserve">
          <source>Applies a zero baseline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c033923da694c020006a9f6278677197907db798" translate="yes" xml:space="preserve">
          <source>Applies the brush to the specified &lt;em&gt;group&lt;/em&gt;, which must be a &lt;a href=&quot;d3-selection&quot;&gt;selection&lt;/a&gt; of SVG &lt;a href=&quot;https://www.w3.org/TR/SVG/struct.html#Groups&quot;&gt;G elements&lt;/a&gt;. This function is typically not invoked directly, and is instead invoked via &lt;a href=&quot;d3-selection#selection_call&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.call&lt;/a&gt;. For example, to render a brush:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32990945782e0bfcf65b32b906b405505a604932" translate="yes" xml:space="preserve">
          <source>Applies the nest operator to the specified &lt;em&gt;array&lt;/em&gt;, returning a nested &lt;a href=&quot;#map&quot;&gt;map&lt;/a&gt;. Each entry in the returned map corresponds to a distinct key value returned by the first key function. The entry value depends on the number of registered key functions: if there is an additional key, the value is another map; otherwise, the value is the array of elements filtered from the input &lt;em&gt;array&lt;/em&gt; that have the given key value. If no keys are defined, returns the input &lt;em&gt;array&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f008c1eede688954a9da61d58d3b0167f9fcaa24" translate="yes" xml:space="preserve">
          <source>Applies the nest operator to the specified &lt;em&gt;array&lt;/em&gt;, returning a nested object. Each entry in the returned associative array corresponds to a distinct key value returned by the first key function. The entry value depends on the number of registered key functions: if there is an additional key, the value is another associative array; otherwise, the value is the array of elements filtered from the input &lt;em&gt;array&lt;/em&gt; that have the given key value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dfcf4a5a648beb5c933aea7a7cdf5769dd77ea1" translate="yes" xml:space="preserve">
          <source>Applies the nest operator to the specified &lt;em&gt;array&lt;/em&gt;, returning an array of key-values entries. Conceptually, this is similar to applying &lt;a href=&quot;#map_entries&quot;&gt;&lt;em&gt;map&lt;/em&gt;.entries&lt;/a&gt; to the associative array returned by &lt;a href=&quot;#nest_map&quot;&gt;&lt;em&gt;nest&lt;/em&gt;.map&lt;/a&gt;, but it applies to every level of the hierarchy rather than just the first (outermost) level. Each entry in the returned array corresponds to a distinct key value returned by the first key function. The entry value depends on the number of registered key functions: if there is an additional key, the value is another nested array of entries; otherwise, the value is the array of elements filtered from the input &lt;em&gt;array&lt;/em&gt; that have the given key value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdcd7cc9ff6c87e607b9a02d64a915e7b7a2955e" translate="yes" xml:space="preserve">
          <source>Applies this drag behavior to the specified &lt;a href=&quot;d3-selection&quot;&gt;&lt;em&gt;selection&lt;/em&gt;&lt;/a&gt;. This function is typically not invoked directly, and is instead invoked via &lt;a href=&quot;d3-selection#selection_call&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.call&lt;/a&gt;. For example, to instantiate a drag behavior and apply it to a selection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cde2a5aa0d7f0af48b012fe14769ab45c0e0e12" translate="yes" xml:space="preserve">
          <source>Applies this force, optionally observing the specified &lt;em&gt;alpha&lt;/em&gt;. Typically, the force is applied to the array of nodes previously passed to &lt;a href=&quot;#force_initialize&quot;&gt;&lt;em&gt;force&lt;/em&gt;.initialize&lt;/a&gt;, however, some forces may apply to a subset of nodes, or behave differently. For example, &lt;a href=&quot;#links&quot;&gt;d3.forceLink&lt;/a&gt; applies to the source and target of each link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31e1ccbcddbcedc69bf733d508ebca853682751c" translate="yes" xml:space="preserve">
          <source>Applies this zoom behavior to the specified &lt;a href=&quot;d3-selection&quot;&gt;&lt;em&gt;selection&lt;/em&gt;&lt;/a&gt;, binding the necessary event listeners to allow panning and zooming, and initializing the &lt;a href=&quot;#zoom-transforms&quot;&gt;zoom transform&lt;/a&gt; on each selected element to the identity transform if not already defined. This function is typically not invoked directly, and is instead invoked via &lt;a href=&quot;d3-selection#selection_call&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.call&lt;/a&gt;. For example, to instantiate a zoom behavior and apply it to a selection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="644012b11ca7453e270693dcf16c45555e1d7494" translate="yes" xml:space="preserve">
          <source>Applying the drag behavior also sets the &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/AppleApplications/Reference/SafariWebContent/AdjustingtheTextSize/AdjustingtheTextSize.html#//apple_ref/doc/uid/TP40006510-SW5&quot;&gt;-webkit-tap-highlight-color&lt;/a&gt; style to transparent, disabling the tap highlight on iOS. If you want a different tap highlight color, remove or re-apply this style after applying the drag behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a9e9816503b05fa473223231bc355ef9d24407" translate="yes" xml:space="preserve">
          <source>Applying the zoom behavior also sets the &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/AppleApplications/Reference/SafariWebContent/AdjustingtheTextSize/AdjustingtheTextSize.html#//apple_ref/doc/uid/TP40006510-SW5&quot;&gt;-webkit-tap-highlight-color&lt;/a&gt; style to transparent, disabling the tap highlight on iOS. If you want a different tap highlight color, remove or re-apply this style after applying the drag behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5103cbc412090de9918662743710b4664f72774a" translate="yes" xml:space="preserve">
          <source>Arcs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14ce09a8dd4e0fb14df9e289cecd45f16ac2e614" translate="yes" xml:space="preserve">
          <source>Areas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="107004472b7ba4e5e31f3082ee1fb5a1239eec61" translate="yes" xml:space="preserve">
          <source>Array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81c3dc1e7d5ad0aa0098cf28442d71f9f9624640" translate="yes" xml:space="preserve">
          <source>Array manipulation, ordering, searching, summarizing, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b90cc9bfd23567a2ff5ba1f00e7c63ca6da8755e" translate="yes" xml:space="preserve">
          <source>Arrays</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2ad56e2c55c9f3bbce7a95bf56f346bb2c208fa" translate="yes" xml:space="preserve">
          <source>Arrays (d3-array)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a2ee44036ba858861078b9cca1ea9ad7db58717" translate="yes" xml:space="preserve">
          <source>As a result of these temporal peculiarities, it can be difficult to perform seemingly-trivial tasks. For example, if you want to compute the number of days that have passed between two dates, you can&amp;rsquo;t simply subtract and divide by 24 hours (86,400,000 ms):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f16a23982028962827183258f37691583ca47dd" translate="yes" xml:space="preserve">
          <source>As an alternative to using JSON to represent hierarchical data (such as the &amp;ldquo;flare.json format&amp;rdquo; used by many D3 examples), the new &lt;a href=&quot;../../../d3-hierarchy#stratify&quot;&gt;d3.stratify&lt;/a&gt; operator simplifies the conversion of tabular data to hierarchical data! This is convenient if you already have data in a tabular format, such as the result of a SQL query or a CSV file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dba2e5d8a25d0db7851fe50d2b653472e27dc39" translate="yes" xml:space="preserve">
          <source>As before, you can customize the axis appearance either by applying stylesheets or by modifying the axis elements. The default appearance has been changed slightly to offset the axis by a half-pixel; this fixes a crisp-edges rendering issue on Safari where the axis would be drawn two-pixels thick.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaf2ed1c182799c6b757f8a24be5b78bf881706a" translate="yes" xml:space="preserve">
          <source>As before, you can load optional plugins on top of the default bundle, such as &lt;a href=&quot;../../../d3-scale-chromatic&quot;&gt;ColorBrewer scales&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f691a0624a31211d5445fb45e66c93d3aa9c0ca9" translate="yes" xml:space="preserve">
          <source>As described in the preceding paragraphs, the &amp;ldquo;matching&amp;rdquo; logic is determined by the key function passed to &lt;em&gt;selection&lt;/em&gt;.data; since no key function is used in the above code sample, the elements and data are joined by index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8d54fc2cd6f60c61c4921b198365e51e0672670" translate="yes" xml:space="preserve">
          <source>As does this one:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc109e9a8f1c13c734fd8638896ee90db93319c0" translate="yes" xml:space="preserve">
          <source>As log(0) = -&amp;infin;, a log scale domain must be &lt;strong&gt;strictly-positive or strictly-negative&lt;/strong&gt;; the domain must not include or cross zero. A log scale with a positive domain has a well-defined behavior for positive values, and a log scale with a negative domain has a well-defined behavior for negative values. (For a negative domain, input and output values are implicitly multiplied by -1.) The behavior of the scale is undefined if you pass a negative value to a log scale with a positive domain or vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9600b5d54528d3d724f52a3234b6d1e25d569ae" translate="yes" xml:space="preserve">
          <source>As with &lt;a href=&quot;#selections-d3-selection&quot;&gt;selections&lt;/a&gt; in 4.0, all transition callback functions now receive the standard arguments: the element&amp;rsquo;s datum (&lt;em&gt;d&lt;/em&gt;), the element&amp;rsquo;s index (&lt;em&gt;i&lt;/em&gt;), and the element&amp;rsquo;s group (&lt;em&gt;nodes&lt;/em&gt;), with &lt;em&gt;this&lt;/em&gt; as the element. This notably affects &lt;a href=&quot;../../../d3-transition#transition_attrTween&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.attrTween&lt;/a&gt; and &lt;a href=&quot;../../../d3-transition#transition_styleTween&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.styleTween&lt;/a&gt;, which no longer pass the &lt;em&gt;tween&lt;/em&gt; function the current attribute or style value as the third argument. The &lt;em&gt;transition&lt;/em&gt;.attrTween and &lt;em&gt;transition&lt;/em&gt;.styleTween methods can now be called in getter modes for debugging or to share tween definitions between transitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="699bb100255bdfd3b47d160ba583caa557d97c0e" translate="yes" xml:space="preserve">
          <source>As with other aspects of D3, these shapes are driven by data: each shape generator exposes accessors that control how the input data are mapped to a visual representation. For example, you might define a line generator for a time series by &lt;a href=&quot;d3-scale&quot;&gt;scaling&lt;/a&gt; fields of your data to fit the chart:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5232c3f8e82875f3a648fed7167b7ad023aea227" translate="yes" xml:space="preserve">
          <source>Assigns the array of &lt;em&gt;nodes&lt;/em&gt; to this force. This method is called when a force is bound to a simulation via &lt;a href=&quot;#simulation_force&quot;&gt;&lt;em&gt;simulation&lt;/em&gt;.force&lt;/a&gt; and when the simulation&amp;rsquo;s nodes change via &lt;a href=&quot;#simulation_nodes&quot;&gt;&lt;em&gt;simulation&lt;/em&gt;.nodes&lt;/a&gt;. A force may perform necessary work during initialization, such as evaluating per-node parameters, to avoid repeatedly performing work during each application of the force.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10503ebe45f30a8292e14843bc67740f9354905e" translate="yes" xml:space="preserve">
          <source>At the end of each &lt;a href=&quot;#simulation_tick&quot;&gt;tick&lt;/a&gt;, after the application of any forces, a node with a defined &lt;em&gt;node&lt;/em&gt;.fx has &lt;em&gt;node&lt;/em&gt;.x reset to this value and &lt;em&gt;node&lt;/em&gt;.vx set to zero; likewise, a node with a defined &lt;em&gt;node&lt;/em&gt;.fy has &lt;em&gt;node&lt;/em&gt;.y reset to this value and &lt;em&gt;node&lt;/em&gt;.vy set to zero. To unfix a node that was previously fixed, set &lt;em&gt;node&lt;/em&gt;.fx and &lt;em&gt;node&lt;/em&gt;.fy to null, or delete these properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a62ae755aa49beb2c12b403c5e9f16983a4366e" translate="yes" xml:space="preserve">
          <source>August&amp;rsquo;s epicycloidal conformal projection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="585f7a91b326cdce5beda25854fe773ebeab9acd" translate="yes" xml:space="preserve">
          <source>Awan</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d75f36f88797a19683a1b68037a0b63ba522f4c3" translate="yes" xml:space="preserve">
          <source>Axes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c56c0fafa3bbebfc6aee9d3329915d3c8f5d8f8" translate="yes" xml:space="preserve">
          <source>Axes (d3-axis)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="160bbfbc4dd8c077926d6ec6a7184e57212d85a3" translate="yes" xml:space="preserve">
          <source>Axis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="991568e563bbc81d8464f41ec54e375c17240d3e" translate="yes" xml:space="preserve">
          <source>Azimuthal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="635f6b9afeab39334c76b0222d39b4e730cc83b4" translate="yes" xml:space="preserve">
          <source>Azimuthal Projections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b063b096a701aea4d3d4c822dc712908d6ad069" translate="yes" xml:space="preserve">
          <source>Azimuthal projections project the sphere directly onto a plane.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c96853928d9b56e69d8e33babf7dfca8d3d35ba" translate="yes" xml:space="preserve">
          <source>Azura</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec" translate="yes" xml:space="preserve">
          <source>B</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="440519dfb8624f1f0b4d79b2954168616b59cfc3" translate="yes" xml:space="preserve">
          <source>Bananas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f1fffb09663c49597771681e92ba1656f734f06" translate="yes" xml:space="preserve">
          <source>Band Scales</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cec1cd647f097a826da02300f9d7c420daa8af9f" translate="yes" xml:space="preserve">
          <source>Band scales are like &lt;a href=&quot;#ordinal-scales&quot;&gt;ordinal scales&lt;/a&gt; except the output range is continuous and numeric. Discrete output values are automatically computed by the scale by dividing the continuous range into uniform bands. Band scales are typically used for bar charts with an ordinal or categorical dimension. The &lt;a href=&quot;#ordinal_unknown&quot;&gt;unknown value&lt;/a&gt; of a band scale is effectively undefined: they do not allow implicit domain construction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53645639a5ecd58eed09381925a4c0860632c376" translate="yes" xml:space="preserve">
          <source>Based on the chosen interpolator, &lt;em&gt;a&lt;/em&gt; is coerced to the suitable corresponding type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b5b06692510dfe94a2305b17505828933985abd" translate="yes" xml:space="preserve">
          <source>Before you can compute a hierarchical layout, you need a root node. If your data is already in a hierarchical format, such as JSON, you can pass it directly to &lt;a href=&quot;#hierarchy&quot;&gt;d3.hierarchy&lt;/a&gt;; otherwise, you can rearrange tabular data, such as comma-separated values (CSV), into a hierarchy using &lt;a href=&quot;#stratify&quot;&gt;d3.stratify&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e533919d30d59f01018849f8da0363c63913a28" translate="yes" xml:space="preserve">
          <source>Berghaus&amp;rsquo; star projection. The default center assumes the default &lt;a href=&quot;#berghaus_lobes&quot;&gt;lobe number&lt;/a&gt; of 5 and should be changed if a different number of lobes is used. Note: requires clipping to the sphere.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dada290bbd1dcfaaf7305a7135a99f1a94bc91a" translate="yes" xml:space="preserve">
          <source>Best of all, the drag behavior automatically unifies mouse and touch input, and avoids browser idiosyncrasies. When &lt;a href=&quot;https://www.w3.org/TR/pointerevents/&quot;&gt;Pointer Events&lt;/a&gt; are more widely available, the drag behavior will support those, too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1357d78cda5a2771334d5775c03a7ea2d86145b4" translate="yes" xml:space="preserve">
          <source>Bin discrete samples into continuous, non-overlapping intervals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f11d2a193a69188c708a579da1012a6e2353d0f0" translate="yes" xml:space="preserve">
          <source>Bogg&amp;rsquo;s interrupted &lt;a href=&quot;#geoBoggs&quot;&gt;eumorphic projection&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="816a90401ba45a0d61d4c5effa123ab36f8cc61c" translate="yes" xml:space="preserve">
          <source>Both &lt;em&gt;type&lt;/em&gt; and &lt;em&gt;before&lt;/em&gt; may instead be specified as functions which are evaluated for each selected element, in order, being passed the current datum (&lt;em&gt;d&lt;/em&gt;), the current index (&lt;em&gt;i&lt;/em&gt;), and the current group (&lt;em&gt;nodes&lt;/em&gt;), with &lt;em&gt;this&lt;/em&gt; as the current DOM element (&lt;em&gt;nodes&lt;/em&gt;[&lt;em&gt;i&lt;/em&gt;]). The &lt;em&gt;type&lt;/em&gt; function should return an element to be inserted; the &lt;em&gt;before&lt;/em&gt; function should return the child element before which the element should be inserted. For example, to append a DIV element to each paragraph:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6627c2ce8e9b387e9f44b6651ec65a39c54baf9f" translate="yes" xml:space="preserve">
          <source>Bounce easing, like a rubber ball.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c871c5ce06f775af300943dd4df1fe6c5d59fe" translate="yes" xml:space="preserve">
          <source>Breaking this down into discrete steps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25f085220c3450b46bf4643dd1659bd83227dbe9" translate="yes" xml:space="preserve">
          <source>Brush</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b8c541ec8035e9f571d41cc0eb7be9dceae7fd6" translate="yes" xml:space="preserve">
          <source>Brush Events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="761dc13b7fd2c4b798f080f4d7e4bff5757cc337" translate="yes" xml:space="preserve">
          <source>Brush interaction has been improved. By default, brushes now ignore right-clicks intended for the context menu; you can change this behavior using &lt;a href=&quot;../../../d3-brush#brush_filter&quot;&gt;&lt;em&gt;brush&lt;/em&gt;.filter&lt;/a&gt;. Brushes also ignore emulated mouse events on iOS. Holding down SHIFT (⇧) while brushing locks the &lt;em&gt;x&lt;/em&gt;- or &lt;em&gt;y&lt;/em&gt;-position of the brush. Holding down META (⌘) while clicking and dragging starts a new selection, rather than translating the existing selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe3f2cb1c03dd41a26942f8ab2450d837bba9e1" translate="yes" xml:space="preserve">
          <source>Brushes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82da4ee92145754f5b3ddf7b95e4be91bc291c36" translate="yes" xml:space="preserve">
          <source>Brushes (d3-brush)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd39f03a73affdf885d479062434b4639effc6d7" translate="yes" xml:space="preserve">
          <source>Brushes also support programmatic control. For example, you can listen to &lt;a href=&quot;#brush-events&quot;&gt;&lt;em&gt;end&lt;/em&gt; events&lt;/a&gt;, and then initiate a transition with &lt;a href=&quot;#brush_move&quot;&gt;&lt;em&gt;brush&lt;/em&gt;.move&lt;/a&gt; to snap the brush selection to semantic boundaries:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e70b4c4fcd5be7194dda95e9803b7d8d0aaf28b" translate="yes" xml:space="preserve">
          <source>Brushes no longer store the active brush selection (&lt;em&gt;i.e.&lt;/em&gt;, the highlighted region; the brush&amp;rsquo;s position) internally. The brush&amp;rsquo;s position is now stored on any elements to which the brush has been applied. The brush&amp;rsquo;s position is available as &lt;em&gt;event&lt;/em&gt;.selection within a brush event or by calling &lt;a href=&quot;../../../d3-brush#brushSelection&quot;&gt;d3.brushSelection&lt;/a&gt; on a given &lt;em&gt;element&lt;/em&gt;. To move the brush programmatically, use &lt;a href=&quot;../../../d3-brush#brush_move&quot;&gt;&lt;em&gt;brush&lt;/em&gt;.move&lt;/a&gt; with a given &lt;a href=&quot;#selections-d3-selection&quot;&gt;selection&lt;/a&gt; or &lt;a href=&quot;#transitions-d3-transition&quot;&gt;transition&lt;/a&gt;; see the &lt;a href=&quot;https://bl.ocks.org/mbostock/6232537&quot;&gt;brush snapping example&lt;/a&gt;. The &lt;em&gt;brush&lt;/em&gt;.event method has been removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6d83ce5a2db5958059272cd3a106bdd574e9605" translate="yes" xml:space="preserve">
          <source>Brushing is the interactive specification a one- or two-dimensional selected region using a pointing gesture, such as by clicking and dragging the mouse. Brushing is often used to select discrete elements, such as dots in a scatterplot or files on a desktop. It can also be used to zoom-in to a region of interest, or to select continuous regions for &lt;a href=&quot;http://square.github.io/crossfilter/&quot;&gt;cross-filtering data&lt;/a&gt; or live histograms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c6f202d4a852d4d9ab2ef3c7851791d6ef2653" translate="yes" xml:space="preserve">
          <source>Buckminster Fuller&amp;rsquo;s Airocean projection (also known as &amp;ldquo;Dymaxion&amp;rdquo;), based on a very specific arrangement of the icosahedron which allows continuous continent shapes. Fuller&amp;rsquo;s triangle transformation, as formulated by Robert W. Gray (and implemented by Philippe Rivi&amp;egrave;re), makes the projection almost equal-area.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6b4b42380bf5c621443feeda762b4217dc07ad7" translate="yes" xml:space="preserve">
          <source>But d3-format is much more than an alias for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toFixed&quot;&gt;number.toFixed&lt;/a&gt;! A few more examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1185f9e1da67fb8d4c5a756b407089ff81e04b02" translate="yes" xml:space="preserve">
          <source>But that&amp;rsquo;s not all! 4.0 now provides parameterized Catmull&amp;ndash;Rom splines as proposed by &lt;a href=&quot;http://www.cemyuksel.com/research/catmullrom_param/&quot;&gt;Yuksel &lt;em&gt;et al.&lt;/em&gt;&lt;/a&gt;. These are available as &lt;a href=&quot;../../../d3-shape#curveCatmullRom&quot;&gt;d3.curveCatmullRom&lt;/a&gt;, &lt;a href=&quot;../../../d3-shape#curveCatmullRomClosed&quot;&gt;d3.curveCatmullRomClosed&lt;/a&gt; and &lt;a href=&quot;../../../d3-shape#curveCatmullRomOpen&quot;&gt;d3.curveCatmullRomOpen&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40183395b6117914865020d88a4a29042ee6c82f" translate="yes" xml:space="preserve">
          <source>By convention, selection methods that return the current selection use &lt;em&gt;four&lt;/em&gt; spaces of indent, while methods that return a new selection use only &lt;em&gt;two&lt;/em&gt;. This helps reveal changes of context by making them stick out of the chain:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f59f06708aa535c119a0dd006521750e7a969313" translate="yes" xml:space="preserve">
          <source>By default, the SVG&amp;rsquo;s &lt;a href=&quot;#geo2svg_fill&quot;&gt;fill&lt;/a&gt; is set to none and the &lt;a href=&quot;#geo2svg_stroke&quot;&gt;stroke&lt;/a&gt; is set to black. The default &lt;a href=&quot;d3-geo#path_pointRadius&quot;&gt;point radius&lt;/a&gt; is 4.5. To override these values on a per-feature basis, the following &lt;a href=&quot;http://geojson.org/geojson-spec.html#feature-objects&quot;&gt;GeoJSON feature&lt;/a&gt; properties will be propagated to attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65f1c388835fb97f5f10904a1d8505aba044b778" translate="yes" xml:space="preserve">
          <source>By freezing time in the background, timers are effectively &amp;ldquo;unaware&amp;rdquo; of being backgrounded. It&amp;rsquo;s like nothing happened! 4.0 also now uses high-precision time (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Performance/now&quot;&gt;performance.now&lt;/a&gt;) where available; the current time is available as &lt;a href=&quot;../../../d3-timer#now&quot;&gt;d3.now&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28c9ae8743d4fea0dd0e45e2d1e35b17b1859fca" translate="yes" xml:space="preserve">
          <source>By setting &lt;em&gt;ordinal&lt;/em&gt;.unknown, you instead define the output value for unknown inputs. This is particularly useful for choropleth maps where you want to assign a color to missing data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab55d04e69becc3c0b3fa7a650c1b629dbded3f1" translate="yes" xml:space="preserve">
          <source>Byte-Order Marks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d98076cd8b002c4fbcfaf7c8863b0cd5863131b" translate="yes" xml:space="preserve">
          <source>Cain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="068db266e962548f2848f618310971c445b4ebaf" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;../../../d3-voronoi#_voronoi&quot;&gt;&lt;em&gt;voronoi&lt;/em&gt;&lt;/a&gt; now returns the full &lt;a href=&quot;../../../d3-voronoi#voronoi-diagrams&quot;&gt;Voronoi diagram&lt;/a&gt;, which includes topological information: each Voronoi edge exposes &lt;em&gt;edge&lt;/em&gt;.left and &lt;em&gt;edge&lt;/em&gt;.right specifying the sites on either side of the edge, and each Voronoi cell is defined as an array of these edges and a corresponding site. The Voronoi diagram can be used to efficiently compute both the Voronoi and Delaunay tessellations for a set of points: &lt;a href=&quot;../../../d3-voronoi#diagram_polygons&quot;&gt;&lt;em&gt;diagram&lt;/em&gt;.polygons&lt;/a&gt;, &lt;a href=&quot;../../../d3-voronoi#diagram_links&quot;&gt;&lt;em&gt;diagram&lt;/em&gt;.links&lt;/a&gt;, and &lt;a href=&quot;../../../d3-voronoi#diagram_triangles&quot;&gt;&lt;em&gt;diagram&lt;/em&gt;.triangles&lt;/a&gt;. The new topology is also useful in conjunction with TopoJSON; see the &lt;a href=&quot;https://bl.ocks.org/mbostock/cd52a201d7694eb9d890&quot;&gt;Voronoi topology example&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c729cd974d41cc7a7467ad55407d6fc3dad31354" translate="yes" xml:space="preserve">
          <source>Calls the specified &lt;em&gt;function&lt;/em&gt; for each entry in this map, passing the entry&amp;rsquo;s value and key as arguments, followed by the map itself. Returns undefined. The iteration order is arbitrary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67290489a7b56e15267b824d4a38051603981746" translate="yes" xml:space="preserve">
          <source>Calls the specified &lt;em&gt;function&lt;/em&gt; for each value in this set, passing the value as the first two arguments (for symmetry with &lt;a href=&quot;#map_each&quot;&gt;&lt;em&gt;map&lt;/em&gt;.each&lt;/a&gt;), followed by the set itself. Returns undefined. The iteration order is arbitrary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4f5ee7b1d2ed942c38712852f4b15ecd4f1b4e6" translate="yes" xml:space="preserve">
          <source>Can be rewritten in 4.0 as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8528ae94e2e148afb1dc7ce9973ecc62392671c1" translate="yes" xml:space="preserve">
          <source>Categorical</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40c4998fc3314ac5ad3509827d4c0ffa12f98508" translate="yes" xml:space="preserve">
          <source>Caution: avoid interpolating to or from the number zero when the interpolator is used to generate a string. When very small values are stringified, they may be converted to scientific notation, which is an invalid attribute or style property value in older browsers. For example, the number &lt;code&gt;0.0000001&lt;/code&gt; is converted to the string &lt;code&gt;&quot;1e-7&quot;&lt;/code&gt;. This is particularly noticeable with interpolating opacity. To avoid scientific notation, start or end the transition at 1e-6: the smallest value that is not stringified in scientific notation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a07ac5055f4543f985faef215520b920882efdc0" translate="yes" xml:space="preserve">
          <source>Caution: this method will not work with interpolators that do not return defensive copies of their output, such as &lt;a href=&quot;#interpolateArray&quot;&gt;d3.interpolateArray&lt;/a&gt;, &lt;a href=&quot;#interpolateDate&quot;&gt;d3.interpolateDate&lt;/a&gt; and &lt;a href=&quot;#interpolateObject&quot;&gt;d3.interpolateObject&lt;/a&gt;. For those interpolators, you must wrap the interpolator and create a copy for each returned value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3aeb0f15fd0bfb8c9be0d802b362d92d6fcba00" translate="yes" xml:space="preserve">
          <source>Caution: unlike many SVG attributes, CSS styles typically have associated units. For example, &lt;code&gt;3px&lt;/code&gt; is a valid stroke-width property value, while &lt;code&gt;3&lt;/code&gt; is not. Some browsers implicitly assign the &lt;code&gt;px&lt;/code&gt; (pixel) unit to numeric values, but not all browsers do: IE, for example, throws an &amp;ldquo;invalid arguments&amp;rdquo; error!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b0a6dca42f08f93868738d29ea002f6ccd7d8b" translate="yes" xml:space="preserve">
          <source>Centering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="570a62f1e6dc2ed54776f8dce294c3f6a0b35ae1" translate="yes" xml:space="preserve">
          <source>Changes in D3 4.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="096c50d4a00ca05952cff6c41baba3aee436dcf1" translate="yes" xml:space="preserve">
          <source>Changes in D3 5.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a57680f20570ff506549d368bd4b0df9446a56f8" translate="yes" xml:space="preserve">
          <source>Changes to registered listeners via &lt;em&gt;drag&lt;/em&gt;.on during a drag gesture &lt;em&gt;do not affect&lt;/em&gt; the current drag gesture. Instead, you must use &lt;a href=&quot;#event_on&quot;&gt;&lt;em&gt;event&lt;/em&gt;.on&lt;/a&gt;, which also allows you to register temporary event listeners for the current drag gesture. &lt;strong&gt;Separate events are dispatched for each active pointer&lt;/strong&gt; during a drag gesture. For example, if simultaneously dragging multiple subjects with multiple fingers, a start event is dispatched for each finger, even if both fingers start touching simultaneously. See &lt;a href=&quot;#drag-events&quot;&gt;Drag Events&lt;/a&gt; for more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c5117e7f7d7f44e2655b3445ca8c70fa5eb032d" translate="yes" xml:space="preserve">
          <source>Chapter 7. Scales of &lt;a href=&quot;http://alignedleft.com/work/d3-book&quot;&gt;&lt;em&gt;Interactive Data Visualization for the Web&lt;/em&gt;&lt;/a&gt; by Scott Murray</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78bc6d7859d13eaa4171edc4973a040f60c5efa2" translate="yes" xml:space="preserve">
          <source>Cherries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a40c897a2eabd70d4a4cb5b0be47bc9fc4ca7776" translate="yes" xml:space="preserve">
          <source>Chord</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34ec58a8e122219a675a78d8746fc1f2e851868d" translate="yes" xml:space="preserve">
          <source>Chords</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52465d7b9d4f0bf42268413e35835b77ef9cbca7" translate="yes" xml:space="preserve">
          <source>Chords (d3-chord)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1e73e72bdcafc94d6da448e32426f442c71cab1" translate="yes" xml:space="preserve">
          <source>Circular easing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07417696ffe77e2048039ee90a562c1caf7f501d" translate="yes" xml:space="preserve">
          <source>Circular or annular sectors, as in a pie or donut chart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fdafe8926e2e3b40fb6b11d39e5de51dbfba8f5" translate="yes" xml:space="preserve">
          <source>Clipping</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67e6fcaad79712ea365331662f736532fb3d46dd" translate="yes" xml:space="preserve">
          <source>Clipping and geometric operations for spherical polygons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0d8b52a9a1673d6bff23fad59fae58674429680" translate="yes" xml:space="preserve">
          <source>Clipping functions are implemented as transformations of a &lt;a href=&quot;#streams&quot;&gt;projection stream&lt;/a&gt;. Pre-clipping operates on spherical coordinates, in radians. Post-clipping operates on planar coordinates, in pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d75dc68bbdd56c9cbd58d4bbdabda84bcca2c47f" translate="yes" xml:space="preserve">
          <source>Cluster</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30c54a96f8011b39819ba18bcb53fcbb092d650d" translate="yes" xml:space="preserve">
          <source>Collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bbb632f02fd69807705c0179999c17d35c93b0f" translate="yes" xml:space="preserve">
          <source>Collections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42c6f611b3a8e07990743f0f33c1df64ee85684c" translate="yes" xml:space="preserve">
          <source>Collections (d3-collection)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b493e1f5619f447b21c759447a4c4f8cad9c81" translate="yes" xml:space="preserve">
          <source>Collision</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d0c8304baedcf8e3a78982c2e7c0b04622bf2a0" translate="yes" xml:space="preserve">
          <source>Color</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e18c2f6dbeb24defb5c91f12a7e25131dabfa0d2" translate="yes" xml:space="preserve">
          <source>Color Schemes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f1bb3271644377ed1468696e92a67aa4f49d9b4" translate="yes" xml:space="preserve">
          <source>Color Schemes (d3-scale-chromatic)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef8a94dd2e77bd55051fc9dc885ad43f6704b32" translate="yes" xml:space="preserve">
          <source>Color Spaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9036f16dbfeb360588d5173ff08d44ad7328774b" translate="yes" xml:space="preserve">
          <source>Color manipulation and color space conversion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d41f203fc6ca3abfabfdd81dc97ff48754973dde" translate="yes" xml:space="preserve">
          <source>Color ramps and palettes for quantitative, ordinal and categorical scales.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45f1994de5e4e17b0a2dbc09a14291540a565b01" translate="yes" xml:space="preserve">
          <source>Color space interpolators now interpolate opacity (see &lt;a href=&quot;#colors-d3-color&quot;&gt;d3-color&lt;/a&gt;) and return rgb(&amp;hellip;) or rgba(&amp;hellip;) CSS color specifier strings rather than using the RGB hexadecimal format. This is necessary to support opacity interpolation, but is also beneficial because it matches CSS computed values. When a channel in the start color &lt;em&gt;a&lt;/em&gt; is undefined, color interpolators now use the corresponding channel value from the end color &lt;em&gt;b&lt;/em&gt;, or &lt;em&gt;vice versa&lt;/em&gt;. This logic previously applied to some channels (such as saturation in HSL), but now applies to all channels in all color spaces, and is especially useful when interpolating to or from transparent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88d5e4cac104ffc3f02dd54f2f0f1074fd33fd9b" translate="yes" xml:space="preserve">
          <source>Colors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f3151239d35dc3edd270788b30f5ff57eabfec4" translate="yes" xml:space="preserve">
          <source>Colors (d3-color)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="967d80afa04bb5dd6fca38d6ca82d7d94b1b5388" translate="yes" xml:space="preserve">
          <source>Comma (CSV) and tab (TSV) delimiters are built-in. For example, to parse:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e08f7560031b98f43192b5d1e78601c3c0dab701" translate="yes" xml:space="preserve">
          <source>Command Line Reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa14fc3ec79e94690471b38b7dec75330a840cf" translate="yes" xml:space="preserve">
          <source>Command-Line Reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9ec0f581c7ec4fd7d059537d2f773f8b6f7e2e6" translate="yes" xml:space="preserve">
          <source>Composite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5bbb1e401f9a7d0ae989af8ca2febdbd6a5b6fd" translate="yes" xml:space="preserve">
          <source>Composite Projections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d5fe7d8fc38c864791291ecc25c2604f1defb9" translate="yes" xml:space="preserve">
          <source>Composite consist of several projections that are composed into a single display. The constituent projections have fixed clip, center and rotation, and thus composite projections do not support &lt;a href=&quot;#projection_center&quot;&gt;&lt;em&gt;projection&lt;/em&gt;.center&lt;/a&gt;, &lt;a href=&quot;#projection_rotate&quot;&gt;&lt;em&gt;projection&lt;/em&gt;.rotate&lt;/a&gt;, &lt;a href=&quot;#projection_clipAngle&quot;&gt;&lt;em&gt;projection&lt;/em&gt;.clipAngle&lt;/a&gt;, or &lt;a href=&quot;#projection_clipExtent&quot;&gt;&lt;em&gt;projection&lt;/em&gt;.clipExtent&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ec68b37e915572de7eb65e4f5ea5284e6537f88" translate="yes" xml:space="preserve">
          <source>Compute contour polygons using marching squares.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9d850bb3a25e7752c6e3a63277b6a41deb36ed4" translate="yes" xml:space="preserve">
          <source>Compute the Voronoi diagram of a given set of points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b892471940be62abef692a5839c982c850c4c892" translate="yes" xml:space="preserve">
          <source>Compute the necessary angles to represent a tabular dataset as a pie or donut chart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8066ecbefb8e647928d5aec9052fddd87e336696" translate="yes" xml:space="preserve">
          <source>Computes a single contour, returning a &lt;a href=&quot;http://geojson.org/geojson-spec.html&quot;&gt;GeoJSON&lt;/a&gt;&lt;a href=&quot;http://geojson.org/geojson-spec.html#multipolygon&quot;&gt;MultiPolygon&lt;/a&gt;&lt;a href=&quot;http://geojson.org/geojson-spec.html#geometry-objects&quot;&gt;geometry object&lt;/a&gt; representing the area where the input</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="192a6b1dd3b08c1a8ce30e637a6fd8c459fad8f3" translate="yes" xml:space="preserve">
          <source>Computes the &lt;a href=&quot;#voronoi-diagrams&quot;&gt;Voronoi diagram&lt;/a&gt; for the specified &lt;em&gt;data&lt;/em&gt; points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36feb7a4f01dca8a9ba8567af69267cc509847ea" translate="yes" xml:space="preserve">
          <source>Computes the &lt;a href=&quot;https://en.wikipedia.org/wiki/Smallest-circle_problem&quot;&gt;smallest circle&lt;/a&gt; that encloses the specified array of &lt;em&gt;circles&lt;/em&gt;, each of which must have a &lt;em&gt;circle&lt;/em&gt;.r property specifying the circle&amp;rsquo;s radius, and &lt;em&gt;circle&lt;/em&gt;.x and &lt;em&gt;circle&lt;/em&gt;.y properties specifying the circle&amp;rsquo;s center. The enclosing circle is computed using the &lt;a href=&quot;http://www.inf.ethz.ch/personal/emo/PublFiles/SubexLinProg_ALG16_96.pdf&quot;&gt;Matou&amp;scaron;ek-Sharir-Welzl algorithm&lt;/a&gt;. (See also &lt;a href=&quot;https://bl.ocks.org/mbostock/751fdd637f4bc2e3f08b&quot;&gt;Apollonius&amp;rsquo; Problem&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fc25f00a0541d762a019ffdfc4efd5003b38496" translate="yes" xml:space="preserve">
          <source>Computes the chord layout for the specified square &lt;em&gt;matrix&lt;/em&gt; of size &lt;em&gt;n&lt;/em&gt;&amp;times;&lt;em&gt;n&lt;/em&gt;, where the &lt;em&gt;matrix&lt;/em&gt; represents the directed flow amongst a network (a complete digraph) of &lt;em&gt;n&lt;/em&gt; nodes. The given &lt;em&gt;matrix&lt;/em&gt; must be an array of length &lt;em&gt;n&lt;/em&gt;, where each element &lt;em&gt;matrix&lt;/em&gt;[&lt;em&gt;i&lt;/em&gt;] is an array of &lt;em&gt;n&lt;/em&gt; numbers, where each &lt;em&gt;matrix&lt;/em&gt;[&lt;em&gt;i&lt;/em&gt;][&lt;em&gt;j&lt;/em&gt;] represents the flow from the &lt;em&gt;i&lt;/em&gt;th node in the network to the &lt;em&gt;j&lt;/em&gt;th node. Each number &lt;em&gt;matrix&lt;/em&gt;[&lt;em&gt;i&lt;/em&gt;][&lt;em&gt;j&lt;/em&gt;] must be nonnegative, though it can be zero if there is no flow from node &lt;em&gt;i&lt;/em&gt; to node &lt;em&gt;j&lt;/em&gt;. From the &lt;a href=&quot;http://mkweb.bcgsc.ca/circos/guide/tables/&quot;&gt;Circos tableviewer example&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5e2fc4679fd18d69e28925e9db6e723733f8653" translate="yes" xml:space="preserve">
          <source>Computes the contours for the given array of &lt;em&gt;values&lt;/em&gt;, returning an array of &lt;a href=&quot;http://geojson.org/geojson-spec.html&quot;&gt;GeoJSON&lt;/a&gt;&lt;a href=&quot;http://geojson.org/geojson-spec.html#multipolygon&quot;&gt;MultiPolygon&lt;/a&gt;&lt;a href=&quot;http://geojson.org/geojson-spec.html#geometry-objects&quot;&gt;geometry objects&lt;/a&gt;. Each geometry object represents the area where the input</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad01201f4da4694307ec29c15acdbefc154708c1" translate="yes" xml:space="preserve">
          <source>Computes the histogram for the given array of &lt;em&gt;data&lt;/em&gt; samples. Returns an array of bins, where each bin is an array containing the associated elements from the input &lt;em&gt;data&lt;/em&gt;. Thus, the &lt;code&gt;length&lt;/code&gt; of the bin is the number of elements in that bin. Each bin has two additional attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d909ae9124716ef7cc5131a700cc21de937d03c" translate="yes" xml:space="preserve">
          <source>Computes the midpoint [&lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;] of the center line of the arc that would be &lt;a href=&quot;#_arc&quot;&gt;generated&lt;/a&gt; by the given &lt;em&gt;arguments&lt;/em&gt;. The &lt;em&gt;arguments&lt;/em&gt; are arbitrary; they are simply propagated to the arc generator&amp;rsquo;s accessor functions along with the &lt;code&gt;this&lt;/code&gt; object. To be consistent with the generated arc, the accessors must be deterministic, &lt;em&gt;i.e.&lt;/em&gt;, return the same value given the same arguments. The midpoint is defined as (&lt;a href=&quot;#arc_startAngle&quot;&gt;startAngle&lt;/a&gt; + &lt;a href=&quot;#arc_endAngle&quot;&gt;endAngle&lt;/a&gt;) / 2 and (&lt;a href=&quot;#arc_innerRadius&quot;&gt;innerRadius&lt;/a&gt; + &lt;a href=&quot;#arc_outerRadius&quot;&gt;outerRadius&lt;/a&gt;) / 2. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb2de72914a9edea37dea7a0284462c1f3ddfa41" translate="yes" xml:space="preserve">
          <source>Computes the number of leaves under this &lt;em&gt;node&lt;/em&gt; and assigns it to &lt;em&gt;node&lt;/em&gt;.value, and similarly for every descendant of &lt;em&gt;node&lt;/em&gt;. If this &lt;em&gt;node&lt;/em&gt; is a leaf, its count is one. Returns this &lt;em&gt;node&lt;/em&gt;. See also &lt;a href=&quot;#node_sum&quot;&gt;&lt;em&gt;node&lt;/em&gt;.sum&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1fe17d7c99a21dc151b9cdd5a8e99e4551250ca" translate="yes" xml:space="preserve">
          <source>Computes the set of quadtree tiles to display given the current layout &lt;a href=&quot;#tile_extent&quot;&gt;extent&lt;/a&gt;, &lt;a href=&quot;#tile_scale&quot;&gt;scale&lt;/a&gt;, &lt;a href=&quot;#tile_translate&quot;&gt;translate&lt;/a&gt; and &lt;a href=&quot;#tile_tileSize&quot;&gt;tileSize&lt;/a&gt;. Returns an array of objects with the following properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7be8055154b9d64a5d34e5580664da212565f3" translate="yes" xml:space="preserve">
          <source>Conceptually, the enter selection&amp;rsquo;s placeholders are pointers to the parent element (in this example, the document body). The enter selection is typically only used transiently to append elements, and is often &lt;a href=&quot;#selection_merge&quot;&gt;merged&lt;/a&gt; with the update selection after appending, such that modifications can be applied to both entering and updating elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6efa70974b85ac71af16bf230b7f4667abb410fb" translate="yes" xml:space="preserve">
          <source>Conic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe5c134d3085af5f606024974a1734f7f23be5cb" translate="yes" xml:space="preserve">
          <source>Conic Projections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c30aec9de7aafacb6be40be9e3e17aec3e372c08" translate="yes" xml:space="preserve">
          <source>Conic projections project the sphere onto a cone, and then unroll the cone onto the plane. Conic projections have &lt;a href=&quot;#conic_parallels&quot;&gt;two standard parallels&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85e3838f3f32e5d42e79d8c24f30483293b3fe9c" translate="yes" xml:space="preserve">
          <source>Consider the following table of relationships:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0034db0e4fd427c854d747e7561fc6a8e95a5fc" translate="yes" xml:space="preserve">
          <source>Constructs a geometry generator for creating graticules: a uniform grid of &lt;a href=&quot;https://en.wikipedia.org/wiki/Meridian_(geography)&quot;&gt;meridians&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Circle_of_latitude&quot;&gt;parallels&lt;/a&gt; for showing projection distortion. The default graticule has meridians and parallels every 10&amp;deg; between &amp;plusmn;80&amp;deg; latitude; for the polar regions, there are meridians every 90&amp;deg;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45166e72ed164b44a5928fd33112fd7e97996324" translate="yes" xml:space="preserve">
          <source>Constructs a layout for determining which quadtree tiles to display in a rectangular viewport.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c777ead96d184c4ccad8f2cb1028679bf532806" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;a href=&quot;#continuous-scales&quot;&gt;continuous scale&lt;/a&gt; with the &lt;a href=&quot;#log_domain&quot;&gt;domain&lt;/a&gt; [1, 10], the unit &lt;a href=&quot;#log_range&quot;&gt;range&lt;/a&gt; [0, 1], the &lt;a href=&quot;#log_base&quot;&gt;base&lt;/a&gt; 10, the &lt;a href=&quot;d3-interpolate#interpolate&quot;&gt;default&lt;/a&gt;&lt;a href=&quot;#log_interpolate&quot;&gt;interpolator&lt;/a&gt; and &lt;a href=&quot;#log_clamp&quot;&gt;clamping&lt;/a&gt; disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85c882840b75a59097d6e60616ce9efab9f11850" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;a href=&quot;#continuous-scales&quot;&gt;continuous scale&lt;/a&gt; with the unit &lt;a href=&quot;#continuous_domain&quot;&gt;domain&lt;/a&gt; [0, 1], the unit &lt;a href=&quot;#continuous_range&quot;&gt;range&lt;/a&gt; [0, 1], the &lt;a href=&quot;#pow_exponent&quot;&gt;exponent&lt;/a&gt; 1, the &lt;a href=&quot;d3-interpolate#interpolate&quot;&gt;default&lt;/a&gt;&lt;a href=&quot;#continuous_interpolate&quot;&gt;interpolator&lt;/a&gt; and &lt;a href=&quot;#continuous_clamp&quot;&gt;clamping&lt;/a&gt; disabled. (Note that this is effectively a &lt;a href=&quot;#linear-scales&quot;&gt;linear&lt;/a&gt; scale until you set a different exponent.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1c38e4b7252d1172724feb679d66c703b8f902d" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;a href=&quot;#continuous-scales&quot;&gt;continuous scale&lt;/a&gt; with the unit &lt;a href=&quot;#continuous_domain&quot;&gt;domain&lt;/a&gt; [0, 1], the unit &lt;a href=&quot;#continuous_range&quot;&gt;range&lt;/a&gt; [0, 1], the &lt;a href=&quot;d3-interpolate#interpolate&quot;&gt;default&lt;/a&gt;&lt;a href=&quot;#continuous_interpolate&quot;&gt;interpolator&lt;/a&gt; and &lt;a href=&quot;#continuous_clamp&quot;&gt;clamping&lt;/a&gt; disabled. Linear scales are a good default choice for continuous quantitative data because they preserve proportional differences. Each range value &lt;em&gt;y&lt;/em&gt; can be expressed as a function of the domain value &lt;em&gt;x&lt;/em&gt;: &lt;em&gt;y&lt;/em&gt; = &lt;em&gt;mx&lt;/em&gt; + &lt;em&gt;b&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e4435180d58739ccdb71e95e5c25f84e51d11b0" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;a href=&quot;#continuous-scales&quot;&gt;continuous&lt;/a&gt;&lt;a href=&quot;#power-scales&quot;&gt;power scale&lt;/a&gt; with the unit &lt;a href=&quot;#continuous_domain&quot;&gt;domain&lt;/a&gt; [0, 1], the unit &lt;a href=&quot;#continuous_range&quot;&gt;range&lt;/a&gt; [0, 1], the &lt;a href=&quot;#pow_exponent&quot;&gt;exponent&lt;/a&gt; 0.5, the &lt;a href=&quot;d3-interpolate#interpolate&quot;&gt;default&lt;/a&gt;&lt;a href=&quot;#continuous_interpolate&quot;&gt;interpolator&lt;/a&gt; and &lt;a href=&quot;#continuous_clamp&quot;&gt;clamping&lt;/a&gt; disabled. This is a convenience method equivalent to &lt;code&gt;d3.scalePow().exponent(0.5)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86732fe4f5e29742be5b882039bd09d7f3f0666a" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;a href=&quot;#lab&quot;&gt;Lab&lt;/a&gt; color with the specified &lt;em&gt;l&lt;/em&gt; value and &lt;em&gt;a&lt;/em&gt; = &lt;em&gt;b&lt;/em&gt; = 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00df3250802ba156e1f2ee1a8416232406b9fc79" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;a href=&quot;https://en.wikipedia.org/wiki/HCL_color_space&quot;&gt;HCL&lt;/a&gt; color. The channel values are exposed as &lt;code&gt;h&lt;/code&gt;, &lt;code&gt;c&lt;/code&gt; and &lt;code&gt;l&lt;/code&gt; properties on the returned instance. Use the &lt;a href=&quot;http://bl.ocks.org/mbostock/3e115519a1b495e0bd95&quot;&gt;HCL color picker&lt;/a&gt; to explore this color space. The value of &lt;em&gt;l&lt;/em&gt; is typically in the range [0, 100], &lt;em&gt;c&lt;/em&gt; is typically in [0, 230], and &lt;em&gt;h&lt;/em&gt; is typically in [0, 360).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae040a6552794e0a62ed330ddbd77acba618ac69" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;a href=&quot;https://en.wikipedia.org/wiki/HSL_and_HSV&quot;&gt;HSL&lt;/a&gt; color. The channel values are exposed as &lt;code&gt;h&lt;/code&gt;, &lt;code&gt;s&lt;/code&gt; and &lt;code&gt;l&lt;/code&gt; properties on the returned instance. Use the &lt;a href=&quot;http://bl.ocks.org/mbostock/debaad4fcce9bcee14cf&quot;&gt;HSL color picker&lt;/a&gt; to explore this color space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e89621bf360bd80ef2fad5751ee0d7a5654190b" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;a href=&quot;https://en.wikipedia.org/wiki/HSL_and_HSV&quot;&gt;HSV&lt;/a&gt; color. The channel values are exposed as &lt;code&gt;h&lt;/code&gt;, &lt;code&gt;s&lt;/code&gt; and &lt;code&gt;v&lt;/code&gt; properties on the returned instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="677453844452945e1492689b71443e6086c82802" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;a href=&quot;https://en.wikipedia.org/wiki/Lab_color_space#CIELAB&quot;&gt;Lab&lt;/a&gt; color. The channel values are exposed as &lt;code&gt;l&lt;/code&gt;, &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; properties on the returned instance. Use the &lt;a href=&quot;http://bl.ocks.org/mbostock/9f37cc207c0cb166921b&quot;&gt;Lab color picker&lt;/a&gt; to explore this color space. The value of &lt;em&gt;l&lt;/em&gt; is typically in the range [0, 100], while &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; are typically in [-160, +160].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be366f49763d7fa711a30c0271abbe64bd33934" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;a href=&quot;https://en.wikipedia.org/wiki/RGB_color_model&quot;&gt;RGB&lt;/a&gt; color. The channel values are exposed as &lt;code&gt;r&lt;/code&gt;, &lt;code&gt;g&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; properties on the returned instance. Use the &lt;a href=&quot;http://bl.ocks.org/mbostock/78d64ca7ef013b4dcf8f&quot;&gt;RGB color picker&lt;/a&gt; to explore this color space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c94927c6a3c098bd38690d683efbe90b38378c1" translate="yes" xml:space="preserve">
          <source>Constructs a new &lt;a href=&quot;https://www.mrao.cam.ac.uk/%7Edag/CUBEHELIX/&quot;&gt;Cubehelix&lt;/a&gt; color. The channel values are exposed as &lt;code&gt;h&lt;/code&gt;, &lt;code&gt;s&lt;/code&gt; and &lt;code&gt;l&lt;/code&gt; properties on the returned instance. Use the &lt;a href=&quot;http://bl.ocks.org/mbostock/ba8d75e45794c27168b5&quot;&gt;Cubehelix color picker&lt;/a&gt; to explore this color space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88adad5e36dae1c0f3e3d4d41b506676e36bbba3" translate="yes" xml:space="preserve">
          <source>Constructs a new DSV parser and formatter for the specified &lt;em&gt;delimiter&lt;/em&gt;. The &lt;em&gt;delimiter&lt;/em&gt; must be a single character (&lt;em&gt;i.e.&lt;/em&gt;, a single 16-bit code unit); so, ASCII delimiters are fine, but emoji delimiters are not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11c9c01ac17e02738f677adf00229d2005105df6" translate="yes" xml:space="preserve">
          <source>Constructs a new HCG color. The channel values are exposed as &lt;code&gt;h&lt;/code&gt;, &lt;code&gt;c&lt;/code&gt; and &lt;code&gt;g&lt;/code&gt; properties on the returned instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43c1823b16bfe9a5920074a036ef47c58ae90bf8" translate="yes" xml:space="preserve">
          <source>Constructs a new arc generator with the default settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cec23ffd14523c39fd2490d45ffcc440c177a2b2" translate="yes" xml:space="preserve">
          <source>Constructs a new area generator with the default settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e7128c3ce8fa74f150ba449e7bf7eb3de763a6f" translate="yes" xml:space="preserve">
          <source>Constructs a new band scale with the empty &lt;a href=&quot;#band_domain&quot;&gt;domain&lt;/a&gt;, the unit &lt;a href=&quot;#band_range&quot;&gt;range&lt;/a&gt; [0, 1], no &lt;a href=&quot;#band_padding&quot;&gt;padding&lt;/a&gt;, no &lt;a href=&quot;#band_round&quot;&gt;rounding&lt;/a&gt; and center &lt;a href=&quot;#band_align&quot;&gt;alignment&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fc974509148780762849fda0ac785255456f71f" translate="yes" xml:space="preserve">
          <source>Constructs a new bottom-oriented axis generator for the given &lt;a href=&quot;d3-scale&quot;&gt;scale&lt;/a&gt;, with empty &lt;a href=&quot;#axis_ticks&quot;&gt;tick arguments&lt;/a&gt;, a &lt;a href=&quot;#axis_tickSize&quot;&gt;tick size&lt;/a&gt; of 6 and &lt;a href=&quot;#axis_tickPadding&quot;&gt;padding&lt;/a&gt; of 3. In this orientation, ticks are drawn below the horizontal domain path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="589986ebf620e7c4368338dc7334bce37450ad43" translate="yes" xml:space="preserve">
          <source>Constructs a new chord layout with the default settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77790b7df9f3de31a46fbab2d866549b541230ab" translate="yes" xml:space="preserve">
          <source>Constructs a new contour generator with the default settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5e38fc93e82fad9d196fecf6f9f30e8b54de8f1" translate="yes" xml:space="preserve">
          <source>Constructs a new custom interval given the specified &lt;em&gt;floor&lt;/em&gt; and &lt;em&gt;offset&lt;/em&gt; functions and an optional &lt;em&gt;count&lt;/em&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29a502ae330c09406611a18400682929031988b4" translate="yes" xml:space="preserve">
          <source>Constructs a new density estimator with the default settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="715d2d0ebe6f29d7a76f7deffc1d07dc2b2e5a32" translate="yes" xml:space="preserve">
          <source>Constructs a new diverging scale with the given &lt;a href=&quot;#diverging_interpolator&quot;&gt;&lt;em&gt;interpolator&lt;/em&gt;&lt;/a&gt; function. When the scale is &lt;a href=&quot;#_diverging&quot;&gt;applied&lt;/a&gt;, the interpolator will be invoked with a value typically in the range [0, 1], where 0 represents the extreme negative value, 0.5 represents the neutral value, and 1 represents the extreme positive value. For example, using &lt;a href=&quot;d3-scale-chromatic#interpolateSpectral&quot;&gt;d3.interpolateSpectral&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c800e9819a5765e28d9499b8673cb9ffcd7eb0ad" translate="yes" xml:space="preserve">
          <source>Constructs a new histogram generator with the default settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e436150cc81e9307c72914ec88d261615cd8cf" translate="yes" xml:space="preserve">
          <source>Constructs a new identity scale with the unit &lt;a href=&quot;#continuous_domain&quot;&gt;domain&lt;/a&gt; [0, 1] and the unit &lt;a href=&quot;#continuous_range&quot;&gt;range&lt;/a&gt; [0, 1].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3086891b2f1dbe535b0586eeca78e86fe044a7e9" translate="yes" xml:space="preserve">
          <source>Constructs a new left-oriented axis generator for the given &lt;a href=&quot;d3-scale&quot;&gt;scale&lt;/a&gt;, with empty &lt;a href=&quot;#axis_ticks&quot;&gt;tick arguments&lt;/a&gt;, a &lt;a href=&quot;#axis_tickSize&quot;&gt;tick size&lt;/a&gt; of 6 and &lt;a href=&quot;#axis_tickPadding&quot;&gt;padding&lt;/a&gt; of 3. In this orientation, ticks are drawn to the left of the vertical domain path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f73685b8b87918b67b0c1bcfb4a26a11c1cfbce" translate="yes" xml:space="preserve">
          <source>Constructs a new line generator with the default settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="442c51c67f6dfa175ef9fd44f60494ac68ea4d85" translate="yes" xml:space="preserve">
          <source>Constructs a new map. If &lt;em&gt;object&lt;/em&gt; is specified, copies all enumerable properties from the specified object into this map. The specified object may also be an array or another map. An optional &lt;em&gt;key&lt;/em&gt; function may be specified to compute the key for each value in the array. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc0b8b22d83aafd893be47ef8552cc50be6a76e7" translate="yes" xml:space="preserve">
          <source>Constructs a new ordinal scale with an empty &lt;a href=&quot;#ordinal_domain&quot;&gt;domain&lt;/a&gt; and the specified &lt;a href=&quot;#ordinal_range&quot;&gt;&lt;em&gt;range&lt;/em&gt;&lt;/a&gt;. If a &lt;em&gt;range&lt;/em&gt; is not specified, it defaults to the empty array; an ordinal scale always returns undefined until a non-empty range is defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4d64d35c957f7f9ed6aaeb839b5e3395c31c20a" translate="yes" xml:space="preserve">
          <source>Constructs a new path serializer that implements &lt;a href=&quot;http://www.w3.org/TR/2dcontext/#canvaspathmethods&quot;&gt;CanvasPathMethods&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="431515a79811da80846ed04684e1cd7c6b81f1b1" translate="yes" xml:space="preserve">
          <source>Constructs a new pie generator with the default settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f1ff06c19e09eea05c6b4371b178e04c59c5608" translate="yes" xml:space="preserve">
          <source>Constructs a new point scale with the empty &lt;a href=&quot;#point_domain&quot;&gt;domain&lt;/a&gt;, the unit &lt;a href=&quot;#point_range&quot;&gt;range&lt;/a&gt; [0, 1], no &lt;a href=&quot;#point_padding&quot;&gt;padding&lt;/a&gt;, no &lt;a href=&quot;#point_round&quot;&gt;rounding&lt;/a&gt; and center &lt;a href=&quot;#point_align&quot;&gt;alignment&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10dac13e2d41bffe1592feba5f843b96e559c738" translate="yes" xml:space="preserve">
          <source>Constructs a new projection from the specified &lt;a href=&quot;#_project&quot;&gt;raw projection&lt;/a&gt;, &lt;em&gt;project&lt;/em&gt;. The &lt;em&gt;project&lt;/em&gt; function takes the &lt;em&gt;longitude&lt;/em&gt; and &lt;em&gt;latitude&lt;/em&gt; of a given point in &lt;a href=&quot;http://mathworld.wolfram.com/Radian.html&quot;&gt;radians&lt;/a&gt;, often referred to as &lt;em&gt;lambda&lt;/em&gt; (&amp;lambda;) and &lt;em&gt;phi&lt;/em&gt; (&amp;phi;), and returns a two-element array [&lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;] representing its unit projection. The &lt;em&gt;project&lt;/em&gt; function does not need to scale or translate the point, as these are applied automatically by &lt;a href=&quot;#projection_scale&quot;&gt;&lt;em&gt;projection&lt;/em&gt;.scale&lt;/a&gt;, &lt;a href=&quot;#projection_translate&quot;&gt;&lt;em&gt;projection&lt;/em&gt;.translate&lt;/a&gt;, and &lt;a href=&quot;#projection_center&quot;&gt;&lt;em&gt;projection&lt;/em&gt;.center&lt;/a&gt;. Likewise, the &lt;em&gt;project&lt;/em&gt; function does not need to perform any spherical rotation, as &lt;a href=&quot;#projection_rotate&quot;&gt;&lt;em&gt;projection&lt;/em&gt;.rotate&lt;/a&gt; is applied prior to projection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5e651283e4130b8f25c6ae6865a77c50bd6255a" translate="yes" xml:space="preserve">
          <source>Constructs a new projection from the specified &lt;a href=&quot;#_project&quot;&gt;raw projection&lt;/a&gt;&lt;em&gt;factory&lt;/em&gt; and returns a &lt;em&gt;mutate&lt;/em&gt; function to call whenever the raw projection changes. The &lt;em&gt;factory&lt;/em&gt; must return a raw projection. The returned &lt;em&gt;mutate&lt;/em&gt; function returns the wrapped projection. For example, a conic projection typically has two configurable parallels. A suitable &lt;em&gt;factory&lt;/em&gt; function, such as &lt;a href=&quot;#geoConicEqualAreaRaw&quot;&gt;d3.geoConicEqualAreaRaw&lt;/a&gt;, would have the form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c3bc32d678e3eeb1958d8d046c202d98d0548c4" translate="yes" xml:space="preserve">
          <source>Constructs a new quantile scale with an empty &lt;a href=&quot;#quantile_domain&quot;&gt;domain&lt;/a&gt; and an empty &lt;a href=&quot;#quantile_range&quot;&gt;range&lt;/a&gt;. The quantile scale is invalid until both a domain and range are specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88d7ba7f530d87179753b0506679f168dfc15399" translate="yes" xml:space="preserve">
          <source>Constructs a new quantize scale with the unit &lt;a href=&quot;#quantize_domain&quot;&gt;domain&lt;/a&gt; [0, 1] and the unit &lt;a href=&quot;#quantize_range&quot;&gt;range&lt;/a&gt; [0, 1]. Thus, the default quantize scale is equivalent to the &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Math/round&quot;&gt;Math.round&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f40892382188e714aaf5a3b3845fb8e4b8f46c3a" translate="yes" xml:space="preserve">
          <source>Constructs a new queue with the specified &lt;em&gt;concurrency&lt;/em&gt;. If &lt;em&gt;concurrency&lt;/em&gt; is not specified, the queue has infinite concurrency. Otherwise, &lt;em&gt;concurrency&lt;/em&gt; is a positive integer. For example, if &lt;em&gt;concurrency&lt;/em&gt; is 1, then all tasks will be run in series. If &lt;em&gt;concurrency&lt;/em&gt; is 3, then at most three tasks will be allowed to proceed concurrently; this is useful, for example, when loading resources in a web browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0896140b79d9a573f2691ce3325130b8ed6cf4e" translate="yes" xml:space="preserve">
          <source>Constructs a new radial area generator with the default settings. A radial area generator is equivalent to the standard Cartesian &lt;a href=&quot;#area&quot;&gt;area generator&lt;/a&gt;, except the &lt;a href=&quot;#area_x&quot;&gt;x&lt;/a&gt; and &lt;a href=&quot;#area_y&quot;&gt;y&lt;/a&gt; accessors are replaced with &lt;a href=&quot;#areaRadial_angle&quot;&gt;angle&lt;/a&gt; and &lt;a href=&quot;#areaRadial_radius&quot;&gt;radius&lt;/a&gt; accessors. Radial areas are always positioned relative to ⟨0,0⟩; use a transform (see: &lt;a href=&quot;http://www.w3.org/TR/SVG/coords.html#TransformAttribute&quot;&gt;SVG&lt;/a&gt;, &lt;a href=&quot;http://www.w3.org/TR/2dcontext/#transformations&quot;&gt;Canvas&lt;/a&gt;) to change the origin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99756fd187d0235e5b2c8b28e8818325bbce80db" translate="yes" xml:space="preserve">
          <source>Constructs a new radial line generator with the default settings. A radial line generator is equivalent to the standard Cartesian &lt;a href=&quot;#line&quot;&gt;line generator&lt;/a&gt;, except the &lt;a href=&quot;#line_x&quot;&gt;x&lt;/a&gt; and &lt;a href=&quot;#line_y&quot;&gt;y&lt;/a&gt; accessors are replaced with &lt;a href=&quot;#lineRadial_angle&quot;&gt;angle&lt;/a&gt; and &lt;a href=&quot;#lineRadial_radius&quot;&gt;radius&lt;/a&gt; accessors. Radial lines are always positioned relative to ⟨0,0⟩; use a transform (see: &lt;a href=&quot;http://www.w3.org/TR/SVG/coords.html#TransformAttribute&quot;&gt;SVG&lt;/a&gt;, &lt;a href=&quot;http://www.w3.org/TR/2dcontext/#transformations&quot;&gt;Canvas&lt;/a&gt;) to change the origin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd8209c039e1c9b5ff65f55f6393711a86d6bbf" translate="yes" xml:space="preserve">
          <source>Constructs a new right-oriented axis generator for the given &lt;a href=&quot;d3-scale&quot;&gt;scale&lt;/a&gt;, with empty &lt;a href=&quot;#axis_ticks&quot;&gt;tick arguments&lt;/a&gt;, a &lt;a href=&quot;#axis_tickSize&quot;&gt;tick size&lt;/a&gt; of 6 and &lt;a href=&quot;#axis_tickPadding&quot;&gt;padding&lt;/a&gt; of 3. In this orientation, ticks are drawn to the right of the vertical domain path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f266fbd79b8d3fa1a543c99807acbb7ef2690a40" translate="yes" xml:space="preserve">
          <source>Constructs a new sequential scale with the given &lt;a href=&quot;#sequential_interpolator&quot;&gt;&lt;em&gt;interpolator&lt;/em&gt;&lt;/a&gt; function. When the scale is &lt;a href=&quot;#_sequential&quot;&gt;applied&lt;/a&gt;, the interpolator will be invoked with a value typically in the range [0, 1], where 0 represents the minimum value and 1 represents the maximum value. For example, to implement the ill-advised &lt;a href=&quot;d3-color#hsl&quot;&gt;HSL&lt;/a&gt; rainbow scale:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ff23cd3bb0cbf15df217343a95ef21a3ad8066" translate="yes" xml:space="preserve">
          <source>Constructs a new set. If &lt;em&gt;array&lt;/em&gt; is specified, adds the given &lt;em&gt;array&lt;/em&gt; of string values to the returned set. The specified array may also be another set. An optional &lt;em&gt;accessor&lt;/em&gt; function may be specified, which is equivalent to calling &lt;em&gt;array.map(accessor)&lt;/em&gt; before constructing the set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="375a66515aead6a8dade2ebe5bfb955215f3533b" translate="yes" xml:space="preserve">
          <source>Constructs a new stack generator with the default settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b42b914fd2cd8677503cdc7bbace88bebb0e996e" translate="yes" xml:space="preserve">
          <source>Constructs a new stratify operator with the default settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fb47cf03d3fbb727a434b902b98b21dbb745ae5" translate="yes" xml:space="preserve">
          <source>Constructs a new symbol generator with the default settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ee2485b27380f3c2af956a4b3e516f6ef875080" translate="yes" xml:space="preserve">
          <source>Constructs a new threshold scale with the default &lt;a href=&quot;#threshold_domain&quot;&gt;domain&lt;/a&gt; [0.5] and the default &lt;a href=&quot;#threshold_range&quot;&gt;range&lt;/a&gt; [0, 1]. Thus, the default threshold scale is equivalent to the &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Math/round&quot;&gt;Math.round&lt;/a&gt; function for numbers; for example threshold(0.49) returns 0, and threshold(0.51) returns 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b5913f083fac11440d88ceda5224a1286d6818" translate="yes" xml:space="preserve">
          <source>Constructs a new time scale with the &lt;a href=&quot;#time_domain&quot;&gt;domain&lt;/a&gt; [2000-01-01, 2000-01-02], the unit &lt;a href=&quot;#time_range&quot;&gt;range&lt;/a&gt; [0, 1], the &lt;a href=&quot;d3-interpolate#interpolate&quot;&gt;default&lt;/a&gt;&lt;a href=&quot;#time_interpolate&quot;&gt;interpolator&lt;/a&gt; and &lt;a href=&quot;#time_clamp&quot;&gt;clamping&lt;/a&gt; disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ea57c156f70cfd057167985ea070ef615d0dcc" translate="yes" xml:space="preserve">
          <source>Constructs a new top-oriented axis generator for the given &lt;a href=&quot;d3-scale&quot;&gt;scale&lt;/a&gt;, with empty &lt;a href=&quot;#axis_ticks&quot;&gt;tick arguments&lt;/a&gt;, a &lt;a href=&quot;#axis_tickSize&quot;&gt;tick size&lt;/a&gt; of 6 and &lt;a href=&quot;#axis_tickPadding&quot;&gt;padding&lt;/a&gt; of 3. In this orientation, ticks are drawn above the horizontal domain path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ded22512718374a9dd66a852936bc9c1e26e084" translate="yes" xml:space="preserve">
          <source>Constructs a root node from the specified hierarchical &lt;em&gt;data&lt;/em&gt;. The specified &lt;em&gt;data&lt;/em&gt; must be an object representing the root node. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4b290eee7ee9eca877a7e01bf49e3ec181e017e" translate="yes" xml:space="preserve">
          <source>Content Security Policy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="944d5d9688c2096d55c7fe6de14b2673cf06ef43" translate="yes" xml:space="preserve">
          <source>Continuous Scales</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b0ac226619cbf9d5dd8ebf615dd671b5bc34b7e" translate="yes" xml:space="preserve">
          <source>Continuous scales map a continuous, quantitative input &lt;a href=&quot;#continuous_domain&quot;&gt;domain&lt;/a&gt; to a continuous output &lt;a href=&quot;#continuous_range&quot;&gt;range&lt;/a&gt;. If the range is also numeric, the mapping may be &lt;a href=&quot;#continuous_invert&quot;&gt;inverted&lt;/a&gt;. A continuous scale is not constructed directly; instead, try a &lt;a href=&quot;#linear-scales&quot;&gt;linear&lt;/a&gt;, &lt;a href=&quot;#power-scales&quot;&gt;power&lt;/a&gt;, &lt;a href=&quot;#log-scales&quot;&gt;log&lt;/a&gt;, &lt;a href=&quot;#identity-scales&quot;&gt;identity&lt;/a&gt;, &lt;a href=&quot;#time-scales&quot;&gt;time&lt;/a&gt; or &lt;a href=&quot;#sequential-scales&quot;&gt;sequential color&lt;/a&gt; scale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae77a05fc2676633970990bc1a0060eeec26548a" translate="yes" xml:space="preserve">
          <source>Contour</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="136186542265da730563cac324d2ba301c5ca5ec" translate="yes" xml:space="preserve">
          <source>Contour plots can also visualize continuous functions by sampling. Here is the Goldstein&amp;ndash;Price function (a test function for global optimization) and a trippy animation of &lt;em&gt;sin&lt;/em&gt;(&lt;em&gt;x&lt;/em&gt; + &lt;em&gt;y&lt;/em&gt;)&lt;em&gt;sin&lt;/em&gt;(&lt;em&gt;x&lt;/em&gt; - &lt;em&gt;y&lt;/em&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11519c1c2629e280406f8887283fd07a6ae5c9b3" translate="yes" xml:space="preserve">
          <source>Contours</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f017a3c3504a1d571a00d38608bf20cc84c455b8" translate="yes" xml:space="preserve">
          <source>Contours (d3-contour)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ec8c9be87b2cd5c59907f4a3bfdd411820771b6" translate="yes" xml:space="preserve">
          <source>Contours can also show the &lt;a href=&quot;#density-estimation&quot;&gt;estimated density&lt;/a&gt; of point clouds, which is especially useful to avoid overplotting in large datasets. This library implements fast two-dimensional kernel density estimation; see &lt;a href=&quot;#contourDensity&quot;&gt;d3.contourDensity&lt;/a&gt;. Here is a scatterplot showing the relationship between the idle duration and eruption duration for Old Faithful:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4722c5ea64f5bf604117b9b25da5ac1ab2753262" translate="yes" xml:space="preserve">
          <source>Control Flow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd11dbd1fad67fd4f4be3eca481433f5bd462fc8" translate="yes" xml:space="preserve">
          <source>Convenience methods on top of the Fetch API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc33b09581fe27cc5534d9e3611209ef5c0e9305" translate="yes" xml:space="preserve">
          <source>Converts the specified DSV input &lt;em&gt;file&lt;/em&gt; to DSV (typically with a different delimiter or encoding). If &lt;em&gt;file&lt;/em&gt; is not specified, defaults to reading from stdin. For example, to convert to CSV to TSV:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8b226789d33b0af303ec6289c85ccc5c0b40480" translate="yes" xml:space="preserve">
          <source>Converts the specified DSV input &lt;em&gt;file&lt;/em&gt; to JSON. If &lt;em&gt;file&lt;/em&gt; is not specified, defaults to reading from stdin. For example, to convert to CSV to JSON:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc0e4e1343f1e8b375f062b65e08e68bee8b394b" translate="yes" xml:space="preserve">
          <source>Converts the specified GeoJSON &lt;em&gt;file&lt;/em&gt; to SVG. With &lt;a href=&quot;#geo2svg_newline_delimited&quot;&gt;--newline-delimited&lt;/a&gt;, each input feature is rendered as a separate &lt;a href=&quot;https://www.w3.org/TR/SVG/paths.html&quot;&gt;path element&lt;/a&gt;; otherwise, a single path element is generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08d9d7945d49aa7c1ddc09c25f00747ce067dc16" translate="yes" xml:space="preserve">
          <source>Converts the specified JSON input &lt;em&gt;file&lt;/em&gt; to DSV. If &lt;em&gt;file&lt;/em&gt; is not specified, defaults to reading from stdin. For example, to convert to JSON to CSV:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c80bb128c93a6763ab54b9d12cd3b0d13c6def4e" translate="yes" xml:space="preserve">
          <source>Creates a new Voronoi layout with default &lt;a href=&quot;#voronoi_x&quot;&gt;&lt;em&gt;x&lt;/em&gt;-&lt;/a&gt; and &lt;a href=&quot;#voronoi_y&quot;&gt;&lt;em&gt;y&lt;/em&gt;-&lt;/a&gt; accessors and a null &lt;a href=&quot;#voronoi_extent&quot;&gt;extent&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="520111fbfb262badc0727ca8ef737e3f53c7874a" translate="yes" xml:space="preserve">
          <source>Creates a new centering force with the specified &lt;a href=&quot;#center_x&quot;&gt;&lt;em&gt;x&lt;/em&gt;-&lt;/a&gt; and &lt;a href=&quot;#center_y&quot;&gt;&lt;em&gt;y&lt;/em&gt;-&lt;/a&gt; coordinates. If &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; are not specified, they default to ⟨0,0⟩.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef3cfdc9958282714bb96721e39f9c5d56113b97" translate="yes" xml:space="preserve">
          <source>Creates a new circle collision force with the specified &lt;a href=&quot;#collide_radius&quot;&gt;&lt;em&gt;radius&lt;/em&gt;&lt;/a&gt;. If &lt;em&gt;radius&lt;/em&gt; is not specified, it defaults to the constant one for all nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="832d50439044bfa20cc7b6ab7cf5be7ec1c387f5" translate="yes" xml:space="preserve">
          <source>Creates a new cluster layout with default settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd26f239f52c007cb2c2f2d11476532ff6edc720" translate="yes" xml:space="preserve">
          <source>Creates a new dispatch for the specified event &lt;em&gt;types&lt;/em&gt;. Each &lt;em&gt;type&lt;/em&gt; is a string, such as &lt;code&gt;&quot;start&quot;&lt;/code&gt; or &lt;code&gt;&quot;end&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b77f908d84f3727930e31bf7425a3997a3e92e61" translate="yes" xml:space="preserve">
          <source>Creates a new drag behavior. The returned behavior, &lt;a href=&quot;#_drag&quot;&gt;&lt;em&gt;drag&lt;/em&gt;&lt;/a&gt;, is both an object and a function, and is typically applied to selected elements via &lt;a href=&quot;d3-selection#selection_call&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.call&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23098b3dce24d907e20e3c0431efb09383a28545" translate="yes" xml:space="preserve">
          <source>Creates a new geographic path generator with the default settings. If &lt;em&gt;projection&lt;/em&gt; is specified, sets the &lt;a href=&quot;#path_projection&quot;&gt;current projection&lt;/a&gt;. If &lt;em&gt;context&lt;/em&gt; is specified, sets the &lt;a href=&quot;#path_context&quot;&gt;current context&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bca69a76af7dde20f9d2198343e8ede967a3abf0" translate="yes" xml:space="preserve">
          <source>Creates a new link force with the specified &lt;em&gt;links&lt;/em&gt; and default parameters. If &lt;em&gt;links&lt;/em&gt; is not specified, it defaults to the empty array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5b705035eec2552d5ffc4495ab7862ae54e47fe" translate="yes" xml:space="preserve">
          <source>Creates a new many-body force with the default parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ea21d5b3380ff8bb81ff957ad99addb324dae50" translate="yes" xml:space="preserve">
          <source>Creates a new nest operator. The set of keys is initially empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cb32517aa0c07344bf7aafe353700e74fab543d" translate="yes" xml:space="preserve">
          <source>Creates a new one-dimensional brush along the &lt;em&gt;x&lt;/em&gt;-dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="928f95c0059a836214782c7d9690573e19065238" translate="yes" xml:space="preserve">
          <source>Creates a new one-dimensional brush along the &lt;em&gt;y&lt;/em&gt;-dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="899ccffa2675729efcd141c0f73deb9762ec5f4b" translate="yes" xml:space="preserve">
          <source>Creates a new pack layout with the default settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b959b880966206e8cc75f38ca5a6a596ce002b91" translate="yes" xml:space="preserve">
          <source>Creates a new partition layout with the default settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b48d8331ee87abc8b316df11ad6c984ff2b9b1ab" translate="yes" xml:space="preserve">
          <source>Creates a new positioning force along the &lt;em&gt;x&lt;/em&gt;-axis towards the given position &lt;a href=&quot;#x_x&quot;&gt;&lt;em&gt;x&lt;/em&gt;&lt;/a&gt;. If &lt;em&gt;x&lt;/em&gt; is not specified, it defaults to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f73e83bdf7fe68d2eafd1a212a2fca3defaf8c7" translate="yes" xml:space="preserve">
          <source>Creates a new positioning force along the &lt;em&gt;y&lt;/em&gt;-axis towards the given position &lt;a href=&quot;#y_y&quot;&gt;&lt;em&gt;y&lt;/em&gt;&lt;/a&gt;. If &lt;em&gt;y&lt;/em&gt; is not specified, it defaults to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db5ba94087b5f949b940daefbc37f23e96a4b19f" translate="yes" xml:space="preserve">
          <source>Creates a new positioning force towards a circle of the specified &lt;a href=&quot;#radial_radius&quot;&gt;&lt;em&gt;radius&lt;/em&gt;&lt;/a&gt; centered at ⟨&lt;a href=&quot;#radial_x&quot;&gt;&lt;em&gt;x&lt;/em&gt;&lt;/a&gt;,&lt;a href=&quot;#radial_y&quot;&gt;&lt;em&gt;y&lt;/em&gt;&lt;/a&gt;⟩. If &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; are not specified, they default to ⟨0,0⟩.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="917b2c0cd896e4c6bc33d190378ea5260944356d" translate="yes" xml:space="preserve">
          <source>Creates a new ribbon generator with the default settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e513d18fbe28d305c2c04e30e9b86ac8f80b4ca5" translate="yes" xml:space="preserve">
          <source>Creates a new simulation with the specified array of &lt;a href=&quot;#simulation_nodes&quot;&gt;&lt;em&gt;nodes&lt;/em&gt;&lt;/a&gt; and no &lt;a href=&quot;#simulation_force&quot;&gt;forces&lt;/a&gt;. If &lt;em&gt;nodes&lt;/em&gt; is not specified, it defaults to the empty array. The simulator &lt;a href=&quot;#simulation_restart&quot;&gt;starts&lt;/a&gt; automatically; use &lt;a href=&quot;#simulation_on&quot;&gt;&lt;em&gt;simulation&lt;/em&gt;.on&lt;/a&gt; to listen for tick events as the simulation runs. If you wish to run the simulation manually instead, call &lt;a href=&quot;#simulation_stop&quot;&gt;&lt;em&gt;simulation&lt;/em&gt;.stop&lt;/a&gt;, and then call &lt;a href=&quot;#simulation_tick&quot;&gt;&lt;em&gt;simulation&lt;/em&gt;.tick&lt;/a&gt; as desired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e8649b06754817f96c06d3b39ba584b5017470" translate="yes" xml:space="preserve">
          <source>Creates a new subpath containing just the four points ⟨&lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;⟩, ⟨&lt;em&gt;x&lt;/em&gt; + &lt;em&gt;w&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;⟩, ⟨&lt;em&gt;x&lt;/em&gt; + &lt;em&gt;w&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt; + &lt;em&gt;h&lt;/em&gt;⟩, ⟨&lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt; + &lt;em&gt;h&lt;/em&gt;⟩, with those four points connected by straight lines, and then marks the subpath as closed. Equivalent to &lt;a href=&quot;http://www.w3.org/TR/2dcontext/#dom-context-2d-rect&quot;&gt;&lt;em&gt;context&lt;/em&gt;.rect&lt;/a&gt; and uses SVG&amp;rsquo;s &lt;a href=&quot;http://www.w3.org/TR/SVG/paths.html#PathDataLinetoCommands&quot;&gt;&amp;ldquo;lineto&amp;rdquo; commands&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7511595f8ccdca7f2df01363b63f7854263cfca3" translate="yes" xml:space="preserve">
          <source>Creates a new tree layout with default settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f15c849a435472affd5158adb849be4129d39e" translate="yes" xml:space="preserve">
          <source>Creates a new treemap layout with default settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa3860ad58ba835b57ab3d269d76660fb983b980" translate="yes" xml:space="preserve">
          <source>Creates a new two-dimensional brush.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c2f9dd6338b691033dc85a8d079bf673eb50e3e" translate="yes" xml:space="preserve">
          <source>Creates a new zoom behavior. The returned behavior, &lt;a href=&quot;#_drag&quot;&gt;&lt;em&gt;zoom&lt;/em&gt;&lt;/a&gt;, is both an object and a function, and is typically applied to selected elements via &lt;a href=&quot;d3-selection#selection_call&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.call&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dddc507453a86eacec3168180a39542af92961f3" translate="yes" xml:space="preserve">
          <source>Creates a new, empty quadtree with an empty &lt;a href=&quot;#quadtree_extent&quot;&gt;extent&lt;/a&gt; and the default &lt;a href=&quot;#quadtree_x&quot;&gt;&lt;em&gt;x&lt;/em&gt;-&lt;/a&gt; and &lt;a href=&quot;#quadtree_y&quot;&gt;&lt;em&gt;y&lt;/em&gt;-&lt;/a&gt;accessors. If &lt;em&gt;data&lt;/em&gt; is specified, &lt;a href=&quot;#quadtree_addAll&quot;&gt;adds&lt;/a&gt; the specified array of data to the quadtree. This is equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4413761e4566d5e909571a872e37c82782e8060d" translate="yes" xml:space="preserve">
          <source>Cubehelix features monotonic lightness, while Lab and HCL are perceptually uniform. Note that HCL is the cylindrical form of Lab, similar to how HSL is the cylindrical form of RGB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46f3bac6f002b3499c4d2d8220fb010f2ac7fdc4" translate="yes" xml:space="preserve">
          <source>Cubic easing; equivalent to &lt;a href=&quot;#easePolyIn&quot;&gt;polyIn&lt;/a&gt;.&lt;a href=&quot;#poly_exponent&quot;&gt;exponent&lt;/a&gt;(3).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07c83b93abf0b3e27a0cdff87660d5bd4d44c60e" translate="yes" xml:space="preserve">
          <source>Curves</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a719b57f2931b3e910bccc3909f4fedffb76a16" translate="yes" xml:space="preserve">
          <source>Curves are typically not constructed or used directly, instead being passed to &lt;a href=&quot;#line_curve&quot;&gt;&lt;em&gt;line&lt;/em&gt;.curve&lt;/a&gt; and &lt;a href=&quot;#area_curve&quot;&gt;&lt;em&gt;area&lt;/em&gt;.curve&lt;/a&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90c1509c66f2d9ddbea90dd12ae66d57e55e1f63" translate="yes" xml:space="preserve">
          <source>Curves are typically not used directly, instead being passed to &lt;a href=&quot;#line_curve&quot;&gt;&lt;em&gt;line&lt;/em&gt;.curve&lt;/a&gt; and &lt;a href=&quot;#area_curve&quot;&gt;&lt;em&gt;area&lt;/em&gt;.curve&lt;/a&gt;. However, you can define your own curve implementation should none of the built-in curves satisfy your needs using the following interface. You can also use this low-level interface with a built-in curve type as an alternative to the line and area generators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2fb855a54e279b1c8eefc408f5923c30e53630a" translate="yes" xml:space="preserve">
          <source>Custom Curves</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b57e540780727d1f12fbe8e16dfd57a4bbb11228" translate="yes" xml:space="preserve">
          <source>Custom Symbol Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c324659f4613452cf5186fa883c56c0493c5488" translate="yes" xml:space="preserve">
          <source>Cyclical</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4224c6ac669fbc0795c59a8fd678058afd464fc7" translate="yes" xml:space="preserve">
          <source>Cylindrical</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5978a14b1d9b7b3622109de9ec6a54034a9b3775" translate="yes" xml:space="preserve">
          <source>Cylindrical Projections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c14c02b5f759ec4e791a8e28856b1491f2fcccc" translate="yes" xml:space="preserve">
          <source>Cylindrical projections project the sphere onto a containing cylinder, and then unroll the cylinder onto the plane. &lt;a href=&quot;http://www.progonos.com/furuti/MapProj/Normal/ProjPCyl/projPCyl.html&quot;&gt;Pseudocylindrical projections&lt;/a&gt; are a generalization of cylindrical projections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4153f68d8476e767261362dfd8ef57db3a19632" translate="yes" xml:space="preserve">
          <source>D3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c16429e8d46c2d226c363c85ee8d9cd2ca30c3d1" translate="yes" xml:space="preserve">
          <source>D3 3.x used strings, such as &amp;ldquo;cubic-in-out&amp;rdquo;, to identify easing methods; these strings could be passed to d3.ease or &lt;em&gt;transition&lt;/em&gt;.ease. D3 4.0 uses symbols instead, such as &lt;a href=&quot;../../../d3-ease#easeCubicInOut&quot;&gt;d3.easeCubicInOut&lt;/a&gt;. Symbols are simpler and cleaner. They work well with Rollup to produce smaller custom bundles. You can still define your own custom easing function, too, if desired. Here&amp;rsquo;s the full list of equivalents:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e52d0e85b1b9c2f4bdb5922c1e8ed0b256b25994" translate="yes" xml:space="preserve">
          <source>D3 4.0 is modular. Instead of one library, D3 is now &lt;a href=&quot;#table-of-contents&quot;&gt;many small libraries&lt;/a&gt; that are designed to work together. You can pick and choose which parts to use as you see fit. Each library is maintained in its own repository, allowing decentralized ownership and independent release cycles. The default bundle combines about thirty of these microlibraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba712fa7cfb7f3d7c4179ee844e99f7e8f654145" translate="yes" xml:space="preserve">
          <source>D3 4.0 now also lets you define custom time intervals using &lt;a href=&quot;../../../d3-time#timeInterval&quot;&gt;d3.timeInterval&lt;/a&gt;. The &lt;a href=&quot;../../../d3-time#timeYear&quot;&gt;d3.timeYear&lt;/a&gt;, &lt;a href=&quot;../../../d3-time#utcYear&quot;&gt;d3.utcYear&lt;/a&gt;, &lt;a href=&quot;../../../d3-time#timeMillisecond&quot;&gt;d3.timeMillisecond&lt;/a&gt; and &lt;a href=&quot;../../../d3-time#utcMillisecond&quot;&gt;d3.utcMillisecond&lt;/a&gt; intervals have optimized implementations of &lt;a href=&quot;../../../d3-time#interval_every&quot;&gt;&lt;em&gt;interval&lt;/em&gt;.every&lt;/a&gt;, which is necessary to generate time ticks for very large or very small domains efficiently. More generally, the performance of time intervals has been improved, and time intervals now do a better job with respect to daylight savings in various locales.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="419861edd27ca5de660837ca7f975a1e7c4003c9" translate="yes" xml:space="preserve">
          <source>D3 4.0 provides default styles and shorter syntax. In place of d3.svg.axis and &lt;em&gt;axis&lt;/em&gt;.orient, D3 4.0 now provides four constructors for each orientation: &lt;a href=&quot;../../../d3-axis#axisTop&quot;&gt;d3.axisTop&lt;/a&gt;, &lt;a href=&quot;../../../d3-axis#axisRight&quot;&gt;d3.axisRight&lt;/a&gt;, &lt;a href=&quot;../../../d3-axis#axisBottom&quot;&gt;d3.axisBottom&lt;/a&gt;, &lt;a href=&quot;../../../d3-axis#axisLeft&quot;&gt;d3.axisLeft&lt;/a&gt;. These constructors accept a scale, so you can reduce all of the above to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2978eae1613dc882e8b1cb72aa17f15b48718826" translate="yes" xml:space="preserve">
          <source>D3 5.0 introduces only a few non-backwards-compatible changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99b1e2901c698cc6cc6160ded7ff697e4152a0f5" translate="yes" xml:space="preserve">
          <source>D3 API Reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="249eccd9d406d71d7a5b4f4f8d82c810bf888563" translate="yes" xml:space="preserve">
          <source>D3 is a &lt;a href=&quot;https://github.com/d3&quot;&gt;collection of modules&lt;/a&gt; that are designed to work together; you can use the modules independently, or you can use them together as part of the default build. The source and documentation for each module is available in its repository. Follow the links below to learn more. For changes between major versions, see &lt;a href=&quot;d3/blob/master/changes.md&quot;&gt;CHANGES&lt;/a&gt;; see also the &lt;a href=&quot;https://github.com/d3/d3/releases&quot;&gt;release notes&lt;/a&gt; and the &lt;a href=&quot;https://github.com/d3/d3-3.x-api-reference/blob/master/API-Reference.md&quot;&gt;3.x reference&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ec3a947cc01630c173842bf86f4ce059d578b1" translate="yes" xml:space="preserve">
          <source>D3 locals allow you to define local state independent of data. For instance, when rendering &lt;a href=&quot;http://bl.ocks.org/mbostock/e1192fe405703d8321a5187350910e08&quot;&gt;small multiples&lt;/a&gt; of time-series data, you might want the same &lt;em&gt;x&lt;/em&gt;-scale for all charts but distinct &lt;em&gt;y&lt;/em&gt;-scales to compare the relative performance of each metric. D3 locals are scoped by DOM elements: on set, the value is stored on the given element; on get, the value is retrieved from given element or the nearest ancestor that defines it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b963fbd750dde45a1f6efeb8d609a747525f68b8" translate="yes" xml:space="preserve">
          <source>D3 no longer provides the d3.schemeCategory20* categorical color schemes. These twenty-color schemes were flawed because their grouped design could falsely imply relationships in the data: a shared hue can imply that the encoded data are part of a group (a super-category), while relative lightness can imply order. Instead, D3 now includes &lt;a href=&quot;../../../d3-scale-chromatic&quot;&gt;d3-scale-chromatic&lt;/a&gt;, which implements excellent schemes from ColorBrewer, including &lt;a href=&quot;../../../d3-scale-chromatic#categorical&quot;&gt;categorical&lt;/a&gt;, &lt;a href=&quot;../../../d3-scale-chromatic#diverging&quot;&gt;diverging&lt;/a&gt;, &lt;a href=&quot;../../../d3-scale-chromatic#sequential-single-hue&quot;&gt;sequential single-hue&lt;/a&gt; and &lt;a href=&quot;../../../d3-scale-chromatic#sequential-multi-hue&quot;&gt;sequential multi-hue&lt;/a&gt; schemes. These schemes are available in both discrete and continuous variants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2954f1c41a6c44593702b83b1458fccc61df0c8" translate="yes" xml:space="preserve">
          <source>D3 now provides implementations of &lt;a href=&quot;https://beta.observablehq.com/@mbostock/d3-contour-plot&quot;&gt;marching squares&lt;/a&gt; and &lt;a href=&quot;https://beta.observablehq.com/@mbostock/d3-density-contours&quot;&gt;density estimation&lt;/a&gt; via &lt;a href=&quot;../../../d3-contour&quot;&gt;d3-contour&lt;/a&gt;! There are two new &lt;a href=&quot;../../../d3-selection&quot;&gt;d3-selection&lt;/a&gt; methods: &lt;a href=&quot;../../../d3-selection#selection_clone&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.clone&lt;/a&gt; for inserting clones of the selected nodes, and &lt;a href=&quot;../../../d3-selection#create&quot;&gt;d3.create&lt;/a&gt; for creating detached elements. &lt;a href=&quot;../../../d3-geo&quot;&gt;Geographic projections&lt;/a&gt; now support &lt;a href=&quot;../../../d3-geo#projection_angle&quot;&gt;&lt;em&gt;projection&lt;/em&gt;.angle&lt;/a&gt;, which has enabled several fantastic new &lt;a href=&quot;../../../d3-geo-polygon&quot;&gt;polyhedral projections&lt;/a&gt; by Philippe Rivi&amp;egrave;re.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32652a8d9359e59c02b93148b847fb472586e68b" translate="yes" xml:space="preserve">
          <source>D3 now uses &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Guide/Using_promises&quot;&gt;Promises&lt;/a&gt; instead of asynchronous callbacks to load data. Promises simplify the structure of asynchronous code, especially in modern browsers that support &lt;a href=&quot;https://javascript.info/async-await&quot;&gt;async and await&lt;/a&gt;. (See this &lt;a href=&quot;https://beta.observablehq.com/@mbostock/introduction-to-promises&quot;&gt;introduction to promises&lt;/a&gt; on &lt;a href=&quot;https://beta.observablehq.com&quot;&gt;Observable&lt;/a&gt;.) For example, to load a CSV file in v4, you might say:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c2d79267bc433658e7f754a07e0cc70227be28" translate="yes" xml:space="preserve">
          <source>D3 transforms geometry using a sequence of function calls, rather than materializing intermediate representations, to minimize overhead. Streams must implement several methods to receive input geometry. Streams are inherently stateful; the meaning of a &lt;a href=&quot;#point&quot;&gt;point&lt;/a&gt; depends on whether the point is inside of a &lt;a href=&quot;#lineStart&quot;&gt;line&lt;/a&gt;, and likewise a line is distinguished from a ring by a &lt;a href=&quot;#polygonStart&quot;&gt;polygon&lt;/a&gt;. Despite the name &amp;ldquo;stream&amp;rdquo;, these method calls are currently synchronous.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="801113faae96a86df5a1ce89ce6409a397d671a4" translate="yes" xml:space="preserve">
          <source>D3 uses &lt;a href=&quot;http://geojson.org/geojson-spec.html&quot;&gt;GeoJSON&lt;/a&gt; to represent geographic features in JavaScript. (See also &lt;a href=&quot;https://github.com/mbostock/topojson&quot;&gt;TopoJSON&lt;/a&gt;, an extension of GeoJSON that is significantly more compact and encodes topology.) To convert shapefiles to GeoJSON, use &lt;a href=&quot;https://github.com/mbostock/shapefile#shp2geo&quot;&gt;shp2geo&lt;/a&gt;, part of the &lt;a href=&quot;https://github.com/mbostock/shapefile&quot;&gt;shapefile package&lt;/a&gt;. See &lt;a href=&quot;https://medium.com/@mbostock/command-line-cartography-part-1-897aa8f8ca2c&quot;&gt;Command-Line Cartography&lt;/a&gt; for an introduction to d3-geo and related tools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7a7a59ccfd5d29ec02afa72c48026ff9a4164cd" translate="yes" xml:space="preserve">
          <source>D3 uses &lt;a href=&quot;http://semver.org/&quot;&gt;semantic versioning&lt;/a&gt;. The current version is exposed as d3.version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e5ce99a1af7c68ab7d75e2e7878b1ea3d98a78b" translate="yes" xml:space="preserve">
          <source>D3&amp;rsquo;s approach affords great expressiveness: you can choose the right projection, and the right aspect, for your data. D3 supports a wide variety of common and &lt;a href=&quot;d3-geo-projection&quot;&gt;unusual map projections&lt;/a&gt;. For more, see Part 2 of &lt;a href=&quot;https://vimeo.com/106198518#t=20m0s&quot;&gt;The Toolmaker&amp;rsquo;s Guide&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da723bc38aaf5f90859a67c0ad3328d59c066d34" translate="yes" xml:space="preserve">
          <source>D3.js</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b150f5fe7e819c7ffa1b9aed8c9dbd2cf4631192" translate="yes" xml:space="preserve">
          <source>DSV</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dee2e2e4e48f19a51b5e416724e1e3b6304f78e" translate="yes" xml:space="preserve">
          <source>DSV files sometimes begin with a &lt;a href=&quot;https://en.wikipedia.org/wiki/Byte_order_mark&quot;&gt;byte order mark (BOM)&lt;/a&gt;; saving a spreadsheet in CSV UTF-8 format from Microsoft Excel, for example, will include a BOM. On the web this is not usually a problem because the &lt;a href=&quot;https://encoding.spec.whatwg.org/#utf-8-decode&quot;&gt;UTF-8 decode algorithm&lt;/a&gt; specified in the Encoding standard removes the BOM. Node.js, on the other hand, &lt;a href=&quot;https://github.com/nodejs/node-v0.x-archive/issues/1918&quot;&gt;does not remove the BOM&lt;/a&gt; when decoding UTF-8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe2f3e61e8e36294b2e7e82c2f1912bafe4a1ab9" translate="yes" xml:space="preserve">
          <source>Data in JavaScript is often represented by an array, and so one tends to manipulate arrays when visualizing or analyzing data. Some common forms of manipulation include taking a contiguous slice (subset) of an array, filtering an array using a predicate function, and mapping an array to a parallel set of values using a transform function. Before looking at the set of utilities that this module provides, familiarize yourself with the powerful &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/prototype&quot;&gt;array methods built-in to JavaScript&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="842b7b5d71896a41ecd92997ec80b1df5243c81e" translate="yes" xml:space="preserve">
          <source>Dates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a157501a72a49bc11310edcb15c9692d36c8384c" translate="yes" xml:space="preserve">
          <source>Dave Green&amp;rsquo;s &lt;a href=&quot;#cubehelix&quot;&gt;Cubehelix&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="080e3dd853aa7c28a8022990d9e98bf5f2f06d62" translate="yes" xml:space="preserve">
          <source>Days (e.g., February 7, 2012 at 12:00 AM); typically 24 hours. Days in local time may range from 23 to 25 hours due to daylight saving.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef16e8f44dd186f2ff9c365bcb9f3bd6c6f79708" translate="yes" xml:space="preserve">
          <source>Declares a new local variable. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="808d7dca8a74d84af27a2d6602c3d786de45fe1e" translate="yes" xml:space="preserve">
          <source>Default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d958b26b7722605ef1335b582b4daaf72ca09841" translate="yes" xml:space="preserve">
          <source>Default Prevented?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9969582f8125fe22fd292674d238ce76313a92c4" translate="yes" xml:space="preserve">
          <source>Default aspect uses &lt;em&gt;projection&lt;/em&gt;.rotate([30, 180]) and has the North Pole at the triangle&amp;rsquo;s center -- use &lt;em&gt;projection&lt;/em&gt;.rotate([-30, 0]) for the &lt;a href=&quot;https://beta.observablehq.com/@fil/lee-projection&quot;&gt;South aspect&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90842d755a4f70e3a8c2057fc86944e9955e077e" translate="yes" xml:space="preserve">
          <source>Defaults to 0&amp;deg;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd3a29cd21a0bfbea1aa85c9aeb92c3e3d6a2e3e" translate="yes" xml:space="preserve">
          <source>Defaults to 0.5, corresponding to a sin(&amp;psi;) where &amp;psi; = &amp;pi;/6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e399763f14e80309ed3b294a7c6f455666f2ece7" translate="yes" xml:space="preserve">
          <source>Defaults to 0.5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24ec1aaddb3dbf7a40c97b26de6d27c36a8751fa" translate="yes" xml:space="preserve">
          <source>Defaults to 1. With a ratio of 0, this projection becomes the &lt;a href=&quot;http://bl.ocks.org/mbostock/4479547&quot;&gt;Maurer No. 73&lt;/a&gt;. As it approaches &amp;infin;, the projection converges to the &lt;a href=&quot;#geoEckert4&quot;&gt;Eckert IV&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffe15d84c61aae2cf83d4071744a9d232f3dad11" translate="yes" xml:space="preserve">
          <source>Defaults to 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4243a2e366f75aa713bf0374f362333cf6317d42" translate="yes" xml:space="preserve">
          <source>Defaults to 20&amp;deg;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d9c9a40fba9ed304b1e9d2591c8dc065c8c1ee9" translate="yes" xml:space="preserve">
          <source>Defaults to 30&amp;deg;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40e3792653cb7d136a7f41c748c88f30c95193dc" translate="yes" xml:space="preserve">
          <source>Defaults to 40&amp;deg;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9491e06e4c3e7d8c1927e56a2a9bf67b710b0904" translate="yes" xml:space="preserve">
          <source>Defaults to 45&amp;deg;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="168ccb2c18132345996de70e8b9a8aff92ac5ff9" translate="yes" xml:space="preserve">
          <source>Defaults to 6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="004a2589f8cbddbc744cb784fb35e5337f7cb2c4" translate="yes" xml:space="preserve">
          <source>Defaults to 90&amp;deg;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2934f2af2abd8588426471064cf226c09e07974f" translate="yes" xml:space="preserve">
          <source>Defaults to approximately 38.58&amp;deg;, fitting the world in a 960&amp;times;500 rectangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="867cccafe87efb456de15e245670ec2a9da44d20" translate="yes" xml:space="preserve">
          <source>Defines a new interrupted projection for the specified &lt;a href=&quot;#raw-projections&quot;&gt;raw projection&lt;/a&gt; function &lt;em&gt;project&lt;/em&gt; and the specified array of &lt;em&gt;lobes&lt;/em&gt;. The array &lt;em&gt;lobes&lt;/em&gt; contains two elements representing the hemilobes for the northern hemisphere and the southern hemisphere, respectively. Each hemilobe is an array of triangles, with each triangle represented as three points (in degrees): the start, midpoint, and end. For example, the lobes in &lt;a href=&quot;#geoInterruptedHomolosine&quot;&gt;Goode&amp;rsquo;s interrupted homolosine&lt;/a&gt; projection are defined as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce4a29644dc41598bfaca35b69d51ac7720379e5" translate="yes" xml:space="preserve">
          <source>Defines a new polyhedral projection. The &lt;em&gt;root&lt;/em&gt; is a spanning tree of polygon face nodes; each &lt;em&gt;node&lt;/em&gt; is assigned a &lt;em&gt;node&lt;/em&gt;.transform matrix. The &lt;em&gt;face&lt;/em&gt; function returns the appropriate &lt;em&gt;node&lt;/em&gt; for a given &lt;em&gt;lambda&lt;/em&gt; and &lt;em&gt;phi&lt;/em&gt; in radians. Use &lt;a href=&quot;d3-geo#projection_angle&quot;&gt;&lt;em&gt;projection&lt;/em&gt;.angle&lt;/a&gt; to set the orientation of the map (the default &lt;em&gt;angle&lt;/em&gt;, -30&amp;deg;, might change in the next major version).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="450d477b8d6ce52de32d8d7ee8816fc342da61f0" translate="yes" xml:space="preserve">
          <source>Defines a new polyhedral projection. The &lt;em&gt;tree&lt;/em&gt; is a spanning tree of polygon face nodes; each &lt;em&gt;node&lt;/em&gt; is assigned a &lt;em&gt;node&lt;/em&gt;.transform matrix. The &lt;em&gt;face&lt;/em&gt; function returns the appropriate &lt;em&gt;node&lt;/em&gt; for a given &lt;em&gt;lambda&lt;/em&gt; and &lt;em&gt;phi&lt;/em&gt; in radians.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee0da042f5330e9e07da8297adcc2c5378fa9635" translate="yes" xml:space="preserve">
          <source>Defines a new quincuncial projection for the specified &lt;a href=&quot;#raw-projections&quot;&gt;raw projection&lt;/a&gt; function &lt;em&gt;project&lt;/em&gt;. The default rotation is [-90&amp;deg;, -90&amp;deg;, 45&amp;deg;] and the default clip angle is 180&amp;deg; - &amp;epsilon;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b40e297afc31dc37a8e028ea84f7a77f6a02ffa" translate="yes" xml:space="preserve">
          <source>Defines an arbitrary transform using the methods defined on the specified &lt;em&gt;methods&lt;/em&gt; object. Any undefined methods will use pass-through methods that propagate inputs to the output stream. For example, to reflect the &lt;em&gt;y&lt;/em&gt;-dimension (see also &lt;a href=&quot;#identity_reflectY&quot;&gt;&lt;em&gt;identity&lt;/em&gt;.reflectY&lt;/a&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55a6c4adc9209e0eed185206538e5d6d615b2cc7" translate="yes" xml:space="preserve">
          <source>Delaunay</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95e4fbdeebaaf091098369bb26a9ab84c64bedbf" translate="yes" xml:space="preserve">
          <source>Delaunay.&lt;b&gt;from&lt;/b&gt;(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e84a74cf7523e8eb9c85ca5227fa0e78b62f2a4" translate="yes" xml:space="preserve">
          <source>Deletes this local&amp;rsquo;s value from the specified &lt;em&gt;node&lt;/em&gt;. Returns true if the &lt;em&gt;node&lt;/em&gt; defined this local prior to removal, and false otherwise. If ancestors also define this local, those definitions are unaffected, and thus &lt;a href=&quot;#local_get&quot;&gt;&lt;em&gt;local&lt;/em&gt;.get&lt;/a&gt; will still return the inherited value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce4d425c337b4d1c02ca145162543cd17fc9d1e" translate="yes" xml:space="preserve">
          <source>Delimiter-Separated Values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b2d7918883434886da2f23e840c35858f4ea0ce" translate="yes" xml:space="preserve">
          <source>Delimiter-Separated Values (d3-dsv)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76c29fb62c7d526243fcc0a0035fb5c540d72f80" translate="yes" xml:space="preserve">
          <source>Density Estimation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ddb36397e7f13ea114defb1f35c74b9506bc690" translate="yes" xml:space="preserve">
          <source>Depending on the &lt;em&gt;type&lt;/em&gt;, the &lt;em&gt;precision&lt;/em&gt; either indicates the number of digits that follow the decimal point (types &lt;code&gt;f&lt;/code&gt; and &lt;code&gt;%&lt;/code&gt;), or the number of significant digits (types &lt;code&gt;​&lt;/code&gt;, &lt;code&gt;e&lt;/code&gt;, &lt;code&gt;g&lt;/code&gt;, &lt;code&gt;r&lt;/code&gt;, &lt;code&gt;s&lt;/code&gt; and &lt;code&gt;p&lt;/code&gt;). If the precision is not specified, it defaults to 6 for all types except &lt;code&gt;​&lt;/code&gt; (none), which defaults to 12. Precision is ignored for integer formats (types &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;o&lt;/code&gt;, &lt;code&gt;d&lt;/code&gt;, &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;X&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt;). See &lt;a href=&quot;#precisionFixed&quot;&gt;precisionFixed&lt;/a&gt; and &lt;a href=&quot;#precisionRound&quot;&gt;precisionRound&lt;/a&gt; for help picking an appropriate precision.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31cd71f82b52b8ecf241a9f295be91b7177d26b2" translate="yes" xml:space="preserve">
          <source>Directives marked with an asterisk (*) may be affected by the &lt;a href=&quot;#localeFormat&quot;&gt;locale definition&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26a22347efa1aeb51952e38eed266823abb65307" translate="yes" xml:space="preserve">
          <source>Discrete geometry makes the challenge of projecting from the sphere to the plane much harder. The edges of a spherical polygon are &lt;a href=&quot;https://en.wikipedia.org/wiki/Geodesic&quot;&gt;geodesics&lt;/a&gt; (segments of great circles), not straight lines. Projected to the plane, geodesics are curves in all map projections except &lt;a href=&quot;#geoGnomonic&quot;&gt;gnomonic&lt;/a&gt;, and thus accurate projection requires interpolation along each arc. D3 uses &lt;a href=&quot;https://bl.ocks.org/mbostock/3795544&quot;&gt;adaptive sampling&lt;/a&gt; inspired by a popular &lt;a href=&quot;https://bost.ocks.org/mike/simplify/&quot;&gt;line simplification method&lt;/a&gt; to balance accuracy and performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="840e1b364a32917bfd70c15b7a66a756520b0ee8" translate="yes" xml:space="preserve">
          <source>Dispatch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e49ff88522622f45a8535f4fa763af3e7830306" translate="yes" xml:space="preserve">
          <source>Dispatches</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b82d64b6cf2dc72765b48c9536c8836817e858b" translate="yes" xml:space="preserve">
          <source>Dispatches (d3-dispatch)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22564960357f61338c256e3683d50c0f2b698469" translate="yes" xml:space="preserve">
          <source>Dispatches a &lt;a href=&quot;http://www.w3.org/TR/dom/#interface-customevent&quot;&gt;custom event&lt;/a&gt; of the specified &lt;em&gt;type&lt;/em&gt; to each selected element, in order. An optional &lt;em&gt;parameters&lt;/em&gt; map may be specified to set additional properties of the event. It may contain the following fields:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2435f8a29d5c4e835c3192e58302343bdf2fc0fe" translate="yes" xml:space="preserve">
          <source>Dispatching is a convenient mechanism for separating concerns with loosely-coupled code: register named callbacks and then call them with arbitrary arguments. A variety of D3 components, such as &lt;a href=&quot;d3-request&quot;&gt;d3-request&lt;/a&gt;, use this mechanism to emit events to listeners. Think of this like Node&amp;rsquo;s &lt;a href=&quot;https://nodejs.org/api/events.html&quot;&gt;EventEmitter&lt;/a&gt;, except every listener has a well-defined name so it&amp;rsquo;s easy to remove or replace them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d97ac9f3120a280245ec51c5a8d987b3fc71de1" translate="yes" xml:space="preserve">
          <source>Distance from the center of the sphere to the point of view, as a proportion of the sphere&amp;rsquo;s radius; defaults to 2.0. The recommended maximum &lt;a href=&quot;d3-geo#projection_clipAngle&quot;&gt;clip angle&lt;/a&gt; for a given &lt;em&gt;distance&lt;/em&gt; is acos(1 / &lt;em&gt;distance&lt;/em&gt;) converted to degrees. If &lt;a href=&quot;#satellite_tilt&quot;&gt;tilt&lt;/a&gt; is also applied, then more conservative clipping may be necessary. For exact clipping, the in-development geographic projection pipeline is needed; see the &lt;a href=&quot;https://bl.ocks.org/mbostock/e48a00d4db5c3b042145&quot;&gt;satellite example&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae1a8b0a4e4754cf7295b197c6c876ac003b5c5b" translate="yes" xml:space="preserve">
          <source>Diverging</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aabea0cd215cff809ffd0349ef3e027c35c453de" translate="yes" xml:space="preserve">
          <source>Diverging Scales</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35b094df3c60dcf5da390ec395c3640f5a084f38" translate="yes" xml:space="preserve">
          <source>Diverging color schemes are available as continuous interpolators (often used with &lt;a href=&quot;d3-scale#sequential-scales&quot;&gt;d3.scaleSequential&lt;/a&gt;) and as discrete schemes (often used with &lt;a href=&quot;d3-scale#ordinal-scales&quot;&gt;d3.scaleOrdinal&lt;/a&gt;). Each discrete scheme, such as &lt;a href=&quot;#schemeBrBG&quot;&gt;d3.schemeBrBG&lt;/a&gt;, is represented as an array of arrays of hexadecimal color strings. The &lt;em&gt;k&lt;/em&gt;th element of this array contains the color scheme of size &lt;em&gt;k&lt;/em&gt;; for example, &lt;code&gt;d3.schemeBrBG[9]&lt;/code&gt; contains an array of nine strings representing the nine colors of the brown-blue-green diverging color scheme. Diverging color schemes support a size &lt;em&gt;k&lt;/em&gt; ranging from 3 to 11.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48d8e9171b520853e6f0ce40ad40fb8420003a47" translate="yes" xml:space="preserve">
          <source>Diverging scales, like &lt;a href=&quot;#sequential-scales&quot;&gt;sequential scales&lt;/a&gt;, are similar to &lt;a href=&quot;#continuous-scales&quot;&gt;continuous scales&lt;/a&gt; in that they map a continuous, numeric input domain to a continuous output range. However, unlike continuous scales, the output range of a diverging scale is fixed by its interpolator and not configurable. These scales do not expose &lt;a href=&quot;#continuous_invert&quot;&gt;invert&lt;/a&gt;, &lt;a href=&quot;#continuous_range&quot;&gt;range&lt;/a&gt;, &lt;a href=&quot;#continuous_rangeRound&quot;&gt;rangeRound&lt;/a&gt; and &lt;a href=&quot;#continuous_interpolate&quot;&gt;interpolate&lt;/a&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="449710def2d03c91ab4beede1e4dec99fd02cd32" translate="yes" xml:space="preserve">
          <source>Divides the rectangular area specified by &lt;em&gt;x0&lt;/em&gt;, &lt;em&gt;y0&lt;/em&gt;, &lt;em&gt;x1&lt;/em&gt;, &lt;em&gt;y1&lt;/em&gt; horizontally according the value of each of the specified &lt;em&gt;node&lt;/em&gt;&amp;rsquo;s children. The children are positioned in order, starting with the left edge (&lt;em&gt;x0&lt;/em&gt;) of the given rectangle. If the sum of the children&amp;rsquo;s values is less than the specified &lt;em&gt;node&lt;/em&gt;&amp;rsquo;s value (&lt;em&gt;i.e.&lt;/em&gt;, if the specified &lt;em&gt;node&lt;/em&gt; has a non-zero internal value), the remaining empty space will be positioned on the right edge (&lt;em&gt;x1&lt;/em&gt;) of the given rectangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3536da73bec3316065247ab506a5abcac3f86b29" translate="yes" xml:space="preserve">
          <source>Divides the rectangular area specified by &lt;em&gt;x0&lt;/em&gt;, &lt;em&gt;y0&lt;/em&gt;, &lt;em&gt;x1&lt;/em&gt;, &lt;em&gt;y1&lt;/em&gt; vertically according the value of each of the specified &lt;em&gt;node&lt;/em&gt;&amp;rsquo;s children. The children are positioned in order, starting with the top edge (&lt;em&gt;y0&lt;/em&gt;) of the given rectangle. If the sum of the children&amp;rsquo;s values is less than the specified &lt;em&gt;node&lt;/em&gt;&amp;rsquo;s value (&lt;em&gt;i.e.&lt;/em&gt;, if the specified &lt;em&gt;node&lt;/em&gt; has a non-zero internal value), the remaining empty space will be positioned on the bottom edge (&lt;em&gt;y1&lt;/em&gt;) of the given rectangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79d0e9dd530d6de82d7ad2ec7bf5c42ecd73d58d" translate="yes" xml:space="preserve">
          <source>Drag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="803e8071e1ebecf80119ff5d737e25ba893f6df5" translate="yes" xml:space="preserve">
          <source>Drag Event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec85e07254e33572c8e500ff1fdafce3c6331d3" translate="yes" xml:space="preserve">
          <source>Drag Events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9429441d47e19672b910d990c20a6ea49e17744f" translate="yes" xml:space="preserve">
          <source>Drag and drop SVG, HTML or Canvas using mouse or touch input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5f5d1cbecc589c4ec577e9ffa50a5654a1b9b55" translate="yes" xml:space="preserve">
          <source>Dragging</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4879f84e6fe66da6cb1beeff01b3be9f7f22c86a" translate="yes" xml:space="preserve">
          <source>Dragging (d3-drag)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4afb3dfca9346205ceb3d1fe8d3984954b4aa948" translate="yes" xml:space="preserve">
          <source>Draws a circular arc segment with the specified &lt;em&gt;radius&lt;/em&gt; that starts tangent to the line between the current point and the specified point ⟨&lt;em&gt;x1&lt;/em&gt;, &lt;em&gt;y1&lt;/em&gt;⟩ and ends tangent to the line between the specified points ⟨&lt;em&gt;x1&lt;/em&gt;, &lt;em&gt;y1&lt;/em&gt;⟩ and ⟨&lt;em&gt;x2&lt;/em&gt;, &lt;em&gt;y2&lt;/em&gt;⟩. If the first tangent point is not equal to the current point, a straight line is drawn between the current point and the first tangent point. Equivalent to &lt;a href=&quot;http://www.w3.org/TR/2dcontext/#dom-context-2d-arcto&quot;&gt;&lt;em&gt;context&lt;/em&gt;.arcTo&lt;/a&gt; and uses SVG&amp;rsquo;s &lt;a href=&quot;http://www.w3.org/TR/SVG/paths.html#PathDataEllipticalArcCommands&quot;&gt;elliptical arc curve commands&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b3c42df46b7e32df62ebfb6df276629f46e4ae5" translate="yes" xml:space="preserve">
          <source>Draws a circular arc segment with the specified center ⟨&lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;⟩, &lt;em&gt;radius&lt;/em&gt;, &lt;em&gt;startAngle&lt;/em&gt; and &lt;em&gt;endAngle&lt;/em&gt;. If &lt;em&gt;anticlockwise&lt;/em&gt; is true, the arc is drawn in the anticlockwise direction; otherwise, it is drawn in the clockwise direction. If the current point is not equal to the starting point of the arc, a straight line is drawn from the current point to the start of the arc. Equivalent to &lt;a href=&quot;http://www.w3.org/TR/2dcontext/#dom-context-2d-arc&quot;&gt;&lt;em&gt;context&lt;/em&gt;.arc&lt;/a&gt; and uses SVG&amp;rsquo;s &lt;a href=&quot;http://www.w3.org/TR/SVG/paths.html#PathDataEllipticalArcCommands&quot;&gt;elliptical arc curve commands&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be0bfc7eb951bf683a38ac3e8c4309ebbb3ad59d" translate="yes" xml:space="preserve">
          <source>Draws a cubic B&amp;eacute;zier segment from the current point to the specified point ⟨&lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;⟩, with the specified control points ⟨&lt;em&gt;cpx1&lt;/em&gt;, &lt;em&gt;cpy1&lt;/em&gt;⟩ and ⟨&lt;em&gt;cpx2&lt;/em&gt;, &lt;em&gt;cpy2&lt;/em&gt;⟩. Equivalent to &lt;a href=&quot;http://www.w3.org/TR/2dcontext/#dom-context-2d-beziercurveto&quot;&gt;&lt;em&gt;context&lt;/em&gt;.bezierCurveTo&lt;/a&gt; and SVG&amp;rsquo;s &lt;a href=&quot;http://www.w3.org/TR/SVG/paths.html#PathDataCubicBezierCommands&quot;&gt;cubic B&amp;eacute;zier curve commands&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d58a709118cc8d5e638675bfba4ac6c576304614" translate="yes" xml:space="preserve">
          <source>Draws a quadratic B&amp;eacute;zier segment from the current point to the specified point ⟨&lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;⟩, with the specified control point ⟨&lt;em&gt;cpx&lt;/em&gt;, &lt;em&gt;cpy&lt;/em&gt;⟩. Equivalent to &lt;a href=&quot;http://www.w3.org/TR/2dcontext/#dom-context-2d-quadraticcurveto&quot;&gt;&lt;em&gt;context&lt;/em&gt;.quadraticCurveTo&lt;/a&gt; and SVG&amp;rsquo;s &lt;a href=&quot;http://www.w3.org/TR/SVG/paths.html#PathDataQuadraticBezierCommands&quot;&gt;quadratic B&amp;eacute;zier curve commands&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c53528c9ba76face3511afbb1fb62dcac1181b1" translate="yes" xml:space="preserve">
          <source>Draws a straight line from the current point to the specified point ⟨&lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;⟩. Equivalent to &lt;a href=&quot;http://www.w3.org/TR/2dcontext/#dom-context-2d-lineto&quot;&gt;&lt;em&gt;context&lt;/em&gt;.lineTo&lt;/a&gt; and SVG&amp;rsquo;s &lt;a href=&quot;http://www.w3.org/TR/SVG/paths.html#PathDataLinetoCommands&quot;&gt;&amp;ldquo;lineto&amp;rdquo; command&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec40f8ce581715a11fd8f228dca455106c49dd80" translate="yes" xml:space="preserve">
          <source>During the frame the transition starts, but &lt;em&gt;after&lt;/em&gt; all transitions starting this frame have been started, the transition invokes its tweens for the first time. Batching tween initialization, which typically involves reading from the DOM, improves performance by avoiding interleaved DOM reads and writes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c267a7e57a88e656c19615c95b083e211740a05a" translate="yes" xml:space="preserve">
          <source>Each &lt;em&gt;node&lt;/em&gt; must be an object. The following properties are assigned by the simulation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b29cf536c8bab278f057b40f41106ab6a99b6c47" translate="yes" xml:space="preserve">
          <source>Each cell in the diagram is an object with the following properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c385c3deefe36ab2b1b2f45ebba014ca63d99fe" translate="yes" xml:space="preserve">
          <source>Each curve type can define its own named parameters, replacing &lt;em&gt;line&lt;/em&gt;.tension and &lt;em&gt;area&lt;/em&gt;.tension. For example, Catmull&amp;ndash;Rom splines are parameterized using &lt;a href=&quot;../../../d3-shape#curveCatmullRom_alpha&quot;&gt;&lt;em&gt;catmullRom&lt;/em&gt;.alpha&lt;/a&gt; and defaults to 0.5, which corresponds to a centripetal spline that avoids self-intersections and overshoot. For a uniform Catmull&amp;ndash;Rom spline instead:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="162f60651ccbb8d38242b9bab283ee7b469c944f" translate="yes" xml:space="preserve">
          <source>Each edge in the diagram is an array [[&lt;em&gt;x0&lt;/em&gt;, &lt;em&gt;y0&lt;/em&gt;], [&lt;em&gt;x1&lt;/em&gt;, &lt;em&gt;y1&lt;/em&gt;]] with two additional properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a37ad002669b4c8b391d13eb44c400c27324b09" translate="yes" xml:space="preserve">
          <source>Each link is an object with the following properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fc5bdb8dc609ce78eeb226a62b8ec33e164dd9a" translate="yes" xml:space="preserve">
          <source>Each series in then typically passed to an &lt;a href=&quot;#areas&quot;&gt;area generator&lt;/a&gt; to render an area chart, or used to construct rectangles for a bar chart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b949a864ed85216f6e24a68130259f8589df0452" translate="yes" xml:space="preserve">
          <source>Each series in then typically passed to an &lt;a href=&quot;../../../d3-shape#areas&quot;&gt;area generator&lt;/a&gt; to render an area chart, or used to construct rectangles for a bar chart. Stack generators no longer modify the input data, so &lt;em&gt;stack&lt;/em&gt;.out has been removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b9b9f6f3ac96d3f5f7235688f1f7ad9468d35fc" translate="yes" xml:space="preserve">
          <source>Each site in the diagram is an array [&lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;] with two additional properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9184e4e635ea21ff6f44d44dc0a38a3990c1b34f" translate="yes" xml:space="preserve">
          <source>Each source and target subgroup is also an object with the following properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32829191e3824118339d89f2fcce190d4ed10394" translate="yes" xml:space="preserve">
          <source>Each task is defined as a function that takes a callback as its last argument. For example, here&amp;rsquo;s a task that says hello after a short delay:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bb24ccd7d2bf61cee4d7af9620261dc2120d6b0" translate="yes" xml:space="preserve">
          <source>Ease</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba406aa7b84a83f9ffae4a35485f56a326f7a48e" translate="yes" xml:space="preserve">
          <source>Easing functions for smooth animation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79b1943ea75afd35697b3e206bb5ffeeb114156a" translate="yes" xml:space="preserve">
          <source>Easings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33b44b3919b8be82ec5bde28f877a385e697dbc8" translate="yes" xml:space="preserve">
          <source>Easings (d3-ease)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8efdc2de7c7c2e091997e6fb7f47115599d4a323" translate="yes" xml:space="preserve">
          <source>Elastic easing, like a rubber band. The &lt;a href=&quot;#elastic_amplitude&quot;&gt;amplitude&lt;/a&gt; and &lt;a href=&quot;#elastic_period&quot;&gt;period&lt;/a&gt; of the oscillation are configurable; if not specified, they default to 1 and 0.3, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a229fdb5ae7fe30a8b13a6c7af6d3a99ad97b0b" translate="yes" xml:space="preserve">
          <source>Enclosure diagrams use containment (nesting) to represent a hierarchy. The size of the leaf circles encodes a quantitative dimension of the data. The enclosing circles show the approximate cumulative size of each subtree, but due to wasted space there is some distortion; only the leaf nodes can be compared accurately. Although &lt;a href=&quot;http://en.wikipedia.org/wiki/Circle_packing&quot;&gt;circle packing&lt;/a&gt; does not use space as efficiently as a &lt;a href=&quot;#treemap&quot;&gt;treemap&lt;/a&gt;, the &amp;ldquo;wasted&amp;rdquo; space more prominently reveals the hierarchical structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5886f75561f32c00213b01900ef0cc8e9210c7fa" translate="yes" xml:space="preserve">
          <source>Encodings that map abstract data to visual representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d74e6ec4c9f5b190cf3567970fe008292d9e0363" translate="yes" xml:space="preserve">
          <source>Ends the current subpath and causes an automatic straight line to be drawn from the current point to the initial point of the current subpath. Equivalent to &lt;a href=&quot;http://www.w3.org/TR/2dcontext/#dom-context-2d-closepath&quot;&gt;&lt;em&gt;context&lt;/em&gt;.closePath&lt;/a&gt; and SVG&amp;rsquo;s &lt;a href=&quot;http://www.w3.org/TR/SVG/paths.html#PathDataClosePathCommand&quot;&gt;&amp;ldquo;closepath&amp;rdquo; command&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e11b408f0c1ce9afb286c6f0a40593a7bd7293bb" translate="yes" xml:space="preserve">
          <source>Enoch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f3cf30263073322d3fe37c47153aeee99e63a7" translate="yes" xml:space="preserve">
          <source>Enos</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70070b7b2d5e98fddf513b1666209afda8f0e0f9" translate="yes" xml:space="preserve">
          <source>Equal-Earth</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="937044aa4f38680b062afa837abdf7df4eef20b0" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#_area&quot;&gt;&lt;em&gt;area&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="614d69ecaee8a7c676c87d3b40a70e81f9f46717" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#_line&quot;&gt;&lt;em&gt;line&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af00918690c101ef8e1c20367445928c9458f4a8" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#area_curve&quot;&gt;&lt;em&gt;area&lt;/em&gt;.curve&lt;/a&gt;. Note that &lt;a href=&quot;#curveMonotoneX&quot;&gt;curveMonotoneX&lt;/a&gt; or &lt;a href=&quot;#curveMonotoneY&quot;&gt;curveMonotoneY&lt;/a&gt; are not recommended for radial areas because they assume that the data is monotonic in &lt;em&gt;x&lt;/em&gt; or &lt;em&gt;y&lt;/em&gt;, which is typically untrue of radial areas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d84c84c6af5db922c295da3b7b878f7c72a9cd60" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#area_defined&quot;&gt;&lt;em&gt;area&lt;/em&gt;.defined&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8859f222d1a64b9a8b6901ff0806706d3d9025e" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#area_x&quot;&gt;&lt;em&gt;area&lt;/em&gt;.x&lt;/a&gt;, except the accessor returns the angle in radians, with 0 at -&lt;em&gt;y&lt;/em&gt; (12 o&amp;rsquo;clock).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22cd8655ad13e9d62b3ebf8ade2701ba8b13e813" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#area_x0&quot;&gt;&lt;em&gt;area&lt;/em&gt;.x0&lt;/a&gt;, except the accessor returns the angle in radians, with 0 at -&lt;em&gt;y&lt;/em&gt; (12 o&amp;rsquo;clock). Note: typically &lt;a href=&quot;#areaRadial_angle&quot;&gt;angle&lt;/a&gt; is used instead of setting separate start and end angles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92f4fcabc689de6049c9ee957485dc2c2df090af" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#area_x1&quot;&gt;&lt;em&gt;area&lt;/em&gt;.x1&lt;/a&gt;, except the accessor returns the angle in radians, with 0 at -&lt;em&gt;y&lt;/em&gt; (12 o&amp;rsquo;clock). Note: typically &lt;a href=&quot;#areaRadial_angle&quot;&gt;angle&lt;/a&gt; is used instead of setting separate start and end angles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e44078405e8f444343e514a7a3ac60547ddba296" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#area_y&quot;&gt;&lt;em&gt;area&lt;/em&gt;.y&lt;/a&gt;, except the accessor returns the radius: the distance from the origin ⟨0,0⟩.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1561851bb0b718f0688cd4f01e555b73ef225ed8" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#area_y0&quot;&gt;&lt;em&gt;area&lt;/em&gt;.y0&lt;/a&gt;, except the accessor returns the radius: the distance from the origin ⟨0,0⟩.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e201955846ba73477059175aea0f06a83914b14c" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#area_y1&quot;&gt;&lt;em&gt;area&lt;/em&gt;.y1&lt;/a&gt;, except the accessor returns the radius: the distance from the origin ⟨0,0⟩.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48a9c545ce63aa0b6b700ee37b8ad31ea4f3f580" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#bisectLeft&quot;&gt;bisectLeft&lt;/a&gt;, but uses this bisector&amp;rsquo;s associated comparator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f53d3e74166a74b8442705ba0d65136fcecb389c" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#bisectRight&quot;&gt;bisectRight&lt;/a&gt;, but uses this bisector&amp;rsquo;s associated comparator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a2190a559009792f9681644f3d1ec7563f45cc2" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#continuous_nice&quot;&gt;&lt;em&gt;continuous&lt;/em&gt;.nice&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab32294380ea9541b85eeda4698049f7515291f6" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#continuous_tickFormat&quot;&gt;&lt;em&gt;continuous&lt;/em&gt;.tickFormat&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a05ab952d2fa65e09e8bc312cbdbb58c7e5002ce" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#continuous_ticks&quot;&gt;&lt;em&gt;continuous&lt;/em&gt;.ticks&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c8378b314a000ea02e1c0ab89211a6892e948e" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#drag_on&quot;&gt;&lt;em&gt;drag&lt;/em&gt;.on&lt;/a&gt;, but only applies to the current drag gesture. Before the drag gesture starts, a &lt;a href=&quot;d3-dispatch#dispatch_copy&quot;&gt;copy&lt;/a&gt; of the current drag &lt;a href=&quot;#drag_on&quot;&gt;event listeners&lt;/a&gt; is made. This copy is bound to the current drag gesture and modified by &lt;em&gt;event&lt;/em&gt;.on. This is useful for temporary listeners that only receive events for the current drag gesture. For example, this start event listener registers temporary drag and end event listeners as closures:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc0b3da1bb0f1e7245abcefa4ae0867ab52e4e25" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#dsv&quot;&gt;d3.dsv&lt;/a&gt; with the comma character as the delimiter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50f2ce49ec65e726c4fca4433dc9caba24ad506c" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#dsv&quot;&gt;d3.dsv&lt;/a&gt; with the tab character as the delimiter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e043f5a5e3208287f148219fcb17ec6530eb442d" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#dsv2dsv&quot;&gt;dsv2dsv&lt;/a&gt;, but the &lt;a href=&quot;#dsv2dsv_output_delimiter&quot;&gt;input delimiter&lt;/a&gt; defaults to the tab character (\t).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29cd9f27bdd0ba52168a0ae1342175d0641558d4" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#dsv2dsv&quot;&gt;dsv2dsv&lt;/a&gt;, but the &lt;a href=&quot;#dsv2dsv_output_delimiter&quot;&gt;output delimiter&lt;/a&gt; defaults to the tab character (\t).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb3f5f7f705e96f34473fde328256e3d249468d2" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#dsv2json&quot;&gt;dsv2json&lt;/a&gt;, but the &lt;a href=&quot;#dsv2json_input_delimiter&quot;&gt;input delimiter&lt;/a&gt; defaults to the tab character (\t).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d629831f3a31376dd300aff50df5c71efd6ecca" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#dsv2json&quot;&gt;dsv2json&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2097af8942d7068e03f205344ba2c0fd5803a174" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#dsvFormat&quot;&gt;dsvFormat&lt;/a&gt;(&quot;,&quot;).&lt;a href=&quot;#dsv_format&quot;&gt;format&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4900e767c9bd83706839439747c422135b5f42b" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#dsvFormat&quot;&gt;dsvFormat&lt;/a&gt;(&quot;,&quot;).&lt;a href=&quot;#dsv_formatRows&quot;&gt;formatRows&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fbc4c361aae28e847d079cfcbbe4b5ace7d5eed" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#dsvFormat&quot;&gt;dsvFormat&lt;/a&gt;(&quot;,&quot;).&lt;a href=&quot;#dsv_parse&quot;&gt;parse&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3442eac3cfd1d4de2d13e6e990316e5531d313d" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#dsvFormat&quot;&gt;dsvFormat&lt;/a&gt;(&quot;,&quot;).&lt;a href=&quot;#dsv_parseRows&quot;&gt;parseRows&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02db78037999b8e1d2623210c0876491872c037c" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#dsvFormat&quot;&gt;dsvFormat&lt;/a&gt;(&quot;\t&quot;).&lt;a href=&quot;#dsv_format&quot;&gt;format&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c1aefc1e37c89785a2d0b22cb1943dd15a1cda0" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#dsvFormat&quot;&gt;dsvFormat&lt;/a&gt;(&quot;\t&quot;).&lt;a href=&quot;#dsv_formatRows&quot;&gt;formatRows&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9c46b2f7b7c67302bd0d5fd4b53f245a345b995" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#dsvFormat&quot;&gt;dsvFormat&lt;/a&gt;(&quot;\t&quot;).&lt;a href=&quot;#dsv_parse&quot;&gt;parse&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b02a8492ac1b42de2afe937405648cc7bea66343" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#dsvFormat&quot;&gt;dsvFormat&lt;/a&gt;(&quot;\t&quot;).&lt;a href=&quot;#dsv_parseRows&quot;&gt;parseRows&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2da7edb77338fc454e6efc32f7209a8d465f4339" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#formatLocale&quot;&gt;d3.formatLocale&lt;/a&gt;, except it also redefines &lt;a href=&quot;#format&quot;&gt;d3.format&lt;/a&gt; and &lt;a href=&quot;#formatPrefix&quot;&gt;d3.formatPrefix&lt;/a&gt; to the new locale&amp;rsquo;s &lt;a href=&quot;#locale_format&quot;&gt;&lt;em&gt;locale&lt;/em&gt;.format&lt;/a&gt; and &lt;a href=&quot;#locale_formatPrefix&quot;&gt;&lt;em&gt;locale&lt;/em&gt;.formatPrefix&lt;/a&gt;. If you do not set a default locale, it defaults to &lt;a href=&quot;https://github.com/d3/d3-format/blob/master/locale/en-US.json&quot;&gt;U.S. English&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="829dd6c856bf42ecbf1be4a6cc35e898509316a5" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#hcl&quot;&gt;d3.hcl&lt;/a&gt;, but with reversed argument order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8be7d313cb6b6a54b8983f823291cdf3f3dd5d33" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#json2dsv&quot;&gt;json2dsv&lt;/a&gt;, but the &lt;a href=&quot;#json2dsv_output_delimiter&quot;&gt;output delimiter&lt;/a&gt; defaults to the tab character (\t).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08d2ec48bf20962b9e766bea2b5a4062aa3f68ae" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#json2dsv&quot;&gt;json2dsv&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b06e801abc4e91c8fb3b913ce97af42468e96fc0" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#line_context&quot;&gt;&lt;em&gt;line&lt;/em&gt;.context&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c1e66815937bb614b53f196bc33225f2c565956" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#line_curve&quot;&gt;&lt;em&gt;line&lt;/em&gt;.curve&lt;/a&gt;. Note that &lt;a href=&quot;#curveMonotoneX&quot;&gt;curveMonotoneX&lt;/a&gt; or &lt;a href=&quot;#curveMonotoneY&quot;&gt;curveMonotoneY&lt;/a&gt; are not recommended for radial lines because they assume that the data is monotonic in &lt;em&gt;x&lt;/em&gt; or &lt;em&gt;y&lt;/em&gt;, which is typically untrue of radial lines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c45ddeb25e7e836676151f843792ffab5dbf1d6e" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#line_defined&quot;&gt;&lt;em&gt;line&lt;/em&gt;.defined&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e9a0e8bab7808d6f6221390f53f34b663a4b3bc" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#line_x&quot;&gt;&lt;em&gt;line&lt;/em&gt;.x&lt;/a&gt;, except the accessor returns the angle in radians, with 0 at -&lt;em&gt;y&lt;/em&gt; (12 o&amp;rsquo;clock).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9f0e98d3274944d79f576d6c7c18a2d50b725fd" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#line_y&quot;&gt;&lt;em&gt;line&lt;/em&gt;.y&lt;/a&gt;, except the accessor returns the radius: the distance from the origin ⟨0,0⟩.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e20b71e565e09155a06bdc7d372e0f9f4d7d8484" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#link_x&quot;&gt;&lt;em&gt;link&lt;/em&gt;.x&lt;/a&gt;, except the accessor returns the angle in radians, with 0 at -&lt;em&gt;y&lt;/em&gt; (12 o&amp;rsquo;clock).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="794445839ff5b34616b6bd8e357bd28dd74946b5" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#link_y&quot;&gt;&lt;em&gt;link&lt;/em&gt;.y&lt;/a&gt;, except the accessor returns the radius: the distance from the origin ⟨0,0⟩.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf123859beda3ac6c7e71113149be8810ed7edd4" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#locale_format&quot;&gt;&lt;em&gt;locale&lt;/em&gt;.format&lt;/a&gt;, except all directives are interpreted as &lt;a href=&quot;https://en.wikipedia.org/wiki/Coordinated_Universal_Time&quot;&gt;Coordinated Universal Time (UTC)&lt;/a&gt; rather than local time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6043d5c488849d8f324bb9ed10992bdc84a3a2bb" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#locale_format&quot;&gt;&lt;em&gt;locale&lt;/em&gt;.format&lt;/a&gt;, except the returned function will convert values to the units of the appropriate &lt;a href=&quot;https://en.wikipedia.org/wiki/Metric_prefix#List_of_SI_prefixes&quot;&gt;SI prefix&lt;/a&gt; for the specified numeric reference &lt;em&gt;value&lt;/em&gt; before formatting in fixed point notation. The following prefixes are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9cabf4a509b72cf0920e9d4a874917e3b927bdd" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#locale_parse&quot;&gt;&lt;em&gt;locale&lt;/em&gt;.parse&lt;/a&gt;, except all directives are interpreted as &lt;a href=&quot;https://en.wikipedia.org/wiki/Coordinated_Universal_Time&quot;&gt;Coordinated Universal Time (UTC)&lt;/a&gt; rather than local time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a7c5c2fcfa6c5e10edf84d2fe12f422196c8239" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#request_send&quot;&gt;&lt;em&gt;request&lt;/em&gt;.send&lt;/a&gt; with the GET method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52b190a5534c19d13298db7fd81b935d0db07841" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#request_send&quot;&gt;&lt;em&gt;request&lt;/em&gt;.send&lt;/a&gt; with the POST method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="541d17bac10408923d1823a3ce61a810c05df20a" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#time&quot;&gt;time&lt;/a&gt;, but the returned time scale operates in &lt;a href=&quot;https://en.wikipedia.org/wiki/Coordinated_Universal_Time&quot;&gt;Coordinated Universal Time&lt;/a&gt; rather than local time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b07db8d19ed02f923069d9f431e47ad96970a121" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#timeFormatLocale&quot;&gt;d3.timeFormatLocale&lt;/a&gt;, except it also redefines &lt;a href=&quot;#timeFormat&quot;&gt;d3.timeFormat&lt;/a&gt;, &lt;a href=&quot;#timeParse&quot;&gt;d3.timeParse&lt;/a&gt;, &lt;a href=&quot;#utcFormat&quot;&gt;d3.utcFormat&lt;/a&gt; and &lt;a href=&quot;#utcParse&quot;&gt;d3.utcParse&lt;/a&gt; to the new locale&amp;rsquo;s &lt;a href=&quot;#locale_format&quot;&gt;&lt;em&gt;locale&lt;/em&gt;.format&lt;/a&gt;, &lt;a href=&quot;#locale_parse&quot;&gt;&lt;em&gt;locale&lt;/em&gt;.parse&lt;/a&gt;, &lt;a href=&quot;#locale_utcFormat&quot;&gt;&lt;em&gt;locale&lt;/em&gt;.utcFormat&lt;/a&gt; and &lt;a href=&quot;#locale_utcParse&quot;&gt;&lt;em&gt;locale&lt;/em&gt;.utcParse&lt;/a&gt;. If you do not set a default locale, it defaults to &lt;a href=&quot;https://github.com/d3/d3-time-format/blob/master/locale/en-US.json&quot;&gt;U.S. English&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61776de11ddf6556d43ba38b6287ca692e6345a5" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;d3-selection#selection_call&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.call&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a040182db5f8b85f7d0fd488dd6ce73893a876" translate="yes" xml:space="preserve">
          <source>Estimates the density contours for the given array of &lt;em&gt;data&lt;/em&gt;, returning an array of &lt;a href=&quot;http://geojson.org/geojson-spec.html&quot;&gt;GeoJSON&lt;/a&gt;&lt;a href=&quot;http://geojson.org/geojson-spec.html#multipolygon&quot;&gt;MultiPolygon&lt;/a&gt;&lt;a href=&quot;http://geojson.org/geojson-spec.html#geometry-objects&quot;&gt;geometry objects&lt;/a&gt;. Each geometry object represents the area where the estimated number of points per square pixel is greater than or equal to the corresponding &lt;a href=&quot;#density_thresholds&quot;&gt;threshold value&lt;/a&gt;; the threshold value for each geometry object is exposed as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25114a01806569810a44f52aa172d0f7c2350319" translate="yes" xml:space="preserve">
          <source>Evaluates the specified &lt;em&gt;value&lt;/em&gt; function for this &lt;em&gt;node&lt;/em&gt; and each descendant in &lt;a href=&quot;#node_eachAfter&quot;&gt;post-order traversal&lt;/a&gt;, and returns this &lt;em&gt;node&lt;/em&gt;. The &lt;em&gt;node&lt;/em&gt;.value property of each node is set to the numeric value returned by the specified function plus the combined value of all descendants. The function is passed the node&amp;rsquo;s data, and must return a non-negative number. The &lt;em&gt;value&lt;/em&gt; accessor is evaluated for &lt;em&gt;node&lt;/em&gt; and every descendant, including internal nodes; if you only want leaf nodes to have internal value, then return zero for any node with children. &lt;a href=&quot;http://bl.ocks.org/mbostock/b4c0f143db88a9eb01a315a1063c1d77&quot;&gt;For example&lt;/a&gt;, as an alternative to &lt;a href=&quot;#node_count&quot;&gt;&lt;em&gt;node&lt;/em&gt;.count&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a018ecc48a37a9247a6404fd83e085384b445aa" translate="yes" xml:space="preserve">
          <source>Eve</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2112ebf5dab1f89337ca9805a48d47034b50a6a6" translate="yes" xml:space="preserve">
          <source>Even though your browser understands a lot about colors, it doesn&amp;rsquo;t offer much help in manipulating colors through JavaScript. The d3-color module therefore provides representations for various color spaces, allowing specification, conversion and manipulation. (Also see &lt;a href=&quot;d3-interpolate&quot;&gt;d3-interpolate&lt;/a&gt; for color interpolation.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8919ace091b14011c6439cfd5e1707b58f5abd" translate="yes" xml:space="preserve">
          <source>Event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eee89bf53e115d56aa0f4afed0b44acb151fce60" translate="yes" xml:space="preserve">
          <source>Ever noticed how sometimes JavaScript doesn&amp;rsquo;t display numbers the way you expect? Like, you tried to print tenths with a simple loop:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e40bedde33643844c5ba9cf05715c9baf9e9411e" translate="yes" xml:space="preserve">
          <source>Expands the quadtree to cover the specified point ⟨&lt;em&gt;x&lt;/em&gt;,&lt;em&gt;y&lt;/em&gt;⟩, and returns the quadtree. If the quadtree&amp;rsquo;s extent already covers the specified point, this method does nothing. If the quadtree has an extent, the extent is repeatedly doubled to cover the specified point, wrapping the &lt;a href=&quot;#quadtree_root&quot;&gt;root&lt;/a&gt;&lt;a href=&quot;#nodes&quot;&gt;node&lt;/a&gt; as necessary; if the quadtree is empty, the extent is initialized to the extent [[&amp;lfloor;&lt;em&gt;x&lt;/em&gt;&amp;rfloor;, &amp;lfloor;&lt;em&gt;y&lt;/em&gt;&amp;rfloor;], [&amp;lceil;&lt;em&gt;x&lt;/em&gt;&amp;rceil;, &amp;lceil;&lt;em&gt;y&lt;/em&gt;&amp;rceil;]]. (Rounding is necessary such that if the extent is later doubled, the boundaries of existing quadrants do not change due to floating point error.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c464686045a08ad5750e5202caa01ccc5f91e9b0" translate="yes" xml:space="preserve">
          <source>Exponential easing; raises 2 to the exponent 10 * (&lt;em&gt;t&lt;/em&gt; - 1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29caeb1dd722efaad3c4c0f60dcdd8e05c28eaec" translate="yes" xml:space="preserve">
          <source>Extended geographic projections for &lt;a href=&quot;d3-geo&quot;&gt;d3-geo&lt;/a&gt;. See &lt;a href=&quot;https://medium.com/@mbostock/command-line-cartography-part-1-897aa8f8ca2c&quot;&gt;Command-Line Cartography&lt;/a&gt; for an introduction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a41e76c20935ecae50f15b862a8e893e2bf78c09" translate="yes" xml:space="preserve">
          <source>Extends the &lt;a href=&quot;#continuous_domain&quot;&gt;domain&lt;/a&gt; so that it starts and ends on nice round values. This method typically modifies the scale&amp;rsquo;s domain, and may only extend the bounds to the nearest round value. An optional tick &lt;em&gt;count&lt;/em&gt; argument allows greater control over the step size used to extend the bounds, guaranteeing that the returned &lt;a href=&quot;#continuous_ticks&quot;&gt;ticks&lt;/a&gt; will exactly cover the domain. Nicing is useful if the domain is computed from data, say using &lt;a href=&quot;d3-array#extent&quot;&gt;extent&lt;/a&gt;, and may be irregular. For example, for a domain of [0.201479&amp;hellip;, 0.996679&amp;hellip;], a nice domain might be [0.2, 1.0]. If the domain has more than two values, nicing the domain only affects the first and last value. See also d3-array&amp;rsquo;s &lt;a href=&quot;d3-array#tickStep&quot;&gt;tickStep&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76c94771c80afde57f8b32e9d10e342ef1789914" translate="yes" xml:space="preserve">
          <source>Extends the &lt;a href=&quot;#time_domain&quot;&gt;domain&lt;/a&gt; so that it starts and ends on nice round values. This method typically modifies the scale&amp;rsquo;s domain, and may only extend the bounds to the nearest round value. See &lt;a href=&quot;#continuous_nice&quot;&gt;&lt;em&gt;continuous&lt;/em&gt;.nice&lt;/a&gt; for more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e3ccd6df0701a2d3ea223a3d18b4a34e0d96717" translate="yes" xml:space="preserve">
          <source>Feature - a feature containing one of the above geometry objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f29b178b128a5bc3df503f435ed064c6ac600ed" translate="yes" xml:space="preserve">
          <source>FeatureCollection - an array of feature objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d48aafe6892b2843ae94f441b211bdc371656ba4" translate="yes" xml:space="preserve">
          <source>Fetch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3ee034743a8497e4ba0fb45096b31b72b24e0ff" translate="yes" xml:space="preserve">
          <source>Fetches</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2f3bce623617c1d7a51bff35ef0a8f677263e8c" translate="yes" xml:space="preserve">
          <source>Fetches (d3-fetch)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41765c3af7c51b5b7847f2781e8b346e0324f0ea" translate="yes" xml:space="preserve">
          <source>Fetches the &lt;a href=&quot;d3-dsv&quot;&gt;DSV&lt;/a&gt; file at the specified &lt;em&gt;input&lt;/em&gt; URL. If &lt;em&gt;init&lt;/em&gt; is specified, it is passed along to the underlying call to &lt;a href=&quot;https://fetch.spec.whatwg.org/#fetch-method&quot;&gt;fetch&lt;/a&gt;; see &lt;a href=&quot;https://fetch.spec.whatwg.org/#requestinit&quot;&gt;RequestInit&lt;/a&gt; for allowed fields. An optional &lt;em&gt;row&lt;/em&gt; conversion function may be specified to map and filter row objects to a more-specific representation; see &lt;a href=&quot;d3-dsv#dsv_parse&quot;&gt;&lt;em&gt;dsv&lt;/em&gt;.parse&lt;/a&gt; for details. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3732f7de118003c634b32fa3796f740c6ca3e8f" translate="yes" xml:space="preserve">
          <source>Fetches the &lt;a href=&quot;http://json.org&quot;&gt;JSON&lt;/a&gt; file at the specified &lt;em&gt;input&lt;/em&gt; URL. If &lt;em&gt;init&lt;/em&gt; is specified, it is passed along to the underlying call to &lt;a href=&quot;https://fetch.spec.whatwg.org/#fetch-method&quot;&gt;fetch&lt;/a&gt;; see &lt;a href=&quot;https://fetch.spec.whatwg.org/#requestinit&quot;&gt;RequestInit&lt;/a&gt; for allowed fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fee69134d4040916a977fe1211508c47a078ddb" translate="yes" xml:space="preserve">
          <source>Fetches the binary file at the specified &lt;em&gt;input&lt;/em&gt; URL as a Blob. If &lt;em&gt;init&lt;/em&gt; is specified, it is passed along to the underlying call to &lt;a href=&quot;https://fetch.spec.whatwg.org/#fetch-method&quot;&gt;fetch&lt;/a&gt;; see &lt;a href=&quot;https://fetch.spec.whatwg.org/#requestinit&quot;&gt;RequestInit&lt;/a&gt; for allowed fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1ea12e1a216a55b5eda710f5fc06d616cc83383" translate="yes" xml:space="preserve">
          <source>Fetches the binary file at the specified &lt;em&gt;input&lt;/em&gt; URL as an ArrayBuffer. If &lt;em&gt;init&lt;/em&gt; is specified, it is passed along to the underlying call to &lt;a href=&quot;https://fetch.spec.whatwg.org/#fetch-method&quot;&gt;fetch&lt;/a&gt;; see &lt;a href=&quot;https://fetch.spec.whatwg.org/#requestinit&quot;&gt;RequestInit&lt;/a&gt; for allowed fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5047a4482bb5f2d83299e626a57f62ee66e0a3b" translate="yes" xml:space="preserve">
          <source>Fetches the file at the specified &lt;em&gt;input&lt;/em&gt; URL as &lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt; and then &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/DOMParser&quot;&gt;parses it&lt;/a&gt; as HTML. If &lt;em&gt;init&lt;/em&gt; is specified, it is passed along to the underlying call to &lt;a href=&quot;https://fetch.spec.whatwg.org/#fetch-method&quot;&gt;fetch&lt;/a&gt;; see &lt;a href=&quot;https://fetch.spec.whatwg.org/#requestinit&quot;&gt;RequestInit&lt;/a&gt; for allowed fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a42002f9f218c8a3f4472a20696ceb3c3fad223f" translate="yes" xml:space="preserve">
          <source>Fetches the file at the specified &lt;em&gt;input&lt;/em&gt; URL as &lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt; and then &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/DOMParser&quot;&gt;parses it&lt;/a&gt; as SVG. If &lt;em&gt;init&lt;/em&gt; is specified, it is passed along to the underlying call to &lt;a href=&quot;https://fetch.spec.whatwg.org/#fetch-method&quot;&gt;fetch&lt;/a&gt;; see &lt;a href=&quot;https://fetch.spec.whatwg.org/#requestinit&quot;&gt;RequestInit&lt;/a&gt; for allowed fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="422abbf75886012285dc5eb02cd22fed3a7ffe8f" translate="yes" xml:space="preserve">
          <source>Fetches the file at the specified &lt;em&gt;input&lt;/em&gt; URL as &lt;a href=&quot;#text&quot;&gt;text&lt;/a&gt; and then &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/DOMParser&quot;&gt;parses it&lt;/a&gt; as XML. If &lt;em&gt;init&lt;/em&gt; is specified, it is passed along to the underlying call to &lt;a href=&quot;https://fetch.spec.whatwg.org/#fetch-method&quot;&gt;fetch&lt;/a&gt;; see &lt;a href=&quot;https://fetch.spec.whatwg.org/#requestinit&quot;&gt;RequestInit&lt;/a&gt; for allowed fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54f94be96c05e8c5d07d70c1186a5d28f909af50" translate="yes" xml:space="preserve">
          <source>Fetches the image at the specified &lt;em&gt;input&lt;/em&gt; URL. If &lt;em&gt;init&lt;/em&gt; is specified, sets any additional properties on the image before loading. For example, to enable an anonymous &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image&quot;&gt;cross-origin request&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a51614c67c5722bea8a6d4f18be2f21112813d9" translate="yes" xml:space="preserve">
          <source>Fetches the text file at the specified &lt;em&gt;input&lt;/em&gt; URL. If &lt;em&gt;init&lt;/em&gt; is specified, it is passed along to the underlying call to &lt;a href=&quot;https://fetch.spec.whatwg.org/#fetch-method&quot;&gt;fetch&lt;/a&gt;; see &lt;a href=&quot;https://fetch.spec.whatwg.org/#requestinit&quot;&gt;RequestInit&lt;/a&gt; for allowed fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e33ab1e503e8d66cf841d06dffb215b0465d1fdc" translate="yes" xml:space="preserve">
          <source>Filters the selection, returning a new selection that contains only the elements for which the specified &lt;em&gt;filter&lt;/em&gt; is true. The &lt;em&gt;filter&lt;/em&gt; may be specified either as a selector string or a function. If the &lt;em&gt;filter&lt;/em&gt; is a function, it is evaluated for each selected element, in order, being passed the current datum (&lt;em&gt;d&lt;/em&gt;), the current index (&lt;em&gt;i&lt;/em&gt;), and the current group (&lt;em&gt;nodes&lt;/em&gt;), with &lt;em&gt;this&lt;/em&gt; as the current DOM element (&lt;em&gt;nodes&lt;/em&gt;[&lt;em&gt;i&lt;/em&gt;]).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d723b1e952e43d66234d14ee598ede459e8140e3" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;#continuous-scales&quot;&gt;continuous&lt;/a&gt; quantitative data, you typically want a &lt;a href=&quot;#linear-scales&quot;&gt;linear scale&lt;/a&gt;. (For time series data, a &lt;a href=&quot;#time-scales&quot;&gt;time scale&lt;/a&gt;.) If the distribution calls for it, consider transforming data using a &lt;a href=&quot;#power-scales&quot;&gt;power&lt;/a&gt; or &lt;a href=&quot;#log-scales&quot;&gt;log&lt;/a&gt; scale. A &lt;a href=&quot;#quantize-scales&quot;&gt;quantize scale&lt;/a&gt; may aid differentiation by rounding continuous data to a fixed set of discrete values; similarly, a &lt;a href=&quot;#quantile-scales&quot;&gt;quantile scale&lt;/a&gt; computes quantiles from a sample population, and a &lt;a href=&quot;#threshold-scales&quot;&gt;threshold scale&lt;/a&gt; allows you to specify arbitrary breaks in continuous data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="062ec94c903b391a08428afe57b9c5c5eb1c1e44" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;%U&lt;/code&gt;, all days in a new year preceding the first Sunday are considered to be in week 0. For &lt;code&gt;%W&lt;/code&gt;, all days in a new year preceding the first Monday are considered to be in week 0. Week numbers are computed using &lt;a href=&quot;d3-time#interval_count&quot;&gt;&lt;em&gt;interval&lt;/em&gt;.count&lt;/a&gt;. For example, 2015-52 and 2016-00 represent Monday, December 28, 2015, while 2015-53 and 2016-01 represent Monday, January 4, 2016. This differs from the &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_week_date&quot;&gt;ISO week date&lt;/a&gt; specification (&lt;code&gt;%V&lt;/code&gt;), which uses a more complicated definition!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50375ca10912343ff198d43b846c717179aa9291" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;%V&lt;/code&gt;, per the &lt;a href=&quot;http://man7.org/linux/man-pages/man3/strftime.3.html&quot;&gt;strftime man page&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39c877efd944aedab3fd8087e61da432c7193cb7" translate="yes" xml:space="preserve">
          <source>For a longer introduction to nesting, see:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="280fdc51a23e9350eecf5000e362eff1964458c9" translate="yes" xml:space="preserve">
          <source>For a longer introduction, see these recommended tutorials:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ed9fd217f47671b55423689c5f326ca5779123" translate="yes" xml:space="preserve">
          <source>For a valid value &lt;em&gt;y&lt;/em&gt; in the range,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f168b95bab5b07bfbf14449ee4105ec0d90509e" translate="yes" xml:space="preserve">
          <source>For additional color spaces, see:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="445f0fee271ec931b252cec9adee011a054d5dae" translate="yes" xml:space="preserve">
          <source>For advanced usage, selections provide methods for custom control flow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="327753f5b42c1e9a90b3ec2f6e48f2ca81692f91" translate="yes" xml:space="preserve">
          <source>For advanced usage, transitions provide methods for custom control flow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="846d1759178933edb0f93ef7eeed2c99bdecb648" translate="yes" xml:space="preserve">
          <source>For an example, see &lt;a href=&quot;https://bl.ocks.org/mbostock/6f1cc065d4d172bcaf322e399aa8d62f&quot;&gt;Localized Time Axis&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e771e19d5f767a8feae940a7436d3dc6bc38d925" translate="yes" xml:space="preserve">
          <source>For an example, see &lt;a href=&quot;https://bl.ocks.org/mbostock/805115ebaa574e771db1875a6d828949&quot;&gt;Localized Time Axis II&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87d7b689b76e88fa20e87b974c95acc457cfd19c" translate="yes" xml:space="preserve">
          <source>For an interactive explanation of how this library works, see &lt;a href=&quot;https://beta.observablehq.com/@mbostock/the-delaunays-dual&quot;&gt;The Delaunay&amp;rsquo;s Dual&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c37cafcf0aa473195ce842e95010667e7afd823a" translate="yes" xml:space="preserve">
          <source>For an introduction to D3&amp;rsquo;s data joins, see &lt;a href=&quot;http://bost.ocks.org/mike/join/&quot;&gt;Thinking With Joins&lt;/a&gt;. Also see the &lt;a href=&quot;http://bl.ocks.org/mbostock/3808218&quot;&gt;General Update Pattern&lt;/a&gt; examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb240ae32b7fd51c656058ce949f40dc655aa893" translate="yes" xml:space="preserve">
          <source>For an introduction to scales, see &lt;a href=&quot;https://medium.com/@mbostock/introducing-d3-scale-61980c51545f&quot;&gt;Introducing d3-scale&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45841dc01f914d8707ec5e2f05decb6b1b579ea9" translate="yes" xml:space="preserve">
          <source>For an introduction to shapes, see &lt;a href=&quot;https://medium.com/@mbostock/introducing-d3-shape-73f8367e6d12&quot;&gt;Introducing d3-shape&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="649ee2bd83af05661725afe7ba33f4232eb1ab85" translate="yes" xml:space="preserve">
          <source>For consistency with &lt;a href=&quot;../../../d3-shape#arc_padAngle&quot;&gt;&lt;em&gt;arc&lt;/em&gt;.padAngle&lt;/a&gt;, &lt;em&gt;chord&lt;/em&gt;.padding has also been renamed to &lt;a href=&quot;../../../d3-chord#ribbon_padAngle&quot;&gt;&lt;em&gt;ribbon&lt;/em&gt;.padAngle&lt;/a&gt;. A new &lt;a href=&quot;../../../d3-chord#ribbon_context&quot;&gt;&lt;em&gt;ribbon&lt;/em&gt;.context&lt;/a&gt; method lets you render chord diagrams to Canvas! See also &lt;a href=&quot;#paths-d3-path&quot;&gt;d3-path&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b360366f4ab775562b295c65ce99522ef048f7c" translate="yes" xml:space="preserve">
          <source>For convenience, a link&amp;rsquo;s source and target properties may be initialized using numeric or string identifiers rather than object references; see &lt;a href=&quot;#link_id&quot;&gt;&lt;em&gt;link&lt;/em&gt;.id&lt;/a&gt;. When the link force is &lt;a href=&quot;#force_initialize&quot;&gt;initialized&lt;/a&gt; (or re-initialized, as when the nodes or links change), any &lt;em&gt;link&lt;/em&gt;.source or &lt;em&gt;link&lt;/em&gt;.target property which is &lt;em&gt;not&lt;/em&gt; an object is replaced by an object reference to the corresponding &lt;em&gt;node&lt;/em&gt; with the given identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10728f1602f0de632532c60c0ad56d92c19832f4" translate="yes" xml:space="preserve">
          <source>For convenience, aliases for &lt;a href=&quot;#interval_range&quot;&gt;&lt;em&gt;interval&lt;/em&gt;.range&lt;/a&gt; are also provided as plural forms of the corresponding interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2f2eef70989159dea643842b35c647c478ba328" translate="yes" xml:space="preserve">
          <source>For convenience, there are also default aliases for each easing method. For example, &lt;a href=&quot;../../../d3-ease#easeCubic&quot;&gt;d3.easeCubic&lt;/a&gt; is an alias for &lt;a href=&quot;../../../d3-ease#easeCubicInOut&quot;&gt;d3.easeCubicInOut&lt;/a&gt;. Most default to -in-out; the exceptions are &lt;a href=&quot;../../../d3-ease#easeBounce&quot;&gt;d3.easeBounce&lt;/a&gt; and &lt;a href=&quot;../../../d3-ease#easeElastic&quot;&gt;d3.easeElastic&lt;/a&gt;, which default to -out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ecf1224ff6c5aa0856c12586cbe556dcb595c6" translate="yes" xml:space="preserve">
          <source>For discrete ordinal (ordered) or categorical (unordered) data, an &lt;a href=&quot;#ordinal-scales&quot;&gt;ordinal scale&lt;/a&gt; specifies an explicit mapping from a set of data values to a corresponding set of visual attributes (such as colors). The related &lt;a href=&quot;#band-scales&quot;&gt;band&lt;/a&gt; and &lt;a href=&quot;#point-scales&quot;&gt;point&lt;/a&gt; scales are useful for position-encoding ordinal data, such as bars in a bar chart or dots in an categorical scatterplot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="764c192e13a52da3703c1052acb99000e4356d07" translate="yes" xml:space="preserve">
          <source>For each &lt;a href=&quot;#contours_thresholds&quot;&gt;threshold value&lt;/a&gt;, the &lt;a href=&quot;#_contours&quot;&gt;contour generator&lt;/a&gt; constructs a GeoJSON MultiPolygon geometry object representing the area where the input values are greater than or equal to the threshold value. The geometry is in planar coordinates, where ⟨</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="491313449cab2d0a3c1a5bc06385f35444a2a637" translate="yes" xml:space="preserve">
          <source>For each adjacent pair of elements in the specified &lt;em&gt;array&lt;/em&gt;, in order, invokes the specified &lt;em&gt;reducer&lt;/em&gt; function passing the element &lt;em&gt;i&lt;/em&gt; and element &lt;em&gt;i&lt;/em&gt; - 1. If a &lt;em&gt;reducer&lt;/em&gt; is not specified, it defaults to a function which creates a two-element array for each pair:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="556e6c4e59fb6e5ed554b6c8ae7120c09c310876" translate="yes" xml:space="preserve">
          <source>For each frame that a transition is active, it invokes its tweens with an &lt;a href=&quot;#transition_ease&quot;&gt;eased&lt;/a&gt;&lt;em&gt;t&lt;/em&gt;-value ranging from 0 to 1. Within each frame, the transition invokes its tweens in the order they were registered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af704dcb4e3024d85d6dfe0a06b9db4360a65e4" translate="yes" xml:space="preserve">
          <source>For each number embedded in &lt;em&gt;b&lt;/em&gt;, the interpolator will attempt to find a corresponding number in &lt;em&gt;a&lt;/em&gt;. If a corresponding number is found, a numeric interpolator is created using &lt;a href=&quot;#interpolateNumber&quot;&gt;interpolateNumber&lt;/a&gt;. The remaining parts of the string &lt;em&gt;b&lt;/em&gt; are used as a template: the static parts of the string &lt;em&gt;b&lt;/em&gt; remain constant for the interpolation, with the interpolated numeric values embedded in the template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a140ec0e9382523f81286dbc9d617924d2fa0ad" translate="yes" xml:space="preserve">
          <source>For each selected element, &lt;a href=&quot;d3-selection#selection_remove&quot;&gt;removes&lt;/a&gt; the element when the transition ends, as long as the element has no other active or pending transitions. If the element has other active or pending transitions, does nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9ee0963efaa2a131f781f14f856e5998a620905" translate="yes" xml:space="preserve">
          <source>For each selected element, assigns the &lt;a href=&quot;#transition_attrTween&quot;&gt;attribute tween&lt;/a&gt; for the attribute with the specified &lt;em&gt;name&lt;/em&gt; to the specified target &lt;em&gt;value&lt;/em&gt;. The starting value of the tween is the attribute&amp;rsquo;s value when the transition starts. The target &lt;em&gt;value&lt;/em&gt; may be specified either as a constant or a function. If a function, it is immediately evaluated for each selected element, in order, being passed the current datum &lt;code&gt;d&lt;/code&gt; and index &lt;code&gt;i&lt;/code&gt;, with the &lt;code&gt;this&lt;/code&gt; context as the current DOM element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c092d324cce1792694f3da11809a54a29ad1b0" translate="yes" xml:space="preserve">
          <source>For each selected element, assigns the &lt;a href=&quot;#transition_styleTween&quot;&gt;style tween&lt;/a&gt; for the style with the specified &lt;em&gt;name&lt;/em&gt; to the specified target &lt;em&gt;value&lt;/em&gt; with the specified &lt;em&gt;priority&lt;/em&gt;. The starting value of the tween is the style&amp;rsquo;s inline value if present, and otherwise its computed value, when the transition starts. The target &lt;em&gt;value&lt;/em&gt; may be specified either as a constant or a function. If a function, it is immediately evaluated for each selected element, in order, being passed the current datum &lt;code&gt;d&lt;/code&gt; and index &lt;code&gt;i&lt;/code&gt;, with the &lt;code&gt;this&lt;/code&gt; context as the current DOM element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd16f0a2998a62ea6924c2f9d6d93722744630a" translate="yes" xml:space="preserve">
          <source>For each selected element, assigns the tween with the specified &lt;em&gt;name&lt;/em&gt; with the specified &lt;em&gt;value&lt;/em&gt; function. The &lt;em&gt;value&lt;/em&gt; must be specified as a function that returns a function. When the transition starts, the &lt;em&gt;value&lt;/em&gt; function is evaluated for each selected element, in order, being passed the current datum &lt;code&gt;d&lt;/code&gt; and index &lt;code&gt;i&lt;/code&gt;, with the &lt;code&gt;this&lt;/code&gt; context as the current DOM element. The returned function is then invoked for each frame of the transition, in order, being passed the &lt;a href=&quot;#transition_ease&quot;&gt;eased&lt;/a&gt; time &lt;em&gt;t&lt;/em&gt;, typically in the range [0, 1]. If the specified &lt;em&gt;value&lt;/em&gt; is null, removes the previously-assigned tween of the specified &lt;em&gt;name&lt;/em&gt;, if any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="202c115dafd0290af92a427692013b012c353aa1" translate="yes" xml:space="preserve">
          <source>For each selected element, selects all descendant elements that match the specified &lt;em&gt;selector&lt;/em&gt; string, if any, and returns a transition on the resulting selection. The &lt;em&gt;selector&lt;/em&gt; may be specified either as a selector string or a function. If a function, it is evaluated for each selected element, in order, being passed the current datum &lt;code&gt;d&lt;/code&gt; and index &lt;code&gt;i&lt;/code&gt;, with the &lt;code&gt;this&lt;/code&gt; context as the current DOM element. The new transition has the same id, name and timing as this transition; however, if a transition with the same id already exists on a selected element, the existing transition is returned for that element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="435c657171970f2e848215021b31910866fbf299" translate="yes" xml:space="preserve">
          <source>For each selected element, selects only the elements that match the specified &lt;em&gt;filter&lt;/em&gt;, and returns a transition on the resulting selection. The &lt;em&gt;filter&lt;/em&gt; may be specified either as a selector string or a function. If a function, it is evaluated for each selected element, in order, being passed the current datum &lt;code&gt;d&lt;/code&gt; and index &lt;code&gt;i&lt;/code&gt;, with the &lt;code&gt;this&lt;/code&gt; context as the current DOM element. The new transition has the same id, name and timing as this transition; however, if a transition with the same id already exists on a selected element, the existing transition is returned for that element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2ab49f27626c0912864b7182b88e32bef695fb3" translate="yes" xml:space="preserve">
          <source>For each selected element, selects the descendant elements that match the specified &lt;em&gt;selector&lt;/em&gt; string. The elements in the returned selection are grouped by their corresponding parent node in this selection. If no element matches the specified selector for the current element, or if the &lt;em&gt;selector&lt;/em&gt; is null, the group at the current index will be empty. The selected elements do not inherit data from this selection; use &lt;a href=&quot;#selection_data&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.data&lt;/a&gt; to propagate data to children. For example, to select the bold elements in every paragraph:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15215ded68021e96260d47e71fe7c1ffb7e58a7c" translate="yes" xml:space="preserve">
          <source>For each selected element, selects the first descendant element that matches the specified &lt;em&gt;selector&lt;/em&gt; string, if any, and returns a transition on the resulting selection. The &lt;em&gt;selector&lt;/em&gt; may be specified either as a selector string or a function. If a function, it is evaluated for each selected element, in order, being passed the current datum &lt;code&gt;d&lt;/code&gt; and index &lt;code&gt;i&lt;/code&gt;, with the &lt;code&gt;this&lt;/code&gt; context as the current DOM element. The new transition has the same id, name and timing as this transition; however, if a transition with the same id already exists on a selected element, the existing transition is returned for that element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba10e28f463c7fccb73236be760673c836fab5c6" translate="yes" xml:space="preserve">
          <source>For each selected element, selects the first descendant element that matches the specified &lt;em&gt;selector&lt;/em&gt; string. If no element matches the specified selector for the current element, the element at the current index will be null in the returned selection. (If the &lt;em&gt;selector&lt;/em&gt; is null, every element in the returned selection will be null, resulting in an empty selection.) If the current element has associated data, this data is propagated to the corresponding selected element. If multiple elements match the selector, only the first matching element in document order is selected. For example, to select the first bold element in every paragraph:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a3c373e05a0e860367e963da9b7083421e6f14f" translate="yes" xml:space="preserve">
          <source>For each selected element, sets the &lt;a href=&quot;http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-textContent&quot;&gt;text content&lt;/a&gt; to the specified target &lt;em&gt;value&lt;/em&gt; when the transition starts. The &lt;em&gt;value&lt;/em&gt; may be specified either as a constant or a function. If a function, it is immediately evaluated for each selected element, in order, being passed the current datum &lt;code&gt;d&lt;/code&gt; and index &lt;code&gt;i&lt;/code&gt;, with the &lt;code&gt;this&lt;/code&gt; context as the current DOM element. The function&amp;rsquo;s return value is then used to set each element&amp;rsquo;s text content. A null value will clear the content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02403305ed6552e024d83dd2d3f505aa032a221b" translate="yes" xml:space="preserve">
          <source>For each selected element, sets the transition delay to the specified &lt;em&gt;value&lt;/em&gt; in milliseconds. The &lt;em&gt;value&lt;/em&gt; may be specified either as a constant or a function. If a function, it is immediately evaluated for each selected element, in order, being passed the current datum &lt;code&gt;d&lt;/code&gt; and index &lt;code&gt;i&lt;/code&gt;, with the &lt;code&gt;this&lt;/code&gt; context as the current DOM element. The function&amp;rsquo;s return value is then used to set each element&amp;rsquo;s transition delay. If a delay is not specified, it defaults to zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45fc4054c985b2b68806b57a238d481174779904" translate="yes" xml:space="preserve">
          <source>For each selected element, sets the transition duration to the specified &lt;em&gt;value&lt;/em&gt; in milliseconds. The &lt;em&gt;value&lt;/em&gt; may be specified either as a constant or a function. If a function, it is immediately evaluated for each selected element, in order, being passed the current datum &lt;code&gt;d&lt;/code&gt; and index &lt;code&gt;i&lt;/code&gt;, with the &lt;code&gt;this&lt;/code&gt; context as the current DOM element. The function&amp;rsquo;s return value is then used to set each element&amp;rsquo;s transition duration. If a duration is not specified, it defaults to 250ms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28a823e6478b7d81f12c92f5c6d8a6558cbda4ce" translate="yes" xml:space="preserve">
          <source>For each set of coincident input points, one of the points is chosen arbitrarily and assigned the associated cell; the other coincident input points&amp;rsquo; entries are missing from the returned sparse array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d24e03111355083d096f7dbc3b98b635c57dbce" translate="yes" xml:space="preserve">
          <source>For each set of coincident input points, one of the points is chosen arbitrarily and assigned the associated polygon; the other coincident input points&amp;rsquo; entries are missing from the returned sparse array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a36e4dcec02684740c41a5e957124a4705d9ba3" translate="yes" xml:space="preserve">
          <source>For easy loading of DSV files in a browser, see &lt;a href=&quot;d3-request&quot;&gt;d3-request&lt;/a&gt;&amp;rsquo;s &lt;a href=&quot;d3-request#csv&quot;&gt;d3.csv&lt;/a&gt; and &lt;a href=&quot;d3-request#tsv&quot;&gt;d3.tsv&lt;/a&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4f27435c398c5afae680f5a8c5a6dc5a17b61a7" translate="yes" xml:space="preserve">
          <source>For even more sequential and categorical color schemes, see &lt;a href=&quot;../../../d3-scale-chromatic&quot;&gt;d3-scale-chromatic&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa03ec59a802f5495dd4f214a56edeb13d2274f" translate="yes" xml:space="preserve">
          <source>For example, a spherical Mercator projection can be implemented as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf011efcaaa3bbe05f2cdc2761a6f28dccefe697" translate="yes" xml:space="preserve">
          <source>For example, consider a diverging color scale with three colors in the range:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb8e97b8e9ed86cb4eec059a7e22be2f476bd67" translate="yes" xml:space="preserve">
          <source>For example, consider the following table representing monthly sales of fruits:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57cf531ed43a3288e1c8a3ecc0ce58906831da78" translate="yes" xml:space="preserve">
          <source>For example, consider the following tabular data structure of Barley yields, from various sites in Minnesota during 1931-2:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e49faa161f61dc2505d5b22b17921833aec0130" translate="yes" xml:space="preserve">
          <source>For example, given this document:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e3619e34133d358bea8abda5f56ba241697af14" translate="yes" xml:space="preserve">
          <source>For example, here&amp;rsquo;s a task which computes the answer to the ultimate question of life, the universe, and everything after a short delay:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e49106ed2439016d1bdcc71653e75ac79cd80228" translate="yes" xml:space="preserve">
          <source>For example, if &lt;em&gt;a&lt;/em&gt; is &lt;code&gt;&quot;300 12px sans-serif&quot;&lt;/code&gt;, and &lt;em&gt;b&lt;/em&gt; is &lt;code&gt;&quot;500 36px Comic-Sans&quot;&lt;/code&gt;, two embedded numbers are found. The remaining static parts (of string &lt;em&gt;b&lt;/em&gt;) are a space between the two numbers (&lt;code&gt;&quot; &quot;&lt;/code&gt;), and the suffix (&lt;code&gt;&quot;px Comic-Sans&quot;&lt;/code&gt;). The result of the interpolator at &lt;em&gt;t&lt;/em&gt; = 0.5 is &lt;code&gt;&quot;400 24px Comic-Sans&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="679c90e18081ef134e9b3e2c71c61b166de700e7" translate="yes" xml:space="preserve">
          <source>For example, if &lt;em&gt;a&lt;/em&gt; is the array &lt;code&gt;[0, 1]&lt;/code&gt; and &lt;em&gt;b&lt;/em&gt; is the array &lt;code&gt;[1, 10, 100]&lt;/code&gt;, then the result of the interpolator for &lt;em&gt;t&lt;/em&gt; = 0.5 is the array &lt;code&gt;[0.5, 5.5, 100]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8d1aa937becf50c93f1a0189e7029389c33fd72" translate="yes" xml:space="preserve">
          <source>For example, if &lt;em&gt;a&lt;/em&gt; is the object &lt;code&gt;{x: 0, y: 1}&lt;/code&gt; and &lt;em&gt;b&lt;/em&gt; is the object &lt;code&gt;{x: 1, y: 10, z: 100}&lt;/code&gt;, the result of the interpolator for &lt;em&gt;t&lt;/em&gt; = 0.5 is the object &lt;code&gt;{x: 0.5, y: 5.5, z: 100}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d743da22d946e77bd4dc5fe8371f0a00668b779" translate="yes" xml:space="preserve">
          <source>For example, if you are using the the histogram in conjunction with a &lt;a href=&quot;d3-scale#linear-scales&quot;&gt;linear scale&lt;/a&gt;&lt;code&gt;x&lt;/code&gt;, you might say:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40adfd9de8182161512cbf218ef5de8fda3b6b7a" translate="yes" xml:space="preserve">
          <source>For example, take the color named &amp;ldquo;steelblue&amp;rdquo;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ad52ebc91ef78a4a7b274010e5aadcda1983487" translate="yes" xml:space="preserve">
          <source>For example, to create a categorical color scale using the &lt;a href=&quot;#schemeAccent&quot;&gt;Accent&lt;/a&gt; color scheme:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ded6d6d27769868cd007e1e1698e99f816e0722" translate="yes" xml:space="preserve">
          <source>For example, to create a dispatch for &lt;em&gt;start&lt;/em&gt; and &lt;em&gt;end&lt;/em&gt; events:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec2ce3cee8995244efe8af477f66e045bdfd85bd" translate="yes" xml:space="preserve">
          <source>For example, to create a position encoding:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a34662751d6ce4aff2209e0eaf958329e9ad63" translate="yes" xml:space="preserve">
          <source>For example, to filter a selection of table rows to contain only even rows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d0039abf18a31a2c278e399fa4a5ac14b8f8301" translate="yes" xml:space="preserve">
          <source>For example, to generate twenty ticks with SI-prefix formatting on a linear scale, say:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31962a6e4833d079b2798a208f35d81b0616ff78" translate="yes" xml:space="preserve">
          <source>For example, to interpolate the fill attribute from red to blue:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09c9ee6a0cb2a3109ebe713ef42089f2dd5f8a89" translate="yes" xml:space="preserve">
          <source>For example, to interpolate the fill attribute to blue, like &lt;a href=&quot;#transition_attr&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.attr&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8380f11e278033b3964ce0f74566b5489ed03d8b" translate="yes" xml:space="preserve">
          <source>For example, to interpolate the fill style from red to blue:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b294becb3cdb8679efc6256c46caff034cf69f0" translate="yes" xml:space="preserve">
          <source>For example, to recreate R&amp;rsquo;s terrain.colors:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13b27ac60224eac3b6e04f3ac9034a70fe000864" translate="yes" xml:space="preserve">
          <source>For example, to scale and translate the &lt;a href=&quot;https://bl.ocks.org/mbostock/5126418&quot;&gt;New Jersey State Plane projection&lt;/a&gt; to fit a GeoJSON object &lt;em&gt;nj&lt;/em&gt; in the center of a 960&amp;times;500 bounding box with 20 pixels of padding on each side:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c491a2e12b4e51cb1795fde4328c11dc365097" translate="yes" xml:space="preserve">
          <source>For geometry that crosses the antimeridian or surrounds a pole, you will want to pass input through &lt;a href=&quot;#geostitch&quot;&gt;geostitch&lt;/a&gt; first:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45a14da1ea1ab5b45eb054143e10ac24e2bf5ccd" translate="yes" xml:space="preserve">
          <source>For interaction, selections allow listening for and dispatching of events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b73f9a1087296527be7c99c42ab7533912297d5e" translate="yes" xml:space="preserve">
          <source>For many more projections, see &lt;a href=&quot;d3-geo-projection&quot;&gt;d3-geo-projection&lt;/a&gt;. You can implement &lt;a href=&quot;#raw-projections&quot;&gt;custom projections&lt;/a&gt; using &lt;a href=&quot;#geoProjection&quot;&gt;d3.geoProjection&lt;/a&gt; or &lt;a href=&quot;#geoProjectionMutator&quot;&gt;d3.geoProjectionMutator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5cbde98437f610b8e8f37c670a0f665388fadbe" translate="yes" xml:space="preserve">
          <source>For more, read &lt;a href=&quot;https://medium.com/@mbostock/introducing-d3-shape-73f8367e6d12&quot;&gt;Introducing d3-shape&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a05edf4a0b543655bcf3ae8b42069cfecb0fa0ae" translate="yes" xml:space="preserve">
          <source>For reusable components that support transitions, such as &lt;a href=&quot;#axes-d3-axis&quot;&gt;axes&lt;/a&gt;, a new &lt;a href=&quot;../../../d3-transition#transition_selection&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.selection&lt;/a&gt; method returns the &lt;a href=&quot;#selections-d3-selection&quot;&gt;selection&lt;/a&gt; that corresponds to a given transition. There is also a new &lt;a href=&quot;../../../d3-transition#transition_merge&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.merge&lt;/a&gt; method that is equivalent to &lt;a href=&quot;../../../d3-selection#selection_merge&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.merge&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="832a56e1a8514e7c35cba46194e2b4c9a04af994" translate="yes" xml:space="preserve">
          <source>For the sake of parsimony, the multi-value map methods have been extracted to &lt;a href=&quot;../../../d3-selection-multi&quot;&gt;d3-selection-multi&lt;/a&gt; and are no longer part of the default bundle. The multi-value map methods have also been renamed to plural form to reduce overload: &lt;a href=&quot;../../../d3-selection-multi#transition_attrs&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.attrs&lt;/a&gt; and &lt;a href=&quot;../../../d3-selection-multi#transition_styles&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.styles&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc7432b188a65ba0657b8b6d7b87bca0d0e9f91f" translate="yes" xml:space="preserve">
          <source>For the sake of parsimony, the multi-value methods&amp;mdash;where you pass an object to set multiple attributes, styles or properties simultaneously&amp;mdash;have been extracted to &lt;a href=&quot;../../../d3-selection-multi&quot;&gt;d3-selection-multi&lt;/a&gt; and are no longer part of the default bundle. The multi-value map methods have also been renamed to plural form to reduce overload: &lt;a href=&quot;../../../d3-selection-multi#selection_attrs&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.attrs&lt;/a&gt;, &lt;a href=&quot;../../../d3-selection-multi#selection_styles&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.styles&lt;/a&gt; and &lt;a href=&quot;../../../d3-selection-multi#selection_properties&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.properties&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41f38a09cc899b75f8a86524ce3fe712e5fe1461" translate="yes" xml:space="preserve">
          <source>Force</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9e644c62ccd8df903e2e6fd50bac562be16e3a5" translate="yes" xml:space="preserve">
          <source>Force-directed graph layout using velocity Verlet integration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eb175b9460612a847c5831f8d611666f7e129b1" translate="yes" xml:space="preserve">
          <source>Forces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1483aa99bc850c0dc8ce304b415567451588d170" translate="yes" xml:space="preserve">
          <source>Forces (d3-force)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8378ac21cab3d18c77ec718a3b31ed5493463300" translate="yes" xml:space="preserve">
          <source>Forces may optionally implement &lt;a href=&quot;#force_initialize&quot;&gt;&lt;em&gt;force&lt;/em&gt;.initialize&lt;/a&gt; to receive the simulation&amp;rsquo;s array of nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="424dce208ff65918802d5fb82cb4a7416fe48140" translate="yes" xml:space="preserve">
          <source>Forces typically read the node&amp;rsquo;s current position ⟨&lt;em&gt;x&lt;/em&gt;,&lt;em&gt;y&lt;/em&gt;⟩ and then add to (or subtract from) the node&amp;rsquo;s velocity ⟨&lt;em&gt;vx&lt;/em&gt;,&lt;em&gt;vy&lt;/em&gt;⟩. However, forces may also &amp;ldquo;peek ahead&amp;rdquo; to the anticipated next position of the node, ⟨&lt;em&gt;x&lt;/em&gt; + &lt;em&gt;vx&lt;/em&gt;,&lt;em&gt;y&lt;/em&gt; + &lt;em&gt;vy&lt;/em&gt;⟩; this is necessary for resolving geometric constraints through &lt;a href=&quot;https://en.wikipedia.org/wiki/Relaxation_(iterative_method)&quot;&gt;iterative relaxation&lt;/a&gt;. Forces may also modify the position directly, which is sometimes useful to avoid adding energy to the simulation, such as when recentering the simulation in the viewport.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="041a5dec481d6bf0724caeaa84bc135d7d9062d4" translate="yes" xml:space="preserve">
          <source>Format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42308aaa169875dbb6a4e027e274094503258393" translate="yes" xml:space="preserve">
          <source>Format numbers for human consumption.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="717c55ddf3cffcbbea9724a627be66170b3d88d7" translate="yes" xml:space="preserve">
          <source>Formats the specified array of array of string &lt;em&gt;rows&lt;/em&gt; as delimiter-separated values, returning a string. This operation is the reverse of &lt;a href=&quot;#dsv_parseRows&quot;&gt;&lt;em&gt;dsv&lt;/em&gt;.parseRows&lt;/a&gt;. Each row will be separated by a newline (&lt;code&gt;\n&lt;/code&gt;), and each column within each row will be separated by the delimiter (such as a comma, &lt;code&gt;,&lt;/code&gt;). Values that contain either the delimiter, a double-quote (&quot;) or a newline will be escaped using double-quotes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d959229e0495b0e95816476dba21911ee417732" translate="yes" xml:space="preserve">
          <source>Formats the specified array of object &lt;em&gt;rows&lt;/em&gt; as delimiter-separated values, returning a string. This operation is the inverse of &lt;a href=&quot;#dsv_parse&quot;&gt;&lt;em&gt;dsv&lt;/em&gt;.parse&lt;/a&gt;. Each row will be separated by a newline (&lt;code&gt;\n&lt;/code&gt;), and each column within each row will be separated by the delimiter (such as a comma, &lt;code&gt;,&lt;/code&gt;). Values that contain either the delimiter, a double-quote (&lt;code&gt;&quot;&lt;/code&gt;) or a newline will be escaped using double-quotes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbcd995e6f4af233b1c434e2993d93df6f27cb02" translate="yes" xml:space="preserve">
          <source>Formatting numbers for human consumption is the purpose of d3-format, which is modeled after Python 3&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3/library/string.html#format-specification-mini-language&quot;&gt;format specification mini-language&lt;/a&gt; (&lt;a href=&quot;https://www.python.org/dev/peps/pep-3101/&quot;&gt;PEP 3101&lt;/a&gt;). Revisiting the example above:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db3aba4638948e4fa0521638308590edb2410b8" translate="yes" xml:space="preserve">
          <source>Formerly known as Queue.js and queue-async, &lt;a href=&quot;../../../d3-queue&quot;&gt;d3.queue&lt;/a&gt; is now included in the default bundle, making it easy to load data files in parallel. It has been rewritten with fewer closures to improve performance, and there are now stricter checks in place to guarantee well-defined behavior. You can now use instanceof d3.queue and inspect the queue&amp;rsquo;s internal private state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b96beb76c7d107dfae4436df7e9c4c637e2aae6" translate="yes" xml:space="preserve">
          <source>Foucaut&amp;rsquo;s stereographic equivalent projection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="287898a235704f4da3fc9986e0baa77690ec7259" translate="yes" xml:space="preserve">
          <source>Friday-based weeks (e.g., February 10, 2012 at 12:00 AM).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81554ce9985b44b8c5f0f8aff0f33db5954f8351" translate="yes" xml:space="preserve">
          <source>Generate random numbers from various distributions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cabd699d9193a8e16eb1979ed8e5790ba1219af4" translate="yes" xml:space="preserve">
          <source>Generates a GeoJSON graticule. See also &lt;a href=&quot;d3-geo#geoGraticule&quot;&gt;d3.geoGraticule&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14f2a03e348f98e46bea1f0f25c4b9434289c935" translate="yes" xml:space="preserve">
          <source>Generates a clipping function which transforms a stream such that geometries are bounded by a rectangle of coordinates [[</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb9668c6de48fe699434e679790f31a00f47f0a4" translate="yes" xml:space="preserve">
          <source>Generates a clipping function which transforms a stream such that geometries are bounded by a small circle of radius &lt;em&gt;angle&lt;/em&gt; around the projection&amp;rsquo;s &lt;a href=&quot;#projection_center&quot;&gt;center&lt;/a&gt;. Typically used for pre-clipping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="421feeb5ac1f6539be62fbf6a108450a8d676e51" translate="yes" xml:space="preserve">
          <source>Generates a line for the given array of &lt;em&gt;data&lt;/em&gt;. Depending on this line generator&amp;rsquo;s associated &lt;a href=&quot;#line_curve&quot;&gt;curve&lt;/a&gt;, the given input &lt;em&gt;data&lt;/em&gt; may need to be sorted by &lt;em&gt;x&lt;/em&gt;-value before being passed to the line generator. If the line generator has a &lt;a href=&quot;#line_context&quot;&gt;context&lt;/a&gt;, then the line is rendered to this context as a sequence of &lt;a href=&quot;http://www.w3.org/TR/2dcontext/#canvaspathmethods&quot;&gt;path method&lt;/a&gt; calls and this function returns void. Otherwise, a &lt;a href=&quot;http://www.w3.org/TR/SVG/paths.html#PathData&quot;&gt;path data&lt;/a&gt; string is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bffea80684318aecc564cff75c133f45213ac47c" translate="yes" xml:space="preserve">
          <source>Generates a link for the given &lt;em&gt;arguments&lt;/em&gt;. The &lt;em&gt;arguments&lt;/em&gt; are arbitrary; they are simply propagated to the link generator&amp;rsquo;s accessor functions along with the &lt;code&gt;this&lt;/code&gt; object. For example, with the default settings, an object expected:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d76ea2784663a91f8c2c404ce1652d24424c5ad5" translate="yes" xml:space="preserve">
          <source>Generates a new hierarchy from the specified tabular &lt;em&gt;data&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e7f3aa5062913f596eef4884b69223545a27efd" translate="yes" xml:space="preserve">
          <source>Generates a pie for the given array of &lt;em&gt;data&lt;/em&gt;, returning an array of objects representing each datum&amp;rsquo;s arc angles. Any additional &lt;em&gt;arguments&lt;/em&gt; are arbitrary; they are simply propagated to the pie generator&amp;rsquo;s accessor functions along with the &lt;code&gt;this&lt;/code&gt; object. The length of the returned array is the same as &lt;em&gt;data&lt;/em&gt;, and each element &lt;em&gt;i&lt;/em&gt; in the returned array corresponds to the element &lt;em&gt;i&lt;/em&gt; in the input data. Each object in the returned array has the following properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72d0c9c4936c4495998c29d9105c4f781e934acc" translate="yes" xml:space="preserve">
          <source>Generates a ribbon for the given &lt;em&gt;arguments&lt;/em&gt;. The &lt;em&gt;arguments&lt;/em&gt; are arbitrary; they are simply propagated to the ribbon generator&amp;rsquo;s accessor functions along with the &lt;code&gt;this&lt;/code&gt; object. For example, with the default settings, a &lt;a href=&quot;#_chord&quot;&gt;chord object&lt;/a&gt; expected:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e18f75943586677dae0b056bd3e2d30dd1559cd1" translate="yes" xml:space="preserve">
          <source>Generates a stack for the given array of &lt;em&gt;data&lt;/em&gt;, returning an array representing each series. Any additional &lt;em&gt;arguments&lt;/em&gt; are arbitrary; they are simply propagated to accessors along with the &lt;code&gt;this&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56eb2c7f631d101668398a951b8e96fee7e886be" translate="yes" xml:space="preserve">
          <source>Generates a symbol for the given &lt;em&gt;arguments&lt;/em&gt;. The &lt;em&gt;arguments&lt;/em&gt; are arbitrary; they are simply propagated to the symbol generator&amp;rsquo;s accessor functions along with the &lt;code&gt;this&lt;/code&gt; object. For example, with the default settings, no arguments are needed to produce a circle with area 64 square pixels. If the symbol generator has a &lt;a href=&quot;#symbol_context&quot;&gt;context&lt;/a&gt;, then the symbol is rendered to this context as a sequence of &lt;a href=&quot;http://www.w3.org/TR/2dcontext/#canvaspathmethods&quot;&gt;path method&lt;/a&gt; calls and this function returns void. Otherwise, a &lt;a href=&quot;http://www.w3.org/TR/SVG/paths.html#PathData&quot;&gt;path data&lt;/a&gt; string is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a86c9249c9288c5ff049c0200502357d6a6cf9" translate="yes" xml:space="preserve">
          <source>Generates an arc for the given &lt;em&gt;arguments&lt;/em&gt;. The &lt;em&gt;arguments&lt;/em&gt; are arbitrary; they are simply propagated to the arc generator&amp;rsquo;s accessor functions along with the &lt;code&gt;this&lt;/code&gt; object. For example, with the default settings, an object with radii and angles is expected:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e497911b105127ab19db5de85b738980f0e78d" translate="yes" xml:space="preserve">
          <source>Generates an area for the given array of &lt;em&gt;data&lt;/em&gt;. Depending on this area generator&amp;rsquo;s associated &lt;a href=&quot;#area_curve&quot;&gt;curve&lt;/a&gt;, the given input &lt;em&gt;data&lt;/em&gt; may need to be sorted by &lt;em&gt;x&lt;/em&gt;-value before being passed to the area generator. If the area generator has a &lt;a href=&quot;#line_context&quot;&gt;context&lt;/a&gt;, then the area is rendered to this context as a sequence of &lt;a href=&quot;http://www.w3.org/TR/2dcontext/#canvaspathmethods&quot;&gt;path method&lt;/a&gt; calls and this function returns void. Otherwise, a &lt;a href=&quot;http://www.w3.org/TR/SVG/paths.html#PathData&quot;&gt;path data&lt;/a&gt; string is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8770e1d00765da154add27070eb66b76abb639e9" translate="yes" xml:space="preserve">
          <source>Geo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98a5b999373c338f59b43a6e025a169d05a89ce6" translate="yes" xml:space="preserve">
          <source>Geo Polygon</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e66bcac4b57cfc31467211acb0ece462d257ce7" translate="yes" xml:space="preserve">
          <source>Geo Projection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93fe997bc27bdaf615c4d9768349b3023a943842" translate="yes" xml:space="preserve">
          <source>Geographic projections, shapes and math.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be6903b93c62e5783054490afcf2443968db3334" translate="yes" xml:space="preserve">
          <source>Geographies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88e2c34939732668a2e102e22bec47ac8d4179e7" translate="yes" xml:space="preserve">
          <source>Geographies (d3-geo)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f62948813eea37ba7698edb9dbca472219d3ba28" translate="yes" xml:space="preserve">
          <source>Geometric operations for two-dimensional polygons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f0569837828514eb042f298d04a3583fbd14d6c" translate="yes" xml:space="preserve">
          <source>GeometryCollection - an array of geometry objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c32143c6f37c9383ae819d43c86ff1fccaddaf8" translate="yes" xml:space="preserve">
          <source>Georgy &amp;ldquo;The Voronator&amp;rdquo; Voronoy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c47606ddb21bb7627c60cc40a64401cfb56c392d" translate="yes" xml:space="preserve">
          <source>Gets or sets the bound data for each selected element. Unlike &lt;a href=&quot;#selection_data&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.data&lt;/a&gt;, this method does not compute a join and does not affect indexes or the enter and exit selections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc30cb605dadea5bd90a71ae43b06776f87c6e7" translate="yes" xml:space="preserve">
          <source>Gilbert&amp;rsquo;s two-world perspective projection. Wraps an instance of the specified projection &lt;em&gt;type&lt;/em&gt;; if not specified, defaults to &lt;a href=&quot;d3-geo#geoOrthographic&quot;&gt;d3.geoOrthographic&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0024f002eef5cc6ca6399ce31d0eebb65cccd875" translate="yes" xml:space="preserve">
          <source>Given a &lt;em&gt;value&lt;/em&gt; from the &lt;a href=&quot;#continuous_domain&quot;&gt;domain&lt;/a&gt;, returns the corresponding value from the &lt;a href=&quot;#continuous_range&quot;&gt;range&lt;/a&gt;. If the given &lt;em&gt;value&lt;/em&gt; is outside the domain, and &lt;a href=&quot;#continuous_clamp&quot;&gt;clamping&lt;/a&gt; is not enabled, the mapping may be extrapolated such that the returned value is outside the range. For example, to apply a position encoding:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f8103ab389f94810af90816905b117d8a62c05f" translate="yes" xml:space="preserve">
          <source>Given a &lt;em&gt;value&lt;/em&gt; from the &lt;a href=&quot;#continuous_range&quot;&gt;range&lt;/a&gt;, returns the corresponding value from the &lt;a href=&quot;#continuous_domain&quot;&gt;domain&lt;/a&gt;. Inversion is useful for interaction, say to determine the data value corresponding to the position of the mouse. For example, to invert a position encoding:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e77b13caa54b767d33717b415d129dc0d86542" translate="yes" xml:space="preserve">
          <source>Given a &lt;em&gt;value&lt;/em&gt; in the input &lt;a href=&quot;#band_domain&quot;&gt;domain&lt;/a&gt;, returns the start of the corresponding band derived from the output &lt;a href=&quot;#band_range&quot;&gt;range&lt;/a&gt;. If the given &lt;em&gt;value&lt;/em&gt; is not in the scale&amp;rsquo;s domain, returns undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="646f9bf3bd86e99b1fe4746c3ddb6ce3612478a6" translate="yes" xml:space="preserve">
          <source>Given a &lt;em&gt;value&lt;/em&gt; in the input &lt;a href=&quot;#ordinal_domain&quot;&gt;domain&lt;/a&gt;, returns the corresponding value in the output &lt;a href=&quot;#ordinal_range&quot;&gt;range&lt;/a&gt;. If the given &lt;em&gt;value&lt;/em&gt; is not in the scale&amp;rsquo;s &lt;a href=&quot;#ordinal_domain&quot;&gt;domain&lt;/a&gt;, returns the &lt;a href=&quot;#ordinal_value&quot;&gt;unknown&lt;/a&gt;; or, if the unknown value is &lt;a href=&quot;#scaleImplicit&quot;&gt;implicit&lt;/a&gt; (the default), then the &lt;em&gt;value&lt;/em&gt; is implicitly added to the domain and the next-available value in the range is assigned to &lt;em&gt;value&lt;/em&gt;, such that this and subsequent invocations of the scale given the same input &lt;em&gt;value&lt;/em&gt; return the same output value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65206b9e6cc07d40ff8dcb919ddd515522ee95c5" translate="yes" xml:space="preserve">
          <source>Given a &lt;em&gt;value&lt;/em&gt; in the input &lt;a href=&quot;#point_domain&quot;&gt;domain&lt;/a&gt;, returns the corresponding point derived from the output &lt;a href=&quot;#point_range&quot;&gt;range&lt;/a&gt;. If the given &lt;em&gt;value&lt;/em&gt; is not in the scale&amp;rsquo;s domain, returns undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e77f6a90f601bd50ce4e8c23198a0d4c24ba60f" translate="yes" xml:space="preserve">
          <source>Given a &lt;em&gt;value&lt;/em&gt; in the input &lt;a href=&quot;#quantile_domain&quot;&gt;domain&lt;/a&gt;, returns the corresponding value in the output &lt;a href=&quot;#quantile_range&quot;&gt;range&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="132ec3e01b499a6258954992071e0de2f37488e5" translate="yes" xml:space="preserve">
          <source>Given a &lt;em&gt;value&lt;/em&gt; in the input &lt;a href=&quot;#quantize_domain&quot;&gt;domain&lt;/a&gt;, returns the corresponding value in the output &lt;a href=&quot;#quantize_range&quot;&gt;range&lt;/a&gt;. For example, to apply a color encoding:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb39fef0a7367a22d6918f33a1ada9cf0f4bf88a" translate="yes" xml:space="preserve">
          <source>Given a &lt;em&gt;value&lt;/em&gt; in the input &lt;a href=&quot;#threshold_domain&quot;&gt;domain&lt;/a&gt;, returns the corresponding value in the output &lt;a href=&quot;#threshold_range&quot;&gt;range&lt;/a&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="074a52949f173c79dd98a4d8211617d275aad5ca" translate="yes" xml:space="preserve">
          <source>Given a GeoJSON &lt;em&gt;polygon&lt;/em&gt; or &lt;em&gt;multipolygon&lt;/em&gt;, returns a clip function suitable for &lt;a href=&quot;d3-geo#preclip&quot;&gt;&lt;em&gt;projection&lt;/em&gt;.preclip&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c1e8c867b279613a113b0a5b736d1382751663b" translate="yes" xml:space="preserve">
          <source>Given a clipPolygon function, returns the GeoJSON polygon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abb5be90bfb63ccc415ed849130cb78a8620c3cc" translate="yes" xml:space="preserve">
          <source>Given a number &lt;em&gt;t&lt;/em&gt; in the range [0,1], returns the corresponding color from &lt;a href=&quot;#interpolateWarm&quot;&gt;d3.interpolateWarm&lt;/a&gt; scale from [0.0, 0.5] followed by the &lt;a href=&quot;#interpolateCool&quot;&gt;d3.interpolateCool&lt;/a&gt; scale from [0.5, 1.0], thus implementing the cyclical &lt;a href=&quot;http://bl.ocks.org/mbostock/310c99e53880faec2434&quot;&gt;less-angry rainbow&lt;/a&gt; color scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ed47ee27c928d49b0b4ffc2ade850f6fb047571" translate="yes" xml:space="preserve">
          <source>Given a number &lt;em&gt;t&lt;/em&gt; in the range [0,1], returns the corresponding color from &lt;a href=&quot;https://mycarta.wordpress.com/2013/02/21/perceptual-rainbow-palette-the-method/&quot;&gt;Niccoli&amp;rsquo;s perceptual rainbow&lt;/a&gt;, represented as an RGB string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d566a9f4defaadb887e2f47ea65577b87618d343" translate="yes" xml:space="preserve">
          <source>Given a number &lt;em&gt;t&lt;/em&gt; in the range [0,1], returns the corresponding color from &lt;a href=&quot;https://www.mrao.cam.ac.uk/%7Edag/CUBEHELIX/&quot;&gt;Green&amp;rsquo;s default Cubehelix&lt;/a&gt; represented as an RGB string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d71c699337f1e2d0ff75c728b44552c877ceabe1" translate="yes" xml:space="preserve">
          <source>Given a number &lt;em&gt;t&lt;/em&gt; in the range [0,1], returns the corresponding color from a 180&amp;deg; rotation of &lt;a href=&quot;https://mycarta.wordpress.com/2013/02/21/perceptual-rainbow-palette-the-method/&quot;&gt;Niccoli&amp;rsquo;s perceptual rainbow&lt;/a&gt;, represented as an RGB string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1649a821abe12b3b0cee340d9897eab47af67551" translate="yes" xml:space="preserve">
          <source>Given a number &lt;em&gt;t&lt;/em&gt; in the range [0,1], returns the corresponding color from the &amp;ldquo;Blues&amp;rdquo; sequential color scheme represented as an RGB string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5480614acf18f5b913f9970ca51f74b955bd14f4" translate="yes" xml:space="preserve">
          <source>Given a number &lt;em&gt;t&lt;/em&gt; in the range [0,1], returns the corresponding color from the &amp;ldquo;BrBG&amp;rdquo; diverging color scheme represented as an RGB string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd4a68dc2851bfec069c84d9a8e2f7b9b7057c53" translate="yes" xml:space="preserve">
          <source>Given a number &lt;em&gt;t&lt;/em&gt; in the range [0,1], returns the corresponding color from the &amp;ldquo;BuGn&amp;rdquo; sequential color scheme represented as an RGB string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89e28d2e59547e1dd52e8d25874c8593df3c62c3" translate="yes" xml:space="preserve">
          <source>Given a number &lt;em&gt;t&lt;/em&gt; in the range [0,1], returns the corresponding color from the &amp;ldquo;BuPu&amp;rdquo; sequential color scheme represented as an RGB string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eb6404290fefa015539a5a489ebeb246ea13451" translate="yes" xml:space="preserve">
          <source>Given a number &lt;em&gt;t&lt;/em&gt; in the range [0,1], returns the corresponding color from the &amp;ldquo;GnBu&amp;rdquo; sequential color scheme represented as an RGB string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="147966b05b746e25b3667cd2658ff133170511a5" translate="yes" xml:space="preserve">
          <source>Given a number &lt;em&gt;t&lt;/em&gt; in the range [0,1], returns the corresponding color from the &amp;ldquo;Greens&amp;rdquo; sequential color scheme represented as an RGB string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff423369149e2a6a15c4b91aef73f531ba5a80ce" translate="yes" xml:space="preserve">
          <source>Given a number &lt;em&gt;t&lt;/em&gt; in the range [0,1], returns the corresponding color from the &amp;ldquo;Greys&amp;rdquo; sequential color scheme represented as an RGB string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3dd863d6bd8b94d5873bc2b78669babaab88530" translate="yes" xml:space="preserve">
          <source>Given a number &lt;em&gt;t&lt;/em&gt; in the range [0,1], returns the corresponding color from the &amp;ldquo;OrRd&amp;rdquo; sequential color scheme represented as an RGB string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beb61be581d7e9fa1f7e21492a110dcf4d779c39" translate="yes" xml:space="preserve">
          <source>Given a number &lt;em&gt;t&lt;/em&gt; in the range [0,1], returns the corresponding color from the &amp;ldquo;Oranges&amp;rdquo; sequential color scheme represented as an RGB string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c245cc06e72aad09eb0b4a56ba637eac285eed2" translate="yes" xml:space="preserve">
          <source>Given a number &lt;em&gt;t&lt;/em&gt; in the range [0,1], returns the corresponding color from the &amp;ldquo;PRGn&amp;rdquo; diverging color scheme represented as an RGB string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ddbaeef0937f7cedde40d7d670de54ef27c521b" translate="yes" xml:space="preserve">
          <source>Given a number &lt;em&gt;t&lt;/em&gt; in the range [0,1], returns the corresponding color from the &amp;ldquo;PiYG&amp;rdquo; diverging color scheme represented as an RGB string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41b76ce2f0cfefb3f1956ce007e7d306955db2cf" translate="yes" xml:space="preserve">
          <source>Given a number &lt;em&gt;t&lt;/em&gt; in the range [0,1], returns the corresponding color from the &amp;ldquo;PuBu&amp;rdquo; sequential color scheme represented as an RGB string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="152cb1c92c791874680585821defe50efbc2df18" translate="yes" xml:space="preserve">
          <source>Given a number &lt;em&gt;t&lt;/em&gt; in the range [0,1], returns the corresponding color from the &amp;ldquo;PuBuGn&amp;rdquo; sequential color scheme represented as an RGB string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c529286504eeb3b2e414f81ad456a944cf3e0143" translate="yes" xml:space="preserve">
          <source>Given a number &lt;em&gt;t&lt;/em&gt; in the range [0,1], returns the corresponding color from the &amp;ldquo;PuOr&amp;rdquo; diverging color scheme represented as an RGB string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1786b20733e2a48937681db85d0019209eff4074" translate="yes" xml:space="preserve">
          <source>Given a number &lt;em&gt;t&lt;/em&gt; in the range [0,1], returns the corresponding color from the &amp;ldquo;PuRd&amp;rdquo; sequential color scheme represented as an RGB string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25af54d4fec68145dadbe1783a813a69f23ca981" translate="yes" xml:space="preserve">
          <source>Given a number &lt;em&gt;t&lt;/em&gt; in the range [0,1], returns the corresponding color from the &amp;ldquo;Purples&amp;rdquo; sequential color scheme represented as an RGB string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a35014f4b54d55c01bc8baf1976781c447285e81" translate="yes" xml:space="preserve">
          <source>Given a number &lt;em&gt;t&lt;/em&gt; in the range [0,1], returns the corresponding color from the &amp;ldquo;RdBu&amp;rdquo; diverging color scheme represented as an RGB string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3465e155f63d65eefdb4278cf8f392522d4f8e44" translate="yes" xml:space="preserve">
          <source>Given a number &lt;em&gt;t&lt;/em&gt; in the range [0,1], returns the corresponding color from the &amp;ldquo;RdGy&amp;rdquo; diverging color scheme represented as an RGB string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c59dd8b2565cc0348c1d66752e5911bfb9c13f2" translate="yes" xml:space="preserve">
          <source>Given a number &lt;em&gt;t&lt;/em&gt; in the range [0,1], returns the corresponding color from the &amp;ldquo;RdPu&amp;rdquo; sequential color scheme represented as an RGB string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1aaaefac0fddcb60c74edb66a4a54997c62e07f" translate="yes" xml:space="preserve">
          <source>Given a number &lt;em&gt;t&lt;/em&gt; in the range [0,1], returns the corresponding color from the &amp;ldquo;RdYlBu&amp;rdquo; diverging color scheme represented as an RGB string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee75d53a3d3177d31545d1edf57a44a98859385d" translate="yes" xml:space="preserve">
          <source>Given a number &lt;em&gt;t&lt;/em&gt; in the range [0,1], returns the corresponding color from the &amp;ldquo;RdYlGn&amp;rdquo; diverging color scheme represented as an RGB string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a4ac6724b91555e84becb898b1c1c2bf0d427f2" translate="yes" xml:space="preserve">
          <source>Given a number &lt;em&gt;t&lt;/em&gt; in the range [0,1], returns the corresponding color from the &amp;ldquo;Reds&amp;rdquo; sequential color scheme represented as an RGB string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa7fccced8d597d974be4a465a1bbd352c339c2" translate="yes" xml:space="preserve">
          <source>Given a number &lt;em&gt;t&lt;/em&gt; in the range [0,1], returns the corresponding color from the &amp;ldquo;Spectral&amp;rdquo; diverging color scheme represented as an RGB string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3881a5f4871fe83b310ccb0f2597d9f81a3816d1" translate="yes" xml:space="preserve">
          <source>Given a number &lt;em&gt;t&lt;/em&gt; in the range [0,1], returns the corresponding color from the &amp;ldquo;YlGn&amp;rdquo; sequential color scheme represented as an RGB string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70a1dcd9ff54485b46516a29192510e40c57eca8" translate="yes" xml:space="preserve">
          <source>Given a number &lt;em&gt;t&lt;/em&gt; in the range [0,1], returns the corresponding color from the &amp;ldquo;YlGnBu&amp;rdquo; sequential color scheme represented as an RGB string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a68f7dc044978634b1c4ef158695b7a6775fd9e" translate="yes" xml:space="preserve">
          <source>Given a number &lt;em&gt;t&lt;/em&gt; in the range [0,1], returns the corresponding color from the &amp;ldquo;YlOrBr&amp;rdquo; sequential color scheme represented as an RGB string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62b9cc1174b6aa1fd59fd30a2ad322e496f10236" translate="yes" xml:space="preserve">
          <source>Given a number &lt;em&gt;t&lt;/em&gt; in the range [0,1], returns the corresponding color from the &amp;ldquo;YlOrRd&amp;rdquo; sequential color scheme represented as an RGB string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c5bb7f55aafb4f7a13400679962daaeacbdcc84" translate="yes" xml:space="preserve">
          <source>Given a number &lt;em&gt;t&lt;/em&gt; in the range [0,1], returns the corresponding color from the &amp;ldquo;inferno&amp;rdquo; perceptually-uniform color scheme designed by &lt;a href=&quot;https://bids.github.io/colormap/&quot;&gt;van der Walt and Smith&lt;/a&gt; for matplotlib, represented as an RGB string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edf65b99095bce7d3d19e10680f642f2cb621912" translate="yes" xml:space="preserve">
          <source>Given a number &lt;em&gt;t&lt;/em&gt; in the range [0,1], returns the corresponding color from the &amp;ldquo;magma&amp;rdquo; perceptually-uniform color scheme designed by &lt;a href=&quot;https://bids.github.io/colormap/&quot;&gt;van der Walt and Smith&lt;/a&gt; for matplotlib, represented as an RGB string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d311f869769427d93bd143633420d3f9b7a83c9" translate="yes" xml:space="preserve">
          <source>Given a number &lt;em&gt;t&lt;/em&gt; in the range [0,1], returns the corresponding color from the &amp;ldquo;plasma&amp;rdquo; perceptually-uniform color scheme designed by &lt;a href=&quot;https://bids.github.io/colormap/&quot;&gt;van der Walt and Smith&lt;/a&gt; for matplotlib, represented as an RGB string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="003e2f6877b092de13e79593db485fd2441c0820" translate="yes" xml:space="preserve">
          <source>Given a number &lt;em&gt;t&lt;/em&gt; in the range [0,1], returns the corresponding color from the &amp;ldquo;sinebow&amp;rdquo; color scheme by &lt;a href=&quot;https://krazydad.com/tutorials/makecolors.php&quot;&gt;Jim Bumgardner&lt;/a&gt; and &lt;a href=&quot;http://basecase.org/env/on-rainbows&quot;&gt;Charlie Loyd&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe1464ef82af7c53bcad421ff0a772cb50a98e4c" translate="yes" xml:space="preserve">
          <source>Given a number &lt;em&gt;t&lt;/em&gt; in the range [0,1], returns the corresponding color from the &amp;ldquo;viridis&amp;rdquo; perceptually-uniform color scheme designed by &lt;a href=&quot;https://bids.github.io/colormap/&quot;&gt;van der Walt, Smith and Firing&lt;/a&gt; for matplotlib, represented as an RGB string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="034669c45a7ec27478c113419f38415ba9f0677b" translate="yes" xml:space="preserve">
          <source>Given a small dataset of numbers, here is how to compute the arc angles to render this data as a pie chart:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed9dfabda48985b90dd2198daab0f62e6f311c9f" translate="yes" xml:space="preserve">
          <source>Given a value &lt;em&gt;x&lt;/em&gt;, to promote &lt;em&gt;x&lt;/em&gt; to a function if it is not already:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20b0c2c23456db765b351611d65f714be2ff542d" translate="yes" xml:space="preserve">
          <source>Given that &lt;em&gt;interpolate&lt;/em&gt; is one of &lt;a href=&quot;#interpolateRgb&quot;&gt;interpolateRgb&lt;/a&gt;, &lt;a href=&quot;#interpolateCubehelix&quot;&gt;interpolateCubehelix&lt;/a&gt; or &lt;a href=&quot;#interpolateCubehelixLong&quot;&gt;interpolateCubehelixLong&lt;/a&gt;, returns a new interpolator factory of the same type using the specified &lt;em&gt;gamma&lt;/em&gt;. For example, to interpolate from purple to orange with a gamma of 2.2 in RGB space:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4a5aa89ff4f529f9e155d34f7fb00c2098c751c" translate="yes" xml:space="preserve">
          <source>Given the specified &lt;em&gt;selector&lt;/em&gt;, returns a function which returns all descendants of &lt;code&gt;this&lt;/code&gt; element that match the specified selector. This method is used internally by &lt;a href=&quot;#selection_selectAll&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.selectAll&lt;/a&gt;. For example, this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0964adebf70b3ceb1e708d7054ce9ebbddd38bfe" translate="yes" xml:space="preserve">
          <source>Given the specified &lt;em&gt;selector&lt;/em&gt;, returns a function which returns the first descendant of &lt;code&gt;this&lt;/code&gt; element that matches the specified selector. This method is used internally by &lt;a href=&quot;#selection_select&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.select&lt;/a&gt;. For example, this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9fc761d0907e82fac007a8ae5042bdcb44f4be0" translate="yes" xml:space="preserve">
          <source>Given the specified &lt;em&gt;selector&lt;/em&gt;, returns a function which returns true if &lt;code&gt;this&lt;/code&gt; element &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element/matches&quot;&gt;matches&lt;/a&gt; the specified selector. This method is used internally by &lt;a href=&quot;#selection_filter&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.filter&lt;/a&gt;. For example, this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aa467ccef748b289c846cd20e590b4a8eed04b4" translate="yes" xml:space="preserve">
          <source>Given the specified element &lt;em&gt;name&lt;/em&gt;, returns a function which creates an element of the given name, assuming that &lt;code&gt;this&lt;/code&gt; is the parent element. This method is used internally by &lt;a href=&quot;#selection_append&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.append&lt;/a&gt; and &lt;a href=&quot;#selection_insert&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.insert&lt;/a&gt; to create new elements. For example, this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e58dda01c3d7ad7576e588ddcd5b05ec41db2736" translate="yes" xml:space="preserve">
          <source>Given the specified element &lt;em&gt;name&lt;/em&gt;, returns a single-element selection containing a detached element of the given name in the current document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb592e0ae9e137b54205adcd08c6b3829651ef62" translate="yes" xml:space="preserve">
          <source>Given the specified normalized time &lt;em&gt;t&lt;/em&gt;, typically in the range [0,1], returns the &amp;ldquo;eased&amp;rdquo; time &lt;em&gt;tʹ&lt;/em&gt;, also typically in [0,1]. 0 represents the start of the animation and 1 represents the end. A good implementation returns 0 if &lt;em&gt;t&lt;/em&gt; = 0 and 1 if &lt;em&gt;t&lt;/em&gt; = 1. See the &lt;a href=&quot;http://bl.ocks.org/mbostock/248bac3b8e354a9103c4&quot;&gt;easing explorer&lt;/a&gt; for a visual demonstration. For example, to apply &lt;a href=&quot;#easeCubic&quot;&gt;cubic&lt;/a&gt; easing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f3456bdbf0cef8ec0befc8f5488ee3bdc474b5f" translate="yes" xml:space="preserve">
          <source>Goode&amp;rsquo;s interrupted &lt;a href=&quot;#geoHomolosine&quot;&gt;homolosine projection&lt;/a&gt;. Its &lt;a href=&quot;https://bl.ocks.org/Fil/d90a94d7333bfef753e92a4abb7611b4&quot;&gt;ocean-centric aspect&lt;/a&gt; is also well-known.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8147646c550db5ad08784b303cb90eab470068a" translate="yes" xml:space="preserve">
          <source>Goode&amp;rsquo;s interrupted &lt;a href=&quot;#geoMollweide&quot;&gt;Mollweide projection&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff6df10a4fbd7773b5f5d0fb9bb4ec32a8c27a7" translate="yes" xml:space="preserve">
          <source>Graphical primitives for visualization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="883b4fd2231b4fa6247271c9dbb70d4c6b49a4f5" translate="yes" xml:space="preserve">
          <source>Group data into arbitrary hierarchies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40935f6da4f8c3012753648b75aeabf22c2754d5" translate="yes" xml:space="preserve">
          <source>HSV</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8276b88840003e4e4a2d179ff91ea8ca9099453e" translate="yes" xml:space="preserve">
          <source>HTML parsing requires a global document and relies on &lt;a href=&quot;https://dom.spec.whatwg.org/#ranges&quot;&gt;DOM Ranges&lt;/a&gt;, which are &lt;a href=&quot;https://github.com/tmpvar/jsdom/issues/317&quot;&gt;not supported by JSDOM&lt;/a&gt; as of version 8.3; thus, this method is supported in browsers but not in Node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d425f7e27fe0f057871c46f4c72c4a3bd2b0f136" translate="yes" xml:space="preserve">
          <source>Handling Events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76181186286ac9bceb5a31efa8bc492de05b07c0" translate="yes" xml:space="preserve">
          <source>Handy data structures for elements keyed by string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbadab906f8451bf8bcf2436f4243772d643535f" translate="yes" xml:space="preserve">
          <source>Hcg</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f67b3bf22c7c52ea968f38d16c6366b52b40a919" translate="yes" xml:space="preserve">
          <source>Here are all the equivalences from 3.x to 4.0:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3fb8b42c1b9be560c25e18480c7b167332ab541" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a more elaborate example demonstrating type inference used by &lt;a href=&quot;#interpolate&quot;&gt;interpolate&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="139103af93155175db170f4086701037ce627db7" translate="yes" xml:space="preserve">
          <source>Hierarchies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="436aabc0403d6b8e91d89322e9e661b4d5d82050" translate="yes" xml:space="preserve">
          <source>Hierarchies (d3-hierarchy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda1b9ddd2a172cd6fc2bdd66737451d25b6f867" translate="yes" xml:space="preserve">
          <source>Hierarchy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c559970b57421cb42395191cda3aec5c5bf716f4" translate="yes" xml:space="preserve">
          <source>Hill eucyclic projection is pseudoconic and equal-area.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e527cb8956c0b8b5bc9b8fac67d55a1915c441e" translate="yes" xml:space="preserve">
          <source>Histogram Thresholds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f573dd516c5fae818d100652937d22c8be8a33c" translate="yes" xml:space="preserve">
          <source>Histograms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03166c0281a1a6a882b0566dfd137ea7d4ef3e05" translate="yes" xml:space="preserve">
          <source>Histograms bin many discrete samples into a smaller number of consecutive, non-overlapping intervals. They are often used to visualize the distribution of numerical data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b1b3ebbf849da9fc7116dbbc428f61a6e34811a" translate="yes" xml:space="preserve">
          <source>Homogenous transitions are now optimized! If all elements in a transition share the same tween, interpolator, or event listeners, this state is now shared across the transition rather than separately allocated for each element. 4.0 also uses an optimized default interpolator in place of &lt;a href=&quot;../../../d3-interpolate#interpolate&quot;&gt;d3.interpolate&lt;/a&gt; for &lt;a href=&quot;../../../d3-transition#transition_attr&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.attr&lt;/a&gt; and &lt;a href=&quot;../../../d3-transition#transition_style&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.style&lt;/a&gt;. And transitions can now interpolate both &lt;a href=&quot;../../../d3-interpolate#interpolateTransformCss&quot;&gt;CSS&lt;/a&gt; and &lt;a href=&quot;../../../d3-interpolate#interpolateTransformSvg&quot;&gt;SVG&lt;/a&gt; transforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e8bfc89a0e91f3e749b99788d93d425b73d25f4" translate="yes" xml:space="preserve">
          <source>Hours (e.g., 01:00 AM); 60 minutes. Note that advancing time by one hour in local time can return the same hour or skip an hour due to daylight saving.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1362515c5886d880edb6d18e4cf5ee2e0f2f7ec6" translate="yes" xml:space="preserve">
          <source>However, this method results in a more compact quadtree because the extent of the &lt;em&gt;data&lt;/em&gt; is computed first before adding the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e108e98f4ecf32edf3de8524e1194251ba755934" translate="yes" xml:space="preserve">
          <source>Human-readable reference marks for scales.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df6635865dc8a73dc2dd79b59fa8afa6bc1a21b4" translate="yes" xml:space="preserve">
          <source>Identity Scales</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e473f05042ee44c0b77cc456565f93886fca47cb" translate="yes" xml:space="preserve">
          <source>Identity scales are a special case of &lt;a href=&quot;#linear-scales&quot;&gt;linear scales&lt;/a&gt; where the domain and range are identical; the scale and its invert method are thus the identity function. These scales are occasionally useful when working with pixel coordinates, say in conjunction with an axis or brush. Identity scales do not support &lt;a href=&quot;#continuous_rangeRound&quot;&gt;rangeRound&lt;/a&gt;, &lt;a href=&quot;#continuous_clamp&quot;&gt;clamp&lt;/a&gt; or &lt;a href=&quot;#continuous_interpolate&quot;&gt;interpolate&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a92b0ef03f9fe199640db0ab18b97a14c453ca48" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#timer&quot;&gt;timer&lt;/a&gt; is called within the callback of another timer, the new timer callback (if eligible as determined by the specified &lt;em&gt;delay&lt;/em&gt; and &lt;em&gt;time&lt;/em&gt;) will be invoked immediately at the end of the current frame, rather than waiting until the next frame. Within a frame, timer callbacks are guaranteed to be invoked in the order they were scheduled, regardless of their start time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f2257816c8d328b78c3b58b0fed4d0c402e03d8" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;a&lt;/em&gt; or &lt;em&gt;b&lt;/em&gt; are undefined or not an object, they are now implicitly converted to the empty object or empty array as appropriate, rather than throwing a TypeError.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="254d245986e1fe29ad45abb9857a83d8508f7b06" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;align&lt;/em&gt; is specified, sets the alignment to the specified value which must be in the range [0, 1]. If &lt;em&gt;align&lt;/em&gt; is not specified, returns the current alignment which defaults to 0.5. The alignment determines how any leftover unused space in the range is distributed. A value of 0.5 indicates that the leftover space should be equally distributed before the first band and after the last band; &lt;em&gt;i.e.&lt;/em&gt;, the bands should be centered within the range. A value of 0 or 1 may be used to shift the bands to one side, say to position them adjacent to an axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="548eea229787582f19783db68164d4b0bd7b62ef" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;align&lt;/em&gt; is specified, sets the alignment to the specified value which must be in the range [0, 1]. If &lt;em&gt;align&lt;/em&gt; is not specified, returns the current alignment which defaults to 0.5. The alignment determines how any leftover unused space in the range is distributed. A value of 0.5 indicates that the leftover space should be equally distributed before the first point and after the last point; &lt;em&gt;i.e.&lt;/em&gt;, the points should be centered within the range. A value of 0 or 1 may be used to shift the points to one side, say to position them adjacent to an axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="980ab5da3f47883df6aac91324df4c3ced94edde" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;alpha&lt;/em&gt; is specified, sets the current alpha to the specified number in the range [0,1] and returns this simulation. If &lt;em&gt;alpha&lt;/em&gt; is not specified, returns the current alpha value, which defaults to 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccdc1986a3808e37217420b5e1ab2d519de47109" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;angle&lt;/em&gt; is specified, sets the end angle accessor to the specified function and returns this ribbon generator. If &lt;em&gt;angle&lt;/em&gt; is not specified, returns the current end angle accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f6045808f0a0c73557015b88686ef10953c0651" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;angle&lt;/em&gt; is specified, sets the end angle to the specified function or number and returns this arc generator. If &lt;em&gt;angle&lt;/em&gt; is not specified, returns the current end angle accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="283cbde07ce4f7011b3c4b732229e377be4164b3" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;angle&lt;/em&gt; is specified, sets the overall end angle of the pie to the specified function or number and returns this pie generator. If &lt;em&gt;angle&lt;/em&gt; is not specified, returns the current end angle accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fa9df7c4da50a5a9b6f3294ae90aa23e49e0890" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;angle&lt;/em&gt; is specified, sets the overall start angle of the pie to the specified function or number and returns this pie generator. If &lt;em&gt;angle&lt;/em&gt; is not specified, returns the current start angle accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4813b516f42b29256005893bd196622976d4414" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;angle&lt;/em&gt; is specified, sets the pad angle between adjacent groups to the specified number in radians and returns this chord layout. If &lt;em&gt;angle&lt;/em&gt; is not specified, returns the current pad angle, which defaults to zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5250c42bf240d85e5c63d383a09864552c18896" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;angle&lt;/em&gt; is specified, sets the pad angle to the specified function or number and returns this arc generator. If &lt;em&gt;angle&lt;/em&gt; is not specified, returns the current pad angle accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da811a23813e0fd1f839dcbaa8af6403f06dd91f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;angle&lt;/em&gt; is specified, sets the pad angle to the specified function or number and returns this pie generator. If &lt;em&gt;angle&lt;/em&gt; is not specified, returns the current pad angle accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eca7d0c09ec4e23e65602c85d24fb674ff1ae75c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;angle&lt;/em&gt; is specified, sets the projection&amp;rsquo;s clipping circle radius to the specified angle in degrees and returns the projection. If &lt;em&gt;angle&lt;/em&gt; is null, switches to &lt;a href=&quot;https://bl.ocks.org/mbostock/3788999&quot;&gt;antimeridian cutting&lt;/a&gt; rather than small-circle clipping. If &lt;em&gt;angle&lt;/em&gt; is not specified, returns the current clip angle which defaults to null. Small-circle clipping is independent of viewport clipping via &lt;a href=&quot;#projection_clipExtent&quot;&gt;&lt;em&gt;projection&lt;/em&gt;.clipExtent&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc03dc58aa105fb9d99f009cf098cac027367603" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;angle&lt;/em&gt; is specified, sets the projection&amp;rsquo;s post-projection planar rotation angle to the specified &lt;em&gt;angle&lt;/em&gt; in degrees and returns the projection. If &lt;em&gt;angle&lt;/em&gt; is not specified, returns the projection&amp;rsquo;s current angle, which defaults to 0&amp;deg;. Note that it may be faster to rotate during rendering (e.g., using &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/CanvasRenderingContext2D/rotate&quot;&gt;&lt;em&gt;context&lt;/em&gt;.rotate&lt;/a&gt;) rather than during projection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fbc6517dca2b39c292ac314125a7fd7f5acb5d1" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;angle&lt;/em&gt; is specified, sets the start angle accessor to the specified function and returns this ribbon generator. If &lt;em&gt;angle&lt;/em&gt; is not specified, returns the current start angle accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94d466388a93af343ea2dffbdef8af58981a0c9f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;angle&lt;/em&gt; is specified, sets the start angle to the specified function or number and returns this arc generator. If &lt;em&gt;angle&lt;/em&gt; is not specified, returns the current start angle accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b9062add9c04aaaa0a05f6457ec71872e7bf945" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;arguments&lt;/em&gt; is not specified, returns the current tick arguments, which defaults to the empty array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8753d73539a1c69bc4c394dcde37135f6d7d5b1" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;arguments&lt;/em&gt; is specified, sets the &lt;em&gt;arguments&lt;/em&gt; that will be passed to &lt;a href=&quot;d3-scale#continuous_ticks&quot;&gt;&lt;em&gt;scale&lt;/em&gt;.ticks&lt;/a&gt; and &lt;a href=&quot;d3-scale#continuous_tickFormat&quot;&gt;&lt;em&gt;scale&lt;/em&gt;.tickFormat&lt;/a&gt; when the axis is &lt;a href=&quot;#_axis&quot;&gt;rendered&lt;/a&gt;, and returns the axis generator. The meaning of the &lt;em&gt;arguments&lt;/em&gt; depends on the &lt;a href=&quot;#axis_scale&quot;&gt;axis&amp;rsquo; scale&lt;/a&gt; type: most commonly, the arguments are a suggested &lt;em&gt;count&lt;/em&gt; for the number of ticks (or a &lt;a href=&quot;d3-time&quot;&gt;time &lt;em&gt;interval&lt;/em&gt;&lt;/a&gt; for time scales), and an optional &lt;a href=&quot;d3-format&quot;&gt;format &lt;em&gt;specifier&lt;/em&gt;&lt;/a&gt; to customize how the tick values are formatted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c606dcd6e492bedc9bd0714e6bc8415e4370fd9b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;arguments&lt;/em&gt; is specified, this method has no effect if the scale does not implement &lt;em&gt;scale&lt;/em&gt;.ticks, as with &lt;a href=&quot;d3-scale#band-scales&quot;&gt;band&lt;/a&gt; and &lt;a href=&quot;d3-scale#point-scales&quot;&gt;point&lt;/a&gt; scales. To set the tick values explicitly, use &lt;a href=&quot;#axis_tickValues&quot;&gt;&lt;em&gt;axis&lt;/em&gt;.tickValues&lt;/a&gt;. To set the tick format explicitly, use &lt;a href=&quot;#axis_tickFormat&quot;&gt;&lt;em&gt;axis&lt;/em&gt;.tickFormat&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba3b9f3eb99b1c5a2e9bf1dd5693ff1559b9c52d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;b&lt;/em&gt; is a &lt;a href=&quot;d3-color#color&quot;&gt;color&lt;/a&gt; or a string coercible to a color, use &lt;a href=&quot;#interpolateRgb&quot;&gt;interpolateRgb&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f326340fb6934cceb3c243b86a388ad69aa90ea" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;b&lt;/em&gt; is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date&quot;&gt;date&lt;/a&gt;, use &lt;a href=&quot;#interpolateDate&quot;&gt;interpolateDate&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f7d9fd2c85208577788637adeff9bf5bac07f8c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;b&lt;/em&gt; is a number, use &lt;a href=&quot;#interpolateNumber&quot;&gt;interpolateNumber&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="472df5e1cff010cbdd37d53c1909eee6bc8b07d4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;b&lt;/em&gt; is a string, use &lt;a href=&quot;#interpolateString&quot;&gt;interpolateString&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94e33699c2c3fb350fc313b18fe57a2ace41d595" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;b&lt;/em&gt; is an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray&quot;&gt;array&lt;/a&gt;, use &lt;a href=&quot;#interpolateArray&quot;&gt;interpolateArray&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="573af931dc023685add01b9bfcea9d954d24074c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;b&lt;/em&gt; is coercible to a number, use &lt;a href=&quot;#interpolateNumber&quot;&gt;interpolateNumber&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2c999fb1a313600fb1a17a39843cd591e098d53" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;b&lt;/em&gt; is null, undefined or a boolean, use the constant &lt;em&gt;b&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f9adea6bd0542896075a176a6fb4102a88f6194" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;bandwidth&lt;/em&gt; is specified, sets the bandwidth (the standard deviation) of the Gaussian kernel and returns the estimate. If &lt;em&gt;bandwidth&lt;/em&gt; is not specified, returns the current bandwidth, which defaults to 20.4939&amp;hellip;. The specified &lt;em&gt;bandwidth&lt;/em&gt; is currently rounded to the nearest supported value by this implementation, and must be nonnegative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a54f2ec956e84f2ce808979a4e86ba195879c537" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;base&lt;/em&gt; is specified, sets the base for this logarithmic scale to the specified value. If &lt;em&gt;base&lt;/em&gt; is not specified, returns the current base, which defaults to 10.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9879361f1ba34fd3fe97b3d0b914eaea04417ca3" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;callback&lt;/em&gt; is not specified, returns the current callback for the specified &lt;em&gt;typenames&lt;/em&gt;, if any. If multiple typenames are specified, the first matching callback is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d6a95db0111f5488d6382258d92d67202400959" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;cellSize&lt;/em&gt; is specified, sets the size of individual cells in the underlying bin grid to the specified positive integer and returns the estimator. If &lt;em&gt;cellSize&lt;/em&gt; is not specified, returns the current cell size, which defaults to 4. The cell size is rounded down to the nearest power of two. Smaller cells produce more detailed contour polygons, but are more expensive to compute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6deab58cdc82cd617975401eb3702be2c433855" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;center&lt;/em&gt; is specified, sets the circle center to the specified point [&lt;em&gt;longitude&lt;/em&gt;, &lt;em&gt;latitude&lt;/em&gt;] in degrees, and returns this circle generator. The center may also be specified as a function; this function will be invoked whenever a circle is &lt;a href=&quot;#_circle&quot;&gt;generated&lt;/a&gt;, being passed any arguments passed to the circle generator. If &lt;em&gt;center&lt;/em&gt; is not specified, returns the current center accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea8f290549bb45685cbf90c982e60405b00e25df" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;center&lt;/em&gt; is specified, sets the projection&amp;rsquo;s center to the specified &lt;em&gt;center&lt;/em&gt;, a two-element array of longitude and latitude in degrees and returns the projection. If &lt;em&gt;center&lt;/em&gt; is not specified, returns the current center, which defaults to ⟨0&amp;deg;,0&amp;deg;⟩.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="674ef3b8d149c017f1a20966420eb53cf6dff5db" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;clamp&lt;/em&gt; is not specified, returns whether or not the scale currently clamps values to within the range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e44b725ec3c2062aab1352325447298d3d5eb92" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;clamp&lt;/em&gt; is specified, enables or disables clamping accordingly. If clamping is disabled and the scale is passed a value outside the &lt;a href=&quot;#continuous_domain&quot;&gt;domain&lt;/a&gt;, the scale may return a value outside the &lt;a href=&quot;#continuous_range&quot;&gt;range&lt;/a&gt; through extrapolation. If clamping is enabled, the return value of the scale is always within the scale&amp;rsquo;s range. Clamping similarly applies to &lt;a href=&quot;#continuous_invert&quot;&gt;&lt;em&gt;continuous&lt;/em&gt;.invert&lt;/a&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8c92081b9f1fb82c12cf1d26e8d82b3ae2c932" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;columns&lt;/em&gt; is not specified, the list of column names that forms the header row is determined by the union of all properties on all objects in &lt;em&gt;rows&lt;/em&gt;; the order of columns is nondeterministic. If &lt;em&gt;columns&lt;/em&gt; is specified, it is an array of strings representing the column names. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cfe7fbc099f8bd2395d508a734e3230c72969d2" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;compare&lt;/em&gt; is specified, sets the chord comparator to the specified function or null and returns this chord layout. If &lt;em&gt;compare&lt;/em&gt; is not specified, returns the current chord comparator, which defaults to null. If the chord comparator is non-null, it is used to sort the &lt;a href=&quot;#_chord&quot;&gt;chords&lt;/a&gt; by their combined flow; this only affects the &lt;em&gt;z&lt;/em&gt;-order of the chords. See also &lt;a href=&quot;d3-array#ascending&quot;&gt;d3.ascending&lt;/a&gt; and &lt;a href=&quot;d3-array#descending&quot;&gt;d3.descending&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d1235658687a2338a8dff9983ca81a588ee92a5" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;compare&lt;/em&gt; is specified, sets the data comparator to the specified function and returns this pie generator. If &lt;em&gt;compare&lt;/em&gt; is not specified, returns the current data comparator, which defaults to null. If both the data comparator and the value comparator are null, then arcs are positioned in the original input order. Otherwise, the data is sorted according to the data comparator, and the resulting order is used. Setting the data comparator implicitly sets the &lt;a href=&quot;#pie_sortValues&quot;&gt;value comparator&lt;/a&gt; to null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6020f56e0379d8e0db89b5ff371d7083044127df" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;compare&lt;/em&gt; is specified, sets the group comparator to the specified function or null and returns this chord layout. If &lt;em&gt;compare&lt;/em&gt; is not specified, returns the current group comparator, which defaults to null. If the group comparator is non-null, it is used to sort the groups by their total outflow. See also &lt;a href=&quot;d3-array#ascending&quot;&gt;d3.ascending&lt;/a&gt; and &lt;a href=&quot;d3-array#descending&quot;&gt;d3.descending&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fa46ad4d38df442e5b36550843dbd8bd3c5e06a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;compare&lt;/em&gt; is specified, sets the subgroup comparator to the specified function or null and returns this chord layout. If &lt;em&gt;compare&lt;/em&gt; is not specified, returns the current subgroup comparator, which defaults to null. If the subgroup comparator is non-null, it is used to sort the subgroups corresponding to &lt;em&gt;matrix&lt;/em&gt;[&lt;em&gt;i&lt;/em&gt;][0 &amp;hellip; &lt;em&gt;n&lt;/em&gt; - 1] for a given group &lt;em&gt;i&lt;/em&gt; by their total outflow. See also &lt;a href=&quot;d3-array#ascending&quot;&gt;d3.ascending&lt;/a&gt; and &lt;a href=&quot;d3-array#descending&quot;&gt;d3.descending&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40ba0f7a01682b5c012706926c5b90fa0b3dc953" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;compare&lt;/em&gt; is specified, sets the value comparator to the specified function and returns this pie generator. If &lt;em&gt;compare&lt;/em&gt; is not specified, returns the current value comparator, which defaults to descending value. The default value comparator is implemented as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e3ea307053d383f258a894af2a27b3bf3f64566" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;constrain&lt;/em&gt; is specified, sets the transform constraint function to the specified function and returns the zoom behavior. If &lt;em&gt;constrain&lt;/em&gt; is not specified, returns the current constraint function, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68ae769ba6f756b70d7ae81c7993803ba54c5c43" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;container&lt;/em&gt; is specified, sets the container accessor to the specified object or function and returns the drag behavior. If &lt;em&gt;container&lt;/em&gt; is not specified, returns the current container accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c718e4b47f9d69c179d46b9c29c51d9c77a511be" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;context&lt;/em&gt; is specified, sets the context and returns this arc generator. If &lt;em&gt;context&lt;/em&gt; is not specified, returns the current context, which defaults to null. If the context is not null, then the &lt;a href=&quot;#_arc&quot;&gt;generated arc&lt;/a&gt; is rendered to this context as a sequence of &lt;a href=&quot;http://www.w3.org/TR/2dcontext/#canvaspathmethods&quot;&gt;path method&lt;/a&gt; calls. Otherwise, a &lt;a href=&quot;http://www.w3.org/TR/SVG/paths.html#PathData&quot;&gt;path data&lt;/a&gt; string representing the generated arc is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb166871153e7d4a2c3423b6498a42714d4aa2c3" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;context&lt;/em&gt; is specified, sets the context and returns this area generator. If &lt;em&gt;context&lt;/em&gt; is not specified, returns the current context, which defaults to null. If the context is not null, then the &lt;a href=&quot;#_area&quot;&gt;generated area&lt;/a&gt; is rendered to this context as a sequence of &lt;a href=&quot;http://www.w3.org/TR/2dcontext/#canvaspathmethods&quot;&gt;path method&lt;/a&gt; calls. Otherwise, a &lt;a href=&quot;http://www.w3.org/TR/SVG/paths.html#PathData&quot;&gt;path data&lt;/a&gt; string representing the generated area is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f9722361c90ddb3580648a1bfb6dd9e3479292" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;context&lt;/em&gt; is specified, sets the context and returns this line generator. If &lt;em&gt;context&lt;/em&gt; is not specified, returns the current context, which defaults to null. If the context is not null, then the &lt;a href=&quot;#_line&quot;&gt;generated line&lt;/a&gt; is rendered to this context as a sequence of &lt;a href=&quot;http://www.w3.org/TR/2dcontext/#canvaspathmethods&quot;&gt;path method&lt;/a&gt; calls. Otherwise, a &lt;a href=&quot;http://www.w3.org/TR/SVG/paths.html#PathData&quot;&gt;path data&lt;/a&gt; string representing the generated line is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f598bcede757dcb0492f68ade19af2713943f773" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;context&lt;/em&gt; is specified, sets the context and returns this link generator. If &lt;em&gt;context&lt;/em&gt; is not specified, returns the current context, which defaults to null. If the context is not null, then the &lt;a href=&quot;#_link&quot;&gt;generated link&lt;/a&gt; is rendered to this context as a sequence of &lt;a href=&quot;http://www.w3.org/TR/2dcontext/#canvaspathmethods&quot;&gt;path method&lt;/a&gt; calls. Otherwise, a &lt;a href=&quot;http://www.w3.org/TR/SVG/paths.html#PathData&quot;&gt;path data&lt;/a&gt; string representing the generated link is returned. See also &lt;a href=&quot;d3-path&quot;&gt;d3-path&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e33107f9b1ce9cf980c20a8bf805c070d9c20dea" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;context&lt;/em&gt; is specified, sets the context and returns this ribbon generator. If &lt;em&gt;context&lt;/em&gt; is not specified, returns the current context, which defaults to null. If the context is not null, then the &lt;a href=&quot;#_ribbon&quot;&gt;generated ribbon&lt;/a&gt; is rendered to this context as a sequence of &lt;a href=&quot;http://www.w3.org/TR/2dcontext/#canvaspathmethods&quot;&gt;path method&lt;/a&gt; calls. Otherwise, a &lt;a href=&quot;http://www.w3.org/TR/SVG/paths.html#PathData&quot;&gt;path data&lt;/a&gt; string representing the generated ribbon is returned. See also &lt;a href=&quot;d3-path&quot;&gt;d3-path&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e0bfaa17c5b618cb888ef3bb0f4a3ef4b9a402" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;context&lt;/em&gt; is specified, sets the context and returns this symbol generator. If &lt;em&gt;context&lt;/em&gt; is not specified, returns the current context, which defaults to null. If the context is not null, then the &lt;a href=&quot;#_symbol&quot;&gt;generated symbol&lt;/a&gt; is rendered to this context as a sequence of &lt;a href=&quot;http://www.w3.org/TR/2dcontext/#canvaspathmethods&quot;&gt;path method&lt;/a&gt; calls. Otherwise, a &lt;a href=&quot;http://www.w3.org/TR/SVG/paths.html#PathData&quot;&gt;path data&lt;/a&gt; string representing the generated symbol is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b5ae5c16aef25a1e8b89dc2499e7c1604f66b56" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;context&lt;/em&gt; is specified, sets the current render context and returns the path generator. If the &lt;em&gt;context&lt;/em&gt; is null, then the &lt;a href=&quot;#_path&quot;&gt;path generator&lt;/a&gt; will return an SVG path string; if the context is non-null, the path generator will instead call methods on the specified context to render geometry. The context must implement the following subset of the &lt;a href=&quot;https://www.w3.org/TR/2dcontext/#canvasrenderingcontext2d&quot;&gt;CanvasRenderingContext2D API&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="125d580ffd36f19d8e139178460cfbc433a6b5d8" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;curve&lt;/em&gt; is specified, sets the &lt;a href=&quot;#curves&quot;&gt;curve factory&lt;/a&gt; and returns this area generator. If &lt;em&gt;curve&lt;/em&gt; is not specified, returns the current curve factory, which defaults to &lt;a href=&quot;#curveLinear&quot;&gt;curveLinear&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74d93d6fdd0711cf3812958e6aa162b19381cfa9" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;curve&lt;/em&gt; is specified, sets the &lt;a href=&quot;#curves&quot;&gt;curve factory&lt;/a&gt; and returns this line generator. If &lt;em&gt;curve&lt;/em&gt; is not specified, returns the current curve factory, which defaults to &lt;a href=&quot;#curveLinear&quot;&gt;curveLinear&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5d3aadcf01d078ed910c20cba812113d6dd80f6" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;data&lt;/em&gt; is not specified, this method returns the array of data for the selected elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80a6679efc32101b3f60b5eba719e68c83a2bf49" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;decay&lt;/em&gt; is specified, sets the &lt;a href=&quot;#simulation_alpha&quot;&gt;&lt;em&gt;alpha&lt;/em&gt;&lt;/a&gt; decay rate to the specified number in the range [0,1] and returns this simulation. If &lt;em&gt;decay&lt;/em&gt; is not specified, returns the current &lt;em&gt;alpha&lt;/em&gt; decay rate, which defaults to 0.0228&amp;hellip; = 1 - &lt;em&gt;pow&lt;/em&gt;(0.001, 1 / 300) where 0.001 is the default &lt;a href=&quot;#simulation_alphaMin&quot;&gt;minimum &lt;em&gt;alpha&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b3e588efa0e82343aaa67d9d6bee1acb8a1b5b8" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;decay&lt;/em&gt; is specified, sets the velocity decay factor to the specified number in the range [0,1] and returns this simulation. If &lt;em&gt;decay&lt;/em&gt; is not specified, returns the current velocity decay factor, which defaults to 0.4. The decay factor is akin to atmospheric friction; after the application of any forces during a &lt;a href=&quot;#simulation_tick&quot;&gt;tick&lt;/a&gt;, each node&amp;rsquo;s velocity is multiplied by 1 - &lt;em&gt;decay&lt;/em&gt;. As with lowering the &lt;a href=&quot;#simulation_alphaDecay&quot;&gt;alpha decay rate&lt;/a&gt;, less velocity decay may converge on a better solution, but risks numerical instabilities and oscillation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab4c17130d29ce0f84aa54e06446c4c724dc1d3" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;defined&lt;/em&gt; is specified, sets the defined accessor to the specified function or boolean and returns this area generator. If &lt;em&gt;defined&lt;/em&gt; is not specified, returns the current defined accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13242d90a95679aa4c93d47b850513cdc184d164" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;defined&lt;/em&gt; is specified, sets the defined accessor to the specified function or boolean and returns this line generator. If &lt;em&gt;defined&lt;/em&gt; is not specified, returns the current defined accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="542cb3156bcbb27f2599b2bd29785fcb1211cb2c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;delta&lt;/em&gt; is specified, sets the wheel delta function to the specified function and returns the zoom behavior. If &lt;em&gt;delta&lt;/em&gt; is not specified, returns the current wheel delta function, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e3891ebb2502e939fb7c7c50f5305ff4145f8dc" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;distance&lt;/em&gt; is specified, sets the distance accessor to the specified number or function, re-evaluates the distance accessor for each link, and returns this force. If &lt;em&gt;distance&lt;/em&gt; is not specified, returns the current distance accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="754ee287a5dfc85664109cfde6604fa5be4f9af9" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;distance&lt;/em&gt; is specified, sets the maximum distance between nodes over which this force is considered. If &lt;em&gt;distance&lt;/em&gt; is not specified, returns the current maximum distance, which defaults to infinity. Specifying a finite maximum distance improves performance and produces a more localized layout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ebd1a8412e74f2cf386f55468d2d603bec8c6c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;distance&lt;/em&gt; is specified, sets the maximum distance that the mouse can move between mousedown and mouseup that will trigger a subsequent click event. If at any point between mousedown and mouseup the mouse is greater than or equal to &lt;em&gt;distance&lt;/em&gt; from its position on mousedown, the click event following mouseup will be suppressed. If &lt;em&gt;distance&lt;/em&gt; is not specified, returns the current distance threshold, which defaults to zero. The distance threshold is measured in client coordinates (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/clientX&quot;&gt;&lt;em&gt;event&lt;/em&gt;.clientX&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/clientY&quot;&gt;&lt;em&gt;event&lt;/em&gt;.clientY&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5ffe85c01988061567300321f0f8a22a54eef35" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;distance&lt;/em&gt; is specified, sets the minimum distance between nodes over which this force is considered. If &lt;em&gt;distance&lt;/em&gt; is not specified, returns the current minimum distance, which defaults to 1. A minimum distance establishes an upper bound on the strength of the force between two nearby nodes, avoiding instability. In particular, it avoids an infinitely-strong force if two nodes are exactly coincident; in this case, the direction of the force is random.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df8c3503a84d47b13a1be73cdee4d32b3d2475e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;domain&lt;/em&gt; is specified, sets the domain accessor to the specified function or array and returns this histogram generator. If &lt;em&gt;domain&lt;/em&gt; is not specified, returns the current domain accessor, which defaults to &lt;a href=&quot;#extent&quot;&gt;extent&lt;/a&gt;. The histogram domain is defined as an array [&lt;em&gt;min&lt;/em&gt;, &lt;em&gt;max&lt;/em&gt;], where &lt;em&gt;min&lt;/em&gt; is the minimum observable value and &lt;em&gt;max&lt;/em&gt; is the maximum observable value; both values are inclusive. Any value outside of this domain will be ignored when the histogram is &lt;a href=&quot;#_histogram&quot;&gt;generated&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16cca010b0b6933b0586c5dafb13f6464a3540b3" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;domain&lt;/em&gt; is specified, sets the domain of the quantile scale to the specified set of discrete numeric values. The array must not be empty, and must contain at least one numeric value; NaN, null and undefined values are ignored and not considered part of the sample population. If the elements in the given array are not numbers, they will be coerced to numbers. A copy of the input array is sorted and stored internally. If &lt;em&gt;domain&lt;/em&gt; is not specified, returns the scale&amp;rsquo;s current domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb7d66fe702c146157a7d2a547475761094b8bc3" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;domain&lt;/em&gt; is specified, sets the domain to the specified array of values. The first element in &lt;em&gt;domain&lt;/em&gt; will be mapped to the first band, the second domain value to the second band, and so on. Domain values are stored internally in a map from stringified value to index; the resulting index is then used to determine the band. Thus, a band scale&amp;rsquo;s values must be coercible to a string, and the stringified version of the domain value uniquely identifies the corresponding band. If &lt;em&gt;domain&lt;/em&gt; is not specified, this method returns the current domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44a3c094384bc7e9a75a3636de56f7f81bee9c91" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;domain&lt;/em&gt; is specified, sets the domain to the specified array of values. The first element in &lt;em&gt;domain&lt;/em&gt; will be mapped to the first element in the range, the second domain value to the second range value, and so on. Domain values are stored internally in a map from stringified value to index; the resulting index is then used to retrieve a value from the range. Thus, an ordinal scale&amp;rsquo;s values must be coercible to a string, and the stringified version of the domain value uniquely identifies the corresponding range value. If &lt;em&gt;domain&lt;/em&gt; is not specified, this method returns the current domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7e3f1dfb72c7130d61359f7c92d7707c3accc51" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;domain&lt;/em&gt; is specified, sets the domain to the specified array of values. The first element in &lt;em&gt;domain&lt;/em&gt; will be mapped to the first point, the second domain value to the second point, and so on. Domain values are stored internally in a map from stringified value to index; the resulting index is then used to determine the point. Thus, a point scale&amp;rsquo;s values must be coercible to a string, and the stringified version of the domain value uniquely identifies the corresponding point. If &lt;em&gt;domain&lt;/em&gt; is not specified, this method returns the current domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac585683d7f400645abf3402efecba88cf236270" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;domain&lt;/em&gt; is specified, sets the scale&amp;rsquo;s domain to the specified array of numbers. The array must contain two or more elements. If the elements in the given array are not numbers, they will be coerced to numbers. If &lt;em&gt;domain&lt;/em&gt; is not specified, returns a copy of the scale&amp;rsquo;s current domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54aebbdf6360a960ec04bb084444ea1bf80f8851" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;domain&lt;/em&gt; is specified, sets the scale&amp;rsquo;s domain to the specified array of values. The values must be in sorted ascending order, or the behavior of the scale is undefined. The values are typically numbers, but any naturally ordered values (such as strings) will work; a threshold scale can be used to encode any type that is ordered. If the number of values in the scale&amp;rsquo;s range is N+1, the number of values in the scale&amp;rsquo;s domain must be N. If there are fewer than N elements in the domain, the additional values in the range are ignored. If there are more than N elements in the domain, the scale may return undefined for some inputs. If &lt;em&gt;domain&lt;/em&gt; is not specified, returns the scale&amp;rsquo;s current domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b64c39bb60d49e120d81d3b0b36f61114ed6731" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;domain&lt;/em&gt; is specified, sets the scale&amp;rsquo;s domain to the specified two-element array of numbers. If the elements in the given array are not numbers, they will be coerced to numbers. If &lt;em&gt;domain&lt;/em&gt; is not specified, returns the scale&amp;rsquo;s current domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="979fdc565b1800ce36522c3d143f744eb6b701ea" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;duration&lt;/em&gt; is specified, sets the duration for zoom transitions on double-click and double-tap to the specified number of milliseconds and returns the zoom behavior. If &lt;em&gt;duration&lt;/em&gt; is not specified, returns the current duration, which defaults to 250 milliseconds. If the duration is not greater than zero, double-click and -tap trigger instantaneous changes to the zoom transform rather than initiating smooth transitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b34abb2c456fbe7386b5dc1efc5c2c317e3577fb" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;exponent&lt;/em&gt; is specified, sets the current exponent to the given numeric value. If &lt;em&gt;exponent&lt;/em&gt; is not specified, returns the current exponent, which defaults to 1. (Note that this is effectively a &lt;a href=&quot;#linear-scales&quot;&gt;linear&lt;/a&gt; scale until you set a different exponent.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3545db3154a5a295a30ff46b4994b495f7357fb" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;extent&lt;/em&gt; is not specified, returns the current extent accessor, which defaults to [[0, 0], [&lt;em&gt;width&lt;/em&gt;, &lt;em&gt;height&lt;/em&gt;]] where &lt;em&gt;width&lt;/em&gt; is the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element/clientWidth&quot;&gt;client width&lt;/a&gt; of the element and &lt;em&gt;height&lt;/em&gt; is its &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element/clientHeight&quot;&gt;client height&lt;/a&gt;; for SVG elements, the nearest ancestor SVG element&amp;rsquo;s &lt;a href=&quot;https://www.w3.org/TR/SVG/struct.html#SVGElementWidthAttribute&quot;&gt;width&lt;/a&gt; and &lt;a href=&quot;https://www.w3.org/TR/SVG/struct.html#SVGElementHeightAttribute&quot;&gt;height&lt;/a&gt; is used. In this case, the owner SVG element must have defined &lt;a href=&quot;https://www.w3.org/TR/SVG/struct.html#SVGElementWidthAttribute&quot;&gt;width&lt;/a&gt; and &lt;a href=&quot;https://www.w3.org/TR/SVG/struct.html#SVGElementHeightAttribute&quot;&gt;height&lt;/a&gt; attributes rather than (for example) relying on CSS properties or the viewBox attribute; SVG provides no programmatic method for retrieving the &lt;a href=&quot;https://www.w3.org/TR/SVG/coords.html#ViewportSpace&quot;&gt;initial viewport size&lt;/a&gt;. Alternatively, consider using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect&quot;&gt;&lt;em&gt;element&lt;/em&gt;.getBoundingClientRect&lt;/a&gt;. (In Firefox, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element/clientWidth&quot;&gt;&lt;em&gt;element&lt;/em&gt;.clientWidth&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Element/clientHeight&quot;&gt;&lt;em&gt;element&lt;/em&gt;.clientHeight&lt;/a&gt; is zero for SVG elements!)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de71d2820b2280c9c64bbfed6697681c3d0f5c9d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;extent&lt;/em&gt; is specified, expands the quadtree to &lt;a href=&quot;#quadtree_cover&quot;&gt;cover&lt;/a&gt; the specified points [[&lt;em&gt;x0&lt;/em&gt;, &lt;em&gt;y0&lt;/em&gt;], [&lt;em&gt;x1&lt;/em&gt;, &lt;em&gt;y1&lt;/em&gt;]] and returns the quadtree. If &lt;em&gt;extent&lt;/em&gt; is not specified, returns the quadtree&amp;rsquo;s current extent [[&lt;em&gt;x0&lt;/em&gt;, &lt;em&gt;y0&lt;/em&gt;], [&lt;em&gt;x1&lt;/em&gt;, &lt;em&gt;y1&lt;/em&gt;]], where &lt;em&gt;x0&lt;/em&gt; and &lt;em&gt;y0&lt;/em&gt; are the inclusive lower bounds and &lt;em&gt;x1&lt;/em&gt; and &lt;em&gt;y1&lt;/em&gt; are the inclusive upper bounds, or undefined if the quadtree has no extent. The extent may also be expanded by calling &lt;a href=&quot;#quadtree_cover&quot;&gt;&lt;em&gt;quadtree&lt;/em&gt;.cover&lt;/a&gt; or &lt;a href=&quot;#quadtree_add&quot;&gt;&lt;em&gt;quadtree&lt;/em&gt;.add&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4c2fc4ddf69230640ab718f433ae5663cdd9b7d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;extent&lt;/em&gt; is specified, sets the brushable extent to the specified array of points [[&lt;em&gt;x0&lt;/em&gt;, &lt;em&gt;y0&lt;/em&gt;], [&lt;em&gt;x1&lt;/em&gt;, &lt;em&gt;y1&lt;/em&gt;]], where [&lt;em&gt;x0&lt;/em&gt;, &lt;em&gt;y0&lt;/em&gt;] is the top-left corner and [&lt;em&gt;x1&lt;/em&gt;, &lt;em&gt;y1&lt;/em&gt;] is the bottom-right corner, and returns this brush. The &lt;em&gt;extent&lt;/em&gt; may also be specified as a function which returns such an array; if a function, it is invoked for each selected element, being passed the current datum &lt;code&gt;d&lt;/code&gt; and index &lt;code&gt;i&lt;/code&gt;, with the &lt;code&gt;this&lt;/code&gt; context as the current DOM element. If &lt;em&gt;extent&lt;/em&gt; is not specified, returns the current extent accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c7bfd2b977cc0ba81ecda927e9cf21e2c0b6538" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;extent&lt;/em&gt; is specified, sets the clip extent of the Voronoi layout to the specified bounds and returns the layout. The &lt;em&gt;extent&lt;/em&gt; bounds are specified as an array [[</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf79325bdfbf207b5c1b45f5cea6ce0317003883" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;extent&lt;/em&gt; is specified, sets the major and minor extents of this graticule. If &lt;em&gt;extent&lt;/em&gt; is not specified, returns the current minor extent, which defaults to ⟨⟨-180&amp;deg;, -80&amp;deg; - &amp;epsilon;⟩, ⟨180&amp;deg;, 80&amp;deg; + &amp;epsilon;⟩⟩.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba1f47f2a7d8f84b0d57cc40f44f18768a2765bd" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;extent&lt;/em&gt; is specified, sets the major extent of this graticule. If &lt;em&gt;extent&lt;/em&gt; is not specified, returns the current major extent, which defaults to ⟨⟨-180&amp;deg;, -90&amp;deg; + &amp;epsilon;⟩, ⟨180&amp;deg;, 90&amp;deg; - &amp;epsilon;⟩⟩.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d32af6114c35eb2c5d02dc6734b61cd0843af6f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;extent&lt;/em&gt; is specified, sets the minor extent of this graticule. If &lt;em&gt;extent&lt;/em&gt; is not specified, returns the current minor extent, which defaults to ⟨⟨-180&amp;deg;, -80&amp;deg; - &amp;epsilon;⟩, ⟨180&amp;deg;, 80&amp;deg; + &amp;epsilon;⟩⟩.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b55950718c2383f94c01aebaa6b90d02eebec21e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;extent&lt;/em&gt; is specified, sets the projection&amp;rsquo;s viewport clip extent to the specified bounds in pixels and returns the projection. The &lt;em&gt;extent&lt;/em&gt; bounds are specified as an array [[</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b5db180c22902823c1e60622411725c41045ee0" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;extent&lt;/em&gt; is specified, sets the scale extent to the specified array of numbers [&lt;em&gt;k0&lt;/em&gt;, &lt;em&gt;k1&lt;/em&gt;] where &lt;em&gt;k0&lt;/em&gt; is the minimum allowed scale factor and &lt;em&gt;k1&lt;/em&gt; is the maximum allowed scale factor, and returns this zoom behavior. If &lt;em&gt;extent&lt;/em&gt; is not specified, returns the current scale extent, which defaults to [0, &amp;infin;]. The scale extent restricts zooming in and out. It is enforced on interaction and when using &lt;a href=&quot;#zoom_scaleBy&quot;&gt;&lt;em&gt;zoom&lt;/em&gt;.scaleBy&lt;/a&gt;, &lt;a href=&quot;#zoom_scaleTo&quot;&gt;&lt;em&gt;zoom&lt;/em&gt;.scaleTo&lt;/a&gt; and &lt;a href=&quot;#zoom_translateBy&quot;&gt;&lt;em&gt;zoom&lt;/em&gt;.translateBy&lt;/a&gt;; however, it is not enforced when using &lt;a href=&quot;#zoom_transform&quot;&gt;&lt;em&gt;zoom&lt;/em&gt;.transform&lt;/a&gt; to set the transform explicitly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="427ace677872e4c2d194466f6cc8dcdd519b60c4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;extent&lt;/em&gt; is specified, sets the translate extent to the specified array of points [[&lt;em&gt;x0&lt;/em&gt;, &lt;em&gt;y0&lt;/em&gt;], [&lt;em&gt;x1&lt;/em&gt;, &lt;em&gt;y1&lt;/em&gt;]], where [&lt;em&gt;x0&lt;/em&gt;, &lt;em&gt;y0&lt;/em&gt;] is the top-left corner of the world and [&lt;em&gt;x1&lt;/em&gt;, &lt;em&gt;y1&lt;/em&gt;] is the bottom-right corner of the world, and returns this zoom behavior. If &lt;em&gt;extent&lt;/em&gt; is not specified, returns the current translate extent, which defaults to [[-&amp;infin;, -&amp;infin;], [+&amp;infin;, +&amp;infin;]]. The translate extent restricts panning, and may cause translation on zoom out. It is enforced on interaction and when using &lt;a href=&quot;#zoom_scaleBy&quot;&gt;&lt;em&gt;zoom&lt;/em&gt;.scaleBy&lt;/a&gt;, &lt;a href=&quot;#zoom_scaleTo&quot;&gt;&lt;em&gt;zoom&lt;/em&gt;.scaleTo&lt;/a&gt; and &lt;a href=&quot;#zoom_translateBy&quot;&gt;&lt;em&gt;zoom&lt;/em&gt;.translateBy&lt;/a&gt;; however, it is not enforced when using &lt;a href=&quot;#zoom_transform&quot;&gt;&lt;em&gt;zoom&lt;/em&gt;.transform&lt;/a&gt; to set the transform explicitly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d42254fcb46884dfd8f7c048aaed4210f53af2c4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;extent&lt;/em&gt; is specified, sets the viewport extent to the specified array of points [[&lt;em&gt;x0&lt;/em&gt;, &lt;em&gt;y0&lt;/em&gt;], [&lt;em&gt;x1&lt;/em&gt;, &lt;em&gt;y1&lt;/em&gt;]], where [&lt;em&gt;x0&lt;/em&gt;, &lt;em&gt;y0&lt;/em&gt;] is the top-left corner of the viewport and [&lt;em&gt;x1&lt;/em&gt;, &lt;em&gt;y1&lt;/em&gt;] is the bottom-right corner of the viewport, and returns this zoom behavior. The &lt;em&gt;extent&lt;/em&gt; may also be specified as a function which returns such an array; if a function, it is invoked for each selected element, being passed the current datum &lt;code&gt;d&lt;/code&gt; and index &lt;code&gt;i&lt;/code&gt;, with the &lt;code&gt;this&lt;/code&gt; context as the current DOM element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6124f2be4c2cdfc1fbdc7594e7f2595f12cdc6d8" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;extent&lt;/em&gt; is specified, sets this tile layout&amp;rsquo;s extent to the specified array of points [[&lt;em&gt;x0&lt;/em&gt;, &lt;em&gt;y0&lt;/em&gt;], [&lt;em&gt;x1&lt;/em&gt;, &lt;em&gt;y1&lt;/em&gt;]], where [&lt;em&gt;x0&lt;/em&gt;, &lt;em&gt;y0&lt;/em&gt;] is the top-left corner and [&lt;em&gt;x1&lt;/em&gt;, &lt;em&gt;y1&lt;/em&gt;] is the bottom-right corner, and returns this tile layout. If &lt;em&gt;extent&lt;/em&gt; is not specified, returns the current layout extent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e666b67d24cb3f8fb1ef96c5f777836536d511d7" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;factory&lt;/em&gt; is specified and not null, assigns the attribute &lt;a href=&quot;#transition_tween&quot;&gt;tween&lt;/a&gt; for the attribute with the specified &lt;em&gt;name&lt;/em&gt; to the specified interpolator &lt;em&gt;factory&lt;/em&gt;. An interpolator factory is a function that returns an &lt;a href=&quot;d3-interpolate&quot;&gt;interpolator&lt;/a&gt;; when the transition starts, the &lt;em&gt;factory&lt;/em&gt; is evaluated for each selected element, in order, being passed the current datum &lt;code&gt;d&lt;/code&gt; and index &lt;code&gt;i&lt;/code&gt;, with the &lt;code&gt;this&lt;/code&gt; context as the current DOM element. The returned interpolator will then be invoked for each frame of the transition, in order, being passed the &lt;a href=&quot;#transition_ease&quot;&gt;eased&lt;/a&gt; time &lt;em&gt;t&lt;/em&gt;, typically in the range [0, 1]. Lastly, the return value of the interpolator will be used to set the attribute value. The interpolator must return a string. (To remove an attribute at the start of a transition, use &lt;a href=&quot;#transition_attr&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.attr&lt;/a&gt;; to remove an attribute at the end of a transition, use &lt;a href=&quot;#transition_on&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.on&lt;/a&gt; to listen for the &lt;em&gt;end&lt;/em&gt; event.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44504fd173f0fea45b4b424fc8f06419d27d4fad" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;factory&lt;/em&gt; is specified and not null, assigns the style &lt;a href=&quot;#transition_tween&quot;&gt;tween&lt;/a&gt; for the style with the specified &lt;em&gt;name&lt;/em&gt; to the specified interpolator &lt;em&gt;factory&lt;/em&gt;. An interpolator factory is a function that returns an &lt;a href=&quot;d3-interpolate&quot;&gt;interpolator&lt;/a&gt;; when the transition starts, the &lt;em&gt;factory&lt;/em&gt; is evaluated for each selected element, in order, being passed the current datum &lt;code&gt;d&lt;/code&gt; and index &lt;code&gt;i&lt;/code&gt;, with the &lt;code&gt;this&lt;/code&gt; context as the current DOM element. The returned interpolator will then be invoked for each frame of the transition, in order, being passed the &lt;a href=&quot;#transition_ease&quot;&gt;eased&lt;/a&gt; time &lt;em&gt;t&lt;/em&gt;, typically in the range [0, 1]. Lastly, the return value of the interpolator will be used to set the style value with the specified &lt;em&gt;priority&lt;/em&gt;. The interpolator must return a string. (To remove an style at the start of a transition, use &lt;a href=&quot;#transition_style&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.style&lt;/a&gt;; to remove an style at the end of a transition, use &lt;a href=&quot;#transition_on&quot;&gt;&lt;em&gt;transition&lt;/em&gt;.on&lt;/a&gt; to listen for the &lt;em&gt;end&lt;/em&gt; event.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d17d7db7f00178f17fcab94d498ee1ae87371b13" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;filter&lt;/em&gt; is specified, sets the filter to the specified function and returns the brush. If &lt;em&gt;filter&lt;/em&gt; is not specified, returns the current filter, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3444d9115b3743b8c25ca38942e3167795d35095" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;filter&lt;/em&gt; is specified, sets the filter to the specified function and returns the drag behavior. If &lt;em&gt;filter&lt;/em&gt; is not specified, returns the current filter, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ca072a4a4575b96ea2db15edd7c62db7a89471" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;filter&lt;/em&gt; is specified, sets the filter to the specified function and returns the zoom behavior. If &lt;em&gt;filter&lt;/em&gt; is not specified, returns the current filter, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab30ce93b489b892fb649f269cad45faa3e72ef4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;force&lt;/em&gt; is specified, assigns the &lt;a href=&quot;#forces&quot;&gt;force&lt;/a&gt; for the specified &lt;em&gt;name&lt;/em&gt; and returns this simulation. If &lt;em&gt;force&lt;/em&gt; is not specified, returns the force with the specified name, or undefined if there is no such force. (By default, new simulations have no forces.) For example, to create a new simulation to layout a graph, you might say:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ff12eda5b63ba3bce972e7f7c99d945399ffa4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;format&lt;/em&gt; is specified, sets the tick format function and returns the axis. If &lt;em&gt;format&lt;/em&gt; is not specified, returns the current format function, which defaults to null. A null format indicates that the scale&amp;rsquo;s default formatter should be used, which is generated by calling &lt;a href=&quot;d3-scale#continuous_tickFormat&quot;&gt;&lt;em&gt;scale&lt;/em&gt;.tickFormat&lt;/a&gt;. In this case, the arguments specified by &lt;a href=&quot;#axis_tickArguments&quot;&gt;&lt;em&gt;axis&lt;/em&gt;.tickArguments&lt;/a&gt; are likewise passed to &lt;em&gt;scale&lt;/em&gt;.tickFormat.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b171b9a229664e9b8324b520d788f1f608a65554" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;h&lt;/em&gt;, &lt;em&gt;c&lt;/em&gt; and &lt;em&gt;g&lt;/em&gt; are specified, these represent the channel values of the returned color; an &lt;em&gt;opacity&lt;/em&gt; may also be specified. If a CSS Color Module Level 3 &lt;em&gt;specifier&lt;/em&gt; string is specified, it is parsed and then converted to the HCG color space. See &lt;a href=&quot;d3-color#color&quot;&gt;d3.color&lt;/a&gt; for examples. If a &lt;a href=&quot;d3-color#color&quot;&gt;&lt;em&gt;color&lt;/em&gt;&lt;/a&gt; instance is specified, it is converted to the RGB color space using &lt;a href=&quot;d3-color#color_rgb&quot;&gt;&lt;em&gt;color&lt;/em&gt;.rgb&lt;/a&gt; and then converted to HCG.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e375ec0b7332dc9200d3284c9094dfb6de1a85" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;h&lt;/em&gt;, &lt;em&gt;c&lt;/em&gt; and &lt;em&gt;l&lt;/em&gt; are specified, these represent the channel values of the returned color; an &lt;em&gt;opacity&lt;/em&gt; may also be specified. If a CSS Color Module Level 3 &lt;em&gt;specifier&lt;/em&gt; string is specified, it is parsed and then converted to the HCL color space. See &lt;a href=&quot;#color&quot;&gt;color&lt;/a&gt; for examples. If a &lt;a href=&quot;#color&quot;&gt;&lt;em&gt;color&lt;/em&gt;&lt;/a&gt; instance is specified, it is converted to the RGB color space using &lt;a href=&quot;#color_rgb&quot;&gt;&lt;em&gt;color&lt;/em&gt;.rgb&lt;/a&gt; and then converted to HCL. (Colors already in the HCL color space skip the conversion to RGB, and colors in the Lab color space are converted directly to HCL.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f59333cbd3a12345bf141599685447cb80181d4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;h&lt;/em&gt;, &lt;em&gt;s&lt;/em&gt; and &lt;em&gt;l&lt;/em&gt; are specified, these represent the channel values of the returned color; an &lt;em&gt;opacity&lt;/em&gt; may also be specified. If a CSS Color Module Level 3 &lt;em&gt;specifier&lt;/em&gt; string is specified, it is parsed and then converted to the Cubehelix color space. See &lt;a href=&quot;#color&quot;&gt;color&lt;/a&gt; for examples. If a &lt;a href=&quot;#color&quot;&gt;&lt;em&gt;color&lt;/em&gt;&lt;/a&gt; instance is specified, it is converted to the RGB color space using &lt;a href=&quot;#color_rgb&quot;&gt;&lt;em&gt;color&lt;/em&gt;.rgb&lt;/a&gt; and then converted to Cubehelix. (Colors already in the Cubehelix color space skip the conversion to RGB.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ac2d4f1c3739d13f103b182c197d67763338c1" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;h&lt;/em&gt;, &lt;em&gt;s&lt;/em&gt; and &lt;em&gt;l&lt;/em&gt; are specified, these represent the channel values of the returned color; an &lt;em&gt;opacity&lt;/em&gt; may also be specified. If a CSS Color Module Level 3 &lt;em&gt;specifier&lt;/em&gt; string is specified, it is parsed and then converted to the HSL color space. See &lt;a href=&quot;#color&quot;&gt;color&lt;/a&gt; for examples. If a &lt;a href=&quot;#color&quot;&gt;&lt;em&gt;color&lt;/em&gt;&lt;/a&gt; instance is specified, it is converted to the RGB color space using &lt;a href=&quot;#color_rgb&quot;&gt;&lt;em&gt;color&lt;/em&gt;.rgb&lt;/a&gt; and then converted to HSL. (Colors already in the HSL color space skip the conversion to RGB.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46039a62e9dbb8f7940fa28c50134d25ef96f077" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;h&lt;/em&gt;, &lt;em&gt;s&lt;/em&gt; and &lt;em&gt;v&lt;/em&gt; are specified, these represent the channel values of the returned color; an &lt;em&gt;opacity&lt;/em&gt; may also be specified. If a CSS Color Module Level 3 &lt;em&gt;specifier&lt;/em&gt; string is specified, it is parsed and then converted to the HSV color space. See &lt;a href=&quot;d3-color#color&quot;&gt;d3.color&lt;/a&gt; for examples. If a &lt;a href=&quot;d3-color#color&quot;&gt;&lt;em&gt;color&lt;/em&gt;&lt;/a&gt; instance is specified, it is converted to the RGB color space using &lt;a href=&quot;d3-color#color_rgb&quot;&gt;&lt;em&gt;color&lt;/em&gt;.rgb&lt;/a&gt; and then converted to HSV.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01a2a1f2b816b8abadc787bb192df1d284d2cc34" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;id&lt;/em&gt; is specified, sets the id accessor to the given function and returns this stratify operator. Otherwise, returns the current id accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44aa22b2abd3ae7d735b2fdbaf7b8a15b3fda75f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;id&lt;/em&gt; is specified, sets the node id accessor to the specified function and returns this force. If &lt;em&gt;id&lt;/em&gt; is not specified, returns the current node id accessor, which defaults to the numeric &lt;em&gt;node&lt;/em&gt;.index:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca02000ab329ae3bf6ec763c313987edeaa8b96e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;interpolate&lt;/em&gt; is specified, sets the interpolation factory for zoom transitions to the specified function. If &lt;em&gt;interpolate&lt;/em&gt; is not specified, returns the current interpolation factory, which defaults to &lt;a href=&quot;d3-interpolate#interpolateZoom&quot;&gt;d3.interpolateZoom&lt;/a&gt; to implement smooth zooming. To apply direct interpolation between two views, try &lt;a href=&quot;d3-interpolate#interpolate&quot;&gt;d3.interpolate&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95deab7140c8286c274515c2a66548d2809cab97" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;interpolate&lt;/em&gt; is specified, sets the scale&amp;rsquo;s &lt;a href=&quot;#continuous_range&quot;&gt;range&lt;/a&gt; interpolator factory. This interpolator factory is used to create interpolators for each adjacent pair of values from the range; these interpolators then map a normalized domain parameter &lt;em&gt;t&lt;/em&gt; in [0, 1] to the corresponding value in the range. If &lt;em&gt;factory&lt;/em&gt; is not specified, returns the scale&amp;rsquo;s current interpolator factory, which defaults to &lt;a href=&quot;d3-interpolate#interpolate&quot;&gt;interpolate&lt;/a&gt;. See &lt;a href=&quot;d3-interpolate&quot;&gt;d3-interpolate&lt;/a&gt; for more interpolators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4b468cda4684e76d2a6e9090b05c2870cbaf095" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;interpolator&lt;/em&gt; is specified, sets the scale&amp;rsquo;s interpolator to the specified function. If &lt;em&gt;interpolator&lt;/em&gt; is not specified, returns the scale&amp;rsquo;s current interpolator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e53a0229c83dc08a261624ea8a5fdf6f3241434a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;iterations&lt;/em&gt; is specified, sets the number of iterations per application to the specified number and returns this force. If &lt;em&gt;iterations&lt;/em&gt; is not specified, returns the current iteration count which defaults to 1. Increasing the number of iterations greatly increases the rigidity of the constraint and avoids partial overlap of nodes, but also increases the runtime cost to evaluate the force.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08d15762dd55614d121e6c3ac2a5af8a71f29cdb" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;iterations&lt;/em&gt; is specified, sets the number of iterations per application to the specified number and returns this force. If &lt;em&gt;iterations&lt;/em&gt; is not specified, returns the current iteration count which defaults to 1. Increasing the number of iterations greatly increases the rigidity of the constraint and is useful for &lt;a href=&quot;http://bl.ocks.org/mbostock/1b64ec067fcfc51e7471d944f51f1611&quot;&gt;complex structures such as lattices&lt;/a&gt;, but also increases the runtime cost to evaluate the force.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c1861a5bd90915d92018f063c9e3ca16e7ec40" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;keys&lt;/em&gt; is specified, sets the keys accessor to the specified function or array and returns this stack generator. If &lt;em&gt;keys&lt;/em&gt; is not specified, returns the current keys accessor, which defaults to the empty array. A series (layer) is &lt;a href=&quot;#_stack&quot;&gt;generated&lt;/a&gt; for each key. Keys are typically strings, but they may be arbitrary values. The series&amp;rsquo; key is passed to the &lt;a href=&quot;#stack_value&quot;&gt;value accessor&lt;/a&gt;, along with each data point, to compute the point&amp;rsquo;s value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1026b26570865f8fe417dfbc8a92099e5919de80" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;l&lt;/em&gt;, &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; are specified, these represent the channel values of the returned color; an &lt;em&gt;opacity&lt;/em&gt; may also be specified. If a CSS Color Module Level 3 &lt;em&gt;specifier&lt;/em&gt; string is specified, it is parsed and then converted to the Lab color space. See &lt;a href=&quot;#color&quot;&gt;color&lt;/a&gt; for examples. If a &lt;a href=&quot;#color&quot;&gt;&lt;em&gt;color&lt;/em&gt;&lt;/a&gt; instance is specified, it is converted to the RGB color space using &lt;a href=&quot;#color_rgb&quot;&gt;&lt;em&gt;color&lt;/em&gt;.rgb&lt;/a&gt; and then converted to Lab. (Colors already in the Lab color space skip the conversion to RGB, and colors in the HCL color space are converted directly to Lab.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e0d88201cceea78d10d52c4b4c3a4df38a988ae" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;links&lt;/em&gt; is specified, sets the array of links associated with this force, recomputes the &lt;a href=&quot;#link_distance&quot;&gt;distance&lt;/a&gt; and &lt;a href=&quot;#link_strength&quot;&gt;strength&lt;/a&gt; parameters for each link, and returns this force. If &lt;em&gt;links&lt;/em&gt; is not specified, returns the current array of links, which defaults to the empty array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c132182a411ca395192cdd0c2d69f9f1e5a6a222" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;listener&lt;/em&gt; is specified, sets the event &lt;em&gt;listener&lt;/em&gt; for the specified &lt;em&gt;type&lt;/em&gt; and returns this request instance. If an event listener was already registered for the same type, the existing listener is removed before the new listener is added. If &lt;em&gt;listener&lt;/em&gt; is null, removes the current event &lt;em&gt;listener&lt;/em&gt; for the specified &lt;em&gt;type&lt;/em&gt; (if any) instead. If &lt;em&gt;listener&lt;/em&gt; is not specified, returns the currently-assigned listener for the specified type, if any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38cd61bd250b21de7059c5e9e2cdc2c2a5b6a62a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;listener&lt;/em&gt; is specified, sets the event &lt;em&gt;listener&lt;/em&gt; for the specified &lt;em&gt;typenames&lt;/em&gt; and returns the brush. If an event listener was already registered for the same type and name, the existing listener is removed before the new listener is added. If &lt;em&gt;listener&lt;/em&gt; is null, removes the current event listeners for the specified &lt;em&gt;typenames&lt;/em&gt;, if any. If &lt;em&gt;listener&lt;/em&gt; is not specified, returns the first currently-assigned listener matching the specified &lt;em&gt;typenames&lt;/em&gt;, if any. When a specified event is dispatched, each &lt;em&gt;listener&lt;/em&gt; will be invoked with the same context and arguments as &lt;a href=&quot;d3-selection#selection_on&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.on&lt;/a&gt; listeners: the current datum &lt;code&gt;d&lt;/code&gt; and index &lt;code&gt;i&lt;/code&gt;, with the &lt;code&gt;this&lt;/code&gt; context as the current DOM element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e640b2e244beb11c3fcea85390f615743b59ec59" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;listener&lt;/em&gt; is specified, sets the event &lt;em&gt;listener&lt;/em&gt; for the specified &lt;em&gt;typenames&lt;/em&gt; and returns the drag behavior. If an event listener was already registered for the same type and name, the existing listener is removed before the new listener is added. If &lt;em&gt;listener&lt;/em&gt; is null, removes the current event listeners for the specified &lt;em&gt;typenames&lt;/em&gt;, if any. If &lt;em&gt;listener&lt;/em&gt; is not specified, returns the first currently-assigned listener matching the specified &lt;em&gt;typenames&lt;/em&gt;, if any. When a specified event is dispatched, each &lt;em&gt;listener&lt;/em&gt; will be invoked with the same context and arguments as &lt;a href=&quot;d3-selection#selection_on&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.on&lt;/a&gt; listeners: the current datum &lt;code&gt;d&lt;/code&gt; and index &lt;code&gt;i&lt;/code&gt;, with the &lt;code&gt;this&lt;/code&gt; context as the current DOM element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d02c447111fed092bf8c9ad38f3ac08a6808379" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;listener&lt;/em&gt; is specified, sets the event &lt;em&gt;listener&lt;/em&gt; for the specified &lt;em&gt;typenames&lt;/em&gt; and returns the zoom behavior. If an event listener was already registered for the same type and name, the existing listener is removed before the new listener is added. If &lt;em&gt;listener&lt;/em&gt; is null, removes the current event listeners for the specified &lt;em&gt;typenames&lt;/em&gt;, if any. If &lt;em&gt;listener&lt;/em&gt; is not specified, returns the first currently-assigned listener matching the specified &lt;em&gt;typenames&lt;/em&gt;, if any. When a specified event is dispatched, each &lt;em&gt;listener&lt;/em&gt; will be invoked with the same context and arguments as &lt;a href=&quot;d3-selection#selection_on&quot;&gt;&lt;em&gt;selection&lt;/em&gt;.on&lt;/a&gt; listeners: the current datum &lt;code&gt;d&lt;/code&gt; and index &lt;code&gt;i&lt;/code&gt;, with the &lt;code&gt;this&lt;/code&gt; context as the current DOM element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5436c3ed5dc2c3d413456eca8461773c2854988b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;listener&lt;/em&gt; is specified, sets the event &lt;em&gt;listener&lt;/em&gt; for the specified &lt;em&gt;typenames&lt;/em&gt; and returns this simulation. If an event listener was already registered for the same type and name, the existing listener is removed before the new listener is added. If &lt;em&gt;listener&lt;/em&gt; is null, removes the current event listeners for the specified &lt;em&gt;typenames&lt;/em&gt;, if any. If &lt;em&gt;listener&lt;/em&gt; is not specified, returns the first currently-assigned listener matching the specified &lt;em&gt;typenames&lt;/em&gt;, if any. When a specified event is dispatched, each &lt;em&gt;listener&lt;/em&gt; will be invoked with the &lt;code&gt;this&lt;/code&gt; context as the simulation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="337e939a1b7a4ac186ce63e325c17f5164a8eeb9" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;lobes&lt;/em&gt; is specified, sets the new array of hemilobes and returns this projection; see &lt;a href=&quot;#geoInterrupt&quot;&gt;d3.geoInterrupt&lt;/a&gt; for details on the format of the hemilobes array. If &lt;em&gt;lobes&lt;/em&gt; is not specified, returns the current array of hemilobes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8502d51b8bb5d0c4ac0cc4d275bf555212ad88a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;lobes&lt;/em&gt; is specified, sets the number of lobes (the parameter &lt;em&gt;H&lt;/em&gt; in the literature) and returns this projection. If &lt;em&gt;lobes&lt;/em&gt; is not specified, returns the current lobe number, which defaults to 4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7104f4f7d15f791605e15762449d9989e08d9d10" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;lobes&lt;/em&gt; is specified, sets the number of lobes in the resulting star, and returns this projection. If &lt;em&gt;lobes&lt;/em&gt; is not specified, returns the current lobe number, which defaults to 5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1c48aa062403c625e6455e653ca7ebabd4f2719" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;min&lt;/em&gt; is specified, sets the minimum &lt;em&gt;alpha&lt;/em&gt; to the specified number in the range [0,1] and returns this simulation. If &lt;em&gt;min&lt;/em&gt; is not specified, returns the current minimum &lt;em&gt;alpha&lt;/em&gt; value, which defaults to 0.001. The simulation&amp;rsquo;s internal timer stops when the current &lt;a href=&quot;#simulation_alpha&quot;&gt;&lt;em&gt;alpha&lt;/em&gt;&lt;/a&gt; is less than the minimum &lt;em&gt;alpha&lt;/em&gt;. The default &lt;a href=&quot;#simulation_alphaDecay&quot;&gt;alpha decay rate&lt;/a&gt; of ~0.0228 corresponds to 300 iterations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f6a6a76d5dac397f3cf25d69180a39e1eff94b8" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;nodes&lt;/em&gt; is specified, sets the simulation&amp;rsquo;s nodes to the specified array of objects, initializing their positions and velocities if necessary, and then &lt;a href=&quot;#force_initialize&quot;&gt;re-initializes&lt;/a&gt; any bound &lt;a href=&quot;#simulation_force&quot;&gt;forces&lt;/a&gt;; returns the simulation. If &lt;em&gt;nodes&lt;/em&gt; is not specified, returns the simulation&amp;rsquo;s array of nodes as specified to the &lt;a href=&quot;#forceSimulation&quot;&gt;constructor&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ef2bac57054c6cf8140c691c689d7f08a8fe39e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;offset&lt;/em&gt; is a function, it is passed the generated series array and the order index array. The offset function is then responsible for updating the lower and upper values in the series array to layout the stack. For example, the default offset is defined as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d6107b4315c5ccd88531baab813621c70394788" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;offset&lt;/em&gt; is specified, sets the offset accessor to the specified function or array and returns this stack generator. If &lt;em&gt;offset&lt;/em&gt; is not specified, returns the current offset acccesor, which defaults to &lt;a href=&quot;#stackOffsetNone&quot;&gt;stackOffsetNone&lt;/a&gt;; this uses a zero baseline. See &lt;a href=&quot;#stack-offsets&quot;&gt;stack offsets&lt;/a&gt; for the built-in offsets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="266d9dfbd5a83871c39fc6859733da9e682cecae" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;order&lt;/em&gt; is a function, it is passed the generated series array and must return an array of numeric indexes representing the stack order. For example, the default order is defined as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b9e313224c1d53e5e4e2c6db23430677853366" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;order&lt;/em&gt; is specified, sets the order accessor to the specified function or array and returns this stack generator. If &lt;em&gt;order&lt;/em&gt; is not specified, returns the current order acccesor, which defaults to &lt;a href=&quot;#stackOrderNone&quot;&gt;stackOrderNone&lt;/a&gt;; this uses the order given by the &lt;a href=&quot;#stack_key&quot;&gt;key accessor&lt;/a&gt;. See &lt;a href=&quot;#stack-orders&quot;&gt;stack orders&lt;/a&gt; for the built-in orders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83b347c7bed4df2a8a64eeebcc1fd2b9ef664033" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;padding&lt;/em&gt; is specified, sets the &lt;a href=&quot;#treemap_paddingInner&quot;&gt;inner&lt;/a&gt; and &lt;a href=&quot;#treemap_paddingOuter&quot;&gt;outer&lt;/a&gt; padding to the specified number or function and returns this treemap layout. If &lt;em&gt;padding&lt;/em&gt; is not specified, returns the current inner padding function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7806fb366772673345831e91aa851430dfab3458" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;padding&lt;/em&gt; is specified, sets the &lt;a href=&quot;#treemap_paddingTop&quot;&gt;top&lt;/a&gt;, &lt;a href=&quot;#treemap_paddingRight&quot;&gt;right&lt;/a&gt;, &lt;a href=&quot;#treemap_paddingBottom&quot;&gt;bottom&lt;/a&gt; and &lt;a href=&quot;#treemap_paddingLeft&quot;&gt;left&lt;/a&gt; padding to the specified number or function and returns this treemap layout. If &lt;em&gt;padding&lt;/em&gt; is not specified, returns the current top padding function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46d4e8a0e6bada8a2376d5437abe60805a0fe198" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;padding&lt;/em&gt; is specified, sets the bottom padding to the specified number or function and returns this treemap layout. If &lt;em&gt;padding&lt;/em&gt; is not specified, returns the current bottom padding function, which defaults to the constant zero. If &lt;em&gt;padding&lt;/em&gt; is a function, it is invoked for each node with children, being passed the current node. The bottom padding is used to separate the bottom edge of a node from its children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a52e2ccb482995d30594209970daa237dcba44b3" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;padding&lt;/em&gt; is specified, sets the inner padding to the specified number or function and returns this treemap layout. If &lt;em&gt;padding&lt;/em&gt; is not specified, returns the current inner padding function, which defaults to the constant zero. If &lt;em&gt;padding&lt;/em&gt; is a function, it is invoked for each node with children, being passed the current node. The inner padding is used to separate a node&amp;rsquo;s adjacent children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="597cd821b938aefb205ad5b2cce78162e1cead6a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;padding&lt;/em&gt; is specified, sets the inner padding to the specified value which must be in the range [0, 1]. If &lt;em&gt;padding&lt;/em&gt; is not specified, returns the current inner padding which defaults to 0. The inner padding determines the ratio of the range that is reserved for blank space between bands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="205f895ce54e48829ecd6819b7756ad883a637ad" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;padding&lt;/em&gt; is specified, sets the left padding to the specified number or function and returns this treemap layout. If &lt;em&gt;padding&lt;/em&gt; is not specified, returns the current left padding function, which defaults to the constant zero. If &lt;em&gt;padding&lt;/em&gt; is a function, it is invoked for each node with children, being passed the current node. The left padding is used to separate the left edge of a node from its children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9309b8eaeab077de643634948ad7b3a0b5fa9569" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;padding&lt;/em&gt; is specified, sets the outer padding to the specified value which must be in the range [0, 1]. If &lt;em&gt;padding&lt;/em&gt; is not specified, returns the current outer padding which defaults to 0. The outer padding determines the ratio of the range that is reserved for blank space before the first band and after the last band.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="732d6e92f90acc5d36b9c5b82fec9646fc7892be" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;padding&lt;/em&gt; is specified, sets the outer padding to the specified value which must be in the range [0, 1]. If &lt;em&gt;padding&lt;/em&gt; is not specified, returns the current outer padding which defaults to 0. The outer padding determines the ratio of the range that is reserved for blank space before the first point and after the last point. Equivalent to &lt;a href=&quot;#band_paddingOuter&quot;&gt;&lt;em&gt;band&lt;/em&gt;.paddingOuter&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69652bac4732919738ce7fbacbbfc660dcf584c6" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;padding&lt;/em&gt; is specified, sets the padding to the specified number and returns this partition layout. If &lt;em&gt;padding&lt;/em&gt; is not specified, returns the current padding, which defaults to zero. The padding is used to separate a node&amp;rsquo;s adjacent children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac7e192ae4e0175c07648905df46938a87f6fd29" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;padding&lt;/em&gt; is specified, sets the padding to the specified value in pixels and returns the axis. If &lt;em&gt;padding&lt;/em&gt; is not specified, returns the current padding which defaults to 3 pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7885a3ebc33510b805818d7ea30115b61ba6a63e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;padding&lt;/em&gt; is specified, sets the right padding to the specified number or function and returns this treemap layout. If &lt;em&gt;padding&lt;/em&gt; is not specified, returns the current right padding function, which defaults to the constant zero. If &lt;em&gt;padding&lt;/em&gt; is a function, it is invoked for each node with children, being passed the current node. The right padding is used to separate the right edge of a node from its children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b5f3cf600db1152653a15e0a5ce6b74556725bb" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;padding&lt;/em&gt; is specified, sets the top padding to the specified number or function and returns this treemap layout. If &lt;em&gt;padding&lt;/em&gt; is not specified, returns the current top padding function, which defaults to the constant zero. If &lt;em&gt;padding&lt;/em&gt; is a function, it is invoked for each node with children, being passed the current node. The top padding is used to separate the top edge of a node from its children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdbb5d05568270b9b5d1937a5c4a63f5e8b33a56" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;padding&lt;/em&gt; is specified, sets this pack layout&amp;rsquo;s padding accessor to the specified number or function and returns this pack layout. If &lt;em&gt;padding&lt;/em&gt; is not specified, returns the current padding accessor, which defaults to the constant zero. When siblings are packed, tangent siblings will be separated by approximately the specified padding; the enclosing parent circle will also be separated from its children by approximately the specified padding. If an &lt;a href=&quot;#pack_radius&quot;&gt;explicit radius&lt;/a&gt; is not specified, the padding is approximate because a two-pass algorithm is needed to fit within the &lt;a href=&quot;#pack_size&quot;&gt;layout size&lt;/a&gt;: the circles are first packed without padding; a scaling factor is computed and applied to the specified padding; and lastly the circles are re-packed with padding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48789f5c3175b40016e94237cc2a6d4b925dce94" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;parameters&lt;/em&gt; is a function, it is evaluated for each selected element, in order, being passed the current datum (&lt;em&gt;d&lt;/em&gt;), the current index (&lt;em&gt;i&lt;/em&gt;), and the current group (&lt;em&gt;nodes&lt;/em&gt;), with &lt;em&gt;this&lt;/em&gt; as the current DOM element (&lt;em&gt;nodes&lt;/em&gt;[&lt;em&gt;i&lt;/em&gt;]). It must return the parameters map for the current element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dafc0ac6eb42ed8a26c2a4a1070cb8449e1cfc0b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;parentId&lt;/em&gt; is specified, sets the parent id accessor to the given function and returns this stratify operator. Otherwise, returns the current parent id accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d47a6e878372304bbe28e626ceb0831acc9db3d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;postclip&lt;/em&gt; is specified, sets the projection&amp;rsquo;s cartesian clipping to the specified function and returns the projection. If &lt;em&gt;postclip&lt;/em&gt; is not specified, returns the current cartesian clipping function (see &lt;a href=&quot;#postclip&quot;&gt;postclip&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad459cc5bd203c5f12882bdcbd15194c485a079" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;precision&lt;/em&gt; is specified, sets the circle precision to the specified angle in degrees, and returns this circle generator. The precision may also be specified as a function; this function will be invoked whenever a circle is &lt;a href=&quot;#_circle&quot;&gt;generated&lt;/a&gt;, being passed any arguments passed to the circle generator. If &lt;em&gt;precision&lt;/em&gt; is not specified, returns the current precision accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45322dcbcb6c2f64efab49e4de2eea6047de5081" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;precision&lt;/em&gt; is specified, sets the precision for this graticule, in degrees. If &lt;em&gt;precision&lt;/em&gt; is not specified, returns the current precision, which defaults to 2.5&amp;deg;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d943d9907235d32e5628c2fe7b209dea71c2f73f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;precision&lt;/em&gt; is specified, sets the threshold for the projection&amp;rsquo;s &lt;a href=&quot;https://bl.ocks.org/mbostock/3795544&quot;&gt;adaptive resampling&lt;/a&gt; to the specified value in pixels and returns the projection. This value corresponds to the &lt;a href=&quot;http://en.wikipedia.org/wiki/Ramer%E2%80%93Douglas%E2%80%93Peucker_algorithm&quot;&gt;Douglas&amp;ndash;Peucker&lt;/a&gt; distance. If &lt;em&gt;precision&lt;/em&gt; is not specified, returns the projection&amp;rsquo;s current resampling precision which defaults to &amp;radic;0.5 &amp;cong; 0.70710&amp;hellip;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b408f6f1be55c6898045caacd14910a262d4ed" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;preclip&lt;/em&gt; is specified, sets the projection&amp;rsquo;s spherical clipping to the specified function and returns the projection. If &lt;em&gt;preclip&lt;/em&gt; is not specified, returns the current spherical clipping function (see &lt;a href=&quot;#preclip&quot;&gt;preclip&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ffe68ee489807647a3e6354f3c62c03d6a97abf" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;r&lt;/em&gt;, &lt;em&gt;g&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; are specified, these represent the channel values of the returned color; an &lt;em&gt;opacity&lt;/em&gt; may also be specified. If a CSS Color Module Level 3 &lt;em&gt;specifier&lt;/em&gt; string is specified, it is parsed and then converted to the RGB color space. See &lt;a href=&quot;#color&quot;&gt;color&lt;/a&gt; for examples. If a &lt;a href=&quot;#color&quot;&gt;&lt;em&gt;color&lt;/em&gt;&lt;/a&gt; instance is specified, it is converted to the RGB color space using &lt;a href=&quot;#color_rgb&quot;&gt;&lt;em&gt;color&lt;/em&gt;.rgb&lt;/a&gt;. Note that unlike &lt;a href=&quot;#color_rgb&quot;&gt;&lt;em&gt;color&lt;/em&gt;.rgb&lt;/a&gt; this method &lt;em&gt;always&lt;/em&gt; returns a new instance, even if &lt;em&gt;color&lt;/em&gt; is already an RGB color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03f8c5e75580a4d494a6c97a00e9c2e472e0c5f3" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;radius&lt;/em&gt; is specified, sets the circle &lt;em&gt;radius&lt;/em&gt; to the specified number or function, re-evaluates the &lt;em&gt;radius&lt;/em&gt; accessor for each node, and returns this force. If &lt;em&gt;radius&lt;/em&gt; is not specified, returns the current &lt;em&gt;radius&lt;/em&gt; accessor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea7f1b4f26d7d32c349f3a8dc3250fa033200ac" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;radius&lt;/em&gt; is specified, sets the circle radius to the specified angle in degrees, and returns this circle generator. The radius may also be specified as a function; this function will be invoked whenever a circle is &lt;a href=&quot;#_circle&quot;&gt;generated&lt;/a&gt;, being passed any arguments passed to the circle generator. If &lt;em&gt;radius&lt;/em&gt; is not specified, returns the current radius accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed0bd9b523c4c99516c6043c3bbf4ca025322b7" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;radius&lt;/em&gt; is specified, sets the corner radius to the specified function or number and returns this arc generator. If &lt;em&gt;radius&lt;/em&gt; is not specified, returns the current corner radius accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2dc8d2f2e9d35278203ff413b83f28eab3e9789" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;radius&lt;/em&gt; is specified, sets the inner radius to the specified function or number and returns this arc generator. If &lt;em&gt;radius&lt;/em&gt; is not specified, returns the current inner radius accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c08467288d750395ac0226df1e5ecd783a91dd" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;radius&lt;/em&gt; is specified, sets the outer radius to the specified function or number and returns this arc generator. If &lt;em&gt;radius&lt;/em&gt; is not specified, returns the current outer radius accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ce5cbbdc048d2a029ff3902823a6ced3daafd92" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;radius&lt;/em&gt; is specified, sets the pack layout&amp;rsquo;s radius accessor to the specified function and returns this pack layout. If &lt;em&gt;radius&lt;/em&gt; is not specified, returns the current radius accessor, which defaults to null. If the radius accessor is null, the radius of each leaf circle is derived from the leaf &lt;em&gt;node&lt;/em&gt;.value (computed by &lt;a href=&quot;#node_sum&quot;&gt;&lt;em&gt;node&lt;/em&gt;.sum&lt;/a&gt;); the radii are then scaled proportionally to fit the &lt;a href=&quot;#pack_size&quot;&gt;layout size&lt;/a&gt;. If the radius accessor is not null, the radius of each leaf circle is specified exactly by the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68ad6d6d872c6ed7e1d653b3f2011b476d2a7321" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;radius&lt;/em&gt; is specified, sets the pad radius to the specified function or number and returns this arc generator. If &lt;em&gt;radius&lt;/em&gt; is not specified, returns the current pad radius accessor, which defaults to null, indicating that the pad radius should be automatically computed as sqrt(&lt;a href=&quot;#arc_innerRadius&quot;&gt;innerRadius&lt;/a&gt; * innerRadius + &lt;a href=&quot;#arc_outerRadius&quot;&gt;outerRadius&lt;/a&gt; * outerRadius). The pad radius determines the fixed linear distance separating adjacent arcs, defined as padRadius * &lt;a href=&quot;#arc_padAngle&quot;&gt;padAngle&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4fffbea5e12e7207b7e82be830ff159d6e92d55" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;radius&lt;/em&gt; is specified, sets the radius accessor to the specified function and returns this ribbon generator. If &lt;em&gt;radius&lt;/em&gt; is not specified, returns the current radius accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4b3ad644efca8c0de75fa1d4536c5c5f87e8b7b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;radius&lt;/em&gt; is specified, sets the radius accessor to the specified number or function, re-evaluates the radius accessor for each node, and returns this force. If &lt;em&gt;radius&lt;/em&gt; is not specified, returns the current radius accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45bff61750290bea59de250cfdf46e4919e9dae7" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;radius&lt;/em&gt; is specified, sets the radius used to display Point and MultiPoint geometries to the specified number. If &lt;em&gt;radius&lt;/em&gt; is not specified, returns the current radius accessor, which defaults to 4.5. While the radius is commonly specified as a number constant, it may also be specified as a function which is computed per feature, being passed the any arguments passed to the &lt;a href=&quot;#_path&quot;&gt;path generator&lt;/a&gt;. For example, if your GeoJSON data has additional properties, you might access those properties inside the radius function to vary the point size; alternatively, you could &lt;a href=&quot;d3-shape#symbols&quot;&gt;d3.symbol&lt;/a&gt; and a &lt;a href=&quot;#geoProjection&quot;&gt;projection&lt;/a&gt; for greater flexibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33c445c13e47a22ca979e91b45a6e4643fbc8824" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;range&lt;/em&gt; is specified, sets the discrete values in the range. The array must not be empty, and may contain any type of value. The number of values in (the cardinality, or length, of) the &lt;em&gt;range&lt;/em&gt; array determines the number of quantiles that are computed. For example, to compute quartiles, &lt;em&gt;range&lt;/em&gt; must be an array of four elements such as [0, 1, 2, 3]. If &lt;em&gt;range&lt;/em&gt; is not specified, returns the current range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48beed7aed335261966d912711ebd8ed91da549e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;range&lt;/em&gt; is specified, sets the range of the ordinal scale to the specified array of values. The first element in the domain will be mapped to the first element in &lt;em&gt;range&lt;/em&gt;, the second domain value to the second range value, and so on. If there are fewer elements in the range than in the domain, the scale will reuse values from the start of the range. If &lt;em&gt;range&lt;/em&gt; is not specified, this method returns the current range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b8270c4554320550bf105e156501042b2254d8e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;range&lt;/em&gt; is specified, sets the scale&amp;rsquo;s range to the specified array of values. If the number of values in the scale&amp;rsquo;s domain is N, the number of values in the scale&amp;rsquo;s range must be N+1. If there are fewer than N+1 elements in the range, the scale may return undefined for some inputs. If there are more than N+1 elements in the range, the additional values are ignored. The elements in the given array need not be numbers; any value or type will work. If &lt;em&gt;range&lt;/em&gt; is not specified, returns the scale&amp;rsquo;s current range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20d0487f8a34402e53db9abe7d38484822b39394" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;range&lt;/em&gt; is specified, sets the scale&amp;rsquo;s range to the specified array of values. The array may contain any number of discrete values. The elements in the given array need not be numbers; any value or type will work. If &lt;em&gt;range&lt;/em&gt; is not specified, returns the scale&amp;rsquo;s current range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="755fce627214c60f8d4576b27efdc61ad89f4f23" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;range&lt;/em&gt; is specified, sets the scale&amp;rsquo;s range to the specified array of values. The array must contain two or more elements. Unlike the &lt;a href=&quot;#continuous_domain&quot;&gt;domain&lt;/a&gt;, elements in the given array need not be numbers; any value that is supported by the underlying &lt;a href=&quot;#continuous_interpolate&quot;&gt;interpolator&lt;/a&gt; will work, though note that numeric ranges are required for &lt;a href=&quot;#continuous_invert&quot;&gt;invert&lt;/a&gt;. If &lt;em&gt;range&lt;/em&gt; is not specified, returns a copy of the scale&amp;rsquo;s current range. See &lt;a href=&quot;#continuous_interpolate&quot;&gt;&lt;em&gt;continuous&lt;/em&gt;.interpolate&lt;/a&gt; for more examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c71ad1b718957f009e82283365684a5561c700c7" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;range&lt;/em&gt; is specified, sets the scale&amp;rsquo;s range to the specified two-element array of numbers. If the elements in the given array are not numbers, they will be coerced to numbers. If &lt;em&gt;range&lt;/em&gt; is not specified, returns the scale&amp;rsquo;s current range, which defaults to [0, 1].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="817d7e2a2177f784ebdc66c0679051e0bb9fef82" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;reflect&lt;/em&gt; is specified, sets whether or not the &lt;em&gt;x&lt;/em&gt;-dimension is reflected (negated) in the output. If &lt;em&gt;reflect&lt;/em&gt; is not specified, returns true if &lt;em&gt;x&lt;/em&gt;-reflection is enabled, which defaults to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61060cdc60e41b44b39e128e14540813ba0cb562" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;reflect&lt;/em&gt; is specified, sets whether or not the &lt;em&gt;y&lt;/em&gt;-dimension is reflected (negated) in the output. If &lt;em&gt;reflect&lt;/em&gt; is not specified, returns true if &lt;em&gt;y&lt;/em&gt;-reflection is enabled, which defaults to false. This is especially useful for transforming from standard &lt;a href=&quot;https://en.wikipedia.org/wiki/Spatial_reference_system&quot;&gt;spatial reference systems&lt;/a&gt;, which treat positive &lt;em&gt;y&lt;/em&gt; as pointing up, to display coordinate systems such as Canvas and SVG, which treat positive &lt;em&gt;y&lt;/em&gt; as pointing down.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14063eacb846a7659acefa5c0812163b1a9c71c9" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;rotation&lt;/em&gt; is specified, sets the projection&amp;rsquo;s &lt;a href=&quot;https://bl.ocks.org/mbostock/4282586&quot;&gt;three-axis spherical rotation&lt;/a&gt; to the specified &lt;em&gt;angles&lt;/em&gt;, which must be a two- or three-element array of numbers [&lt;em&gt;lambda&lt;/em&gt;, &lt;em&gt;phi&lt;/em&gt;, &lt;em&gt;gamma&lt;/em&gt;] specifying the rotation angles in degrees about &lt;a href=&quot;https://bl.ocks.org/mbostock/4282586&quot;&gt;each spherical axis&lt;/a&gt;. (These correspond to &lt;a href=&quot;http://en.wikipedia.org/wiki/Aircraft_principal_axes&quot;&gt;yaw, pitch and roll&lt;/a&gt;.) If the rotation angle &lt;em&gt;gamma&lt;/em&gt; is omitted, it defaults to 0. See also &lt;a href=&quot;#geoRotation&quot;&gt;d3.geoRotation&lt;/a&gt;. If &lt;em&gt;rotation&lt;/em&gt; is not specified, returns the current rotation which defaults [0, 0, 0].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc240e607f8b403eca863d76e6a982d73d4dab9" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;round&lt;/em&gt; is specified, enables or disables rounding according to the given boolean and returns this partition layout. If &lt;em&gt;round&lt;/em&gt; is not specified, returns the current rounding state, which defaults to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6e702e49ac6c1d8d49a82685d044ed4e78b29f9" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;round&lt;/em&gt; is specified, enables or disables rounding according to the given boolean and returns this treemap layout. If &lt;em&gt;round&lt;/em&gt; is not specified, returns the current rounding state, which defaults to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da3fc699cf7f56264daf424c2b378755814af53d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;round&lt;/em&gt; is specified, enables or disables rounding accordingly. If rounding is enabled, the position of each point will be integers. Rounding is sometimes useful for avoiding antialiasing artifacts, though also consider the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering&quot;&gt;shape-rendering&lt;/a&gt; &amp;ldquo;crispEdges&amp;rdquo; styles. Note that if the width of the domain is not a multiple of the cardinality of the range, there may be leftover unused space, even without padding! Use &lt;a href=&quot;#point_align&quot;&gt;&lt;em&gt;point&lt;/em&gt;.align&lt;/a&gt; to specify how the leftover space is distributed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b2bcac45936b9969816d831777cf46949996caf" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;round&lt;/em&gt; is specified, enables or disables rounding accordingly. If rounding is enabled, the start and stop of each band will be integers. Rounding is sometimes useful for avoiding antialiasing artifacts, though also consider the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering&quot;&gt;shape-rendering&lt;/a&gt; &amp;ldquo;crispEdges&amp;rdquo; styles. Note that if the width of the domain is not a multiple of the cardinality of the range, there may be leftover unused space, even without padding! Use &lt;a href=&quot;#band_align&quot;&gt;&lt;em&gt;band&lt;/em&gt;.align&lt;/a&gt; to specify how the leftover space is distributed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57c1cac9bbed19fe28fda3ecaaf3fefb5576bf68" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;scale&lt;/em&gt; is specified, sets the &lt;a href=&quot;d3-scale&quot;&gt;scale&lt;/a&gt; and returns the axis. If &lt;em&gt;scale&lt;/em&gt; is not specified, returns the current scale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13fa70a20357fba3fd3dd03d790d251d0b2b6d96" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;scale&lt;/em&gt; is specified, sets the projection&amp;rsquo;s scale factor to the specified value and returns the projection. If &lt;em&gt;scale&lt;/em&gt; is not specified, returns the current scale factor; the default scale is projection-specific. The scale factor corresponds linearly to the distance between projected points; however, absolute scale factors are not equivalent across projections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb940e291a6dfa5c66dfd00be0c952a6209d053f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;scale&lt;/em&gt; is specified, sets this tile layout&amp;rsquo;s scale to the specified number &lt;em&gt;scale&lt;/em&gt; and returns this tile layout. If &lt;em&gt;scale&lt;/em&gt; is not specified, returns the current layout scale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcb8d64b047c9b1750201f0354f9cda149d63fba" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;selection&lt;/em&gt; is a selection, &lt;a href=&quot;#transform_scale&quot;&gt;scales&lt;/a&gt; the &lt;a href=&quot;#zoomTransform&quot;&gt;current zoom transform&lt;/a&gt; of the selected elements by &lt;em&gt;k&lt;/em&gt;, such that the new &lt;em&gt;k₁&lt;/em&gt; = &lt;em&gt;k₀k&lt;/em&gt;. If &lt;em&gt;selection&lt;/em&gt; is a transition, defines a &amp;ldquo;zoom&amp;rdquo; tween translating the current transform. This method is a convenience method for &lt;a href=&quot;#zoom_transform&quot;&gt;&lt;em&gt;zoom&lt;/em&gt;.transform&lt;/a&gt;. The &lt;em&gt;k&lt;/em&gt; scale factor may be specified either as numbers or as functions that returns numbers. If a function, it is invoked for each selected element, being passed the current datum &lt;code&gt;d&lt;/code&gt; and index &lt;code&gt;i&lt;/code&gt;, with the &lt;code&gt;this&lt;/code&gt; context as the current DOM element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ab1d3fd6058101048ae54b9f40d087063f538fe" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;selection&lt;/em&gt; is a selection, &lt;a href=&quot;#transform_scale&quot;&gt;scales&lt;/a&gt; the &lt;a href=&quot;#zoomTransform&quot;&gt;current zoom transform&lt;/a&gt; of the selected elements to &lt;em&gt;k&lt;/em&gt;, such that the new &lt;em&gt;k₁&lt;/em&gt; = &lt;em&gt;k&lt;/em&gt;. If &lt;em&gt;selection&lt;/em&gt; is a transition, defines a &amp;ldquo;zoom&amp;rdquo; tween translating the current transform. This method is a convenience method for &lt;a href=&quot;#zoom_transform&quot;&gt;&lt;em&gt;zoom&lt;/em&gt;.transform&lt;/a&gt;. The &lt;em&gt;k&lt;/em&gt; scale factor may be specified either as numbers or as functions that returns numbers. If a function, it is invoked for each selected element, being passed the current datum &lt;code&gt;d&lt;/code&gt; and index &lt;code&gt;i&lt;/code&gt;, with the &lt;code&gt;this&lt;/code&gt; context as the current DOM element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d550f53540d59da1812626614d105d46c4914e28" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;selection&lt;/em&gt; is a selection, &lt;a href=&quot;#transform_translate&quot;&gt;translates&lt;/a&gt; the &lt;a href=&quot;#zoomTransform&quot;&gt;current zoom transform&lt;/a&gt; of the selected elements by &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt;, such that the new &lt;em&gt;t&lt;sub&gt;x1&lt;/sub&gt;&lt;/em&gt; = &lt;em&gt;t&lt;sub&gt;x0&lt;/sub&gt;&lt;/em&gt; + &lt;em&gt;kx&lt;/em&gt; and &lt;em&gt;t&lt;sub&gt;y1&lt;/sub&gt;&lt;/em&gt; = &lt;em&gt;t&lt;sub&gt;y0&lt;/sub&gt;&lt;/em&gt; + &lt;em&gt;ky&lt;/em&gt;. If &lt;em&gt;selection&lt;/em&gt; is a transition, defines a &amp;ldquo;zoom&amp;rdquo; tween translating the current transform. This method is a convenience method for &lt;a href=&quot;#zoom_transform&quot;&gt;&lt;em&gt;zoom&lt;/em&gt;.transform&lt;/a&gt;. The &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; translation amounts may be specified either as numbers or as functions that returns numbers. If a function, it is invoked for each selected element, being passed the current datum &lt;code&gt;d&lt;/code&gt; and index &lt;code&gt;i&lt;/code&gt;, with the &lt;code&gt;this&lt;/code&gt; context as the current DOM element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="803e7d5702eaa9b888ebf722c9d35f42c92d2f3a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;selection&lt;/em&gt; is a selection, &lt;a href=&quot;#transform_translate&quot;&gt;translates&lt;/a&gt; the &lt;a href=&quot;#zoomTransform&quot;&gt;current zoom transform&lt;/a&gt; of the selected elements such that the specified position ⟨&lt;em&gt;x&lt;/em&gt;,&lt;em&gt;y&lt;/em&gt;⟩ appears at the center of the &lt;a href=&quot;#zoom_extent&quot;&gt;viewport extent&lt;/a&gt;. The new &lt;em&gt;t&lt;sub&gt;x&lt;/sub&gt;&lt;/em&gt; = &lt;em&gt;c&lt;sub&gt;x&lt;/sub&gt;&lt;/em&gt; - &lt;em&gt;kx&lt;/em&gt; and &lt;em&gt;t&lt;sub&gt;y&lt;/sub&gt;&lt;/em&gt; = &lt;em&gt;c&lt;sub&gt;y&lt;/sub&gt;&lt;/em&gt; - &lt;em&gt;ky&lt;/em&gt;, where ⟨&lt;em&gt;c&lt;sub&gt;x&lt;/sub&gt;&lt;/em&gt;,&lt;em&gt;c&lt;sub&gt;y&lt;/sub&gt;&lt;/em&gt;⟩ is the center. If &lt;em&gt;selection&lt;/em&gt; is a transition, defines a &amp;ldquo;zoom&amp;rdquo; tween translating the current transform. This method is a convenience method for &lt;a href=&quot;#zoom_transform&quot;&gt;&lt;em&gt;zoom&lt;/em&gt;.transform&lt;/a&gt;. The &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; coordinates may be specified either as numbers or as functions that returns numbers. If a function, it is invoked for each selected element, being passed the current datum &lt;code&gt;d&lt;/code&gt; and index &lt;code&gt;i&lt;/code&gt;, with the &lt;code&gt;this&lt;/code&gt; context as the current DOM element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="989fc9128c8fdd85ea960ea506584a954ceaca82" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;selection&lt;/em&gt; is a selection, sets the &lt;a href=&quot;#zoomTransform&quot;&gt;current zoom transform&lt;/a&gt; of the selected elements to the specified &lt;em&gt;transform&lt;/em&gt;, instantaneously emitting start, zoom and end &lt;a href=&quot;#zoom-events&quot;&gt;events&lt;/a&gt;. If &lt;em&gt;selection&lt;/em&gt; is a transition, defines a &amp;ldquo;zoom&amp;rdquo; tween to the specified &lt;em&gt;transform&lt;/em&gt; using &lt;a href=&quot;d3-interpolate#interpolateZoom&quot;&gt;d3.interpolateZoom&lt;/a&gt;, emitting a start event when the transition starts, zoom events for each tick of the transition, and then an end event when the transition ends (or is interrupted). The &lt;em&gt;transform&lt;/em&gt; may be specified either as a &lt;a href=&quot;#zoom-transforms&quot;&gt;zoom transform&lt;/a&gt; or as a function that returns a zoom transform. If a function, it is invoked for each selected element, being passed the current datum &lt;code&gt;d&lt;/code&gt; and index &lt;code&gt;i&lt;/code&gt;, with the &lt;code&gt;this&lt;/code&gt; context as the current DOM element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f03124d4e6e75433f2defaeefb8dd0a7f9b8b6" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;separation&lt;/em&gt; is specified, sets the separation accessor to the specified function and returns this cluster layout. If &lt;em&gt;separation&lt;/em&gt; is not specified, returns the current separation accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be0efa9f734714f377eaf9de52650178ac80756e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;separation&lt;/em&gt; is specified, sets the separation accessor to the specified function and returns this tree layout. If &lt;em&gt;separation&lt;/em&gt; is not specified, returns the current separation accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="753da595d0c51ce8193ca02d688b401f7f8aebec" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;size&lt;/em&gt; is specified, sets the &lt;a href=&quot;#axis_tickSizeInner&quot;&gt;inner&lt;/a&gt; and &lt;a href=&quot;#axis_tickSizeOuter&quot;&gt;outer&lt;/a&gt; tick size to the specified value and returns the axis. If &lt;em&gt;size&lt;/em&gt; is not specified, returns the current inner tick size, which defaults to 6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e03e1e8672a79648125244662922876a42a5f6e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;size&lt;/em&gt; is specified, sets the expected size of the input &lt;em&gt;values&lt;/em&gt; grid to the &lt;a href=&quot;#_contour&quot;&gt;contour generator&lt;/a&gt; and returns the contour generator. The &lt;em&gt;size&lt;/em&gt; is specified as an array [</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e06a43139e6ec08570191c25466cc903d37160b4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;size&lt;/em&gt; is specified, sets the inner tick size to the specified value and returns the axis. If &lt;em&gt;size&lt;/em&gt; is not specified, returns the current inner tick size, which defaults to 6. The inner tick size controls the length of the tick lines, offset from the native position of the axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5f952dbf21fa5b26a10d7c66aca6b3251010ffd" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;size&lt;/em&gt; is specified, sets the outer tick size to the specified value and returns the axis. If &lt;em&gt;size&lt;/em&gt; is not specified, returns the current outer tick size, which defaults to 6. The outer tick size controls the length of the square ends of the domain path, offset from the native position of the axis. Thus, the &amp;ldquo;outer ticks&amp;rdquo; are not actually ticks but part of the domain path, and their position is determined by the associated scale&amp;rsquo;s domain extent. Thus, outer ticks may overlap with the first or last inner tick. An outer tick size of 0 suppresses the square ends of the domain path, instead producing a straight line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b526b8e14aa2313131b978f670bce09146341bd3" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;size&lt;/em&gt; is specified, sets the size of the brush handles to the specified number and returns the brush. If &lt;em&gt;size&lt;/em&gt; is not specified, returns the current handle size, which defaults to six. This method must be called before &lt;a href=&quot;#_brush&quot;&gt;applying the brush&lt;/a&gt; to a selection; changing the handle size does not affect brushes that were previously rendered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33b1a9cafefddd9849ed39725e4e9b2d1ff379af" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;size&lt;/em&gt; is specified, sets the size of the density estimator to the specified bounds and returns the estimator. The &lt;em&gt;size&lt;/em&gt; is specified as an array [</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eda165ff039376f379d650e245e6e48cd66f6456" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;size&lt;/em&gt; is specified, sets the size to the specified function or number and returns this symbol generator. If &lt;em&gt;size&lt;/em&gt; is not specified, returns the current size accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c62c56048f0642aa5f1859996e3e3d094bf04b1b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;size&lt;/em&gt; is specified, sets this cluster layout&amp;rsquo;s node size to the specified two-element array of numbers [&lt;em&gt;width&lt;/em&gt;, &lt;em&gt;height&lt;/em&gt;] and returns this cluster layout. If &lt;em&gt;size&lt;/em&gt; is not specified, returns the current node size, which defaults to null. A node size of null indicates that a &lt;a href=&quot;#cluster_size&quot;&gt;layout size&lt;/a&gt; will be used instead. When a node size is specified, the root node is always positioned at ⟨0, 0⟩.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daac9fb49607b96131b058b2497990c76f629d9f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;size&lt;/em&gt; is specified, sets this cluster layout&amp;rsquo;s size to the specified two-element array of numbers [&lt;em&gt;width&lt;/em&gt;, &lt;em&gt;height&lt;/em&gt;] and returns this cluster layout. If &lt;em&gt;size&lt;/em&gt; is not specified, returns the current layout size, which defaults to [1, 1]. A layout size of null indicates that a &lt;a href=&quot;#cluster_nodeSize&quot;&gt;node size&lt;/a&gt; will be used instead. The coordinates &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; represent an arbitrary coordinate system; for example, to produce a &lt;a href=&quot;http://bl.ocks.org/mbostock/4739610f6d96aaad2fb1e78a72b385ab&quot;&gt;radial layout&lt;/a&gt;, a size of [360, &lt;em&gt;radius&lt;/em&gt;] corresponds to a breadth of 360&amp;deg; and a depth of &lt;em&gt;radius&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0a7fbeddae8462aa0c5c5ca3cb6ac17382af11b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;size&lt;/em&gt; is specified, sets this pack layout&amp;rsquo;s size to the specified two-element array of numbers [&lt;em&gt;width&lt;/em&gt;, &lt;em&gt;height&lt;/em&gt;] and returns this pack layout. If &lt;em&gt;size&lt;/em&gt; is not specified, returns the current size, which defaults to [1, 1].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7555c8580e88b30306b9610dd8d08579c8276e7d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;size&lt;/em&gt; is specified, sets this partition layout&amp;rsquo;s size to the specified two-element array of numbers [&lt;em&gt;width&lt;/em&gt;, &lt;em&gt;height&lt;/em&gt;] and returns this partition layout. If &lt;em&gt;size&lt;/em&gt; is not specified, returns the current size, which defaults to [1, 1].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72353a88f3f7d27a5271475a7b63a8d8448076b4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;size&lt;/em&gt; is specified, sets this tile layout&amp;rsquo;s size to the specified two-element array of numbers [&lt;em&gt;width&lt;/em&gt;, &lt;em&gt;height&lt;/em&gt;] and returns this tile layout. If &lt;em&gt;size&lt;/em&gt; is not specified, returns the current layout size. This is a convenience method equivalent to setting the &lt;a href=&quot;#tile_extent&quot;&gt;extent&lt;/a&gt; to [[0, 0], [&lt;em&gt;width&lt;/em&gt;, &lt;em&gt;height&lt;/em&gt;]].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9c67da930f50e3d455f24b871cf59b37fbeb54b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;size&lt;/em&gt; is specified, sets this tree layout&amp;rsquo;s node size to the specified two-element array of numbers [&lt;em&gt;width&lt;/em&gt;, &lt;em&gt;height&lt;/em&gt;] and returns this tree layout. If &lt;em&gt;size&lt;/em&gt; is not specified, returns the current node size, which defaults to null. A node size of null indicates that a &lt;a href=&quot;#tree_size&quot;&gt;layout size&lt;/a&gt; will be used instead. When a node size is specified, the root node is always positioned at ⟨0, 0⟩.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d5bf2b0a1ab130349b8a1822fa92bdc538680b2" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;size&lt;/em&gt; is specified, sets this tree layout&amp;rsquo;s size to the specified two-element array of numbers [&lt;em&gt;width&lt;/em&gt;, &lt;em&gt;height&lt;/em&gt;] and returns this tree layout. If &lt;em&gt;size&lt;/em&gt; is not specified, returns the current layout size, which defaults to [1, 1]. A layout size of null indicates that a &lt;a href=&quot;#tree_nodeSize&quot;&gt;node size&lt;/a&gt; will be used instead. The coordinates &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; represent an arbitrary coordinate system; for example, to produce a &lt;a href=&quot;http://bl.ocks.org/mbostock/2e12b0bd732e7fe4000e2d11ecab0268&quot;&gt;radial layout&lt;/a&gt;, a size of [360, &lt;em&gt;radius&lt;/em&gt;] corresponds to a breadth of 360&amp;deg; and a depth of &lt;em&gt;radius&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c89cfbcc655dd46e8f16fb61c3a193ed1755eea" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;size&lt;/em&gt; is specified, sets this treemap layout&amp;rsquo;s size to the specified two-element array of numbers [&lt;em&gt;width&lt;/em&gt;, &lt;em&gt;height&lt;/em&gt;] and returns this treemap layout. If &lt;em&gt;size&lt;/em&gt; is not specified, returns the current size, which defaults to [1, 1].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e32753894f32ca8505343defe06ca0483a64d22f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;smooth&lt;/em&gt; is specified, sets whether or not the generated contour polygons are smoothed using linear interpolation. If &lt;em&gt;smooth&lt;/em&gt; is not specified, returns the current smoothing flag, which defaults to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="582284da8a65b7e82380356086086bd28baf569b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;source&lt;/em&gt; is specified, sets the source accessor to the specified function and returns this link generator. If &lt;em&gt;source&lt;/em&gt; is not specified, returns the current source accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e56d7fce8496235b7316744e8ff8acc9f650267" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;source&lt;/em&gt; is specified, sets the source accessor to the specified function and returns this ribbon generator. If &lt;em&gt;source&lt;/em&gt; is not specified, returns the current source accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda28e6a9d7434b90f3ac35a465dc36dda684fd8" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;specifier&lt;/em&gt; uses the format type &lt;code&gt;s&lt;/code&gt;, the scale will return a &lt;a href=&quot;d3-format#locale_formatPrefix&quot;&gt;SI-prefix format&lt;/a&gt; based on the largest value in the domain. If the &lt;em&gt;specifier&lt;/em&gt; already specifies a precision, this method is equivalent to &lt;a href=&quot;d3-format#locale_format&quot;&gt;&lt;em&gt;locale&lt;/em&gt;.format&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2add060b355006e81f01c93e3b8fc52aa3821465" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;step&lt;/em&gt; is omitted, it defaults to 1. If &lt;em&gt;start&lt;/em&gt; is omitted, it defaults to 0. The &lt;em&gt;stop&lt;/em&gt; value is exclusive; it is not included in the result. If &lt;em&gt;step&lt;/em&gt; is positive, the last element is the largest &lt;em&gt;start&lt;/em&gt; + &lt;em&gt;i&lt;/em&gt; * &lt;em&gt;step&lt;/em&gt; less than &lt;em&gt;stop&lt;/em&gt;; if &lt;em&gt;step&lt;/em&gt; is negative, the last element is the smallest &lt;em&gt;start&lt;/em&gt; + &lt;em&gt;i&lt;/em&gt; * &lt;em&gt;step&lt;/em&gt; greater than &lt;em&gt;stop&lt;/em&gt;. If the returned array would contain an infinite number of values, an empty range is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d0f79227168e52c19ccaa02ce832ee475fd634" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;step&lt;/em&gt; is specified, sets the major and minor step for this graticule. If &lt;em&gt;step&lt;/em&gt; is not specified, returns the current minor step, which defaults to ⟨10&amp;deg;, 10&amp;deg;⟩.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db6a959543bc778e14a3b6e3e2995720ed226a9b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;step&lt;/em&gt; is specified, sets the major step for this graticule. If &lt;em&gt;step&lt;/em&gt; is not specified, returns the current major step, which defaults to ⟨90&amp;deg;, 360&amp;deg;⟩.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b33aed946cbe3e573502b166c8ca1027de6befc" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;step&lt;/em&gt; is specified, sets the minor step for this graticule. If &lt;em&gt;step&lt;/em&gt; is not specified, returns the current minor step, which defaults to ⟨10&amp;deg;, 10&amp;deg;⟩.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="002c648e168b8ae9c6ec82483a8f41ec3d53076d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;strength&lt;/em&gt; is not specified, returns the current strength accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43d284aff055cb25eb6b617d4303e8ee9c16a263" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;strength&lt;/em&gt; is specified, sets the force strength to the specified number in the range [0,1] and returns this force. If &lt;em&gt;strength&lt;/em&gt; is not specified, returns the current strength which defaults to 0.7.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee1e6eaa03c4448aa5a1889483b19aff6572849f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;strength&lt;/em&gt; is specified, sets the strength accessor to the specified number or function, re-evaluates the strength accessor for each link, and returns this force. If &lt;em&gt;strength&lt;/em&gt; is not specified, returns the current strength accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="826bc36de64ece62e4169bb47b3b6804cd9dc01d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;strength&lt;/em&gt; is specified, sets the strength accessor to the specified number or function, re-evaluates the strength accessor for each node, and returns this force. A positive value causes nodes to attract each other, similar to gravity, while a negative value causes nodes to repel each other, similar to electrostatic charge. If &lt;em&gt;strength&lt;/em&gt; is not specified, returns the current strength accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ce0cb00570ce63feee97865df4f61db5fdf4a31" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;strength&lt;/em&gt; is specified, sets the strength accessor to the specified number or function, re-evaluates the strength accessor for each node, and returns this force. The &lt;em&gt;strength&lt;/em&gt; determines how much to increment the node&amp;rsquo;s &lt;em&gt;x&lt;/em&gt;- and &lt;em&gt;y&lt;/em&gt;-velocity. For example, a value of 0.1 indicates that the node should move a tenth of the way from its current position to the closest point on the circle with each application. Higher values moves nodes more quickly to the target position, often at the expense of other forces or constraints. A value outside the range [0,1] is not recommended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfb35a7d2f56e825ed69bc62ee191033b361e334" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;strength&lt;/em&gt; is specified, sets the strength accessor to the specified number or function, re-evaluates the strength accessor for each node, and returns this force. The &lt;em&gt;strength&lt;/em&gt; determines how much to increment the node&amp;rsquo;s &lt;em&gt;x&lt;/em&gt;-velocity: (&lt;a href=&quot;#x_x&quot;&gt;&lt;em&gt;x&lt;/em&gt;&lt;/a&gt; - &lt;em&gt;node&lt;/em&gt;.x) &amp;times; &lt;em&gt;strength&lt;/em&gt;. For example, a value of 0.1 indicates that the node should move a tenth of the way from its current &lt;em&gt;x&lt;/em&gt;-position to the target &lt;em&gt;x&lt;/em&gt;-position with each application. Higher values moves nodes more quickly to the target position, often at the expense of other forces or constraints. A value outside the range [0,1] is not recommended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34cb4625741e8d0c6a8b5783181f9e9f6196d168" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;strength&lt;/em&gt; is specified, sets the strength accessor to the specified number or function, re-evaluates the strength accessor for each node, and returns this force. The &lt;em&gt;strength&lt;/em&gt; determines how much to increment the node&amp;rsquo;s &lt;em&gt;y&lt;/em&gt;-velocity: (&lt;a href=&quot;#y_y&quot;&gt;&lt;em&gt;y&lt;/em&gt;&lt;/a&gt; - &lt;em&gt;node&lt;/em&gt;.y) &amp;times; &lt;em&gt;strength&lt;/em&gt;. For example, a value of 0.1 indicates that the node should move a tenth of the way from its current &lt;em&gt;y&lt;/em&gt;-position to the target &lt;em&gt;y&lt;/em&gt;-position with each application. Higher values moves nodes more quickly to the target position, often at the expense of other forces or constraints. A value outside the range [0,1] is not recommended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3678951dccef8bc1f95a3b84a885e24ded03df83" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;subject&lt;/em&gt; is specified, sets the subject accessor to the specified object or function and returns the drag behavior. If &lt;em&gt;subject&lt;/em&gt; is not specified, returns the current subject accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a44c6101713a80b2081725d0537e831f511c2ac2" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;target&lt;/em&gt; is specified, sets the current target &lt;a href=&quot;#simulation_alpha&quot;&gt;&lt;em&gt;alpha&lt;/em&gt;&lt;/a&gt; to the specified number in the range [0,1] and returns this simulation. If &lt;em&gt;target&lt;/em&gt; is not specified, returns the current target alpha value, which defaults to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37561762fd2c7dfa22839834becbd71a7a0af9e1" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;target&lt;/em&gt; is specified, sets the target accessor to the specified function and returns this link generator. If &lt;em&gt;target&lt;/em&gt; is not specified, returns the current target accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66258f988167a90a63a67a45c6befe4a866ecfe5" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;target&lt;/em&gt; is specified, sets the target accessor to the specified function and returns this ribbon generator. If &lt;em&gt;target&lt;/em&gt; is not specified, returns the current target accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ec91f7a6ebc9b881e1bc2d76a5a16cb88c41aa" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;theta&lt;/em&gt; is specified, sets the Barnes&amp;ndash;Hut approximation criterion to the specified number and returns this force. If &lt;em&gt;theta&lt;/em&gt; is not specified, returns the current value, which defaults to 0.9.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16ebd4a8935800a4cb0ea638dd188c05a8e6e9f2" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;thresholds&lt;/em&gt; is specified, sets the &lt;a href=&quot;#histogram-thresholds&quot;&gt;threshold generator&lt;/a&gt; to the specified function or array and returns this histogram generator. If &lt;em&gt;thresholds&lt;/em&gt; is not specified, returns the current threshold generator, which by default implements &lt;a href=&quot;#thresholdSturges&quot;&gt;Sturges&amp;rsquo; formula&lt;/a&gt;. (Thus by default, the histogram values must be numbers!) Thresholds are defined as an array of values [&lt;em&gt;x0&lt;/em&gt;, &lt;em&gt;x1&lt;/em&gt;, &amp;hellip;]. Any value less than &lt;em&gt;x0&lt;/em&gt; will be placed in the first bin; any value greater than or equal to &lt;em&gt;x0&lt;/em&gt; but less than &lt;em&gt;x1&lt;/em&gt; will be placed in the second bin; and so on. Thus, the &lt;a href=&quot;#_histogram&quot;&gt;generated histogram&lt;/a&gt; will have &lt;em&gt;thresholds&lt;/em&gt;.length + 1 bins. See &lt;a href=&quot;#histogram-thresholds&quot;&gt;histogram thresholds&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59b134f61e37c5c8bdb1725622841ef062abcf1f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;thresholds&lt;/em&gt; is specified, sets the threshold generator to the specified function or array and returns this contour generator. If &lt;em&gt;thresholds&lt;/em&gt; is not specified, returns the current threshold generator, which by default generates about twenty nicely-rounded density thresholds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aaad2b7395b68d812047c251186aff17d3aa637" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;thresholds&lt;/em&gt; is specified, sets the threshold generator to the specified function or array and returns this contour generator. If &lt;em&gt;thresholds&lt;/em&gt; is not specified, returns the current threshold generator, which by default implements &lt;a href=&quot;d3-array#thresholdSturges&quot;&gt;Sturges&amp;rsquo; formula&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea29e2fc222508ca6bb4d0ce0e9b2695b22e7f8e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;tile&lt;/em&gt; is specified, sets the &lt;a href=&quot;#treemap-tiling&quot;&gt;tiling method&lt;/a&gt; to the specified function and returns this treemap layout. If &lt;em&gt;tile&lt;/em&gt; is not specified, returns the current tiling method, which defaults to &lt;a href=&quot;#treemapSquarify&quot;&gt;d3.treemapSquarify&lt;/a&gt; with the golden ratio.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fa03462fd8a44f5f42c67980c1e78b353f5399a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;tileSize&lt;/em&gt; is specified, sets this tile layout&amp;rsquo;s individual tile widths and heights to the specified number &lt;em&gt;tileSize&lt;/em&gt; and returns this tile layout. If &lt;em&gt;tileSize&lt;/em&gt; is not specified, returns the current layout tile size, which defaults to 256, the most common tile size among tile service providers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="952b5c754c2e1dbaa939d32589c69d5e976f20ff" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;timeout&lt;/em&gt; is specified, sets the &lt;a href=&quot;http://www.w3.org/TR/XMLHttpRequest/#the-timeout-attribute&quot;&gt;timeout&lt;/a&gt; attribute of the request to the specified number of milliseconds and returns this request instance. If &lt;em&gt;timeout&lt;/em&gt; is not specified, returns the current response timeout, which defaults to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e52186c4a5fd36d409540b1116a985c3bc356ce" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;touchable&lt;/em&gt; is specified, sets the touch support detector to the specified function and returns the drag behavior. If &lt;em&gt;touchable&lt;/em&gt; is not specified, returns the current touch support detector, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47373d429d9db0251476ca42941dd2248128ea2b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;touchable&lt;/em&gt; is specified, sets the touch support detector to the specified function and returns the zoom behavior. If &lt;em&gt;touchable&lt;/em&gt; is not specified, returns the current touch support detector, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dabb7b9cb3058de4ed1d36e205330bb10f6e683d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;translate&lt;/em&gt; is specified, sets the projection&amp;rsquo;s translation offset to the specified two-element array [</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c3ed3f08be55ec9165fca2e1e9a2bf3fe408428" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;translate&lt;/em&gt; is specified, sets this tile layout&amp;rsquo;s translate to the specified two-element array of numbers [&lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;] and returns this tile layout. If &lt;em&gt;translate&lt;/em&gt; is not specified, returns the current layout translate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94c680514a9cd47a267db5e67075b5114ff5d210" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;type&lt;/em&gt; is specified, sets the &lt;a href=&quot;http://www.w3.org/TR/XMLHttpRequest/#the-responsetype-attribute&quot;&gt;response type&lt;/a&gt; attribute of the request and returns this request instance. Typical values are: &lt;code&gt;​&lt;/code&gt; (the empty string), &lt;code&gt;arraybuffer&lt;/code&gt;, &lt;code&gt;blob&lt;/code&gt;, &lt;code&gt;document&lt;/code&gt;, and &lt;code&gt;text&lt;/code&gt;. If &lt;em&gt;type&lt;/em&gt; is not specified, returns the current response type, which defaults to &lt;code&gt;​&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a722a4ab46944c1611e1b289a460f38d400c5d1a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;type&lt;/em&gt; is specified, sets the request mime type to the specified value and returns this request instance. If &lt;em&gt;type&lt;/em&gt; is null, clears the current mime type (if any) instead. If &lt;em&gt;type&lt;/em&gt; is not specified, returns the current mime type, which defaults to null. The mime type is used to both set the &lt;a href=&quot;http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html&quot;&gt;&quot;Accept&quot; request header&lt;/a&gt; and for &lt;a href=&quot;http://www.w3.org/TR/XMLHttpRequest/#the-overridemimetype%28%29-method&quot;&gt;overrideMimeType&lt;/a&gt;, where supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="922eff336f5f4ed6ae4a78bfa94c34044f6209b1" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;type&lt;/em&gt; is specified, sets the symbol type to the specified function or symbol type and returns this line generator. If &lt;em&gt;type&lt;/em&gt; is not specified, returns the current symbol type accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7cdca20c7f45338346a7ecdaddd37ae7585a674" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is a &lt;a href=&quot;d3-color#color&quot;&gt;color&lt;/a&gt; or a string coercible to a color, use &lt;a href=&quot;d3-interpolate#interpolateRgb&quot;&gt;interpolateRgb&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90f7e16a6c53d03512e9f0524ffb1966e0d99ed9" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is a number, use &lt;a href=&quot;d3-interpolate#interpolateNumber&quot;&gt;interpolateNumber&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d1ebf26e6ecb505dce3eedb991cccccba93c7de" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is specified, sets the output value of the scale for unknown input values and returns this scale. If &lt;em&gt;value&lt;/em&gt; is not specified, returns the current unknown value, which defaults to &lt;a href=&quot;#implicit&quot;&gt;implicit&lt;/a&gt;. The implicit value enables implicit domain construction; see &lt;a href=&quot;#ordinal_domain&quot;&gt;&lt;em&gt;ordinal&lt;/em&gt;.domain&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eac411689ad4934a11be04bd5c926b09d3a35ce7" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is specified, sets the password for authentication to the specified string and returns this request instance. If &lt;em&gt;value&lt;/em&gt; is not specified, returns the current password, which defaults to null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="247fe4ca2089b0051843afcd314660b12e786cc0" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is specified, sets the request header with the specified &lt;em&gt;name&lt;/em&gt; to the specified value and returns this request instance. If &lt;em&gt;value&lt;/em&gt; is null, removes the request header with the specified &lt;em&gt;name&lt;/em&gt; instead. If &lt;em&gt;value&lt;/em&gt; is not specified, returns the current value of the request header with the specified &lt;em&gt;name&lt;/em&gt;. Header names are case-insensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56ae19e547110e24cc4cad21cf3f62d1f9af977a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is specified, sets the user name for authentication to the specified string and returns this request instance. If &lt;em&gt;value&lt;/em&gt; is not specified, returns the current user name, which defaults to null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="507835a8fb5e5c14a32a50cb90f3a9321b491ccd" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is specified, sets the value accessor to the specified function or constant and returns this histogram generator. If &lt;em&gt;value&lt;/em&gt; is not specified, returns the current value accessor, which defaults to the identity function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa6cc8aa57d4e7348a435c385da517c9741da3f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is specified, sets the value accessor to the specified function or number and returns this pie generator. If &lt;em&gt;value&lt;/em&gt; is not specified, returns the current value accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="325e8bfad6c3ce356f25379d4fbcece5783c9a7c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is specified, sets the value accessor to the specified function or number and returns this stack generator. If &lt;em&gt;value&lt;/em&gt; is not specified, returns the current value accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850f6f49f4ca759674381a30f7be153ff81800d0" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;weight&lt;/em&gt; is specified, sets the accessor for point weights. If &lt;em&gt;weight&lt;/em&gt; is not specified, returns the current point weight accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50382dcbecc78350d20119214df495ca4ede749f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;wrap&lt;/em&gt; is &lt;em&gt;false&lt;/em&gt;, wrapping logic will be disabled, limiting tiles to be within longitude values between -180 and 180.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3283f8a3279d1ef6493012fd6e8f92ebc013f364" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;wrap&lt;/em&gt; is &lt;em&gt;true&lt;/em&gt;, wrapping logic will be applied to tile address &lt;em&gt;x&lt;/em&gt; values when the layout is evaluated. This will cause map tiles to be displayed in a periodic manner, going beyond longitude values between -180 and 180.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4ae7b6d67b73287c2c6691149ec33c9ebdab3ce" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;wrap&lt;/em&gt; is specified, sets this tile layout&amp;rsquo;s wrapping option to the specified boolean value and returns this tile layout. If &lt;em&gt;wrap&lt;/em&gt; is not specified, returns the current wrapping option, which defaults to &lt;em&gt;true&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="654809508c285c347c141c23d831738c95b77774" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; are also specified, sets the &lt;a href=&quot;#quadtree_x&quot;&gt;&lt;em&gt;x&lt;/em&gt;-&lt;/a&gt; and &lt;a href=&quot;#quadtree_y&quot;&gt;&lt;em&gt;y&lt;/em&gt;-&lt;/a&gt; accessors to the specified functions before adding the specified array of data to the quadtree, equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0805fe60f22802a431521aa0b1aac332bad0f29" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;x&lt;/em&gt; is specified, sets &lt;a href=&quot;#area_x0&quot;&gt;x0&lt;/a&gt; to &lt;em&gt;x&lt;/em&gt; and &lt;a href=&quot;#area_x1&quot;&gt;x1&lt;/a&gt; to null and returns this area generator. If &lt;em&gt;x&lt;/em&gt; is not specified, returns the current x0 accessor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da6a6375dbeaa30ab793ec9e97e5be3f493ddeac" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;x&lt;/em&gt; is specified, sets the &lt;em&gt;x&lt;/em&gt;-accessor to the specified function or number and returns this link generator. If &lt;em&gt;x&lt;/em&gt; is not specified, returns the current &lt;em&gt;x&lt;/em&gt;-accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdac543161c023440ba83aad8e9a376aa95231e5" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;x&lt;/em&gt; is specified, sets the &lt;em&gt;x&lt;/em&gt;-coordinate accessor to the specified number or function, re-evaluates the &lt;em&gt;x&lt;/em&gt;-accessor for each node, and returns this force. If &lt;em&gt;x&lt;/em&gt; is not specified, returns the current &lt;em&gt;x&lt;/em&gt;-accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fe90fdd49d6b34914b03f88cb93c685af28c03c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;x&lt;/em&gt; is specified, sets the &lt;em&gt;x&lt;/em&gt;-coordinate accessor. If &lt;em&gt;x&lt;/em&gt; is not specified, returns the current &lt;em&gt;x&lt;/em&gt;-coordinate accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02637aa9a2938fa6e8e05cd644bc71b98de07585" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;x&lt;/em&gt; is specified, sets the &lt;em&gt;x&lt;/em&gt;-coordinate of the centering position to the specified number and returns this force. If &lt;em&gt;x&lt;/em&gt; is not specified, returns the current &lt;em&gt;x&lt;/em&gt;-coordinate, which defaults to zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ee1ae8cedb5218a04be9c681aa217873d05cf6" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;x&lt;/em&gt; is specified, sets the &lt;em&gt;x&lt;/em&gt;-coordinate of the circle center to the specified number and returns this force. If &lt;em&gt;x&lt;/em&gt; is not specified, returns the current &lt;em&gt;x&lt;/em&gt;-coordinate of the center, which defaults to zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e12f5796a8e08a5c6d7584efae2df290577c9fbf" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;x&lt;/em&gt; is specified, sets the current &lt;em&gt;x&lt;/em&gt;-coordinate accessor and returns the quadtree. If &lt;em&gt;x&lt;/em&gt; is not specified, returns the current &lt;em&gt;x&lt;/em&gt;-accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b4f0e345c1b33d37741f73590a7b600c8a54c15" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;x&lt;/em&gt; is specified, sets the x accessor to the specified function or number and returns this line generator. If &lt;em&gt;x&lt;/em&gt; is not specified, returns the current x accessor, which defaults to:</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
