<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="tcl_tk">
    <body>
      <group id="tcl_tk">
        <trans-unit id="3d3484da31f339e2ae151359233871b0b5aef603" translate="yes" xml:space="preserve">
          <source>When an interpreter is created containing Tcl/Tk and the &lt;b&gt;[incr Tcl]&lt;/b&gt; namespace facility, this variable controls a &quot;backward-compatibility&quot; mode for widget access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="385b0714ffcd7cf9c4181030fb5fc6842b1c68f1" translate="yes" xml:space="preserve">
          <source>When an interpreter is created, &lt;b&gt;[incr Tcl]&lt;/b&gt; initializes this variable to hold the current patch level for &lt;b&gt;[incr Tcl]&lt;/b&gt;. For example, the value &quot;&lt;b&gt;2.0p1&lt;/b&gt;&quot; indicates &lt;b&gt;[incr Tcl]&lt;/b&gt; version 2.0 with the first set of patches applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="661d5a1be65535df60b86aec980df28929d0ce5d" translate="yes" xml:space="preserve">
          <source>When an interpreter is created, &lt;b&gt;[incr Tcl]&lt;/b&gt; initializes this variable to hold the name of a directory containing the system library of &lt;b&gt;[incr Tcl]&lt;/b&gt; scripts. The initial value of &lt;b&gt;itcl::library&lt;/b&gt; is set from the ITCL_LIBRARY environment variable if it exists, or from a compiled-in value otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dbd9c383feb542e02cf4bb1750de8807a9342f6" translate="yes" xml:space="preserve">
          <source>When an interpreter is created, &lt;b&gt;[incr Tcl]&lt;/b&gt; initializes this variable to hold the version number of the form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63dfbd67c546f1b9a49dafdb19a6b587c84662b6" translate="yes" xml:space="preserve">
          <source>When an interpreter is created, its initial selection mode value is set to &amp;ldquo;stable&amp;rdquo; unless the environment variable &lt;b&gt;TCL_PKG_PREFER_LATEST&lt;/b&gt; is set. If that environment variable is defined (with any value) then the initial (and permanent) selection mode value is set to &amp;ldquo;latest&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7624a1adec445f5bbdbbf8791bd35cc8c21ea11" translate="yes" xml:space="preserve">
          <source>When an object has a list of filter names set upon it, or is an instance of a class (or has mixed in a class) that has a list of filter names set upon it, before every invocation of any method the filters are processed. Filter implementations are found in class traversal order, as are the lists of filter names (each of which is traversed in natural list order). Explicitly invoking a method used as a filter will cause that method to be invoked twice, once as a filter and once as a normal method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0bfbf8550fd28acd785d1acba3f2a4c7c0baef0" translate="yes" xml:space="preserve">
          <source>When an object is destroyed, all destructors in its class hierarchy are invoked in order from most- to least-specific. This is the order that the classes are reported by the &quot;&lt;b&gt;&lt;a href=&quot;../tclcmd/info.htm&quot;&gt;info heritage&lt;/a&gt;&lt;/b&gt;&quot; command, and it is exactly the opposite of the default constructor order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08294a656172cd30e8e95c019438e17c1a8c8af8" translate="yes" xml:space="preserve">
          <source>When an object is destroyed, all destructors in its extendedclass hierarchy are invoked in order from most- to least-specific. This is the order that the extendedclasses are reported by the &quot;&lt;b&gt;&lt;a href=&quot;../tclcmd/info.htm&quot;&gt;info heritage&lt;/a&gt;&lt;/b&gt;&quot; command, and it is exactly the opposite of the default constructor order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfb7d53579c3450ee916c3c4c12e15dae958dc86" translate="yes" xml:space="preserve">
          <source>When an object is destroyed, all destructors in its widget hierarchy are invoked in order from most- to least-specific. This is the order that the widgets are reported by the &quot;&lt;b&gt;&lt;a href=&quot;../tclcmd/info.htm&quot;&gt;info heritage&lt;/a&gt;&lt;/b&gt;&quot; command, and it is exactly the opposite of the default constructor order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="003e13f4b5f8844bd856a4248b14437735aa9da4" translate="yes" xml:space="preserve">
          <source>When an unset trace is invoked, the variable has already been deleted: it will appear to be undefined with no traces. If an unset occurs because of a procedure return, then the trace will be invoked in the variable context of the procedure being returned to: the stack frame of the returning procedure will no longer exist. Traces are not disabled during unset traces, so if an unset trace command creates a new trace and accesses the variable, the trace will be invoked. Any errors in unset traces are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aaf5673345dc8404d0c87a157a867325cef0794" translate="yes" xml:space="preserve">
          <source>When applied to integers, the division and remainder operators can be considered to partition the number line into a sequence of equal-sized adjacent non-overlapping pieces where each piece is the size of the divisor; the division result identifies which piece the divisor lay within, and the remainder result identifies where within that piece the divisor lay. A consequence of this is that the result of &amp;ldquo;-57 &lt;b&gt;/&lt;/b&gt; 10&amp;rdquo; is always -6, and the result of &amp;ldquo;-57 &lt;b&gt;%&lt;/b&gt; 10&amp;rdquo; is always 3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d9e6521753540cafdafc175ce26df628a41b9b9" translate="yes" xml:space="preserve">
          <source>When attempting to execute an application, &lt;b&gt;exec&lt;/b&gt; first searches for the name as it was specified. Then, in order, &lt;b&gt;.com&lt;/b&gt;, &lt;b&gt;.exe&lt;/b&gt;, &lt;b&gt;.bat&lt;/b&gt; and &lt;b&gt;.cmd&lt;/b&gt; are appended to the end of the specified name and it searches for the longer name. If a directory name was not specified as part of the application name, the following directories are automatically searched in order when attempting to locate the application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c0487d6940348400408716eb5c07dd33eb133b8" translate="yes" xml:space="preserve">
          <source>When built into a shared/dynamic library with a suitable name (e.g. &lt;b&gt;foo.dll&lt;/b&gt; on Windows, &lt;b&gt;libfoo.so&lt;/b&gt; on Solaris and Linux) it can then be loaded into Tcl with the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69f70b70de1cd6eb7fdc03aa925b6973644e80f5" translate="yes" xml:space="preserve">
          <source>When called, an ensemble command takes its first argument and looks it up (according to the rules described below) to discover a list of words to replace the ensemble command and subcommand with. The resulting list of words is then evaluated (with no further substitutions) as if that was what was typed originally (i.e. by passing the list of words through &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TclLib/Eval.htm&quot;&gt;Tcl_EvalObjv&lt;/a&gt;&lt;/b&gt;) and returning the result of the command. Note that it is legal to make the target of an ensemble rewrite be another (or even the same) ensemble command. The ensemble command will not be visible through the use of the &lt;b&gt;&lt;a href=&quot;uplevel.htm&quot;&gt;uplevel&lt;/a&gt;&lt;/b&gt; or &lt;b&gt;&lt;a href=&quot;info.htm&quot;&gt;info level&lt;/a&gt;&lt;/b&gt; commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7500185b06f1b0a667cbc89d2e5d2383f34e645" translate="yes" xml:space="preserve">
          <source>When command substitution is performed, it includes any variable substitution necessary to evaluate the script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="369f3207cca27b7e16b2573feb1fb1160d714e2a" translate="yes" xml:space="preserve">
          <source>When constructing the method chain, method implementations are searched for in the following order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca4bf01acd7e97264893921e9a14bb05edad46c5" translate="yes" xml:space="preserve">
          <source>When converting back, it is also important to reverse the charset encoding:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85dcbb6b496e60684bd0d8d90f262005054a0ebf" translate="yes" xml:space="preserve">
          <source>When debugging is turned on, the drawing routines of the text widget set the global variables &lt;b&gt;tk_textRedraw&lt;/b&gt; and &lt;b&gt;tk_textRelayout&lt;/b&gt; to the lists of indices that are redrawn. The values of these variables are tested by Tk's test suite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f02b2eedf43df4523845420f971d3188682f701" translate="yes" xml:space="preserve">
          <source>When encoding binary data as a readable string, the starting binary data is passed to the &lt;b&gt;binary encode&lt;/b&gt; command, together with the name of the encoding to use and any encoding-specific options desired. Data which has been encoded can be converted back to binary form using &lt;b&gt;binary decode&lt;/b&gt;. The following formats and options are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="110cf84b36fb7e26b6a00915f66ecc494a209dfe" translate="yes" xml:space="preserve">
          <source>When executed, it prints the message:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae2b6d34e57be4f1751c386388257072f1d51287" translate="yes" xml:space="preserve">
          <source>When font description</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ada017c9ff8211f6fa4b703551088fdb87a1407d" translate="yes" xml:space="preserve">
          <source>When gridded geometry management is enabled then all the dimensions specified in &lt;b&gt;wm minsize&lt;/b&gt;, &lt;b&gt;wm maxsize&lt;/b&gt;, and &lt;b&gt;wm geometry&lt;/b&gt; commands are treated as grid units rather than pixel units. Interactive resizing is also carried out in even numbers of grid units rather than pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d92ebb792fc8da76b2845b47ddc1644e9df3d507" translate="yes" xml:space="preserve">
          <source>When in doubt, use the command &lt;b&gt;&lt;a href=&quot;library.htm&quot;&gt;auto_execok&lt;/a&gt;&lt;/b&gt;: it will return the complete path to the program as seen by the &lt;b&gt;exec&lt;/b&gt; command. This applies especially when you want to run &amp;ldquo;internal&amp;rdquo; commands like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f86db25991fb19e3d930934f4e059e95a767d38" translate="yes" xml:space="preserve">
          <source>When invoked from a method that is not at the end of a call chain (i.e. where the &lt;b&gt;&lt;a href=&quot;next.htm&quot;&gt;next&lt;/a&gt;&lt;/b&gt; command will invoke an actual method implementation), this subcommand returns a two element list describing the next element in the method call chain; the first element is the name of the class or object that declares the next part of the call chain, and the second element is the name of the method (with the strings &lt;b&gt;&amp;lt;constructor&amp;gt;&lt;/b&gt; and &lt;b&gt;&amp;lt;destructor&amp;gt;&lt;/b&gt; indicating constructors and destructors respectively). If invoked from a method that is at the end of a call chain, this subcommand returns the empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec4de4733ab49a8d3d5f3de17dca5ec76fc6a159" translate="yes" xml:space="preserve">
          <source>When invoked inside a filter implementation, this subcommand returns a two element list describing the method being filtered. The first element will be the name of the declarer of the method, and the second element will be the actual name of the method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bf1bbd0ea3e83667d9c940a42012dfe189f3466" translate="yes" xml:space="preserve">
          <source>When invoked inside a filter, this subcommand returns a three element list describing the filter. The first element gives the name of the object or class that declared the filter (note that this may be different from the object or class that provided the implementation of the filter), the second element is either &lt;b&gt;object&lt;/b&gt; or &lt;b&gt;class&lt;/b&gt; depending on whether the declaring entity was an object or class, and the third element is the name of the filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05367f36fb8a24ef2163d2b01ae48b33d2e2a329" translate="yes" xml:space="preserve">
          <source>When it performs its substitutions,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2172f5447bf48a77f15c77eeca8bc9236dcd86b" translate="yes" xml:space="preserve">
          <source>When matching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b793791bd965837cf16748e5058badf67010f50a" translate="yes" xml:space="preserve">
          <source>When matching against regular expressions, information about what exactly matched is easily obtained using the &lt;b&gt;-matchvar&lt;/b&gt; option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19f0ac2a501d133de379c3c3f10bfdc92a7c524c" translate="yes" xml:space="preserve">
          <source>When mouse button 1 is pressed over a checkbutton, it is invoked (its selection state toggles and the command associated with the button is invoked, if there is one).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="688de2b1892c9cca18a8faaba41541f639db239a" translate="yes" xml:space="preserve">
          <source>When mouse button 1 is pressed over a radiobutton it is invoked (it becomes selected and the command associated with the button is invoked, if there is one).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d39d80ae53a3ca496cc44bc3848cb58594b465b3" translate="yes" xml:space="preserve">
          <source>When multiple rows or columns belong to a uniform group, the space allocated to them is always in proportion to their weights. (A weight of zero is considered to be 1.) In other words, a row or column configured with &lt;b&gt;-weight 1 -uniform a&lt;/b&gt; will have exactly the same size as any other row or column configured with &lt;b&gt;-weight 1 -uniform a&lt;/b&gt;. A row or column configured with &lt;b&gt;-weight 2 -uniform b&lt;/b&gt; will be exactly twice as large as one that is configured with &lt;b&gt;-weight 1 -uniform b&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="383591230877587d306740ba2d1118e08932e7e1" translate="yes" xml:space="preserve">
          <source>When multiple traces are set on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cd0ced192d6a2c530425aa9c007b7f580f52512" translate="yes" xml:space="preserve">
          <source>When non-empty, this option lists exactly what subcommands are in the ensemble. The mapping for each of those commands will be either whatever is defined in the &lt;b&gt;-map&lt;/b&gt; option, or to the command with the same name in the namespace linked to the ensemble. If this option is empty, the subcommands of the namespace will either be the keys of the dictionary listed in the &lt;b&gt;-map&lt;/b&gt; option or the exported commands of the linked namespace at the time of the invocation of the ensemble command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feb60d87ef9b17a03664282914e5c9cb1661ac32" translate="yes" xml:space="preserve">
          <source>When non-empty, this option provides a partial command (to which all the words that are arguments to the ensemble command, including the fully-qualified name of the ensemble, are appended) to handle the case where an ensemble subcommand is not recognized and would otherwise generate an error. When empty (the default) an error (in the style of &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TclLib/GetIndex.htm&quot;&gt;Tcl_GetIndexFromObj&lt;/a&gt;&lt;/b&gt;) is generated whenever the ensemble is unable to determine how to implement a particular subcommand. See &lt;b&gt;&lt;a href=&quot;#M42&quot;&gt;UNKNOWN HANDLER BEHAVIOUR&lt;/a&gt;&lt;/b&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="875a8860cb2e61b407af6d5e94fe34cbc1e3ed92" translate="yes" xml:space="preserve">
          <source>When non-empty, this option supplies a dictionary that provides a mapping from subcommand names to a list of prefix words to substitute in place of the ensemble command and subcommand words (in a manner similar to an alias created with &lt;b&gt;&lt;a href=&quot;interp.htm&quot;&gt;interp alias&lt;/a&gt;&lt;/b&gt;; the words are not reparsed after substitution); if the first word of any target is not fully qualified when set, it is assumed to be relative to the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc21aaadc727e44da49375919d3b19690e9022b1" translate="yes" xml:space="preserve">
          <source>When one namespace contains another, you may need more than one qualifier to reach its elements. If we had a namespace &lt;b&gt;Foo&lt;/b&gt; that contained the namespace &lt;b&gt;Counter&lt;/b&gt;, you could invoke its &lt;b&gt;bump&lt;/b&gt; procedure from the global namespace like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa07e760387f34a184ff2930dade824803982311" translate="yes" xml:space="preserve">
          <source>When parsing a multi-part GIF image, Tk normally only accesses the first image. By giving the &lt;b&gt;-index&lt;/b&gt; sub-option, the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acaf6dea8d3b6ea2a0ab302c5a6abfde5fc4e732" translate="yes" xml:space="preserve">
          <source>When passed any other value as an argument, raise an invalid argument error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b86b95b676fe907163649d1b57de1c320431389d" translate="yes" xml:space="preserve">
          <source>When passed the argument &amp;ldquo;latest&amp;rdquo;, it sets the selection logic mode to &amp;ldquo;latest&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84babc9f8d6ce72353e026e5ca89c9d8ca6b3896" translate="yes" xml:space="preserve">
          <source>When passed the argument &amp;ldquo;stable&amp;rdquo;, if the mode is already &amp;ldquo;stable&amp;rdquo;, that value is kept. If the mode is already &amp;ldquo;latest&amp;rdquo;, then the attempt to set it back to &amp;ldquo;stable&amp;rdquo; is ineffective and the mode value remains &amp;ldquo;latest&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa1ad0cb2700e1824ade50e4fe6381e4b05e5197" translate="yes" xml:space="preserve">
          <source>When performing &lt;b&gt;-all&lt;/b&gt; searches, the normal behaviour is that matches which overlap an already-found match will not be returned. This switch changes that behaviour so that all matches which are not totally enclosed within another match are returned. For example, applying an &lt;b&gt;-overlap&lt;/b&gt; search of the pattern &amp;ldquo;\w+&amp;rdquo; against &amp;ldquo;hello there&amp;rdquo; will just match twice (i.e. no different to just &lt;b&gt;-all&lt;/b&gt;), but matching &amp;ldquo;Z[a-z]+Z&amp;rdquo; against &amp;ldquo;ZooZooZoo&amp;rdquo; will now match twice. An error will be thrown if this switch is used without &lt;b&gt;-all&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbf396dd7004d6cd00a3e509d7b50f903f52c46c" translate="yes" xml:space="preserve">
          <source>When performing any search, the normal behaviour is that the start and stop limits are checked with respect to the start of the matching text. With the &lt;b&gt;-strictlimits&lt;/b&gt; flag, the entire matching range must lie inside the start and stop limits specified for the match to be valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="145f72940c324ef24abdbc079426b7822e1f99af" translate="yes" xml:space="preserve">
          <source>When presented with a single index, the &lt;b&gt;lindex&lt;/b&gt; command treats</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00ffd49d17f9a07a0b39daa35c3f67e5718b7edf" translate="yes" xml:space="preserve">
          <source>When presented with a single index, the &lt;b&gt;lset&lt;/b&gt; command treats the content of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="000fa3c46970f4732166e007ba1dc5be53801cd5" translate="yes" xml:space="preserve">
          <source>When reading an image file or processing string data specified with the &lt;b&gt;-data&lt;/b&gt; configuration option, the photo image code invokes each handler in turn until one is found that claims to be able to read the data in the file or string. Usually this will find the correct handler, but if it does not, the user may give a format name with the &lt;b&gt;-format&lt;/b&gt; option to specify which handler to use. In fact the photo image code will try those handlers whose names begin with the string specified for the &lt;b&gt;-format&lt;/b&gt; option (the comparison is case-insensitive). For example, if the user specifies &lt;b&gt;-format gif&lt;/b&gt;, then a handler named GIF87 or GIF89 may be invoked, but a handler named JPEG may not (assuming that such handlers had been registered).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71932799f8f99dc1ceb2cfea89281f6a5658e630" translate="yes" xml:space="preserve">
          <source>When reading from a serial port, most applications should configure the serial port channel to be non-blocking, like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aad59b86dd1d766da72a9b8de24d3e824ae13c1b" translate="yes" xml:space="preserve">
          <source>When referring to indices into a string (e.g., for &lt;b&gt;string index&lt;/b&gt; or &lt;b&gt;string range&lt;/b&gt;) the following formats are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46397d4a5c0edbcde27e3cf4296001341770341d" translate="yes" xml:space="preserve">
          <source>When running Tcl interactively, there may be some strange interactions between the console, if one is present, and a command pipeline that uses standard input. If a command pipeline is opened for reading, some of the lines entered at the console will be sent to the command pipeline and some will be sent to the Tcl evaluator. This problem only occurs because both Tcl and the child application are competing for the console at the same time. If the command pipeline is started from a script, so that Tcl is not accessing the console, or if the command pipeline does not use standard input, but is redirected from a file, then the above problem does not occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="498b7164ed39493ec0bf1d8ee40213a5b1634d71" translate="yes" xml:space="preserve">
          <source>When running Tcl interactively, there may be some strange interactions between the real console, if one is present, and a command pipeline that uses standard input or output. If a command pipeline is opened for reading, some of the lines entered at the console will be sent to the command pipeline and some will be sent to the Tcl evaluator. If a command pipeline is opened for writing, keystrokes entered into the console are not visible until the pipe is closed. These problems only occur because both Tcl and the child application are competing for the console at the same time. If the command pipeline is started from a script, so that Tcl is not accessing the console, or if the command pipeline does not use standard input or output, but is redirected from or to a file, then the above problems do not occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9a303a5ef4164cdfa5dc24ad5de10dc892d6983" translate="yes" xml:space="preserve">
          <source>When running inside a &lt;b&gt;&lt;a href=&quot;coroutine.htm&quot;&gt;coroutine&lt;/a&gt;&lt;/b&gt;, an alternative to using &lt;b&gt;vwait&lt;/b&gt; is to &lt;b&gt;&lt;a href=&quot;coroutine.htm&quot;&gt;yield&lt;/a&gt;&lt;/b&gt; to an outer event loop and to get recommenced when the variable is set, or at an idle moment after that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eeca1005069a130abbe7d5f9d7e02413a8a2c71" translate="yes" xml:space="preserve">
          <source>When sash handles are drawn, specifies the distance from the top or left end of the sash (depending on the orientation of the widget) at which to draw the handle. May be any value accepted by &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TkLib/GetPixels.htm&quot;&gt;Tk_GetPixels&lt;/a&gt;&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="973ef57390098413fa9c3d5db47eea5d96c7986a" translate="yes" xml:space="preserve">
          <source>When searching for a translation of a message, the message catalog will search first the current namespace, then the parent of the current namespace, and so on until the global namespace is reached. This allows child namespaces to &amp;ldquo;inherit&amp;rdquo; messages from their parent namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25f1047c8eb2fdb282a83deaa78f29b919c65ac0" translate="yes" xml:space="preserve">
          <source>When specifying items in canvas widget commands, if the specifier is an integer then it is assumed to refer to the single item with that id. If the specifier is not an integer, then it is assumed to refer to all of the items in the canvas that have a tag matching the specifier. The symbol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f3e3f1e06a97818ce0ffb33865599309fb29ae" translate="yes" xml:space="preserve">
          <source>When the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bfffe5447e0656c592613d5eec32f98a702143e" translate="yes" xml:space="preserve">
          <source>When the &lt;b&gt;-undo&lt;/b&gt; option is true, reapplies the last undone edits provided no other edits were done since then. Generates an error when the redo stack is empty. Does nothing when the &lt;b&gt;-undo&lt;/b&gt; option is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42d0bba7932e3dd8f14ae6ac23a9263de252364b" translate="yes" xml:space="preserve">
          <source>When the &lt;b&gt;.&lt;/b&gt; window of the main interpreter is destroyed, the &lt;b&gt;tk::ConsoleExit&lt;/b&gt; command in the console interpreter is called (assuming the console interpreter has not already been deleted itself, that is.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dfb8b4b8501582c952d553bd7132938de15d3f3" translate="yes" xml:space="preserve">
          <source>When the &lt;b&gt;Destroy&lt;/b&gt; event is delivered to a widget, it is in a &amp;ldquo;half-dead&amp;rdquo; state: the widget still exists, but most operations on it will fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fac61ab41de4609a1bca4bffe05ea912602a7cd" translate="yes" xml:space="preserve">
          <source>When the &lt;b&gt;clock&lt;/b&gt; command is processing a local time, it has several possible sources for the time zone to use. In order of preference, they are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0693f3825dd99188e4714f9ae8928830486f006f" translate="yes" xml:space="preserve">
          <source>When the &lt;b&gt;glob&lt;/b&gt; command returns relative paths whose filenames start with a tilde &amp;ldquo;~&amp;rdquo; (for example through &lt;b&gt;glob *&lt;/b&gt; or &lt;b&gt;glob -tails&lt;/b&gt;, the returned list will not quote the tilde with &amp;ldquo;./&amp;rdquo;. This means care must be taken if those names are later to be used with &lt;b&gt;&lt;a href=&quot;file.htm&quot;&gt;file join&lt;/a&gt;&lt;/b&gt;, to avoid them being interpreted as absolute paths pointing to a given user's home directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd10f216d31f687e646e69d278da7021bc423aa2" translate="yes" xml:space="preserve">
          <source>When the application is no longer busy processing, you can allow user interactions again and free any resources it allocated by the &lt;b&gt;forget&lt;/b&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ea9f546fb0c2b2df8345caa2f7755b6aed0c9af" translate="yes" xml:space="preserve">
          <source>When the expression parser encounters a mathematical function such as &lt;b&gt;sin($x)&lt;/b&gt;, it replaces it with a call to an ordinary Tcl function in the &lt;b&gt;tcl::mathfunc&lt;/b&gt; namespace. The processing of an expression such as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abce20be717fdcfd3a099182717d49877078d34d" translate="yes" xml:space="preserve">
          <source>When the method was invoked from inside another object method, this subcommand returns a three element list describing the containing object and method. The first element describes the declaring object or class of the method, the second element is the name of the object on which the containing method was invoked, and the third element is the name of the method (with the strings &lt;b&gt;&amp;lt;constructor&amp;gt;&lt;/b&gt; and &lt;b&gt;&amp;lt;destructor&amp;gt;&lt;/b&gt; indicating constructors and destructors respectively).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c99de5c553e3dd53c51968fe1a6e53d3f1d5b03f" translate="yes" xml:space="preserve">
          <source>When the mouse enters a menu, the entry underneath the mouse cursor activates; as the mouse moves around the menu, the active entry changes to track the mouse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1047bec797f3f564ee8f4611c3cf0a0f7761588" translate="yes" xml:space="preserve">
          <source>When the mouse leaves a menu all of the entries in the menu deactivate, except in the special case where the mouse moves from a menu to a cascaded submenu.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a25a02ea4320d5893657bd1c43e44b56be3260ec" translate="yes" xml:space="preserve">
          <source>When the msgcat package is first loaded, the locale is initialized according to the user's environment. The variables &lt;b&gt;env(LC_ALL)&lt;/b&gt;, &lt;b&gt;env(LC_MESSAGES)&lt;/b&gt;, and &lt;b&gt;env(LANG)&lt;/b&gt; are examined in order. The first of them to have a non-empty value is used to determine the initial locale. The value is parsed according to the XPG4 pattern</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f6f674f07da1ee26e7ae7ff6a4e4e4dc6622d1f" translate="yes" xml:space="preserve">
          <source>When the output buffer fills up, the &lt;b&gt;chan puts&lt;/b&gt; command will normally block until all the buffered data has been accepted for output by the operating system. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d9f0800d0aa91f6db3521fcd884d98a0f5cb695" translate="yes" xml:space="preserve">
          <source>When the output buffer fills up, the &lt;b&gt;puts&lt;/b&gt; command will normally block until all the buffered data has been accepted for output by the operating system. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eefbf908f2fe4c2020db143f297fb1e35b227a6e" translate="yes" xml:space="preserve">
          <source>When the result is a non-empty list, the words of that list are used to replace the ensemble command and subcommand, just as if they had been looked up in the &lt;b&gt;-map&lt;/b&gt;. It is up to the unknown handler to supply all namespace qualifiers if the implementing subcommand is not in the namespace of the caller of the ensemble command. Also note that when ensemble commands are chained (e.g. if you make one of the commands that implement an ensemble subcommand into an ensemble, in a manner similar to the &lt;b&gt;&lt;a href=&quot;../tkcmd/text.htm&quot;&gt;text&lt;/a&gt;&lt;/b&gt; widget's tag and mark subcommands) then the rewrite happens in the context of the caller of the outermost ensemble. That is to say that ensembles do not in themselves place any namespace contexts on the Tcl call stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66aed6fba861a9de132afd8bb1189b23410d8a21" translate="yes" xml:space="preserve">
          <source>When the return code from evaluation of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f07dca109de68b96e4808ba5148abce6766f624f" translate="yes" xml:space="preserve">
          <source>When the source for an alias is invoked in the slave interpreter, the usual Tcl substitutions are performed when parsing that command. These substitutions are carried out in the source interpreter just as they would be for any other command invoked in that interpreter. The command procedure for the source command takes its arguments and merges them with the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e52f043cd8ba3096b5d9c2e927638ce1c9d74cc7" translate="yes" xml:space="preserve">
          <source>When the trace triggers, depending on the operations being traced, a number of arguments are appended to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="585540eceb3947dc23929be3144548b8dd657daf" translate="yes" xml:space="preserve">
          <source>When the trace triggers, three arguments are appended to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="193bc270a23d82a32ada1cd98092e088f20009f4" translate="yes" xml:space="preserve">
          <source>When the user interacts with the scrollbar, for example by dragging the slider, the scrollbar notifies the associated widget that it must change its view. The scrollbar makes the notification by evaluating a Tcl command generated from the scrollbar's &lt;b&gt;-command&lt;/b&gt; option. The command may take any of the following forms. In each case,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90d2ec4a9c5f2a147eac7912b2796a17791330a3" translate="yes" xml:space="preserve">
          <source>When the user interacts with the scrollbar, for example by dragging the thumb, the scrollbar notifies the associated widget that it must change its view. The scrollbar makes the notification by evaluating a Tcl command generated from the scrollbar's &lt;b&gt;-command&lt;/b&gt; option. The command may take any of the following forms. In each case,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a7826e54aac5acbbdec970eaffaec4381117e21" translate="yes" xml:space="preserve">
          <source>When the user types Control-y the &lt;b&gt;&amp;lt;Control-y&amp;gt;&lt;/b&gt; binding will be invoked, because a physical event is considered more specific than a virtual event, all other things being equal. However, when the user types Meta-Control-y the &lt;b&gt;&amp;lt;&amp;lt;Paste&amp;gt;&amp;gt;&lt;/b&gt; binding will be invoked, because the &lt;b&gt;Meta&lt;/b&gt; modifier in the physical pattern associated with the virtual binding is more specific than the &lt;b&gt;&amp;lt;Control-y&lt;/b&gt;&amp;gt; sequence for the physical event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059911957b0b858e8377d7141720ea589fcc0e46" translate="yes" xml:space="preserve">
          <source>When there are multiple lines of text displayed in a widget, this option determines how the lines line up with each other. Must be one of &lt;b&gt;left&lt;/b&gt;, &lt;b&gt;center&lt;/b&gt;, or &lt;b&gt;right&lt;/b&gt;. &lt;b&gt;Left&lt;/b&gt; means that the lines' left edges all line up, &lt;b&gt;center&lt;/b&gt; means that the lines' centers are aligned, and &lt;b&gt;right&lt;/b&gt; means that the lines' right edges line up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="097894c620a851a3937cb8c0b8db9834b3eeb2dd" translate="yes" xml:space="preserve">
          <source>When this option is given a non-empty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03a8fa911d9e169a5f566724e6a4dd8efb7b2577" translate="yes" xml:space="preserve">
          <source>When this option is zero, the entry appears below the previous entry. When this option is one, the entry appears at the top of a new column in the menu. This option is ignored on Aqua/Mac OS X, where menus are always a single column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2dbca17b5a8ac3ad82e8a7729552e9efff6a7c2" translate="yes" xml:space="preserve">
          <source>When translating a command from a Unix shell invocation, care should be taken over the fact that single quote characters have no special significance to Tcl. Thus:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af95f8748594a1444d9c2dfaf9a47cc239cc52b2" translate="yes" xml:space="preserve">
          <source>When two words are separated by a period, the latter widget must be a direct child of the former (or the option must apply to only the indicated widgets). When two words are separated by an asterisk, any depth of widgets may lie between the former and latter widgets (and the option applies to all widgets that are children of the former widget).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c006eb35aa29da4ece30bddfdc60e5d1fc9fb248" translate="yes" xml:space="preserve">
          <source>When using DDE, be careful to ensure that the event queue is flushed using either &lt;b&gt;&lt;a href=&quot;update.htm&quot;&gt;update&lt;/a&gt;&lt;/b&gt; or &lt;b&gt;&lt;a href=&quot;vwait.htm&quot;&gt;vwait&lt;/a&gt;&lt;/b&gt;. This happens by default when using &lt;b&gt;&lt;a href=&quot;../usercmd/wish.htm&quot;&gt;wish&lt;/a&gt;&lt;/b&gt; unless a blocking command is called (such as &lt;b&gt;&lt;a href=&quot;exec.htm&quot;&gt;exec&lt;/a&gt;&lt;/b&gt; without adding the &lt;b&gt;&amp;amp;&lt;/b&gt; to place the process in the background). If for any reason the event queue is not flushed, DDE commands may hang until the event queue is flushed. This can create a deadlock situation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d404636f731eea919809ed59460834d27aec2cb" translate="yes" xml:space="preserve">
          <source>When working with Tcl 8.5 or later, the following code should be used instead:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b8ebb932ddf0c552ce3cee491337873ee8b51c" translate="yes" xml:space="preserve">
          <source>When writing image data to a file, the processing of the &lt;b&gt;-format&lt;/b&gt; option is slightly different: the string value given for the &lt;b&gt;-format&lt;/b&gt; option must begin with the complete name of the requested handler, and may contain additional information following that, which the handler can use, for example, to specify which variant to use of the formats supported by the handler. Note that not all image handlers may support writing transparency data to a file, even where the target image format does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc061aac78c80d173906f10594c64e5014b69bf" translate="yes" xml:space="preserve">
          <source>When writing the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbfcf50990a51454cb7a4c37dc244432f5b89e31" translate="yes" xml:space="preserve">
          <source>When you delete a command from the exporting namespace like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a10b5e9aa1e82955bc249fe84ad5ba60bac06ed6" translate="yes" xml:space="preserve">
          <source>Whenever a menu's active entry is changed, a &amp;lt;&amp;lt;MenuSelect&amp;gt;&amp;gt; virtual event is send to the menu. The active item can then be queried from the menu, and an action can be taken, such as setting context-sensitive help text for the entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e29cdf37c42659081e06c9b0b3cc85c81c6f4dd1" translate="yes" xml:space="preserve">
          <source>Whenever characters are tagged with &lt;b&gt;sel&lt;/b&gt; the text widget will claim ownership of the selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4c88060fe6a793a238dd6fab984948baa63629b" translate="yes" xml:space="preserve">
          <source>Whenever nothing matches, the &lt;b&gt;default&lt;/b&gt; clause (which must be last) is taken. This example has a result of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c3c16a1eb390e6900b87538439236e9d0d8d281" translate="yes" xml:space="preserve">
          <source>Whenever one possible match is fully enclosed in another, the search command will attempt to ensure only the larger match is returned. When performing backwards regexp searches it is possible that Tcl will not always achieve this, in the case where a match is preceded by one or more short, non-overlapping matches, all of which are preceded by a large match which actually encompasses all of them. The search algorithm used by the widget does not look back arbitrarily far for a possible match which might cover large portions of the widget. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e369bb42e459b86e02cfdb2252de96f9aa51785" translate="yes" xml:space="preserve">
          <source>Whenever the &lt;b&gt;sel&lt;/b&gt; tag range changes a virtual event &lt;b&gt;&amp;lt;&amp;lt;Selection&amp;gt;&amp;gt;&lt;/b&gt; is generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c0bb38491966fa2d6682aeccd4ac0ed2869aee3" translate="yes" xml:space="preserve">
          <source>Whenever the sibling is repositioned in the future, the slave will be repositioned as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="525f61b6729229b1a8854a9e50bcaa52ea96b131" translate="yes" xml:space="preserve">
          <source>Where</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c924d91bcda2724b8613f89f12d3556317e47553" translate="yes" xml:space="preserve">
          <source>Where &lt;b&gt;EXEC&lt;/b&gt; is &lt;b&gt;file normalize [info nameofexecutable]/../lib&lt;/b&gt; or &lt;b&gt;file normalize [::tcl::pkgconfig get libdir,runtime]&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="475035db8cc45c87a26ee3c6faacc7b306be0630" translate="yes" xml:space="preserve">
          <source>Where &lt;b&gt;PNAME&amp;prime;&lt;/b&gt; is the partial path of the module as defined in section &lt;b&gt;&lt;a href=&quot;#M10&quot;&gt;FINDING MODULES&lt;/a&gt;&lt;/b&gt;, and translated into &lt;b&gt;PNAME&lt;/b&gt; by changing all directory separators to &amp;ldquo;&lt;b&gt;::&lt;/b&gt;&amp;rdquo;, and &lt;b&gt;module_path&lt;/b&gt; is the path (from the list of paths to search) that we found the module file under.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d946c04a945264c8fdee515270da560763de15f3" translate="yes" xml:space="preserve">
          <source>Where an empty &lt;b&gt;-unknown&lt;/b&gt; handler is given (the default), the ensemble command will generate an error message based on the list of commands that the ensemble has defined (formatted similarly to the error message from &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TclLib/GetIndex.htm&quot;&gt;Tcl_GetIndexFromObj&lt;/a&gt;&lt;/b&gt;). This is the error that will be thrown when the subcommand is still not recognized during reparsing. It is also an error for an &lt;b&gt;-unknown&lt;/b&gt; handler to delete its namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b8e2be4fc6dffb232e3702722d620c9ca18c281" translate="yes" xml:space="preserve">
          <source>Where an interpreter with a resource limit set on it creates a slave interpreter, that slave interpreter will have resource limits imposed on it that are at least as restrictive as the limits on the creating master interpreter. If the master interpreter of the limited master wishes to relax these conditions, it should hide the &lt;b&gt;interp&lt;/b&gt; command in the child and then use aliases and the &lt;b&gt;interp invokehidden&lt;/b&gt; subcommand to provide such access as it chooses to the &lt;b&gt;interp&lt;/b&gt; command to the limited master as necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1be03e77d46e948f33ff23acff13a066d5fd4f8" translate="yes" xml:space="preserve">
          <source>Where modifiers result in index changes by display lines, display chars or display indices, and the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdf4a99e9d8f80f48d3b4498e0cbd827389d2ea8" translate="yes" xml:space="preserve">
          <source>Where more than one value is listed, separated by commas, the values are equivalent. Most of the modifiers have the obvious X meanings. For example, &lt;b&gt;Button1&lt;/b&gt; requires that button 1 be depressed when the event occurs. For a binding to match a given event, the modifiers in the event must include all of those specified in the event pattern. An event may also contain additional modifiers not specified in the binding. For example, if button 1 is pressed while the shift and control keys are down, the pattern &lt;b&gt;&amp;lt;Control-Button-1&amp;gt;&lt;/b&gt; will match the event, but &lt;b&gt;&amp;lt;Mod1-Button-1&amp;gt;&lt;/b&gt; will not. If no modifiers are specified, then any combination of modifiers may be present in the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6d73938ccbcec067e16aac1e504db1a2e0d5d92" translate="yes" xml:space="preserve">
          <source>Where the above substitutions occur (e.g. inside quoted strings), they are performed by the expression's instructions. However, the command parser may already have performed one round of substitution before the expression processor was called. As discussed below, it is usually best to enclose expressions in braces to prevent the command parser from performing substitutions on the contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a92a2ab2c06ed3fdf57a7f255dca1c932f9e87b0" translate="yes" xml:space="preserve">
          <source>Whether to enforce RFC 3986 URL validation on the request. Default is 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7ca655afd9f157f0f27571d4a1355abb5f68377" translate="yes" xml:space="preserve">
          <source>Which produces the output below. In particular, we can see that stack manipulation has occurred (comparing the levels from the first and second line) and that the parent level in the coroutine is the global namespace. We can also see that coroutine names are local to the current namespace if not qualified, and that coroutines may yield at depth (e.g., in called procedures).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d86a5675cc6478e7030415aaa83cd72801292548" translate="yes" xml:space="preserve">
          <source>While</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c94db227f49e249f3fd015de3d2d0d4891464326" translate="yes" xml:space="preserve">
          <source>While for most platform this means that the architecture of the interrogated shell is identical to the architecture of the running shell this is not generally true. A counter example are all platforms which have 32 and 64 bit variants and where a 64bit system is able to run 32bit code. For these running and interrogated shell may have different 32/64 bit settings and thus different identifiers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23a783a366fbbb5682ffd45c5bbbaae347440320" translate="yes" xml:space="preserve">
          <source>While the &lt;b&gt;tkwait&lt;/b&gt; command is waiting it processes events in the normal fashion, so the application will continue to respond to user interactions. If an event handler invokes &lt;b&gt;tkwait&lt;/b&gt; again, the nested call to &lt;b&gt;tkwait&lt;/b&gt; must complete before the outer call can complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f2f7a3fc75fa02596537634c3caaf05e0a42eb8" translate="yes" xml:space="preserve">
          <source>While this behavior makes sense from the standpoint of encapsulation, it causes problems with existing Tcl/Tk applications. Many existing applications are written with bindings that use &quot;%W&quot;. Many library procedures assume that the window name is the access command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a909b3948cf8ee081c158805677839290b68b94a" translate="yes" xml:space="preserve">
          <source>While this data store cannot be accessed directly (i.e. without a text widget as an intermediary), multiple text widgets can be created, each of which present different views on the same underlying data. Such text widgets are known as peer text widgets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49dc5e1bb6762f21f1331fc6c93cb41240d17459" translate="yes" xml:space="preserve">
          <source>While waiting for the user to respond, &lt;b&gt;tk_dialog&lt;/b&gt; sets a local grab. This prevents the user from interacting with the application in any way except to invoke the dialog box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d3353e78f7d8706615eb1f18517ed59fe2357da" translate="yes" xml:space="preserve">
          <source>Whilst Tcl provides the &lt;b&gt;&lt;a href=&quot;tclvars.htm&quot;&gt;tcl_platform&lt;/a&gt;&lt;/b&gt; array for identifying the current architecture (in particular, the platform and machine elements) this is not always sufficient. This is because (on Unix machines) &lt;b&gt;&lt;a href=&quot;tclvars.htm&quot;&gt;tcl_platform&lt;/a&gt;&lt;/b&gt; reflects the values returned by the &lt;b&gt;uname&lt;/b&gt; command and these are not standardized across platforms and architectures. In addition, on at least one platform (AIX) the &lt;b&gt;tcl_platform(machine)&lt;/b&gt; contains the CPU serial number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2ad6ed94ab55c22cb4b03a2782eb60b71143877" translate="yes" xml:space="preserve">
          <source>WhiteSmoke</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b4414b3478ef9dff48cdba497d7160afcb37df" translate="yes" xml:space="preserve">
          <source>Widget command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80c912ef301820e5905f15833a687d1246fbcfe3" translate="yes" xml:space="preserve">
          <source>Widget definitions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="109e98fe8a516cb8379f7da68b282189c07dc3a7" translate="yes" xml:space="preserve">
          <source>Widget definitions need not be loaded explicitly; they can be loaded as needed by the usual Tcl auto-loading facility. Each directory containing widget definition files should have an accompanying &quot;tclIndex&quot; file. Each line in this file identifies a Tcl procedure or &lt;b&gt;[incr Tcl]&lt;/b&gt; widget definition and the file where the definition can be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e3e8ec4927ad2c64c39cca1443ca93805229dd" translate="yes" xml:space="preserve">
          <source>Widget has keyboard focus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e5119579ef2981fbfeb168313399f2f500e9866" translate="yes" xml:space="preserve">
          <source>Widget is being pressed (aka &amp;ldquo;armed&amp;rdquo; in Motif).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c68385233e2f28d6efbf12f911e9969de765ee8a" translate="yes" xml:space="preserve">
          <source>Widget is disabled under program control (aka &amp;ldquo;unavailable&amp;rdquo;, &amp;ldquo;inactive&amp;rdquo;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b13764a104117964d5f62899f2d32a69b9d0a563" translate="yes" xml:space="preserve">
          <source>Widget should not allow user modification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1482f5d3e252be5fb8b1eddd2446844a03574b59" translate="yes" xml:space="preserve">
          <source>Widget states</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff0251b5c208c4f1ff704e943fc3c35680993ebe" translate="yes" xml:space="preserve">
          <source>Widget usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5b8b5931778d65df242787bfcd71c0c79cbf48e" translate="yes" xml:space="preserve">
          <source>Widget-specific options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="442bd9a1cf79095d712e21e2743d45000ecf2802" translate="yes" xml:space="preserve">
          <source>Widgets may be assigned a private colormap by specifying a &lt;b&gt;-colormap&lt;/b&gt; option; the window manager is responsible for installing and uninstalling colormaps as necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a58ddf50c5ea5c03802da919dd5953bbf82ebd74" translate="yes" xml:space="preserve">
          <source>Width</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ecba181901d7f4d23f527e806b4157c825e5ecf" translate="yes" xml:space="preserve">
          <source>WidthInc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41dfc0a6c92707948578891c51d98c6443be63cc" translate="yes" xml:space="preserve">
          <source>Window</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a2d5f0b68d003e586a7bf626776dd1e19f9a381" translate="yes" xml:space="preserve">
          <source>Window items</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="771d6ea0b9b72e74af2a21d5cd8ed777d68098db" translate="yes" xml:space="preserve">
          <source>Window items are an exception to the above rules. The underlying window systems require them always to be drawn on top of other items. In addition, the stacking order of window items is not affected by any of the canvas widget commands; you must use the Tk &lt;b&gt;&lt;a href=&quot;raise.htm&quot;&gt;raise&lt;/a&gt;&lt;/b&gt; command and &lt;b&gt;&lt;a href=&quot;lower.htm&quot;&gt;lower&lt;/a&gt;&lt;/b&gt; command instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c290b737bfb472c71b0a6fdaef6ab9a3719317c" translate="yes" xml:space="preserve">
          <source>WindowUnits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccc53c5a417d8d8b1ca64a8964b5fa2b4db48159" translate="yes" xml:space="preserve">
          <source>Windows and the Mac have a notion of an &amp;ldquo;active&amp;rdquo; or foreground window. The &lt;b&gt;background&lt;/b&gt; state is set for widgets in a background window, and cleared for those in the foreground window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f299adb9281e78b475195ba70f8043bcc00d9a5b" translate="yes" xml:space="preserve">
          <source>Windows are created in the unmapped state. Top-level windows become mapped when they transition to the &lt;b&gt;normal&lt;/b&gt; state, and are unmapped in the &lt;b&gt;withdrawn&lt;/b&gt; and &lt;b&gt;iconic&lt;/b&gt; states. Other windows become mapped when they are placed under control of a geometry manager (for example &lt;b&gt;&lt;a href=&quot;pack.htm&quot;&gt;pack&lt;/a&gt;&lt;/b&gt; or &lt;b&gt;&lt;a href=&quot;grid.htm&quot;&gt;grid&lt;/a&gt;&lt;/b&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06c386c74325d272db036bade9bf9b2745381a1c" translate="yes" xml:space="preserve">
          <source>Windows examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ec5524a916e78b524116da2e9fff1a0b0d3b51" translate="yes" xml:space="preserve">
          <source>Windows input buffer overrun. The data comes faster than your scripts reads it or your system is overloaded. Use &lt;b&gt;&lt;a href=&quot;fconfigure.htm&quot;&gt;fconfigure&lt;/a&gt;&lt;/b&gt;&lt;b&gt;-sysbuffer&lt;/b&gt; to avoid a temporary bottleneck and/or make your script faster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0384f95a50c05513d3349b97e1dec768b45d7432" translate="yes" xml:space="preserve">
          <source>Windows output buffer overrun. Complement to RXOVER. This error should practically not happen, because Tcl cares about the output buffer status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab520b2113b3fdb21af5349ec81cb6e2bf8dff3c" translate="yes" xml:space="preserve">
          <source>Windows portability issues</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6246b62c960eb4203ba20d95e50df81b43369e6" translate="yes" xml:space="preserve">
          <source>With an &lt;b&gt;else&lt;/b&gt;-clause:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb75955fd843b7979c09008210ec3df7e19d54a9" translate="yes" xml:space="preserve">
          <source>With an &lt;b&gt;elseif&lt;/b&gt;-clause too:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cda6c57ce5b231da272f4625466b4e6855984dd" translate="yes" xml:space="preserve">
          <source>With ensembles, composite commands can be created and extended in an automatic way. Any package can find an existing ensemble and add new parts to it. So extension writers can add their own parts, for example, to the &lt;b&gt;&lt;a href=&quot;../tclcmd/info.htm&quot;&gt;info&lt;/a&gt;&lt;/b&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="636a184365ee795c80a99689d13ebc6fafd0af9d" translate="yes" xml:space="preserve">
          <source>With no arguments, the bounding box (in pixels) of the grid is returned. The return value consists of 4 integers. The first two are the pixel offset from the master window (x then y) of the top-left corner of the grid, and the second two integers are the width and height of the grid, also in pixels. If a single</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc8509d170574b5de4159d93897942e2ee7255ab" translate="yes" xml:space="preserve">
          <source>With no arguments, the commands returns either &amp;ldquo;latest&amp;rdquo; or &amp;ldquo;stable&amp;rdquo;, whichever describes the current mode of selection logic used by &lt;b&gt;package require&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82cf9bd5adfae3b767ff641c5d91d7f6a4899777" translate="yes" xml:space="preserve">
          <source>With no arguments, this command returns a list of all class methods and procs. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="064227d826ed1d136958118539ad2934d5b7ea9d" translate="yes" xml:space="preserve">
          <source>With no arguments, this command returns a list of all extendedclass methods and procs. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df9494757e411b7947e99b4737b1bff79e835f4" translate="yes" xml:space="preserve">
          <source>With no arguments, this command returns a list of all object-specific variables and common data members. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="515a038ed382fa08755584e55ee310c2115d4669" translate="yes" xml:space="preserve">
          <source>With no arguments, this command returns a list of all widgets methods and procs. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94c2d42afa55cdf6866ad4f3b8bc57999f5f0b77" translate="yes" xml:space="preserve">
          <source>With one argument, returns a dictionary of column/value pairs for the specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c962310a4816f9cd3668a2c8c840f33cbdf58131" translate="yes" xml:space="preserve">
          <source>With reference counting, one can implement controlled access to a shared Tcl thread . By incrementing the reference counter, the caller signalizes that he/she wishes to use the thread for a longer period of time . By decrementing the counter, caller signalizes that he/she has finished using the thread .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8cf26711411ecb2ac73248604272555bc8c2724" translate="yes" xml:space="preserve">
          <source>With the &lt;b&gt;-level 0&lt;/b&gt; option, &lt;b&gt;return&lt;/b&gt; itself can serve as a replacement for &lt;b&gt;&lt;a href=&quot;break.htm&quot;&gt;break&lt;/a&gt;&lt;/b&gt;, with the help of &lt;b&gt;&lt;a href=&quot;interp.htm&quot;&gt;interp alias&lt;/a&gt;&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1484690bb6ef4245eaaa175dd722b981854983b1" translate="yes" xml:space="preserve">
          <source>With the file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="110ff86b8c70d293132ff46b4daabd21f009deea" translate="yes" xml:space="preserve">
          <source>Within &lt;b&gt;&lt;a href=&quot;clock.htm&quot;&gt;clock&lt;/a&gt;&lt;/b&gt;, some message-catalog items are heavy in computation and thus are dynamically cached using:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa99388f0fd31dafb81c65619041042062f2985" translate="yes" xml:space="preserve">
          <source>Within a bracket expression, a collating element (a character, a multi-character sequence that collates as if it were a single character, or a collating-sequence name for either) enclosed in &lt;b&gt;[.&lt;/b&gt; and &lt;b&gt;.]&lt;/b&gt; stands for the sequence of characters of that collating element. The sequence is a single element of the bracket expression's list. A bracket expression in a locale that has multi-character collating elements can thus match more than one character. So (insidiously), a bracket expression that starts with &lt;b&gt;^&lt;/b&gt; can match multi-character collating elements even if none of them appear in the bracket expression!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae090225a8da6634e4a56229eca736aea39d143" translate="yes" xml:space="preserve">
          <source>Within a bracket expression, a collating element enclosed in &lt;b&gt;[=&lt;/b&gt; and &lt;b&gt;=]&lt;/b&gt; is an equivalence class, standing for the sequences of characters of all collating elements equivalent to that one, including itself. (If there are no other equivalent collating elements, the treatment is as if the enclosing delimiters were &amp;ldquo;&lt;b&gt;[.&lt;/b&gt;&amp;rdquo; and &amp;ldquo;&lt;b&gt;.]&lt;/b&gt;&amp;rdquo;.) For example, if &lt;b&gt;o&lt;/b&gt; and &lt;b&gt;&amp;ocirc;&lt;/b&gt; are the members of an equivalence class, then &amp;ldquo;&lt;b&gt;[[=o=]]&lt;/b&gt;&amp;rdquo;, &amp;ldquo;&lt;b&gt;[[=&amp;ocirc;=]]&lt;/b&gt;&amp;rdquo;, and &amp;ldquo;&lt;b&gt;[o&amp;ocirc;]&lt;/b&gt;&amp;rdquo; are all synonymous. An equivalence class may not be an endpoint of a range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d901a4045e3bc54af4063f6acf79af6bfbcd48f" translate="yes" xml:space="preserve">
          <source>Within a bracket expression, the name of a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b93d277bf31e4440240d6d73959adfe7e23a22fa" translate="yes" xml:space="preserve">
          <source>Within bracket expressions, &amp;ldquo;&lt;b&gt;\d&lt;/b&gt;&amp;rdquo;, &amp;ldquo;&lt;b&gt;\s&lt;/b&gt;&amp;rdquo;, and &amp;ldquo;&lt;b&gt;\w&lt;/b&gt;&amp;rdquo; lose their outer brackets, and &amp;ldquo;&lt;b&gt;\D&lt;/b&gt;&amp;rdquo;, &amp;ldquo;&lt;b&gt;\S&lt;/b&gt;&amp;rdquo;, and &amp;ldquo;&lt;b&gt;\W&lt;/b&gt;&amp;rdquo; are illegal. (So, for example, &amp;ldquo;&lt;b&gt;[a-c\d]&lt;/b&gt;&amp;rdquo; is equivalent to &amp;ldquo;&lt;b&gt;[a-c[:digit:]]&lt;/b&gt;&amp;rdquo;. Also, &amp;ldquo;&lt;b&gt;[a-c\D]&lt;/b&gt;&amp;rdquo;, which is equivalent to &amp;ldquo;&lt;b&gt;[a-c^[:digit:]]&lt;/b&gt;&amp;rdquo;, is illegal.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="778bc54034da155fc0f0c43227b64fdd1da00868" translate="yes" xml:space="preserve">
          <source>Within the body of a method, the &quot;variables&quot; defined in the class are automatically available. They need not be declared with anything like the &lt;b&gt;&lt;a href=&quot;../tclcmd/global.htm&quot;&gt;global&lt;/a&gt;&lt;/b&gt; command. Within another class method, a method can be invoked like any other command-simply by using its name. From any other context, the method name must be prefaced by an object name, which provides a context for the data that the method can access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ebd64e7bfb48b3089c7a5f18ff9d9d0ac0d95ba" translate="yes" xml:space="preserve">
          <source>Within the body of another class method or proc, a proc can be invoked like any other command-simply by using its name. In any other namespace context, the proc is invoked using a qualified name like &quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c984717d3c0e9f91b802c847eb5f7e5d1cf5aaef" translate="yes" xml:space="preserve">
          <source>Within the body of another class method, a method can be invoked like any other command-simply by using its name. Outside of the class context, the method name must be prefaced an object name, which provides the context for the data that it manipulates. Methods in a base class that are redefined in the current class, or hidden by another base class, can be qualified using the &quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bba38379e22f4d273ff185e1f85845b89dac98e1" translate="yes" xml:space="preserve">
          <source>Within the body of another extendedclass method or proc, a proc can be invoked like any other command-simply by using its name. In any other namespace context, the proc is invoked using a qualified name like &quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d353b1d4da189df965dc3e704bd6c26fc0d09be2" translate="yes" xml:space="preserve">
          <source>Within the body of another extendedclass method, a method can be invoked like any other command-simply by using its name. Outside of the extendedclass context, the method name must be prefaced an object name, which provides the context for the data that it manipulates. Methods in a base extendedclass that are redefined in the current extendedclass, or hidden by another base extendedclass, can be qualified using the &quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbbd69981f93ac12f8e6f67fad45c4987d6dbc1a" translate="yes" xml:space="preserve">
          <source>Within the body of another widget method or proc, a proc can be invoked like any other command-simply by using its name. In any other namespace context, the proc is invoked using a qualified name like &quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34ddadf27791cebdf5148119a9f98e22245ad0ef" translate="yes" xml:space="preserve">
          <source>Within the body of another widget method, a method can be invoked like any other command-simply by using its name. Outside of the widget context, the method name must be prefaced an object name, which provides the context for the data that it manipulates. Methods in a base widget that are redefined in the current widget, or hidden by another base widget, can be qualified using the &quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfe8f5fba36b4ac7dde70f3fe9eaf53aee794fc6" translate="yes" xml:space="preserve">
          <source>Within the context, values may be generated as results by using the &lt;b&gt;yield&lt;/b&gt; command; if no</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da7603e366d5066b86b8f439487b4f4a312f9566" translate="yes" xml:space="preserve">
          <source>Without an argument the result is the name of the current theme. Otherwise this command sets the current theme to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9482883f786868c22fc594bdf6232a51cf38fff0" translate="yes" xml:space="preserve">
          <source>Word boundary determination variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d50a5da73da11424aee3cafd3b4f45bb153ed0b" translate="yes" xml:space="preserve">
          <source>Words of a command are separated by white space (except for newlines, which are command separators).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="536be1f6c1978f1ccc2c9a13b98816fabb37bd83" translate="yes" xml:space="preserve">
          <source>Working with command built-ins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="530931602efdc746d4dd381c383daa520b511b28" translate="yes" xml:space="preserve">
          <source>Working with console programs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2307b6cf1aa6f47103ea73ead70bc7a82e7faa8" translate="yes" xml:space="preserve">
          <source>Working with globbing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adc10e74210aae01b4d5259db8a777fb5bf123a6" translate="yes" xml:space="preserve">
          <source>Working with native filenames</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e00c48ff15a85f170d1a05ac2be3df5f885d4a46" translate="yes" xml:space="preserve">
          <source>Working with non-zero results</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="794f4ac131c3365a6f14a7fbefd72618b122f116" translate="yes" xml:space="preserve">
          <source>Working with quoted arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e032f9fb800fb3430f9f4e89183beef3285112da" translate="yes" xml:space="preserve">
          <source>Working with user-supplied shell script fragments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e867c3900f8b6876356ceacc475e5234cf3f6a27" translate="yes" xml:space="preserve">
          <source>Write a list of all currently allocated memory to the specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee4995920317aae80cf2068e25d7620ca920d24" translate="yes" xml:space="preserve">
          <source>Write a short message to the console (or wherever &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TclLib/GetStdChan.htm&quot;&gt;stdout&lt;/a&gt;&lt;/b&gt; is directed):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="827642519092f642ed0df7604440487009ab7fbc" translate="yes" xml:space="preserve">
          <source>Write-related subcommands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b1ff2c96b99a1589923943cfd2a6cdcf1069090" translate="yes" xml:space="preserve">
          <source>Writes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d30857d14b9ac63a9b3ff268316388da89141226" translate="yes" xml:space="preserve">
          <source>Writes image data from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7274a3af4131a2f4d3601b9ce89dad2b7544ae05" translate="yes" xml:space="preserve">
          <source>Writes the characters given by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c032adc1ff629c9b66f22749ad667e6beadf144b" translate="yes" xml:space="preserve">
          <source>X</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb4e247a20875831e391889af95f7f5e4e6e0619" translate="yes" xml:space="preserve">
          <source>X1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="462e8c2ca626c62ca8bacc35f2d8a62fcd2e16fc" translate="yes" xml:space="preserve">
          <source>XOrigin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e73fa77e45d3037a7070290b3251aac8f07fa69" translate="yes" xml:space="preserve">
          <source>YellowGreen</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e37dc3494276544afa6ac99dbcb53c2cc266779" translate="yes" xml:space="preserve">
          <source>You are not allowed to do other I/O operations with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcea136eee8a75c4a574e70c3645ecf457931586" translate="yes" xml:space="preserve">
          <source>You are not allowed to do other input operations with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8202a3e4b8a27d6367f19ab60010ffd84d92ec37" translate="yes" xml:space="preserve">
          <source>You can access a namespace variable from a procedure in the same namespace by using the &lt;b&gt;&lt;a href=&quot;variable.htm&quot;&gt;variable&lt;/a&gt;&lt;/b&gt; command. Much like the &lt;b&gt;&lt;a href=&quot;global.htm&quot;&gt;global&lt;/a&gt;&lt;/b&gt; command, this creates a local link to the namespace variable. If necessary, it also creates the variable in the current namespace and initializes it. Note that the &lt;b&gt;&lt;a href=&quot;global.htm&quot;&gt;global&lt;/a&gt;&lt;/b&gt; command only creates links to variables in the global namespace. It is not necessary to use a &lt;b&gt;&lt;a href=&quot;variable.htm&quot;&gt;variable&lt;/a&gt;&lt;/b&gt; command if you always refer to the namespace variable using an appropriate qualified name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4718afa4d8ee8758069c4195b17a78db3da0ebfa" translate="yes" xml:space="preserve">
          <source>You can also customize the way an ensemble responds to errors. When an ensemble encounters an unspecified or ambiguous part name, it looks for a part called &lt;b&gt;@error&lt;/b&gt;. If it exists, then it is used to handle the error. This part will receive all of the arguments on the command line starting with the offending part name. It can find another way of resolving the command, or generate its own error message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b14020df8d122b5f2069abecb087aa7aa8eff3c" translate="yes" xml:space="preserve">
          <source>You can also use qualified names when you create and rename commands. For example, you could add a procedure to the &lt;b&gt;Foo&lt;/b&gt; namespace like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b038ebb4001adfcb325df1513de8c502399f849" translate="yes" xml:space="preserve">
          <source>You can export commands from a namespace like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe7c716ebcdfb0a75ffd66241af2597021d8516d" translate="yes" xml:space="preserve">
          <source>You can make several widgets busy by simply making its ancestor widget busy using the &lt;b&gt;hold&lt;/b&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73aeccaca247a4b677cb6bf361f521f54143b6ff" translate="yes" xml:space="preserve">
          <source>You can put custom data into the clipboard by using a custom &lt;b&gt;-type&lt;/b&gt; option. This is not necessarily portable, but can be very useful. The method of passing Tcl scripts this way is effective, but should be mixed with safe interpreters in production code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78f5ab0999a36ee671e75ca6580afa6b95979378" translate="yes" xml:space="preserve">
          <source>You can use the &lt;b&gt;namespace which&lt;/b&gt; command to clear up any question about name resolution. For example, the command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1d9f95da2afb8a4d3d733121fa77d8b68ae26c0" translate="yes" xml:space="preserve">
          <source>You create a torn-off menu by invoking the tear-off entry at the top of an existing menu. The default bindings will create a new menu that is a copy of the original menu and leave it permanently posted as a top-level window. The torn-off menu behaves just the same as the original menu.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab90d408d2b1f1fda7b98d26c78223cb854cee4" translate="yes" xml:space="preserve">
          <source>You should never use the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a69e390e6495e8207edc8d053f2241ce02b702e6" translate="yes" xml:space="preserve">
          <source>You should note that it is also common practice to install tclsh with its version number as part of the name. This has the advantage of allowing multiple versions of Tcl to exist on the same system at once, but also the disadvantage of making it harder to write scripts that start up uniformly across different versions of Tcl.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a626476831f7a2a4cfb3657a29e90322571a7c6" translate="yes" xml:space="preserve">
          <source>Zip lists together:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab87c083b6a013456cef06cf0a0591fcf8d9e0b" translate="yes" xml:space="preserve">
          <source>[10] &lt;b&gt;Comments.&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11db3f33e35abcec864b1f4963c762815ca5b28a" translate="yes" xml:space="preserve">
          <source>[11] &lt;b&gt;Order of substitution.&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19bcab58c964d720dc0aa81331a6bc8c7d1b5436" translate="yes" xml:space="preserve">
          <source>[12] &lt;b&gt;Substitution and word boundaries.&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f629ae44b7b3dcfed444d363e626edf411ec69a8" translate="yes" xml:space="preserve">
          <source>[1]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec910af2894201f62a243ac941c1d9b879521b9c" translate="yes" xml:space="preserve">
          <source>[1] &lt;b&gt;Commands.&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5594cad2fd3aa4212be41f47bf94857f15e5d93" translate="yes" xml:space="preserve">
          <source>[1] &lt;i&gt;fontname&lt;/i&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2499831338ca5dc8c44f3d063e076799bea9bdff" translate="yes" xml:space="preserve">
          <source>[2]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10f995e70a97745f855d3dd96e1f1eb12ce691d2" translate="yes" xml:space="preserve">
          <source>[2] &lt;b&gt;Evaluation.&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea1dc31a7a3ba4eada7056fe635a89f513cc11c9" translate="yes" xml:space="preserve">
          <source>[2] &lt;i&gt;systemfont&lt;/i&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e31df9806ce94c5bdbbfff9608324930f4d3f1" translate="yes" xml:space="preserve">
          <source>[3]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e07bb35141ba703f12da844d6fc596a8ce08644" translate="yes" xml:space="preserve">
          <source>[3] &lt;b&gt;Words.&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b24121250d8b1e517912851a02db65652125e689" translate="yes" xml:space="preserve">
          <source>[3] &lt;i&gt;family &lt;/i&gt;?&lt;i&gt;size&lt;/i&gt;? ?&lt;i&gt;style&lt;/i&gt;? ?&lt;i&gt;style ...&lt;/i&gt;?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a38d347d73bb3b76bd9230d495abfce7037905" translate="yes" xml:space="preserve">
          <source>[4] &lt;b&gt;Double quotes.&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be87c975681d5ada3e55e3f25cf1ce00e4cada90" translate="yes" xml:space="preserve">
          <source>[4] X-font names (XLFD)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ae24979c5028fa873651bca338152dc0484245" translate="yes" xml:space="preserve">
          <source>[5]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="422acfef28a6989b5dd8679c009cc07cd020c3fc" translate="yes" xml:space="preserve">
          <source>[5] &lt;b&gt;Argument expansion.&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51728c397c9319b80dc10c655712efc213065685" translate="yes" xml:space="preserve">
          <source>[5] &lt;i&gt;option value &lt;/i&gt;?&lt;i&gt;option value ...&lt;/i&gt;?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a009d898627702797ebd8262eabfa9c186697281" translate="yes" xml:space="preserve">
          <source>[6] &lt;b&gt;Braces.&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ede27b681da28e46758afd0823ce6ec5e7894cd5" translate="yes" xml:space="preserve">
          <source>[7] &lt;b&gt;Command substitution.&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c133cb5947835b0fe91f1699dd8a3f022543770" translate="yes" xml:space="preserve">
          <source>[8] &lt;b&gt;Variable substitution.&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3124b0a753bda7c385e577d95f77aead071f469" translate="yes" xml:space="preserve">
          <source>[9] &lt;b&gt;Backslash substitution.&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4da784ca7172048d1115cdc573bc586424cdda0c" translate="yes" xml:space="preserve">
          <source>[incr Tcl]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d8196161902699ee85dd7d06fcc1bcdb1f1745" translate="yes" xml:space="preserve">
          <source>[incr Tcl] Package C API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94e504ef81372855cd971d1689f16cf57a925833" translate="yes" xml:space="preserve">
          <source>[incr Tcl] Package Commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08534f33c201a45017b502e90a800f1b708ebcb3" translate="yes" xml:space="preserve">
          <source>\</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b842a9efa3b216ec880b4f10acb786602b69f935" translate="yes" xml:space="preserve">
          <source>\*</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19a8e4741768e9ea48229b9e51581a7a3d3861a8" translate="yes" xml:space="preserve">
          <source>\&lt;b&gt;&amp;lt;newline&amp;gt;&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22ccfe648d07679ccf834c680a89ff5674b99a05" translate="yes" xml:space="preserve">
          <source>\&lt;b&gt;&amp;lt;newline&amp;gt;&lt;/b&gt;&lt;i&gt;whiteSpace&lt;/i&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed115bbe3d27f99b1caa1ce19145eda8160e1d01" translate="yes" xml:space="preserve">
          <source>\&lt;b&gt;U&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc586f8dfa2302227d4e5fe9d40e2f9db20bd7a" translate="yes" xml:space="preserve">
          <source>\&lt;b&gt;U&lt;/b&gt;&lt;i&gt;hhhhhhhh&lt;/i&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd399f27328e690c47968309c9b35fc2f0f5c859" translate="yes" xml:space="preserve">
          <source>\&lt;b&gt;a&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23395971b19a2cd0aeddd71a678b29f9745614c0" translate="yes" xml:space="preserve">
          <source>\&lt;b&gt;b&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac975b2f83991e91719f0260aae516a0a83867d3" translate="yes" xml:space="preserve">
          <source>\&lt;b&gt;f&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1588ce1e9766219fa8d3046fc178f7fa80bb1d88" translate="yes" xml:space="preserve">
          <source>\&lt;b&gt;n&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6fa4da58e7c719af686b21fd6f038e05dbadf89" translate="yes" xml:space="preserve">
          <source>\&lt;b&gt;r&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fee6d3c93f2d81f3dc0a4a92ed5b4fd6b7f0162" translate="yes" xml:space="preserve">
          <source>\&lt;b&gt;t&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb6dd1872b7018545eac3de5217b55a94159d8e6" translate="yes" xml:space="preserve">
          <source>\&lt;b&gt;u&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="187736362dd9e6aa0c81b49fa0d4ff901d879282" translate="yes" xml:space="preserve">
          <source>\&lt;b&gt;u&lt;/b&gt;&lt;i&gt;hhhh&lt;/i&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7625e2faf831368e6c499600adb6d516fb17f11" translate="yes" xml:space="preserve">
          <source>\&lt;b&gt;v&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c027fb5964fc99bcefe7f50efd8ad7d0c0bf1ca1" translate="yes" xml:space="preserve">
          <source>\&lt;b&gt;x&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bddd940251fc599be43d0f1c64132f02f90d88f7" translate="yes" xml:space="preserve">
          <source>\&lt;b&gt;x&lt;/b&gt;&lt;i&gt;hh&lt;/i&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dd357e2d1beaded5908646d82c7192c89570778" translate="yes" xml:space="preserve">
          <source>\&lt;i&gt;ooo&lt;/i&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e94758983980504af303ef297fd2bf9d9cea063" translate="yes" xml:space="preserve">
          <source>\\</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="794a729d2e4ffbb094fec03ae9b3acd219371385" translate="yes" xml:space="preserve">
          <source>\f</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7e6794ca9c6a06b54b66f279237fb8daaaeea8" translate="yes" xml:space="preserve">
          <source>\n</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80f97973beb982411c59e40a386d6d43c89483f1" translate="yes" xml:space="preserve">
          <source>] radians.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="463fb874cc4e6e77cbfaeae703f69b4bd50cb744" translate="yes" xml:space="preserve">
          <source>] to determine the heading number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e8867e9669fc3ada3256634a82de775962d2eea" translate="yes" xml:space="preserve">
          <source>] will return the display column identifier of the heading to left of the separator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d00394cda7c96c9492a3601697c26a3b8f6056" translate="yes" xml:space="preserve">
          <source>].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86f7e437faa5a7fce15d1ddcb9eaeaea377667b8" translate="yes" xml:space="preserve">
          <source>a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a2e9827f39cd5964747d42c4ba3c85f2ce399b6" translate="yes" xml:space="preserve">
          <source>a &lt;b&gt;tcl_precision&lt;/b&gt; value of 17 digits is &amp;ldquo;perfect&amp;rdquo; for IEEE floating-point in that it allows double-precision values to be converted to strings and back to binary with no loss of information. For this reason, you will often see it as a value in legacy code that must run on Tcl versions before 8.5. It is no longer recommended; as noted above, a zero value is the preferred method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdacb56e5e7275ada9c2b92ea23665bbc2c335b4" translate="yes" xml:space="preserve">
          <source>a different program</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="034c9006ee434b2ff67b4e9f929e6dd8841d2343" translate="yes" xml:space="preserve">
          <source>a dynamic setting specified by &lt;b&gt;&lt;a href=&quot;ttk_style.htm&quot;&gt;style map&lt;/a&gt;&lt;/b&gt; and the current state;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5c358abbcef453cf7a36cef07935c091bf2d810" translate="yes" xml:space="preserve">
          <source>a longer sequence (in terms of number of events matched) is more specific than a shorter sequence;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="761dfa6042d762a2eb7f15b3bf4b091c5a16bc7a" translate="yes" xml:space="preserve">
          <source>a sequence of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b52f02d3dbf1419017e235881c6561ac7603288" translate="yes" xml:space="preserve">
          <source>a sequence of 0 or 1 matches of the atom</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c789ac60ffb3a4856f62a0cc113a4a9eb99a3e78" translate="yes" xml:space="preserve">
          <source>a sequence of 0 or more matches of the atom</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37235ff249a4a2dc93bed2d89eba1468f3102441" translate="yes" xml:space="preserve">
          <source>a sequence of 1 or more matches of the atom</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee9f58ec4cab4a6fa0e1fcad0f81a5d8a0f803e2" translate="yes" xml:space="preserve">
          <source>a sequence of exactly</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba8c4bde397c94e6f53a5cdec5cce798141abab4" translate="yes" xml:space="preserve">
          <source>a virtual event whose physical pattern matches the sequence is less specific than the same physical pattern that is not associated with a virtual event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85e73d2d3b115c679f21d29eb310183200675cbf" translate="yes" xml:space="preserve">
          <source>a white-space character or &amp;ldquo;&lt;b&gt;#&lt;/b&gt;&amp;rdquo; preceded by &amp;ldquo;&lt;b&gt;\&lt;/b&gt;&amp;rdquo; is retained</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1cbfa6506ca1b397312ea3ad524ac7303a74c54" translate="yes" xml:space="preserve">
          <source>a, b,...,n</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fbb397449fabe7370de4e726a586750c0e025d4" translate="yes" xml:space="preserve">
          <source>above</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de970bcf51c59aff29b629957461971a3d35291f" translate="yes" xml:space="preserve">
          <source>above it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e70f61d44ec56c527a83b24c671d7a18dc65a305" translate="yes" xml:space="preserve">
          <source>above the &lt;b&gt;^&lt;/b&gt;'s in the grid. The number of &lt;b&gt;^&lt;/b&gt;'s in a row must match the number of columns spanned by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a531e4af3a9dd3591d9e27d5a68d3484b3e051d0" translate="yes" xml:space="preserve">
          <source>aboveThis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da4dbfbc4fdc56237451cf5e9f9933b2b64f1ba6" translate="yes" xml:space="preserve">
          <source>absolute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6a03d7861bfc83405bd5e38549a05c4b6414d6f" translate="yes" xml:space="preserve">
          <source>accept the full range of point-in-time specifications specified in ISO8601. Other formats can be recognized by giving an explicit &lt;b&gt;-format&lt;/b&gt; option to the &lt;b&gt;clock scan&lt;/b&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f12541afcce175fb34bb05a79c95b76e765488b" translate="yes" xml:space="preserve">
          <source>access</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad4b7c2754fa2c5fb63ed55b089cd94956cbcf0" translate="yes" xml:space="preserve">
          <source>access the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60bff55abb2ae852e3f56b330681a36c934d4bcf" translate="yes" xml:space="preserve">
          <source>accessPath</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae40a0de01f6584ad3dcf8601653bd7176a5250" translate="yes" xml:space="preserve">
          <source>accessibility (high contrast, large type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bb115a31a98f0c918f569435318587424d97a0f" translate="yes" xml:space="preserve">
          <source>according to the &lt;b&gt;-translation&lt;/b&gt; option for these channels (see &lt;b&gt;chan configure&lt;/b&gt; above). The translations mean that the number of bytes read from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bec036db433cffe9577d04471f38eb4e97c03b12" translate="yes" xml:space="preserve">
          <source>according to the &lt;b&gt;-translation&lt;/b&gt; option for these channels. See the manual entry for &lt;b&gt;&lt;a href=&quot;fconfigure.htm&quot;&gt;fconfigure&lt;/a&gt;&lt;/b&gt; for details on the &lt;b&gt;-translation&lt;/b&gt; option. The translations mean that the number of bytes read from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63cd71824b8277cad2c313b02bae4cb3ea92290a" translate="yes" xml:space="preserve">
          <source>according to the current locale. If additional arguments past</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dff59bdf0486f9d097a745d57e91743e3647b82" translate="yes" xml:space="preserve">
          <source>according to the pattern:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eb354c27c987c802f637d3f90851ef38412533b" translate="yes" xml:space="preserve">
          <source>according to the relational operator given by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9288681b5ede18eedca6305df2a71172a9690ed7" translate="yes" xml:space="preserve">
          <source>adapt to display limitations (low-color, grayscale, monochrome, tiny screens)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46e1a2d34abaf962c6b519d6e5d45e2688d6b43a" translate="yes" xml:space="preserve">
          <source>add2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00926c40438f9f8f6693a93e815909416f63a54a" translate="yes" xml:space="preserve">
          <source>addr</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c662180230cad14787d4ab7e77aa08681ce783fa" translate="yes" xml:space="preserve">
          <source>address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e62854369199d65b6a66cd90fe8203ac4d5be26c" translate="yes" xml:space="preserve">
          <source>advanced</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e74ab4237bc87407f652d17cb20a413772d617e" translate="yes" xml:space="preserve">
          <source>advised to change these fonts, as they may be modified by Tk itself in response to system changes. Instead, make a copy of the font and modify that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="405906c9d5be6ae5393ca65fb0e7c38e0d585ecb" translate="yes" xml:space="preserve">
          <source>after</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="344008df58322f19ceb35d16db26dd2f67d48ee4" translate="yes" xml:space="preserve">
          <source>after &amp;mdash; Execute a command after a time delay</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a895e8f2d9692f9a577bcb1fa5ea6033fc6dc83" translate="yes" xml:space="preserve">
          <source>after and including the last dot in the last element of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21c7b77853d77927e08ff005501996c2c3dad9e2" translate="yes" xml:space="preserve">
          <source>after the HTTP transaction completes. This option causes &lt;b&gt;::http::geturl&lt;/b&gt; to return immediately. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be52d8363a07df7564d58135147ae8ed7c4fa40d" translate="yes" xml:space="preserve">
          <source>again . Unlocking the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b51c31d9cefe279357b4ce4a42fb82aa010a365f" translate="yes" xml:space="preserve">
          <source>against</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe6f72f901c6371ce25f420b4a4d3224d343c1a0" translate="yes" xml:space="preserve">
          <source>against the names of the elements in the array. If not specified,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aecacb60498db1776fd7390ca5f121d87458baf" translate="yes" xml:space="preserve">
          <source>against which any output sent to &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TclLib/GetStdChan.htm&quot;&gt;stderr&lt;/a&gt;&lt;/b&gt; or &lt;b&gt;errorChannel&lt;/b&gt; during evaluation of the script(s) will be compared. Note that only output printed using the global &lt;b&gt;&lt;a href=&quot;puts.htm&quot;&gt;puts&lt;/a&gt;&lt;/b&gt; command is used for comparison. If &lt;b&gt;-errorOutput&lt;/b&gt; is not specified, output sent to &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TclLib/GetStdChan.htm&quot;&gt;stderr&lt;/a&gt;&lt;/b&gt; and &lt;b&gt;errorChannel&lt;/b&gt; is not processed for comparison.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f09ecc6ec4597e71f5d3090c607103c0f06503e0" translate="yes" xml:space="preserve">
          <source>against which any output sent to &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TclLib/GetStdChan.htm&quot;&gt;stdout&lt;/a&gt;&lt;/b&gt; or &lt;b&gt;outputChannel&lt;/b&gt; during evaluation of the script(s) will be compared. Note that only output printed using the global &lt;b&gt;&lt;a href=&quot;puts.htm&quot;&gt;puts&lt;/a&gt;&lt;/b&gt; command is used for comparison. If &lt;b&gt;-output&lt;/b&gt; is not specified, output sent to &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TclLib/GetStdChan.htm&quot;&gt;stdout&lt;/a&gt;&lt;/b&gt; and &lt;b&gt;outputChannel&lt;/b&gt; is not processed for comparison.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab6bf08b33bca3e2e7b5137a92f685aad179bd6" translate="yes" xml:space="preserve">
          <source>against which the return value from script will be compared. The default value is an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1962c232baf51a73d4e92a000b0582c270634f7" translate="yes" xml:space="preserve">
          <source>agua</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27428a051111f05b13f941652832e7ba4a594fed" translate="yes" xml:space="preserve">
          <source>alert (bell) character, as in C</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdb6fdbe91faa53a7c573c80b7c18108c73c0480" translate="yes" xml:space="preserve">
          <source>alias</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76844f9a26c34f78038b237c88503d6ceddb455b" translate="yes" xml:space="preserve">
          <source>alice blue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d87c448044defb778f33158d8ccf94a20531d600" translate="yes" xml:space="preserve">
          <source>all</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96459c81b0b7a0162acb7a91b0f7868978189d7b" translate="yes" xml:space="preserve">
          <source>allocations have been performed, &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TclLib/Alloc.htm&quot;&gt;ckalloc&lt;/a&gt;&lt;/b&gt; outputs a message to this effect and that it is now attempting to enter the C debugger. Tcl will then issue a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e289ed4a1f2480e814c239c45d6a40a2b5ab1432" translate="yes" xml:space="preserve">
          <source>allrows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2681b9c80ecd5edeed8711a3a98148e0ff1a5d7a" translate="yes" xml:space="preserve">
          <source>alnum</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf90af25a39ea503986b7866e89c73f80a4d52d0" translate="yes" xml:space="preserve">
          <source>alphaValue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc51f9e5452f2b6811cbb990b3570f32bdad8660" translate="yes" xml:space="preserve">
          <source>already exists within the ensemble, then the &lt;b&gt;part&lt;/b&gt; command returns an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab070e338376e20dd0009bd97e4e68676e6de757" translate="yes" xml:space="preserve">
          <source>already exists, it is moved from its old position; if it does not exist, a new mark is created. This command returns an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa96e7f78214de0ef82e361e0553d60eafaf4663" translate="yes" xml:space="preserve">
          <source>already exists, or if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="121ac8a26b1cd3bb61287a93851e396e2db6f352" translate="yes" xml:space="preserve">
          <source>already exists, or if a command called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a592c4ffd71edbef2e87002682ed35d33a89cfb8" translate="yes" xml:space="preserve">
          <source>already exists. If &lt;b&gt;-parent&lt;/b&gt; is specified, the new theme will inherit styles, elements, and layouts from the parent theme</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc005f5c8a66de2ce9c2af847ef15b8b5e558e5e" translate="yes" xml:space="preserve">
          <source>also returns &amp;ldquo;&lt;b&gt;abc,foo,def&lt;/b&gt;&amp;rdquo;, not &amp;ldquo;&lt;b&gt;abc,3,def&lt;/b&gt;&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0823589ae70b276a6102ec689a013c20b365ec3f" translate="yes" xml:space="preserve">
          <source>alter the way that the &lt;b&gt;&lt;a href=&quot;expr.htm&quot;&gt;expr&lt;/a&gt;&lt;/b&gt; command behaves, and nor does defining any new commands in the &lt;b&gt;::tcl::mathop&lt;/b&gt; namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6656018ac96d0295d887ff2893ba9af66ae16af2" translate="yes" xml:space="preserve">
          <source>always</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d994b6e19eeda8773162d29061396842997921b3" translate="yes" xml:space="preserve">
          <source>always contain text indices in one of the above forms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1323345cf8d615b301522025835701b6a615493d" translate="yes" xml:space="preserve">
          <source>among several patterns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cb6ff12fb81d5cd585d45ce555565a410036da6" translate="yes" xml:space="preserve">
          <source>amount</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daf72d39376781d2a49d7d5bac47ac00cff94971" translate="yes" xml:space="preserve">
          <source>an event pattern that specifies a specific button or key is more specific than one that does not;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff57f8b586fbbf439314a952bcfd904d242b442" translate="yes" xml:space="preserve">
          <source>an object will do but not</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28688fc18394f5ee08d1750a4fa873b523a67db2" translate="yes" xml:space="preserve">
          <source>an option of the same name and type in the widget containing the element;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f06df609aed50661247cc6ec96c1599c193c3ec4" translate="yes" xml:space="preserve">
          <source>anchor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4ec25d09b116e9a3306f8110449386bb7be2866" translate="yes" xml:space="preserve">
          <source>anchorPos</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1ad91132824003256592a26972ef0b51941e3ed" translate="yes" xml:space="preserve">
          <source>and 0 otherwise. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b53bb48a0ef8e6c314abe5302e0b925954bbf07" translate="yes" xml:space="preserve">
          <source>and &lt;b&gt;-16&lt;/b&gt; stored in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c70cfa830ebf659aa77367f264544b07670867c5" translate="yes" xml:space="preserve">
          <source>and &lt;b&gt;020304&lt;/b&gt; stored in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef0d92431fed1661a6d2c742ff6af9df59ce096" translate="yes" xml:space="preserve">
          <source>and &lt;b&gt;051f34&lt;/b&gt; stored in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9745a453f0e1f74544d335d955f45d363b34b4f" translate="yes" xml:space="preserve">
          <source>and &lt;b&gt;1000011100000101&lt;/b&gt; stored in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c764163baa2ce67afaa5d5f3af264f14551b5886" translate="yes" xml:space="preserve">
          <source>and &lt;b&gt;1110000110100000&lt;/b&gt; stored in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a3b62631902762d04139a4b8a6f020dd911dfe" translate="yes" xml:space="preserve">
          <source>and &lt;b&gt;502143&lt;/b&gt; stored in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1b15526191b30a94e607c57a0da5035a8b5b717" translate="yes" xml:space="preserve">
          <source>and &lt;b&gt;5&lt;/b&gt; stored in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caefb4944e93b630237b7ca936a5b0658391c304" translate="yes" xml:space="preserve">
          <source>and &lt;b&gt;after idle&lt;/b&gt; forms of the command assume that the application is event driven: the delayed commands will not be executed unless the application enters the event loop. In applications that are not normally event-driven, such as &lt;b&gt;&lt;a href=&quot;../usercmd/tclsh.htm&quot;&gt;tclsh&lt;/a&gt;&lt;/b&gt;, the event loop can be entered with the &lt;b&gt;&lt;a href=&quot;vwait.htm&quot;&gt;vwait&lt;/a&gt;&lt;/b&gt; and &lt;b&gt;&lt;a href=&quot;update.htm&quot;&gt;update&lt;/a&gt;&lt;/b&gt; commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f3ea1263fe354b1a1abaea9c1143c043077794" translate="yes" xml:space="preserve">
          <source>and a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47c1d60727dfa4e8462c72d20e67a2db064ddbb8" translate="yes" xml:space="preserve">
          <source>and a minor number greater than</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83cc0edd5a72013a9ed7caef54b9fc272a3137a7" translate="yes" xml:space="preserve">
          <source>and a new command, called a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="588423910d343d81db3ae1dc4d74b9c013117261" translate="yes" xml:space="preserve">
          <source>and a small</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dced9f25d63306f7f2072eda3f7b70dab2626f7d" translate="yes" xml:space="preserve">
          <source>and all of its ancestors up through the nearest toplevel window are mapped. Returns 0 if any of these windows are not mapped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bed4f1e450cfa1cee3454f7b21e742c295d37fd9" translate="yes" xml:space="preserve">
          <source>and all of their descendants. The root item may not be deleted. See also: &lt;b&gt;detach&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bab3e293e424c711fb965241b4ac9719742de334" translate="yes" xml:space="preserve">
          <source>and all the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13068e9b48442028e22abecee99a9f3ffaef667c" translate="yes" xml:space="preserve">
          <source>and also returned as result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="951245432da975fbd6b946e3dc93641395825833" translate="yes" xml:space="preserve">
          <source>and assigns a single value to the variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873fb5cd09aee51763682a95d6759fe2b34f4cf7" translate="yes" xml:space="preserve">
          <source>and claims ownership of the clipboard on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa6a0f69eca2aa34963ce741f2201325bdd34a81" translate="yes" xml:space="preserve">
          <source>and description</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="962a966a8fccf789fcbd8d42a29be7b52a9ab4eb" translate="yes" xml:space="preserve">
          <source>and ending just before</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0ba19e1d2b0726679fecb30ea3fe5ec25c9a239" translate="yes" xml:space="preserve">
          <source>and ending just before the one whose index is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7789bfab6097a7a1f9fae7cde4145d9a7379f1b5" translate="yes" xml:space="preserve">
          <source>and ending with the character whose index is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a19907ef7ce3578ea68ac2b5a739ac889c861852" translate="yes" xml:space="preserve">
          <source>and ending with the one just before</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc10cd2510d8d4ab674b11ee52dc775051abc4dd" translate="yes" xml:space="preserve">
          <source>and evaluates some code in that context. If the namespace does not already exist, it is created. If more than one</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3b3604e39e4d1fde9577a589768cd7965105dfb" translate="yes" xml:space="preserve">
          <source>and executes that context by calling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b555e2858d158a18e6f921c59696e5acf948083c" translate="yes" xml:space="preserve">
          <source>and following</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd1f27c52625ac2cd4843a1e1f69b06f84442e85" translate="yes" xml:space="preserve">
          <source>and in particular</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe367e6f8f18cc282052fdd3cbf6c4bce97bb96" translate="yes" xml:space="preserve">
          <source>and interprets as MySQL native SQL code and evaluates it without preparing it. The statement may not contain variable substitutions. The result set is returned as a list of lists, with each sublist being the list of columns of a result row formatted as character strings. Note that the string formatting is done by MySQL and not by Tcl, so details like the appearance of floating point numbers may differ.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b8fc4a9490c13bd5acad4cf0af99ce312dcc0e" translate="yes" xml:space="preserve">
          <source>and it has the same global/local form as the requested grab, then the command does nothing. Returns an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adf3bf412f556b0fd4223c98a3b0a70926d109ec" translate="yes" xml:space="preserve">
          <source>and it will also be displayed as the label in the option menubutton. The user can click on the menubutton to display a menu containing all of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e8c06650079f80229cd172d80eadccd95bb745c" translate="yes" xml:space="preserve">
          <source>and its associated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5007b21ebe415f1fd1e9338bc6e74a9ca4ef7425" translate="yes" xml:space="preserve">
          <source>and must be one of &lt;b&gt;cascade&lt;/b&gt;, &lt;b&gt;checkbutton&lt;/b&gt;, &lt;b&gt;command&lt;/b&gt;, &lt;b&gt;radiobutton&lt;/b&gt;, or &lt;b&gt;separator&lt;/b&gt;, or a unique abbreviation of one of the above. If additional arguments are present, they specify the options listed in the &lt;b&gt;&lt;a href=&quot;#M48&quot;&gt;MENU ENTRY OPTIONS&lt;/a&gt;&lt;/b&gt; section below. The &lt;b&gt;add&lt;/b&gt; widget command returns an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78f695f6c9015b9670ac137ed18f45c86d6c4078" translate="yes" xml:space="preserve">
          <source>and must have one of the values below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4243c09fe7d5d1508329112f6e2fa074a7b5409e" translate="yes" xml:space="preserve">
          <source>and no default is given, then the &lt;b&gt;switch&lt;/b&gt; command returns an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e74632c4078ed9804f4b059f13cca7952a5bc88" translate="yes" xml:space="preserve">
          <source>and no earlier than the character at</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88a488c2a88b35203972b7772402205f2fdab3c2" translate="yes" xml:space="preserve">
          <source>and no later than the character just before</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eee902bf5a90e82a6641a66e675d08d0265f6fb" translate="yes" xml:space="preserve">
          <source>and performs substitutions as described below. These substitutions are performed in the same way for all commands. Secondly, the first word is used to locate a command procedure to carry out the command, then all of the words of the command are passed to the command procedure. The command procedure is free to interpret each of its words in any way it likes, such as an integer, variable name, list, or Tcl script. Different commands interpret their words differently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c390ee30d6ca0e3cc0910bb97674ca86b1670533" translate="yes" xml:space="preserve">
          <source>and renames it to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d0d52b44459117b1266b7ef0f119af42b8e8cfd" translate="yes" xml:space="preserve">
          <source>and result will be the number of characters that have been read or -1 if end-of-file was reached or, in non-blocking mode, if the data available is exhausted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9a0fd123f9f701858009ad1e3a1647ddc60621e" translate="yes" xml:space="preserve">
          <source>and returns 1 if it does, 0 if it does not, unless &lt;b&gt;-inline&lt;/b&gt; is specified (see below). (Regular expression matching is described in the &lt;b&gt;&lt;a href=&quot;re_syntax.htm&quot;&gt;re_syntax&lt;/a&gt;&lt;/b&gt; reference page.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="379412a9e08d2ba2b749868c7ac09911ab683948" translate="yes" xml:space="preserve">
          <source>and returns an empty string. If the &lt;b&gt;-displayof&lt;/b&gt; option is omitted, the display of the application's main window is used by default. The command uses the current bell-related settings for the display, which may be modified with programs such as &lt;b&gt;xset&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fba34c208ed7c8d0b627a9f4c37a80eaa747872" translate="yes" xml:space="preserve">
          <source>and returns an empty string. If the application does not currently have the input focus on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5643a7c79e580cac97d9b85fa6b8526682a1582f" translate="yes" xml:space="preserve">
          <source>and returns its result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22c90b3404523d2bc269eebd88e88e83b9b481ef" translate="yes" xml:space="preserve">
          <source>and returns the empty string. This method must always be called from a stack frame created by a call to &lt;b&gt;oo::define&lt;/b&gt; or &lt;b&gt;oo::objdefine&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="706d3d355eb342fe05b518ede758d061cf7bc136" translate="yes" xml:space="preserve">
          <source>and returns the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ae58af1e4fb58cfb4dad611bda51b1ffb362a50" translate="yes" xml:space="preserve">
          <source>and returns the value to caller . The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="880551cf3861677b197e9fd9fd253d1df33553dc" translate="yes" xml:space="preserve">
          <source>and returns true (1) if it does or false (0) if it doesn't .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fff4ae58b360cff82ad6f442febcbbbaafb89014" translate="yes" xml:space="preserve">
          <source>and returns true, if this locale is loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf58fe8d90302a10e9bfdc395c85e4cb80d60bd3" translate="yes" xml:space="preserve">
          <source>and sends it to the server indicated by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b761a3a38c7901305c9be1c84c0a7ef829db264" translate="yes" xml:space="preserve">
          <source>and sets new values from the list atomically .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e5526c8c6cfca2889884356711c853dab595697" translate="yes" xml:space="preserve">
          <source>and someone attempts to retrieve it in the form given by type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f26931fa67a2cb6e2456347a76ec82e7cf04d8e1" translate="yes" xml:space="preserve">
          <source>and stopping just before</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d402cb5ba5ced669d83f33b900f232ec58d72a" translate="yes" xml:space="preserve">
          <source>and the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9583670033e9c53898eca96af07b226e56815fb5" translate="yes" xml:space="preserve">
          <source>and the canvas's current view; used in conjunction with later &lt;b&gt;scan dragto&lt;/b&gt; commands. Typically this command is associated with a mouse button press in the widget and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7991ac048cee651fc777f5e26f1450fea710731f" translate="yes" xml:space="preserve">
          <source>and the character typed is an open square bracket, then the script actually executed will be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95780090b06378817a85d4086d343a4166ad55c9" translate="yes" xml:space="preserve">
          <source>and the command returns 1 if the key was present within the list . If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b32b724ad96cb6dfca691418fd6b306071e122d5" translate="yes" xml:space="preserve">
          <source>and the current namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb47b7b93f9704d76e6687c520d0e7a44554f25a" translate="yes" xml:space="preserve">
          <source>and the current namespace. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d8808aae62852c3bc7f1076b2c582d58b00728b" translate="yes" xml:space="preserve">
          <source>and the current view in the entry window; used in conjunction with later &lt;b&gt;scan dragto&lt;/b&gt; commands. Typically this command is associated with a mouse button press in the widget. It returns an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c02501bcf8b3cbba77caadfc10e531cee4e33f0" translate="yes" xml:space="preserve">
          <source>and the current view in the listbox window; used in conjunction with later &lt;b&gt;scan dragto&lt;/b&gt; commands. Typically this command is associated with a mouse button press in the widget. It returns an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff3b976443d45882852be24a0e4e5cc44ec6b8d2" translate="yes" xml:space="preserve">
          <source>and the current view in the spinbox window; used in conjunction with later &lt;b&gt;scan dragto&lt;/b&gt; commands. Typically this command is associated with a mouse button press in the widget. It returns an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d2c2a17c1ace05b48da52ba509f9726b49953bf" translate="yes" xml:space="preserve">
          <source>and the current view in the text window, for use in conjunction with later</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ae9ada3a8e8092225bfa8180019af1e31a0d481" translate="yes" xml:space="preserve">
          <source>and the interpreter identified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b827184831322321edc28519101775257268468" translate="yes" xml:space="preserve">
          <source>and the menu will be positioned so that the entry is positioned over the given point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c33d4f1943b81f0bcecf4a3f5ac7a868bbad864" translate="yes" xml:space="preserve">
          <source>and the most recent selection anchor point, inclusive. Returns an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad90096bd606fe2f297d1c1e191636ba1a34abd5" translate="yes" xml:space="preserve">
          <source>and the new interpreter is called a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cff4180cbb711b464379a8238675cbc9cd60ca9" translate="yes" xml:space="preserve">
          <source>and the second element of each pair is the value of the array element. The order of the pairs is undefined. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="996e61db199d8db23e3cfd22825cb157b393bc77" translate="yes" xml:space="preserve">
          <source>and the second must be the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21772e16dea2f910a1dfad53386a8f55e55ce456" translate="yes" xml:space="preserve">
          <source>and the substitutions performed on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b6ede535d3a7fa526395666d012a432238494c4" translate="yes" xml:space="preserve">
          <source>and the text widget. If multiple peer widgets are in use, it is usually simpler to use the &lt;b&gt;-create&lt;/b&gt; option if embedded windows are desired in each peer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfdbb4e546e8f9da312c98f25a1e8830e631b372" translate="yes" xml:space="preserve">
          <source>and the value to the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d34ac66ab4c11359c81c6a8bbe2eced0b3446c1a" translate="yes" xml:space="preserve">
          <source>and then itself calls &lt;b&gt;vwait&lt;/b&gt; to wait for a different variable, then it may not return for a long time. During this time the top-level &lt;b&gt;vwait&lt;/b&gt; is blocked waiting for the event handler to complete, so it cannot return either. (See the &lt;b&gt;&lt;a href=&quot;#M6&quot;&gt;NESTED VWAITS BY EXAMPLE&lt;/a&gt;&lt;/b&gt; below.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e37b96609e27df41aae6ad329164cd726b22f12" translate="yes" xml:space="preserve">
          <source>and this is good practice when writing library procedures. Also, in conjunction with the &lt;b&gt;&lt;a href=&quot;../tkcmd/bind.htm&quot;&gt;bind&lt;/a&gt;&lt;/b&gt; command, the &quot;%q&quot; field can be used in place of &quot;%W&quot; as the access command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39daedc0ac0ec0f7ee3ba207c41e3b9562e9610d" translate="yes" xml:space="preserve">
          <source>and unavailable in the interpreter identified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97887047db6681e62eb081a8bea73b2f8a642e5e" translate="yes" xml:space="preserve">
          <source>and unsets the element, all in one atomic operation .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99bcbcedc0f6e36143b8877a982826b14dce0825" translate="yes" xml:space="preserve">
          <source>and value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66f543b0e7e9fa58af5380866c466a5eaa357cd8" translate="yes" xml:space="preserve">
          <source>and waiting on the condition variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da0ebf21aa71f465a16faf69dc59cc7b0aa40c5a" translate="yes" xml:space="preserve">
          <source>and whether or not the target interpreter is a safe one. For normal interpreters the name of the initialization procedure will have the form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee12a6c4352b1c487d90f4782621fe6b83a6a13" translate="yes" xml:space="preserve">
          <source>and which has the capability to write a string containing this image data. If this option is not given, this subcommand uses a format that consists of a list (one element per row) of lists (one element per pixel/column) of colors in &amp;ldquo;&lt;b&gt;#&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc46fce04922a35f1f82c0877d8142f2ef789be5" translate="yes" xml:space="preserve">
          <source>and which has the capability to write an image file. If this option is not given, the format is guessed from the file extension. If that cannot be determined, this subcommand uses the first handler that has the capability to write an image file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="747f2f2d6ce2b0bbd529857631f9868a336e6dae" translate="yes" xml:space="preserve">
          <source>and whose contents come from the additional arguments. The resulting binary value is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0e28020be543be31dc887d5ff62beb939e57c8d" translate="yes" xml:space="preserve">
          <source>and whose optional second element is the desired</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d213b8253a6ac57a92bee0fe19ab87bfd972407c" translate="yes" xml:space="preserve">
          <source>and write</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ebd83626d029712a9b88108404e52ead09635d0" translate="yes" xml:space="preserve">
          <source>and, depending on what the outcome of that script is (normal exit, error, or some other exceptional result), runs a handler script to deal with the case. Once that has all happened, if the &lt;b&gt;finally&lt;/b&gt; clause is present, the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1984b3f0f414311b8ef4635a3d1f1c7c5e19c5ad" translate="yes" xml:space="preserve">
          <source>and, of course: eye candy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c851fb5bfe71398eb9930bce479293554893e53" translate="yes" xml:space="preserve">
          <source>antique white</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5fe0200d1c7a5139bd18fd22268c4ca8bf45e90" translate="yes" xml:space="preserve">
          <source>any</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d3fa8bdcfd1556477af57b753e5a75f8b89bc04" translate="yes" xml:space="preserve">
          <source>any character string that does not contain any wild card characters (* and ?).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dbe123225d920530f84014145a2950172096e13" translate="yes" xml:space="preserve">
          <source>any number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf3cd6a14c77410f4baf0290668c3b5f0b780593" translate="yes" xml:space="preserve">
          <source>any script executed in level-2.1 may be executed at the same stack level as the script defined for level-1.1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e41a892e2a1dd3632934ec85c90c9b03dd9c23" translate="yes" xml:space="preserve">
          <source>anymore in no way. Upon this subcommand being called, any internal resources allocated to this channel must be cleaned up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f3ca0fd5c6ae20f4040071448cf092d257c9da2" translate="yes" xml:space="preserve">
          <source>anywhere in their heritage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d1043473d55bfa90e8530d35801d4e381bc69f0" translate="yes" xml:space="preserve">
          <source>app</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f66d6fceed5573e2edb4a68d8e2ed4017710cb95" translate="yes" xml:space="preserve">
          <source>app cmd</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f372c8714ade23a9c9f81d037e008cb2cab6587" translate="yes" xml:space="preserve">
          <source>appears at the beginning of the widget. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0999ab78a6393527c74377aa8487ce29c98d6257" translate="yes" xml:space="preserve">
          <source>appears at the top of the top line of the window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6e4f097d82e5ed3b15e3e69b9e457d5990d0227" translate="yes" xml:space="preserve">
          <source>appears at the top of the window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f6159b79402b389acea314e5158456a55402e08" translate="yes" xml:space="preserve">
          <source>appears in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b59ec04ac0e4ced8fc6616fca48e78e078bac8ea" translate="yes" xml:space="preserve">
          <source>appears in the window:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db43bff34c78044870bc6b1ae2aa16902bb1bb8a" translate="yes" xml:space="preserve">
          <source>append</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09e2dc7a796362c3768fc726c220be29931ec775" translate="yes" xml:space="preserve">
          <source>append &amp;mdash; Append to variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4127e017f8bd62669e59318c3a90ea11806977ca" translate="yes" xml:space="preserve">
          <source>application suite branding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69f45da1683c501696ebfa086d25192af3807dc6" translate="yes" xml:space="preserve">
          <source>apply</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33dc01471a1cd8fed9e26041353b9bb3bda89ad7" translate="yes" xml:space="preserve">
          <source>apply &amp;mdash; Apply an anonymous function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f364840671b5cc8009a9b6dcd471a65c4e26bf29" translate="yes" xml:space="preserve">
          <source>aquamarine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="816944cdf5277cef8b0560f3c5eed2aa19d8fc9e" translate="yes" xml:space="preserve">
          <source>aquamarine1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b52e119f3476c24326a046373864b1f5ebe2f4a" translate="yes" xml:space="preserve">
          <source>aquamarine2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f8a35ec8cef177f26ac72a1fa3b1cf36d681e37" translate="yes" xml:space="preserve">
          <source>aquamarine3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bff0695ceb138192d4ba7a3a555371ff941150d" translate="yes" xml:space="preserve">
          <source>aquamarine4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a36f117812e69f1a5ab7e32a43b6e3db24618b2" translate="yes" xml:space="preserve">
          <source>arch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f9e5802bbabc71f9275fccf122f5a52b8599f12" translate="yes" xml:space="preserve">
          <source>are</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46341b61f046d7aea12cd0890d2e4e1e9c611958" translate="yes" xml:space="preserve">
          <source>are &amp;ldquo;&lt;b&gt;-symbolic&lt;/b&gt;&amp;rdquo; and &amp;ldquo;&lt;b&gt;-hard&lt;/b&gt;&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6042a19ba451a620e1f4719e2607f8615bf0642f" translate="yes" xml:space="preserve">
          <source>are -1 (default, use system default for text AA), 0 (no text AA), 1 (use text AA).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="886921df5fd703c3a3e7bf7a1ab1f0e3c2b903b8" translate="yes" xml:space="preserve">
          <source>are &lt;b&gt;&lt;a href=&quot;regexp.htm&quot;&gt;regexp&lt;/a&gt;&lt;/b&gt;, &lt;b&gt;&lt;a href=&quot;glob.htm&quot;&gt;glob&lt;/a&gt;&lt;/b&gt;, &lt;b&gt;exact&lt;/b&gt;, and any value registered by a prior call to &lt;b&gt;customMatch&lt;/b&gt;. The default value is &lt;b&gt;exact&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b49b3d68e9769f04fd08c2567f6a871addc82c6" translate="yes" xml:space="preserve">
          <source>are adjusted so that the chain of dictionaries no longer exists. The result of &lt;b&gt;dict with&lt;/b&gt; is (unless some kind of error occurs) the result of the evaluation of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7615afa06fbde1bb114ad5c4937559c8be5f0fa3" translate="yes" xml:space="preserve">
          <source>are all specified, then they will be passed to the window manager and the window manager should use them to enforce a range of acceptable aspect ratios for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1d3a27c0d8b61e6a849764704366331dec5a001" translate="yes" xml:space="preserve">
          <source>are application defined; Tcl uses the service name &lt;b&gt;TclEval&lt;/b&gt;, while the topic name is the name of the interpreter given by &lt;b&gt;dde servername&lt;/b&gt;. Other applications have their own</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3579b49d9f4bedf32476c6df0d96fbc00d79420" translate="yes" xml:space="preserve">
          <source>are applied to them, in that order). If all values in the operation are integers, the result will be an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c26bfbbf6eabf6bd8983d2ed3805b69c24f3eb" translate="yes" xml:space="preserve">
          <source>are assigned consecutive values from the corresponding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8402747faceeed08bf9d1f86f9fc2bb4d04667a" translate="yes" xml:space="preserve">
          <source>are both empty strings ({}), then all service-topic pairs currently available on the system are returned. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbd60284c68ad36dc5b4e89fa9e53c77a6e970b8" translate="yes" xml:space="preserve">
          <source>are changed to the elements of the list. The elements of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73fd094f87c52dac1a9657fc12ee1e94cb53e5a2" translate="yes" xml:space="preserve">
          <source>are currently resizable. By default, windows are resizable in both dimensions. If resizing is disabled, then the window's size will be the size from the most recent interactive resize or &lt;b&gt;wm geometry&lt;/b&gt; command. If there has been no such operation then the window's natural size will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2c3ffd4f42ee3905a75f15f7b3a91d2dc82f1ab" translate="yes" xml:space="preserve">
          <source>are equivalent to the examples above, using the more readable string &quot;EAGAIN&quot;, this is not true for BSD, where the equivalent number is -35.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ec532d7c9f24e29a98695a78a2abd6cc1e376b3" translate="yes" xml:space="preserve">
          <source>are executed by the Tcl interpreter after the local variables corresponding to the formal arguments are given the values of the actual parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a09bf4f1865dc3342f20a3f221d1b1b333dd40ca" translate="yes" xml:space="preserve">
          <source>are font</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7fe1757941e90373e88d01b968135576738896d" translate="yes" xml:space="preserve">
          <source>are found and substitution is performed for each of these ranges. Without this switch only the first matching range is found and substituted. If &lt;b&gt;-all&lt;/b&gt; is specified, then &amp;ldquo;&amp;amp;&amp;rdquo; and &amp;ldquo;\</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92626c226b52a0b783118d32b555c6eb0a316031" translate="yes" xml:space="preserve">
          <source>are fully qualified with any namespace(s) in which they appear.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f00d6f67ea9480a9345a086030c293c2e4f5ed4" translate="yes" xml:space="preserve">
          <source>are generated and added to the package ifneeded database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d20839cbed3a22cd0084e87e687988cff98b1d2" translate="yes" xml:space="preserve">
          <source>are given, returns the settings for all options for the named safe interpreter as a list of options and their current values for that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b521104460fb114a964b6c37c9c410d8f34712" translate="yes" xml:space="preserve">
          <source>are given, the &lt;b&gt;&lt;a href=&quot;format.htm&quot;&gt;format&lt;/a&gt;&lt;/b&gt; command is used to substitute the additional arguments in the translation of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9caebc774788932160f98c8c6b8a1ba3b5f53a51" translate="yes" xml:space="preserve">
          <source>are identical, or 0 when not. If &lt;b&gt;-length&lt;/b&gt; is specified, then only the first</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b13353c0d64fb967d5539ecfbbe97116eafeeca" translate="yes" xml:space="preserve">
          <source>are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8092eb4511ae7302413e1c6666b6c66a94cf9ae" translate="yes" xml:space="preserve">
          <source>are ignored. If no</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f947078d3a82eadb01ea1af633045949c03883fc" translate="yes" xml:space="preserve">
          <source>are index values specifying the first and last elements of the range to replace. The index values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="663df2387d1c11592f21f305c974d5b5c7408d03" translate="yes" xml:space="preserve">
          <source>are indices specifying the first and last elements in the range to delete. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f67750f7612e8f2e6cd58bf96a5d3b1429d87030" translate="yes" xml:space="preserve">
          <source>are integers. The major version number increases in any Tk release that includes changes that are not backward compatible (i.e. whenever existing Tk applications and scripts may have to change to work with the new release). The minor version number increases with each new release of Tk, except that it resets to zero whenever the major version number changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1b060f8adeace5404875729584c54d6503ed569" translate="yes" xml:space="preserve">
          <source>are interpreted the same as index values for the command &lt;b&gt;&lt;a href=&quot;string.htm&quot;&gt;string index&lt;/a&gt;&lt;/b&gt;, supporting simple index arithmetic and indices relative to the end of the list. 0 refers to the first element of the list, and &lt;b&gt;end&lt;/b&gt; refers to the last element of the list. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4ee0a4c7522d65bf78fff3dacbb583175c831f1" translate="yes" xml:space="preserve">
          <source>are interpreted the same as index values for the command &lt;b&gt;&lt;a href=&quot;string.htm&quot;&gt;string index&lt;/a&gt;&lt;/b&gt;, supporting simple index arithmetic and indices relative to the end of the list. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09e467990ead3c0ea0eb1afded8c38cb7a4b1b35" translate="yes" xml:space="preserve">
          <source>are listed below. Note that you can abbreviate the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c9782f523fa0ba9081ffb66c7680ee91eac3e63" translate="yes" xml:space="preserve">
          <source>are not necessarily the same as the name used in the &lt;b&gt;trace variable&lt;/b&gt; command: the &lt;b&gt;&lt;a href=&quot;upvar.htm&quot;&gt;upvar&lt;/a&gt;&lt;/b&gt; command allows a procedure to reference a variable under a different name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="755bf98b8d39daafb3910e748eb6c0be870c2828" translate="yes" xml:space="preserve">
          <source>are not returned</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c57a1ef04a6b9c9e2b55c0d23a3ec1bf2b39a87" translate="yes" xml:space="preserve">
          <source>are not specified, the default value is (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b3eefdef877e3c22f3ba223691b3da5aef45d3" translate="yes" xml:space="preserve">
          <source>are not specified, the default value is the bottom-right corner of the source image. The pixels copied will include the left and top edges of the specified rectangle but not the bottom or right edges. If the &lt;b&gt;-from&lt;/b&gt; option is not given, the default is the whole source image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8c06439e67cd87d20ace0e90d350e454f4b5209" translate="yes" xml:space="preserve">
          <source>are omitted then the command returns a list of all the sequences for which bindings have been defined for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3a7c6e2a31120a9414942ffc03c4f8a4f2add7c" translate="yes" xml:space="preserve">
          <source>are omitted then the command returns a list with two 0/1 elements that indicate whether the width and height of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4439ec420fb0a961d3a53a62f3dfe9b50978458f" translate="yes" xml:space="preserve">
          <source>are omitted, returns the current value of the scale. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="635130312b2853b9fc782f6ba96df70f9032cf7a" translate="yes" xml:space="preserve">
          <source>are optional. If the &lt;b&gt;display&lt;/b&gt; submodifier is given, elided characters are skipped over without being counted. If &lt;b&gt;any&lt;/b&gt; is given, then all characters are counted. For historical reasons, if neither modifier is given then the count actually takes place in units of index positions (see &lt;b&gt;&lt;a href=&quot;#M24&quot;&gt;INDICES&lt;/a&gt;&lt;/b&gt; for details). This behavior may be changed in a future major release, so if you need an index count, you are encouraged to use &lt;b&gt;indices&lt;/b&gt; instead wherever possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e02b79f275c0b0ec9e2c6c46622073caaeacb455" translate="yes" xml:space="preserve">
          <source>are optional. If the &lt;b&gt;display&lt;/b&gt; submodifier is given, elided characters are skipped over without being counted. If &lt;b&gt;any&lt;/b&gt; is given, then all characters are counted. For historical reasons, if neither modifier is given then the count actually takes place in units of index positions (see &lt;b&gt;&lt;a href=&quot;#M24&quot;&gt;INDICES&lt;/a&gt;&lt;/b&gt; for details). This behaviour may be changed in a future major release, so if you need an index count, you are encouraged to use &lt;b&gt;indices&lt;/b&gt; instead wherever possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da97374b0066c503ea5156ee98b2810977afba7a" translate="yes" xml:space="preserve">
          <source>are optional. If the &lt;b&gt;display&lt;/b&gt; submodifier is given, elided indices are skipped over without being counted. If &lt;b&gt;any&lt;/b&gt; is given, then all indices are counted; this is also the default behaviour if no modifier is given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b810f78ea0ed174819969bdb51da090e6cf7b21" translate="yes" xml:space="preserve">
          <source>are optional. If the &lt;b&gt;display&lt;/b&gt; submodifier is given, then each visual display line is counted separately. Otherwise, if &lt;b&gt;any&lt;/b&gt; (or no modifier) is given, then each logical line (no matter how many times it is visually wrapped) counts just once. If the relevant lines are not wrapped, then these two methods of counting are equivalent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9ddf39e4a03f84b7496c83118e002890c40051c" translate="yes" xml:space="preserve">
          <source>are optional. Note that an index position is either a single character or a single embedded image or embedded window. If the &lt;b&gt;display&lt;/b&gt; submodifier is given, elided indices are skipped over without being counted. If &lt;b&gt;any&lt;/b&gt; is given, then all indices are counted; this is also the default behaviour if no modifier is given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6081635a41fa013903d6517eb1abb6f334ec9d1b" translate="yes" xml:space="preserve">
          <source>are pixel coordinates relative to the scale widget origin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba5a5d9ecb3716df904a55d37ca43a6bc4237151" translate="yes" xml:space="preserve">
          <source>are pixel coordinates relative to the scrollbar widget. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a608180192f6d19949125375a71d523eb8a8bf52" translate="yes" xml:space="preserve">
          <source>are pixel coordinates relative to the widget. Some widgets accept other &lt;b&gt;identify&lt;/b&gt; subcommands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff0be198b99e3900a0b5825af80d5cefdcd8d33" translate="yes" xml:space="preserve">
          <source>are positive integers specifying the desired dimensions of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40416a5e834061570231d9852413dc572c0c1ee1" translate="yes" xml:space="preserve">
          <source>are real fractions between 0 and 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83acc9cd87e5b4ffbfe1792d6e8bf0e3b4384c07" translate="yes" xml:space="preserve">
          <source>are removed. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2a2a4d93e76ac13e30c9606950ebc3731f56905" translate="yes" xml:space="preserve">
          <source>are required parameters and specify the Visual Styles class and part as given in the Microsoft documentation. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02c9f6a104f4ed31d839d8cbcf5f13090be20ff5" translate="yes" xml:space="preserve">
          <source>are returned to the default state described above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ff27772bfa700f8e7275d3a2d46ddd6182e06b" translate="yes" xml:space="preserve">
          <source>are returned, most recently manages first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67e6b1568ba79a6877d60d823b9f4ee289e407fa" translate="yes" xml:space="preserve">
          <source>are returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc4ccd0818a7d15f1e946178d8ff4f3f9b67950e" translate="yes" xml:space="preserve">
          <source>are returned. Matching is determined using the same rules as for &lt;b&gt;&lt;a href=&quot;string.htm&quot;&gt;string match&lt;/a&gt;&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2efacccd85fb95431e9bb666034257f7e852752d" translate="yes" xml:space="preserve">
          <source>are returned. Matching is determined using the same rules as for &lt;b&gt;&lt;a href=&quot;string.htm&quot;&gt;string match&lt;/a&gt;&lt;/b&gt;. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53273ec93b2bbdd9cfd4a40ca6634bd1fdb69f9c" translate="yes" xml:space="preserve">
          <source>are returned. Matching is determined using the same rules as for &lt;b&gt;&lt;a href=&quot;string.htm&quot;&gt;string match&lt;/a&gt;&lt;/b&gt;. If the specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="989f5d37d3babf3819a7917091ac8884938a6469" translate="yes" xml:space="preserve">
          <source>are set to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab9e0ebc7ab802eaa8fc51e5d072cc4be444df2" translate="yes" xml:space="preserve">
          <source>are shown under &lt;b&gt;&lt;a href=&quot;#M39&quot;&gt;TRANSACTION ISOLATION LEVELS&lt;/a&gt;&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6de2e6d0424bcf8c4e9229a39f568ccea919dda" translate="yes" xml:space="preserve">
          <source>are simply deleted. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ff75955cd00de388cd33c4d78ae20cc3eaf146b" translate="yes" xml:space="preserve">
          <source>are skipped, so that &lt;b&gt;tk_focusNext&lt;/b&gt; never returns a window in a different top-level from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16411f09bea3fba67d474afcf86ad3a0e48f4527" translate="yes" xml:space="preserve">
          <source>are skipped; processing continues by invoking the Tcl interpreter on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a7b8dd15ce23df33e2992f65c4974819baf6be2" translate="yes" xml:space="preserve">
          <source>are specified as empty strings then any existing icon position hint is cancelled. If neither</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4592469e28f4008d9cd3ca11cbaf25a92c53069f" translate="yes" xml:space="preserve">
          <source>are specified in screen units (i.e. any form acceptable to &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TkLib/GetPixels.htm&quot;&gt;Tk_GetPixels&lt;/a&gt;&lt;/b&gt;) in the coordinate system of the root window (if a virtual-root window manager is in use then the coordinate system of the virtual root window is used). If the &lt;b&gt;-displayof&lt;/b&gt; option is given then the coordinates refer to the screen containing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9929fe42bc7539b00fff7e73a6a175cc04ea35ef" translate="yes" xml:space="preserve">
          <source>are specified in the coordinate system of the canvas. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4244992debc72d1fe6664e0f0e376254602837b4" translate="yes" xml:space="preserve">
          <source>are specified, options are modified as indicated in the command and the command returns an empty string. If no</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c59cb674a0871bdd9c821aa489d20aada2cfe7d" translate="yes" xml:space="preserve">
          <source>are specified, returns a list describing the current options for entry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b265d22e6e641b50605ddcf5db8f3a0c3a2782e9" translate="yes" xml:space="preserve">
          <source>are specified, the region extends from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cabfb76e89a16ec60546e4f040f062c76c62310d" translate="yes" xml:space="preserve">
          <source>are specified, the region extends from (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2115809f0b61c138657caa40f9e0d4bc5d12e7aa" translate="yes" xml:space="preserve">
          <source>are specified, the source region will be replicated if necessary to fill the destination region in a tiled fashion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2269d4b560727b4138a2b501c94a3821f94e93ab" translate="yes" xml:space="preserve">
          <source>are specified, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83dbb6172aa6c17eba72b87c85a7e86147100815" translate="yes" xml:space="preserve">
          <source>are specified, then delete all the characters starting with the one given by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80195419d1ce8faaed44c335bd487940d618f74f" translate="yes" xml:space="preserve">
          <source>are specified, then the command returns an empty string. Otherwise it returns a Tcl list with two elements, which are the maximum width and height currently in effect. The maximum size defaults to the size of the screen. See the sections on geometry management below for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a97de2b4dae036ed38948e62714d2771927a5b2b" translate="yes" xml:space="preserve">
          <source>are specified, then the command returns an empty string. Otherwise it returns a Tcl list with two elements, which are the minimum width and height currently in effect. The minimum size defaults to one pixel in each dimension. See the sections on geometry management below for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad1cc24172bcbbc7b3df497b27a10ce0cde1459" translate="yes" xml:space="preserve">
          <source>are specified, they are boolean values that determine whether the width and height of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db47768219d0d03422cd5fed95517edd8a9b5f2" translate="yes" xml:space="preserve">
          <source>are specified, they are passed to the window manager as a hint about where to position the icon for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3902cf25907eadcee377ed33f84d54a7f1d5723" translate="yes" xml:space="preserve">
          <source>are specified, they give pixel coordinates within the widget; the command returns the scale value corresponding to the given pixel. Only one of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d4543aefe6aa16305b5977da9e9e154b13aac7" translate="yes" xml:space="preserve">
          <source>are specified, they give the maximum permissible dimensions for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8627e62cd28ef519e7419e311be418fb12fbce39" translate="yes" xml:space="preserve">
          <source>are specified, they give the minimum permissible dimensions for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c09f53d0d7773fe6f9b6d2422990fb8e7a9e78" translate="yes" xml:space="preserve">
          <source>are substituted when the alias's source command is parsed in the source interpreter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a5fa1fdc591e776fcf6afea8ecc196da0e7e27" translate="yes" xml:space="preserve">
          <source>are supplied, the command sets each of the named options to the corresponding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0ac18e626e117845fe769e98b609ec1d404e029" translate="yes" xml:space="preserve">
          <source>are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b83a62a56d791e154f44ec0b154efcc073d3ae" translate="yes" xml:space="preserve">
          <source>are temporarily disabled. This allows the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ad95fab684258c53ac9c1be316f66fe932ccbab" translate="yes" xml:space="preserve">
          <source>are the coordinates of the mouse. It returns an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8173ec28a82143f3d2ff15ccd505d2266e8f9024" translate="yes" xml:space="preserve">
          <source>are the root coordinates at which to display the menu. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5541f61eb6a6f6ce15d4e9405b8a15056f99aefb" translate="yes" xml:space="preserve">
          <source>are the root-window coordinates of the upper-right corner of the cascade entry. On Unix, the lower-level menu is unposted by executing a Tcl command with the form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a632a28147ba438476aa62b558eaad9534b36442" translate="yes" xml:space="preserve">
          <source>are the version and revision numbers provided by the server (e.g., &lt;b&gt;X11R5&lt;/b&gt;),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa1a474e3d8fb4da25df9ac888ff8f533739743" translate="yes" xml:space="preserve">
          <source>are to be read. The default is (0,0).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db1fcd95ec9c74fb339c52f1d69fb62eb7b26a0b" translate="yes" xml:space="preserve">
          <source>are treated as a list of arguments that describe a command pipeline to invoke, in the same style as the arguments for &lt;b&gt;&lt;a href=&quot;exec.htm&quot;&gt;exec&lt;/a&gt;&lt;/b&gt;. In this case, the channel identifier returned by &lt;b&gt;open&lt;/b&gt; may be used to write to the command's input pipe or read from its output pipe, depending on the value of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e40496f1072707d4ef0009c085adf01358d16459" translate="yes" xml:space="preserve">
          <source>are treated as binary data where the lower 8-bits of each character is taken as a single byte. The resulting sequence of bytes is treated as a string in the specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aa987a193512aa3578902ec09deeb3d9baa1a0d" translate="yes" xml:space="preserve">
          <source>are unsigned decimal integers with permissible values from 0 to 255 inclusive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbcee734b394eb33a43c489db8634d4df6fd059e" translate="yes" xml:space="preserve">
          <source>are used as &lt;b&gt;&lt;a href=&quot;return.htm&quot;&gt;return&lt;/a&gt;&lt;/b&gt; options when generating the error message. The default corresponds to setting &amp;ldquo;-level 0&amp;rdquo;. Example: If &amp;ldquo;&lt;b&gt;-error&lt;/b&gt; {-errorcode MyError -level 1}&amp;rdquo; is used, an error would be generated as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76e349a6c5ec858eeba19087afc14d2c6d7d0d34" translate="yes" xml:space="preserve">
          <source>are used in order from first to last, and each value is used exactly once. The total number of loop iterations is large enough to use up all the values from all the value lists. If a value list does not contain enough elements for each of its loop variables in each iteration, empty values are used for the missing elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059426dc108544fcea5eb760a49f647fddcdf1c8" translate="yes" xml:space="preserve">
          <source>are used when no match is found. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba31fdd3e708e3d289d53db1d34bda6867ddd812" translate="yes" xml:space="preserve">
          <source>are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d6e2b300911995efa37b6707fdc02975a3021c" translate="yes" xml:space="preserve">
          <source>arg</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82963a46173e1fed3214aa58d60847228a2e522b" translate="yes" xml:space="preserve">
          <source>arg ..</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b3783fe4d361753463c3cf4ff2dd2bf48f88504" translate="yes" xml:space="preserve">
          <source>arg ...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8583d49a090aebadde0234c5bc0f259eecbe020d" translate="yes" xml:space="preserve">
          <source>arg ...?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a77a79becbb7102353d9045c03f21a3699728ad" translate="yes" xml:space="preserve">
          <source>arg arg</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e264031c8270508a3002b43aa58e5373eb3cd9c0" translate="yes" xml:space="preserve">
          <source>arg arg ...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00f2a261258c4f07a3aebb9d0c24c98a0bfe0e7a" translate="yes" xml:space="preserve">
          <source>arg list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c6bfdbf5bf5537b4f982fa011d506a69fd5f840" translate="yes" xml:space="preserve">
          <source>arg...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e044db5cacc7c1e1ded3c45fa7472331fe5e6246" translate="yes" xml:space="preserve">
          <source>arg1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b0faaffc07de64b00fa6bc074694ca4a74d05c" translate="yes" xml:space="preserve">
          <source>arg1 - argN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85f2aee61f74c8707119a2d550a306d6cc642e73" translate="yes" xml:space="preserve">
          <source>arg1 arg2 ...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58aada0d196826b546af537693b11f505ed12be4" translate="yes" xml:space="preserve">
          <source>argList</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68f162063028a5af5bdda6b01c66c9fcebb5cb08" translate="yes" xml:space="preserve">
          <source>argList bodyScript</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da7228e374c9c5c17ac8a45e24698a76423635ad" translate="yes" xml:space="preserve">
          <source>argc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa1703392eab01ba0f9c4ed3a7afc9bfeb822e2a" translate="yes" xml:space="preserve">
          <source>argc, argv, argv0, auto_path, env, errorCode, errorInfo, tcl_interactive, tcl_library, tcl_nonwordchars, tcl_patchLevel, tcl_pkgPath, tcl_platform, tcl_precision, tcl_rcFileName, tcl_traceCompile, tcl_traceExec, tcl_wordchars, tcl_version &amp;mdash; Variables used by Tcl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baf78a0842e7dcd3f9f28944d37a693edf6dd59f" translate="yes" xml:space="preserve">
          <source>arglist</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3030e728f154bf51419109efb93b6b8aeec9a976" translate="yes" xml:space="preserve">
          <source>args</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c021ee3eccdc88f466e229e5a1b44719a4222d" translate="yes" xml:space="preserve">
          <source>args...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b769b0cc198ae1e8faf5ef6ae22b883e7098b48" translate="yes" xml:space="preserve">
          <source>argument (which must be &lt;b&gt;&lt;a href=&quot;read.htm&quot;&gt;read&lt;/a&gt;&lt;/b&gt; or &lt;b&gt;write&lt;/b&gt; or any unique abbreviation of them) is present, the channel will only be half-closed, so that it can go from being read-write to write-only or read-only respectively. If a read-only channel is closed for reading, it is the same as if the channel is fully closed, and respectively similar for write-only channels. Without the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb2c56695e26b1298e10260bf557973f1ae504b6" translate="yes" xml:space="preserve">
          <source>argument . The execution of &lt;b&gt;thread::exit&lt;/b&gt; command is guaranteed to leave the program memory in the unconsistent state, produce memory leaks and otherwise affect other subsytem(s) of the Tcl application in an unpredictable manner . The command returns empty result but may trigger Tcl error with the message &quot;target thread died&quot; in some situations .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50e944090a5055a7e2ace4f44d24b9d3d81b5a84" translate="yes" xml:space="preserve">
          <source>argument against each of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85414cf9370161525df7b8bf5b3268feab474c8e" translate="yes" xml:space="preserve">
          <source>argument and no</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33e9412ebc293474e62b0b0f8fe6ac1afb9c4490" translate="yes" xml:space="preserve">
          <source>argument and returns the fully-substituted result. The substitutions are performed in exactly the same way as for Tcl commands. As a result, the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="772b3ad831b86f94ad5f50558dbcb9abefd77f60" translate="yes" xml:space="preserve">
          <source>argument and the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1c8bbfbd3dcb711228243dc4dc8834ebc9a1229" translate="yes" xml:space="preserve">
          <source>argument as a Tcl script in the caller's scope. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad3e45e9d3b811be2667968f4610d7c8c5dfb9cf" translate="yes" xml:space="preserve">
          <source>argument as a Tcl script in the console interpreter. The normal interpreter is accessed through the &lt;b&gt;consoleinterp&lt;/b&gt; command in the console interpreter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e50a3120f2b755c4cf1e2b1385b0154e424e6ce" translate="yes" xml:space="preserve">
          <source>argument as a decimal integer and inserts it into the output string. On input, accepts a decimal integer and uses is as the time value without any further processing. Since &lt;b&gt;%s&lt;/b&gt; uniquely determines a point in time, it overrides all other input formats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69f4b5dd603b709858f05e1e482dad7b382533d4" translate="yes" xml:space="preserve">
          <source>argument by passing it recursively to the Tcl interpreter and returns the result of that evaluation. If the last</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="765988e0f2589be47da707a89ffd2c5dadeb20fe" translate="yes" xml:space="preserve">
          <source>argument can be either &lt;b&gt;TCL_UNLOAD_DETACH_FROM_INTERPRETER&lt;/b&gt; or &lt;b&gt;TCL_UNLOAD_DETACH_FROM_PROCESS&lt;/b&gt;. In case the library will remain attached to the process after the unload procedure returns (i.e. because the library is used by other interpreters), &lt;b&gt;TCL_UNLOAD_DETACH_FROM_INTERPRETER&lt;/b&gt; will be defined. However, if the library is used only by the target interpreter and the library will be detached from the application as soon as the unload procedure returns, the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20959432cbff210604bb993bd471448209809a7f" translate="yes" xml:space="preserve">
          <source>argument cannot reference an element within an array. Instead,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1ac8d61bb2d77731aee1f22513c7bf9fcc95de9" translate="yes" xml:space="preserve">
          <source>argument consists of zero or more specifications of the following form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41dd4bbd4b77ae0bf12523500c4c00fd31a3f804" translate="yes" xml:space="preserve">
          <source>argument contains</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76cd6623d15477dc36d55661ad9fd7cc5bf160f0" translate="yes" xml:space="preserve">
          <source>argument defaults to &lt;b&gt;start&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="830567933bef46b1f59ffe003f15bc940ebaac1a" translate="yes" xml:space="preserve">
          <source>argument defaults to a space character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d5d434387bc624752025a4776ce3a002137a57b" translate="yes" xml:space="preserve">
          <source>argument describes a list of one or more words which represent a handler that will be used to implement the transformation. The command prefix must provide the API described in the &lt;b&gt;&lt;a href=&quot;transchan.htm&quot;&gt;transchan&lt;/a&gt;&lt;/b&gt; manual page. The result of this subcommand is a handle to the transformation. Note that it is important to make sure that the transformation is capable of supporting the channel mode that it is used with or this can make the channel neither readable nor writable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ab48d006211335d2664566489e6d9c946d2fad" translate="yes" xml:space="preserve">
          <source>argument determines what action is carried out by the command. The legal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="664393439c09fd013d2db3514cd2b02440304937" translate="yes" xml:space="preserve">
          <source>argument determines what type of transformation is pushed; the following are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac3947ba8f77c29949eb53eb50e3873fa5e54b54" translate="yes" xml:space="preserve">
          <source>argument determines which window(s) the binding applies to. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="897e64f9adc8144656c0b4eeb170539d8a9a6c87" translate="yes" xml:space="preserve">
          <source>argument gives a path of indices (much as might be used with the &lt;b&gt;&lt;a href=&quot;lindex.htm&quot;&gt;lindex&lt;/a&gt;&lt;/b&gt; or &lt;b&gt;&lt;a href=&quot;lset.htm&quot;&gt;lset&lt;/a&gt;&lt;/b&gt; commands) within each element to allow the location of the term being matched against.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51e0d7c69e1e22442af93325f3d3dc185fc8168" translate="yes" xml:space="preserve">
          <source>argument gives the maximum time in milliseconds. A value of zero (the default) specifies that the calling process is to wait indefinitely for database operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c12adc47367f0f249b52249e502d7fb3055ecb6" translate="yes" xml:space="preserve">
          <source>argument gives the name of a directory and each</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1618c4210f1cc912c1a848440ec33641cb8a35f1" translate="yes" xml:space="preserve">
          <source>argument had not been specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c52b729071509a77b45045560cad7ec1b6950a61" translate="yes" xml:space="preserve">
          <source>argument identifies the interpreter from which the library is to be unloaded. The unload procedure must return &lt;b&gt;&lt;a href=&quot;catch.htm&quot;&gt;TCL_OK&lt;/a&gt;&lt;/b&gt; or &lt;b&gt;&lt;a href=&quot;catch.htm&quot;&gt;TCL_ERROR&lt;/a&gt;&lt;/b&gt; to indicate whether or not it completed successfully; in the event of an error it should set the interpreter's result to point to an error message. In this case, the result of the &lt;b&gt;unload&lt;/b&gt; command will be the result returned by the unload procedure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52c21e84677f4282c71f9148a64ae288d7957ab0" translate="yes" xml:space="preserve">
          <source>argument identifies the interpreter in which the package is to be loaded. The initialization procedure must return &lt;b&gt;&lt;a href=&quot;catch.htm&quot;&gt;TCL_OK&lt;/a&gt;&lt;/b&gt; or &lt;b&gt;&lt;a href=&quot;catch.htm&quot;&gt;TCL_ERROR&lt;/a&gt;&lt;/b&gt; to indicate whether or not it completed successfully; in the event of an error it should set the interpreter's result to point to an error message. The result of the &lt;b&gt;load&lt;/b&gt; command will be the result returned by the initialization procedure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfb3e1bb1a6f71e21488ab204fee13f0318e625f" translate="yes" xml:space="preserve">
          <source>argument identifies the search, and must have been the return value of an &lt;b&gt;array startsearch&lt;/b&gt; command. Warning: if elements are added to or deleted from the array, then all searches are automatically terminated just as if &lt;b&gt;array donesearch&lt;/b&gt; had been invoked; this will cause &lt;b&gt;array nextelement&lt;/b&gt; operations to fail for those searches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5446984ace1189bb2bff5e0f6393214010dbf18b" translate="yes" xml:space="preserve">
          <source>argument indicates the option to be written, and the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a632ee0f27955623362db24300195b2256fc5a3b" translate="yes" xml:space="preserve">
          <source>argument indicates the value to set the option to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="304c6c87f5e123919018c770555ece9540d8ea48" translate="yes" xml:space="preserve">
          <source>argument indicates which registry to work with; when it is &lt;b&gt;-32bit&lt;/b&gt; the 32-bit registry will be used, and when it is &lt;b&gt;-64bit&lt;/b&gt; the 64-bit registry will be used. If this argument is omitted, the system's default registry will be the subject of the requested operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1927e8faadf019dc91f6f97b1709b7fbd270195" translate="yes" xml:space="preserve">
          <source>argument is &lt;b&gt;-microseconds&lt;/b&gt;, then the command is synonymous with &lt;b&gt;clock microseconds&lt;/b&gt; (see below). This usage is obsolete, and &lt;b&gt;clock microseconds&lt;/b&gt; is to be considered the preferred way of obtaining a count of microseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccac03f17cebadf8a983f234e3307e021c2eb84e" translate="yes" xml:space="preserve">
          <source>argument is &lt;b&gt;-milliseconds&lt;/b&gt;, then the command is synonymous with &lt;b&gt;clock milliseconds&lt;/b&gt; (see below). This usage is obsolete, and &lt;b&gt;clock milliseconds&lt;/b&gt; is to be considered the preferred way of obtaining a count of milliseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc04a3e29c28167257d350c53445d7142b39b914" translate="yes" xml:space="preserve">
          <source>argument is &lt;b&gt;default&lt;/b&gt; then it matches anything. If no</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b267f6634693ab42562c408469b1494bea37eb8" translate="yes" xml:space="preserve">
          <source>argument is a &lt;b&gt;&lt;a href=&quot;glob.htm&quot;&gt;glob&lt;/a&gt;&lt;/b&gt;-style pattern that selects script or binary files in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce9973408a504b1dec86501f4cd9ec2c83c5c87e" translate="yes" xml:space="preserve">
          <source>argument is a Tcl script. For each element of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43a091ec53c02d54331fb3f8bf9cce29230dbac9" translate="yes" xml:space="preserve">
          <source>argument is a floating point number that specifies the number of pixels per point on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f90a345f6a54e6c5ff4b0a07c618e3d1446bdfd" translate="yes" xml:space="preserve">
          <source>argument is a positive number, it is interpreted as a size in points. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6367db6b1ed70b5564a8f728722732c257f34a5e" translate="yes" xml:space="preserve">
          <source>argument is a string of the form &quot;&lt;b&gt;-&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f7e6937881703ee0fb8fa9a49d3bdebb9bad081" translate="yes" xml:space="preserve">
          <source>argument is actually substituted twice, once by the Tcl parser in the usual fashion for Tcl commands, and again by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95147aa1d80a5c1487a1c5d550ee92c02682fd16" translate="yes" xml:space="preserve">
          <source>argument is always interpreted as a variable name with respect to the global namespace, but can refer to any namespace's variables if the fully-qualified name is given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b565feef9619d06bc8749c781e4aca1a509a1cde" translate="yes" xml:space="preserve">
          <source>argument is expected to be a list with an even number of elements representing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7ff61f4a489ab522d1d002147bbf945c7918c80" translate="yes" xml:space="preserve">
          <source>argument is given then &lt;b&gt;pid&lt;/b&gt; returns the process identifier of the current process. All process identifiers are returned as decimal strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f92d7278bcc02616d238656da84238359d9e49af" translate="yes" xml:space="preserve">
          <source>argument is given then it should normally refer to a process pipeline created with the &lt;b&gt;&lt;a href=&quot;open.htm&quot;&gt;open&lt;/a&gt;&lt;/b&gt; command. In this case the &lt;b&gt;pid&lt;/b&gt; command will return a list whose elements are the process identifiers of all the processes in the pipeline, in order. The list will be empty if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f17762a59271e99c723b766683f56d954478de4" translate="yes" xml:space="preserve">
          <source>argument is given, it is a filter (in the syntax of a &lt;b&gt;&lt;a href=&quot;string.htm&quot;&gt;string match&lt;/a&gt;&lt;/b&gt; glob pattern) that constrains the list of variables returned. Note that this is different from the list returned by &lt;b&gt;info object variables&lt;/b&gt;; that can include variables that are currently unset, whereas this can include variables that are not automatically included by any of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd11443a0c93a531f3754d370e2dc80514bb2de5" translate="yes" xml:space="preserve">
          <source>argument is given, returns the negation of that numeric value. Otherwise returns the number that results when all subsequent numeric values are subtracted from the first one. All</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc26e4c82f2ed2d54213ff93a5d454f9c2c3fe6" translate="yes" xml:space="preserve">
          <source>argument is given, returns the reciprocal of that numeric value (i.e. the value obtained by dividing 1.0 by that value). Otherwise returns the number that results when the first numeric argument is divided by all subsequent numeric arguments. All</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95d6e6c4af3905d7e42d2eb165e4179add8a0f8e" translate="yes" xml:space="preserve">
          <source>argument is given, then the variable it names is set to a dictionary of return options returned by evaluation of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fbb9d24a532e9c4f59f1cc941206e42c1e963a4" translate="yes" xml:space="preserve">
          <source>argument is given, then the variable it names is set to the result of the script evaluation. When the return code from the script is 1 (&lt;b&gt;TCL_ERROR&lt;/b&gt;), the value stored in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5fa3af510c0feba63230c889759735c45562053" translate="yes" xml:space="preserve">
          <source>argument is needed only for compatibility with clipboard requesters that do not use Tk. If the Tk toolkit is being used to retrieve the &lt;b&gt;CLIPBOARD&lt;/b&gt; selection then the value is converted back to a string at the requesting end, so</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f48144f814b977a6ef3ad808c0e0fb8d9945b223" translate="yes" xml:space="preserve">
          <source>argument is needed only for compatibility with selection requesters that do not use Tk. If Tk is being used to retrieve the selection then the value is converted back to a string at the requesting end, so</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c71434b0b84f25224d5af44d0b42c2d8f58e553d" translate="yes" xml:space="preserve">
          <source>argument is not a list, but simply a string concatenation of the operations, such as &lt;b&gt;rwua&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92865f6ad6546fc35dc944ee93b36427c5f7d664" translate="yes" xml:space="preserve">
          <source>argument is not specified, &lt;b&gt;fileevent&lt;/b&gt; returns the current script for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c18ad850b0655e3d3f5129dad22c7ada4f620412" translate="yes" xml:space="preserve">
          <source>argument is omitted then the command lowers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a9af3989c04afe6202c3f631810e435021b9ed1" translate="yes" xml:space="preserve">
          <source>argument is omitted then the command raises</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07b64c64198a1e3fce313a2b7d6e8ee8712b6021" translate="yes" xml:space="preserve">
          <source>argument is omitted, a name will be generated. &lt;b&gt;::safe::interpCreate&lt;/b&gt; always returns the interpreter name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7538dcf54767e70f1f374912bb34f04fdddb3936" translate="yes" xml:space="preserve">
          <source>argument is omitted, it defaults to the main window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="772ce3540e0235f126b315718a21683e6766078b" translate="yes" xml:space="preserve">
          <source>argument is omitted, it defaults to the main window. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8c5254ee82b10b04c1ad4f6c9d1851a62316745" translate="yes" xml:space="preserve">
          <source>argument is omitted, it defaults to the main window. If the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e24bd40047193d780042f405b3f4d83af4b537f" translate="yes" xml:space="preserve">
          <source>argument is omitted, it defaults to the main window. The return value is the total width in pixels of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55e9b284ca212a4450fd29d53f6ea74d6bda59e3" translate="yes" xml:space="preserve">
          <source>argument is omitted, the current script for version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9488abb4ca2011b2ad04aa9d408cd74a89428ca2" translate="yes" xml:space="preserve">
          <source>argument is omitted, the current state is returned. This is turned on by default for the main display.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e9be954f95c994f94f08e43f2a7ca1e4153ea0a" translate="yes" xml:space="preserve">
          <source>argument is omitted, the current value of the scaling factor is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef5270638468785af5116d5d56e1ebc3d759dd87" translate="yes" xml:space="preserve">
          <source>argument is omitted, then the command returns the version number that is currently provided, or an empty string if no &lt;b&gt;package provide&lt;/b&gt; command has been invoked for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f04c2c7c6b582ff5bcea26c35665425d8286cc35" translate="yes" xml:space="preserve">
          <source>argument is present, it constrains the list of returned classes to those that match it according to the rules of &lt;b&gt;&lt;a href=&quot;string.htm&quot;&gt;string match&lt;/a&gt;&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e7bd267576a569020d9c70d99ddc7a9f2af3096" translate="yes" xml:space="preserve">
          <source>argument is present, it constrains the list of returned instances to those that match it according to the rules of &lt;b&gt;&lt;a href=&quot;string.htm&quot;&gt;string match&lt;/a&gt;&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a2570cc075021dcff09a536a3bbcf36560ce58" translate="yes" xml:space="preserve">
          <source>argument is present, it is used as a fallback value in case no specification for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a9da684705a0b8abe40f15622e1d6975fcc4b66" translate="yes" xml:space="preserve">
          <source>argument is present, it is used to initialize the &lt;b&gt;-errorinfo&lt;/b&gt; return options and the first increment of unwind information will not be added by the Tcl interpreter. In other words, the command containing the &lt;b&gt;error&lt;/b&gt; command will not appear in the stack trace; in its place will be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79b19b6cba77600ccf43ec7178b7f9fccd62e425" translate="yes" xml:space="preserve">
          <source>argument is present, the specified value under</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08e9e36ad7aa472598878fe2f3860d91614ac22c" translate="yes" xml:space="preserve">
          <source>argument is present, then its value is stored in the &lt;b&gt;-errorcode&lt;/b&gt; return option. The &lt;b&gt;-errorcode&lt;/b&gt; return option is intended to hold a machine-readable description of the error in cases where such information is available; see the &lt;b&gt;&lt;a href=&quot;return.htm&quot;&gt;return&lt;/a&gt;&lt;/b&gt; manual page for information on the proper format for this option's value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72c04edb8daa5fabbfe6a17903c4e7b728421466" translate="yes" xml:space="preserve">
          <source>argument is provided, &lt;b&gt;bind&lt;/b&gt; returns an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b110cc3b2f91fae5e1379668f35f14182a0c72c6" translate="yes" xml:space="preserve">
          <source>argument is provided, all physical event sequences are removed for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46dc68765a8e35d8e03957f2d037880f76914c05" translate="yes" xml:space="preserve">
          <source>argument is provided, its value becomes the result of the procedure passed back to the caller. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11302029fb004a48ebbb9509ee2b34befcbc22ea" translate="yes" xml:space="preserve">
          <source>argument is specified as an empty string then the event handler is deleted, so that no script will be invoked. A file event handler is also deleted automatically whenever its channel is closed or its interpreter is deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14592bf8ead4b365155ad7648a32ad3d5ce4e699" translate="yes" xml:space="preserve">
          <source>argument is specified then an empty string is returned. Otherwise the command returns the path name of the current icon window for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab84de818c9b770bc425a8c575d830ac84463a9" translate="yes" xml:space="preserve">
          <source>argument is specified to &lt;b&gt;bindtags&lt;/b&gt;, then it must be a proper list; the tags for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="422979501e30b70ecbc2009bcd776c3be88ff5ba" translate="yes" xml:space="preserve">
          <source>argument is specified, the arguments are concatenated together with a space between each one in the same fashion as the &lt;b&gt;&lt;a href=&quot;eval.htm&quot;&gt;eval&lt;/a&gt;&lt;/b&gt; command, and the result is evaluated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7942e0b5c2578b2fa542cba56c207911f604d8cb" translate="yes" xml:space="preserve">
          <source>argument is specified, then &lt;b&gt;fileevent&lt;/b&gt; creates a new event handler:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3762310cd3294311a71ff3156fcd5ebd2478c020" translate="yes" xml:space="preserve">
          <source>argument is supplied, it contains the first part of a command; when the command is invoked during a &lt;b&gt;package require&lt;/b&gt; command, Tcl appends one or more additional arguments giving the desired package name and requirements. For example, if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e78123440334382006138eee42c47eaa93bfe406" translate="yes" xml:space="preserve">
          <source>argument is supplied, it must be a single character. The font attributes returned will be those of the specific font used to render that character, which will be different from the base font if the base font does not contain the given character. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="656ea370502bdd88e3733fe0aa5ea5c092e4bb0e" translate="yes" xml:space="preserve">
          <source>argument is supplied, returns a high-resolution time value as a system-dependent integer value. The unit of the value is system-dependent but should be the highest resolution clock available on the system such as a CPU cycle counter. See &lt;b&gt;&lt;a href=&quot;#M23&quot;&gt;HIGH RESOLUTION TIMERS&lt;/a&gt;&lt;/b&gt; for a full description.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd0f96beb1cedb1f42b07fc24614f71346e6922a" translate="yes" xml:space="preserve">
          <source>argument is supplied, the command returns a list of the identifiers for all existing event handlers created by the &lt;b&gt;after&lt;/b&gt; command for this interpreter. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49cf2ecfa8d97714d7b803e1fcab1ff4210b26fb" translate="yes" xml:space="preserve">
          <source>argument is the name of the package (as determined by or passed to &lt;b&gt;&lt;a href=&quot;load.htm&quot;&gt;load&lt;/a&gt;&lt;/b&gt;), and is used to compute the name of the unload procedure; if not supplied, it is computed from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a9ea27d48cabda57808f45c6c861873e0e1e429" translate="yes" xml:space="preserve">
          <source>argument is the path name of the interpreter from which to unload the package (see the &lt;b&gt;&lt;a href=&quot;interp.htm&quot;&gt;interp&lt;/a&gt;&lt;/b&gt; manual entry for details); if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c857d0c44f7019e301de72f593c47960a719ec4f" translate="yes" xml:space="preserve">
          <source>argument is the same as the equivalent argument of the builtin &lt;b&gt;&lt;a href=&quot;chan.htm&quot;&gt;chan seek&lt;/a&gt;&lt;/b&gt;, namely:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b805536c6034c1dc4161acfd44fa92e42ea7de8" translate="yes" xml:space="preserve">
          <source>argument list and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c129a7725e94a43709dc97efbfc894580c328a7a" translate="yes" xml:space="preserve">
          <source>argument matches</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96dec8ae62c92bf93bfd18606fb545e2b631ca9c" translate="yes" xml:space="preserve">
          <source>argument may be any numeric value. If no arguments are given, the result will be zero (the summation identity).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e86b6686f67c92bcee6c3a38450691381549b535" translate="yes" xml:space="preserve">
          <source>argument may be omitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ec1cb52e8ed9f176e72790578750b7f9f67f1ce" translate="yes" xml:space="preserve">
          <source>argument may be used to step circularly through all the closest items. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49fd3d2be6e56643668c4b37bad1169d77a19f49" translate="yes" xml:space="preserve">
          <source>argument meets the criteria for the category. The supported categories are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe56e2e71ed74d55677c0f7b1f8e7488546945be" translate="yes" xml:space="preserve">
          <source>argument must be a list with an even number of elements that alternate between keys and values. The keys become header field names. Newlines are stripped from the values so the header cannot be corrupted. For example, if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c7bc7e2d07364cbb71676cda8c8ea1eabbb8c49" translate="yes" xml:space="preserve">
          <source>argument must be a list with three elements, each specifying a distance in any of the forms described in the &lt;b&gt;&lt;a href=&quot;#M17&quot;&gt;COORDINATES&lt;/a&gt;&lt;/b&gt; section above. The first element of the list gives the distance along the line from the neck of the arrowhead to its tip. The second element gives the distance along the line from the trailing points of the arrowhead to the tip, and the third element gives the distance from the outside edge of the line to the trailing points. If this option is not specified then Tk picks a &amp;ldquo;reasonable&amp;rdquo; shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03da0ce78e4f80e7c8caf5ca1f5a12cf1cba7298" translate="yes" xml:space="preserve">
          <source>argument must be a valid Tcl list. This command returns the string formed by joining all of the elements of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b71f571fbefc7f5c05f437d8f14794b464e9bf48" translate="yes" xml:space="preserve">
          <source>argument must be greater than or equal to zero. The integer appearing in each</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66454b54049d1e10a46468238cd5a0d83c720539" translate="yes" xml:space="preserve">
          <source>argument must be less than or equal to the length of the corresponding list. In other words, the &lt;b&gt;lset&lt;/b&gt; command can change the size of a list only by appending an element (setting the one after the current end). If an index is outside the permitted range, an error is reported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb99c49e37675163f1ab78235cb24983d9bac0ce" translate="yes" xml:space="preserve">
          <source>argument must be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adab97ee3213894e531aa1886fbaeb276c97586e" translate="yes" xml:space="preserve">
          <source>argument must contain a single SQL statement to be executed. Bound variables may be included. The return value is a newly-created Tcl command that represents the statement. See &lt;b&gt;&lt;a href=&quot;tdbc_statement.htm&quot;&gt;tdbc::statement&lt;/a&gt;&lt;/b&gt; for more detailed discussion of the SQL accepted by the &lt;b&gt;prepare&lt;/b&gt; object command and the interface accepted by a statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f5688c450ab7c1d9b075844f9a9e685e8145fc0" translate="yes" xml:space="preserve">
          <source>argument must not have any namespace separators in it. The result is the empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d2f6d04f77108df11fd471fa9ccff9896066d88" translate="yes" xml:space="preserve">
          <source>argument names a single class that is to be mixed in. By default, this slot works by replacement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="704bb05134013774bcf00aaedb96875ca8d734b1" translate="yes" xml:space="preserve">
          <source>argument names one class that is to be a superclass of the defined class. Note that objects must not be changed from being classes to being non-classes or vice-versa, that an empty parent class is equivalent to &lt;b&gt;&lt;a href=&quot;object.htm&quot;&gt;oo::object&lt;/a&gt;&lt;/b&gt;, and that the parent classes of &lt;b&gt;&lt;a href=&quot;object.htm&quot;&gt;oo::object&lt;/a&gt;&lt;/b&gt; and &lt;b&gt;&lt;a href=&quot;class.htm&quot;&gt;oo::class&lt;/a&gt;&lt;/b&gt; may not be modified. By default, this slot works by replacement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a3c0b0795ac59169c10550efc0cf735930385e5" translate="yes" xml:space="preserve">
          <source>argument of the &lt;b&gt;&lt;a href=&quot;bind.htm&quot;&gt;bind&lt;/a&gt;&lt;/b&gt; command except that it must consist of a single event pattern, not a sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a7db26c1d07bce59e573fed5a833da1a74f6ff8" translate="yes" xml:space="preserve">
          <source>argument on a command line) must be more specific.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dda28e24fface192d5e0ed147f3a8d2b325b5b65" translate="yes" xml:space="preserve">
          <source>argument or by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3118445ca745fd16be7a8c661a1d04fb283101b3" translate="yes" xml:space="preserve">
          <source>argument pairs are present, they produce the same effect as if a separate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f477c94754c00b902de892b29d1cfbc1e0bf7cd1" translate="yes" xml:space="preserve">
          <source>argument pairs must supplied. See &lt;b&gt;&lt;a href=&quot;#M47&quot;&gt;RESOURCE LIMITS&lt;/a&gt;&lt;/b&gt; below for a more detailed explanation of what limits and options are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db596db4bda12f5028bafba16978df5ab4032f37" translate="yes" xml:space="preserve">
          <source>argument pairs provide additional information to control the generation of Postscript. The following options are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e73e936888539fe40672d0199f21c94f41a99d38" translate="yes" xml:space="preserve">
          <source>argument passed to the &lt;b&gt;add&lt;/b&gt; or &lt;b&gt;insert&lt;/b&gt; widget command when the entry was created, such as &lt;b&gt;command&lt;/b&gt; or &lt;b&gt;separator&lt;/b&gt;, or &lt;b&gt;tearoff&lt;/b&gt; for a tear-off entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="132bd46523713c5d303700c91341cc6737b4bdbd" translate="yes" xml:space="preserve">
          <source>argument should be given. Accepted values for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59a283b093afa3c494c56f4813f4dd543f6b94f7" translate="yes" xml:space="preserve">
          <source>argument should go from most general to most specific.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7115fd2c57fe0db4d2618b74f0c9a2782b83b179" translate="yes" xml:space="preserve">
          <source>argument specifies a sequence of one or more event patterns, with optional white space between the patterns. Each event pattern may take one of three forms. In the simplest case it is a single printing ASCII character, such as &lt;b&gt;a&lt;/b&gt; or &lt;b&gt;[&lt;/b&gt;. The character may not be a space character or the character &lt;b&gt;&amp;lt;&lt;/b&gt;. This form of pattern matches a &lt;b&gt;KeyPress&lt;/b&gt; event for the particular character. The second form of pattern is longer but more general. It has the following syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79b4d0b17952e0bffe09eb1ca072f8a69cdfba12" translate="yes" xml:space="preserve">
          <source>argument specifies the representation that should be used to transmit the selection to the requester (the second column of Table 2 of the ICCCM), and defaults to &lt;b&gt;STRING&lt;/b&gt;. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa1a4c622a86078dcaec2a384a224f6092e8559c" translate="yes" xml:space="preserve">
          <source>argument starts with a digit or &lt;b&gt;#&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9d6d9a00782fd98be676c203ee4eea1a67adb09" translate="yes" xml:space="preserve">
          <source>argument tells the handler whether the channel was opened for reading, writing, or both. It is a list containing any of the strings &lt;b&gt;&lt;a href=&quot;read.htm&quot;&gt;read&lt;/a&gt;&lt;/b&gt; or &lt;b&gt;write&lt;/b&gt;. The list will always contain at least one element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42462d74d45f2401caabe4cea18197794d81bae2" translate="yes" xml:space="preserve">
          <source>argument that follows the &lt;b&gt;edit&lt;/b&gt; argument. The following forms of the command are currently supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0f029ad093505cd4c44fe918b0db1b2998ea5e3" translate="yes" xml:space="preserve">
          <source>argument that follows the &lt;b&gt;mark&lt;/b&gt; argument. The following forms of the command are currently supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c89bbdba71645d2043568f545ed8193b6420d4f" translate="yes" xml:space="preserve">
          <source>argument that follows the &lt;b&gt;tag&lt;/b&gt; argument. The following forms of the command are currently supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8afa5c064a8c68c4429c8113025e153becfb7bb" translate="yes" xml:space="preserve">
          <source>argument that follows the &lt;b&gt;window&lt;/b&gt; argument. The following forms of the command are currently supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b18708c3178af47e0735e423526cb18f2d5ab3" translate="yes" xml:space="preserve">
          <source>argument that identifies a class whose implementation of the current method chain (see &lt;b&gt;&lt;a href=&quot;info.htm&quot;&gt;info object&lt;/a&gt;&lt;/b&gt;&lt;b&gt;call&lt;/b&gt;) should be used; the method implementation selected will be the one provided by the given class, and it must refer to an existing non-filter invocation that lies further along the chain than the current implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fd38c4922be9b2ba643d1a6c059d77a549c527c" translate="yes" xml:space="preserve">
          <source>argument to &lt;b&gt;&lt;a href=&quot;string.htm&quot;&gt;string index&lt;/a&gt;&lt;/b&gt;. When using this switch, &amp;ldquo;^&amp;rdquo; will not match the beginning of the line, and \A will still match the start of the string at</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f7ee77e6cd29779d5297f1d7a137575aca565a7" translate="yes" xml:space="preserve">
          <source>argument to &lt;b&gt;bind&lt;/b&gt; is a Tcl script, which will be executed whenever the given event sequence occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db93949cc1d8f2507ad3ba05f8ed6315601226d8" translate="yes" xml:space="preserve">
          <source>argument to &lt;b&gt;fileevent&lt;/b&gt; refers to an open channel such as a Tcl standard channel (&lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TclLib/GetStdChan.htm&quot;&gt;stdin&lt;/a&gt;&lt;/b&gt;, &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TclLib/GetStdChan.htm&quot;&gt;stdout&lt;/a&gt;&lt;/b&gt;, or &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TclLib/GetStdChan.htm&quot;&gt;stderr&lt;/a&gt;&lt;/b&gt;), the return value from an invocation of &lt;b&gt;&lt;a href=&quot;open.htm&quot;&gt;open&lt;/a&gt;&lt;/b&gt; or &lt;b&gt;&lt;a href=&quot;socket.htm&quot;&gt;socket&lt;/a&gt;&lt;/b&gt;, or the result of a channel creation command provided by a Tcl extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12871022e9fafdecaf1334244df1280746035b90" translate="yes" xml:space="preserve">
          <source>argument to &lt;b&gt;grid configure&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b0db1ce38aac429e53fc9e0ef674f9c6b264b72" translate="yes" xml:space="preserve">
          <source>argument to &lt;b&gt;image create&lt;/b&gt; when the image was created).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31178744374c8df89b2f1c1ab684df6998cd1e26" translate="yes" xml:space="preserve">
          <source>argument to &lt;b&gt;image create&lt;/b&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f54ca04363cab369b5620dddd95082515006f067" translate="yes" xml:space="preserve">
          <source>argument to &lt;b&gt;switch&lt;/b&gt;) matched, in a similar way to the &lt;b&gt;-indices&lt;/b&gt; option to the &lt;b&gt;&lt;a href=&quot;regexp.htm&quot;&gt;regexp&lt;/a&gt;&lt;/b&gt; can obtain. Similarly, the second element of the list refers to the first capturing parenthesis in the regular expression that matched, and so on. When a &lt;b&gt;default&lt;/b&gt; branch is taken, the variable will have the empty list written to it. This option may be specified at the same time as the &lt;b&gt;-matchvar&lt;/b&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3436dd54573cadc8a72fe729a9f963d5f5493167" translate="yes" xml:space="preserve">
          <source>argument to &lt;b&gt;switch&lt;/b&gt;) matched, the second element of the list will be the substring matched by the first capturing parenthesis in the regular expression that matched, and so on. When a &lt;b&gt;default&lt;/b&gt; branch is taken, the variable will have the empty list written to it. This option may be specified at the same time as the &lt;b&gt;-indexvar&lt;/b&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b149c5ee82b521fede7edab847620f0fa21e8822" translate="yes" xml:space="preserve">
          <source>argument to start with a &amp;ldquo;-&amp;rdquo; character, and is otherwise unnecessary. If both the &lt;b&gt;-namespace&lt;/b&gt; and &lt;b&gt;-global&lt;/b&gt; flags are given, the &lt;b&gt;-namespace&lt;/b&gt; flag is ignored. Note that the hidden command will be executed (by default) in the current context stack frame of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ad7c676275b343f1e4f167562d6324ef8405ad4" translate="yes" xml:space="preserve">
          <source>argument to start with a &amp;ldquo;-&amp;rdquo; character, and is otherwise unnecessary. If both the &lt;b&gt;-namespace&lt;/b&gt; and &lt;b&gt;-global&lt;/b&gt; flags are present, the &lt;b&gt;-namespace&lt;/b&gt; flag is ignored. Note that the hidden command will be executed (by default) in the current context stack frame of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba8fbec9f6e8df3a0e17830d1c87ee4cb4909e99" translate="yes" xml:space="preserve">
          <source>argument to the &lt;b&gt;&lt;a href=&quot;bind.htm&quot;&gt;bind&lt;/a&gt;&lt;/b&gt; command. Any</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3ab37a5a5e6a9f41a7d08c852a8abcf6f94771c" translate="yes" xml:space="preserve">
          <source>argument to the &lt;b&gt;&lt;a href=&quot;bind.htm&quot;&gt;bind&lt;/a&gt;&lt;/b&gt; command. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a06bec8a45971cc6eb7adb17d7b1c6d5079e90e" translate="yes" xml:space="preserve">
          <source>argument to the following commands may take any of the following forms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c3a51d1d7eda6c84b38e54f7bba2cda24c343a4" translate="yes" xml:space="preserve">
          <source>argument to the history list as a new event. If &lt;b&gt;exec&lt;/b&gt; is specified (or abbreviated) then the command is also executed and its result is returned. If &lt;b&gt;exec&lt;/b&gt; is not specified then an empty string is returned as result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03f823fa738eabff5ed33afc96923279506e70b8" translate="yes" xml:space="preserve">
          <source>argument to the last &lt;b&gt;scan mark&lt;/b&gt; command for the widget. It then adjusts the view left or right by 10 times the difference in x-coordinates. This command is typically associated with mouse motion events in the widget, to produce the effect of dragging the entry at high speed through the window. The return value is an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c156f2fb187e1ba5476fb724cbf410dc2639c2a8" translate="yes" xml:space="preserve">
          <source>argument to the last &lt;b&gt;scan mark&lt;/b&gt; command for the widget. It then adjusts the view left or right by 10 times the difference in x-coordinates. This command is typically associated with mouse motion events in the widget, to produce the effect of dragging the spinbox at high speed through the window. The return value is an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71fff673d5d559c34dfe38293b99d6b8fa8ae938" translate="yes" xml:space="preserve">
          <source>argument will be set to &lt;b&gt;TCL_UNLOAD_DETACH_FROM_PROCESS&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a541ebffff07eed49a3cd5fff663a649c2028d74" translate="yes" xml:space="preserve">
          <source>argument will become a separate element of the list. If no</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27bc387db2217634cb9950ed57f6d771ea0a5b5c" translate="yes" xml:space="preserve">
          <source>argument will become a separate element of the new list. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b9ce94812fdaddde12a0fbef0f9febe202ab1c" translate="yes" xml:space="preserve">
          <source>argument) and makes it into a button widget. Additional options, described above, may be specified on the command line or in the option database to configure aspects of the button such as its colors, font, text, and initial relief. The &lt;b&gt;button&lt;/b&gt; command returns its</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d1f70166c845c3a09d51ddb9cc2d576cdf991a" translate="yes" xml:space="preserve">
          <source>argument) and makes it into a canvas widget. Additional options, described above, may be specified on the command line or in the option database to configure aspects of the canvas such as its colors and 3-D relief. The &lt;b&gt;canvas&lt;/b&gt; command returns its</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f768301038d467f51b4e4bb8535527bd606b8d" translate="yes" xml:space="preserve">
          <source>argument) and makes it into a checkbutton widget. Additional options, described above, may be specified on the command line or in the option database to configure aspects of the checkbutton such as its colors, font, text, and initial relief. The &lt;b&gt;checkbutton&lt;/b&gt; command returns its</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b04c22f803149a04e3d7a8c6a35f369f3acc54c0" translate="yes" xml:space="preserve">
          <source>argument) and makes it into a frame widget. Additional options, described above, may be specified on the command line or in the option database to configure aspects of the frame such as its background color and relief. The &lt;b&gt;frame&lt;/b&gt; command returns the path name of the new window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be02f51cdb51fd480d605baa21b3942b5bba5eae" translate="yes" xml:space="preserve">
          <source>argument) and makes it into a label widget. Additional options, described above, may be specified on the command line or in the option database to configure aspects of the label such as its colors, font, text, and initial relief. The &lt;b&gt;label&lt;/b&gt; command returns its</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b85e0ee4d41bb68fdf8b57a65e8a1b4fd59bc48" translate="yes" xml:space="preserve">
          <source>argument) and makes it into a labelframe widget. Additional options, described above, may be specified on the command line or in the option database to configure aspects of the labelframe such as its background color and relief. The &lt;b&gt;labelframe&lt;/b&gt; command returns the path name of the new window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5fba04ceb5ca3ea296b2d365e001e32e04e5628" translate="yes" xml:space="preserve">
          <source>argument) and makes it into a listbox widget. Additional options, described above, may be specified on the command line or in the option database to configure aspects of the listbox such as its colors, font, text, and relief. The &lt;b&gt;listbox&lt;/b&gt; command returns its</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45836058c3835f5850b444e39b5c08850a0ddf80" translate="yes" xml:space="preserve">
          <source>argument) and makes it into a menu widget. That menu widget can either be used as a pop-up window or applied to a &lt;b&gt;&lt;a href=&quot;toplevel.htm&quot;&gt;toplevel&lt;/a&gt;&lt;/b&gt; (with its &lt;b&gt;-menu&lt;/b&gt; option) to make it into the menubar for that toplevel. Additional options, described above, may be specified on the command line or in the option database to configure aspects of the menu such as its colors and font. The &lt;b&gt;menu&lt;/b&gt; command returns its</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb2ece163de30c420840f260c1d2688c76d48a06" translate="yes" xml:space="preserve">
          <source>argument) and makes it into a menubutton widget. Additional options, described above, may be specified on the command line or in the option database to configure aspects of the menubutton such as its colors, font, text, and initial relief. The &lt;b&gt;menubutton&lt;/b&gt; command returns its</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d98d5414ca821e5106ef7f91deaf2767a5f7351b" translate="yes" xml:space="preserve">
          <source>argument) and makes it into a message widget. Additional options, described above, may be specified on the command line or in the option database to configure aspects of the message such as its colors, font, text, and initial relief. The &lt;b&gt;message&lt;/b&gt; command returns its</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2fe233f5eae96fa8076daea9d18c2371da44bec" translate="yes" xml:space="preserve">
          <source>argument) and makes it into a panedwindow widget. Additional options, described above, may be specified on the command line or in the option database to configure aspects of the panedwindow such as its default background color and relief. The &lt;b&gt;panedwindow&lt;/b&gt; command returns the path name of the new window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="210824ba05fd2e3042e56e329a8d5180ce4ca467" translate="yes" xml:space="preserve">
          <source>argument) and makes it into a radiobutton widget. Additional options, described above, may be specified on the command line or in the option database to configure aspects of the radiobutton such as its colors, font, text, and initial relief. The &lt;b&gt;radiobutton&lt;/b&gt; command returns its</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b4790f6b72f62b14df415b8d00c47e2d0e9a0a" translate="yes" xml:space="preserve">
          <source>argument) and makes it into a scale widget. Additional options, described above, may be specified on the command line or in the option database to configure aspects of the scale such as its colors, orientation, and relief. The &lt;b&gt;scale&lt;/b&gt; command returns its</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e299809c61448a539037c6ba28cbcf084f2dca59" translate="yes" xml:space="preserve">
          <source>argument) and makes it into a scrollbar widget. Additional options, described above, may be specified on the command line or in the option database to configure aspects of the scrollbar such as its colors, orientation, and relief. The &lt;b&gt;scrollbar&lt;/b&gt; command returns its</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53d3881947bfe7691f5e121939028ea8bcbcbc60" translate="yes" xml:space="preserve">
          <source>argument) and makes it into a spinbox widget. Additional options, described above, may be specified on the command line or in the option database to configure aspects of the spinbox such as its colors, font, and relief. The &lt;b&gt;spinbox&lt;/b&gt; command returns its</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="273788ae77891ecbcf1a99503f156b43adb6653c" translate="yes" xml:space="preserve">
          <source>argument) and makes it into a text widget. Additional options, described above, may be specified on the command line or in the option database to configure aspects of the text such as its default background color and relief. The &lt;b&gt;text&lt;/b&gt; command returns the path name of the new window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="492a0d29f4c849b308360c69769d5f96c0e34a70" translate="yes" xml:space="preserve">
          <source>argument) and makes it into an entry widget. Additional options, described above, may be specified on the command line or in the option database to configure aspects of the entry such as its colors, font, and relief. The &lt;b&gt;entry&lt;/b&gt; command returns its</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ccc93459f3dd6774f5c913ccd732a827ef3e9c8" translate="yes" xml:space="preserve">
          <source>argument). Additional options, described above, may be specified on the command line or in the option database to configure aspects of the toplevel such as its background color and relief. The &lt;b&gt;toplevel&lt;/b&gt; command returns the path name of the new window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f174f8de95bb41886d3b36d9a86cb466bd27a77" translate="yes" xml:space="preserve">
          <source>argument, &lt;b&gt;upvar&lt;/b&gt; makes the variable by that name in the procedure frame given by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5495bfd963258c46e5eacd3888af2aac25f6e90" translate="yes" xml:space="preserve">
          <source>argument, if given, should be a well formed list representing a command name and optional arguments. When the handler is invoked, the full invocation line will be appended to the script and the result evaluated in the context of the namespace. The default handler for all namespaces is &lt;b&gt;::unknown&lt;/b&gt;. If no argument is given, it returns the handler for the current namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c31abcaf4121911be42078fb19b040f4410ff530" translate="yes" xml:space="preserve">
          <source>argument, if no interpreter by that name exists, the command raises an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2628d2564aa322d6f5ff0b54dcadca8b2ee07b88" translate="yes" xml:space="preserve">
          <source>argument, if present, indicates the way in which the file (or command pipeline) is to be accessed. In the first form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adb12917680df7c7bc4d9044e00cd86fc7cc3a89" translate="yes" xml:space="preserve">
          <source>argument, the channel is closed for both reading and writing (but only if those directions are currently open). It is an error to close a read-only channel for writing, or a write-only channel for reading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8b1dacd56be341b1a1a3b0119ac107c1792bf69" translate="yes" xml:space="preserve">
          <source>argument, then the current &lt;b&gt;package unknown&lt;/b&gt; script is returned, or an empty string if there is none. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db6c290cad98e9dadeac187ae9b5ea5edc7a8ea2" translate="yes" xml:space="preserve">
          <source>argument, which is a menu widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad65c165992c6bef5dbbbb0e8745936d25651574" translate="yes" xml:space="preserve">
          <source>argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb76001061ce7bd7eb1d057c111f982814c63cb3" translate="yes" xml:space="preserve">
          <source>argument. A</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="392fcd4ea7d7885e24263a12e878ce661c5851f7" translate="yes" xml:space="preserve">
          <source>argument. All of the forms expect at least one additional argument,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e05f455384eee2d71fff7300bc1a5cc9cb9b228c" translate="yes" xml:space="preserve">
          <source>argument. At the time this command is invoked, there must not exist a window named</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eacc0e0a577c13f515dd1f018ae52c5223dd48d4" translate="yes" xml:space="preserve">
          <source>argument. Configuring a class also updates the configuration of all subclasses of the class and all objects that are instances of that class or which mix it in (as modified by any per-instance configuration). The way in which the configuration is done is controlled by either the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="267a88e68f4f1369bc5b7ba02f3576ec2cb0c4e2" translate="yes" xml:space="preserve">
          <source>argument. Corresponds to the &lt;b&gt;%b&lt;/b&gt; substitution for binding scripts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a12336c6986c929bd3c2f1aa8acce521f25634a" translate="yes" xml:space="preserve">
          <source>argument. Each element of the result list will consist of the characters from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea983eea0494678d7800b696ee13d5e955b51bd" translate="yes" xml:space="preserve">
          <source>argument. If one or more</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1a2f582f768590f4ec45afe130a5d2ed02c8c82" translate="yes" xml:space="preserve">
          <source>argument. Non-empty directories will be removed only if the &lt;b&gt;-force&lt;/b&gt; option is specified. When operating on symbolic links, the links themselves will be deleted, not the objects they point to. Trying to delete a non-existent file is not considered an error. Trying to delete a read-only file will cause the file to be deleted, even if the &lt;b&gt;-force&lt;/b&gt; flags is not specified. If the &lt;b&gt;-force&lt;/b&gt; option is specified on a directory, Tcl will attempt both to change permissions and move the current directory &amp;ldquo;pwd&amp;rdquo; out of the given path if that is necessary to allow the deletion to proceed. Arguments are processed in the order specified, halting at the first error, if any. A &lt;b&gt;--&lt;/b&gt; marks the end of switches; the argument following the &lt;b&gt;--&lt;/b&gt; will be treated as a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="418bb828dcad3d29f68a62039731b0cd13a750c5" translate="yes" xml:space="preserve">
          <source>argument. So, if a class resides in a namespace, then the namespace needs to be specified as well. So, if a class &lt;b&gt;C&lt;/b&gt; resides in a namespace &lt;b&gt;N&lt;/b&gt;, then the command should be called like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="965e825d127822942a03ea25c8d47b77d97a422e" translate="yes" xml:space="preserve">
          <source>argument. The legal forms are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed2616f5650ec1545ccac9d7c86d35480b1b1b21" translate="yes" xml:space="preserve">
          <source>argument. The variable named by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a864aa4f133afce95db1704f58c4408aae3b283" translate="yes" xml:space="preserve">
          <source>argument. Valid for &lt;b&gt;KeyPress&lt;/b&gt; and &lt;b&gt;KeyRelease&lt;/b&gt; events. Corresponds to the &lt;b&gt;%K&lt;/b&gt; substitution for binding scripts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbded1c42febb83a50d3f50aa4882a2769f9ce9d" translate="yes" xml:space="preserve">
          <source>argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d20eee4d62af0dd4f3d0ce5a6611bece2414778" translate="yes" xml:space="preserve">
          <source>arguments (0 if none), not including the name of the script file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8216567cedefd140448f60a8bd2dc889e7db166b" translate="yes" xml:space="preserve">
          <source>arguments (0 if none), not including the options described above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3f04954b86880f00c9a9d1ac84071791cdf22a5" translate="yes" xml:space="preserve">
          <source>arguments (matching is done with the &lt;b&gt;&lt;a href=&quot;glob.htm&quot;&gt;glob&lt;/a&gt;&lt;/b&gt; command), generates an index of all the Tcl command procedures defined in all the matching files, and stores the index information in a file named &lt;b&gt;tclIndex&lt;/b&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6101a611fa3df52446c599e1c093b411492a7252" translate="yes" xml:space="preserve">
          <source>arguments (which are typically mouse coordinates) and the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dc6f8a41e635f9004ea967796c5d351e61929cf" translate="yes" xml:space="preserve">
          <source>arguments and the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72b2385c4de3e769860e87e28e3c58ac32546c41" translate="yes" xml:space="preserve">
          <source>arguments are added to the end of the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e069a3ff65bf8a6db362b93991fafdf088df4f7" translate="yes" xml:space="preserve">
          <source>arguments are appended. If no</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28886127302fe57d4bbb3f2aedc81ba231ab9666" translate="yes" xml:space="preserve">
          <source>arguments are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e02d9b6c32e440e73cc1d1d380ab6796b07b94c" translate="yes" xml:space="preserve">
          <source>arguments are concatenated as if they had been passed to &lt;b&gt;&lt;a href=&quot;concat.htm&quot;&gt;concat&lt;/a&gt;&lt;/b&gt;; the result is then evaluated in the variable context indicated by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5988ed5ff3ebef888e7c92f05518c737024c1758" translate="yes" xml:space="preserve">
          <source>arguments are concatenated together with space separators (just as in the &lt;b&gt;&lt;a href=&quot;concat.htm&quot;&gt;concat&lt;/a&gt;&lt;/b&gt; command). If there is a pending command that matches the string, it is canceled and will never be executed; if no such command is currently pending then the &lt;b&gt;after cancel&lt;/b&gt; command has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88aea6f6ccf5955d70a393a2d2ac268403218a56" translate="yes" xml:space="preserve">
          <source>arguments are in braces in the second form, no command or variable substitutions are performed on them; this makes the behavior of the second form different than the first form in some cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fd6f0db867787d2a21f0274673d5b5a599de04e" translate="yes" xml:space="preserve">
          <source>arguments are not processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce754e8097998bd82b5a0f9d5a86fa53dd7dad2" translate="yes" xml:space="preserve">
          <source>arguments are present, each</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="028fe7f8b80e222367dfd24da477fedc245c08dd" translate="yes" xml:space="preserve">
          <source>arguments are present, then the command to be executed is contained entirely within the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe2c80069d83b4d21b190545a1abf900e5dcb5c9" translate="yes" xml:space="preserve">
          <source>arguments are specified, then the bounding box spanning the rows and columns indicated is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb29f5bba7ac90a4be71c5e6a504389290244d3" translate="yes" xml:space="preserve">
          <source>arguments are specified, then the elements between</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eb006d8f61deabdc86e2cfd9bcf42e79261c9e3" translate="yes" xml:space="preserve">
          <source>arguments are supplied, the command returns a list containing alternating option names and values for the channel. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dd0f7e9309e190f0d6bca382564f114003636b8" translate="yes" xml:space="preserve">
          <source>arguments are supplied, then each argument is used in turn to address an element within a sublist designated by the previous indexing operation, allowing the script to alter elements in sublists (or append elements to sublists). The command,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b89bb51236b9a3fe62fc0a16a609aee3768a301e" translate="yes" xml:space="preserve">
          <source>arguments are supplied, then each argument is used in turn to select an element from the previous indexing operation, allowing the script to select elements from sublists. The command,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c98d2a221c5ef97b09aaef45f40e1806b294d62b" translate="yes" xml:space="preserve">
          <source>arguments have the same interpretation as for the &lt;b&gt;add&lt;/b&gt; widget command. It is not possible to insert new menu entries before the tear-off entry, if the menu has one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a10c5b4bba7f1699ced3300a414c81055123379" translate="yes" xml:space="preserve">
          <source>arguments have the same meaning as the corresponding dictionary values in the &lt;b&gt;params&lt;/b&gt; object command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16a048297228f159c9b71f1480f839c5875c84e2" translate="yes" xml:space="preserve">
          <source>arguments in order. As soon as it finds a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbf976dd6161ba267f3ef7e63b0762db227fa598" translate="yes" xml:space="preserve">
          <source>arguments in order. If there are more variable names than list elements, the remaining variables are set to the empty string. If there are more list elements than variables, a list of unassigned elements is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e94361878b076898033f36cbb2674783b6018bd4" translate="yes" xml:space="preserve">
          <source>arguments in the same fashion as the &lt;b&gt;&lt;a href=&quot;concat.htm&quot;&gt;concat&lt;/a&gt;&lt;/b&gt; command, then evaluates the resulting string as a Tcl script in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62357440033db2c06a41e862501d289d27ee8d3f" translate="yes" xml:space="preserve">
          <source>arguments in the same fashion as the &lt;b&gt;&lt;a href=&quot;concat.htm&quot;&gt;concat&lt;/a&gt;&lt;/b&gt; command, then evaluates the resulting string as a Tcl script in the slave interpreter identified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f598dc94ccfa689b7f21dd770bf18cb67f590b1a" translate="yes" xml:space="preserve">
          <source>arguments in the same fashion as the &lt;b&gt;&lt;a href=&quot;concat.htm&quot;&gt;concat&lt;/a&gt;&lt;/b&gt; command. The command will be executed at global level (outside the context of any Tcl procedure). If an error occurs while executing the delayed command then the background error will be reported by the command registered with &lt;b&gt;&lt;a href=&quot;interp.htm&quot;&gt;interp bgerror&lt;/a&gt;&lt;/b&gt;. The &lt;b&gt;after&lt;/b&gt; command returns an identifier that can be used to cancel the delayed command using &lt;b&gt;after cancel&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0101496462a52b7e1b923bfc9d23765300fcbb37" translate="yes" xml:space="preserve">
          <source>arguments indicates how the elements of the list are to be matched against</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c33bc4b91fc607bdaab81f9568313b6c44111403" translate="yes" xml:space="preserve">
          <source>arguments just before the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bfba45d5eff5e7cd54a6061700766ee862e3597" translate="yes" xml:space="preserve">
          <source>arguments just before the character at</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b846412958b3cb0c916065079b4069e1ec4c8f" translate="yes" xml:space="preserve">
          <source>arguments may contain any of the following special characters, which are a superset of those supported by &lt;b&gt;&lt;a href=&quot;string.htm&quot;&gt;string match&lt;/a&gt;&lt;/b&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa3cd826fbf1cf1e3bcafc670ce21eea89747197" translate="yes" xml:space="preserve">
          <source>arguments must be Tcl command strings, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="817f508831cfb00bde2823507a46edc9a80dd67d" translate="yes" xml:space="preserve">
          <source>arguments must be numeric values. At least one argument must be given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54be5461337dc9df6a0e459f50e63e5a46a37cad" translate="yes" xml:space="preserve">
          <source>arguments or if the matching items have empty bounding boxes (i.e. they have nothing to display) then an empty string is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c66750ef312ff115254e4fb63e5568252c0ff13" translate="yes" xml:space="preserve">
          <source>arguments specify the position at which the next read or write will occur for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc273e8fc16ca613ddb61fbb947ecc3aeb2f7078" translate="yes" xml:space="preserve">
          <source>arguments specify zero or more new arguments to be added to the list in place of those that were deleted. Each</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f3e4ece2dc478d311a52d2b6c0918f9165e1298" translate="yes" xml:space="preserve">
          <source>arguments that follow a &lt;b&gt;--&lt;/b&gt; option or do not match any of the options described in &lt;b&gt;&lt;a href=&quot;#M4&quot;&gt;OPTIONS&lt;/a&gt;&lt;/b&gt; above, in order, or an empty string if there are no such arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d80734d133f76a776863f61684e1059afb9b76af" translate="yes" xml:space="preserve">
          <source>arguments to &lt;b&gt;test&lt;/b&gt; define the test, including the scripts to run, the conditions under which to run them, the expected result, and the means by which the expected and actual results should be compared. See &lt;b&gt;&lt;a href=&quot;#M49&quot;&gt;TESTS&lt;/a&gt;&lt;/b&gt; below for a complete description of the valid options and how they define a test. The &lt;b&gt;test&lt;/b&gt; command returns an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f068c35b61a78221ca0b878a52893cd75453d7c" translate="yes" xml:space="preserve">
          <source>arguments to &lt;b&gt;tk::mac::iconBitmap&lt;/b&gt; define the dimensions of the image to create, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c35a921555ef70a252acdb471ed4a48c4fc581" translate="yes" xml:space="preserve">
          <source>arguments to pass to &lt;b&gt;test&lt;/b&gt;. However, these values are not passed directly, as in the alternate forms of &lt;b&gt;&lt;a href=&quot;switch.htm&quot;&gt;switch&lt;/a&gt;&lt;/b&gt;. Instead, this form makes an unfortunate attempt to overthrow Tcl's substitution rules by performing substitutions on some of the list elements as an attempt to implement a &amp;ldquo;do what I mean&amp;rdquo; interpretation of a brace-enclosed &amp;ldquo;block&amp;rdquo;. The result is nearly impossible to document clearly, and for that reason this form is not recommended. See the examples in &lt;b&gt;&lt;a href=&quot;#M121&quot;&gt;CREATING TEST SUITES WITH TCLTEST&lt;/a&gt;&lt;/b&gt; below to see that this form is really not necessary to avoid backslash-quoted newlines. If you insist on using this form, examine the source code of &lt;b&gt;tcltest&lt;/b&gt; if you want to know the substitution details, or just enclose the third through last argument to &lt;b&gt;test&lt;/b&gt; in braces and hope for the best.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf96117457809b57ac1bb4c9b6555a27ca037df" translate="yes" xml:space="preserve">
          <source>arguments to that list as a separate element, with spaces between elements. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efab689c3c0f8b563abbc43c4ce097e6425cb64f" translate="yes" xml:space="preserve">
          <source>arguments to the &lt;b&gt;option&lt;/b&gt; command are normally specified symbolically using one of the following values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f709a25812163aede8a48883251723ca2eb93f59" translate="yes" xml:space="preserve">
          <source>arguments to the &lt;b&gt;set&lt;/b&gt; widget command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cce81c50743bc8d5832df582a48433c41db5c38b" translate="yes" xml:space="preserve">
          <source>arguments to the current value of variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="866a35fc02b314edbafb29f0a5b59fb30b66088e" translate="yes" xml:space="preserve">
          <source>arguments to the last</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dd2c583b654536c81db7ac4337bd8e2d266db16" translate="yes" xml:space="preserve">
          <source>arguments to the last &lt;b&gt;scan mark&lt;/b&gt; command for the widget. It then adjusts the view by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa832e42c782d91a3117fdcc19d444fb1a22bacc" translate="yes" xml:space="preserve">
          <source>arguments to the last &lt;b&gt;scan mark&lt;/b&gt; command for the widget. It then adjusts the view by 10 times the difference in coordinates. This command is typically associated with mouse motion events in the widget, to produce the effect of dragging the list at high speed through the window. The return value is an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="342e32e55f1e5cdadabfd78a90347dfea1f2b56c" translate="yes" xml:space="preserve">
          <source>arguments together with space separators (just as in the &lt;b&gt;&lt;a href=&quot;concat.htm&quot;&gt;concat&lt;/a&gt;&lt;/b&gt; command), and arranges for the resulting script to be evaluated later as an idle callback. The script will be run exactly once, the next time the event loop is entered and there are no events to process. The command returns an identifier that can be used to cancel the delayed command using &lt;b&gt;after cancel&lt;/b&gt;. If an error occurs while executing the script then the background error will be reported by the command registered with &lt;b&gt;&lt;a href=&quot;interp.htm&quot;&gt;interp bgerror&lt;/a&gt;&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f75d7f40ccbd049614903aa7eec69cfad0cefe85" translate="yes" xml:space="preserve">
          <source>arguments will be passed to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51880e7649510a79f74cfc3f9ffde7ba60ee560b" translate="yes" xml:space="preserve">
          <source>arguments, and for each interpreter, it also deletes its slaves. The command also deletes the slave command for each interpreter deleted. For each</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c0ac4794e9410c4d5bdd75061f00890699153f0" translate="yes" xml:space="preserve">
          <source>arguments, and the section on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb2b9876e4b6a1c57ad2039100ee3ce06649db51" translate="yes" xml:space="preserve">
          <source>arguments, if any, specify additional arguments to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="459a75d021bb2236a6e346c43d2578f2bc8ace87" translate="yes" xml:space="preserve">
          <source>arguments, in order, or an empty string if there are no</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3350c4ac83c01f6fe1c13e9942bbb22b27d9ff49" translate="yes" xml:space="preserve">
          <source>arguments, plus all of their descendants. If a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c9ea5196dce62babe2c18f4b74669dc58f88dc" translate="yes" xml:space="preserve">
          <source>arguments, so that the virtual event will trigger whenever any one of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="106ed5c1c1ddc256f3ea3679fd5d0fa8557dcb92" translate="yes" xml:space="preserve">
          <source>arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42b53c5f646ccdcb9cd1e3a49793ba285d386992" translate="yes" xml:space="preserve">
          <source>arguments. &lt;b&gt;Lappend&lt;/b&gt; is similar to &lt;b&gt;&lt;a href=&quot;append.htm&quot;&gt;append&lt;/a&gt;&lt;/b&gt; except that the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0ee0a2135d5dca48ca256cdd29bb7ecaaf76bef" translate="yes" xml:space="preserve">
          <source>arguments. A scoped value is a list with three elements: the &quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d93c74e4527c00f68778a06b9454dc537572032" translate="yes" xml:space="preserve">
          <source>arguments. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d658a9e52b8e67ac95fc40bdfa00eff9c9832cc7" translate="yes" xml:space="preserve">
          <source>arguments. It does this by loading each file into a slave interpreter and seeing what packages and new commands appear (this is why it is essential to have &lt;b&gt;&lt;a href=&quot;package.htm&quot;&gt;package provide&lt;/a&gt;&lt;/b&gt; commands or &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TclLib/PkgRequire.htm&quot;&gt;Tcl_PkgProvide&lt;/a&gt;&lt;/b&gt; calls in the files, as described above). If you have a package split among scripts and binary files, or if you have dependencies among files, you may have to use the &lt;b&gt;-load&lt;/b&gt; option or adjust the order in which &lt;b&gt;pkg_mkIndex&lt;/b&gt; processes the files. See &lt;b&gt;&lt;a href=&quot;#M14&quot;&gt;COMPLEX CASES&lt;/a&gt;&lt;/b&gt; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab5a470816a09befc0f8954b126ec548fa7d8761" translate="yes" xml:space="preserve">
          <source>arguments. No particular order is guaranteed in the list, so if a sorted list is required the caller should use &lt;b&gt;&lt;a href=&quot;lsort.htm&quot;&gt;lsort&lt;/a&gt;&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0cc6a59e13d5cfe1b10d501bd56b8fbd4013c55" translate="yes" xml:space="preserve">
          <source>arguments. The command removes the tags from all characters in the file and also deletes any other information associated with the tags, such as bindings and display information. The command returns an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d19ab93f5b9855a6552ed627b76bac69b4b3256e" translate="yes" xml:space="preserve">
          <source>arguments. The current value will be stored in the global variable whose name is given by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8923d9e16831cf596e46adf87a833011db865df3" translate="yes" xml:space="preserve">
          <source>arguments. The first uses a separate argument for each of the patterns and commands; this form is convenient if substitutions are desired on some of the patterns or commands. The second form places all of the patterns and commands together into a single argument; the argument must have proper list structure, with the elements of the list being the patterns and commands. The second form makes it easy to construct multi-line switch commands, since the braces around the whole list make it unnecessary to include a backslash at the end of each line. Since the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29e4c8b48416764ff8b6235bc9015b76588ec5c1" translate="yes" xml:space="preserve">
          <source>arguments. The list has the form &amp;ldquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dca87969d72e908a55fe60ed4c91f7ebfe6b56aa" translate="yes" xml:space="preserve">
          <source>arguments. The removed marks will not be usable in indices and will not be returned by future calls to &amp;ldquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39fb7816e72e384fe70739fbfe25670ee6df5b20" translate="yes" xml:space="preserve">
          <source>arguments. The result of this command is the new value stored in variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="036381b1cfa2150b8d475e3f95d1e390791829bb" translate="yes" xml:space="preserve">
          <source>arguments. These options may be specified only on initial connection to a database, not in the &lt;b&gt;configure&lt;/b&gt; method of an existing connection. Default is not to use SSL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="380887fcdbd5af99d152af75e3b340e5fa39a751" translate="yes" xml:space="preserve">
          <source>arguments. Where two (or more) dictionaries contain a mapping for the same key, the resulting dictionary maps that key to the value according to the last dictionary on the command line containing a mapping for that key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c86b92870adce9cd4a78718538e907a5bfc8dbd" translate="yes" xml:space="preserve">
          <source>arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa3bce752ce1b1c483786953776d37a545585d93" translate="yes" xml:space="preserve">
          <source>arguments; when the second is present, it is exactly as if all the arguments from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44fa84e333f3362a12273e855dca2caf2666100b" translate="yes" xml:space="preserve">
          <source>argv</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6c7539a580ccb795677683c9f0303e194820459" translate="yes" xml:space="preserve">
          <source>argv0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19edc1210777ba4d45049c29280d9cc5e1064c25" translate="yes" xml:space="preserve">
          <source>array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb45c6dbbf3e0217ec95c9ef4e0441f8a34d3b82" translate="yes" xml:space="preserve">
          <source>array &amp;mdash; Manipulate array variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f41f45c098f492c62cb38e4d549694c82b53170" translate="yes" xml:space="preserve">
          <source>arrayName</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d9a1963883aae64af2fb351c6fe3cc292da633" translate="yes" xml:space="preserve">
          <source>arrayName list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cadb4dcd293a37875dab79c13febde688179489" translate="yes" xml:space="preserve">
          <source>arrayName searchId</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e1ccb8485d14b38448f26965e68fb4b37006d7f" translate="yes" xml:space="preserve">
          <source>as a Tcl list and returns the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bfb18853802d8c6f72a0d0fd24707d24c759393" translate="yes" xml:space="preserve">
          <source>as a Tcl script at the global level in the main interpreter as if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6efbb6d87c247b5643e61ad6d2df94e8e3e7db11" translate="yes" xml:space="preserve">
          <source>as a Tcl script at the global level in the main interpreter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e62bd25269587265b12e4cd227612de5c6fc9289" translate="yes" xml:space="preserve">
          <source>as a comparison command. To compare two elements, evaluate a Tcl script consisting of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="526ba91cdbefd77281fd6f424361c02a71079ebe" translate="yes" xml:space="preserve">
          <source>as a list and appends each of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ac1fb9eb1099bb37c876298b86ab9512d7c1922" translate="yes" xml:space="preserve">
          <source>as a list and assigns successive elements from that list to the variables given by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ca9764588ac17c7636de9b5229df634161009ad" translate="yes" xml:space="preserve">
          <source>as a list and returns a decimal string giving the number of elements in it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d380ecb17b73c460e11e013646bddbfe00356dde" translate="yes" xml:space="preserve">
          <source>as a new legal value of the &lt;b&gt;-match&lt;/b&gt; option to &lt;b&gt;test&lt;/b&gt;. When the &lt;b&gt;-match &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4584d7e106fc90cfcd29f434931dd919bc165441" translate="yes" xml:space="preserve">
          <source>as a regular expression and match it against the text using the rules for regular expressions (see the &lt;b&gt;&lt;a href=&quot;../tclcmd/regexp.htm&quot;&gt;regexp&lt;/a&gt;&lt;/b&gt; command and the &lt;b&gt;&lt;a href=&quot;../tclcmd/re_syntax.htm&quot;&gt;re_syntax&lt;/a&gt;&lt;/b&gt; page for details). The default matching automatically passes both the &lt;b&gt;-lineanchor&lt;/b&gt; and &lt;b&gt;-linestop&lt;/b&gt; options to the regexp engine (unless &lt;b&gt;-nolinestop&lt;/b&gt; is used), so that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62118314bd25bd677a0bb8bba139f951077c744a" translate="yes" xml:space="preserve">
          <source>as a whole will return that same error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ccc2c304a7e1f624711931f079cf18b76444c9" translate="yes" xml:space="preserve">
          <source>as active, which causes it to be displayed as specified by the &lt;b&gt;-activebackground&lt;/b&gt; and &lt;b&gt;-activerelief&lt;/b&gt; options. The only element values understood by this command are &lt;b&gt;arrow1&lt;/b&gt;, &lt;b&gt;slider&lt;/b&gt;, or &lt;b&gt;arrow2&lt;/b&gt;. If any other value is specified then no element of the scrollbar will be active. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78111dae0100c3d96b553fed00421632b6c7cf76" translate="yes" xml:space="preserve">
          <source>as additional arguments, prepended before any arguments passed in the invocation of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e58a71833016afe8fe141c166ba6cd3966158b89" translate="yes" xml:space="preserve">
          <source>as additional arguments. For example, suppose the command &lt;b&gt;set script [namespace code {foo bar}]&lt;/b&gt; is invoked in namespace &lt;b&gt;::a::b&lt;/b&gt;. Then &lt;b&gt;eval $script [list x y]&lt;/b&gt; can be executed in any namespace (assuming the value of &lt;b&gt;script&lt;/b&gt; has been passed in properly) and will have the same effect as the command &lt;b&gt;::namespace eval ::a::b {foo bar x y}&lt;/b&gt;. This command is needed because extensions like Tk normally execute callback scripts in the global namespace. A scoped command captures a command together with its namespace context in a way that allows it to be executed properly later. See the section &lt;b&gt;&lt;a href=&quot;#M29&quot;&gt;SCOPED SCRIPTS&lt;/a&gt;&lt;/b&gt; for some examples of how this is used to create callback scripts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bef27eb6a59301bb655588cf41bee0746f34318" translate="yes" xml:space="preserve">
          <source>as additional command line options send to the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f21f895f004b8be6bebebb83595103a5eb2eed7f" translate="yes" xml:space="preserve">
          <source>as an expression (in the same way that &lt;b&gt;&lt;a href=&quot;expr.htm&quot;&gt;expr&lt;/a&gt;&lt;/b&gt; evaluates its argument). The value of the expression must a proper boolean value; if it is a true value then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17849ed8637e066dc830372cb365c9dba5964d2f" translate="yes" xml:space="preserve">
          <source>as an expression (in the same way that &lt;b&gt;&lt;a href=&quot;expr.htm&quot;&gt;expr&lt;/a&gt;&lt;/b&gt; evaluates its argument). The value of the expression must be a boolean (a numeric value, where 0 is false and anything is true, or a string value such as &lt;b&gt;true&lt;/b&gt; or &lt;b&gt;yes&lt;/b&gt; for true and &lt;b&gt;false&lt;/b&gt; or &lt;b&gt;no&lt;/b&gt; for false); if it is true then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e549bedc09b1a1fe049e5bc9801eb12cfbd1d103" translate="yes" xml:space="preserve">
          <source>as an expression; if the result is non-zero it invokes the Tcl interpreter on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3d4f56adc7c30d25c1f130b84948f275e800357" translate="yes" xml:space="preserve">
          <source>as an index to a character, line and polygon items interpret it as an index to a coordinate (an x,y pair). For lines and polygons the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e489eb66119e16ebb4b8a370efbe26d51cf51c4f" translate="yes" xml:space="preserve">
          <source>as an index to a character, line and polygon items interpret it as an index to a coordinate (an x,y pair). The return value is guaranteed to lie between 0 and the number of characters, or coordinates, within the item, inclusive. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd2fee56a5f76fe9a562b2ebfec9711a3ab06cc6" translate="yes" xml:space="preserve">
          <source>as arguments. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59e9f2942a02df956e9d49e6ccc02d1c1f7e8b51" translate="yes" xml:space="preserve">
          <source>as defined in the application. Normally this is interpreted to be a string with terminating null. If &lt;b&gt;-binary&lt;/b&gt; is specified, the result is returned as a byte array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67bdbdd1f48548739adbf1371054f859df9797b4" translate="yes" xml:space="preserve">
          <source>as either a command or variable and returns its fully-qualified name. For example, if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15c21e6e4e11d3d66847b859d6a5948a97db8d3f" translate="yes" xml:space="preserve">
          <source>as file permissions, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c43a2c8318a3a12f0395081f0a3e008d5ad51a9" translate="yes" xml:space="preserve">
          <source>as if it were a command in the global namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="356c90920af87df27219e8d5f294791f4878397c" translate="yes" xml:space="preserve">
          <source>as if it were a command in the global namespace. Otherwise, if either</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ec3d38f3e8db28ff55581bc7cfdb8875b0acb53" translate="yes" xml:space="preserve">
          <source>as if the &lt;b&gt;&lt;a href=&quot;lindex.htm&quot;&gt;lindex&lt;/a&gt;&lt;/b&gt; command had been used to extract the element, then calls the Tcl interpreter to execute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acaa4a22adf71b972afd611c0501a5d14c6cb9fc" translate="yes" xml:space="preserve">
          <source>as in the form returned by &lt;b&gt;&lt;a href=&quot;array.htm&quot;&gt;array get&lt;/a&gt;&lt;/b&gt;. Each instance of a key in the string will be replaced with its corresponding value. If &lt;b&gt;-nocase&lt;/b&gt; is specified, then matching is done without regard to case differences. Both</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b50c02ae1a2c995c2360f3bc6ff29fbc568b986" translate="yes" xml:space="preserve">
          <source>as indices to a character, line and polygon items interpret them as indices to a coordinate (an x,y pair). Indices are described in &lt;b&gt;&lt;a href=&quot;#M19&quot;&gt;INDICES&lt;/a&gt;&lt;/b&gt; above. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05e02aef29cb66b2118795741de7a79314e2098d" translate="yes" xml:space="preserve">
          <source>as its handler. Any such channel is called a &lt;b&gt;reflected&lt;/b&gt; channel. The specified command prefix, &lt;b&gt;cmdPrefix&lt;/b&gt;, must be a non-empty list, and should provide the API described in the &lt;b&gt;&lt;a href=&quot;refchan.htm&quot;&gt;refchan&lt;/a&gt;&lt;/b&gt; manual page. The handle of the new channel is returned as the result of the &lt;b&gt;chan create&lt;/b&gt; command, and the channel is open. Use either &lt;b&gt;&lt;a href=&quot;close.htm&quot;&gt;close&lt;/a&gt;&lt;/b&gt; or &lt;b&gt;chan close&lt;/b&gt; to remove the channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00e6a12d1f70402b42421a17561e18d479225a59" translate="yes" xml:space="preserve">
          <source>as long as it is an icon window; this is needed in order to allow window managers to &amp;ldquo;own&amp;rdquo; those events. Note: not all window managers support the notion of an icon window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0520ad1067bc2852f06535240a0b246a2ec4f61b" translate="yes" xml:space="preserve">
          <source>as previous, but does no reporting (a &amp;ldquo;non-capturing&amp;rdquo; set of parentheses)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88ba9267fa0c711e29e93cc7fb953861710628c1" translate="yes" xml:space="preserve">
          <source>as special permission cases. On the Macintosh, MacOS types and creators are also supported, where any item which is four characters long is assumed to be a MacOS type (e.g. &lt;b&gt;&lt;a href=&quot;../tkcmd/text.htm&quot;&gt;TEXT&lt;/a&gt;&lt;/b&gt;). Items which are of the form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec2321822d8dbfa943fdddfecbad18f3429c9f34" translate="yes" xml:space="preserve">
          <source>as the &lt;b&gt;Content-Type&lt;/b&gt; value, instead of the default value (&lt;b&gt;application/x-www-form-urlencoded&lt;/b&gt;) during a POST operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e3ab584f92ce7cd8a35acf6cc230bd6cd61f3ae" translate="yes" xml:space="preserve">
          <source>as the name of the default database to use in MySQL queries. If not specified, the default database for the current user is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62dfb5703325aa431e2e7568da41baafd2874afb" translate="yes" xml:space="preserve">
          <source>as the name of the default database to use in Postgres queries. If not specified, the default database for the current user is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2510cfd74692d26ad4cf31b5831492f56e305930" translate="yes" xml:space="preserve">
          <source>as the title to be displayed in the window, and as the name of the interpreter for &lt;b&gt;&lt;a href=&quot;../tkcmd/send.htm&quot;&gt;send&lt;/a&gt;&lt;/b&gt; commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76e4bfeb1d43714d835f873df892b9374a1f5415" translate="yes" xml:space="preserve">
          <source>as the user name to the MySQL server. Default is the current user ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d015257ad8e6ee9eb60f6c1def2c732178378018" translate="yes" xml:space="preserve">
          <source>as the user name to the Postgres server. Default is the current user ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65e1855d1a21199fe14a51021142034c9c40857c" translate="yes" xml:space="preserve">
          <source>as the user's password to the MySQL server. Default is not to present a password.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a74346f7b0b7918f27765811676ea3509fcc7052" translate="yes" xml:space="preserve">
          <source>as the user's password to the Postgres server. Default is not to present a password.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="957f63b86f6d2574b2ee31bd0a4ebb0b43f939d0" translate="yes" xml:space="preserve">
          <source>as trusted. Does not expose the hidden commands. This command can only be invoked from a trusted interpreter. The command has no effect if the interpreter identified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85cba92ee017e82b5e978560ce086c81d432ed43" translate="yes" xml:space="preserve">
          <source>as well, and does not guarantee to only use a single encoding for a particular</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4dcd3a2f361bced5093d6c471b0ea59fc6e8fe8" translate="yes" xml:space="preserve">
          <source>associated window</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54ee86ea642c828a340fec18f5b4e76d158675ea" translate="yes" xml:space="preserve">
          <source>associated with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97829f247fc4cc3dee93cfde4d4bfc5821a7b2ab" translate="yes" xml:space="preserve">
          <source>associated with it. A tag is just a string of characters, and it may take any form except that of an integer. For example, &amp;ldquo;x123&amp;rdquo; is OK but &amp;ldquo;123&amp;rdquo; is not. The same tag may be associated with many different items. This is commonly done to group items in various interesting ways; for example, all selected items might be given the tag &amp;ldquo;selected&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="501911111e6904ed957688f08381089e1a6c3b09" translate="yes" xml:space="preserve">
          <source>associated with the tag given by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f1a87f90cc93b4b0764650bcd88ca6a5a4e29e0" translate="yes" xml:space="preserve">
          <source>associated with the trace. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20b1ebd16cd72d0a135816f0a76a466047dc4210" translate="yes" xml:space="preserve">
          <source>asyncPipeClose</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="309486a2a839c8bb5b6248a05939b5de6ad1cfb0" translate="yes" xml:space="preserve">
          <source>at appropriate times. However, once the focus has been given to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="354bce0bf9f3bdc794350583fccbde0714a32b9a" translate="yes" xml:space="preserve">
          <source>at each character that is in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae114f140bd35384444a4bf1a32ab7c7fea02fa5" translate="yes" xml:space="preserve">
          <source>at or before the specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9115452b67e199437aa4150ddb64bb62daa53f8" translate="yes" xml:space="preserve">
          <source>at the given coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e03f16d86fce1d000b872a1a0bd73ce301644429" translate="yes" xml:space="preserve">
          <source>at the same time .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a12434a1d2b93c6a075ff2976a747b370acdece5" translate="yes" xml:space="preserve">
          <source>at the same time . Attempt to write-lock same</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03b04cd012fd792d11e4d85403ca4bce9ceb80a5" translate="yes" xml:space="preserve">
          <source>at the time &lt;b&gt;upvar&lt;/b&gt; is invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f57180e462a4f1e9de24fbe811cfb2c24a0cf9" translate="yes" xml:space="preserve">
          <source>atom</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2defda207f038c170764b5e8a00836104481b65" translate="yes" xml:space="preserve">
          <source>attribute follows the same rules described for &lt;b&gt;-size&lt;/b&gt; in &lt;b&gt;&lt;a href=&quot;#M24&quot;&gt;FONT OPTIONS&lt;/a&gt;&lt;/b&gt; below. Any additional optional arguments following the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a4117a8c64592eb99a8704781ba312fd259514a" translate="yes" xml:space="preserve">
          <source>augments an existing binding rather than replacing it). In this case the return value is an empty string. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="167912da5651265468b652f9213f3701c54f1fba" translate="yes" xml:space="preserve">
          <source>auto-load path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ff3a489ae6596ff2210f545744c492019600618" translate="yes" xml:space="preserve">
          <source>auto_execok</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de974ed1bc9eda6f475b57ae242d55dfa6cd257" translate="yes" xml:space="preserve">
          <source>auto_execok, auto_import, auto_load, auto_mkindex, auto_qualify, auto_reset, tcl_findLibrary, parray, tcl_endOfWord, tcl_startOfNextWord, tcl_startOfPreviousWord, tcl_wordBreakAfter, tcl_wordBreakBefore &amp;mdash; standard library of Tcl procedures</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7850658e1561d987b9524346543d79fbf2ed801" translate="yes" xml:space="preserve">
          <source>auto_import</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7579727a5a396542445e54796d7ec33d100083db" translate="yes" xml:space="preserve">
          <source>auto_load</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dc0ce7a30d007a82f44214af94d1ddfd1161bec" translate="yes" xml:space="preserve">
          <source>auto_mkindex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b275fa490581c05854b1f79233218ffd550d010" translate="yes" xml:space="preserve">
          <source>auto_path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e3f71f5faf73e60e7e5bd155b6aef76afc3a32" translate="yes" xml:space="preserve">
          <source>auto_qualify</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d1103c7669cebbcc9a882cdcd2be4cd50e84f58" translate="yes" xml:space="preserve">
          <source>auto_reset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20fe8cd34fbc8820a6f7d2aef945850ed229542b" translate="yes" xml:space="preserve">
          <source>average-width characters on the display; if it is &lt;b&gt;pages&lt;/b&gt; then the view adjusts by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b3364deb09ee4c7f775a999a72ccb433d596c9" translate="yes" xml:space="preserve">
          <source>azure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="043aedcdca70de9c00fb4b67451426b48912d72a" translate="yes" xml:space="preserve">
          <source>azure1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0912b954f66527cee0571b1087fc5c7f68d9802f" translate="yes" xml:space="preserve">
          <source>azure2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec19d1439c822dfbc946bbde4e264f66e16886d" translate="yes" xml:space="preserve">
          <source>azure3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf7d2eab32cd85da9c38a5681c3f74013896e8cd" translate="yes" xml:space="preserve">
          <source>azure4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d71f5ee7c92d6dc9e92ffdad17b8bd49418f98" translate="yes" xml:space="preserve">
          <source>b</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a64e6e11e2bf9a51510e23e2b75896f75cf098" translate="yes" xml:space="preserve">
          <source>back reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="248a20b62efba8f4303c75830c83230f1b088f1e" translate="yes" xml:space="preserve">
          <source>background</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75d5451649017fb0cee30b79265107c6f464ad65" translate="yes" xml:space="preserve">
          <source>backslash substitution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66cdf1600430f705cc4d8f5e11204829f8383256" translate="yes" xml:space="preserve">
          <source>backspace, as in C</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1405df66cbe219b0bf6355bc3d60361a8376b6b4" translate="yes" xml:space="preserve">
          <source>base</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad73e87621f932dc52d619d8957c452b70f4a1e7" translate="yes" xml:space="preserve">
          <source>base time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb8c6f8fe01cd48b2f2a49b198c3e0832b2403c6" translate="yes" xml:space="preserve">
          <source>baseClass</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="681770566ce9ee394a19fe9ac8490885034693af" translate="yes" xml:space="preserve">
          <source>baseExtendedclass</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8053571c750b2877c14cba4dc524fa7540cdb01a" translate="yes" xml:space="preserve">
          <source>baseHeight</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fceea6ca8b200357fb307d193ba3903e4f7820b" translate="yes" xml:space="preserve">
          <source>baseWidget</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b306661452fcf87b5a79d43511b57d86280db5a7" translate="yes" xml:space="preserve">
          <source>baseWidth</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fdf8862f63eea5074b9e053f54c8354a96ddac9" translate="yes" xml:space="preserve">
          <source>baseWidth baseHeight widthInc heightInc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="773d8d20790893183df7ebaa2d93983bb1050f9e" translate="yes" xml:space="preserve">
          <source>based on the key-value pairs in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03880af12f39f7d21207ce24e2167bd630152840" translate="yes" xml:space="preserve">
          <source>based on the named photo images. If &lt;b&gt;-default&lt;/b&gt; is specified, this is applied to all future created toplevels as well. The data in the images is taken as a snapshot at the time of invocation. If the images are later changed, this is not reflected to the titlebar icons. Multiple images are accepted to allow different images sizes (e.g., 16x16 and 32x32) to be provided. The window manager may scale provided icons to an appropriate size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ccafc01af52d7e7de85d47e6cb0766c2b57623a" translate="yes" xml:space="preserve">
          <source>basedon</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="616d7339de87fc93804c23fbc4c818e4e67870e0" translate="yes" xml:space="preserve">
          <source>basename version patch initScript enVarName varName</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33a8fc0f594065496159ef54c86fa656a8fd077e" translate="yes" xml:space="preserve">
          <source>basenameversion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a7508ed1b04e9ada836fcd14d4d8ef5687c7dd" translate="yes" xml:space="preserve">
          <source>basic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4518eadb2caf81f7fb969b31b6724ef66ecb7a2f" translate="yes" xml:space="preserve">
          <source>baud</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a900f538965a426994e1e90600920aff0b4e8d2" translate="yes" xml:space="preserve">
          <source>bb</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d3e48ceea73c68debaa090cde0e974557afe4d4" translate="yes" xml:space="preserve">
          <source>be computed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0884183328a3b9e5472fbd776e41afe7965745ee" translate="yes" xml:space="preserve">
          <source>be sorted before use with this subcommand, so that the list of matches presented in the error message also becomes sorted, though this is not strictly necessary for the operation of this subcommand itself.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b018e327e104c0ccb95340cfd2c9d23b1fc17587" translate="yes" xml:space="preserve">
          <source>because of end-of-file or because of insufficient data in non-blocking mode, then the return count is -1. Note that if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee2b2fcc7870d7566c9e4fa8ee6f1a5e1c02f612" translate="yes" xml:space="preserve">
          <source>becomes a command in the current context, handling the creation of objects for this class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa4235ac9112413147b59542a1933c274f1d244c" translate="yes" xml:space="preserve">
          <source>becomes a command in the current context, handling the creation of objects for this extendedclass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa5f3e2ceb285e1fbb904347f3341bcec94e9e0c" translate="yes" xml:space="preserve">
          <source>becomes a command in the current context, handling the creation of objects for this widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf09e9390ae3deaa79463c49fdecf9c28607d8c" translate="yes" xml:space="preserve">
          <source>becomes a separate element of the result list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e4c859cb032164846b8eaf7a1d64b5f55b61284" translate="yes" xml:space="preserve">
          <source>becomes one word of a command, and each distinct command becomes a subprocess.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="838ecfb295f83f7f3587dbde2ce97f0cb2f2d6bc" translate="yes" xml:space="preserve">
          <source>becomes the new selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c5c5827b11970693e2a7d5340c35b94aa6accb4" translate="yes" xml:space="preserve">
          <source>becomes unavailable for future use (both only if the channel is being completely closed).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15c8233dc40684db002cad0ca083ac4dfcc8a306" translate="yes" xml:space="preserve">
          <source>becomes unavailable for use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51de2b835bd35a67eb32dbcd3d77d4b96e5aa39d" translate="yes" xml:space="preserve">
          <source>before</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6840929cb1499c56a2cde05ba3a9c5a200e69c2e" translate="yes" xml:space="preserve">
          <source>before comparison.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb7a90e8abc0e829619889c712794ead15244a2f" translate="yes" xml:space="preserve">
          <source>before evaluation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3585bd10132f402a0f5a5a6367bf177b615bfcda" translate="yes" xml:space="preserve">
          <source>before invoking it. If all arguments are specified then a new binding is created, replacing any existing binding for the same</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cfc800d26866fea6e6b6e32271a40501b79907a" translate="yes" xml:space="preserve">
          <source>beforeThis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36c742bee2bb8b8f9559e8db3195d6b382817f08" translate="yes" xml:space="preserve">
          <source>begins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb106223f786575da2c2c683b1b222da613a33ec" translate="yes" xml:space="preserve">
          <source>begins with a dash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e423a4e4d7669a8a65a05043e4a0c183a4d02220" translate="yes" xml:space="preserve">
          <source>begins with a dot, as in &lt;b&gt;.a.b.c&lt;/b&gt;, then it must be the path name for a window; otherwise it may be an arbitrary string. Each window has an associated list of tags, and a binding applies to a particular window if its tag is among those specified for the window. Although the &lt;b&gt;&lt;a href=&quot;bindtags.htm&quot;&gt;bindtags&lt;/a&gt;&lt;/b&gt; command may be used to assign an arbitrary set of binding tags to a window, the default binding tags provide the following behavior:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="911ae51d1423bcb924995fd64cd58073ff70e7b3" translate="yes" xml:space="preserve">
          <source>beige</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04bf886e8ac26aef79ce20e35be5e4e7220e2db3" translate="yes" xml:space="preserve">
          <source>bell</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b6011a01ed4a4100889aca4935a84bd7c31efe6" translate="yes" xml:space="preserve">
          <source>bell &amp;mdash; Ring a display's bell</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bcc44601436ba2a78ddb10e2c90d0a70651ec44" translate="yes" xml:space="preserve">
          <source>belowThis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c61e360334e7e0e8552005917424a5f91ff8b449" translate="yes" xml:space="preserve">
          <source>between the selection anchor point and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="611cb61ad01050250c96626432a42a091a471ee1" translate="yes" xml:space="preserve">
          <source>bgerror</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="743a5b5055d71794faf3e4b0ddf4d4fb292d3694" translate="yes" xml:space="preserve">
          <source>bgerror &amp;mdash; Command invoked to process background errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bdf65270472bfd3990b99efb35d0687482323a9" translate="yes" xml:space="preserve">
          <source>binData</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e57cfe843145135aee1f4d0d63ceb7842093712" translate="yes" xml:space="preserve">
          <source>binary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7165295b2d061f05f14408ad382071a433dc1180" translate="yes" xml:space="preserve">
          <source>binary &amp;mdash; Insert and extract fields from binary strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eb3463f898b357d8d5f6cb8572992bc07006b77" translate="yes" xml:space="preserve">
          <source>binary digits in low-to-high order represented as a sequence of &amp;ldquo;1&amp;rdquo; and &amp;ldquo;0&amp;rdquo; characters. The data bytes are scanned in first to last order with the bits being taken in low-to-high order within each byte. Any extra bits in the last byte are ignored. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3298985dc000726ee40b191221f4c1356b1f4196" translate="yes" xml:space="preserve">
          <source>binary digits in low-to-high order within each byte in the output string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bdd4db977b0f96aaf3bff2e4300153c648ca382" translate="yes" xml:space="preserve">
          <source>bind</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7493d32483ec5c9fd1c4f16a0cc9cf4ca50f5f6a" translate="yes" xml:space="preserve">
          <source>bind &amp;mdash; Arrange for X events to invoke Tcl scripts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ba25716941e6d1b58ad289643f72c2f28b7dcc7" translate="yes" xml:space="preserve">
          <source>bindata</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f7babfe7b8a6b5e06f1c4d3563fa00cd65ad843" translate="yes" xml:space="preserve">
          <source>binding tags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39cbe3389bc54e5196000cd02556d1f399e5c038" translate="yes" xml:space="preserve">
          <source>bindtags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f3c21770ac3080eb6dad948147b0043e5d15760" translate="yes" xml:space="preserve">
          <source>bindtags &amp;mdash; Determine which bindings apply to a window, and order of evaluation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="911e88a93e437b4976d15f34fa850011c7261af2" translate="yes" xml:space="preserve">
          <source>bindtags(n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6822f275fef591bd028d359c5e65588f81f56fd2" translate="yes" xml:space="preserve">
          <source>bisque</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e629003f7ddafae1d12f4ec58df345d59cce150" translate="yes" xml:space="preserve">
          <source>bisque1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="464d7754dd08f7a62a32af49aff97fc478510acb" translate="yes" xml:space="preserve">
          <source>bisque2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81ad7f9035a1440fce2fc3270cf74d88875e8213" translate="yes" xml:space="preserve">
          <source>bisque3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71b83903f8e4452e645b6e2ea4b29a93566dd7ef" translate="yes" xml:space="preserve">
          <source>bisque4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30daf508e3328242e1c0c273cf91dc6ea1476f09" translate="yes" xml:space="preserve">
          <source>bitmap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd2347dedb5b64c97f3ff864fcf2a3ae27b6bde" translate="yes" xml:space="preserve">
          <source>bitmap &amp;mdash; Images that display two colors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2392ac41f630094100935d2071ae45d036be26fb" translate="yes" xml:space="preserve">
          <source>bitmap: cget</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd501983ae912fa5dfb2dfef8fe88c312c0be700" translate="yes" xml:space="preserve">
          <source>bitmap: configure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="466bc8cef3e71de796ec483e212724a2c2044c68" translate="yes" xml:space="preserve">
          <source>black</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaf8b6b91ef17249b3ddef7d6943cc246284fbb8" translate="yes" xml:space="preserve">
          <source>blanched almond</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85457a10a809a75d5b59becb5026183c3a4380e1" translate="yes" xml:space="preserve">
          <source>blend in with the rest of the desktop (Gnome, KDE, Java)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="342f924422fdc7da660bb66921e329770d853fa7" translate="yes" xml:space="preserve">
          <source>block indefinitely</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c9a82ce72ca2519f38d0af0abbb4cecb9fceca9" translate="yes" xml:space="preserve">
          <source>blue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="648f6923c24b6a60829bf89c4b007e6bba27ceb5" translate="yes" xml:space="preserve">
          <source>blue violet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e4b1601012f32ac576cd75829acb7bc28aaddeb" translate="yes" xml:space="preserve">
          <source>blue1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d013358f065692f0960d38116b1f5a0a2fec5e8c" translate="yes" xml:space="preserve">
          <source>blue2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b89110b237356ad9522e7151edfcd15b852a20fc" translate="yes" xml:space="preserve">
          <source>blue3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ea15f25ee01cf916a7718b6b0d443f4db818833" translate="yes" xml:space="preserve">
          <source>blue4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02083f4579e08a612425c0c1a17ee47add783b94" translate="yes" xml:space="preserve">
          <source>body</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2036938445613634443bf51189f32d195bd5274" translate="yes" xml:space="preserve">
          <source>body (&lt;b&gt;b&lt;/b&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87e74c65eebc287edd6ed6117e8bc317cacbe40a" translate="yes" xml:space="preserve">
          <source>body result</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5974810247bc35a4459fc4e14a3bdc09775128ca" translate="yes" xml:space="preserve">
          <source>body1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="732c4de9ef72a77f4d9ad135c5b29bc31f4bc546" translate="yes" xml:space="preserve">
          <source>body2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d371074ed2277e0968209137208f68143951a0e" translate="yes" xml:space="preserve">
          <source>bodyN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78e604dece381ea509fdab1caf937b5b92881403" translate="yes" xml:space="preserve">
          <source>bodyScript</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5039d155a71c0a5f7a2b2654ad49cb7ee47a8980" translate="yes" xml:space="preserve">
          <source>bool</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48647474b89fa8f56ed6bda0f8148a17b51b97bd" translate="yes" xml:space="preserve">
          <source>boolean</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59912ec77c64ff26126091548c97031195a7a8f3" translate="yes" xml:space="preserve">
          <source>border_width</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="497b041d9963d6edbaa21b03aee6b6e07b132479" translate="yes" xml:space="preserve">
          <source>both having the same value, then the form earlier in the above list takes precedence. If modifiers follow the base index, each one of them must have one of the forms listed below. Keywords such as &lt;b&gt;chars&lt;/b&gt; and &lt;b&gt;wordend&lt;/b&gt; may be abbreviated as long as the abbreviation is unambiguous.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82a12a2d5a2c8dadb415dcef25e88843fe87df3a" translate="yes" xml:space="preserve">
          <source>both return 1. The first comparison is done using integer comparison, and the second is done using string comparison. Because of Tcl's tendency to treat values as numbers whenever possible, it is not generally a good idea to use operators like &lt;b&gt;==&lt;/b&gt; when you really want string comparison and the values of the operands could be arbitrary; it is better in these cases to use the &lt;b&gt;eq&lt;/b&gt; or &lt;b&gt;ne&lt;/b&gt; operators, or the &lt;b&gt;&lt;a href=&quot;string.htm&quot;&gt;string&lt;/a&gt;&lt;/b&gt; command instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18dd096e57e93d497ec552be7e864098472d92a1" translate="yes" xml:space="preserve">
          <source>both return 1.25. Floating-point values are always returned with a &amp;ldquo;&lt;b&gt;.&lt;/b&gt;&amp;rdquo; or an &amp;ldquo;&lt;b&gt;e&lt;/b&gt;&amp;rdquo; so that they will not look like integer values. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c03e9099aad17cb58e4fff1d93d751105735c9c2" translate="yes" xml:space="preserve">
          <source>bottom</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d46077c78ecf87402848fc9f920b72cde953b02" translate="yes" xml:space="preserve">
          <source>bound</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c02a02b0d7fa315886dd589e9302ecc3f3af3f84" translate="yes" xml:space="preserve">
          <source>bound variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07cea28d8b80e068f0d7c63bd46a9f95f3764731" translate="yes" xml:space="preserve">
          <source>bracket expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52a9ce4a0d3c21f1c0c5dc576930fbb59ad74018" translate="yes" xml:space="preserve">
          <source>branches</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f9cac8dbc4c67a388b8379dcc126c90c7c5e72a" translate="yes" xml:space="preserve">
          <source>break</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c4127468d0a8860da14ef00c729aa0fde11f8a" translate="yes" xml:space="preserve">
          <source>break &amp;mdash; Abort looping command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9166eeff1e5056d4b9be3fc9a74f67e3149ef467" translate="yes" xml:space="preserve">
          <source>brown</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13fe2f15e7009f12a6e6b5c8657b355d7f1478de" translate="yes" xml:space="preserve">
          <source>brown1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a7d74d1ac30c5b569f291254811a0bb64d6be12" translate="yes" xml:space="preserve">
          <source>brown2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31cd66e6723e35a65dcacb71d932faa7e53932f7" translate="yes" xml:space="preserve">
          <source>brown3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="381bf684528218578f6737efba6732731b302074" translate="yes" xml:space="preserve">
          <source>brown4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e53c2ea1fe4bd2b78bf4723c7c155a578e020a25" translate="yes" xml:space="preserve">
          <source>buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f75e94dcc92ecc309ef861e9a10fffb6b1a383af" translate="yes" xml:space="preserve">
          <source>bufferSize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54aa33124a7a264ebd3e05562b607d8aa2ae603a" translate="yes" xml:space="preserve">
          <source>burlywood</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7671a0889fd366cf70d77fbeccccefaa393fcdcd" translate="yes" xml:space="preserve">
          <source>burlywood1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="039623f7739a78133ea54d8c48469e638784e216" translate="yes" xml:space="preserve">
          <source>burlywood2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0320eaf9edc012e4db47d52b6dd85e8fa77edf93" translate="yes" xml:space="preserve">
          <source>burlywood3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb0124d26cc15cf4fc90bef1efa899793545123a" translate="yes" xml:space="preserve">
          <source>burlywood4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e18a89f9cc5b6b19f34147080e547d4e5e23b829" translate="yes" xml:space="preserve">
          <source>busy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="994e7d2718bd33dcf2f0c67c63afac04f1c86edd" translate="yes" xml:space="preserve">
          <source>busy &amp;mdash; confine pointer and keyboard events to a window sub-tree</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d6a069161ca29adf5db393487ccbca56024535e" translate="yes" xml:space="preserve">
          <source>but with its characters in the reverse order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b7fcc78d6cd1507925b769b1386ced3683f99c7" translate="yes" xml:space="preserve">
          <source>button</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e03b3d6c2ef86ab3ced7cb2657a08ff4ecd4e72" translate="yes" xml:space="preserve">
          <source>button &amp;mdash; Create and manipulate 'button' action widgets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8660d4b944d996de15461b9a949e507c85e43e8" translate="yes" xml:space="preserve">
          <source>button: cget</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="befd59893a220a215a5fbdfd587596c5dd949ae1" translate="yes" xml:space="preserve">
          <source>button: configure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f41d24f614246b6a8db82030f8039d55a4da54e" translate="yes" xml:space="preserve">
          <source>button: flash</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8224ede2ce83775e35514683ea069feca543ab27" translate="yes" xml:space="preserve">
          <source>button: invoke</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="408158643ed564c72fa0921826f8294d71ccbf7c" translate="yes" xml:space="preserve">
          <source>by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b22983622b5bb39cb1cf639269981ef854de265" translate="yes" xml:space="preserve">
          <source>by a factor of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee2625a06227e02c08751bad1905ba14a74fde6e" translate="yes" xml:space="preserve">
          <source>by inserting all of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a99d4f388df59dd8547955f7cf44bcbd2130ca" translate="yes" xml:space="preserve">
          <source>by one (1) . Command returns the value of the reference counter after the increment . By incrementing the reference counter, the caller signalizes that he/she wishes to use the resource for a longer period of time .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08d34478b4a8f9f8fb62e2a50e451cc7a7115879" translate="yes" xml:space="preserve">
          <source>by one (1) .Command returns the value of the reference counter after the decrement . When the reference counter reaches zero (0), the threadpool</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49773b5a8de374ea3f0dbf8f56a799ac489ff798" translate="yes" xml:space="preserve">
          <source>by repeating</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="499883d5d24f4633bd5ff98749f03627c3cc248c" translate="yes" xml:space="preserve">
          <source>by the &lt;b&gt;tk_messageBox&lt;/b&gt;. Its arguments describe a dialog box:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daf529a73101c2be626b99fc6938163e7a27620b" translate="yes" xml:space="preserve">
          <source>bytes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0909fc4e7e9efaa3d514b161ecd5d204b8e2a97" translate="yes" xml:space="preserve">
          <source>bytes are read at once. After each block, a call to the &lt;b&gt;-progress&lt;/b&gt; callback is made (if that option is specified).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d83670fd7e83b1b4bd7f1948d4718b0f710aa279" translate="yes" xml:space="preserve">
          <source>bytes are written at once. After each block, a call to the &lt;b&gt;-queryprogress&lt;/b&gt; callback is made (if that option is specified).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c891deefb0ebeb258751a424240b5fcea1b3b74c" translate="yes" xml:space="preserve">
          <source>bytes from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fc3869935f0ceb148bf30dbbde841b1b46bd367" translate="yes" xml:space="preserve">
          <source>bytes from the current access position; a negative</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52cc3782574a3531c204204747ab2e3d3bae87b7" translate="yes" xml:space="preserve">
          <source>bytes from the end of the file or device. A negative</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f75e4ec5ea4d1f8926a48b69562411001063bd97" translate="yes" xml:space="preserve">
          <source>bytes from the start of the underlying file or device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2d7ef1764a398e54043cba321a24114fa783a01" translate="yes" xml:space="preserve">
          <source>bytes in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4072c11c5cc66a98f89b26ea3d9ab73023547dee" translate="yes" xml:space="preserve">
          <source>bytes in the output string. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0655c22cfbbc2fcf698e7e6f68917faea6d994a6" translate="yes" xml:space="preserve">
          <source>bytes or characters have been transferred;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44862ba9d912d9782debaf783cc256dce12055fa" translate="yes" xml:space="preserve">
          <source>bytes relative to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf60c7216c8cd83e8a0464b1e6a401c1456b4f7c" translate="yes" xml:space="preserve">
          <source>bytes, then additional zero bytes are used to pad out the field. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84a516841ba77a5b4648de2cd0dfcb30ea46dbb4" translate="yes" xml:space="preserve">
          <source>c</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a5bef3393fb3f7eadbe8475b9c64f1f48720002" translate="yes" xml:space="preserve">
          <source>cadet blue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc8d8647b02deea0ab3e715c220d041ee78cc19d" translate="yes" xml:space="preserve">
          <source>call</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4d5b37bf7a986c138ede89e0806f366b5cb1830" translate="yes" xml:space="preserve">
          <source>callback</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
