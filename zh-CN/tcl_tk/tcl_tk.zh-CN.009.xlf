<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="tcl_tk">
    <body>
      <group id="tcl_tk">
        <trans-unit id="a94e66cbbe1c71b641ec7fcb57325370e0bb1e27" translate="yes" xml:space="preserve">
          <source>Default bindings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac1da383fc31dd08640e0511696ccecc3ff557d" translate="yes" xml:space="preserve">
          <source>Default paths</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d280618f6763db63d334dcb231e2170a21dd60" translate="yes" xml:space="preserve">
          <source>Default. This means no validation will occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78283705d62e2accd965e667c4c9ba3b08c9b7c6" translate="yes" xml:space="preserve">
          <source>Default. This means validation will only occur when specifically requested by the &lt;b&gt;validate&lt;/b&gt; widget command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de2a5a773749630ef546249efef278eac841af40" translate="yes" xml:space="preserve">
          <source>Define a procedure that computes an &amp;ldquo;interesting&amp;rdquo; mathematical function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66505155a08c667a63a1a8c34815fdd9cb1c3021" translate="yes" xml:space="preserve">
          <source>Define the widget layout for style</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53db476f76c9eb7e161b8d1cab632b68351bbaca" translate="yes" xml:space="preserve">
          <source>Defines a delegated option; the namespec is defined as for the option statement. When the configure, configurelist, or cget instance method is used to set or retrieve the option's value, the equivalent configure or cget command will be applied to the component as though the option was defined with the following &lt;b&gt;-configuremethod&lt;/b&gt; and &lt;b&gt;-cgetmethod&lt;/b&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a94a75a253b1c641042aa48fa424ee7b1a0bf2d9" translate="yes" xml:space="preserve">
          <source>Defines an object-specific variable named</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b40d9e0a834284a68f17170fd04b527f024a339" translate="yes" xml:space="preserve">
          <source>Defines and possibly runs a test with the name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97d73a9b214008a4e39af4a4adee16f8f765f20f" translate="yes" xml:space="preserve">
          <source>Defines the option's default value; the option's default value will be &quot;&quot; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15225baac48fc3d689cb2b0f74b936eff4339ff7" translate="yes" xml:space="preserve">
          <source>Definitions</source>
          <target state="translated">Definitions</target>
        </trans-unit>
        <trans-unit id="f36756a2375aeaf9260cc6764ebee064766205e8" translate="yes" xml:space="preserve">
          <source>Degrees</source>
          <target state="translated">Degrees</target>
        </trans-unit>
        <trans-unit id="c5699ef8a7fef6d1cfe9918e695e350e2c9c97e8" translate="yes" xml:space="preserve">
          <source>Delete a range of characters from the text. If both</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2680d76c043914e7cae64031ee95f03d07e9c231" translate="yes" xml:space="preserve">
          <source>Delete all of the menu entries between</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30c9cb37066af49dcb85e305b72f15eefbd96d84" translate="yes" xml:space="preserve">
          <source>Delete each of the items given by each</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85c1766bd46ffe33f12acab7f1f364469cf2dd56" translate="yes" xml:space="preserve">
          <source>Delete one or more elements of the entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a62ca8313fba6a8a466d9ca4a5d583e4700dafe" translate="yes" xml:space="preserve">
          <source>Delete one or more elements of the spinbox.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae0987d54bb68dc5c06acfef4c554e45d3e1c61" translate="yes" xml:space="preserve">
          <source>Delete the currently selected widget contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="861323c19f35bd8996c398a2ecd8aab04feaec1f" translate="yes" xml:space="preserve">
          <source>Delete the field specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90b438e8126a6433005ed9ba6e3fc436049a5890" translate="yes" xml:space="preserve">
          <source>Delete the specified named fonts. If there are widgets using the named font, the named font will not actually be deleted until all the instances are released. Those widgets will continue to display using the last known values for the named font. If a deleted named font is subsequently recreated with another call to &lt;b&gt;font create&lt;/b&gt;, the widgets will use the new named font and redisplay themselves using the new attributes of that font.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3689b284294b0a6a38188002506956b91ddf3885" translate="yes" xml:space="preserve">
          <source>Deletes all tag information for each of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dabd22dbae70a0ad3732cf78f6790c44a4b33f31" translate="yes" xml:space="preserve">
          <source>Deletes an entry from the named in-memory database .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d08b6e1f4c104c13454851c0ca47de79ef801693" translate="yes" xml:space="preserve">
          <source>Deletes each of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa1caf6a64546c679057185514405fc24da59c3a" translate="yes" xml:space="preserve">
          <source>Deletes each of the items in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b172f161f26c164131dbf1e95f252f830a174af5" translate="yes" xml:space="preserve">
          <source>Deletes each of the named images and returns an empty string. If there are instances of the images displayed in widgets, the images will not actually be deleted until all of the instances are released. However, the association between the instances and the image manager will be dropped. Existing instances will retain their sizes but redisplay as empty areas. If a deleted image is recreated with another call to &lt;b&gt;image create&lt;/b&gt;, the existing instances will use the new image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7129ad76227d4aa5d07dfbf58a19b09fd8008b88" translate="yes" xml:space="preserve">
          <source>Deletes one or more &lt;b&gt;[incr Tcl]&lt;/b&gt; classes called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd193c8c4ead461838920d97a6c5c90ee31d5df8" translate="yes" xml:space="preserve">
          <source>Deletes one or more &lt;b&gt;[incr Tcl]&lt;/b&gt; objects called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd197d22cad20eb4508decff85f48503b4bd461e" translate="yes" xml:space="preserve">
          <source>Deletes one or more elements of the listbox.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9997f59a934b19a107edeee9ff9d4429ad778f9" translate="yes" xml:space="preserve">
          <source>Deletes one or more namespaces called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="755de629d2514b5e03c462ef31e74fff7876f105" translate="yes" xml:space="preserve">
          <source>Deletes the alias for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c122cbe9be97177ce34c49b9ef5f325b58c4476" translate="yes" xml:space="preserve">
          <source>Deletes the safe interpreter and cleans up the corresponding master interpreter data structures. If a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41efc854b8167efb06cbd792262a181c8283e138" translate="yes" xml:space="preserve">
          <source>Deletes this stream and frees up all resources associated with it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16bfe39382dc91511428e10fa538dcd23c15292d" translate="yes" xml:space="preserve">
          <source>Deletes zero or more interpreters given by the optional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2dc0bd1eb8052c6f4edd1aa1dae221e33dfb1c1" translate="yes" xml:space="preserve">
          <source>Deleting the last element from a list in a variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7311df150011bf444e48219be793ce873c6277a3" translate="yes" xml:space="preserve">
          <source>Depending on the theme, the default button may be displayed with an extra highlight ring, or with a different border color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a2a3d0ec4331aad265b33377add959bfe30bf0" translate="yes" xml:space="preserve">
          <source>Depending on whether</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="4808eef16777ebce1dd88b791d356ab2c58d2122" translate="yes" xml:space="preserve">
          <source>Deselects the checkbutton and sets the associated variable to its &amp;ldquo;off&amp;rdquo; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c93a4fe7c9ca41aa65ec9a4ab4890a45847ae376" translate="yes" xml:space="preserve">
          <source>Deselects the radiobutton and sets the associated variable to an empty string. If this radiobutton was not currently selected, the command has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55eb6c632dd6e2b081aa93f51632867101698a34" translate="yes" xml:space="preserve">
          <source>Destroy all checkbuttons that are direct children of the given widget:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f1caeaf9792bd01b401f902a46402ddbd8cef07" translate="yes" xml:space="preserve">
          <source>Destroying the widget will also clean up any resources allocated by the &lt;b&gt;tk busy&lt;/b&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50cb53bbc944376fb002a6aac3367255f6af1857" translate="yes" xml:space="preserve">
          <source>Destroys all the information cached by &lt;b&gt;auto_execok&lt;/b&gt; and &lt;b&gt;auto_load&lt;/b&gt;. This information will be re-read from disk the next time it is needed. &lt;b&gt;Auto_reset&lt;/b&gt; also deletes any procedures listed in the auto-load index, so that fresh copies of them will be loaded the next time that they are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5115e709b690a9f6aa57cef1f29643d5eab5b8f9" translate="yes" xml:space="preserve">
          <source>Destroys condition variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a191415ad34bf627f006977df568b7f252456d61" translate="yes" xml:space="preserve">
          <source>Destroys the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f14415c38ac34c43fd88f6d7165b5ebb24f429c" translate="yes" xml:space="preserve">
          <source>Destroys the reader/writer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d7cee8d831e6fbdb0fb4f7b79b60e43b939cbf" translate="yes" xml:space="preserve">
          <source>Destructor</source>
          <target state="translated">Destructor</target>
        </trans-unit>
        <trans-unit id="7c9a7c0610c1bc20abb9c9d07094daa33576a8f8" translate="yes" xml:space="preserve">
          <source>Detail</source>
          <target state="translated">Detail</target>
        </trans-unit>
        <trans-unit id="e76c9a29842bb593b5466249527453fca2db29a0" translate="yes" xml:space="preserve">
          <source>Detailed definitions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e98163be47f667142289f1f7b1206e32f0faa109" translate="yes" xml:space="preserve">
          <source>Detailed semantics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="894360cd140db25943df1304f8e0662512ac2d4f" translate="yes" xml:space="preserve">
          <source>Details on formatting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="606c5ef4e877943684cff9d5d987e5093ba4c52a" translate="yes" xml:space="preserve">
          <source>Details on scanning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f025a0ef812501db7b41a4ddddafece57749fd2" translate="yes" xml:space="preserve">
          <source>Detection of these errors depends in part on the underlying hardware and system libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ba803c8795460d711df69da8a17aead3b0c465d" translate="yes" xml:space="preserve">
          <source>Determines whether the regular expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51c60d0466feb57eed4e91710fc520b7cd949c3a" translate="yes" xml:space="preserve">
          <source>Determines whether the window accepts the focus during keyboard traversal (e.g., Tab and Shift-Tab). Before setting the focus to a window, the traversal scripts consult the value of the &lt;b&gt;-takefocus&lt;/b&gt; option. A value of &lt;b&gt;0&lt;/b&gt; means that the window should be skipped entirely during keyboard traversal. &lt;b&gt;1&lt;/b&gt; means that the window should receive the input focus as long as it is viewable (it and all of its ancestors are mapped). An empty value for the option means that the traversal scripts make the decision about whether or not to focus on the window: the current algorithm is to skip the window if it is disabled, if it has no key bindings, or if it is not viewable. If the value has any other form, then the traversal scripts take the value, append the name of the window to it (with a separator space), and evaluate the resulting string as a Tcl script. The script must return &lt;b&gt;0&lt;/b&gt;, &lt;b&gt;1&lt;/b&gt;, or an empty string: a &lt;b&gt;0&lt;/b&gt; or &lt;b&gt;1&lt;/b&gt; value specifies whether the window will receive the input focus, and an empty string results in the default decision described above. Note: this interpretation of the option is defined entirely by the Tcl scripts that implement traversal: the widget implementations ignore the option entirely, so you can change its meaning if you redefine the keyboard traversal scripts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="587e56929ce1f4f2f6a1e1d3d074516682666073" translate="yes" xml:space="preserve">
          <source>Determines whether the window accepts the focus during keyboard traversal. Either &lt;b&gt;0&lt;/b&gt;, &lt;b&gt;1&lt;/b&gt;, a command prefix (to which the widget path is appended, and which should return &lt;b&gt;0&lt;/b&gt; or &lt;b&gt;1&lt;/b&gt;), or the empty string. See</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd8fbfcf7ced5bb9b2532187fb06e84956ca40b0" translate="yes" xml:space="preserve">
          <source>Determines whether there is an executable file or shell builtin by the name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6736f077280654c8ac18bdce1361d655332bce6" translate="yes" xml:space="preserve">
          <source>Developers wishing to localize the date and time formatting and parsing are referred to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9e97854cb8c7da08edd642fd104bc61bff6199f" translate="yes" xml:space="preserve">
          <source>Dictionaries are values that contain an efficient, order-preserving mapping from arbitrary keys to arbitrary values. Each key in the dictionary maps to a single value. They have a textual format that is exactly that of any list with an even number of elements, with each mapping in the dictionary being represented as two items in the list. When a command takes a dictionary and produces a new dictionary based on it (either returning it or writing it back into the variable that the starting dictionary was read from) the new dictionary will have the same order of keys, modulo any deleted keys and with new keys added on to the end. When a string is interpreted as a dictionary and it would otherwise have duplicate keys, only the last value for a particular key is used; the others are ignored, meaning that, &amp;ldquo;apple banana&amp;rdquo; and &amp;ldquo;apple carrot apple banana&amp;rdquo; are equivalent dictionaries (with different string representations).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d05c0f8402f688df994c7bbbfd81f654fcbd7c8" translate="yes" xml:space="preserve">
          <source>Dictionary values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0899d75d6026dcd8fe254c8b3f1dbb82db92bd4d" translate="yes" xml:space="preserve">
          <source>Differences from ansi sprintf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e06b0d8a1efffa4d9e718b7054959a3107f840d" translate="yes" xml:space="preserve">
          <source>Differences from ansi sscanf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab25b70d718d62551d6778fbd58a6359eeb5fddd" translate="yes" xml:space="preserve">
          <source>Differences from tk entry widget validation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="111e091eccf00a65e0d40cfcec9a2be269060cb0" translate="yes" xml:space="preserve">
          <source>Different flavors of res</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d6d25a8794d8183b8d0fd25a9e60ff9229b9c64" translate="yes" xml:space="preserve">
          <source>Different operating system interfaces or applications may generate strings in other encodings such as Shift-JIS. The &lt;b&gt;encoding&lt;/b&gt; command helps to bridge the gap between Unicode and these other formats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="996366cd2e1c473206bf4aedab55b9405b5efc63" translate="yes" xml:space="preserve">
          <source>DimGray</source>
          <target state="translated">DimGray</target>
        </trans-unit>
        <trans-unit id="8be5bb6415b1a734df7477ab08ec86d536550119" translate="yes" xml:space="preserve">
          <source>DimGrey</source>
          <target state="translated">DimGrey</target>
        </trans-unit>
        <trans-unit id="bf1d0b0bb3a47ee32030973e7876a026f25ae9be" translate="yes" xml:space="preserve">
          <source>Direct loading</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1e66388508a6cfe46c3f40fadf5df0a077469d8" translate="yes" xml:space="preserve">
          <source>Disabled menu entries are non-responsive: they do not activate and they ignore mouse button presses and releases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="205bbd5d61713baeb67084c78984b486aa533ff6" translate="yes" xml:space="preserve">
          <source>Disabling sends</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4294fe33631272f43de1423d28cc8048d18adaad" translate="yes" xml:space="preserve">
          <source>Discouraged system for writing conditional tests, using &lt;b&gt;&lt;a href=&quot;if.htm&quot;&gt;if&lt;/a&gt;&lt;/b&gt; to guard:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fb937b602b4f2ef21c7fab00ac15de3b3ba49ea" translate="yes" xml:space="preserve">
          <source>Discussion</source>
          <target state="translated">Discussion</target>
        </trans-unit>
        <trans-unit id="f4d0861385f69176f1020e47e228fe7474187120" translate="yes" xml:space="preserve">
          <source>Display (and screen) on which to display window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="924391557052d206559b4a35528bfedcf0c9ab69" translate="yes" xml:space="preserve">
          <source>Display image above, below, left of, or right of the text, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c57dd465378156bb3d1089148f11a429eb7294" translate="yes" xml:space="preserve">
          <source>Display image only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15405cb802ba7b7829c30d7db7a070268e4de03e" translate="yes" xml:space="preserve">
          <source>Display information regarding what individual procs in the test harness are doing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb5a70266fba100e09e1ad062020f0287c5cbc2c" translate="yes" xml:space="preserve">
          <source>Display information regarding whether a test is skipped because it does not match any of the tests that were specified using by &lt;b&gt;configure -match&lt;/b&gt; (userSpecifiedNonMatch) or matches any of the tests specified by &lt;b&gt;configure -skip&lt;/b&gt; (userSpecifiedSkip). Also print warnings about possible lack of cleanup or balance in test files. Also print warnings about any re-use of test names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67263e7806e2d88e029c2782be8b9ef443ac4c02" translate="yes" xml:space="preserve">
          <source>Display list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b946c811b8dfbf25a5b12cc470a9de908a74af41" translate="yes" xml:space="preserve">
          <source>Display text centered on top of image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7439ac57e59b11c49cb4f169e96db6fb283e6b8" translate="yes" xml:space="preserve">
          <source>Display text only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df9edbf2f2bb7bceda9251604c4045cff2da2496" translate="yes" xml:space="preserve">
          <source>Display the body of failed tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c7a8e14b83a69f567b6e541c418c3abe4205844" translate="yes" xml:space="preserve">
          <source>Display the console window. Precisely equivalent to deiconifying the &lt;b&gt;.&lt;/b&gt; window in the console interpreter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dbf17096643f817c8997222b56b5f1087299606" translate="yes" xml:space="preserve">
          <source>Display the flag array parsed by the command line processor, the contents of the global &lt;b&gt;&lt;a href=&quot;tclvars.htm&quot;&gt;env&lt;/a&gt;&lt;/b&gt; array, and all user-defined variables that exist in the current namespace as they are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4856ce196f695fce2c6c9dc640ef5cf47c58b67e" translate="yes" xml:space="preserve">
          <source>Display the heading row.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3714ea356c60ef5cd3317507929a95bf9899f38" translate="yes" xml:space="preserve">
          <source>Display tree labels in column #0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df5cef45d9e8bf87d7fdfb53601ffc1319a3ffe2" translate="yes" xml:space="preserve">
          <source>Displays a variety of full-color images, using dithering to approximate colors on displays with limited color capabilities. See the &lt;b&gt;&lt;a href=&quot;photo.htm&quot;&gt;photo&lt;/a&gt;&lt;/b&gt; manual entry for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d86eb4bb012bc0ce28405855410df03e0ba02a" translate="yes" xml:space="preserve">
          <source>Displays one button whose symbolic name is &lt;b&gt;ok&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8ab5f75856bee11a99b2b6f181b15dad668688e" translate="yes" xml:space="preserve">
          <source>Displays three buttons whose symbolic names are &lt;b&gt;abort&lt;/b&gt;, &lt;b&gt;retry&lt;/b&gt; and &lt;b&gt;ignore&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30b2c3dc158a9a4466a10ba64820d3f2af52e801" translate="yes" xml:space="preserve">
          <source>Displays three buttons whose symbolic names are &lt;b&gt;yes&lt;/b&gt;, &lt;b&gt;no&lt;/b&gt; and &lt;b&gt;cancel&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26774b5d4cc5fbfd48cb8120f4f995cee5520978" translate="yes" xml:space="preserve">
          <source>Displays two buttons whose symbolic names are &lt;b&gt;ok&lt;/b&gt; and &lt;b&gt;cancel&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1ca2f7650a6c7a3dd3fa073ed8b3f3b6a5b3bc7" translate="yes" xml:space="preserve">
          <source>Displays two buttons whose symbolic names are &lt;b&gt;retry&lt;/b&gt; and &lt;b&gt;cancel&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ee97386802b1c0fcb847076d685470346b24790" translate="yes" xml:space="preserve">
          <source>Displays two buttons whose symbolic names are &lt;b&gt;yes&lt;/b&gt; and &lt;b&gt;no&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e308d49e8b06052e4ea938ccfa5c3bd4f0b05fa" translate="yes" xml:space="preserve">
          <source>Divide up a USENET group name into its hierarchical components:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85c14276fce6e45949cd74e1098fecd717ba2eaf" translate="yes" xml:space="preserve">
          <source>Do not display any debug information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0447c7d20d6b2a6c6b8be82947b9371462d3c71e" translate="yes" xml:space="preserve">
          <source>DodgerBlue</source>
          <target state="translated">DodgerBlue</target>
        </trans-unit>
        <trans-unit id="4a1740fd1c6963d9f7350ac0edcecd5f5dde1e20" translate="yes" xml:space="preserve">
          <source>DodgerBlue1</source>
          <target state="translated">DodgerBlue1</target>
        </trans-unit>
        <trans-unit id="49150252651a8e826935d189601eefa2f36e71df" translate="yes" xml:space="preserve">
          <source>DodgerBlue2</source>
          <target state="translated">DodgerBlue2</target>
        </trans-unit>
        <trans-unit id="abbf6fc82d5d40634620493dc408fc50c7f53ce4" translate="yes" xml:space="preserve">
          <source>DodgerBlue3</source>
          <target state="translated">DodgerBlue3</target>
        </trans-unit>
        <trans-unit id="bc9551cff3448f8a203aca80ae2820b26d81b66c" translate="yes" xml:space="preserve">
          <source>DodgerBlue4</source>
          <target state="translated">DodgerBlue4</target>
        </trans-unit>
        <trans-unit id="13d700d725c750327f1eddd3a5bcb5422a118cae" translate="yes" xml:space="preserve">
          <source>Does just what would have happened if the user invoked the checkbutton with the mouse: toggle the selection state of the button and invoke the Tcl command associated with the checkbutton, if there is one. The return value is the return value from the Tcl command, or an empty string if there is no command associated with the checkbutton. This command is ignored if the checkbutton's state is &lt;b&gt;disabled&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b84cf872e7d2f147273fadcb82ffea155cb2afa2" translate="yes" xml:space="preserve">
          <source>Does just what would have happened if the user invoked the radiobutton with the mouse: selects the button and invokes its associated Tcl command, if there is one. The return value is the return value from the Tcl command, or an empty string if there is no command associated with the radiobutton. This command is ignored if the radiobutton's state is &lt;b&gt;disabled&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3bb8a5b634ba8f74f040c65fb7981310177d0d2" translate="yes" xml:space="preserve">
          <source>Does the same as standard Tcl &lt;b&gt;&lt;a href=&quot;../tclcmd/array.htm&quot;&gt;array get&lt;/a&gt;&lt;/b&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a65d8dc21d83ff97297ec02a54f12172615a044d" translate="yes" xml:space="preserve">
          <source>Does the same as standard Tcl &lt;b&gt;&lt;a href=&quot;../tclcmd/array.htm&quot;&gt;array names&lt;/a&gt;&lt;/b&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5257c251245604d07ba31aaee0eefafa336c6700" translate="yes" xml:space="preserve">
          <source>Does the same as standard Tcl &lt;b&gt;&lt;a href=&quot;../tclcmd/array.htm&quot;&gt;array set&lt;/a&gt;&lt;/b&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97b4a89b11742188606f36936b0144de0d2fd0ac" translate="yes" xml:space="preserve">
          <source>Does the same as standard Tcl &lt;b&gt;&lt;a href=&quot;../tclcmd/array.htm&quot;&gt;array set&lt;/a&gt;&lt;/b&gt; but it clears the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="343c51f7dae6704c5fb84e0221916ddf14593fcb" translate="yes" xml:space="preserve">
          <source>Does the same as standard Tcl &lt;b&gt;&lt;a href=&quot;../tclcmd/array.htm&quot;&gt;array size&lt;/a&gt;&lt;/b&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ea22fbfec4d3488e162a7f88757490370dfdf8" translate="yes" xml:space="preserve">
          <source>Double-clicking with mouse button 1 selects the word under the mouse and positions the insert cursor at the end of the word. Dragging after a double click strokes out a selection consisting of whole words.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19b0a8be2d5d5cf3cab7c52daf514521fbbba2f3" translate="yes" xml:space="preserve">
          <source>Double-clicking with mouse button 1 selects the word under the mouse and positions the insertion cursor at the beginning of the word. Dragging after a double click will stroke out a selection consisting of whole words.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be67ffb21c90f4984796434af916898ccab0bba6" translate="yes" xml:space="preserve">
          <source>Double-clicking with mouse button 1 selects the word under the mouse and positions the insertion cursor at the end of the word. Dragging after a double click will stroke out a selection consisting of whole words.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74193fcf8fdba6a3efd53d94395a5716a3b57f80" translate="yes" xml:space="preserve">
          <source>Double-clicking with mouse button 1 selects the word under the mouse and positions the insertion cursor at the start of the word. Dragging after a double click will stroke out a selection consisting of whole words.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8293642b1d7d2099d722bd338b93f7b753dc2638" translate="yes" xml:space="preserve">
          <source>Drivers are responsible for ensuring that the mechanism for binding variables prevents SQL injection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef23640f8a274cc1913434deb5402992939518ba" translate="yes" xml:space="preserve">
          <source>Due to the different pattern matching rules on the various platforms, to ensure portability, wild card characters are not allowed in the extensions, except as in the special extension &amp;ldquo;*&amp;rdquo;. Extensions without a full stop character (e.g. &amp;ldquo;~&amp;rdquo;) are allowed but may not work on all platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6946aea5128a5f5318c9ecdbfdf8df32b4d3c66e" translate="yes" xml:space="preserve">
          <source>Due to the internal Tcl core implementation and the restriction on transferring shared channels, one has to take extra measures when transferring socket channels created by accepting the connection out of the &lt;b&gt;&lt;a href=&quot;../tclcmd/socket.htm&quot;&gt;socket&lt;/a&gt;&lt;/b&gt; commands callback procedures:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b16aa6d9807b322e56e935abd7b88dc2b986799" translate="yes" xml:space="preserve">
          <source>Due to the internal design of the Tcl core, there is no provision of full integration of shared variables within the Tcl syntax, unfortunately . All access to shared data must be performed with the supplied package commands . Also, variable traces are not supported . But even so, benefits of easy, simple and safe shared data manipulation outweights imposed limitations .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9989175acca4573f5e5d56e6d86b3bd17741f4d" translate="yes" xml:space="preserve">
          <source>During decoding, the following options are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72fb6a8e9bb1c6e1c3494750bdaa994b54fa749b" translate="yes" xml:space="preserve">
          <source>During encoding, the following options are supported (though changing them may produce files that other implementations of decoders cannot process):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="460f5d1efdb59d0e66616f30c59b1a2a6541e62a" translate="yes" xml:space="preserve">
          <source>During encoding, the following options are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fba994356282cfcb9b891c159c0286f7959b81f0" translate="yes" xml:space="preserve">
          <source>During evaluation of &lt;b&gt;test&lt;/b&gt;, the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95d4c66da602a6f2e5c306d1adf178185f865747" translate="yes" xml:space="preserve">
          <source>During local grabs, keyboard events (key presses and key releases) are delivered as usual: the window manager controls which application receives keyboard events, and if they are sent to any window in the grabbing application then they are redirected to the focus window. During a global grab Tk grabs the keyboard so that all keyboard events are always sent to the grabbing application. The &lt;b&gt;&lt;a href=&quot;focus.htm&quot;&gt;focus&lt;/a&gt;&lt;/b&gt; command is still used to determine which window in the application receives the keyboard events. The keyboard grab is released when the grab is released.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c08d6a687b5f4041668e0c335859b15d782767c2" translate="yes" xml:space="preserve">
          <source>During package installation, create a subdirectory &lt;b&gt;msgs&lt;/b&gt; under your package directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af740aa55608dfa34dd200edb7fbbbf471a8ee3e" translate="yes" xml:space="preserve">
          <source>ELEMENT COMMANDS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d212e284b8d48be8c8d164e3158c18c4678496c1" translate="yes" xml:space="preserve">
          <source>ELEMENTS</source>
          <target state="translated">ELEMENTS</target>
        </trans-unit>
        <trans-unit id="937694847804576829a8fcf50ac48e0dea75dbf0" translate="yes" xml:space="preserve">
          <source>EMBEDDED IMAGES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8deea5f2265b002ecb4583201ed0bb24207fa648" translate="yes" xml:space="preserve">
          <source>EMBEDDED WINDOWS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5caacac5c851cd05bd548550aa3be54e2d1d21e" translate="yes" xml:space="preserve">
          <source>ENSEMBLE OPTIONS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e71a8d5bcfd801cf12b1eae95694b4717ec9aa77" translate="yes" xml:space="preserve">
          <source>ENSEMBLES</source>
          <target state="translated">ENSEMBLES</target>
        </trans-unit>
        <trans-unit id="07178b561b72f20294a85dfc37caee5bbb00deda" translate="yes" xml:space="preserve">
          <source>ENTER/LEAVE EVENTS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe57a268d4460f2c7c85441f8ae8739eb93c2f61" translate="yes" xml:space="preserve">
          <source>EQUIVALENCE CLASSES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00300d220d4f3273112747f20d3feb30e2011e97" translate="yes" xml:space="preserve">
          <source>ERROR CODES (Windows only)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb558b481c7703cb01a866167aa87ba7ffeeb0ce" translate="yes" xml:space="preserve">
          <source>ERRORS</source>
          <target state="translated">ERRORS</target>
        </trans-unit>
        <trans-unit id="e41435bd6bf5c8e5ee4cf07e3848e2bce9494cdf" translate="yes" xml:space="preserve">
          <source>ESCAPES</source>
          <target state="translated">ESCAPES</target>
        </trans-unit>
        <trans-unit id="722ff14f8b83ce68dac91eac47aca7d2c8f1f34b" translate="yes" xml:space="preserve">
          <source>EVENT DETAILS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3677d6d28209dd0dfcbdc4c7270d3881f327aeb9" translate="yes" xml:space="preserve">
          <source>EVENT FIELDS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca757741e524eca48cefec879fceb4b4ba244656" translate="yes" xml:space="preserve">
          <source>EVENT HANDLER CALLBACKS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c631b2be8d0f0ff6262afd2c613caa42426d195" translate="yes" xml:space="preserve">
          <source>EVENT HANDLING</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873e731f424b538181287d04a1ea70727c2219aa" translate="yes" xml:space="preserve">
          <source>EVENT PATTERNS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f00572c232ddbb0d7040559eaa75053da0fec334" translate="yes" xml:space="preserve">
          <source>EVENT TYPES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9199febdaab27118bac1b42feacb4f953051759" translate="yes" xml:space="preserve">
          <source>EXAMPLE</source>
          <target state="translated">EXAMPLE</target>
        </trans-unit>
        <trans-unit id="9659699670b30983eb4e3c22454887e3c9c6ce39" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">EXAMPLES</target>
        </trans-unit>
        <trans-unit id="1a1e1401fecbd46014a99a37c9632ea21ffa5b86" translate="yes" xml:space="preserve">
          <source>EXAMPLES WITH OBJECTS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6c6ca2924e1c24e3365ebc4f2a450d7ecdd9e45" translate="yes" xml:space="preserve">
          <source>EXCEPTIONAL RETURN CODES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="113aae0d13fd638902891ed8594e3d56b4bea6fc" translate="yes" xml:space="preserve">
          <source>EXPANSION</source>
          <target state="translated">EXPANSION</target>
        </trans-unit>
        <trans-unit id="97f9a593335133f3c15d39cac9fd3840461529f2" translate="yes" xml:space="preserve">
          <source>EXPORTED METHODS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26f6be433ae594eafac8fe88b43b80b4e633f1f2" translate="yes" xml:space="preserve">
          <source>EXPORTING COMMANDS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3633746b067241666bc462dcfe7a24ff23a8db68" translate="yes" xml:space="preserve">
          <source>Each</source>
          <target state="translated">Each</target>
        </trans-unit>
        <trans-unit id="3777530d5142f32e8dfc668033411b65b5dc30ad" translate="yes" xml:space="preserve">
          <source>Each &lt;b&gt;test&lt;/b&gt; should include whatever &lt;b&gt;-constraints&lt;/b&gt; are required to constrain it to run only where appropriate. Several constraints are pre-defined in the &lt;b&gt;tcltest&lt;/b&gt; package, listed below. The registration of user-defined constraints is performed by the &lt;b&gt;testConstraint&lt;/b&gt; command. User-defined constraints may appear within a test file, or within the script specified by the &lt;b&gt;configure -load&lt;/b&gt; or &lt;b&gt;configure -loadfile&lt;/b&gt; options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13acc1e78a60bab3ac3ce82489142e1e1c5590ec" translate="yes" xml:space="preserve">
          <source>Each call to this command decrements the reference counter of the threadpool</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17fe9a36df8be53f72bd4483e03f4f3fac0c2182" translate="yes" xml:space="preserve">
          <source>Each call to this command increments the reference counter of the threadpool</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10df9c94d2e1d9bdee3d02073cc0b76069b0efc4" translate="yes" xml:space="preserve">
          <source>Each character is processed exactly once by the Tcl interpreter as part of creating the words of a command. For example, if variable substitution occurs then no further substitutions are performed on the value of the variable; the value is inserted into the word verbatim. If command substitution occurs then the nested command is processed entirely by the recursive call to the Tcl interpreter; no substitutions are performed before making the recursive call and no additional substitutions are performed on the result of the nested script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e5a81c397db1c1ae298836758e398b85b9ecf91" translate="yes" xml:space="preserve">
          <source>Each class has its own namespace containing things that are common to all objects which belong to the class. For example, &quot;common&quot; data members are shared by all objects in the class. They are global variables that exist in the class namespace, but since they are included in the class definition, they need not be declared using the &lt;b&gt;&lt;a href=&quot;../tclcmd/global.htm&quot;&gt;global&lt;/a&gt;&lt;/b&gt; command; they are automatically available to any code executing in the class context. A class can also create ordinary global variables, but these must be declared using the &lt;b&gt;&lt;a href=&quot;../tclcmd/global.htm&quot;&gt;global&lt;/a&gt;&lt;/b&gt; command each time they are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="414f486c8596997e371faf146b55a891d026d31a" translate="yes" xml:space="preserve">
          <source>Each conversion specifier may contain up to six different parts: an XPG3 position specifier, a set of flags, a minimum field width, a precision, a size modifier, and a conversion character. Any of these fields may be omitted except for the conversion character. The fields that are present must appear in the order given above. The paragraphs below discuss each of these fields in turn.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1538c754ab1cb37b2d9ac289686a90a6d3f6369f" translate="yes" xml:space="preserve">
          <source>Each element of the initial access path list will be assigned a token that will be set in the slave &lt;b&gt;&lt;a href=&quot;tclvars.htm&quot;&gt;auto_path&lt;/a&gt;&lt;/b&gt; and the first element of that list will be set as the &lt;b&gt;&lt;a href=&quot;tclvars.htm&quot;&gt;tcl_library&lt;/a&gt;&lt;/b&gt; for that slave.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a721507a69741fa0cd20068c766aabae8199dd4" translate="yes" xml:space="preserve">
          <source>Each element of the list becomes a single element of the delegated command --it is never reparsed as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a337ff35be5e61b2aa6fbe7d5e1e752abaabb6cb" translate="yes" xml:space="preserve">
          <source>Each filter should decide for itself whether to permit the execution to go forward to the proper implementation of the method (which it does by invoking the &lt;b&gt;next&lt;/b&gt; command as filters are inserted into the front of the method call chain) and is responsible for returning the result of &lt;b&gt;next&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e4d50dc286533d7c9b880100582f6e9c257b69" translate="yes" xml:space="preserve">
          <source>Each interpreter is independent from the others: it has its own name space for commands, procedures, and global variables. A master interpreter may create connections between its slaves and itself using a mechanism called an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94d165d39fb198214b5f0c1216dc3869c87ce6ec" translate="yes" xml:space="preserve">
          <source>Each item also has a list of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18f0d669e095c74ce65fbf94ce39adfd326ce0c2" translate="yes" xml:space="preserve">
          <source>Each item is identified by a unique name. The widget will generate item IDs if they are not supplied by the caller. There is a distinguished root item, named &lt;b&gt;{}&lt;/b&gt;. The root item itself is not displayed; its children appear at the top level of the hierarchy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20399c7886cfcb1dae03b661494762e4b152dfdc" translate="yes" xml:space="preserve">
          <source>Each item may also have any number of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="249d12bdcb4b6b0eb66dbdde1ff0c43bbde04752" translate="yes" xml:space="preserve">
          <source>Each item should have the same number of values as the &lt;b&gt;-columns&lt;/b&gt; widget option. If there are fewer values than columns, the remaining values are assumed empty. If there are more values than columns, the extra values are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6ceac80697b5fdd73fcd1f98eecfe971fe3161c" translate="yes" xml:space="preserve">
          <source>Each mark also has a &amp;ldquo;gravity&amp;rdquo;, which is either &lt;b&gt;left&lt;/b&gt; or &lt;b&gt;right&lt;/b&gt;. The gravity for a mark specifies what happens to the mark when text is inserted at the point of the mark. If a mark has left gravity, then the mark is treated as if it were attached to the character on its left, so the mark will remain to the left of any text inserted at the mark position. If the mark has right gravity, new text inserted at the mark position will appear to the left of the mark (so that the mark remains rightmost). The gravity for a mark defaults to &lt;b&gt;right&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b98c273025be3a8362a0c58addd1208a90ff6211" translate="yes" xml:space="preserve">
          <source>Each namespace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5c0c1b14f49d509fb6602daa14c3abb81dbb351" translate="yes" xml:space="preserve">
          <source>Each namespace can have its own collection of objects and classes. The list of classes available in the current context can be queried using the &quot;&lt;b&gt;&lt;a href=&quot;find.htm&quot;&gt;itcl::find classes&lt;/a&gt;&lt;/b&gt;&quot; command, and the list of objects, with the &quot;&lt;b&gt;&lt;a href=&quot;find.htm&quot;&gt;itcl::find objects&lt;/a&gt;&lt;/b&gt;&quot; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fab6a3f6097a63a1db48f91a49ca2143fe5213d" translate="yes" xml:space="preserve">
          <source>Each namespace can have its own collection of objects and extendedclasses. The list of extendedclasses available in the current context can be queried using the &quot;&lt;b&gt;&lt;a href=&quot;find.htm&quot;&gt;itcl::find extendedclasses&lt;/a&gt;&lt;/b&gt;&quot; command, and the list of objects, with the &quot;&lt;b&gt;&lt;a href=&quot;find.htm&quot;&gt;itcl::find objects&lt;/a&gt;&lt;/b&gt;&quot; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d86983895b7bc63668e78b95a4b8b592e87b1ab8" translate="yes" xml:space="preserve">
          <source>Each namespace can have its own collection of objects and widgets. The list of widgets available in the current context can be queried using the &quot;&lt;b&gt;&lt;a href=&quot;find.htm&quot;&gt;itcl::find widgets&lt;/a&gt;&lt;/b&gt;&quot; command, and the list of objects, with the &quot;&lt;b&gt;&lt;a href=&quot;find.htm&quot;&gt;itcl::find objects&lt;/a&gt;&lt;/b&gt;&quot; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17e50319cb49bb9f9f30173de9ccc97a2d2325b9" translate="yes" xml:space="preserve">
          <source>Each namespace has a textual name such as &lt;b&gt;&lt;a href=&quot;history.htm&quot;&gt;history&lt;/a&gt;&lt;/b&gt; or &lt;b&gt;::safe::interp&lt;/b&gt;. Since namespaces may nest, qualified names are used to refer to commands, variables, and child namespaces contained inside namespaces. Qualified names are similar to the hierarchical path names for Unix files or Tk widgets, except that &lt;b&gt;::&lt;/b&gt; is used as the separator instead of &lt;b&gt;/&lt;/b&gt; or &lt;b&gt;.&lt;/b&gt;. The topmost or global namespace has the name &amp;ldquo;&amp;rdquo; (i.e., an empty string), although &lt;b&gt;::&lt;/b&gt; is a synonym. As an example, the name &lt;b&gt;::safe::interp::create&lt;/b&gt; refers to the command &lt;b&gt;create&lt;/b&gt; in the namespace &lt;b&gt;&lt;a href=&quot;interp.htm&quot;&gt;interp&lt;/a&gt;&lt;/b&gt; that is a child of namespace &lt;b&gt;::safe&lt;/b&gt;, which in turn is a child of the global namespace, &lt;b&gt;::&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c93da2ec122e481928154ae01b18d782ac79f1a2" translate="yes" xml:space="preserve">
          <source>Each newly created has its internal reference counter set to 0 (zero), i .e . it is unreserved . This counter gets incremented by a call to &lt;b&gt;thread::preserve&lt;/b&gt; and decremented by a call to &lt;b&gt;thread::release&lt;/b&gt; command . These two commands implement simple but effective thread reservation system and offer predictable and controllable thread termination capabilities . It is however possible to create initialy preserved threads by using flag &lt;b&gt;-preserved&lt;/b&gt; of the &lt;b&gt;thread::create&lt;/b&gt; command . Threads created with this flag have the initial value of the reference counter of 1 (one), and are thus initially marked reserved .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4de3de2925d36af5e5c7ec22ea307be6c260628a" translate="yes" xml:space="preserve">
          <source>Each object has a unique namespace associated with it, the instance namespace. This namespace holds all the instance variables of the object, and will be the current namespace whenever a method of the object is invoked (including a method of the class of the object). When the object is destroyed, its instance namespace is deleted. The instance namespace contains the object's &lt;b&gt;&lt;a href=&quot;my.htm&quot;&gt;my&lt;/a&gt;&lt;/b&gt; command, which may be used to invoke non-exported methods of the object or to create a reference to the object for the purpose of invocation which persists across renamings of the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="321d4eee0466865f7bfd50a9d804c5f4f6b171bd" translate="yes" xml:space="preserve">
          <source>Each object has its own &lt;b&gt;my&lt;/b&gt; command, contained in its instance namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afbf11bf9348f061fdba012ccfcef1b3c4536c76" translate="yes" xml:space="preserve">
          <source>Each of the elements in a class can be declared &quot;public&quot;, &quot;protected&quot; or &quot;private&quot;. Public elements can be accessed by the class, by derived classes (other classes that inherit this class), and by external clients that use the class. Protected elements can be accessed by the class, and by derived classes. Private elements are only accessible in the class where they are defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27cb332023c6f1c02a02a88486186e96ec921691" translate="yes" xml:space="preserve">
          <source>Each package using msgcat has a set of options within &lt;b&gt;msgcat&lt;/b&gt;. The package options are described in the next sectionPackage options. Each package option may be set or unset individually using the following ensemble:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b001f4a59c245b3f00a9026b431992aac7c374f5" translate="yes" xml:space="preserve">
          <source>Each packet of memory allocated by &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TclLib/Alloc.htm&quot;&gt;ckalloc&lt;/a&gt;&lt;/b&gt; can have associated with it a string-valued tag. In the lists of allocated memory generated by &lt;b&gt;memory active&lt;/b&gt; and &lt;b&gt;memory onexit&lt;/b&gt;, the tag for each packet is printed along with other information about the packet. The &lt;b&gt;memory tag&lt;/b&gt; command sets the tag value for subsequent calls to &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TclLib/Alloc.htm&quot;&gt;ckalloc&lt;/a&gt;&lt;/b&gt; to be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="defd7e3367ef73aff14f884ec03ad1e0555caa49" translate="yes" xml:space="preserve">
          <source>Each pixel in the image displays a foreground color, a background color, or nothing. See the &lt;b&gt;&lt;a href=&quot;bitmap.htm&quot;&gt;bitmap&lt;/a&gt;&lt;/b&gt; manual entry for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e5afaf2f10cfff55dbf2df46de8c30abf795530" translate="yes" xml:space="preserve">
          <source>Each type-count pair moves an imaginary cursor through the binary data, reading bytes from the current position. The cursor is initially at position 0 at the beginning of the data. The type may be any one of the following characters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb079ac83eac00bd77a816b8fd17f8510dcaec4" translate="yes" xml:space="preserve">
          <source>Each type-count pair moves an imaginary cursor through the binary data, storing bytes at the current position and advancing the cursor to just after the last byte stored. The cursor is initially at position 0 at the beginning of the data. The type may be any one of the following characters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8362af486a00b9cac86d63e5c62a0b001e09650c" translate="yes" xml:space="preserve">
          <source>Each value under a key in the registry contains some data of a particular type in a type-specific representation. The &lt;b&gt;registry&lt;/b&gt; command converts between this internal representation and one that can be manipulated by Tcl scripts. In most cases, the data is simply returned as a Tcl string. The type indicates the intended use for the data, but does not actually change the representation. For some types, the &lt;b&gt;registry&lt;/b&gt; command returns the data in a different form to make it easier to manipulate. The following types are recognized by the registry command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a642093a29fc5f40b8f2d762a45f40a59aff5a3" translate="yes" xml:space="preserve">
          <source>Each widget is assigned a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f3250d540f3b2385f80dab7639338b659e44c20" translate="yes" xml:space="preserve">
          <source>Each widget is associated with a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a525664bb7aec1ada36a23a0be82f502a89d8ce3" translate="yes" xml:space="preserve">
          <source>Each word in the pattern conventionally starts with either an upper-case letter (in which case it denotes the class of either a widget or an option) or any other character, when it denotes the name of a widget or option. The last word in the pattern always indicates the option; the preceding ones constrain which widgets that option will be looked for in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="937747218d5674974daf755a921716e36dd1abc0" translate="yes" xml:space="preserve">
          <source>Either &lt;b&gt;normal&lt;/b&gt;, &lt;b&gt;disabled&lt;/b&gt; or &lt;b&gt;hidden&lt;/b&gt;. If &lt;b&gt;disabled&lt;/b&gt;, then the tab is not selectable. If &lt;b&gt;hidden&lt;/b&gt;, then the tab is not shown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a495d8e9d381807ffaf2c25f15eeb68d416fc5c5" translate="yes" xml:space="preserve">
          <source>Either &lt;b&gt;ok&lt;/b&gt;, for successful completion, &lt;b&gt;reset&lt;/b&gt; for user-reset, &lt;b&gt;timeout&lt;/b&gt; if a timeout occurred before the transaction could complete, or &lt;b&gt;&lt;a href=&quot;error.htm&quot;&gt;error&lt;/a&gt;&lt;/b&gt; for an error condition. During the transaction this value is the empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65f60fce212be9da9a630263e4f72eac43ffdaf5" translate="yes" xml:space="preserve">
          <source>Either &lt;b&gt;windows&lt;/b&gt;, or &lt;b&gt;unix&lt;/b&gt;. This identifies the general operating environment of the machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a29fb0259ac0a27be2e620b2c9136b792e88a0d" translate="yes" xml:space="preserve">
          <source>Either forward or backward slashes are accepted as path separators for arguments to Tcl commands. When executing an application, the path name specified for the application may also contain forward or backward slashes as path separators. Bear in mind, however, that most Windows applications accept arguments with forward slashes only as option delimiters and backslashes only in paths. Any arguments to an application that specify a path name with forward slashes will not automatically be converted to use the backslash character. If an argument contains forward slashes as the path separator, it may or may not be recognized as a path name, depending on the program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdfbbb3e4d21c5ec0b525e5ba578a46abddd2690" translate="yes" xml:space="preserve">
          <source>Either loop infinitely or not at all because the expression being evaluated is actually the constant, or even generate an error! The actual behaviour will depend on whether the variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c3a7b8c1d1b79d67aa815a9b8e63b4b5b79e3d0" translate="yes" xml:space="preserve">
          <source>Element commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d8210a0fe0f2a2224182dc5ffefeb89d888ddc5" translate="yes" xml:space="preserve">
          <source>Element names use a recursive dotted notation. For example, &lt;b&gt;uparrow&lt;/b&gt; identifies a generic arrow element, and &lt;b&gt;Scrollbar.uparrow&lt;/b&gt; and &lt;b&gt;Combobox.uparrow&lt;/b&gt; identify widget-specific elements. When looking for an element, the style engine looks for the specific name first, and if an element of that name is not found it looks for generic elements by stripping off successive leading components of the element name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a563972e807d43617dfb0a4b0398984476c03544" translate="yes" xml:space="preserve">
          <source>Elements</source>
          <target state="translated">Elements</target>
        </trans-unit>
        <trans-unit id="4154f85defaaa44503329f338eb73bef549cb60c" translate="yes" xml:space="preserve">
          <source>Elements are not guaranteed to be exactly words in a dictionary sense of course, especially when quoting is used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e80b8be8a4a4c5208315194f0ace95ff2e6bd78" translate="yes" xml:space="preserve">
          <source>Elide</source>
          <target state="translated">Elide</target>
        </trans-unit>
        <trans-unit id="875c99d7ce0438a7e7033a35e31b8226c3f5fb8d" translate="yes" xml:space="preserve">
          <source>Eliding an embedded image immediately after scheduling it for creation via</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbaa3121f98476992663297add0699cd3ef9b323" translate="yes" xml:space="preserve">
          <source>Eliding an embedded window immediately after scheduling it for creation via</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81c26e06017bbdd59bd0f931a85f33ea10f22a37" translate="yes" xml:space="preserve">
          <source>Embedded images</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c205439f9d4a7367e248e484077a51135c5ac993" translate="yes" xml:space="preserve">
          <source>Embedded options take effect at the &lt;b&gt;)&lt;/b&gt; terminating the sequence. They are available only at the start of an ARE, and may not be used later within it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc874fe05dbedc6e02d73b6e32f7cad51da72664" translate="yes" xml:space="preserve">
          <source>Embedded windows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f5cabbf0326a3a41cdeaef47cb5d66e7e82c1d5" translate="yes" xml:space="preserve">
          <source>Enable memory tracing after</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e86659aac09c9c4c3f697863c0d1781520d646c3" translate="yes" xml:space="preserve">
          <source>Enables newline-sensitive matching. By default, newline is a completely ordinary character with no special meaning. With this flag, &amp;ldquo;[^&amp;rdquo; bracket expressions and &amp;ldquo;.&amp;rdquo; never match newline, &amp;ldquo;^&amp;rdquo; matches an empty string after any newline in addition to its normal function, and &amp;ldquo;$&amp;rdquo; matches an empty string before any newline in addition to its normal function. This flag is equivalent to specifying both &lt;b&gt;-linestop&lt;/b&gt; and &lt;b&gt;-lineanchor&lt;/b&gt;, or the &lt;b&gt;(?n)&lt;/b&gt; embedded option (see the &lt;b&gt;&lt;a href=&quot;re_syntax.htm&quot;&gt;re_syntax&lt;/a&gt;&lt;/b&gt; manual page).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a3e9d6e12049cc046e015e4ba26dc778d5841fd" translate="yes" xml:space="preserve">
          <source>Enables use of the expanded regular expression syntax where whitespace and comments are ignored. This is the same as specifying the &lt;b&gt;(?x)&lt;/b&gt; embedded option (see the &lt;b&gt;&lt;a href=&quot;re_syntax.htm&quot;&gt;re_syntax&lt;/a&gt;&lt;/b&gt; manual page).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9952f058c581c3f81631809ad4a3524c7b6370b4" translate="yes" xml:space="preserve">
          <source>Enclose expressions in braces for the best speed and the smallest storage requirements. This allows the Tcl bytecode compiler to generate the best code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2264022070438d0cead44a672d8fbf621ea0fee9" translate="yes" xml:space="preserve">
          <source>End and Control-e move the insertion cursor to the end of the display line and clear any selection in the widget. Shift-End moves the cursor to the end of the display line and extends the selection to that point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dbf44991b7dc20c262032cbbfa18ce51b37a4bb" translate="yes" xml:space="preserve">
          <source>End moves the slider to the bottom (right) end of its range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89f6320bd84b2b2de27e37cda50c4554dc6a1b40" translate="yes" xml:space="preserve">
          <source>End of the flags, in case</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b3703439407142b9c7f3975f68e13c7f7d484b6" translate="yes" xml:space="preserve">
          <source>Ensemble options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac4ffefac76572aba6d847c6f51e56d580262991" translate="yes" xml:space="preserve">
          <source>Ensembles</source>
          <target state="translated">Ensembles</target>
        </trans-unit>
        <trans-unit id="b26c6db4fd1c93a87664492d678e2e68a4f4797a" translate="yes" xml:space="preserve">
          <source>Ensembles can be nested. For example, the &lt;b&gt;&lt;a href=&quot;../tclcmd/info.htm&quot;&gt;info&lt;/a&gt;&lt;/b&gt; command has an ensemble &lt;b&gt;&lt;a href=&quot;../tclcmd/info.htm&quot;&gt;info namespace&lt;/a&gt;&lt;/b&gt; within it. This ensemble has parts like &lt;b&gt;info namespace all&lt;/b&gt; and &lt;b&gt;info namespace children&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d1313b95517b2b9437df9e014e83c28fcd471ec" translate="yes" xml:space="preserve">
          <source>Ensure that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="109cef0c0c1dc3a6f87cb957d19cb62c807232a7" translate="yes" xml:space="preserve">
          <source>Ensure that a decompressor consuming the bytes that the current (compressing) stream is producing will be able to produce all the bytes that have been compressed so far, at some performance penalty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20c8cbf3d906f032f9356b7f1556d7b0af558fa4" translate="yes" xml:space="preserve">
          <source>Ensure that a file is closed no matter what:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5fb1ee7d0d61953742199d79db31c322bedb432" translate="yes" xml:space="preserve">
          <source>Ensure that not only can a decompressor handle all the bytes produced so far (as with &lt;b&gt;-flush&lt;/b&gt; above) but also that it can restart from this point if it detects that the stream is partially corrupt. This incurs a substantial performance penalty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea2422b095367fc5e28ea33b79e585ed666d1d2a" translate="yes" xml:space="preserve">
          <source>Ensure that the global variable &lt;b&gt;foobar&lt;/b&gt; always contains the product of the global variables &lt;b&gt;foo&lt;/b&gt; and &lt;b&gt;bar&lt;/b&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37287ea1dd80bbdf3cda07c82ed3b06109a67fe" translate="yes" xml:space="preserve">
          <source>Ensures that all pending output for the channel called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae67ef024c1492cd8e256bfc4e949039137b8e04" translate="yes" xml:space="preserve">
          <source>Enter/leave events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43d1507a4e2e19c25d5da8a0c881df89401efef2" translate="yes" xml:space="preserve">
          <source>Entries are capable of displaying strings that are too long to fit entirely within the widget's window. In this case, only a portion of the string will be displayed; commands described below may be used to change the view in the window. Entries use the standard &lt;b&gt;-xscrollcommand&lt;/b&gt; mechanism for interacting with scrollbars (see the description of the &lt;b&gt;-xscrollcommand&lt;/b&gt; option for details).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf29b32ff9ac1087fb5f60b7c18f1bda18e83898" translate="yes" xml:space="preserve">
          <source>Entries are capable of displaying strings that are too long to fit entirely within the widget's window. In this case, only a portion of the string will be displayed; commands described below may be used to change the view in the window. Entries use the standard &lt;b&gt;-xscrollcommand&lt;/b&gt; mechanism for interacting with scrollbars (see the description of the &lt;b&gt;-xscrollcommand&lt;/b&gt; option for details). They also support scanning, as described below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1254f1639669634a049ba8a1d02184803813a7b" translate="yes" xml:space="preserve">
          <source>Entries may be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a500e2f37646e5e944cc4f44f5c666cb305d911d" translate="yes" xml:space="preserve">
          <source>Equivalence classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="175d4ef43242ad9ca2e75dec825a825d3e61ada1" translate="yes" xml:space="preserve">
          <source>Erase the history list. The current keep limit is retained. The history event numbers are reset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4acbba9a7712f141d76afe8992bc06298364974" translate="yes" xml:space="preserve">
          <source>Error codes (windows only)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b95979ebf887ecdddd55bf5e6b53585d3b912a9" translate="yes" xml:space="preserve">
          <source>Error return: the return code of the procedure is 1 (&lt;b&gt;&lt;a href=&quot;catch.htm&quot;&gt;TCL_ERROR&lt;/a&gt;&lt;/b&gt;). The procedure command behaves in its calling context as if it were the command &lt;b&gt;&lt;a href=&quot;error.htm&quot;&gt;error&lt;/a&gt;&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="805e86a8cbf628e38e4c45612c005a504009e79a" translate="yes" xml:space="preserve">
          <source>Errors</source>
          <target state="translated">Errors</target>
        </trans-unit>
        <trans-unit id="a93a4e0ef80150a1a033177365048c386c52720b" translate="yes" xml:space="preserve">
          <source>Escapes</source>
          <target state="translated">Escapes</target>
        </trans-unit>
        <trans-unit id="8ec89d22aa8de3b792bb0c5959f623e9a5c978b1" translate="yes" xml:space="preserve">
          <source>Escapes (AREs only), which begin with a &lt;b&gt;\&lt;/b&gt; followed by an alphanumeric character, come in several varieties: character entry, class shorthands, constraint escapes, and back references. A &lt;b&gt;\&lt;/b&gt; followed by an alphanumeric character but not constituting a valid escape is illegal in AREs. In EREs, there are no escapes: outside a bracket expression, a &lt;b&gt;\&lt;/b&gt; followed by an alphanumeric character merely stands for that character as an ordinary character, and inside a bracket expression, &lt;b&gt;\&lt;/b&gt; is an ordinary character. (The latter is the one actual incompatibility between EREs and AREs.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="371a0eccebd8e177df362fd049bd0acf8263b10d" translate="yes" xml:space="preserve">
          <source>Estimate how long it takes for a simple Tcl &lt;b&gt;&lt;a href=&quot;for.htm&quot;&gt;for&lt;/a&gt;&lt;/b&gt; loop to count to a thousand:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30e1985efd7feef280be34e69dec36f2930bec0d" translate="yes" xml:space="preserve">
          <source>Evaluate the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0743e659c2f2773b3f696d668a03ffc92b534f56" translate="yes" xml:space="preserve">
          <source>Evaluates</source>
          <target state="translated">Evaluates</target>
        </trans-unit>
        <trans-unit id="ab394c06e7c5bc41f86f586db3db0260d0603741" translate="yes" xml:space="preserve">
          <source>Evaluates in the caller's context the script specified by &lt;b&gt;configure -load&lt;/b&gt; or &lt;b&gt;configure -loadfile&lt;/b&gt;. Returns the result of that script evaluation, including any error raised by the script. Use this command and the related configuration options to provide the commands to be tested to the interpreter running the test suite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8919ace091b14011c6439cfd5e1707b58f5abd" translate="yes" xml:space="preserve">
          <source>Event</source>
          <target state="translated">Event</target>
        </trans-unit>
        <trans-unit id="bc2a9c77853117910fe623e1e68a139a0423d67e" translate="yes" xml:space="preserve">
          <source>Event details</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed896429c34d70240bd0a327765e64bb07c34c1e" translate="yes" xml:space="preserve">
          <source>Event fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25c0a44da2a3fae5d7d8caff17b4ae5e87797f3e" translate="yes" xml:space="preserve">
          <source>Event handler callbacks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eabc790d00812b33da77b202701e348d39479228" translate="yes" xml:space="preserve">
          <source>Event handling</source>
          <target state="translated">事件处理</target>
        </trans-unit>
        <trans-unit id="64328bbdf4803431e14e561d7000f980fc969bf8" translate="yes" xml:space="preserve">
          <source>Event patterns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b420fa0967edbd1771a21fd5ff395c2bbc2e71c" translate="yes" xml:space="preserve">
          <source>Event types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad38783b5b6c60cbf63a167182a646b0cb970ecd" translate="yes" xml:space="preserve">
          <source>Event-driven I/O works best for channels that have been placed into non-blocking mode with the &lt;b&gt;chan configure&lt;/b&gt; command. In blocking mode, a &lt;b&gt;chan puts&lt;/b&gt; command may block if you give it more data than the underlying file or device can accept, and a &lt;b&gt;chan gets&lt;/b&gt; or &lt;b&gt;chan read&lt;/b&gt; command will block if you attempt to read more data than is ready; no events will be processed while the commands block. In non-blocking mode &lt;b&gt;chan puts&lt;/b&gt;, &lt;b&gt;chan read&lt;/b&gt;, and &lt;b&gt;chan gets&lt;/b&gt; never block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6623cbb7897b4788a0952a71b6a8c6665c7a8e6" translate="yes" xml:space="preserve">
          <source>Event-driven I/O works best for channels that have been placed into nonblocking mode with the &lt;b&gt;&lt;a href=&quot;fconfigure.htm&quot;&gt;fconfigure&lt;/a&gt;&lt;/b&gt; command. In blocking mode, a &lt;b&gt;&lt;a href=&quot;puts.htm&quot;&gt;puts&lt;/a&gt;&lt;/b&gt; command may block if you give it more data than the underlying file or device can accept, and a &lt;b&gt;&lt;a href=&quot;gets.htm&quot;&gt;gets&lt;/a&gt;&lt;/b&gt; or &lt;b&gt;&lt;a href=&quot;read.htm&quot;&gt;read&lt;/a&gt;&lt;/b&gt; command will block if you attempt to read more data than is ready; a readable underlying file or device may not even guarantee that a blocking [read 1] will succeed (counter-examples being multi-byte encodings, compression or encryption transforms ). In all such cases, no events will be processed while the commands block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e86dcd5cafc34abb8bced5525483415542311a9" translate="yes" xml:space="preserve">
          <source>Every channel created with this subcommand knows which interpreter it was created in, and only ever executes its handler command in that interpreter, even if the channel was shared with and/or was moved into a different interpreter. Each reflected channel also knows the thread it was created in, and executes its handler command only in that thread, even if the channel was moved into a different thread. To this end all invocations of the handler are forwarded to the original thread by posting special events to it. This means that the original thread (i.e. the thread that executed the &lt;b&gt;chan create&lt;/b&gt; command) must have an active event loop, i.e. it must be able to process such events. Otherwise the thread sending them will</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b5206b89a6357468ad7d51a3a5d94dee3246130" translate="yes" xml:space="preserve">
          <source>Every database driver for TDBC (Tcl DataBase Connectivity) implements a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7b1f9fe358a07ea34f908cfa446ae1e1d1491f4" translate="yes" xml:space="preserve">
          <source>Every interpreter has two kinds of resource limits that may be imposed by any master interpreter upon its slaves. Command limits (of type &lt;b&gt;command&lt;/b&gt;) restrict the total number of Tcl commands that may be executed by an interpreter (as can be inspected via the &lt;b&gt;&lt;a href=&quot;info.htm&quot;&gt;info cmdcount&lt;/a&gt;&lt;/b&gt; command), and time limits (of type &lt;b&gt;time&lt;/b&gt;) place a limit by which execution within the interpreter must complete. Note that time limits are expressed as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a3f51972e9eca70941251725192d2dfbf3369d5" translate="yes" xml:space="preserve">
          <source>Every limit has a number of options associated with it, some of which are common across all kinds of limits, and others of which are particular to the kind of limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b57c1e436033f3a2be7f6997ddce27c540219edb" translate="yes" xml:space="preserve">
          <source>Every locally-defined option may define a -cgetmethod; it is called when the option's value is retrieved using the cget method. Whatever the method's body returns will be the return value of the call to cget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ef23c85630a1f43557e379ffea1ed68e1b5220d" translate="yes" xml:space="preserve">
          <source>Every locally-defined option may define a -configuremethod; it is called when the option's value is set using the configure or configurelist methods. It is the named method's responsibility to save the option's value; in other words, the value will not be saved to the itcl_options() array unless the method saves it there.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07bc0e7e2f328da52a2c40ae4cf639231db71840" translate="yes" xml:space="preserve">
          <source>Every locally-defined option may define a -validatemethod; it is called when the option's value is set using the configure or configurelist methods, just before the -configuremethod (if any). It is the named method's responsibility to validate the option's new value, and to throw an error if the value is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3406ad1bdb842991ab280f567c280b02e85b1420" translate="yes" xml:space="preserve">
          <source>Every object necessarily knows what its class is; this information is trivially extractable through introspection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="ec471d84b36457f0d9d75c03377c9e3cd5f3de93" translate="yes" xml:space="preserve">
          <source>Example of use:</source>
          <target state="translated">用例:</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="26689bf3c16e7ce278e1b9e2cce9d9785631b7ff" translate="yes" xml:space="preserve">
          <source>Examples of use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd7cf4f18dcef869f91dc7a9a9d198003744abd9" translate="yes" xml:space="preserve">
          <source>Examples with objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb25d973884fb3be0d65a114f168e90fd7130006" translate="yes" xml:space="preserve">
          <source>Exception:</source>
          <target state="translated">Exception:</target>
        </trans-unit>
        <trans-unit id="7bbce9f699d1e8fc310b1b6523f468e21c0b9027" translate="yes" xml:space="preserve">
          <source>Exceptional return codes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b838cad7029596d74fadfd9fc83392398260898" translate="yes" xml:space="preserve">
          <source>Execute all X server commands synchronously, so that errors are reported immediately. This will result in much slower execution, but it is useful for debugging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7381ef3af9b37589ca21ff6db0ecccae352c6c2e" translate="yes" xml:space="preserve">
          <source>Execute the Tcl script in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="493894b112e06fb1bceb073a44ccd9a0376dc871" translate="yes" xml:space="preserve">
          <source>Executes a script in the context of the specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a6d46bca05096f1f722ca453a5a21cea06a3273" translate="yes" xml:space="preserve">
          <source>Executing an arbitrary command in a safe interpreter where every invocation of &lt;b&gt;&lt;a href=&quot;lappend.htm&quot;&gt;lappend&lt;/a&gt;&lt;/b&gt; is logged:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd96385ee73ccc9bfe864b0ad36809c592ad0e19" translate="yes" xml:space="preserve">
          <source>Expanded-syntax white-space characters are blank, tab, newline, and any character that belongs to the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5210fc6fc23f69413ece09957ea04eb8681f9c88" translate="yes" xml:space="preserve">
          <source>Expansion</source>
          <target state="translated">Expansion</target>
        </trans-unit>
        <trans-unit id="586f10923bf4989c2753dc72c1b130fccf70dbac" translate="yes" xml:space="preserve">
          <source>Explicitly declares a component called comp, and automatically defines the component's instance variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84b88a3d52015405d421b9cac642b0f947999ceb" translate="yes" xml:space="preserve">
          <source>Exponentiation. Valid for any numeric operands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80411a8e912b77a9805062f19e626a139cd2be65" translate="yes" xml:space="preserve">
          <source>Exported methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80c5dc3e9d6a63576edc6c6b2387f006d0d610ac" translate="yes" xml:space="preserve">
          <source>Exporting commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="326d84aa0bd4e5b53850a8703ea1a39bf19e6f88" translate="yes" xml:space="preserve">
          <source>Extendedclass definitions need not be loaded explicitly; they can be loaded as needed by the usual Tcl auto-loading facility. Each directory containing extendedclass definition files should have an accompanying &quot;tclIndex&quot; file. Each line in this file identifies a Tcl procedure or &lt;b&gt;[incr Tcl]&lt;/b&gt; extendedclass definition and the file where the definition can be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b55826c378f59b33c0ea80bf13315db2d1b2bd5" translate="yes" xml:space="preserve">
          <source>Extensions like Tk execute ordinary code fragments in the global namespace. A scoped value captures a code fragment together with its namespace context in a way that allows it to be executed properly later. It is needed, for example, to wrap up code fragments when a Tk widget is used within a namespace:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7bb18deb3ba82a31b563960c647ed68d5f30cc4" translate="yes" xml:space="preserve">
          <source>Extract the list words from a string that is not a well-formed list:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e362eb5ba695c040130a86fd441aecba67d3c318" translate="yes" xml:space="preserve">
          <source>Ezd</source>
          <target state="translated">Ezd</target>
        </trans-unit>
        <trans-unit id="42e3253d37d8c6204223896f12d99a6733641b30" translate="yes" xml:space="preserve">
          <source>FILTERS</source>
          <target state="translated">FILTERS</target>
        </trans-unit>
        <trans-unit id="cf773991ce30d19cc15f40a1246de3da77284bc5" translate="yes" xml:space="preserve">
          <source>FINDING MODULES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec733fa81ae3a4c0b942690b15e01d02ffde093e" translate="yes" xml:space="preserve">
          <source>FINE POINTS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07896c6547d4e4a21c1d4b683a7bc3e06fc0a794" translate="yes" xml:space="preserve">
          <source>FONT DESCRIPTIONS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d58f3daeb8816ffce29eb76a99d062de4946851f" translate="yes" xml:space="preserve">
          <source>FONT METRICS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d858e029c5431f4df244a930a6d99b859e62bea" translate="yes" xml:space="preserve">
          <source>FONT OPTIONS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1f4c14242ca9f84a0a10c15bfede1044029c51a" translate="yes" xml:space="preserve">
          <source>FORMAT GROUPS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa61fe70997f253736263fdf2520d54411a290cc" translate="yes" xml:space="preserve">
          <source>FORMAT SUBOPTIONS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da2ac9c3822fe4e2e030c4d5679fcb307fcc86ce" translate="yes" xml:space="preserve">
          <source>FORMATTING TIMES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ff6f006d32a379413b97ef451dad40fcba33845" translate="yes" xml:space="preserve">
          <source>FREE FORM SCAN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="896ad384ad7e77643c121d87a25d3d0c0f374fe2" translate="yes" xml:space="preserve">
          <source>Fields may contain subfields; ` .' is the separator character . Subfields are actually fields where the value is another keyed list . Thus the following list has the top level fields ID and NAME, and subfields NAME .FIRST and NAME .LAST:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c699d6aa037054394a8912c17eb501ba50deb3b" translate="yes" xml:space="preserve">
          <source>File names are grouped into three general types based on the starting point for the path used to specify the file: absolute, relative, and volume-relative. Absolute names are completely qualified, giving a path to the file relative to a particular volume and the root directory on that volume. Relative names are unqualified, giving a path to the file relative to the current working directory. Volume-relative names are partially qualified, either giving the path relative to the root directory on the current volume, or relative to the current directory of the specified volume. The &lt;b&gt;&lt;a href=&quot;file.htm&quot;&gt;file pathtype&lt;/a&gt;&lt;/b&gt; command can be used to determine the type of a given path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b82d94d8ecc38cd6ff4315cf94c9f5566d6f4d5f" translate="yes" xml:space="preserve">
          <source>FileId</source>
          <target state="translated">FileId</target>
        </trans-unit>
        <trans-unit id="5afd0adcd770bee9f06c595fb6414ba80bf64116" translate="yes" xml:space="preserve">
          <source>Fill a text widget with lots of font demonstrators, one for every font family installed on your system:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="645697e2842d594fba967865bc6424221e37637d" translate="yes" xml:space="preserve">
          <source>Filter a list to remove odd values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96e578211aa295317cf257310712fa28ccd8f6c6" translate="yes" xml:space="preserve">
          <source>Filters</source>
          <target state="translated">Filters</target>
        </trans-unit>
        <trans-unit id="7a24c96b4581064b30a2d66313dad835c4add08f" translate="yes" xml:space="preserve">
          <source>Filters are invoked when processing an invokation of the &lt;b&gt;unknown&lt;/b&gt; method because of a failure to locate a method implementation, but</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29b646255c86b2ef05be20825048b2579f0ac0b6" translate="yes" xml:space="preserve">
          <source>Finally an example of advanced use of the &lt;b&gt;return&lt;/b&gt; options to create a procedure replacement for &lt;b&gt;return&lt;/b&gt; itself:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad1f51c98f80adf10b49dbdc3f03dcb88cc4b96" translate="yes" xml:space="preserve">
          <source>Finally any single peer need not contain all lines from the underlying data store. When creating a peer, a contiguous range of lines (e.g. only lines 52 through 125) may be specified. This allows a peer to contain just a small portion of the overall text. The range of lines will expand and contract as text is inserted or deleted. The peer will only ever display complete lines of text (one cannot share just part of a line). If the peer's contents contracts to nothing (i.e. all complete lines in the peer widget have been deleted from another widget), then it is impossible for new lines to be inserted. The peer will simply become an empty shell on which the background can be configured, but which will never show any content (without manual reconfiguration of the start and end lines). Note that a peer which does not contain all of the underlying data store still has indices numbered from &amp;ldquo;1.0&amp;rdquo; to &amp;ldquo;end&amp;rdquo;. It is simply that those indices reflect a subset of the total data, and data outside the contained range is not accessible to the peer. This means that the command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8f3471d7f7a04fa294b36e2141551df600d1bc4" translate="yes" xml:space="preserve">
          <source>Finally, in an ARE, outside bracket expressions, the sequence &amp;ldquo;&lt;b&gt;(?#&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4f8da3cc20ecedbf0578db90782ec38d2f18f42" translate="yes" xml:space="preserve">
          <source>Find all files whose name contains an &amp;ldquo;a&amp;rdquo;, a &amp;ldquo;b&amp;rdquo; or the sequence &amp;ldquo;cde&amp;rdquo;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0aa41bd7c670e1b9709570db523513a800358cd" translate="yes" xml:space="preserve">
          <source>Find all matches in the given range and return a list of the indices of the first character of each match. If a &lt;b&gt;-count&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7393b751541925d29b61873dc494ffcde2a6c7e6" translate="yes" xml:space="preserve">
          <source>Find all subdirectories of the current directory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe006b76abcdd282e52efc9354b436c33b697ca" translate="yes" xml:space="preserve">
          <source>Find all the Tcl files in the current directory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd2749d873a43eb53f1e6aa0fde96eacf9be377" translate="yes" xml:space="preserve">
          <source>Find all the Tcl files in the user's home directory, irrespective of what the current directory is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a34c67ac831df5dd9a8aa095ed068422580681cb" translate="yes" xml:space="preserve">
          <source>Find elided (hidden) text as well. By default only displayed text is searched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa246672431792f1fddfcc4e814c7cbb817b094" translate="yes" xml:space="preserve">
          <source>Find the first occurrence of a word starting with &lt;b&gt;foo&lt;/b&gt; in a string that is not actually an instance of &lt;b&gt;foobar&lt;/b&gt;, and get the letters following it up to the end of the word into a variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92fdeb4cafc2c211dbfbc713c9bfce5adaf77cf6" translate="yes" xml:space="preserve">
          <source>Find the index of the word &lt;b&gt;badger&lt;/b&gt; (in any case) within a string and store that in the variable &lt;b&gt;location&lt;/b&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="875d1fa260c681abc57cec470a74947ca36d02ce" translate="yes" xml:space="preserve">
          <source>Finding modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41557bc031811f2c49561d025a42b2bd41ec8e98" translate="yes" xml:space="preserve">
          <source>Fine points</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="916a78d701ded328cd66da58a97ef8cd28a99e84" translate="yes" xml:space="preserve">
          <source>First</source>
          <target state="translated">First</target>
        </trans-unit>
        <trans-unit id="d7775d6ed9c7a415b20b2e0667f94c2bb9a2dc7a" translate="yes" xml:space="preserve">
          <source>First, a package locale is initialized and the generic unknown function is desactivated:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="781307a37aaaa98d051302deeb6eae6a2f973599" translate="yes" xml:space="preserve">
          <source>First, a simple example of using &lt;b&gt;return&lt;/b&gt; to return from a procedure, interrupting the procedure body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="118a6d3cd2a425734a46ad4ad8eddfc1b5647d07" translate="yes" xml:space="preserve">
          <source>First, any absolute date and/or time is processed and converted. Using that time as the base, day-of-week specifications are added. Next, relative specifications are used. If a date or day is specified, and no absolute or relative time is given, midnight is used. Finally, a correction is applied so that the correct hour of the day is produced after allowing for daylight savings time differences and the correct date is given when going from the end of a long month to a short month.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6fd1474ad8fc48e46706d4488066ce7c40b83ae" translate="yes" xml:space="preserve">
          <source>FirstUnit</source>
          <target state="translated">FirstUnit</target>
        </trans-unit>
        <trans-unit id="f645a0fe7b2c7ceaa475173bbb044a4c58211e2c" translate="yes" xml:space="preserve">
          <source>Flash the button. This is accomplished by redisplaying the button several times, alternating between the configured activebackground and background colors. At the end of the flash the button is left in the same normal/active state as when the command was invoked. This command is ignored if the button's state is &lt;b&gt;disabled&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9113731eadd7782fa25365871962fd3fcdd9a990" translate="yes" xml:space="preserve">
          <source>Flashes the checkbutton. This is accomplished by redisplaying the checkbutton several times, alternating between active and normal colors. At the end of the flash the checkbutton is left in the same normal/active state as when the command was invoked. This command is ignored if the checkbutton's state is &lt;b&gt;disabled&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed91cd05827321f15a3e7f6f69fef6a87f4350af" translate="yes" xml:space="preserve">
          <source>Flashes the radiobutton. This is accomplished by redisplaying the radiobutton several times, alternating between active and normal colors. At the end of the flash the radiobutton is left in the same normal/active state as when the command was invoked. This command is ignored if the radiobutton's state is &lt;b&gt;disabled&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a2be36aa15ec9dd263d112a51339384c9248886" translate="yes" xml:space="preserve">
          <source>FloralWhite</source>
          <target state="translated">FloralWhite</target>
        </trans-unit>
        <trans-unit id="1ee281063e70302745d8ffbdeb320525d6188957" translate="yes" xml:space="preserve">
          <source>Flushes any output that has been buffered for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0095d4c7c28c8eabdbf22b89d93b25cb883689dd" translate="yes" xml:space="preserve">
          <source>Following options are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ded855440cff116bb46001b202873a90c27a84" translate="yes" xml:space="preserve">
          <source>Font descriptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f45261c8acd8a4d1fba10168699ca5c6413a107" translate="yes" xml:space="preserve">
          <source>Font metrics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3930903f9fa13f6b8d0f92bbff8aef5f46dc548a" translate="yes" xml:space="preserve">
          <source>Font options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e75f5a5e332c1309407236052206caf54d02179" translate="yes" xml:space="preserve">
          <source>Font to use for label text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c08550c2d1dbe50c906ffe6eeb1410cb44878adb" translate="yes" xml:space="preserve">
          <source>FontName</source>
          <target state="translated">FontName</target>
        </trans-unit>
        <trans-unit id="f7880600348a091a43e2a84906d6002820643108" translate="yes" xml:space="preserve">
          <source>For</source>
          <target state="translated">For</target>
        </trans-unit>
        <trans-unit id="2e1c514bab0509c168ea7804ae47e3e06d2d8149" translate="yes" xml:space="preserve">
          <source>For &lt;b&gt;%c&lt;/b&gt; conversions a single character value is converted to a decimal string, which is then assigned to the corresponding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4795c5304ee2ab69092ce6bd68934b6733d0e11" translate="yes" xml:space="preserve">
          <source>For &lt;b&gt;%c&lt;/b&gt; conversions the argument must be an integer value, which will then be converted to the corresponding character value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b4fa9947d392060a8f01802373cdb4a53f17b1f" translate="yes" xml:space="preserve">
          <source>For &lt;b&gt;ConfigureRequest&lt;/b&gt; events, the string will be one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef5d27625c8db1b6f3e01cf85643b88b4c777c64" translate="yes" xml:space="preserve">
          <source>For &lt;b&gt;enter&lt;/b&gt; and &lt;b&gt;enterstep&lt;/b&gt; operations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d064cd01aa6137d9fc923ac9dda249f18c50efea" translate="yes" xml:space="preserve">
          <source>For &lt;b&gt;leave&lt;/b&gt; and &lt;b&gt;leavestep&lt;/b&gt; operations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f8b8f7ca29a59b321feae5b110e36ca97f3d39" translate="yes" xml:space="preserve">
          <source>For Windows UNC names, the servername and sharename components of the path may not contain ?, *, or [] constructs. On Windows NT, if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cd69e46a21592c242f593e6a5d7d521fcd5ead2" translate="yes" xml:space="preserve">
          <source>For advanced multithreading scripts, script-level access to two basic synchronization primitives, mutex and condition variables, is also supported .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="471f42009f588b79d43f1d6a6eaededc6f30bb6a" translate="yes" xml:space="preserve">
          <source>For any index value that passes &lt;b&gt;string is integer -strict&lt;/b&gt;, the char specified at this integral index (e.g., &lt;b&gt;2&lt;/b&gt; would refer to the &amp;ldquo;c&amp;rdquo; in &amp;ldquo;abcd&amp;rdquo;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a4261bbb55d0bc76c78fe7ae560ddb42d690a42" translate="yes" xml:space="preserve">
          <source>For any two directories, neither is an ancestor directory of the other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ec7ae877a9eebcf95a15b6e602d54409fc48b9e" translate="yes" xml:space="preserve">
          <source>For applications like a code repository it is important to identify the architecture of the shell which will actually run the installed packages, versus the architecture of the shell running the repository software.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dfa089a2941751a4e01fe47b9fb08a31f2ea372" translate="yes" xml:space="preserve">
          <source>For asynchronous &lt;b&gt;::http::geturl&lt;/b&gt; calls, all of the above error situations apply, except that if there is any error while reading the HTTP reply headers or data, no exception is thrown. This is because after writing the HTTP headers, &lt;b&gt;::http::geturl&lt;/b&gt; returns, and the rest of the HTTP transaction occurs in the background. The command callback can check if any error occurred during the read by calling &lt;b&gt;::http::status&lt;/b&gt; to check the status and if its</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3da5dd9caaeb39b8ed5fb249f9b18086d1d6a767" translate="yes" xml:space="preserve">
          <source>For backwards compatibility, three other subcommands are available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b0ef8dee2cbf73f0cdc2cda333d1325e7519ff6" translate="yes" xml:space="preserve">
          <source>For checkbutton entries, the default value of this option is taken from the &lt;b&gt;-label&lt;/b&gt; option, and for radiobutton entries a single fixed value is used. It is recommended that you always set the &lt;b&gt;-variable&lt;/b&gt; option when creating either a checkbutton or a radiobutton.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6a4754229ff033b4ea336c5f6aaa2b73fd702e2" translate="yes" xml:space="preserve">
          <source>For client sockets (including the channels that get created when a client connects to a server socket) this option returns a list of three elements, the address, the host name and the port number for the socket. If the host name cannot be computed, the second element is identical to the address, the first element of the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6df4674b6785ba48f6320f47677b3609f5a9e04f" translate="yes" xml:space="preserve">
          <source>For each item given by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9cadea938a5acf94150cfe5e621ba7b5edf127e" translate="yes" xml:space="preserve">
          <source>For each item that meets the constraints specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b68487056b470a8660a68ba536952fe6ae9981ef" translate="yes" xml:space="preserve">
          <source>For each master the packer maintains an ordered list of slaves called the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ca88611c35effe8a61c4772ebcb7c68807852f6" translate="yes" xml:space="preserve">
          <source>For each of the items given by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c1d46a3506018555f886a56f496211451ce1da8" translate="yes" xml:space="preserve">
          <source>For each slave interpreter created with the &lt;b&gt;interp&lt;/b&gt; command, a new Tcl command is created in the master interpreter with the same name as the new interpreter. This command may be used to invoke various operations on the interpreter. It has the following general form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8082cf884fa5f37e7dc878b9a022664ffa27da77" translate="yes" xml:space="preserve">
          <source>For each slave the packer carries out the following steps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5639825ce44d2715046f6815a6b61923f4d61d8d" translate="yes" xml:space="preserve">
          <source>For example for Tcl 8.4 the paths searched are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db6725e9e7d5c088630e348048d1e73fc7657d3" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="cd2b58fe23ca5ad53516470700eabbeaf0493541" translate="yes" xml:space="preserve">
          <source>For example, assume the collating sequence includes a &lt;b&gt;ch&lt;/b&gt; multi-character collating element. Then the RE &amp;ldquo;&lt;b&gt;[[.ch.]]*c&lt;/b&gt;&amp;rdquo; (zero or more &amp;ldquo;&lt;b&gt;ch&lt;/b&gt;s&amp;rdquo; followed by &amp;ldquo;&lt;b&gt;c&lt;/b&gt;&amp;rdquo;) matches the first five characters of &amp;ldquo;&lt;b&gt;chchcc&lt;/b&gt;&amp;rdquo;. Also, the RE &amp;ldquo;&lt;b&gt;[^c]b&lt;/b&gt;&amp;rdquo; matches all of &amp;ldquo;&lt;b&gt;chb&lt;/b&gt;&amp;rdquo; (because &amp;ldquo;&lt;b&gt;[^c]&lt;/b&gt;&amp;rdquo; matches the multi-character &amp;ldquo;&lt;b&gt;ch&lt;/b&gt;&amp;rdquo;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="375a08ba3779762f058d2487cabd6e511e040bcb" translate="yes" xml:space="preserve">
          <source>For example, executing (in the &amp;ldquo;en&amp;rdquo; locale) the code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a25faa4ff905b88ace88def98051f07c3efce0" translate="yes" xml:space="preserve">
          <source>For example, executing the code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0cc625ab55e4daeb45f5b1efc184c2fc0a524ad" translate="yes" xml:space="preserve">
          <source>For example, suppose a directory contains the definitions for classes &quot;Toaster&quot; and &quot;SmartToaster&quot;. Then the &quot;tclIndex&quot; file for this directory would look like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd8f02846f7d6487bc5415a564f65b7a6dfd34cc" translate="yes" xml:space="preserve">
          <source>For example, suppose a directory contains the definitions for extendedclasses &quot;Toaster&quot; and &quot;SmartToaster&quot;. Then the &quot;tclIndex&quot; file for this directory would look like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="692dc9753ebdb4970051dcceda49a9623478beb3" translate="yes" xml:space="preserve">
          <source>For example, suppose a directory contains the definitions for widgets &quot;Toaster&quot; and &quot;SmartToaster&quot;. Then the &quot;tclIndex&quot; file for this directory would look like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e9822160aa8280eb91926774e50b0794ec73774" translate="yes" xml:space="preserve">
          <source>For example, suppose that procedure &lt;b&gt;a&lt;/b&gt; was invoked from top-level, and that it called &lt;b&gt;b&lt;/b&gt;, and that &lt;b&gt;b&lt;/b&gt; called &lt;b&gt;c&lt;/b&gt;. Suppose that &lt;b&gt;c&lt;/b&gt; invokes the &lt;b&gt;uplevel&lt;/b&gt; command. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c6062ce4ad5fa56a2861f4a495f71875ad7c325" translate="yes" xml:space="preserve">
          <source>For example, the class bindings for the &lt;b&gt;&lt;a href=&quot;ttk_button.htm&quot;&gt;ttk::button&lt;/a&gt;&lt;/b&gt; widget are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="404a2088dbb1ed8674174bed62df8448f8c6343f" translate="yes" xml:space="preserve">
          <source>For example, this regular expression is non-greedy, and will match the shortest substring possible given that &amp;ldquo;&lt;b&gt;abc&lt;/b&gt;&amp;rdquo; will be matched as early as possible (the quantifier does not change that):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0f39dfc054ff6aabcbce3f32b2924b042beb1d" translate="yes" xml:space="preserve">
          <source>For example, while on Linux both</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61f4329e1f051f9791ba6f85d920f23f21d3fd4c" translate="yes" xml:space="preserve">
          <source>For example, with code like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="c884c77b8bb45af9977f95ca3d76fea9d88703f1" translate="yes" xml:space="preserve">
          <source>For extensibility any error whose value is a negative integer number will cause the higher layers to set the C-level variable &quot;&lt;b&gt;errno&lt;/b&gt;&quot; to the absolute value of this number, signaling a system error. However, note that the exact mapping between these error numbers and their meanings is operating system dependent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="098a861693b48285ea16ad1133095a849da512fe" translate="yes" xml:space="preserve">
          <source>For full documentation see</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73bb8722ab98020bea997c49148afde2a55d8722" translate="yes" xml:space="preserve">
          <source>For lines that wrap (so that they cover more than one line on the display) this option specifies additional space to provide between the display lines that represent a single line of text. The value may have any of the standard forms for screen distances. This option may be overridden with &lt;b&gt;-spacing2&lt;/b&gt; options in tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b46c3384281e86d1077cdb3d18e08887e09a2727" translate="yes" xml:space="preserve">
          <source>For lines that wrap, this option specifies how much additional space to leave between the display lines for a single text line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0eced1d0d084cb8e1220cc1da34de72b67027b5" translate="yes" xml:space="preserve">
          <source>For masters whose size is larger than the requested layout, the additional space is apportioned according to the row and column weights. If all of the weights are zero, the layout is placed within its master according to the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb2663d22d0020ac66e9b4132a7220c04aa5267" translate="yes" xml:space="preserve">
          <source>For menu entries that are check buttons or radio buttons, this option specifies the color to display in the indicator when the check button or radio button is selected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69d89119d417fb43703bd40a509d6d32f164aea7" translate="yes" xml:space="preserve">
          <source>For most applications a channel connected to a serial port should be configured to be nonblocking: &lt;b&gt;&lt;a href=&quot;fconfigure.htm&quot;&gt;fconfigure&lt;/a&gt;&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="734905a0ce172ee35fdc2bc6b59f87874424bb1a" translate="yes" xml:space="preserve">
          <source>For read and write traces,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2046e50dc8d8e6f7b254f88618d84beb8fc7f27" translate="yes" xml:space="preserve">
          <source>For reading the resource, thread should obtain a read lock on the resource . Read lock is non-exclusive, meaning that more than one thread can obtain a read lock to the same resource, without waiting on other readers . For changing the resource, however, a thread must obtain a exclusive write lock . This lock effectively blocks all threads from gaining the read-lock while the resource is been modified by the writer thread . Only after the write lock has been released, the resource may be read-locked again .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f27b310009246f166698cc82f751f4b9359ae41" translate="yes" xml:space="preserve">
          <source>For server sockets this option returns a list of a multiple of three elements each group of which have the same meaning as described above. The list contains more than one group when the server socket was created without &lt;b&gt;-myaddr&lt;/b&gt; or with the argument to &lt;b&gt;-myaddr&lt;/b&gt; being a domain name that resolves multiple IP addresses that are local to the invoking host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf90463fc771a47ee3467870bda739a1ad945992" translate="yes" xml:space="preserve">
          <source>For some examples of simple expressions, suppose the variable &lt;b&gt;a&lt;/b&gt; has the value 3 and the variable &lt;b&gt;b&lt;/b&gt; has the value 6. Then the command on the left side of each of the lines below will produce the value on the right side of the line:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f9501265122d414541eda62488c3a225f2d92d" translate="yes" xml:space="preserve">
          <source>For the benefit of users who need to understand legacy code that uses free-form scan, the documentation for how free-form scan interprets a string is included here:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe0ce3b48bcb7cfd66e686602a6ea173129c59e" translate="yes" xml:space="preserve">
          <source>For time zones in case [1] that do not match any of the above strings, and always for cases [2]-[6], the following rules apply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2afe3bb8c0d0269f90fd3ebecbf3ccb118e3a05" translate="yes" xml:space="preserve">
          <source>For virtual events, the string will be whatever value is stored in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aa41ed9b4bd2d328dc5e8a917a01168db6e6580" translate="yes" xml:space="preserve">
          <source>For white-box (regression) tests, the target should be the name of the C function or Tcl procedure being tested. For black-box tests, the target should be the name of the feature being tested. Some conventions call for the names of black-box tests to have the suffix &lt;b&gt;_bb&lt;/b&gt;. Related tests should share a major number. As a test suite evolves, it is best to have the same test name continue to correspond to the same test, so that it remains meaningful to say things like &amp;ldquo;Test foo-1.3 passed in all releases up to 3.4, but began failing in release 3.5.&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae408e4181f59f6bc221e254f8eb8d1500c1618" translate="yes" xml:space="preserve">
          <source>For widgets that can lay themselves out with either a horizontal or vertical orientation, such as scrollbars, this option specifies which orientation should be used. Must be either &lt;b&gt;horizontal&lt;/b&gt; or &lt;b&gt;vertical&lt;/b&gt; or an abbreviation of one of these.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ff359587ce6583ba8662df2f12c27d858d8ef56" translate="yes" xml:space="preserve">
          <source>For widgets that can perform word-wrapping, this option specifies the maximum line length. Lines that would exceed this length are wrapped onto the next line, so that no line is longer than the specified length. The value may be specified in any of the standard forms for screen distances. If this value is less than or equal to 0 then no wrapping is done: lines will break only at newline characters in the text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f11d4e2201f4a70c904e9927444b720c0f72bb05" translate="yes" xml:space="preserve">
          <source>For widgets with a slider that can be dragged to adjust a value, such as scrollbars, this option determines when notifications are made about changes in the value. The option's value must be a boolean of the form accepted by &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TclLib/GetInt.htm&quot;&gt;Tcl_GetBoolean&lt;/a&gt;&lt;/b&gt;. If the value is false, updates are made continuously as the slider is dragged. If the value is true, updates are delayed until the mouse button is released to end the drag; at that point a single notification is made (the value &amp;ldquo;jumps&amp;rdquo; rather than changing smoothly).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d7a4d031bf624549f069212671f859ee5600cb" translate="yes" xml:space="preserve">
          <source>Forbids the transaction from reading &quot;dirty&quot; data, but does not guarantee repeatable reads; if a transaction reads a row of a database at a given time, there is no guarantee that the same row will be available at a later time in the same transaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75f60c8531d3e83a049b57a13c31d10b722d646b" translate="yes" xml:space="preserve">
          <source>Force revalidation, independent of the conditions specified by the &lt;b&gt;-validate&lt;/b&gt; option. Returns 0 if validation fails, 1 if it succeeds. Sets or clears the &lt;b&gt;invalid&lt;/b&gt; state accordingly. See &lt;b&gt;&lt;a href=&quot;#M39&quot;&gt;VALIDATION&lt;/a&gt;&lt;/b&gt; below for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c429364ee6fa86286a4b639cb978edee3920e42b" translate="yes" xml:space="preserve">
          <source>Force the HTTP request method to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c6be79e0f7a1c99d1ec7a755a44752a32ae4b78" translate="yes" xml:space="preserve">
          <source>Forces the directory referenced by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd4d43a0b1e68b08813f18c45c8ffbbb997bf8e6" translate="yes" xml:space="preserve">
          <source>Forces the file referenced by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ad4506b94d2ace5213525b6034d27394953fdf9" translate="yes" xml:space="preserve">
          <source>ForestGreen</source>
          <target state="translated">ForestGreen</target>
        </trans-unit>
        <trans-unit id="194fbe20daa89676345ed95ef119e21a917adebc" translate="yes" xml:space="preserve">
          <source>Form feed (Unicode U+00000C).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68487ec56404d7fc47538f024f5c9917ff9e5ecf" translate="yes" xml:space="preserve">
          <source>Formally, the &lt;b&gt;string bytelength&lt;/b&gt; operation returns the content of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="898ba4b46672ee71b4f1cb9aa1eb446724842cce" translate="yes" xml:space="preserve">
          <source>Format groups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbc5d0b4a66ad289a5760f5fe7ae4006f9ac329c" translate="yes" xml:space="preserve">
          <source>Format suboptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533baaaef40431a352c9401d1805aacf3a0524a3" translate="yes" xml:space="preserve">
          <source>FormatString</source>
          <target state="translated">FormatString</target>
        </trans-unit>
        <trans-unit id="c7942da6c121ae34e13d8b168a4f4dac96b75c08" translate="yes" xml:space="preserve">
          <source>Formats a time that is expressed as an integer number of seconds into a format intended for consumption by users or external programs. See &lt;b&gt;&lt;a href=&quot;#M24&quot;&gt;FORMATTING TIMES&lt;/a&gt;&lt;/b&gt; for a full description.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2627760fed4a41c16b908eba5678759fd76b9e4d" translate="yes" xml:space="preserve">
          <source>Formatting times</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3037e63bf6849b84a9a65234ff16b35b8d4cade" translate="yes" xml:space="preserve">
          <source>Fraction</source>
          <target state="translated">Fraction</target>
        </trans-unit>
        <trans-unit id="dfc06b14daa909ce1511ab3faac5c5ca7df3795f" translate="yes" xml:space="preserve">
          <source>Free form scan</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c9decd134e2beb17f359f75305dfe480db3717c" translate="yes" xml:space="preserve">
          <source>Furthermore, during manual resizing the window manager will display the window's current size in terms of grid units rather than pixels. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15d5ad949871b8f69a4fa97fc1ab5d11cd85084e" translate="yes" xml:space="preserve">
          <source>GENERAL MODIFIER OPTIONS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be119edef91fb7e17fbd3ef4c63acb66cbc77a54" translate="yes" xml:space="preserve">
          <source>GENERIC SUBCOMMANDS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ac14776f7742199650cf6de0029bd6ceb2024c3" translate="yes" xml:space="preserve">
          <source>GEOMETRY MANAGEMENT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8656ec66ce9587a26d32a8294f7dab341dda7cb5" translate="yes" xml:space="preserve">
          <source>GEOMETRY PROPAGATION</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="281dd14db29d9feff3e8b1fee231c9a2242d03f1" translate="yes" xml:space="preserve">
          <source>GLOBBING PATTERNS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="773bb4b12e8d1b08fab34b974a5c344de81497e3" translate="yes" xml:space="preserve">
          <source>GRIDDED GEOMETRY MANAGEMENT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bbfd35c76237fbe4c0f318b38359487892b1d75" translate="yes" xml:space="preserve">
          <source>General modifier options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d09d4248cbcfc51b558f908577fc9ef6ab1ea5c7" translate="yes" xml:space="preserve">
          <source>Generate a Postscript representation for part or all of the canvas. If the &lt;b&gt;-file&lt;/b&gt; option is specified then the Postscript is written to a file and an empty string is returned; otherwise the Postscript is returned as the result of the command. If the interpreter that owns the canvas is marked as safe, the operation will fail because safe interpreters are not allowed to write files. If the &lt;b&gt;-channel&lt;/b&gt; option is specified, the argument denotes the name of a channel already opened for writing. The Postscript is written to that channel, and the channel is left open for further writing at the end of the operation. The Postscript is created in Encapsulated Postscript form using version 3.0 of the Document Structuring Conventions. Note: by default Postscript is only generated for information that appears in the canvas's window on the screen. If the canvas is freshly created it may still have its initial size of 1x1 pixel so nothing will appear in the Postscript. To get around this problem either invoke the &lt;b&gt;&lt;a href=&quot;../tclcmd/update.htm&quot;&gt;update&lt;/a&gt;&lt;/b&gt; command to wait for the canvas window to reach its final size, or else use the &lt;b&gt;-width&lt;/b&gt; and &lt;b&gt;-height&lt;/b&gt; options to specify the area of the canvas to print. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a6e7880fdb089f6cd2ccf101901973a64d3c07d" translate="yes" xml:space="preserve">
          <source>Generate a random integer in the range 0..99 inclusive:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a054f3c559a7bba98222cda239228b441bdde7" translate="yes" xml:space="preserve">
          <source>Generate an error if a basic mathematical operation fails:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8e86cbe0f8b9dd1a60499f55ce727bcdb3b8eff" translate="yes" xml:space="preserve">
          <source>Generate output during the indexing process. Output is via the &lt;b&gt;tclLog&lt;/b&gt; procedure, which by default prints to stderr.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4205831fc3631522417f12185516fafe37b81de0" translate="yes" xml:space="preserve">
          <source>Generated just after setting the focus item to &lt;b&gt;-open false&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34055689d65796e9dee4fbd0c5a33b3e01833775" translate="yes" xml:space="preserve">
          <source>Generated just before setting the focus item to &lt;b&gt;-open true&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ead06510ef285ebb7f6220395aade6782b29c550" translate="yes" xml:space="preserve">
          <source>Generated whenever the selection changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="812c9618457d8d8e92dcdc8ae4f60f9873c032c1" translate="yes" xml:space="preserve">
          <source>Generates a window event and arranges for it to be processed just as if it had come from the window system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a980e9e0ed6194f5db8dd396eda77fb656d4e562" translate="yes" xml:space="preserve">
          <source>Generates an index suitable for use by &lt;b&gt;auto_load&lt;/b&gt;. The command searches</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850cc72ac33534297206ee238aef714b6f467a4e" translate="yes" xml:space="preserve">
          <source>Generic subcommands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c4528b162796fd8552ffcc29f961e7f1c82f00e" translate="yes" xml:space="preserve">
          <source>Geometry management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a158a53b2b111dff2b7f9d0fbabeeca99c6f2db" translate="yes" xml:space="preserve">
          <source>Geometry propagation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8695dc89a12b96ab64e03d3145bb048db5172a80" translate="yes" xml:space="preserve">
          <source>Get the coordinates corresponding to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b337b0beeb6976c2dc1933d6217ec260465d6659" translate="yes" xml:space="preserve">
          <source>Get the current contents of the clipboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dd7b83f9ac8fed54cc0aaef1837fc2a704dda5e" translate="yes" xml:space="preserve">
          <source>Get the current value of the &lt;b&gt;-value&lt;/b&gt; option, or the value corresponding to the coordinates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec181a5bded4954c890ef68efe09b2a5c981d9b1" translate="yes" xml:space="preserve">
          <source>GhostWhite</source>
          <target state="translated">GhostWhite</target>
        </trans-unit>
        <trans-unit id="8172075264d012bf3f097f02fa83547dd7ee2db8" translate="yes" xml:space="preserve">
          <source>Give the slave its requested dimensions plus any internal padding requested with &lt;b&gt;-ipadx&lt;/b&gt; or &lt;b&gt;-ipady&lt;/b&gt;. This is the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6839d82e03f5268d9a7cc97802db76c48c8cce6e" translate="yes" xml:space="preserve">
          <source>Given</source>
          <target state="translated">Given</target>
        </trans-unit>
        <trans-unit id="d018a97cb7aa5a5bc08bd51b679a553a3bf3530a" translate="yes" xml:space="preserve">
          <source>Given a dictionary value (first argument) and a key (second argument), this will retrieve the value for that key. Where several keys are supplied, the behaviour of the command shall be as if the result of &lt;b&gt;dict get $dictVal $key&lt;/b&gt; was passed as the first argument to &lt;b&gt;dict get&lt;/b&gt; with the remaining arguments as second (and possibly subsequent) arguments. This facilitates lookups in nested dictionaries. For example, the following two commands are equivalent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffeedcbf764364e2bc283715917fadbec1912cb4" translate="yes" xml:space="preserve">
          <source>Given a window x-coordinate in the canvas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7c494c9400f9062f07fccd4f054ee2a211dea60" translate="yes" xml:space="preserve">
          <source>Given a window y-coordinate in the canvas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="061a7eb90c1393f6c6dd3fd80824479c8240cb8a" translate="yes" xml:space="preserve">
          <source>Given a y-coordinate within the listbox window, this command returns the index of the (visible) listbox element nearest to that y-coordinate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d2775e031dd2258c39e5b77aa1aea8aa7e6f1c7" translate="yes" xml:space="preserve">
          <source>Given several source strings, &lt;b&gt;::msgcat::mcmax&lt;/b&gt; returns the length of the longest translated string. This is useful when designing localized GUIs, which may require that all buttons, for example, be a fixed width (which will be the width of the widest button).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ac688f7b5d9284a6ae27bd63c5d1c2ee66628c4" translate="yes" xml:space="preserve">
          <source>Given the above we allow the names for packages in Tcl modules to have mixed-case, but also require that there are no collisions when comparing names in a case-insensitive manner. In other words, if a package &lt;b&gt;Foo&lt;/b&gt; is deployed in the form of a Tcl Module, packages like &lt;b&gt;foo&lt;/b&gt;, &lt;b&gt;fOo&lt;/b&gt;, etc. are not allowed anymore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aac27bed2e22c646c2ed102c5fca483f61b14dbe" translate="yes" xml:space="preserve">
          <source>Globbing patterns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0f94c173944aa52fcb006681df50c03562e69f6" translate="yes" xml:space="preserve">
          <source>Grabs apply to particular displays. If an application has windows on multiple displays then it can establish a separate grab on each display. The grab on a particular display affects only the windows on that display. It is possible for different applications on a single display to have simultaneous local grabs, but only one application can have a global grab on a given display at once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d93249b999fded031dd2b5772651a7423441266f" translate="yes" xml:space="preserve">
          <source>GreenYellow</source>
          <target state="translated">GreenYellow</target>
        </trans-unit>
        <trans-unit id="597227a6cb6320f15461b4e51fecae092011b033" translate="yes" xml:space="preserve">
          <source>GridBag</source>
          <target state="translated">GridBag</target>
        </trans-unit>
        <trans-unit id="d5e163350372cd500073bc72e1dacd7f7a6bcc81" translate="yes" xml:space="preserve">
          <source>Gridded geometry management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d54e341a73a2e74f72aa9276577e67057eb587e6" translate="yes" xml:space="preserve">
          <source>Gridded geometry management occurs when one of the widgets of an application supports a range of useful sizes. This occurs, for example, in a text editor where the scrollbars, menus, and other adornments are fixed in size but the edit widget can support any number of lines of text or characters per line. In this case, it is usually desirable to let the user specify the number of lines or characters-per-line, either with the &lt;b&gt;wm geometry&lt;/b&gt; command or by interactively resizing the window. In the case of text, and in other interesting cases also, only discrete sizes of the window make sense, such as integral numbers of lines and characters-per-line; arbitrary pixel sizes are not useful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9766a9cfd539060441dcf8bdea451e36bd8c9850" translate="yes" xml:space="preserve">
          <source>Gridded geometry management provides support for this kind of application. Tk (and the window manager) assume that there is a grid of some sort within the application and that the application should be resized in terms of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68e098ff5495edc81d92b62caee93b9a358c65e1" translate="yes" xml:space="preserve">
          <source>Guarantees that any row of the database, once read, will have the same values for the life of a transaction. Still permits &quot;phantom reads&quot; (that is, newly-added rows appearing if a table is queried a second time).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4c7ee9ba5c961273e153da9b6004699add74ac0" translate="yes" xml:space="preserve">
          <source>HH:MM</source>
          <target state="translated">HH:MM</target>
        </trans-unit>
        <trans-unit id="363565c13999644d9a76a013b43fec2a61895b18" translate="yes" xml:space="preserve">
          <source>HIDDEN COMMANDS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa4b9026bb99f4cd5541e99a8304f46f8c551b3" translate="yes" xml:space="preserve">
          <source>HIGH RESOLUTION TIMERS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6dc58f5e8036353a7ac15516c30ac562e23dc26" translate="yes" xml:space="preserve">
          <source>HISTORY</source>
          <target state="translated">HISTORY</target>
        </trans-unit>
        <trans-unit id="87e5e022b17921b79669e38f17d6d16da3c3043e" translate="yes" xml:space="preserve">
          <source>HISTORY REVISION</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a76f8ee2872265eb6fe359928ee6904e71dc9d05" translate="yes" xml:space="preserve">
          <source>HOW IT WORKS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acdaf6dde6f8033a5bc307ccd4f788e6edb1460e" translate="yes" xml:space="preserve">
          <source>Handle different reasons for a file to not be openable for reading:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1609ddae1816e22d16120d116abb67260ca662ac" translate="yes" xml:space="preserve">
          <source>Having completed and summarized all selected test files, &lt;b&gt;runAllTests&lt;/b&gt; then recursively acts on subdirectories of &lt;b&gt;configure -testdir&lt;/b&gt;. All subdirectories that match any of the patterns in &lt;b&gt;configure -relateddir&lt;/b&gt; and do not match any of the patterns in &lt;b&gt;configure -asidefromdir&lt;/b&gt; are examined. If a file named &lt;b&gt;all.tcl&lt;/b&gt; is found in such a directory, it will be &lt;b&gt;&lt;a href=&quot;source.htm&quot;&gt;source&lt;/a&gt;&lt;/b&gt;d in the caller's context. Whether or not an examined directory contains an &lt;b&gt;all.tcl&lt;/b&gt; file, its subdirectories are also scanned against the &lt;b&gt;configure -relateddir&lt;/b&gt; and &lt;b&gt;configure -asidefromdir&lt;/b&gt; patterns. In this way, many directories in a directory tree can have all their test files evaluated by a single &lt;b&gt;runAllTests&lt;/b&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4243e16b5e0eedbeec7aa15b84641f40937e06c" translate="yes" xml:space="preserve">
          <source>Henry Spencer's original 1986</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2e34ae4f51fe4007ef4d0e5019e30e5c80a2866" translate="yes" xml:space="preserve">
          <source>Here Tcl looks for &lt;b&gt;traceLevel&lt;/b&gt; first in the namespace &lt;b&gt;Foo::Debug&lt;/b&gt;. Since it is not found there, Tcl then looks for it in the global namespace. The variable &lt;b&gt;Foo::traceLevel&lt;/b&gt; is completely ignored during the name resolution process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95e8377925fa4ff64df3dd6c6b45f079cac13c0b" translate="yes" xml:space="preserve">
          <source>Here are some examples of the use of the &lt;b&gt;exec&lt;/b&gt; command on Unix. To execute a simple program and get its result:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb5265b9ac5bf7b07e66bfe3c60ba752bb8b372b" translate="yes" xml:space="preserve">
          <source>Here are some examples of the use of the &lt;b&gt;exec&lt;/b&gt; command on Windows. To start an instance of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7be88f7c68d6dfb8265df5f32a85b19860dc653" translate="yes" xml:space="preserve">
          <source>Here is a sketch of a sample test file illustrating those points:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9667e19186b56c457a0d4a64d3086ab60802c399" translate="yes" xml:space="preserve">
          <source>Here is a sketch of a sample test suite master script:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc1a4f22a881093ab38b210c87229c5cfa1858ca" translate="yes" xml:space="preserve">
          <source>Here is a small example to clarify the relation between the field specifiers and the arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78f68d150cf93d3d40790b94465911b25a9c9122" translate="yes" xml:space="preserve">
          <source>Here is a very simple time server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d5a4939bc94f3f8371fa06b93f12f0a5d732f7d" translate="yes" xml:space="preserve">
          <source>Hexadecimal digits are &amp;ldquo;&lt;b&gt;0&lt;/b&gt;&amp;ndash;&lt;b&gt;9&lt;/b&gt;&amp;rdquo;, &amp;ldquo;&lt;b&gt;a&lt;/b&gt;&amp;ndash;&lt;b&gt;f&lt;/b&gt;&amp;rdquo;, and &amp;ldquo;&lt;b&gt;A&lt;/b&gt;&amp;ndash;&lt;b&gt;F&lt;/b&gt;&amp;rdquo;. Octal digits are &amp;ldquo;&lt;b&gt;0&lt;/b&gt;&amp;ndash;&lt;b&gt;7&lt;/b&gt;&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a115d524f0bd9ccd5335d9fe8335b20cfb53975b" translate="yes" xml:space="preserve">
          <source>Hidden commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79d80a8ec4bceec7121b1e669c98dad53f4a70ca" translate="yes" xml:space="preserve">
          <source>Hidden commands in a slave interpreter can be invoked in the body of procedures called in the master during alias invocation. For example, an alias for &lt;b&gt;&lt;a href=&quot;source.htm&quot;&gt;source&lt;/a&gt;&lt;/b&gt; could be created in a slave interpreter. When it is invoked in the slave interpreter, a procedure is called in the master interpreter to check that the operation is allowable (e.g. it asks to source a file that the slave interpreter is allowed to access). The procedure then it invokes the hidden &lt;b&gt;&lt;a href=&quot;source.htm&quot;&gt;source&lt;/a&gt;&lt;/b&gt; command in the slave interpreter to actually source in the contents of the file. Note that two commands named &lt;b&gt;&lt;a href=&quot;source.htm&quot;&gt;source&lt;/a&gt;&lt;/b&gt; exist in the slave interpreter: the alias, and the hidden command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6de5bd469e4688c88fa7392b25a17944234a68f8" translate="yes" xml:space="preserve">
          <source>Hide the console window from view. Precisely equivalent to withdrawing the &lt;b&gt;.&lt;/b&gt; window in the console interpreter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ebc0da8d54e850976b7c7e15458348a4de741d1" translate="yes" xml:space="preserve">
          <source>Hide the font selection dialog if it is visible and cause any pending &lt;b&gt;&lt;a href=&quot;tk.htm&quot;&gt;tk fontchooser&lt;/a&gt;&lt;/b&gt;&lt;b&gt;show&lt;/b&gt; command to return.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1a06ae4be43a6de2dd4e69640ab8a3b9a518260" translate="yes" xml:space="preserve">
          <source>Hides the tab specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5df7d8c6f21ab5afe152304f9344aa0b12ecb19" translate="yes" xml:space="preserve">
          <source>High resolution timers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ccd6497400b5576aeca1bd94af74aae1e0a250" translate="yes" xml:space="preserve">
          <source>History</source>
          <target state="translated">History</target>
        </trans-unit>
        <trans-unit id="60932d7e29fe436c02de6b26b3d4347ede8fd2d6" translate="yes" xml:space="preserve">
          <source>History revision</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fad408e153e75da43609dab7d043e5f43d9edfc1" translate="yes" xml:space="preserve">
          <source>Home and Control-a move the insertion cursor to the beginning of its display line and clear any selection in the widget. Shift-Home moves the insertion cursor to the beginning of the display line and also extends the selection to that point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45f6463bf2b4575c53d3cb1a698a0204313c38c1" translate="yes" xml:space="preserve">
          <source>Home moves the slider to the top (left) end of its range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c983a1551dcbdb6f0ce43637e89a8726577d4f4b" translate="yes" xml:space="preserve">
          <source>Hostname</source>
          <target state="translated">Hostname</target>
        </trans-unit>
        <trans-unit id="151e1cc9637094a8c490ee06555ff594cc4a3b9c" translate="yes" xml:space="preserve">
          <source>HotPink</source>
          <target state="translated">HotPink</target>
        </trans-unit>
        <trans-unit id="f48401b4e4116e15ef5c4d39ae6950420ac2d42b" translate="yes" xml:space="preserve">
          <source>HotPink1</source>
          <target state="translated">HotPink1</target>
        </trans-unit>
        <trans-unit id="c6ed83e673bd4adaff305c094c90bf102d32e854" translate="yes" xml:space="preserve">
          <source>HotPink2</source>
          <target state="translated">HotPink2</target>
        </trans-unit>
        <trans-unit id="5425c85fb822c8ee76a8039f8947f49d12598eb8" translate="yes" xml:space="preserve">
          <source>HotPink3</source>
          <target state="translated">HotPink3</target>
        </trans-unit>
        <trans-unit id="e45f5aadfbf63153ddf1eb23f4aaff76da86dd6b" translate="yes" xml:space="preserve">
          <source>HotPink4</source>
          <target state="translated">HotPink4</target>
        </trans-unit>
        <trans-unit id="0c81abc87bdc5538df96766fcae6d44438449d0a" translate="yes" xml:space="preserve">
          <source>How</source>
          <target state="translated">How</target>
        </trans-unit>
        <trans-unit id="5d0922f8791f787bc9fb233d3db3667d02bf2e41" translate="yes" xml:space="preserve">
          <source>How hard to compress the data. Must be an integer from 0 (uncompressed) to 9 (maximally compressed).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dd6a17cb4033f4f74df1bb6912b8a28a8074084" translate="yes" xml:space="preserve">
          <source>How it works</source>
          <target state="translated">它是如何工作的</target>
        </trans-unit>
        <trans-unit id="ee6e7e3882d45e8d48b59b0db27722854cb58369" translate="yes" xml:space="preserve">
          <source>How to attach a simple popup menu to a widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d0eea709da48a986575789a6692eb9167c1d5c5" translate="yes" xml:space="preserve">
          <source>However, the &lt;b&gt;Check&lt;/b&gt; procedure is not exported, so it is ignored by the import operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3234f4b9207ee0ae972aab59a2662bacdebb55a9" translate="yes" xml:space="preserve">
          <source>However, the last line would now normally be written without &lt;b&gt;eval&lt;/b&gt;, like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3e95f0d44b1920bdfead52fc81552739aae76aa" translate="yes" xml:space="preserve">
          <source>IMAGE COMMAND</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fb22b6c46e00163ed987f29ff77d0391a18da9e" translate="yes" xml:space="preserve">
          <source>IMAGE FORMATS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ac77358bb9ec6af50244ff3d7875a4135e89c9d" translate="yes" xml:space="preserve">
          <source>IMAGE ITEMS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bc34642fa5982d65ad05d1e27a4102b083d375f" translate="yes" xml:space="preserve">
          <source>IMAGE STRETCHING</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4896038b90aeb4e0e5fd80a6000539a23cd8a91f" translate="yes" xml:space="preserve">
          <source>IMPORTING COMMANDS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="862f45d2a0a3b14a9d9979047c7436321c1624dc" translate="yes" xml:space="preserve">
          <source>INDICES</source>
          <target state="translated">INDICES</target>
        </trans-unit>
        <trans-unit id="c5c69a24c5c35f13639df0343f55ccd5980e2e36" translate="yes" xml:space="preserve">
          <source>INTERNAL AND DEBUGGING VARIABLES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77ec5eb42cda0d4867f3290eb9f17905f9bc7deb" translate="yes" xml:space="preserve">
          <source>INTERNAL COMMANDS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0270ca97abe5bddc53ed95fb7179da4406621a18" translate="yes" xml:space="preserve">
          <source>INTRODUCTION</source>
          <target state="translated">INTRODUCTION</target>
        </trans-unit>
        <trans-unit id="ae02b6f871c74e31edc733bda8681f93f8baaef7" translate="yes" xml:space="preserve">
          <source>ISO 8601 point-in-time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c910a880317e79dea59ec736f59a82aacf7ea4d5" translate="yes" xml:space="preserve">
          <source>ISSUES CONCERNING CHARS AND INDICES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7e757c44217cb5a4885fbfc2cc2d182e769223" translate="yes" xml:space="preserve">
          <source>ITEM IDS AND TAGS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c04dd1f9dcd0178c2e75f489518bedcf61acb3a4" translate="yes" xml:space="preserve">
          <source>ITEM OPTIONS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="175f842b0cf2761d2e4ca160e68910f76730aebf" translate="yes" xml:space="preserve">
          <source>IconImage</source>
          <target state="translated">IconImage</target>
        </trans-unit>
        <trans-unit id="474ae52625b87d7628ae7b20a499329a99e07119" translate="yes" xml:space="preserve">
          <source>Id</source>
          <target state="translated">Id</target>
        </trans-unit>
        <trans-unit id="86b18c03b0ab4ffc00040e731ca8f97104c04e2f" translate="yes" xml:space="preserve">
          <source>Identify the panedwindow component underneath the point given by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751c68a3471b1c791efaee0a8e7c24ea0c266efd" translate="yes" xml:space="preserve">
          <source>If</source>
          <target state="translated">If</target>
        </trans-unit>
        <trans-unit id="8fbad7d2eee757cd28db918739ff8c0ae3ac3c25" translate="yes" xml:space="preserve">
          <source>If 2 arguments are given, then these are assumed to be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99975fe484b666a4b4fc2b9e85a328875364795d" translate="yes" xml:space="preserve">
          <source>If &lt;b&gt;-global&lt;/b&gt; is specified preceding the filename, all symbols found in the shared library are exported for global use by other libraries. The option &lt;b&gt;-lazy&lt;/b&gt; delays the actual loading of symbols until their first actual use. The options may be abbreviated. The option &lt;b&gt;--&lt;/b&gt; indicates the end of the options, and should be used if you wish to use a filename which starts with &lt;b&gt;-&lt;/b&gt; and you provide a packageName to the &lt;b&gt;load&lt;/b&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8e0d0e755dd7ca077f39a876f6c18dbcf33ff40" translate="yes" xml:space="preserve">
          <source>If &lt;b&gt;-nice&lt;/b&gt; is not specified, this command also resets the screen saver for the screen. Some screen savers will ignore this, but others will reset so that the screen becomes visible again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23c87b4cb80551e443f69bb81213daee0f20eb3c" translate="yes" xml:space="preserve">
          <source>If &lt;b&gt;-validatecommand&lt;/b&gt; is empty (the default), validation always succeeds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14820377628f870f9fc1cdff5e35d371ad7abf8d" translate="yes" xml:space="preserve">
          <source>If &lt;b&gt;CREAT&lt;/b&gt; is also specified, an error is returned if the file already exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed63c1ada36f6876b718e9aeba3bbbe9aa9d5eae" translate="yes" xml:space="preserve">
          <source>If &lt;b&gt;active&lt;/b&gt; or &lt;b&gt;passive&lt;/b&gt; is supplied as an optional argument to the command, then it specifies the focus model for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f48185543a062b59b41a6c45ddda004f73f689fd" translate="yes" xml:space="preserve">
          <source>If &lt;b&gt;bindtags&lt;/b&gt; is invoked with only one argument, then the current set of binding tags for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c541e2f2f676f5221744efb283444b097f35a3ae" translate="yes" xml:space="preserve">
          <source>If &lt;b&gt;tcl_precision&lt;/b&gt; is not zero, then when Tcl converts a floating point number, it creates a decimal representation of at most &lt;b&gt;tcl_precision&lt;/b&gt; significant digits; the result may be shorter if the shorter result represents the original number exactly. If no result of at most &lt;b&gt;tcl_precision&lt;/b&gt; digits is an exact representation of the original number, the one that is closest to the original number is chosen. If the original number lies precisely between two equally accurate decimal representations, then the one with an even value for the least significant digit is chosen; for instance, if &lt;b&gt;tcl_precision&lt;/b&gt; is 3, then 0.3125 will convert to 0.312, not 0.313, while 0.6875 will convert to 0.688, not 0.687. Any string of trailing zeroes that remains is trimmed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcc836f46e55d45abb452cda9062a725f6a11713" translate="yes" xml:space="preserve">
          <source>If &lt;b&gt;tclsh&lt;/b&gt; is invoked with arguments then the first few arguments specify the name of a script file, and, optionally, the encoding of the text data stored in that script file. Any additional arguments are made available to the script as variables (see below). Instead of reading commands from standard input &lt;b&gt;tclsh&lt;/b&gt; will read Tcl commands from the named file; &lt;b&gt;tclsh&lt;/b&gt; will exit when it reaches the end of the file. The end of the file may be marked either by the physical end of the medium, or by the character, &amp;ldquo;\032&amp;rdquo; (&amp;ldquo;\u001a&amp;rdquo;, control-Z). If this character is present in the file, the &lt;b&gt;tclsh&lt;/b&gt; application will read text up to but not including the character. An application that requires this character in the file may safely encode it as &amp;ldquo;\032&amp;rdquo;, &amp;ldquo;\x1a&amp;rdquo;, or &amp;ldquo;\u001a&amp;rdquo;; or may generate it by use of commands such as &lt;b&gt;&lt;a href=&quot;../tclcmd/format.htm&quot;&gt;format&lt;/a&gt;&lt;/b&gt; or &lt;b&gt;&lt;a href=&quot;../tclcmd/binary.htm&quot;&gt;binary&lt;/a&gt;&lt;/b&gt;. There is no automatic evaluation of &lt;b&gt;.tclshrc&lt;/b&gt; when the name of a script file is presented on the &lt;b&gt;tclsh&lt;/b&gt; command line, but the script file can always &lt;b&gt;&lt;a href=&quot;../tclcmd/source.htm&quot;&gt;source&lt;/a&gt;&lt;/b&gt; it if desired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="627f8d4af9a344765b3058fc35b80d04e009ca8e" translate="yes" xml:space="preserve">
          <source>If &lt;b&gt;unload&lt;/b&gt; determines that a library is not unloadable (or unload functionality has been disabled during compilation), an error will be returned. If the library is unloadable, then &lt;b&gt;unload&lt;/b&gt; will call the unload procedure. If the unload procedure returns &lt;b&gt;&lt;a href=&quot;catch.htm&quot;&gt;TCL_OK&lt;/a&gt;&lt;/b&gt;, &lt;b&gt;unload&lt;/b&gt; will proceed and decrease the proper reference count (depending on the target interpreter type). When both reference counts have reached 0, the library will be detached from the process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="562d6a085d036935dc458e97eb2b83b32b781d44" translate="yes" xml:space="preserve">
          <source>If a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4576a8ae7e414a66244d6c5f73cabad266f93862" translate="yes" xml:space="preserve">
          <source>If a &lt;b&gt;-base&lt;/b&gt; option is present, the following argument is a time (expressed in seconds from the epoch time) that is used as a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c0e0ca55bad57173f2185c86125487ff709050e" translate="yes" xml:space="preserve">
          <source>If a &lt;b&gt;-command&lt;/b&gt; option is specified for a cascade entry then it is evaluated as a Tcl command whenever the entry is invoked. This is not supported on Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fd5ff81a8577eb46049757df5fc2236a5a7bf7d" translate="yes" xml:space="preserve">
          <source>If a &lt;b&gt;-format&lt;/b&gt; option is present, the following argument is a string that specifies how the date and time are to be formatted. The string consists of any number of characters other than the per-cent sign (&amp;ldquo;&lt;b&gt;%&lt;/b&gt;&amp;rdquo;) interspersed with any number of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c1f7b1a08c7d8b63c1118f253e287e1c02cf2c2" translate="yes" xml:space="preserve">
          <source>If a &lt;b&gt;-locale&lt;/b&gt; option is present, the following argument is a string that specifies the locale in which the time is to be formatted, in the same format that is used for the &lt;b&gt;&lt;a href=&quot;msgcat.htm&quot;&gt;msgcat&lt;/a&gt;&lt;/b&gt; package. Note that the default, if &lt;b&gt;-locale&lt;/b&gt; is not specified, is the root locale &lt;b&gt;{}&lt;/b&gt; rather than the current locale. The current locale may be obtained by using &lt;b&gt;-locale&lt;/b&gt;&lt;b&gt;current&lt;/b&gt;. In addition, some platforms support a &lt;b&gt;system&lt;/b&gt; locale that reflects the user's current choices. For instance, on Windows, the format that the user has selected from dates and times in the Control Panel can be obtained by using the &lt;b&gt;system&lt;/b&gt; locale. On platforms that do not define a user selection of date and time formats separate from &lt;b&gt;LC_TIME&lt;/b&gt;, &lt;b&gt;-locale&lt;/b&gt;&lt;b&gt;system&lt;/b&gt; is synonymous with &lt;b&gt;-locale&lt;/b&gt;&lt;b&gt;current&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffab60f449d2d54a591b32360462b97893b92d13" translate="yes" xml:space="preserve">
          <source>If a &lt;b&gt;-locale&lt;/b&gt; option is present, the following argument is a string that specifies the locale in which the time is to be interpreted, in the same format that is used for the &lt;b&gt;&lt;a href=&quot;msgcat.htm&quot;&gt;msgcat&lt;/a&gt;&lt;/b&gt; package. Note that the default, if &lt;b&gt;-locale&lt;/b&gt; is not specified, is the root locale &lt;b&gt;{}&lt;/b&gt; rather than the current locale. The current locale may be obtained by using &lt;b&gt;-locale&lt;/b&gt;&lt;b&gt;current&lt;/b&gt;. In addition, some platforms support a &lt;b&gt;system&lt;/b&gt; locale that reflects the user's current choices. For instance, on Windows, the format that the user has selected from dates and times in the Control Panel can be obtained by using the &lt;b&gt;system&lt;/b&gt; locale. On platforms that do not define a user selection of date and time formats separate from &lt;b&gt;LC_TIME&lt;/b&gt;, &lt;b&gt;-locale&lt;/b&gt;&lt;b&gt;system&lt;/b&gt; is synonymous with &lt;b&gt;-locale&lt;/b&gt;&lt;b&gt;current&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8e8cacff983dd1bec11a2512c7725ac0ab677b5" translate="yes" xml:space="preserve">
          <source>If a &lt;b&gt;-timezone&lt;/b&gt; option is present, the following argument is a string that specifies the time zone in which the date and time are to be formatted. As an alternative to &amp;ldquo;&lt;b&gt;-timezone&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fce776ae0cbf87d435a5ee66ad89ed74efb1bbd" translate="yes" xml:space="preserve">
          <source>If a &lt;b&gt;-timezone&lt;/b&gt; option is present, the following argument is a string that specifies the time zone in which the date and time are to be interpreted. As an alternative to &lt;b&gt;-timezone&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bbba44da487ec01dc04cbe364fd1a155c055ee5" translate="yes" xml:space="preserve">
          <source>If a &lt;b&gt;&lt;a href=&quot;../tclcmd/file.htm&quot;&gt;File types&lt;/a&gt;&lt;/b&gt; listbox exists in the file dialog on the particular platform, this option gives the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01850ae3c8e0186691559d42b834594db89a036c" translate="yes" xml:space="preserve">
          <source>If a Tcl script file is currently being evaluated (i.e. there is a call to &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TclLib/Eval.htm&quot;&gt;Tcl_EvalFile&lt;/a&gt;&lt;/b&gt; active or there is an active invocation of the &lt;b&gt;&lt;a href=&quot;source.htm&quot;&gt;source&lt;/a&gt;&lt;/b&gt; command), then this command returns the name of the innermost file being processed. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a81bc5cb5cfd7114cfce274a820f608014d188f" translate="yes" xml:space="preserve">
          <source>If a backslash (&amp;ldquo;\&amp;rdquo;) appears within a word then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dc6f91335644b4c8c113cc8fd3e2634346a0fee" translate="yes" xml:space="preserve">
          <source>If a called routine fails with an error, the &lt;b&gt;&lt;a href=&quot;bgerror.htm&quot;&gt;bgerror&lt;/a&gt;&lt;/b&gt; routine for the interpreter is invoked after command completion. Only exception is the callback &lt;b&gt;unknowncmd&lt;/b&gt;, where an error causes the invoking &lt;b&gt;mc&lt;/b&gt;-command to fail with that error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad1e140914d70e0c1c8a5b19a04ddd981280685e" translate="yes" xml:space="preserve">
          <source>If a character has several tags associated with it, and if their display options conflict, then the options of the highest priority tag are used. If a particular display option has not been specified for a particular tag, or if it is specified as an empty string, then that option will never be used; the next-highest-priority tag's option will used instead. If no tag specifies a particular display option, then the default style for the widget will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c99688cb1e6200e5a3f3a38932f00319e74b6cf2" translate="yes" xml:space="preserve">
          <source>If a class resides in the current namespace context, this command reports its simple name--without any qualifiers. However, if the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="964591137a5dfdfb282ef64c719e296b59a1bd2d" translate="yes" xml:space="preserve">
          <source>If a file contains pure binary data (for instance, a JPEG image), the encoding for the channel should be configured to be &lt;b&gt;&lt;a href=&quot;binary.htm&quot;&gt;binary&lt;/a&gt;&lt;/b&gt;. Tcl will then assign no interpretation to the data in the file and simply read or write raw bytes. The Tcl &lt;b&gt;&lt;a href=&quot;binary.htm&quot;&gt;binary&lt;/a&gt;&lt;/b&gt; command can be used to manipulate this byte-oriented data. It is usually better to set the &lt;b&gt;-translation&lt;/b&gt; option to &lt;b&gt;&lt;a href=&quot;binary.htm&quot;&gt;binary&lt;/a&gt;&lt;/b&gt; when you want to transfer binary data, as this turns off the other automatic interpretations of the bytes in the stream as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df71c3e42ca648a0fb437e0b12a6508b575dff61" translate="yes" xml:space="preserve">
          <source>If a format string lacks a &lt;b&gt;%z&lt;/b&gt; or &lt;b&gt;%Z&lt;/b&gt; format group, it is possible for the time to be ambiguous because it appears twice in the same day, once without and once with Daylight Saving Time. If this situation occurs, the first occurrence of the time is chosen. (For this reason, it is wise to have the input string contain the time zone when converting local times. This caveat does not apply to UTC times.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f3d80dca25e734b189cf4417ec5b8116e3b248b" translate="yes" xml:space="preserve">
          <source>If a hash character (&amp;ldquo;#&amp;rdquo;) appears at a point where Tcl is expecting the first character of the first word of a command, then the hash character and the characters that follow it, up through the next newline, are treated as a comment and ignored. The comment character only has significance when it appears at the beginning of a command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab76a47ba029ee2eb865e9788a8232cdf6da7b96" translate="yes" xml:space="preserve">
          <source>If a master window is so large that there will be extra space left over after all of its slaves have been packed, then the extra space is distributed uniformly among all of the slaves for which the &lt;b&gt;-expand&lt;/b&gt; option is set. Extra horizontal space is distributed among the expandable slaves whose &lt;b&gt;-side&lt;/b&gt; is &lt;b&gt;left&lt;/b&gt; or &lt;b&gt;right&lt;/b&gt;, and extra vertical space is distributed among the expandable slaves whose &lt;b&gt;-side&lt;/b&gt; is &lt;b&gt;top&lt;/b&gt; or &lt;b&gt;bottom&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2646acb36755d903787a3f8388bbce9c64a2865" translate="yes" xml:space="preserve">
          <source>If a menubutton has the input focus, the space and return keys post the menubutton.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a989536c677bf9c00f110fa6d7ea8d7f799ca3b" translate="yes" xml:space="preserve">
          <source>If a new file is created as part of opening it,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53b471d2221cfeaf0fae6fce353e663b5536eca7" translate="yes" xml:space="preserve">
          <source>If a package is installed into a subdirectory of the &lt;b&gt;&lt;a href=&quot;tclvars.htm&quot;&gt;tcl_pkgPath&lt;/a&gt;&lt;/b&gt; and loaded via &lt;b&gt;&lt;a href=&quot;package.htm&quot;&gt;package require&lt;/a&gt;&lt;/b&gt;, the following procedure is recommended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc36ff4a37ce1ceba0e6115c7fa18ad9ad8c234" translate="yes" xml:space="preserve">
          <source>If a path is already present as is, no error will be raised and no action will be taken.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93a4236ca40f8a9c4804dbf82fdc478e7cee9d98" translate="yes" xml:space="preserve">
          <source>If a proc of this name is defined it is the default Apple Event handler for kAEOpenDocuments, &amp;ldquo;odoc&amp;rdquo;, the Apple Event sent when your application is asked to open one or more documents (e.g., by drag &amp;amp; drop onto the app or by opening a document of a type associated to the app). The proc should take as arguments paths to the files to be opened, like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d2a10e482ce6e53b7c4abe192987e7807e3cd0c" translate="yes" xml:space="preserve">
          <source>If a proc of this name is defined it is the default Apple Event handler for kAEPrintDocuments, &amp;ldquo;pdoc&amp;rdquo;, the Apple Event sent when your application is asked to print one or more documents (e.g., via the Print menu item in the Finder). It works the same way as &lt;b&gt;tk::mac::OpenDocument&lt;/b&gt; in terms of arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bd337e897d70611009d99c2ff3d08a100d4ecdb" translate="yes" xml:space="preserve">
          <source>If a proc of this name is defined it is the default Apple Event handler for kAEQuitApplication, &amp;ldquo;quit&amp;rdquo;, the Apple Event sent when your application is asked to be quit, e.g. via the quit menu item in the application menu, the quit menu item in the Dock menu, or during a logout/restart/shutdown etc. If this is not defined, &lt;b&gt;&lt;a href=&quot;../tclcmd/exit.htm&quot;&gt;exit&lt;/a&gt;&lt;/b&gt; is called instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7932ed18f424e05e39e559ad15774f83757a4b3e" translate="yes" xml:space="preserve">
          <source>If a proc of this name is defined it is the default Apple Event handler for kAEReopenApplication, &amp;ldquo;rapp&amp;rdquo;, the Apple Event sent when your application is opened when it is already running (e.g. by clicking its icon in the Dock). Here is a sample that raises a minimized window when the Dock icon is clicked:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0eab41b9e12087cee639a2876650e5c8e2db389" translate="yes" xml:space="preserve">
          <source>If a proc of this name is defined, this proc fill fire when your application is intially opened. It is the default Apple Event handler for kAEOpenApplication, &amp;ldquo;oapp&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df4af16bf9277b83dfe0c837b652348872d4c74f" translate="yes" xml:space="preserve">
          <source>If a procedure is active and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d17182b3e2ec665d7bc650edfd79a6055d0a02b3" translate="yes" xml:space="preserve">
          <source>If a program calls other programs, such as is common with compilers, then you may need to resort to batch files to hide the console windows that sometimes pop up:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c10a6725fcb52157f927f8195fe2f755d3fdeb80" translate="yes" xml:space="preserve">
          <source>If a single</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="659715c23e4367197d8990e35fc40e15aa3a6019" translate="yes" xml:space="preserve">
          <source>If a single process is managing several different Tk applications, only one of those applications can have a local grab for a given display at any given time. If the applications are in different processes, this restriction does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05751ed43b24aa3ebefcb2a0a944e33b0ee656a6" translate="yes" xml:space="preserve">
          <source>If a slave's cell is larger than its requested dimensions, this option may be used to position (or stretch) the slave within its cell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ca338871bd0a6dd410cd1c8d4e6c128a20292b0" translate="yes" xml:space="preserve">
          <source>If a slave's parcel is larger than its requested dimensions, this option may be used to stretch the slave.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b59b83778536701a88b166e4b19c63580252369" translate="yes" xml:space="preserve">
          <source>If a tag is the name of an internal window the binding applies to that window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e69463a6b6c59a18f6ffcb1ca96645e6d5c1b91" translate="yes" xml:space="preserve">
          <source>If a variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b123d4eae6937e497b71018096107a6ec36622fb" translate="yes" xml:space="preserve">
          <source>If a version of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="543e7499cd4e5a0b2d1107b9559e356d725c2615" translate="yes" xml:space="preserve">
          <source>If a virtual binding has the exact same sequence as a separate physical binding, then the physical binding will take precedence. Consider the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c44e80c0824645380287257260c587fad06f70" translate="yes" xml:space="preserve">
          <source>If a window's pane is larger than the requested dimensions of the window, this option may be used to position (or stretch) the window within its pane.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="667c98a1c7b89c1f376ab69870710c25b449752f" translate="yes" xml:space="preserve">
          <source>If a word contains a dollar-sign (&amp;ldquo;$&amp;rdquo;) followed by one of the forms described below, then Tcl performs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0242bf004b1e5bed7766f5cbfacbf3f14d4d210" translate="yes" xml:space="preserve">
          <source>If a word contains an open bracket (&amp;ldquo;[&amp;rdquo;) then Tcl performs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1300dc594c08735ca24335d0e925976513867166" translate="yes" xml:space="preserve">
          <source>If a word starts with the string &amp;ldquo;{*}&amp;rdquo; followed by a non-whitespace character, then the leading &amp;ldquo;{*}&amp;rdquo; is removed and the rest of the word is parsed and substituted as any other word. After substitution, the word is parsed as a list (without command or variable substitutions; backslash substitutions are performed as is normal for a list and individual internal words may be surrounded by either braces or double-quote characters), and its words are added to the command being substituted. For instance, &amp;ldquo;cmd a {*}{b [c]} d {*}{$e f {g h}}&amp;rdquo; is equivalent to &amp;ldquo;cmd a b {[c]} d {$e} f {g h}&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c0737d418ef372a85b86e0fa5b45870895cc448" translate="yes" xml:space="preserve">
          <source>If additional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a121b27768728c6401fa59d60f9780444520517b" translate="yes" xml:space="preserve">
          <source>If additional arguments are specified after</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b13ec5450ec185f2053c8fc1c3f715b7e1ef297d" translate="yes" xml:space="preserve">
          <source>If all matching style options are omitted, the default matching style is &lt;b&gt;-glob&lt;/b&gt;. If more than one matching style is specified, the last matching style given takes precedence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc3210be626afa38e4770bf42583409e6cee135" translate="yes" xml:space="preserve">
          <source>If an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a9fadc8278979efef0ce35c7d79557d03a75e7d" translate="yes" xml:space="preserve">
          <source>If an X event does not match any of the existing bindings, then the event is ignored. An unbound event is not considered to be an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7c6bcaf6b8b61fab160c3675f8d6e3f4291239e" translate="yes" xml:space="preserve">
          <source>If an end-of-file occurs while part way through reading a line, the partial line will be returned (or written into</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="356e7bc6d481939eec5923cd2697a18351439c3d" translate="yes" xml:space="preserve">
          <source>If an error is encountered while destructing an object, it will prevent the destruction of the class and any remaining objects. To destroy the entire class without regard for errors, use the &quot;&lt;b&gt;delete namespace&lt;/b&gt;&quot; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ed04096244025610588a9017edcb5c01aed5a06" translate="yes" xml:space="preserve">
          <source>If an error is encountered while destructing an object, the &lt;b&gt;delete&lt;/b&gt; command is aborted and the object remains alive. To destroy an object without regard for errors, use the &quot;&lt;b&gt;&lt;a href=&quot;../tclcmd/rename.htm&quot;&gt;rename&lt;/a&gt;&lt;/b&gt;&quot; command to destroy the object access command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e704b9c277fc3ec840033d67582ebc48cfc56631" translate="yes" xml:space="preserve">
          <source>If an error occurs during substitution, then &lt;b&gt;subst&lt;/b&gt; will return that error. If a break exception occurs during command or variable substitution, the result of the whole substitution will be the string (as substituted) up to the start of the substitution that raised the exception. If a continue exception occurs during the evaluation of a command or variable substitution, an empty string will be substituted for that entire command or variable substitution (as long as it is well-formed Tcl.) If a return exception occurs, or any other return code is returned during command or variable substitution, then the returned value is substituted for that substitution. See the &lt;b&gt;&lt;a href=&quot;#M5&quot;&gt;EXAMPLES&lt;/a&gt;&lt;/b&gt; below. In this way, all exceptional return codes are &amp;ldquo;caught&amp;rdquo; by &lt;b&gt;subst&lt;/b&gt;. The &lt;b&gt;subst&lt;/b&gt; command itself will either return an error, or will complete successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3beb3b67186af72786cbb0235c96e551270751c2" translate="yes" xml:space="preserve">
          <source>If an error occurs in executing the script for a binding then the &lt;b&gt;&lt;a href=&quot;../tclcmd/bgerror.htm&quot;&gt;bgerror&lt;/a&gt;&lt;/b&gt; mechanism is used to report the error. The &lt;b&gt;&lt;a href=&quot;../tclcmd/bgerror.htm&quot;&gt;bgerror&lt;/a&gt;&lt;/b&gt; command will be executed at global level (outside the context of any Tcl procedure).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c7b846240cc7996236013146ad183ad9d275235" translate="yes" xml:space="preserve">
          <source>If an exception (i.e. any non-&lt;b&gt;ok&lt;/b&gt; result) occurs during the evaluation of either the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17a6cafb4f2d21187d9f625d6393a3406d0ce8e8" translate="yes" xml:space="preserve">
          <source>If an object resides in the current namespace context, this command reports its simple name--without any qualifiers. However, if the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34725ee8626da35658006077bd30f563c71ce8e0" translate="yes" xml:space="preserve">
          <source>If an unknown handler is specified for an ensemble, that handler is called when the ensemble command would otherwise return an error due to it being unable to decide which subcommand to invoke. The exact conditions under which that occurs are controlled by the &lt;b&gt;-subcommands&lt;/b&gt;, &lt;b&gt;-map&lt;/b&gt; and &lt;b&gt;-prefixes&lt;/b&gt; options as described above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47520d691faa4dcb3bdeae5a79a9409c93e39aa9" translate="yes" xml:space="preserve">
          <source>If an unloadable module in the file &lt;b&gt;foobar.dll&lt;/b&gt; had been loaded using the &lt;b&gt;&lt;a href=&quot;load.htm&quot;&gt;load&lt;/a&gt;&lt;/b&gt; command like this (on Windows):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18097c6c6d3d2804b763c4ee1a5fb1e9699ca4b9" translate="yes" xml:space="preserve">
          <source>If an upvar variable is unset (e.g. &lt;b&gt;x&lt;/b&gt; in &lt;b&gt;add2&lt;/b&gt; above), the &lt;b&gt;&lt;a href=&quot;unset.htm&quot;&gt;unset&lt;/a&gt;&lt;/b&gt; operation affects the variable it is linked to, not the upvar variable. There is no way to unset an upvar variable except by exiting the procedure in which it is defined. However, it is possible to retarget an upvar variable by executing another &lt;b&gt;upvar&lt;/b&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39edbcd182d0528be807e5f82aae922f09567c71" translate="yes" xml:space="preserve">
          <source>If another Tcl error occurs within the &lt;b&gt;bgerror&lt;/b&gt; command (for example, because no &lt;b&gt;bgerror&lt;/b&gt; command has been defined) then Tcl reports the error itself by writing a message to stderr.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67bb91aefc5ce1cf5762cfab7e8295988b5152e8" translate="yes" xml:space="preserve">
          <source>If any column name is not unique among the columns in a result set, the results of &lt;b&gt;-as dicts&lt;/b&gt; returns will be missing all but the rightmost of the duplicated columns. This limitation can be worked around by adding appropriate &lt;b&gt;AS&lt;/b&gt; clauses to &lt;b&gt;SELECT&lt;/b&gt; statements to ensure that all returned column names are unique. Plans are to fix this bug by using a C implementation of the driver, which will also improve performance significantly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62882e8efb391c0ebadf34b901322259f26b6981" translate="yes" xml:space="preserve">
          <source>If any normal printing characters are typed in a spinbox, they are inserted at the point of the insertion cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65c8d8b99b9ebaf3b87a69596b137f73cf0b66d0" translate="yes" xml:space="preserve">
          <source>If any normal printing characters are typed in an entry, they are inserted at the point of the insert cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d9b90a72ffd027621ccb2fbf12ee6e7a18f076d" translate="yes" xml:space="preserve">
          <source>If any normal printing characters are typed in an entry, they are inserted at the point of the insertion cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d8059cd446e036859af1fae308fcd30d1f9802" translate="yes" xml:space="preserve">
          <source>If any normal printing characters are typed, they are inserted at the point of the insertion cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="468ac3ce2d47a435260b471341ad4ce8d04029cd" translate="yes" xml:space="preserve">
          <source>If any of the &lt;b&gt;-nobackslashes&lt;/b&gt;, &lt;b&gt;-nocommands&lt;/b&gt;, or &lt;b&gt;-novariables&lt;/b&gt; are specified, then the corresponding substitutions are not performed. For example, if &lt;b&gt;-nocommands&lt;/b&gt; is specified, command substitution is not performed: open and close brackets are treated as ordinary characters with no special interpretation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1db7bdc0a37eb822eaf23b12a925043f3bff0d88" translate="yes" xml:space="preserve">
          <source>If any of the elements between</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14eae056ffa88a8256e56acf7a829c7d32d3d9cd" translate="yes" xml:space="preserve">
          <source>If any of the entries in a menu have letters underlined with the &lt;b&gt;-underline&lt;/b&gt; option, then pressing one of the underlined letters (or its upper-case or lower-case equivalent) invokes that entry and unposts the menu.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="408af26ae8e3849145e25ff9921e5b367a3ca384" translate="yes" xml:space="preserve">
          <source>If any of the slaves are already managed by the geometry manager then any unspecified options for them retain their previous values rather than receiving default values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="627f1121b6d211a6d6dc2c4629aecba0f547dee9" translate="yes" xml:space="preserve">
          <source>If arguments to &lt;b&gt;wish&lt;/b&gt; do specify a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b18741ac9817e71f5859020b26d88bf5003fc05d" translate="yes" xml:space="preserve">
          <source>If binary files have dependencies on other packages, things can become tricky because it is not possible to stub out C-level APIs such as &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TclLib/PkgRequire.htm&quot;&gt;Tcl_PkgRequire&lt;/a&gt;&lt;/b&gt; API when loading a binary file. For example, suppose the BLT package requires Tk, and expresses this with a call to &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TclLib/PkgRequire.htm&quot;&gt;Tcl_PkgRequire&lt;/a&gt;&lt;/b&gt; in its &lt;b&gt;Blt_Init&lt;/b&gt; routine. To support this, you must run &lt;b&gt;pkg_mkIndex&lt;/b&gt; in an interpreter that has Tk loaded. You can achieve this with the &lt;b&gt;-load &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="781c8309d3a3bf8c58508b518c260155cbb988b2" translate="yes" xml:space="preserve">
          <source>If bindings are created for the widget as a whole using the &lt;b&gt;&lt;a href=&quot;bind.htm&quot;&gt;bind&lt;/a&gt;&lt;/b&gt; command, then those bindings will supplement the tag bindings. The tag bindings will be invoked first, followed by bindings for the window as a whole.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46d8720789ed105fc0600231a5d3c472905c5d8d" translate="yes" xml:space="preserve">
          <source>If bindings have been created for a canvas window using the &lt;b&gt;&lt;a href=&quot;bind.htm&quot;&gt;bind&lt;/a&gt;&lt;/b&gt; command, then they are invoked in addition to bindings created for the canvas's items using the &lt;b&gt;bind&lt;/b&gt; widget command. The bindings for items will be invoked before any of the bindings for the window as a whole.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea8a32ba5176f5abe4aba993c6b87248c2ea3710" translate="yes" xml:space="preserve">
          <source>If button 1 is pressed in the trough with the Control key down, the slider moves all the way to the end of its range, in the direction towards the mouse cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6448dcb5fb607da6a0add379eb88a67e9234fec2" translate="yes" xml:space="preserve">
          <source>If button 1 is pressed in the trough, the scale's value will be incremented or decremented by the value of the &lt;b&gt;-resolution&lt;/b&gt; option so that the slider moves in the direction of the cursor. If the button is held down, the action auto-repeats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a2b6a686b34c7ba3ed00c35218c2905a1c572f" translate="yes" xml:space="preserve">
          <source>If button 1 is pressed over a menubutton and released outside any menubutton or menu, the menubutton unposts without invoking any menu entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7aa6eb2d116d08f58e435a98b8cacbf90f9b1a1" translate="yes" xml:space="preserve">
          <source>If button 1 is pressed over a menubutton and then dragged over some other menubutton, the original menubutton unposts itself and the new menubutton posts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab8a7a2ba025f997f4f16f4d9e8c359ba89e82c3" translate="yes" xml:space="preserve">
          <source>If button 1 is pressed over a menubutton and then released over that menubutton, the menubutton stays posted: you can still move the mouse over the menu and click button 1 on an entry to invoke it. Once a menu entry has been invoked, the menubutton unposts itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed95675bb3af3f12f6a50115edda52461d73a29e" translate="yes" xml:space="preserve">
          <source>If button 1 is pressed over the slider, the slider can be dragged with the mouse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05e815d70736666ddef1000af899f09a6b24ffa2" translate="yes" xml:space="preserve">
          <source>If button 1 is pressed with the Control key down, then if the mouse is over &lt;b&gt;arrow1&lt;/b&gt; or &lt;b&gt;trough1&lt;/b&gt; the view changes to the very top (left) of the document; if the mouse is over &lt;b&gt;arrow2&lt;/b&gt; or &lt;b&gt;trough2&lt;/b&gt; the view changes to the very bottom (right) of the document; if the mouse is anywhere else then the button press has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9632548bc279dc590916cf4b38099e4633af222e" translate="yes" xml:space="preserve">
          <source>If button 2 is pressed over the trough or the slider, it sets the view to correspond to the mouse position; dragging the mouse with button 2 down causes the view to drag with the mouse. If button 2 is pressed over one of the arrows, it causes the same behavior as pressing button 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a46c9207ebc0a5ad6ec3e1091ea369a3783f3a83" translate="yes" xml:space="preserve">
          <source>If button 2 is pressed, the scale's value is set to the mouse position. If the mouse is dragged with button 2 down, the scale's value changes with the drag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0b31b8666a36087d34426025c713be2775ce25b" translate="yes" xml:space="preserve">
          <source>If case-independent matching is specified, the effect is much as if all case distinctions had vanished from the alphabet. When an alphabetic that exists in multiple cases appears as an ordinary character outside a bracket expression, it is effectively transformed into a bracket expression containing both cases, so that &lt;b&gt;x&lt;/b&gt; becomes &amp;ldquo;&lt;b&gt;[xX]&lt;/b&gt;&amp;rdquo;. When it appears inside a bracket expression, all case counterparts of it are added to the bracket expression, so that &amp;ldquo;&lt;b&gt;[x]&lt;/b&gt;&amp;rdquo; becomes &amp;ldquo;&lt;b&gt;[xX]&lt;/b&gt;&amp;rdquo; and &amp;ldquo;&lt;b&gt;[^x]&lt;/b&gt;&amp;rdquo; becomes &amp;ldquo;&lt;b&gt;[^xX]&lt;/b&gt;&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad28075573f4b08d57253e133a2bc2322b461d48" translate="yes" xml:space="preserve">
          <source>If construction is successful, the constructor always returns the object name-regardless of how the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36ac6d3eea0024b7a720482c1dac89e77a3f17f2" translate="yes" xml:space="preserve">
          <source>If defined, this is called when your application receives a kEventAppHidden event, e.g. via the hide menu item in the application or Dock menus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb531a4557cf0167d54124d4fc130b62e7c192f0" translate="yes" xml:space="preserve">
          <source>If defined, this is called when your application receives a kEventAppShown event, e.g. via the show all menu item in the application menu, or by clicking the Dock icon of a hidden application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1789ad952c4ab4456c3231ecaafa2d2ac5fe1479" translate="yes" xml:space="preserve">
          <source>If defined, this is the error string seen when the HTTP transaction was aborted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="133d5036a5acbbef72da01035d8c82a77e71b927" translate="yes" xml:space="preserve">
          <source>If each script or file contains one package, and packages are only contained in one file, then things are easy. You simply specify all files to be indexed in any order with some glob patterns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09110ceb312edde4d747bc8c112a4b117106a1ca" translate="yes" xml:space="preserve">
          <source>If either</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed91e52e65124eaba2a2a022a5d7004cbb669ee5" translate="yes" xml:space="preserve">
          <source>If end of file occurs while scanning for an end of line, the command returns whatever input is available up to the end of file. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be59253a4d214786d1238d01b2e51748f6d94c4e" translate="yes" xml:space="preserve">
          <source>If existing, it has the same effect as running &lt;b&gt;&lt;a href=&quot;interp.htm&quot;&gt;interp debug&lt;/a&gt;&lt;/b&gt;&lt;b&gt;{} -frame 1&lt;/b&gt; as the very first command of each new Tcl interpreter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1f8c9cbd6a23bc1b3ee5d3a8b0405f754df52a1" translate="yes" xml:space="preserve">
          <source>If extensions are loaded into a safe interpreter, they may also restrict their own functionality to eliminate unsafe commands. For a discussion of management of extensions for safety see the manual entries for &lt;b&gt;&lt;a href=&quot;safe.htm&quot;&gt;Safe-Tcl&lt;/a&gt;&lt;/b&gt; and the &lt;b&gt;&lt;a href=&quot;load.htm&quot;&gt;load&lt;/a&gt;&lt;/b&gt; Tcl command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1db799617782a3fab92f015bc6563b8bd033491a" translate="yes" xml:space="preserve">
          <source>If for some reason, you want to stop using the imported commands, you can remove them with a &lt;b&gt;namespace forget&lt;/b&gt; command, like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6322eb7d129fba1d1be190397a121fc00ab3e777" translate="yes" xml:space="preserve">
          <source>If free-form scan is used, only the &lt;b&gt;-base&lt;/b&gt; and &lt;b&gt;-gmt&lt;/b&gt; options are accepted. The &lt;b&gt;-timezone&lt;/b&gt; and &lt;b&gt;-locale&lt;/b&gt; options will result in an error if &lt;b&gt;-format&lt;/b&gt; is not supplied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee4aa77fb64243f1452333cdbe2cb87168acfd71" translate="yes" xml:space="preserve">
          <source>If greater than zero, specifies how much space, in character widths, to allocate for the text label. If less than zero, specifies a minimum width. If zero or unspecified, the natural width of the text label is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9878b4dd8393769ec8f6efe4fc70ebeb1037a207" translate="yes" xml:space="preserve">
          <source>If greater than zero, specifies how much space, in character widths, to allocate for the text label. If less than zero, specifies a minimum width. If zero or unspecified, the natural width of the text label is used. Note that some themes may specify a non-zero &lt;b&gt;-width&lt;/b&gt; in the style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab5cdd0ae5bcd59da6b5933bade988ed92d130f8" translate="yes" xml:space="preserve">
          <source>If inverse partial newline-sensitive matching is specified, this affects &lt;b&gt;^&lt;/b&gt; and &lt;b&gt;$&lt;/b&gt; as with newline-sensitive matching, but not &lt;b&gt;.&lt;/b&gt; and bracket expressions. This is not very useful but is provided for symmetry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52f3c1c54cb98eea0b4dec67da3f56f088659934" translate="yes" xml:space="preserve">
          <source>If it is a string in the above list, it designates a known time zone, and is interpreted as such.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e1e5370541f5d12cf9cd4f6ba6d34d46df59092" translate="yes" xml:space="preserve">
          <source>If locales (or additional locales) are contained in another source like a data base, a package may use the load callback and not mcload:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b8d0f652f8223cb747afb7af1434ad53d05a55b" translate="yes" xml:space="preserve">
          <source>If more than one binding matches a particular event and they have the same</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d97038599db99753b78710e23b0240f5d090b3e" translate="yes" xml:space="preserve">
          <source>If more than one modifier is present then they are applied in left-to-right order. For example, the index &amp;ldquo;&lt;b&gt;end - 1 chars&lt;/b&gt;&amp;rdquo; refers to the next-to-last character in the text and &amp;ldquo;&lt;b&gt;insert wordstart - 1 c&lt;/b&gt;&amp;rdquo; refers to the character just before the first one in the word containing the insertion cursor. Modifiers are applied one by one in this left to right order, and after each step the resulting index is constrained to be a valid index in the text widget. So, for example, the index &amp;ldquo;&lt;b&gt;1.0 -1c +1c&lt;/b&gt;&amp;rdquo; refers to the index &amp;ldquo;&lt;b&gt;2.0&lt;/b&gt;&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f423c47e98d9ff68c8c672e784509e4a82c024d" translate="yes" xml:space="preserve">
          <source>If mouse button 1 is pressed over a button and later released over the button, the button is invoked. However, if the mouse is not over the button when button 1 is released, then no invocation occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c1054be8ddf1396d899393bbaa81764a2eed88" translate="yes" xml:space="preserve">
          <source>If multiple</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d08306f8907efe502443172170c16cbc463079b1" translate="yes" xml:space="preserve">
          <source>If newline-sensitive matching is specified, &lt;b&gt;.&lt;/b&gt; and bracket expressions using &lt;b&gt;^&lt;/b&gt; will never match the newline character (so that matches will never cross newlines unless the RE explicitly arranges it) and &lt;b&gt;^&lt;/b&gt; and &lt;b&gt;$&lt;/b&gt; will match the empty string after and before a newline respectively, in addition to matching at beginning and end of string respectively. ARE &lt;b&gt;\A&lt;/b&gt; and &lt;b&gt;\Z&lt;/b&gt; continue to match beginning or end of string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46d15914a8966b2144fb307d96a3896b83eea8f4" translate="yes" xml:space="preserve">
          <source>If no</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb17143184c8476616bbb53c1381c74a0f3a46d4" translate="yes" xml:space="preserve">
          <source>If no &lt;b&gt;-in&lt;/b&gt;, &lt;b&gt;-after&lt;/b&gt; or &lt;b&gt;-before&lt;/b&gt; option is specified then each of the slaves will be inserted at the end of the packing list for its parent unless it is already managed by the packer (in which case it will be left where it is). If one of these options is specified then all the slaves will be inserted at the specified point. If any of the slaves are already managed by the geometry manager then any unspecified options for them retain their previous values rather than receiving default values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2ce5a635db4266c069a214fbe6c112769b2a14a" translate="yes" xml:space="preserve">
          <source>If no &lt;b&gt;-tabs&lt;/b&gt; option is specified, or if it is specified as an empty list, then Tk uses default tabs spaced every eight (average size) characters. To achieve a different standard spacing, for example every 4 characters, simply configure the widget with &amp;ldquo;&lt;b&gt;-tabs &quot;[expr {4 * [font measure $font 0]}] left&quot; -tabstyle wordprocessor&lt;/b&gt;&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="399cfad406d27391734c6dd7f0b5561cbd4f6f20" translate="yes" xml:space="preserve">
          <source>If no argument is given, returns the character which is used to separate path segments for native files on this platform. If a path is given, the filesystem responsible for that path is asked to return its separator character. If no file system accepts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a5eb16d6c528770a2f92bf353b3421a85668140" translate="yes" xml:space="preserve">
          <source>If no indices are presented, the command takes the form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="353fcce645f89ef49a011cdbf538ba769c1096a0" translate="yes" xml:space="preserve">
          <source>If no keys are provided, &lt;b&gt;dict get&lt;/b&gt; will return a list containing pairs of elements in a manner similar to &lt;b&gt;&lt;a href=&quot;array.htm&quot;&gt;array get&lt;/a&gt;&lt;/b&gt;. That is, the first element of each pair would be the key and the second element would be the value for that key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1184a67f74c16842a9460a1af535c75e77456f7" translate="yes" xml:space="preserve">
          <source>If no options are supplied, a list of all of the slaves in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e1492699cfd282af66a934913fc6f708a9dc2b" translate="yes" xml:space="preserve">
          <source>If non-empty, specifies a bitmap (in a form suitable for &lt;a href=&quot;https://www.tcl.tk/man/tcl/TkLib/GetBitmap.htm&quot;&gt;Tk_GetBitmap&lt;/a&gt;) to display in the top portion of the dialog, to the left of the text. If this is an empty string then no bitmap is displayed in the dialog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0aac15f0ce91d43c6193655faa536aa98c67c65" translate="yes" xml:space="preserve">
          <source>If none of the above rules results in a usable date, the date of the base time in the given time zone is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88219379562d9a7111deb6340fcfa401834de5ca" translate="yes" xml:space="preserve">
          <source>If none of these is present, the C &lt;b&gt;localtime&lt;/b&gt; and &lt;b&gt;mktime&lt;/b&gt; functions are used to attempt to convert times between local and Greenwich. On 32-bit systems, this approach is likely to have bugs, particularly for times that lie outside the window (approximately the years 1902 to 2037) that can be represented in a 32-bit integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e746cdd862bf9ab8ded56734c1b097746ae848c" translate="yes" xml:space="preserve">
          <source>If only a single</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93abcbe69090cd5af9e3b2e4d76304d9f3ed7e70" translate="yes" xml:space="preserve">
          <source>If only a time is specified, the current date is assumed. If the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccd2740b89f8049f66ffcf5aeb5f91455580f838" translate="yes" xml:space="preserve">
          <source>If only one argument is given, that argument is assumed to be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07098c5f5439bb623ca347faf99f24300be19c70" translate="yes" xml:space="preserve">
          <source>If partial newline-sensitive matching is specified, this affects &lt;b&gt;.&lt;/b&gt; and bracket expressions as with newline-sensitive matching, but not &lt;b&gt;^&lt;/b&gt; and &lt;b&gt;$&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b03a80e9a562cf9b1589a814197ce3243d92bcb" translate="yes" xml:space="preserve">
          <source>If present and greater than zero, specifies the desired height of the pane area (not including internal padding or tabs). Otherwise, the maximum height of all panes is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="060ce3ef891eec90f296215cf79d9e115f0b94d0" translate="yes" xml:space="preserve">
          <source>If present and greater than zero, specifies the desired height of the widget in pixels. Otherwise, the requested height is determined by the height of the managed windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a57290d763a37935bbaad271913b8f7e8d114307" translate="yes" xml:space="preserve">
          <source>If present and greater than zero, specifies the desired width of the pane area (not including internal padding). Otherwise, the maximum width of all panes is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93aca7d54ec9a8a7e76625794c10194879eef1a0" translate="yes" xml:space="preserve">
          <source>If present and greater than zero, specifies the desired width of the widget in pixels. Otherwise, the requested width is determined by the width of the managed windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5605f20cf25aacd9834c9e1184dc8309a3d23c7b" translate="yes" xml:space="preserve">
          <source>If set to &lt;b&gt;extended&lt;/b&gt; (the default), multiple items may be selected. If &lt;b&gt;browse&lt;/b&gt;, only a single item will be selected at a time. If &lt;b&gt;none&lt;/b&gt;, the selection will not be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b37692566f534797740e74ea5a9085857d36628d" translate="yes" xml:space="preserve">
          <source>If set to any value, then &lt;b&gt;&lt;a href=&quot;unknown.htm&quot;&gt;unknown&lt;/a&gt;&lt;/b&gt; will not attempt to auto-exec any commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da49eaa932a0eb9bf972b8d7306d5f13d1a51645" translate="yes" xml:space="preserve">
          <source>If set to any value, then &lt;b&gt;&lt;a href=&quot;unknown.htm&quot;&gt;unknown&lt;/a&gt;&lt;/b&gt; will not attempt to auto-load any commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7788c252ab609f510701fb2417ee4996ee2c435" translate="yes" xml:space="preserve">
          <source>If set, contains the user-supplied geometry specification to use for the main Tk window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6df326ebd5e9a7746b19444e5ce7a652cd0ffd88" translate="yes" xml:space="preserve">
          <source>If set, specifies the integer index (0-based) of a character to underline in the text string. The underlined character is used for mnemonic activation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9345fa546691754052049be4d609aa3ae0d21f2" translate="yes" xml:space="preserve">
          <source>If set, specifies the integer index (0-based) of a character to underline in the text string. The underlined character is used for mnemonic activation. Mnemonic activation for a &lt;b&gt;ttk::labelframe&lt;/b&gt; sets the keyboard focus to the first child of the &lt;b&gt;ttk::labelframe&lt;/b&gt; widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b657aaed455b9e849cfae0aa175b5b637893f9" translate="yes" xml:space="preserve">
          <source>If set, then it must contain a valid Tcl list giving directories to search during auto-load operations (including for package index files when using the default &lt;b&gt;&lt;a href=&quot;package.htm&quot;&gt;package unknown&lt;/a&gt;&lt;/b&gt; handler). This variable is initialized during startup to contain, in order: the directories listed in the &lt;b&gt;TCLLIBPATH&lt;/b&gt; environment variable, the directory named by the &lt;b&gt;&lt;a href=&quot;tclvars.htm&quot;&gt;tcl_library&lt;/a&gt;&lt;/b&gt; global variable, the parent directory of &lt;b&gt;&lt;a href=&quot;tclvars.htm&quot;&gt;tcl_library&lt;/a&gt;&lt;/b&gt;, the directories listed in the &lt;b&gt;&lt;a href=&quot;tclvars.htm&quot;&gt;tcl_pkgPath&lt;/a&gt;&lt;/b&gt; variable. Additional locations to look for files and package indices should normally be added to this variable using &lt;b&gt;&lt;a href=&quot;lappend.htm&quot;&gt;lappend&lt;/a&gt;&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6d5b8937eb491e562f0984d84eb0901ed2675d7" translate="yes" xml:space="preserve">
          <source>If set, then it must contain a valid Tcl list giving directories to search during auto-load operations (including for package index files when using the default &lt;b&gt;&lt;a href=&quot;package.htm&quot;&gt;package unknown&lt;/a&gt;&lt;/b&gt; handler). This variable is initialized during startup to contain, in order: the directories listed in the &lt;b&gt;TCLLIBPATH&lt;/b&gt; environment variable, the directory named by the &lt;b&gt;tcl_library&lt;/b&gt; global variable, the parent directory of &lt;b&gt;tcl_library&lt;/b&gt;, the directories listed in the &lt;b&gt;tcl_pkgPath&lt;/b&gt; variable. Additional locations to look for files and package indices should normally be added to this variable using &lt;b&gt;&lt;a href=&quot;lappend.htm&quot;&gt;lappend&lt;/a&gt;&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d77bace38980ee9c2a368e58e701384045b36044" translate="yes" xml:space="preserve">
          <source>If set, then it must contain a valid Tcl list giving directories to search during auto-load operations. Directories must be specified in Tcl format, using &amp;ldquo;/&amp;rdquo; as the path separator, regardless of platform. This variable is only used when initializing the &lt;b&gt;&lt;a href=&quot;tclvars.htm&quot;&gt;auto_path&lt;/a&gt;&lt;/b&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="658513c3c941c81829606538217fe87550b627e7" translate="yes" xml:space="preserve">
          <source>If set, then it must contain a valid Tcl list giving directories to search during auto-load operations. Directories must be specified in Tcl format, using &amp;ldquo;/&amp;rdquo; as the path separator, regardless of platform. This variable is only used when initializing the &lt;b&gt;auto_path&lt;/b&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e3fcc679ca711cf70dc90f2ccf2eb8ce381b593" translate="yes" xml:space="preserve">
          <source>If set, then it specifies the location of the directory containing library scripts (the value of this variable will be assigned to the &lt;b&gt;&lt;a href=&quot;tclvars.htm&quot;&gt;tcl_library&lt;/a&gt;&lt;/b&gt; variable and therefore returned by the command &lt;b&gt;&lt;a href=&quot;info.htm&quot;&gt;info library&lt;/a&gt;&lt;/b&gt;). If this variable is not set then a default value is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f45fc5832cd7e21700d44b9e9e32b53a7b8bacb1" translate="yes" xml:space="preserve">
          <source>If set, then it specifies the location of the directory containing library scripts (the value of this variable will be assigned to the &lt;b&gt;tcl_library&lt;/b&gt; variable and therefore returned by the command &lt;b&gt;&lt;a href=&quot;info.htm&quot;&gt;info library&lt;/a&gt;&lt;/b&gt;). If this variable is not set then a default value is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ced3c5322d20192a0aa9013ac384f46a18fa72a" translate="yes" xml:space="preserve">
          <source>If several background errors accumulate before &lt;b&gt;bgerror&lt;/b&gt; is invoked to process them, &lt;b&gt;bgerror&lt;/b&gt; will be invoked once for each error, in the order they occurred. However, if &lt;b&gt;bgerror&lt;/b&gt; returns with a break exception, then any remaining errors are skipped without calling &lt;b&gt;bgerror&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4cb903da605fc43d150c9df9cc942d8871641a2" translate="yes" xml:space="preserve">
          <source>If specified, the widget's requested height in pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06edcecc1fd124b9bbe58ba0a973f564c2e708d9" translate="yes" xml:space="preserve">
          <source>If specified, the widget's requested height in pixels. (See</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="925f27dd102e7ef8a7bca98ac383b8a5d54fbd25" translate="yes" xml:space="preserve">
          <source>If specified, the widget's requested width in pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f1e884f4dd5642057f441801e33ba6a5a6cfa10" translate="yes" xml:space="preserve">
          <source>If standard input is not redirected with &amp;ldquo;&amp;lt;&amp;rdquo;, &amp;ldquo;&amp;lt;&amp;lt;&amp;rdquo; or &amp;ldquo;&amp;lt;@&amp;rdquo; then the standard input for the first command in the pipeline is taken from the application's current standard input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020cee88b5b6eba17d4b7f003fcb5f016f09862f" translate="yes" xml:space="preserve">
          <source>If standard output has not been redirected then the &lt;b&gt;exec&lt;/b&gt; command returns the standard output from the last command in the pipeline, unless &amp;ldquo;2&amp;gt;@1&amp;rdquo; was specified, in which case standard error is included as well. If any of the commands in the pipeline exit abnormally or are killed or suspended, then &lt;b&gt;exec&lt;/b&gt; will return an error and the error message will include the pipeline's output followed by error messages describing the abnormal terminations; the &lt;b&gt;-errorcode&lt;/b&gt; return option will contain additional information about the last abnormal termination encountered. If any of the commands writes to its standard error file and that standard error is not redirected and &lt;b&gt;-ignorestderr&lt;/b&gt; is not specified, then &lt;b&gt;exec&lt;/b&gt; will return an error; the error message will include the pipeline's standard output, followed by messages about abnormal terminations (if any), followed by the standard error output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6198999f26af548a7992791c49cc037e3c88705d" translate="yes" xml:space="preserve">
          <source>If that method implementation invokes the &lt;b&gt;next&lt;/b&gt; command, the next method implementation is invoked (with its arguments being those that were passed to &lt;b&gt;next&lt;/b&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d9b7696c9777c3fdef5f5f1690ef14ee23382d9" translate="yes" xml:space="preserve">
          <source>If the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f32333041d90be7259879dd5b119979d1aff06bb" translate="yes" xml:space="preserve">
          <source>If the &lt;b&gt;%&lt;/b&gt; is followed by a decimal number and a &lt;b&gt;$&lt;/b&gt;, as in &amp;ldquo;&lt;b&gt;%2$d&lt;/b&gt;&amp;rdquo;, then the value to convert is not taken from the next sequential argument. Instead, it is taken from the argument indicated by the number, where 1 corresponds to the first</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31316a7cd4aa2cf1257d55ea34d143f628356701" translate="yes" xml:space="preserve">
          <source>If the &lt;b&gt;%&lt;/b&gt; is followed by a decimal number and a &lt;b&gt;$&lt;/b&gt;, as in &amp;ldquo;&lt;b&gt;%2$d&lt;/b&gt;&amp;rdquo;, then the variable to use is not taken from the next sequential argument. Instead, it is taken from the argument indicated by the number, where 1 corresponds to the first</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5710ce273ee0d8aca9021a56b37cd6ecbaca5b8f" translate="yes" xml:space="preserve">
          <source>If the &lt;b&gt;-all&lt;/b&gt; flag is given, the list of methods will include those methods defined not just by the class, but also by the class's superclasses and mixins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f70d068828ae0979a53ad500e35f389b46b5325f" translate="yes" xml:space="preserve">
          <source>If the &lt;b&gt;-all&lt;/b&gt; flag is given, the list of methods will include those methods defined not just by the object, but also by the object's class and mixins, plus the superclasses of those classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f22918f7b0273114e51476954268de56648de636" translate="yes" xml:space="preserve">
          <source>If the &lt;b&gt;-base&lt;/b&gt; flag is specified, the next argument should contain an integer clock value. Only the date in this value is used, not the time. This is useful for determining the time on a specific day or doing other date-relative conversions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe711849c0c9065a46d1cdc32da46cedf516a809" translate="yes" xml:space="preserve">
          <source>If the &lt;b&gt;-command&lt;/b&gt; option is specified, then the HTTP operation is done in the background. &lt;b&gt;::http::geturl&lt;/b&gt; returns immediately after generating the HTTP request and the callback is invoked when the transaction completes. For this to work, the Tcl event loop must be active. In Tk applications this is always true. For pure-Tcl applications, the caller can use &lt;b&gt;::http::wait&lt;/b&gt; after calling &lt;b&gt;::http::geturl&lt;/b&gt; to start the event loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85bd59783dde0a293e86a1efdf7dab321c0bd403" translate="yes" xml:space="preserve">
          <source>If the &lt;b&gt;-default&lt;/b&gt; flag is given, the icon is applied to all toplevel windows (existing and future) to which no other specific icon has yet been applied. In addition to bitmap image types, a full path specification to any file which contains a valid Windows icon is also accepted (usually .ico or .icr files), or any file for which the shell has assigned an icon. Tcl will first test if the file contains an icon, then if it has an assigned icon, and finally, if that fails, test for a bitmap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75e3a7ab5620da63ccfc18a429881cf8b9e30de3" translate="yes" xml:space="preserve">
          <source>If the &lt;b&gt;-geometry&lt;/b&gt; option is specified, &lt;b&gt;wish&lt;/b&gt; copies its value into this variable. If the variable still exists after</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c79ac030b02172d14a4a55cd7f73a4df25469823" translate="yes" xml:space="preserve">
          <source>If the &lt;b&gt;-private&lt;/b&gt; flag is given, the list of methods will also include the private (i.e. non-exported) methods of the class (and superclasses and mixins, if &lt;b&gt;-all&lt;/b&gt; is also given).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0025b0b38440a7e86d93796ed6c633d0225f4111" translate="yes" xml:space="preserve">
          <source>If the &lt;b&gt;-private&lt;/b&gt; flag is given, the list of methods will also include the private (i.e. non-exported) methods of the object (and classes, if &lt;b&gt;-all&lt;/b&gt; is also given).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="914420c6b33573d949cb449008205c5c41e0f10c" translate="yes" xml:space="preserve">
          <source>If the &lt;b&gt;-server&lt;/b&gt; option is not specified, then the client side of a connection is opened and the command returns a channel identifier that can be used for both reading and writing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4f84b9358a53100b6383eb9481a6eb5cfc313b4" translate="yes" xml:space="preserve">
          <source>If the &lt;b&gt;-server&lt;/b&gt; option is specified then the new socket will be a server that listens on the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e106dce8a12fe5408c8c16716f660b4eeca2da5" translate="yes" xml:space="preserve">
          <source>If the &lt;b&gt;-underline&lt;/b&gt; option has been specified for a menubutton then keyboard traversal may be used to post the menubutton: Alt+</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06cb90b5a3fc159eba263f3f834d522ceccbbb43" translate="yes" xml:space="preserve">
          <source>If the &lt;b&gt;clock scan&lt;/b&gt; command is invoked without a &lt;b&gt;-format&lt;/b&gt; option, then it requests a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b299568418bfd1ca9ba705b40e8d95fc6291362" translate="yes" xml:space="preserve">
          <source>If the &lt;b&gt;ensemble&lt;/b&gt; command finds an existing ensemble called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d34249c618421f8cfe3c07906a94649e3f72f74" translate="yes" xml:space="preserve">
          <source>If the &lt;b&gt;idletasks&lt;/b&gt; keyword is specified as an argument to the command, then no new events or errors are processed; only idle callbacks are invoked. This causes operations that are normally deferred, such as display updates and window layout calculations, to be performed immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db183fab71e63942b8edbfee77a0a2a70b80142b" translate="yes" xml:space="preserve">
          <source>If the &lt;b&gt;send&lt;/b&gt; command is removed from an application (e.g. with the command &lt;b&gt;&lt;a href=&quot;../tclcmd/rename.htm&quot;&gt;rename&lt;/a&gt;&lt;/b&gt;&lt;b&gt;send {}&lt;/b&gt;) then the application will not respond to incoming send requests anymore, nor will it be able to issue outgoing requests. Communication can be reenabled by invoking the &lt;b&gt;&lt;a href=&quot;tk.htm&quot;&gt;tk appname&lt;/a&gt;&lt;/b&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f89f76c98c4b9448d68d84294925bd4970e57c" translate="yes" xml:space="preserve">
          <source>If the &lt;b&gt;variable&lt;/b&gt; command is executed inside a Tcl procedure, it creates local variables linked to the corresponding namespace variables (and therefore these variables are listed by &lt;b&gt;&lt;a href=&quot;info.htm&quot;&gt;info vars&lt;/a&gt;&lt;/b&gt;.) In this way the &lt;b&gt;variable&lt;/b&gt; command resembles the &lt;b&gt;&lt;a href=&quot;global.htm&quot;&gt;global&lt;/a&gt;&lt;/b&gt; command, although the &lt;b&gt;&lt;a href=&quot;global.htm&quot;&gt;global&lt;/a&gt;&lt;/b&gt; command only links to variables in the global namespace. If any</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f359384cd6ef8e3eb92c556219899b0dd3a91630" translate="yes" xml:space="preserve">
          <source>If the HTTP transaction completes entirely, then status will be &lt;b&gt;ok&lt;/b&gt;. However, you should still check the &lt;b&gt;::http::code&lt;/b&gt; value to get the HTTP status. The &lt;b&gt;::http::ncode&lt;/b&gt; procedure provides just the numeric error (e.g., 200, 404 or 500) while the &lt;b&gt;::http::code&lt;/b&gt; procedure returns a value like &amp;ldquo;HTTP 404 File not found&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f77ef563a4ba8faefc15c61577bcd3e0b3085e8" translate="yes" xml:space="preserve">
          <source>If the Posix time zone string contains a DST (Daylight Savings Time) part, but doesn't contain a rule stating when DST starts or ends, then default rules are used. For Timezones with an offset between 0 and +12, the current European/Russian rules are used, otherwise the current US rules are used. In Europe (offset +0 to +2) the switch to summertime is done each last Sunday in March at 1:00 GMT, and the switch back is each last Sunday in October at 2:00 GMT. In Russia (offset +3 to +12), the switch dates are the same, only the switch to summertime is at 2:00 local time, and the switch back is at 3:00 local time in all time zones. The US switch to summertime takes place each second Sunday in March at 2:00 local time, and the switch back is each first Sunday in November at 3:00 local time. These default rules mean that in all European, Russian and US (or compatible) time zones, DST calculations will be correct for dates in 2007 and later, unless in the future the rules change again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee97d45a3750b46a3167d9154b0774d252d90b75" translate="yes" xml:space="preserve">
          <source>If the Tcl interpreter encounters a command name for which there is not a defined command (in either the current namespace, or the global namespace), then Tcl checks for the existence of an unknown handler for the current namespace. By default, this handler is a command named &lt;b&gt;::unknown&lt;/b&gt;. If there is no such command, then the interpreter returns an error. If the &lt;b&gt;unknown&lt;/b&gt; command exists (or a new handler has been registered for the current namespace), then it is invoked with arguments consisting of the fully-substituted name and arguments for the original non-existent command. The &lt;b&gt;unknown&lt;/b&gt; command typically does things like searching through library directories for a command procedure with the name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec97339a9ade4913adbb0b47da8eeaa624908d3e" translate="yes" xml:space="preserve">
          <source>If the Up or Down key is pressed, the location cursor (active element) moves up or down one element. If the selection mode is &lt;b&gt;browse&lt;/b&gt; or &lt;b&gt;extended&lt;/b&gt; then the new active element is also selected and all other elements are deselected. In &lt;b&gt;extended&lt;/b&gt; mode the new active element becomes the selection anchor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea88f845f601f4865a0cf5fb9247a93ebddee675" translate="yes" xml:space="preserve">
          <source>If the access command for an object resides in another namespace, then its qualified name can be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17407700fa1f4af33621e3240691624e5161f2b9" translate="yes" xml:space="preserve">
          <source>If the access path argument is not given or is the empty list, the default behavior is to let the slave access the same packages as the master has access to (Or to be more precise: only packages written in Tcl (which by definition cannot be dangerous as they run in the slave interpreter) and C extensions that provides a _SafeInit entry point). For that purpose, the master's &lt;b&gt;&lt;a href=&quot;tclvars.htm&quot;&gt;auto_path&lt;/a&gt;&lt;/b&gt; will be used to construct the slave access path. In order that the slave successfully loads the Tcl library files (which includes the auto-loading mechanism itself) the &lt;b&gt;&lt;a href=&quot;tclvars.htm&quot;&gt;tcl_library&lt;/a&gt;&lt;/b&gt; will be added or moved to the first position if necessary, in the slave access path, so the slave &lt;b&gt;&lt;a href=&quot;tclvars.htm&quot;&gt;tcl_library&lt;/a&gt;&lt;/b&gt; will be the same as the master's (its real path will still be invisible to the slave though). In order that auto-loading works the same for the slave and the master in this by default case, the first-level sub directories of each directory in the master &lt;b&gt;&lt;a href=&quot;tclvars.htm&quot;&gt;auto_path&lt;/a&gt;&lt;/b&gt; will also be added (if not already included) to the slave access path. You can always specify a more restrictive path for which sub directories will never be searched by explicitly specifying your directory list with the &lt;b&gt;-accessPath&lt;/b&gt; flag instead of relying on this default mechanism.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7fe95d59e4e6575988fe8d48f493c638bafefa0" translate="yes" xml:space="preserve">
          <source>If the application currently has the input focus on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a5a29db60887c14d2e45ccf70895d4b29530577" translate="yes" xml:space="preserve">
          <source>If the body of any method or proc starts with &quot;&lt;b&gt;@&lt;/b&gt;&quot;, it is treated as the symbolic name for a C procedure. Otherwise, it is treated as a Tcl code script. See below for details on registering and using C procedures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474ffa152d6923f60221aa92cdc4b633297d8145" translate="yes" xml:space="preserve">
          <source>If the button's state is &lt;b&gt;disabled&lt;/b&gt; then none of the above actions occur: the button is completely non-responsive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96bb941d494b51f8775bc81f2b3fc2fa9d0fa2e0" translate="yes" xml:space="preserve">
          <source>If the channel is blocking and the channel is ceasing to be writable, the command does not return until all output is flushed. If the channel is non-blocking and there is unflushed output, the channel remains open and the command returns immediately; output will be flushed in the background and the channel will be closed when all the flushing is complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4671015a9b410b56bfbc6c4831412d5df0135253" translate="yes" xml:space="preserve">
          <source>If the channel is blocking, the command does not return until all output is flushed. If the channel is nonblocking and there is unflushed output, the channel remains open and the command returns immediately; output will be flushed in the background and the channel will be closed when all the flushing is complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ac3f7d6da09b7d60f74638c06f76b1dc02bdd27" translate="yes" xml:space="preserve">
          <source>If the channel is in blocking mode the command does not return until all the buffered output has been flushed to the channel. If the channel is in non-blocking mode, the command may return before all buffered output has been flushed; the remainder will be flushed in the background as fast as the underlying file or device is able to absorb it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb922edbaa230543e0b35308eca8614ee45a901e" translate="yes" xml:space="preserve">
          <source>If the channel is in blocking mode the command does not return until all the buffered output has been flushed to the channel. If the channel is in nonblocking mode, the command may return before all buffered output has been flushed; the remainder will be flushed in the background as fast as the underlying file or device is able to absorb it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad1d3c0df148fe0cd7c4e7b5974e5b3b1eb34bef" translate="yes" xml:space="preserve">
          <source>If the channel is shared between interpreters, then &lt;b&gt;chan close&lt;/b&gt; makes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="320b8e2d48e70d129348d30434fad7e2a51c8bac" translate="yes" xml:space="preserve">
          <source>If the channel is shared between interpreters, then &lt;b&gt;close&lt;/b&gt; makes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b68c72edbb81b981c1ecbe51e7bc20b586b8aa9" translate="yes" xml:space="preserve">
          <source>If the checkbutton's state is &lt;b&gt;disabled&lt;/b&gt; then none of the above actions occur: the checkbutton is completely non-responsive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fec2f34b955650cec0abbe20f97cbc575d5bb4e1" translate="yes" xml:space="preserve">
          <source>If the color is specified, the data will not contain any transparency information. In all transparent pixels the color will be replaced by the specified color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db670265eb1354121a01732755364c990691acf5" translate="yes" xml:space="preserve">
          <source>If the command (or one of the commands) executed in the command pipeline returns an error (according to the definition in &lt;b&gt;&lt;a href=&quot;exec.htm&quot;&gt;exec&lt;/a&gt;&lt;/b&gt;), a Tcl error is generated when &lt;b&gt;&lt;a href=&quot;close.htm&quot;&gt;close&lt;/a&gt;&lt;/b&gt; is called on the channel unless the pipeline is in non-blocking mode then no exit status is returned (a silent &lt;b&gt;&lt;a href=&quot;close.htm&quot;&gt;close&lt;/a&gt;&lt;/b&gt; with -blocking 0).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8efd7510e025272f7707ece41749914465dc395d" translate="yes" xml:space="preserve">
          <source>If the configuration of a window has been retrieved with &lt;b&gt;place info&lt;/b&gt;, that configuration can be restored later by first using &lt;b&gt;place forget&lt;/b&gt; to erase any existing information for the window and then invoking &lt;b&gt;place configure&lt;/b&gt; with the saved information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58f08a7b95c0605b97c13c0b1347656ecb1b65cf" translate="yes" xml:space="preserve">
          <source>If the containing toplevel's position was specified relative to the right or bottom of the screen (e.g., &amp;ldquo;&lt;b&gt;wm geometry ... &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9370691a859ff4918c2ed32ac83c6ff8a7f15785" translate="yes" xml:space="preserve">
          <source>If the element's allocated parcel is larger than the image, the image will be placed in the parcel based on the &lt;b&gt;-sticky&lt;/b&gt; option. If the image needs to stretch horizontally (i.e., &lt;b&gt;-sticky ew&lt;/b&gt;) or vertically (&lt;b&gt;-sticky ns&lt;/b&gt;), subregions of the image are replicated to fill the parcel based on the &lt;b&gt;-border&lt;/b&gt; option. The &lt;b&gt;-border&lt;/b&gt; divides the image into 9 regions: four fixed corners, top and left edges (which may be tiled horizontally), left and right edges (which may be tiled vertically), and the central area (which may be tiled in both directions).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2508e5e95c6bb70544e3b4caff39686882d46217" translate="yes" xml:space="preserve">
          <source>If the end of the input string is reached before any conversions have been performed and no variables are given, an empty string is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0eb49408bfb81b9cc0aa87d9dafb718831e3861" translate="yes" xml:space="preserve">
          <source>If the entry is disabled using the &lt;b&gt;-state&lt;/b&gt; option, then the entry's view can still be adjusted and text in the entry can still be selected, but no insertion cursor will be displayed and no text modifications will take place except if the entry is linked to a variable using the &lt;b&gt;-textvariable&lt;/b&gt; option, in which case any changes to the variable are reflected by the entry whatever the value of its &lt;b&gt;-state&lt;/b&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abbdacd5dbae1211c1decf984dc6ce1af4942122" translate="yes" xml:space="preserve">
          <source>If the environment variable &lt;b&gt;::env(TCLTEST_OPTIONS)&lt;/b&gt; exists when the &lt;b&gt;tcltest&lt;/b&gt; package is loaded (by &lt;b&gt;&lt;a href=&quot;package.htm&quot;&gt;package require&lt;/a&gt;&lt;/b&gt;&lt;b&gt;tcltest&lt;/b&gt;) then its value is taken as a list of arguments to pass to &lt;b&gt;configure&lt;/b&gt;. This allows the default values of the configuration options to be set by the environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e07a3f7eba8202171d746a788dd3197b611e1d" translate="yes" xml:space="preserve">
          <source>If the evaluation of the body for any particular step generates a &lt;b&gt;&lt;a href=&quot;break.htm&quot;&gt;break&lt;/a&gt;&lt;/b&gt;, no further pairs from the dictionary will be iterated over and the &lt;b&gt;dict map&lt;/b&gt; command will terminate successfully immediately. If the evaluation of the body for a particular step generates a &lt;b&gt;&lt;a href=&quot;continue.htm&quot;&gt;continue&lt;/a&gt;&lt;/b&gt; result, the current iteration is aborted and the accumulator dictionary is not modified. The order of iteration is the natural order of the dictionary (typically the order in which the keys were added to the dictionary; the order is the same as that used in &lt;b&gt;dict for&lt;/b&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce53d2887198fdeae9cd35392d40c895b19083d" translate="yes" xml:space="preserve">
          <source>If the event type is &lt;b&gt;KeyPress&lt;/b&gt; or &lt;b&gt;KeyRelease&lt;/b&gt;, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c008e6c80554f9c6c61594c9283e2b6aba6a6de1" translate="yes" xml:space="preserve">
          <source>If the exponent is less than -4 or greater than or equal to the precision, then convert number as for &lt;b&gt;%e&lt;/b&gt; or &lt;b&gt;%E&lt;/b&gt;. Otherwise convert as for &lt;b&gt;%f&lt;/b&gt;. Trailing zeroes and a trailing decimal point are omitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f013a82539222ac8d4a6678ac647c49e9d385db2" translate="yes" xml:space="preserve">
          <source>If the file exists it is truncated to zero length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41056089c6be1f2d1a3b24622deee971d585bef8" translate="yes" xml:space="preserve">
          <source>If the file is a terminal device, this flag prevents the file from becoming the controlling terminal of the process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e465cfce1329891ce641912da499ed1ff0267fa" translate="yes" xml:space="preserve">
          <source>If the first argument to &lt;b&gt;grid&lt;/b&gt; is suitable as the first slave argument to &lt;b&gt;grid configure&lt;/b&gt;, either a window name (any value starting with &lt;b&gt;.&lt;/b&gt;) or one of the characters &lt;b&gt;x&lt;/b&gt; or &lt;b&gt;^&lt;/b&gt; (see the &lt;b&gt;&lt;a href=&quot;#M28&quot;&gt;RELATIVE PLACEMENT&lt;/a&gt;&lt;/b&gt; section below), then the command is processed in the same way as &lt;b&gt;grid configure&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="083576b9af228006795b31d0449ea1a45629d9ce" translate="yes" xml:space="preserve">
          <source>If the first argument to &lt;b&gt;pack&lt;/b&gt; is a window name (any value starting with &amp;ldquo;.&amp;rdquo;), then the command is processed in the same way as &lt;b&gt;pack configure&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="258affaaf0d98b1f99b463b36955d26d5eb4c739" translate="yes" xml:space="preserve">
          <source>If the first character in a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e05ab591a12a5f727c8b4958c5e05ead84419017" translate="yes" xml:space="preserve">
          <source>If the first character of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a21b07747b492c92a851aca790e215d053998af5" translate="yes" xml:space="preserve">
          <source>If the first character of a word is an open brace (&amp;ldquo;{&amp;rdquo;) and rule [5] does not apply, then the word is terminated by the matching close brace (&amp;ldquo;}&amp;rdquo;). Braces nest within the word: for each additional open brace there must be an additional close brace (however, if an open brace or close brace within the word is quoted with a backslash then it is not counted in locating the matching close brace). No substitutions are performed on the characters between the braces except for backslash-newline substitutions described below, nor do semi-colons, newlines, close brackets, or white space receive any special interpretation. The word will consist of exactly the characters between the outer braces, not including the braces themselves.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bcec1f7b27ee994cc838ed8d1127f0a267b39db" translate="yes" xml:space="preserve">
          <source>If the first character of a word is double-quote (&amp;ldquo;&quot;&amp;rdquo;) then the word is terminated by the next double-quote character. If semi-colons, close brackets, or white space characters (including newlines) appear between the quotes then they are treated as ordinary characters and included in the word. Command substitution, variable substitution, and backslash substitution are performed on the characters between the quotes as described below. The double-quotes are not retained as part of the word.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42d9fc96937bfef323641795e620f9efc0d77c08" translate="yes" xml:space="preserve">
          <source>If the first element is &lt;b&gt;POSIX&lt;/b&gt;, then the error occurred during a POSIX kernel call. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0dac06626ca4c23572a9d4062e730ee220e8cfa" translate="yes" xml:space="preserve">
          <source>If the first non-elided character of a display line has a tag for which this option has been specified, and if the display line is not the first for its text line (i.e., the text line has wrapped), then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2d24b3c86272bce2c90542981d400eb59ccfe18" translate="yes" xml:space="preserve">
          <source>If the first non-elided character of a display line has a tag for which this option has been specified, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a292e9db4e74f703cbc6c5025af78c92be96145f" translate="yes" xml:space="preserve">
          <source>If the first non-elided character of a text line has a tag for which this option has been specified, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a73385f0cb27688caeb9e498d05ebfa76efc9d" translate="yes" xml:space="preserve">
          <source>If the image is not as tall as the line in which it is displayed, this option determines where the image is displayed in the line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f880e6fa013cb638e82fbf1f6bafefb87800107" translate="yes" xml:space="preserve">
          <source>If the index could match more than one of the above forms, then the form earlier in the above list takes precedence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e66f8d3db76760267719aaf24bdbd33d722f1bf3" translate="yes" xml:space="preserve">
          <source>If the index does not satisfy one of the above forms then this form is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ebdab566f088833b38b3b3bae42241e6d88abe6" translate="yes" xml:space="preserve">
          <source>If the initial arguments of the command begin with &amp;ldquo;-&amp;rdquo; they are treated as options. The following options are currently defined:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d405f6bc18a2107651de5a747350ac8f742c755b" translate="yes" xml:space="preserve">
          <source>If the initial arguments to &lt;b&gt;exec&lt;/b&gt; start with &lt;b&gt;-&lt;/b&gt; then they are treated as command-line switches and are not part of the pipeline specification. The following switches are currently supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c390caf3f638c4276ab4c41de4df61c51d0edf56" translate="yes" xml:space="preserve">
          <source>If the initial arguments to &lt;b&gt;glob&lt;/b&gt; start with &lt;b&gt;-&lt;/b&gt; then they are treated as switches. The following switches are currently supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d05f576fcb62b1a1f7ae013a8166c9417006b46a" translate="yes" xml:space="preserve">
          <source>If the initial arguments to &lt;b&gt;regexp&lt;/b&gt; start with &lt;b&gt;-&lt;/b&gt; then they are treated as switches. The following switches are currently supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10eb92719f46171f42d57dc091efdb193d8a20f3" translate="yes" xml:space="preserve">
          <source>If the initial arguments to &lt;b&gt;regsub&lt;/b&gt; start with &lt;b&gt;-&lt;/b&gt; then they are treated as switches. The following switches are currently supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cab1d161a94059e5b0c7d81cb5b696f43072812" translate="yes" xml:space="preserve">
          <source>If the initial arguments to &lt;b&gt;switch&lt;/b&gt; start with &lt;b&gt;-&lt;/b&gt; then they are treated as options unless there are exactly two arguments to &lt;b&gt;switch&lt;/b&gt; (in which case the first must the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b564d6dfbf996f6d02920f8f78597aafd3d0ff3" translate="yes" xml:space="preserve">
          <source>If the initial arguments to &lt;b&gt;unload&lt;/b&gt; start with &lt;b&gt;-&lt;/b&gt; then they are treated as switches. The following switches are currently supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08dde14051c53c0f7f0576379ca29ac2a6785b3d" translate="yes" xml:space="preserve">
          <source>If the last</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b706597cd9185d9079517ed116714c362cc70c5" translate="yes" xml:space="preserve">
          <source>If the last character of the result or error message is a newline then that character is normally deleted from the result or error message. This is consistent with other Tcl return values, which do not normally end with newlines. However, if &lt;b&gt;-keepnewline&lt;/b&gt; is specified then the trailing newline is retained.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa647a892a96dcf0633d8f35ea23de0d69606ace" translate="yes" xml:space="preserve">
          <source>If the library procedure &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TclLib/Init.htm&quot;&gt;Tcl_Init&lt;/a&gt;&lt;/b&gt; is invoked from an application's &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TclLib/AppInit.htm&quot;&gt;Tcl_AppInit&lt;/a&gt;&lt;/b&gt; procedure, this happens automatically. The code in &lt;b&gt;init.tcl&lt;/b&gt; will define the &lt;b&gt;&lt;a href=&quot;unknown.htm&quot;&gt;unknown&lt;/a&gt;&lt;/b&gt; procedure and arrange for the other procedures to be loaded on-demand using the auto-load mechanism defined below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e5e2df8bde2eebc763d2695ab776d8cd2accc38" translate="yes" xml:space="preserve">
          <source>If the list of tab stops does not have enough elements to cover all of the tabs in a text line, then Tk extrapolates new tab stops using the spacing and alignment from the last tab stop in the list. Tab distances must be strictly positive, and must always increase from one tab stop to the next (if not, an error is thrown). The value of the &lt;b&gt;-tabs&lt;/b&gt; option may be overridden by &lt;b&gt;-tabs&lt;/b&gt; options in tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf22ca60e6bf950e1e2d351fc6bc2cc89ec9db5a" translate="yes" xml:space="preserve">
          <source>If the literal string &lt;b&gt;reset&lt;/b&gt; is given as an additional argument, the timer is reset and an empty string is returned. Resetting the inactivity time is forbidden in safe interpreters and will throw an error if tried.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3f33e8c31cfc64113f9026eb4da5bd9c723ac9c" translate="yes" xml:space="preserve">
          <source>If the locale is set, the preference list of locales is evaluated. Locales in this list are loaded now, if not jet loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="168d381404b6662852394accce73be588a195f63" translate="yes" xml:space="preserve">
          <source>If the master for a slave is not its parent then you must make sure that the slave is higher in the stacking order than the master. Otherwise the master will obscure the slave and it will appear as if the slave has not been managed correctly. The easiest way to make sure the slave is higher than the master is to create the master window first: the most recently created window will be highest in the stacking order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20f23fc9a35fbbd7d4039e2fd8363b0c45f202db" translate="yes" xml:space="preserve">
          <source>If the master for a slave is not its parent then you must make sure that the slave is higher in the stacking order than the master. Otherwise the master will obscure the slave and it will appear as if the slave has not been packed correctly. The easiest way to make sure the slave is higher than the master is to create the master window first: the most recently created window will be highest in the stacking order. Or, you can use the &lt;b&gt;&lt;a href=&quot;raise.htm&quot;&gt;raise&lt;/a&gt;&lt;/b&gt; and &lt;b&gt;&lt;a href=&quot;lower.htm&quot;&gt;lower&lt;/a&gt;&lt;/b&gt; commands to change the stacking order of either the master or the slave.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08be242235fa87818294217ff9bd2d52d44a6d6c" translate="yes" xml:space="preserve">
          <source>If the matching sequences contain more than one event, then tests (c)-(e) are applied in order from the most recent event to the least recent event in the sequences. If these tests fail to determine a winner, then the most recently registered sequence is the winner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23ebb74a33520d4b0f66daed96a1a888be12b462" translate="yes" xml:space="preserve">
          <source>If the menubutton's state is &lt;b&gt;disabled&lt;/b&gt; then none of the above actions occur: the menubutton is completely non-responsive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e90719a022237427ef6be470239b5892b9b1ba90" translate="yes" xml:space="preserve">
          <source>If the mouse is dragged out of the entry on the left or right sides while button 1 is pressed, the entry will automatically scroll to make more text visible (if there is more text off-screen on the side where the mouse left the window).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d1679df13a62a0ecc1963dd123ba78c85995ced" translate="yes" xml:space="preserve">
          <source>If the mouse is dragged out of the spinbox on the left or right sides while button 1 is pressed, the spinbox will automatically scroll to make more text visible (if there is more text off-screen on the side where the mouse left the window).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cef896139d5c7566242d92404e5ac1395a5fa90" translate="yes" xml:space="preserve">
          <source>If the mouse is dragged out of the widget while button 1 is pressed, the entry will automatically scroll to make more text visible (if there is more text off-screen on the side where the mouse left the window).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eedaaab825cfc5aa7eb4fa7b9266517c96bc08a4" translate="yes" xml:space="preserve">
          <source>If the mouse leaves the listbox window with button 1 down, the window scrolls away from the mouse, making information visible that used to be off-screen on the side of the mouse. The scrolling continues until the mouse re-enters the window, the button is released, or the end of the listbox is reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab944c6fc69bc662ccbc7772bdc5a973d14b986e" translate="yes" xml:space="preserve">
          <source>If the mouse pointer is on the same screen as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46f4814e69db2040b6241ac684e4715ee568dc5e" translate="yes" xml:space="preserve">
          <source>If the optional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef5f6dd9bd02eb8a5529f71249edf38afcc5919c" translate="yes" xml:space="preserve">
          <source>If the optional &quot;&lt;b&gt;-class&lt;/b&gt;&quot; parameter is specified, then the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0212ea8504c168a683b266106e9101afbe95640c" translate="yes" xml:space="preserve">
          <source>If the optional &lt;b&gt;script&lt;/b&gt; argument contains the &lt;b&gt;thread::wait&lt;/b&gt; command the thread will enter into the event loop . If such command is not found in the &lt;b&gt;script&lt;/b&gt; the thread will run the &lt;b&gt;script&lt;/b&gt; to the end and exit . In that case, the handle may be safely ignored since it refers to a thread which does not exists any more at the time when the command returns .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c33bfcc5ba362150d587852c72b356382f3c394" translate="yes" xml:space="preserve">
          <source>If the overall pattern is preceded by an asterisk, then the overall pattern applies anywhere it can throughout the whole widget hierarchy. Otherwise the first word of the pattern is matched against the name and class of the &amp;ldquo;&lt;b&gt;.&lt;/b&gt;&amp;rdquo; &lt;b&gt;&lt;a href=&quot;toplevel.htm&quot;&gt;toplevel&lt;/a&gt;&lt;/b&gt;, which are usually set by options to &lt;b&gt;&lt;a href=&quot;../usercmd/wish.htm&quot;&gt;wish&lt;/a&gt;&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e18dc5b66734578f9f88c9810c4ff487e67e65ea" translate="yes" xml:space="preserve">
          <source>If the radiobutton's state is &lt;b&gt;disabled&lt;/b&gt; then none of the above actions occur: the radiobutton is completely non-responsive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32b44434973ceb32f6886cbfda92842f16f19bb0" translate="yes" xml:space="preserve">
          <source>If the requested height of the embedded window is less than the height of the line in which it is displayed, this option can be used to specify whether the window should be stretched vertically to fill its line. If the &lt;b&gt;-pady&lt;/b&gt; option has been specified as well, then the requested padding will be retained even if the window is stretched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a6c17f0280b3238e02a8e83861888322238726b" translate="yes" xml:space="preserve">
          <source>If the resulting date is impossible because the month has too few days (for example, when adding 1 month to 31 January), the last day of the month is substituted. Thus, adding 1 month to 31 January will result in 28 February in a common year or 29 February in a leap year.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06e721d1181c216a2ab2842c2e9f28cdec966f16" translate="yes" xml:space="preserve">
          <source>If the same file is &lt;b&gt;&lt;a href=&quot;load.htm&quot;&gt;load&lt;/a&gt;&lt;/b&gt;ed by different</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4869ce30718a0096adabe2eabbbb58a8599f517" translate="yes" xml:space="preserve">
          <source>If the same file is &lt;b&gt;load&lt;/b&gt;ed by different</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cfc9b80ee5b3752cb8c848c5eb470fdc99fab59" translate="yes" xml:space="preserve">
          <source>If the same value is specified separately with two different options, such as &lt;b&gt;-x&lt;/b&gt; and &lt;b&gt;-relx&lt;/b&gt;, then the most recent option is used and the older one is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79bc70dea0b1b72ac34544e760cf2167e43a3b69" translate="yes" xml:space="preserve">
          <source>If the scale is disabled using the &lt;b&gt;-state&lt;/b&gt; option then none of the above bindings have any effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e04f1cfe01f39b8327ab8438c6209f28245cfe6" translate="yes" xml:space="preserve">
          <source>If the selection is claimed away by another application or by another window within this application, then the &lt;b&gt;sel&lt;/b&gt; tag will be removed from all characters in the text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda5653791951c6cfd89de9222e3351bbbcedc13" translate="yes" xml:space="preserve">
          <source>If the selection mode is &lt;b&gt;multiple&lt;/b&gt; or &lt;b&gt;extended&lt;/b&gt;, any number of elements may be selected at once, including discontiguous ranges. In &lt;b&gt;multiple&lt;/b&gt; mode, clicking button 1 on an element toggles its selection state without affecting any other elements. In &lt;b&gt;extended&lt;/b&gt; mode, pressing button 1 on an element selects it, deselects everything else, and sets the anchor to the element under the mouse; dragging the mouse with button 1 down extends the selection to include all the elements between the anchor and the element under the mouse, inclusive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9fb12d58da7f837150463dd2d03501eaaa4620d" translate="yes" xml:space="preserve">
          <source>If the selection mode is &lt;b&gt;single&lt;/b&gt; or &lt;b&gt;browse&lt;/b&gt;, at most one element can be selected in the listbox at once. In both modes, clicking button 1 on an element selects it and deselects any other selected item. In &lt;b&gt;browse&lt;/b&gt; mode it is also possible to drag the selection with button 1. On button 1, the listbox will also take focus if it has a &lt;b&gt;normal&lt;/b&gt; state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="812f7e6e149af0865f82da3bfa63dd94ead89d64" translate="yes" xml:space="preserve">
          <source>If the server closes the socket without replying, then no error is raised, but the status of the transaction will be &lt;b&gt;&lt;a href=&quot;eof.htm&quot;&gt;eof&lt;/a&gt;&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8108e4b9cf7710bf9d1a0e206d79de4957ccb1df" translate="yes" xml:space="preserve">
          <source>If the spinbox is disabled using the &lt;b&gt;-state&lt;/b&gt; option, then the spinbox's view can still be adjusted and text in the spinbox can still be selected, but no insertion cursor will be displayed and no text modifications will take place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="695d54755eb20ede0eceae58b290bee56bd6a7a7" translate="yes" xml:space="preserve">
          <source>If the string contains a &lt;b&gt;%J&lt;/b&gt; format group, representing the Julian Day Number, that group is used to determine the date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b13176ec651a4a461eaf363e494a7034dfa85a1" translate="yes" xml:space="preserve">
          <source>If the string contains a &lt;b&gt;%s&lt;/b&gt; format group, representing seconds from the epoch, that group determines the time of day.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="080c9b76ad801cf163476a210845368d1f53728a" translate="yes" xml:space="preserve">
          <source>If the string contains a &lt;b&gt;%s&lt;/b&gt; format group, representing seconds from the epoch, that group is used to determine the date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8553af01bb593e876a93a4a128a1992d8d985cd2" translate="yes" xml:space="preserve">
          <source>If the string contains a complete set of format groups specifying century, year, month, and day of month; century, year, and day of year; or ISO8601 fiscal year, week of year, and day of week; those groups are combined and used to determine the date. If more than one complete set is present, the one at the rightmost position in the string is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48b4992137eb078f6e7e9913f12b8ee32dcf6965" translate="yes" xml:space="preserve">
          <source>If the string contains either an hour on the 24-hour clock or an hour on the 12-hour clock plus an AM/PM indicator, that hour determines the hour of the day. If the string further contains a group specifying the minute of the hour, that group combines with the hour. If the string further contains a group specifying the second of the minute, that group combines with the hour and minute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="102c23a7b33c5c5edc1de69daa7a041727080e1a" translate="yes" xml:space="preserve">
          <source>If the string contains neither a &lt;b&gt;%s&lt;/b&gt; format group nor a group specifying the hour of the day, then midnight (&lt;b&gt;00:00&lt;/b&gt;, the start of the given date) is used. The time zone is determined by either the &lt;b&gt;-timezone&lt;/b&gt; or &lt;b&gt;-gmt&lt;/b&gt; options, or by using the current time zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ae600c150c920be5cb9811c69c9a9660feeb0d9" translate="yes" xml:space="preserve">
          <source>If the string contains none of the above sets, but has a day of the month or day of the week, the day of the month or day of the week are used to determine the date by interpreting the base time in the given time zone and returning the given day of the current week or month. (The week runs from Monday to Sunday, ISO8601-fashion.) If both day of month and day of week are present, the day of the month takes priority.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c35bb386ed8f449a4aeed5afdf97859a5437c544" translate="yes" xml:space="preserve">
          <source>If the string entirely lacks any specification for the year (or contains the year only on the locale's alternative calendar) and contains a set of format groups specifying month and day of month, day of year, or week of year and day of week, those groups are combined and used to determine the date. If more than one complete set is present, the one at the rightmost position in the string is used. The year is determined by interpreting the base time in the given time zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a4467da5b765d1cdb59b582bebc0df539f8d10" translate="yes" xml:space="preserve">
          <source>If the string lacks a century but contains a set of format groups specifying year of century, month and day of month; year of century and day of year; or two-digit ISO8601 fiscal year, week of year, and day of week; those groups are combined and used to determine the date. If more than one complete set is present, the one at the rightmost position in the string is used. The year is presumed to lie in the range 1938 to 2037 inclusive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2387a4b1d2f03879456979f96dcd1e5e872ca428" translate="yes" xml:space="preserve">
          <source>If the subcommand throws an error the command which caused its invocation (usually &lt;b&gt;&lt;a href=&quot;chan.htm&quot;&gt;chan close&lt;/a&gt;&lt;/b&gt;) will appear to have thrown this error. Any exception beyond &lt;b&gt;&lt;a href=&quot;error.htm&quot;&gt;error&lt;/a&gt;&lt;/b&gt; (e.g., &lt;b&gt;&lt;a href=&quot;break.htm&quot;&gt;break&lt;/a&gt;&lt;/b&gt;, etc.) is treated as (and converted to) an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84215ddcc82e65c251ef6e6a358f41fe42ff7f7e" translate="yes" xml:space="preserve">
          <source>If the subcommand throws an error the command which caused its invocation (usually &lt;b&gt;&lt;a href=&quot;fconfigure.htm&quot;&gt;fconfigure&lt;/a&gt;&lt;/b&gt; or &lt;b&gt;&lt;a href=&quot;chan.htm&quot;&gt;chan configure&lt;/a&gt;&lt;/b&gt;) will appear to have thrown this error. Any exception beyond &lt;b&gt;&lt;a href=&quot;error.htm&quot;&gt;error&lt;/a&gt;&lt;/b&gt; (e.g., &lt;b&gt;&lt;a href=&quot;break.htm&quot;&gt;break&lt;/a&gt;&lt;/b&gt;, etc.) is treated as and converted to an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76216f0f32cfdb652a2ce70ada00b0e6e38cc047" translate="yes" xml:space="preserve">
          <source>If the subcommand throws an error the command which performed the (re)configuration or query (usually &lt;b&gt;&lt;a href=&quot;fconfigure.htm&quot;&gt;fconfigure&lt;/a&gt;&lt;/b&gt; or &lt;b&gt;&lt;a href=&quot;chan.htm&quot;&gt;chan configure&lt;/a&gt;&lt;/b&gt;) will appear to have thrown this error. Any exception beyond &lt;b&gt;&lt;a href=&quot;error.htm&quot;&gt;error&lt;/a&gt;&lt;/b&gt; (e.g., &lt;b&gt;&lt;a href=&quot;break.htm&quot;&gt;break&lt;/a&gt;&lt;/b&gt;, etc.) is treated as and converted to an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feed3df7d150eb8adb29107c1a2b9ceaf611a32d" translate="yes" xml:space="preserve">
          <source>If the subcommand throws an error, the command which performed the (re)configuration or query (usually &lt;b&gt;&lt;a href=&quot;fconfigure.htm&quot;&gt;fconfigure&lt;/a&gt;&lt;/b&gt; or &lt;b&gt;&lt;a href=&quot;chan.htm&quot;&gt;chan configure&lt;/a&gt;&lt;/b&gt;) will appear to have thrown this error. Any exception beyond</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e257776263a1960e937a6f645e965d297db35605" translate="yes" xml:space="preserve">
          <source>If the subcommand throws any other error the command which caused its invocation (usually &lt;b&gt;&lt;a href=&quot;puts.htm&quot;&gt;puts&lt;/a&gt;&lt;/b&gt;) will appear to have thrown this error. Any exception beyond &lt;b&gt;&lt;a href=&quot;error.htm&quot;&gt;error&lt;/a&gt;&lt;/b&gt; (e.g., &lt;b&gt;&lt;a href=&quot;break.htm&quot;&gt;break&lt;/a&gt;&lt;/b&gt;, etc.) is treated as and converted to an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f585f431f2365b8fe08afc80eb587cab300859d" translate="yes" xml:space="preserve">
          <source>If the subcommand throws any other error, the command which caused its invocation (usually &lt;b&gt;&lt;a href=&quot;gets.htm&quot;&gt;gets&lt;/a&gt;&lt;/b&gt;, or &lt;b&gt;&lt;a href=&quot;read.htm&quot;&gt;read&lt;/a&gt;&lt;/b&gt;) will appear to have thrown this error. Any exception beyond &lt;b&gt;&lt;a href=&quot;error.htm&quot;&gt;error&lt;/a&gt;&lt;/b&gt;, (e.g., &lt;b&gt;&lt;a href=&quot;break.htm&quot;&gt;break&lt;/a&gt;&lt;/b&gt;, etc.) is treated as and converted to an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b9b83eac1b6c530c80830f33835449311ad8f44" translate="yes" xml:space="preserve">
          <source>If the tag is the name of a class of widgets, such as &lt;b&gt;Button&lt;/b&gt;, the binding applies to all widgets in that class;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b841f29e0498de753b71b9aee4ee2b1e430d1eb2" translate="yes" xml:space="preserve">
          <source>If the tag is the name of a toplevel window the binding applies to the toplevel window and all its internal windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fc32894acac6cdb5d150771334c8f9d92762c04" translate="yes" xml:space="preserve">
          <source>If the target interpreter is a safe interpreter, then the name of the initialization procedure will be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7c3b3f260c675731e361e599f06b821d1191221" translate="yes" xml:space="preserve">
          <source>If the threadpool</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8aaf13eae30f8c2182c62ceed0d0a915fdf8db7" translate="yes" xml:space="preserve">
          <source>If the time zone begins with a colon, it is one of a standardized list of names like &lt;b&gt;:America/New_York&lt;/b&gt; that give the rules for various locales. A complete list of the location names is too lengthy to be listed here. On most Tcl installations, the definitions of the locations are to be found in named files in the directory &amp;ldquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85a7b6362c4a4034fb394a1c369d3ae46e40bffb" translate="yes" xml:space="preserve">
          <source>If the user selects a color, &lt;b&gt;tk_chooseColor&lt;/b&gt; will return the name of the color in a form acceptable to &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TkLib/GetColor.htm&quot;&gt;Tk_GetColor&lt;/a&gt;&lt;/b&gt;. If the user cancels the operation, both commands will return the empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6ef8c9714e345ff9d40f7eb7c421f04285e7598" translate="yes" xml:space="preserve">
          <source>If the user selects a file, both &lt;b&gt;tk_getOpenFile&lt;/b&gt; and &lt;b&gt;tk_getSaveFile&lt;/b&gt; return the full pathname of this file. If the user cancels the operation, both commands return the empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3362198c166ab21072789413cb29a09c42cf819" translate="yes" xml:space="preserve">
          <source>If the user types Control-y, the &lt;b&gt;&amp;lt;&amp;lt;Paste&amp;gt;&amp;gt;&lt;/b&gt; binding will be invoked, but if the user presses button 2 then one of either the &lt;b&gt;&amp;lt;&amp;lt;Paste&amp;gt;&amp;gt;&lt;/b&gt; or the &lt;b&gt;&amp;lt;&amp;lt;Scroll&amp;gt;&amp;gt;&lt;/b&gt; bindings will be invoked, but exactly which one gets invoked is undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9046ce0188edfd9bc616892bcc8c4a2764743128" translate="yes" xml:space="preserve">
          <source>If the user wishes to make a link of a specific type only, (and signal an error if for some reason that is not possible), then the optional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f36422b932ac24da359bf78c4be8a34c99ae3a" translate="yes" xml:space="preserve">
          <source>If the widget is disabled using the &lt;b&gt;-state&lt;/b&gt; option, then its view can still be adjusted and text can still be selected, but no insertion cursor will be displayed and no text modifications will take place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="613ffcc4966c515845b99f9c2229e1b7380442ef" translate="yes" xml:space="preserve">
          <source>If the window is not as tall as the line in which it is displayed, this option determines where the window is displayed in the line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ced7b02ca6f261a59a720695412c992697d6832" translate="yes" xml:space="preserve">
          <source>If there are any arguments following</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dd2be6725de84e9bcc8dba81a55ecc68ccfed2c" translate="yes" xml:space="preserve">
          <source>If there are more</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dca4f5cd94d7c0ba9dc4808557ad3029140195d" translate="yes" xml:space="preserve">
          <source>If there are multiple lines of text, specifies how the lines are laid out relative to one another. One of &lt;b&gt;left&lt;/b&gt;, &lt;b&gt;center&lt;/b&gt;, or &lt;b&gt;right&lt;/b&gt;. See also &lt;b&gt;-anchor&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3b6733b6d2b38d23cd5d4556f8ab66ce2b799a8" translate="yes" xml:space="preserve">
          <source>If there are multiple traces on a variable they are invoked in order of creation, most-recent first. If one trace returns an error, then no further traces are invoked for the variable. If an array element has a trace set, and there is also a trace set on the array as a whole, the trace on the overall array is invoked before the one on the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38562df181e7cd161cf3f1d80e463afe954cc2c9" translate="yes" xml:space="preserve">
          <source>If there are no arguments, or the arguments do not specify a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d26c11a7f0d0331fe2d0fac01cc0b98029c64c64" translate="yes" xml:space="preserve">
          <source>If there are two (or more) virtual events that are both triggered by the same sequence, and both of those virtual events are bound to the same window tag, then only one of the virtual events will be triggered, and it will be picked at random:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecbf5a13fe8ad2b71e3c4f069c12859818026033" translate="yes" xml:space="preserve">
          <source>If there is a pointer grab in effect, &lt;b&gt;Enter&lt;/b&gt; and &lt;b&gt;Leave&lt;/b&gt; events are only delivered to the window owning the grab.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c2df09b7704d95e6e6a705b652f4b3f22be958" translate="yes" xml:space="preserve">
          <source>If there is a trace set on command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08021de3a75d829fccaa47d5c77ff019b3649c7a" translate="yes" xml:space="preserve">
          <source>If there is a trace set on variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="190ebf644d1788ddec108f7429d28c2e0c787f12" translate="yes" xml:space="preserve">
          <source>If this callback is changed, it is called with the preferences valid for the package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6eeb5e97762fa15a0d5d8af47c4e2801d9ec543" translate="yes" xml:space="preserve">
          <source>If this is an integer greater than or equal to zero, then it gives the index of the button that is to be the default button for the dialog (0 for the leftmost button, and so on). If less than zero or an empty string then there will not be any default button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e68b7e1bd1c8735b74aa9ce41cc5534f48e3b59" translate="yes" xml:space="preserve">
          <source>If this option has a non-empty value, then it specifies a Tcl command to invoke whenever the menu is torn off. The actual command will consist of the value of this option, followed by a space, followed by the name of the menu window, followed by a space, followed by the name of the name of the torn off menu window. For example, if the option's value is &amp;ldquo;&lt;b&gt;a b&lt;/b&gt;&amp;rdquo; and menu &lt;b&gt;.x.y&lt;/b&gt; is torn off to create a new menu &lt;b&gt;.x.tearoff1&lt;/b&gt;, then the command &amp;ldquo;&lt;b&gt;a b .x.y .x.tearoff1&lt;/b&gt;&amp;rdquo; will be invoked. This option is ignored under Aqua/Mac OS X, where menus cannot be torn off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1411310e113863f61d04985c32be93213585e020" translate="yes" xml:space="preserve">
          <source>If this option is given, the index result from this command (or every index result when &lt;b&gt;-all&lt;/b&gt; is also specified) will be a complete path (suitable for use with &lt;b&gt;&lt;a href=&quot;lindex.htm&quot;&gt;lindex&lt;/a&gt;&lt;/b&gt; or &lt;b&gt;&lt;a href=&quot;lset.htm&quot;&gt;lset&lt;/a&gt;&lt;/b&gt;) within the overall list to the term found. This option has no effect unless the &lt;b&gt;-index&lt;/b&gt; is also specified, and is just a convenience short-cut.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d80caeaff0098033a8c36e41457e531f2b746ad8" translate="yes" xml:space="preserve">
          <source>If this option is set to the empty string (the default), then no command will be executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b83d6458bf1632126a22727ded3d81bf13f71f41" translate="yes" xml:space="preserve">
          <source>If this option is specified then it provides a Tcl command to execute each time the menu is posted. The command is invoked by the &lt;b&gt;post&lt;/b&gt; widget command before posting the menu. Note that in Tk 8.0 on Macintosh and Windows, all post-commands in a system of menus are executed before any of those menus are posted. This is due to the limitations in the individual platforms' menu managers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f5c757d67c621fcfdbc409d384d9ebba6616091" translate="yes" xml:space="preserve">
          <source>If this option is specified, each of the elements of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7745b0581562778ba0c77dbea0a61eb6697c0642" translate="yes" xml:space="preserve">
          <source>If this option is specified, the list is treated as consisting of groups of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81fc8f73799a290bedb82401480d2d69174f17f4" translate="yes" xml:space="preserve">
          <source>If this option is specified, then only the last set of duplicate elements found in the list will be retained. Note that duplicates are determined relative to the comparison used in the sort. Thus if &lt;b&gt;-index 0&lt;/b&gt; is used, &lt;b&gt;{1 a}&lt;/b&gt; and &lt;b&gt;{1 b}&lt;/b&gt; would be considered duplicates and only the second element, &lt;b&gt;{1 b}&lt;/b&gt;, would be retained.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c894e5ce4756c13a762f7e7fad9dab3707b7c3b0" translate="yes" xml:space="preserve">
          <source>If this option is specified, then the true contents of the entry are not displayed in the window. Instead, each character in the entry's value will be displayed as the first character in the value of this option, such as &amp;ldquo;*&amp;rdquo; or a bullet. This is useful, for example, if the entry is to be used to enter a password. If characters in the entry are selected and copied elsewhere, the information copied will be what is displayed, not the true contents of the entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="256d28e002f5df3016b5685de14cb48e5f6196d0" translate="yes" xml:space="preserve">
          <source>If this option is specified, then the true contents of the entry are not displayed in the window. Instead, each character in the entry's value will be displayed as the first character in the value of this option, such as &amp;ldquo;*&amp;rdquo;. This is useful, for example, if the entry is to be used to enter a password. If characters in the entry are selected and copied elsewhere, the information copied will be what is displayed, not the true contents of the entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33446a0c8b454fab0ea34b93ad408a6d676ce0d5" translate="yes" xml:space="preserve">
          <source>If this option, the size of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8972c2b31356948d47a8542414ea3a26c371d7c0" translate="yes" xml:space="preserve">
          <source>If this options is specified, the data will not contain color information. All pixel data will be transformed into grayscale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d5897356ca5716f522c9cb5806e84d146405acd" translate="yes" xml:space="preserve">
          <source>If this variable exists, then the interpreter was compiled with and linked to a debug-enabled C run-time. This variable will only exist on Windows, so extension writers can specify which package to load depending on the C run-time library that is in use. This is not an indication that this core contains symbols.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace03038c72c9205d269f68fa30352ca97cfff5e" translate="yes" xml:space="preserve">
          <source>If this variable exists, then the interpreter was compiled with threads enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1eedb92ecc20bab13da635ee7985764d15f5b54" translate="yes" xml:space="preserve">
          <source>If true, attempt to keep the connection open for servicing multiple requests. Default is 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73159fb67e9dd89938c3c19856caa90e8abe3e04" translate="yes" xml:space="preserve">
          <source>If two characters in the list are separated by &amp;ldquo;&lt;b&gt;-&lt;/b&gt;&amp;rdquo;, this is shorthand for the full</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6c269ed629257561d3f93d4806417e72dc2173" translate="yes" xml:space="preserve">
          <source>If you are converting invocations involving shell globbing, you should remember that Tcl does not handle globbing or expand things into multiple arguments by default. Instead you should write things like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="221bd2f8d2d48ca806d93ee7eec515bde529d3bb" translate="yes" xml:space="preserve">
          <source>If you are indexing two binary files and one depends on the other, you should specify the one that has dependencies last. This way the one without dependencies will get loaded and indexed, and then the package it provides will be available when the second file is processed. You may also need to load the first package into the temporary interpreter used to create the index by using the &lt;b&gt;-load&lt;/b&gt; flag; it will not hurt to specify package patterns that are not yet loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d20b470290591cfdabaf106322befee06cabad92" translate="yes" xml:space="preserve">
          <source>If you are writing code that will be used by others as part of a package or other kind of library, consider avoiding &lt;b&gt;bgerror&lt;/b&gt;. The reason for this is that the application programmer may also want to define a &lt;b&gt;bgerror&lt;/b&gt;, or use other code that does and thus will have trouble integrating your code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da3427fb2a6a93738fe075513c9ef0eedb30842d" translate="yes" xml:space="preserve">
          <source>If you create a Tcl script in a file whose first line is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="619961ca17927b186b58abc86dd235141e8342ab" translate="yes" xml:space="preserve">
          <source>If you have a package that is split across scripts and a binary file, then you should avoid the &lt;b&gt;-load&lt;/b&gt; flag. The problem is that if you load a package before computing the index it masks any other files that provide part of the same package. If you must use &lt;b&gt;-load&lt;/b&gt;, then you must specify the scripts first; otherwise the package loaded from the binary file may mask the package defined by the scripts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb274d13fbeb7e113579b70e356fcfd1fd5efb7c" translate="yes" xml:space="preserve">
          <source>If you have a set of nested &lt;b&gt;&lt;a href=&quot;frame.htm&quot;&gt;frame&lt;/a&gt;&lt;/b&gt; widgets and you want events sent to a &lt;b&gt;&lt;a href=&quot;button.htm&quot;&gt;button&lt;/a&gt;&lt;/b&gt; widget to also be delivered to all the widgets up to the current &lt;b&gt;&lt;a href=&quot;toplevel.htm&quot;&gt;toplevel&lt;/a&gt;&lt;/b&gt; (in contrast to Tk's default behavior, where events are not delivered to those intermediate windows) to make it easier to have accelerators that are only active for part of a window, you could use a helper procedure like this to help set things up:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68c2f3d2410f826d9ed84a82dba870e7846fa2d6" translate="yes" xml:space="preserve">
          <source>If you install the package anywhere else, then you must ensure that the directory containing the package is in the &lt;b&gt;&lt;a href=&quot;tclvars.htm&quot;&gt;auto_path&lt;/a&gt;&lt;/b&gt; global variable or an immediate subdirectory of one of the directories in &lt;b&gt;&lt;a href=&quot;tclvars.htm&quot;&gt;auto_path&lt;/a&gt;&lt;/b&gt;. &lt;b&gt;&lt;a href=&quot;tclvars.htm&quot;&gt;Auto_path&lt;/a&gt;&lt;/b&gt; contains a list of directories that are searched by both the auto-loader and the package loader; by default it includes &lt;b&gt;$tcl_pkgPath&lt;/b&gt;. The package loader also checks all of the subdirectories of the directories in &lt;b&gt;&lt;a href=&quot;tclvars.htm&quot;&gt;auto_path&lt;/a&gt;&lt;/b&gt;. You can add a directory to &lt;b&gt;&lt;a href=&quot;tclvars.htm&quot;&gt;auto_path&lt;/a&gt;&lt;/b&gt; explicitly in your application, or you can add the directory to your &lt;b&gt;TCLLIBPATH&lt;/b&gt; environment variable: if this environment variable is present, Tcl initializes &lt;b&gt;&lt;a href=&quot;tclvars.htm&quot;&gt;auto_path&lt;/a&gt;&lt;/b&gt; from it during application startup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b23383e5c8cad2ba16b8fe35f63010cc0ba1560" translate="yes" xml:space="preserve">
          <source>If you require unsigned values you can include the &amp;ldquo;u&amp;rdquo; flag character following the field type. For example, to read an unsigned short value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dec50fb47df6da4749fe27a4108fad943afd63d" translate="yes" xml:space="preserve">
          <source>If you run the above code, you get this output:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16d9ac57abb7883ad57c9d3aeaa33e7ccfcf25a1" translate="yes" xml:space="preserve">
          <source>If you try to import a command that already exists, you will get an error. This prevents you from importing the same command from two different packages. But from time to time (perhaps when debugging), you may want to get around this restriction. You may want to reissue the &lt;b&gt;namespace import&lt;/b&gt; command to pick up new commands that have appeared in a namespace. In that case, you can use the &lt;b&gt;-force&lt;/b&gt; option, and existing commands will be silently overwritten:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="636ec7c5ed63d3b7ec412badbe7efa81cea20369" translate="yes" xml:space="preserve">
          <source>If you use the &lt;b&gt;graph&lt;/b&gt; and &lt;b&gt;table&lt;/b&gt; commands frequently, you may want to access them without the &lt;b&gt;Blt::&lt;/b&gt; prefix. You can do this by importing the commands into the current namespace, like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd721d67b0ae53a1f06bf70897bca86685ee833e" translate="yes" xml:space="preserve">
          <source>If you want the class of the current object, you need to use this other construct:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="568a9904b21bf0873369522a209eda8612315014" translate="yes" xml:space="preserve">
          <source>If you want to access commands and variables from another namespace, you must use some extra syntax. Names must be qualified by the namespace that contains them. From the global namespace, we might access the &lt;b&gt;Counter&lt;/b&gt; procedures like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd172c14051e0e66a47fcd7693670d492537ffef" translate="yes" xml:space="preserve">
          <source>If-then-else, as in C. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a66a355ceffc5a1ab2ec3d83f0714dc847b3151a" translate="yes" xml:space="preserve">
          <source>Ignore case differences between the pattern and the text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d368f313d7b32879a27d08125a6e4f03c623b07" translate="yes" xml:space="preserve">
          <source>Image command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f796715fdee224687ab72bf5a172946fad1c86" translate="yes" xml:space="preserve">
          <source>Image formats</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19f9135499ef749d24093e36c3e0304918a4c4da" translate="yes" xml:space="preserve">
          <source>Image items</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98b6d12566b99798e601c0e73b97870cb493c6d5" translate="yes" xml:space="preserve">
          <source>Image stretching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9408dc3cc3ca10cafa914571d9381c745a1f1ef2" translate="yes" xml:space="preserve">
          <source>ImageName</source>
          <target state="translated">ImageName</target>
        </trans-unit>
        <trans-unit id="0bfd5750fc3809e378238cca8df5f8dd6c286f3d" translate="yes" xml:space="preserve">
          <source>Immediate benefit of such approach is the much smaller memory footprint of the application and much faster thread creation . By not actually loading all necessary procedures (and other resources) in every thread at the thread initialization time, but by deffering this to the time the resource is actually referenced, significant improvements in both memory consumption and thread initialization time can be achieved . Some tests have shown that memory footprint of an multithreading Tcl application went down more than three times and thread startup time was reduced for about 50 times . Note that your mileage may vary . Other benefits include much finer control about what (and when) gets replicated from the master to other Tcl thread/interpreters .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ef567ef1f123d82316a45119fde81c3ac2b8966" translate="yes" xml:space="preserve">
          <source>Immediately brings the line metrics up-to-date by forcing computation of any outdated line heights. The command returns immediately if there is no such outdated line heights, otherwise it returns only at the end of the computation. The command returns an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37f7c4bc22743d75bdff69b4b470f58709aa8d71" translate="yes" xml:space="preserve">
          <source>Implementation of output and error comparison in the test command depends on usage of &lt;b&gt;&lt;a href=&quot;puts.htm&quot;&gt;puts&lt;/a&gt;&lt;/b&gt; in your application code. Output is intercepted by redefining the global &lt;b&gt;&lt;a href=&quot;puts.htm&quot;&gt;puts&lt;/a&gt;&lt;/b&gt; command while the defined test script is being run. Errors thrown by C procedures or printed directly from C applications will not be caught by the &lt;b&gt;test&lt;/b&gt; command. Therefore, usage of the &lt;b&gt;-output&lt;/b&gt; and &lt;b&gt;-errorOutput&lt;/b&gt; options to &lt;b&gt;test&lt;/b&gt; is useful only for pure Tcl applications that use &lt;b&gt;&lt;a href=&quot;puts.htm&quot;&gt;puts&lt;/a&gt;&lt;/b&gt; to produce output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ab5ed3bb3e27748d586ad9b9b11e2ab9efaaf8" translate="yes" xml:space="preserve">
          <source>Importing</source>
          <target state="translated">Importing</target>
        </trans-unit>
        <trans-unit id="77d6ec31de5d1be416301f1e124b16f2de18388c" translate="yes" xml:space="preserve">
          <source>Importing commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcdc56c12c27614d7183bee57cfdc7810a825042" translate="yes" xml:space="preserve">
          <source>Imports commands into a namespace, or queries the set of imported commands in a namespace. When no arguments are present, &lt;b&gt;namespace import&lt;/b&gt; returns the list of commands in the current namespace that have been imported from other namespaces. The commands in the returned list are in the format of simple names, with no namespace qualifiers at all. This format is suitable for composition with &lt;b&gt;namespace forget&lt;/b&gt; (see &lt;b&gt;&lt;a href=&quot;#M43&quot;&gt;EXAMPLES&lt;/a&gt;&lt;/b&gt; below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21caa4ab5b9511a62ae9e849a15997939431701e" translate="yes" xml:space="preserve">
          <source>In &lt;b&gt;extended&lt;/b&gt; mode, Control-Shift-Home extends the selection to the first element in the listbox and Control-Shift-End extends the selection to the last element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a3814e86194f36666eb494ea2af0ea3cdf35da" translate="yes" xml:space="preserve">
          <source>In &lt;b&gt;extended&lt;/b&gt; mode, Control-Shift-space and Shift-Select extend the selection to the active element just as if button 1 had been pressed with the Shift key down.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="803107b568371c2fa61d4cc5aa1a1ae19d04e9a0" translate="yes" xml:space="preserve">
          <source>In &lt;b&gt;extended&lt;/b&gt; mode, Shift-Up and Shift-Down move the location cursor (active element) up or down one element and also extend the selection to that element in a fashion similar to dragging with mouse button 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83be284c02e997056094754e05b8fbca6d68fc9d" translate="yes" xml:space="preserve">
          <source>In &lt;b&gt;extended&lt;/b&gt; mode, pressing button 1 with the Control key down starts a toggle operation: the anchor is set to the element under the mouse, and its selection state is reversed. The selection state of other elements is not changed. If the mouse is dragged with button 1 down, then the selection state of all elements between the anchor and the element under the mouse is set to match that of the anchor element; the selection state of all other elements remains what it was before the toggle operation began.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a331b3b3876c029a98fd905f35bc767d27b4d6d3" translate="yes" xml:space="preserve">
          <source>In &lt;b&gt;extended&lt;/b&gt; mode, the Escape key cancels the most recent selection and restores all the elements in the selected range to their previous selection state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b623a7330d2dc005b81df1d28d1e659939786827" translate="yes" xml:space="preserve">
          <source>In &lt;b&gt;extended&lt;/b&gt; mode, the selected range can be adjusted by pressing button 1 with the Shift key down: this modifies the selection to consist of the elements between the anchor and the element under the mouse, inclusive. The un-anchored end of this new selection can also be dragged with the button down.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1120d6d7b5424c8b5ae8865d54fc73bb7ce34d3" translate="yes" xml:space="preserve">
          <source>In &lt;b&gt;multiple&lt;/b&gt; mode, Control-Shift-Home moves the location cursor to the first element in the listbox and Control-Shift-End moves the location cursor to the last element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f3bafc0087eef6b524185da077736dd16b82f45" translate="yes" xml:space="preserve">
          <source>In AREs, &lt;b&gt;\&lt;/b&gt; followed by an alphanumeric character is either an escape or an error, while in RREs, it was just another way of writing the alphanumeric. This should not be a problem because there was no reason to write such a sequence in RREs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="267af7639f9e76236b4d033fd5ad4eb168de11d9" translate="yes" xml:space="preserve">
          <source>In AREs, &lt;b&gt;\&lt;/b&gt; remains a special character within &amp;ldquo;&lt;b&gt;[ ]&lt;/b&gt;&amp;rdquo;, so a literal &lt;b&gt;\&lt;/b&gt; within &lt;b&gt;[ ]&lt;/b&gt; must be written &amp;ldquo;&lt;b&gt;\\&lt;/b&gt;&amp;rdquo;. &lt;b&gt;\\&lt;/b&gt; also gives a literal &lt;b&gt;\&lt;/b&gt; within &lt;b&gt;[ ]&lt;/b&gt; in RREs, but only truly paranoid programmers routinely doubled the backslash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa455a2c12f46cc3b8d250d1c31095cd61598375" translate="yes" xml:space="preserve">
          <source>In Tcl scripts the end of a line is always represented using a single newline character (\n). However, in actual files and devices the end of a line may be represented differently on different platforms, or even for different devices on the same platform. For example, under UNIX newlines are used in files, whereas carriage-return-linefeed sequences are normally used in network connections. On input (i.e., with &lt;b&gt;&lt;a href=&quot;gets.htm&quot;&gt;gets&lt;/a&gt;&lt;/b&gt; and &lt;b&gt;&lt;a href=&quot;read.htm&quot;&gt;read&lt;/a&gt;&lt;/b&gt;) the Tcl I/O system automatically translates the external end-of-line representation into newline characters. Upon output (i.e., with &lt;b&gt;&lt;a href=&quot;puts.htm&quot;&gt;puts&lt;/a&gt;&lt;/b&gt;), the I/O system translates newlines to the external end-of-line representation. The default translation mode, &lt;b&gt;auto&lt;/b&gt;, handles all the common cases automatically, but the &lt;b&gt;-translation&lt;/b&gt; option provides explicit control over the end of line translations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14cd99343f842e6b92787222750e8fda57ac1f0f" translate="yes" xml:space="preserve">
          <source>In Tcl scripts the end of a line is always represented using a single newline character (\n). However, in actual files and devices the end of a line may be represented differently on different platforms, or even for different devices on the same platform. For example, under UNIX newlines are used in files, whereas carriage-return-linefeed sequences are normally used in network connections. On input (i.e., with &lt;b&gt;chan gets&lt;/b&gt; and &lt;b&gt;chan read&lt;/b&gt;) the Tcl I/O system automatically translates the external end-of-line representation into newline characters. Upon output (i.e., with &lt;b&gt;chan puts&lt;/b&gt;), the I/O system translates newlines to the external end-of-line representation. The default translation mode, &lt;b&gt;auto&lt;/b&gt;, handles all the common cases automatically, but the &lt;b&gt;-translation&lt;/b&gt; option provides explicit control over the end of line translations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0216e30bfcf84d790bb00c7dd307fb69d22d55b2" translate="yes" xml:space="preserve">
          <source>In a nutshell, a short sample illustrating the usage of the ttrace with the Tcl threading extension:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe1dc08f9a95b3434c5e5a34db6af9dd36ad21c" translate="yes" xml:space="preserve">
          <source>In addition to a result and a return code, evaluation of a command in Tcl also produces a dictionary of return options. In general usage, all</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e0570ab3047feb150cdc854506a564eaafa8d6" translate="yes" xml:space="preserve">
          <source>In addition to a standard TDBC interface, &lt;b&gt;tdbc::odbc&lt;/b&gt; supports three additional ccommands. The first of these, &lt;b&gt;tdbc::odbc::datasources&lt;/b&gt;, which returns a Tcl list enumerating the named data sources available to the program (for connection with the &lt;b&gt;DSN&lt;/b&gt; keyword in the connection string). The result of &lt;b&gt;tdbc::odbc::datasources&lt;/b&gt; may be constrained to only system data sources or only user data sources by including the &lt;b&gt;-system&lt;/b&gt; or &lt;b&gt;-user&lt;/b&gt; options, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f9ad2d8acdae204ae58dc422ba2cfbf3a99d31f" translate="yes" xml:space="preserve">
          <source>In addition to the above behavior, the following additional behavior is defined by the default bindings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d4abfa80ab45da83a9260015a30926bfd6c6f7c" translate="yes" xml:space="preserve">
          <source>In addition to the file name rules described above, Tcl also supports</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="671caebf932d9cdddfa02cea4a21319996df3fc1" translate="yes" xml:space="preserve">
          <source>In addition to the main syntax described above, there are some special forms and miscellaneous syntactic facilities available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16a5d3e9b945b79e474c8a76008bc5c717602fa" translate="yes" xml:space="preserve">
          <source>In addition to the result of a procedure, the return code of a procedure may also be set by &lt;b&gt;return&lt;/b&gt; through use of the &lt;b&gt;-code&lt;/b&gt; option. In the usual case where the &lt;b&gt;-code&lt;/b&gt; option is not specified the procedure will return normally. However, the &lt;b&gt;-code&lt;/b&gt; option may be used to generate an exceptional return from the procedure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5c419606dadf7cc00d025469cc17b993a8c06cd" translate="yes" xml:space="preserve">
          <source>In addition to the standard &lt;b&gt;cget&lt;/b&gt;, &lt;b&gt;configure&lt;/b&gt;, &lt;b&gt;identify&lt;/b&gt;, &lt;b&gt;instate&lt;/b&gt;, and &lt;b&gt;state&lt;/b&gt; commands, buttons support the following additional widget commands:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e1c53e6a55e05793af1925702105f79a3872b89" translate="yes" xml:space="preserve">
          <source>In addition to the standard &lt;b&gt;cget&lt;/b&gt;, &lt;b&gt;configure&lt;/b&gt;, &lt;b&gt;identify&lt;/b&gt;, &lt;b&gt;instate&lt;/b&gt;, and &lt;b&gt;state&lt;/b&gt; commands, checkbuttons support the following additional widget commands:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb2902110bee218f92c148b80b0414bd6915fdd1" translate="yes" xml:space="preserve">
          <source>In addition to the standard &lt;b&gt;cget&lt;/b&gt;, &lt;b&gt;configure&lt;/b&gt;, &lt;b&gt;identify&lt;/b&gt;, &lt;b&gt;instate&lt;/b&gt;, and &lt;b&gt;state&lt;/b&gt; commands, radiobuttons support the following additional widget commands:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ec44a9d76d6da8a3abf7998c594d179058a77d7" translate="yes" xml:space="preserve">
          <source>In addition to the symbolically named types listed above, unknown types are identified using a 32-bit integer that corresponds to the type code returned by the system interfaces. In this case, the data is represented exactly in Tcl, including any embedded nulls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f01adc87e59f67156dde9d56055e58086a27794" translate="yes" xml:space="preserve">
          <source>In addition to the usual (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1fc6742e4513a8f00966eeea24a49084e7dc5e4" translate="yes" xml:space="preserve">
          <source>In addition to the usual methods on the tdbc::connection(n) object, connections to a MySQL database support one additional method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="129f5fbe5dcc212a70e053394127553db9726b13" translate="yes" xml:space="preserve">
          <source>In addition to these predefined functions, applications may define additional functions by using &lt;b&gt;&lt;a href=&quot;proc.htm&quot;&gt;proc&lt;/a&gt;&lt;/b&gt; (or any other method, such as &lt;b&gt;&lt;a href=&quot;interp.htm&quot;&gt;interp alias&lt;/a&gt;&lt;/b&gt; or &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TclLib/CrtObjCmd.htm&quot;&gt;Tcl_CreateObjCommand&lt;/a&gt;&lt;/b&gt;) to define new commands in the &lt;b&gt;tcl::mathfunc&lt;/b&gt; namespace. In addition, an obsolete interface named &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TclLib/CrtMathFnc.htm&quot;&gt;Tcl_CreateMathFunc&lt;/a&gt;&lt;/b&gt;() is available to extensions that are written in C. The latter interface is not recommended for new implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c6bc1f8495cc667d6691161029881a62d3278b9" translate="yes" xml:space="preserve">
          <source>In addition, TDBC itself has a few service procedures that are chiefly of interest to driver writers. &lt;b&gt;&lt;a href=&quot;#M5&quot;&gt;SEE ALSO&lt;/a&gt;&lt;/b&gt; also enumerates them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac5465ea851fa01f206d7a22623b488b0e7a688b" translate="yes" xml:space="preserve">
          <source>In addition, checkbuttons can be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de01c4e192c45715f56277a727507db3e5b3dacf" translate="yes" xml:space="preserve">
          <source>In addition, if Tk is present in the requesting interpreter, and the local system's ODBC driver manager supports a graphical user interface, the &lt;b&gt;tdbc::odbc::connection create&lt;/b&gt; object command supports a &lt;b&gt;-parent&lt;/b&gt; option, whose value is the path name of a Tk window. If this option is specified, and a connection string does not specify all the information needed to connect to an interface, the ODBC driver manager will display a dialog box to request whatever additional information is required. The requesting interpreter will block until the user dismisses the dialog, at which point the connection is made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908e88cf7590d578337270a2c5a899271563dce3" translate="yes" xml:space="preserve">
          <source>In addition, if the old and new focus windows do not share a common parent, &amp;ldquo;virtual crossing&amp;rdquo; focus events are sent to the intermediate windows in the hierarchy. Thus a &lt;b&gt;FocusIn&lt;/b&gt; event indicates that the target window or one of its descendants has acquired the focus, and a &lt;b&gt;FocusOut&lt;/b&gt; event indicates that the focus has been changed to a window outside the target window's hierarchy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f3a0f6debe58c1c4cc2f9de6d54ddf265041163" translate="yes" xml:space="preserve">
          <source>In addition, radiobuttons can be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c3ee56bf33f64f7919969237172c97baa2c7d3d" translate="yes" xml:space="preserve">
          <source>In addition, the &lt;b&gt;&lt;a href=&quot;tclvars.htm&quot;&gt;env&lt;/a&gt;&lt;/b&gt; variable is not present in a safe interpreter, so it cannot share environment variables with other interpreters. The &lt;b&gt;&lt;a href=&quot;tclvars.htm&quot;&gt;env&lt;/a&gt;&lt;/b&gt; variable poses a security risk, because users can store sensitive information in an environment variable. For example, the PGP manual recommends storing the PGP private key protection password in the environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c15a0ceacc41ea91fec00129269ed4ddfc09eda3" translate="yes" xml:space="preserve">
          <source>In addition, the following options are recognized (these options must be set on the initial creation of the connection; they cannot be changed after connecting) :</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7116193945dcb705fd31b47667c53f6ed878fa4" translate="yes" xml:space="preserve">
          <source>In addition, the following options are recognized:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0e374b25750efc05eef3aef6d955251921eb8c6" translate="yes" xml:space="preserve">
          <source>In addition, the given folder is stored in the &lt;b&gt;msgcat&lt;/b&gt; package configuration option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99dcd645cf224731b14e12fb1aa5254aa8ec2fac" translate="yes" xml:space="preserve">
          <source>In addition, the standard entry widget invokes validation whenever the linked &lt;b&gt;-textvariable&lt;/b&gt; is modified; the Tk themed entry widget does not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eaf3bda83e75d7a72b9cc8e6c6860fac7288f04" translate="yes" xml:space="preserve">
          <source>In addition, when the pointer moves between two windows, &lt;b&gt;Enter&lt;/b&gt; and &lt;b&gt;Leave&lt;/b&gt; &amp;ldquo;virtual crossing&amp;rdquo; events are sent to intermediate windows in the hierarchy in the same manner as for &lt;b&gt;FocusIn&lt;/b&gt; and &lt;b&gt;FocusOut&lt;/b&gt; events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae7ce33d3cbc6543884ea7feb03ac758162e6f5c" translate="yes" xml:space="preserve">
          <source>In addition, while two &lt;b&gt;test&lt;/b&gt;s have been run, results will only be reported by &lt;b&gt;cleanupTests&lt;/b&gt; for tests at the same level as test level-1.1. However, test results for all tests run prior to level-1.1 will be available when test level-2.1 runs. What this means is that if you try to access the test results for test level-2.1, it will may say that &amp;ldquo;m&amp;rdquo; tests have run, &amp;ldquo;n&amp;rdquo; tests have been skipped, &amp;ldquo;o&amp;rdquo; tests have passed and &amp;ldquo;p&amp;rdquo; tests have failed, where &amp;ldquo;m&amp;rdquo;, &amp;ldquo;n&amp;rdquo;, &amp;ldquo;o&amp;rdquo;, and &amp;ldquo;p&amp;rdquo; refer to tests that were run at the same test level as test level-1.1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e8a9b759a80486ada11b4f444160fb6e7315812" translate="yes" xml:space="preserve">
          <source>In almost all cases, you should use the &lt;b&gt;string length&lt;/b&gt; operation (including determining the length of a Tcl byte array value). Refer to the &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TclLib/Utf.htm&quot;&gt;Tcl_NumUtfChars&lt;/a&gt;&lt;/b&gt; manual entry for more details on the UTF-8 representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0493671dc540b597a97b732ae716be6434b1f294" translate="yes" xml:space="preserve">
          <source>In any case, you must still call &lt;b&gt;::http::cleanup&lt;/b&gt; to delete the state array when you are done.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4858c607ccd996ffeb5c58024b2c6c66c139b9bd" translate="yes" xml:space="preserve">
          <source>In case [1]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb91b610339a4a7a79b1e02f9203d483e4cc0bd" translate="yes" xml:space="preserve">
          <source>In case accurate result is needed (and if the text widget is managed by a geometry manager), one can resort to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="559dc5c92724f04a6d7717623b25af2980930e1d" translate="yes" xml:space="preserve">
          <source>In cases of ambiguity, where the same local time happens twice on the same day, the earlier time is used. In cases where the conversion yields an impossible time (for instance, 02:30 during the Spring Daylight Saving Time change using US rules), the time is converted as if the clock had not changed. Thus, the following code will set the value of &lt;b&gt;x&lt;/b&gt; to &lt;b&gt;03:30:00&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ebbfd3517ac9cb2a6b6292ad89fd76213f70c5" translate="yes" xml:space="preserve">
          <source>In contrast, procedure definitions and &lt;b&gt;&lt;a href=&quot;eval.htm&quot;&gt;eval&lt;/a&gt;&lt;/b&gt; within a dynamically &lt;b&gt;&lt;a href=&quot;eval.htm&quot;&gt;eval&lt;/a&gt;&lt;/b&gt;uated environment count line numbers relative to the start of their script, even if they would be able to count relative to the start of the outer dynamic script. That type of number usually makes more sense.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fa525c7fde36a8c8c246ab565d641de98c4684d" translate="yes" xml:space="preserve">
          <source>In each of these examples, the initial value of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be8fdcf921d06071ba53e4341b4205e0de2e894b" translate="yes" xml:space="preserve">
          <source>In fact, the &quot;*&quot; can be a list of two or more tokens whose last element is &quot;*&quot;, as in the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4929472a9c19086274f6e9a2dcf5429c7c51402" translate="yes" xml:space="preserve">
          <source>In general, all Tcl commands that take variable and command names support qualified names. This means you can give qualified names to such commands as &lt;b&gt;&lt;a href=&quot;set.htm&quot;&gt;set&lt;/a&gt;&lt;/b&gt;, &lt;b&gt;&lt;a href=&quot;proc.htm&quot;&gt;proc&lt;/a&gt;&lt;/b&gt;, &lt;b&gt;&lt;a href=&quot;rename.htm&quot;&gt;rename&lt;/a&gt;&lt;/b&gt;, and &lt;b&gt;&lt;a href=&quot;interp.htm&quot;&gt;interp alias&lt;/a&gt;&lt;/b&gt;. If you provide a fully-qualified name that starts with a &lt;b&gt;::&lt;/b&gt;, there is no question about what command, variable, or namespace you mean. However, if the name does not start with a &lt;b&gt;::&lt;/b&gt; (i.e., is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="073e72aa3c11f0ffc30ff57bdfb8993bd7c3e772" translate="yes" xml:space="preserve">
          <source>In general, it is OK for scripts to have dependencies on other packages. If scripts contain &lt;b&gt;&lt;a href=&quot;package.htm&quot;&gt;package require&lt;/a&gt;&lt;/b&gt; commands, these are stubbed out in the interpreter used to process the scripts, so these do not cause problems. If scripts call into other packages in global code, these calls are handled by a stub &lt;b&gt;&lt;a href=&quot;unknown.htm&quot;&gt;unknown&lt;/a&gt;&lt;/b&gt; command. However, if scripts make variable references to other package's variables in global code, these will cause errors. That is also bad coding style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="098d5512923a3e65d79eaf4e6fe35e6bdf830a93" translate="yes" xml:space="preserve">
          <source>In general, the &lt;b&gt;-textvariable&lt;/b&gt; and &lt;b&gt;-validatecommand&lt;/b&gt; can be dangerous to mix. Any problems have been overcome so that using the &lt;b&gt;-validatecommand&lt;/b&gt; will not interfere with the traditional behavior of the spinbox widget. Using the &lt;b&gt;-textvariable&lt;/b&gt; for read-only purposes will never cause problems. The danger comes when you try set the &lt;b&gt;-textvariable&lt;/b&gt; to something that the &lt;b&gt;-validatecommand&lt;/b&gt; would not accept, which causes &lt;b&gt;-validate&lt;/b&gt; to become &lt;b&gt;none&lt;/b&gt; (the &lt;b&gt;-invalidcommand&lt;/b&gt; will not be triggered). The same happens when an error occurs evaluating the &lt;b&gt;-validatecommand&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61cb0e8c88237ca355ffb593cb44211374fd06c5" translate="yes" xml:space="preserve">
          <source>In general, the &lt;b&gt;-textvariable&lt;/b&gt; and &lt;b&gt;-validatecommand&lt;/b&gt; options can be dangerous to mix. Any problems have been overcome so that using the &lt;b&gt;-validatecommand&lt;/b&gt; will not interfere with the traditional behavior of the entry widget. Using the &lt;b&gt;-textvariable&lt;/b&gt; for read-only purposes will never cause problems. The danger comes when you try set the &lt;b&gt;-textvariable&lt;/b&gt; to something that the &lt;b&gt;-validatecommand&lt;/b&gt; would not accept, which causes &lt;b&gt;-validate&lt;/b&gt; to become</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f63b13576f56522c7dc500966459fd63ccb545e" translate="yes" xml:space="preserve">
          <source>In horizontal scrollbars Control-Up and Control-Down have the same behavior as mouse clicks over &lt;b&gt;trough1&lt;/b&gt; and &lt;b&gt;trough2&lt;/b&gt;, respectively. In vertical scrollbars these keys have no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35a6fa5234cc0a887858e27249fe161c3ef9d09f" translate="yes" xml:space="preserve">
          <source>In horizontal scrollbars the Up and Down keys have the same behavior as mouse clicks over &lt;b&gt;arrow1&lt;/b&gt; and &lt;b&gt;arrow2&lt;/b&gt;, respectively. In vertical scrollbars these keys have no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b40be65920f39383004dea215528b53da61775c" translate="yes" xml:space="preserve">
          <source>In its simplest usage, the &lt;b&gt;return&lt;/b&gt; command is used without options in the body of a procedure to immediately return control to the caller of the procedure. If a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb77160e656deb3f0066988e48cb7ddc55879aab" translate="yes" xml:space="preserve">
          <source>In multithreading programs, there are many situations where a thread has to wait for some event to happen until it is allowed to proceed . This is usually accomplished by repeatedly testing a condition under the mutex protection and waiting on the condition variable until the condition evaluates to true:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60350494380a177b0c719914fe226a59239b7be8" translate="yes" xml:space="preserve">
          <source>In nonblocking mode &lt;b&gt;&lt;a href=&quot;puts.htm&quot;&gt;puts&lt;/a&gt;&lt;/b&gt;, &lt;b&gt;&lt;a href=&quot;read.htm&quot;&gt;read&lt;/a&gt;&lt;/b&gt;, and &lt;b&gt;&lt;a href=&quot;gets.htm&quot;&gt;gets&lt;/a&gt;&lt;/b&gt; never block. See the documentation for the individual commands for information on how they handle blocking and nonblocking channels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5193a43e8fa9d88b2f34b54246a995a4fbc5fe1" translate="yes" xml:space="preserve">
          <source>In normal use, an entry becomes active (displays itself differently) whenever the mouse pointer is over the entry. If a mouse button is released over the entry then the entry is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae84dd8d15e02076d79eded4c45981aa5492607" translate="yes" xml:space="preserve">
          <source>In order for a virtual event binding to trigger, two things must happen. First, the virtual event must be defined with the &lt;b&gt;event add&lt;/b&gt; command. Second, a binding must be created for the virtual event with the &lt;b&gt;&lt;a href=&quot;bind.htm&quot;&gt;bind&lt;/a&gt;&lt;/b&gt; command. Consider the following virtual event definitions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b088654b7f31405f79288aa168e692c2046c390" translate="yes" xml:space="preserve">
          <source>In order to execute shell built-in commands like &lt;b&gt;dir&lt;/b&gt; and &lt;b&gt;copy&lt;/b&gt;, the caller must prepend the desired command with &amp;ldquo;&lt;b&gt;cmd.exe /c &lt;/b&gt;&amp;rdquo; because built-in commands are not implemented using executables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b0264c7670a9c75a41d3ea4e4c27c5d9bb415e8" translate="yes" xml:space="preserve">
          <source>In order to maintain a responsive user-experience, the text widget calculates lines metrics (line heights in pixels) asynchronously. Because of this, some commands of the text widget may return wrong results if the asynchronous calculations are not finished at the time of calling. This applies to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a44fd81469ae56513f2506f7d712d89925178284" translate="yes" xml:space="preserve">
          <source>In other words, the interpreter will look into a directory specified by its major version and whose minor versions are less than or equal to the minor version of the interpreter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97344c88e792380ca52e69e17d93e62d28093ef6" translate="yes" xml:space="preserve">
          <source>In other words, when this method is called the transformation cannot defer the actual transformation operation anymore and has to transform all data waiting in its internal read buffers and return the result of that action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2ed84ea8f71978e5ce2f0e7def8b4e3551231dd" translate="yes" xml:space="preserve">
          <source>In other words, when this subcommand is called the transformation cannot defer the actual transformation operation anymore and has to transform all data waiting in its internal write buffers and return the result of that action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61db6438d440698da70dd02d6ca5a84ee2040ac3" translate="yes" xml:space="preserve">
          <source>In prevalidation, the new value of the entry if the edit is accepted. In revalidation, the current value of the entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ae5b20f671a8034cb9a8fcdcadd106eba371390" translate="yes" xml:space="preserve">
          <source>In some cases the &lt;b&gt;vwait&lt;/b&gt; command may not return immediately after</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05ae945e7af56c7c2bbd29bb38b1573aec9668ad" translate="yes" xml:space="preserve">
          <source>In standard Tk, many widgets have a &lt;b&gt;-state&lt;/b&gt; option which (in most cases) is either &lt;b&gt;normal&lt;/b&gt; or &lt;b&gt;disabled&lt;/b&gt;. Some widgets support additional states, such as the &lt;b&gt;&lt;a href=&quot;entry.htm&quot;&gt;entry&lt;/a&gt;&lt;/b&gt; widget which has a &lt;b&gt;readonly&lt;/b&gt; state and the various flavors of buttons which have &lt;b&gt;active&lt;/b&gt; state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be30a98bd553ff271a62ac4c8a6216baf81ae32" translate="yes" xml:space="preserve">
          <source>In the &amp;ldquo;stable&amp;rdquo; selection mode the command will select the highest stable version satisfying the requirements, if any. If no stable version satisfies the requirements, the highest unstable version satisfying the requirements will be selected. In the &amp;ldquo;latest&amp;rdquo; selection mode the command will accept the highest version satisfying all the requirements, regardless of its stableness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eb66cac98f14b18ab49945be4d0c9e82359b351" translate="yes" xml:space="preserve">
          <source>In the &lt;b&gt;&lt;a href=&quot;bind.htm&quot;&gt;bind&lt;/a&gt;&lt;/b&gt; command, a virtual event can be bound like any other builtin event type as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="481119fc138566756a029406fc580cc7a2a06904" translate="yes" xml:space="preserve">
          <source>In the &lt;b&gt;disabled&lt;/b&gt; state, the entry cannot be edited and the text cannot be selected. In the &lt;b&gt;readonly&lt;/b&gt; state, no insert cursor is displayed and the entry cannot be edited (specifically: the &lt;b&gt;insert&lt;/b&gt; and &lt;b&gt;delete&lt;/b&gt; commands have no effect). The &lt;b&gt;disabled&lt;/b&gt; state is the same as &lt;b&gt;readonly&lt;/b&gt;, and in addition text cannot be selected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea0b949855ba850cbc5770d9c54420a52da5c6a4" translate="yes" xml:space="preserve">
          <source>In the above example, two threads were fed work and both of them were instructed to signalize the same variable &quot;result&quot; in the calling thread . The caller entered the event loop twice to get both results . Note, however, that the order of the received results may vary, depending on the current system load, type of work done, etc, etc .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eda9ac1b5bb16f4387f7ec3be282fb803e2f956c" translate="yes" xml:space="preserve">
          <source>In the bizarre case that adding the given number of days yields a date that does not exist because it falls within the dropped days of the Julian-to-Gregorian conversion, the date is converted as if it was on the Julian calendar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59389e11e6ab35e1c5559bc97f01473d41e101b2" translate="yes" xml:space="preserve">
          <source>In the case of &lt;b&gt;boolean&lt;/b&gt;, &lt;b&gt;true&lt;/b&gt; and &lt;b&gt;false&lt;/b&gt;, if the function will return 0, then the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96d069f34cf4bb136f71d688aecc3f7112b84fc3" translate="yes" xml:space="preserve">
          <source>In the case of a command pipeline, the child-reaping duty falls upon the shoulders of the last close or half-close, which is thus allowed to report an abnormal exit error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e71768e926a6b7c5f90cf19a3b742e235b6bd189" translate="yes" xml:space="preserve">
          <source>In the classes mixed into the classes of the object, with sources of mixing in being searched in class traversal order. Within each class, the list of mixins is processed in natural order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65e18fe9f70461d8499f62c4c70465df5b1c4794" translate="yes" xml:space="preserve">
          <source>In the classes mixed into the object, in class traversal order. The list of mixins is checked in natural order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34f54fece79666d1a16193eea9250a7b487d1aa0" translate="yes" xml:space="preserve">
          <source>In the current implementation, new canvases are not given any default behavior: you will have to execute explicit Tcl commands to give the canvas its behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69d233442c1e1a72547de9c4a46e658cd84fca38" translate="yes" xml:space="preserve">
          <source>In the descriptions below, &amp;ldquo;Command-Line Name&amp;rdquo; refers to the switch used in class commands and &lt;b&gt;configure&lt;/b&gt; widget commands to set this value. For example, if an option's command-line switch is &lt;b&gt;-foreground&lt;/b&gt; and there exists a widget &lt;b&gt;.a.b.c&lt;/b&gt;, then the command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4931074f1a07ca6833baa70c83feec7ac7a80f8a" translate="yes" xml:space="preserve">
          <source>In the event that an RE could match more than one substring of a given string, the RE matches the one starting earliest in the string. If the RE could match more than one substring starting at that point, its choice is determined by its</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80a58addaa187c52e2a88db88687e29d64a96c72" translate="yes" xml:space="preserve">
          <source>In the first form defines an option for instances of this type, and optionally gives it an initial value. The initial value defaults to the empty string if no defaultValue is specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57f1ee2b5f434f17d13a7bc3e2d3029fdcb9a4bb" translate="yes" xml:space="preserve">
          <source>In the first form, the &lt;b&gt;read&lt;/b&gt; command reads all of the data from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5315cc0861cdf16836aebc9c78bc9cace106bee6" translate="yes" xml:space="preserve">
          <source>In the first form, the result will be the next</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f00c733671a04000a05bf717e25acf161719f5a" translate="yes" xml:space="preserve">
          <source>In the following example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d7d5e9e94e2bcae3109abdc72b3c3fa170dd45a" translate="yes" xml:space="preserve">
          <source>In the following example, a &quot;File&quot; class is defined to represent open files. The method bodies are included below the class definition via the &lt;b&gt;body&lt;/b&gt; command. Note that the bodies of the constructor/destructor must be included in the class definition, but they can be redefined via the &lt;b&gt;body&lt;/b&gt; command as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef2a82754d123005f446a278e2e022ca05253732" translate="yes" xml:space="preserve">
          <source>In the following example, a &quot;File&quot; class is defined to represent open files. Whenever the &quot;-name&quot; option is configured, the existing file is closed, and a new file is opened. Note that the &quot;config&quot; code for a public variable is optional. The &quot;-access&quot; option, for example, does not have it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad4a5c1598fc235839d51f90cf2179a7bfcb5598" translate="yes" xml:space="preserve">
          <source>In the following example, a simple &quot;counter&quot; object is used within the procedure &quot;test&quot;. The counter is created as a local object, so it is automatically deleted each time the procedure exits. The &lt;b&gt;&lt;a href=&quot;../tclcmd/puts.htm&quot;&gt;puts&lt;/a&gt;&lt;/b&gt; statements included in the constructor/destructor show the object coming and going as the procedure is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6ba9a79b2c3732d6b15a390ea9570de9d056c74" translate="yes" xml:space="preserve">
          <source>In the following examples, the initial value of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f3169b9bd209669e5d0f4654fe381cd7e524221" translate="yes" xml:space="preserve">
          <source>In the general case there can be more than one value list (e.g.,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52ef103193387b7507b175c53bf8b4a0f318c1b6" translate="yes" xml:space="preserve">
          <source>In the object itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4e3a73e86e704d1713a978e52889aedcdbe7215" translate="yes" xml:space="preserve">
          <source>In the object's class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fefcabb807e03f740f988fc38e4a5a283c675e7" translate="yes" xml:space="preserve">
          <source>In the presence of multiple widgets intended to be influenced by the font selection dialog, care needs to be taken to correctly handle focus changes: the font selected in the dialog should always match the current font of the widget with the focus, and the &lt;b&gt;-command&lt;/b&gt; callback should only act on the widget with the focus. The recommended practice is to set font dialog &lt;b&gt;-font&lt;/b&gt; and &lt;b&gt;-command&lt;/b&gt; configuration options in per-widget &lt;b&gt;&amp;lt;FocusIn&amp;gt;&lt;/b&gt; handlers (and if necessary to unset them - i.e. set to the empty string - in corresponding &lt;b&gt;&amp;lt;FocusOut&amp;gt;&lt;/b&gt; handlers). This is particularly important for implementers of library code using the font selection dialog, to avoid conflicting with application code that may also want to use the dialog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c057adefc61b22048cb342fae79a495d3e2eac0e" translate="yes" xml:space="preserve">
          <source>In the second form you can define option handlers (e.g., -configuremethod), then it should probably use configure and cget to access its options to avoid subtle errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d26b60a9eb44e0c1a67a9e1f6a043522fa080231" translate="yes" xml:space="preserve">
          <source>In the second form,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5f242d79c7b20f9b613f15b44eae4cd2f995472" translate="yes" xml:space="preserve">
          <source>In the simplest case there is one loop variable,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5054f6ffebf5240d6810f8c4a97662e34e0f62fa" translate="yes" xml:space="preserve">
          <source>In the specifications above, the integer value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6fb9a73a014cc689ff3c365aad9a76d9205d2e6" translate="yes" xml:space="preserve">
          <source>In the superclasses of the class, following each superclass in a depth-first fashion in the natural order of the superclass list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54cd1cd718c07741e1d425cb50b5c55c30c5cd82" translate="yes" xml:space="preserve">
          <source>In the widget command descriptions below, arguments named</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d13370b7475a082ed59821b0f69c8a154d1286" translate="yes" xml:space="preserve">
          <source>In this case,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57fa80e44cef67e9a2e21a8ce8d86f1eb6040128" translate="yes" xml:space="preserve">
          <source>In this case, the return value of &lt;b&gt;lindex&lt;/b&gt; is simply the value of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5ca9d7ca746b67d0743a25bae4c51140abe6da0" translate="yes" xml:space="preserve">
          <source>In this example, the coroutine acts to add up the arguments passed to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af86ca10b655e417b8dabd151cb6a9b279e07818" translate="yes" xml:space="preserve">
          <source>In this form &lt;b&gt;chan read&lt;/b&gt; blocks until</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="146369b9f71751f89f1017db914e6587723f6d23" translate="yes" xml:space="preserve">
          <source>In this form &lt;b&gt;chan read&lt;/b&gt; blocks until the reception of the end-of-file character, see &lt;b&gt;chan configure -eofchar&lt;/b&gt;. If there no end-of-file character has been configured for the channel, then &lt;b&gt;chan read&lt;/b&gt; will block forever.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7a4749f36e2de0988d7ba0c79b06c4b468d1980" translate="yes" xml:space="preserve">
          <source>In this form &lt;b&gt;read&lt;/b&gt; blocks until</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfbfd629df045227ea643a4b04ee0cf1b26064ef" translate="yes" xml:space="preserve">
          <source>In this form &lt;b&gt;read&lt;/b&gt; blocks until the reception of the end-of-file character, see &lt;b&gt;&lt;a href=&quot;fconfigure.htm&quot;&gt;fconfigure&lt;/a&gt;&lt;/b&gt;&lt;b&gt;-eofchar&lt;/b&gt;. If there no end-of-file character has been configured for the channel, then &lt;b&gt;read&lt;/b&gt; will block forever.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="878775265c0d2061260f1b58ae95ed763e90af69" translate="yes" xml:space="preserve">
          <source>In this form all unknown method names are delegeted to the specified component. The except clause can be used to specify a list of exceptions, i.e., method names that will not be so delegated. The using clause is defined as given above. In this form, the statement must contain the to clause, the using clause, or both.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81724d38315c072e7c04d2af952a76aae8a1ae2d" translate="yes" xml:space="preserve">
          <source>In this form of the delegate statement, the &lt;b&gt;using&lt;/b&gt; clause is used to specify the precise form of the command to which method name name is delegated. The &lt;b&gt;to&lt;/b&gt; clause is optional, since the chosen command might not involve any particular component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="471eee7f19183fa69eee861bb31424b9693e3d20" translate="yes" xml:space="preserve">
          <source>In this form the arguments are all integers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa98bf0c53dd87da94454983d2cfd4e173419eb8" translate="yes" xml:space="preserve">
          <source>In this form the command returns immediately, but it arranges for a Tcl command to be executed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec2ee2b05ed137c727262b825a9350a2958478db" translate="yes" xml:space="preserve">
          <source>In this form,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe5b5b827b1759328ec4883897711519f84b7f2c" translate="yes" xml:space="preserve">
          <source>In this setup &lt;b&gt;GetData&lt;/b&gt; will be called with the channel as an argument whenever $chan becomes readable. The &lt;b&gt;&lt;a href=&quot;read.htm&quot;&gt;read&lt;/a&gt;&lt;/b&gt; call will read whatever binary data is currently available without blocking. Here the channel has the fileevent removed when an end of file occurs to avoid being continually called (see above). Alternatively the channel may be closed on this condition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e9169a7868ac603b653fc2647eb53ac7ec4a636" translate="yes" xml:space="preserve">
          <source>In vanilla Tcl/Tk, there is a single pool of commands, so the access command for a widget is the same as the window name. When a widget is created within a namespace, however, its access command is installed in that namespace, and should be accessed outside of the namespace using a qualified name. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f44d61bea9a7d94e1604b7511d1f7344529987fa" translate="yes" xml:space="preserve">
          <source>In versions of Tk before 4.0, the &lt;b&gt;set&lt;/b&gt; and &lt;b&gt;get&lt;/b&gt; widget commands used a different form. This form is still supported for backward compatibility, but it is deprecated. In the old command syntax, the &lt;b&gt;set&lt;/b&gt; widget command has the following form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bfb01f162fe7b0076ba156af7a594bd406a603e" translate="yes" xml:space="preserve">
          <source>In vertical scrollbars Control-Up and Control-Down have the same behavior as mouse clicks over &lt;b&gt;trough1&lt;/b&gt; and &lt;b&gt;trough2&lt;/b&gt;, respectively. In horizontal scrollbars these keys have no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64324059860f16f046d7ac8724723898594ef083" translate="yes" xml:space="preserve">
          <source>In vertical scrollbars the Up and Down keys have the same behavior as mouse clicks over &lt;b&gt;arrow1&lt;/b&gt; and &lt;b&gt;arrow2&lt;/b&gt;, respectively. In horizontal scrollbars these keys have no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4d760962a30a09ea1ba80e0d1310f667a5ad62c" translate="yes" xml:space="preserve">
          <source>Include information about embedded windows in the dump results. The value of a window is its Tk pathname, unless the window has not been created yet. (It must have a create script.) In this case an empty string is returned, and you must query the window by its index position to get more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f21ff634ca26653af88ab3b0055f28f676aaf74e" translate="yes" xml:space="preserve">
          <source>Include information about images in the dump results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a65c5262f5d88ec3490b69961e15da075c14145e" translate="yes" xml:space="preserve">
          <source>Include information about marks in the dump results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c03636c244a25c3bea531b8dca99d4aa9456cd66" translate="yes" xml:space="preserve">
          <source>Include information about tag transitions in the dump results. Tag information is returned as &lt;b&gt;tagon&lt;/b&gt; and &lt;b&gt;tagoff&lt;/b&gt; elements that indicate the begin and end of each range of each tag, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b888ea061dc4653848ad8352bc15a18fa0ec652" translate="yes" xml:space="preserve">
          <source>Include information about text in the dump results. The value is the text up to the next element or the end of range indicated by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee29105fdd4a8e9b8f231425a48b44a5ca19698" translate="yes" xml:space="preserve">
          <source>Increments the &lt;b&gt;-value&lt;/b&gt; by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c04e37b9e99b884d6b6a0ff65f0b0d3a6a54075" translate="yes" xml:space="preserve">
          <source>Increments the value stored in the variable whose name is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2df9b932637fe9d32a0f16da1c11873398f873d" translate="yes" xml:space="preserve">
          <source>Index</source>
          <target state="translated">Index</target>
        </trans-unit>
        <trans-unit id="295de3243ad7e5c1eeefae7a4af93b9353a6f1b3" translate="yes" xml:space="preserve">
          <source>Index of char string to be inserted/deleted, if any, otherwise -1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ddf9e177745aab389a0a20745706fde9b6a68b8" translate="yes" xml:space="preserve">
          <source>Index of character string to be inserted/deleted, if any, otherwise -1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ca4b8ce7fa17347391b563b8361823c4e4a8b4e" translate="yes" xml:space="preserve">
          <source>IndianRed</source>
          <target state="translated">IndianRed</target>
        </trans-unit>
        <trans-unit id="4b609c86c8a381faa8c71e637e55178915b6b0ca" translate="yes" xml:space="preserve">
          <source>IndianRed1</source>
          <target state="translated">IndianRed1</target>
        </trans-unit>
        <trans-unit id="610048732754f38accb916b48588e88084dd0ac1" translate="yes" xml:space="preserve">
          <source>IndianRed2</source>
          <target state="translated">IndianRed2</target>
        </trans-unit>
        <trans-unit id="c555860aae58542534ed3b0161512faa1dc6c019" translate="yes" xml:space="preserve">
          <source>IndianRed3</source>
          <target state="translated">IndianRed3</target>
        </trans-unit>
        <trans-unit id="c9cc03846fc50c889c2af44b02315c9a467a36fb" translate="yes" xml:space="preserve">
          <source>IndianRed4</source>
          <target state="translated">IndianRed4</target>
        </trans-unit>
        <trans-unit id="07b07f1cf6c6ffe9f3936ab68f350ba865578422" translate="yes" xml:space="preserve">
          <source>Indicates</source>
          <target state="translated">Indicates</target>
        </trans-unit>
        <trans-unit id="e6b313e6784d798160a39ad377857d2b6cf84ea1" translate="yes" xml:space="preserve">
          <source>Indicates &amp;ldquo;no entry at all&amp;rdquo;; this is used most commonly with the &lt;b&gt;activate&lt;/b&gt; option to deactivate all the entries in the menu. In most cases the specification of &lt;b&gt;none&lt;/b&gt; causes nothing to happen in the widget command. This form may not be abbreviated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c07d9453700e220f669255420f5d425dd09a5ce" translate="yes" xml:space="preserve">
          <source>Indicates some sort of problem generated in relation to Tcl itself, e.g. a failure to look up a channel or variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="589fac19e1b22f1514342fab46762fe7855dd510" translate="yes" xml:space="preserve">
          <source>Indicates that the output should be split into lines of no more than</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c22f1c23d85db7b8f3ba912f19478e2c82e3602" translate="yes" xml:space="preserve">
          <source>Indicates that, when lines are split because of the &lt;b&gt;-maxlen&lt;/b&gt; option,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a17433267c05393f7711e91a2aa850fa1c5e4c5" translate="yes" xml:space="preserve">
          <source>Indicates the anchor point for the selection, which is set with the &lt;b&gt;&lt;a href=&quot;selection.htm&quot;&gt;selection anchor&lt;/a&gt;&lt;/b&gt; widget command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5e8aeeb23db21d8469e8748b42ce65036181416" translate="yes" xml:space="preserve">
          <source>Indicates the anchor point for the selection, which is set with the &lt;b&gt;select from&lt;/b&gt; and &lt;b&gt;select adjust&lt;/b&gt; widget commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8155b472e2aad547cace2055bdfba00f7db87093" translate="yes" xml:space="preserve">
          <source>Indicates the bottommost entry in the menu. If there are no entries in the menu then this form is equivalent to &lt;b&gt;none&lt;/b&gt;. This form may not be abbreviated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="990e3d55f02742b7c62310e167a04e559b71051a" translate="yes" xml:space="preserve">
          <source>Indicates the character adjacent to and immediately following the insert cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6a117ae57c6f9a2d0e597cb68d2e7cb182f3f1c" translate="yes" xml:space="preserve">
          <source>Indicates the character adjacent to and immediately following the insertion cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="112423935dcaacfed3c9561b968cf396e7a53c3e" translate="yes" xml:space="preserve">
          <source>Indicates the character just after the last one in the entry's string. This is equivalent to specifying a numerical index equal to the length of the entry's string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="093552dd699e65fd2ddec542f04e94f78ef8e895" translate="yes" xml:space="preserve">
          <source>Indicates the character just after the last one in the selection. It is an error to use this form if the selection is not in the entry window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96fa070808c925daaa1a9d6f72473bb961f21d4a" translate="yes" xml:space="preserve">
          <source>Indicates the character just after the last one in the selection. It is an error to use this form if the selection is not in the spinbox window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="499b58070357aab9c410dad3e3947edf35903cc5" translate="yes" xml:space="preserve">
          <source>Indicates the character just after the last one in the spinbox's string. This is equivalent to specifying a numerical index equal to the length of the spinbox's string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ee176c4ae6d9cfbf8d189b22d188852387a63e4" translate="yes" xml:space="preserve">
          <source>Indicates the character just after the last one in the text that has been tagged with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95cb625a075b82c860bbcc656502b54c70ee2f2d" translate="yes" xml:space="preserve">
          <source>Indicates the character just after the mark whose name is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d91c4f7108a6bea56e06c0802d89a5c54b8d95f" translate="yes" xml:space="preserve">
          <source>Indicates the character that covers the pixel whose x and y coordinates within the text's window are</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="805deb2cfb4f53fdffcd4f72ca2dfb0ab8bb8e4a" translate="yes" xml:space="preserve">
          <source>Indicates the element that covers the point in the listbox window specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23605d3879083726721f2b8aca0e106440e7867e" translate="yes" xml:space="preserve">
          <source>Indicates the element that has the location cursor. This element will be displayed as specified by &lt;b&gt;-activestyle&lt;/b&gt; when the listbox has the keyboard focus, and it is specified with the &lt;b&gt;activate&lt;/b&gt; widget command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeb246299bc02c3e6736443f180ea10653928ec7" translate="yes" xml:space="preserve">
          <source>Indicates the end of the listbox. For most commands this refers to the last element in the listbox, but for a few commands such as &lt;b&gt;index&lt;/b&gt; and &lt;b&gt;insert&lt;/b&gt; it refers to the element just after the last one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39834c8209a0148de6d21b445412e817e907010c" translate="yes" xml:space="preserve">
          <source>Indicates the end of the text (the character just after the last newline).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3613c57e58d90c52d90c64aaba99a3805c16d4b4" translate="yes" xml:space="preserve">
          <source>Indicates the entry that is currently active. If no entry is active then this form is equivalent to &lt;b&gt;none&lt;/b&gt;. This form may not be abbreviated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c277ff2182ae3b714995070b35e05b9895e3ff49" translate="yes" xml:space="preserve">
          <source>Indicates the first character in the selection. It is an error to use this form if the selection is not in the entry window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7bcf57ba91b4654fc01eef3223f70eb047eb95f" translate="yes" xml:space="preserve">
          <source>Indicates the first character in the selection. It is an error to use this form if the selection is not in the spinbox window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="736dcd0c5832d345410f86bb165c35abea4fb7cf" translate="yes" xml:space="preserve">
          <source>Indicates the first character in the text that has been tagged with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b087579ee8d3ccf5c91db9fb595918f46786e8a5" translate="yes" xml:space="preserve">
          <source>Indicates the position of the embedded image whose name is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0effc75d6d128cd2242189a6770a60688777488" translate="yes" xml:space="preserve">
          <source>Indicates the position of the embedded window whose name is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e165c75b6de5ee4a29924d21a5171735fe31865f" translate="yes" xml:space="preserve">
          <source>Indicates whether or not arrowheads are to be drawn at one or both ends of the line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65e0495e30e8cff52bf5a99cf4ec27c6f91b3af2" translate="yes" xml:space="preserve">
          <source>Indices</source>
          <target state="translated">Indices</target>
        </trans-unit>
        <trans-unit id="dd77b29a67153053d20e1e26a1b2c823b22a02c8" translate="yes" xml:space="preserve">
          <source>Individual items may be moved or scaled using widget commands described below, but they may not be rotated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9cd43c1d7042848b37f68a226e65792ecf954ec" translate="yes" xml:space="preserve">
          <source>Inexact search when the list elements are in sorted order. For an increasing list the last index where the element is less than or equal to the pattern is returned. For a decreasing list the last index where the element is greater than or equal to the pattern is returned. If the pattern is before the first element or the list is empty, -1 is returned. This option implies &lt;b&gt;-sorted&lt;/b&gt; and cannot be used with either &lt;b&gt;-all&lt;/b&gt; or &lt;b&gt;-not&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95563909b4d0958570c6dbf13be5396267e5671" translate="yes" xml:space="preserve">
          <source>Initial geometry to use for window. If this option is specified, its value is stored in the &lt;b&gt;&lt;a href=&quot;../tkcmd/tkvars.htm&quot;&gt;geometry&lt;/a&gt;&lt;/b&gt; global variable of the application's Tcl interpreter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95802daab3a23990338179f72248350c1434cf39" translate="yes" xml:space="preserve">
          <source>Insert</source>
          <target state="translated">Insert</target>
        </trans-unit>
        <trans-unit id="b0825c3920484d7829493310b2c9784485015875" translate="yes" xml:space="preserve">
          <source>Insert double-quotes around the first instance of the word &lt;b&gt;interesting&lt;/b&gt;, however it is capitalized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0c533915d828707064829c13fd09f6f505ac169" translate="yes" xml:space="preserve">
          <source>Insert the characters of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a7fbd7d269d73f35c57c4645a2de4fdbbc66265" translate="yes" xml:space="preserve">
          <source>Insert the contents of the selection at the mouse location. (This event has meaningful &lt;b&gt;%x&lt;/b&gt; and &lt;b&gt;%y&lt;/b&gt; substitutions).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cc5a9855c4b823d68cf05c9ac1f979f35140d40" translate="yes" xml:space="preserve">
          <source>Insert the slave so that it occupies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c546378cb166d6516a5313f4a7409029f0c8c749" translate="yes" xml:space="preserve">
          <source>Insert the slave so that it occupies the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="473a881065df02a57bb917b9964c051a02881cf3" translate="yes" xml:space="preserve">
          <source>Insert the slave(s) at the end of the packing order for the master window given by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbf1cef437114f1c7905cdbb3e96b61b5978a517" translate="yes" xml:space="preserve">
          <source>Insert the slave(s) in the master window given by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0624cd8e3adfaff0913e5772f6cce990ef35bf5b" translate="yes" xml:space="preserve">
          <source>Insert the window after the window specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6f5969581cfff8eae172f3646b23ed89550bee1" translate="yes" xml:space="preserve">
          <source>Insert the window before the window specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07136851031cb8faca3df628c368a5d3f07c5e9a" translate="yes" xml:space="preserve">
          <source>Inserts a pane at the specified position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ec664ff2c56e84291c165d1b556c08cf198915" translate="yes" xml:space="preserve">
          <source>Inserts a separator (boundary) on the undo stack. Does nothing when the &lt;b&gt;-undo&lt;/b&gt; option is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80724172df467c58ee3db0ead35508fc4e85a7a4" translate="yes" xml:space="preserve">
          <source>Inserts all of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a13f1dd6b31ed4dc9844ff7ffd841fd9c219a805" translate="yes" xml:space="preserve">
          <source>Inserts zero or more new elements in the list just before the element given by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7cdd306047e3c171691fb24b8351b02cb6a0c08" translate="yes" xml:space="preserve">
          <source>Install the package as a subdirectory of one of the directories given by the &lt;b&gt;&lt;a href=&quot;tclvars.htm&quot;&gt;tcl_pkgPath&lt;/a&gt;&lt;/b&gt; variable. If &lt;b&gt;$tcl_pkgPath&lt;/b&gt; contains more than one directory, machine-dependent packages (e.g., those that contain binary shared libraries) should normally be installed under the first directory and machine-independent packages (e.g., those that contain only Tcl scripts) should be installed under the second directory. The subdirectory should include the package's script and/or binary files as well as the &lt;b&gt;pkgIndex.tcl&lt;/b&gt; file. As long as the package is installed as a subdirectory of a directory in &lt;b&gt;$tcl_pkgPath&lt;/b&gt; it will automatically be found during &lt;b&gt;&lt;a href=&quot;package.htm&quot;&gt;package require&lt;/a&gt;&lt;/b&gt; commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="261f51c62e4ab1229d6b486c037c6c1285ca86be" translate="yes" xml:space="preserve">
          <source>Instances of objects may be made with either the &lt;b&gt;create&lt;/b&gt; or &lt;b&gt;new&lt;/b&gt; methods of the &lt;b&gt;oo::object&lt;/b&gt; object itself, or by invoking those methods on any of the subclass objects; see &lt;b&gt;&lt;a href=&quot;class.htm&quot;&gt;oo::class&lt;/a&gt;&lt;/b&gt; for more details. The configuration of individual objects (i.e., instance-specific methods, mixed-in classes, etc.) may be controlled with the &lt;b&gt;&lt;a href=&quot;define.htm&quot;&gt;oo::objdefine&lt;/a&gt;&lt;/b&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35b43aeadc5c494c46a764ab4f598c539eed76d1" translate="yes" xml:space="preserve">
          <source>Instead of a &lt;b&gt;-state&lt;/b&gt; option, every widget now has a &lt;b&gt;state&lt;/b&gt; widget command which is used to set or query the state. A</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72387a26c95cd8d166cfdeb9dea80e02a3f66700" translate="yes" xml:space="preserve">
          <source>Instead of attempting to match the regular expression, returns a list containing information about the regular expression. The first element of the list is a subexpression count. The second element is a list of property names that describe various attributes of the regular expression. This switch is primarily intended for debugging purposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd465c7c8c03d2b38f3adc383fd70994b8cbaab3" translate="yes" xml:space="preserve">
          <source>Instead of hard-coding the base class name, we can use the &quot;chain&quot; command like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="936cde1f8caffbf489f67411153b9cec83c77711" translate="yes" xml:space="preserve">
          <source>Instead of hard-coding the base extendedclass name, we can use the &quot;chain&quot; command like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="482e10c363c8d6d1864bdd7e71ccf3cb3180e7a0" translate="yes" xml:space="preserve">
          <source>Instead of hard-coding the base widget name, we can use the &quot;chain&quot; command like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cc2bf624a8d152013d2aee7d9c31bde7339ac53" translate="yes" xml:space="preserve">
          <source>Instead of returning the information as the result of the dump operation, invoke the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eae0e97f6d800e5a4937a803e00b2f2a2e3b7c8" translate="yes" xml:space="preserve">
          <source>Instead, you should always use the scope command to generate the variable name dynamically. Then, you can pass that name to a widget or to any other bit of code in your program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e34b5a9e3cfd08ba55887e62a943080eaba14b49" translate="yes" xml:space="preserve">
          <source>Instruct Tcl to always send output to &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TclLib/GetStdChan.htm&quot;&gt;stdout&lt;/a&gt;&lt;/b&gt; immediately, whether or not it is to a terminal:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e50215ad1464b36469ccface3c1ac8c90098015" translate="yes" xml:space="preserve">
          <source>Instruct every button in the application to have red text on it unless explicitly overridden, by setting the &lt;b&gt;foreground&lt;/b&gt; for the &lt;b&gt;&lt;a href=&quot;button.htm&quot;&gt;Button&lt;/a&gt;&lt;/b&gt; class (note that on some platforms the option is ignored):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="357e83755347975c8bf6064f4b48e18b09ef9be2" translate="yes" xml:space="preserve">
          <source>Instructs the decoder to throw an error if it encounters unexpected whitespace characters. Otherwise it ignores them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddfe9f5c61247928d2d9d033f82a127d43643e13" translate="yes" xml:space="preserve">
          <source>Instructs the decoder to throw an error if it encounters whitespace characters. Otherwise it ignores them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9edcffff4461c9083fbff857f8dcee0f0769cbd4" translate="yes" xml:space="preserve">
          <source>Integer</source>
          <target state="translated">Integer</target>
        </trans-unit>
        <trans-unit id="e3ee0c1278d6bdcb8cfa2df530bc4739f1fb1610" translate="yes" xml:space="preserve">
          <source>Intended to clean up and summarize after several tests have been run. Typically called once per test file, at the end of the file after all tests have been completed. For best effectiveness, be sure that the &lt;b&gt;cleanupTests&lt;/b&gt; is evaluated even if an error occurs earlier in the test file evaluation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a7564d25bfae72cd1699c2c90ebd3193d20f5d5" translate="yes" xml:space="preserve">
          <source>Internal and debugging variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b44fc11e6379a1c57b04f27bc5a026f2db4766a" translate="yes" xml:space="preserve">
          <source>Internal commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a4cc8c53e88fcab69062b49e762118b42856243" translate="yes" xml:space="preserve">
          <source>Internally, i.e. when it comes to the actual behaviour of the translator this value &lt;b&gt;is&lt;/b&gt; identical to &lt;b&gt;lf&lt;/b&gt; and is therefore reported as such when queried. Even if &lt;b&gt;&lt;a href=&quot;binary.htm&quot;&gt;binary&lt;/a&gt;&lt;/b&gt; was used to set the translation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3268f235d1491b078ea861ea4e52ef2678cd97e" translate="yes" xml:space="preserve">
          <source>Internally, slot objects also define a method &lt;b&gt;--default-operation&lt;/b&gt; which is forwarded to the default operation of the slot (thus, for the class &amp;ldquo;&lt;b&gt;&lt;a href=&quot;variable.htm&quot;&gt;variable&lt;/a&gt;&lt;/b&gt;&amp;rdquo; slot, this is forwarded to &amp;ldquo;&lt;b&gt;my -append&lt;/b&gt;&amp;rdquo;), and these methods which provide the implementation interface:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="c65605adf5270f5065089b0189da542274d30db0" translate="yes" xml:space="preserve">
          <source>Invoke</source>
          <target state="translated">Invoke</target>
        </trans-unit>
        <trans-unit id="1b8de0ebedb796b10f31160eb92b5015d7b56388" translate="yes" xml:space="preserve">
          <source>Invoke the Tcl command associated with the button, if there is one. The return value is the return value from the Tcl command, or an empty string if there is no command associated with the button. This command is ignored if the button's state is &lt;b&gt;disabled&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2ef9cf0f29260cd90635cf9fac92233e295bb35" translate="yes" xml:space="preserve">
          <source>Invoke the action of the menu entry. See the sections on the individual entries above for details on what happens. If the menu entry is disabled then nothing happens. If the entry has a command associated with it then the result of that command is returned as the result of the &lt;b&gt;invoke&lt;/b&gt; widget command. Otherwise the result is an empty string. Note: invoking a menu entry does not automatically unpost the menu; the default bindings normally take care of this before invoking the &lt;b&gt;invoke&lt;/b&gt; widget command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2daf3c5e78eb753604468386a2c73988c52a48f" translate="yes" xml:space="preserve">
          <source>Invokes a method named</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aca080858e1f175b0969e1b6e7df3af34a9a763f" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;b&gt;stat&lt;/b&gt; kernel call on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d44a4417268cb01b73795043cd8044355431181" translate="yes" xml:space="preserve">
          <source>Invokes the command associated with the button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff426153583a1538324afd02b3c6e4ef0ee23d8f" translate="yes" xml:space="preserve">
          <source>Invokes the hidden command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dc445ebab760e0647a05a4d9cca36fe8cbeefe4" translate="yes" xml:space="preserve">
          <source>Issues concerning chars and indices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dd5d5b49f19e1af8608ede7c4aa585a51f279cb" translate="yes" xml:space="preserve">
          <source>It is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d828442014d09e255cdf34aa64f238ecc81c7ab6" translate="yes" xml:space="preserve">
          <source>It is also possible to search inside elements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd60506961430ce9c37eabd138bf76b32072ca3b" translate="yes" xml:space="preserve">
          <source>It is an error to attempt to retrieve a value for a key that is not present in the dictionary.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
