<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="statsmodels">
    <body>
      <group id="statsmodels">
        <trans-unit id="1ca1552419a4dc141dbc6178f94eea3628906218" translate="yes" xml:space="preserve">
          <source>InverseGaussian.resid_dev()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9655cb104335011432ed530f655f8c2c799e7b71" translate="yes" xml:space="preserve">
          <source>InverseGaussian.starting_mu()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca485a7c65e8d7db7e011f6e5bf4101c0308fb77" translate="yes" xml:space="preserve">
          <source>InverseGaussian.weights()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25d870d7df67eae541a03fd705fafe480d05c3e1" translate="yes" xml:space="preserve">
          <source>Irregular</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8c2bef7ad119e93cf38138097666bf95dfad080" translate="yes" xml:space="preserve">
          <source>It allows to visualize multivariate categorical data in a rigorous and informative way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bf052c7041803f66bba42ee0dd332553d151e70" translate="yes" xml:space="preserve">
          <source>It can happen that the axis labels or tick labels fall outside the plot area, especially with rotated labels on the horizontal axis. With Matplotlib 1.1 or higher, this can easily be fixed by calling &lt;code&gt;ax.tight_layout()&lt;/code&gt;. With older Matplotlib one has to use &lt;code&gt;plt.rc&lt;/code&gt; or &lt;code&gt;plt.rcParams&lt;/code&gt; to fix this, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a12a7dcc9057acbde0b78e9d8d4bfcb901c61fd4" translate="yes" xml:space="preserve">
          <source>It follows that \(\mu = b'(\theta)\) and \(Var[Y|x]=\frac{\phi}{w}b''(\theta)\). The inverse of the first equation gives the natural parameter as a function of the expected value \(\theta(\mu)\) such that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcc2b47e2cb919918e7af03b6b892db707739ed9" translate="yes" xml:space="preserve">
          <source>It handles the output of contrasts, estimates of covariance, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd6d827c907a98bf46072a2a7316485c1299090d" translate="yes" xml:space="preserve">
          <source>It is easy to see that this can be cast into state space form as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe3ec4b4ef4d202cf1cb1d7b48eb7bfa9fbbed11" translate="yes" xml:space="preserve">
          <source>It is for these reasons that the coincident index is created (see below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c22336ae35fe4c82a6114eff550d7390affe8842" translate="yes" xml:space="preserve">
          <source>It is important to understand the expected signs of the coefficients. A typical AR(p) model is written as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b961b071a683660fcfa54a85b2be6b4e8d6650c8" translate="yes" xml:space="preserve">
          <source>It is left-stochastic, meaning that each column sums to one (because it is certain that from one regime (j) you will transition to &lt;em&gt;some other regime&lt;/em&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="863fdfcdf0aa6af61d83ccd942b4e10c2bd07f33" translate="yes" xml:space="preserve">
          <source>It is possible that there is insufficient variation in the data for small datasets or for data with small groups in categorical variables. In these cases, the results might not be identified or some hidden problems might occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9728486ca460815cb69c8b5861a301340073fc01" translate="yes" xml:space="preserve">
          <source>It is recommended that observations with dffits large than a threshold of 2 sqrt{k / n} where k is the number of parameters, should be investigated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0288ba35b046cbe2f00c39855ce96412b084a5bc" translate="yes" xml:space="preserve">
          <source>It is recommended to use dates with the time-series models, as the below will probably make clear. However, if ARIMA is used without dates and/or &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; are given as indices, then these indices are in terms of the &lt;em&gt;original&lt;/em&gt;, undifferenced series. Ie., given some undifferenced observations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e2bbe5e427db06a859fef66aee6490eb1d65aa6" translate="yes" xml:space="preserve">
          <source>It is strongly recommended to use 64-bit Python if possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38bf8962804edecb35915fa898defdbcbfa7788e" translate="yes" xml:space="preserve">
          <source>It is therefore best practice to create separate model instances when we want to fit a model using different fit function arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6aa0bfd3dcd67daf3f2729452c1ffe0908fb55f" translate="yes" xml:space="preserve">
          <source>It is up to the user to know (or to consult a text book to find out) what the underlying statistical assumptions for the models are. As an example, &lt;code&gt;exog&lt;/code&gt; in &lt;code&gt;OLS&lt;/code&gt; can have lagged dependent variables if the error or noise term is independently distributed over time (or uncorrelated over time). However, if the error terms are autocorrelated, then OLS does not have good statistical properties (is inconsistent) and the correct model will be ARMAX. &lt;code&gt;statsmodels&lt;/code&gt; has functions for regression diagnostics to test whether some of the assumptions are justified or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd0a8f69a6e6cff02d3952ae3c3910bd03d91ad0" translate="yes" xml:space="preserve">
          <source>It may still be confusing to see the two lag polynomials in front of the time-series variable, but notice that we can multiply the lag polynomials together to get the following model:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c5ddb3741f488ad3375a29fd905b56f3b63b4dd" translate="yes" xml:space="preserve">
          <source>It produces same recursive residuals as other version. This version updates the inverse of the X&amp;rsquo;X matrix and does not require matrix inversion during updating. looks efficient but no timing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f064c16aa84f9915d9c82d5457dbc626332731b" translate="yes" xml:space="preserve">
          <source>It will be instructive to look at the mean of the dependent variable, write, for each level of race ((1 = Hispanic, 2 = Asian, 3 = African American and 4 = Caucasian)).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e73461d1b1ed42db694ff58c1b032288783af063" translate="yes" xml:space="preserve">
          <source>It's being worked on, but it gives a good excuse to look at the R cell magics in the notebook.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="180534a3fbf84527788d977fe786401118ece7c4" translate="yes" xml:space="preserve">
          <source>Iterate until estimates converge if sigma is None instead of two-step GLS, which is the default is sigma is None.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ad910a3bd31dc76184681939ba801b27c00bb7f" translate="yes" xml:space="preserve">
          <source>Its dimension is r+k x 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0782a6165f86f3e0c15dae0f14018062c459e9cc" translate="yes" xml:space="preserve">
          <source>Its dimension is r+k x r+k.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b646fd56be3fca8b778115334393bc1a1bcfd436" translate="yes" xml:space="preserve">
          <source>J Bai, K Li (2012). Statistical analysis of factor models of high dimension. Annals of Statistics. &lt;a href=&quot;https://arxiv.org/pdf/1205.6617.pdf&quot;&gt;https://arxiv.org/pdf/1205.6617.pdf&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a2c810251bfbe0d638ff114ef0d75250655cec0" translate="yes" xml:space="preserve">
          <source>J-Test for comparing non-nested models</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac83ff9f035cc0fe52819d72a36d0fb7da1b7c50" translate="yes" xml:space="preserve">
          <source>J. Bai and S. Ng, &amp;ldquo;Determining the number of factors in approximate factor models,&amp;rdquo; Econometrica, vol. 70, number 1, pp. 191-221, 2002</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65ae5e0ce24ae2da3c02b99a37c74acf26597893" translate="yes" xml:space="preserve">
          <source>J.L. Hintze and R.D. Nelson, &amp;ldquo;Violin Plots: A Box Plot-Density Trace Synergism&amp;rdquo;, The American Statistician, Vol. 52, pp.181-84, 1998.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="365ba8760373b0001389cc87fad6420ac0dcd027" translate="yes" xml:space="preserve">
          <source>J.S. Racine, &amp;ldquo;Nonparametric Econometrics: A Primer,&amp;rdquo; Foundation and Trends in Econometrics, Vol. 3, No. 1, pp. 1-88, 2008.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="577ff54445d1d3573635aa5f7602b5ac2803269d" translate="yes" xml:space="preserve">
          <source>Jacobian matrix for multinomial logit model log-likelihood</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d034aa581fc28648644f0e8777a0d90f8de50095" translate="yes" xml:space="preserve">
          <source>Jacobian matrix for the parameter transformation function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b3c9442e89707029cdeb5cbbbad96d512757d6d" translate="yes" xml:space="preserve">
          <source>Jacobian/Gradient of log-likelihood evaluated at params for each observation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee74bd9d7cb5060fc81904b7dfaa64c079dbaca" translate="yes" xml:space="preserve">
          <source>Jarque-Bera test:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49c08a58617ab012a658460eb86868736550b878" translate="yes" xml:space="preserve">
          <source>Johansen, S. 1995. &lt;em&gt;Likelihood-Based Inference in Cointegrated * *Vector Autoregressive Models&lt;/em&gt;. Oxford University Press.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac9a638e871c8650af075d26586268d62ba73cb4" translate="yes" xml:space="preserve">
          <source>John Wiley and Sons, Inc., New York, 2001.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dba4477fb24c9072327dff421ab905c642dbe09" translate="yes" xml:space="preserve">
          <source>Joint hypothesis test</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f6456818f693fb6055b8994c0190c07df27e94d" translate="yes" xml:space="preserve">
          <source>Jones, R.H. 1980 &amp;ldquo;Maximum likelihood fitting of ARMA models to time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa36bba4b866914c087a73185029f82a22d766c" translate="yes" xml:space="preserve">
          <source>Journal of the Royal Statistical Society B. 30, 248-75.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5fe17aee40d38d788446644c36e41b38abcfda4" translate="yes" xml:space="preserve">
          <source>Journal of the Royal Statistical Society. Series B (Methodological), Vol. 46, No. 3 (1984), pp. 440-464</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29e37b35e250887e92f2ea9343d177d80c97f926" translate="yes" xml:space="preserve">
          <source>Judicious choice of delta can cut computation time considerably for large data (N &amp;gt; 5000). A good choice is &lt;code&gt;delta = 0.01 * range(exog)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80298d3b5fab6147f993a4d098ba34303c23cd2c" translate="yes" xml:space="preserve">
          <source>KDEMultivariate.cdf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00ce9a89179f298d0ab0394c2c991792152a5de0" translate="yes" xml:space="preserve">
          <source>KDEMultivariate.imse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7db175e98b2407320293adc2fe43006e5380906" translate="yes" xml:space="preserve">
          <source>KDEMultivariate.loo_likelihood()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="844889ac0e648f32dc83aa8b98c1d92f1ee6762c" translate="yes" xml:space="preserve">
          <source>KDEMultivariate.pdf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e728e82e4706bf4fbed400025fb4c9da7ab2097a" translate="yes" xml:space="preserve">
          <source>KDEMultivariateConditional.cdf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8464aff5d935470b4732af6be07f01b6dd27238c" translate="yes" xml:space="preserve">
          <source>KDEMultivariateConditional.imse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9666cdd2fee70ab44a727ea7db1048cf6d65beb6" translate="yes" xml:space="preserve">
          <source>KDEMultivariateConditional.loo_likelihood()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6e393600e8434873a6626d46b8b57cd70a32c66" translate="yes" xml:space="preserve">
          <source>KDEMultivariateConditional.pdf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8725c6809a0cd28363931d0957c8b18c8cb3dc12" translate="yes" xml:space="preserve">
          <source>KDEUnivariate.cdf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd1acbbe11978f1946457fb8908645ca5977566d" translate="yes" xml:space="preserve">
          <source>KDEUnivariate.cumhazard()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2955f820dbc719e2d876210acd282937e771a2c4" translate="yes" xml:space="preserve">
          <source>KDEUnivariate.entropy()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03c252ba761b554694db55854a387776236c5d4b" translate="yes" xml:space="preserve">
          <source>KDEUnivariate.evaluate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0be970de63285bf176e11387354345134a0a7112" translate="yes" xml:space="preserve">
          <source>KDEUnivariate.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="218967552ad48fd2fcfc7245fa23200b63e3e440" translate="yes" xml:space="preserve">
          <source>KDEUnivariate.icdf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0683aff729d3d2a36004069417f109ccf76e9fe6" translate="yes" xml:space="preserve">
          <source>KDEUnivariate.sf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f2e495662af55611b08808a8a6828d0eb98e69c" translate="yes" xml:space="preserve">
          <source>KY Liang and S Zeger. &amp;ldquo;Longitudinal data analysis using generalized linear models&amp;rdquo;. Biometrika (1986) 73 (1): 13-22.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae2f0c407ffa1879edcc0f50060d5321e62fc21c" translate="yes" xml:space="preserve">
          <source>K[i,j] = 1 if i == j or i == j + 2 K[i,j] = -2 if i == j + 1 K[i,j] = 0 otherwise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b457e5b60d302cf7c44180c3e8ab10de0b237d3" translate="yes" xml:space="preserve">
          <source>Kalman Filter code intended for use with the ARMA model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1725c7b2d7217ed41d0793cc54ebf7c415e77d58" translate="yes" xml:space="preserve">
          <source>Kalman filtering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c9f2f85ea8b26d9424d22339bcf915119f29b0c" translate="yes" xml:space="preserve">
          <source>Kalman gain matrices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4b749826e3ab879b183ed5efbf8b245b6517b29" translate="yes" xml:space="preserve">
          <source>Kalman smoothing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e3e49931adbc1eeb4dbe32fa00bb46051757a8" translate="yes" xml:space="preserve">
          <source>KalmanFilter.R()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="041cdf2e4b96bfe9ca06f4bb084e93d24d1aed3c" translate="yes" xml:space="preserve">
          <source>KalmanFilter.T()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="189f826f073d33146903f7c3c96a6b88f4956700" translate="yes" xml:space="preserve">
          <source>KalmanFilter.Z()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ca10ab1b11a2a393e04b37a0875fa9c31de5c66" translate="yes" xml:space="preserve">
          <source>KalmanFilter.bind()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="395b9d8730c5a7dd3f278016e39fdae496d745a1" translate="yes" xml:space="preserve">
          <source>KalmanFilter.filter()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44d09a838b2ee24209a15531a226ba500cebb46b" translate="yes" xml:space="preserve">
          <source>KalmanFilter.geterrors()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85357c0c5f93bd9c05f5a3ceacdd2d93aa4c0483" translate="yes" xml:space="preserve">
          <source>KalmanFilter.impulse_responses()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9ef0481e178c8b325d6db370fa7f154c75a7b5d" translate="yes" xml:space="preserve">
          <source>KalmanFilter.initialize_approximate_diffuse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edf9ba56062d4cc8ce678e9c9e56ce2fd55ce465" translate="yes" xml:space="preserve">
          <source>KalmanFilter.initialize_known()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c81315aa74d88160b226d468e593ce06ee5473c" translate="yes" xml:space="preserve">
          <source>KalmanFilter.initialize_stationary()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="245aeb00eb83759fba21496b809b910f4787f067" translate="yes" xml:space="preserve">
          <source>KalmanFilter.loglike()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e888b328dee1212eeb103bdfdd42c46e2a3caa8" translate="yes" xml:space="preserve">
          <source>KalmanFilter.loglikeobs()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14e96cabb3251dc6b1045cae433f7f8fac8dbf8c" translate="yes" xml:space="preserve">
          <source>KalmanFilter.set_conserve_memory()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d4fdff4663df8dfe4b2d78f820d95c81092b86f" translate="yes" xml:space="preserve">
          <source>KalmanFilter.set_filter_method()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a70fc54207db9f69befe7d46706d5fc39d62793" translate="yes" xml:space="preserve">
          <source>KalmanFilter.set_filter_timing()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdaab715e8a7d766912783621911e9095c1c1473" translate="yes" xml:space="preserve">
          <source>KalmanFilter.set_inversion_method()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b9b3bb8811a16063198d2e5b8818c05e4e13a5f" translate="yes" xml:space="preserve">
          <source>KalmanFilter.set_stability_method()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da1b3bfeb382680307eb6eeee7bf7e22b74c1b79" translate="yes" xml:space="preserve">
          <source>KalmanFilter.simulate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7f7bb6b887ece62c5459eff4194f2be89206c52" translate="yes" xml:space="preserve">
          <source>KalmanSmoother.bind()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="719d9b1b7ba5be910724d98ef8fa3a9199c7e5bb" translate="yes" xml:space="preserve">
          <source>KalmanSmoother.filter()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb868c825ee16988a09a8154566c5a6c0c414fdc" translate="yes" xml:space="preserve">
          <source>KalmanSmoother.impulse_responses()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="153b8ff6c35c2ef2df456d7daec00e3f8bc00f0f" translate="yes" xml:space="preserve">
          <source>KalmanSmoother.initialize_approximate_diffuse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b37537f0c62f5cfa23951395573c784a580f466f" translate="yes" xml:space="preserve">
          <source>KalmanSmoother.initialize_known()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87e1013999968d675a01bb71fcf6e1aa428d48c8" translate="yes" xml:space="preserve">
          <source>KalmanSmoother.initialize_stationary()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f939f011c75c1e3a85e12108b83d68a7450cbfba" translate="yes" xml:space="preserve">
          <source>KalmanSmoother.loglike()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1a6fce175164f677e52c9ac7e9b731d39069898" translate="yes" xml:space="preserve">
          <source>KalmanSmoother.loglikeobs()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad778937098b87a84724efea5ab5e2d5c75f850" translate="yes" xml:space="preserve">
          <source>KalmanSmoother.set_conserve_memory()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ca47b5b4123b8e0164a9beb8d7983ab0f8e6905" translate="yes" xml:space="preserve">
          <source>KalmanSmoother.set_filter_method()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f3f42b8a6ded2bcc5a3541bb08e795d97e5b343" translate="yes" xml:space="preserve">
          <source>KalmanSmoother.set_filter_timing()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df9a40534671126bca3991704fc605663a6d6a2c" translate="yes" xml:space="preserve">
          <source>KalmanSmoother.set_inversion_method()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73963c1596e5aff93d3a3386fb0a01e1ea77febf" translate="yes" xml:space="preserve">
          <source>KalmanSmoother.set_smooth_method()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3581b628300774d0f119ba9ccc777762af56539b" translate="yes" xml:space="preserve">
          <source>KalmanSmoother.set_smoother_output()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7aaa00197e2896a3e6c9819aa0c01f8e65adb74" translate="yes" xml:space="preserve">
          <source>KalmanSmoother.set_stability_method()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e89928226b3e6fa893944ccc665e0e8fc6b4e2e" translate="yes" xml:space="preserve">
          <source>KalmanSmoother.simulate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc2089bc61eadf7ec81893b17915bb4ad00a1cb1" translate="yes" xml:space="preserve">
          <source>KalmanSmoother.smooth()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc463d3fd9688cbbe73b831dbf32950e1ae58c45" translate="yes" xml:space="preserve">
          <source>Kenneth Lange: Numerical Analysis for Statisticians, page 40 (&lt;a href=&quot;http://books.google.ca/books?id=gm7kwttyRT0C&amp;amp;pg=PA40&amp;amp;lpg=PA40&amp;amp;dq=convert+cumulants+to+moments&amp;amp;source=web&amp;amp;ots=qyIaY6oaWH&amp;amp;sig=cShTDWl-YrWAzV7NlcMTRQV6y0A&amp;amp;hl=en&amp;amp;sa=X&amp;amp;oi=book_result&amp;amp;resnum=1&amp;amp;ct=result&quot;&gt;http://books.google.ca/books?id=gm7kwttyRT0C&amp;amp;pg=PA40&amp;amp;lpg=PA40&amp;amp;dq=convert+cumulants+to+moments&amp;amp;source=web&amp;amp;ots=qyIaY6oaWH&amp;amp;sig=cShTDWl-YrWAzV7NlcMTRQV6y0A&amp;amp;hl=en&amp;amp;sa=X&amp;amp;oi=book_result&amp;amp;resnum=1&amp;amp;ct=result&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1794dd0445cf0665650fb5446983f4ef8a3519d3" translate="yes" xml:space="preserve">
          <source>Kernel Density Estimation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdba84f3385a3d46f9c642605c0aff4f436abce6" translate="yes" xml:space="preserve">
          <source>Kernel density estimation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79ffafc88b30a1d2b8181098508a049510954fdf" translate="yes" xml:space="preserve">
          <source>Kernel density estimation is the process of estimating an unknown probability density function using a &lt;em&gt;kernel function&lt;/em&gt; $K(u)$. While a histogram counts the number of data points in somewhat arbitrary regions, a kernel density estimate is a function defined as the sum of a kernel function on every data point. The kernel function typically exhibits the following properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f54460c5a4412a26cc07e7e3b483dcbb13819e2" translate="yes" xml:space="preserve">
          <source>Kernel regression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4d5634fa714b2824096212e53fffd39a3eb9640" translate="yes" xml:space="preserve">
          <source>Kernel regression (as provided by &lt;code&gt;KernelReg&lt;/code&gt;) is based on the same product kernel approach as &lt;code&gt;KDEMultivariate&lt;/code&gt;, and therefore has the same set of features (mixed data, cross-validated bandwidth estimation, kernels) as described above for &lt;code&gt;KDEMultivariate&lt;/code&gt;. Censored regression is provided by &lt;code&gt;KernelCensoredReg&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f9b5e8ccbcbbde5d1f2f8c9f0eb379edc4eecea" translate="yes" xml:space="preserve">
          <source>KernelCensoredReg.aic_hurvich()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70793ae81bb51576e5eac37054736fa901b645ee" translate="yes" xml:space="preserve">
          <source>KernelCensoredReg.censored()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73178ff23436cdaf569d285902f97123caf106a0" translate="yes" xml:space="preserve">
          <source>KernelCensoredReg.cv_loo()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be260fcf8cf41b06b703b20a4871905d02deb057" translate="yes" xml:space="preserve">
          <source>KernelCensoredReg.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0528c2d8401d35a10fb54306805bc2e167281c08" translate="yes" xml:space="preserve">
          <source>KernelCensoredReg.loo_likelihood()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dcfc25e0da9c6d3d42ddd7d3a720784bba4ccad" translate="yes" xml:space="preserve">
          <source>KernelCensoredReg.r_squared()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="288467a8bcb89415d5d0b438a144a5a48f020790" translate="yes" xml:space="preserve">
          <source>KernelCensoredReg.sig_test()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8e18481104400725cf67dd6263b8deb564c822c" translate="yes" xml:space="preserve">
          <source>KernelReg.aic_hurvich()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5928d64ef30a6b008d4f9646b6d0b848d6a4b9b9" translate="yes" xml:space="preserve">
          <source>KernelReg.cv_loo()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eec43a5de838cd033dd6b353288e0ccade5f2af6" translate="yes" xml:space="preserve">
          <source>KernelReg.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5935337da9f357838d582995d7d4a1c6ff5372e0" translate="yes" xml:space="preserve">
          <source>KernelReg.loo_likelihood()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56747531ae8842e95e24ef6b9b7cf0ca5936e174" translate="yes" xml:space="preserve">
          <source>KernelReg.r_squared()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c27fc680f21ccba2c629f0970efcda551a3c5d6e" translate="yes" xml:space="preserve">
          <source>KernelReg.sig_test()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb160db882eb6a6c1082c4f9239e1209b9148412" translate="yes" xml:space="preserve">
          <source>Kernels (used by the fit method):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9261089c44641de8d13e3a617d495ed425930fb0" translate="yes" xml:space="preserve">
          <source>Keywords: Least Absolute Deviation(LAD) Regression, Quantile Regression, Regression, Robust Estimation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceaf4a09cc5c80947c0206edd3be2700d23a26dc" translate="yes" xml:space="preserve">
          <source>Kim, Chang-Jin, and Charles R. Nelson. 1999. &amp;ldquo;State-Space Models with Regime Switching: Classical and Gibbs-Sampling Approaches with Applications&amp;rdquo;. MIT Press Books. The MIT Press.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33002b11361a734b0683c70cae3ee6338f13b31d" translate="yes" xml:space="preserve">
          <source>Kim, Nelson, and Startz (1998) Three-state Variance Switching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75848bc0124a9fedaaeafa927c2621d379c2cd47" translate="yes" xml:space="preserve">
          <source>Known Change Point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7db58a663e0faaf136f40c05a90ce9a89d4ecba4" translate="yes" xml:space="preserve">
          <source>Koenker, R. (2005). Quantile Regression. New York: Cambridge University Press.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc0f3fab58665ba118596eb86b5807569d9267f1" translate="yes" xml:space="preserve">
          <source>Koenker, Roger and Kevin F. Hallock. &quot;Quantile Regressioin&quot;. Journal of Economic Perspectives, Volume 15, Number 4, Fall 2001, Pages 143&amp;ndash;156</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a9c0aa43df536e1c599c2d6daea7bd65d843f18" translate="yes" xml:space="preserve">
          <source>Kolmogorov Smirnov test with estimated mean and variance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d03a69c5f0eb581e6317085f375f70df53b3184" translate="yes" xml:space="preserve">
          <source>Koopman, Siem Jan, Neil Shephard, and Jurgen A. Doornik. 1999. Statistical Algorithms for Models in State Space Using SsfPack 2.2. Econometrics Journal 2 (1): 107-60. doi:10.1111/1368-423X.00023.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="352de57d8e79eb9b19ea74b6c2f72758d48fdfbb" translate="yes" xml:space="preserve">
          <source>Kwiatkowski-Phillips-Schmidt-Shin test for stationarity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3af38f1aa1c87cbdbddd2d88e28b94542a4b6d8" translate="yes" xml:space="preserve">
          <source>L * params * M = 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bddfb019377744e345c976ae329d61a7308aae6" translate="yes" xml:space="preserve">
          <source>L * params * M = C</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0596243dfde4b1b7173b539980c613694dbbccd2" translate="yes" xml:space="preserve">
          <source>L&amp;uuml;tkepohl (2005) Appendix D</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fb9793a7109209f4308eabb6046927ad43420ed" translate="yes" xml:space="preserve">
          <source>L&amp;uuml;tkepohl (2005) New Introduction to Multiple Time Series Analysis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="132e08a2d2e18cb06352e4d26a7c6db781cee5c9" translate="yes" xml:space="preserve">
          <source>L&amp;uuml;tkepohl Proposition 3.3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55432eaf45f21e21e881ee6a600aaf0e94cbc5dc" translate="yes" xml:space="preserve">
          <source>L&amp;uuml;tkepohl eq 3.7.5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="088f50546d733db5fcae0ea3b87c117197dfc81d" translate="yes" xml:space="preserve">
          <source>L&amp;uuml;tkepohl eq. 2.1.23</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b4c65c3ed4106a2131e6cac64e68d3c6e4c94d7" translate="yes" xml:space="preserve">
          <source>L&amp;uuml;tkepohl pp 37-38</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="208894c1c02bee7427d6ad9291467c52ca4498c3" translate="yes" xml:space="preserve">
          <source>L&amp;uuml;tkepohl pp. 146-153</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50ae2d37495880606c950fb00cbdcf12025fcd0b" translate="yes" xml:space="preserve">
          <source>L&amp;uuml;tkepohl pp. 39-40</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a93a57c1d0d8e1946b02581e764125f79e0b714" translate="yes" xml:space="preserve">
          <source>L&amp;uuml;tkepohl, H. 2005. &lt;em&gt;New Introduction to Multiple Time Series Analysis&lt;/em&gt;. Springer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="051a2ae62be045c1a8c8120cbd4e23974e4c0ebb" translate="yes" xml:space="preserve">
          <source>L&amp;uuml;tkepohl, Helmut. 2007. &lt;em&gt;New Introduction to Multiple Time&lt;/em&gt;&lt;em&gt;Series Analysis.&lt;/em&gt; Berlin: Springer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d59ed3bea1bf4d152d29bddb2d412261e75c6838" translate="yes" xml:space="preserve">
          <source>L&amp;uuml;tkepohl, Helmut. 2007. New Introduction to Multiple Time Series Analysis. Berlin: Springer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f56660948e2afbfa9e0d10d57eeeca890df31cc5" translate="yes" xml:space="preserve">
          <source>L.reverse() &amp;ndash; reverse &lt;em&gt;IN PLACE&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27fd0c93630ec1dc9481a1d15ad5163b6cd82acf" translate="yes" xml:space="preserve">
          <source>LA Mancl LA, TA DeRouen (2001). A covariance estimator for GEE with improved small-sample properties. Biometrics. 2001 Mar;57(1):126-34.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe116ac9efabd17c64a58132fb8fa6790dcf4cd5" translate="yes" xml:space="preserve">
          <source>LOWESS (Locally Weighted Scatterplot Smoothing)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d5b6c2de69a455c87ca025efad6834b8b6367fe" translate="yes" xml:space="preserve">
          <source>LOWINC</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f72d2ce1076eb36f32745d238557c6690ccd143" translate="yes" xml:space="preserve">
          <source>Labels lower in the hierarchy are recycled, so that student 0 in classroom 0 is different fro student 0 in classroom 1, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ba70b43fab95094b53800943dea7c6c5af6eb1b" translate="yes" xml:space="preserve">
          <source>Lag order selection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37fe91cd47c15ed50f349e4afdfc58182ef0993" translate="yes" xml:space="preserve">
          <source>LagOrderResults</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01b5e3d61d8ba731e100c201383f76af06d58f78" translate="yes" xml:space="preserve">
          <source>LagOrderResults.summary()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e801d51e8198b3fe799e07f448685ab1f8de5c0" translate="yes" xml:space="preserve">
          <source>Lagrange Multiplier Heteroscedasticity Test by Breusch-Pagan</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fec6e1e98dc58caec5603da9fa3ae368aed4d9d5" translate="yes" xml:space="preserve">
          <source>Lagrange Multiplier Heteroscedasticity Test by White</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="805002857d30bc7acb035331bd5560675889d271" translate="yes" xml:space="preserve">
          <source>Lagrange Multiplier test for Null hypothesis that linear specification is correct. This tests against specific functional alternatives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c115b972c0d09da4f89bbf76247b96b5d7667cb6" translate="yes" xml:space="preserve">
          <source>Lagrange multiplier test for linearity against functional alternative</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="345982c8bbad59b5ad7b5a277647c1718d5808f0" translate="yes" xml:space="preserve">
          <source>Lays out the methods expected of the robust norms to be used by statsmodels.RLM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="788009964296387aad0bc2f034ad7ceb42246da7" translate="yes" xml:space="preserve">
          <source>LeSage, J. P.(1999). Applied Econometrics Using MATLAB,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="890cf2a98ecb2a1c04fc21bbb7febc64871cd4fe" translate="yes" xml:space="preserve">
          <source>Least Absolute Deviation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="124a41eee7a1f6f56026bdb7cae1f161076dfbae" translate="yes" xml:space="preserve">
          <source>Least Squares</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e023bbdd9822720bb2e64b27626085c067f2a043" translate="yes" xml:space="preserve">
          <source>Least squares rho for M-estimation and its derived functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb95b054b81affc36c3bfe00c36e037d4f050b53" translate="yes" xml:space="preserve">
          <source>Least trimmed mean weighting function for the IRLS algorithm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee54963004031c04397f110028d47ab990db07af" translate="yes" xml:space="preserve">
          <source>LeastSquares.psi()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87912a30590c5621168197a4710b7562d8c2738d" translate="yes" xml:space="preserve">
          <source>LeastSquares.psi_deriv()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bc02fd79f128f2a65059cf27ebf49c236e57a6e" translate="yes" xml:space="preserve">
          <source>LeastSquares.rho()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b1aaef08a7f585f12a2907972cf5a0b4409904d" translate="yes" xml:space="preserve">
          <source>LeastSquares.weights()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b119afb35493810c91f7ceffba6c0e6a876b6dd" translate="yes" xml:space="preserve">
          <source>Left hand side transform matrix. If &lt;code&gt;None&lt;/code&gt; or left out, it is set to a k_endog by k_endog identity matrix (i.e. do not transform y matrix). If an array of strings, it will be passed to patsy.DesignInfo().linear_constraint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b8726b46014d3882537e982d3a5414a4b539d9a" translate="yes" xml:space="preserve">
          <source>Left-hand side contrast matrix for hypotheses testing. If 2D array, each row is an hypotheses and each column is an independent variable. At least 1 row (1 by k_exog, the number of independent variables) is required. If an array of strings, it will be passed to patsy.DesignInfo().linear_constraint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8774b768c169a6bfa68d28ad52972661a114cdc" translate="yes" xml:space="preserve">
          <source>Let &lt;code&gt;n = k_endog&lt;/code&gt;, &lt;code&gt;m = k_factors&lt;/code&gt;, and &lt;code&gt;p = factor_order&lt;/code&gt;. Then the &lt;code&gt;params&lt;/code&gt; vector has length \([n imes m] + [n] + [m^2 imes p]\). It is expanded in the following way:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6e8ff770aca9336a9f31eb95a44c8a1be7f792a" translate="yes" xml:space="preserve">
          <source>Let's assume that the data is heteroskedastic and that we know the nature of the heteroskedasticity. We can then define &lt;code&gt;sigma&lt;/code&gt; and use it to give us a GLS model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72d2ae24194bbd670bee2256d498122c7a090095" translate="yes" xml:space="preserve">
          <source>Let's delete that line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8b8f1922653eb7b2cb4f45cfbedd9efc612a9d0" translate="yes" xml:space="preserve">
          <source>Let's make sure this model is estimable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c7f5d049fad2569721d446c4a811f9bd5da5393" translate="yes" xml:space="preserve">
          <source>Level</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b424910d4dde1d56300bf46a9dc59d48f3be5331" translate="yes" xml:space="preserve">
          <source>Leverage-Resid&lt;sup&gt;2&lt;/sup&gt; Plot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5c6ba6fa6d088b89a2a39813fd8e21ea1133106" translate="yes" xml:space="preserve">
          <source>Levin, Bruce, &amp;ldquo;A representation for multinomial cumulative distribution functions,&amp;rdquo; The Annals of Statistics, Vol. 9, No. 5, 1981, pp. 1123-1126.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4db75a3fae84a53bd4e4dd68a504a8f43c4aa662" translate="yes" xml:space="preserve">
          <source>Levinson-Durbin recursion for autoregressive processes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c703ab918105e1071f22d80ba2eff89f635b1e04" translate="yes" xml:space="preserve">
          <source>Li, Q., Racine, J. &amp;ldquo;Cross-validated local linear nonparametric regression&amp;rdquo; Statistica Sinica 14(2004), pp. 485-512</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ecb66e53f544cf513833fd36e85d0b88b60f520" translate="yes" xml:space="preserve">
          <source>Li, R., Ju, G. &amp;ldquo;Nonparametric Estimation of Multivariate CDF with Categorical and Continuous Data.&amp;rdquo; Working Paper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="538c09161b8497f998404cafc34964ed3a445575" translate="yes" xml:space="preserve">
          <source>Licensed under the 3-clause BSD License.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63469cbe3289679982acad7e344db3151adccf95" translate="yes" xml:space="preserve">
          <source>Like ,&lt;code&gt;w&lt;/code&gt;, &lt;code&gt;w_est&lt;/code&gt; is proportional to the standard deviation, and so must be squared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a45bced4062cd6dcf10511e77e6c1e309bcb053" translate="yes" xml:space="preserve">
          <source>Like Treatment Coding, Simple Coding compares each level to a fixed reference level. However, with simple coding, the intercept is the grand mean of all the levels of the factors. Patsy doesn't have the Simple contrast included, but you can easily define your own contrasts. To do so, write a class that contains a code_with_intercept and a code_without_intercept method that returns a patsy.contrast.ContrastMatrix instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4892f80afb4018b19dd98f78844718f08d80c784" translate="yes" xml:space="preserve">
          <source>Like Treatment Coding, Simple Coding compares each level to a fixed reference level. However, with simple coding, the intercept is the grand mean of all the levels of the factors. See &lt;a href=&quot;#user-defined&quot;&gt;User-Defined Coding&lt;/a&gt; for how to implement the Simple contrast.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5cd7757525439a8f4c6c94ca80b7d11488e447e" translate="yes" xml:space="preserve">
          <source>Likelihood ratio test to test whether restricted model is correct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47f3f423239c7d7e71c595a2f0befa2f143ea59b" translate="yes" xml:space="preserve">
          <source>Likelihood used depends on the method set in fit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="927d89c734fd782d6a4ab3555b3b5c85ecf4f205" translate="yes" xml:space="preserve">
          <source>Lilliefors test for normality or an exponential distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a5b6ec97930ec7b78fefdbcda5171c4df6d1876" translate="yes" xml:space="preserve">
          <source>Lilliefors test for normality, this is a Kolmogorov-Smirnov tes with for normality with estimated mean and variance. lilliefors is an alias for kstest_normal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efdb51ec7790d1206fcd5d375ecdb6c753d52a38" translate="yes" xml:space="preserve">
          <source>Limiting the number of factors returned to 1 computed using NIPALS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c2564a70597074354dd70aff1a079d616582da" translate="yes" xml:space="preserve">
          <source>Linear Mixed Effects Models</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c31442f154de2714e651dfd3a25a6cd55457ff62" translate="yes" xml:space="preserve">
          <source>Linear Mixed Effects models are used for regression analyses involving dependent data. Such data arise when working with longitudinal and other study designs in which multiple observations are made on each subject. Some specific linear mixed effects models are</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c422fbc184bfee952fa1fec2e1e5c0de04686e99" translate="yes" xml:space="preserve">
          <source>Linear Mixed-Effects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5ae0ac549e6c8ee5cd031e00267684bbcee146a" translate="yes" xml:space="preserve">
          <source>Linear Model with t-distributed errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20efa308d701cc0bd2d6e0fa8a922d0f7ac8c418" translate="yes" xml:space="preserve">
          <source>Linear Probability Model (OLS)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0011259a8aed72402fcd6537a5a71d10560a3a8e" translate="yes" xml:space="preserve">
          <source>Linear Regression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79ca905ec331d61e3c41576244dc2f9154eeacc6" translate="yes" xml:space="preserve">
          <source>Linear Regression Models</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9a487a98115f395978d5b441104b2007d86b15a" translate="yes" xml:space="preserve">
          <source>Linear filtering via convolution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f92a30570710fc2f42f7c99c66ba5318dc75b0d" translate="yes" xml:space="preserve">
          <source>Linear filtering via convolution. Centered and backward displaced moving weighted average.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cb864fc0939351859c184aed6a6c99f932cdeb9" translate="yes" xml:space="preserve">
          <source>Linear hypotheses testing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be416b8b5eba489174719aeecc1ebfa05d1b3485" translate="yes" xml:space="preserve">
          <source>Linear models with independently and identically distributed errors, and for errors with heteroscedasticity or autocorrelation. This module allows estimation by ordinary least squares (OLS), weighted least squares (WLS), generalized least squares (GLS), and feasible generalized least squares with autocorrelated AR(p) errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72c0ca23b56b6c5e58f4d63578fc1ab688fbaf33" translate="yes" xml:space="preserve">
          <source>Linear predictors based on given mu values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e7ca144a65d8582330d37d289354cdbc2514f3b" translate="yes" xml:space="preserve">
          <source>LinearIVGMM.calc_weightmatrix()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4e3cbb27fe6ed544fee195bd1f1156bc9239f87" translate="yes" xml:space="preserve">
          <source>LinearIVGMM.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23c11844326f270e41db800f202a6cb7594eaa1f" translate="yes" xml:space="preserve">
          <source>LinearIVGMM.fitgmm()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="756b8613ea9ff583dae1d9ac114f994e5db43744" translate="yes" xml:space="preserve">
          <source>LinearIVGMM.fitgmm_cu()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3daffdb490d9e642bb93fdb5aa9d6b1b5d21b003" translate="yes" xml:space="preserve">
          <source>LinearIVGMM.fititer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51ca379292a7f3900913703db1a10a68e9426018" translate="yes" xml:space="preserve">
          <source>LinearIVGMM.fitstart()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ef0ba83a517e55f201b11231ba28316bc3ad5f" translate="yes" xml:space="preserve">
          <source>LinearIVGMM.from_formula()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd7f7b209c8d16f9293945361929542f26c3e3f" translate="yes" xml:space="preserve">
          <source>LinearIVGMM.get_error()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53cd86b7baa2f804d8b25da07357b3cee4dea6dc" translate="yes" xml:space="preserve">
          <source>LinearIVGMM.gmmobjective()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d46abc40d785bd2133b5c5686380c9da5027bc" translate="yes" xml:space="preserve">
          <source>LinearIVGMM.gmmobjective_cu()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="504ce99bdbec1dfb7128e1d9fd69b49ab72ef0e1" translate="yes" xml:space="preserve">
          <source>LinearIVGMM.gradient_momcond()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e2687260b6badfe6a1402e3cb373f00d62cb911" translate="yes" xml:space="preserve">
          <source>LinearIVGMM.momcond()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c5ab336641b5f4ab83b559cf8d16065d1655365" translate="yes" xml:space="preserve">
          <source>LinearIVGMM.momcond_mean()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d282c6e20dcc81627958148ea39a40b595d9086a" translate="yes" xml:space="preserve">
          <source>LinearIVGMM.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a65f0c91d9855dda716838d4f1423e1b5c6c0b52" translate="yes" xml:space="preserve">
          <source>LinearIVGMM.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b7251cf40dfbe8cdd5832c5d2cc4f73cb7807b" translate="yes" xml:space="preserve">
          <source>LinearIVGMM.score_cu()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21695f8a169a0cd88aca77edfb9eb6215064f8f9" translate="yes" xml:space="preserve">
          <source>LinearIVGMM.set_param_names()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d944592d5919c6e5a66296855fc44c2537b78a3e" translate="yes" xml:space="preserve">
          <source>LinearIVGMM.start_weights()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78fe5ef97aff4d50ac34ee5c42902f7369f5a00b" translate="yes" xml:space="preserve">
          <source>Linearity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9da3c8f67a67c631c3dfb525fc04687181b8e30" translate="yes" xml:space="preserve">
          <source>Link Function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6e93fb941e12c30a2dfb4b57afd4765449a111" translate="yes" xml:space="preserve">
          <source>Link Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2912efe65e61140cbfd9c480585ee659d1e39cdd" translate="yes" xml:space="preserve">
          <source>Link.deriv()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1e40fcaa7f62c64cf529d8df04c459ef93e38c8" translate="yes" xml:space="preserve">
          <source>Link.deriv2()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acf3732629f48fbad70e66611aece598e3bf22d3" translate="yes" xml:space="preserve">
          <source>Link.inverse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f345fd7a59566b287ec9935a742de8d5211c2c2a" translate="yes" xml:space="preserve">
          <source>Link.inverse_deriv()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83ad8510bbd3f22363d068e1c96f82fd0fcccd31" translate="yes" xml:space="preserve">
          <source>Linux</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3d606e2d038023e9a755dc045f107375ce2c542" translate="yes" xml:space="preserve">
          <source>List of human readable parameter names (for parameters actually included in the model).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85736660cdd03529f444a81ef004f33b0c6d60a8" translate="yes" xml:space="preserve">
          <source>List of parameters actually included in the model, in sorted order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60e14e8bf2af7d1f7255d9d2b01421b6fdbef780" translate="yes" xml:space="preserve">
          <source>Literacy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bde902d0ca733bc694504de32e0b1be5ef485836" translate="yes" xml:space="preserve">
          <source>Liu, R., Yang, L. &amp;ldquo;Kernel estimation of multivariate cumulative distribution function.&amp;rdquo; Journal of Nonparametric Statistics (2008)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23639ec6bb82a168fb4ea6f0f6c2ca2221062286" translate="yes" xml:space="preserve">
          <source>Ljung-Box and Box-Pierce statistic differ in their scaling of the autocorrelation function. Ljung-Box test is reported to have better small sample properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c97679251831f79c7a4f9f59623e71c2e501644f" translate="yes" xml:space="preserve">
          <source>Ljung-Box test for no autocorrelation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ebeb25e9e2432cf94005bf66c72290b4ed34f61" translate="yes" xml:space="preserve">
          <source>Ljung-Box test for no autocorrelation of residuals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5f0588ac72b6cbd6ee9a19105e7a8e2925ac82b" translate="yes" xml:space="preserve">
          <source>Ljung-box test for no serial correlation of standardized residuals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f68e3c7ebcb2fce15ce38ca4890dd8ae9a9090d" translate="yes" xml:space="preserve">
          <source>Load a previously saved object from file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eecc500aaffb48ce31abd353df4bf131caaed69" translate="yes" xml:space="preserve">
          <source>Load data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b37fbf412d2c536d906388242e0f2a43288c585" translate="yes" xml:space="preserve">
          <source>Load data from Spector and Mazzeo (1980). Examples follow Greene's Econometric Analysis Ch. 21 (5th Edition).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8423523c563d47c30a350cf62332d3a521819d83" translate="yes" xml:space="preserve">
          <source>Load data from the American National Election Studies:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d5de3a7ea03e708da0e59952fb49e603ba3cb6c" translate="yes" xml:space="preserve">
          <source>Load data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49aa5395d3a45b4107d879c23962ed077fbbdd0e" translate="yes" xml:space="preserve">
          <source>Load relevant libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a39c852077bf063543ce00f643ab77346cfb24bd" translate="yes" xml:space="preserve">
          <source>Load the Data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db26df2dfd43c66656f3c24f1cabb34b241fd026" translate="yes" xml:space="preserve">
          <source>Load the El Nino dataset. Consists of 60 years worth of Pacific Ocean sea surface temperature data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67deb103abe94b10e2c9486315127d16744ad4a5" translate="yes" xml:space="preserve">
          <source>Load the Rand data. Note that this example is similar to Cameron and Trivedi's &lt;code&gt;Microeconometrics&lt;/code&gt; Table 20.5, but it is slightly different because of minor changes in the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9db4e01a8602aa5eb538f9d7f5ba8ea0ea0b4ffd" translate="yes" xml:space="preserve">
          <source>Load the Statewide Crime data set and perform linear regression with &lt;code&gt;poverty&lt;/code&gt; and &lt;code&gt;hs_grad&lt;/code&gt; as variables and &lt;code&gt;murder&lt;/code&gt; as the response</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c83b1a4d4cea13a8f62d6b6ff8008454c778b98" translate="yes" xml:space="preserve">
          <source>Load the data and add a constant to the exogenous (independent) variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="808672e3bfcf260987ffed0fdebb0629dae1981e" translate="yes" xml:space="preserve">
          <source>Load the data and add a constant to the exogenous variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c8b47dc738db7b1e847d62bda6d52ff5cb02ce8" translate="yes" xml:space="preserve">
          <source>Loading modules and functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d84302fc4e61020862b57105c551b10c4bbb53f" translate="yes" xml:space="preserve">
          <source>Local Level</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869a1bbd83faa70f1f121db4c96573fb875e0727" translate="yes" xml:space="preserve">
          <source>Local level</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b086b79ba756d5972e4a50769e1250d4e68035" translate="yes" xml:space="preserve">
          <source>Local level with deterministic trend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b49061d17ef33373399ba5abe15b74baaaf74048" translate="yes" xml:space="preserve">
          <source>Local linear deterministic trend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a376b26aee67a204a7c4896ac5560fa7ad85cf7" translate="yes" xml:space="preserve">
          <source>Local linear trend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd869241f12a177938c8c32f956d0ef946933e45" translate="yes" xml:space="preserve">
          <source>Local linear trend (the &quot;unrestricted&quot; model)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0995806a3a79d8b16e84b27d0a21565cf8070b3" translate="yes" xml:space="preserve">
          <source>Log Likelihood</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bded1bccedb9667e6a0a7c0dfe5f2716a6cad14" translate="yes" xml:space="preserve">
          <source>Log of the cumulative distribution function at x of the given RV.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cef86cf3b731eb9f0ec1cb49adfc5180fb6a1c5" translate="yes" xml:space="preserve">
          <source>Log of the probability density function at x of the given RV.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="589283796713c0540ddefec951234efa1ded4459" translate="yes" xml:space="preserve">
          <source>Log of the survival function of the given RV.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c94a1630294f6e8f1baadda8dc8104286db12ac2" translate="yes" xml:space="preserve">
          <source>Log-Likelihood:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0993314c53eadfb66b792bbf166b097f934f4f8" translate="yes" xml:space="preserve">
          <source>Log-likelihood of logit model for each observation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="511f5f600a67e5e172e305d2f71b86b52e8399f9" translate="yes" xml:space="preserve">
          <source>Log-likelihood of logit model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c5569a7504a485f3f28ccde7679924b3b790c5b" translate="yes" xml:space="preserve">
          <source>Log-likelihood of model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb718404cd311f183d67851f6ab42f879245f81" translate="yes" xml:space="preserve">
          <source>Log-likelihood of probit model (i.e., the normal distribution).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da0cf877be48f9eb738822e459439ff29b43fc1d" translate="yes" xml:space="preserve">
          <source>Log-likelihood of probit model for each observation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8e884fa28948896a5541b04665c931ecee24eaf" translate="yes" xml:space="preserve">
          <source>Log-likelihood of the multinomial logit model for each observation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bab4dbb9408c8bf178c82d6c487f59722c9ae6cc" translate="yes" xml:space="preserve">
          <source>Log-likelihood of the multinomial logit model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4514263d161c09fa4790463b634d3337b4ea332b" translate="yes" xml:space="preserve">
          <source>Log-likelihood type. &amp;lsquo;nb2&amp;rsquo;,&amp;rsquo;nb1&amp;rsquo;, or &amp;lsquo;geometric&amp;rsquo;. Fitted value \(\mu\) Heterogeneity parameter \(\alpha\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="084f58bfbfb698c4941424f21c7fcb164bd9e376" translate="yes" xml:space="preserve">
          <source>Log.deriv()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18958f4f826721c748ba3cb3f1b586d9ffc0c8fc" translate="yes" xml:space="preserve">
          <source>Log.deriv2()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d82847238667b7495ef0c0ba5f392bc63400886c" translate="yes" xml:space="preserve">
          <source>Log.inverse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ff3feaf3efa43bc4fed25299617181079fff748" translate="yes" xml:space="preserve">
          <source>Log.inverse_deriv()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f1e782094d5010e2398567990c261e6f0c4b6ed" translate="yes" xml:space="preserve">
          <source>LogTransf_gen.cdf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32ca30163b4991ffc556fc662fae4cf5a44e4a79" translate="yes" xml:space="preserve">
          <source>LogTransf_gen.entropy()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92eb7e71209fd312885843121382d8b182204a12" translate="yes" xml:space="preserve">
          <source>LogTransf_gen.expect()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42be2000fab945b6ab0b73b66255f99a962d462c" translate="yes" xml:space="preserve">
          <source>LogTransf_gen.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9a4e05eebe39029babedbf8449e509b6a47dd57" translate="yes" xml:space="preserve">
          <source>LogTransf_gen.fit_loc_scale()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d6da191a0d644f8064c22445c91e1a943af4ea1" translate="yes" xml:space="preserve">
          <source>LogTransf_gen.freeze()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c127080dfb7b757d55c904dae471cc12f39bf7bc" translate="yes" xml:space="preserve">
          <source>LogTransf_gen.interval()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba099c571e611e80e3beed502ffe155d43099a95" translate="yes" xml:space="preserve">
          <source>LogTransf_gen.isf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f95497bcdc40a6a83d2773d5c2488108b746a04e" translate="yes" xml:space="preserve">
          <source>LogTransf_gen.logcdf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc6f4b9e0b13e8125b0f3e2a8ecf1462b2d8ec5" translate="yes" xml:space="preserve">
          <source>LogTransf_gen.logpdf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c485729e23910f670f2c7fce079f9cff7bafb600" translate="yes" xml:space="preserve">
          <source>LogTransf_gen.logsf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7ea51525481540b7446284a226cb683bd9b57d4" translate="yes" xml:space="preserve">
          <source>LogTransf_gen.mean()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef74f673bcec068ec673451e1b7347b5ab81970e" translate="yes" xml:space="preserve">
          <source>LogTransf_gen.median()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c68f0886e8f7c3d4a914529246ed6d754a9df37" translate="yes" xml:space="preserve">
          <source>LogTransf_gen.moment()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b72a0a04baa2c2c278dc1a8b5359d10da9308813" translate="yes" xml:space="preserve">
          <source>LogTransf_gen.nnlf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130eb7a5fc29dc3514c38a81a676bd0f5f4ae196" translate="yes" xml:space="preserve">
          <source>LogTransf_gen.pdf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14407db315d8ac3ec42250d717f21147a3c09089" translate="yes" xml:space="preserve">
          <source>LogTransf_gen.ppf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47641fe20f0ee36b082359db686a970c271b64aa" translate="yes" xml:space="preserve">
          <source>LogTransf_gen.rvs()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbf592747666d7223e4192d8ea469dbd6de66b47" translate="yes" xml:space="preserve">
          <source>LogTransf_gen.sf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d252a74f54d367aebd3cf08d405e8574460ce98" translate="yes" xml:space="preserve">
          <source>LogTransf_gen.stats()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ceb09224bff255eb30569e4438f2cdf4e9ea03" translate="yes" xml:space="preserve">
          <source>LogTransf_gen.std()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f96d8cf07993f323a9a8782ffc61a86a4e7e36dd" translate="yes" xml:space="preserve">
          <source>LogTransf_gen.var()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e5a96717101a31a1a919d51a512f32c0d6a47bb" translate="yes" xml:space="preserve">
          <source>Logistic regression with autoregressive working dependence:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c91b8e14e9db09714a2e2f4f3500980ac424e82c" translate="yes" xml:space="preserve">
          <source>Logit Model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0aa4ca292a74425f32c11f54a9807dc83ee8d83" translate="yes" xml:space="preserve">
          <source>Logit model Hessian matrix of the log-likelihood</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d1d6ab083ed673062858f4cdb3915507778f8d" translate="yes" xml:space="preserve">
          <source>Logit model Jacobian of the log-likelihood for each observation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cc6ac33b4bd66604edf2b8f80f14aba3c2a6afd" translate="yes" xml:space="preserve">
          <source>Logit model score (gradient) vector of the log-likelihood</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ddc8ca6b458ea90210c0ed7862cef7b4d7f3e81" translate="yes" xml:space="preserve">
          <source>Logit.cdf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c4829792c2eb66e6d7b56532c20d6999300fe78" translate="yes" xml:space="preserve">
          <source>Logit.cov_params_func_l1()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e43410cc60047fea43c1148eac4338bbf0a2beb9" translate="yes" xml:space="preserve">
          <source>Logit.deriv()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeac5c93c54889733f084a2282b3abe909886a95" translate="yes" xml:space="preserve">
          <source>Logit.deriv2()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bae45dcde778d7539c77953f2fc6f37a414c0ba" translate="yes" xml:space="preserve">
          <source>Logit.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d9938e1861f3df5aa9ebf9cad60e71ade9deb2d" translate="yes" xml:space="preserve">
          <source>Logit.fit_regularized()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec7de366bf7326dade5267466fcbd1fe2a0d69ac" translate="yes" xml:space="preserve">
          <source>Logit.from_formula()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3478f6f63263172ac2816c43eaa8319d4e6d3914" translate="yes" xml:space="preserve">
          <source>Logit.hessian()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7435e62b584872dae72633e2bd9a47a9bbeeeae1" translate="yes" xml:space="preserve">
          <source>Logit.information()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="673fb8812e147d80550776700518f8108a48f63b" translate="yes" xml:space="preserve">
          <source>Logit.initialize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c2c0f46ee20eee30c85bf6483b1bc8fec33d65d" translate="yes" xml:space="preserve">
          <source>Logit.inverse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d5c53726b230041da5ed0d51bc311ab90d07b72" translate="yes" xml:space="preserve">
          <source>Logit.inverse_deriv()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c52492850ec0b93ace427ddd7d6dca02ad49651a" translate="yes" xml:space="preserve">
          <source>Logit.loglike()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f03c550c91b56681d8bb408b67dd3f5140507abd" translate="yes" xml:space="preserve">
          <source>Logit.loglikeobs()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b12768d509c397364eed481d85c3533429c0cf5" translate="yes" xml:space="preserve">
          <source>Logit.pdf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ede8218d8880d83da25182e2b3972f2d6a8304c4" translate="yes" xml:space="preserve">
          <source>Logit.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="577d7922410adeca3b314c555076e88a1281c05e" translate="yes" xml:space="preserve">
          <source>Logit.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebe172fc5cf2c435bfdd699f8210be0ed49ec4ed" translate="yes" xml:space="preserve">
          <source>Logit.score_obs()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e2af7b7e9a5f3aac68c047ad7686b3239766cc2" translate="yes" xml:space="preserve">
          <source>LogitResults.aic()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="640c97d468581fdccf5b05dfeb4b8bdd0a484318" translate="yes" xml:space="preserve">
          <source>LogitResults.bic()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a25b647ab77d4ee8daa26c7002264cc92af1191f" translate="yes" xml:space="preserve">
          <source>LogitResults.bse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb1db0fa689eeb9089df8f54e68e4adeb04bbe59" translate="yes" xml:space="preserve">
          <source>LogitResults.conf_int()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d1f29640355a11f8ee5f9ff36e8d36674c8167" translate="yes" xml:space="preserve">
          <source>LogitResults.cov_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e66ab29331551158e3ad6f4b3be4c159902ec16a" translate="yes" xml:space="preserve">
          <source>LogitResults.f_test()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca200b87598b45ef04a6876e594879688bdb1ea4" translate="yes" xml:space="preserve">
          <source>LogitResults.fittedvalues()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cde204d9b5cc52c46649a57ab6e535c9bcc1e38e" translate="yes" xml:space="preserve">
          <source>LogitResults.get_margeff()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a14c071c6fb868924423fc0dd0ae5f3fa426fb7c" translate="yes" xml:space="preserve">
          <source>LogitResults.initialize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2b6807c661caa00954af829178812fa288e34bf" translate="yes" xml:space="preserve">
          <source>LogitResults.llf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d445073f8dadaa9820ee62d8c327f5f08697a9b" translate="yes" xml:space="preserve">
          <source>LogitResults.llnull()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0f700da77f4265032264b7fe496b9cf2dbce8da" translate="yes" xml:space="preserve">
          <source>LogitResults.llr()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18aba58a75a205370e197dca07f0839614a1c70e" translate="yes" xml:space="preserve">
          <source>LogitResults.llr_pvalue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f0185268d422024d5c3d274a609f41385e73929" translate="yes" xml:space="preserve">
          <source>LogitResults.load()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63555e955e3244ee884c033f2452764869646fe3" translate="yes" xml:space="preserve">
          <source>LogitResults.normalized_cov_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d540a3bf3a022dfda4ef319c3cb651b8935da9a1" translate="yes" xml:space="preserve">
          <source>LogitResults.pred_table()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b9242073111a7fd78225e2f2b134f0842c83b94" translate="yes" xml:space="preserve">
          <source>LogitResults.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6e62f962fb8c9302faf876aee744096c813f314" translate="yes" xml:space="preserve">
          <source>LogitResults.prsquared()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de68f9659bbaa296629cf1721ddcdbab0470559" translate="yes" xml:space="preserve">
          <source>LogitResults.pvalues()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2180816724726674a98615ed3ed9ff35293cb13d" translate="yes" xml:space="preserve">
          <source>LogitResults.remove_data()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e65561092ada6c413e5ca5e1af92f7d85423d61" translate="yes" xml:space="preserve">
          <source>LogitResults.resid_dev()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c596ae158b18f4cc9549a6427f4af68e179ad77" translate="yes" xml:space="preserve">
          <source>LogitResults.resid_generalized()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02e04b203465cced669bcd98696b036bda54bb83" translate="yes" xml:space="preserve">
          <source>LogitResults.resid_pearson()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9669623e3f277264386944d24982e681a12e307" translate="yes" xml:space="preserve">
          <source>LogitResults.resid_response()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7c2270f7cab9585ccfb85b3a3d2f48219a1d72f" translate="yes" xml:space="preserve">
          <source>LogitResults.save()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f245d059a08e388be6a9a1a728472001dabda33" translate="yes" xml:space="preserve">
          <source>LogitResults.set_null_options()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0bf15f88f2003e61a90414d592073bef925fcfa" translate="yes" xml:space="preserve">
          <source>LogitResults.summary()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7697e1891d94002588f6a919d60b2918b15d3762" translate="yes" xml:space="preserve">
          <source>LogitResults.summary2()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16d76a349e3450451dacf5e520aa09302ef83265" translate="yes" xml:space="preserve">
          <source>LogitResults.t_test()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14cdb7e4dbbb60cc74f91e8c9929a287aa796581" translate="yes" xml:space="preserve">
          <source>LogitResults.t_test_pairwise()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b137bdb384582fe1ba2cfa0284d67e34e7541f49" translate="yes" xml:space="preserve">
          <source>LogitResults.tvalues()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64c00479373201f2286fdb020c0c4ebf57e68e8a" translate="yes" xml:space="preserve">
          <source>LogitResults.wald_test()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47247408e22563491336083487015bec470da221" translate="yes" xml:space="preserve">
          <source>LogitResults.wald_test_terms()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e584d7ae376304c01ff274fcb3d5d8ba6af41c" translate="yes" xml:space="preserve">
          <source>Loglikelihood evaluation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa0932ab7534e5745d23cd9a24cbe3f97d8326b9" translate="yes" xml:space="preserve">
          <source>Loglikelihood evaluation for each period</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05c8ee89f110a37c56fe82eaf184ff8401d57dd1" translate="yes" xml:space="preserve">
          <source>Loglikelihood for negative binomial model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="164d093660124ac8ba42fdabea754c7382885691" translate="yes" xml:space="preserve">
          <source>Loglikelihood for observations of Generalized Negative Binomial (NB-P) model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a73a0decabe6690e3b3aaaa5543c1c0a3974b2e" translate="yes" xml:space="preserve">
          <source>Loglikelihood for observations of Generalized Poisson model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8e3d5b7aa3ec3ebafce0084ee1c06555e60f693" translate="yes" xml:space="preserve">
          <source>Loglikelihood for observations of Generic Zero Inflated model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76c44d80f3524bd74b9c509cd204603ebe063096" translate="yes" xml:space="preserve">
          <source>Loglikelihood for observations of Poisson model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db7ec467d18614a77d29c94502c0184f203caee" translate="yes" xml:space="preserve">
          <source>Loglikelihood of Generalized Negative Binomial (NB-P) model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81a5e4b50eb4bf1b3832e7f372efaf2b59fd5c4d" translate="yes" xml:space="preserve">
          <source>Loglikelihood of Generalized Poisson model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="875f5ea68411c7d91247b444338ea2e83b449468" translate="yes" xml:space="preserve">
          <source>Loglikelihood of Generic Zero Inflated model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="174f84fcf6a348797e625f7b179ef94e24e014ec" translate="yes" xml:space="preserve">
          <source>Loglikelihood of Poisson model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24c97dd015f5dec20ced1edcdcb71113ee9534cd" translate="yes" xml:space="preserve">
          <source>Loglikelihood of linear model with t distributed errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f65ba8c646065e1798d6811a8d0ebac5de331dd1" translate="yes" xml:space="preserve">
          <source>Logliklihood function not implemented because of the complexity of calculating an infinite series of summations. The variance power can be estimated using the &lt;code&gt;estimate_tweedie_power&lt;/code&gt; function that is part of the statsmodels.genmod.generalized_linear_model.GLM class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0a29729ff8c490ef1b291f822a611f0734f99a8" translate="yes" xml:space="preserve">
          <source>Long run intercept of stable VAR process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d12d265fa4465433aa9b5e0bb6a2e215d08c0d" translate="yes" xml:space="preserve">
          <source>Looking at the summary printed above, notice that &lt;code&gt;patsy&lt;/code&gt; determined that elements of &lt;em&gt;Region&lt;/em&gt; were text strings, so it treated &lt;em&gt;Region&lt;/em&gt; as a categorical variable. &lt;code&gt;patsy&lt;/code&gt;&amp;rsquo;s default is also to include an intercept, so we automatically dropped one of the &lt;em&gt;Region&lt;/em&gt; categories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e13eda11c5daa14fa5b7fe675d395f7be8a4eb1a" translate="yes" xml:space="preserve">
          <source>Looking at the summary printed above, notice that &lt;code&gt;patsy&lt;/code&gt; determined that elements of &lt;em&gt;Region&lt;/em&gt; were text strings, so it treated &lt;em&gt;Region&lt;/em&gt; as a categorical variable. &lt;code&gt;patsy&lt;/code&gt;'s default is also to include an intercept, so we automatically dropped one of the &lt;em&gt;Region&lt;/em&gt; categories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d24908c73c6e697ad7ccb72835e7fad4cfbb3af" translate="yes" xml:space="preserve">
          <source>Looks correctly sized in Monte Carlo studies. not yet compared to verified values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc567889964ae7992e9a62f61fac283154d47af8" translate="yes" xml:space="preserve">
          <source>Looks like one observation is an outlier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="392d3b312feefcfcfe7b330b0d327b790eb5aa82" translate="yes" xml:space="preserve">
          <source>Lottery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63ae6dd4fc9f9dda66970e827d13f7c73fe841c" translate="yes" xml:space="preserve">
          <source>M</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b6b53df3bc2dfb7e8b1a87ca1259779cc0acac5" translate="yes" xml:space="preserve">
          <source>M = (N(+) - N(-))/2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="234d9c19e73072c5c8b743f7685adbd8667427be" translate="yes" xml:space="preserve">
          <source>M, p-value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02893b527f18c5c629f15ea9e997da3983621ce3" translate="yes" xml:space="preserve">
          <source>M-Estimators for Robust Linear Modeling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e800fa6c606756a4e73bed0f2db3e39990e7f7" translate="yes" xml:space="preserve">
          <source>M-estimator of location using self.norm and a current estimator of scale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dacac75b44422a3b5ed9557587c97b436f972e3b" translate="yes" xml:space="preserve">
          <source>M-estimators for Robust Regression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5d9061d11c10d2d837ca1e5d4d2157da6fb88be" translate="yes" xml:space="preserve">
          <source>M. Huberta and E. Vandervierenb, &amp;ldquo;An adjusted boxplot for skewed distributions&amp;rdquo; Computational Statistics &amp;amp; Data Analysis, vol. 52, pp. 5186-5201, August 2008.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="385f9c6d6d755fd4bedd388d8847c0db587c52d2" translate="yes" xml:space="preserve">
          <source>MA representation of fractional integration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="610fbe5488aa49c0512115ac4115bf2e7bdf0f5b" translate="yes" xml:space="preserve">
          <source>MA(2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b796f805341802d42691e7a0a3d2890ecc9ac958" translate="yes" xml:space="preserve">
          <source>MANOVA</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ccff74ef5f750563d54bd626e4245b9363b63d3" translate="yes" xml:space="preserve">
          <source>MANOVA.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61993116501527fa52561f6d362f545519f698b4" translate="yes" xml:space="preserve">
          <source>MANOVA.from_formula()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6f0dbfdf4f5cbb1ab9ae0cf0d394b29b1d08829" translate="yes" xml:space="preserve">
          <source>MANOVA.mv_test()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b64185ae7a5bc95ee4054655c59c95cc97efae2f" translate="yes" xml:space="preserve">
          <source>MANOVA.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce0cda938a716c7072aea71996748318940752f" translate="yes" xml:space="preserve">
          <source>MEMORY_CONSERVE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0439a70812fe8c7500bcd98d5b4cd00728140575" translate="yes" xml:space="preserve">
          <source>MEMORY_NO_FILTERED = 0x04</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e881cae1997793ec93bdc79f822852dd787307d" translate="yes" xml:space="preserve">
          <source>MEMORY_NO_FORECAST = 0x01</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413130c687ca06f3de0316efd9c4482ff8ac487c" translate="yes" xml:space="preserve">
          <source>MEMORY_NO_GAIN = 0x10</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22cd8caf9e37a6a0d3586f15ca8404af521c44ec" translate="yes" xml:space="preserve">
          <source>MEMORY_NO_LIKELIHOOD = 0x08</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce923703968f0b7e215a061bb0f0c873e98ab151" translate="yes" xml:space="preserve">
          <source>MEMORY_NO_PREDICTED = 0x02</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c70b1cee42628128171236475299f0f35638b5b5" translate="yes" xml:space="preserve">
          <source>MEMORY_NO_SMOOTHING = 0x20</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ddf9f095898c9fb0c6c2de36bca55eee58a3bd5" translate="yes" xml:space="preserve">
          <source>MEMORY_STORE_ALL = 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bc6d7715f532499f3bcf91641ee14ac75c87dc8" translate="yes" xml:space="preserve">
          <source>MICE.combine()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="366a01789d7b85b74fce8490d02c4e6d2fbbb7d5" translate="yes" xml:space="preserve">
          <source>MICE.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e78b5a3a6cdc1621f89a3523a3ed35790df5b84c" translate="yes" xml:space="preserve">
          <source>MICE.next_sample()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="058c5022b2b7d007e61aa1b3b49e28f4e83f6a97" translate="yes" xml:space="preserve">
          <source>MICEData.get_fitting_data()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="955fa1897138486d1e8ec3e5fcf5ba42fe374d1c" translate="yes" xml:space="preserve">
          <source>MICEData.get_split_data()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ac875429b39648ac47c20dc3d25fbca68bd2a5a" translate="yes" xml:space="preserve">
          <source>MICEData.impute()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adc3b4cf6da2cbd69125931ca2d99268b6699a2f" translate="yes" xml:space="preserve">
          <source>MICEData.impute_pmm()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b66539ed7d01f1359452b60bf40d41ac3994b0d6" translate="yes" xml:space="preserve">
          <source>MICEData.next_sample()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21ffb19046d02912cabd55a7be5ae737f94262a5" translate="yes" xml:space="preserve">
          <source>MICEData.perturb_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c19e795274a2947599206929794360339c2141cc" translate="yes" xml:space="preserve">
          <source>MICEData.plot_bivariate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70ab03380d9b5f7ff20348f5628ea9bc26269ade" translate="yes" xml:space="preserve">
          <source>MICEData.plot_fit_obs()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3e42fdad15a03ab3bfa48243c4850ddad1c1164" translate="yes" xml:space="preserve">
          <source>MICEData.plot_imputed_hist()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03716f3cb123c83eade596d5ed91f75eeb36e43d" translate="yes" xml:space="preserve">
          <source>MICEData.plot_missing_pattern()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ce948da4a1d5917a5d4741033522fd3953a4506" translate="yes" xml:space="preserve">
          <source>MICEData.set_imputer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9521577c4876398a69e69b2885d5688d57c46d96" translate="yes" xml:space="preserve">
          <source>MICEData.update()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="032168a3fee39efe289dfa9870294f791b14eac2" translate="yes" xml:space="preserve">
          <source>MICEData.update_all()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cfca61ef71636e4772f5bfa62c9912837767453" translate="yes" xml:space="preserve">
          <source>MJ Lindstrom, DM Bates (1988). &lt;em&gt;Newton Raphson and EM algorithms for linear mixed effects models for repeated measures data&lt;/em&gt;. Journal of the American Statistical Association. Volume 83, Issue 404, pages 1014-1022.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199daa6ab8e7d03aee939736ba86869db275828b" translate="yes" xml:space="preserve">
          <source>MLE stands for Maximum Likelihood Estimate. Starting estimates for the fit are given by input arguments; for any arguments not provided with starting estimates, &lt;code&gt;self._fitstart(data)&lt;/code&gt; is called to generate such.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98a645ba1598bebbd5c5d3b6a47c2fc627c40437" translate="yes" xml:space="preserve">
          <source>MLEModel.filter()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74529df0865fe1e8eaa51d4bd34846d2b07b2342" translate="yes" xml:space="preserve">
          <source>MLEModel.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="515ec62c53a00754259e786705d440a5e3476e89" translate="yes" xml:space="preserve">
          <source>MLEModel.from_formula()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1780c7567672c47447b685126752419625e2e0b" translate="yes" xml:space="preserve">
          <source>MLEModel.hessian()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62d1df20c100d6c0553f024839a28f077dd3be79" translate="yes" xml:space="preserve">
          <source>MLEModel.impulse_responses()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="851a56d7eb07f39a5b2acfad921bd42e395c7259" translate="yes" xml:space="preserve">
          <source>MLEModel.information()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="274b04889a5f80c43b438041595f0b7fe55f07f0" translate="yes" xml:space="preserve">
          <source>MLEModel.initialize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcf95e71b1841b4f23449cee453318801038e6e7" translate="yes" xml:space="preserve">
          <source>MLEModel.initialize_approximate_diffuse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee5b2c80261e144d09fd3b010aff7d6fdadeb5cb" translate="yes" xml:space="preserve">
          <source>MLEModel.initialize_known()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f15108214294e60ea71d65f92b679b5800227024" translate="yes" xml:space="preserve">
          <source>MLEModel.initialize_statespace()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aac1bd18bad968a6e6d5dda47a2da11e8d0c41e" translate="yes" xml:space="preserve">
          <source>MLEModel.initialize_stationary()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="522402d12ebc8fd25a90a4a967d5f416b1260eb1" translate="yes" xml:space="preserve">
          <source>MLEModel.loglike()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18cce76a2afbddefa9ea43fbd67eb27edbbadf96" translate="yes" xml:space="preserve">
          <source>MLEModel.loglikeobs()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b00686378af8cb5871264e89ed5ea1509019d20d" translate="yes" xml:space="preserve">
          <source>MLEModel.observed_information_matrix()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee96982c02399ce20de19f7984121ca671e9926f" translate="yes" xml:space="preserve">
          <source>MLEModel.opg_information_matrix()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e2748846dedb5b54f49d4b81c6e2e7dd0f5bd70" translate="yes" xml:space="preserve">
          <source>MLEModel.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac69659e8f81b6684d3651cd48e3a5f7515fc538" translate="yes" xml:space="preserve">
          <source>MLEModel.prepare_data()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0ed0b46fa5b116dac971b994d4b354b4c76a811" translate="yes" xml:space="preserve">
          <source>MLEModel.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfadbe146751fc1193e7a35df0f802560d522629" translate="yes" xml:space="preserve">
          <source>MLEModel.score_obs()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7226cd17b1e256e33e61b4887c4d88ff89544af6" translate="yes" xml:space="preserve">
          <source>MLEModel.set_conserve_memory()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f216db8aca4067b217c693483c1e5b8927882a8" translate="yes" xml:space="preserve">
          <source>MLEModel.set_filter_method()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4f62394dfb1ed547f39e67e69f17bdd6064f53c" translate="yes" xml:space="preserve">
          <source>MLEModel.set_inversion_method()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef9db60d2d015c2f6def6253e43c034e0e5a789b" translate="yes" xml:space="preserve">
          <source>MLEModel.set_smoother_output()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9036ef1e19471157c60970e2fa49a984c1ce9654" translate="yes" xml:space="preserve">
          <source>MLEModel.set_stability_method()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="599b5221cf2753c11c6fcf6fd43a2c645ed25845" translate="yes" xml:space="preserve">
          <source>MLEModel.simulate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b255faff74831450e1d23b3f36c948f6f22b1d2d" translate="yes" xml:space="preserve">
          <source>MLEModel.simulation_smoother()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4efe7b02b4f602251619aa6932cf23df61596570" translate="yes" xml:space="preserve">
          <source>MLEModel.smooth()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b708b933443c63f5a33a5fb9403ddad8e025d4e6" translate="yes" xml:space="preserve">
          <source>MLEModel.transform_jacobian()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c06ba42906dba73f5381838c171279c9e05c9a81" translate="yes" xml:space="preserve">
          <source>MLEModel.transform_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3698c9ebc375c3f0cbaf34e289d7d4608db90a7b" translate="yes" xml:space="preserve">
          <source>MLEModel.untransform_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="644d34895057cd91ebc116dfccda6a3d682779a0" translate="yes" xml:space="preserve">
          <source>MLEModel.update()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01e479f1f00a5b7b29ed7ed3c7db410da3a220ca" translate="yes" xml:space="preserve">
          <source>MLEResults</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebba9977fb5ef7e9835ae23b11f90a820c9c5ac4" translate="yes" xml:space="preserve">
          <source>MLEResults.aic()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1df35c40a149e653ff52275e3dda2d0af356a54" translate="yes" xml:space="preserve">
          <source>MLEResults.bic()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7378b417054d813907226f0060660605cb350da1" translate="yes" xml:space="preserve">
          <source>MLEResults.bse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fa460cd1e59620c997e11579cd9f1102efd7abc" translate="yes" xml:space="preserve">
          <source>MLEResults.conf_int()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="003c331c2a10b787b2387b1b07f9f4b78169f510" translate="yes" xml:space="preserve">
          <source>MLEResults.cov_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b0279bf54bb9eb62e34e704f28fada387ae9ca6" translate="yes" xml:space="preserve">
          <source>MLEResults.cov_params_approx()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64deba6126f734e98dcde5b24e419bc3faf9b335" translate="yes" xml:space="preserve">
          <source>MLEResults.cov_params_oim()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d02fe8a93d70608f1eb4bce7afb2071ffb6766a0" translate="yes" xml:space="preserve">
          <source>MLEResults.cov_params_opg()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dea3e0d976504f20c832225ce9d0317023c986d" translate="yes" xml:space="preserve">
          <source>MLEResults.cov_params_robust()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eff5512864f8534b3ad3bdda9c11d17e0995c82f" translate="yes" xml:space="preserve">
          <source>MLEResults.cov_params_robust_approx()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c54271f56f32bd20b8b81677df56a59b1aceb0e" translate="yes" xml:space="preserve">
          <source>MLEResults.cov_params_robust_oim()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="625f401dce9e71f7727152392353d08c692c2059" translate="yes" xml:space="preserve">
          <source>MLEResults.f_test()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af584cfd4fa51ab00079fcd291e37a5f59049bcf" translate="yes" xml:space="preserve">
          <source>MLEResults.fittedvalues()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba6d1148e7369529333b384c032e2fcaae15793" translate="yes" xml:space="preserve">
          <source>MLEResults.forecast()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab955bf1fe9699892f43f23c13c6e62236e521b" translate="yes" xml:space="preserve">
          <source>MLEResults.get_forecast()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b533feb7fdfee32468e6f57c58222c4eab008881" translate="yes" xml:space="preserve">
          <source>MLEResults.get_prediction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9e81cf9dc9fbd2831f52a616a398de65f2e0280" translate="yes" xml:space="preserve">
          <source>MLEResults.hqic()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5d5848628f95cd43b4734b0a22ff1f3ae514f76" translate="yes" xml:space="preserve">
          <source>MLEResults.impulse_responses()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d10c9b4988e7100f5939ba811aeab72bc4aa24" translate="yes" xml:space="preserve">
          <source>MLEResults.info_criteria()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88308c8f4b208cc2066384fdf0bf548c8480d7ec" translate="yes" xml:space="preserve">
          <source>MLEResults.initialize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51083007efbfcc41fc87529b6e36a14d1e295883" translate="yes" xml:space="preserve">
          <source>MLEResults.llf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d135ddea868b4ec4da6a0cefd16d7ba1289194e" translate="yes" xml:space="preserve">
          <source>MLEResults.llf_obs()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc18139900fb44b265ee88a4456ae46a47662586" translate="yes" xml:space="preserve">
          <source>MLEResults.load()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb0ff09a801aa4b2856c6540cc6318a5738ecb0a" translate="yes" xml:space="preserve">
          <source>MLEResults.loglikelihood_burn()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="642dfb3a2fd0dccce9a438b523ad30755577e8a6" translate="yes" xml:space="preserve">
          <source>MLEResults.normalized_cov_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5906026735d49b1d2362d683c35ef72ea179d0a" translate="yes" xml:space="preserve">
          <source>MLEResults.plot_diagnostics()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a799953ba6b3c77b38746495a6bfa5909278538c" translate="yes" xml:space="preserve">
          <source>MLEResults.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fad2df71f9aadd6402a8f075522ff49ed08a100" translate="yes" xml:space="preserve">
          <source>MLEResults.pvalues()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f17904afdff3241b609321773073825dd223f5b" translate="yes" xml:space="preserve">
          <source>MLEResults.remove_data()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7886b1fee488c2bfdd5b0cd4d3b28d456ae01ea8" translate="yes" xml:space="preserve">
          <source>MLEResults.resid()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bc2a98ed4fabd459a0136caa75d3dab939c88cd" translate="yes" xml:space="preserve">
          <source>MLEResults.save()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="938fe15b7a56fbe463fd0a1ffe71c50a5dc78ed1" translate="yes" xml:space="preserve">
          <source>MLEResults.simulate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efa511a547346102c9aaac15ca91541f6b3fdba7" translate="yes" xml:space="preserve">
          <source>MLEResults.summary()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c884eccbf9a93883ca9003126a213511ec0182e" translate="yes" xml:space="preserve">
          <source>MLEResults.t_test()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2e279fb1b2078a0365107c6ae659686823035c7" translate="yes" xml:space="preserve">
          <source>MLEResults.t_test_pairwise()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8775e3b55a02b100b1d89008a3c10cfce4616bc9" translate="yes" xml:space="preserve">
          <source>MLEResults.test_heteroskedasticity()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="445902acab6a6dd1f2de753d7e68be79497a1aea" translate="yes" xml:space="preserve">
          <source>MLEResults.test_normality()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4e97f9806db1b8f895f035a820d31e39350ddd8" translate="yes" xml:space="preserve">
          <source>MLEResults.test_serial_correlation()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d4039d244bf6290eec825db19a84323c293fc6" translate="yes" xml:space="preserve">
          <source>MLEResults.tvalues()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9a09cb98deee2053a896dcc5c20526c4ca3a776" translate="yes" xml:space="preserve">
          <source>MLEResults.wald_test()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74932cff8b629448cc848f4ce7061d08b0f1ae69" translate="yes" xml:space="preserve">
          <source>MLEResults.wald_test_terms()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dec043c66147fd136b650bd1a93bcebe71cd8cc8" translate="yes" xml:space="preserve">
          <source>MLEResults.zvalues()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1eea109ef408ab0553ec9df0779c317ae426767" translate="yes" xml:space="preserve">
          <source>MM estimators are good for this type of problem, unfortunately, we don't yet have these yet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b20c2f18be1d3947298860af5ae535ab3940cad3" translate="yes" xml:space="preserve">
          <source>MNLogit.cdf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae05d6d5817bf3ac59821b25a7015b35b999240" translate="yes" xml:space="preserve">
          <source>MNLogit.cov_params_func_l1()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d6c775cecb4a3e5349ae75a8d9e54fc15a64082" translate="yes" xml:space="preserve">
          <source>MNLogit.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc57d58543f702b3b9c6422c65a286800aecfa8" translate="yes" xml:space="preserve">
          <source>MNLogit.fit_regularized()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca22a4813ab756c509216cb80f0e0a083b8c359c" translate="yes" xml:space="preserve">
          <source>MNLogit.from_formula()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe6bcc40f4dbeb22125791c6ab6632bea77cd404" translate="yes" xml:space="preserve">
          <source>MNLogit.hessian()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13c755b4f7947d1ad0b04c0db41f73416c49f883" translate="yes" xml:space="preserve">
          <source>MNLogit.information()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="604333f4ecd56b02e2d091b5aa46dd4c458e12d8" translate="yes" xml:space="preserve">
          <source>MNLogit.initialize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3148fa32f9d9de608945c8c1a2c054742485ee95" translate="yes" xml:space="preserve">
          <source>MNLogit.loglike()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f079d1b78bbaaefdfad7ae12dbfb6d20f5086f0" translate="yes" xml:space="preserve">
          <source>MNLogit.loglike_and_score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33269d8420bd2f6618702ad4d5565c67b2d47053" translate="yes" xml:space="preserve">
          <source>MNLogit.loglikeobs()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d723f3e511dc05180b154d540bae91fcc5ba543" translate="yes" xml:space="preserve">
          <source>MNLogit.pdf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c193f04a617e5ebaad2e0b4f3e2f7c9c5b6bbacc" translate="yes" xml:space="preserve">
          <source>MNLogit.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e15edf37c471d5496c870467486ca999ff69dd51" translate="yes" xml:space="preserve">
          <source>MNLogit.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88c06b863fe253299b956eddc2be5a3902dcf314" translate="yes" xml:space="preserve">
          <source>MNLogit.score_obs()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89b63d1e38389f2f2df9864ac88c80217352d164" translate="yes" xml:space="preserve">
          <source>MacKinnon, J.G. 1994 &amp;ldquo;Approximate Asymptotic Distribution Functions for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69fd6b8900919526551b8c0f1a7edf7c74943612" translate="yes" xml:space="preserve">
          <source>MacKinnon, J.G. 1994. &amp;ldquo;Approximate asymptotic distribution functions for unit-root and cointegration tests. &lt;code&gt;Journal of Business and Economic Statistics&lt;/code&gt; 12, 167-76.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6b4f94df7ba8122fc7a4106f469717e555f5ff2" translate="yes" xml:space="preserve">
          <source>MacKinnon, J.G. 2010. &amp;ldquo;Critical Values for Cointegration Tests.&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fba30ea62e4e9a508bf7b54e4d6e40edb4978728" translate="yes" xml:space="preserve">
          <source>MacKinnon, J.G. 2010. &amp;ldquo;Critical Values for Cointegration Tests.&amp;rdquo; Queen&amp;rsquo;s University, Dept of Economics, Working Papers. Available at &lt;a href=&quot;http://ideas.repec.org/p/qed/wpaper/1227.html&quot;&gt;http://ideas.repec.org/p/qed/wpaper/1227.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8699116259b72ab9b3601893b568b0adbbcac5c3" translate="yes" xml:space="preserve">
          <source>Macroeconomic coincident indices are designed to capture the common component of the &quot;business cycle&quot;; such a component is assumed to simultaneously affect many macroeconomic variables. Although the estimation and use of coincident indices (for example the &lt;a href=&quot;http://www.newyorkfed.org/research/regional_economy/coincident_summary.html&quot;&gt;Index of Coincident Economic Indicators&lt;/a&gt;) pre-dates dynamic factor models, in several influential papers Stock and Watson (1989, 1991) used a dynamic factor model to provide a theoretical foundation for them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9240d10bc82e4a29e858ea62e5f41b8e7c1da3a4" translate="yes" xml:space="preserve">
          <source>Macroeconomic data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59171c168a9271db7bb4c27b7f82a49d6615efbf" translate="yes" xml:space="preserve">
          <source>Make MA polynomial invertible by inverting roots inside unit circle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="800e90d150272434e568262ac0a9f34a73c70785" translate="yes" xml:space="preserve">
          <source>Make a bean plot of each dataset in the &lt;code&gt;data&lt;/code&gt; sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25d94d693cb4c3bfcff59a72732a4a2cd98e2aa8" translate="yes" xml:space="preserve">
          <source>Make a pandas TimeSeries or DataFrame</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ccbac2dd6732652749ad794ea7fc55cd59d5ce1" translate="yes" xml:space="preserve">
          <source>Make a violin plot of each dataset in the &lt;code&gt;data&lt;/code&gt; sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd112d0b537bcf0f345121943d63b2d8959580f7" translate="yes" xml:space="preserve">
          <source>Making a mean difference plot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e836fdc2572ab23d5dc8c36bd613ac6b0f82d63" translate="yes" xml:space="preserve">
          <source>Manual</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="299b3f434b382611be5e5ccdccaeca014111ef40" translate="yes" xml:space="preserve">
          <source>Manual: ANOVA</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f320df3ab93ef9bd60410f96a1bd62b4540076a" translate="yes" xml:space="preserve">
          <source>Manual: Tools</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87623b9817d81ed19519a349a56d6efe96c6b7ec" translate="yes" xml:space="preserve">
          <source>Manufacturing and trade sales (CMRMTSPL)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bec52f77ddefb50cd54bf90eec42cd7aa381a0a" translate="yes" xml:space="preserve">
          <source>Many other packages use the Hamilton representation, so that tests against Stata and R require using it along with simple differencing (as Stata does).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c904cec60752e424581215d67928e3b83b10c63" translate="yes" xml:space="preserve">
          <source>Many other things are possible with operators. Please consult the &lt;a href=&quot;https://patsy.readthedocs.org/en/latest/formulas.html&quot;&gt;patsy docs&lt;/a&gt; to learn more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89a38faae1250f14f486dce3b62db8487a8a0d13" translate="yes" xml:space="preserve">
          <source>Marginal Effects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="693e7e24e7d67fc6fab550a632dea1d9ce104eeb" translate="yes" xml:space="preserve">
          <source>Marginal regression model fit using Generalized Estimating Equations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="028053107cb5611928b1164d6e7920b433afa432" translate="yes" xml:space="preserve">
          <source>Markov Switching Model Results</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2babaec4204f5238d012bac5cafe4bee3f4c64f6" translate="yes" xml:space="preserve">
          <source>Markov switching autoregression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc5aa64db0c6366f43d0fad5b81f5a0f0dd15943" translate="yes" xml:space="preserve">
          <source>Markov switching autoregression models</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="218378d76db924747ffb096f9bf5e8843fa9e2b0" translate="yes" xml:space="preserve">
          <source>Markov switching dynamic regression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99329ec5181ea2e7c79aae9558223459ccd5df28" translate="yes" xml:space="preserve">
          <source>Markov switching dynamic regression models</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6213dc681e3921a45d051f3724245d49a1f9bf5c" translate="yes" xml:space="preserve">
          <source>Markov switching regression model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb8922b89bc37ff1e3194476ae72ae4bae1ddfba" translate="yes" xml:space="preserve">
          <source>MarkovAutoregression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9802af59d8dc76a860fa7b56e7d083fc90735e78" translate="yes" xml:space="preserve">
          <source>MarkovAutoregression.filter()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38785a8bd10a9668bbc8a294d3e32237fe8254f5" translate="yes" xml:space="preserve">
          <source>MarkovAutoregression.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa29911bf937ac050f0907c41d16ba687b8f668d" translate="yes" xml:space="preserve">
          <source>MarkovAutoregression.from_formula()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdbb073a4b74da9027fe67f93cb11d800017ecd9" translate="yes" xml:space="preserve">
          <source>MarkovAutoregression.hessian()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf8fd0bd67b4fc25636b1d4c000b3c40f2f3331" translate="yes" xml:space="preserve">
          <source>MarkovAutoregression.information()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6c4f85b3327bcc3c761931baf7318221cb29f45" translate="yes" xml:space="preserve">
          <source>MarkovAutoregression.initial_probabilities()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e284a83c7943238f963523a2fb902c96bdb068bd" translate="yes" xml:space="preserve">
          <source>MarkovAutoregression.initialize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdf1b82f62629b730db9597166039ce2f1e5d241" translate="yes" xml:space="preserve">
          <source>MarkovAutoregression.initialize_known()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcd779490f72f2bc10bd6053a59200ad0b10ce68" translate="yes" xml:space="preserve">
          <source>MarkovAutoregression.initialize_steady_state()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0788947dd99f9c9303328ebaa989065f376bbc6" translate="yes" xml:space="preserve">
          <source>MarkovAutoregression.loglike()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972cd059da5fd769aced7bab3d153aac09da0b36" translate="yes" xml:space="preserve">
          <source>MarkovAutoregression.loglikeobs()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a854e987c0bcf52b0d12b5fa45ca7f0b0b6799b" translate="yes" xml:space="preserve">
          <source>MarkovAutoregression.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ff0a1ef1d61f766ae3095f787746115afa28070" translate="yes" xml:space="preserve">
          <source>MarkovAutoregression.predict_conditional()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c28d45f6f627515666acab8c4d038f9151f27720" translate="yes" xml:space="preserve">
          <source>MarkovAutoregression.regime_transition_matrix()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19fc724db36f5c094566c1897f4e314ec53ef1af" translate="yes" xml:space="preserve">
          <source>MarkovAutoregression.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20f181f461a15999fa198aa572951a465cbb9b90" translate="yes" xml:space="preserve">
          <source>MarkovAutoregression.score_obs()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e58a8ec6bd0cc0db21c5efe6c7aede8b188b4288" translate="yes" xml:space="preserve">
          <source>MarkovAutoregression.smooth()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4734a7b1b951a425a7591127a62cab49d29fec95" translate="yes" xml:space="preserve">
          <source>MarkovAutoregression.transform_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a08ebba82912b922152ce593c54f63967f34e808" translate="yes" xml:space="preserve">
          <source>MarkovAutoregression.untransform_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="701a4468ba582adeaba64af5387adb346cafcf42" translate="yes" xml:space="preserve">
          <source>MarkovRegression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbcc857f62461b904225de6aa620537dbcd8f8fe" translate="yes" xml:space="preserve">
          <source>MarkovRegression.filter()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2671827ef34d2b748e7433faa47bb6c996ba8dae" translate="yes" xml:space="preserve">
          <source>MarkovRegression.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3871596186f0cf4ad0c4313432781a4721443d10" translate="yes" xml:space="preserve">
          <source>MarkovRegression.from_formula()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc0d8656a773b44858806b58d93757303ec65a42" translate="yes" xml:space="preserve">
          <source>MarkovRegression.hessian()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f2d8ae9d26c5f0c870184b67392dabe1c6ddecd" translate="yes" xml:space="preserve">
          <source>MarkovRegression.information()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ef74f3b23557e818aa39a80229efe0b48e14a66" translate="yes" xml:space="preserve">
          <source>MarkovRegression.initial_probabilities()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c2f8c7aac526d59e47b813e8e8e3610310b7156" translate="yes" xml:space="preserve">
          <source>MarkovRegression.initialize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43672aab759439735f3fd572e54e73f329cb4d58" translate="yes" xml:space="preserve">
          <source>MarkovRegression.initialize_known()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c42c497100a2959b26b7dc2066b586d5fd60ec1" translate="yes" xml:space="preserve">
          <source>MarkovRegression.initialize_steady_state()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25d6e820a9c7adf45ef12a78e9412887c7c24a9a" translate="yes" xml:space="preserve">
          <source>MarkovRegression.loglike()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e67e6b975cf64e2be1921f5c239eb7152a41c844" translate="yes" xml:space="preserve">
          <source>MarkovRegression.loglikeobs()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c25d8affecf56451db03b7190463804c3244d64" translate="yes" xml:space="preserve">
          <source>MarkovRegression.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4e90663754e4cedcfdc71abab05b22374e10436" translate="yes" xml:space="preserve">
          <source>MarkovRegression.predict_conditional()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85a7868f7c4f7d64b030d759bd2909d8e3d2e6cf" translate="yes" xml:space="preserve">
          <source>MarkovRegression.regime_transition_matrix()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d402a8bd9e8ab12fc551ba71aa5ac1d90ef38dd5" translate="yes" xml:space="preserve">
          <source>MarkovRegression.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7d85fac2fdbc51843606e6f24e6f732f9858e8e" translate="yes" xml:space="preserve">
          <source>MarkovRegression.score_obs()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84377e18fe23a09ce07d72ca2a0801c815bc30f1" translate="yes" xml:space="preserve">
          <source>MarkovRegression.smooth()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbad742f03468a70e5ebc3dfbeef164eb1d4245d" translate="yes" xml:space="preserve">
          <source>MarkovRegression.transform_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f6d41af4faf293c91801ceeaa8466670dc86e38" translate="yes" xml:space="preserve">
          <source>MarkovRegression.untransform_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f46c64d8e7366f8cf780f8b1fecfc12305960eb" translate="yes" xml:space="preserve">
          <source>MarkovSwitchingResults</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d619af8930dda5b98114cfe7bf44d011449c948" translate="yes" xml:space="preserve">
          <source>Math:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4214e31d7cd19c10b3f3eb6fb6ecb1266cd877e" translate="yes" xml:space="preserve">
          <source>Matplotlib Figure object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27278d75cc230932d0517ab5425bb3c40e80da61" translate="yes" xml:space="preserve">
          <source>Matplotlib axes instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0d122812cef7944741c3049a0f1456e0b393baa" translate="yes" xml:space="preserve">
          <source>Matplotlib figure instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="664b97e00fed984c6e77f9c3a503788dae523262" translate="yes" xml:space="preserve">
          <source>Maximum Likelihood Estimation (Generic models)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c37906e8d398c691807e9a60885f4a7311905e20" translate="yes" xml:space="preserve">
          <source>Maximum Likelihood Estimation of Linear Model with t-distributed errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee9f9bec3c0b9bb3a7344a74dede0b755698fd3" translate="yes" xml:space="preserve">
          <source>Maximum Likelihood Estimation of Poisson Model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8737193bba551e80be32e468abe7ce8bc2514420" translate="yes" xml:space="preserve">
          <source>Maximum eigenvalue statistic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6320ddf69d615f381204aefdf3a2303b284995a6" translate="yes" xml:space="preserve">
          <source>Maximum likelihood estimation requires evaluating the likelihood function of the model, and for models in state space form the likelihood function is evaluted as a byproduct of running the Kalman filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d31095f21fc709b8362fbfbc8701ee49bed43f4" translate="yes" xml:space="preserve">
          <source>Maximum number of iterations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784ae47c334016395148b1e3c5b649ac8df5dba8" translate="yes" xml:space="preserve">
          <source>May, Warren L., and William D. Johnson, &amp;ldquo;A SAS&amp;reg; macro for constructing simultaneous confidence intervals for multinomial proportions,&amp;rdquo; Computer methods and programs in Biomedicine, Vol. 53, No. 3, 1997, pp. 153-162.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82b1bcd908f5baef40e066695bc90ccb45d716a7" translate="yes" xml:space="preserve">
          <source>May, Warren L., and William D. Johnson, &amp;ldquo;Constructing two-sided simultaneous confidence intervals for multinomial proportions for small counts in a large number of cells,&amp;rdquo; Journal of Statistical Software, Vol. 5, No. 6, 2000, pp. 1-24.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f60d3f972fc3d4c378a34bb465e4060836524acd" translate="yes" xml:space="preserve">
          <source>McCullagh, P. and Nelder, J.A. 1989. &amp;ldquo;Generalized Linear Models.&amp;rdquo; 2nd ed. Chapman &amp;amp; Hall, Boca Rotan.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48b123a058696bef1cd34dd7a41ef24b25a51c73" translate="yes" xml:space="preserve">
          <source>McNemar test</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d0ec03af9965815e6cbf1c6d9770c949ed8907e" translate="yes" xml:space="preserve">
          <source>McNemar test of homogeneity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d98671fd620ddfb104c2c3ff04406d5f2020e97a" translate="yes" xml:space="preserve">
          <source>Mean of the distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b69e0212032157c730ff53396921e89ae3b67c7e" translate="yes" xml:space="preserve">
          <source>Measure for fit performance &lt;code&gt;eval_measures&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d35195f9ac4d7f7c1914514d99ef3eef5efdf6b" translate="yes" xml:space="preserve">
          <source>Median Absolute Deviation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87292b5c09c5a02fe1bdc960829f6de67e93a9ab" translate="yes" xml:space="preserve">
          <source>Median of the distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="110eb9b31fbc59a514586e985aa602ccee11d70c" translate="yes" xml:space="preserve">
          <source>Mediation Analysis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afa251a855077313b4abda11579a50bab9ac749a" translate="yes" xml:space="preserve">
          <source>Mediation analysis focuses on the relationships among three key variables: an &amp;lsquo;outcome&amp;rsquo;, a &amp;lsquo;treatment&amp;rsquo;, and a &amp;lsquo;mediator&amp;rsquo;. Since mediation analysis is a form of causal inference, there are several assumptions involved that are difficult or impossible to verify. Ideally, mediation analysis is conducted in the context of an experiment such as this one in which the treatment is randomly assigned. It is also common for people to conduct mediation analyses using observational data in which the treatment may be thought of as an &amp;lsquo;exposure&amp;rsquo;. The assumptions behind mediation analysis are even more difficult to verify in an observational setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6504432a981e6dfb3c06490e1dc4929e585f141d" translate="yes" xml:space="preserve">
          <source>Mediation.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60657bfab06f85f39a58804b57f41f9f36f53718" translate="yes" xml:space="preserve">
          <source>MediationResults.summary()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdc47c7e8f07e86becee6075df6e67cd4a30a87f" translate="yes" xml:space="preserve">
          <source>Method &amp;ldquo;binom_test&amp;rdquo; directly inverts the binomial test in scipy.stats. which has discrete steps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b426648db0267b923e0e17401420d61ba7e3b0" translate="yes" xml:space="preserve">
          <source>Method names can be abbreviated to first letter, &amp;lsquo;i&amp;rsquo; or &amp;lsquo;p&amp;rsquo; for fdr_bh and &amp;lsquo;n&amp;rsquo; for fdr_by.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f619c41d44b491748ab2eed7669d8f5b4df50444" translate="yes" xml:space="preserve">
          <source>Method to use to compute the confidence intervals; available methods are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="619a429cefea04cef0706710031c32b1a868e8c7" translate="yes" xml:space="preserve">
          <source>Method used for testing and adjustment of pvalues. Can be either the full name or initial letters. Available methods are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc25c745d77ace7d1cffb4c351a36bb8a84c67a6" translate="yes" xml:space="preserve">
          <source>Method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac66f6377975f343e3ec1eef3ecd54bdf27d42c6" translate="yes" xml:space="preserve">
          <source>Method=&amp;rsquo;hommel&amp;rsquo; is very slow for large arrays, since it requires the evaluation of n partitions, where n is the number of p-values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c212d442c29a8007e0431fff49a44e9864ca085" translate="yes" xml:space="preserve">
          <source>Methods for Survival and Duration Analysis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc8ed546d1e6c576126da09a1107cdc2edf4c32" translate="yes" xml:space="preserve">
          <source>Methods for analyzing a square contingency table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f8783336e5f2e4ac694659677c37ed673eb6e8a" translate="yes" xml:space="preserve">
          <source>Michael Friendly, York University, Psychology Department Journal of Computational and Graphical Statistics, 2001</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d8e9c5ccfc4b77b97e7c9a9f822bfbdce6dc53" translate="yes" xml:space="preserve">
          <source>Michael Friendly, York University, Psychology Department Journal of the american statistical association March 1994, Vol. 89, No. 425, Theory and Methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6ae05cd837392055de2fc00c5deb3d14fab29af" translate="yes" xml:space="preserve">
          <source>Michael Friendly, York University, Psychology Department Proceedings of the Statistical Graphics Section, 1992, 61-68.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64972bd9d06e68ff5d1d2cf4a7a64bab1806f799" translate="yes" xml:space="preserve">
          <source>Minimal Examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aebedbade17a0130e87e420d69032fdd5179582" translate="yes" xml:space="preserve">
          <source>Minimizes sum((X[t]/I[t] - X[t-1]/I[t-1])**2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53429462ac64f61f4bc78e4b621f6905aa05ea2f" translate="yes" xml:space="preserve">
          <source>Minimum number of characters to be printed. The value is not truncated if it has more characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2beb60eee7b0a96ecc43f06cb3a9f529d402c3e" translate="yes" xml:space="preserve">
          <source>Minority Employment Data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1be397f1d9da4624e677eb212277be567904d66f" translate="yes" xml:space="preserve">
          <source>Missing data can be handled via the &lt;code&gt;missing&lt;/code&gt; keyword argument. Every model takes this keyword. You can find more information in the docstring of &lt;a href=&quot;http://www.statsmodels.org/stable/dev/generated/statsmodels.base.model.Model.html#statsmodels.base.model.Model&quot;&gt;&lt;code&gt;statsmodels.base.Model&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e30d8933861565e01609dac389402ebad55a0caf" translate="yes" xml:space="preserve">
          <source>Missing values are not handled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="872592ad631c5f1b5867b2a69873229ea742c120" translate="yes" xml:space="preserve">
          <source>Misspecification: true model is quadratic, estimate only linear</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6acf4782ea379ffe41df35d7cd4f075f4b344723" translate="yes" xml:space="preserve">
          <source>Mixed LM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d7d4af864aa7552760dfdd881e8f75f27e76649" translate="yes" xml:space="preserve">
          <source>MixedGLMResults object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="488279b87a697e21e0ca503d54b2f20c9748a54c" translate="yes" xml:space="preserve">
          <source>MixedLM.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="484ec8dc5b4a135f5d5cc0accaddb0a4401f9cd2" translate="yes" xml:space="preserve">
          <source>MixedLM.fit_regularized()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af2e9e7f1885c0db40323135128274329df3f6f2" translate="yes" xml:space="preserve">
          <source>MixedLM.from_formula()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="529d6c6a9a2ab83d55740d81363e8ac17a4b1bca" translate="yes" xml:space="preserve">
          <source>MixedLM.get_fe_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bdcfb26aaf916248ae749ac977ebf75c10ab816" translate="yes" xml:space="preserve">
          <source>MixedLM.get_scale()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2160f69b12e9885142a3e4a73943ebce8c685fa6" translate="yes" xml:space="preserve">
          <source>MixedLM.group_list()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2823120bcb40a7894b4158f473e6b1b274c39398" translate="yes" xml:space="preserve">
          <source>MixedLM.hessian()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8c68202fb2e3d212368f4db3ef2cebcf067c29f" translate="yes" xml:space="preserve">
          <source>MixedLM.information()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fb91fcc76b0874ab411d38da614416696fac965" translate="yes" xml:space="preserve">
          <source>MixedLM.initialize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54c56f0ee12601733753ad99778cd5f324b83731" translate="yes" xml:space="preserve">
          <source>MixedLM.loglike()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0f44b962cf9af0603e0bdb441b64bbc42ab1e75" translate="yes" xml:space="preserve">
          <source>MixedLM.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e7c117512183dd3fcc3b8ddae72e014d37300a" translate="yes" xml:space="preserve">
          <source>MixedLM.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3d8c8931bbf25718bf716b8a3169f3d7c0931fc" translate="yes" xml:space="preserve">
          <source>MixedLM.score_full()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e44151c53092d441119f947fc7cf40e8713a9b86" translate="yes" xml:space="preserve">
          <source>MixedLM.score_sqrt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af0ce50ed269b7cb7b36ec21d4019faafa76570f" translate="yes" xml:space="preserve">
          <source>MixedLMResults inherits from statsmodels.LikelihoodModelResults</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a4bb6aca69a8831d3b1eea62f781aa9bd24e00c" translate="yes" xml:space="preserve">
          <source>MixedLMResults.aic()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df8952b9d363c3831e6c4b52bf84357a3f5747c5" translate="yes" xml:space="preserve">
          <source>MixedLMResults.bic()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="449c502ff8947745c8f0c17fdabf6b4c98576797" translate="yes" xml:space="preserve">
          <source>MixedLMResults.bootstrap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="714a18fb9fad06ed1f8801620b526852da870f34" translate="yes" xml:space="preserve">
          <source>MixedLMResults.bse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f260e069c789a6f646823af4696bb87f7bd3578" translate="yes" xml:space="preserve">
          <source>MixedLMResults.bse_fe()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df5d035fb8305a61dfe586c63c46b6b61ebc444a" translate="yes" xml:space="preserve">
          <source>MixedLMResults.bse_re()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5303ef5c1ccd7ee33ab52854cf6de0042b48c1b4" translate="yes" xml:space="preserve">
          <source>MixedLMResults.bsejac()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c647eea0936be08545254fd32b4d914f5a00e9" translate="yes" xml:space="preserve">
          <source>MixedLMResults.bsejhj()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45187fbe68cd0f6704538e41e3bb93ed09627a88" translate="yes" xml:space="preserve">
          <source>MixedLMResults.conf_int()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf45cef15d0ca54e87790998ea51f5a8c48ea315" translate="yes" xml:space="preserve">
          <source>MixedLMResults.cov_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afd44d03941b42f35b5cb9ed0ba80041df4d98ab" translate="yes" xml:space="preserve">
          <source>MixedLMResults.covjac()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b7246c136b33b52f17bb11227c4baacf8bf0f03" translate="yes" xml:space="preserve">
          <source>MixedLMResults.covjhj()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e6c50fff53783e04bc4d72047a171ee94a03c7" translate="yes" xml:space="preserve">
          <source>MixedLMResults.df_modelwc()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="561305a93db853754c42f63bc26a854535357c43" translate="yes" xml:space="preserve">
          <source>MixedLMResults.f_test()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95cb8df43ae9c4c4fccf028f12fb9c3ac743cd96" translate="yes" xml:space="preserve">
          <source>MixedLMResults.fittedvalues()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bf033d6a5c86ef4f83b2889c865fc070acbfa85" translate="yes" xml:space="preserve">
          <source>MixedLMResults.get_nlfun()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6632c0786f7b36b53d4165175b93897d617a273" translate="yes" xml:space="preserve">
          <source>MixedLMResults.hessv()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34c37b93c69be0736c7ad659f31e7f9a0da70c91" translate="yes" xml:space="preserve">
          <source>MixedLMResults.initialize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8641910622a4d393038bfebd0bb34a0ca0be5b2a" translate="yes" xml:space="preserve">
          <source>MixedLMResults.llf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23ed1f3282d0a6e159aebbea9da525bfe029323f" translate="yes" xml:space="preserve">
          <source>MixedLMResults.load()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66f603687b39994bde99adaec1b9021804383f13" translate="yes" xml:space="preserve">
          <source>MixedLMResults.normalized_cov_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7509522825d0085b52a4aaf1c312862d0c22897" translate="yes" xml:space="preserve">
          <source>MixedLMResults.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cda9b7c694095d418ccc36c2b7862718b4dad07" translate="yes" xml:space="preserve">
          <source>MixedLMResults.profile_re()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16f9b79b581d3cc432b294b3aad1f618eec2b16b" translate="yes" xml:space="preserve">
          <source>MixedLMResults.pvalues()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72465719d2ccf80bea208b7026960ff5be6da08c" translate="yes" xml:space="preserve">
          <source>MixedLMResults.random_effects()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16d8ce172c13bfee0ff8857f4d4d403beb63425d" translate="yes" xml:space="preserve">
          <source>MixedLMResults.random_effects_cov()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65765f4fddd07bcf7c5c9e2952bf4ae4b5a73357" translate="yes" xml:space="preserve">
          <source>MixedLMResults.remove_data()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b081ee847d9fdbd8df1065961ef4b526935c1824" translate="yes" xml:space="preserve">
          <source>MixedLMResults.resid()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5753449ba38ea2eb64e2e35ed9d6fda965b725a8" translate="yes" xml:space="preserve">
          <source>MixedLMResults.save()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="426c88d34106686d658ea77a3ceaa355be741a85" translate="yes" xml:space="preserve">
          <source>MixedLMResults.score_obsv()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bebcb3ba7efb946c1e3470cbeee8ec1f6c583fe4" translate="yes" xml:space="preserve">
          <source>MixedLMResults.summary()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="218d703b6083aff362629ebd10885cf1223c2c44" translate="yes" xml:space="preserve">
          <source>MixedLMResults.t_test()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ce1c42dbd3dfa116dfed8e5835a18977f9a56e" translate="yes" xml:space="preserve">
          <source>MixedLMResults.t_test_pairwise()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03358cdeb68c8a4389a076bde9b36c6012ffe7df" translate="yes" xml:space="preserve">
          <source>MixedLMResults.tvalues()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2de94ee0fefe65dc5c49fa714e3c915f1c30463" translate="yes" xml:space="preserve">
          <source>MixedLMResults.wald_test()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d2b2619a53a7b65250539442db858121958b647" translate="yes" xml:space="preserve">
          <source>MixedLMResults.wald_test_terms()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68c2cc7f0ceaa3e499ecb4db331feb4debbbcc23" translate="yes" xml:space="preserve">
          <source>Model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc0b2f5ee6182a10f99a42c3abf5d5231505951d" translate="yes" xml:space="preserve">
          <source>Model Class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e58318fcd2ad65b02ac055f243f5b4775c761d07" translate="yes" xml:space="preserve">
          <source>Model Classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c0d7b15f688e0d5941cd75e49bb9c184b662d4d" translate="yes" xml:space="preserve">
          <source>Model Family:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2f5269f42fb746e3ae061ac03e573ed05958ca2" translate="yes" xml:space="preserve">
          <source>Model Results</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c567347b8af7d91b331f07af5f77ec0a361f505" translate="yes" xml:space="preserve">
          <source>Model Selection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="997d64085e6ac20446cc5f5b985a98dd7add84e5" translate="yes" xml:space="preserve">
          <source>Model assumptions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="015f20e6051023615fa7c316a187cfefc44962d6" translate="yes" xml:space="preserve">
          <source>Model fitting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adeffd5e329792682f225cd7f0143390addb8a15" translate="yes" xml:space="preserve">
          <source>Model instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ebb9765420dc795e6140e1d1092cfa32d1efdbc" translate="yes" xml:space="preserve">
          <source>Model name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ccaf00e1a68263a07b4c268d44a47dcba34591c" translate="yes" xml:space="preserve">
          <source>Model specification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e42ee9e8d43ff760548c3c041e4d8a850af5676a" translate="yes" xml:space="preserve">
          <source>Model statistics are given in the order of args. Models must have been fit using the formula api.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e1279af1f22f085a4bc2b4edb17847815cd0d3d" translate="yes" xml:space="preserve">
          <source>Model:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee7b99dc789fee40b798cacf6bf15c628869b5de" translate="yes" xml:space="preserve">
          <source>Models and Estimation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9349c45e37f329a44c77ecf3460a175073e348d9" translate="yes" xml:space="preserve">
          <source>Models based on linear models, GLS, RLM, GLM and similar, use a generalized inverse. This means that:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cd9b46a75d5cc408d6f8ba34c579ea0c63880bd" translate="yes" xml:space="preserve">
          <source>Modified Bryson-Frazier Kalman smoother method; this is identical to the conventional method of Durbin and Koopman, 2012, except that an additional intermediate step is included.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8fd1db9533462c72c57ccdaa72edbc3963fb1ae" translate="yes" xml:space="preserve">
          <source>Modified Denton&amp;rsquo;s method to convert low-frequency to high-frequency data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f91a72f544aa27ef79737763a7d91b610af890ea" translate="yes" xml:space="preserve">
          <source>Module Reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d98b415af78e74de9cfb99d45265893094ab8301" translate="yes" xml:space="preserve">
          <source>Modules with aliases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f9c796ffbfc061be2c60e450acfd40b952fe105" translate="yes" xml:space="preserve">
          <source>Moment Helpers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f9526b1a7db0484ccf8134eedd256a50ac7c329" translate="yes" xml:space="preserve">
          <source>Mon, 14 May 2018</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67e6e62a0ff356a1c35a12b89602ea8763b03726" translate="yes" xml:space="preserve">
          <source>Monahan, John F. 1984. &amp;ldquo;A Note on Enforcing Stationarity in Autoregressive-moving Average Models.&amp;rdquo; Biometrika 71 (2) (August 1): 403-404.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65a32943f71e1800a9d66e7f8aaf736156f24bdb" translate="yes" xml:space="preserve">
          <source>Money, restricted model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5565f714fd466ecf5e32b751236e6da76aee72f4" translate="yes" xml:space="preserve">
          <source>Money, unrestricted model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c157ee8fc5670ad0511bed0dd23d54df5c2a2bf" translate="yes" xml:space="preserve">
          <source>Monotonically decreasing such that $K'(u) &amp;lt; 0$ when $u &amp;gt; 0$.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2562d93d4893d7e4273ea91e294d14b0590ecde2" translate="yes" xml:space="preserve">
          <source>MonteCarlo to test fdrcorrection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8da1f72943cf1ec12c43a17c88318b5d06ca7e" translate="yes" xml:space="preserve">
          <source>More advanced usage is possible, including specifying parameter transformations, and specifing names for parameters for a more informative output summary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="319ad3d154db050f4c8a447f40ccbae10d469358" translate="yes" xml:space="preserve">
          <source>More precisely, the covariance matrix of the vector consisting of the columns of the corresponding VAR coefficient matrices (i.e. vec(self.var_rep)).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09a7f5ad6bd7d3611068485d3b442fa89026056d" translate="yes" xml:space="preserve">
          <source>Most moving window statistics, like rolling mean, moments (up to 4th order), min, max, mean, and variance, are covered by the functions for &lt;a href=&quot;http://pandas.pydata.org/pandas-docs/stable/computation.html#moving-rolling-statistics-moments&quot;&gt;Moving (rolling) statistics/moments&lt;/a&gt; in Pandas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dc0b670b9a2be811487eaf5868f3d5b5570f3e8" translate="yes" xml:space="preserve">
          <source>Most of the methods and attributes are inherited from RegressionResults. The special methods that are only available for OLS are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48b6c0682df65be9b84dd4585254ee8a193f9f8e" translate="yes" xml:space="preserve">
          <source>Most of the time with large arrays is spent in &lt;code&gt;argsort&lt;/code&gt;. When we want to calculate the p-value for several methods, then it is more efficient to presort the pvalues, and put the results back into the original order outside of the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03b94e2c145d9d99fe1e46629184a298cb566733" translate="yes" xml:space="preserve">
          <source>Moving Window Statistics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0a2bfc3f700bea1aebde86a81aa4ae12432cd0" translate="yes" xml:space="preserve">
          <source>MultiComparison.allpairtest()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="190271a79e880d09f04b98b4cd9cb170484b8b00" translate="yes" xml:space="preserve">
          <source>MultiComparison.getranks()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66c72f9f1c25c608c2477489535d2ca6dcfedace" translate="yes" xml:space="preserve">
          <source>MultiComparison.kruskal()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29ae966d2b39d798a472b46e6f851bc187258e8c" translate="yes" xml:space="preserve">
          <source>MultiComparison.tukeyhsd()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9824feea3906ec94a6395c8a2f1e20a8d356efe6" translate="yes" xml:space="preserve">
          <source>Multicollinearity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fce72dcdb7105a5eca65307d88c59f21e26f663" translate="yes" xml:space="preserve">
          <source>Multinomial Logit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c12dad151736b97b39bad8c111681b0a96799466" translate="yes" xml:space="preserve">
          <source>Multinomial logit Hessian matrix of the log-likelihood</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="256b71ce13a2dfeca32e468038593ce3193ae20d" translate="yes" xml:space="preserve">
          <source>Multinomial logit cumulative distribution function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ccbb3787327895a5af552f3266068f0f4b68402" translate="yes" xml:space="preserve">
          <source>Multinomial logit model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edcfb4e6e8a14157ad7e6a056af3096de4da18e6" translate="yes" xml:space="preserve">
          <source>MultinomialModel.cdf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f43d4a8515c5e085dcc34e4f118396719de37ef3" translate="yes" xml:space="preserve">
          <source>MultinomialModel.cov_params_func_l1()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36b50fafd1e696ef5fa12f014a7fe86355fbc513" translate="yes" xml:space="preserve">
          <source>MultinomialModel.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="345c1aea79128e575932cc3c96e5505104b3af57" translate="yes" xml:space="preserve">
          <source>MultinomialModel.fit_regularized()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc74ecb62955e1dbf007f9c578d359c6f621ee9" translate="yes" xml:space="preserve">
          <source>MultinomialModel.from_formula()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06ee8f527097eed4fea09973f716f7e0de7b55b5" translate="yes" xml:space="preserve">
          <source>MultinomialModel.hessian()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1e60711652716f31897627ac8b2d664ddb621e2" translate="yes" xml:space="preserve">
          <source>MultinomialModel.information()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="643a8a525a48246bd7e84240a34d86cad4f92d00" translate="yes" xml:space="preserve">
          <source>MultinomialModel.initialize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98b25ef6203fd04db91a0159ab6bb01bf9a96b66" translate="yes" xml:space="preserve">
          <source>MultinomialModel.loglike()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9705ccfa8cefa8fe1b8a6bf118588bd448e0eff" translate="yes" xml:space="preserve">
          <source>MultinomialModel.pdf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a104edb2db304bad2255783eab8f47f17709925" translate="yes" xml:space="preserve">
          <source>MultinomialModel.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eea823c40908a259ef11ae19fb043a900595db3" translate="yes" xml:space="preserve">
          <source>MultinomialModel.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc25fb94c56a5f5f5b60ba768f81be1fa96f2ac2" translate="yes" xml:space="preserve">
          <source>MultinomialResults.aic()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="354cbcfe79deee224b5c60d369a622a40827a025" translate="yes" xml:space="preserve">
          <source>MultinomialResults.bic()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d87aa149d7ef4d3b26f65c7f7741197ff65b669" translate="yes" xml:space="preserve">
          <source>MultinomialResults.bse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ddf6c9f7d9542dce041ed47e261ae8dd2951490" translate="yes" xml:space="preserve">
          <source>MultinomialResults.conf_int()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ffec9ea8e9401624c91363e86b3568508494d2" translate="yes" xml:space="preserve">
          <source>MultinomialResults.cov_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deed3149c54a2c4b045a9c475e8e88faf1b7b76e" translate="yes" xml:space="preserve">
          <source>MultinomialResults.f_test()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3452a9ed73c68186e86689f8d14a4a162d756009" translate="yes" xml:space="preserve">
          <source>MultinomialResults.fittedvalues()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d00c6253512fcb506ca03e26a0b871c71b1799c" translate="yes" xml:space="preserve">
          <source>MultinomialResults.get_margeff()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41223cc4f322be7dc6fbebd6cf0d6c4b47d33bc8" translate="yes" xml:space="preserve">
          <source>MultinomialResults.initialize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed96a5ee218aac4f3ed38100800fb704307a6695" translate="yes" xml:space="preserve">
          <source>MultinomialResults.llf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb6f1b6cc08abefdb1c3ac56fe87bbefb5770188" translate="yes" xml:space="preserve">
          <source>MultinomialResults.llnull()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dfa7804ec19cd68dde7b700a8fedee712b28b74" translate="yes" xml:space="preserve">
          <source>MultinomialResults.llr()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1836d5b10fb49e5c7cd2f1e5972038a3b659de43" translate="yes" xml:space="preserve">
          <source>MultinomialResults.llr_pvalue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c179befb05c0e7c1dc697942e7c2ccf909b1908b" translate="yes" xml:space="preserve">
          <source>MultinomialResults.load()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b01090d7d958bd07831418609d0e89e1b8cb8962" translate="yes" xml:space="preserve">
          <source>MultinomialResults.margeff()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a45646bb15219abb9527a34b7913b59153a383a1" translate="yes" xml:space="preserve">
          <source>MultinomialResults.normalized_cov_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b93a9f6b31eef672835b9dab535d007040f0f536" translate="yes" xml:space="preserve">
          <source>MultinomialResults.pred_table()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf0f481bbfa2c571eee1119e6759b18a41cd2ce2" translate="yes" xml:space="preserve">
          <source>MultinomialResults.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6a067dd8e6f3afb30b458f519291fd317fef28e" translate="yes" xml:space="preserve">
          <source>MultinomialResults.prsquared()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="190eb4f7f674e3e678efe504524fceae4fc88f38" translate="yes" xml:space="preserve">
          <source>MultinomialResults.pvalues()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2c87ded0baaa7ae3892fd9dc721d36b16504f15" translate="yes" xml:space="preserve">
          <source>MultinomialResults.remove_data()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77113ed83743e805034c463d20bb94afe95c413d" translate="yes" xml:space="preserve">
          <source>MultinomialResults.resid_misclassified()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adeb0a9401d9043a6bd9ea834eadd7c0c00803d4" translate="yes" xml:space="preserve">
          <source>MultinomialResults.save()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1711add36399ad25ad8bb0044256620f375865a2" translate="yes" xml:space="preserve">
          <source>MultinomialResults.set_null_options()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed9b938240b3700c027dcb27a5580c2835739d0" translate="yes" xml:space="preserve">
          <source>MultinomialResults.summary()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="993de53f2f6d1e4ed635eab7cfbcabd890aa432f" translate="yes" xml:space="preserve">
          <source>MultinomialResults.summary2()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="897df1dc6d120b74ceb297a05d32089c09b9e7c2" translate="yes" xml:space="preserve">
          <source>MultinomialResults.t_test()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43a992e7ad52e0666c8a7489c51dbbe20efdeda6" translate="yes" xml:space="preserve">
          <source>MultinomialResults.t_test_pairwise()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7412d90441fc2518d92a97c3b7feff889a451310" translate="yes" xml:space="preserve">
          <source>MultinomialResults.tvalues()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="961891d5b3f833219184a6ff815af8409d811770" translate="yes" xml:space="preserve">
          <source>MultinomialResults.wald_test()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efa74ce815aad907f4858a0b4581c6147226f834" translate="yes" xml:space="preserve">
          <source>MultinomialResults.wald_test_terms()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae2ffc75a0e754d0e313ef52a67c0cef807134d9" translate="yes" xml:space="preserve">
          <source>Multiple Imputation with Chained Equations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d4408186b840ff772a15655a6ee8749a1b41574" translate="yes" xml:space="preserve">
          <source>Multiple Imputation with Chained Equations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b0a64ed2e408f423fb6186cad331dccabb5dfa1" translate="yes" xml:space="preserve">
          <source>Multiple Tests and Multiple Comparison Procedures</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5f28ad859de1c58c9aff8fb0ba34321bc7140d9" translate="yes" xml:space="preserve">
          <source>Multiple comparison tests are nice, but lack a good way to be visualized. If you have, say, 6 groups, showing a graph of the means between each group will require 15 confidence intervals. Instead, we can visualize inter-group differences with a single interval for each group mean. Hochberg et al. [1] first proposed this idea and used Tukey&amp;rsquo;s Q critical value to compute the interval widths. Unlike plotting the differences in the means and their respective confidence intervals, any two pairs can be compared for significance by looking for overlap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aded0ee37957684bacd8416c125ca1c113bd0ab2" translate="yes" xml:space="preserve">
          <source>Multiplicative interactions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b977dde840dba8e9937d2ad0eab058c67b9987e1" translate="yes" xml:space="preserve">
          <source>Multiplier test for Null hypothesis that linear specification is correct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abacb895770fd0ed2206f318dc228919fca4439f" translate="yes" xml:space="preserve">
          <source>Multiplier test for Null hypothesis that linear specification is correct.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fca4a166ea543270e1490db718d37ba1791fa5f" translate="yes" xml:space="preserve">
          <source>Multivariate Statistics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfaee3857228fb36679bf4a8b21c8026b2e56c04" translate="yes" xml:space="preserve">
          <source>Multivariate Statistics multivariate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b6db107dab55f478ef63eeec31b1b0df575003" translate="yes" xml:space="preserve">
          <source>Multivariate analysis of variance The implementation of MANOVA is based on multivariate regression and does not assume that the explanatory variables are categorical.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c46cd205dc9da9cbd2756b827bb231cf7e5eb446" translate="yes" xml:space="preserve">
          <source>Multivariate analysis of variance The implementation of MANOVA is based on multivariate regression and does not assume that the explanatory variables are categorical. Any type of variables as in regression is allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6664b97519684ad77b2255d1d4006276ee3c4a9" translate="yes" xml:space="preserve">
          <source>Multivariate estimation (as provided by &lt;code&gt;KDEMultivariate&lt;/code&gt;) uses product kernels. It supports least squares and maximum likelihood cross-validation for bandwidth estimation, as well as estimating mixed continuous, ordered and unordered data. The default kernels (Gaussian, Wang-Ryzin and Aitchison-Aitken) cannot be altered at the moment however. Direct estimation of the conditional density (\(P(X | Y) = P(X, Y) / P(Y)\)) is supported by &lt;code&gt;KDEMultivariateConditional&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05b2b1d0bacd3bcfa10048198143507f1a52671" translate="yes" xml:space="preserve">
          <source>Multivariate kernel density estimator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="add9591aec0bb236895e29f27a5d13ddcf0a5014" translate="yes" xml:space="preserve">
          <source>Multivariate linear model via least squares</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abb11e843b2965f933b12396ce52faceb7fd72e5" translate="yes" xml:space="preserve">
          <source>Multivariate models can have a relatively large number of parameters, and it may be difficult to escape from local minima to find the maximized likelihood. In an attempt to mitigate this problem, I perform an initial maximization step (from the model-defined starting paramters) using the modified Powell method available in Scipy (see the minimize documentation for more information). The resulting parameters are then used as starting parameters in the standard LBFGS optimization method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b531fb5181f6042c0f6d77757d72ab766bbfd17" translate="yes" xml:space="preserve">
          <source>Multivariate test results class Returned by &lt;code&gt;mv_test&lt;/code&gt; method of &lt;code&gt;_MultivariateOLSResults&lt;/code&gt; class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b50ef41653b397e8247a4626bd9f9a661550c058" translate="yes" xml:space="preserve">
          <source>MultivariateOLS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27c97391f0b5e9c10d6e0a474b76e604c9a64f8b" translate="yes" xml:space="preserve">
          <source>MultivariateTestResults</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc367f2b18632eaf43723f414e14d009e796a67e" translate="yes" xml:space="preserve">
          <source>MultivariateTestResults.summary()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="067509487df5103e78ae3700d53f31f5b1211d48" translate="yes" xml:space="preserve">
          <source>Must be in [0, 1]. The L1 penalty has weight L1_wt and the L2 penalty has weight 1 - L1_wt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7f63e5ef7a1cfba355a92ab2c9d4c61d0ae379c" translate="yes" xml:space="preserve">
          <source>Mutlicollinearity Tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b51a60734da64be0e618bacbea2865a8a7dcd669" translate="yes" xml:space="preserve">
          <source>N</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35aaad809433d70f1d5d6793365a86479e00f35d" translate="yes" xml:space="preserve">
          <source>Names of endogenous variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f654b21c2802322663b4629e8e2f1233e86e7c" translate="yes" xml:space="preserve">
          <source>Names of exogenous variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6aa32615b2caab88a052775f1656a54bef6f7ef" translate="yes" xml:space="preserve">
          <source>Neg. Binom. \(NB(\mu,\alpha)\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9948627660816f17ff609703e81c61044f01c7d" translate="yes" xml:space="preserve">
          <source>Negative Binomial</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e32841198f293f307897604867884843952913e4" translate="yes" xml:space="preserve">
          <source>Negative Binomial Model for count data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bceb715435eaec95c22bc72d59f8c18452f3602c" translate="yes" xml:space="preserve">
          <source>Negative Binomial exponential family.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab341e00351d01262f262dbdfd4d3b408ae26075" translate="yes" xml:space="preserve">
          <source>Negative Binomial: the ancillary parameter &lt;code&gt;alpha&lt;/code&gt;, see table</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01fbaa115001bbb33982906d47a680f6eb2dd707" translate="yes" xml:space="preserve">
          <source>Negative binomial model for count data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74ffffd2bb0f728b7191a4f619d2237571851b70" translate="yes" xml:space="preserve">
          <source>NegativeBinomial.cdf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb800c51960436b902c738500a5e04661f33e8f7" translate="yes" xml:space="preserve">
          <source>NegativeBinomial.cov_params_func_l1()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed460ff9f964ca9a72044ccdd5d16723e293f3d" translate="yes" xml:space="preserve">
          <source>NegativeBinomial.deriv()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29da9773e345fbcec51397fd8ca2ec3c8a5f2a87" translate="yes" xml:space="preserve">
          <source>NegativeBinomial.deriv2()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02f8baf91a92199d53408aca77c98a8fa13aa87f" translate="yes" xml:space="preserve">
          <source>NegativeBinomial.deviance()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2945e277f9abe493fe3fc3ec442d5fcc282c9f12" translate="yes" xml:space="preserve">
          <source>NegativeBinomial.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="458ba23b8a8ab618f451f667740a9156da49ef72" translate="yes" xml:space="preserve">
          <source>NegativeBinomial.fit_regularized()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8360814818b85091a40043e9f231e600296bcc33" translate="yes" xml:space="preserve">
          <source>NegativeBinomial.fitted()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a7f35b359b4991505447a11948f85a92b99616" translate="yes" xml:space="preserve">
          <source>NegativeBinomial.from_formula()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf8621af4f4c546582c85a17452cff8184c4e047" translate="yes" xml:space="preserve">
          <source>NegativeBinomial.hessian()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b361038ef22dcf20deacef1ec720673a55669902" translate="yes" xml:space="preserve">
          <source>NegativeBinomial.information()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f652c6b756017476b7ca230ed31b6f56a440d18" translate="yes" xml:space="preserve">
          <source>NegativeBinomial.initialize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f6ab68d2163a23d2460587d03a9e54ed8caf04d" translate="yes" xml:space="preserve">
          <source>NegativeBinomial.inverse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01e16b9924337013e8042a785de4d3d2851e4f0e" translate="yes" xml:space="preserve">
          <source>NegativeBinomial.inverse_deriv()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4de6ca424c1751dae3a5cb516d948d2356e137a8" translate="yes" xml:space="preserve">
          <source>NegativeBinomial.loglike()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76a46d92e66a2a9311bd07e24384064f38a55159" translate="yes" xml:space="preserve">
          <source>NegativeBinomial.loglike_obs()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e22c3b3f6449835ad527000bf06e38fc4373d53b" translate="yes" xml:space="preserve">
          <source>NegativeBinomial.pdf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c11b1c9033d4c08cfdd619ce401062d0525b99c5" translate="yes" xml:space="preserve">
          <source>NegativeBinomial.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0959eb2edf6fd3cb974def8d131c9ad74ef633b" translate="yes" xml:space="preserve">
          <source>NegativeBinomial.resid_anscombe()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e77098a08cb6aaee8538e94eeb73a883b12fe167" translate="yes" xml:space="preserve">
          <source>NegativeBinomial.resid_dev()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df3d6495cf1c51c2d43cbd41051e427828f9a58e" translate="yes" xml:space="preserve">
          <source>NegativeBinomial.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c5f05e4b106d8ebd8b8f6afadcff3bc27d6fcb" translate="yes" xml:space="preserve">
          <source>NegativeBinomial.score_obs()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a02921b72c9267a6ed90426d5bd598319929c6" translate="yes" xml:space="preserve">
          <source>NegativeBinomial.starting_mu()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5aad17a42d9135df99a9399e7956bcd5dd95ce6" translate="yes" xml:space="preserve">
          <source>NegativeBinomial.weights()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="896c699602d9b07f3ee85df589b8204057677eca" translate="yes" xml:space="preserve">
          <source>NegativeBinomialP.cdf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fddec1aee88aee149b5a0407ef18062e96fab97b" translate="yes" xml:space="preserve">
          <source>NegativeBinomialP.convert_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd9fae31b95be49ff86fefe44449acdc4184cbc3" translate="yes" xml:space="preserve">
          <source>NegativeBinomialP.cov_params_func_l1()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c9f3263a022793fec023191413db495110125c" translate="yes" xml:space="preserve">
          <source>NegativeBinomialP.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a603deee13f55df51aef24fa316adcde40c5e6" translate="yes" xml:space="preserve">
          <source>NegativeBinomialP.fit_regularized()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="385a425cf5650f2932674767ac7dafaadb7a9e7f" translate="yes" xml:space="preserve">
          <source>NegativeBinomialP.from_formula()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4151a5ededb4561e0c6b24e7e62ae168e2b67bc7" translate="yes" xml:space="preserve">
          <source>NegativeBinomialP.hessian()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a69f391abd1bb20ef654c2be531fe21d28952deb" translate="yes" xml:space="preserve">
          <source>NegativeBinomialP.information()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ba8473f22e3910500dfc1d0804fb1f35058aa26" translate="yes" xml:space="preserve">
          <source>NegativeBinomialP.initialize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f2e48a7c47f268f124192d09c4c0052eaae486" translate="yes" xml:space="preserve">
          <source>NegativeBinomialP.loglike()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8836dda46cf490798252b9f05e24b0f88c50796b" translate="yes" xml:space="preserve">
          <source>NegativeBinomialP.loglikeobs()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2564b79757bb26112930dd75fbd130a3edb20582" translate="yes" xml:space="preserve">
          <source>NegativeBinomialP.pdf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab159534bcf42a3f6dd7f57521691c8a0d24dd3" translate="yes" xml:space="preserve">
          <source>NegativeBinomialP.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec05b73623498a52033425dbd65822e1936f742e" translate="yes" xml:space="preserve">
          <source>NegativeBinomialP.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adfed6bf004c9e1bc7fb3aa2f30eb845d03f299c" translate="yes" xml:space="preserve">
          <source>NegativeBinomialP.score_obs()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ef17376c50bedf8ade952329c1198751db96229" translate="yes" xml:space="preserve">
          <source>NegativeBinomialResults.aic()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f24c03a5e82f7781d1496b8c76667d7e3d5fe2c1" translate="yes" xml:space="preserve">
          <source>NegativeBinomialResults.bic()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d217076c3f3c38150055345ee1544156e938c0" translate="yes" xml:space="preserve">
          <source>NegativeBinomialResults.bse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec34bfc24f517c68f532848163fd4ef05634a53e" translate="yes" xml:space="preserve">
          <source>NegativeBinomialResults.conf_int()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99c43727c69cca6b343ac173bd6fe98d810b1d2e" translate="yes" xml:space="preserve">
          <source>NegativeBinomialResults.cov_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="163fe7cc3e5d4992835bf9872106e538a758952c" translate="yes" xml:space="preserve">
          <source>NegativeBinomialResults.f_test()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08e26dd05c163380989b8fa529933d2ac954dc79" translate="yes" xml:space="preserve">
          <source>NegativeBinomialResults.fittedvalues()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0366e00556d28567605ff3aa384356f29a86015f" translate="yes" xml:space="preserve">
          <source>NegativeBinomialResults.get_margeff()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05da098a09aacbb6aecdc649833ac34b0c4fff40" translate="yes" xml:space="preserve">
          <source>NegativeBinomialResults.initialize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a18cb9004709d73d286d3ffaa2ef03e41fe77a" translate="yes" xml:space="preserve">
          <source>NegativeBinomialResults.llf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f24237c0104dd193d81fcf9e788ad523683a688" translate="yes" xml:space="preserve">
          <source>NegativeBinomialResults.llnull()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="517434513dbe3f2736ca9cbf954f50a5251a7df7" translate="yes" xml:space="preserve">
          <source>NegativeBinomialResults.llr()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="031557063184226d9b4a1e26cd9eb841d509f41c" translate="yes" xml:space="preserve">
          <source>NegativeBinomialResults.llr_pvalue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8fcb7ab61b289beb39749c36e0a4e6f29f9e2aa" translate="yes" xml:space="preserve">
          <source>NegativeBinomialResults.lnalpha()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ecece4a76cade8515ae55785a08144a9eb7395" translate="yes" xml:space="preserve">
          <source>NegativeBinomialResults.lnalpha_std_err()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b7caabb955045d55c5b0318e0951c5ea59b8b53" translate="yes" xml:space="preserve">
          <source>NegativeBinomialResults.load()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="729ec374cd2d2113a06e285487fd1df994e92bd1" translate="yes" xml:space="preserve">
          <source>NegativeBinomialResults.normalized_cov_params()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0858cadc5ea65c43b631821878f178ab051f3bb1" translate="yes" xml:space="preserve">
          <source>NegativeBinomialResults.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e50e1329c4bbb98d178a7b6fdf11ecd0b73378a0" translate="yes" xml:space="preserve">
          <source>NegativeBinomialResults.prsquared()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c788158287f0332f0e3dd03e2e3bdaf5d3d90cb2" translate="yes" xml:space="preserve">
          <source>NegativeBinomialResults.pvalues()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="492b373266277e7269ffdf8d75a2b6ff55803894" translate="yes" xml:space="preserve">
          <source>NegativeBinomialResults.remove_data()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c9252aee5b0656541c1e851f5ab174eaca501d1" translate="yes" xml:space="preserve">
          <source>NegativeBinomialResults.resid()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1388a6380f95ea44bf5636862bf26841cf1a570" translate="yes" xml:space="preserve">
          <source>NegativeBinomialResults.save()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cbc2c805855f86b9630f36635b2981bb8a36925" translate="yes" xml:space="preserve">
          <source>NegativeBinomialResults.set_null_options()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc90bc14c7033b31a38e4d94b480ebfbd83b25a1" translate="yes" xml:space="preserve">
          <source>NegativeBinomialResults.summary()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b76b944eba2d691dca8c83e9878ae8d45395cb7f" translate="yes" xml:space="preserve">
          <source>NegativeBinomialResults.summary2()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fa123bc124cfa9d3a921ccda33a55aa01b365df" translate="yes" xml:space="preserve">
          <source>NegativeBinomialResults.t_test()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab34f74abdc9e05aab3cbdd9fd04a90d0897b3d" translate="yes" xml:space="preserve">
          <source>NegativeBinomialResults.t_test_pairwise()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d1be56b25572c3117af1d3a74d0750a67693f0" translate="yes" xml:space="preserve">
          <source>NegativeBinomialResults.tvalues()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1524ad61e7fb217c09dece2f67ddb3a25159e23" translate="yes" xml:space="preserve">
          <source>NegativeBinomialResults.wald_test()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="381cb099a146e07875c57219e076f41cf173dbae" translate="yes" xml:space="preserve">
          <source>NegativeBinomialResults.wald_test_terms()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77624880f4c884df1b8b9ce3585d681d7fadbfe3" translate="yes" xml:space="preserve">
          <source>Nested.covariance_matrix()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa97257790338db201c0f53c4bd9600a1524f9f" translate="yes" xml:space="preserve">
          <source>Nested.covariance_matrix_solve()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef80d79fbfb7a3c5ed02a5a3d6eccff99441203" translate="yes" xml:space="preserve">
          <source>Nested.initialize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a558694bc76af214f691587a15b0e8ebb139e806" translate="yes" xml:space="preserve">
          <source>Nested.summary()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1b9b825a082dfb6f7bbca28f1cadfcb47986335" translate="yes" xml:space="preserve">
          <source>Nested.update()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="647a8073ca49a20187f80f2433fa6408a04c85bf" translate="yes" xml:space="preserve">
          <source>New Model Class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebe2a36f9abf135d639ff01f3953ce800d0a50ae" translate="yes" xml:space="preserve">
          <source>Newey-West Andrews Andrews-Moy????</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0df5a43c7450c9dec460d17e3c93d18f71839af" translate="yes" xml:space="preserve">
          <source>Next we fit a model with two random effects for each animal: a random intercept, and a random slope (with respect to time). This means that each pig may have a different baseline weight, as well as growing at a different rate. The formula specifies that &quot;Time&quot; is a covariate with a random coefficient. By default, formulas always include an intercept (which could be suppressed here using &quot;0 + Time&quot; as the formula).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="216604cc924c1f37643439fb16afd8a83273807a" translate="yes" xml:space="preserve">
          <source>Next, we want to get results for the full dataset but using the estimated parameters (on a subset of the data).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ade6ead7aebe372ae91b0aeb03303d664546a843" translate="yes" xml:space="preserve">
          <source>No constant is added by the model unless you are using formulas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bf2d328d0247a0bb6fc5f485e9f9913e7b64c8a" translate="yes" xml:space="preserve">
          <source>No intermediate matrix with more than &lt;code&gt;max_elt&lt;/code&gt; values will be constructed. However memory use could still be high if a large number of correlation values exceed &lt;code&gt;minabs&lt;/code&gt; in magnitude.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="782a5fcdf252ff3754a5006c8742c0f6232d6bca" translate="yes" xml:space="preserve">
          <source>No trend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1823aff0d0a293a8b30109fb0117e2e9bab5fc08" translate="yes" xml:space="preserve">
          <source>No. Iterations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb22695f964aa070f871abb87610dd44a86119e2" translate="yes" xml:space="preserve">
          <source>No. Observations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bde16b3bfe6bad66a53d59c48a4a29c5b3008deb" translate="yes" xml:space="preserve">
          <source>Nobuhiro Taneichi, Yuri Sekiya, Akio Suzukawa, Asymptotic Approximations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8896f6076d5f9d9a2e1b5d4e0c504afe2e3b22c" translate="yes" xml:space="preserve">
          <source>Non-Linearity Tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee72162ffd737ecc3ff6a73bc27577cc06f65ad2" translate="yes" xml:space="preserve">
          <source>Non-Parametric Tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a401d3d448c86a9de9485b256554049ce306aec2" translate="yes" xml:space="preserve">
          <source>Non-switching parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="883a2bb95d83835c5b8589e161c2b8bf0cde3313" translate="yes" xml:space="preserve">
          <source>None - By default no reference line is added to the plot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="354ba9b57ae1aa033d98176043ccdd3a93705c80" translate="yes" xml:space="preserve">
          <source>None - by default no reference line is added to the plot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deaa1b48d3cb5847ee8b49a2b369fc4535313b30" translate="yes" xml:space="preserve">
          <source>None of these are fully working. The formula framework is used by cox and mixed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de264c50ce0d2c006c2c0fe953f64260873a219" translate="yes" xml:space="preserve">
          <source>NonlinearIVGMM.calc_weightmatrix()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c42e31d83cd637d9f72358faa79338b83ac872ec" translate="yes" xml:space="preserve">
          <source>NonlinearIVGMM.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8343c4ff629aa92bcf623ca21250e1d67107c10" translate="yes" xml:space="preserve">
          <source>NonlinearIVGMM.fitgmm()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9a05d10314693a260503bc3af3e0663b5f1b4b6" translate="yes" xml:space="preserve">
          <source>NonlinearIVGMM.fitgmm_cu()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1303620ef744e5bab5ceafc9e201b08dfbae56cd" translate="yes" xml:space="preserve">
          <source>NonlinearIVGMM.fititer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74fedab4cc254c4a549903488793cdb5eae37ef4" translate="yes" xml:space="preserve">
          <source>NonlinearIVGMM.fitstart()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dadbefb1f4e497ffa7a7ede324eb50992b438f69" translate="yes" xml:space="preserve">
          <source>NonlinearIVGMM.from_formula()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="619ad12e9afea9cde56ba7a20f14f1ad8b6abb13" translate="yes" xml:space="preserve">
          <source>NonlinearIVGMM.get_error()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c676281ec2697cbfc30e003b296b6ff7f8612004" translate="yes" xml:space="preserve">
          <source>NonlinearIVGMM.gmmobjective()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12fff9fe1db62e8475c0d1bf99d73d51c41bdbe4" translate="yes" xml:space="preserve">
          <source>NonlinearIVGMM.gmmobjective_cu()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f1c39c25215e23ce6c08464b233dd243eb6ec53" translate="yes" xml:space="preserve">
          <source>NonlinearIVGMM.gradient_momcond()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1019ee380dc54c2c01696b0dccbe98a748b6dfe" translate="yes" xml:space="preserve">
          <source>NonlinearIVGMM.jac_error()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0604dc317189124afa2b6ff35e38e7d638a0994" translate="yes" xml:space="preserve">
          <source>NonlinearIVGMM.jac_func()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5a4f70ef4db8a29a73f2de3c00f129cde79a13c" translate="yes" xml:space="preserve">
          <source>NonlinearIVGMM.momcond()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb214a5daeaf05fa3519481bf0ad8754b51f2474" translate="yes" xml:space="preserve">
          <source>NonlinearIVGMM.momcond_mean()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cece8f7dac9a85c65322fdb704d877802c0e6048" translate="yes" xml:space="preserve">
          <source>NonlinearIVGMM.predict()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2abf09bdf9636dc100b0accd4939005ac918d070" translate="yes" xml:space="preserve">
          <source>NonlinearIVGMM.score()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7967046852411f30348fdcd103352287b1395763" translate="yes" xml:space="preserve">
          <source>NonlinearIVGMM.score_cu()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc33241a1cccfa5862ade5327110697ca28df90d" translate="yes" xml:space="preserve">
          <source>NonlinearIVGMM.set_param_names()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06cf4466b245f6be08d2abb5f747e4d74af4bc23" translate="yes" xml:space="preserve">
          <source>NonlinearIVGMM.start_weights()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ad6c8432e8cfb84bf90bd5f13b95a769f22db69" translate="yes" xml:space="preserve">
          <source>Nonparametric Methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea940296d3b67472c4cb0ecde95eb5506805739" translate="yes" xml:space="preserve">
          <source>Nonparametric Methods nonparametric</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bba68d55110faefa2b1e0ff8004a2926b4383d73" translate="yes" xml:space="preserve">
          <source>Nonparametric Statistics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f2e60608e78fdec199381af19ce41ab84daac52" translate="yes" xml:space="preserve">
          <source>Nonparametric censored regression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb31510d764a1ca5973bf552051dd8f8c24667bb" translate="yes" xml:space="preserve">
          <source>Nonparametric kernel regression class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b30bfcabe771e13b15f94307db437939529190db" translate="yes" xml:space="preserve">
          <source>NormExpan_gen.cdf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ac5810279f17136ed53754965744fb07f02cecf" translate="yes" xml:space="preserve">
          <source>NormExpan_gen.entropy()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84752927344e3ef09f4b01314dead687387609eb" translate="yes" xml:space="preserve">
          <source>NormExpan_gen.expect()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41aa3161fe2ec5be9fd47d0e39244374c7d3ede1" translate="yes" xml:space="preserve">
          <source>NormExpan_gen.fit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adff645c3fc4a263899f8d1a33a4b29caaa32f70" translate="yes" xml:space="preserve">
          <source>NormExpan_gen.fit_loc_scale()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad338dce1e6b0c5e33e6390494dc4ca1fe4cab4" translate="yes" xml:space="preserve">
          <source>NormExpan_gen.freeze()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a65bb12a2c10077786cc3a9be87c9cd3d198b8a3" translate="yes" xml:space="preserve">
          <source>NormExpan_gen.interval()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6298f7defe98115b1a3108e89c759280b5b3cc83" translate="yes" xml:space="preserve">
          <source>NormExpan_gen.isf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a1c6ab5c7123291fbc806ea35d131d4a9c49310" translate="yes" xml:space="preserve">
          <source>NormExpan_gen.logcdf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fa6304dfeea3a55adb44f4714d41b328b5334b8" translate="yes" xml:space="preserve">
          <source>NormExpan_gen.logpdf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aac26d37cd3bfa903de779f6326bb5911f63e925" translate="yes" xml:space="preserve">
          <source>NormExpan_gen.logsf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b56d23381c450176318e650f1d5fe047997b3928" translate="yes" xml:space="preserve">
          <source>NormExpan_gen.mean()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5717bb5f372c7d19d90efc32634c274a4df8c47a" translate="yes" xml:space="preserve">
          <source>NormExpan_gen.median()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="844fdfaa64f22c37bf589fcc27414235f81a2a9b" translate="yes" xml:space="preserve">
          <source>NormExpan_gen.moment()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ce02be31dcb522b76f0af5c3b02a111bb457322" translate="yes" xml:space="preserve">
          <source>NormExpan_gen.nnlf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac114ad6cf8d4f9ad92831d01fbf08b642d2599b" translate="yes" xml:space="preserve">
          <source>NormExpan_gen.pdf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="471f5435411b98ef465a598ed5d0fac99020dbd2" translate="yes" xml:space="preserve">
          <source>NormExpan_gen.ppf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b37c20c6ee145853797ffd2d9a056711c94e0ce" translate="yes" xml:space="preserve">
          <source>NormExpan_gen.rvs()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d41a88c5fec98d216c99e5d6a839341ad9f7d98b" translate="yes" xml:space="preserve">
          <source>NormExpan_gen.sf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f072d0e8017a684491a8b71d70635bc7c4a2d4" translate="yes" xml:space="preserve">
          <source>NormExpan_gen.stats()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeacf02755cf4f01135a8649d5b3ac928a244c98" translate="yes" xml:space="preserve">
          <source>NormExpan_gen.std()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed4830095ad58ec743a37b0e16f8e2d5bd041d73" translate="yes" xml:space="preserve">
          <source>NormExpan_gen.var()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa27f80f785b97e31c3224abfad5dd5420fa74aa" translate="yes" xml:space="preserve">
          <source>Normal Q-Q plot, with Normal reference line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="478d5d632a437dc999b5999e84bdd58c219db59b" translate="yes" xml:space="preserve">
          <source>NormalIndPower.plot_power()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="713462a95a421c84bffa2ac9da6253783e117584" translate="yes" xml:space="preserve">
          <source>NormalIndPower.power()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04e6fd8d36f6a15f0d1639e6421520874682d9d1" translate="yes" xml:space="preserve">
          <source>NormalIndPower.solve_power()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a73670c63275f1d5ea5653b60f37604a72e4b205" translate="yes" xml:space="preserve">
          <source>Normality</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10f2db6c6fec84d910126a04e00545fed79f883d" translate="yes" xml:space="preserve">
          <source>Normality and Distribution Tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ccc651cf5a57ad9b601aacf706b3342944858b1" translate="yes" xml:space="preserve">
          <source>Normality of the residuals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8ca93087268ea1fed169246bb7a938e83427d30" translate="yes" xml:space="preserve">
          <source>Normality tests in scipy stats</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e70050117f80dad1834f3e03764a7612730d6984" translate="yes" xml:space="preserve">
          <source>NormalityTestResults</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9a668e096d032b5e6685990639e8e4dc8c90d23" translate="yes" xml:space="preserve">
          <source>NormalityTestResults.summary()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c64131550e1189d9ad0680c406bcc6903a9ce4d4" translate="yes" xml:space="preserve">
          <source>Normalization ?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0636a5596e36360e2c9ab66f20beee31f2e45826" translate="yes" xml:space="preserve">
          <source>Normalization such that $\int_{-\infty}^{\infty} K(u) \ du = 1$ .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a90868659cdfaecda85be8ed8ae56e8beaba389f" translate="yes" xml:space="preserve">
          <source>Norms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca9577005391ff731c9b3c22af0b31d5c5c49e3" translate="yes" xml:space="preserve">
          <source>Not Implemented Yet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce0e1441fd9d27f2368a8b63fb688685b6c16e14" translate="yes" xml:space="preserve">
          <source>Not all distributions return estimates for the shape parameters. &lt;code&gt;norm&lt;/code&gt; for example just returns estimates for location and scale:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a3bf9d19fd66ca3b94b41c673fa9ae603f6385e" translate="yes" xml:space="preserve">
          <source>Not all of these link functions are currently available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98526ac0ed86fc8d486617927d86115b922f945b" translate="yes" xml:space="preserve">
          <source>Not clear: Assumption 2 in Ploberger, Kramer assumes that exog x have asymptotically zero mean, x.mean(0) = [1, 0, 0, &amp;hellip;, 0] Is this really necessary? I don&amp;rsquo;t see how it can affect the test statistic under the null. It does make a difference under the alternative. Also, the asymptotic distribution of test statistic depends on this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="000abe19aa3ad38ac67e1ef31cb6a01beb22dd22" translate="yes" xml:space="preserve">
          <source>Not fully tested for time series models, tsa, and might delete too much for prediction or not all that would be possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b154f529bb9fc3f4f378f4f986b5a938e268ac52" translate="yes" xml:space="preserve">
          <source>Not implemented for state space models</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e3a83876d7f2e1e6e891b31c8a0490007892f57" translate="yes" xml:space="preserve">
          <source>Not tested yet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d19a7f1de550e32bee7918b870a9336ebb1f151b" translate="yes" xml:space="preserve">
          <source>Not used anymore</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe76d65df44d84972775f2bd4a0719ebc43edd15" translate="yes" xml:space="preserve">
          <source>Not yet implemented for Zero Inflated Models</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ceae088184ecb2a3d44c94c6258a6f897118f5f" translate="yes" xml:space="preserve">
          <source>NotImplemented</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a869e583ab485c974fa8e16ad7162d75e0f91bbe" translate="yes" xml:space="preserve">
          <source>Notation Warning: our name &lt;code&gt;exog&lt;/code&gt; stands for the explanatory variables, and includes both exogenous and explanatory variables that are endogenous, i.e. included endogenous variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e17a0c5ca957f1c1fd54b1d6bf9063c58177540d" translate="yes" xml:space="preserve">
          <source>Notation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4fc617b7f94359c573aba65016cb5cf12e2a097" translate="yes" xml:space="preserve">
          <source>Note that both of these returned quantities will need to be negated before being minimized by the maximum likelihood fitting machinery.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43835c34a5ee133e08c97527a57d6d3a5955d1ba" translate="yes" xml:space="preserve">
          <source>Note that code for semi-parametric partial linear models and single index models, based on &lt;code&gt;KernelReg&lt;/code&gt;, can be found in the sandbox.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e9b3953ab7df8920f2fdf008d24d593b0c6993b" translate="yes" xml:space="preserve">
          <source>Note that for some families, e.g. Binomial, the posterior mode may be difficult to find numerically if &lt;code&gt;vcp_p&lt;/code&gt; is set to too large of a value. Setting &lt;code&gt;vcp_p&lt;/code&gt; to 0.5 seems to work well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e69db2b88114f7c44f40844f113be74418f9614" translate="yes" xml:space="preserve">
          <source>Note that for the (unregularized) Beta function, one has \(Beta(z,a,b) = z^a/a * H2F1(a,1-b,a+1,z)\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1c192bd4db4173d975d01fc2c71b655cc2c6675" translate="yes" xml:space="preserve">
          <source>Note that for the risk ratio, the analysis is not symmetric with respect to the rows and columns of the contingency table. The two rows define population subgroups, column 0 is the number of &amp;lsquo;events&amp;rsquo;, and column 1 is the number of &amp;lsquo;non-events&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56c60175a21a3cbf1270e0e3ce81ac80ab081bb5" translate="yes" xml:space="preserve">
          <source>Note that if &lt;code&gt;exog&lt;/code&gt; is specified, then marginal effects for all variables not specified by &lt;code&gt;exog&lt;/code&gt; are calculated using the &lt;code&gt;at&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76dd9cee800522c6092ab950c3a25ab080352e1b" translate="yes" xml:space="preserve">
          <source>Note that if using a Scipy version less than 0.16, the options MEMORY_NO_GAIN, MEMORY_NO_SMOOTHING, and MEMORY_NO_STD_FORECAST have no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05df42556fe73aed20a746256f5b0ea53229af6b" translate="yes" xml:space="preserve">
          <source>Note that in the Statsmodels summary of results, the fixed effects and random effects parameter estimates are shown in a single table. The random effect for animal is labeled &quot;Intercept RE&quot; in the Statmodels output above. In the LME4 output, this effect is the pig intercept under the random effects section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e90344a4c1bb61baa59366d3cc4d05775b7e501" translate="yes" xml:space="preserve">
          <source>Note that in the full VARMA(p,q) case there is a fundamental identification problem in that the coefficient matrices \(\{A_i, M_j\}\) are not generally unique, meaning that for a given time series process there may be multiple sets of matrices that equivalently represent it. See Chapter 12 of &lt;a href=&quot;#id3&quot; id=&quot;id2&quot;&gt;[1]&lt;/a&gt; for more informationl. Although this class can be used to estimate VARMA(p,q) models, a warning is issued to remind users that no steps have been taken to ensure identification in this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fcbbfe086f853c37f609b829a71db19183a26ff" translate="yes" xml:space="preserve">
          <source>Note that most of the tests described here only return a tuple of numbers, without any annotation. A full description of outputs is always included in the docstring and in the online &lt;code&gt;statsmodels&lt;/code&gt; documentation. For presentation purposes, we use the &lt;code&gt;zip(name,test)&lt;/code&gt; construct to pretty-print short descriptions in the examples below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49bc7f641c3190c19e1f39aa21b9029b94e1de71" translate="yes" xml:space="preserve">
          <source>Note that only the first method is available if using a Scipy version older than 0.16.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="266ce165d8e5eac64c50b3c5abc3a00d82b8ab22" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;&amp;lsquo;standard&amp;rsquo;&lt;/code&gt; formulas are returned from the &lt;code&gt;aic&lt;/code&gt;, &lt;code&gt;bic&lt;/code&gt;, and &lt;code&gt;hqic&lt;/code&gt; results attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7bbcbd4d2d630a363bec04d96d2a679cd6fbec0" translate="yes" xml:space="preserve">
          <source>Note that the filter method may also be specified by directly modifying the class attributes which are defined similarly to the keyword arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa5dca27a92e11b3d087ea17a9f4cefa29d66c6e" translate="yes" xml:space="preserve">
          <source>Note that the inversion method may also be specified by directly modifying the class attributes which are defined similarly to the keyword arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a39deb7fa3d226e87986becb68261718bed0a6c" translate="yes" xml:space="preserve">
          <source>Note that the memory conservation method may also be specified by directly modifying the class attributes which are defined similarly to the keyword arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="462021a70179d499e39076baa559ed51d5b4ad3e" translate="yes" xml:space="preserve">
          <source>Note that the principal components are computed using a SVD and so the correlation matrix is never constructed, unless method=&amp;rsquo;eig&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="847923f0353e75e0fcfac01904f31b2e08c1f627" translate="yes" xml:space="preserve">
          <source>Note that the quadratic term in OLS regression will capture outlier effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93611020b3121706400fe809592f5a4cca24366e" translate="yes" xml:space="preserve">
          <source>Note that the reduced form lag polynomials will be written as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58db3bd271fa04ce4e0be600a21d31c24141e209" translate="yes" xml:space="preserve">
          <source>Note that the sampling distribution of variance parameters is strongly skewed unless the sample size is large, so these standard errors may not give meaningful confidence intervals or p-values if used in the usual way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c08a34d20025f30ae7ea98999d7bf745b988df8e" translate="yes" xml:space="preserve">
          <source>Note that the smoother output may also be specified by directly modifying the class attributes which are defined similarly to the keyword arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8efa6f95bf28ce66b0ff47670097159be9565b65" translate="yes" xml:space="preserve">
          <source>Note that the stability method may also be specified by directly modifying the class attributes which are defined similarly to the keyword arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feb53afc4dd7d21904e546396a6f9e9f27dd6168" translate="yes" xml:space="preserve">
          <source>Note that tranformations are done after each observation is calculated. Semi-elasticities for binary variables are computed using the midpoint method. &amp;lsquo;dyex&amp;rsquo; and &amp;lsquo;eyex&amp;rsquo; do not make sense for discrete variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd8f53d32e751d565987f7e73efe19d3bafb64d" translate="yes" xml:space="preserve">
          <source>Note that while \(\phi\) is the same for every observation \(y_i\) and therefore does not influence the estimation of \(\beta\), the weights \(w_i\) might be different for every \(y_i\) such that the estimation of \(\beta\) depends on them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="966ec6ec85ec5154a54672fb8b5ed91bfd4ea7f1" translate="yes" xml:space="preserve">
          <source>Note the &lt;code&gt;plot&lt;/code&gt; function is flexible and can plot only variables of interest if so desired:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7360b1f05927bf4cfc5b382bc2f31d611ff827d1" translate="yes" xml:space="preserve">
          <source>Note. If categorial factors are supplied levels will be internally recoded to integers. This ensures matplotlib compatiblity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a4da45e9328e5317a51c9de7787bf156e23890c" translate="yes" xml:space="preserve">
          <source>Note: In our definition we do not divide by n in the log-likelihood version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c615ced675f8b6ca93e1ed3f44a329d84d5ee1e7" translate="yes" xml:space="preserve">
          <source>Note: Statsmodels currently fails on the NIST benchmark case for Filip if the data is not rescaled, see &lt;a href=&quot;http://jpktd.blogspot.ca/2012/03/numerical-accuracy-in-linear-least.html&quot;&gt;this blog&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94d1b7562ffafd47fd8a77457efb9a4f18c34d0a" translate="yes" xml:space="preserve">
          <source>Note: This attribute only exists if predict has been called. It holds the dates associated with the last call to predict.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1113c5fc37a9f454ba73feca880d9e6a37ea5f8e" translate="yes" xml:space="preserve">
          <source>Note: This script is based heavily on Jonathan Taylor's class notes &lt;a href=&quot;http://www.stanford.edu/class/stats191/interactions.html&quot;&gt;http://www.stanford.edu/class/stats191/interactions.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="897cbaddec83172c50df5e2751eee4b6b3a4a917" translate="yes" xml:space="preserve">
          <source>Note: the transformation, it&amp;rsquo;s inverse and derivatives need to be fully specified: func, funcinvplus, funcinvminus, derivplus, derivminus. Currently no numerical derivatives or inverse are calculated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0399258298bf3ac6d12c3a0cf7ff78779da423fe" translate="yes" xml:space="preserve">
          <source>Notice that $\beta_0$ is, as described in example 1 above, &lt;em&gt;not&lt;/em&gt; the same thing as an intercept specified by &lt;code&gt;trend='c'&lt;/code&gt;. Whereas in the examples above we estimated the intercept of the model via the trend polynomial, here, we demonstrate how to estimate $\beta_0$ itself by adding a constant to the exogenous dataset. In the output, the $beta_0$ is called &lt;code&gt;const&lt;/code&gt;, whereas above the intercept $c$ was called &lt;code&gt;intercept&lt;/code&gt; in the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adea60d668e89f0479a84a4c5673f21b0287482b" translate="yes" xml:space="preserve">
          <source>Notice that here we used an additional argument &lt;code&gt;simple_differencing=True&lt;/code&gt;. This controls how the order of integration is handled in ARIMA models. If &lt;code&gt;simple_differencing=True&lt;/code&gt;, then the time series provided as &lt;code&gt;endog&lt;/code&gt; is literatlly differenced and an ARMA model is fit to the resulting new time series. This implies that a number of initial periods are lost to the differencing process, however it may be necessary either to compare results to other packages (e.g. Stata's &lt;code&gt;arima&lt;/code&gt; always uses simple differencing) or if the seasonal periodicity is large.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b53b3f842e72aa4975dc536a6cb0bb1486fa3273" translate="yes" xml:space="preserve">
          <source>Notice that much of the state space representation is composed of known values; in fact the only parts in which parameters to be estimated appear are in the variance / covariance matrices:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ce09454365b4e71d2e52b268658c14b6d76ea5a" translate="yes" xml:space="preserve">
          <source>Notice that one difference between the Stata output and the output below is that Stata estimates the following model:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6395359149ba5d2d9af2485c2270cff782ea7b22" translate="yes" xml:space="preserve">
          <source>Notice that the &lt;code&gt;GenericMaximumLikelihood&lt;/code&gt; class provides automatic differentiation, so we didn't have to provide Hessian or Score functions in order to calculate the covariance estimates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d95063981a5de1a5c5a59a76dca5d29c715ea0b3" translate="yes" xml:space="preserve">
          <source>Notice that the first equation is just a linear regression, and the second equation just describes the process followed by the error component as SARIMA (as was described in example 3). One reason for this specification is that the estimated parameters have their natural interpretations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12906309d6255bb6270adc6c2a6dde72946ea3fe" translate="yes" xml:space="preserve">
          <source>Notice that there is one missing observation in the &lt;em&gt;Region&lt;/em&gt; column. We eliminate it using a &lt;code&gt;DataFrame&lt;/code&gt; method provided by &lt;code&gt;pandas&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be2c6a012ccd2707a70e0841f1a79416c65e5b9f" translate="yes" xml:space="preserve">
          <source>Notice that we called &lt;code&gt;statsmodels.formula.api&lt;/code&gt; instead of the usual &lt;code&gt;statsmodels.api&lt;/code&gt;. The &lt;code&gt;formula.api&lt;/code&gt; hosts many of the same functions found in &lt;code&gt;api&lt;/code&gt; (e.g. OLS, GLM), but it also holds lower case counterparts for most of these models. In general, lower case models accept &lt;code&gt;formula&lt;/code&gt; and &lt;code&gt;df&lt;/code&gt; arguments, whereas upper case ones take &lt;code&gt;endog&lt;/code&gt; and &lt;code&gt;exog&lt;/code&gt; design matrices. &lt;code&gt;formula&lt;/code&gt; accepts a string which describes the model in terms of a &lt;code&gt;patsy&lt;/code&gt; formula. &lt;code&gt;df&lt;/code&gt; takes a &lt;a href=&quot;http://pandas.pydata.org/&quot;&gt;pandas&lt;/a&gt; data frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19cc92b07a5aa489a97580054876413727c044f9" translate="yes" xml:space="preserve">
          <source>Notice that we have introduced two new state variables, $f_{t-2}$ and $f_{t-3}$, which means we need to update the transition equation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5f4a92c6694c21a4547ccfbb37f933fbadafb6a" translate="yes" xml:space="preserve">
          <source>Now plot the reiduals within the groups separately:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b761523f86bf0175c9daf302be2a9781da8e0dc0" translate="yes" xml:space="preserve">
          <source>Now suppose we also have a previous test score called &amp;lsquo;pretest&amp;rsquo;. If we want the relationship between pretest scores and the current test to vary by classroom, we can specify a random slope for the pretest score</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="975472ff4809c57eab618233e92b33f9dc129932" translate="yes" xml:space="preserve">
          <source>Now we can fit all four parameters (&lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;loc&lt;/code&gt; and &lt;code&gt;scale&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cd580ee65168cafb56a578b3d6113c3da4f4b56" translate="yes" xml:space="preserve">
          <source>Now we only have to pass the single variable and we get the transformed right-hand side variables automatically</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3eff61516a830f92e327ea3a1a563ce98124b38" translate="yes" xml:space="preserve">
          <source>Now we will test some interactions using anova or f_test</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94b73ef98ff8b870b315d58ab9306a55b8f810da" translate="yes" xml:space="preserve">
          <source>Now, optionally, we can add some dates information. For this example, we'll use a pandas time series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38c35ec2c48272c52f8bc31368595505d7be8f76" translate="yes" xml:space="preserve">
          <source>Now, the corresponding observation equation should look like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5442e9d5f4214f7d0b4411cf85cb2026349c6898" translate="yes" xml:space="preserve">
          <source>Null hypothesis is no serial correlation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bedb1fa258399884af7002f80bde36759697459f" translate="yes" xml:space="preserve">
          <source>Null hypothesis is normality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03a0a1fa9f23e8d47e868347d223268894126993" translate="yes" xml:space="preserve">
          <source>Null hypothesis is that there is no Granger-causality for the indicated variables. The degrees of freedom in the F-test are based on the number of variables in the VAR system, that is, degrees of freedom are equal to the number of equations in the VAR times degree of freedom of a single equation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d279fdcdea6b189cadcb0401ce51f754928ecbd2" translate="yes" xml:space="preserve">
          <source>NullDistribution.pdf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9877431466c40eac180655ca4dbe507549fae945" translate="yes" xml:space="preserve">
          <source>Number of estimated parameters, including the intercept / trends</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bf7bda9b8250f1a277c5540e4d746f86152f0c9" translate="yes" xml:space="preserve">
          <source>Number of observations in the entire sample (ie., not just the length of the autocorrelation function results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c199f15579cc8273e3e1de83b96ac10d1a684f" translate="yes" xml:space="preserve">
          <source>Number of observations minus number of estimated parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9df537cc53ad109cfea2215ac5c8f0a62b60adb" translate="yes" xml:space="preserve">
          <source>Number of observations n less the number of parameters p.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae5a9201afb3d7a5748fd41396e6e4766062bc49" translate="yes" xml:space="preserve">
          <source>Number of time periods in results</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b75038377d633ee46b9b853a3273b86d3d665c5c" translate="yes" xml:space="preserve">
          <source>Numerical Differentiation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="171579aa91fc18cd9aa3ba72ac9c683d4112afac" translate="yes" xml:space="preserve">
          <source>Numerical precision</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c303ea6641221827f002b89fa997a9eb769c297" translate="yes" xml:space="preserve">
          <source>OLS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="637efce51cdbe78d9db6e144298b63ccca79ba38" translate="yes" xml:space="preserve">
          <source>OLS : ordinary least squares for i.i.d. errors \(\Sigma=\textbf{I}\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8157d93c326a0880193039ba0dca43741550a517" translate="yes" xml:space="preserve">
          <source>OLS estimation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e53e4c35d1934193274536cf17fe604802a396f" translate="yes" xml:space="preserve">
          <source>OLS model whitener does nothing: returns Y.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a79692c2c3f5500376d5f5fc2425dc5385f5376d" translate="yes" xml:space="preserve">
          <source>OLS non-linear curve but linear in parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba9fdd225b111674aea2faaf6b2d595a83a5d757" translate="yes" xml:space="preserve">
          <source>OLS regression using formulas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7745ea4d47e49fb31d7472e580e0f7b2b1db1eae" translate="yes" xml:space="preserve">
          <source>OLS vs. WLS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c62884618ab4274eece82d256d77de7ef08b2f57" translate="yes" xml:space="preserve">
          <source>OLS with dummy variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abe3bf054ce0c7fdf15a6ee6c161f2a47bd628d3" translate="yes" xml:space="preserve">
          <source>OLS.fit()</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
