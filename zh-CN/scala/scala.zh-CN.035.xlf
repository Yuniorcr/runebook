<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="scala">
    <body>
      <group id="scala">
        <trans-unit id="33b1e7f9913637690f0b93155a3a54602d28d480" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="649f3cc344e7cc73aec0ff300f89976061de784c" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03f5644660d02f9b570c8eddbc3a837916dc419b" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9aaed43bd887fda3252b28c3ff4882b7238edcb" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9e580fec12faade3404baceb402b8ac0c324c09" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fc7b6b2d8b454f1f69a7fa25dfe9b8c1d2a4b96" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23ab963c29d8c29599e3800f0c3b3b7ebb52ee0f" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10fa068fb69bf78f395a37c84bb4270647ad7c49" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7f3a81b9c24d37ce98ddc2f183606d00a095aed" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae6fb89cdd75b8c4fdeaca3b9574f83b726efa61" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7292d56f7be2f25fc71980cd00ae627aa84a20e1" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7177ce4bdea69242970bb2b93aa79b61b845d29" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b2953597c5641f63f7dec43b7c9124f3dcfe0e7" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aeb90262cdb95d29963ecf5e2a52f8674bdb07f" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3fbcf443cc46a1b5a875e285681b0efa41b6a53" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae3c724e79ddd242a349a01c7b6278b3cd70e76" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="653496bc42183fb142c9e9a6fc2794e09196e4a2" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bb35e7a1d35d62825bb09055b885d409a5b17af" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4322a7abbf704773c93d5ea3a5387690f4da4a8b" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ffda08ec741032b31783093b57ecfca2b6dd699" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23f17db1b707c2b48d22bf67c339e08801f2939e" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2bee913fdcc8071fca77c9ddad81ac551f04777" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90404c94ed39e95133aa32b2a3ad760ee131b2f9" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e46a04e9645dfe52e7f3a10eab67bc5151c7a96" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de004b1982b1d8a2ddfc81ebf86890441eacc9b6" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b01e3e0c4f1b362224e72f1812ae0310b44e4e72" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0663c72c7a74a47853ffe38ea2ccdcac238398f6" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1396c7a4913821480a657444c94dd1d4666b3194" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efb25b78ace0da2fab38b1760751caae0cb50d7a" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="995c77e3d165458ca2fd38b906654f8f13dfc02a" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec779587397b1f7c6e23d28bf93dbe04ac7dab40" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c0e536ca98ad81851fbe385576bcf0ce2dafc3a" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="490c7a77a84f1438ddb709cc8e1ce8238a849192" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e2e2b9ed6a9a1d8b763c0e53b7a3e139273def" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f16919a4cf42883fc496ef451abff5a45d420ee3" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab91439faae3e6b7fc9b7c4b674fb553ed2e8f8e" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc232ab9e1e640c15babbf19443d105f310636c9" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69b4553f95f8a114f5d48929c50c5a23c85dcfd7" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8c63b465f0a74372eaf0a7ae1f83e07d442ae94" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e59852000bb9fec5260755a19320b2c016b78b0" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f84dcb16b22a93b047a7d7b4062e0c49db615e92" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c1a49c75061cd1e2f2498f4e09524b3371ad034" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57c38303da3ffc02d952c83798fa76f4b2e79bed" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b34eb652c0495912881c999616ce216aa9fc9835" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38e68e57f0c7b9011a1b65670ad3afd2e03cc0b3" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e13487fa7c69e57a16b7078105ae5507eb9f9679" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c80868049f63a78d3634e9e0098f557ebc3acb4" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4ed1c10307878eebffa3a71679669db52158bd2" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a7fe74030206cf06141afafc38991f48e3f1f9" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f874983ad97433367f4b718ec8519a2e9e1656bb" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c6052e215b09a6652ccc4526a9afc11de25f643" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5153d28d3d4bc36f1cf58a571e633c795208b4f8" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d251a0cf9a360bcc196ccdec288c944b91564ad" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="849b26dcf8f08098d2c35373c86ae521b90e1890" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="257a5b6ebecba3937d36b0063abcbf10e50f20af" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="201924a171a2aacc82dac4e43e3484803efd1887" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaa47cd690c16866699b3d5a20fa9fd326153446" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfee790f737d7189083afadfa95d33418294d23a" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d4a0016b32bd7b9415a9cc3285907a6cd17e90b" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f50fb8124a5a1e561fc0817b8fcb0242c37ec91c" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d3ec7b2d71dc1887db5d2c82cefc105afae564" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ecdb7f65519c46b4eb36e25105237678802cd03" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89bae032ba5206d32dfde675767c0dc705cdeedb" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="736a2e64246b46c66ce0c99d7b582f8ec3faf7fe" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb3ddc2a09d9587f6a7ddb55f6a4ec9a5b3e0611" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="171a5a912ad82b9b328896ce24d34ee8c5d7e43a" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ec761b6dc97698357f5f16c381b7876f0c201bb" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42416f3b9abf6de61703a6ff22fbf19a37104604" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d8843346865260b491f96e43e41ba2cfdf39d23" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fa546f8d33d8c5fab7b9f62af4f62dd0e82decd" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fc64321377a0a4d7714ebd5c1970dd7b4ae611d" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bc060fe2a489a43a888c0d158d26db3320dbef7" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8b61f2bc040661f51e1ab3e22d7e87f111e4979" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;../partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c8742d288a6ecf3cce764f4709309c6382d4413" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52313b9fc6bf0b33dfaa7857299713536db087dc" translate="yes" xml:space="preserve">
          <source>def elementWise: &lt;a href=&quot;partialfunction%24%24elementwiseextractor&quot; id=&quot;scala.PartialFunction.ElementWiseExtractor&quot; name=&quot;scala.PartialFunction.ElementWiseExtractor&quot;&gt;ElementWiseExtractor&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38fde964861400ac4ae5f4d1c3c1f2129a689bb0" translate="yes" xml:space="preserve">
          <source>def elems: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8450a2b30662fa7bf9a8124c1c776387278ac22" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;../collection/mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebb74af47efd9e8bf5e005fcbee0874c3babc6f0" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51bb1dacb54c94854e6f19b71fc6e31bca53f99" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ce333b0372a7173fcfb16ec627c9b1fb2c81d6e" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1ddd30d221b24152b2439914a1ba8ed0776cd40" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6808affac871a29591b3da9e6e7ec3405898e765" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e45a23c35c01d85097bd5a99128be21155cc6a24" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f96ebe155ae33c3ab8430e755b9316d8f6541b73" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d8dfdcb66d923bc2318af9e3eb9766068ce832f" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5678505480c09fe38f2ba27ef9c0318021ed8e3" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a87928ba40fd19d8e0123f68ef8d4a5b47aa24ab" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ce31011741301045a916e6394bd750cd871376f" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b9e0a38247440f5b45d91a836b63fde043de08a" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb47e68a6e49569ffc9a224a8a20c18bad0230c6" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c359a9de23144b0b878f9adb5ad7e7a503eed5" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="375b28cd2ae95179b6d435c08d9b944e68dbc20c" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6212dc57986f317f9cb75386c6af1edb3930e48" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f33dd8ab3fb86624b0021f93b909b12240e7db5f" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b74e1a677f4efa94dbad3942287fca2536d27a2" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae2bc8fbb1a7720d4608dc7f3eae96e034fc901" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65e0f3147b9cf78c3d67c89568c105088cbbcf74" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ee965ab6bdd787b4640917e7802a90bee769db" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5b2f1e5cf824078a3e86aadc2d3dc2d5ed2babf" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3351da7b7013e9eee94a3ccf06b7dd5de8ef4d76" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e70fd511056c6458886cf9b9073c1229979bc9d7" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8199f5f149491addc204c8012b9230dddb4f54a6" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e85040bf6b1eb5f4ddedf44a79cfe78db008a59" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b1c9fe3feaf45c5d1e16913366e6288c3a1d865" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c516fbb6b70fe59ffb90f62b7e6e2e893fe5308" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f7cb11190a31dd89584e2cd0f5944f3f9657cf" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9798941519d55864911594746f31fc347282359c" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1d9237c08575ac9e82260aeb365a4d7b703b54e" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b5e41e6c73b44e4cedffdd86617dc4edfce9850" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adc681fdebaa3e42a49ea90c30b235ba51fcee97" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="715aa6c3e6b8076ec577aa942692d9228e8c75c8" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a563a2231cab095f0694b870a8de0545ecd25349" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a46101f300fd8429a4dd3a7b2da5fa33a7594b28" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48b2d4a9542eafbeb831a8ded81a8043b8df6e96" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd560cb8a297ba1866d1632af869a85aa5e22fb7" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d53f4164ac5424137365d8f6617fa68af066b857" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa26bcb6dcebca7edbd51d075615774a7d6c7b05" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad68349d4e18197aa131d301d9dc8600f1ef999" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa30f81adcb5d6bd7ced36b9018196d77b2d712" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06f59cb4b4a20db016f7e09cc4cbd622d7fa05ad" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1007358d3e3ef0d0b7b84202532f089398caadc9" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f041790d24fe77cd1280fbb50e06164818c3c58d" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13c3b55c363ffa3cfc7b902027f60205c5b40ce8" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33cf8514b3807e1c97f50524a4508235de9df306" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70de9905468a5c1491589606c9cd8397b44c19e5" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49891c116922b0f617c6358153df81d375f19f81" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0971386738b188e77043635dd687a4dd8d7e1504" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc4fc0fd3942cbbce8f85d69259f0991ddb78c8a" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="032f780fdca55f921c8959c3c1fe050840810d89" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3c49dc2d0b60b7f27e0c897fc6ed2633de328d5" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f3e56d8e6fea8b897ade00c59aaa413575093bf" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f764f3d42d3d3c26640a5b90db8a2c0ee6636b" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5031d4e0fbf64fc348c602676c47fcd44c3e6ea7" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fda2547d7810ebe5b9bee1d2372c589cf70de63c" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5cf3d3097b8201ba1163c1bca6f6d5fea3807b9" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15e7b18590e2631e6caaf7f1d0df68180facdf9b" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eb03d31880ad603aad79a43c83fbb5939ace63f" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae9d457f2844aa36363945e336e324b4c15b63a" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ce7f3249794d107eded7317df25e6d1d237665" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da4b22bf0e6e5de5e802299ea11354d1888e84fa" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a487d2c80e8140eb715afc63e297efd4d219cb84" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cee6bf474aa9e6963e8e920ffddf5bb0531b6212" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3e6d932220e0d968fb8cdcee577adb5a5000e05" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c982ef1f9a3d0489c859e717d907a8c0bb489c7" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7ecdb4c376815239abacf14e0895f4c566878ac" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9014cd1fb926d3833ad6546e138bcf6b14e66148" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e101ea0c2447eea74cd6f4b2d38042abdd040e14" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="526faf47eec42701f37ef15747f99ef03ac4c972" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f2a579b4aa5afc66d4f125a88658465ba31350c" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d8528a584d3ba33a7ca3698a4b5840d021202c" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cee6be0e690134eb145657cffc473e070c955bfc" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d84fb6bb2b055eabb8ab7511058ac94175180b24" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f9be58a55cd03408d4435740b58c32c437ae179" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="310cd0ae9be2eedd02a01e4cb56ac8ea4234b9c4" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d414d9d2535edb9f1586e1933d8e574ac10c66a" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1257bc72f01de7d70fc78fb036525a32040b4564" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e12d2fe9a91ce492240784e7913ae0ac08f6c68" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cef419bb09765d6799e762e7e534b792800465b" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bcda9d03cb3c01a2f590852495fb8d6fb26104b" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e3b2fb56885fea442cdb7308ec964737baf9cbe" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="049713cf88841aba11f64e79e822367da0addca2" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dc97afeee27485b34f2289fc2f3c85f4c692926" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37b703e9d0c28f3091ee9ecd98fba9ea890c18ef" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46f122ac022706776b205c30837e3c111e477b9a" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae288fab76ade06601aa738603abeccc7f3e241" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.immutable.Map.WithDefault&quot; name=&quot;scala.collection.immutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed85663e1eca137b101169ce7f910cd21159a3a" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.mutable.Map.WithDefault&quot; name=&quot;scala.collection.mutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab63db9612bd4f1a9e1ee00a04ec41e71ae9415" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a93afa959a03fe0de1a426ef706d5711d855e89d" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd2c9a112c6ed81bd069bface967096180374364" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75eb7bb7481fdaca2b242aa52ec6f38712f46ccd" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e8b99fd3fdaf2ca87eb9a01592a6142b9c54748" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e2ffbd68b6c58c9c3fa75ee0599ff7ff685b6a4" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2af14197f66eff609158da2779fdc83cdbe7327" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac88308dfc618a9331870dfab48856dba80d7a7" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe04c4b56c4f41a3b0e7b21bcb66de17faa70b2" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2633c83fba054f5a8866962d5965720ddf1f493" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e04c905dbb4bc080b3362db2f464de02f2d38592" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="facbf7787865f578c99f7122d6269c62877d9808" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90d2da5507cd5fe3439a7d8c519f291e4beda1e6" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d19db9eecb14c7659e66f5a7ae6ab033160fbea7" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23c297d3d35c43145a9fea64147a0af2d8d09d44" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5beff738425bbe7482ac2afd1b569fbb00eadba4" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aac17a79eaab6fb396762e1497da14dd69327cf" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df1e4b0f5ff9fa549c2b449158acff9b739a6c91" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.SeqMap&quot; name=&quot;scala.collection.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c940e27a6cb4693d2c23d43a95a12cf4f5b4f156" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae12fbdd4a800df466b2f602d52d3919dd86070f" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d410efd8ac262ca393489232e4e4daa2dd969b63" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82af7fe09a6ea5eac5247b5d4f1926d25ecab940" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3da81d056bfb6f8aa7db995ae83c17c136dcc19" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e392a869e4f44bf98ef9b3c9738e5ace6a665ede" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="894304aa5b6401b121407e70c79e02ad80eec3d6" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6cabc3cc2fb681661f49bb9425b9eb4df7acdc8" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b350a46fc0d72f9af24e04613b96934b8710f773" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d82c22ca90190b278818457032cdfc014a7871c8" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f8a11d2a004652f0d7f89f5bd1d47dfbefc13a0" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="732821d632f445648e5dec1b6ff17bbf997aaf30" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be0aceee58b2633732b877d69829af0de3bc5225" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa9043b3f3e7635febab5ea7a5078816e04b0be7" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38944a3258b68008b883af4fb8c3f8fde7e0f806" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.SortedMap&quot; name=&quot;scala.collection.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="254f82be4e4349da8135600799b77f0ad03566a6" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="582416fa2f96b2415888270105c6c6dbf17a9069" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed8097806e37155c0b8a363880c66f36584ae77" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.immutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.immutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26812c717b1d0916ecff59c9a5b673facf6a4dd6" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.mutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.mutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a72021b09ae3eddeb7364dcb4e2d118b93722d" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e32ea82260998108fffbf2ca762b8971bf7259" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6764c76424ec06aff150f133260ddc57a42029c1" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27443199e0dc535ffb1def60bf5154ea57b79e28" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="518fdc4509e6e56a000e667786c729dbf5fa1276" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b6e0790b439edd8d17ee4863161db77a692bf9b" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44e5668e6a1adeb9bf91fb4bfedcbe6e2ae1bd93" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c8aa351710b9831965d16b3044ea1793a6f496f" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af28249d07cba56fc26fd823c59f198b3232e1e" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d76158a4630476a2207f9ce758c82cce8a8d8da9" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b7cf5941c1e0e09d52581f8cc0c81287a99bc70" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0256b4aca1d501332d5c07843601163fb8b64c70" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f30da58dc62442b9b431096f741593dc91ed9758" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5fe21fdcc096c827e236cc87e408aaa8676472c" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="991c64bb03d36546d7b1b35d9eb26769d1894b48" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3647e01afea46fcab96f51ad152f7596280c794e" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="058928e1bc7b9f63046d02b117ecdb35c0644442" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f310249d146a3e21b199b1376910354e3294400" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b4cc56a6aba2a4ab949237f91ce03943a7ba566" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce2f48f5428750c3ee9cf1d99b94a0f2e9c090a1" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="897be4354c5f439bad6e415cdd0664e4b2a38120" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd9150b83c7bfe161096de0f4ad7928507b710d" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5510e8fb19db549de80ee2f04a4868d8bdef4716" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="681bbba9f38cf28d9eee4d0f4ca954472b98137d" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4190102bf4b4fdd54d257dd64696d965615e41b" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e396aa2d3fe0f9e7e547f75c354c58751f3f122c" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e62b1b8633201594d5504b2e88f970f100a05a58" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ded07da682fbd3a1594162bb5ece30323136ec3" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ea9e56f0076eec4abc4911849054687c0cf50f4" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84b5d0132d165ddffd838b92450fe8df50abdf99" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2932dcbc674fcf56a17dc2164002b3b03d5925e2" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="facae2b8c0bb29686711e0b0284def73bd6bdebf" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b09d8382367757d35f1780a8248b5d898c7174" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bd2203363ef1e09efb000b133fa187d10394ba3" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3819de4b6303285f4371ad2b3b2dbc1a974292f" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f782ffad92006aafcb5d6b3fdc2aa3f792e370b" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41f783e6b61a0435840f6d39cc660a4c57152586" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01efea4a6e6c7ca2c99e6d649756899759b8c147" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e72f2281cd10810e8f3e2576cbaf536a2dde2dc3" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="408a1a64a02f53478bc8ccccfef67b353d491cd1" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d086d456ebc1f895d06bc6fa39df9cd781b64ae" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fbe392e4820cf9ac001ed365645dd49d7721fda" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="355dac3629cfa2d0cabd301701cd6f20da5d5afb" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c7248bd1cc53a4743c366cb644fb8d341d8e28" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2623d83a37d8766479262067f7b5971b9bb2d627" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f55f5a9434ffe0d146d03dbe11f73a8e18d969b" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a715fde8d30ef5fa9c4969013d299318de2e5aa" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7e6845f7286d5bfd4b84d2466c20feaee06ea15" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec14df6b6e6f0901971500530941f779dc8804cf" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c7d584b7dc251bd0efb9c7c64ebc2f768dbff18" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3cda84082e0c3487afaf1585c0ee2c6fb69ff0f" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec77e2ef47c51b5f1101430bb287eb565c38fd13" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ceb33ac589dadf52b4d93c9258420e002b4c5ce" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81fd6b46453dacdedfd5d72fb20d6f42865a07ee" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdfc6ef50c181dcb8efc70b11df8d9275625e9d4" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56d323456f255c2bc34770539e7db9932ecba39c" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05e5214609caa50d32ea2b00e3c3449e83fe9014" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf07dc2c7287da5577e327c0ee62bde6b68689b2" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d183de470c4320ec6b04986a497bbd03b3ecde6b" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7ab3a4ddc0c022bd9372fcc9ecf5ca6ca27bb47" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d75a0b389fcd95edc6bd6e5c84573266d1d159b" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7ec5a13bb949a3f386c0785af9af26a0cbea6a2" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac910bd5b96120bc87631c50a2141fffe9710768" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecfe3894474384d21a91bee29710f444b9c22c5b" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac3d9d88b48e35501e8b98c999d76522d76c46d1" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c7d6f8574e78652126de6c3d22b3aae57a7b97" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9289fcd312d31a0cef78a549a1576158037ac71e" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b87d554aed15d04910ab0997dcebbb669ae24ea" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82dccfca3f58462fcab2ab88f273b747ce4b7a30" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4059cb5352734ef7857509ced201407aea30775b" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2465aea31a66bb6f7c632e632d8fc7db154235e" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ebeaca52ab099f05ce1d3e19a357892681e0d6c" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a851e254a1fbb51fd7d8a30cd2b6c6a74a228a20" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a07066aa727d682756822c457cb07908f98b8f39" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b53bb06bac2f62886e4f5e9197462978673c328c" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49298077f34d49c992a8a4cf2ad4bc5175075c86" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc3b20cee47b0d3e900118ab28a5672c386dc16" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb18407561e9391f431f195574f6c9cf63de6863" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b1db4d272a75a4e62440142a1b35ffb245d5fc9" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fbef5f4786be71984021c0a5daf948176a4e26d" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f15afb06eb0b2c38fa1bcc390b0fdb6c306cddbc" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="597d9602406d4c675d8d2a27f75d691806e8a019" translate="yes" xml:space="preserve">
          <source>def empty: &lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f650fbb87abbf51cbed0c561df53584435ed908" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd814c59b83c3d727955b548b654cf8b8328af28" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5011bb71a3f01ea1cc3f0c9b7e1a57511788c50f" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="155060ccde8adc298b43e0dc1753389ef768b82e" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aab67826522e4e665157dbe5cf9f3ff1f01cdf7" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.IterableOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e58a1fffbd24ebfe9d163aaa7167feb2c27c27" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9351e17ebfb918520211360a0d41caadd2d6e00b" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72fd01a8b67d7784ced3c20f72ddfeb7c183f1ac" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.MapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8263f40b255e189318ac2e32f2003188c8089206" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.SeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af15bb45da2dbd16c50302837773f05dc59ddeae" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.SetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="026e140da9003f68e418d70e4c937feea8eeca9a" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22a5b3d7fc603209b2ef9bd1e163a3225aa58865" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.SortedMapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3662ae1d9d7b4d60ea0f636c860fbb4ca5d1063e" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cedda917cb8094ce13688b9fbac8a2aa7f87e4f9" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.SortedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1897113d84d277a5b65866752d30e3b73eea254b" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8230fcb85765e393f8a7fb446ad6ca12c3ec807" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79f8abdbd99b5bc894377e50330df38b4d1daa3f" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a27efcda32a286c08419d026f9ae702a0f86fc42" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d356515544acf5c38b5ae8363cd4ec6e8a6d3c83" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a741c9eeeee9823caf25323455d00de4e4d5ce6a" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad40fd0ae42631b7294ebbe3db41e88e4d83544b" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e38819e2c8cd188856fa5fc4bbd21bfe5d5cac67" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fda366b0573471affdcd11e00378bf94a41aa03" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91ac17134629e2f1dbcc5e7a4533cf3e026bae9c" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.immutable.MapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0513572409fc13aecfd9fb6e520b191594374f78" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.immutable.SeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1aaf19239bc7882659009b289c4c8ef8ca40495" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.immutable.SetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c4f4eace740169d7f3547107cdb1019b5135d40" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c67003da5a4e19cdc96373468ae4382fe9ef2d8c" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.immutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a1cf0dd66122cfbf246ae36ae494a37d8cd5928" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="808ac3bacec4296775eba2e4d2ae3f5e6677ed4b" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16037d05fb053be95dcb97e9a2638cd76db134e3" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5386bb8c55b52478fe4d8c47de8456b148a8831" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ba850971f9c33e212ae58f5d6e1b928541f34ac" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bb1f10760660b9ec326bc5588e6fe675904ae2f" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84adeb7f0169e6e0e63f62b61883a3b90ec45b3b" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="606b6915da1e71cad6b476348478c15d60bb34fb" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.mutable.MapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79d9f30dfb01b2146a2c39e1f5e9505f6cdd6780" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.mutable.SeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0095cbb4e4ac0a8ac9a3a5d00e72b798b0875db" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.mutable.SetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="723a3d11b7c32dd443656d5e5ebe2e7c932513a3" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.mutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3992a754ec2a1cdd8a685fb4d736a2f32130e4b9" translate="yes" xml:space="preserve">
          <source>def empty: &lt;span name=&quot;scala.collection.mutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d5e2996c8e907d103dadd557cf28571bf5b7f3" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;]: &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.empty.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.empty.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b0758bbb3eed0a4f0e1455a5a77f4c7fa2e6214" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](implicit &lt;span name=&quot;canAccumulate&quot;&gt;canAccumulate: &lt;a href=&quot;accumulator%24%24accumulatorfactoryshape&quot; id=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot; name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot;&gt;AccumulatorFactoryShape&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.empty.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Accumulator.empty.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.jdk.Accumulator.empty.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad083351cc4e88216a8c8a93275f24aed17d9202" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.empty.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b74a9e98dee1ca69adf036275b592293d8ad7c6a" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.empty.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7139c9e3d6c6e0fe45aee6361a88b23ea809ba48" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.empty.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="345d84de8fe8acb7d159c5a8a78fe73b663b9e94" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.empty.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6b23d6526fbf27a2a2bdf2a6b5fb972385b0d45" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.empty.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f633a99bb97ef5993651de9e6fa53273342e534e" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.empty.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e0ad1a760c60ab4c1f0a98f473701ee6a3a7889" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.empty.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b523e5d744e22c3ab0d6e4d0a972518e01582741" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.empty.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e51d235e7139c89be989434508707a82a927c52d" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.empty.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f44634440b2a451ddadd3da8fb8a81fa43821fa" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.empty.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65b850ea27f997ea36f21e19e76e0aca8a22fa66" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.empty.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89abff723dc50519126aae09b6e60fe8a793e39e" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.Ev&quot;&gt;Ev&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.empty.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23b99b92113ad48fd7fa1f3f5cfa8334bce901c9" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa48cbb0907a087627d76afac33f812a452a812a" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63776973dcbf40296aac94fd0eaaddb809796f0" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b01feafa9a3a6ea36ded6e4e4d64899ba91fc9" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01fea15bc5781f9a0dd4876a5dff8f70f8237d0a" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4f2afcba352a8c91a5a529d5d98381a1bf2bd38" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="113aa04a8673368b0967bcc4845e59e34056419d" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fad43897732efcbdcedd1ced9c9acb38e000b0dc" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5b25121f831f75c903294d49745f0e2f4fba5e4" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b766b0d90f1fde2640ff586330e3e3fca01f593e" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5295f4128f59b90f885cade4169ac381b5b3f268" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="912ba11aff2880246917a72795040f0eb1a352c5" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a0858c790b5daddc44d9cd61cfb171818384f0" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c3a0adde4e141fe709ea2a8ffd9a779578408cc" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b89119fb1c627873e802c20eb3fc3ab9937bba8" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48e0d4ecc7432d6d24b0bbd3235e0f61a9d0dd76" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ea13418d26f94a6dc882bcd6748ada3d41b370" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0375c0942a1b3e794744cc0f35c4cedce395bfa0" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7972c462ffac6ad27b6b4f10ee89a70eb19ca453" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf141a336eb37c3b85da973616c1d57daecb6566" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a372470a3b5f2392d13f07e5da2a19b205a0992" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf204418c5e05fa69b3647cd23ede71ff98ce1c9" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d5c93e0107be36b15810b61078290d913580c99" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6470e5f12adccfa9342d567a32c520feaa92915" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee3c9893f83281a4c2eaaf301c9b342d0572b4f" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="574f151788ce78426027583b6ac49164738f245d" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43a8d6403d10ab1e756e63cf49ee700fa5c6c47a" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f80558f59a3dc7318b9b9b129adf5751e3a6c38e" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b67fcded38bcb0ce6fb4f9ae752b323956193adb" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7df893d57bc1ca7e2ce264e0d4a1adc32289559e" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16d3b4072d53b418d999ece848fbe64538eb9219" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a62833b60e0e26995906efc22be55c39884afb75" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="809d8df7fb8322765e733f89af9917c2a0e0033d" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="285291f9bde56ac3090942054521c0bf99dd4f0f" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="678dd3b40a87510fe45e82533d3a7caec1dd9652" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53abf5881e9b47a103279ca3f8d0c905ab5aeb86" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a0a167329117f38d9f39ff742878de867ec5eb7" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.empty.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac6f7e3bd784ab30a415a21289d5006ddfe5d62" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;K&quot;&gt;K &amp;lt;: &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.empty.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.empty.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4235382779ce7d82399f3a46796a4594dfa050b5" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;orderBy&quot;&gt;orderBy: &lt;a href=&quot;treeseqmap%24%24orderby&quot; id=&quot;scala.collection.immutable.TreeSeqMap.OrderBy&quot; name=&quot;scala.collection.immutable.TreeSeqMap.OrderBy&quot;&gt;OrderBy&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.empty.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.empty.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5120e5b69029fe8da8cf2e4373b4ef20afdf6df6" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.empty.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.empty.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.empty.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="727faac3281106edf2f9aa8bf2cbea61c62f51c6" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.empty.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.empty.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.empty.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2af2caa669cb95d312f3343a461e2b0c4e8fcd27" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.empty.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.empty.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.empty.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05d33384c9fc02016d073ffb6a0866dfe95d2c3f" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.empty.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.empty.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.empty.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a78f8727c50a46b14f3e12a3c7432a681c7d6f55" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.empty.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.empty.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.empty.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c904de0b469f4344ae7415b3708738bccedd19e9" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.empty.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.SortedMap&quot; name=&quot;scala.collection.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.empty.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.empty.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca138d5cf967dd11253943c4c37e81c8ea8d64a5" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.empty.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.empty.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.empty.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="572bcdec4038ef8f1947768393d8f6c1ce5d6feb" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.empty.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.empty.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33308df59b1f252d425a01b2df00ea6b75ba88c8" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.empty.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.empty.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3628957bbdd4388ffda0d5cf150479f9486a3086" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;immutable/seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;immutable.SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.Delegate.empty.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.Delegate.empty.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a2454d9e05a8f312d0c2a2f12c6de17af62e94e" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.empty.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.empty.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5991fa9ca29af57e8e7e8c8347ea9284adf46a2e" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.empty.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.empty.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="426f3715c5b035d3ce33ec3f0ef60b2b3d3fd529" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.empty.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.empty.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e1f429915a6cfc617de832c7a336097ddd425d0" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.Delegate.empty.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.Delegate.empty.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f76ec5630997fcc91507a8d3419dd66cce29f66e" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.empty.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.empty.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5853ce4bf63dd24509a1e90d1fe04fc9a0de2b2" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.Delegate.empty.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.Delegate.empty.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae9c31326a1de78d0379ba3f91b80d26a3a3dcf" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.empty.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.empty.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dd070162f5773b6575aef669681d049e3e6f1f7" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.empty.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.empty.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c197ca51d0420e1be9a037562222007ffb756b05" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.empty.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.empty.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf6b7eb6ad598cc70444beff3364e45cc1239e23" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.Delegate.empty.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.Delegate.empty.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa3f5c158f3177b4685ae4cebe9a2c11fe33d985" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.empty.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.empty.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19bf01d0518d3b26fc10ef8df5a95341d048de12" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.empty.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.empty.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa71c953ba97ee0e9b9f9ca52dc431eed0a2d29a" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.empty.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.empty.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d1cbe55d0d94361221180fd7993e8c008da657" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.empty.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.empty.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e217e1a0f1afa5d1f5f6d913c1740640cccee2b" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;span name=&quot;scala.collection.MapFactory.Delegate.C&quot;&gt;C&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapFactory.Delegate.empty.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.Delegate.empty.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d84eb3db2ebdd9bc6cca5df724ecb90ce4d952a" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.empty.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.empty.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0c79ae83241b787609d9599d712731db0b79a0f" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.Array.empty.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Array.empty.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="282fd3dea13aae5d2f5253e41d7182783ca22839" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;]: &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.empty.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3598c35b6fc66aa5adb86232dad1d2f90bf1e2ce" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;]: &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.empty.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7efa3bc93e7110655c7ee47ef0747a69537f0cd8" translate="yes" xml:space="preserve">
          <source>def empty[&lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.empty.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a1054515a8916b86598953641ab29a168498636" translate="yes" xml:space="preserve">
          <source>def encode(&lt;span name=&quot;name&quot;&gt;name: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="539f01c419a13648e6b49782b62a26006c6ba527" translate="yes" xml:space="preserve">
          <source>def encoder: &lt;span name=&quot;java.nio.charset.CharsetEncoder&quot;&gt;CharsetEncoder&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41da3ae232bcf1745a7e93c80cef0663e329f976" translate="yes" xml:space="preserve">
          <source>def encodingReplaceWith(&lt;span name=&quot;newReplacement&quot;&gt;newReplacement: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;codec&quot; id=&quot;scala.io.Codec&quot; name=&quot;scala.io.Codec&quot;&gt;Codec&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da8287c784b8dfc0358630933c661eca7b65550a" translate="yes" xml:space="preserve">
          <source>def encodingString: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="907ead865811447f6bb419a7b7e69230ba3593bf" translate="yes" xml:space="preserve">
          <source>def end(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dddaa4862007a0471888db6ed2a78e9e1cd7b71" translate="yes" xml:space="preserve">
          <source>def end: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b90167989371c033b9c2746f9c9fb04f5bbd9ade" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88bff3bd6a6f60b772f380cc88dc40ae543de07f" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c44adebdb26d1e632286c01913c60a15c536b37" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee0c4f68089a366e62f171562a4f461c3fb0e1cc" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.WrappedString.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8984728e9bd29b3960973373903073da4385117" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b179df19a2a2b9b66cf2a92bd99d55afd8f3a4" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52d66d6d7277ddc411eeeb4369b8faba26d24007" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5e06787c8bc248605480b6dfe447303c2c15987" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79fe25dd8a4ed834283bdcd2c3904e754e9f9908" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="122a47345a9030e1540723d91fa8e606c3b2e79b" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda2eb0bed2f195d7d87f247640527880169529d" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a45c3fc97299e28d9a6a335d77659db746183c1" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d28525c85553462399d6f47c45e47fc13215db21" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c19620dcde5f1922f8f42f5d8787ad8bb4e52dd3" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f7441a8d1308fc60e706635d771e3fd41c636a3" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9ef48e02eac24764eaa5c4c63e05aa7dbf36efc" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b46c1985c9727f6dfe1503b520162f468a03fcf" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5274b7e35e683b7e9ccbf0818b8c5671ea7505e" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1da42f17d814e12a1ab3d8be849b2ba1aa2ad55" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07e378af7b663ff28070d92b513fd2e4bf0e47d7" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="246c548eaec4bfd797455cd2a89d5c080e711234" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7491255f11584ad1fd2557d8eff3eda3d11738ea" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd2a866dbf38dea4a903487cfccb7ac4849a76ee" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b632738273f68a2a96b7389dd6beef4247855bb" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4be0445e1928fd406c2a526dfb8967cd95cc4fc" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c187d9eeff5058d76ef84aa0b72943dd1813271a" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb72418f2454ce38ab021ae115e21ac1cec12fed" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f0c8b9ab0181f67fdf7f9d65fa0664133b8ca2a" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a440d673f7539a9fb9a04f1b28001d9689b4d029" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f500499c624831bc762d7b74e1106a045a69669" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eaea2f48345ca680ebc91e52d43ce503d63a8b4" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32cd4230978f38ffc32c50aabf209349feda129f" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6f7bb770654c4f216035e4092ec4794d2461d4d" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a04deec267e7416d2d7bf2c4b7693756208393b8" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffaa1bc81d4c09a37f682e94f64f56426a028e92" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2839b967ba1cd5b5f60e243e56886be31bb6123e" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="277789c06ccc40c34457bb0f7e95b1f8e2bdddfa" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="975dd1cd2ceeff8b3467cf2bba186f8355b20491" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe3d11ff23be9e366f764c916091f72e28ca14c3" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ca4069cad746e4e0266f17e8c245368894b903f" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c47c8e7453dd09d29c683002cc668fdb694ae726" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0ef4680844b129b6c31868d52e327b66f2d188b" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53e4a8879ddad326ec57a3773836051b973897b2" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26a0ccb0dc7ca9b109785169fe9327f6b29eeaa1" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="157e74261d362018b8049372133fed8f0767473d" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecc8aa853591b29377e592250f5be42326f297fa" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6710f6df387756bda1180c7409736ed5ec14381f" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa299c0a3001f1932f8b9c0b058c933800331917" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42ad1bb3ac5a797f9227cbb51ec75314a6c8fafe" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="468f72d1d41b9942e1fd8f35f0318eabba5deffb" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51721998d64c4cc2fc22306826baa3c1b4c6e474" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abed24b67f940cf332346274c230b1ddc8e97cfb" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b4d69a84e1e24627f8cd44eb926ec70c8bdfc0" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d0548ab08d9da4087afbf114f09e08106ff6bf" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b76bf0b9529ebd096a3148459eb8545c841968bc" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7b880e50bf304f89c2935402cea8c2004da3e73" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="681e7d4b72ca3a40aa7e1101699b50d2198ae9f1" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1035dff227fcb2e6cd20dec28eb42dd68a303e1d" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79e2ddeebe78c143913943d24192d85ca7aa3d52" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b7cb39873567b8f7edfa68a52be4271d6c8887a" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73d8a204f2f4089f50575a5e1452d9477c482a78" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="405324f4ec80b90cafa0a03c88b01ceb2b7ddcac" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b13165545dd354943d93047d66b810e521c53818" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b0bab0552d26282dd64991f495c09145c45b71e" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdfabe141b2b2f8d0b9e05af26f29a1655a8d93d" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4b7f26a6d7248bc7c5ca62785b1ad1aeba6af1" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a44c738f525420bfc71baa0bc14078834b5a768" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f80c7bda430a5be62f8c183706b2206efcfc01cb" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd9b0cd64c8baa2138300d7ae9a429f3fce404a0" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d1552755b9bb8cd9754d5e468e3571a430c1ddb" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9aaadb2845f210e1abb325697bcbc669f0ef6e6" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9546729abfbfd7415f2457efcd952293d0804253" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ce409f8e16509bd61ec0fc1e4888037d88455ab" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5433c7b43e3f17dc1b5cbe77e05bfef9efe90534" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c77b05819e91702ede40d09b5da93f1fc4d4c440" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39a0bb6e0309db33ab26f23fbda87006ae2fb06f" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04823afcf368bfbf491f095fec0f470f679cf4a6" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8313e2e9928e410f9b790b1b591e0725a5cf9269" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="180ced5695b1d01f5d4ef495ff13df9b16e1360d" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47877e4708bbeade81309da8b9f4d4ed9a06789f" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79fbbba0aa236bb22aeccf725a83be62bcd25cc0" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a6ca6d8105216bcc6be2d288af48a8f6306c730" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="657e3bd987e61b5ea6f2e49645d7361e4a41ccae" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6147ea07ec1180590e723958fdc1c111fff9dd99" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2391ae9cdba7be28172a8320c311222a902cbf6" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a43158ae0706385c94f06c543fb73e87ba4cdb" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35fe9cc8e8f2a032f437b8be274dfed58ffb06af" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="517e429ce6aa3e8ecc7f51fed9b925825db647ac" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbf9693354479107e189b2724566876416e35979" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d02678cf78c595ce2173549e98345cbbcecfa22" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c81b50faf9dc3c93f54637d236e4202b8377033f" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e932703dcd07c8d77de9950bee2fbd43ab6c375" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c06427254a5257a2ed8f1e9d9a2f1977e4f20611" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="064cc35ccc099496c056220bc950df4abc85a807" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="315799f27b28b3928061690dfc9e25b24a9c3a55" translate="yes" xml:space="preserve">
          <source>def endsWith[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.endsWith.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7129a548c8b774698f1a54259fb5b14e3bf7aac" translate="yes" xml:space="preserve">
          <source>def enqueue(): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4980d0ede7db41489751ba38a6c2aedcb2d47761" translate="yes" xml:space="preserve">
          <source>def enqueue(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f0316ebd1ae62c3fb085f27ff4e7ee74778473a" translate="yes" xml:space="preserve">
          <source>def enqueue(&lt;span name=&quot;elem1&quot;&gt;elem1: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;elem2&quot;&gt;elem2: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f7c05766c444430407f8695f98bb2624a67327e" translate="yes" xml:space="preserve">
          <source>def enqueue(&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="994e2a78a54ce646df799e4c14b05e6801cbd78b" translate="yes" xml:space="preserve">
          <source>def enqueueAll(&lt;span name=&quot;elems&quot;&gt;elems: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a32fed04ac4e4c97f4d81d287ba7e21dd42f8a" translate="yes" xml:space="preserve">
          <source>def enqueueAll[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;iter&quot;&gt;iter: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.enqueueAll.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.enqueueAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0125e585811c9d48fc2bc247d8db6c3603566867" translate="yes" xml:space="preserve">
          <source>def enqueue[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.Queue.enqueue.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.enqueue.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0408b7912adc25faab3ebea698908e9969b8040" translate="yes" xml:space="preserve">
          <source>def ensureAccessible[&lt;span name=&quot;T&quot;&gt;T &amp;lt;: &lt;span name=&quot;java.lang.reflect.AccessibleObject&quot;&gt;AccessibleObject&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;m&quot;&gt;m: &lt;span name=&quot;scala.reflect.ensureAccessible.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.reflect.ensureAccessible.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa5e139344188bdba3f81061c70ce0678a080f08" translate="yes" xml:space="preserve">
          <source>def ensureCapacity(&lt;span name=&quot;newCapacity&quot;&gt;newCapacity: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="717a8b9bfda944b2731d325b716af5302364bf5e" translate="yes" xml:space="preserve">
          <source>def ensureSize(&lt;span name=&quot;hint&quot;&gt;hint: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="265cc1f40d0fb03723a925a4e0825606e1831317" translate="yes" xml:space="preserve">
          <source>def ensureSize(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81150ab17fd5b8ebdc5816534ec25378ebe19f3c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (() =&amp;gt; &lt;span name=&quot;scala.Function0.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): () =&amp;gt; &lt;span name=&quot;scala.Function0.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b84c62a601b1102a72eca70fb668144651e36856" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (() =&amp;gt; &lt;span name=&quot;scala.Function0.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): () =&amp;gt; &lt;span name=&quot;scala.Function0.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="136d645201993c36f044cb3b3db468dca9701d1f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function1.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function1.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8335f6790f3eb351edf31aac4a7b4a010ddd5202" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function1.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function1.T1&quot;&gt;T1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function1.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89c81d9d9b64eed39208e59de3e3bba860a69928" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function10.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T10&quot;&gt;T10&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function10.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function10.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T10&quot;&gt;T10&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function10.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a831330eae2110df83c042bee09d74d048e20bc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function10.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T10&quot;&gt;T10&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function10.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function10.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function10.T10&quot;&gt;T10&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function10.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0438c48c962f43c0cc774b048648ad79f783876" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function11.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T11&quot;&gt;T11&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function11.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function11.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T11&quot;&gt;T11&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function11.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c30bc02da83631a6bd0ef97e637352f709e54040" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function11.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T11&quot;&gt;T11&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function11.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function11.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function11.T11&quot;&gt;T11&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function11.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db73932c8018525239774eb92b4b11abbab15e66" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function12.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T12&quot;&gt;T12&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function12.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function12.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T12&quot;&gt;T12&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function12.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61862c07d94d396b6b716523594689ba06344809" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function12.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T12&quot;&gt;T12&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function12.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function12.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function12.T12&quot;&gt;T12&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function12.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6765920ec3a7ab6daa9a802a55cebe97ac639d5c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function13.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T13&quot;&gt;T13&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function13.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function13.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T13&quot;&gt;T13&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function13.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3587b3941cf3703d2a8ae3ceabe3b563c49bec0a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function13.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T13&quot;&gt;T13&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function13.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function13.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function13.T13&quot;&gt;T13&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function13.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b299d866de59ae74880eb7888f16cab4b3ff175" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function14.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T14&quot;&gt;T14&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function14.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function14.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T14&quot;&gt;T14&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function14.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62067ac8e6e0f8eb9e55b6f43364fb8c768be6b8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function14.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T14&quot;&gt;T14&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function14.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function14.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function14.T14&quot;&gt;T14&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function14.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fc3629b94b5ba6c92530930cf4f67cf60c24f73" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function15.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T15&quot;&gt;T15&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function15.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function15.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T15&quot;&gt;T15&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function15.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67711f5903b65d4157e88518e1854c110812350b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function15.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T15&quot;&gt;T15&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function15.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function15.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function15.T15&quot;&gt;T15&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function15.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6eaddd0eab314c1ca18afcd67e40b266bb5e3bb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function16.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T16&quot;&gt;T16&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function16.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function16.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T16&quot;&gt;T16&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function16.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fa25102988bcc85b6a2c0a776ea311194c0be58" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function16.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T16&quot;&gt;T16&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function16.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function16.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function16.T16&quot;&gt;T16&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function16.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1d3676504967dbd5e124074fab805bb98fa6c28" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function17.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T17&quot;&gt;T17&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function17.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function17.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T17&quot;&gt;T17&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function17.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e441fb8ce82051bee35700ce9d964b9a309989a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function17.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T17&quot;&gt;T17&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function17.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function17.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function17.T17&quot;&gt;T17&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function17.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="543572c598f64cd35df6f1f22a8c850902f70e6d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function18.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T18&quot;&gt;T18&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function18.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function18.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T18&quot;&gt;T18&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function18.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5ea43cff9d46cd612dd72dd930cd759482df632" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function18.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T18&quot;&gt;T18&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function18.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function18.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function18.T18&quot;&gt;T18&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function18.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07c2ec6f56db2df3df7b5455c2a90c483a4a34d6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function19.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T19&quot;&gt;T19&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function19.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function19.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T19&quot;&gt;T19&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function19.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="866e2077c907044c07212441f6b69fe72db78b23" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function19.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T19&quot;&gt;T19&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function19.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function19.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function19.T19&quot;&gt;T19&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function19.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cf91d97db58222f72e2c394e3a724a68b6915ea" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function2.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function2.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function2.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function2.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f4968f30585e7e043d96778ad2b758a5f5c767c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function2.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function2.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function2.T2&quot;&gt;T2&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function2.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1be9790d1f33b70e49fe279447a18887eba596c8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function20.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T20&quot;&gt;T20&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function20.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function20.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T20&quot;&gt;T20&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function20.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d745f8be013a1bcb4ad66cef62e7beca837f3af" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function20.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T20&quot;&gt;T20&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function20.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function20.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function20.T20&quot;&gt;T20&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function20.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eae37680ecb5d0efc6ac6c6a210f6b62a5886365" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function21.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T21&quot;&gt;T21&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function21.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function21.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T21&quot;&gt;T21&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function21.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e01fbdc1c332d86fa0781b4798827683ba25ebd6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function21.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T21&quot;&gt;T21&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function21.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function21.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Function21.T21&quot;&gt;T21&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function21.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a82c4f99adf71429c13fd8f518737eb956c6d78d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function22.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T21&quot;&gt;T21&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T22&quot;&gt;T22&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function22.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function22.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T21&quot;&gt;T21&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T22&quot;&gt;T22&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function22.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fefd008352cb828290c776208a632b4f761e3f9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function22.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T21&quot;&gt;T21&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T22&quot;&gt;T22&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function22.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function22.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T21&quot;&gt;T21&lt;/span&gt;, &lt;span name=&quot;scala.Function22.T22&quot;&gt;T22&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function22.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ea99969ef7b4cc5c3fe17ba2a4616fb0fb445c8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function3.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function3.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function3.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function3.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e0f3c0770bff54e9ea08568b65a35408768239e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function3.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function3.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function3.T3&quot;&gt;T3&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function3.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb25bdc1e64e07ecdbc560bc1022c17c38d9c57d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function4.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function4.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function4.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function4.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a805ea2dd18ce1c1a308381d4fd706f696100e97" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function4.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function4.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function4.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function4.T4&quot;&gt;T4&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function4.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ff4f3d5bf9aa4a91e51925ea57b57d4c154f7cd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function5.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T5&quot;&gt;T5&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function5.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function5.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T5&quot;&gt;T5&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function5.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a42c5ede99b118f045842469b14f5741df7eba37" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function5.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T5&quot;&gt;T5&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function5.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function5.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function5.T5&quot;&gt;T5&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function5.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06364e1351144b4a3eac839d07dc7957e5f9cd26" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function6.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T6&quot;&gt;T6&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function6.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function6.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T6&quot;&gt;T6&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function6.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54368491195da27ec0265d9ac14e6f9a39abf062" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function6.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T6&quot;&gt;T6&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function6.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function6.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function6.T6&quot;&gt;T6&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function6.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbb0f2d40aa26eaf21fd587655a7db53f6ff71ab" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function7.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T7&quot;&gt;T7&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function7.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function7.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T7&quot;&gt;T7&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function7.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18f7e70ee9047ebd8236b542f4e258de42bad699" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function7.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T7&quot;&gt;T7&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function7.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function7.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function7.T7&quot;&gt;T7&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function7.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9fc876aabf36ec50b05bac6c0f3df65559d7c05" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function8.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T8&quot;&gt;T8&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function8.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function8.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T8&quot;&gt;T8&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function8.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e6ce6875d46f17f7ce77224ed057887c1f3ae67" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function8.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T8&quot;&gt;T8&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function8.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function8.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function8.T8&quot;&gt;T8&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function8.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d96a28da8d3e1a31a943fe88bf2bf3fb8bbf8bdd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function9.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T9&quot;&gt;T9&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function9.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function9.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T9&quot;&gt;T9&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function9.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97b0812bff516573c6ec362374c35cf8d2b6f266" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Function9.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T9&quot;&gt;T9&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function9.R&quot;&gt;R&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Function9.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Function9.T9&quot;&gt;T9&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Function9.R&quot;&gt;R&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0744c95cd373d55ff0ba66d25c39578e3324a560" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple1.T1&quot;&gt;T1&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple1.T1&quot;&gt;T1&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7984c4f7102a9656a296fedc947e89bb6dd0d04" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple1.T1&quot;&gt;T1&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple1.T1&quot;&gt;T1&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd6a93d92f89681eaa5a4c0f001166e5ba0c6cda" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple10.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T10&quot;&gt;T10&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple10.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T10&quot;&gt;T10&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f06886c1c88de4b793b435306f8bacc808385a9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple10.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T10&quot;&gt;T10&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple10.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple10.T10&quot;&gt;T10&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c61ea903a4797823730bc8cba9f8492deba658a4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple11.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T11&quot;&gt;T11&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple11.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T11&quot;&gt;T11&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb852d443bdcc24bfb9905fa195a7cbe0a4acc5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple11.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T11&quot;&gt;T11&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple11.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple11.T11&quot;&gt;T11&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae6852268040377e4daa3c0aa7631d1ccd305139" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple12.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T12&quot;&gt;T12&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple12.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T12&quot;&gt;T12&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80c184c5859f806adfdfcba2215222ae082f0389" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple12.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T12&quot;&gt;T12&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple12.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple12.T12&quot;&gt;T12&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d96768401ae3ea1ab61b0e71b75f7e6b7976c447" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple13.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T13&quot;&gt;T13&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple13.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T13&quot;&gt;T13&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d33129998d540e90898253226f6b0e884563ff46" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple13.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T13&quot;&gt;T13&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple13.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple13.T13&quot;&gt;T13&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc78d47d54d6a6a0553bfa09b1b0710cd78ff1a0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple14.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T14&quot;&gt;T14&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple14.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T14&quot;&gt;T14&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a153865bfffbc88343cf365be2b28ce716654e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple14.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T14&quot;&gt;T14&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple14.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple14.T14&quot;&gt;T14&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b424f581131e2dbb17822f8156384aab96b9b129" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple15.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T15&quot;&gt;T15&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple15.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T15&quot;&gt;T15&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccedc0ed44836a76274958b20bf9e254240adee7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple15.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T15&quot;&gt;T15&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple15.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple15.T15&quot;&gt;T15&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d89a7b51af0d117814652174892fe4071791bca4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple16.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T16&quot;&gt;T16&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple16.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T16&quot;&gt;T16&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1927a02928f083dd42d3271ca19fe38158c906ac" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple16.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T16&quot;&gt;T16&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple16.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple16.T16&quot;&gt;T16&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2087e122426d9fa4d213051c27814635b45f7453" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple17.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T17&quot;&gt;T17&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple17.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T17&quot;&gt;T17&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0109659bd43b6096537b3adf97c9a6465d0c0177" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple17.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T17&quot;&gt;T17&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple17.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple17.T17&quot;&gt;T17&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="833870f621e620753033c1dd1479ccab7b255946" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple18.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T18&quot;&gt;T18&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple18.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T18&quot;&gt;T18&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ccdf084f542c7edd462b5e1ba776f0960750469" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple18.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T18&quot;&gt;T18&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple18.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple18.T18&quot;&gt;T18&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f840b98c7d21925d4d61cd3b2eb0b593c7a1b94f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple19.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T19&quot;&gt;T19&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple19.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T19&quot;&gt;T19&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c98b0f7a4654757cab0c35d207e2676d77fe3ec" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple19.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T19&quot;&gt;T19&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple19.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple19.T19&quot;&gt;T19&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="127d8f72057ed85313bde168bd95e7b9f1906f6d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple2.T2&quot;&gt;T2&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple2.T2&quot;&gt;T2&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bda49d6adc65bb7af140a4480bcccf5184f5c86" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple2.T2&quot;&gt;T2&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple2.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple2.T2&quot;&gt;T2&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b12cf5d95cd4750f36b5ec4981657fd6de631522" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple20.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T20&quot;&gt;T20&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple20.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T20&quot;&gt;T20&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a495ff41d977591cc3c4442c1bf063b66d42fc81" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple20.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T20&quot;&gt;T20&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple20.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple20.T20&quot;&gt;T20&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d30d200e0f737772112562d2c3d9b48f11815e78" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple21.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T21&quot;&gt;T21&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple21.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T21&quot;&gt;T21&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f88e301eb7a4b7903a16ebdfbe7f64e5d28c1983" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple21.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T21&quot;&gt;T21&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple21.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Tuple21.T21&quot;&gt;T21&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b02f9bdc8e61fe4ee9ae2dc66f5d839dda05d62a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple22.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T21&quot;&gt;T21&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T22&quot;&gt;T22&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple22.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T21&quot;&gt;T21&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T22&quot;&gt;T22&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70ca3b314d75905ff0f1f82e886a18a5b01caa7d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple22.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T21&quot;&gt;T21&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T22&quot;&gt;T22&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple22.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T9&quot;&gt;T9&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T10&quot;&gt;T10&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T11&quot;&gt;T11&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T12&quot;&gt;T12&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T13&quot;&gt;T13&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T14&quot;&gt;T14&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T15&quot;&gt;T15&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T16&quot;&gt;T16&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T17&quot;&gt;T17&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T18&quot;&gt;T18&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T19&quot;&gt;T19&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T20&quot;&gt;T20&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T21&quot;&gt;T21&lt;/span&gt;, &lt;span name=&quot;scala.Tuple22.T22&quot;&gt;T22&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5090d8e78a2c4a013aa3c7828ddfbf1aee37cd7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple3.T3&quot;&gt;T3&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple3.T3&quot;&gt;T3&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb97ae377f1d418c8efbebb839bf7addd723839" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple3.T3&quot;&gt;T3&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple3.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple3.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple3.T3&quot;&gt;T3&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0900ddd75d575178668681d9ef5b46fc615c5c1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple4.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T4&quot;&gt;T4&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple4.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T4&quot;&gt;T4&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="418f962e42f2f45811ac19d99fc0c9c866d03388" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple4.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T4&quot;&gt;T4&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple4.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple4.T4&quot;&gt;T4&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae92829c8f1c4b8090c20039311240d1e7e5f1c6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple5.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T5&quot;&gt;T5&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple5.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T5&quot;&gt;T5&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99572598fb7ecfce6bd66f574f2059400ef23922" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple5.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T5&quot;&gt;T5&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple5.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple5.T5&quot;&gt;T5&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c449c55781b2edf8d3b63d58717e94b3c570177" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple6.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T6&quot;&gt;T6&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple6.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T6&quot;&gt;T6&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1767e27ad4a61e5b556c060fbe85bd462ed5a5c0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple6.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T6&quot;&gt;T6&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple6.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple6.T6&quot;&gt;T6&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5b14119d7bcbed92cbc91041c79332fdfacaf06" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple7.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T7&quot;&gt;T7&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple7.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T7&quot;&gt;T7&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06893a1ad0d651bfd628c47c596a0051f681acb5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple7.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T7&quot;&gt;T7&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple7.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple7.T7&quot;&gt;T7&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="235af1748f68d85787f4ba680d64bf280991cfe7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple8.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T8&quot;&gt;T8&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple8.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T8&quot;&gt;T8&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13e50f3a36e349fc9d60e17d5415fdb1d65cf461" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple8.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T8&quot;&gt;T8&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple8.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple8.T8&quot;&gt;T8&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e4d9316daaa9b602f90d73ad9f1ef4efc88a167" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple9.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T9&quot;&gt;T9&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple9.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T9&quot;&gt;T9&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38967e7b3c7071bfd2ada695f3575c3853e6c81f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: ((&lt;span name=&quot;scala.Tuple9.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T9&quot;&gt;T9&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.Tuple9.T1&quot;&gt;T1&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T2&quot;&gt;T2&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T3&quot;&gt;T3&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T4&quot;&gt;T4&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T5&quot;&gt;T5&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T6&quot;&gt;T6&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T7&quot;&gt;T7&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T8&quot;&gt;T8&lt;/span&gt;, &lt;span name=&quot;scala.Tuple9.T9&quot;&gt;T9&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b848beb73b4335cfd130a6698da2283e0b436059" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;%24colon%24colon&quot; id=&quot;scala.collection.immutable.::&quot; name=&quot;scala.collection.immutable.::&quot;&gt;::&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;%24colon%24colon&quot; id=&quot;scala.collection.immutable.::&quot; name=&quot;scala.collection.immutable.::&quot;&gt;::&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c686b79822a77291b011f6ca03a999427a261032" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;%24colon%24colon&quot; id=&quot;scala.collection.immutable.::&quot; name=&quot;scala.collection.immutable.::&quot;&gt;::&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;%24colon%24colon&quot; id=&quot;scala.collection.immutable.::&quot; name=&quot;scala.collection.immutable.::&quot;&gt;::&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85ff1cef9a694f5bcd5fe69d477d9b096a3d9817" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.=:=.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.=:=.To&quot;&gt;To&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.=:=.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.=:=.To&quot;&gt;To&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4125edb92fdf4256a6564dc7b22e9bad651eee" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.=:=.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.=:=.To&quot;&gt;To&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;%24eq%24colon%24eq&quot; id=&quot;scala.=:=&quot; name=&quot;scala.=:=&quot;&gt;=:=&lt;/a&gt;[&lt;span name=&quot;scala.=:=.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.=:=.To&quot;&gt;To&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9a3b14b46f4682f3acceadd5aa97534eb0ec5e1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.&amp;lt;:&amp;lt;.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.To&quot;&gt;To&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.&amp;lt;:&amp;lt;.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.To&quot;&gt;To&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb7e7f737f59b8b36216c6af09b288e7b986a70d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.&amp;lt;:&amp;lt;.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.To&quot;&gt;To&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.&amp;lt;:&amp;lt;.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.&amp;lt;:&amp;lt;.To&quot;&gt;To&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea0fcc0607accb0264457c9092683ec5c155c180" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;abstractbuffer&quot; id=&quot;scala.collection.mutable.AbstractBuffer&quot; name=&quot;scala.collection.mutable.AbstractBuffer&quot;&gt;AbstractBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractbuffer&quot; id=&quot;scala.collection.mutable.AbstractBuffer&quot; name=&quot;scala.collection.mutable.AbstractBuffer&quot;&gt;AbstractBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="327af11f4f73fe882f74af17b1b11871d722401c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;abstractbuffer&quot; id=&quot;scala.collection.mutable.AbstractBuffer&quot; name=&quot;scala.collection.mutable.AbstractBuffer&quot;&gt;AbstractBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractbuffer&quot; id=&quot;scala.collection.mutable.AbstractBuffer&quot; name=&quot;scala.collection.mutable.AbstractBuffer&quot;&gt;AbstractBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a34e942a02a55d88ee2b6496e9ed6cdc3df175" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;abstractindexedseqview&quot; id=&quot;scala.collection.AbstractIndexedSeqView&quot; name=&quot;scala.collection.AbstractIndexedSeqView&quot;&gt;AbstractIndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractindexedseqview&quot; id=&quot;scala.collection.AbstractIndexedSeqView&quot; name=&quot;scala.collection.AbstractIndexedSeqView&quot;&gt;AbstractIndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="598a03d2941ddb7d4ebbaed13d0216a73a3520a3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;abstractindexedseqview&quot; id=&quot;scala.collection.AbstractIndexedSeqView&quot; name=&quot;scala.collection.AbstractIndexedSeqView&quot;&gt;AbstractIndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractindexedseqview&quot; id=&quot;scala.collection.AbstractIndexedSeqView&quot; name=&quot;scala.collection.AbstractIndexedSeqView&quot;&gt;AbstractIndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53ca3e987c57842df1cb6c7e83cd47e82abc6db7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;abstractiterable&quot; id=&quot;scala.collection.AbstractIterable&quot; name=&quot;scala.collection.AbstractIterable&quot;&gt;AbstractIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractiterable&quot; id=&quot;scala.collection.AbstractIterable&quot; name=&quot;scala.collection.AbstractIterable&quot;&gt;AbstractIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9077b3b9decffc7b7ef7f0311d679f574d133ffd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;abstractiterable&quot; id=&quot;scala.collection.AbstractIterable&quot; name=&quot;scala.collection.AbstractIterable&quot;&gt;AbstractIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractiterable&quot; id=&quot;scala.collection.AbstractIterable&quot; name=&quot;scala.collection.AbstractIterable&quot;&gt;AbstractIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a069b0e4aa30a6116ee8bd8fa7472c465bd6e680" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;abstractiterable&quot; id=&quot;scala.collection.mutable.AbstractIterable&quot; name=&quot;scala.collection.mutable.AbstractIterable&quot;&gt;AbstractIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractiterable&quot; id=&quot;scala.collection.mutable.AbstractIterable&quot; name=&quot;scala.collection.mutable.AbstractIterable&quot;&gt;AbstractIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdd94842a689f83a3f44e2ae79995b659a811b70" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;abstractiterable&quot; id=&quot;scala.collection.mutable.AbstractIterable&quot; name=&quot;scala.collection.mutable.AbstractIterable&quot;&gt;AbstractIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractiterable&quot; id=&quot;scala.collection.mutable.AbstractIterable&quot; name=&quot;scala.collection.mutable.AbstractIterable&quot;&gt;AbstractIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ebefe618f7e250ea77dce03a3edbec429ee10e6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;abstractiterator&quot; id=&quot;scala.collection.AbstractIterator&quot; name=&quot;scala.collection.AbstractIterator&quot;&gt;AbstractIterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractiterator&quot; id=&quot;scala.collection.AbstractIterator&quot; name=&quot;scala.collection.AbstractIterator&quot;&gt;AbstractIterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b9b92d4058bb7c510d7b82b2826f8f92a352b49" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;abstractiterator&quot; id=&quot;scala.collection.AbstractIterator&quot; name=&quot;scala.collection.AbstractIterator&quot;&gt;AbstractIterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractiterator&quot; id=&quot;scala.collection.AbstractIterator&quot; name=&quot;scala.collection.AbstractIterator&quot;&gt;AbstractIterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e22e9cbac300d176ab65f38835d855d7d86b6092" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;abstractmap&quot; id=&quot;scala.collection.AbstractMap&quot; name=&quot;scala.collection.AbstractMap&quot;&gt;AbstractMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractmap&quot; id=&quot;scala.collection.AbstractMap&quot; name=&quot;scala.collection.AbstractMap&quot;&gt;AbstractMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="422aeb3a22443843a1b9e380711dac7e4301fbae" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;abstractmap&quot; id=&quot;scala.collection.AbstractMap&quot; name=&quot;scala.collection.AbstractMap&quot;&gt;AbstractMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractmap&quot; id=&quot;scala.collection.AbstractMap&quot; name=&quot;scala.collection.AbstractMap&quot;&gt;AbstractMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="054ca1f21a7487fb66a936e9edc0c2fdae9cd0b3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;abstractmap&quot; id=&quot;scala.collection.immutable.AbstractMap&quot; name=&quot;scala.collection.immutable.AbstractMap&quot;&gt;AbstractMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractmap&quot; id=&quot;scala.collection.immutable.AbstractMap&quot; name=&quot;scala.collection.immutable.AbstractMap&quot;&gt;AbstractMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaea0027761053b6d1806e228ac2338a8b0ce8c8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;abstractmap&quot; id=&quot;scala.collection.immutable.AbstractMap&quot; name=&quot;scala.collection.immutable.AbstractMap&quot;&gt;AbstractMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractmap&quot; id=&quot;scala.collection.immutable.AbstractMap&quot; name=&quot;scala.collection.immutable.AbstractMap&quot;&gt;AbstractMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7ca00067402933742f435e4eafb6d48f9c0a49c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;abstractmap&quot; id=&quot;scala.collection.mutable.AbstractMap&quot; name=&quot;scala.collection.mutable.AbstractMap&quot;&gt;AbstractMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractmap&quot; id=&quot;scala.collection.mutable.AbstractMap&quot; name=&quot;scala.collection.mutable.AbstractMap&quot;&gt;AbstractMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a956955d601c9569bdf0c75c574cc8b409f6c24b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;abstractmap&quot; id=&quot;scala.collection.mutable.AbstractMap&quot; name=&quot;scala.collection.mutable.AbstractMap&quot;&gt;AbstractMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractmap&quot; id=&quot;scala.collection.mutable.AbstractMap&quot; name=&quot;scala.collection.mutable.AbstractMap&quot;&gt;AbstractMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feb2b38aa5e42c09d6a793347d430d9d891ef523" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;abstractmapview&quot; id=&quot;scala.collection.AbstractMapView&quot; name=&quot;scala.collection.AbstractMapView&quot;&gt;AbstractMapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractmapview&quot; id=&quot;scala.collection.AbstractMapView&quot; name=&quot;scala.collection.AbstractMapView&quot;&gt;AbstractMapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad816581db8613f3c53e84d16f44da347c4f48f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;abstractmapview&quot; id=&quot;scala.collection.AbstractMapView&quot; name=&quot;scala.collection.AbstractMapView&quot;&gt;AbstractMapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractmapview&quot; id=&quot;scala.collection.AbstractMapView&quot; name=&quot;scala.collection.AbstractMapView&quot;&gt;AbstractMapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32818fbbee3c3ecd08e49eed3ac3e31f73d5c688" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;abstractseq&quot; id=&quot;scala.collection.AbstractSeq&quot; name=&quot;scala.collection.AbstractSeq&quot;&gt;AbstractSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractseq&quot; id=&quot;scala.collection.AbstractSeq&quot; name=&quot;scala.collection.AbstractSeq&quot;&gt;AbstractSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82558df6499c57ec1604e433e1ae2efd94fd6055" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;abstractseq&quot; id=&quot;scala.collection.AbstractSeq&quot; name=&quot;scala.collection.AbstractSeq&quot;&gt;AbstractSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractseq&quot; id=&quot;scala.collection.AbstractSeq&quot; name=&quot;scala.collection.AbstractSeq&quot;&gt;AbstractSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b42d002c998a36180a955792ca7848db1e130a8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;abstractseq&quot; id=&quot;scala.collection.immutable.AbstractSeq&quot; name=&quot;scala.collection.immutable.AbstractSeq&quot;&gt;AbstractSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractseq&quot; id=&quot;scala.collection.immutable.AbstractSeq&quot; name=&quot;scala.collection.immutable.AbstractSeq&quot;&gt;AbstractSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e5992de2a33b7d387c1e7c92e7ee856f385a717" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;abstractseq&quot; id=&quot;scala.collection.immutable.AbstractSeq&quot; name=&quot;scala.collection.immutable.AbstractSeq&quot;&gt;AbstractSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractseq&quot; id=&quot;scala.collection.immutable.AbstractSeq&quot; name=&quot;scala.collection.immutable.AbstractSeq&quot;&gt;AbstractSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ac3738f224b1b742c81b02230b3f308b22c3b12" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;abstractseq&quot; id=&quot;scala.collection.mutable.AbstractSeq&quot; name=&quot;scala.collection.mutable.AbstractSeq&quot;&gt;AbstractSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractseq&quot; id=&quot;scala.collection.mutable.AbstractSeq&quot; name=&quot;scala.collection.mutable.AbstractSeq&quot;&gt;AbstractSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad64dc3616ce424098feed265b4155d1f26d611" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;abstractseq&quot; id=&quot;scala.collection.mutable.AbstractSeq&quot; name=&quot;scala.collection.mutable.AbstractSeq&quot;&gt;AbstractSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractseq&quot; id=&quot;scala.collection.mutable.AbstractSeq&quot; name=&quot;scala.collection.mutable.AbstractSeq&quot;&gt;AbstractSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b5c327da86a40e1febb5ac35931b9a285b987e2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;abstractseqview&quot; id=&quot;scala.collection.AbstractSeqView&quot; name=&quot;scala.collection.AbstractSeqView&quot;&gt;AbstractSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractseqview&quot; id=&quot;scala.collection.AbstractSeqView&quot; name=&quot;scala.collection.AbstractSeqView&quot;&gt;AbstractSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="681e7daa60a15b283b3643bd9e6e0cf259b0ee35" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;abstractseqview&quot; id=&quot;scala.collection.AbstractSeqView&quot; name=&quot;scala.collection.AbstractSeqView&quot;&gt;AbstractSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractseqview&quot; id=&quot;scala.collection.AbstractSeqView&quot; name=&quot;scala.collection.AbstractSeqView&quot;&gt;AbstractSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72bd24f51dcdff059e23cb34bbad93dbdc00caa0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;abstractset&quot; id=&quot;scala.collection.AbstractSet&quot; name=&quot;scala.collection.AbstractSet&quot;&gt;AbstractSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractset&quot; id=&quot;scala.collection.AbstractSet&quot; name=&quot;scala.collection.AbstractSet&quot;&gt;AbstractSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cb126919b56ce44f1a81166cb16ee44b118353c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;abstractset&quot; id=&quot;scala.collection.AbstractSet&quot; name=&quot;scala.collection.AbstractSet&quot;&gt;AbstractSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractset&quot; id=&quot;scala.collection.AbstractSet&quot; name=&quot;scala.collection.AbstractSet&quot;&gt;AbstractSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e1d23b941c5cab7e8f8bbd05340e68ee7a63276" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;abstractset&quot; id=&quot;scala.collection.immutable.AbstractSet&quot; name=&quot;scala.collection.immutable.AbstractSet&quot;&gt;AbstractSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractset&quot; id=&quot;scala.collection.immutable.AbstractSet&quot; name=&quot;scala.collection.immutable.AbstractSet&quot;&gt;AbstractSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="229ed4610b7ec87821e870a5103e5934cf1f9715" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;abstractset&quot; id=&quot;scala.collection.immutable.AbstractSet&quot; name=&quot;scala.collection.immutable.AbstractSet&quot;&gt;AbstractSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractset&quot; id=&quot;scala.collection.immutable.AbstractSet&quot; name=&quot;scala.collection.immutable.AbstractSet&quot;&gt;AbstractSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60dba2eecd8303ceb6c75ebe5a9da6249ad33b82" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;abstractset&quot; id=&quot;scala.collection.mutable.AbstractSet&quot; name=&quot;scala.collection.mutable.AbstractSet&quot;&gt;AbstractSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractset&quot; id=&quot;scala.collection.mutable.AbstractSet&quot; name=&quot;scala.collection.mutable.AbstractSet&quot;&gt;AbstractSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d33af205e661f4bbd08df6adbf0b150f4c9ea0c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;abstractset&quot; id=&quot;scala.collection.mutable.AbstractSet&quot; name=&quot;scala.collection.mutable.AbstractSet&quot;&gt;AbstractSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractset&quot; id=&quot;scala.collection.mutable.AbstractSet&quot; name=&quot;scala.collection.mutable.AbstractSet&quot;&gt;AbstractSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df69fca5b32807b0b63ae15cb8ec77c0f03d48e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;abstractview&quot; id=&quot;scala.collection.AbstractView&quot; name=&quot;scala.collection.AbstractView&quot;&gt;AbstractView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractview&quot; id=&quot;scala.collection.AbstractView&quot; name=&quot;scala.collection.AbstractView&quot;&gt;AbstractView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8261fb9dbf2517f10794ce10d219e3b2706dd758" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;abstractview&quot; id=&quot;scala.collection.AbstractView&quot; name=&quot;scala.collection.AbstractView&quot;&gt;AbstractView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractview&quot; id=&quot;scala.collection.AbstractView&quot; name=&quot;scala.collection.AbstractView&quot;&gt;AbstractView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="793a76100373ccc77ba9636ec550ca2270794d91" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;accumulator&quot; id=&quot;scala.jdk.Accumulator&quot; name=&quot;scala.jdk.Accumulator&quot;&gt;Accumulator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Accumulator.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Accumulator.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;accumulator&quot; id=&quot;scala.jdk.Accumulator&quot; name=&quot;scala.jdk.Accumulator&quot;&gt;Accumulator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Accumulator.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Accumulator.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c76a140fafc30d341e52ca98dfa4dca7c6a02514" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;accumulator&quot; id=&quot;scala.jdk.Accumulator&quot; name=&quot;scala.jdk.Accumulator&quot;&gt;Accumulator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Accumulator.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Accumulator.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;accumulator&quot; id=&quot;scala.jdk.Accumulator&quot; name=&quot;scala.jdk.Accumulator&quot;&gt;Accumulator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Accumulator.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Accumulator.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b273f833108175acaf900f907a3dd04218aaf73" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;accumulator%24%24accumulatorfactoryshape&quot; id=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot; name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot;&gt;AccumulatorFactoryShape&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;accumulator%24%24accumulatorfactoryshape&quot; id=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot; name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot;&gt;AccumulatorFactoryShape&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0552a0316c53bc7c2d3bc1610a6fb723cc22e87a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;accumulator%24%24accumulatorfactoryshape&quot; id=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot; name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot;&gt;AccumulatorFactoryShape&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;accumulator%24%24accumulatorfactoryshape&quot; id=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot; name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot;&gt;AccumulatorFactoryShape&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c2ddfb1b0bbf725cca6966e290a8eba0ff25d28" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;accumulator%24%24lowpriorityaccumulatorfactoryshape&quot; id=&quot;scala.jdk.Accumulator.LowPriorityAccumulatorFactoryShape&quot; name=&quot;scala.jdk.Accumulator.LowPriorityAccumulatorFactoryShape&quot;&gt;LowPriorityAccumulatorFactoryShape&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;accumulator%24%24lowpriorityaccumulatorfactoryshape&quot; id=&quot;scala.jdk.Accumulator.LowPriorityAccumulatorFactoryShape&quot; name=&quot;scala.jdk.Accumulator.LowPriorityAccumulatorFactoryShape&quot;&gt;LowPriorityAccumulatorFactoryShape&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e0032f1072bfd6dd08d9de2eee554c6565decc6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;accumulator%24%24lowpriorityaccumulatorfactoryshape&quot; id=&quot;scala.jdk.Accumulator.LowPriorityAccumulatorFactoryShape&quot; name=&quot;scala.jdk.Accumulator.LowPriorityAccumulatorFactoryShape&quot;&gt;LowPriorityAccumulatorFactoryShape&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;accumulator%24%24lowpriorityaccumulatorfactoryshape&quot; id=&quot;scala.jdk.Accumulator.LowPriorityAccumulatorFactoryShape&quot; name=&quot;scala.jdk.Accumulator.LowPriorityAccumulatorFactoryShape&quot;&gt;LowPriorityAccumulatorFactoryShape&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59eb64b31ef19d2f293192c0d02d470d6893280f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;annotation&quot; id=&quot;scala.annotation.Annotation&quot; name=&quot;scala.annotation.Annotation&quot;&gt;Annotation&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;annotation&quot; id=&quot;scala.annotation.Annotation&quot; name=&quot;scala.annotation.Annotation&quot;&gt;Annotation&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09c98b6ded57589c709d5fa34f6bc5749c267085" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;annotation&quot; id=&quot;scala.annotation.Annotation&quot; name=&quot;scala.annotation.Annotation&quot;&gt;Annotation&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;annotation&quot; id=&quot;scala.annotation.Annotation&quot; name=&quot;scala.annotation.Annotation&quot;&gt;Annotation&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faed997235b349d556f7fdee745ab63db7b3f30a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ansicolor&quot; id=&quot;scala.io.AnsiColor&quot; name=&quot;scala.io.AnsiColor&quot;&gt;AnsiColor&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ansicolor&quot; id=&quot;scala.io.AnsiColor&quot; name=&quot;scala.io.AnsiColor&quot;&gt;AnsiColor&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c1317ce1542f7986a137c50c502ac20a8d2a8d6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;ansicolor&quot; id=&quot;scala.io.AnsiColor&quot; name=&quot;scala.io.AnsiColor&quot;&gt;AnsiColor&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ansicolor&quot; id=&quot;scala.io.AnsiColor&quot; name=&quot;scala.io.AnsiColor&quot;&gt;AnsiColor&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="550235b487980b572c050e8e8458eb024c0d7375" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="408472d9edff6a4e06c0cf8c3ff14a3699a04dca" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d46ecb49e52e3be74fcfcfe9b7a7028a0a152f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c77803223aae85d45644ef3b823297ffcf31c30c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed7116cff08eb02ece9bf5816cf824d96466a299" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;anyaccumulator%24%24serializationproxy&quot; id=&quot;scala.jdk.AnyAccumulator.SerializationProxy&quot; name=&quot;scala.jdk.AnyAccumulator.SerializationProxy&quot;&gt;SerializationProxy&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.SerializationProxy.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator%24%24serializationproxy&quot; id=&quot;scala.jdk.AnyAccumulator.SerializationProxy&quot; name=&quot;scala.jdk.AnyAccumulator.SerializationProxy&quot;&gt;SerializationProxy&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.SerializationProxy.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f5e14aebb894f635a48905c6b12000b22f5feee" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;anyaccumulator%24%24serializationproxy&quot; id=&quot;scala.jdk.AnyAccumulator.SerializationProxy&quot; name=&quot;scala.jdk.AnyAccumulator.SerializationProxy&quot;&gt;SerializationProxy&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.SerializationProxy.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator%24%24serializationproxy&quot; id=&quot;scala.jdk.AnyAccumulator.SerializationProxy&quot; name=&quot;scala.jdk.AnyAccumulator.SerializationProxy&quot;&gt;SerializationProxy&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.SerializationProxy.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9945fd36caf561569160f39d524abf1ac196af70" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a682e8ff56996d24f4f00372f8933ee1da5d0cdc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8134629e15cc21c2464c30ab2e06f9b608160e05" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d32e86cb48c14bae837a0194b6943181d68fc99" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78bc234656d9a80e500420acda225328ee340647" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;anyrefmap%24%24anyrefmapbuilder&quot; id=&quot;scala.collection.mutable.AnyRefMap.AnyRefMapBuilder&quot; name=&quot;scala.collection.mutable.AnyRefMap.AnyRefMapBuilder&quot;&gt;AnyRefMapBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.AnyRefMapBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.AnyRefMapBuilder.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anyrefmap%24%24anyrefmapbuilder&quot; id=&quot;scala.collection.mutable.AnyRefMap.AnyRefMapBuilder&quot; name=&quot;scala.collection.mutable.AnyRefMap.AnyRefMapBuilder&quot;&gt;AnyRefMapBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.AnyRefMapBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.AnyRefMapBuilder.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df16febdc23c718dc0e6b617b5852e20185db679" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;anyrefmap%24%24anyrefmapbuilder&quot; id=&quot;scala.collection.mutable.AnyRefMap.AnyRefMapBuilder&quot; name=&quot;scala.collection.mutable.AnyRefMap.AnyRefMapBuilder&quot;&gt;AnyRefMapBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.AnyRefMapBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.AnyRefMapBuilder.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anyrefmap%24%24anyrefmapbuilder&quot; id=&quot;scala.collection.mutable.AnyRefMap.AnyRefMapBuilder&quot; name=&quot;scala.collection.mutable.AnyRefMap.AnyRefMapBuilder&quot;&gt;AnyRefMapBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.AnyRefMapBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.AnyRefMapBuilder.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1841de44ad4cf577cb205d16e4b21973cc49d776" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;anystepper&quot; id=&quot;scala.collection.AnyStepper&quot; name=&quot;scala.collection.AnyStepper&quot;&gt;AnyStepper&lt;/a&gt;[&lt;span name=&quot;scala.collection.AnyStepper.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anystepper&quot; id=&quot;scala.collection.AnyStepper&quot; name=&quot;scala.collection.AnyStepper&quot;&gt;AnyStepper&lt;/a&gt;[&lt;span name=&quot;scala.collection.AnyStepper.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae06d0f2dac3cdd470d57bafb9af6a578998b7ce" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;anystepper&quot; id=&quot;scala.collection.AnyStepper&quot; name=&quot;scala.collection.AnyStepper&quot;&gt;AnyStepper&lt;/a&gt;[&lt;span name=&quot;scala.collection.AnyStepper.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anystepper&quot; id=&quot;scala.collection.AnyStepper&quot; name=&quot;scala.collection.AnyStepper&quot;&gt;AnyStepper&lt;/a&gt;[&lt;span name=&quot;scala.collection.AnyStepper.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b805c0e6e16bbfb1d47925f6f5bd5bdaf808c7c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;anystepper%24%24anystepperspliterator&quot; id=&quot;scala.collection.AnyStepper.AnyStepperSpliterator&quot; name=&quot;scala.collection.AnyStepper.AnyStepperSpliterator&quot;&gt;AnyStepperSpliterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AnyStepper.AnyStepperSpliterator.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anystepper%24%24anystepperspliterator&quot; id=&quot;scala.collection.AnyStepper.AnyStepperSpliterator&quot; name=&quot;scala.collection.AnyStepper.AnyStepperSpliterator&quot;&gt;AnyStepperSpliterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AnyStepper.AnyStepperSpliterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f54127c523219ffc5f5f0b686413f97a3f618e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;anystepper%24%24anystepperspliterator&quot; id=&quot;scala.collection.AnyStepper.AnyStepperSpliterator&quot; name=&quot;scala.collection.AnyStepper.AnyStepperSpliterator&quot;&gt;AnyStepperSpliterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AnyStepper.AnyStepperSpliterator.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anystepper%24%24anystepperspliterator&quot; id=&quot;scala.collection.AnyStepper.AnyStepperSpliterator&quot; name=&quot;scala.collection.AnyStepper.AnyStepperSpliterator&quot;&gt;AnyStepperSpliterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AnyStepper.AnyStepperSpliterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ecbeda69032966b8550ee8fc0e42437a307f43f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72a03dcb9e7d84df2b387eacf6fe845f7b2ddb1f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03390ca9e092292670de8789abac581313e60b7d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;anyvalmanifest&quot; id=&quot;scala.reflect.AnyValManifest&quot; name=&quot;scala.reflect.AnyValManifest&quot;&gt;AnyValManifest&lt;/a&gt;[&lt;span name=&quot;scala.reflect.AnyValManifest.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anyvalmanifest&quot; id=&quot;scala.reflect.AnyValManifest&quot; name=&quot;scala.reflect.AnyValManifest&quot;&gt;AnyValManifest&lt;/a&gt;[&lt;span name=&quot;scala.reflect.AnyValManifest.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa6f5aceafecd421558a01424a62e51f0f2979a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;anyvalmanifest&quot; id=&quot;scala.reflect.AnyValManifest&quot; name=&quot;scala.reflect.AnyValManifest&quot;&gt;AnyValManifest&lt;/a&gt;[&lt;span name=&quot;scala.reflect.AnyValManifest.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anyvalmanifest&quot; id=&quot;scala.reflect.AnyValManifest&quot; name=&quot;scala.reflect.AnyValManifest&quot;&gt;AnyValManifest&lt;/a&gt;[&lt;span name=&quot;scala.reflect.AnyValManifest.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a715db74f7a7a6b5dd276818c8dca1f7ba5ae2fd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;app&quot; id=&quot;scala.App&quot; name=&quot;scala.App&quot;&gt;App&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;app&quot; id=&quot;scala.App&quot; name=&quot;scala.App&quot;&gt;App&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c15b573de833ffd8a6f494d15cbc2b9f8ca8966e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;app&quot; id=&quot;scala.App&quot; name=&quot;scala.App&quot;&gt;App&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;app&quot; id=&quot;scala.App&quot; name=&quot;scala.App&quot;&gt;App&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1d795f212a80395e4526b0c10529818e2472660" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0b41c9d6d8c858c455f410e2b0bef0959d9f0d0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4174b7542df0f2f3953c2e36183f7f274e68bcfd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;array%24%24unapplyseqwrapper&quot; id=&quot;scala.Array.UnapplySeqWrapper&quot; name=&quot;scala.Array.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.Array.UnapplySeqWrapper.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;array%24%24unapplyseqwrapper&quot; id=&quot;scala.Array.UnapplySeqWrapper&quot; name=&quot;scala.Array.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.Array.UnapplySeqWrapper.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd984283c5e7ed5f2aea2e2de5c42209f8c1692" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;array%24%24unapplyseqwrapper&quot; id=&quot;scala.Array.UnapplySeqWrapper&quot; name=&quot;scala.Array.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.Array.UnapplySeqWrapper.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;array%24%24unapplyseqwrapper&quot; id=&quot;scala.Array.UnapplySeqWrapper&quot; name=&quot;scala.Array.UnapplySeqWrapper&quot;&gt;UnapplySeqWrapper&lt;/a&gt;[&lt;span name=&quot;scala.Array.UnapplySeqWrapper.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd8709ee8af8cd512e5788b31d0d8d6ad537538f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06d8da45835ccf8fa25dc032f88e87c715445140" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f0550401af767ce14556d8432ee0f306979d739" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arraybufferview&quot; id=&quot;scala.collection.mutable.ArrayBufferView&quot; name=&quot;scala.collection.mutable.ArrayBufferView&quot;&gt;ArrayBufferView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybufferview&quot; id=&quot;scala.collection.mutable.ArrayBufferView&quot; name=&quot;scala.collection.mutable.ArrayBufferView&quot;&gt;ArrayBufferView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac6415d4ae21ffca9cfff8f193cdd88b426d2b18" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arraybufferview&quot; id=&quot;scala.collection.mutable.ArrayBufferView&quot; name=&quot;scala.collection.mutable.ArrayBufferView&quot;&gt;ArrayBufferView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybufferview&quot; id=&quot;scala.collection.mutable.ArrayBufferView&quot; name=&quot;scala.collection.mutable.ArrayBufferView&quot;&gt;ArrayBufferView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f6f18120e73004a08a938aa5678d1743dd5c40a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arraybuilder&quot; id=&quot;scala.collection.mutable.ArrayBuilder&quot; name=&quot;scala.collection.mutable.ArrayBuilder&quot;&gt;ArrayBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuilder.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder&quot; id=&quot;scala.collection.mutable.ArrayBuilder&quot; name=&quot;scala.collection.mutable.ArrayBuilder&quot;&gt;ArrayBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuilder.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b33d3ac38bc79843182a2bb6216e116b8dd847" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arraybuilder&quot; id=&quot;scala.collection.mutable.ArrayBuilder&quot; name=&quot;scala.collection.mutable.ArrayBuilder&quot;&gt;ArrayBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuilder.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder&quot; id=&quot;scala.collection.mutable.ArrayBuilder&quot; name=&quot;scala.collection.mutable.ArrayBuilder&quot;&gt;ArrayBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuilder.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67536b84e123b478cfda24e11f08bd6e654f8511" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arraybuilder%24%24ofboolean&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofBoolean&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofBoolean&quot;&gt;ofBoolean&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24ofboolean&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofBoolean&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofBoolean&quot;&gt;ofBoolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80f79c3fdd0982b0fcd536c99cf1aa42d2dd9d62" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arraybuilder%24%24ofboolean&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofBoolean&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofBoolean&quot;&gt;ofBoolean&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24ofboolean&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofBoolean&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofBoolean&quot;&gt;ofBoolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67abbe60368d3bc83ce14762b84144df317c3a87" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arraybuilder%24%24ofbyte&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofByte&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofByte&quot;&gt;ofByte&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24ofbyte&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofByte&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofByte&quot;&gt;ofByte&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5cfd82df5f4a9d8763fb4c7ecb44d19abaecdcd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arraybuilder%24%24ofbyte&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofByte&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofByte&quot;&gt;ofByte&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24ofbyte&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofByte&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofByte&quot;&gt;ofByte&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd9a5beb1ea2bf264b79eb4e739897382952d94a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arraybuilder%24%24ofchar&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofChar&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofChar&quot;&gt;ofChar&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24ofchar&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofChar&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofChar&quot;&gt;ofChar&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7653b3b8aea447dda473279364c306014da12c95" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arraybuilder%24%24ofchar&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofChar&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofChar&quot;&gt;ofChar&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24ofchar&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofChar&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofChar&quot;&gt;ofChar&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="348676d0f53b0afb49d0af57d20a971a2ab2376b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arraybuilder%24%24ofdouble&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofDouble&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofDouble&quot;&gt;ofDouble&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24ofdouble&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofDouble&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofDouble&quot;&gt;ofDouble&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69e15baefbea28eb28e7e2a0af1905f697a16d34" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arraybuilder%24%24ofdouble&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofDouble&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofDouble&quot;&gt;ofDouble&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24ofdouble&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofDouble&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofDouble&quot;&gt;ofDouble&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d13798eb01fe856ac1785a6907be9b359e758918" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arraybuilder%24%24offloat&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofFloat&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofFloat&quot;&gt;ofFloat&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24offloat&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofFloat&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofFloat&quot;&gt;ofFloat&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bb7b18826b72146db166329c4429e8d8c5adf83" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arraybuilder%24%24offloat&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofFloat&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofFloat&quot;&gt;ofFloat&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24offloat&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofFloat&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofFloat&quot;&gt;ofFloat&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1d4651f98a45fc45ba3061277d921b176460420" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arraybuilder%24%24ofint&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofInt&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofInt&quot;&gt;ofInt&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24ofint&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofInt&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofInt&quot;&gt;ofInt&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f63d9990a670f9365a67e59c768139b38215e516" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arraybuilder%24%24ofint&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofInt&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofInt&quot;&gt;ofInt&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24ofint&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofInt&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofInt&quot;&gt;ofInt&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="634adf9fe0bee24401eb7a5286ab106bd89e8fcc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arraybuilder%24%24oflong&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofLong&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofLong&quot;&gt;ofLong&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24oflong&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofLong&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofLong&quot;&gt;ofLong&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d0469894990d1125f149b39ae764621e18a5b58" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arraybuilder%24%24oflong&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofLong&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofLong&quot;&gt;ofLong&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24oflong&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofLong&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofLong&quot;&gt;ofLong&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4f267f6c40749d37dcacff99c2ffba92726aff1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arraybuilder%24%24ofref&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofRef&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofRef&quot;&gt;ofRef&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuilder.ofRef.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24ofref&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofRef&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofRef&quot;&gt;ofRef&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuilder.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe79e5c4ca1bb6f2f226c12b0f3a768735fb2c56" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arraybuilder%24%24ofref&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofRef&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofRef&quot;&gt;ofRef&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuilder.ofRef.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24ofref&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofRef&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofRef&quot;&gt;ofRef&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuilder.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4273d8ffcb6681c4b2a5b72ffff2cb50bd4a4782" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arraybuilder%24%24ofshort&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofShort&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofShort&quot;&gt;ofShort&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24ofshort&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofShort&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofShort&quot;&gt;ofShort&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="302cbf2a47d834e3041125b1494ee92ef9938f7d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arraybuilder%24%24ofshort&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofShort&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofShort&quot;&gt;ofShort&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24ofshort&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofShort&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofShort&quot;&gt;ofShort&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cebfd331a73409509bc2783f33f476b7ef5c7141" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arraybuilder%24%24ofunit&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofUnit&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofUnit&quot;&gt;ofUnit&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24ofunit&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofUnit&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofUnit&quot;&gt;ofUnit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ca3c6e7697bcfae42b543ff1910dc55d308966e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arraybuilder%24%24ofunit&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofUnit&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofUnit&quot;&gt;ofUnit&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24ofunit&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofUnit&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofUnit&quot;&gt;ofUnit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99a1c752b55415bb52bfbb4d7c4abe33d3369c0d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e88992ef9730b68b5832482f3fbe81d9f5b3a60" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18dc8c6c78fdc6e534007ee2572ebcba46a1ec70" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arraydequeops&quot; id=&quot;scala.collection.mutable.ArrayDequeOps&quot; name=&quot;scala.collection.mutable.ArrayDequeOps&quot;&gt;ArrayDequeOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraydequeops&quot; id=&quot;scala.collection.mutable.ArrayDequeOps&quot; name=&quot;scala.collection.mutable.ArrayDequeOps&quot;&gt;ArrayDequeOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869c160b8817e4123c29a3f90ec437191f34e5bf" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arraydequeops&quot; id=&quot;scala.collection.mutable.ArrayDequeOps&quot; name=&quot;scala.collection.mutable.ArrayDequeOps&quot;&gt;ArrayDequeOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraydequeops&quot; id=&quot;scala.collection.mutable.ArrayDequeOps&quot; name=&quot;scala.collection.mutable.ArrayDequeOps&quot;&gt;ArrayDequeOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51121a878853f2f804549c660466c0063ba187fd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayops&quot; id=&quot;scala.collection.ArrayOps&quot; name=&quot;scala.collection.ArrayOps&quot;&gt;ArrayOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayops&quot; id=&quot;scala.collection.ArrayOps&quot; name=&quot;scala.collection.ArrayOps&quot;&gt;ArrayOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a3933d4e24479ed859c3aa2ab85ca75737c102" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayops&quot; id=&quot;scala.collection.ArrayOps&quot; name=&quot;scala.collection.ArrayOps&quot;&gt;ArrayOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayops&quot; id=&quot;scala.collection.ArrayOps&quot; name=&quot;scala.collection.ArrayOps&quot;&gt;ArrayOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49e098511fd7bf12fe037bb6f00b73ffbdeb6c4c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayops%24%24withfilter&quot; id=&quot;scala.collection.ArrayOps.WithFilter&quot; name=&quot;scala.collection.ArrayOps.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.WithFilter.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayops%24%24withfilter&quot; id=&quot;scala.collection.ArrayOps.WithFilter&quot; name=&quot;scala.collection.ArrayOps.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.WithFilter.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71d4c6baed4f900f1ad0b679853bc2f88880c003" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayops%24%24withfilter&quot; id=&quot;scala.collection.ArrayOps.WithFilter&quot; name=&quot;scala.collection.ArrayOps.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.WithFilter.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayops%24%24withfilter&quot; id=&quot;scala.collection.ArrayOps.WithFilter&quot; name=&quot;scala.collection.ArrayOps.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.WithFilter.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44d5800079e5ebe12c340b3a0e256b419ee0c7c5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfceb15309075a958609471408f57b9e9ab8e814" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e85e3eb4096093c3e8fc9b67f809158cb113d18a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ecc106084ee1c35c330582e6bc7aac96a2687d8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecde054b28d9294db02a3464f6948b7ff9c3741e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24ofboolean&quot; id=&quot;scala.collection.immutable.ArraySeq.ofBoolean&quot; name=&quot;scala.collection.immutable.ArraySeq.ofBoolean&quot;&gt;ofBoolean&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofboolean&quot; id=&quot;scala.collection.immutable.ArraySeq.ofBoolean&quot; name=&quot;scala.collection.immutable.ArraySeq.ofBoolean&quot;&gt;ofBoolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69bfcfbf0a31673ae70564efcf56cdb978e79e28" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24ofboolean&quot; id=&quot;scala.collection.immutable.ArraySeq.ofBoolean&quot; name=&quot;scala.collection.immutable.ArraySeq.ofBoolean&quot;&gt;ofBoolean&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofboolean&quot; id=&quot;scala.collection.immutable.ArraySeq.ofBoolean&quot; name=&quot;scala.collection.immutable.ArraySeq.ofBoolean&quot;&gt;ofBoolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dadc526654049d705b9a62329677d0902bec980" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24ofboolean&quot; id=&quot;scala.collection.mutable.ArraySeq.ofBoolean&quot; name=&quot;scala.collection.mutable.ArraySeq.ofBoolean&quot;&gt;ofBoolean&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofboolean&quot; id=&quot;scala.collection.mutable.ArraySeq.ofBoolean&quot; name=&quot;scala.collection.mutable.ArraySeq.ofBoolean&quot;&gt;ofBoolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a618c7689b77b665cb229b711fdac0eb55158d1b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24ofboolean&quot; id=&quot;scala.collection.mutable.ArraySeq.ofBoolean&quot; name=&quot;scala.collection.mutable.ArraySeq.ofBoolean&quot;&gt;ofBoolean&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofboolean&quot; id=&quot;scala.collection.mutable.ArraySeq.ofBoolean&quot; name=&quot;scala.collection.mutable.ArraySeq.ofBoolean&quot;&gt;ofBoolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4521fc95a589b98347de5ea4e391f464d711dd77" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24ofbyte&quot; id=&quot;scala.collection.immutable.ArraySeq.ofByte&quot; name=&quot;scala.collection.immutable.ArraySeq.ofByte&quot;&gt;ofByte&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofbyte&quot; id=&quot;scala.collection.immutable.ArraySeq.ofByte&quot; name=&quot;scala.collection.immutable.ArraySeq.ofByte&quot;&gt;ofByte&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e9f402214283fa0d867d8580b76c0839c3875da" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24ofbyte&quot; id=&quot;scala.collection.immutable.ArraySeq.ofByte&quot; name=&quot;scala.collection.immutable.ArraySeq.ofByte&quot;&gt;ofByte&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofbyte&quot; id=&quot;scala.collection.immutable.ArraySeq.ofByte&quot; name=&quot;scala.collection.immutable.ArraySeq.ofByte&quot;&gt;ofByte&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcd2d9cedb3cb08b63fa0aebb3553b4f9a57f1ff" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24ofbyte&quot; id=&quot;scala.collection.mutable.ArraySeq.ofByte&quot; name=&quot;scala.collection.mutable.ArraySeq.ofByte&quot;&gt;ofByte&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofbyte&quot; id=&quot;scala.collection.mutable.ArraySeq.ofByte&quot; name=&quot;scala.collection.mutable.ArraySeq.ofByte&quot;&gt;ofByte&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ae8366fad0c36e45ab5302e0bcbd30445ceabab" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24ofbyte&quot; id=&quot;scala.collection.mutable.ArraySeq.ofByte&quot; name=&quot;scala.collection.mutable.ArraySeq.ofByte&quot;&gt;ofByte&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofbyte&quot; id=&quot;scala.collection.mutable.ArraySeq.ofByte&quot; name=&quot;scala.collection.mutable.ArraySeq.ofByte&quot;&gt;ofByte&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f65ce32c4bd1bd215c297d42e88a2d659963e29" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24ofchar&quot; id=&quot;scala.collection.immutable.ArraySeq.ofChar&quot; name=&quot;scala.collection.immutable.ArraySeq.ofChar&quot;&gt;ofChar&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofchar&quot; id=&quot;scala.collection.immutable.ArraySeq.ofChar&quot; name=&quot;scala.collection.immutable.ArraySeq.ofChar&quot;&gt;ofChar&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bce4cf17a7fd72d14415a74a898e471630231add" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24ofchar&quot; id=&quot;scala.collection.immutable.ArraySeq.ofChar&quot; name=&quot;scala.collection.immutable.ArraySeq.ofChar&quot;&gt;ofChar&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofchar&quot; id=&quot;scala.collection.immutable.ArraySeq.ofChar&quot; name=&quot;scala.collection.immutable.ArraySeq.ofChar&quot;&gt;ofChar&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="526b30573b1b87412a319e27d3002c004237211c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24ofchar&quot; id=&quot;scala.collection.mutable.ArraySeq.ofChar&quot; name=&quot;scala.collection.mutable.ArraySeq.ofChar&quot;&gt;ofChar&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofchar&quot; id=&quot;scala.collection.mutable.ArraySeq.ofChar&quot; name=&quot;scala.collection.mutable.ArraySeq.ofChar&quot;&gt;ofChar&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1651421186aff2b71d24408527eb0d4016292657" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24ofchar&quot; id=&quot;scala.collection.mutable.ArraySeq.ofChar&quot; name=&quot;scala.collection.mutable.ArraySeq.ofChar&quot;&gt;ofChar&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofchar&quot; id=&quot;scala.collection.mutable.ArraySeq.ofChar&quot; name=&quot;scala.collection.mutable.ArraySeq.ofChar&quot;&gt;ofChar&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b240d9f59d1477bd4413536514a4764f4ae95a8e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24ofdouble&quot; id=&quot;scala.collection.immutable.ArraySeq.ofDouble&quot; name=&quot;scala.collection.immutable.ArraySeq.ofDouble&quot;&gt;ofDouble&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofdouble&quot; id=&quot;scala.collection.immutable.ArraySeq.ofDouble&quot; name=&quot;scala.collection.immutable.ArraySeq.ofDouble&quot;&gt;ofDouble&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9003a6e88f438b6b7a83591d934b0f0c0423ee01" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24ofdouble&quot; id=&quot;scala.collection.immutable.ArraySeq.ofDouble&quot; name=&quot;scala.collection.immutable.ArraySeq.ofDouble&quot;&gt;ofDouble&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofdouble&quot; id=&quot;scala.collection.immutable.ArraySeq.ofDouble&quot; name=&quot;scala.collection.immutable.ArraySeq.ofDouble&quot;&gt;ofDouble&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae82a0d71bb13f046a6dac9bcc50ab5f1465bd93" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24ofdouble&quot; id=&quot;scala.collection.mutable.ArraySeq.ofDouble&quot; name=&quot;scala.collection.mutable.ArraySeq.ofDouble&quot;&gt;ofDouble&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofdouble&quot; id=&quot;scala.collection.mutable.ArraySeq.ofDouble&quot; name=&quot;scala.collection.mutable.ArraySeq.ofDouble&quot;&gt;ofDouble&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbf8dda9d8c11d960b0f7182b64249f8a8720400" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24ofdouble&quot; id=&quot;scala.collection.mutable.ArraySeq.ofDouble&quot; name=&quot;scala.collection.mutable.ArraySeq.ofDouble&quot;&gt;ofDouble&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofdouble&quot; id=&quot;scala.collection.mutable.ArraySeq.ofDouble&quot; name=&quot;scala.collection.mutable.ArraySeq.ofDouble&quot;&gt;ofDouble&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef375366d9b30e6ecffbf4b06720f8b6537984f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24offloat&quot; id=&quot;scala.collection.immutable.ArraySeq.ofFloat&quot; name=&quot;scala.collection.immutable.ArraySeq.ofFloat&quot;&gt;ofFloat&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24offloat&quot; id=&quot;scala.collection.immutable.ArraySeq.ofFloat&quot; name=&quot;scala.collection.immutable.ArraySeq.ofFloat&quot;&gt;ofFloat&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efcef50c4919d224a0cb0c11ea9252eb61419671" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24offloat&quot; id=&quot;scala.collection.immutable.ArraySeq.ofFloat&quot; name=&quot;scala.collection.immutable.ArraySeq.ofFloat&quot;&gt;ofFloat&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24offloat&quot; id=&quot;scala.collection.immutable.ArraySeq.ofFloat&quot; name=&quot;scala.collection.immutable.ArraySeq.ofFloat&quot;&gt;ofFloat&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d81f30a0ac957b850082143041db62b4c14df6d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24offloat&quot; id=&quot;scala.collection.mutable.ArraySeq.ofFloat&quot; name=&quot;scala.collection.mutable.ArraySeq.ofFloat&quot;&gt;ofFloat&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24offloat&quot; id=&quot;scala.collection.mutable.ArraySeq.ofFloat&quot; name=&quot;scala.collection.mutable.ArraySeq.ofFloat&quot;&gt;ofFloat&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c9bea270ffde55e512de7f4d6e00b2817c4fc88" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24offloat&quot; id=&quot;scala.collection.mutable.ArraySeq.ofFloat&quot; name=&quot;scala.collection.mutable.ArraySeq.ofFloat&quot;&gt;ofFloat&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24offloat&quot; id=&quot;scala.collection.mutable.ArraySeq.ofFloat&quot; name=&quot;scala.collection.mutable.ArraySeq.ofFloat&quot;&gt;ofFloat&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d38671fcc78df385b7ee1774b9bdea74e4985da5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24ofint&quot; id=&quot;scala.collection.immutable.ArraySeq.ofInt&quot; name=&quot;scala.collection.immutable.ArraySeq.ofInt&quot;&gt;ofInt&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofint&quot; id=&quot;scala.collection.immutable.ArraySeq.ofInt&quot; name=&quot;scala.collection.immutable.ArraySeq.ofInt&quot;&gt;ofInt&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="649b1069abbdb25b8e61dd805a4eb279345249e4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24ofint&quot; id=&quot;scala.collection.immutable.ArraySeq.ofInt&quot; name=&quot;scala.collection.immutable.ArraySeq.ofInt&quot;&gt;ofInt&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofint&quot; id=&quot;scala.collection.immutable.ArraySeq.ofInt&quot; name=&quot;scala.collection.immutable.ArraySeq.ofInt&quot;&gt;ofInt&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="051504c8654b687b64e0be88b0ed6f46cd2419c0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24ofint&quot; id=&quot;scala.collection.mutable.ArraySeq.ofInt&quot; name=&quot;scala.collection.mutable.ArraySeq.ofInt&quot;&gt;ofInt&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofint&quot; id=&quot;scala.collection.mutable.ArraySeq.ofInt&quot; name=&quot;scala.collection.mutable.ArraySeq.ofInt&quot;&gt;ofInt&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28b034d810b9564b91d820753bff1d3da9c215c9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24ofint&quot; id=&quot;scala.collection.mutable.ArraySeq.ofInt&quot; name=&quot;scala.collection.mutable.ArraySeq.ofInt&quot;&gt;ofInt&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofint&quot; id=&quot;scala.collection.mutable.ArraySeq.ofInt&quot; name=&quot;scala.collection.mutable.ArraySeq.ofInt&quot;&gt;ofInt&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74f722c66920a1c782fb60ce53f1f1f604ed03cb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24oflong&quot; id=&quot;scala.collection.immutable.ArraySeq.ofLong&quot; name=&quot;scala.collection.immutable.ArraySeq.ofLong&quot;&gt;ofLong&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24oflong&quot; id=&quot;scala.collection.immutable.ArraySeq.ofLong&quot; name=&quot;scala.collection.immutable.ArraySeq.ofLong&quot;&gt;ofLong&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54e27df43db10d5caa8be494889d57744fe4a73c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24oflong&quot; id=&quot;scala.collection.immutable.ArraySeq.ofLong&quot; name=&quot;scala.collection.immutable.ArraySeq.ofLong&quot;&gt;ofLong&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24oflong&quot; id=&quot;scala.collection.immutable.ArraySeq.ofLong&quot; name=&quot;scala.collection.immutable.ArraySeq.ofLong&quot;&gt;ofLong&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba3be970dae102919e5c9f998d22dd164dc57cf" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24oflong&quot; id=&quot;scala.collection.mutable.ArraySeq.ofLong&quot; name=&quot;scala.collection.mutable.ArraySeq.ofLong&quot;&gt;ofLong&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24oflong&quot; id=&quot;scala.collection.mutable.ArraySeq.ofLong&quot; name=&quot;scala.collection.mutable.ArraySeq.ofLong&quot;&gt;ofLong&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="278fb93e73094af41314fd8b5583bdfa3a1a4bdd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24oflong&quot; id=&quot;scala.collection.mutable.ArraySeq.ofLong&quot; name=&quot;scala.collection.mutable.ArraySeq.ofLong&quot;&gt;ofLong&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24oflong&quot; id=&quot;scala.collection.mutable.ArraySeq.ofLong&quot; name=&quot;scala.collection.mutable.ArraySeq.ofLong&quot;&gt;ofLong&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67d571d76fccf4a41add0bb65a025701d35c624d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24ofref&quot; id=&quot;scala.collection.immutable.ArraySeq.ofRef&quot; name=&quot;scala.collection.immutable.ArraySeq.ofRef&quot;&gt;ofRef&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofref&quot; id=&quot;scala.collection.immutable.ArraySeq.ofRef&quot; name=&quot;scala.collection.immutable.ArraySeq.ofRef&quot;&gt;ofRef&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac4020b402c8387396dd3ec8be590b1da98b6b81" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24ofref&quot; id=&quot;scala.collection.immutable.ArraySeq.ofRef&quot; name=&quot;scala.collection.immutable.ArraySeq.ofRef&quot;&gt;ofRef&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofref&quot; id=&quot;scala.collection.immutable.ArraySeq.ofRef&quot; name=&quot;scala.collection.immutable.ArraySeq.ofRef&quot;&gt;ofRef&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36adaa97767978bf50666dd3f20f5806802f0bba" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24ofref&quot; id=&quot;scala.collection.mutable.ArraySeq.ofRef&quot; name=&quot;scala.collection.mutable.ArraySeq.ofRef&quot;&gt;ofRef&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofref&quot; id=&quot;scala.collection.mutable.ArraySeq.ofRef&quot; name=&quot;scala.collection.mutable.ArraySeq.ofRef&quot;&gt;ofRef&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2d9e0cd5c85f43a1aa988832d773ec6046b68fa" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24ofref&quot; id=&quot;scala.collection.mutable.ArraySeq.ofRef&quot; name=&quot;scala.collection.mutable.ArraySeq.ofRef&quot;&gt;ofRef&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofref&quot; id=&quot;scala.collection.mutable.ArraySeq.ofRef&quot; name=&quot;scala.collection.mutable.ArraySeq.ofRef&quot;&gt;ofRef&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="815b62cad6254f0d68606eca928b7daf04f2fedd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24ofshort&quot; id=&quot;scala.collection.immutable.ArraySeq.ofShort&quot; name=&quot;scala.collection.immutable.ArraySeq.ofShort&quot;&gt;ofShort&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofshort&quot; id=&quot;scala.collection.immutable.ArraySeq.ofShort&quot; name=&quot;scala.collection.immutable.ArraySeq.ofShort&quot;&gt;ofShort&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b5f8a9d0c4e35dc8f979b7b7ab24a86ee05ecb2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24ofshort&quot; id=&quot;scala.collection.immutable.ArraySeq.ofShort&quot; name=&quot;scala.collection.immutable.ArraySeq.ofShort&quot;&gt;ofShort&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofshort&quot; id=&quot;scala.collection.immutable.ArraySeq.ofShort&quot; name=&quot;scala.collection.immutable.ArraySeq.ofShort&quot;&gt;ofShort&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c4c1b63acf15c4499c9ac1535ceb8ccab852dac" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24ofshort&quot; id=&quot;scala.collection.mutable.ArraySeq.ofShort&quot; name=&quot;scala.collection.mutable.ArraySeq.ofShort&quot;&gt;ofShort&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofshort&quot; id=&quot;scala.collection.mutable.ArraySeq.ofShort&quot; name=&quot;scala.collection.mutable.ArraySeq.ofShort&quot;&gt;ofShort&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaae38c1c7305ff49843116aeab941a0e0d8fef1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24ofshort&quot; id=&quot;scala.collection.mutable.ArraySeq.ofShort&quot; name=&quot;scala.collection.mutable.ArraySeq.ofShort&quot;&gt;ofShort&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofshort&quot; id=&quot;scala.collection.mutable.ArraySeq.ofShort&quot; name=&quot;scala.collection.mutable.ArraySeq.ofShort&quot;&gt;ofShort&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c218a314f6233e5d8debb4641ca8980a3e4fc516" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24ofunit&quot; id=&quot;scala.collection.immutable.ArraySeq.ofUnit&quot; name=&quot;scala.collection.immutable.ArraySeq.ofUnit&quot;&gt;ofUnit&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofunit&quot; id=&quot;scala.collection.immutable.ArraySeq.ofUnit&quot; name=&quot;scala.collection.immutable.ArraySeq.ofUnit&quot;&gt;ofUnit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0eaea87bbc11e90791b06c7cec1046a89459e5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24ofunit&quot; id=&quot;scala.collection.immutable.ArraySeq.ofUnit&quot; name=&quot;scala.collection.immutable.ArraySeq.ofUnit&quot;&gt;ofUnit&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofunit&quot; id=&quot;scala.collection.immutable.ArraySeq.ofUnit&quot; name=&quot;scala.collection.immutable.ArraySeq.ofUnit&quot;&gt;ofUnit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d8442867f85b1929038b6dab8cc93553f1b06af" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24ofunit&quot; id=&quot;scala.collection.mutable.ArraySeq.ofUnit&quot; name=&quot;scala.collection.mutable.ArraySeq.ofUnit&quot;&gt;ofUnit&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofunit&quot; id=&quot;scala.collection.mutable.ArraySeq.ofUnit&quot; name=&quot;scala.collection.mutable.ArraySeq.ofUnit&quot;&gt;ofUnit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c43ecf53bc3e2859361129e806b317a388dd8cce" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;arrayseq%24%24ofunit&quot; id=&quot;scala.collection.mutable.ArraySeq.ofUnit&quot; name=&quot;scala.collection.mutable.ArraySeq.ofUnit&quot;&gt;ofUnit&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofunit&quot; id=&quot;scala.collection.mutable.ArraySeq.ofUnit&quot; name=&quot;scala.collection.mutable.ArraySeq.ofUnit&quot;&gt;ofUnit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77218cfc143373b97c1133909730d6efaec1a48b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asjavaconverters&quot; id=&quot;scala.collection.convert.AsJavaConverters&quot; name=&quot;scala.collection.convert.AsJavaConverters&quot;&gt;AsJavaConverters&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaconverters&quot; id=&quot;scala.collection.convert.AsJavaConverters&quot; name=&quot;scala.collection.convert.AsJavaConverters&quot;&gt;AsJavaConverters&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c725e3759cbdd9578dc67a732adfa6e05cae0ddb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asjavaconverters&quot; id=&quot;scala.collection.convert.AsJavaConverters&quot; name=&quot;scala.collection.convert.AsJavaConverters&quot;&gt;AsJavaConverters&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaconverters&quot; id=&quot;scala.collection.convert.AsJavaConverters&quot; name=&quot;scala.collection.convert.AsJavaConverters&quot;&gt;AsJavaConverters&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="300b9257a6092ea8128a1ca68affd0d0f0b8261d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asjavaextensions&quot; id=&quot;scala.collection.convert.AsJavaExtensions&quot; name=&quot;scala.collection.convert.AsJavaExtensions&quot;&gt;AsJavaExtensions&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions&quot; id=&quot;scala.collection.convert.AsJavaExtensions&quot; name=&quot;scala.collection.convert.AsJavaExtensions&quot;&gt;AsJavaExtensions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6defde4d6c0590912cc8cae2b91e064f427fb4bb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asjavaextensions&quot; id=&quot;scala.collection.convert.AsJavaExtensions&quot; name=&quot;scala.collection.convert.AsJavaExtensions&quot;&gt;AsJavaExtensions&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions&quot; id=&quot;scala.collection.convert.AsJavaExtensions&quot; name=&quot;scala.collection.convert.AsJavaExtensions&quot;&gt;AsJavaExtensions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26842785fc764426028eefafeeae89263bd46a6e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asjavaextensions%24bufferhasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.BufferHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.BufferHasAsJava&quot;&gt;BufferHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.BufferHasAsJava.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24bufferhasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.BufferHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.BufferHasAsJava&quot;&gt;BufferHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.BufferHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b65d9348cc9819ff3939a41ce88e4925fac3688" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asjavaextensions%24bufferhasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.BufferHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.BufferHasAsJava&quot;&gt;BufferHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.BufferHasAsJava.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24bufferhasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.BufferHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.BufferHasAsJava&quot;&gt;BufferHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.BufferHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e510fe4b689ee693298034d87aa05d6ebae328eb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asjavaextensions%24concurrentmaphasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.ConcurrentMapHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.ConcurrentMapHasAsJava&quot;&gt;ConcurrentMapHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.ConcurrentMapHasAsJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaExtensions.ConcurrentMapHasAsJava.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24concurrentmaphasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.ConcurrentMapHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.ConcurrentMapHasAsJava&quot;&gt;ConcurrentMapHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.ConcurrentMapHasAsJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaExtensions.ConcurrentMapHasAsJava.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d2129a85820da7f6570f0539cc8b8112d812340" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asjavaextensions%24concurrentmaphasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.ConcurrentMapHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.ConcurrentMapHasAsJava&quot;&gt;ConcurrentMapHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.ConcurrentMapHasAsJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaExtensions.ConcurrentMapHasAsJava.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24concurrentmaphasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.ConcurrentMapHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.ConcurrentMapHasAsJava&quot;&gt;ConcurrentMapHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.ConcurrentMapHasAsJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaExtensions.ConcurrentMapHasAsJava.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c22e9115e94f0069839592cdb40b49bd0570f002" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asjavaextensions%24iterablehasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.IterableHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.IterableHasAsJava&quot;&gt;IterableHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.IterableHasAsJava.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24iterablehasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.IterableHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.IterableHasAsJava&quot;&gt;IterableHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.IterableHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b522fa4eee9e0eef98b4301f0cef1c0c3741b91" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asjavaextensions%24iterablehasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.IterableHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.IterableHasAsJava&quot;&gt;IterableHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.IterableHasAsJava.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24iterablehasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.IterableHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.IterableHasAsJava&quot;&gt;IterableHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.IterableHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23797ff6e1901d49191221ce03dd22cbf3defdcf" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asjavaextensions%24iteratorhasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.IteratorHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.IteratorHasAsJava&quot;&gt;IteratorHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.IteratorHasAsJava.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24iteratorhasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.IteratorHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.IteratorHasAsJava&quot;&gt;IteratorHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.IteratorHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a97f18ac3a3a9819ac18add896614e7083a7b20f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asjavaextensions%24iteratorhasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.IteratorHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.IteratorHasAsJava&quot;&gt;IteratorHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.IteratorHasAsJava.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24iteratorhasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.IteratorHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.IteratorHasAsJava&quot;&gt;IteratorHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.IteratorHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ec7738846e10906daebb499394d90076dcf4941" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asjavaextensions%24maphasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.MapHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.MapHasAsJava&quot;&gt;MapHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MapHasAsJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MapHasAsJava.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24maphasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.MapHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.MapHasAsJava&quot;&gt;MapHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MapHasAsJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MapHasAsJava.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f83fb6e6109754fdbc008998f1e7ccc0cddb423" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asjavaextensions%24maphasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.MapHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.MapHasAsJava&quot;&gt;MapHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MapHasAsJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MapHasAsJava.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24maphasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.MapHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.MapHasAsJava&quot;&gt;MapHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MapHasAsJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MapHasAsJava.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43bf8a029617f8649b163d9b78f154e4cf1a2930" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asjavaextensions%24mutablemaphasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.MutableMapHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.MutableMapHasAsJava&quot;&gt;MutableMapHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MutableMapHasAsJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MutableMapHasAsJava.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24mutablemaphasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.MutableMapHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.MutableMapHasAsJava&quot;&gt;MutableMapHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MutableMapHasAsJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MutableMapHasAsJava.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13097f3610f80e907e2a2a7d5b1bbe1767e9b955" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asjavaextensions%24mutablemaphasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.MutableMapHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.MutableMapHasAsJava&quot;&gt;MutableMapHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MutableMapHasAsJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MutableMapHasAsJava.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24mutablemaphasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.MutableMapHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.MutableMapHasAsJava&quot;&gt;MutableMapHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MutableMapHasAsJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MutableMapHasAsJava.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="769533077f6854c41f2448271f1427ffef9e0dd5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asjavaextensions%24mutableseqhasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.MutableSeqHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.MutableSeqHasAsJava&quot;&gt;MutableSeqHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MutableSeqHasAsJava.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24mutableseqhasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.MutableSeqHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.MutableSeqHasAsJava&quot;&gt;MutableSeqHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MutableSeqHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30eaad8f961650d4e1b5cff47f9f8335c95027d3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asjavaextensions%24mutableseqhasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.MutableSeqHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.MutableSeqHasAsJava&quot;&gt;MutableSeqHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MutableSeqHasAsJava.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24mutableseqhasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.MutableSeqHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.MutableSeqHasAsJava&quot;&gt;MutableSeqHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MutableSeqHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73fcd6d466e62d1590b89b5777f9afa559f43c04" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asjavaextensions%24mutablesethasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.MutableSetHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.MutableSetHasAsJava&quot;&gt;MutableSetHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MutableSetHasAsJava.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24mutablesethasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.MutableSetHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.MutableSetHasAsJava&quot;&gt;MutableSetHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MutableSetHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1635e15d6cdaef61b2d88d6fa3af1d6b9496667a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asjavaextensions%24mutablesethasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.MutableSetHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.MutableSetHasAsJava&quot;&gt;MutableSetHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MutableSetHasAsJava.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24mutablesethasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.MutableSetHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.MutableSetHasAsJava&quot;&gt;MutableSetHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MutableSetHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efe9f2479d4ba2a2128d80704d23832c400b158c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asjavaextensions%24seqhasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.SeqHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.SeqHasAsJava&quot;&gt;SeqHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.SeqHasAsJava.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24seqhasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.SeqHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.SeqHasAsJava&quot;&gt;SeqHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.SeqHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fdee92f66964e5d853451cc966d28fde3cc9c50" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asjavaextensions%24seqhasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.SeqHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.SeqHasAsJava&quot;&gt;SeqHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.SeqHasAsJava.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24seqhasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.SeqHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.SeqHasAsJava&quot;&gt;SeqHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.SeqHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab8751250f99f8b42f575d1a1257c5baebe61c59" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asjavaextensions%24sethasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.SetHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.SetHasAsJava&quot;&gt;SetHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.SetHasAsJava.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24sethasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.SetHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.SetHasAsJava&quot;&gt;SetHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.SetHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f1fe89969422105e0ed4cc79143c432c24ee3c1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asjavaextensions%24sethasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.SetHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.SetHasAsJava&quot;&gt;SetHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.SetHasAsJava.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24sethasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.SetHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.SetHasAsJava&quot;&gt;SetHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.SetHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b05654d90466432ed3fc273fb4cbf7c1475a224f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asscalaconverters&quot; id=&quot;scala.collection.convert.AsScalaConverters&quot; name=&quot;scala.collection.convert.AsScalaConverters&quot;&gt;AsScalaConverters&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaconverters&quot; id=&quot;scala.collection.convert.AsScalaConverters&quot; name=&quot;scala.collection.convert.AsScalaConverters&quot;&gt;AsScalaConverters&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a50f4685bd62e9eaeb641b576ee9390a2187649a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asscalaconverters&quot; id=&quot;scala.collection.convert.AsScalaConverters&quot; name=&quot;scala.collection.convert.AsScalaConverters&quot;&gt;AsScalaConverters&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaconverters&quot; id=&quot;scala.collection.convert.AsScalaConverters&quot; name=&quot;scala.collection.convert.AsScalaConverters&quot;&gt;AsScalaConverters&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="416a188bed6a6525a868ea088121adf46dd63a40" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asscalaextensions&quot; id=&quot;scala.collection.convert.AsScalaExtensions&quot; name=&quot;scala.collection.convert.AsScalaExtensions&quot;&gt;AsScalaExtensions&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions&quot; id=&quot;scala.collection.convert.AsScalaExtensions&quot; name=&quot;scala.collection.convert.AsScalaExtensions&quot;&gt;AsScalaExtensions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10aec61da46b09f1303a5e8cb78ff37f2ee24535" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asscalaextensions&quot; id=&quot;scala.collection.convert.AsScalaExtensions&quot; name=&quot;scala.collection.convert.AsScalaExtensions&quot;&gt;AsScalaExtensions&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions&quot; id=&quot;scala.collection.convert.AsScalaExtensions&quot; name=&quot;scala.collection.convert.AsScalaExtensions&quot;&gt;AsScalaExtensions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14e672d0bb0121044339e1e1919d2fdf640a5825" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asscalaextensions%24collectionhasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.CollectionHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.CollectionHasAsScala&quot;&gt;CollectionHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.CollectionHasAsScala.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24collectionhasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.CollectionHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.CollectionHasAsScala&quot;&gt;CollectionHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.CollectionHasAsScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b79119bfdb96bce9c18c02d492901ddaa29f98a7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asscalaextensions%24collectionhasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.CollectionHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.CollectionHasAsScala&quot;&gt;CollectionHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.CollectionHasAsScala.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24collectionhasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.CollectionHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.CollectionHasAsScala&quot;&gt;CollectionHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.CollectionHasAsScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e8939570839b842cdca1f9452b07b5a22a51437" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asscalaextensions%24concurrentmaphasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.ConcurrentMapHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.ConcurrentMapHasAsScala&quot;&gt;ConcurrentMapHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.ConcurrentMapHasAsScala.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaExtensions.ConcurrentMapHasAsScala.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24concurrentmaphasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.ConcurrentMapHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.ConcurrentMapHasAsScala&quot;&gt;ConcurrentMapHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.ConcurrentMapHasAsScala.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaExtensions.ConcurrentMapHasAsScala.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e346922ca25f455a3cd03b76e107e4b489307f1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asscalaextensions%24concurrentmaphasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.ConcurrentMapHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.ConcurrentMapHasAsScala&quot;&gt;ConcurrentMapHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.ConcurrentMapHasAsScala.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaExtensions.ConcurrentMapHasAsScala.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24concurrentmaphasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.ConcurrentMapHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.ConcurrentMapHasAsScala&quot;&gt;ConcurrentMapHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.ConcurrentMapHasAsScala.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaExtensions.ConcurrentMapHasAsScala.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30e4d31f8aeeb011140870384617b042e47c1598" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asscalaextensions%24dictionaryhasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.DictionaryHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.DictionaryHasAsScala&quot;&gt;DictionaryHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.DictionaryHasAsScala.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaExtensions.DictionaryHasAsScala.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24dictionaryhasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.DictionaryHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.DictionaryHasAsScala&quot;&gt;DictionaryHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.DictionaryHasAsScala.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaExtensions.DictionaryHasAsScala.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78562dd89a24388f152f18aa8b9a1ea8b90bda73" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asscalaextensions%24dictionaryhasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.DictionaryHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.DictionaryHasAsScala&quot;&gt;DictionaryHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.DictionaryHasAsScala.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaExtensions.DictionaryHasAsScala.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24dictionaryhasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.DictionaryHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.DictionaryHasAsScala&quot;&gt;DictionaryHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.DictionaryHasAsScala.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaExtensions.DictionaryHasAsScala.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b7e2337dfbef4bb80542cfe565b3a01e39740a3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asscalaextensions%24enumerationhasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.EnumerationHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.EnumerationHasAsScala&quot;&gt;EnumerationHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.EnumerationHasAsScala.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24enumerationhasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.EnumerationHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.EnumerationHasAsScala&quot;&gt;EnumerationHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.EnumerationHasAsScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebaab02f886a25ab406deadc802a00488ededf14" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asscalaextensions%24enumerationhasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.EnumerationHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.EnumerationHasAsScala&quot;&gt;EnumerationHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.EnumerationHasAsScala.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24enumerationhasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.EnumerationHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.EnumerationHasAsScala&quot;&gt;EnumerationHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.EnumerationHasAsScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a67cf254be7c196122e5f90a231ec65f5c223d6b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asscalaextensions%24iterablehasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.IterableHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.IterableHasAsScala&quot;&gt;IterableHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.IterableHasAsScala.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24iterablehasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.IterableHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.IterableHasAsScala&quot;&gt;IterableHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.IterableHasAsScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dac3cdf960926c9b24536e08195ed40b4a73339" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asscalaextensions%24iterablehasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.IterableHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.IterableHasAsScala&quot;&gt;IterableHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.IterableHasAsScala.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24iterablehasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.IterableHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.IterableHasAsScala&quot;&gt;IterableHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.IterableHasAsScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85a27e6349c9b9572ae1de29d42d9a1ceb35b2d7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asscalaextensions%24iteratorhasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.IteratorHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.IteratorHasAsScala&quot;&gt;IteratorHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.IteratorHasAsScala.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24iteratorhasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.IteratorHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.IteratorHasAsScala&quot;&gt;IteratorHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.IteratorHasAsScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34f2db2730a2033bea956bc568116f4802d77b7c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asscalaextensions%24iteratorhasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.IteratorHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.IteratorHasAsScala&quot;&gt;IteratorHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.IteratorHasAsScala.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24iteratorhasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.IteratorHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.IteratorHasAsScala&quot;&gt;IteratorHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.IteratorHasAsScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="090470611893766a2c4e8b099e44e72f2091cb43" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asscalaextensions%24listhasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.ListHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.ListHasAsScala&quot;&gt;ListHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.ListHasAsScala.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24listhasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.ListHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.ListHasAsScala&quot;&gt;ListHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.ListHasAsScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b1a36534092ddfde086b8d08ddf7f24d80255e8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asscalaextensions%24listhasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.ListHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.ListHasAsScala&quot;&gt;ListHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.ListHasAsScala.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24listhasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.ListHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.ListHasAsScala&quot;&gt;ListHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.ListHasAsScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="734ba59df1f7107389b55c5003dd5206e9e0ecbb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asscalaextensions%24maphasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.MapHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.MapHasAsScala&quot;&gt;MapHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.MapHasAsScala.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaExtensions.MapHasAsScala.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24maphasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.MapHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.MapHasAsScala&quot;&gt;MapHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.MapHasAsScala.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaExtensions.MapHasAsScala.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d936e60f662e6a3509a13b93947eca7c5ab6d79b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asscalaextensions%24maphasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.MapHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.MapHasAsScala&quot;&gt;MapHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.MapHasAsScala.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaExtensions.MapHasAsScala.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24maphasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.MapHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.MapHasAsScala&quot;&gt;MapHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.MapHasAsScala.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaExtensions.MapHasAsScala.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5ca712acbd9e0f554c7ff767b80f5d3277c2627" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asscalaextensions%24propertieshasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.PropertiesHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.PropertiesHasAsScala&quot;&gt;PropertiesHasAsScala&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24propertieshasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.PropertiesHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.PropertiesHasAsScala&quot;&gt;PropertiesHasAsScala&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0159d9b0cebdd766e9276af8fdc4f765368e6708" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asscalaextensions%24propertieshasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.PropertiesHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.PropertiesHasAsScala&quot;&gt;PropertiesHasAsScala&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24propertieshasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.PropertiesHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.PropertiesHasAsScala&quot;&gt;PropertiesHasAsScala&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a447c37c4cd31ebeb2f6cee6905a252d60265e83" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asscalaextensions%24sethasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.SetHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.SetHasAsScala&quot;&gt;SetHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.SetHasAsScala.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24sethasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.SetHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.SetHasAsScala&quot;&gt;SetHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.SetHasAsScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa5c1d24d79ceb42743133b1ea35987cebfdc78" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;asscalaextensions%24sethasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.SetHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.SetHasAsScala&quot;&gt;SetHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.SetHasAsScala.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24sethasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.SetHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.SetHasAsScala&quot;&gt;SetHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.SetHasAsScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a95ff4d7ad8b4f69e59423625d7c317a44aba076" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;awaitable&quot; id=&quot;scala.concurrent.Awaitable&quot; name=&quot;scala.concurrent.Awaitable&quot;&gt;Awaitable&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Awaitable.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;awaitable&quot; id=&quot;scala.concurrent.Awaitable&quot; name=&quot;scala.concurrent.Awaitable&quot;&gt;Awaitable&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Awaitable.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afe7769757720ce754e0249dc92438b877762bd8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;awaitable&quot; id=&quot;scala.concurrent.Awaitable&quot; name=&quot;scala.concurrent.Awaitable&quot;&gt;Awaitable&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Awaitable.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;awaitable&quot; id=&quot;scala.concurrent.Awaitable&quot; name=&quot;scala.concurrent.Awaitable&quot;&gt;Awaitable&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Awaitable.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f952caf29e55be412206b56bb9a159b35449c168" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;batchable&quot; id=&quot;scala.concurrent.Batchable&quot; name=&quot;scala.concurrent.Batchable&quot;&gt;Batchable&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;batchable&quot; id=&quot;scala.concurrent.Batchable&quot; name=&quot;scala.concurrent.Batchable&quot;&gt;Batchable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a59fe54e3578c55c5d15b98461b42cac494b074" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;batchable&quot; id=&quot;scala.concurrent.Batchable&quot; name=&quot;scala.concurrent.Batchable&quot;&gt;Batchable&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;batchable&quot; id=&quot;scala.concurrent.Batchable&quot; name=&quot;scala.concurrent.Batchable&quot;&gt;Batchable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a8ac3ede0d6bb81a024da0775129b8f8770a1a0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;beangetter&quot; id=&quot;scala.annotation.meta.beanGetter&quot; name=&quot;scala.annotation.meta.beanGetter&quot;&gt;beanGetter&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;beangetter&quot; id=&quot;scala.annotation.meta.beanGetter&quot; name=&quot;scala.annotation.meta.beanGetter&quot;&gt;beanGetter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dce825fca951e15dc3476a7df819f857296d8701" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;beangetter&quot; id=&quot;scala.annotation.meta.beanGetter&quot; name=&quot;scala.annotation.meta.beanGetter&quot;&gt;beanGetter&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;beangetter&quot; id=&quot;scala.annotation.meta.beanGetter&quot; name=&quot;scala.annotation.meta.beanGetter&quot;&gt;beanGetter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b1232d04334cca7c8da9851c31d6cdd0bbae1aa" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;beanproperty&quot; id=&quot;scala.beans.BeanProperty&quot; name=&quot;scala.beans.BeanProperty&quot;&gt;BeanProperty&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;beanproperty&quot; id=&quot;scala.beans.BeanProperty&quot; name=&quot;scala.beans.BeanProperty&quot;&gt;BeanProperty&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="028026343c5bd26a31241e33f701dac0cd580a50" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;beanproperty&quot; id=&quot;scala.beans.BeanProperty&quot; name=&quot;scala.beans.BeanProperty&quot;&gt;BeanProperty&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;beanproperty&quot; id=&quot;scala.beans.BeanProperty&quot; name=&quot;scala.beans.BeanProperty&quot;&gt;BeanProperty&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="267cf942d49be4dbf4f88ecda45926ee317a8c29" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;beansetter&quot; id=&quot;scala.annotation.meta.beanSetter&quot; name=&quot;scala.annotation.meta.beanSetter&quot;&gt;beanSetter&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;beansetter&quot; id=&quot;scala.annotation.meta.beanSetter&quot; name=&quot;scala.annotation.meta.beanSetter&quot;&gt;beanSetter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="113468e6d9ffca1a8e9b2d6852506e5c2b927579" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;beansetter&quot; id=&quot;scala.annotation.meta.beanSetter&quot; name=&quot;scala.annotation.meta.beanSetter&quot;&gt;beanSetter&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;beansetter&quot; id=&quot;scala.annotation.meta.beanSetter&quot; name=&quot;scala.annotation.meta.beanSetter&quot;&gt;beanSetter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d49de35215d294f6b9f36089627b4c8da9603d75" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9a8ca5f42f917d63d432698f9a15ddd7e900a26" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be07fe1de31fb5896a042aad65d53afd31569728" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ef68fc58f0438cba0932dcf8d2a8b6994819606" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa969ed7edd96dbf62e0e4b99fbc0b055ac8a682" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5523599e0e29212895a58e61f11a0101a56b0cb7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71b43c13cc865e3ec3e6e068343e5cb202ae89b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d9304b7a895474b6d7a91ec85e311ad12ec78b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3942eb5b08efee2a4af00bbb76e27cdd219fe9f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc3eff365032d5a3f83ea4ac31537eb154b362ba" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36ab6232a94652eb00a52a64c0dbb787c9dfba79" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;bitset%24%24bitset1&quot; id=&quot;scala.collection.immutable.BitSet.BitSet1&quot; name=&quot;scala.collection.immutable.BitSet.BitSet1&quot;&gt;BitSet1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset%24%24bitset1&quot; id=&quot;scala.collection.immutable.BitSet.BitSet1&quot; name=&quot;scala.collection.immutable.BitSet.BitSet1&quot;&gt;BitSet1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c004acfed666e1f01da4a0a613570932044a315" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;bitset%24%24bitset1&quot; id=&quot;scala.collection.immutable.BitSet.BitSet1&quot; name=&quot;scala.collection.immutable.BitSet.BitSet1&quot;&gt;BitSet1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset%24%24bitset1&quot; id=&quot;scala.collection.immutable.BitSet.BitSet1&quot; name=&quot;scala.collection.immutable.BitSet.BitSet1&quot;&gt;BitSet1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="003760d83dbbce1ef7e734cb2d7dccfced030cb6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;bitset%24%24bitset2&quot; id=&quot;scala.collection.immutable.BitSet.BitSet2&quot; name=&quot;scala.collection.immutable.BitSet.BitSet2&quot;&gt;BitSet2&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset%24%24bitset2&quot; id=&quot;scala.collection.immutable.BitSet.BitSet2&quot; name=&quot;scala.collection.immutable.BitSet.BitSet2&quot;&gt;BitSet2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f80edea753b3be13ee012ca837c44a2cd80b0a1a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;bitset%24%24bitset2&quot; id=&quot;scala.collection.immutable.BitSet.BitSet2&quot; name=&quot;scala.collection.immutable.BitSet.BitSet2&quot;&gt;BitSet2&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset%24%24bitset2&quot; id=&quot;scala.collection.immutable.BitSet.BitSet2&quot; name=&quot;scala.collection.immutable.BitSet.BitSet2&quot;&gt;BitSet2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c01f802ce0ffbc3e687c403b35f5c4e45645acf" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;bitset%24%24bitsetn&quot; id=&quot;scala.collection.immutable.BitSet.BitSetN&quot; name=&quot;scala.collection.immutable.BitSet.BitSetN&quot;&gt;BitSetN&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset%24%24bitsetn&quot; id=&quot;scala.collection.immutable.BitSet.BitSetN&quot; name=&quot;scala.collection.immutable.BitSet.BitSetN&quot;&gt;BitSetN&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c3465f2c62abf9ff1288bf409f266b355a1f10c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;bitset%24%24bitsetn&quot; id=&quot;scala.collection.immutable.BitSet.BitSetN&quot; name=&quot;scala.collection.immutable.BitSet.BitSetN&quot;&gt;BitSetN&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset%24%24bitsetn&quot; id=&quot;scala.collection.immutable.BitSet.BitSetN&quot; name=&quot;scala.collection.immutable.BitSet.BitSetN&quot;&gt;BitSetN&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9143f128c25e24eb0db3b98b2dae55bce181a85b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;bitsetops&quot; id=&quot;scala.collection.BitSetOps&quot; name=&quot;scala.collection.BitSetOps&quot;&gt;BitSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitsetops&quot; id=&quot;scala.collection.BitSetOps&quot; name=&quot;scala.collection.BitSetOps&quot;&gt;BitSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="891b0e1e5897a0c3cd584269aff4ba8eb020ef95" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;bitsetops&quot; id=&quot;scala.collection.BitSetOps&quot; name=&quot;scala.collection.BitSetOps&quot;&gt;BitSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitsetops&quot; id=&quot;scala.collection.BitSetOps&quot; name=&quot;scala.collection.BitSetOps&quot;&gt;BitSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdb0b3a0de281833724dd788e7dbf76d24b5e38c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;blockcontext&quot; id=&quot;scala.concurrent.BlockContext&quot; name=&quot;scala.concurrent.BlockContext&quot;&gt;BlockContext&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;blockcontext&quot; id=&quot;scala.concurrent.BlockContext&quot; name=&quot;scala.concurrent.BlockContext&quot;&gt;BlockContext&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeff795550b130ada106f5c8152e9d06796b7e34" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;blockcontext&quot; id=&quot;scala.concurrent.BlockContext&quot; name=&quot;scala.concurrent.BlockContext&quot;&gt;BlockContext&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;blockcontext&quot; id=&quot;scala.concurrent.BlockContext&quot; name=&quot;scala.concurrent.BlockContext&quot;&gt;BlockContext&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2402f7ad9f93ef6479e1a1e6b6a7c3337bc964d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7a6206a1d83c4bc2b27e0eabd807bf5664d78fd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce7ce5b9226339e09c5344291551d49c914175ee" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;booleanbeanproperty&quot; id=&quot;scala.beans.BooleanBeanProperty&quot; name=&quot;scala.beans.BooleanBeanProperty&quot;&gt;BooleanBeanProperty&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;booleanbeanproperty&quot; id=&quot;scala.beans.BooleanBeanProperty&quot; name=&quot;scala.beans.BooleanBeanProperty&quot;&gt;BooleanBeanProperty&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acf08790dc4dceadfb429dbf64a03cb5da1bec3a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;booleanbeanproperty&quot; id=&quot;scala.beans.BooleanBeanProperty&quot; name=&quot;scala.beans.BooleanBeanProperty&quot;&gt;BooleanBeanProperty&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;booleanbeanproperty&quot; id=&quot;scala.beans.BooleanBeanProperty&quot; name=&quot;scala.beans.BooleanBeanProperty&quot;&gt;BooleanBeanProperty&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6571074b68be802b0d9568ff7c594ca44d57c6b3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;booleanprop&quot; id=&quot;scala.sys.BooleanProp&quot; name=&quot;scala.sys.BooleanProp&quot;&gt;BooleanProp&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;booleanprop&quot; id=&quot;scala.sys.BooleanProp&quot; name=&quot;scala.sys.BooleanProp&quot;&gt;BooleanProp&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99cd11fba03273a6afd69c9cb6aa11a476c4b36a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;booleanprop&quot; id=&quot;scala.sys.BooleanProp&quot; name=&quot;scala.sys.BooleanProp&quot;&gt;BooleanProp&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;booleanprop&quot; id=&quot;scala.sys.BooleanProp&quot; name=&quot;scala.sys.BooleanProp&quot;&gt;BooleanProp&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8e70a163950e5add953289ceafc41c830cf924b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;breaks&quot; id=&quot;scala.util.control.Breaks&quot; name=&quot;scala.util.control.Breaks&quot;&gt;Breaks&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;breaks&quot; id=&quot;scala.util.control.Breaks&quot; name=&quot;scala.util.control.Breaks&quot;&gt;Breaks&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73552b9d6d9e47d6e630da993a83ba694008a364" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;breaks&quot; id=&quot;scala.util.control.Breaks&quot; name=&quot;scala.util.control.Breaks&quot;&gt;Breaks&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;breaks&quot; id=&quot;scala.util.control.Breaks&quot; name=&quot;scala.util.control.Breaks&quot;&gt;Breaks&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e8d3e971e5b1a41f7335a94898f0d4d1d5f58c8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;breaks%24tryblock&quot; id=&quot;scala.util.control.Breaks.TryBlock&quot; name=&quot;scala.util.control.Breaks.TryBlock&quot;&gt;TryBlock&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Breaks.TryBlock.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;breaks%24tryblock&quot; id=&quot;scala.util.control.Breaks.TryBlock&quot; name=&quot;scala.util.control.Breaks.TryBlock&quot;&gt;TryBlock&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Breaks.TryBlock.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05bbf8e35c946bad952b67844dd8ec5f07bb048d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;breaks%24tryblock&quot; id=&quot;scala.util.control.Breaks.TryBlock&quot; name=&quot;scala.util.control.Breaks.TryBlock&quot;&gt;TryBlock&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Breaks.TryBlock.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;breaks%24tryblock&quot; id=&quot;scala.util.control.Breaks.TryBlock&quot; name=&quot;scala.util.control.Breaks.TryBlock&quot;&gt;TryBlock&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Breaks.TryBlock.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5032aeac13cd3f3b0041c35ff68d32aec53f9361" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad7d6dbb5741f0ff6ba74efa37dba2f677599c9d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88d0ae18af74b718d89f1bdf524ef5601054dc4c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;bufferediterator&quot; id=&quot;scala.collection.BufferedIterator&quot; name=&quot;scala.collection.BufferedIterator&quot;&gt;BufferedIterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bufferediterator&quot; id=&quot;scala.collection.BufferedIterator&quot; name=&quot;scala.collection.BufferedIterator&quot;&gt;BufferedIterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2c649ab5a292d88b641bcb0687644a51adc5955" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;bufferediterator&quot; id=&quot;scala.collection.BufferedIterator&quot; name=&quot;scala.collection.BufferedIterator&quot;&gt;BufferedIterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bufferediterator&quot; id=&quot;scala.collection.BufferedIterator&quot; name=&quot;scala.collection.BufferedIterator&quot;&gt;BufferedIterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a538fb85e0491d43f146aff7e797e3dd70cee8e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;bufferedsource&quot; id=&quot;scala.io.BufferedSource&quot; name=&quot;scala.io.BufferedSource&quot;&gt;BufferedSource&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bufferedsource&quot; id=&quot;scala.io.BufferedSource&quot; name=&quot;scala.io.BufferedSource&quot;&gt;BufferedSource&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f74a26f6063c74f4347db0319b7ba1f58d703fc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;bufferedsource&quot; id=&quot;scala.io.BufferedSource&quot; name=&quot;scala.io.BufferedSource&quot;&gt;BufferedSource&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bufferedsource&quot; id=&quot;scala.io.BufferedSource&quot; name=&quot;scala.io.BufferedSource&quot;&gt;BufferedSource&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bc7956bcb05d8119e0f51bd4447738198a0bc1e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;bufferedsource%24bufferedlineiterator&quot; id=&quot;scala.io.BufferedSource.BufferedLineIterator&quot; name=&quot;scala.io.BufferedSource.BufferedLineIterator&quot;&gt;BufferedLineIterator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bufferedsource%24bufferedlineiterator&quot; id=&quot;scala.io.BufferedSource.BufferedLineIterator&quot; name=&quot;scala.io.BufferedSource.BufferedLineIterator&quot;&gt;BufferedLineIterator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a35d268ebefea2a4bce92bce0ea0a80adc419dbe" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;bufferedsource%24bufferedlineiterator&quot; id=&quot;scala.io.BufferedSource.BufferedLineIterator&quot; name=&quot;scala.io.BufferedSource.BufferedLineIterator&quot;&gt;BufferedLineIterator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bufferedsource%24bufferedlineiterator&quot; id=&quot;scala.io.BufferedSource.BufferedLineIterator&quot; name=&quot;scala.io.BufferedSource.BufferedLineIterator&quot;&gt;BufferedLineIterator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64b5d02ca708ce06ea759485548b9d2362e854e0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Builder.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.To&quot;&gt;To&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Builder.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.To&quot;&gt;To&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70efa2a7e803c3ec1c74d8a7485903f21898deb2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Builder.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.To&quot;&gt;To&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Builder.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.To&quot;&gt;To&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1e4b23985b2e9068b0989fc664d7bd0f262eaa5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt;[&lt;span name=&quot;scala.collection.BuildFrom.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.collection.BuildFrom.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.BuildFrom.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt;[&lt;span name=&quot;scala.collection.BuildFrom.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.collection.BuildFrom.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.BuildFrom.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d8b03004fedab28c2ba6ea5cfb718515065bba" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt;[&lt;span name=&quot;scala.collection.BuildFrom.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.collection.BuildFrom.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.BuildFrom.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt;[&lt;span name=&quot;scala.collection.BuildFrom.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.collection.BuildFrom.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.BuildFrom.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e48b1baecb2b788ad9c925f544cda2acd99c183" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;buildfromlowpriority1&quot; id=&quot;scala.collection.BuildFromLowPriority1&quot; name=&quot;scala.collection.BuildFromLowPriority1&quot;&gt;BuildFromLowPriority1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;buildfromlowpriority1&quot; id=&quot;scala.collection.BuildFromLowPriority1&quot; name=&quot;scala.collection.BuildFromLowPriority1&quot;&gt;BuildFromLowPriority1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c586066ec658859e1feb5b142e0d23634bfca424" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;buildfromlowpriority1&quot; id=&quot;scala.collection.BuildFromLowPriority1&quot; name=&quot;scala.collection.BuildFromLowPriority1&quot;&gt;BuildFromLowPriority1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;buildfromlowpriority1&quot; id=&quot;scala.collection.BuildFromLowPriority1&quot; name=&quot;scala.collection.BuildFromLowPriority1&quot;&gt;BuildFromLowPriority1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c0f9419d12f8d2c4f0d1a2e2eccb4070e76f2fa" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;buildfromlowpriority2&quot; id=&quot;scala.collection.BuildFromLowPriority2&quot; name=&quot;scala.collection.BuildFromLowPriority2&quot;&gt;BuildFromLowPriority2&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;buildfromlowpriority2&quot; id=&quot;scala.collection.BuildFromLowPriority2&quot; name=&quot;scala.collection.BuildFromLowPriority2&quot;&gt;BuildFromLowPriority2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e4f9a1d98fb486ababa79fbe6b2448a785c63ac" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;buildfromlowpriority2&quot; id=&quot;scala.collection.BuildFromLowPriority2&quot; name=&quot;scala.collection.BuildFromLowPriority2&quot;&gt;BuildFromLowPriority2&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;buildfromlowpriority2&quot; id=&quot;scala.collection.BuildFromLowPriority2&quot; name=&quot;scala.collection.BuildFromLowPriority2&quot;&gt;BuildFromLowPriority2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82807f09fd033ebea97066ebe8abfeb79ce27f75" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c3fda34bcd250317c700c1dc6c7bc12b2cd48b2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5217979d26f28316882dff4f2292b914f5b5c3d9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;byteswaphashing&quot; id=&quot;scala.util.hashing.ByteswapHashing&quot; name=&quot;scala.util.hashing.ByteswapHashing&quot;&gt;ByteswapHashing&lt;/a&gt;[&lt;span name=&quot;scala.util.hashing.ByteswapHashing.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;byteswaphashing&quot; id=&quot;scala.util.hashing.ByteswapHashing&quot; name=&quot;scala.util.hashing.ByteswapHashing&quot;&gt;ByteswapHashing&lt;/a&gt;[&lt;span name=&quot;scala.util.hashing.ByteswapHashing.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbff938d0fca38b4efb7955757e10aba6f67d8f2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;byteswaphashing&quot; id=&quot;scala.util.hashing.ByteswapHashing&quot; name=&quot;scala.util.hashing.ByteswapHashing&quot;&gt;ByteswapHashing&lt;/a&gt;[&lt;span name=&quot;scala.util.hashing.ByteswapHashing.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;byteswaphashing&quot; id=&quot;scala.util.hashing.ByteswapHashing&quot; name=&quot;scala.util.hashing.ByteswapHashing&quot;&gt;ByteswapHashing&lt;/a&gt;[&lt;span name=&quot;scala.util.hashing.ByteswapHashing.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8844e32ca206b1123f6e10d6281b580d24fc9d4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;canawait&quot; id=&quot;scala.concurrent.CanAwait&quot; name=&quot;scala.concurrent.CanAwait&quot;&gt;CanAwait&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;canawait&quot; id=&quot;scala.concurrent.CanAwait&quot; name=&quot;scala.concurrent.CanAwait&quot;&gt;CanAwait&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa4b1a08379ee6dfa45726f878790a7e46b1303" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;canawait&quot; id=&quot;scala.concurrent.CanAwait&quot; name=&quot;scala.concurrent.CanAwait&quot;&gt;CanAwait&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;canawait&quot; id=&quot;scala.concurrent.CanAwait&quot; name=&quot;scala.concurrent.CanAwait&quot;&gt;CanAwait&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd0e8c96949b980ccfbf341e899d28a498ddc9c6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;chainingops&quot; id=&quot;scala.util.ChainingOps&quot; name=&quot;scala.util.ChainingOps&quot;&gt;ChainingOps&lt;/a&gt;[&lt;span name=&quot;scala.util.ChainingOps.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;chainingops&quot; id=&quot;scala.util.ChainingOps&quot; name=&quot;scala.util.ChainingOps&quot;&gt;ChainingOps&lt;/a&gt;[&lt;span name=&quot;scala.util.ChainingOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06d909fc65bf1c03ca56ff26079e6be53dfa5b5b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;chainingops&quot; id=&quot;scala.util.ChainingOps&quot; name=&quot;scala.util.ChainingOps&quot;&gt;ChainingOps&lt;/a&gt;[&lt;span name=&quot;scala.util.ChainingOps.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;chainingops&quot; id=&quot;scala.util.ChainingOps&quot; name=&quot;scala.util.ChainingOps&quot;&gt;ChainingOps&lt;/a&gt;[&lt;span name=&quot;scala.util.ChainingOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="140b27ae4134072ba605338f6ceabf32743e1455" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;chainingsyntax&quot; id=&quot;scala.util.ChainingSyntax&quot; name=&quot;scala.util.ChainingSyntax&quot;&gt;ChainingSyntax&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;chainingsyntax&quot; id=&quot;scala.util.ChainingSyntax&quot; name=&quot;scala.util.ChainingSyntax&quot;&gt;ChainingSyntax&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c610f7f9a3465c858f743484edf79b5a1c4e9604" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;chainingsyntax&quot; id=&quot;scala.util.ChainingSyntax&quot; name=&quot;scala.util.ChainingSyntax&quot;&gt;ChainingSyntax&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;chainingsyntax&quot; id=&quot;scala.util.ChainingSyntax&quot; name=&quot;scala.util.ChainingSyntax&quot;&gt;ChainingSyntax&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6bb6bf5cafd02cb897a28949fc9d73855741039" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;channel&quot; id=&quot;scala.concurrent.Channel&quot; name=&quot;scala.concurrent.Channel&quot;&gt;Channel&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Channel.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;channel&quot; id=&quot;scala.concurrent.Channel&quot; name=&quot;scala.concurrent.Channel&quot;&gt;Channel&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Channel.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="298165502d435a89fa446d8bcb9f006ff48c78f8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;channel&quot; id=&quot;scala.concurrent.Channel&quot; name=&quot;scala.concurrent.Channel&quot;&gt;Channel&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Channel.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;channel&quot; id=&quot;scala.concurrent.Channel&quot; name=&quot;scala.concurrent.Channel&quot;&gt;Channel&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Channel.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16ac2fa9c38f0edd6ec1cd30f55776281f53b5c9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69bd5c0f56bfa08f4acf1c158867c42762c1790a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7761e9370e3cc5b6f9dabb9675e9ae66d9e9c0f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;classfileannotation&quot; id=&quot;scala.annotation.ClassfileAnnotation&quot; name=&quot;scala.annotation.ClassfileAnnotation&quot;&gt;ClassfileAnnotation&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;classfileannotation&quot; id=&quot;scala.annotation.ClassfileAnnotation&quot; name=&quot;scala.annotation.ClassfileAnnotation&quot;&gt;ClassfileAnnotation&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9e11939e215c2377b183cba1fa5039d6926aca9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;classfileannotation&quot; id=&quot;scala.annotation.ClassfileAnnotation&quot; name=&quot;scala.annotation.ClassfileAnnotation&quot;&gt;ClassfileAnnotation&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;classfileannotation&quot; id=&quot;scala.annotation.ClassfileAnnotation&quot; name=&quot;scala.annotation.ClassfileAnnotation&quot;&gt;ClassfileAnnotation&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e399bd84dcf07a3fc8189aa06686b945f5e00def" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;classmanifestdeprecatedapis&quot; id=&quot;scala.reflect.ClassManifestDeprecatedApis&quot; name=&quot;scala.reflect.ClassManifestDeprecatedApis&quot;&gt;ClassManifestDeprecatedApis&lt;/a&gt;[&lt;span name=&quot;scala.reflect.ClassManifestDeprecatedApis.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;classmanifestdeprecatedapis&quot; id=&quot;scala.reflect.ClassManifestDeprecatedApis&quot; name=&quot;scala.reflect.ClassManifestDeprecatedApis&quot;&gt;ClassManifestDeprecatedApis&lt;/a&gt;[&lt;span name=&quot;scala.reflect.ClassManifestDeprecatedApis.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40b9c22127fe03c725b3bbb366a7f8890b6afda5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;classmanifestdeprecatedapis&quot; id=&quot;scala.reflect.ClassManifestDeprecatedApis&quot; name=&quot;scala.reflect.ClassManifestDeprecatedApis&quot;&gt;ClassManifestDeprecatedApis&lt;/a&gt;[&lt;span name=&quot;scala.reflect.ClassManifestDeprecatedApis.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;classmanifestdeprecatedapis&quot; id=&quot;scala.reflect.ClassManifestDeprecatedApis&quot; name=&quot;scala.reflect.ClassManifestDeprecatedApis&quot;&gt;ClassManifestDeprecatedApis&lt;/a&gt;[&lt;span name=&quot;scala.reflect.ClassManifestDeprecatedApis.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58caded11d205f861a0f69100f32234985ad28da" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.reflect.ClassTag.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.reflect.ClassTag.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41fa3f77064f8f5536dc7efb0ea2ae17753e7fdc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.reflect.ClassTag.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.reflect.ClassTag.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92705705de7b88ea7bf9d6b914b2c557e004a5c7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;classtagiterablefactory&quot; id=&quot;scala.collection.ClassTagIterableFactory&quot; name=&quot;scala.collection.ClassTagIterableFactory&quot;&gt;ClassTagIterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;classtagiterablefactory&quot; id=&quot;scala.collection.ClassTagIterableFactory&quot; name=&quot;scala.collection.ClassTagIterableFactory&quot;&gt;ClassTagIterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b95a462f791bbab18eec038ad84b7c1e5637da4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;classtagiterablefactory&quot; id=&quot;scala.collection.ClassTagIterableFactory&quot; name=&quot;scala.collection.ClassTagIterableFactory&quot;&gt;ClassTagIterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;classtagiterablefactory&quot; id=&quot;scala.collection.ClassTagIterableFactory&quot; name=&quot;scala.collection.ClassTagIterableFactory&quot;&gt;ClassTagIterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8e14f0990b153e5339b9233e2b8b6ce9da83dc2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;classtagiterablefactory%24%24anyiterabledelegate&quot; id=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate&quot; name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate&quot;&gt;AnyIterableDelegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;classtagiterablefactory%24%24anyiterabledelegate&quot; id=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate&quot; name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate&quot;&gt;AnyIterableDelegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a1f597f888b3be6279c965a83a4db5b17a6906d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;classtagiterablefactory%24%24anyiterabledelegate&quot; id=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate&quot; name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate&quot;&gt;AnyIterableDelegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;classtagiterablefactory%24%24anyiterabledelegate&quot; id=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate&quot; name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate&quot;&gt;AnyIterableDelegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc487be310f69b2905011ad548d6c215133f5686" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;classtagiterablefactory%24%24delegate&quot; id=&quot;scala.collection.ClassTagIterableFactory.Delegate&quot; name=&quot;scala.collection.ClassTagIterableFactory.Delegate&quot;&gt;Delegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;classtagiterablefactory%24%24delegate&quot; id=&quot;scala.collection.ClassTagIterableFactory.Delegate&quot; name=&quot;scala.collection.ClassTagIterableFactory.Delegate&quot;&gt;Delegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bfc22d29ffe085ac6aabd2280fbe1cf1984fd8f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;classtagiterablefactory%24%24delegate&quot; id=&quot;scala.collection.ClassTagIterableFactory.Delegate&quot; name=&quot;scala.collection.ClassTagIterableFactory.Delegate&quot;&gt;Delegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;classtagiterablefactory%24%24delegate&quot; id=&quot;scala.collection.ClassTagIterableFactory.Delegate&quot; name=&quot;scala.collection.ClassTagIterableFactory.Delegate&quot;&gt;Delegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3935f93c6c395f83fe33aa653fbec0e187325f8b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;classtagseqfactory&quot; id=&quot;scala.collection.ClassTagSeqFactory&quot; name=&quot;scala.collection.ClassTagSeqFactory&quot;&gt;ClassTagSeqFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;classtagseqfactory&quot; id=&quot;scala.collection.ClassTagSeqFactory&quot; name=&quot;scala.collection.ClassTagSeqFactory&quot;&gt;ClassTagSeqFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6532a71a2ae72f6d36331bb7ee2f40962e5ef17" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;classtagseqfactory&quot; id=&quot;scala.collection.ClassTagSeqFactory&quot; name=&quot;scala.collection.ClassTagSeqFactory&quot;&gt;ClassTagSeqFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;classtagseqfactory&quot; id=&quot;scala.collection.ClassTagSeqFactory&quot; name=&quot;scala.collection.ClassTagSeqFactory&quot;&gt;ClassTagSeqFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5e2c196991082389f8648a65d81b5da726530fb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;classtagseqfactory%24%24anyseqdelegate&quot; id=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate&quot; name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate&quot;&gt;AnySeqDelegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;classtagseqfactory%24%24anyseqdelegate&quot; id=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate&quot; name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate&quot;&gt;AnySeqDelegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c4d25dc66634d87416d292772fb208f84256966" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;classtagseqfactory%24%24anyseqdelegate&quot; id=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate&quot; name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate&quot;&gt;AnySeqDelegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;classtagseqfactory%24%24anyseqdelegate&quot; id=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate&quot; name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate&quot;&gt;AnySeqDelegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e77d7e0f0b79da03df63e5ce6f25aca412886b6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;classtagseqfactory%24%24delegate&quot; id=&quot;scala.collection.ClassTagSeqFactory.Delegate&quot; name=&quot;scala.collection.ClassTagSeqFactory.Delegate&quot;&gt;Delegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;classtagseqfactory%24%24delegate&quot; id=&quot;scala.collection.ClassTagSeqFactory.Delegate&quot; name=&quot;scala.collection.ClassTagSeqFactory.Delegate&quot;&gt;Delegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d83429c8f38d59f3109e4ded5e9ba14a83184787" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;classtagseqfactory%24%24delegate&quot; id=&quot;scala.collection.ClassTagSeqFactory.Delegate&quot; name=&quot;scala.collection.ClassTagSeqFactory.Delegate&quot;&gt;Delegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;classtagseqfactory%24%24delegate&quot; id=&quot;scala.collection.ClassTagSeqFactory.Delegate&quot; name=&quot;scala.collection.ClassTagSeqFactory.Delegate&quot;&gt;Delegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="614243371f8ea2d2ca8e40f95c4e95d96494ff5a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;clearable&quot; id=&quot;scala.collection.mutable.Clearable&quot; name=&quot;scala.collection.mutable.Clearable&quot;&gt;Clearable&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;clearable&quot; id=&quot;scala.collection.mutable.Clearable&quot; name=&quot;scala.collection.mutable.Clearable&quot;&gt;Clearable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5527b5d49928ddfc6d5af056c08f5f049803a437" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;clearable&quot; id=&quot;scala.collection.mutable.Clearable&quot; name=&quot;scala.collection.mutable.Clearable&quot;&gt;Clearable&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;clearable&quot; id=&quot;scala.collection.mutable.Clearable&quot; name=&quot;scala.collection.mutable.Clearable&quot;&gt;Clearable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a078a1c83a631983b10f48b8900a167b4b900432" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;cloneable&quot; id=&quot;scala.collection.mutable.Cloneable&quot; name=&quot;scala.collection.mutable.Cloneable&quot;&gt;Cloneable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Cloneable.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;cloneable&quot; id=&quot;scala.collection.mutable.Cloneable&quot; name=&quot;scala.collection.mutable.Cloneable&quot;&gt;Cloneable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Cloneable.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9888410928cccb4f78ccba77d31ca85acd310aed" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;cloneable&quot; id=&quot;scala.collection.mutable.Cloneable&quot; name=&quot;scala.collection.mutable.Cloneable&quot;&gt;Cloneable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Cloneable.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;cloneable&quot; id=&quot;scala.collection.mutable.Cloneable&quot; name=&quot;scala.collection.mutable.Cloneable&quot;&gt;Cloneable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Cloneable.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b84a737a4e0cff8f4ad47de9fd7c0226f29b9e2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;codec&quot; id=&quot;scala.io.Codec&quot; name=&quot;scala.io.Codec&quot;&gt;Codec&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;codec&quot; id=&quot;scala.io.Codec&quot; name=&quot;scala.io.Codec&quot;&gt;Codec&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="532af22fcd95172dfec590a97ebc2eb15db71a0a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;codec&quot; id=&quot;scala.io.Codec&quot; name=&quot;scala.io.Codec&quot;&gt;Codec&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;codec&quot; id=&quot;scala.io.Codec&quot; name=&quot;scala.io.Codec&quot;&gt;Codec&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f70f00d0e57e97be26a0953e28c37e26f1f1cecf" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a3a227cf6690065099b45cd94ee0d0a512c88ca" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d594cdeaa096df2b0587597d0b0ab2216b25ace5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;collisionproofhashmap%24%24node&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap.Node&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap.Node&quot;&gt;Node&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collisionproofhashmap%24%24node&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap.Node&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap.Node&quot;&gt;Node&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="880a6da87413652b42c0ed6f88446315554e7550" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;collisionproofhashmap%24%24node&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap.Node&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap.Node&quot;&gt;Node&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collisionproofhashmap%24%24node&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap.Node&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap.Node&quot;&gt;Node&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aade61949ac43f7c13fa1cf06aac2cb701599432" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;collisionproofhashmap%24%24rbnode&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode&quot;&gt;RBNode&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collisionproofhashmap%24%24rbnode&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode&quot;&gt;RBNode&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff5aa10d733240372bbcd9b6327e7373092777f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;collisionproofhashmap%24%24rbnode&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode&quot;&gt;RBNode&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collisionproofhashmap%24%24rbnode&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode&quot;&gt;RBNode&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e4dc8e519d541201565709184222fa51863cc3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;companionclass&quot; id=&quot;scala.annotation.meta.companionClass&quot; name=&quot;scala.annotation.meta.companionClass&quot;&gt;companionClass&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;companionclass&quot; id=&quot;scala.annotation.meta.companionClass&quot; name=&quot;scala.annotation.meta.companionClass&quot;&gt;companionClass&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e83630dd9bf0235eeb7a5565a01e651c4a7780e5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;companionclass&quot; id=&quot;scala.annotation.meta.companionClass&quot; name=&quot;scala.annotation.meta.companionClass&quot;&gt;companionClass&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;companionclass&quot; id=&quot;scala.annotation.meta.companionClass&quot; name=&quot;scala.annotation.meta.companionClass&quot;&gt;companionClass&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f952a7054bcb34ffcf087581c83023103752e45" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;companionmethod&quot; id=&quot;scala.annotation.meta.companionMethod&quot; name=&quot;scala.annotation.meta.companionMethod&quot;&gt;companionMethod&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;companionmethod&quot; id=&quot;scala.annotation.meta.companionMethod&quot; name=&quot;scala.annotation.meta.companionMethod&quot;&gt;companionMethod&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a602b121a62c1cbb509d21bac1b22dc65e9979b5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;companionmethod&quot; id=&quot;scala.annotation.meta.companionMethod&quot; name=&quot;scala.annotation.meta.companionMethod&quot;&gt;companionMethod&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;companionmethod&quot; id=&quot;scala.annotation.meta.companionMethod&quot; name=&quot;scala.annotation.meta.companionMethod&quot;&gt;companionMethod&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d6d7e465e147c6746282b7c64928e42a4fbe517" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;companionobject&quot; id=&quot;scala.annotation.meta.companionObject&quot; name=&quot;scala.annotation.meta.companionObject&quot;&gt;companionObject&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;companionobject&quot; id=&quot;scala.annotation.meta.companionObject&quot; name=&quot;scala.annotation.meta.companionObject&quot;&gt;companionObject&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb91713fb48f9db57f610a4a0c04e862b8131e93" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;companionobject&quot; id=&quot;scala.annotation.meta.companionObject&quot; name=&quot;scala.annotation.meta.companionObject&quot;&gt;companionObject&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;companionobject&quot; id=&quot;scala.annotation.meta.companionObject&quot; name=&quot;scala.annotation.meta.companionObject&quot;&gt;companionObject&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7630b18327e34fc2c7bf1043adc7ec71226ef06b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;compiletimeonly&quot; id=&quot;scala.annotation.compileTimeOnly&quot; name=&quot;scala.annotation.compileTimeOnly&quot;&gt;compileTimeOnly&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;compiletimeonly&quot; id=&quot;scala.annotation.compileTimeOnly&quot; name=&quot;scala.annotation.compileTimeOnly&quot;&gt;compileTimeOnly&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="255ba171aec62239705c98308a289c5b1b1cd6d3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;compiletimeonly&quot; id=&quot;scala.annotation.compileTimeOnly&quot; name=&quot;scala.annotation.compileTimeOnly&quot;&gt;compileTimeOnly&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;compiletimeonly&quot; id=&quot;scala.annotation.compileTimeOnly&quot; name=&quot;scala.annotation.compileTimeOnly&quot;&gt;compileTimeOnly&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0dab1514ec27da9d7f63f10f68cf88259890cb9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;constantannotation&quot; id=&quot;scala.annotation.ConstantAnnotation&quot; name=&quot;scala.annotation.ConstantAnnotation&quot;&gt;ConstantAnnotation&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;constantannotation&quot; id=&quot;scala.annotation.ConstantAnnotation&quot; name=&quot;scala.annotation.ConstantAnnotation&quot;&gt;ConstantAnnotation&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07bff6e19e93c6259c3df05d05f4ba7d95d2bbf8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;constantannotation&quot; id=&quot;scala.annotation.ConstantAnnotation&quot; name=&quot;scala.annotation.ConstantAnnotation&quot;&gt;ConstantAnnotation&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;constantannotation&quot; id=&quot;scala.annotation.ConstantAnnotation&quot; name=&quot;scala.annotation.ConstantAnnotation&quot;&gt;ConstantAnnotation&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="160dacf12b1da6b3364186fb7782e54b189be665" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;controlthrowable&quot; id=&quot;scala.util.control.ControlThrowable&quot; name=&quot;scala.util.control.ControlThrowable&quot;&gt;ControlThrowable&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;controlthrowable&quot; id=&quot;scala.util.control.ControlThrowable&quot; name=&quot;scala.util.control.ControlThrowable&quot;&gt;ControlThrowable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6a743134d6b7d0a82587d4dd5aa02130b7cc8ea" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;controlthrowable&quot; id=&quot;scala.util.control.ControlThrowable&quot; name=&quot;scala.util.control.ControlThrowable&quot;&gt;ControlThrowable&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;controlthrowable&quot; id=&quot;scala.util.control.ControlThrowable&quot; name=&quot;scala.util.control.ControlThrowable&quot;&gt;ControlThrowable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72f8fb8a415dbb7d39b4ed15f4d14a7fa7e60014" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;Deadline&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;Deadline&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2848e4bb4fe8227f00f5d11a1be687b077ee4664" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;Deadline&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;Deadline&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d7137ea1e96358d1dbc47b085a4ec8c0ab4b684" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;defaultmap&quot; id=&quot;scala.collection.DefaultMap&quot; name=&quot;scala.collection.DefaultMap&quot;&gt;DefaultMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;defaultmap&quot; id=&quot;scala.collection.DefaultMap&quot; name=&quot;scala.collection.DefaultMap&quot;&gt;DefaultMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28892c01c592cfd3fa56ffd08aae7f4e23254464" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;defaultmap&quot; id=&quot;scala.collection.DefaultMap&quot; name=&quot;scala.collection.DefaultMap&quot;&gt;DefaultMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;defaultmap&quot; id=&quot;scala.collection.DefaultMap&quot; name=&quot;scala.collection.DefaultMap&quot;&gt;DefaultMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51aafc5d23819e1a01269c6d0e5b9b37d7729c80" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;defaultserializable&quot; id=&quot;scala.collection.generic.DefaultSerializable&quot; name=&quot;scala.collection.generic.DefaultSerializable&quot;&gt;DefaultSerializable&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;defaultserializable&quot; id=&quot;scala.collection.generic.DefaultSerializable&quot; name=&quot;scala.collection.generic.DefaultSerializable&quot;&gt;DefaultSerializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ddb11c8738787a89121b70448a7f1f28a37f5de" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;defaultserializable&quot; id=&quot;scala.collection.generic.DefaultSerializable&quot; name=&quot;scala.collection.generic.DefaultSerializable&quot;&gt;DefaultSerializable&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;defaultserializable&quot; id=&quot;scala.collection.generic.DefaultSerializable&quot; name=&quot;scala.collection.generic.DefaultSerializable&quot;&gt;DefaultSerializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a0b84cc472f2374b484d1526f986ff72953f32a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;defaultserializationproxy&quot; id=&quot;scala.collection.generic.DefaultSerializationProxy&quot; name=&quot;scala.collection.generic.DefaultSerializationProxy&quot;&gt;DefaultSerializationProxy&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.DefaultSerializationProxy.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;defaultserializationproxy&quot; id=&quot;scala.collection.generic.DefaultSerializationProxy&quot; name=&quot;scala.collection.generic.DefaultSerializationProxy&quot;&gt;DefaultSerializationProxy&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.DefaultSerializationProxy.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f7d3f20a16897d115bebf3011f1d8c27e82571d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;defaultserializationproxy&quot; id=&quot;scala.collection.generic.DefaultSerializationProxy&quot; name=&quot;scala.collection.generic.DefaultSerializationProxy&quot;&gt;DefaultSerializationProxy&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.DefaultSerializationProxy.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;defaultserializationproxy&quot; id=&quot;scala.collection.generic.DefaultSerializationProxy&quot; name=&quot;scala.collection.generic.DefaultSerializationProxy&quot;&gt;DefaultSerializationProxy&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.DefaultSerializationProxy.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7271f534094023a5c7de7fbd6d2b97f09605a2d6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;delayedinit&quot; id=&quot;scala.DelayedInit&quot; name=&quot;scala.DelayedInit&quot;&gt;DelayedInit&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;delayedinit&quot; id=&quot;scala.DelayedInit&quot; name=&quot;scala.DelayedInit&quot;&gt;DelayedInit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6864bf978e0254ddd4aea510be9302be14f50000" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;delayedinit&quot; id=&quot;scala.DelayedInit&quot; name=&quot;scala.DelayedInit&quot;&gt;DelayedInit&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;delayedinit&quot; id=&quot;scala.DelayedInit&quot; name=&quot;scala.DelayedInit&quot;&gt;DelayedInit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="748a55a7e259e4bd1f63a2add10cd02e855a05f6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;delayedlazyval&quot; id=&quot;scala.concurrent.DelayedLazyVal&quot; name=&quot;scala.concurrent.DelayedLazyVal&quot;&gt;DelayedLazyVal&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.DelayedLazyVal.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;delayedlazyval&quot; id=&quot;scala.concurrent.DelayedLazyVal&quot; name=&quot;scala.concurrent.DelayedLazyVal&quot;&gt;DelayedLazyVal&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.DelayedLazyVal.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="860c790bd644d2df712a0146e329479ed1baf92c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;delayedlazyval&quot; id=&quot;scala.concurrent.DelayedLazyVal&quot; name=&quot;scala.concurrent.DelayedLazyVal&quot;&gt;DelayedLazyVal&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.DelayedLazyVal.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;delayedlazyval&quot; id=&quot;scala.concurrent.DelayedLazyVal&quot; name=&quot;scala.concurrent.DelayedLazyVal&quot;&gt;DelayedLazyVal&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.DelayedLazyVal.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f11afd1133cf8fbbd089d81a12d2c5ad3092bfe" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;deprecated&quot; id=&quot;scala.deprecated&quot; name=&quot;scala.deprecated&quot;&gt;deprecated&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;deprecated&quot; id=&quot;scala.deprecated&quot; name=&quot;scala.deprecated&quot;&gt;deprecated&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd4c05a8a42d266fb453304ec7b4b433d7048eb8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;deprecated&quot; id=&quot;scala.deprecated&quot; name=&quot;scala.deprecated&quot;&gt;deprecated&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;deprecated&quot; id=&quot;scala.deprecated&quot; name=&quot;scala.deprecated&quot;&gt;deprecated&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98d257fdcf58fc2cd4e224c680f3215edf1594cd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;deprecatedinheritance&quot; id=&quot;scala.deprecatedInheritance&quot; name=&quot;scala.deprecatedInheritance&quot;&gt;deprecatedInheritance&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;deprecatedinheritance&quot; id=&quot;scala.deprecatedInheritance&quot; name=&quot;scala.deprecatedInheritance&quot;&gt;deprecatedInheritance&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5558158a40fad096c6545f5a3e2f0d85a28fa7e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;deprecatedinheritance&quot; id=&quot;scala.deprecatedInheritance&quot; name=&quot;scala.deprecatedInheritance&quot;&gt;deprecatedInheritance&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;deprecatedinheritance&quot; id=&quot;scala.deprecatedInheritance&quot; name=&quot;scala.deprecatedInheritance&quot;&gt;deprecatedInheritance&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1aa7e9900f644cc8fed146c1a9125452e25b3de" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;deprecatedname&quot; id=&quot;scala.deprecatedName&quot; name=&quot;scala.deprecatedName&quot;&gt;deprecatedName&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;deprecatedname&quot; id=&quot;scala.deprecatedName&quot; name=&quot;scala.deprecatedName&quot;&gt;deprecatedName&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3276c2aaa63f67a0eeabfdc47b5661e7318fcb9f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;deprecatedname&quot; id=&quot;scala.deprecatedName&quot; name=&quot;scala.deprecatedName&quot;&gt;deprecatedName&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;deprecatedname&quot; id=&quot;scala.deprecatedName&quot; name=&quot;scala.deprecatedName&quot;&gt;deprecatedName&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a50169a4da88d02fb3eb10b7d88e0783c794b189" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;deprecatedoverriding&quot; id=&quot;scala.deprecatedOverriding&quot; name=&quot;scala.deprecatedOverriding&quot;&gt;deprecatedOverriding&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;deprecatedoverriding&quot; id=&quot;scala.deprecatedOverriding&quot; name=&quot;scala.deprecatedOverriding&quot;&gt;deprecatedOverriding&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60199a66bd35005060beccb97604d04d491fb78d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;deprecatedoverriding&quot; id=&quot;scala.deprecatedOverriding&quot; name=&quot;scala.deprecatedOverriding&quot;&gt;deprecatedOverriding&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;deprecatedoverriding&quot; id=&quot;scala.deprecatedOverriding&quot; name=&quot;scala.deprecatedOverriding&quot;&gt;deprecatedOverriding&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59263ff18e43c4da85a1002903b07f9be3575171" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10079976a374541c120ecbbd285768c037c0c1a8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="636a3b26a02a57cdd15a147f4799c1ca5506bb6d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0edf66eed5fb64aab818930b0dafb4fa1fdaf3c8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f654b474bf55d6d83330ff7febbc4ce7c90e1339" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;doubleaccumulator%24%24serializationproxy&quot; id=&quot;scala.jdk.DoubleAccumulator.SerializationProxy&quot; name=&quot;scala.jdk.DoubleAccumulator.SerializationProxy&quot;&gt;SerializationProxy&lt;/a&gt;[&lt;span name=&quot;scala.jdk.DoubleAccumulator.SerializationProxy.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;doubleaccumulator%24%24serializationproxy&quot; id=&quot;scala.jdk.DoubleAccumulator.SerializationProxy&quot; name=&quot;scala.jdk.DoubleAccumulator.SerializationProxy&quot;&gt;SerializationProxy&lt;/a&gt;[&lt;span name=&quot;scala.jdk.DoubleAccumulator.SerializationProxy.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28e51d9ae13b5230e75996fc02b2a4ff7ffc6547" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;doubleaccumulator%24%24serializationproxy&quot; id=&quot;scala.jdk.DoubleAccumulator.SerializationProxy&quot; name=&quot;scala.jdk.DoubleAccumulator.SerializationProxy&quot;&gt;SerializationProxy&lt;/a&gt;[&lt;span name=&quot;scala.jdk.DoubleAccumulator.SerializationProxy.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;doubleaccumulator%24%24serializationproxy&quot; id=&quot;scala.jdk.DoubleAccumulator.SerializationProxy&quot; name=&quot;scala.jdk.DoubleAccumulator.SerializationProxy&quot;&gt;SerializationProxy&lt;/a&gt;[&lt;span name=&quot;scala.jdk.DoubleAccumulator.SerializationProxy.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="876c69c328ba450c6a4e8a9587d26e07e4c37e35" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;doublestepper&quot; id=&quot;scala.collection.DoubleStepper&quot; name=&quot;scala.collection.DoubleStepper&quot;&gt;DoubleStepper&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;doublestepper&quot; id=&quot;scala.collection.DoubleStepper&quot; name=&quot;scala.collection.DoubleStepper&quot;&gt;DoubleStepper&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19d63f6b9f6fb2a468678540a08e110113885410" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;doublestepper&quot; id=&quot;scala.collection.DoubleStepper&quot; name=&quot;scala.collection.DoubleStepper&quot;&gt;DoubleStepper&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;doublestepper&quot; id=&quot;scala.collection.DoubleStepper&quot; name=&quot;scala.collection.DoubleStepper&quot;&gt;DoubleStepper&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e94f0695e8632febd596790983e1e765fa15542c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;doublestepper%24%24doublestepperspliterator&quot; id=&quot;scala.collection.DoubleStepper.DoubleStepperSpliterator&quot; name=&quot;scala.collection.DoubleStepper.DoubleStepperSpliterator&quot;&gt;DoubleStepperSpliterator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;doublestepper%24%24doublestepperspliterator&quot; id=&quot;scala.collection.DoubleStepper.DoubleStepperSpliterator&quot; name=&quot;scala.collection.DoubleStepper.DoubleStepperSpliterator&quot;&gt;DoubleStepperSpliterator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c947a7a23da1e54a3714dbaac6e1d9326ff6552" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;doublestepper%24%24doublestepperspliterator&quot; id=&quot;scala.collection.DoubleStepper.DoubleStepperSpliterator&quot; name=&quot;scala.collection.DoubleStepper.DoubleStepperSpliterator&quot;&gt;DoubleStepperSpliterator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;doublestepper%24%24doublestepperspliterator&quot; id=&quot;scala.collection.DoubleStepper.DoubleStepperSpliterator&quot; name=&quot;scala.collection.DoubleStepper.DoubleStepperSpliterator&quot;&gt;DoubleStepperSpliterator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b45d71a1f6ea8a0b95f02d68057a95337fc0924" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;dummyimplicit&quot; id=&quot;scala.DummyImplicit&quot; name=&quot;scala.DummyImplicit&quot;&gt;DummyImplicit&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;dummyimplicit&quot; id=&quot;scala.DummyImplicit&quot; name=&quot;scala.DummyImplicit&quot;&gt;DummyImplicit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e01a75bf609303d4e5111a21749c5f1bfdab4b66" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;dummyimplicit&quot; id=&quot;scala.DummyImplicit&quot; name=&quot;scala.DummyImplicit&quot;&gt;DummyImplicit&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;dummyimplicit&quot; id=&quot;scala.DummyImplicit&quot; name=&quot;scala.DummyImplicit&quot;&gt;DummyImplicit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4589c45a21485aa3c7a83022ddf0b64768642d72" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e53a2b25eb2648cd5df3fac8ef69a073c496c727" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d04abe3746385702405bb173502e850b7010ef4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;duration%24%24infinite&quot; id=&quot;scala.concurrent.duration.Duration.Infinite&quot; name=&quot;scala.concurrent.duration.Duration.Infinite&quot;&gt;Infinite&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;duration%24%24infinite&quot; id=&quot;scala.concurrent.duration.Duration.Infinite&quot; name=&quot;scala.concurrent.duration.Duration.Infinite&quot;&gt;Infinite&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="921159669cb646bda1c233d2fa88f9663a53052a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;duration%24%24infinite&quot; id=&quot;scala.concurrent.duration.Duration.Infinite&quot; name=&quot;scala.concurrent.duration.Duration.Infinite&quot;&gt;Infinite&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;duration%24%24infinite&quot; id=&quot;scala.concurrent.duration.Duration.Infinite&quot; name=&quot;scala.concurrent.duration.Duration.Infinite&quot;&gt;Infinite&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c75b2a3028a31682d8766ab13cb78852030713d2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;durationconversions&quot; id=&quot;scala.concurrent.duration.DurationConversions&quot; name=&quot;scala.concurrent.duration.DurationConversions&quot;&gt;DurationConversions&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;durationconversions&quot; id=&quot;scala.concurrent.duration.DurationConversions&quot; name=&quot;scala.concurrent.duration.DurationConversions&quot;&gt;DurationConversions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcb5a1af10968c881711f29ab0f128ffcf901b27" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;durationconversions&quot; id=&quot;scala.concurrent.duration.DurationConversions&quot; name=&quot;scala.concurrent.duration.DurationConversions&quot;&gt;DurationConversions&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;durationconversions&quot; id=&quot;scala.concurrent.duration.DurationConversions&quot; name=&quot;scala.concurrent.duration.DurationConversions&quot;&gt;DurationConversions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="700994d024c0eed8f41255c34d5baec55f65b18b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;durationconversions%24%24classifier&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot;&gt;Classifier&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.duration.DurationConversions.Classifier.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;durationconversions%24%24classifier&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot;&gt;Classifier&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.duration.DurationConversions.Classifier.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d354f9522a3dddc8069b55b79abead5a6808bbe0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;durationconversions%24%24classifier&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot;&gt;Classifier&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.duration.DurationConversions.Classifier.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;durationconversions%24%24classifier&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot;&gt;Classifier&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.duration.DurationConversions.Classifier.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a9c7059c774b09a9df50802cde02ce636e6a79b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;durationconverters%24%24javadurationops&quot; id=&quot;scala.jdk.DurationConverters.JavaDurationOps&quot; name=&quot;scala.jdk.DurationConverters.JavaDurationOps&quot;&gt;JavaDurationOps&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;durationconverters%24%24javadurationops&quot; id=&quot;scala.jdk.DurationConverters.JavaDurationOps&quot; name=&quot;scala.jdk.DurationConverters.JavaDurationOps&quot;&gt;JavaDurationOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50075225f6626a41279bb62c1e65fe47ca56b2e9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;durationconverters%24%24javadurationops&quot; id=&quot;scala.jdk.DurationConverters.JavaDurationOps&quot; name=&quot;scala.jdk.DurationConverters.JavaDurationOps&quot;&gt;JavaDurationOps&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;durationconverters%24%24javadurationops&quot; id=&quot;scala.jdk.DurationConverters.JavaDurationOps&quot; name=&quot;scala.jdk.DurationConverters.JavaDurationOps&quot;&gt;JavaDurationOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9289cb35f964616e80515d6e415bada9356b527" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;durationconverters%24%24scaladurationops&quot; id=&quot;scala.jdk.DurationConverters.ScalaDurationOps&quot; name=&quot;scala.jdk.DurationConverters.ScalaDurationOps&quot;&gt;ScalaDurationOps&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;durationconverters%24%24scaladurationops&quot; id=&quot;scala.jdk.DurationConverters.ScalaDurationOps&quot; name=&quot;scala.jdk.DurationConverters.ScalaDurationOps&quot;&gt;ScalaDurationOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3477bc09db9eeea8518c7388f2322d428c25ce2a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;durationconverters%24%24scaladurationops&quot; id=&quot;scala.jdk.DurationConverters.ScalaDurationOps&quot; name=&quot;scala.jdk.DurationConverters.ScalaDurationOps&quot;&gt;ScalaDurationOps&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;durationconverters%24%24scaladurationops&quot; id=&quot;scala.jdk.DurationConverters.ScalaDurationOps&quot; name=&quot;scala.jdk.DurationConverters.ScalaDurationOps&quot;&gt;ScalaDurationOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a105dfca44fbb3598af2db53e4ab39d55c32f1d2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;dynamic&quot; id=&quot;scala.Dynamic&quot; name=&quot;scala.Dynamic&quot;&gt;Dynamic&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;dynamic&quot; id=&quot;scala.Dynamic&quot; name=&quot;scala.Dynamic&quot;&gt;Dynamic&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26f97deda80eb45a2534a38729e0624bcb95cdb8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;dynamic&quot; id=&quot;scala.Dynamic&quot; name=&quot;scala.Dynamic&quot;&gt;Dynamic&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;dynamic&quot; id=&quot;scala.Dynamic&quot; name=&quot;scala.Dynamic&quot;&gt;Dynamic&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f59737832ab7268c34b024731df9a6d65ce7e52" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;dynamicvariable&quot; id=&quot;scala.util.DynamicVariable&quot; name=&quot;scala.util.DynamicVariable&quot;&gt;DynamicVariable&lt;/a&gt;[&lt;span name=&quot;scala.util.DynamicVariable.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;dynamicvariable&quot; id=&quot;scala.util.DynamicVariable&quot; name=&quot;scala.util.DynamicVariable&quot;&gt;DynamicVariable&lt;/a&gt;[&lt;span name=&quot;scala.util.DynamicVariable.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc27af35707f05c87f35144017ace9eea010c1c7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;dynamicvariable&quot; id=&quot;scala.util.DynamicVariable&quot; name=&quot;scala.util.DynamicVariable&quot;&gt;DynamicVariable&lt;/a&gt;[&lt;span name=&quot;scala.util.DynamicVariable.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;dynamicvariable&quot; id=&quot;scala.util.DynamicVariable&quot; name=&quot;scala.util.DynamicVariable&quot;&gt;DynamicVariable&lt;/a&gt;[&lt;span name=&quot;scala.util.DynamicVariable.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2ba0d09261b1deb34a3737c04d3b4035e764a7f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100ca73029e45b925946fd18df99ae7c384319f3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17f70b524ceaa8172fba8346f76b3b3d97396242" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;either%24%24leftprojection&quot; id=&quot;scala.util.Either.LeftProjection&quot; name=&quot;scala.util.Either.LeftProjection&quot;&gt;LeftProjection&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.LeftProjection.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.LeftProjection.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;either%24%24leftprojection&quot; id=&quot;scala.util.Either.LeftProjection&quot; name=&quot;scala.util.Either.LeftProjection&quot;&gt;LeftProjection&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.LeftProjection.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.LeftProjection.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db3492b29b129defc6890ef09f2a8e6dd901afad" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;either%24%24leftprojection&quot; id=&quot;scala.util.Either.LeftProjection&quot; name=&quot;scala.util.Either.LeftProjection&quot;&gt;LeftProjection&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.LeftProjection.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.LeftProjection.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;either%24%24leftprojection&quot; id=&quot;scala.util.Either.LeftProjection&quot; name=&quot;scala.util.Either.LeftProjection&quot;&gt;LeftProjection&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.LeftProjection.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.LeftProjection.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdd0cd8807c03f0242b4a040010cda31a82a04a4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;either%24%24mergeableeither&quot; id=&quot;scala.util.Either.MergeableEither&quot; name=&quot;scala.util.Either.MergeableEither&quot;&gt;MergeableEither&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.MergeableEither.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;either%24%24mergeableeither&quot; id=&quot;scala.util.Either.MergeableEither&quot; name=&quot;scala.util.Either.MergeableEither&quot;&gt;MergeableEither&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.MergeableEither.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0d286ffe70c0827f6a71b3bc11876c78d48f31c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;either%24%24mergeableeither&quot; id=&quot;scala.util.Either.MergeableEither&quot; name=&quot;scala.util.Either.MergeableEither&quot;&gt;MergeableEither&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.MergeableEither.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;either%24%24mergeableeither&quot; id=&quot;scala.util.Either.MergeableEither&quot; name=&quot;scala.util.Either.MergeableEither&quot;&gt;MergeableEither&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.MergeableEither.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b66fed45dede96e9ea2b8168c6aeef84c6e39a6a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;either%24%24rightprojection&quot; id=&quot;scala.util.Either.RightProjection&quot; name=&quot;scala.util.Either.RightProjection&quot;&gt;RightProjection&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.RightProjection.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.RightProjection.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;either%24%24rightprojection&quot; id=&quot;scala.util.Either.RightProjection&quot; name=&quot;scala.util.Either.RightProjection&quot;&gt;RightProjection&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.RightProjection.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.RightProjection.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bfb402e7057e223455125ff2e73b4b2fbbc7490" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;either%24%24rightprojection&quot; id=&quot;scala.util.Either.RightProjection&quot; name=&quot;scala.util.Either.RightProjection&quot;&gt;RightProjection&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.RightProjection.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.RightProjection.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;either%24%24rightprojection&quot; id=&quot;scala.util.Either.RightProjection&quot; name=&quot;scala.util.Either.RightProjection&quot;&gt;RightProjection&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.RightProjection.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.RightProjection.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="679dffd414cd9aec1965642ad9b3ccf43c3833b0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;elidable&quot; id=&quot;scala.annotation.elidable&quot; name=&quot;scala.annotation.elidable&quot;&gt;elidable&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;elidable&quot; id=&quot;scala.annotation.elidable&quot; name=&quot;scala.annotation.elidable&quot;&gt;elidable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6af4eb55f3cb12b57d8c5714c0dcb7378a9730d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;elidable&quot; id=&quot;scala.annotation.elidable&quot; name=&quot;scala.annotation.elidable&quot;&gt;elidable&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;elidable&quot; id=&quot;scala.annotation.elidable&quot; name=&quot;scala.annotation.elidable&quot;&gt;elidable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d056d771556f1c3ddc1de256c2281f933aee5815" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;enumeration&quot; id=&quot;scala.Enumeration&quot; name=&quot;scala.Enumeration&quot;&gt;Enumeration&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;enumeration&quot; id=&quot;scala.Enumeration&quot; name=&quot;scala.Enumeration&quot;&gt;Enumeration&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12a6763b4d1d9485d756c6a55f86dbd8670bd4c9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;enumeration&quot; id=&quot;scala.Enumeration&quot; name=&quot;scala.Enumeration&quot;&gt;Enumeration&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;enumeration&quot; id=&quot;scala.Enumeration&quot; name=&quot;scala.Enumeration&quot;&gt;Enumeration&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42a9641ab7ede0944891b4d1dbeb3482f7e38cb4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;enumeration%24val&quot; id=&quot;scala.Enumeration.Val&quot; name=&quot;scala.Enumeration.Val&quot;&gt;Val&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;enumeration%24val&quot; id=&quot;scala.Enumeration.Val&quot; name=&quot;scala.Enumeration.Val&quot;&gt;Val&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="370d82fe92f025c395da9d5efdf93ea217d6d962" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;enumeration%24val&quot; id=&quot;scala.Enumeration.Val&quot; name=&quot;scala.Enumeration.Val&quot;&gt;Val&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;enumeration%24val&quot; id=&quot;scala.Enumeration.Val&quot; name=&quot;scala.Enumeration.Val&quot;&gt;Val&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7a0ba9bd27710f8528a2df4d703c0306116a906" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcdce281e208f43353e7df7d014dbf1279527b05" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76821b6cb255bc378aab28ae319f76253dd46331" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5021e3bbb24059aed220c17df7e1d64804da5a80" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18cbb571c8f5bf7d442a5823c87c6438f37091fd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;equals&quot; id=&quot;scala.Equals&quot; name=&quot;scala.Equals&quot;&gt;Equals&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;equals&quot; id=&quot;scala.Equals&quot; name=&quot;scala.Equals&quot;&gt;Equals&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17863365d6c005cde9ffc7cb8ccdd80218464dd3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;equals&quot; id=&quot;scala.Equals&quot; name=&quot;scala.Equals&quot;&gt;Equals&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;equals&quot; id=&quot;scala.Equals&quot; name=&quot;scala.Equals&quot;&gt;Equals&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d71be78cc14c96d3de79c4115ab7489a2e5410" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="834af202cc55a0ce3bc23b3f61f1cb7435819e16" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48d914ad707dd040f55bacff466ed010f2426a82" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;equiv%24%24double%24%24ieeeequiv&quot; id=&quot;scala.math.Equiv.Double.IeeeEquiv&quot; name=&quot;scala.math.Equiv.Double.IeeeEquiv&quot;&gt;IeeeEquiv&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;equiv%24%24double%24%24ieeeequiv&quot; id=&quot;scala.math.Equiv.Double.IeeeEquiv&quot; name=&quot;scala.math.Equiv.Double.IeeeEquiv&quot;&gt;IeeeEquiv&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c890f3fdf0a3ef9d6d163b397a3e801bf0846a7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;equiv%24%24double%24%24ieeeequiv&quot; id=&quot;scala.math.Equiv.Double.IeeeEquiv&quot; name=&quot;scala.math.Equiv.Double.IeeeEquiv&quot;&gt;IeeeEquiv&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;equiv%24%24double%24%24ieeeequiv&quot; id=&quot;scala.math.Equiv.Double.IeeeEquiv&quot; name=&quot;scala.math.Equiv.Double.IeeeEquiv&quot;&gt;IeeeEquiv&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="535bcca4304f55762e0e80df52f9b3ffec856d44" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;equiv%24%24double%24%24strictequiv&quot; id=&quot;scala.math.Equiv.Double.StrictEquiv&quot; name=&quot;scala.math.Equiv.Double.StrictEquiv&quot;&gt;StrictEquiv&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;equiv%24%24double%24%24strictequiv&quot; id=&quot;scala.math.Equiv.Double.StrictEquiv&quot; name=&quot;scala.math.Equiv.Double.StrictEquiv&quot;&gt;StrictEquiv&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cfee9616e1bef431a05fdd76fb099d07194bcc7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;equiv%24%24double%24%24strictequiv&quot; id=&quot;scala.math.Equiv.Double.StrictEquiv&quot; name=&quot;scala.math.Equiv.Double.StrictEquiv&quot;&gt;StrictEquiv&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;equiv%24%24double%24%24strictequiv&quot; id=&quot;scala.math.Equiv.Double.StrictEquiv&quot; name=&quot;scala.math.Equiv.Double.StrictEquiv&quot;&gt;StrictEquiv&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ccfab939ddb42c9f04323c37ed8c3730a1bd5e9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;equiv%24%24extraimplicits&quot; id=&quot;scala.math.Equiv.ExtraImplicits&quot; name=&quot;scala.math.Equiv.ExtraImplicits&quot;&gt;ExtraImplicits&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;equiv%24%24extraimplicits&quot; id=&quot;scala.math.Equiv.ExtraImplicits&quot; name=&quot;scala.math.Equiv.ExtraImplicits&quot;&gt;ExtraImplicits&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a02b10ed43d1a8550585ba8798ac988d8a9aa7e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;equiv%24%24extraimplicits&quot; id=&quot;scala.math.Equiv.ExtraImplicits&quot; name=&quot;scala.math.Equiv.ExtraImplicits&quot;&gt;ExtraImplicits&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;equiv%24%24extraimplicits&quot; id=&quot;scala.math.Equiv.ExtraImplicits&quot; name=&quot;scala.math.Equiv.ExtraImplicits&quot;&gt;ExtraImplicits&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
