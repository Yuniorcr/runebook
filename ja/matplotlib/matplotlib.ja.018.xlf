<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="matplotlib">
    <body>
      <group id="matplotlib">
        <trans-unit id="c9fcfe32d419ae6f198dc2558c661bff3971d902" translate="yes" xml:space="preserve">
          <source>Set the canvas that contains the figure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a998a88c14f3d4831ae71e042f0f379441f3a2da" translate="yes" xml:space="preserve">
          <source>Set the cap style for dashed lines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="764180c5c941803275e56226f12b393c60ec1f40" translate="yes" xml:space="preserve">
          <source>Set the cap style for solid lines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="468c8c82acd45241b9d3e3fcaf66e13fb201d10e" translate="yes" xml:space="preserve">
          <source>Set the capstyle for the collection (for all its elements).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5479e11a65b0b920c7b005d9f02727f2def015c" translate="yes" xml:space="preserve">
          <source>Set the capstyle to be one of ('butt', 'round', 'projecting').</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38a1a87fb72365a4089063fcb883150bb594b78d" translate="yes" xml:space="preserve">
          <source>Set the center of the ellipse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c41cd41445e72c0117e42cd03089f64d63554d40" translate="yes" xml:space="preserve">
          <source>Set the child axes which are currently grabbing the mouse events. Usually called by the widgets themselves. It is an error to call this if the mouse is already grabbed by another axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69d624338e8443f0f3052d1b75d6c794713fd2d5" translate="yes" xml:space="preserve">
          <source>Set the children of the transform, to let the invalidation system know which transforms can invalidate this transform. Should be called from the constructor of any transforms that depend on other transforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a9524ab0d282da4a83fd998a25a98874e9cfdfb" translate="yes" xml:space="preserve">
          <source>Set the clip path and transformation. Path should be a &lt;a href=&quot;transformations#matplotlib.transforms.TransformedPath&quot;&gt;&lt;code&gt;TransformedPath&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fecdcf7857dbb43406fafd8cf19f494096f1e882" translate="yes" xml:space="preserve">
          <source>Set the clip rectangle with sequence (left, bottom, width, height)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e68c3f9882cc683d501bb73a60a0e514133af619" translate="yes" xml:space="preserve">
          <source>Set the color limits of the current image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e213257401e23b056d094681b4d0355cf1082b6" translate="yes" xml:space="preserve">
          <source>Set the color of the line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1ec55221a9521eef3ebbcd2d7293a35650353fa" translate="yes" xml:space="preserve">
          <source>Set the color(s) of the LineCollection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb8d780b103d3ae90880628f532939d751389917" translate="yes" xml:space="preserve">
          <source>Set the colormap to &quot;autumn&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bb81721591b5288afb6b9f52029c0792453ad94" translate="yes" xml:space="preserve">
          <source>Set the colormap to &quot;bone&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b05c50469a823e4a90ed1f257a306719edfc375" translate="yes" xml:space="preserve">
          <source>Set the colormap to &quot;cool&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76c1bb2817e7388fe6da3a29cb1f9781d688d30b" translate="yes" xml:space="preserve">
          <source>Set the colormap to &quot;copper&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d02884839653de9f0fe4c5e5fe62e6475b70fa54" translate="yes" xml:space="preserve">
          <source>Set the colormap to &quot;flag&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebd1096adff693eba2b1bf7f6f5e27da25d14800" translate="yes" xml:space="preserve">
          <source>Set the colormap to &quot;gray&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3730e55443ca409c4decd351f4cc0aaffcd4e362" translate="yes" xml:space="preserve">
          <source>Set the colormap to &quot;hot&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="985ddad97aa607a7d10cf75c81c2bf8c5005e678" translate="yes" xml:space="preserve">
          <source>Set the colormap to &quot;hsv&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47efd6dc6a7a381400d75513f0c6e4c527cdf07c" translate="yes" xml:space="preserve">
          <source>Set the colormap to &quot;inferno&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62441f5dc0e3eb62d44bf541bcac7cb7a9dd9214" translate="yes" xml:space="preserve">
          <source>Set the colormap to &quot;jet&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa365fa8cdff3e95358f708610f6f22077dc057" translate="yes" xml:space="preserve">
          <source>Set the colormap to &quot;magma&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61cd0d723d0937f17bafb93d612950a1500bf980" translate="yes" xml:space="preserve">
          <source>Set the colormap to &quot;nipy_spectral&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6234d0f7b4aa1405702edd3efa0f48efee01eaa3" translate="yes" xml:space="preserve">
          <source>Set the colormap to &quot;pink&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd67d5d3c34598a7aba4d3397d2e1786816070a8" translate="yes" xml:space="preserve">
          <source>Set the colormap to &quot;plasma&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a8c61ea46bc6a88688e07dcfff6fb03347f9fff" translate="yes" xml:space="preserve">
          <source>Set the colormap to &quot;prism&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e2827cd126209982332297b4ea4f97b1e8c1027" translate="yes" xml:space="preserve">
          <source>Set the colormap to &quot;spring&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64ee877b337314aef9bc22d4ce78d68e7700920d" translate="yes" xml:space="preserve">
          <source>Set the colormap to &quot;summer&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fbda5c5d65c5206331d222f7aab9de644e8a472" translate="yes" xml:space="preserve">
          <source>Set the colormap to &quot;viridis&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3011c4b442ec57722de1027215a90391a99818e" translate="yes" xml:space="preserve">
          <source>Set the colormap to &quot;winter&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba3f79431e6665ddc24bcdb18dbd280e75e5cce" translate="yes" xml:space="preserve">
          <source>Set the connection style. Old attributes are forgotten.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f98e96ef33ca57dff1f71215990ed3b411f29972" translate="yes" xml:space="preserve">
          <source>Set the coordinate system to use for &lt;a href=&quot;#matplotlib.text.Annotation.xyann&quot;&gt;&lt;code&gt;Annotation.xyann&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ef20f8ee0a6bd3f5096e06e52a115cb01185f16" translate="yes" xml:space="preserve">
          <source>Set the coordinates of the label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d388db97ba879031385448c1fc68073a138b1a88" translate="yes" xml:space="preserve">
          <source>Set the current Axes instance to &lt;em&gt;ax&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95106af666e06cee9454cc233c517aec9904a140" translate="yes" xml:space="preserve">
          <source>Set the current axes to be a and return a.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40e9a0077c1e7c259b088f012113bd79ba5a7519" translate="yes" xml:space="preserve">
          <source>Set the current cursor to one of the &lt;code&gt;Cursors&lt;/code&gt; enums values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38133849815b0a9410864fb8d50b451540f9b49b" translate="yes" xml:space="preserve">
          <source>Set the current image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="067d3f8b18721f847693ade7a27e3505c951f5ef" translate="yes" xml:space="preserve">
          <source>Set the current rc params.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="283fb9db9888bc941fd013cec5abf98909bcfbc5" translate="yes" xml:space="preserve">
          <source>Set the current rc params. &lt;em&gt;group&lt;/em&gt; is the grouping for the rc, e.g., for &lt;code&gt;lines.linewidth&lt;/code&gt; the group is &lt;code&gt;lines&lt;/code&gt;, for &lt;code&gt;axes.facecolor&lt;/code&gt;, the group is &lt;code&gt;axes&lt;/code&gt;, and so on. Group may also be a list or tuple of group names, e.g., (&lt;em&gt;xtick&lt;/em&gt;, &lt;em&gt;ytick&lt;/em&gt;). &lt;em&gt;kwargs&lt;/em&gt; is a dictionary attribute name/value pairs, e.g.,:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9a8214150c8b888f8784dc353a0f29c27f3d275" translate="yes" xml:space="preserve">
          <source>Set the cursor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7614a9ea60bc1ca00e17a8fa8bb0a05b76d022fc" translate="yes" xml:space="preserve">
          <source>Set the dash sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="542c5ade216f8c04b30393227be47eda87bf2e1c" translate="yes" xml:space="preserve">
          <source>Set the dash style for the gc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6441580f1d09c435e50b0202b3f007027f8126b2" translate="yes" xml:space="preserve">
          <source>Set the data array for x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7fd34cca736cd8fed6c93ef1db11b08919f9df5" translate="yes" xml:space="preserve">
          <source>Set the data array for y.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c88d4b7e908ec343d05c0b7b9cbae2506d5e823" translate="yes" xml:space="preserve">
          <source>Set the data limits for the radial axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82bc636aa29c65cd81f27a1f353fb166349faa69" translate="yes" xml:space="preserve">
          <source>Set the default colormap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="535711be3c1042fb0ec03510715c443f2536e98d" translate="yes" xml:space="preserve">
          <source>Set the default colormap. Applies to the current image if any. See help(colormaps) for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a9d5e69198837b31c5f08589de195fffe3c7d4" translate="yes" xml:space="preserve">
          <source>Set the default font weight. The initial value is 'normal'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47aeaef18f22e5bbe1be78c3f8066d2b12886b6f" translate="yes" xml:space="preserve">
          <source>Set the default limits for the axis data and view interval if they have not been not mutated yet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a13e3a0a5daa55558a8fe05a1dab749c0a74b956" translate="yes" xml:space="preserve">
          <source>Set the depth of the axis used by the picker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71d1df11ec2def306797f1dea5e529b3500618bd" translate="yes" xml:space="preserve">
          <source>Set the direction in which theta increases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="008531588ed0018e7249cc3a0bbabd942bbfa2e0" translate="yes" xml:space="preserve">
          <source>Set the direction of the dash following the text. 1 is before the text and 0 is after. The default is 0, which is what you'd want for the typical case of ticks below and on the left of the figure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ce480acd17973d49866fc59aa4e58a6e53501a5" translate="yes" xml:space="preserve">
          <source>Set the drawstyle of the plot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdc01ee951c968bdebc70eca21383891f03cb04b" translate="yes" xml:space="preserve">
          <source>Set the edge color of the Figure rectangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a1c14c6b045b750c3135d733ea325914cde2bcd" translate="yes" xml:space="preserve">
          <source>Set the edgecolor(s) of the collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="586c588c8502e5cf4cf4321a2939067f6607ae3b" translate="yes" xml:space="preserve">
          <source>Set the edgecolor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cab118aad199baeb571479d0a4fa87f4f4360157" translate="yes" xml:space="preserve">
          <source>Set the elevation and azimuth of the axes in degrees (not radians).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33e998e6c3ef088278e6cd8f8c44728008e28665" translate="yes" xml:space="preserve">
          <source>Set the face color of the Figure rectangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ce599c2c868641bd919499c824ad0660145ced" translate="yes" xml:space="preserve">
          <source>Set the facecolor of the Axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2dc3a6d3438f3af3d4fd0d2f8641a5e06f37898" translate="yes" xml:space="preserve">
          <source>Set the facecolor(s) of the collection. &lt;em&gt;c&lt;/em&gt; can be a matplotlib color spec (all patches have same color), or a sequence of specs; if it is a sequence the patches will cycle through the sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="408361e18ee5f640822b33fde9f0c56961e77dd3" translate="yes" xml:space="preserve">
          <source>Set the figure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="416ad2ba2e346b99fdd9ffb6d762745fc3024f20" translate="yes" xml:space="preserve">
          <source>Set the figure instance the artist belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74487e1715fbdc5f1b8eae1d23cce47557fe8101" translate="yes" xml:space="preserve">
          <source>Set the figure size in inches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bbe97a3a26ae5c1e71f6f3bfc7786ba122bb33a" translate="yes" xml:space="preserve">
          <source>Set the figure's background patch visibility, i.e. whether the figure background will be drawn. Equivalent to &lt;code&gt;Figure.patch.set_visible()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="314b9e8dc4fabb72c1137564e2f5515676664c9b" translate="yes" xml:space="preserve">
          <source>Set the filename of the fontfile to use. In this case, all other properties will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f401adc9bba34f99f8c4962a1e835b8438d117bb" translate="yes" xml:space="preserve">
          <source>Set the font family. May be either a single string, or a list of strings in decreasing priority. Each string may be either a real font name or a generic font class name. If the latter, the specific font names will be looked up in the corresponding rcParams.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c9fb8cc4c7a16df34bacb9c92cb4fdac1ed279e" translate="yes" xml:space="preserve">
          <source>Set the font properties that control the text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e94c90bd9acaa321e4cf47cc66754f7bb4c279c" translate="yes" xml:space="preserve">
          <source>Set the font size, in points, of the cell text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c695ba45be735d4320032899246ac0d12f8d2b" translate="yes" xml:space="preserve">
          <source>Set the font size. Either an relative value of 'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large' or an absolute font size, e.g., 12.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e280d4207e17d3f2b4ac672873c012982addeb75" translate="yes" xml:space="preserve">
          <source>Set the font size. May be either a size string, relative to the default font size, or an absolute font size in points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a174b68343168aabc3ff15b995f0bd4f99b3498" translate="yes" xml:space="preserve">
          <source>Set the font stretch (horizontal condensation or expansion).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="330bdff164544df46fceeb2cc30bac01b201c933" translate="yes" xml:space="preserve">
          <source>Set the font stretch or width. Options are: 'ultra-condensed', 'extra-condensed', 'condensed', 'semi-condensed', 'normal', 'semi-expanded', 'expanded', 'extra-expanded' or 'ultra-expanded', or a numeric value in the range 0-1000.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3032aa2c396ee63d17536e43f6e8802fc30837c" translate="yes" xml:space="preserve">
          <source>Set the font style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f4493d642f1eb9d7bda97446be5a40a5d0d01b0" translate="yes" xml:space="preserve">
          <source>Set the font style. Values are: 'normal', 'italic' or 'oblique'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19063a6ac2c26523c390819ad1bf25e3af038c9a" translate="yes" xml:space="preserve">
          <source>Set the font variant, either 'normal' or 'small-caps'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="188a57f04afcfa528a6dfbe7804e27373f78cfd3" translate="yes" xml:space="preserve">
          <source>Set the font variant. Values are: 'normal' or 'small-caps'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79b61769489333c1e42fb94ccc0af9685e74c8ef" translate="yes" xml:space="preserve">
          <source>Set the font weight.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="945687f9c7eee6d9fb1c6041177a360ad200d620" translate="yes" xml:space="preserve">
          <source>Set the font weight. May be either a numeric value in the range 0-1000 or one of 'ultralight', 'light', 'normal', 'regular', 'book', 'medium', 'roman', 'semibold', 'demibold', 'demi', 'bold', 'heavy', 'extra bold', 'black'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="362f85c8501574bbcb824158c7d8671f9ea90842" translate="yes" xml:space="preserve">
          <source>Set the font weight. Options are: A numeric value in the range 0-1000 or one of 'light', 'normal', 'regular', 'book', 'medium', 'roman', 'semibold', 'demibold', 'demi', 'bold', 'heavy', 'extra bold', 'black'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="930ddce2830f8dcda3fedaccee0bb1e1d8a292e5" translate="yes" xml:space="preserve">
          <source>Set the foreground color of the text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a22e79cfa7eba1dc1847c589678df2dd68fa81eb" translate="yes" xml:space="preserve">
          <source>Set the foreground color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3724f47cdefc8b98d6394b3c9abcaa334eedce6" translate="yes" xml:space="preserve">
          <source>Set the formatter of the major ticker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="390017ee4dff82572fefcdbf32ba79c1c5c4ff72" translate="yes" xml:space="preserve">
          <source>Set the formatter of the minor ticker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46931800ff57060cf06ba0186b95d6bffd27573f" translate="yes" xml:space="preserve">
          <source>Set the given Cycler. &lt;em&gt;None&lt;/em&gt; resets to the cycle defined by the current style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2567b5b9faf1b42db563f33ac0a3fec5a9b4981" translate="yes" xml:space="preserve">
          <source>Set the grid for the pixel centers, and the pixel values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eccced8018e70ad65421aa9105a3d121bad9543" translate="yes" xml:space="preserve">
          <source>Set the grid for the rectangle boundaries, and the data values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ef6b993e41a0ac4fd75f2bdeb7dbebe8ff35e76" translate="yes" xml:space="preserve">
          <source>Set the hatch color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40fb5727f287b8c889380bbb8f947cd7a114d87d" translate="yes" xml:space="preserve">
          <source>Set the hatch style (for fills).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd8c981422599c80e1fd8d1d176c86f481942122" translate="yes" xml:space="preserve">
          <source>Set the hatching pattern</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="133c11b22daf9cf7f34fc98135b6cfdc5b6347d6" translate="yes" xml:space="preserve">
          <source>Set the head patch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2183d3064800f89ecff4e4ef560c1f3a308a7f88" translate="yes" xml:space="preserve">
          <source>Set the height</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d49cfce01217ff626348a73a812b8d1f4e4e5db9" translate="yes" xml:space="preserve">
          <source>Set the height of the figure in inches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f604980872537cd1b8ef84f46ab48179fc48df6d" translate="yes" xml:space="preserve">
          <source>Set the height of the rectangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecb771345eaaaf30cd2491848b1ba22c8c0f7574" translate="yes" xml:space="preserve">
          <source>Set the horizontal alignment to one of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37096824cc33028b8b01df2506fa4e15bbf7ba6" translate="yes" xml:space="preserve">
          <source>Set the id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4249e9bc6a9d49464b6be8b868a5c5fbcf6b464" translate="yes" xml:space="preserve">
          <source>Set the image array from numpy array &lt;em&gt;A&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5d3c395096bb9456da5575213870405e8da667d" translate="yes" xml:space="preserve">
          <source>Set the image array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7adc3714abd9ea6698af93d5c0998fa9966790b9" translate="yes" xml:space="preserve">
          <source>Set the inner radial limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="262169d46a2101b2463a156394221095dbb5dee5" translate="yes" xml:space="preserve">
          <source>Set the join style for dashed lines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e2678fa6c1977230c9977bd4f8b6855985e60be" translate="yes" xml:space="preserve">
          <source>Set the join style for solid lines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6c89c5d12be1fec40aced8c06631382a9d35ee8" translate="yes" xml:space="preserve">
          <source>Set the join style to be one of ('miter', 'round', 'bevel').</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4355a66344c4c0102177ff39eb49aa6d6bcfc359" translate="yes" xml:space="preserve">
          <source>Set the joinstyle for the collection (for all its elements).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d031e5bdf7b0469525d729e09f00bc91a7e95a" translate="yes" xml:space="preserve">
          <source>Set the keymap to associate with the specified tool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c91282bc00685e5a3410c6c5fe15a92bc23ab0e0" translate="yes" xml:space="preserve">
          <source>Set the label for the x-axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a6d90b76e5ed7877eb3a48a31f466270fa8d4c2" translate="yes" xml:space="preserve">
          <source>Set the label for the y-axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f422b5ef7d1ab4d595e5df72b02fbb7e621c3db" translate="yes" xml:space="preserve">
          <source>Set the label position (left or right)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e8f7e27d82e7d29b753758472c154aec6f1156f" translate="yes" xml:space="preserve">
          <source>Set the label position (top or bottom)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83222959aa264f3cf852cc566363cf66e4276f2f" translate="yes" xml:space="preserve">
          <source>Set the label properties - color, fontsize, text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab242840848e3a8e1096ebe5c55919b98d2c452" translate="yes" xml:space="preserve">
          <source>Set the label to &lt;em&gt;s&lt;/em&gt; for auto legend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ff57faa4c1ee055b5d67bbfdb8d439937212b0e" translate="yes" xml:space="preserve">
          <source>Set the label1 text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f53a9f2d72ef06806ac0a5162bb8a37dc29aedd" translate="yes" xml:space="preserve">
          <source>Set the label2 text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8e598ea7dd52f460f129d58387e7bc786fd20af" translate="yes" xml:space="preserve">
          <source>Set the left and bottom coords of the rectangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7e861be950a899a40a3517a6b3ab2703a3a700b" translate="yes" xml:space="preserve">
          <source>Set the left coord of the rectangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c2b99964da34d9964aa63c8d9ed523c91537c16" translate="yes" xml:space="preserve">
          <source>Set the legend title. Fontproperties can be optionally set with &lt;em&gt;prop&lt;/em&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7605d2e2531f5871a8407a8f3da42a528855d890" translate="yes" xml:space="preserve">
          <source>Set the length of the dash, in canvas units.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a6dd1319c04505b3dcee0f6d09bfa4eac6e1f3" translate="yes" xml:space="preserve">
          <source>Set the line marker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b32443f44c0536a5670837274cde80907d926bca" translate="yes" xml:space="preserve">
          <source>Set the line spacing as a multiple of the font size. Default is 1.2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18e4d613fb42846957e472f81851d09f8f63a928" translate="yes" xml:space="preserve">
          <source>Set the line width in points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56629ae05463de76fde950287524fda80d4c39f3" translate="yes" xml:space="preserve">
          <source>Set the linestyle of the line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f67b98e716cfcf1a0daab70664b7924da607f3c" translate="yes" xml:space="preserve">
          <source>Set the linestyle(s) for the collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5397d91a727b63a93f3a5943ca0d8dc0446b95f" translate="yes" xml:space="preserve">
          <source>Set the linewidth in points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f0719f59dccd3c257709acd9849b7dcf90a2875" translate="yes" xml:space="preserve">
          <source>Set the linewidth(s) for the collection. &lt;em&gt;lw&lt;/em&gt; can be a scalar or a sequence; if it is a sequence the patches will cycle through the sequence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67f88256517350d59354d2aa78b51505b405f1cc" translate="yes" xml:space="preserve">
          <source>Set the location of tick in data coords with scalar &lt;em&gt;loc&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcc20bf4650d6ea73dec50aac99b1dec7fb8723f" translate="yes" xml:space="preserve">
          <source>Set the location of tick in data coords with scalar &lt;em&gt;loc&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6363b2bd97766ea4e5efdb198f327fa38a5702c" translate="yes" xml:space="preserve">
          <source>Set the locations of the tick marks from sequence ticks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cddb29e03b61da7d9b48393f58c1392aa6b75c6e" translate="yes" xml:space="preserve">
          <source>Set the locations of the ticks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2578d4b2bd6808c3b219616ddc3cafb673e2d740" translate="yes" xml:space="preserve">
          <source>Set the locator of the major ticker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4b5c2c74cb4ef8b7505fa1adcfdffe1a332b19b" translate="yes" xml:space="preserve">
          <source>Set the locator of the minor ticker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5ac41badd58bd38219bf67f6ab4e916e378752e" translate="yes" xml:space="preserve">
          <source>Set the locators and formatters to reasonable defaults for linear scaling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ee6da98567423464307ebb9a848530707d8d072" translate="yes" xml:space="preserve">
          <source>Set the locators and formatters to specialized versions for log scaling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a208759d2e2ef7713df37278369931202d819224" translate="yes" xml:space="preserve">
          <source>Set the locators and formatters to specialized versions for symmetrical log scaling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea4aa9ddb0e7e39e2a07c798a4f80af1823886e4" translate="yes" xml:space="preserve">
          <source>Set the locators and formatters to the same defaults as the linear scale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b3bdc68b0e60f6c1574f4c8c2b991bd11062568" translate="yes" xml:space="preserve">
          <source>Set the lower and upper numerical bounds of the x-axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e79d86f1b35b844ff00e62b5b8354313b40728bf" translate="yes" xml:space="preserve">
          <source>Set the lower and upper numerical bounds of the y-axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f110d772ba84f306a02d5a3f1efeeb20e2c4906" translate="yes" xml:space="preserve">
          <source>Set the lower and upper numerical bounds of the z-axis. This method will honor axes inversion regardless of parameter order. It will not change the &lt;code&gt;_autoscaleZon&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24049f3c18d7f271b0e1f7fb4dcfbbf532db7685" translate="yes" xml:space="preserve">
          <source>Set the marker edge color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c415545fbb21902bbc06cb5e54c3313d77fe4c" translate="yes" xml:space="preserve">
          <source>Set the marker edge width in points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80d354f53855632a6cb6a29f40ae2aa875213ec7" translate="yes" xml:space="preserve">
          <source>Set the marker face color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ede077eb4f5bcf3d23483a26c8cd24e6dbf539" translate="yes" xml:space="preserve">
          <source>Set the marker fill style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59430509f41ead7d6d635f0d92a986e6d72af1da" translate="yes" xml:space="preserve">
          <source>Set the marker size in points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3200b3e086142dd7544da0abbb9889e8e93cec03" translate="yes" xml:space="preserve">
          <source>Set the markevery property to subsample the plot when using markers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e486656c2f02cbbea7b086af10922f9987c27c51" translate="yes" xml:space="preserve">
          <source>Set the minimum and maximum theta values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ddf73123bc27397158ff90a50de810ba50e1aee" translate="yes" xml:space="preserve">
          <source>Set the mutation scale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c090c0ce22629d13ba441fe30e47182a686f885" translate="yes" xml:space="preserve">
          <source>Set the navigation toolbar button status;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ef77af4f0ef9a3670758835e7cc172dcebf8ea" translate="yes" xml:space="preserve">
          <source>Set the normalization instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ce1a53e4284b3cbb4dc4a3aedc3a9e9af8cf82" translate="yes" xml:space="preserve">
          <source>Set the offset for the location of 0 in radians.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08a8ef0fdd44680a9b8dc6ae19e57844e0914f46" translate="yes" xml:space="preserve">
          <source>Set the offset of the container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc1d251577bef63ea67f920f63bfa9c9da6c52b3" translate="yes" xml:space="preserve">
          <source>Set the offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8ac7f4ff8aae447ccdfed4da76cfc648bbd1c3c" translate="yes" xml:space="preserve">
          <source>Set the offsets for the collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27034bd39d60dbdcf48d143a8039e84daac9259e" translate="yes" xml:space="preserve">
          <source>Set the outer radial limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b280ddec8f59fef8c3d09c1cb029559d46cfcf" translate="yes" xml:space="preserve">
          <source>Set the pad in points. Note that the actual pad will be the sum of the internal pad and the external pad (that are set automatically by the AxisArtist), and it only set the internal pad</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00872c4670b929c8dd98fea5bcbe4a08de001baa" translate="yes" xml:space="preserve">
          <source>Set the padding between the axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eaa69a86b9818915c8bf5825719a2c147e82a40" translate="yes" xml:space="preserve">
          <source>Set the patch capstyle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdf4683d628dbcfc277444e134d5f56dd4094e3b" translate="yes" xml:space="preserve">
          <source>Set the patch edge color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34931018903375f6731df061156204beb04f8f71" translate="yes" xml:space="preserve">
          <source>Set the patch face color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="721d0442376039107d5e5dfa681c689e431d1da4" translate="yes" xml:space="preserve">
          <source>Set the patch joinstyle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06cd101afaa41c7c00301b0d2949636244905263" translate="yes" xml:space="preserve">
          <source>Set the patch linestyle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28f1b909c729bab735d3c7b0864b575c193b611b" translate="yes" xml:space="preserve">
          <source>Set the patch linewidth in points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f607adc8d5dc182648c73fd3cff621fb155611d4" translate="yes" xml:space="preserve">
          <source>Set the path effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c1dd9a634f43f22523aafebd030e37bf8a79203" translate="yes" xml:space="preserve">
          <source>Set the pick radius used for containment tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb43cebe332e281ff4554aa5c2600ba7b33e49d2" translate="yes" xml:space="preserve">
          <source>Set the points of the bounding box directly from a numpy array of the form: &lt;code&gt;[[x0, y0], [x1, y1]]&lt;/code&gt;. No error checking is performed, as this method is mainly for internal use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dc40d23c31c6028087ab06add7b9442b3762185" translate="yes" xml:space="preserve">
          <source>Set the position of the spine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd60967c20b3a14c4d12b0b81d46b3328dcd8ed2" translate="yes" xml:space="preserve">
          <source>Set the position to use for z-sorting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6c4e39a453df6a13bd5957122fc5e4e32ffafa" translate="yes" xml:space="preserve">
          <source>Set the projection type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="088f5eee1ea96fbeabca495bef574d2faf66581a" translate="yes" xml:space="preserve">
          <source>Set the properties by parsing a &lt;a href=&quot;https://www.freedesktop.org/wiki/Software/fontconfig/&quot;&gt;fontconfig&lt;/a&gt;&lt;em&gt;pattern&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a93ae95482defb00f18403212301637daad1a33b" translate="yes" xml:space="preserve">
          <source>Set the property cycle of the Axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="344f258c191b20cd5c1ae7e7237389e3bf1edc36" translate="yes" xml:space="preserve">
          <source>Set the radial gridlines on a polar plot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dc5549d4e0c932665ea4ac57647f99da69069d2" translate="yes" xml:space="preserve">
          <source>Set the radius of the circle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="449f23cd400a3b349e899131e1ce558b1d763692" translate="yes" xml:space="preserve">
          <source>Set the rc parameter examples.directory to the directory where we should look, if sample_data files are stored in a location different than default (which is 'mpl-data/sample_data` at the same level of 'matplotlib` Python module files).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b663141a9a8be05d802dfb5780a3df8d4af0988" translate="yes" xml:space="preserve">
          <source>Set the rectangle height.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9c3e1df7f4d3b3ffd77899eea03bacf43c2f58e" translate="yes" xml:space="preserve">
          <source>Set the rectangle width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72a40dad1bc0d312df34ef46174a6f4c2f7bed37" translate="yes" xml:space="preserve">
          <source>Set the resize filter radius only applicable to some interpolation schemes -- see help for imshow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c963ba093038ee6ba6c5f7bb50d079294aa50361" translate="yes" xml:space="preserve">
          <source>Set the resolution of the figure in dots-per-inch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bbfeec5baf1f181564a5dc2e7fc66a9c2471647" translate="yes" xml:space="preserve">
          <source>Set the rotation of the dash, in degrees.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31fcb6211a6e2d2ad680e9fed8e50050ec15e414" translate="yes" xml:space="preserve">
          <source>Set the rotation of the text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a4a275722aa14462ec476419dc478573c6f19d9" translate="yes" xml:space="preserve">
          <source>Set the sequence of strings that will be used for labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f11b5599e4d4ac378eb1249459b57a17a793ca6f" translate="yes" xml:space="preserve">
          <source>Set the size of the buffer used to render the math expression. Only really necessary for the bitmap backends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="807afabdc666451299adf174f7cc2bf7862a48b4" translate="yes" xml:space="preserve">
          <source>Set the sizes of each member of the collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a811f001c12f5160706a91cdc621f37c7c60e254" translate="yes" xml:space="preserve">
          <source>Set the sketch parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0f172a14445b6d1e7466337c7a218f2537b5a9a" translate="yes" xml:space="preserve">
          <source>Set the snap setting which may be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44e82269ff6db2b4bcfd498d92f854a3ace1d264" translate="yes" xml:space="preserve">
          <source>Set the snapping behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5971f963e568522a332ab99d018a827490ad7901" translate="yes" xml:space="preserve">
          <source>Set the spine and associated axis to have smart bounds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="061f5ef9d1ce2efc9d551b082dca0d64485d9443" translate="yes" xml:space="preserve">
          <source>Set the spine to be arc-like.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8394d741176ff67c1aa0549c48a1f9ef511a93c3" translate="yes" xml:space="preserve">
          <source>Set the spine to be circular.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="304d101e9f5872f14a86b3a2bc2bbd234c9c265a" translate="yes" xml:space="preserve">
          <source>Set the spine to be linear.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2d336d9f301bbf0edda11356bc29960f1f4bbdd" translate="yes" xml:space="preserve">
          <source>Set the strings from a list of labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af01d580923eedce02a97890077a8d395c1f5707" translate="yes" xml:space="preserve">
          <source>Set the strings manually for the labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a9797cc99593aa02b86d6cb36619c489f46967" translate="yes" xml:space="preserve">
          <source>Set the tail patch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eca0fe03e0ee8a5a3250a15d6c8846313e34414" translate="yes" xml:space="preserve">
          <source>Set the text fontsize.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af1bcb47a81e66bba525132557dfb5552fee526" translate="yes" xml:space="preserve">
          <source>Set the text of this area as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f2899ead89c91cf3abe752e76c85b968fc2ec9" translate="yes" xml:space="preserve">
          <source>Set the text size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05d54d45cda054f01b7836d0d8eacbc67a70ef37" translate="yes" xml:space="preserve">
          <source>Set the text string &lt;em&gt;s&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3c48524e6ba36ba568dc1945d788e6a6f1629e5" translate="yes" xml:space="preserve">
          <source>Set the text value of the axis label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69e9a9fd562cf2a11d18a46f2a5b04243c42e994" translate="yes" xml:space="preserve">
          <source>Set the text values of the tick labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f57ea37cc6949576721075a41d8921b72d8058a" translate="yes" xml:space="preserve">
          <source>Set the theta gridlines in a polar plot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9006ef367ed6f45e5ffcf698347282a7e19d5781" translate="yes" xml:space="preserve">
          <source>Set the tick label pad in points</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="057f3a8cde32967341e1774e1e88f9931af69df5" translate="yes" xml:space="preserve">
          <source>Set the ticks position (left, right, both, default or none) 'both' sets the ticks to appear on both positions, but does not change the tick labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab9d660fda4e69d33b7004d9f2ab1376ee79852e" translate="yes" xml:space="preserve">
          <source>Set the ticks position (left, right, both, default or none) 'both' sets the ticks to appear on both positions, but does not change the tick labels. 'default' resets the tick positions to the default: ticks on both positions, labels at left. 'none' can be used if you don't want any ticks. 'none' and 'both' affect only the ticks, not the labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1a85fc804ca7049fdef1e61e72d0ac76e1f8a12" translate="yes" xml:space="preserve">
          <source>Set the ticks position (top, bottom, both, default or none) both sets the ticks to appear on both positions, but does not change the tick labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3acfa1267d117e045a08f6abb4897d14fde8ec2" translate="yes" xml:space="preserve">
          <source>Set the ticks position (top, bottom, both, default or none) both sets the ticks to appear on both positions, but does not change the tick labels. 'default' resets the tick positions to the default: ticks on both positions, labels at bottom. 'none' can be used if you don't want any ticks. 'none' and 'both' affect only the ticks, not the labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee2706e985e1b8dc133cf13e4d870a022d1b414" translate="yes" xml:space="preserve">
          <source>Set the title text of the window containing the figure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0075fb03e63d8435384821a5b95153d07e996fe" translate="yes" xml:space="preserve">
          <source>Set the title text of the window containing the figure. Note that this has no effect if there is no window (e.g., a PS backend).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf06642af2949d655e3cebe7699c10ed899ceca3" translate="yes" xml:space="preserve">
          <source>Set the underlying transformation matrix from a 3x3 numpy array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="733a95e4d654dbf68955784530394135bc816a76" translate="yes" xml:space="preserve">
          <source>Set the units for axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b51600570e1b07da0e16abfab65d22ee1839a7" translate="yes" xml:space="preserve">
          <source>Set the url for links in compatible backends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93efd9393a53183fefc2d715cdfbd8b9bf6bf0cb" translate="yes" xml:space="preserve">
          <source>Set the url for the artist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33c8e59d2a33dc8e4757402172e577a903af4fe9" translate="yes" xml:space="preserve">
          <source>Set the url of the created &lt;a href=&quot;../image_api#matplotlib.image.AxesImage&quot;&gt;&lt;code&gt;AxesImage&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;matplotlib.artist.artist.set_url#matplotlib.artist.Artist.set_url&quot;&gt;&lt;code&gt;Artist.set_url&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c215677071e5457d9411a00b5330135aa83cf417" translate="yes" xml:space="preserve">
          <source>Set the vertical alignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f7982a7ec055613d91a61c3d462e1e0a7041a58" translate="yes" xml:space="preserve">
          <source>Set the vertices of the polygon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b94d220411687d8cfce70ae7a11053ef065ee2c" translate="yes" xml:space="preserve">
          <source>Set the view limits to include the data range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5b51602a88d4c96b82945b06a40b3b95efa50fd" translate="yes" xml:space="preserve">
          <source>Set the view limits to the nearest multiples of base that contain the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="300ca5abc4dd281aab4a9b3c913617985a3628f3" translate="yes" xml:space="preserve">
          <source>Set the width</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b2b9c40b3df5332bbe8e6bbeab30c833399c891" translate="yes" xml:space="preserve">
          <source>Set the width of the figure in inches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6298467f4d8bffe4a73e2cb66a5117ed8703de0b" translate="yes" xml:space="preserve">
          <source>Set the width of the rectangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57a30e8a1a2aef8cca318af2d9d06cc5bbb89e9c" translate="yes" xml:space="preserve">
          <source>Set the wrapping state for the text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="264772838459897484c0f0be270b71222dfd3923" translate="yes" xml:space="preserve">
          <source>Set the x and y data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56123d24c968fcd4236439aca8337d2b64e37a25" translate="yes" xml:space="preserve">
          <source>Set the x ticks with list of &lt;em&gt;ticks&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98b3cc9ba85a875686c6e83187783013db438663" translate="yes" xml:space="preserve">
          <source>Set the x, y and z data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="883836554af444945a0be49c512fabb241b2892c" translate="yes" xml:space="preserve">
          <source>Set the x-axis scale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a26f3587c0f9b3a5812ff652c58c15e0cb979342" translate="yes" xml:space="preserve">
          <source>Set the x-axis view limits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b20fb7b3176b7260158998943abdef62f10b7e21" translate="yes" xml:space="preserve">
          <source>Set the x-tick labels with list of string labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5be65cb109fcb635c54a26d539186c153287747" translate="yes" xml:space="preserve">
          <source>Set the y ticks with list of &lt;em&gt;ticks&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="387149be19fdd675e2066c03ef82013b68f7ef1a" translate="yes" xml:space="preserve">
          <source>Set the y-axis scale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd85029050fcb088b48df2bf653f921c0c2900b" translate="yes" xml:space="preserve">
          <source>Set the y-axis view limits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6cd93b0a331848d8e74a2eac2d80b23d0f751c0" translate="yes" xml:space="preserve">
          <source>Set the y-tick labels with list of strings labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8097b8ed70fe49c28513e250ec2fc499abd426a6" translate="yes" xml:space="preserve">
          <source>Set the z-axis scale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ff485f7e557f31d58d05170943ffbbf48511c2" translate="yes" xml:space="preserve">
          <source>Set the zorder for the artist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae7113ae93b0ac7748b2f03366499f44ec0fbcd7" translate="yes" xml:space="preserve">
          <source>Set the zorder for the artist. Artists with lower zorder values are drawn first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23c5101715f56c80c0900f9fba6672315fa488f4" translate="yes" xml:space="preserve">
          <source>Set this bounding box from the &quot;frozen&quot; bounds of another &lt;a href=&quot;#matplotlib.transforms.Bbox&quot;&gt;&lt;code&gt;Bbox&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9d961794b7aa4b31302fcfd2fd1765dd24c2039" translate="yes" xml:space="preserve">
          <source>Set this transformation from the frozen copy of another &lt;a href=&quot;#matplotlib.transforms.Affine2DBase&quot;&gt;&lt;code&gt;Affine2DBase&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf44f598b6c6dcb66cc8110dcb64daf8575dbb0e" translate="yes" xml:space="preserve">
          <source>Set tick labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b6262fb48b275354bc2f78d5508e72920fd4fbe" translate="yes" xml:space="preserve">
          <source>Set tick locations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05ff15c98db0939e00ca16c557a5f5766d586874" translate="yes" xml:space="preserve">
          <source>Set time zone info.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3738b1cd7f7bb1c2bde5668d77d81b0010e2ce2e" translate="yes" xml:space="preserve">
          <source>Set to plot points with nonfinite &lt;em&gt;c&lt;/em&gt;, in conjunction with &lt;a href=&quot;matplotlib.colors.colormap#matplotlib.colors.Colormap.set_bad&quot;&gt;&lt;code&gt;set_bad&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70b5c7aa0b6ef862a20c2b21e497d7041d143086" translate="yes" xml:space="preserve">
          <source>Set whether &lt;code&gt;constrained_layout&lt;/code&gt; is used upon drawing. If None, the rcParams['figure.constrained_layout.use'] value will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="937dc1aec18bf78a1d55d6253ecab8b360b3579a" translate="yes" xml:space="preserve">
          <source>Set whether and how &lt;a href=&quot;#matplotlib.figure.Figure.tight_layout&quot;&gt;&lt;code&gt;tight_layout&lt;/code&gt;&lt;/a&gt; is called when drawing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf303d14b3f2c49e3af3dd9dbe0327811e17465b" translate="yes" xml:space="preserve">
          <source>Set whether autoscaling for the x-axis is applied on plot commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="753f2b781d18a14afae0edc461a9392c20b38bb4" translate="yes" xml:space="preserve">
          <source>Set whether autoscaling for the y-axis is applied on plot commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60ec3afcf6878cc53ef1301a5925063a1af7d384" translate="yes" xml:space="preserve">
          <source>Set whether autoscaling for the z-axis is applied on plot commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="016580e155bca8bc1d46e6cae38e9b09c3222549" translate="yes" xml:space="preserve">
          <source>Set whether autoscaling is applied on plot commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7ca524cb4cdfe8798a381007b26961631afacdc" translate="yes" xml:space="preserve">
          <source>Set whether axis ticks and gridlines are above or below most artists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ee022a35084062bdb688dd5bd609fb3a2e0a83" translate="yes" xml:space="preserve">
          <source>Set whether object should be drawn with antialiased rendering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4efa5fb8269ac8ca053fcf41d176feab34791e80" translate="yes" xml:space="preserve">
          <source>Set whether the 3D axes panels are drawn.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a36eaff9e06c0cee11b9e3d71bd85134017a38" translate="yes" xml:space="preserve">
          <source>Set whether the artist uses clipping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f1869bb114a242b8f2d9183849780dbbb9e6e8c" translate="yes" xml:space="preserve">
          <source>Set whether the axes rectangle patch is drawn.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f80f5b862dd85d1c30a09e11a1ed1c55c4181d6e" translate="yes" xml:space="preserve">
          <source>Set whether the axes responds to navigation toolbar commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff2f06003aca1c47c6b986c45c3a2d03be9e3cda" translate="yes" xml:space="preserve">
          <source>Set whether the existing bounds of the box should be ignored by subsequent calls to &lt;a href=&quot;#matplotlib.transforms.Bbox.update_from_data_xy&quot;&gt;&lt;code&gt;update_from_data_xy()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6079462b58dc5b4829f6d9443447c4d6c041e3ce" translate="yes" xml:space="preserve">
          <source>Set whether the legend box patch is drawn.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a4cbb6de0e1ad8f8a875086de8aca3cdfa9c2ee" translate="yes" xml:space="preserve">
          <source>Set whether the resize filter normalizes the weights.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77c89fa4d185c4314712b9681534762e4f9a8562" translate="yes" xml:space="preserve">
          <source>Set whether the widget is active.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a62ed0f4e86a479de189d67f7e8c55e283883e5a" translate="yes" xml:space="preserve">
          <source>Set whether to fill the patch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbaf5b8e56e2c580cf2e11983954efa3ad9526d1" translate="yes" xml:space="preserve">
          <source>Set whether to use antialiased rendering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60c1ab4dae0b8deaa47fad198513af03d3f98214" translate="yes" xml:space="preserve">
          <source>Set x and y positions of handles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c34ce11b56681628f0c5f1fee55c82d37ae1f45b" translate="yes" xml:space="preserve">
          <source>Set z-axis tick labels. See &lt;a href=&quot;matplotlib.axes.axes.set_yticklabels#matplotlib.axes.Axes.set_yticklabels&quot;&gt;&lt;code&gt;matplotlib.axes.Axes.set_yticklabels()&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0050d376fc2e1a8f6328e178720c124928fcd9d" translate="yes" xml:space="preserve">
          <source>Set z-axis tick locations. See &lt;a href=&quot;matplotlib.axes.axes.set_yticks#matplotlib.axes.Axes.set_yticks&quot;&gt;&lt;code&gt;matplotlib.axes.Axes.set_yticks()&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="537ba27b0a0979bb2b5837c4b929919d27030429" translate="yes" xml:space="preserve">
          <source>Set zlabel. See doc for &lt;code&gt;set_ylabel()&lt;/code&gt; for description.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="162bc9c1017f4fbcf8fd753484f9d70d3a96203b" translate="yes" xml:space="preserve">
          <source>Set1</source>
          <target state="translated">Set1</target>
        </trans-unit>
        <trans-unit id="77d3f829315cf09d51b629e1280c8f51123c25d9" translate="yes" xml:space="preserve">
          <source>Set2</source>
          <target state="translated">Set2</target>
        </trans-unit>
        <trans-unit id="2da2b85b774b2d9b375384f6e94d8eb87234911c" translate="yes" xml:space="preserve">
          <source>Set3</source>
          <target state="translated">Set3</target>
        </trans-unit>
        <trans-unit id="3c0172b81ff41b38d348f8673358ab7cd22dbf17" translate="yes" xml:space="preserve">
          <source>Sets 3D vertices with path codes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4092abcbe41c54a96d3cc83241c01814f10e4f9b" translate="yes" xml:space="preserve">
          <source>Sets a flag to re-setup the writers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbf8e1e8546df4b8e971b20ad1129ae844c2214a" translate="yes" xml:space="preserve">
          <source>Sets and updates the &lt;code&gt;axis&lt;/code&gt; units.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf6f9ba1540f4553a5957e2746843db5446eb471" translate="yes" xml:space="preserve">
          <source>Sets fillstyle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0cbabcc83677d7645098622a6e58fd03e3eb6f2" translate="yes" xml:space="preserve">
          <source>Sets size thresholds for scientific notation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3826128d123d1fe0551b768e7910e712ec26f3db" translate="yes" xml:space="preserve">
          <source>Sets the Matplotlib's root logger and root logger handler level, creating the handler if it does not exist yet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="037775115b274a7dc8e0fd8e1cb1a45f5e05b9c4" translate="yes" xml:space="preserve">
          <source>Sets the calculation method for the z-order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65212dec379e17b5c77d0e5be78ff141f1af19e0" translate="yes" xml:space="preserve">
          <source>Sets the default axis ticks and labels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a1604787ed36103396c047b95025255cebfa7f1" translate="yes" xml:space="preserve">
          <source>Sets the event picker details for the line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd840ef390bd6605396befa3ff784c2e7c9cd469" translate="yes" xml:space="preserve">
          <source>Sets the location of theta's zero. (Calls set_theta_offset with the correct value in radians under the hood.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddfe209f41665bc37b7a93d9ab6b6fc4c26c4370" translate="yes" xml:space="preserve">
          <source>Sets the positions of the boxes. The ticks and limits are automatically set to match the positions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de9760592adf9011cc9fa0d15662892deb0a432" translate="yes" xml:space="preserve">
          <source>Sets the positions of the boxes. The ticks and limits are automatically set to match the positions. Defaults to &lt;code&gt;range(1, N+1)&lt;/code&gt; where N is the number of boxes to be drawn.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc31c99a98adf4784cc4a05e3240fd0227b6c867" translate="yes" xml:space="preserve">
          <source>Sets the positions of the violins. The ticks and limits are automatically set to match the positions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efb65498523df54e2dfef2f43824dbeb1295baeb" translate="yes" xml:space="preserve">
          <source>Sets the sketch parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f95a6efe1fcac60dba76460e46dd09f767b14bba" translate="yes" xml:space="preserve">
          <source>Sets the width of each box either with a scalar or a sequence. The default is 0.5, or &lt;code&gt;0.15*(distance between
extreme positions)&lt;/code&gt;, if that is smaller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b59505a8821bd38905d96906bda4695a6a3dff62" translate="yes" xml:space="preserve">
          <source>Sets the zorder of the boxplot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27d05d59d187a062668173302c55fc1394a4f3cc" translate="yes" xml:space="preserve">
          <source>Sets up axis ticks and labels treating data along this axis as dates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8085c74654b88980541b4cf2095a714f0e764afe" translate="yes" xml:space="preserve">
          <source>Sets up x-axis ticks and labels that treat the x data as dates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aaa9c0f7c6222a5dad7cbb2b8de990336181ab5" translate="yes" xml:space="preserve">
          <source>Sets up y-axis ticks and labels that treat the y data as dates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41b582001c9f6bce3743c21565876a257ae3c88f" translate="yes" xml:space="preserve">
          <source>Sets up z-axis ticks and labels that treat the z data as dates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70fe98654cd8bc7b2c5c44c4713cb3da0aa360bd" translate="yes" xml:space="preserve">
          <source>Setting &lt;em&gt;interpolate&lt;/em&gt; to &lt;em&gt;True&lt;/em&gt; will calculate the actual intersection point and extend the filled region up to this point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfea35114bf7f577ed6e17e9d8870cb5d974795a" translate="yes" xml:space="preserve">
          <source>Setting limits turns autoscaling off for the x-axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51ea8d9f76b64f8f1bf120f65e3a5d4d842bebf2" translate="yes" xml:space="preserve">
          <source>Setting limits turns autoscaling off for the y-axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09850e288d974469d293f0cc60941f1e8c43eb45" translate="yes" xml:space="preserve">
          <source>Setting the markevery property will only show markers at actual data points. When using float arguments to set the markevery property on irregularly spaced data, the markers will likely not appear evenly spaced because the actual data points do not coincide with the theoretical spacing between markers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8bada8b6696ed04ea630a7ab4546eb20d91cda0" translate="yes" xml:space="preserve">
          <source>Setting the property cycle for a single property:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d26570e65620d0ff4f5f09c5a41dd51fb028c7ac" translate="yes" xml:space="preserve">
          <source>Setting the property cycle for simultaneously cycling over multiple properties (e.g. red circle, green plus, blue cross):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe58c23545e2fe8f40a7671546093a78b3f8dcd" translate="yes" xml:space="preserve">
          <source>Setting this to &lt;code&gt;False&lt;/code&gt; ensures that the specified margins will be applied, even if the plot includes an image, for example, which would otherwise force a view limit to coincide with its data limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eb75a4eab11be7cdda035289b55460362c3e182" translate="yes" xml:space="preserve">
          <source>Setting tick labels from a list of values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92bc8af80ddc54deffa6efd927241d0eb7031f86" translate="yes" xml:space="preserve">
          <source>Shaded &amp;amp; power normalized rendering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03b25aae6f2df232de0c93b1a2eb906987d0dd82" translate="yes" xml:space="preserve">
          <source>Shading example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e9d77b0b4bdb50ce4067625cd76a09660cf4a21" translate="yes" xml:space="preserve">
          <source>Shaft width in arrow units; default depends on choice of units, above, and number of vectors; a typical starting value is about 0.005 times the width of the plot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6e02c204d33e6e841a89e1cda4a839ecb6a6352" translate="yes" xml:space="preserve">
          <source>Shape of grid in which to place axis. First entry is number of rows, second entry is number of columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dea7b2d04fb36f57a333fb5c8195e99d363dec09" translate="yes" xml:space="preserve">
          <source>Shape of marker used to display handle. See &lt;a href=&quot;_as_gen/matplotlib.pyplot.plot#matplotlib.pyplot.plot&quot;&gt;&lt;code&gt;matplotlib.pyplot.plot&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="740d9f6602d92eb19e78ae9cc60650a071dc01bb" translate="yes" xml:space="preserve">
          <source>Share the x or y &lt;a href=&quot;../axis_api#module-matplotlib.axis&quot;&gt;&lt;code&gt;axis&lt;/code&gt;&lt;/a&gt; with sharex and/or sharey. The axis will have the same limits, ticks, and scale as the axis of the shared axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f44fffd2a73769d19996230ce58b9c13a158920" translate="yes" xml:space="preserve">
          <source>Shared Axes (of which twinned Axes are a special case) impose restrictions on how aspect ratios can be imposed. For twinned Axes, use 'datalim'. For Axes that share both x and y, use 'box'. Otherwise, either 'datalim' or 'box' may be used. These limitations are partly a requirement to avoid over-specification, and partly a result of the particular implementation we are currently using, in which the adjustments for aspect ratios are done sequentially and independently on each Axes as it is drawn.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68999e2d91ee56e60f25fc6e8b117c89a8f70bd6" translate="yes" xml:space="preserve">
          <source>Shared Axis Demo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f89048598c272423031efb84afd551a24026aa" translate="yes" xml:space="preserve">
          <source>Sharing axis limits and views</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100dc85d21527fa7ca8a7400a056cd99ac7fda9d" translate="yes" xml:space="preserve">
          <source>Shortcut versions of the blended transform are provided for the case where both child transforms are affine, or one or the other is the identity transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f91dc2218971517a92d879b07a25482a2c4f3d54" translate="yes" xml:space="preserve">
          <source>Should always match the base used for &lt;a href=&quot;#matplotlib.ticker.LogLocator&quot;&gt;&lt;code&gt;LogLocator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9759cf8f73503701d10e9654433794d3a9fc5d51" translate="yes" xml:space="preserve">
          <source>Should be between 0 and 1, 0 being the bottom of the plot, 1 the top of the plot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d714c0bfb4d3f5621aed73ae7cfab97f6bd4ea3e" translate="yes" xml:space="preserve">
          <source>Should be between 0 and 1, 0 being the far left of the plot, 1 the far right of the plot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b8ae90e470a11c4d1a652f5a51951fd88c016ba" translate="yes" xml:space="preserve">
          <source>Show all figures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6161d67306aab48ee08016ca3e188b693e2c8c4" translate="yes" xml:space="preserve">
          <source>Show the arithmetic means.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="021ea3fc9b2c63120cd1a20c37ac5460fef607dc" translate="yes" xml:space="preserve">
          <source>Show the caps on the ends of whiskers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29319e99ceac23a00a952aa16d60e0b9c4f7d399" translate="yes" xml:space="preserve">
          <source>Show the central box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00efdc0d0e53a9b98d1be48029e8c5f3fbd8f561" translate="yes" xml:space="preserve">
          <source>Show the outliers beyond the caps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24f143eea552ece228383bc7936611323dfcbc17" translate="yes" xml:space="preserve">
          <source>Shrink font size until the text fits into the cell width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b79d5379499bf423fb1e54054d8b4350ba4f5858" translate="yes" xml:space="preserve">
          <source>Shrinking factor of the tail and head of the arrow respectively</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0fd48653b2c79f3ba8989b871f3668fdb289695" translate="yes" xml:space="preserve">
          <source>Shrinks one level smaller. There are only three levels of sizes, after which things will no longer get smaller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d159d645624cac661251e6a292b831633efac511" translate="yes" xml:space="preserve">
          <source>Significant effort went into bringing axes3d to feature-parity with regular axes objects for version 1.1.0. However, more work remains. Please report any functions that do not behave as expected as a bug. In addition, help and patches would be greatly appreciated!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca61152938fe3e61151f534bbd056ce3983def57" translate="yes" xml:space="preserve">
          <source>Silent list of individual patches used to create the histogram or list of such list if multiple input datasets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1791c047b48613e55200f8efbd3a5571110d37b5" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;matplotlib.axes.axes.plot#matplotlib.axes.Axes.plot&quot;&gt;&lt;code&gt;plot&lt;/code&gt;&lt;/a&gt;, this plots &lt;em&gt;y&lt;/em&gt; vs. &lt;em&gt;x&lt;/em&gt; as lines or markers. However, the axis labels are formatted as dates depending on &lt;em&gt;xdate&lt;/em&gt; and &lt;em&gt;ydate&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fca625f4077ff147c984e83d3c7c42cbbe39e17" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;matplotlib.pyplot.plot#matplotlib.pyplot.plot&quot;&gt;&lt;code&gt;plot&lt;/code&gt;&lt;/a&gt;, this plots &lt;em&gt;y&lt;/em&gt; vs. &lt;em&gt;x&lt;/em&gt; as lines or markers. However, the axis labels are formatted as dates depending on &lt;em&gt;xdate&lt;/em&gt; and &lt;em&gt;ydate&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de72ea9e60d3b0389fb7873c1d21268b088fa6d4" translate="yes" xml:space="preserve">
          <source>Simple</source>
          <target state="translated">Simple</target>
        </trans-unit>
        <trans-unit id="f0e6c474a4d2fba99a3d14d5849c7f7b82a029c0" translate="yes" xml:space="preserve">
          <source>Simple Anchored Artists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44bd6fc4c1f00e67e167d6716da6b8a7710aef0f" translate="yes" xml:space="preserve">
          <source>Simple Annotate01</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdda885cfdf9b9cadd28deb824ccf6d6f6d67075" translate="yes" xml:space="preserve">
          <source>Simple Axes Divider 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e43410dfea5ab8ca034a5e2ea23bd7bcce708df0" translate="yes" xml:space="preserve">
          <source>Simple Axes Divider 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdeb233125a05b54c857bbf3e840ebaf3f74e6e5" translate="yes" xml:space="preserve">
          <source>Simple Axes Divider 3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5081f1a8429d07ac933a88459f96229a6a2efebd" translate="yes" xml:space="preserve">
          <source>Simple Axis Direction01</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="465a93e5ca854f0d566e8c0282dff033402af87c" translate="yes" xml:space="preserve">
          <source>Simple Axis Direction03</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cde717f20dd22e9b6f4a862bbe19c2a026ce705" translate="yes" xml:space="preserve">
          <source>Simple Axis Pad</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96404438cdaeb7be8cfbaaecedfc242502bd07d0" translate="yes" xml:space="preserve">
          <source>Simple Axisartist1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d64667520eae1c64555778f5e1bdda39e14af7" translate="yes" xml:space="preserve">
          <source>Simple Axisline</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac5886f6a86f8497fc3d8ece64db56fd4388cd7d" translate="yes" xml:space="preserve">
          <source>Simple Axisline2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48818e89a260942c198eb5c02d6c6febb7c83e0c" translate="yes" xml:space="preserve">
          <source>Simple Axisline3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c82d0186bff9425d62c8b3c1d0d38a0cd2320c0" translate="yes" xml:space="preserve">
          <source>Simple Axisline4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95abefc9a060d7dfe557a31f0bddcf453400830" translate="yes" xml:space="preserve">
          <source>Simple Colorbar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f0c3ec5fd73eb222a6a48f20619e0a081c100f6" translate="yes" xml:space="preserve">
          <source>Simple ImageGrid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf4964f1cb9953e345a0798177c93d1c40aabdb6" translate="yes" xml:space="preserve">
          <source>Simple ImageGrid 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="116f745b583b651c92a13a91fab99e48959037c0" translate="yes" xml:space="preserve">
          <source>Simple Legend01</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b8eb1e768bed033b66bce23d17626005be2a4d4" translate="yes" xml:space="preserve">
          <source>Simple Legend02</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f815b93d2e64225b0f55585bb93bd712cde8eec0" translate="yes" xml:space="preserve">
          <source>Simple Plot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2130ddebaddf8102df0b3cb76ae415f3a420b22d" translate="yes" xml:space="preserve">
          <source>Simple RGB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c011c8af744b32273ce173dd86ddce988fabc690" translate="yes" xml:space="preserve">
          <source>Simple axes labels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="477cf1bb33ef3a55033c452f014bc498f2adc17e" translate="yes" xml:space="preserve">
          <source>Simple base class to generate a show() callable in backends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="028b8d7fad5a2e90f8a113c88817e72e2af87924" translate="yes" xml:space="preserve">
          <source>Simple fixed size with absolute part = &lt;em&gt;fixed_size&lt;/em&gt; and relative part = 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d4459162ddf89cec031e3971a78756fe0657bfd" translate="yes" xml:space="preserve">
          <source>Simple namespace for cursor reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0401b35e11cde0ea9ddc4c5f276ec821b61634c2" translate="yes" xml:space="preserve">
          <source>Simple scaled(?) size with absolute part = 0 and relative part = &lt;em&gt;scalable_size&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71c5c351f5de3d122a34cafeab1950fb577eeefd" translate="yes" xml:space="preserve">
          <source>Simple stateless tool</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c9d5c3f498921a6fa4d7c249df993a3b7e54940" translate="yes" xml:space="preserve">
          <source>Since heavily importing into the global namespace may result in unexpected behavior, the use of pylab is strongly discouraged. Use &lt;a href=&quot;_as_gen/matplotlib.pyplot#module-matplotlib.pyplot&quot;&gt;&lt;code&gt;matplotlib.pyplot&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="602d469af0e37d4689505636bdb7c475a9e3c489" translate="yes" xml:space="preserve">
          <source>Since the values close to zero tend toward infinity, there is a need to have a range around zero that is linear. The parameter &lt;em&gt;linthresh&lt;/em&gt; allows the user to specify the size of this range (-&lt;em&gt;linthresh&lt;/em&gt;, &lt;em&gt;linthresh&lt;/em&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b622a2adba4324b5876f9fbf8b823c9fdc533ec" translate="yes" xml:space="preserve">
          <source>Size in points or relative size e.g., 'smaller', 'x-large'. See &lt;a href=&quot;../text_api#matplotlib.text.Text.set_size&quot;&gt;&lt;code&gt;Text.set_size&lt;/code&gt;&lt;/a&gt; for accepted string values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90385fab8ae865a9293c44e0559683c5bbb0277d" translate="yes" xml:space="preserve">
          <source>Size in points or relative size e.g., 'smaller', 'x-large'. See &lt;a href=&quot;text_api#matplotlib.text.Text.set_size&quot;&gt;&lt;code&gt;Text.set_size&lt;/code&gt;&lt;/a&gt; for accepted string values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b2288c85ab36379a82e2596a91d190b506aa66c" translate="yes" xml:space="preserve">
          <source>Size of label strings, given in coordinates of &lt;em&gt;transform&lt;/em&gt;. Defaults to 0.08.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ab26ddf5d33f5233fd7aa7324fb417c53d5faee" translate="yes" xml:space="preserve">
          <source>Size of the font in Adobe points, converted from the slightly smaller TeX points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cf26522ce14a0fd777313522793fb9ddee70522" translate="yes" xml:space="preserve">
          <source>Size of the inset axes to create. If a float is provided, it is the size in inches, e.g. &lt;em&gt;width=1.3&lt;/em&gt;. If a string is provided, it is the size in relative units, e.g. &lt;em&gt;width='40%'&lt;/em&gt;. By default, i.e. if neither &lt;em&gt;bbox_to_anchor&lt;/em&gt; nor &lt;em&gt;bbox_transform&lt;/em&gt; are specified, those are relative to the parent_axes. Otherwise they are to be understood relative to the bounding box provided via &lt;em&gt;bbox_to_anchor&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dfa79a2837e8a0991dab97762cba2e718a6e068" translate="yes" xml:space="preserve">
          <source>Size whose absolute part is the largest height of the given &lt;em&gt;artist_list&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d23e03b8041b81d724c8ce0d71cf64631d4ae45" translate="yes" xml:space="preserve">
          <source>Size whose absolute part is the largest width (or height) of the given &lt;em&gt;artist_list&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b48e889bdb0ac7f746898b5e25c9135c5da4ed1" translate="yes" xml:space="preserve">
          <source>Size whose absolute part is the largest width of the given &lt;em&gt;artist_list&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="048e0c371d43b5c8e7734acd641bd432fddb95be" translate="yes" xml:space="preserve">
          <source>SkewT-logP diagram: using transforms and custom projections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="189caceee7b912d0a2918a1bcf124b075551c4b8" translate="yes" xml:space="preserve">
          <source>Slider Demo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8c94be3b68ecfd95700915c25063748d2fea9f8" translate="yes" xml:space="preserve">
          <source>Slider label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="469ddb05d020639216c5024b23b7d9f51b23287b" translate="yes" xml:space="preserve">
          <source>Slider value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ed0a8d335fc794c017d6857be5c83f7e4152539" translate="yes" xml:space="preserve">
          <source>Snapping aligns positions with the pixel grid, which results in clearer images. For example, if a black line of 1px width was defined at a position in between two pixels, the resulting image would contain the interpolated value of that line in the pixel grid, which would be a grey value on both adjacent pixel positions. In contrast, snapping will move the line to the nearest integer pixel value, so that the resulting image will really contain a 1px wide black line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71b08e6bfd495dfaaf13f0ef642f1a17d69fcfa" translate="yes" xml:space="preserve">
          <source>Snapping is currently only supported by the Agg and MacOSX backends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="587f99402c6b67d9378be842f385b03821b6789d" translate="yes" xml:space="preserve">
          <source>Software: Software used to create the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dde7d6b59ed02cc84924c25c65a943f8337009c7" translate="yes" xml:space="preserve">
          <source>Solarized Light stylesheet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5506c28dd707697a78a47c8b1d7457cf9abc9f2" translate="yes" xml:space="preserve">
          <source>Some behavior of Path objects can be controlled by rcParams. See the rcParams whose keys contain 'path.'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6993e5175d601dd868633bec3b631e91c61eb0ee" translate="yes" xml:space="preserve">
          <source>Some classes may want to replace a hyphen for minus with the proper unicode symbol (U+2212) for typographical correctness. The default is to not replace it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ecdc4c3827d3777a3a847ca3e1d6a2225d390aa" translate="yes" xml:space="preserve">
          <source>Some interpolation methods require an additional radius parameter, which can be set by &lt;em&gt;filterrad&lt;/em&gt;. Additionally, the antigrain image resize filter is controlled by the parameter &lt;em&gt;filternorm&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3b4fda15078968d8ecccab244173e3c492baf17" translate="yes" xml:space="preserve">
          <source>Some simple examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f699b197629fb2de20521a7c23ccf04f2cda3ce" translate="yes" xml:space="preserve">
          <source>Some widgets, like the cursor, draw onto the canvas, and this is not desirable under all circumstances, like when the toolbar is in zoom-to-rect mode and drawing a rectangle. To avoid this, a widget can acquire a canvas' lock with &lt;code&gt;canvas.widgetlock(widget)&lt;/code&gt; before drawing on the canvas; this will prevent other widgets from doing so at the same time (if they also try to acquire the lock first).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bdca9a873af0a695e0bc5d3b4e78854e360a8a7" translate="yes" xml:space="preserve">
          <source>Source of data to pass &lt;em&gt;func&lt;/em&gt; and each frame of the animation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b02ddedaf744e6cac30766b00f188a6fc168694a" translate="yes" xml:space="preserve">
          <source>Source: Device used to create the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ada52d888ccf16d2711b8a6377768a782af5c30e" translate="yes" xml:space="preserve">
          <source>Sources:</source>
          <target state="translated">Sources:</target>
        </trans-unit>
        <trans-unit id="a822d2b83c8c37e7950ab59e9b7776b8581d7975" translate="yes" xml:space="preserve">
          <source>Space in pixels to leave on each side of label when placing inline. Defaults to 5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb0f3553e007ff7932570ca87877b8597b5b97f8" translate="yes" xml:space="preserve">
          <source>Space in pixels to leave on each side of label when placing inline. This spacing will be exact for labels at locations where the contour is straight, less so for labels on curved contours.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb4311362911eeb79ee68715884948f2ba730eb2" translate="yes" xml:space="preserve">
          <source>Space ticks evenly from min to max.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c382451da5850b62828af5c00de67af947165d7" translate="yes" xml:space="preserve">
          <source>Space ticks logarithmically from min to max.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b41006e2d1ec5803bcc0979f1a3117b8997ff7a" translate="yes" xml:space="preserve">
          <source>Spacing between items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b090ad83d04fa7bca811e1bab3528e2d4315a07" translate="yes" xml:space="preserve">
          <source>Spacing in points from the axes bounding box including ticks and tick labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d09bb5adce0c008844cd9b87fc910ad2f73e0072" translate="yes" xml:space="preserve">
          <source>Spacing of the dates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2526e913e72e995bd10815c81669914e5b73890f" translate="yes" xml:space="preserve">
          <source>Span Selector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80470c638f37e02dcf3cd4b20031922888a394c7" translate="yes" xml:space="preserve">
          <source>Spans</source>
          <target state="translated">Spans</target>
        </trans-unit>
        <trans-unit id="6e7ab42fac59cc9446720b216d58f8fbed1c84d2" translate="yes" xml:space="preserve">
          <source>Specialization of the &lt;a href=&quot;../cbook_api#matplotlib.cbook.Stack&quot;&gt;&lt;code&gt;Stack&lt;/code&gt;&lt;/a&gt; to handle all tracking of &lt;a href=&quot;../axes_api#matplotlib.axes.Axes&quot;&gt;&lt;code&gt;Axes&lt;/code&gt;&lt;/a&gt; in a &lt;a href=&quot;matplotlib.figure.figure#matplotlib.figure.Figure&quot;&gt;&lt;code&gt;Figure&lt;/code&gt;&lt;/a&gt;. This stack stores &lt;code&gt;key, (ind, axes)&lt;/code&gt; pairs, where:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a9db7a570758ca96c43dc01eae77409ff40d78a" translate="yes" xml:space="preserve">
          <source>Specialization of the &lt;a href=&quot;cbook_api#matplotlib.cbook.Stack&quot;&gt;&lt;code&gt;Stack&lt;/code&gt;&lt;/a&gt; to handle all tracking of &lt;a href=&quot;axes_api#matplotlib.axes.Axes&quot;&gt;&lt;code&gt;Axes&lt;/code&gt;&lt;/a&gt; in a &lt;a href=&quot;_as_gen/matplotlib.figure.figure#matplotlib.figure.Figure&quot;&gt;&lt;code&gt;Figure&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3051595346ba6a66945b7c46a1a8cea0212fbbe3" translate="yes" xml:space="preserve">
          <source>Specific lines can be excluded from the automatic legend element selection by defining a label starting with an underscore. This is default for all artists, so calling &lt;a href=&quot;#matplotlib.axes.Axes.legend&quot;&gt;&lt;code&gt;Axes.legend&lt;/code&gt;&lt;/a&gt; without any arguments and without setting the labels manually will result in no legend being drawn.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8a5ec4a16a739fe77753297fbfb19ec3e78b07b" translate="yes" xml:space="preserve">
          <source>Specific lines can be excluded from the automatic legend element selection by defining a label starting with an underscore. This is default for all artists, so calling &lt;code&gt;Axes.legend&lt;/code&gt; without any arguments and without setting the labels manually will result in no legend being drawn.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e9322fcdc188663df36994c34afc9feae531921" translate="yes" xml:space="preserve">
          <source>Specific margin values for the x-axis and y-axis, respectively. These cannot be used with positional arguments, but can be used individually to alter on e.g., only the y-axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24213aaa8fc0f01e34dac1019e63756a41e2bbaa" translate="yes" xml:space="preserve">
          <source>Specifically, this returns the array &lt;code&gt;[[x0, y0], [x0, y1], [x1, y0], [x1, y1]]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c37b682f9115f0511be5acae0a4fce5e5ba61180" translate="yes" xml:space="preserve">
          <source>Specifies the color of all parts of the barb except for the flags. This parameter is analogous to the &lt;em&gt;edgecolor&lt;/em&gt; parameter for polygons, which can be used instead. However this parameter will override facecolor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="602e017fd5d4e593656b1ab1bb3281516375b250" translate="yes" xml:space="preserve">
          <source>Specifies the color of any flags on the barb. This parameter is analogous to the &lt;em&gt;facecolor&lt;/em&gt; parameter for polygons, which can be used instead. However, this parameter will override facecolor. If this is not set (and &lt;em&gt;C&lt;/em&gt; has not either) then &lt;em&gt;flagcolor&lt;/em&gt; will be set to match &lt;em&gt;barbcolor&lt;/em&gt; so that the barb has a uniform color. If &lt;em&gt;C&lt;/em&gt; has been set, &lt;em&gt;flagcolor&lt;/em&gt; has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="282a57109643781910e1032dd14783c5c14f0416" translate="yes" xml:space="preserve">
          <source>Specifies the detrend algorithm to use. 'default' is 'mean', which is the same as &lt;a href=&quot;#matplotlib.mlab.detrend_mean&quot;&gt;&lt;code&gt;detrend_mean&lt;/code&gt;&lt;/a&gt;. 'constant' is the same. 'linear' is the same as &lt;a href=&quot;#matplotlib.mlab.detrend_linear&quot;&gt;&lt;code&gt;detrend_linear&lt;/code&gt;&lt;/a&gt;. 'none' is the same as &lt;a href=&quot;#matplotlib.mlab.detrend_none&quot;&gt;&lt;code&gt;detrend_none&lt;/code&gt;&lt;/a&gt;. The default is 'mean'. See the corresponding functions for more details regarding the algorithms. Can also be a function that carries out the detrend operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="604a2a28128557cfa2d61e5f327c512635348732" translate="yes" xml:space="preserve">
          <source>Specifies the geometry of the grid that a subplot can be placed in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8e6edd6c1145fb5b41fe58931637ff5d53e7c28" translate="yes" xml:space="preserve">
          <source>Specifies the location of a subplot in a &lt;a href=&quot;_as_gen/matplotlib.gridspec.gridspec#matplotlib.gridspec.GridSpec&quot;&gt;&lt;code&gt;GridSpec&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="767fec2bfc47526466001f0c7128463f9df49eee" translate="yes" xml:space="preserve">
          <source>Specifies the location of a subplot in a &lt;a href=&quot;matplotlib.gridspec.gridspec#matplotlib.gridspec.GridSpec&quot;&gt;&lt;code&gt;GridSpec&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b31370d3fcd6d37b9607911b41ae0f952d0b140c" translate="yes" xml:space="preserve">
          <source>Specifies the number of bits used per second in the compressed movie, in kilobits per second. A higher number means a higher quality movie, but at the cost of increased file size. If &lt;code&gt;None&lt;/code&gt;, defaults to &lt;code&gt;&lt;a href=&quot;https://matplotlib.org/3.1.1/tutorials/introductory/customizing.html#matplotlib-rcparams&quot;&gt;rcParams[&quot;animation.bitrate&quot;]&lt;/a&gt;&lt;/code&gt; = -1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a7454a4d980ece354041f2ad4b82ea346401ce8" translate="yes" xml:space="preserve">
          <source>Specifies the offset to apply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f90be10fb59e76a8e920b30b5f01ae4857ab931" translate="yes" xml:space="preserve">
          <source>Specifies the style of the box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c4c7a95f477ad1e95b6a246cc794f0b8cfbc550" translate="yes" xml:space="preserve">
          <source>Specifies the style of the caps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec173a904fe5ecf1a044357366ed106471d57d77" translate="yes" xml:space="preserve">
          <source>Specifies the style of the fliers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c62dfdc85e58769f89d055f39695a519724acb48" translate="yes" xml:space="preserve">
          <source>Specifies the style of the mean.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c66f90cc8a2c0e95a0069000097b21296e036c55" translate="yes" xml:space="preserve">
          <source>Specifies the style of the median.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e73c68b44867f374644266034450a089561f8d3" translate="yes" xml:space="preserve">
          <source>Specifies the style of the whiskers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcac8d69f57f93df259e9c772466c209c88dc1b2" translate="yes" xml:space="preserve">
          <source>Specifies what figure is saved to file. If not specified, the active figure is saved. If a &lt;a href=&quot;_as_gen/matplotlib.figure.figure#matplotlib.figure.Figure&quot;&gt;&lt;code&gt;Figure&lt;/code&gt;&lt;/a&gt; instance is provided, this figure is saved. If an int is specified, the figure instance to save is looked up by number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6815f843c3497f60c2b9198af85c66b1757fb0c9" translate="yes" xml:space="preserve">
          <source>Specifies whether the resulting density values should be scaled by the scaling frequency, which gives density in units of Hz^-1. This allows for integration over the returned frequency values. The default is True for MATLAB compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc908fa224121e18380653b9ccb9e0ba0655423c" translate="yes" xml:space="preserve">
          <source>Specifies whether to bootstrap the confidence intervals around the median for notched boxplots. If &lt;code&gt;bootstrap&lt;/code&gt; is None, no bootstrapping is performed, and notches are calculated using a Gaussian-based asymptotic approximation (see McGill, R., Tukey, J.W., and Larsen, W.A., 1978, and Kendall and Stuart, 1967). Otherwise, bootstrap specifies the number of times to bootstrap the median to determine its 95% confidence intervals. Values between 1000 and 10000 are recommended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="668d97987e88f8ce970831463746be8a6ef76430" translate="yes" xml:space="preserve">
          <source>Specifies which sides of the spectrum to return. Default gives the default behavior, which returns one-sided for real data and both for complex data. 'onesided' forces the return of a one-sided spectrum, while 'twosided' forces two-sided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6456e6d61b6051fe1930b52ec8168c61d3b3a8d" translate="yes" xml:space="preserve">
          <source>Specify an offset (in points) from the &lt;em&gt;xy&lt;/em&gt; value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed582c2c07ee98b3910166e60ba9ee4fbea87046" translate="yes" xml:space="preserve">
          <source>Specify fractions direction, clockwise or counterclockwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4e873d87e1c1fd8c328c8a26d0c5ceac25474b2" translate="yes" xml:space="preserve">
          <source>Specify the azimuth (measured clockwise from south) and altitude (measured up from the plane of the surface) of the light source in degrees.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d897f7f17dff281fa9089403f60b40e48ae80161" translate="yes" xml:space="preserve">
          <source>Specifying Colors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58be3adcd74a60e93b7c464418a2615c708b86b7" translate="yes" xml:space="preserve">
          <source>Specifying any margin changes only the autoscaling; for example, if &lt;em&gt;xmargin&lt;/em&gt; is not None, then &lt;em&gt;xmargin&lt;/em&gt; times the X data interval will be added to each end of that interval before it is used in autoscaling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6194fba96077bb6dfd9a11dadcc5ecf690f9c9e" translate="yes" xml:space="preserve">
          <source>Spectral</source>
          <target state="translated">Spectral</target>
        </trans-unit>
        <trans-unit id="c5d326cdecfeed257b6b7e4c21e7e2fc14beb381" translate="yes" xml:space="preserve">
          <source>Spectral functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1817b45dd5d0b39815eb670cbc08cc0fc6dc453b" translate="yes" xml:space="preserve">
          <source>Spectrogram (spectrum over segments of time)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db6e1afd3f6a80a6ee772582ea3ff0ec9dcadff" translate="yes" xml:space="preserve">
          <source>Spectrogram Demo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1766596eb5e3c735b42b1850ead4d1c81f28c135" translate="yes" xml:space="preserve">
          <source>Spectrum Representations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ec22a9e31b0e5c3592a0a1cc87bb314e1b6869d" translate="yes" xml:space="preserve">
          <source>Spine Placement Demo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ea19be7826261b12bbfd18114391b0b4b43bc88" translate="yes" xml:space="preserve">
          <source>Spine position is specified by a 2 tuple of (position type, amount). The position types are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8370a6e2b02857292e915e36316bbe1da4a23da9" translate="yes" xml:space="preserve">
          <source>Spines</source>
          <target state="translated">Spines</target>
        </trans-unit>
        <trans-unit id="7b0d903266d7d73fa328d0dc0299ad02a00af9d1" translate="yes" xml:space="preserve">
          <source>Spines are subclasses of class:&lt;a href=&quot;_as_gen/matplotlib.patches.patch#matplotlib.patches.Patch&quot;&gt;&lt;code&gt;Patch&lt;/code&gt;&lt;/a&gt;, and inherit much of their behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7917e69371ebabba4693e24fb528f94e853ecb42" translate="yes" xml:space="preserve">
          <source>Spines are the lines connecting the axis tick marks and noting the boundaries of the data area. They can be placed at arbitrary positions. See function:&lt;a href=&quot;#matplotlib.spines.Spine.set_position&quot;&gt;&lt;code&gt;set_position&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8e0b007e2fed3581251b5d1fb19aca3a75e4934" translate="yes" xml:space="preserve">
          <source>Spines draw a line, a circle, or an arc depending if function:&lt;a href=&quot;#matplotlib.spines.Spine.set_patch_line&quot;&gt;&lt;code&gt;set_patch_line&lt;/code&gt;&lt;/a&gt;, function:&lt;a href=&quot;#matplotlib.spines.Spine.set_patch_circle&quot;&gt;&lt;code&gt;set_patch_circle&lt;/code&gt;&lt;/a&gt;, or function:&lt;a href=&quot;#matplotlib.spines.Spine.set_patch_arc&quot;&gt;&lt;code&gt;set_patch_arc&lt;/code&gt;&lt;/a&gt; has been called. Line-like is the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dc3da75beea3ec60cea8a005810d45c8e1e89ce" translate="yes" xml:space="preserve">
          <source>Spy Demos</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82810cb97184cf542141f811b63d90bc5de31d1b" translate="yes" xml:space="preserve">
          <source>Square</source>
          <target state="translated">Square</target>
        </trans-unit>
        <trans-unit id="94fc12d82b716291d6290b1cd2cd6688252d4fa0" translate="yes" xml:space="preserve">
          <source>Square plot; similar to 'scaled', but initially forcing &lt;code&gt;xmax-xmin = ymax-ymin&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fce023153b094252a728eb86623d16539703a55a" translate="yes" xml:space="preserve">
          <source>Stack of elements with a movable cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d128a95f3e5d1bd2d1bbd9da61216039dc7ae637" translate="yes" xml:space="preserve">
          <source>Stacked Bar Graph</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96c7808eb2b3b966784c47d5eaa3b42cb8fc66f0" translate="yes" xml:space="preserve">
          <source>Stackplot Demo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e4931f2f828346609c982522137ee067e3edcf3" translate="yes" xml:space="preserve">
          <source>Start a blocking event loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f4666740a50e0a0195ae34af31d7369b52ddfa" translate="yes" xml:space="preserve">
          <source>Start filtering. It simply create a new canvas (the old one is saved).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15869e28daa34679d50f603d4da1572aefe2eb45" translate="yes" xml:space="preserve">
          <source>Start the timer object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a929a5b3f629563f7678ced92652df3fc26bfc7" translate="yes" xml:space="preserve">
          <source>Starting and ending angles of the arc in degrees. These values are relative to &lt;em&gt;angle&lt;/em&gt;, e.g. if &lt;em&gt;angle&lt;/em&gt; = 45 and &lt;em&gt;theta1&lt;/em&gt; = 90 the absolute starting angle is 135. Default &lt;em&gt;theta1&lt;/em&gt; = 0, &lt;em&gt;theta2&lt;/em&gt; = 360, i.e. a complete ellipse. The arc is drawn in the counterclockwise direction. Angles greater than or equal to 360, or smaller than 0, are represented by an equivalent angle in the range [0, 360), by taking the input value mod 360.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0075b42698bb0731d01f59cb171d13186bf6e77e" translate="yes" xml:space="preserve">
          <source>State of the toggled tool</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ce883411838720923a3d8af4e103a5728483409" translate="yes" xml:space="preserve">
          <source>States are pushed and popped from a stack as necessary, and the &quot;current&quot; state is always at the top of the stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d07cb8eb439bcc771934f39bd40df8e629028fbf" translate="yes" xml:space="preserve">
          <source>Static method; factory function for generating a smoothly-varying LinearSegmentedColormap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2086b21f8f49274138c38d476bee317a84a8aecc" translate="yes" xml:space="preserve">
          <source>Statistics</source>
          <target state="translated">Statistics</target>
        </trans-unit>
        <trans-unit id="0c5b6a0647af537f1a81d186b1b1e6bbf4f8f25e" translate="yes" xml:space="preserve">
          <source>Stem Plot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="785d01d56727e288612501376058ce404c151179" translate="yes" xml:space="preserve">
          <source>Step Demo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11eb2bbc66979b5619b903eefe72ba2fd1b70cd4" translate="yes" xml:space="preserve">
          <source>Step size for extending contour.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28711ab1f8e0a2de32da5e732816d7ffea04c492" translate="yes" xml:space="preserve">
          <source>Steve Chaplin and others</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="109628db9e06484f4a943754761446570ee1f6d2" translate="yes" xml:space="preserve">
          <source>Stop the current blocking event loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed06e44278f83c0a1aecdacd96dfd63a42d2c38" translate="yes" xml:space="preserve">
          <source>Stop the interaction and return the points added so far.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff5d37883d16d24c2df2e9c9f30c08384e9ab1e" translate="yes" xml:space="preserve">
          <source>Stop the timer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f37a17380125cd38368eb05b5afc7e362d4baa8" translate="yes" xml:space="preserve">
          <source>Store a set of contour lines or filled regions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dc804f86369a49cce795205949728d2a9978a89" translate="yes" xml:space="preserve">
          <source>Store information to write a mathtext rendering to the Cairo backend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c400b4b5731b6dfda9987827f2492682a3c7520" translate="yes" xml:space="preserve">
          <source>Store information to write a mathtext rendering to the PDF backend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0554381590f1132e5e44d15d59b07fd3b7108bc9" translate="yes" xml:space="preserve">
          <source>Store information to write a mathtext rendering to the PostScript backend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5d242a58a215689cbe5907a9cf8d44f38040bc8" translate="yes" xml:space="preserve">
          <source>Store information to write a mathtext rendering to the SVG backend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7220c61679abae04169c17ddc876651c1b13d027" translate="yes" xml:space="preserve">
          <source>Store information to write a mathtext rendering to the text path machinery.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6870f59180a1097b5c1a222c91b33dcf3ad80f67" translate="yes" xml:space="preserve">
          <source>Store verbatim PDF command content for later inclusion in the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c144c58d68ba52ae58a477754cc15037ef323d" translate="yes" xml:space="preserve">
          <source>Stores list of (func, args, kwargs) tuples that will be called upon timer events. This list can be manipulated directly, or the functions &lt;a href=&quot;#matplotlib.backend_bases.TimerBase.add_callback&quot;&gt;&lt;code&gt;add_callback&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#matplotlib.backend_bases.TimerBase.remove_callback&quot;&gt;&lt;code&gt;remove_callback&lt;/code&gt;&lt;/a&gt; can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75788e5e0df531749171049ec8b8eab2d782c744" translate="yes" xml:space="preserve">
          <source>Stores the state of the parser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1617355810adc253e5a6d3166d9a5d0b8172c772" translate="yes" xml:space="preserve">
          <source>Straight (unassociated) alpha: R, G, and B channels represent the color of the pixel, disregarding its opacity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b63a1f3a4096c69d1ceb47bd4074d5d4f60f25a8" translate="yes" xml:space="preserve">
          <source>Streamplot</source>
          <target state="translated">Streamplot</target>
        </trans-unit>
        <trans-unit id="48ace8f442f3d7703a18fe23a0403ef941933257" translate="yes" xml:space="preserve">
          <source>String representation of the data at every tick</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba9554f39e2add59baace4f3d07a9349dcc748b" translate="yes" xml:space="preserve">
          <source>String to identify the colormap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b1c75f403cdb943e5c23f92217220cde8c3137" translate="yes" xml:space="preserve">
          <source>String, or sequence of strings to match multiple datasets. Bar charts yield multiple patches per dataset, but only the first gets the label, so that the legend command will work as expected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee98bbb93b1d8f49996127ce4c688c05bf529c0b" translate="yes" xml:space="preserve">
          <source>Style sheets reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40cb231193ba0eb3d3d494a5b257538072bb0860" translate="yes" xml:space="preserve">
          <source>Style-blacklisted rc params (defined in &lt;code&gt;matplotlib.style.core.STYLE_BLACKLIST&lt;/code&gt;) are not updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42e3bf53bff3d7a2d2fc22b58b7f5073c9bc1b00" translate="yes" xml:space="preserve">
          <source>Styling with cycler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31c8c13da076fd1a18d3ea1a163027ae0b958a85" translate="yes" xml:space="preserve">
          <source>Subclass must override mainloop() method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75d38f22d55540fb8be5d657e9ff05c543d5d160" translate="yes" xml:space="preserve">
          <source>Subclasses can override the method and return arbitrary data. However, when doing so, they must ensure that &lt;a href=&quot;#matplotlib.collections.AsteriskPolygonCollection.format_cursor_data&quot;&gt;&lt;code&gt;format_cursor_data&lt;/code&gt;&lt;/a&gt; can convert the data to a string representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67e08cbade8033a4e2ef1f7999e3532cdb94c2fe" translate="yes" xml:space="preserve">
          <source>Subclasses can override the method and return arbitrary data. However, when doing so, they must ensure that &lt;a href=&quot;#matplotlib.collections.BrokenBarHCollection.format_cursor_data&quot;&gt;&lt;code&gt;format_cursor_data&lt;/code&gt;&lt;/a&gt; can convert the data to a string representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce475541b655278340a96afe2f27b6fa35f69d79" translate="yes" xml:space="preserve">
          <source>Subclasses can override the method and return arbitrary data. However, when doing so, they must ensure that &lt;a href=&quot;#matplotlib.collections.CircleCollection.format_cursor_data&quot;&gt;&lt;code&gt;format_cursor_data&lt;/code&gt;&lt;/a&gt; can convert the data to a string representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e8e5644e70b4bcaf9568d32fb58d1ff6925217d" translate="yes" xml:space="preserve">
          <source>Subclasses can override the method and return arbitrary data. However, when doing so, they must ensure that &lt;a href=&quot;#matplotlib.collections.Collection.format_cursor_data&quot;&gt;&lt;code&gt;format_cursor_data&lt;/code&gt;&lt;/a&gt; can convert the data to a string representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dba0a40c80743fbe8099bdc64d9a7cd54522dd5" translate="yes" xml:space="preserve">
          <source>Subclasses can override the method and return arbitrary data. However, when doing so, they must ensure that &lt;a href=&quot;#matplotlib.collections.EllipseCollection.format_cursor_data&quot;&gt;&lt;code&gt;format_cursor_data&lt;/code&gt;&lt;/a&gt; can convert the data to a string representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e068088ab248e7c5a0244485f79bca2f7e77903" translate="yes" xml:space="preserve">
          <source>Subclasses can override the method and return arbitrary data. However, when doing so, they must ensure that &lt;a href=&quot;#matplotlib.collections.EventCollection.format_cursor_data&quot;&gt;&lt;code&gt;format_cursor_data&lt;/code&gt;&lt;/a&gt; can convert the data to a string representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a639680970506f076c81d246a9d2693778a4f33d" translate="yes" xml:space="preserve">
          <source>Subclasses can override the method and return arbitrary data. However, when doing so, they must ensure that &lt;a href=&quot;#matplotlib.collections.LineCollection.format_cursor_data&quot;&gt;&lt;code&gt;format_cursor_data&lt;/code&gt;&lt;/a&gt; can convert the data to a string representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a1acf9a70552423e68f275c94015ae777a10811" translate="yes" xml:space="preserve">
          <source>Subclasses can override the method and return arbitrary data. However, when doing so, they must ensure that &lt;a href=&quot;#matplotlib.collections.PatchCollection.format_cursor_data&quot;&gt;&lt;code&gt;format_cursor_data&lt;/code&gt;&lt;/a&gt; can convert the data to a string representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b7f227359c30dec3d25c7949e45630214115c29" translate="yes" xml:space="preserve">
          <source>Subclasses can override the method and return arbitrary data. However, when doing so, they must ensure that &lt;a href=&quot;#matplotlib.collections.PathCollection.format_cursor_data&quot;&gt;&lt;code&gt;format_cursor_data&lt;/code&gt;&lt;/a&gt; can convert the data to a string representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f5518a01425add5d2d219f0caf9e52a3222187c" translate="yes" xml:space="preserve">
          <source>Subclasses can override the method and return arbitrary data. However, when doing so, they must ensure that &lt;a href=&quot;#matplotlib.collections.PolyCollection.format_cursor_data&quot;&gt;&lt;code&gt;format_cursor_data&lt;/code&gt;&lt;/a&gt; can convert the data to a string representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2670a2fce342f26f508094550efb5a8b5f2678ae" translate="yes" xml:space="preserve">
          <source>Subclasses can override the method and return arbitrary data. However, when doing so, they must ensure that &lt;a href=&quot;#matplotlib.collections.QuadMesh.format_cursor_data&quot;&gt;&lt;code&gt;format_cursor_data&lt;/code&gt;&lt;/a&gt; can convert the data to a string representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ae8cb80bec9a77d8471a0a2b7ae3fbc86ae149c" translate="yes" xml:space="preserve">
          <source>Subclasses can override the method and return arbitrary data. However, when doing so, they must ensure that &lt;a href=&quot;#matplotlib.collections.RegularPolyCollection.format_cursor_data&quot;&gt;&lt;code&gt;format_cursor_data&lt;/code&gt;&lt;/a&gt; can convert the data to a string representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acc9d1161c7f8f6792b6367ec943dccd6a269507" translate="yes" xml:space="preserve">
          <source>Subclasses can override the method and return arbitrary data. However, when doing so, they must ensure that &lt;a href=&quot;#matplotlib.collections.StarPolygonCollection.format_cursor_data&quot;&gt;&lt;code&gt;format_cursor_data&lt;/code&gt;&lt;/a&gt; can convert the data to a string representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7de8291fef2b11302096461746ffd67f8d1eb29" translate="yes" xml:space="preserve">
          <source>Subclasses can override the method and return arbitrary data. However, when doing so, they must ensure that &lt;a href=&quot;#matplotlib.collections.TriMesh.format_cursor_data&quot;&gt;&lt;code&gt;format_cursor_data&lt;/code&gt;&lt;/a&gt; can convert the data to a string representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a420c48db64a9b89f627c095878641d8b7e97e3" translate="yes" xml:space="preserve">
          <source>Subclasses can override the method and return arbitrary data. However, when doing so, they must ensure that &lt;a href=&quot;matplotlib.artist.artist.format_cursor_data#matplotlib.artist.Artist.format_cursor_data&quot;&gt;&lt;code&gt;format_cursor_data&lt;/code&gt;&lt;/a&gt; can convert the data to a string representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73d425c85ce20c143f987cab8c219a4ee18d26e5" translate="yes" xml:space="preserve">
          <source>Subclasses can override the method and return arbitrary data. However, when doing so, they must ensure that &lt;a href=&quot;matplotlib.axes.axes.format_cursor_data#matplotlib.axes.Axes.format_cursor_data&quot;&gt;&lt;code&gt;format_cursor_data&lt;/code&gt;&lt;/a&gt; can convert the data to a string representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f089d1cad147d6d9a680eefa167bebd254dd4fa" translate="yes" xml:space="preserve">
          <source>Subclasses can override the method and return arbitrary data. However, when doing so, they must ensure that &lt;a href=&quot;matplotlib.axis.axis.format_cursor_data#matplotlib.axis.Axis.format_cursor_data&quot;&gt;&lt;code&gt;format_cursor_data&lt;/code&gt;&lt;/a&gt; can convert the data to a string representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be0b1bea3f7c731d9a33c797d863ca72ccf3639e" translate="yes" xml:space="preserve">
          <source>Subclasses can override the method and return arbitrary data. However, when doing so, they must ensure that &lt;a href=&quot;matplotlib.axis.tick.format_cursor_data#matplotlib.axis.Tick.format_cursor_data&quot;&gt;&lt;code&gt;format_cursor_data&lt;/code&gt;&lt;/a&gt; can convert the data to a string representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26a80f82bcee703b9cf9f96c4d9ef10522f8550e" translate="yes" xml:space="preserve">
          <source>Subclasses can override the method and return arbitrary data. However, when doing so, they must ensure that &lt;a href=&quot;matplotlib.axis.xaxis.format_cursor_data#matplotlib.axis.XAxis.format_cursor_data&quot;&gt;&lt;code&gt;format_cursor_data&lt;/code&gt;&lt;/a&gt; can convert the data to a string representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d83c49da065f1290506d4114de1a2a75599c62" translate="yes" xml:space="preserve">
          <source>Subclasses can override the method and return arbitrary data. However, when doing so, they must ensure that &lt;a href=&quot;matplotlib.axis.xtick.format_cursor_data#matplotlib.axis.XTick.format_cursor_data&quot;&gt;&lt;code&gt;format_cursor_data&lt;/code&gt;&lt;/a&gt; can convert the data to a string representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f8eb15eaf799b0788231195823b7095a4485527" translate="yes" xml:space="preserve">
          <source>Subclasses can override the method and return arbitrary data. However, when doing so, they must ensure that &lt;a href=&quot;matplotlib.axis.yaxis.format_cursor_data#matplotlib.axis.YAxis.format_cursor_data&quot;&gt;&lt;code&gt;format_cursor_data&lt;/code&gt;&lt;/a&gt; can convert the data to a string representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b46d8b45b6b576066f3a734006609ae45afc02d" translate="yes" xml:space="preserve">
          <source>Subclasses can override the method and return arbitrary data. However, when doing so, they must ensure that &lt;a href=&quot;matplotlib.axis.ytick.format_cursor_data#matplotlib.axis.YTick.format_cursor_data&quot;&gt;&lt;code&gt;format_cursor_data&lt;/code&gt;&lt;/a&gt; can convert the data to a string representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afd79d17c55d7d184ae5146ebbb7b2f7fa846248" translate="yes" xml:space="preserve">
          <source>Subclasses need to override the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51cb3cb639a2388069a38ab6e5da4dbb388c81fd" translate="yes" xml:space="preserve">
          <source>Subclasses of this class should override the following members (at minimum):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb3d827976558d14e027a17fadf63ad6bf3328b8" translate="yes" xml:space="preserve">
          <source>Subclasses of this class will generally only need to override a constructor and &lt;code&gt;get_matrix()&lt;/code&gt; that generates a custom 3x3 matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bad4569b62a2ed251dddd4139f1abe9b055a57c" translate="yes" xml:space="preserve">
          <source>Subclasses should override for inclusion in the bounding box &quot;tight&quot; calculation. Default is to return an empty bounding box at 0, 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec58d01aee0f864c23a031ea05954b58f4924947" translate="yes" xml:space="preserve">
          <source>Subclasses should override the &lt;code&gt;draw_path&lt;/code&gt; method to add effect functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38aa8ebffac1f358b4b17a4ebd029a572821732a" translate="yes" xml:space="preserve">
          <source>Subclasses should override this method to change locator behaviour.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e52808b3d33f0d1d0e9581ee3d49106dde808aa" translate="yes" xml:space="preserve">
          <source>Subplot Toolbar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51ba486126a4b6d68245717e8743bd0580eba2f7" translate="yes" xml:space="preserve">
          <source>Subplot parameters. If not given, the default subplot parameters &lt;code&gt;&lt;a href=&quot;https://matplotlib.org/3.1.1/tutorials/introductory/customizing.html#matplotlib-rcparams&quot;&gt;rcParams[&quot;figure.subplot.*&quot;]&lt;/a&gt;&lt;/code&gt; are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fc89fe4a6722f4ac5076c6429747c16fb4f6da0" translate="yes" xml:space="preserve">
          <source>Subplots</source>
          <target state="translated">Subplots</target>
        </trans-unit>
        <trans-unit id="98147335e80b697dbc32589d5175fad7e87c05c9" translate="yes" xml:space="preserve">
          <source>Subplots Adjust</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f71f2c860b23a104a48b29a1d0b984710eb561b" translate="yes" xml:space="preserve">
          <source>Subsamples the errorbars. e.g., if errorevery=5, errorbars for every 5-th datapoint will be plotted. The data plot itself still shows all data points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecbced9fef1c9b95cfabe3b1c146edd745de51e2" translate="yes" xml:space="preserve">
          <source>Subsequently the created artist will have its &lt;code&gt;update_prop&lt;/code&gt; method called and the appropriate transform will be applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f7ff08a1bc66f5b1f45c09f03e14d04a6fe6cd3" translate="yes" xml:space="preserve">
          <source>Such an event loop is used by interactive functions, such as &lt;code&gt;ginput&lt;/code&gt; and &lt;code&gt;waitforbuttonpress&lt;/code&gt;, to wait for events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="778567550f77ee5211ce4d30603f5c7a9b2c9da7" translate="yes" xml:space="preserve">
          <source>Supported are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f7535b0d920791fbd48481d1260ca4f64530868" translate="yes" xml:space="preserve">
          <source>Supported keywords:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c997daf6e73cb6b28b0d0962a41c999850c706ad" translate="yes" xml:space="preserve">
          <source>Supported values are 'none', 'nearest', 'bilinear', 'bicubic', 'spline16', 'spline36', 'hanning', 'hamming', 'hermite', 'kaiser', 'quadric', 'catrom', 'gaussian', 'bessel', 'mitchell', 'sinc', 'lanczos'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eb63906b0b0de2360a934852fd616a9d8e2e07c" translate="yes" xml:space="preserve">
          <source>Switch back to the original renderer. The contents of the temporary renderer is processed with the &lt;em&gt;filter_func&lt;/em&gt; and is drawn on the original renderer as an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bdff9650e8334b418b2896b31588dbfa6c8363e" translate="yes" xml:space="preserve">
          <source>Switch back to the vector renderer and draw the contents of the raster renderer as an image on the vector renderer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b68403e9bd7610c8d6dc6d41be96ab4795e5c1d4" translate="yes" xml:space="preserve">
          <source>Switch minor tick labeling on or off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffa6271f1fe7931d83ae8dbbc27ecc3b464a952c" translate="yes" xml:space="preserve">
          <source>Switch to a temporary renderer for image filtering effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="638238af51f0740a8f101df8f6c45ad086029199" translate="yes" xml:space="preserve">
          <source>Switch to the raster renderer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3110be16bd8ff9cdf7e67e6425e9fe9f766e32ab" translate="yes" xml:space="preserve">
          <source>Symbols are strewn about a number of font files, each of which has its own proprietary 8-bit encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb54e6828ae2b44ac60fddeaa20b52ddce194e4" translate="yes" xml:space="preserve">
          <source>Symlog Demo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2db728216720705fa5f530d0d1a1de00c43e5eb0" translate="yes" xml:space="preserve">
          <source>TODO:</source>
          <target state="translated">TODO:</target>
        </trans-unit>
        <trans-unit id="2a85b5f0ef0e50bb3c3fbcbdfba722d32db66e33" translate="yes" xml:space="preserve">
          <source>TODO: sort returned indices by distance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa30ab8fac0c556c890bf2c4414a399ec7bffa02" translate="yes" xml:space="preserve">
          <source>Table Demo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9730d4326a7b8a0d13c2be3b7fe29b80ad152bf6" translate="yes" xml:space="preserve">
          <source>Table of Contents</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f3cc0c1e42ee551421bba88ac2ba553634d214e" translate="yes" xml:space="preserve">
          <source>Take the input data array, convert to HSV values in the given colormap, then adjust those color values to give the impression of a shaded relief map with a specified light source. RGBA values are returned, which can then be used to plot the shaded image with imshow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef8d2d112a20c35fe932aa4e6b263a9d8138fb4e" translate="yes" xml:space="preserve">
          <source>TeX font metrics for this font</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6456417a9ac78e0479a0742138111f1596a7773f" translate="yes" xml:space="preserve">
          <source>Technically there's a slight ambiguity in calls where the second label is a valid &lt;em&gt;fmt&lt;/em&gt;. &lt;code&gt;plot('n', 'o', data=obj)&lt;/code&gt; could be &lt;code&gt;plt(x, y)&lt;/code&gt; or &lt;code&gt;plt(y, fmt)&lt;/code&gt;. In such cases, the former interpretation is chosen, but a warning is issued. You may suppress the warning by adding an empty format string &lt;code&gt;plot('n', 'o', '', data=obj)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f19d6c8a102cab3299dc2e3eb31c36f43e7cf684" translate="yes" xml:space="preserve">
          <source>Test whether the artist contains the mouse event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec53344566d2eb7335cfbba0c3dca8f2b63e2abc" translate="yes" xml:space="preserve">
          <source>Test whether the mouse event occurred in the Tick marks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d22247c41d193d51c64511013ec9090eb304b38c" translate="yes" xml:space="preserve">
          <source>Test whether the mouse event occurred in the collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d53b2822286de9a6018f5a5ed7a886207c8547d6" translate="yes" xml:space="preserve">
          <source>Test whether the mouse event occurred in the patch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="582b9a7522b0a9d81bd179201a2e84cc01bb3044" translate="yes" xml:space="preserve">
          <source>Test whether the mouse event occurred in the x axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e50847c79bddb8c408317bf5aba40e21e814248a" translate="yes" xml:space="preserve">
          <source>Test whether the mouse event occurred in the y axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7893c3d9b9b4e7403598d496999557235a94e5f" translate="yes" xml:space="preserve">
          <source>Test whether the mouse event occurred on the figure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e686a1a27781de4b3ff31b9aa75ecf7968b81e91" translate="yes" xml:space="preserve">
          <source>Test whether the mouse event occurred on the line. The pick radius determines the precision of the location test (usually within five points of the value). Use &lt;a href=&quot;#matplotlib.lines.Line2D.get_pickradius&quot;&gt;&lt;code&gt;get_pickradius()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#matplotlib.lines.Line2D.set_pickradius&quot;&gt;&lt;code&gt;set_pickradius()&lt;/code&gt;&lt;/a&gt; to view or modify it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dbd8d5aa350f1b068f63736666a33e412beca5c" translate="yes" xml:space="preserve">
          <source>Test whether the mouse event occurred within the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fc60330c4b54d416c6b530b6a5d38e101d80bd7" translate="yes" xml:space="preserve">
          <source>Text Commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c62081c7cabbd19de9a383c439cf0fbdc79f575" translate="yes" xml:space="preserve">
          <source>Text Layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f85bb056b96af32c0453615590aa04bbf9441c6" translate="yes" xml:space="preserve">
          <source>Text Rotation Relative To Line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b616e16b07c93ba748fd3a638db34bd9006c43ae" translate="yes" xml:space="preserve">
          <source>Text and Annotations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbddb29369866788536105b17cd3f7905328e1e4" translate="yes" xml:space="preserve">
          <source>Text annotations in 3D</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dde386551fd4f978b15dd124b4ac376ac50e017" translate="yes" xml:space="preserve">
          <source>Text in Matplotlib Plots</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfda614e091c39627b43a49d6559b44d13dc694f" translate="yes" xml:space="preserve">
          <source>Text object with 3D position and direction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33d06fee5b179033947f6db197e53c89051d70c9" translate="yes" xml:space="preserve">
          <source>Text properties and layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="331fec27c19cd23fcbd5d7bb20ec964e6377b4cb" translate="yes" xml:space="preserve">
          <source>Text properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e77e8ea31570a7e461a529d3e2a63caa1647937a" translate="yes" xml:space="preserve">
          <source>Text string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2d59d98b1933f85ce8154e8a8293daaf1772b5f" translate="yes" xml:space="preserve">
          <source>Text to use for the title</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecc341fd4221e4c0e0435b92f720489d3493b34a" translate="yes" xml:space="preserve">
          <source>Text watermark</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="962649499c8abc490f9c2695a768d4f1b5a07c1e" translate="yes" xml:space="preserve">
          <source>Text.</source>
          <target state="translated">Text.</target>
        </trans-unit>
        <trans-unit id="6bc59c98ab6a4083aaef0d98ff4a57f4a924f9a1" translate="yes" xml:space="preserve">
          <source>Textbox</source>
          <target state="translated">Textbox</target>
        </trans-unit>
        <trans-unit id="24f86985237adcb039d484b533b1451515b686b4" translate="yes" xml:space="preserve">
          <source>Thanks to Fernando Perez for this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c9b8c9b574a0db0df7a6481691ad9e45ac3a5d7" translate="yes" xml:space="preserve">
          <source>Thanks to John Gill for providing the class and table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1728432af26bec2d443870c3e01aeb660813990" translate="yes" xml:space="preserve">
          <source>That's it, we'll do the rest!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a9cd038ff10b572ec04a307fd0e54cf0cc0fe02" translate="yes" xml:space="preserve">
          <source>That's the base of the rrule operation. It accepts all the keywords defined in the RFC as its constructor parameters (except byday, which was renamed to byweekday) and more. The constructor prototype is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="facd16cf512d6e8ea89af57bad06cc253e61af1a" translate="yes" xml:space="preserve">
          <source>The &quot;identity&quot; PathEffect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6c1b09f582634b9f94645e80f5bfdb4e725bb04" translate="yes" xml:space="preserve">
          <source>The 'a' vs 'x' and 'c' vs 'x' plots would have settings from 'screen.rc', while the 'b' vs 'x' plot would have settings from 'print.rc'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18151159a01c832d2fedd2accff80f44319e7356" translate="yes" xml:space="preserve">
          <source>The 'area' of each element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86b042c96dcbeace724b14c1e4e1f28c0f661b45" translate="yes" xml:space="preserve">
          <source>The 'rc' dictionary takes precedence over the settings loaded from 'fname'. Passing a dictionary only is also valid. For example a common usage is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a3ad7dce784a6768890055e3f51e0abf0d568d" translate="yes" xml:space="preserve">
          <source>The (optional) triangulation can be specified in one of two ways; either:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85903a4491281da0e9d678309ce5cf954c7c8ba7" translate="yes" xml:space="preserve">
          <source>The (signed) height of the bounding box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70c94fecdaba3a5d132e3c2899c3433839c81e04" translate="yes" xml:space="preserve">
          <source>The (signed) width and height of the bounding box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b481ab9e1162e6a2abee41e65f3d71967cd0bff" translate="yes" xml:space="preserve">
          <source>The (signed) width of the bounding box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4ebe2aa8066ab46bc96c1c430f97dea217d3978" translate="yes" xml:space="preserve">
          <source>The (x,y) coordinates of the offset in display units.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d534d4ede66962f43254b66bd2ca553352f4fa8" translate="yes" xml:space="preserve">
          <source>The (x,y) coordinates of the offset in display units. A callable must have the signature:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9928a06c27b4f24043d2e1284bb9cd68bab7671" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#matplotlib.axes.Axes&quot;&gt;&lt;code&gt;Axes&lt;/code&gt;&lt;/a&gt; contains most of the figure elements: &lt;a href=&quot;axis_api#matplotlib.axis.Axis&quot;&gt;&lt;code&gt;Axis&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;axis_api#matplotlib.axis.Tick&quot;&gt;&lt;code&gt;Tick&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;_as_gen/matplotlib.lines.line2d#matplotlib.lines.Line2D&quot;&gt;&lt;code&gt;Line2D&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;text_api#matplotlib.text.Text&quot;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;_as_gen/matplotlib.patches.polygon#matplotlib.patches.Polygon&quot;&gt;&lt;code&gt;Polygon&lt;/code&gt;&lt;/a&gt;, etc., and sets the coordinate system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7f6d924d26b3b3c8ccfcb820349ddbbcb9362e1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#matplotlib.axes.Axes&quot;&gt;&lt;code&gt;Axes&lt;/code&gt;&lt;/a&gt; instance supports callbacks through a callbacks attribute which is a &lt;a href=&quot;cbook_api#matplotlib.cbook.CallbackRegistry&quot;&gt;&lt;code&gt;CallbackRegistry&lt;/code&gt;&lt;/a&gt; instance. The events you can connect to are 'xlim_changed' and 'ylim_changed' and the callback will be called with func(&lt;em&gt;ax&lt;/em&gt;) where &lt;em&gt;ax&lt;/em&gt; is the &lt;a href=&quot;#matplotlib.axes.Axes&quot;&gt;&lt;code&gt;Axes&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eca5eef078231a02b8696e66c722e54fca8b279" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#matplotlib.axes.Axes&quot;&gt;&lt;code&gt;Axes&lt;/code&gt;&lt;/a&gt; instance the artist resides in, or &lt;em&gt;None&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792cc36ca6afc5ac8e9940c384b2a2389cb02b13" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#matplotlib.colors.LightSource.shade&quot;&gt;&lt;code&gt;shade()&lt;/code&gt;&lt;/a&gt; is used to produce &quot;shaded&quot; rgb values for a data array. &lt;a href=&quot;#matplotlib.colors.LightSource.shade_rgb&quot;&gt;&lt;code&gt;shade_rgb()&lt;/code&gt;&lt;/a&gt; can be used to combine an rgb image with The &lt;a href=&quot;#matplotlib.colors.LightSource.shade_rgb&quot;&gt;&lt;code&gt;shade_rgb()&lt;/code&gt;&lt;/a&gt; The &lt;a href=&quot;#matplotlib.colors.LightSource.hillshade&quot;&gt;&lt;code&gt;hillshade()&lt;/code&gt;&lt;/a&gt; produces an illumination map of a surface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8588b7dfa30ecbcbe0d263e3db03a30315c17fa9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#matplotlib.legend.Legend&quot;&gt;&lt;code&gt;Legend&lt;/code&gt;&lt;/a&gt; instance to wrap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc995eed4226b6dcbce04aace8750611817bc67" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#matplotlib.ticker.LogFormatter.set_locs&quot;&gt;&lt;code&gt;set_locs&lt;/code&gt;&lt;/a&gt; method must be called to enable the subsetting logic controlled by the &lt;code&gt;minor_thresholds&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cf898655928faa4b93fadf3dade98a4f5c0d04a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../axes_api#matplotlib.axes.Axes&quot;&gt;&lt;code&gt;Axes&lt;/code&gt;&lt;/a&gt; instance the artist resides in, or &lt;em&gt;None&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e937242483055a35efbc240a720b964e384673be" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../cm_api#matplotlib.cm.ScalarMappable&quot;&gt;&lt;code&gt;matplotlib.cm.ScalarMappable&lt;/code&gt;&lt;/a&gt; (i.e., &lt;code&gt;Image&lt;/code&gt;, &lt;a href=&quot;../contour_api#matplotlib.contour.ContourSet&quot;&gt;&lt;code&gt;ContourSet&lt;/code&gt;&lt;/a&gt;, etc.) described by this colorbar. This argument is mandatory for the &lt;a href=&quot;#matplotlib.figure.Figure.colorbar&quot;&gt;&lt;code&gt;Figure.colorbar&lt;/code&gt;&lt;/a&gt; method but optional for the &lt;a href=&quot;matplotlib.pyplot.colorbar#matplotlib.pyplot.colorbar&quot;&gt;&lt;code&gt;pyplot.colorbar&lt;/code&gt;&lt;/a&gt; function, which sets the default to the current image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97952373a951b1957f356b12c330b91ff3a5a186" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../cm_api#matplotlib.cm.ScalarMappable&quot;&gt;&lt;code&gt;matplotlib.cm.ScalarMappable&lt;/code&gt;&lt;/a&gt; (i.e., &lt;code&gt;Image&lt;/code&gt;, &lt;a href=&quot;../contour_api#matplotlib.contour.ContourSet&quot;&gt;&lt;code&gt;ContourSet&lt;/code&gt;&lt;/a&gt;, etc.) described by this colorbar. This argument is mandatory for the &lt;a href=&quot;matplotlib.figure.figure#matplotlib.figure.Figure.colorbar&quot;&gt;&lt;code&gt;Figure.colorbar&lt;/code&gt;&lt;/a&gt; method but optional for the &lt;a href=&quot;#matplotlib.pyplot.colorbar&quot;&gt;&lt;code&gt;pyplot.colorbar&lt;/code&gt;&lt;/a&gt; function, which sets the default to the current image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b50859b67d20727a2cd86b224b6542d2b8b94aa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../path_api#matplotlib.path.Path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; object for the polygon</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="979db6cb75f2d0f32b34ee9fdb9542eedd169deb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../text_api#matplotlib.text.Text&quot;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/a&gt; instance of the title.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e234bd17d9aa9f883ef9553d611c9b3584b61fb1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;_as_gen/matplotlib.figure.figure#matplotlib.figure.Figure.colorbar&quot;&gt;&lt;code&gt;colorbar()&lt;/code&gt;&lt;/a&gt; method uses &lt;a href=&quot;#matplotlib.colorbar.make_axes&quot;&gt;&lt;code&gt;make_axes()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#matplotlib.colorbar.Colorbar&quot;&gt;&lt;code&gt;Colorbar&lt;/code&gt;&lt;/a&gt;; the &lt;a href=&quot;_as_gen/matplotlib.pyplot.colorbar#matplotlib.pyplot.colorbar&quot;&gt;&lt;code&gt;colorbar()&lt;/code&gt;&lt;/a&gt; function is a thin wrapper over &lt;a href=&quot;_as_gen/matplotlib.figure.figure#matplotlib.figure.Figure.colorbar&quot;&gt;&lt;code&gt;colorbar()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ebbe1156aa1c2ca02af12e9d3dad2a1a03bc8ac" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;_as_gen/matplotlib.gridspec.gridspec#matplotlib.gridspec.GridSpec&quot;&gt;&lt;code&gt;GridSpec&lt;/code&gt;&lt;/a&gt; specifies the overall grid structure. Individual cells within the grid are referenced by &lt;a href=&quot;_as_gen/matplotlib.gridspec.subplotspec#matplotlib.gridspec.SubplotSpec&quot;&gt;&lt;code&gt;SubplotSpec&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ed53a000a6f9decea8b9161048a18e5b423bc35" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;_as_gen/matplotlib.pyplot#module-matplotlib.pyplot&quot;&gt;&lt;code&gt;matplotlib.pyplot&lt;/code&gt;&lt;/a&gt; function reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a522100d137eb8d7a648f7778b1ec6a0a6c4e9d9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;axes_api#matplotlib.axes.Axes&quot;&gt;&lt;code&gt;Axes&lt;/code&gt;&lt;/a&gt; instance the artist resides in, or &lt;em&gt;None&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb1ee99a91f53e48e74cc91a37bee546a7c02a5b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;axes_api#matplotlib.axes.Axes&quot;&gt;&lt;code&gt;Axes&lt;/code&gt;&lt;/a&gt; object to draw on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5881c4f96bdf7ca5d3697ed1ce23cd15cd57b34" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;axes_api#matplotlib.axes.Axes&quot;&gt;&lt;code&gt;Axes&lt;/code&gt;&lt;/a&gt; to attach the cursor to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87382b9f080018d4a979258afba8380b8d4d756d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;axes_api#matplotlib.axes.Axes&quot;&gt;&lt;code&gt;Axes&lt;/code&gt;&lt;/a&gt; to plot the table into.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0b966297b2c1ba434d3206f0cc5f1ae88e794a2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;axes_api#matplotlib.axes.Axes&quot;&gt;&lt;code&gt;Axes&lt;/code&gt;&lt;/a&gt; to which the created Axis belongs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef670e77df88d27b4bbc976ac52627ea49ea0934" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;axes_api#matplotlib.axes.Axes&quot;&gt;&lt;code&gt;matplotlib.axes.Axes&lt;/code&gt;&lt;/a&gt; instance the button will be placed into.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab74f77df0a0633385519a4b89be9d4af8887d6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;axes_api#matplotlib.axes.Axes&quot;&gt;&lt;code&gt;matplotlib.axes.Axes&lt;/code&gt;&lt;/a&gt; instance the buttons are located in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="672ce0a0beb8166a547928dd5f14330d775b35b4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;axes_api#matplotlib.axes.Axes&quot;&gt;&lt;code&gt;matplotlib.axes.Axes&lt;/code&gt;&lt;/a&gt; the button renders into.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2883429b862fd1210d6a069816a6468eafec4ebe" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://dateutil.readthedocs.io&quot;&gt;dateutil&lt;/a&gt; module provides additional code to handle date ticking, making it easy to place ticks on any kinds of dates. See examples below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c85ae79df6c0132fc1a3750a18b30f1ac1029973" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://matplotlib.org/3.1.1/gallery/index.html#color-examples&quot;&gt;Color&lt;/a&gt; examples for examples of controlling color with Matplotlib.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7036a3b6e3e98b3138866e090dfcda59a7987ad" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://matplotlib.org/3.1.1/tutorials/index.html#tutorials-colors&quot;&gt;Colors&lt;/a&gt; tutorial for an in-depth guide on controlling color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="229ab84d916d67ec2d7e5f806de00366008d71a2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/TR/2003/REC-PNG-20031110/#11keywords&quot;&gt;PNG specification&lt;/a&gt; defines some common keywords that may be used as appropriate:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53901483dca6a5612485abfea0e963acdc1b4d66" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;matplotlib.axes.axes.plot#matplotlib.axes.Axes.plot&quot;&gt;&lt;code&gt;plot&lt;/code&gt;&lt;/a&gt; function will be faster for scatterplots where markers don't vary in size or color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209d9aa61117f0087de607192fda6eb7c6103202" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;matplotlib.figure.figure#matplotlib.figure.Figure&quot;&gt;&lt;code&gt;Figure&lt;/code&gt;&lt;/a&gt; instance returned will also be passed to new_figure_manager in the backends, which allows to hook custom &lt;a href=&quot;matplotlib.figure.figure#matplotlib.figure.Figure&quot;&gt;&lt;code&gt;Figure&lt;/code&gt;&lt;/a&gt; classes into the pyplot interface. Additional kwargs will be passed to the &lt;a href=&quot;matplotlib.figure.figure#matplotlib.figure.Figure&quot;&gt;&lt;code&gt;Figure&lt;/code&gt;&lt;/a&gt; init function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68c59dec005462c12bf2c080c514d03082ef60dc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;matplotlib.figure.figure#matplotlib.figure.Figure.colorbar&quot;&gt;&lt;code&gt;colorbar()&lt;/code&gt;&lt;/a&gt; method uses &lt;a href=&quot;#mpl_toolkits.axes_grid1.colorbar.make_axes&quot;&gt;&lt;code&gt;make_axes()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#mpl_toolkits.axes_grid1.colorbar.Colorbar&quot;&gt;&lt;code&gt;Colorbar&lt;/code&gt;&lt;/a&gt;; the &lt;a href=&quot;matplotlib.pyplot.colorbar#matplotlib.pyplot.colorbar&quot;&gt;&lt;code&gt;colorbar()&lt;/code&gt;&lt;/a&gt; function is a thin wrapper over &lt;a href=&quot;matplotlib.figure.figure#matplotlib.figure.Figure.colorbar&quot;&gt;&lt;code&gt;colorbar()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="591e82844c0b6f8a92abe2d6e12cd6163f1512ef" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;matplotlib.patches.rectangle#matplotlib.patches.Rectangle&quot;&gt;&lt;code&gt;Rectangle&lt;/code&gt;&lt;/a&gt; instance representing the figure background patch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acdcddf6ef375c3e7021b662599bf8e8a1ba3b9a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;matplotlib.pyplot.plot#matplotlib.pyplot.plot&quot;&gt;&lt;code&gt;plot&lt;/code&gt;&lt;/a&gt; function will be faster for scatterplots where markers don't vary in size or color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05d2430c255bd704713039ad208b36bfc78b8599" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;(left, bottom, width, height)&lt;/code&gt; axes position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6718c186f941448626706b5947546124319aeda2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;(n, 2)&lt;/code&gt; float array, masked array or sequence of pairs representing the vertices of the path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c81a64a6c6858a57d2d191099f23737728fa92fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Axes&lt;/code&gt; instance in which the colorbar is drawn.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f8dbb7f844002aed58f2c059a4ef90ee149507f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Normalize&lt;/code&gt; instance used to scale scalar data to the [0, 1] range before mapping to colors using &lt;em&gt;cmap&lt;/em&gt;. By default, a linear scaling mapping the lowest value to 0 and the highest to 1 is used. This parameter is ignored for RGB(A) data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3006ff2468f0314c44c0bcc1e2f4ee704aa467f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setup()&lt;/code&gt; method is used to prepare the writer (possibly opening a pipe), successive calls to &lt;code&gt;grab_frame()&lt;/code&gt; capture a single frame at a time and &lt;code&gt;finish()&lt;/code&gt; finalizes the movie and writes the output file to disk. For example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0021b3e2a0d48b4a3bc3b41b999a5ee42b6e5d6c" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;axis_direction&lt;/em&gt; must be one of [left, right, bottom, top].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8786f532aefdaf34e614cebdc373c39c207f1c3f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;axisartist&lt;/em&gt; namespace includes a derived Axes implementation ( &lt;code&gt;mpl_toolkits.axisartist.Axes&lt;/code&gt;). The biggest difference is that the artists that are responsible for drawing axis lines, ticks, ticklabels, and axis labels are separated out from the mpl's Axis class. This change was strongly motivated to support curvilinear grid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf1f281e16a58c65aa28fca767622d021ef6d1f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;bottom&lt;/em&gt; value may be greater than the &lt;em&gt;top&lt;/em&gt; value, in which case the y-axis values will decrease from &lt;em&gt;bottom&lt;/em&gt; to &lt;em&gt;top&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b8a50927fff058f9c28d91da31170b28109a1f6" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;label_direction&lt;/em&gt; must be one of [left, right, bottom, top].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a449b00a1f75343a8890a931a5e42e94dfeca2e5" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;left&lt;/em&gt; value may be greater than the &lt;em&gt;right&lt;/em&gt; value, in which case the x-axis values will decrease from left to right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cd78bbfea71f68c7990aab1e43a3c9508b831fa" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;locs&lt;/em&gt; parameter is ignored in the present algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a954ad9ac8ca6170a6c70182479a9fe4b09c8701" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;new_mask&lt;/em&gt; array is computed recursively; at each step flat triangles are removed only if they share a side with the current mesh border. Thus no new holes in the triangulated domain will be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64145da78ce8e2b2363d910d115ba457db17ddd2" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;rcount&lt;/em&gt; and &lt;em&gt;ccount&lt;/em&gt; kwargs, which both default to 50, determine the maximum number of samples used in each direction. If the input data is larger, it will be downsampled (by slicing) to these numbers of points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22cfc49edc5f22107e91241c57063362a249223d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;shrink&lt;/em&gt; kwarg provides a simple way to scale the colorbar with respect to the axes. Note that if &lt;em&gt;cax&lt;/em&gt; is specified, it determines the size of the colorbar and &lt;em&gt;shrink&lt;/em&gt; and &lt;em&gt;aspect&lt;/em&gt; kwargs are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33fe361b21e919ae6dc597c24748ff790a6418fa" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;tight&lt;/em&gt; parameter is passed to &lt;a href=&quot;#mpl_toolkits.mplot3d.axes3d.Axes3D.autoscale_view&quot;&gt;&lt;code&gt;autoscale_view()&lt;/code&gt;&lt;/a&gt;, which is executed after a margin is changed; the default here is &lt;em&gt;True&lt;/em&gt;, on the assumption that when margins are specified, no additional padding to match tick marks is usually desired. Setting &lt;em&gt;tight&lt;/em&gt; to &lt;em&gt;None&lt;/em&gt; will preserve the previous setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e90392bf97773bccba7a1cd3a4cbd5d62356f97" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;tight&lt;/em&gt; parameter is passed to &lt;a href=&quot;matplotlib.axes.axes.autoscale_view#matplotlib.axes.Axes.autoscale_view&quot;&gt;&lt;code&gt;autoscale_view()&lt;/code&gt;&lt;/a&gt;, which is executed after a margin is changed; the default here is &lt;em&gt;True&lt;/em&gt;, on the assumption that when margins are specified, no additional padding to match tick marks is usually desired. Set &lt;em&gt;tight&lt;/em&gt; to &lt;em&gt;None&lt;/em&gt; will preserve the previous setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d699551cf0f01708dd876fbafd061878b4a194b" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;tight&lt;/em&gt; parameter is passed to &lt;code&gt;autoscale_view()&lt;/code&gt;, which is executed after a margin is changed; the default here is &lt;em&gt;True&lt;/em&gt;, on the assumption that when margins are specified, no additional padding to match tick marks is usually desired. Set &lt;em&gt;tight&lt;/em&gt; to &lt;em&gt;None&lt;/em&gt; will preserve the previous setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4adb9a427e673dfb556c16041ff874bcf6fcb265" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;x&lt;/em&gt;/&lt;em&gt;y&lt;/em&gt; image offset in pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e75cda36e2f76e71b009613da00ac35657f4ada4" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;y&lt;/em&gt;-axis increases upwards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="390f11f31b0ced917340b2c50035c0599e04ec3d" translate="yes" xml:space="preserve">
          <source>The AFM font file from which information will be extracted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="916410e368fe4493c2d4e6e5cdd6d44acab8d51a" translate="yes" xml:space="preserve">
          <source>The AutoDateFormatter has a scale dictionary that maps the scale of the tick (the distance in days between one major tick) and a format string. The default looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20bd319dbb412e1633ee09723f0388283bb809d8" translate="yes" xml:space="preserve">
          <source>The AutoDateLocator has an interval dictionary that maps the frequency of the tick (a constant from dateutil.rrule) and a multiple allowed for that ticking. The default looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe7adf85758308d8711eab4f5663161a448993a" translate="yes" xml:space="preserve">
          <source>The Axes class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbdaabd6945dd9b839977b7005d41da44e0518ce" translate="yes" xml:space="preserve">
          <source>The Axes to put the slider in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ad1e17247b9a3b7387143c81c62cd470c02275e" translate="yes" xml:space="preserve">
          <source>The AxesStack is a callable, where &lt;code&gt;ax_stack()&lt;/code&gt; returns the current axes. Alternatively the &lt;a href=&quot;#matplotlib.figure.AxesStack.current_key_axes&quot;&gt;&lt;code&gt;current_key_axes()&lt;/code&gt;&lt;/a&gt; will return the current key and associated axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4def465ac1c42e1a362c491d7fce9007aacc9ed8" translate="yes" xml:space="preserve">
          <source>The Bakoma distribution of the TeX Computer Modern fonts, and STIX fonts are supported. There is experimental support for using arbitrary fonts, but results may vary without proper tweaking and metrics for those fonts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a207bfb00f2e56ca946b99a5d81aaf68e633c926" translate="yes" xml:space="preserve">
          <source>The Bayes update</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="235ad6ea30a47986d09e34f3cbbf54ab9d556aec" translate="yes" xml:space="preserve">
          <source>The Canvas event that caused this tool to be called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6569ffc3b6a595a538b94fd099125aca46cb0686" translate="yes" xml:space="preserve">
          <source>The Colormap instance of this ScalarMappable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82f8614250156dea2f2034026b12a8f7e1ed5a8b" translate="yes" xml:space="preserve">
          <source>The Colormap instance or registered colormap name used to map scalar data to colors. This parameter is ignored for RGB(A) data. Defaults to &lt;code&gt;&lt;a href=&quot;https://matplotlib.org/3.1.1/tutorials/introductory/customizing.html#matplotlib-rcparams&quot;&gt;rcParams[&quot;image.cmap&quot;]&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bab87c3fd4921e1eff7f498a6124221f95f0beb" translate="yes" xml:space="preserve">
          <source>The ContourSet to label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d370346f7e26c2b5a9c68f0688dc0e460c7f6eee" translate="yes" xml:space="preserve">
          <source>The CubicTriInterpolator takes the value of the function at each node - provided by the user - and internally computes the value of the derivatives, resulting in a smooth interpolation. (As a special feature, the user can also impose the value of the derivatives at each node, but this is not supposed to be the common usage.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d59f3f9b4f4168d9ee2a7a9a6c871600d49a837" translate="yes" xml:space="preserve">
          <source>The DPI (or resolution) for the file. This controls the size in pixels of the resulting movie file. Default is &lt;code&gt;fig.dpi&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b38fd2cb620efd0c4d1a760935a52a3eb971227" translate="yes" xml:space="preserve">
          <source>The DPI (or resolution) for the file. This controls the size in pixels of the resulting movie file. Default is fig.dpi.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f3133e46133cbeb0864ca3ad32b68bb4d47d235" translate="yes" xml:space="preserve">
          <source>The DPI to store in the metadata of the file. This does not affect the resolution of the output image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b6b6f1a39f81b854f44f80c0952a0d36b1546b1" translate="yes" xml:space="preserve">
          <source>The Divider class whose rectangle area is specified as a subplot geometry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d358b6cf4a60eb862942c419e98fa220f6c65cec" translate="yes" xml:space="preserve">
          <source>The DrawingArea can contain any Artist as a child. The DrawingArea has a fixed width and height. The position of children relative to the parent is fixed. The TextArea is contains a single Text instance. The width and height of the TextArea instance is the width and height of the its child text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c53e3b485e38b68cf2c86906792f9a87792bcce2" translate="yes" xml:space="preserve">
          <source>The DrawingArea can contain any Artist as a child. The DrawingArea has a fixed width and height. The position of children relative to the parent is fixed. The children can be clipped at the boundaries of the parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0b75e1a2f99069bcb92b922a5728616a0f6326f" translate="yes" xml:space="preserve">
          <source>The Figure instance supports callbacks through a &lt;em&gt;callbacks&lt;/em&gt; attribute which is a &lt;a href=&quot;../cbook_api#matplotlib.cbook.CallbackRegistry&quot;&gt;&lt;code&gt;CallbackRegistry&lt;/code&gt;&lt;/a&gt; instance. The events you can connect to are 'dpi_changed', and the callback will be called with &lt;code&gt;func(fig)&lt;/code&gt; where fig is the &lt;a href=&quot;#matplotlib.figure.Figure&quot;&gt;&lt;code&gt;Figure&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="901587d2c8848f447002a7bfd82ef6c9baf1b272" translate="yes" xml:space="preserve">
          <source>The GridSpec, which the subplot is referencing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab87899ee383e5f0647de3501aea0fe9f9e539b" translate="yes" xml:space="preserve">
          <source>The HPacker has its children packed horizontally. It automatically adjusts the relative positions of children at draw time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ce196af594b21d42d92d6dfbad4dc40b85b7b49" translate="yes" xml:space="preserve">
          <source>The Image class whose size is determined by the given bbox.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0547a1a159905036017e6b77545ab29ec6820c3" translate="yes" xml:space="preserve">
          <source>The LatexManager opens an instance of the LaTeX application for determining the metrics of text elements. The LaTeX environment can be modified by setting fonts and/or a custom preamble in the rc parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="448d588b8934af6de1d08eb9e5fb70aea370db4a" translate="yes" xml:space="preserve">
          <source>The Legend class can be considered as a container of legend handles and legend texts. Creation of corresponding legend handles from the plot elements in the axes or figures (e.g., lines, patches, etc.) are specified by the handler map, which defines the mapping between the plot elements and the legend handlers to be used (the default legend handlers are defined in the &lt;a href=&quot;legend_handler_api#module-matplotlib.legend_handler&quot;&gt;&lt;code&gt;legend_handler&lt;/code&gt;&lt;/a&gt; module). Note that not all kinds of artist are supported by the legend yet by default but it is possible to extend the legend handler's capabilities to support arbitrary objects. See the &lt;a href=&quot;https://matplotlib.org/3.1.1/tutorials/intermediate/legend_guide.html&quot;&gt;legend guide&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4e164a0fc564bbb64298a1f4bf445c30e906166" translate="yes" xml:space="preserve">
          <source>The Lifecycle of a Plot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4751f882ba0de3670154a205bd6eb1fcdb890da" translate="yes" xml:space="preserve">
          <source>The Locator class is the base class for all tick locators. The locators handle autoscaling of the view limits based on the data limits, and the choosing of tick locations. A useful semi-automatic tick locator is &lt;a href=&quot;#matplotlib.ticker.MultipleLocator&quot;&gt;&lt;code&gt;MultipleLocator&lt;/code&gt;&lt;/a&gt;. It is initialized with a base, e.g., 10, and it picks axis limits and ticks that are multiples of that base.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bfdae3440362c37d035e6cc260f22a5cd785c52" translate="yes" xml:space="preserve">
          <source>The Locator subclasses defined here are</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8920e60b0b262f7d909ccfee2b98d83dea22360e" translate="yes" xml:space="preserve">
          <source>The MATLAB function &lt;a href=&quot;http://www.mathworks.com/help/techdoc/ref/stem.html&quot;&gt;stem&lt;/a&gt; which inspired this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46553195b5c5c83bfbcec311e397fffe8081306f" translate="yes" xml:space="preserve">
          <source>The Matplotlib datalim, autoscaling, locators etc work with scalars which are the units converted to floats given the current unit. The converter may be passed these floats, or arrays of them, even when units are set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e51a3fe3ac93bd403320cc0aa68251772d95cff7" translate="yes" xml:space="preserve">
          <source>The Normal PathEffect's sole purpose is to draw the original artist with no special path effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="603946bd7b81a70254128eca7c6039e9c042e42b" translate="yes" xml:space="preserve">
          <source>The Normalization instance of this ScalarMappable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a983ca2f05a02faaff509a73686334fcf04829e8" translate="yes" xml:space="preserve">
          <source>The Normalize instance scales the data values to the canonical colormap range [0, 1] for mapping to colors. By default, the data range is mapped to the colorbar range using linear scaling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b14268d270558569907e63b5179ae3b1b2c65439" translate="yes" xml:space="preserve">
          <source>The OffsetBox is a simple container artist. The child artist are meant to be drawn at a relative position to its parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="952b570333d5a8421403abaee4e6bfe49a7ba14e" translate="yes" xml:space="preserve">
          <source>The OffsetBox is a simple container artist. The child artist are meant to be drawn at a relative position to its parent. The [VH]Packer, DrawingArea and TextArea are derived from the OffsetBox.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdec531edd200dae8ade38a49177f534f0e16942" translate="yes" xml:space="preserve">
          <source>The Pillow writer relies on the Pillow library to write the animation, keeping all data in memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="282bfeae7ae5b86bb42eedf5237b91157ade9937" translate="yes" xml:space="preserve">
          <source>The Quiver instance returned by a call to quiver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd5010a10aead04e3e7878336961fb5fa8dbf6d5" translate="yes" xml:space="preserve">
          <source>The RGBA image, resampled unless &lt;em&gt;unsampled&lt;/em&gt; is True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc40e2f092285a1b3f802e95bbb3fa231de541f1" translate="yes" xml:space="preserve">
          <source>The RMS threshold above which the test is considered failed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceff8e695f4fe395ce019cfd905bc7cd3c31af0a" translate="yes" xml:space="preserve">
          <source>The Sankey class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43a3555e06f07e84da9f504817edf8fd1cb867da" translate="yes" xml:space="preserve">
          <source>The TextArea is contains a single Text instance. The text is placed at (0,0) with baseline+left alignment. The width and height of the TextArea instance is the width and height of the its child text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdaace56e5174a0ba323eb1ce46bf52926d33157" translate="yes" xml:space="preserve">
          <source>The TrueType font file from which information will be extracted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c53b6270fc68de09ea3ef631f66023c3043853f" translate="yes" xml:space="preserve">
          <source>The VPacker has its children packed vertically. It automatically adjust the relative positions of children in the drawing time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e1bb498ca76df900f950d096b61c1e08e46a1dc" translate="yes" xml:space="preserve">
          <source>The WebAgg backend is not documented here, in order to avoid adding Tornado to the doc build requirements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d2618d0b8d3e3f1c8b1f285348a79a13b0a00d" translate="yes" xml:space="preserve">
          <source>The [VH]Packer automatically adjust the relative positions of their children, which should be instances of the OffsetBox. This is used to align similar artists together, e.g., in legend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aebed824a0d7cd2cc51dd230278ae81973fde193" translate="yes" xml:space="preserve">
          <source>The abstraction layer that separates the &lt;a href=&quot;_as_gen/matplotlib.figure.figure#matplotlib.figure.Figure&quot;&gt;&lt;code&gt;matplotlib.figure.Figure&lt;/code&gt;&lt;/a&gt; from the backend specific details like a user interface drawing area</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a6f9976b0c0eea4ff88f2f673d52854caa6e67a" translate="yes" xml:space="preserve">
          <source>The acceptance radius for containment tests. See also &lt;a href=&quot;_as_gen/matplotlib.axis.axis.contains#matplotlib.axis.Axis.contains&quot;&gt;&lt;code&gt;Axis.contains&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd3f2186a869c9206cc2bcf9c05bbfad7d56d8f" translate="yes" xml:space="preserve">
          <source>The actions are assigned to mouse buttons via the arguments &lt;em&gt;mouse_add&lt;/em&gt;, &lt;em&gt;mouse_pop&lt;/em&gt; and &lt;em&gt;mouse_stop&lt;/em&gt;. Mouse buttons are defined by the numbers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae5c6c44325c5e397a098cebed2f0d029f4e470f" translate="yes" xml:space="preserve">
          <source>The actual defaults are controlled by the rc file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67e6078c9164f58981db3c0bdf2c2f51c6baf3cb" translate="yes" xml:space="preserve">
          <source>The actual drawing area (active position) of the Axes may be smaller than the Bbox (original position) when a fixed aspect is required. The anchor defines where the drawing area will be located within the available space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47e473e32f12ddc3b38a6cd0bd7980b6af2a6a2b" translate="yes" xml:space="preserve">
          <source>The addition of one here is a historical artifact. Also, note that the Gregorian calendar is assumed; this is not universal practice. For details see the module docstring.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea347930dfc5bc8cb03415b85b5763d172c1f293" translate="yes" xml:space="preserve">
          <source>The addition of one here is a historical artifact. Also, note that the Gregorian calendar is assumed; this is not universal practice. For details, see the module docstring.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8189e723dfd7d203d85a0e3ba7a50c85602304fd" translate="yes" xml:space="preserve">
          <source>The additional magnification to apply for the renderer in use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c1302bb11b44099c7369ddd64791e5bad6ea7b7" translate="yes" xml:space="preserve">
          <source>The additional parameters &lt;em&gt;basex/y&lt;/em&gt;, &lt;em&gt;subsx/y&lt;/em&gt; and &lt;em&gt;nonposx/y&lt;/em&gt; control the x/y-axis properties. They are just forwarded to &lt;a href=&quot;matplotlib.axes.axes.set_xscale#matplotlib.axes.Axes.set_xscale&quot;&gt;&lt;code&gt;Axes.set_xscale&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;matplotlib.axes.axes.set_yscale#matplotlib.axes.Axes.set_yscale&quot;&gt;&lt;code&gt;Axes.set_yscale&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c952cbdecfa6e362aff8e0159b67d846d7a6ac6b" translate="yes" xml:space="preserve">
          <source>The additional parameters &lt;em&gt;basex&lt;/em&gt;, &lt;em&gt;subsx&lt;/em&gt; and &lt;em&gt;nonposx&lt;/em&gt; control the x-axis properties. They are just forwarded to &lt;a href=&quot;matplotlib.axes.axes.set_xscale#matplotlib.axes.Axes.set_xscale&quot;&gt;&lt;code&gt;Axes.set_xscale&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52ae5e6ee2b9c8831c3125565e05e4beac2d5cf9" translate="yes" xml:space="preserve">
          <source>The additional parameters &lt;em&gt;basey&lt;/em&gt;, &lt;em&gt;subsy&lt;/em&gt; and &lt;em&gt;nonposy&lt;/em&gt; control the y-axis properties. They are just forwarded to &lt;a href=&quot;matplotlib.axes.axes.set_yscale#matplotlib.axes.Axes.set_yscale&quot;&gt;&lt;code&gt;Axes.set_yscale&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85b5eca33cc9420d0df49ca9e77888f137794589" translate="yes" xml:space="preserve">
          <source>The affine part of the polar projection. Scales the output so that maximum radius rests on the edge of the axes circle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c14d113ac9f566d0b6b1277a1622db8569305ea" translate="yes" xml:space="preserve">
          <source>The affine transformation from image to pixel space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02c611fdd29926b572fe1ccd565e442630d7e138" translate="yes" xml:space="preserve">
          <source>The algorithm picks the key in the dictionary that is &amp;gt;= the current scale and uses that format string. You can customize this dictionary by doing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b548ed679fa50865b3d3b5e5304ae7c860cf816" translate="yes" xml:space="preserve">
          <source>The alignment of the text within the cell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28acee86a640c8504a59d9067d94ede4c1dddfbd" translate="yes" xml:space="preserve">
          <source>The alignment of the text within the cells.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de2cd8475aa253553a4a1d7a866f0bf8c10cd60f" translate="yes" xml:space="preserve">
          <source>The alignment of the two objects is based on the bounding box of the &lt;a href=&quot;#matplotlib.text.Text&quot;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/a&gt;, as obtained by &lt;a href=&quot;_as_gen/matplotlib.artist.artist.get_window_extent#matplotlib.artist.Artist.get_window_extent&quot;&gt;&lt;code&gt;get_window_extent()&lt;/code&gt;&lt;/a&gt;. This, in turn, appears to depend on the font metrics as given by the rendering backend. Hence the quality of the &quot;centering&quot; of the label text with respect to the dash varies depending on the backend used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f1c8babd236776ff6af4d715f1f0f40b8baf313" translate="yes" xml:space="preserve">
          <source>The alpha blending value of the face color, between 0 (transparent) and 1 (opaque). Note: The edgecolor is currently not affected by this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42b6b5e85bed0c562f6b439286d3c357cd87f87d" translate="yes" xml:space="preserve">
          <source>The alpha blending value, between 0 (transparent) and 1 (opaque).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89e21b8ea6f747193316ba9398d32e09f387ef97" translate="yes" xml:space="preserve">
          <source>The alpha blending value, between 0 (transparent) and 1 (opaque). This parameter is ignored for RGBA input data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3492a9dbff70851d0b4417057c49f5ccc94e5e21" translate="yes" xml:space="preserve">
          <source>The alpha blending value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05d0af1d7c7acd685b418901b7211e7a86865771" translate="yes" xml:space="preserve">
          <source>The alpha transparency of the created shadow patch. Default is 0.3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="532f72caac342f3691d02f649a93a0ce02f54b7e" translate="yes" xml:space="preserve">
          <source>The alpha transparency of the created shadow patch. Default is 0.3. &lt;a href=&quot;http://matplotlib.1069221.n5.nabble.com/path-effects-question-td27630.html&quot;&gt;http://matplotlib.1069221.n5.nabble.com/path-effects-question-td27630.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd49e42ab4e50ff98d2f97612d71cff80873ff6c" translate="yes" xml:space="preserve">
          <source>The altitude (0-90, degrees up from horizontal) of the light source. Defaults to 45 degrees from horizontal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be7160f6dd4f89cea5fed8a02beff749f6c6233c" translate="yes" xml:space="preserve">
          <source>The amount of height reserved for space between subplots, expressed as a fraction of the average axis height.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be10fa924ae803a38c40b3f56694b0141c84cba" translate="yes" xml:space="preserve">
          <source>The amount of padding around the original box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff5f94a0f296600ffb6204fd71d5dd03b981ecdc" translate="yes" xml:space="preserve">
          <source>The amount of width reserved for space between subplots, expressed as a fraction of the average axis width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4941c28faf075ea08da8b85d66dc57828035586b" translate="yes" xml:space="preserve">
          <source>The amount to exaggerate the elevation values by when calculating illumination. This can be used either to correct for differences in units between the x-y coordinate system and the elevation coordinate system (e.g. decimal degrees vs meters) or to exaggerate or de-emphasize topographic effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c30349a1ea9f1d4723d7b7e020f29721ea83ec3" translate="yes" xml:space="preserve">
          <source>The amount to exaggerate the elevation values by when calculating illumination. This can be used either to correct for differences in units between the x-y coordinate system and the elevation coordinate system (e.g. decimal degrees vs meters) or to exaggerate or de-emphasize topography.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e2d1a2ff1e6b3d1647edbe0b55e8fd738d13b42" translate="yes" xml:space="preserve">
          <source>The amplitude of the wiggle perpendicular to the source line, in pixels. If scale is &lt;a href=&quot;https://docs.python.org/3/library/constants.html#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, or not provided, no sketch filter will be provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d232a720039d700c57ba361528707653ecd8c2ae" translate="yes" xml:space="preserve">
          <source>The amplitude of the wiggle perpendicular to the source line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2cbf747ff7ae79f6fa5053db91681716accb5e2" translate="yes" xml:space="preserve">
          <source>The anchor position may be either:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3116c462fd78d540711437ef6f91800350c51ada" translate="yes" xml:space="preserve">
          <source>The angle of the arrows in degrees. Defaults to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58f4fb0584aa087e2c57b4e7d42fdfdb5649e574" translate="yes" xml:space="preserve">
          <source>The angle of the key arrow. Measured in degrees anti-clockwise from the x-axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e01af0b17be2c8effe1a470c2765e14fa16a1c4" translate="yes" xml:space="preserve">
          <source>The angles of each of the intersection points are calculated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="570fe1dc0bace2e0cc7e9ba61b5f5e6ed704cfff" translate="yes" xml:space="preserve">
          <source>The angles of the first axes, degrees CCW from the x-axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd63eb45d5fede709279c380cb77abdfecbd20b2" translate="yes" xml:space="preserve">
          <source>The angles of the theta gridlines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afce6da54873dc3c93686818528013031f3e30fa" translate="yes" xml:space="preserve">
          <source>The angles to transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8e3fdca21d0f6318f0354af2920bdb865465c93" translate="yes" xml:space="preserve">
          <source>The angular position of the radius labels in degrees.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e1d9e80af7d6d0dfa7ed1ee09d4eaf87a51080" translate="yes" xml:space="preserve">
          <source>The annotated position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fceb10b4e2cf14bdfb4c05bc9d43600bcb9d910b" translate="yes" xml:space="preserve">
          <source>The approximate location of the label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1e28082ed4ee29922afff48bb0d958b8129ae70" translate="yes" xml:space="preserve">
          <source>The arc cannot be filled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f90bd21d830bb6049e60484dceeae8553256568b" translate="yes" xml:space="preserve">
          <source>The arc must be used in an &lt;a href=&quot;../axes_api#matplotlib.axes.Axes&quot;&gt;&lt;code&gt;Axes&lt;/code&gt;&lt;/a&gt; instance---it can not be added directly to a &lt;a href=&quot;matplotlib.figure.figure#matplotlib.figure.Figure&quot;&gt;&lt;code&gt;Figure&lt;/code&gt;&lt;/a&gt;---because it is optimized to only render the segments that are inside the axes bounding box with high resolution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5db6ba211d0ba81022e3d7df65302d428feafe48" translate="yes" xml:space="preserve">
          <source>The argument is case-insensitive. Switching to an interactive backend is possible only if no event loop for another interactive backend has started. Switching to and from non-interactive backends is always possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdd9a42b4ad913199e3f8efd78999795b9b60cc5" translate="yes" xml:space="preserve">
          <source>The arguments could be array-like or scalars, so long as they they can be broadcast together. The arguments can also be masked arrays. If an element in any of argument is masked, then that corresponding quiver element will not be plotted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a08e8698369526c6ca7e7c3f8042dc7a6c1561" translate="yes" xml:space="preserve">
          <source>The array of subplots in the figure has dimensions &lt;em&gt;numRows&lt;/em&gt;, &lt;em&gt;numCols&lt;/em&gt;, and &lt;em&gt;plotNum&lt;/em&gt; is the number of the subplot being created. &lt;em&gt;plotNum&lt;/em&gt; starts at 1 in the upper left corner and increases to the right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e69cb5bea755436628d4f26ddac8a1f072e278" translate="yes" xml:space="preserve">
          <source>The array shape depends on the image type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7fc7ca689b28ceaf057d1eabd845ca31cdff0d9" translate="yes" xml:space="preserve">
          <source>The array to be plotted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a7317d266341af2ad4bbf9400f250329e51c47f" translate="yes" xml:space="preserve">
          <source>The arrow dimensions (except for &lt;em&gt;length&lt;/em&gt;) are measured in multiples of this unit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c048044c9c94d571be8997530ff19adcc9d64fd" translate="yes" xml:space="preserve">
          <source>The arrows scale differently depending on the units. For 'x' or 'y', the arrows get larger as one zooms in; for other units, the arrow size is independent of the zoom state. For 'width or 'height', the arrow size increases with the width and height of the axes, respectively, when the window is resized; for 'dots' or 'inches', resizing does not change the arrows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a490e55b7e582f7afcd4c7e5811d5e98d74069a" translate="yes" xml:space="preserve">
          <source>The artist of the horizontal baseline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="248979da90c91071aecb2040774afda7f3838d80" translate="yes" xml:space="preserve">
          <source>The artist of the markers at the stem heads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9da4a1e8bf5d1037419e2bcbeb7911f338693007" translate="yes" xml:space="preserve">
          <source>The artist that contains the legend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cdb645ddb1adbd9df3ffbdd0985c40beea13d67" translate="yes" xml:space="preserve">
          <source>The artist to add to the figure. If the added artist has no transform previously set, its transform will be set to &lt;code&gt;figure.transFigure&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77e2ff624b3abaf2e80c5884adebae752460db70" translate="yes" xml:space="preserve">
          <source>The artists of the bars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5e12bd0236e046cca231627695b35df96fbda9c" translate="yes" xml:space="preserve">
          <source>The artists of the vertical lines for all stems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d3d016070bc2bd86578c861fbfd348ebc35fd74" translate="yes" xml:space="preserve">
          <source>The auto correlation vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7733e4cb7d1ef8063289b31480858be29c89ed01" translate="yes" xml:space="preserve">
          <source>The axes is build in the &lt;a href=&quot;_as_gen/matplotlib.figure.figure#matplotlib.figure.Figure&quot;&gt;&lt;code&gt;Figure&lt;/code&gt;&lt;/a&gt;&lt;em&gt;fig&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e84d2a6742d4689f298aaf6a09c61ce57c6468bb" translate="yes" xml:space="preserve">
          <source>The axes is build in the &lt;a href=&quot;matplotlib.figure.figure#matplotlib.figure.Figure&quot;&gt;&lt;code&gt;Figure&lt;/code&gt;&lt;/a&gt;&lt;em&gt;fig&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0d54885aca55754d01e330df1dfe397d70c3d91" translate="yes" xml:space="preserve">
          <source>The axes is build in the rectangle &lt;em&gt;rect&lt;/em&gt;. &lt;em&gt;rect&lt;/em&gt; is in &lt;a href=&quot;_as_gen/matplotlib.figure.figure#matplotlib.figure.Figure&quot;&gt;&lt;code&gt;Figure&lt;/code&gt;&lt;/a&gt; coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75ecb5c36866ca03f1df21c58d317a724350fde9" translate="yes" xml:space="preserve">
          <source>The axes is build in the rectangle &lt;em&gt;rect&lt;/em&gt;. &lt;em&gt;rect&lt;/em&gt; is in &lt;a href=&quot;matplotlib.figure.figure#matplotlib.figure.Figure&quot;&gt;&lt;code&gt;Figure&lt;/code&gt;&lt;/a&gt; coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaf4ef87317c01fde3f7b9978eca496aac9214ab" translate="yes" xml:space="preserve">
          <source>The axes object for the blue channel imshow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02db575b7c9f8f2da0128885b423bc5ea5da5b78" translate="yes" xml:space="preserve">
          <source>The axes object for the green channel imshow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67c887daa2e1286c83f951e37d7b097676114a54" translate="yes" xml:space="preserve">
          <source>The axes object for the red channel imshow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="065d9a0f7c59563042b2b3bef9e3a3475001cbc1" translate="yes" xml:space="preserve">
          <source>The axes object for the three-channel imshow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78d27340dc99d3f73ce1dea5fd42b4586933131d" translate="yes" xml:space="preserve">
          <source>The axes object in which the contours are drawn.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c9f51cdb952c726ff33a9950f5fa91f54391c84" translate="yes" xml:space="preserve">
          <source>The axes of the subplot. The returned axes base class depends on the projection used. It is &lt;a href=&quot;../axes_api#matplotlib.axes.Axes&quot;&gt;&lt;code&gt;Axes&lt;/code&gt;&lt;/a&gt; if rectilinear projection are used and &lt;a href=&quot;../projections_api#matplotlib.projections.polar.PolarAxes&quot;&gt;&lt;code&gt;projections.polar.PolarAxes&lt;/code&gt;&lt;/a&gt; if polar projection are used. The returned axes is then a subplot subclass of the base class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69b2e6226584c515ff5fda9eb0269bff4c633cc4" translate="yes" xml:space="preserve">
          <source>The axes position, as a &lt;code&gt;(left, bottom, width, height)&lt;/code&gt; tuple or as a three-digit subplot position code (e.g., &quot;121&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb72193e038c48ccf5c4d433f811a17ed7f2b8b7" translate="yes" xml:space="preserve">
          <source>The axes that this colorbar lives in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f230449b5737edcb07e18407dbed3a6581ae07ce" translate="yes" xml:space="preserve">
          <source>The axes to add the buttons to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="887ba3b814dae2dfbbca8775abb4ffe1ca534e2a" translate="yes" xml:space="preserve">
          <source>The axes_divider module provides helper classes to adjust the positions of multiple axes at drawing time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2af753cb38584a04b4ba1edf7385483fa5192780" translate="yes" xml:space="preserve">
          <source>The axis along which the data will run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e220234e77464281eedf66869bafeaf2a1aa01fa" translate="yes" xml:space="preserve">
          <source>The axis along which the windows will run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d25ebf4bdd793816b9cef0e65ed16a3a9a0d26a" translate="yes" xml:space="preserve">
          <source>The axis along which to do the detrending.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55aefad86ff5f48d255a3db7deaedc76ee4d766a" translate="yes" xml:space="preserve">
          <source>The axis along which to draw the span selector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1f119b610fdc735606ba8b9667d17c7e2b9460e" translate="yes" xml:space="preserve">
          <source>The axis along which to take the mean. See numpy.mean for a description of this argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a2318294f404a73f512bb9fb2842c25cd2aeb91" translate="yes" xml:space="preserve">
          <source>The axis direction for the &lt;em&gt;zs&lt;/em&gt;. This is useful when plotting 2D data on a 3D Axes. The data must be passed as &lt;em&gt;xs&lt;/em&gt;, &lt;em&gt;ys&lt;/em&gt;. Setting &lt;em&gt;zdir&lt;/em&gt; to 'y' then plots the data to the x-z-plane.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8786a0158f6efeba5e0c42ff9db21d27785292b9" translate="yes" xml:space="preserve">
          <source>The axis in which to place the patches. Default: &quot;z&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9472d07e62c70d1bf515419b03f17f907692be45" translate="yes" xml:space="preserve">
          <source>The axis is drawn as a unit, so the effective zorder for drawing the grid is determined by the zorder of each axis, not by the zorder of the &lt;a href=&quot;matplotlib.lines.line2d#matplotlib.lines.Line2D&quot;&gt;&lt;code&gt;Line2D&lt;/code&gt;&lt;/a&gt; objects comprising the grid. Therefore, to set grid zorder, use &lt;a href=&quot;matplotlib.axes.axes.set_axisbelow#matplotlib.axes.Axes.set_axisbelow&quot;&gt;&lt;code&gt;set_axisbelow&lt;/code&gt;&lt;/a&gt; or, for more control, call the &lt;a href=&quot;matplotlib.axis.axis.set_zorder#matplotlib.axis.Axis.set_zorder&quot;&gt;&lt;code&gt;set_zorder&lt;/code&gt;&lt;/a&gt; method of each axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d3951c9ffb16ada37cc9623a4ce5851e0d72836" translate="yes" xml:space="preserve">
          <source>The axis is inverted if the bottom value is larger than the top value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab548caaf9bc810839b43434ea472cd84f3cd66f" translate="yes" xml:space="preserve">
          <source>The axis is inverted if the left value is larger than the right value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab09017001fad20885bc3d63667e359dbb693d0" translate="yes" xml:space="preserve">
          <source>The axis label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe32998da9dcac6ced0e60d5e4cb41a4893b3f65" translate="yes" xml:space="preserve">
          <source>The axis limits to be set. Either none or all of the limits must be given. This can also be achieved using</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b4f6e00d6ebe482ceb1a8306213fd958b7e6508" translate="yes" xml:space="preserve">
          <source>The axis limits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61d5d405deabc0eff7efad6e671f6c07121cbd52" translate="yes" xml:space="preserve">
          <source>The axis on which to operate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45987fd8e5cd7e816694108a154db211aa14740a" translate="yes" xml:space="preserve">
          <source>The axis over which to do the repetition. Must be 0 or 1. The default is 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c593c1a4e4201b7c63c052ce3a2092f95e7783dc" translate="yes" xml:space="preserve">
          <source>The axis scale type to apply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9483615b0a4c66fbf46f4f252e388ff78bbbbff" translate="yes" xml:space="preserve">
          <source>The axis to apply the changes on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da92d4153fd6ddffb51f9011902aba9f15441300" translate="yes" xml:space="preserve">
          <source>The azimuth (0-360, degrees clockwise from North) of the light source. Defaults to 315 degrees (from the northwest).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cbd32cc8672259ce7d96173219d87e83f6ecb4a" translate="yes" xml:space="preserve">
          <source>The backend to switch to. This can either be one of the standard backend names, which are case-insensitive:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f08b797a215e972b0a54553518e0850c6c830bf" translate="yes" xml:space="preserve">
          <source>The backend-specific canvas instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c42fef92b91d179f77f154e0a6f03aceca0528" translate="yes" xml:space="preserve">
          <source>The backends are not expected to handle non-affine transformations themselves.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77cf8da995ad32cf6c5bd6ab6b1cf6d6d88ab0cf" translate="yes" xml:space="preserve">
          <source>The background colors of the cells.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6250e0e393137d126400949c8e79f590d890f8" translate="yes" xml:space="preserve">
          <source>The bandwidth factor, obtained from &lt;code&gt;kde.covariance_factor&lt;/code&gt;, with which the covariance matrix is multiplied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7310bd8dd56410286991346394b8ba81cb5d7de0" translate="yes" xml:space="preserve">
          <source>The barbs can further be customized using &lt;a href=&quot;../collections_api#matplotlib.collections.PolyCollection&quot;&gt;&lt;code&gt;PolyCollection&lt;/code&gt;&lt;/a&gt; keyword arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebff374ce392445db1faf10ffdcf9ede00dd7b49" translate="yes" xml:space="preserve">
          <source>The bars are positioned at &lt;em&gt;x&lt;/em&gt; with the given &lt;em&gt;align&lt;/em&gt;ment. Their dimensions are given by &lt;em&gt;width&lt;/em&gt; and &lt;em&gt;height&lt;/em&gt;. The vertical baseline is &lt;em&gt;bottom&lt;/em&gt; (default 0).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cabfabb0164754e4ce0daa2273eff14676b1141" translate="yes" xml:space="preserve">
          <source>The bars are positioned at &lt;em&gt;y&lt;/em&gt; with the given &lt;em&gt;align&lt;/em&gt;ment. Their dimensions are given by &lt;em&gt;width&lt;/em&gt; and &lt;em&gt;height&lt;/em&gt;. The horizontal baseline is &lt;em&gt;left&lt;/em&gt; (default 0).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88fb9386edbb2305b881b039641669f188c811f4" translate="yes" xml:space="preserve">
          <source>The base class for all of the matplotlib event handling. Derived classes such as &lt;a href=&quot;#matplotlib.backend_bases.KeyEvent&quot;&gt;&lt;code&gt;KeyEvent&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#matplotlib.backend_bases.MouseEvent&quot;&gt;&lt;code&gt;MouseEvent&lt;/code&gt;&lt;/a&gt; store the meta data like keys and buttons pressed, x and y locations in pixel and &lt;a href=&quot;axes_api#matplotlib.axes.Axes&quot;&gt;&lt;code&gt;Axes&lt;/code&gt;&lt;/a&gt; coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8db5b336658077fc2aae03f234ad6b4ad6f5b39" translate="yes" xml:space="preserve">
          <source>The base class for all scales.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dae733fcda2bea1d8a733b900003283e5c77b97" translate="yes" xml:space="preserve">
          <source>The base class for the Show class of each interactive backend; the 'show' callable is then set to Show.__call__, inherited from ShowBase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fff112c48e584b12cc6ed329b625cc5efd735b1" translate="yes" xml:space="preserve">
          <source>The base class for the Toolbar class of each interactive backend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5fa27298b54463598f66dca48b41a5670fd0aba" translate="yes" xml:space="preserve">
          <source>The base class for the mathtext backend-specific code. The purpose of &lt;a href=&quot;#matplotlib.mathtext.MathtextBackend&quot;&gt;&lt;code&gt;MathtextBackend&lt;/code&gt;&lt;/a&gt; subclasses is to interface between mathtext and a specific matplotlib graphics backend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a42139c1c751b217b762894189649648fb547c5b" translate="yes" xml:space="preserve">
          <source>The base class for the messaging area.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df1142ce9319e9cb5cd948c30dba7a7251822745" translate="yes" xml:space="preserve">
          <source>The base class for tools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6abb9f26e0ef035f93ad7bf1cc439135378a50ef" translate="yes" xml:space="preserve">
          <source>The base class of all 2D affine transformations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df91328b439972a0dbb875bb22371ad1d32c1dc8" translate="yes" xml:space="preserve">
          <source>The base class of all &lt;a href=&quot;#matplotlib.transforms.TransformNode&quot;&gt;&lt;code&gt;TransformNode&lt;/code&gt;&lt;/a&gt; instances that actually perform a transformation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="600fe3b9fe040b5c6f75db132d8c42cdcc3b784a" translate="yes" xml:space="preserve">
          <source>The base class of all affine transformations of any number of dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="007531b63909d08853ebb9a8dac27e1e1b592ba1" translate="yes" xml:space="preserve">
          <source>The base of the logarithm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05017615b1f027173dd567fcdf86bd1165c060eb" translate="yes" xml:space="preserve">
          <source>The base of the logarithm. Defaults to 10.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdd8f19ec9d99cab6d6978820aecb0b7492de8a5" translate="yes" xml:space="preserve">
          <source>The base polar transform. This handles projection &lt;em&gt;theta&lt;/em&gt; and &lt;em&gt;r&lt;/em&gt; into Cartesian coordinate space &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt;, but does not perform the ultimate affine transformation into the correct position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea660bf2e0119277e9abe31e77dcc4cfb516d50e" translate="yes" xml:space="preserve">
          <source>The bbox of the character (B) as a tuple (&lt;em&gt;llx&lt;/em&gt;, &lt;em&gt;lly&lt;/em&gt;, &lt;em&gt;urx&lt;/em&gt;, &lt;em&gt;ury&lt;/em&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f97f93c4b63ccb9a0fc1d99837d77a1100ef27da" translate="yes" xml:space="preserve">
          <source>The behaviour when a value falls out of range of the given levels. See &lt;a href=&quot;matplotlib.pyplot.contourf#matplotlib.pyplot.contourf&quot;&gt;&lt;code&gt;contourf()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7a17538bebb71d336e38df907997d5c1bf4f3de" translate="yes" xml:space="preserve">
          <source>The bi-dimensional histogram of samples x and y. Values in x are histogrammed along the first dimension and values in y are histogrammed along the second dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8d42e78479c54b403d6edc4bc1a069c356e6d26" translate="yes" xml:space="preserve">
          <source>The bin edges along the x axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8454eb965399fb4129199ddcfcd6fc74f32cd531" translate="yes" xml:space="preserve">
          <source>The bin edges along the y axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2867162a2727e5c2d9c039d549ef3ce42449ec8" translate="yes" xml:space="preserve">
          <source>The bin specification:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f99b9ca2b1e3a9659717f2ce8a6e09392473437" translate="yes" xml:space="preserve">
          <source>The bitrate for the saved movie file, which is one way to control the output file size and quality. The default value is &lt;code&gt;None&lt;/code&gt;, which uses the &lt;code&gt;animation.bitrate&lt;/code&gt; rcParam. A value of -1 implies that the bitrate should be determined automatically by the underlying utility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c104fc3f34d8bbc30deabab5acc9b8b7c67528" translate="yes" xml:space="preserve">
          <source>The blue array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea74b622a3082d92d7f2a01633314d6c0964262a" translate="yes" xml:space="preserve">
          <source>The border between the Axes and the table edge in Axes units.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="789e1a2b2f69953a40424e692b04ad1ab9c44154" translate="yes" xml:space="preserve">
          <source>The bottom and left rectangle coordinates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb836d4eb0f66e769666d4ec5bdd38441153aa41" translate="yes" xml:space="preserve">
          <source>The bottom and top ylims may be passed as the tuple (&lt;em&gt;bottom&lt;/em&gt;, &lt;em&gt;top&lt;/em&gt;) as the first positional argument (or as the &lt;em&gt;bottom&lt;/em&gt; keyword argument).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d106364de1d7f29c539e7355f6c48d5647b5a3fd" translate="yes" xml:space="preserve">
          <source>The bottom edge of the bounding box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be916867ea1a5cc5b3279feffc2a1c4b94d7b5d8" translate="yes" xml:space="preserve">
          <source>The bottom limit (default: None, which leaves the bottom limit unchanged). The bottom and top ylims may be passed as the tuple (&lt;em&gt;bottom&lt;/em&gt;, &lt;em&gt;top&lt;/em&gt;) as the first positional argument (or as the &lt;em&gt;bottom&lt;/em&gt; keyword argument).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7be06072c43bf10abea303bec14fe05476f8d4a" translate="yes" xml:space="preserve">
          <source>The bottom of the subplots for &lt;a href=&quot;#matplotlib.figure.Figure.subplots_adjust&quot;&gt;&lt;code&gt;subplots_adjust()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fc758fb5b1b4a69b343888bbd71e4bb8291a0c3" translate="yes" xml:space="preserve">
          <source>The bottom of the subplots of the figure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a1e1ea7da5aa0d5b7bef6f09225241e7eab17c3" translate="yes" xml:space="preserve">
          <source>The bottom ylim in data coordinates. Passing &lt;em&gt;None&lt;/em&gt; leaves the limit unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c520818380ab045db33f631109e39adcf09399f" translate="yes" xml:space="preserve">
          <source>The bottom-left corner of the bounding box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e9b6509b8696201fd3212b0e9f861113264a2d" translate="yes" xml:space="preserve">
          <source>The bounding box enclosing all data displayed in the Axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90b6e5a2a3566ebbcc0426eed371671b014e53e1" translate="yes" xml:space="preserve">
          <source>The bounding box in data coordinates that the image will fill. The image is stretched individually along x and y to fill the box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="362c5ed426a83752af8138b1dd965c88c56d57b8" translate="yes" xml:space="preserve">
          <source>The bounding box is always considered filled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f84cc967d60e4a8377f63cad6acaa193f727afc9" translate="yes" xml:space="preserve">
          <source>The bounding box' width and height are nonnegative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e2e7b439098ed3550b47d47a1bcab343c65f565" translate="yes" xml:space="preserve">
          <source>The box which has been created to hold this legend entry's artists. Artists created in the &lt;a href=&quot;#matplotlib.legend_handler.HandlerBase.legend_artist&quot;&gt;&lt;code&gt;legend_artist&lt;/code&gt;&lt;/a&gt; method must be added to this handlebox inside this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9014b5ce2210c7299b54b4e16db19724b56624cf" translate="yes" xml:space="preserve">
          <source>The box within which the &lt;a href=&quot;#matplotlib.transforms.Bbox&quot;&gt;&lt;code&gt;Bbox&lt;/code&gt;&lt;/a&gt; is positioned; it defaults to the initial &lt;a href=&quot;#matplotlib.transforms.Bbox&quot;&gt;&lt;code&gt;Bbox&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4654e3e4d8af31e4673505076568ac8b2f8a035a" translate="yes" xml:space="preserve">
          <source>The button labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8437330b241ed659f9db8a0b7f79940b78ee879" translate="yes" xml:space="preserve">
          <source>The button pressed. 'up' and 'down' are used for scroll events. Note that in the nbagg backend, both the middle and right clicks return RIGHT since right clicking will bring up the context menu in some browsers. Note that LEFT and RIGHT actually refer to the &quot;primary&quot; and &quot;secondary&quot; buttons, i.e. if the user inverts their left and right buttons (&quot;left-handed setting&quot;) then the LEFT button will be the one physically on the right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e345b15d18a55e6931d560713bcb42747f14e47" translate="yes" xml:space="preserve">
          <source>The button text. Accepts string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da18d7fc1e1109e3c54ec29ba3202d9259e37534" translate="yes" xml:space="preserve">
          <source>The call signatures correspond to three different ways how to use this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64b9dc6ae37e04f082cfe1ef8a7d295f39b3cab8" translate="yes" xml:space="preserve">
          <source>The callable must be pickle-able.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="009661070c56d52a578c46a0c817ab0626d80f5a" translate="yes" xml:space="preserve">
          <source>The callback associated with the button click event, must be &lt;strong&gt;EXACTLY&lt;/strong&gt;&lt;code&gt;self.trigger_tool(name)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91792e630215bae8529f605563b022bebdb1744d" translate="yes" xml:space="preserve">
          <source>The callback function. It must have the signature:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56ec461ad90bf09d119ea242c7a1ac504d536812" translate="yes" xml:space="preserve">
          <source>The canonical representation is as two points, with no restrictions on their ordering. Convenience properties are provided to get the left, bottom, right and top edges and width and height, but these are not stored explicitly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71fb70d90eda76c9a5da56e400ab25d9689d496b" translate="yes" xml:space="preserve">
          <source>The canvas the figure renders into.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30b587e2399155458cc0ff6758d34307c31d8368" translate="yes" xml:space="preserve">
          <source>The canvas the figure renders into. Calls the draw and print fig methods, creates the renderers, etc...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="219491b1f107e3229b845a95492096bd9cc7bd70" translate="yes" xml:space="preserve">
          <source>The capstyle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c14ee17d21bf680d952f531695882152badc5fd" translate="yes" xml:space="preserve">
          <source>The cell edges to be drawn with a line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="255644877d4b9d4251f983c15a2e327ec2f85ac9" translate="yes" xml:space="preserve">
          <source>The cell edges to be drawn with a line. See also &lt;a href=&quot;#matplotlib.table.CustomCell.visible_edges&quot;&gt;&lt;code&gt;visible_edges&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf2778f62124c87b5e83bcab74b6a5595c799801" translate="yes" xml:space="preserve">
          <source>The cell edges to be drawn with a line. See also &lt;a href=&quot;../table_api#matplotlib.table.CustomCell.visible_edges&quot;&gt;&lt;code&gt;visible_edges&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17689dee065a5ef8190c186375a95bf67eec54bf" translate="yes" xml:space="preserve">
          <source>The cell facecolor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7645c3ab4cc4ec4f66601055f7ee4c0556abb5b" translate="yes" xml:space="preserve">
          <source>The cell height.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c25b2bbc6d3f83917ed84d41d4a4d19507718be" translate="yes" xml:space="preserve">
          <source>The cell text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ead7540e443588ac6160c6da828a95803a427fce" translate="yes" xml:space="preserve">
          <source>The cell width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cb15acb7e2982aac2d00653baaf1e29447cdd5a" translate="yes" xml:space="preserve">
          <source>The center frequency of &lt;em&gt;x&lt;/em&gt; (defaults to 0), which offsets the x extents of the plot to reflect the frequency range used when a signal is acquired and then filtered and downsampled to baseband.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e0af33763ce54a66efe986d0af86adba53fe9fc" translate="yes" xml:space="preserve">
          <source>The center of the circle. Default &lt;code&gt;(0, 0)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5d353259d0bcd23ffc7f8b7934e37114466260b" translate="yes" xml:space="preserve">
          <source>The center of the ellipse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea3ad707e804c1031c0168bc395b3cbe43414be" translate="yes" xml:space="preserve">
          <source>The changing this property does not change the plot until &lt;a href=&quot;matplotlib.axes.axes.autoscale#matplotlib.axes.Axes.autoscale&quot;&gt;&lt;code&gt;autoscale&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;matplotlib.axes.axes.autoscale_view#matplotlib.axes.Axes.autoscale_view&quot;&gt;&lt;code&gt;autoscale_view&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebbab7b2286698295584b7bfdb516ca3e1837068" translate="yes" xml:space="preserve">
          <source>The character name (N).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3659061f8ede1d83ce3a5e08aa5296153aa2d6f" translate="yes" xml:space="preserve">
          <source>The character width (WX).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c366a2d6f41f1152b8cd20e80e5b4bedc5b7198" translate="yes" xml:space="preserve">
          <source>The child bounding box to wrap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14fe95c54bd4cd2928c7bce1ce55a1ca414fd955" translate="yes" xml:space="preserve">
          <source>The circle is approximated using 8 cubic Bezier curves, as described in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa96cfbd178cc4da796b2137a207cdd86230936d" translate="yes" xml:space="preserve">
          <source>The class must be able to take symbol keys and font file names and return the character metrics. It also delegates to a backend class to do the actual drawing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fb1a8d9fe2b34a65378d59d0c9fa14dac9ba796" translate="yes" xml:space="preserve">
          <source>The classes are not meant to be as flexible as their single element counterparts (e.g., you may not be able to select all line styles) but they are meant to be fast for common use cases (e.g., a large set of solid line segments).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="931027cce4cc8e6868b1cd477a7301cc80589c3b" translate="yes" xml:space="preserve">
          <source>The classes here provide support for using custom classes with Matplotlib, e.g., those that do not expose the array interface but know how to convert themselves to arrays. It also supports classes with units and units conversion. Use cases include converters for custom objects, e.g., a list of datetime objects, as well as for objects that are unit aware. We don't assume any particular units implementation; rather a units implementation must provide the register with the Registry converter dictionary and a &lt;a href=&quot;#matplotlib.units.ConversionInterface&quot;&gt;&lt;code&gt;ConversionInterface&lt;/code&gt;&lt;/a&gt;. For example, here is a complete implementation which supports plotting with native datetime objects:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b3f23801560b4d4ed0095e36c7115504f2cb794" translate="yes" xml:space="preserve">
          <source>The code types are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ade16c401ab84e1b49836038bb5fcd1b5dcd8a11" translate="yes" xml:space="preserve">
          <source>The codec to use. If &lt;code&gt;None&lt;/code&gt; (the default) the &lt;code&gt;animation.codec&lt;/code&gt; rcParam is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76558a40b6f9984d3b2bfc1f0d225966e998bbaa" translate="yes" xml:space="preserve">
          <source>The coherence between &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt;. Coherence is the normalized cross spectral density:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa01abb945331118b8005169bd85270cae3f057" translate="yes" xml:space="preserve">
          <source>The coherence vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a50f12592fe91bfc64ea43b16042e8886c012a7" translate="yes" xml:space="preserve">
          <source>The collection edgecolor(s). If a sequence, the patches cycle through it. If 'face', match the facecolor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72ec5d069cf4596d09d613508337610acf3ce9fe" translate="yes" xml:space="preserve">
          <source>The color of the bars can be specified globally or individually. This parameter can be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c3d4182ddbb7dd3ebd82618cfebfdfa2d4c57f1" translate="yes" xml:space="preserve">
          <source>The color of the box</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="696928859f1641a382f877feace7a856a09eb5e0" translate="yes" xml:space="preserve">
          <source>The color of the box when the mouse is over it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ba2eafef0bb9377081c49ebad97137b9cd6b15" translate="yes" xml:space="preserve">
          <source>The color of the button when hovering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55a806c160b4713b3bc65830240450d31349ae20" translate="yes" xml:space="preserve">
          <source>The color of the button when not activated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="381cf48384ee5ae1de681813cf5046ff185c96e2" translate="yes" xml:space="preserve">
          <source>The color of the button when not hovering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="401b9a27512b6e129b7a8a5c8a3c3e1e3edc0d1a" translate="yes" xml:space="preserve">
          <source>The color of the button when the mouse is over it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02c820ff36da8c2edcf03bd79fefa5fd42e21a7a" translate="yes" xml:space="preserve">
          <source>The color of the cell border.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04525dd436b63ee6f69440dbc95a355ab2a38808" translate="yes" xml:space="preserve">
          <source>The color of the edges. Defaults to 'none'. Possible values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f2700e84d69acd3a5d0ebbe2f4460c51069fe2f" translate="yes" xml:space="preserve">
          <source>The color of the resulting image will be darkened by moving the (s,v) values (in hsv colorspace) toward (hsv_min_sat, hsv_min_val) in the shaded regions, or lightened by sliding (s,v) toward (hsv_max_sat hsv_max_val) in regions that are illuminated. The default extremes are chose so that completely shaded points are nearly black (s = 1, v = 0) and completely illuminated points are nearly white (s = 0, v = 1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaa79c38506780c2c880a597ad9a4c5dab7274d0" translate="yes" xml:space="preserve">
          <source>The color of the selected button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09cd01631f4d14a1205d7a08f7a80869edfa009d" translate="yes" xml:space="preserve">
          <source>The color of the text box when hovering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="726ad78df0c757aec528ca68d0da5e2062aa7065" translate="yes" xml:space="preserve">
          <source>The color of the text box when not hovering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="098078ac7e1bb64ec0f2811fe699879db27c7690" translate="yes" xml:space="preserve">
          <source>The color to draw the faces and edges of the voxels. Can only be passed as keyword arguments. This parameter can be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="268d10d812cb126144422465cd4ce394273b5451" translate="yes" xml:space="preserve">
          <source>The color(s) of the event lines. If it is None, defaults to its rcParams setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="946529b7c350cf12d9efd0abd27ea7be5f366c27" translate="yes" xml:space="preserve">
          <source>The colorbar range. If &lt;em&gt;None&lt;/em&gt;, suitable min/max values are automatically chosen by the &lt;a href=&quot;matplotlib.colors.normalize#matplotlib.colors.Normalize&quot;&gt;&lt;code&gt;Normalize&lt;/code&gt;&lt;/a&gt; instance (defaults to the respective min/max values of &lt;em&gt;C&lt;/em&gt; in case of the default linear scaling).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ecf491f907383f7bfce5464134e6aeced01f60f" translate="yes" xml:space="preserve">
          <source>The colormap to use. Default: &lt;code&gt;&lt;a href=&quot;https://matplotlib.org/3.1.1/tutorials/introductory/customizing.html#matplotlib-rcparams&quot;&gt;rcParams[&quot;image.cmap&quot;]&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db3f6b937a77256e237259dd67c3f98841c6921c" translate="yes" xml:space="preserve">
          <source>The colormap used to color the &lt;em&gt;data&lt;/em&gt; array. Note that this must be a &lt;a href=&quot;matplotlib.colors.colormap#matplotlib.colors.Colormap&quot;&gt;&lt;code&gt;Colormap&lt;/code&gt;&lt;/a&gt; instance. For example, rather than passing in &lt;code&gt;cmap='gist_earth'&lt;/code&gt;, use &lt;code&gt;cmap=plt.get_cmap('gist_earth')&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe325f70b9f7d2626cd40c58a06b043e1a8b899" translate="yes" xml:space="preserve">
          <source>The colormap used to map normalized data values to RGBA colors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b7e2e04b59994c6e80ca04f765bac389393d949" translate="yes" xml:space="preserve">
          <source>The colors of the bar edges.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd38972e5663d65ac81ee78a40bece7b4526b66e" translate="yes" xml:space="preserve">
          <source>The colors of the bar faces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ffdcb6cc8370d1ef9b370694bcaa664a91a0157" translate="yes" xml:space="preserve">
          <source>The colors of the column header cells.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f55d5c0c218e0686fc799a4a435b932bb0348a9" translate="yes" xml:space="preserve">
          <source>The colors of the levels, i.e. the lines for &lt;a href=&quot;#matplotlib.axes.Axes.contour&quot;&gt;&lt;code&gt;contour&lt;/code&gt;&lt;/a&gt; and the areas for &lt;a href=&quot;matplotlib.axes.axes.contourf#matplotlib.axes.Axes.contourf&quot;&gt;&lt;code&gt;contourf&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9832dd859fa710ddaf1b8d00b742ba0911eab1ce" translate="yes" xml:space="preserve">
          <source>The colors of the levels, i.e. the lines for &lt;a href=&quot;#matplotlib.pyplot.contour&quot;&gt;&lt;code&gt;contour&lt;/code&gt;&lt;/a&gt; and the areas for &lt;a href=&quot;matplotlib.pyplot.contourf#matplotlib.pyplot.contourf&quot;&gt;&lt;code&gt;contourf&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b22fbcdc42ccbf3ab0154f8f44ec7cc694209b5b" translate="yes" xml:space="preserve">
          <source>The colors of the levels, i.e. the lines for &lt;a href=&quot;matplotlib.axes.axes.contour#matplotlib.axes.Axes.contour&quot;&gt;&lt;code&gt;contour&lt;/code&gt;&lt;/a&gt; and the areas for &lt;a href=&quot;#matplotlib.axes.Axes.contourf&quot;&gt;&lt;code&gt;contourf&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e52d3b3e3a6038c2c8839d4a393c28be4694ae" translate="yes" xml:space="preserve">
          <source>The colors of the levels, i.e. the lines for &lt;a href=&quot;matplotlib.pyplot.contour#matplotlib.pyplot.contour&quot;&gt;&lt;code&gt;contour&lt;/code&gt;&lt;/a&gt; and the areas for &lt;a href=&quot;#matplotlib.pyplot.contourf&quot;&gt;&lt;code&gt;contourf&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b265041931800a1ac3b2892a0253ee69019963" translate="yes" xml:space="preserve">
          <source>The colors of the row header cells.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2a3bb3b1b5ea77f1613f3f636c029bb803589e5" translate="yes" xml:space="preserve">
          <source>The column widths in units of the axes. If not given, all columns will have a width of &lt;em&gt;1 / ncols&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc9602b3992de9dbdf07d009a449a62d32b540b2" translate="yes" xml:space="preserve">
          <source>The configured percent symbol as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b692ae3881c1ce549bd75edf9e229e006433cb80" translate="yes" xml:space="preserve">
          <source>The container can be treated as a tuple of the &lt;em&gt;patches&lt;/em&gt; themselves. Additionally, you can access these and further parameters by the attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ee1910f30636366bc5b60bef799bf7091ea0a01" translate="yes" xml:space="preserve">
          <source>The container can be treated as the &lt;em&gt;lines&lt;/em&gt; tuple itself. Additionally, you can access these and further parameters by the attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728137b80857cb6e7f0e7d2dce1ca31e4c3ce917" translate="yes" xml:space="preserve">
          <source>The container can be treated like a namedtuple &lt;code&gt;(markerline, stemlines,
baseline)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d802e8499d650955a24401a7ad40c7d996a81dd2" translate="yes" xml:space="preserve">
          <source>The container contains:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="142879f4b3dcdf7505ff167f9f965d267520eaaa" translate="yes" xml:space="preserve">
          <source>The container may be treated like a tuple (&lt;em&gt;markerline&lt;/em&gt;, &lt;em&gt;stemlines&lt;/em&gt;, &lt;em&gt;baseline&lt;/em&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f9569a5e76fd96862dad68a8c179d0cc321ea03" translate="yes" xml:space="preserve">
          <source>The containing &lt;a href=&quot;axes_api#matplotlib.axes.Axes&quot;&gt;&lt;code&gt;Axes&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8924f1d1cd2dd66e5cb76df602d4c50e7ad9a9a9" translate="yes" xml:space="preserve">
          <source>The coordinate system for &lt;em&gt;xy&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83b6a0ef68d21d4e0e273861870bdf15f012f83b" translate="yes" xml:space="preserve">
          <source>The coordinate system that &lt;em&gt;xy&lt;/em&gt; is given in. The following types of values are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="604cfd926603344a133bd3c258c6264205377e1e" translate="yes" xml:space="preserve">
          <source>The coordinate system that &lt;em&gt;xytext&lt;/em&gt; is given in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="935c47bcec592b46324d041b4b47818faccfaf6c" translate="yes" xml:space="preserve">
          <source>The coordinate system to use for &lt;a href=&quot;#matplotlib.text.Annotation.xyann&quot;&gt;&lt;code&gt;Annotation.xyann&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd48579a55a3aaea85103bc07942789de3c92d3e" translate="yes" xml:space="preserve">
          <source>The coordinates of the anchor point of the bars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a1ad5ff9e992fb1cd0a713779bc9b12fe80ea87" translate="yes" xml:space="preserve">
          <source>The coordinates of the bottom left corner of the rectangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="335b8255d84c33685e0a970945b5d76e1e5e7ea4" translate="yes" xml:space="preserve">
          <source>The coordinates of the corners of the voxels. This should broadcast to a shape one larger in every dimension than the shape of &lt;code&gt;filled&lt;/code&gt;. These can be used to plot non-cubic voxels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a674852a93ca06543d2a51d24338ffb608099464" translate="yes" xml:space="preserve">
          <source>The coordinates of the data points. If &lt;em&gt;xdate&lt;/em&gt; or &lt;em&gt;ydate&lt;/em&gt; is &lt;em&gt;True&lt;/em&gt;, the respective values &lt;em&gt;x&lt;/em&gt; or &lt;em&gt;y&lt;/em&gt; are interpreted as &lt;a href=&quot;../dates_api#date-format&quot;&gt;Matplotlib dates&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a98ede1378fb0faab6d5c0979e5d11ba2c20cfe1" translate="yes" xml:space="preserve">
          <source>The coordinates of the points or line nodes are given by &lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d799c5784c617668f4a1a59a12fc21f016376e3" translate="yes" xml:space="preserve">
          <source>The coordinates of the quadrilateral corners. The quadrilateral for &lt;code&gt;C[i,j]&lt;/code&gt; has corners at:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="023d59b5eaf1676437fe7f39051d12f104ef050f" translate="yes" xml:space="preserve">
          <source>The coordinates of the values in &lt;em&gt;Z&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a15ef1141e879f6ba8c2d778b2b01049839cf14" translate="yes" xml:space="preserve">
          <source>The coordinates of the vertices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bbb93cacb52da4a83b718b48469de278fa60009" translate="yes" xml:space="preserve">
          <source>The correlation with lag k is defined as \(\sum_n x[n+k] \cdot y^*[n]\), where \(y^*\) is the complex conjugate of \(y\).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a946ba74b6cd50fa1c3cb558905f39381369283" translate="yes" xml:space="preserve">
          <source>The covariance matrix of &lt;code&gt;dataset&lt;/code&gt;, scaled by the calculated bandwidth (&lt;code&gt;kde.factor&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79982ce411841bb5de34161653e9c6704e95ce51" translate="yes" xml:space="preserve">
          <source>The created &lt;a href=&quot;../axes_api#matplotlib.axes.Axes&quot;&gt;&lt;code&gt;axes.Axes&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1259d513c97392348affb82a09e0be94a1904f92" translate="yes" xml:space="preserve">
          <source>The created &lt;a href=&quot;../text_api#matplotlib.text.Text&quot;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c4c10193d6700315b38fd380ad93daf51e503a2" translate="yes" xml:space="preserve">
          <source>The created &lt;a href=&quot;matplotlib.gridspec.gridspecfromsubplotspec#matplotlib.gridspec.GridSpecFromSubplotSpec&quot;&gt;&lt;code&gt;GridSpecFromSubplotSpec&lt;/code&gt;&lt;/a&gt; will have this &lt;a href=&quot;#matplotlib.gridspec.SubplotSpec&quot;&gt;&lt;code&gt;SubplotSpec&lt;/code&gt;&lt;/a&gt; as a parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1e98cde6130daeb8819c81a808ad16f0bacb439" translate="yes" xml:space="preserve">
          <source>The created &lt;a href=&quot;matplotlib.patches.fancyarrow#matplotlib.patches.FancyArrow&quot;&gt;&lt;code&gt;FancyArrow&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="438926dec836e56f0d8fa34ca312d93f5e2b1281" translate="yes" xml:space="preserve">
          <source>The created cell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b272fee4263eceb2f44444e781790f61c3424000" translate="yes" xml:space="preserve">
          <source>The created table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4cf8f640258898680026ab1e80856b8613be44e" translate="yes" xml:space="preserve">
          <source>The cross correlation is performed with &lt;a href=&quot;https://docs.scipy.org/doc/numpy/reference/generated/numpy.correlate.html#numpy.correlate&quot;&gt;&lt;code&gt;numpy.correlate()&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;mode = &quot;full&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9244d303d3e0724ab158fea806e084cd1d5ffb26" translate="yes" xml:space="preserve">
          <source>The cross spectral density \(P_{xy}\) by Welch's average periodogram method. The vectors &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; are divided into &lt;em&gt;NFFT&lt;/em&gt; length segments. Each segment is detrended by function &lt;em&gt;detrend&lt;/em&gt; and windowed by function &lt;em&gt;window&lt;/em&gt;. &lt;em&gt;noverlap&lt;/em&gt; gives the length of the overlap between segments. The product of the direct FFTs of &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; are averaged over each segment to compute \(P_{xy}\), with a scaling to correct for power loss due to windowing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f711e752ff36e46e7a5625c38dc7f2d668d29575" translate="yes" xml:space="preserve">
          <source>The current &lt;a href=&quot;#matplotlib.sankey.Sankey&quot;&gt;&lt;code&gt;Sankey&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2019e2877cb46f0f17266ccdef45bf256b6c8de" translate="yes" xml:space="preserve">
          <source>The current Figure is updated to the parent of &lt;em&gt;ax&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe4c6717396cfc16e03b602b80d40134c6687731" translate="yes" xml:space="preserve">
          <source>The current data as a tuple or array_likes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7264eed938cbb88a09b0ef0cd39edfaa7256e80" translate="yes" xml:space="preserve">
          <source>The current x-axis limits in data coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cab376242f293293362f9e9e4f20a56a4c7146d" translate="yes" xml:space="preserve">
          <source>The current y-axis limits in data coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6f0583fde2c9263f1a0d20daf4bdd3a305a5eb7" translate="yes" xml:space="preserve">
          <source>The curves are defined by the points (&lt;em&gt;x1&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;) and (&lt;em&gt;x2&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;). This creates one or multiple polygons describing the filled area.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe72251ea0a67829ad00d4ebd8f8c430bc6adf88" translate="yes" xml:space="preserve">
          <source>The curves are defined by the points (&lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y1&lt;/em&gt;) and (&lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y2&lt;/em&gt;). This creates one or multiple polygons describing the filled area.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1b768bd5104731ea946440af2f32d6100fe865c" translate="yes" xml:space="preserve">
          <source>The custom dictionary mapping instances or types to a legend handler. This &lt;code&gt;handler_map&lt;/code&gt; updates the default handler map found at &lt;a href=&quot;#matplotlib.legend.Legend.get_legend_handler_map&quot;&gt;&lt;code&gt;matplotlib.legend.Legend.get_legend_handler_map()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01bbc81b38d2ab9cfd24cad4d5cbaeeb013fb9a3" translate="yes" xml:space="preserve">
          <source>The custom dictionary mapping instances or types to a legend handler. This &lt;code&gt;handler_map&lt;/code&gt; updates the default handler map found at &lt;a href=&quot;../legend_api#matplotlib.legend.Legend.get_legend_handler_map&quot;&gt;&lt;code&gt;matplotlib.legend.Legend.get_legend_handler_map()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74ce1f3838a41fb35ecd2882cd67222bbb8883ec" translate="yes" xml:space="preserve">
          <source>The dash always comes between the point specified by &lt;a href=&quot;#matplotlib.text.Text.set_position&quot;&gt;&lt;code&gt;set_position()&lt;/code&gt;&lt;/a&gt; and the text. When a dash exists, the text alignment arguments (&lt;em&gt;horizontalalignment&lt;/em&gt;, &lt;em&gt;verticalalignment&lt;/em&gt;) are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="203b3250ab37ae8ac89a87714d2e61d7b55e2159" translate="yes" xml:space="preserve">
          <source>The dash list is a even size list that gives the ink on, ink off in pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25780446c90ced67e62ec2613e65e5f8dbbaaac3" translate="yes" xml:space="preserve">
          <source>The dash sequence is a sequence of floats of even length describing the length of dashes and spaces in points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d122adca72b56433c33d276bdc874d8b9da25dad" translate="yes" xml:space="preserve">
          <source>The data is assumed to be unstacked. Each of the following calls is legal:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0676d9f1a052232e7895af615934d3bb26bfd21" translate="yes" xml:space="preserve">
          <source>The data limits are not updated automatically when artist data are changed after the artist has been added to an Axes instance. In that case, use &lt;a href=&quot;matplotlib.axes.axes.relim#matplotlib.axes.Axes.relim&quot;&gt;&lt;code&gt;matplotlib.axes.Axes.relim()&lt;/code&gt;&lt;/a&gt; prior to calling autoscale_view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f7c932a7c092afb35f93c579753f82717a65d0" translate="yes" xml:space="preserve">
          <source>The data positions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c0762baad4d0276d684662e47374e6c9b8a0563" translate="yes" xml:space="preserve">
          <source>The data value that defines &lt;code&gt;0.0&lt;/code&gt; in the normalization. Defaults to the min value of the dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce2a745ec1cdfbefeac10b1ec1b94751aaab5cd8" translate="yes" xml:space="preserve">
          <source>The data value that defines &lt;code&gt;0.5&lt;/code&gt; in the normalization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="292a41c5db8399b813f156f77b6ddf97517d99f1" translate="yes" xml:space="preserve">
          <source>The data value that defines &lt;code&gt;1.0&lt;/code&gt; in the normalization. Defaults to the the max value of the dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a962a0517222ef6046248f4fc7c716415ca7eb45" translate="yes" xml:space="preserve">
          <source>The dataset with which &lt;code&gt;gaussian_kde&lt;/code&gt; was initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="735c7fa8a7e8c7a6ee4d4a5d037c71b70ba01a5b" translate="yes" xml:space="preserve">
          <source>The date limits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2da79c683cefacdbbe1b63b92d6fd60ae615b7eb" translate="yes" xml:space="preserve">
          <source>The dates start at &lt;em&gt;dstart&lt;/em&gt; and reach up to, but not including &lt;em&gt;dend&lt;/em&gt;. They are spaced by &lt;em&gt;delta&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30998cea8b462b171e310fd5e653b8eda55dd9af" translate="yes" xml:space="preserve">
          <source>The dates to convert.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85ea4ed04498a6a10e724bda917f50c019ce081f" translate="yes" xml:space="preserve">
          <source>The decorated function must take two arguments, &lt;em&gt;fig_test&lt;/em&gt; and &lt;em&gt;fig_ref&lt;/em&gt;, and draw the test and reference images on them. After the function returns, the figures are saved and compared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5254cce81b6d9567ac0aff7300f917e7755f3db7" translate="yes" xml:space="preserve">
          <source>The default &lt;em&gt;antialiaseds&lt;/em&gt; is False if the default &lt;em&gt;edgecolors&lt;/em&gt;=&quot;none&quot; is used. This eliminates artificial lines at patch boundaries, and works regardless of the value of alpha. If &lt;em&gt;edgecolors&lt;/em&gt; is not &quot;none&quot;, then the default &lt;em&gt;antialiaseds&lt;/em&gt; is taken from &lt;code&gt;&lt;a href=&quot;https://matplotlib.org/3.1.1/tutorials/introductory/customizing.html#matplotlib-rcparams&quot;&gt;rcParams[&quot;patch.antialiased&quot;]&lt;/a&gt;&lt;/code&gt;, which defaults to True. Stroking the edges may be preferred if &lt;em&gt;alpha&lt;/em&gt; is 1, but will cause artifacts otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa9637a067f57c9999f60a5b15e19a4a2f81218" translate="yes" xml:space="preserve">
          <source>The default Matplotlib button actions for extra mouse buttons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d5fbfdfe94e401de00b8be28c3efc0d22b27529" translate="yes" xml:space="preserve">
          <source>The default axis label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd5aef4b74deb04eaee602d2ee2a13d5b454e938" translate="yes" xml:space="preserve">
          <source>The default boxstyle is 'square'. The mutation scale of the &lt;a href=&quot;_as_gen/matplotlib.patches.fancybboxpatch#matplotlib.patches.FancyBboxPatch&quot;&gt;&lt;code&gt;patches.FancyBboxPatch&lt;/code&gt;&lt;/a&gt; is set to the fontsize.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="428296f4f466ad0aa4b62e0502091a94a2796409" translate="yes" xml:space="preserve">
          <source>The default date to use when fields are missing in &lt;em&gt;d&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b32cff52a5d9cffb67638fd323206503c445e5df" translate="yes" xml:space="preserve">
          <source>The default extent is determined by the following conditions. Pixels have unit size in data coordinates. Their centers are on integer coordinates, and their center coordinates range from 0 to columns-1 horizontally and from 0 to rows-1 vertically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="327d8b75d6335671308fb384f0bd9deb01b1dc8c" translate="yes" xml:space="preserve">
          <source>The default font property for TrueType fonts (as specified in the default rcParams) is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="858f89cfdef677328f8bf8c83ae5540b2a9180e3" translate="yes" xml:space="preserve">
          <source>The default formatter identifies when the x-data being plotted is a small range on top of a large offset. To reduce the chances that the ticklabels overlap, the ticks are labeled as deltas from a fixed offset. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62965f55c4eea712d99556d71f411a4a6e29a301" translate="yes" xml:space="preserve">
          <source>The default handler is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e4c5dc55094412a4bbd36b911fd69b412eb1fcc" translate="yes" xml:space="preserve">
          <source>The default implementation converts ints and floats and arrays of ints and floats into a comma-separated string enclosed in square brackets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd159b5cba8521f996d7b11f6496a6297495010c" translate="yes" xml:space="preserve">
          <source>The default is taken from &lt;code&gt;&lt;a href=&quot;https://matplotlib.org/3.1.1/tutorials/introductory/customizing.html#matplotlib-rcparams&quot;&gt;rcParams[&quot;hist.bins&quot;]&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d5061ca47ac8a8f4f3808c38c2aef7a74b5f46a" translate="yes" xml:space="preserve">
          <source>The default key handler cid, when using the toolmanager. To disable the default key press handling use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a40bfd3b825799e6b8bb4e6fe7dfc498cf53cf" translate="yes" xml:space="preserve">
          <source>The default linear scale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13faa7ee752130dd91c82a7eab28078fecb32596" translate="yes" xml:space="preserve">
          <source>The default min and max limits of the axis if no data has been plotted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab65886d2d7a49d86c4e4b91df89ad249b1735d" translate="yes" xml:space="preserve">
          <source>The default minor locator is &lt;a href=&quot;#matplotlib.ticker.NullLocator&quot;&gt;&lt;code&gt;NullLocator&lt;/code&gt;&lt;/a&gt;, i.e., no minor ticks on by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65c4f50c8acd77af28e9d8c333ec60d0094d354c" translate="yes" xml:space="preserve">
          <source>The default mouse button handler cid, when using the toolmanager. To disable the default button press handling use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc79f76baffda74613ae672c2382c0982f8cb816" translate="yes" xml:space="preserve">
          <source>The default position is &lt;code&gt;('outward',0)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba922186accd4bf627f6fa84efe0ef78384f92ae" translate="yes" xml:space="preserve">
          <source>The default settings auto-scales the length of the arrows to a reasonable size. To change this behavior see the &lt;em&gt;scale&lt;/em&gt; and &lt;em&gt;scale_units&lt;/em&gt; parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9505f4d216aec722c777ade961f9e6c43d424b28" translate="yes" xml:space="preserve">
          <source>The default symbol for flier points. Enter an empty string ('') if you don't want to show fliers. If &lt;a href=&quot;https://docs.python.org/3/library/constants.html#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, then the fliers default to 'b+' If you want more control use the flierprops kwarg.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1efa720a1959010915a48850c4971a20d19721a" translate="yes" xml:space="preserve">
          <source>The default transform specifies that text is in data coords, alternatively, you can specify text in axis coords (0,0 is lower-left and 1,1 is upper-right). The example below places text in the center of the axes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4306f778fda95f35fcd4735732c3df056353eb1e" translate="yes" xml:space="preserve">
          <source>The default value is 10.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6139cc6010e1bce4b9e82bab93705ecbbeaeba8a" translate="yes" xml:space="preserve">
          <source>The default value of &lt;a href=&quot;#matplotlib.table.CustomCell.visible_edges&quot;&gt;&lt;code&gt;visible_edges&lt;/code&gt;&lt;/a&gt; for newly added cells using &lt;a href=&quot;#matplotlib.table.Table.add_cell&quot;&gt;&lt;code&gt;add_cell&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="953e184705bce3a4ea35314c87da7ae11cc01589" translate="yes" xml:space="preserve">
          <source>The defaults are: dict(move=' ', clear='escape', square='shift', center='ctrl')</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="126f3880584c3b4f4304184fd8fcee6bc4728c69" translate="yes" xml:space="preserve">
          <source>The defaults give a slightly swept-back arrow; to make the head a triangle, make &lt;em&gt;headaxislength&lt;/em&gt; the same as &lt;em&gt;headlength&lt;/em&gt;. To make the arrow more pointed, reduce &lt;em&gt;headwidth&lt;/em&gt; or increase &lt;em&gt;headlength&lt;/em&gt; and &lt;em&gt;headaxislength&lt;/em&gt;. To make the head smaller relative to the shaft, scale down all the head parameters. You will probably do best to leave minshaft alone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f91dddab9b0c0432052aa5b529f154e373654f0" translate="yes" xml:space="preserve">
          <source>The derived classes are meant to override &lt;em&gt;create_artists&lt;/em&gt; method, which has a following signature.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78d92a881e4f049a14ea93572d41aa7f2bb5d85c" translate="yes" xml:space="preserve">
          <source>The design is based on the &lt;a href=&quot;http://www.w3.org/TR/1998/REC-CSS2-19980512/&quot;&gt;W3C Cascading Style Sheet, Level 1 (CSS1) font specification&lt;/a&gt;. Future versions may implement the Level 2 or 2.1 specifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e19e2cc5628f7ed3b2f690bf0c0493a5469fd3c" translate="yes" xml:space="preserve">
          <source>The dictionaries contain at least the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a61057dc5e19e38e10a63e8493dd58157686ce14" translate="yes" xml:space="preserve">
          <source>The difference between \dfrac and \frac</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37781d871906b761e9fbec0e9cb267cd6d980357" translate="yes" xml:space="preserve">
          <source>The dimensions [left, bottom, width, height] of the new axes. All quantities are in fractions of figure width and height.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4325a37d868e9e4d48f0a10101a5f77dc9f603f" translate="yes" xml:space="preserve">
          <source>The dimensions of &lt;em&gt;X&lt;/em&gt; and &lt;em&gt;Y&lt;/em&gt; should be one greater than those of &lt;em&gt;C&lt;/em&gt;. Alternatively, &lt;em&gt;X&lt;/em&gt;, &lt;em&gt;Y&lt;/em&gt; and &lt;em&gt;C&lt;/em&gt; may have equal dimensions, in which case the last row and column of &lt;em&gt;C&lt;/em&gt; will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f314b6d3ad604af794cdc021c9a2fcd6b5c416b" translate="yes" xml:space="preserve">
          <source>The direction of the text. See &lt;a href=&quot;mpl_toolkits.mplot3d.art3d.get_dir_vector#mpl_toolkits.mplot3d.art3d.get_dir_vector&quot;&gt;&lt;code&gt;get_dir_vector&lt;/code&gt;&lt;/a&gt; for a description of the values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34ba5e47aa19d11bf6436b0888d43482e1d4543a" translate="yes" xml:space="preserve">
          <source>The direction to use; defaults to 'z'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51ce42bd59f39b308e0ee39de2d3d5e5c6a7ee15" translate="yes" xml:space="preserve">
          <source>The direction vector. This is either a numpy.array or &lt;em&gt;zdir&lt;/em&gt; itself if &lt;em&gt;zdir&lt;/em&gt; is already a length-3 iterable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="828cdcf6f8f5c234985626fe60536ad464fc7c36" translate="yes" xml:space="preserve">
          <source>The direction. Possible values are: - 'x': equivalent to (1, 0, 0) - 'y': equivalent to (0, 1, 0) - 'z': equivalent to (0, 0, 1) - &lt;em&gt;None&lt;/em&gt;: equivalent to (0, 0, 0) - an iterable (x, y, z) is returned unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="025047ee92655ba182e70147a5cdeb40012e6740" translate="yes" xml:space="preserve">
          <source>The distance between the axis label and the tick labels. Defaults to &lt;code&gt;&lt;a href=&quot;https://matplotlib.org/3.1.1/tutorials/introductory/customizing.html#matplotlib-rcparams&quot;&gt;rcParams[&quot;axes.labelpad&quot;]&lt;/a&gt;&lt;/code&gt; = 4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be81426dc9e4270d331cd2dea842b71a7063525" translate="yes" xml:space="preserve">
          <source>The distance from the center to each of the vertices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a0c4e0eb0870aa8f846e71bc646a5b774c01749" translate="yes" xml:space="preserve">
          <source>The dots-per-inch setting used to render the text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4575767db72c68f34950c1a97ebdb85a7c1687c" translate="yes" xml:space="preserve">
          <source>The double pendulum problem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="223056fee333b786cc55444e8ecb46b63c6d16bc" translate="yes" xml:space="preserve">
          <source>The dpi of the canvas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f3ee10f821722e82a8e10029876325403bfbf34" translate="yes" xml:space="preserve">
          <source>The dpi of the canvas. Defaults to 72.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f65be0f230653397ac8292ffd1ef27f53553a8b8" translate="yes" xml:space="preserve">
          <source>The dpi of the output file. This, with the figure size, controls the size in pixels of the resulting movie file. Default is fig.dpi.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43a7304ed39c92713e81d36dd35f051fa8109c8d" translate="yes" xml:space="preserve">
          <source>The dpi value for computing the bbox, defaults to &lt;code&gt;self.figure.dpi&lt;/code&gt; (&lt;em&gt;not&lt;/em&gt; the renderer dpi); should be set e.g. if to match regions with a figure saved with a custom dpi value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58fddc04c7c769be558c2314c0371cd35cbc38fc" translate="yes" xml:space="preserve">
          <source>The drawstyle determines how the points are connected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b8b8107a34b503bf53fbfd202173d63f9c4eac1" translate="yes" xml:space="preserve">
          <source>The easiest way to make a live animation in matplotlib is to use one of the &lt;a href=&quot;_as_gen/matplotlib.animation.animation#matplotlib.animation.Animation&quot;&gt;&lt;code&gt;Animation&lt;/code&gt;&lt;/a&gt; classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc8d44a0d58cd26dd121b56f4eeca77132942692" translate="yes" xml:space="preserve">
          <source>The edge color of the marker. Possible values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28f4b609ac36bfe6903fef2f4b089a326b356116" translate="yes" xml:space="preserve">
          <source>The edgecolor of the figure; if &lt;em&gt;None&lt;/em&gt;, defaults to &lt;code&gt;&lt;a href=&quot;https://matplotlib.org/3.1.1/tutorials/introductory/customizing.html#matplotlib-rcparams&quot;&gt;rcParams[&quot;savefig.edgecolor&quot;]&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0770c5c40b64ffba48c0af73637c13e325f2d1cc" translate="yes" xml:space="preserve">
          <source>The edges of the bins. Length nbins + 1 (nbins left edges and right edge of last bin). Always a single array even when multiple data sets are passed in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de732ec381bbeeec878399e4a7d607515fe3e276" translate="yes" xml:space="preserve">
          <source>The effect will not be visible until the figure is redrawn, e.g., with &lt;a href=&quot;../backend_bases_api#matplotlib.backend_bases.FigureCanvasBase.draw_idle&quot;&gt;&lt;code&gt;FigureCanvasBase.draw_idle&lt;/code&gt;&lt;/a&gt;. Call &lt;a href=&quot;matplotlib.axes.axes.relim#matplotlib.axes.Axes.relim&quot;&gt;&lt;code&gt;relim&lt;/code&gt;&lt;/a&gt; to update the axes limits if desired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eff9df63e8e0f48d936a6667792f559580c8ea73" translate="yes" xml:space="preserve">
          <source>The effect will not be visible until the figure is redrawn, e.g., with &lt;a href=&quot;backend_bases_api#matplotlib.backend_bases.FigureCanvasBase.draw_idle&quot;&gt;&lt;code&gt;FigureCanvasBase.draw_idle&lt;/code&gt;&lt;/a&gt;. Call &lt;a href=&quot;_as_gen/matplotlib.axes.axes.relim#matplotlib.axes.Axes.relim&quot;&gt;&lt;code&gt;relim&lt;/code&gt;&lt;/a&gt; to update the axes limits if desired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f955ca592eed48e85e9b1927ceafe312bd84bf3e" translate="yes" xml:space="preserve">
          <source>The elements to be added to the legend are automatically determined, when you do not pass in any extra arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af8456a8f41c5db4e0a1384c787e027be16e94f2" translate="yes" xml:space="preserve">
          <source>The encapsulated triangulation (to be refined)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8987426e649d3fabea72c07165e202e7c122ea2b" translate="yes" xml:space="preserve">
          <source>The encapsulated triangulation to analyze.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fbaa288e88e656d9103e64368a7608513ef3d06" translate="yes" xml:space="preserve">
          <source>The enclosing bounding box (in figure pixel co-ordinates).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12f9b6bd5351c8eee228182dcea83426603bf257" translate="yes" xml:space="preserve">
          <source>The errorbar sizes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1fc0ca354e4c031e334fd6765d01dcc94530952" translate="yes" xml:space="preserve">
          <source>The event loop blocks until a callback function triggers &lt;a href=&quot;#matplotlib.backend_bases.FigureCanvasBase.stop_event_loop&quot;&gt;&lt;code&gt;stop_event_loop&lt;/code&gt;&lt;/a&gt;, or &lt;em&gt;timeout&lt;/em&gt; is reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc23afd6fa2136ebcabb9f98a1b57b48ed31fa0b" translate="yes" xml:space="preserve">
          <source>The events are given by a 1-dimensional array, usually the position of something along an axis, such as time or length. They do not have an amplitude and are displayed as vertical or horizontal parallel bars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f688a8f46674e75d4304199ff4148268f80c1be" translate="yes" xml:space="preserve">
          <source>The exact behavior of this function depends on the type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2d91e11f46efcf74637dce96d7ce93380f1dd3" translate="yes" xml:space="preserve">
          <source>The expected freetype version or range of versions for this test to pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22d17b275c76e83f4a1a0273ce4ae0a4837e8f08" translate="yes" xml:space="preserve">
          <source>The expected signature on &lt;code&gt;func&lt;/code&gt; and &lt;code&gt;init_func&lt;/code&gt; is very simple to keep &lt;a href=&quot;_as_gen/matplotlib.animation.funcanimation#matplotlib.animation.FuncAnimation&quot;&gt;&lt;code&gt;FuncAnimation&lt;/code&gt;&lt;/a&gt; out of your book keeping and plotting logic, but this means that the callable objects you pass in must know what artists they should be working on. There are several approaches to handling this, of varying complexity and encapsulation. The simplest approach, which works quite well in the case of a script, is to define the artist at a global scope and let Python sort things out. For example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c16b87a2a45028b24ee396c46256ccda5cec994b" translate="yes" xml:space="preserve">
          <source>The extension of the font file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5962568aee177c58ca62bd1496cbad928b225e0" translate="yes" xml:space="preserve">
          <source>The extensions to test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb1cf1c6af80df148464a6836df481bee1ff5ec" translate="yes" xml:space="preserve">
          <source>The extracted font properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f5373ce9a508bfc4247ccf713396116777e0cc6" translate="yes" xml:space="preserve">
          <source>The facecolor of the figure; if &lt;em&gt;None&lt;/em&gt;, defaults to &lt;code&gt;&lt;a href=&quot;https://matplotlib.org/3.1.1/tutorials/introductory/customizing.html#matplotlib-rcparams&quot;&gt;rcParams[&quot;savefig.facecolor&quot;]&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbc4db25dda2247af59eb799cafcc2cc7835dc73" translate="yes" xml:space="preserve">
          <source>The facecolors of the LineCollection. Default is 'none'. Setting to a value other than 'none' will lead to a filled polygon being drawn between points on each line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6e8c6be9f408ee8227e19f10062ae109199792d" translate="yes" xml:space="preserve">
          <source>The field used for the value must be labeled &lt;code&gt;x&lt;/code&gt; and the field used for the position must be labeled &lt;code&gt;pos&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b1248abf5fd557089a49c232eea5b1bf1f0b7c0" translate="yes" xml:space="preserve">
          <source>The fields do currently only describe a subset of character metrics information defined in the AFM standard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e8a1ad25e32c0b16509911fd5e8fd0676dd1972" translate="yes" xml:space="preserve">
          <source>The figure instance containing the thumbnail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd35efe81e4a3e8927d3c797692a031bd16fd3e" translate="yes" xml:space="preserve">
          <source>The figure instance to adjust.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aebd006ecfe0b3ce4cd7ac5ba70503b19975f88" translate="yes" xml:space="preserve">
          <source>The figure instance to embed the subplot tool into. If &lt;em&gt;None&lt;/em&gt;, a default figure will be created. If you are using this from the GUI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72b8895f359f24c3f30dd50a57b89402c4f34b5e" translate="yes" xml:space="preserve">
          <source>The figure instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="631939421415691cda2950a5bc8e706184a90872" translate="yes" xml:space="preserve">
          <source>The figure manager is a container for the actual backend-depended window that displays the figure on screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c76bbaf7b5db70f2a800e320b5f50235a140cd5" translate="yes" xml:space="preserve">
          <source>The figure module provides the top-level &lt;a href=&quot;artist_api#matplotlib.artist.Artist&quot;&gt;&lt;code&gt;Artist&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;_as_gen/matplotlib.figure.figure#matplotlib.figure.Figure&quot;&gt;&lt;code&gt;Figure&lt;/code&gt;&lt;/a&gt;, which contains all the plot elements. The following classes are defined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6375484a550c0f3c628ef8f5e7a18cec48343646" translate="yes" xml:space="preserve">
          <source>The figure number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd3e1a943946b964cbadfdce7d536ff190dcdd88" translate="yes" xml:space="preserve">
          <source>The figure object that contains the information for frames</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a20bb2bb4695a1059017cf91946a0261b6beb4a6" translate="yes" xml:space="preserve">
          <source>The figure object that is used to get draw, resize, and any other needed events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3683ffed60620341b4f774cf507cdd7e4c387f7" translate="yes" xml:space="preserve">
          <source>The figure patch edge color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f8f89496646652032ea23b1f99df36012c892fa" translate="yes" xml:space="preserve">
          <source>The figure patch facecolor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a350c63548fbe8f5ee3311095176e4b7c1b2592" translate="yes" xml:space="preserve">
          <source>The figure size in inches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb200b9782c81ccc15ef256adc652c240e6f89d3" translate="yes" xml:space="preserve">
          <source>The figure to capture data from. This must be provided by the sub-classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad3af3c20432752e85ada1cda398a9c32f94ac4" translate="yes" xml:space="preserve">
          <source>The figure to close. There are a number of ways to specify this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ea593df540c153a44550c8a801188a1fe4f869b" translate="yes" xml:space="preserve">
          <source>The figure to grab the rendered frames from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec66bf593ad1869ff54d025ee5b3d046297fada" translate="yes" xml:space="preserve">
          <source>The figure's gca method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="069d7cc50c565bf99cac75ec661af660d007ab6d" translate="yes" xml:space="preserve">
          <source>The file format, e.g. 'png', 'pdf', 'svg', ... The behavior when this is unset is documented under &lt;em&gt;fname&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88e21f8af82ec589e51df64a8a17e8400f755466" translate="yes" xml:space="preserve">
          <source>The file location is determined in the following order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1ab0323de8fc1c8721253d72c01b09e4e27fdd3" translate="yes" xml:space="preserve">
          <source>The file to write to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d78a46dc2f2f12c7203747211608079464cc1e5f" translate="yes" xml:space="preserve">
          <source>The file-based writers save temporary files for each frame which are stitched into a single file at the end. Although slower, these writers can be easier to debug.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05be362ad9aef850ba65c231c5524d9dd8f18a7" translate="yes" xml:space="preserve">
          <source>The filename of the actual image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3386ec7c6c4920cf9c1f1025a13be9b4e8fec897" translate="yes" xml:space="preserve">
          <source>The filename of the best matching font.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5841a7c92c54112590645bb3608a56a8708e4b7" translate="yes" xml:space="preserve">
          <source>The filename of the expected image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2983300125bc76cce943c3e7f1d1f100ce886c3d" translate="yes" xml:space="preserve">
          <source>The filename of the resulting movie file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2424f3eea1935067ed122f1168b5f0652e6ab81e" translate="yes" xml:space="preserve">
          <source>The filename of the resulting movie file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb26c8285b1097763d4238a5d77635738df8c77" translate="yes" xml:space="preserve">
          <source>The filename prefix to use for temporary files. Defaults to &lt;code&gt;'_tmp'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95700fad1cc4c7e66c69a547b7246bdc78bf5bf5" translate="yes" xml:space="preserve">
          <source>The fill color to use for each level. If &lt;code&gt;extend&lt;/code&gt; is &quot;neither&quot; there must be &lt;code&gt;n_level - 1&lt;/code&gt; colors. For an &lt;code&gt;extend&lt;/code&gt; of &quot;min&quot; or &quot;max&quot; add one extra color, and for an &lt;code&gt;extend&lt;/code&gt; of &quot;both&quot; add two colors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="522787ee63b7f7a2cb32adb1b9faf84a46879e4b" translate="yes" xml:space="preserve">
          <source>The fill style, Possible values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b9d9e8d3cb6c95d9707c3b6e2440f08f5c8b3e2" translate="yes" xml:space="preserve">
          <source>The filter radius for filters that have a radius parameter, i.e. when interpolation is one of: 'sinc', 'lanczos' or 'blackman'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28b8a85f74ddc555704c2cb04e7cb51d66a52144" translate="yes" xml:space="preserve">
          <source>The first argument must be in one of the first four categories; any argument with a length differing from that of the first argument (and hence anything in category 5) then will be passed through unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f72d6792e007312432d36c1532d1d39e4b26778" translate="yes" xml:space="preserve">
          <source>The first element is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d48828f8f59bf58af00be696f2d68e4ec06a9b0" translate="yes" xml:space="preserve">
          <source>The first of the pair of &lt;em&gt;x&lt;/em&gt; coordinates that define the bounding box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b31add6827b8fa178f02049f1ec6e8bf0d0a5e89" translate="yes" xml:space="preserve">
          <source>The first of the pair of &lt;em&gt;y&lt;/em&gt; coordinates that define the bounding box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7a7d2129ce36a323359c9c43e8ae448928a87cd" translate="yes" xml:space="preserve">
          <source>The first of these whose value is not None will be returned. If all are None then None will be returned. Each key in keys will be removed from the kwargs dict in place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d6d745350935644baefd28a5414915b44eda709" translate="yes" xml:space="preserve">
          <source>The first pair of (&lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;) coordinates that define the bounding box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db510aa2cef3892aca4abdea1bdd05e7eb6c67b" translate="yes" xml:space="preserve">
          <source>The first time this function is called it will try to set the number of ticks to make a nice tick partitioning. Thereafter the number of ticks will be fixed so that interactive navigation will be nice</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c65352b4a74c189ece0ad1f1261601778d003f5c" translate="yes" xml:space="preserve">
          <source>The first time this function is called, an additional handler is attached to Matplotlib's root handler; this handler is reused every time and this function simply manipulates the logger and handler's level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57d49c993eec111c07e45caedc5a7dc9fb24869f" translate="yes" xml:space="preserve">
          <source>The first two dimensions (M, N) define the rows and columns of the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="104073a91212577591828cd2881612bb00c49a6c" translate="yes" xml:space="preserve">
          <source>The following additional attributes are defined and shown with their default values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0259abdc25db5ed86efb11b4ca8fc8d9677b2d1b" translate="yes" xml:space="preserve">
          <source>The following aliases are available to save typing for interactive users:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5354fb351be4366b3df3e01c2e63d3c91e5d297a" translate="yes" xml:space="preserve">
          <source>The following attributes are accessible:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9834195f2caebca3f8880e99bc10045ab356b5e1" translate="yes" xml:space="preserve">
          <source>The following attributes are exposed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bbb106c2e31ba29b73ff797a7f0075ea15dc430" translate="yes" xml:space="preserve">
          <source>The following attributes can be customized (use the &lt;code&gt;set_xxx&lt;/code&gt; methods):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1eff18a8643260b9a814f90dbc99dab607f2555" translate="yes" xml:space="preserve">
          <source>The following bounds the inset axes to a box with 20% of the parent axes's height and 40% of the width. The size of the axes specified ([0, 0, 1, 1]) ensures that the axes completely fills the bounding box:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c23bb4d8db717fd8a46a3a2e57d7aded95215657" translate="yes" xml:space="preserve">
          <source>The following box styles are available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2457048ba35471132fd1a97c7970cf86a6e2d5a6" translate="yes" xml:space="preserve">
          <source>The following boxstyles are available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dedce09a99db0a8d4a94f9f3e904510f57234d12" translate="yes" xml:space="preserve">
          <source>The following call</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cabbd83a37659cdb3076443b780270370adc5b7f" translate="yes" xml:space="preserve">
          <source>The following classes are defined</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
