<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="ansible">
    <body>
      <group id="ansible">
        <trans-unit id="36107be9bb6e303c3e5335da9e89545c3378fe80" translate="yes" xml:space="preserve">
          <source>See the examples in the &lt;a href=&quot;#examples-of-advanced-syntax-2&quot;&gt;&lt;code&gt;DIFFERENCE()&lt;/code&gt; documentation&lt;/a&gt;. &lt;code&gt;NON_NEGATIVE_DIFFERENCE()&lt;/code&gt; behaves the same as the &lt;code&gt;DIFFERENCE()&lt;/code&gt; function but &lt;code&gt;NON_NEGATIVE_DIFFERENCE()&lt;/code&gt; returns only positive differences or differences that equal zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e535b3c53527db7550af6243a8424d030582b60" translate="yes" xml:space="preserve">
          <source>See the examples in the &lt;a href=&quot;#examples-of-basic-syntax-1&quot;&gt;&lt;code&gt;DERIVATIVE()&lt;/code&gt; documentation&lt;/a&gt;. &lt;code&gt;NON_NEGATIVE_DERIVATIVE()&lt;/code&gt; behaves the same as the &lt;code&gt;DERIVATIVE()&lt;/code&gt; function but &lt;code&gt;NON_NEGATIVE_DERIVATIVE()&lt;/code&gt; returns only positive rates of change or rates of change that equal zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50d552b43fb25f85010f83e3ce7aaec170345c8e" translate="yes" xml:space="preserve">
          <source>See the examples in the &lt;a href=&quot;#examples-of-basic-syntax-2&quot;&gt;&lt;code&gt;DIFFERENCE()&lt;/code&gt; documentation&lt;/a&gt;. &lt;code&gt;NON_NEGATIVE_DIFFERENCE()&lt;/code&gt; behaves the same as the &lt;code&gt;DIFFERENCE()&lt;/code&gt; function but &lt;code&gt;NON_NEGATIVE_DIFFERENCE()&lt;/code&gt; returns only positive differences or differences that equal zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fda7537fda05751ca76409a4fa54f4e5eaa860d" translate="yes" xml:space="preserve">
          <source>Select &quot;Customize service&quot;, click incoming Webhook &quot;Add&quot; button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cafd0992ad75060f9ab2f0844b2689368478c223" translate="yes" xml:space="preserve">
          <source>Select &lt;code&gt;Markdown&lt;/code&gt; or &lt;code&gt;HTML&lt;/code&gt; for markdown-formatted or HTML-formatted alert messages. The default message format is &lt;code&gt;Markdown&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc2d2ab49a8562df509222eea997ec4478bab8d" translate="yes" xml:space="preserve">
          <source>Select a point at the given percentile. This is a selector function, no interpolation between points is performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72f9c224376cc7023d39e3901c8b9614c6297a0b" translate="yes" xml:space="preserve">
          <source>Select a sample of the data in the &lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#field&quot;&gt;field&lt;/a&gt;&lt;code&gt;usage_idle&lt;/code&gt; in the measurement &lt;code&gt;cpu_usage_idle&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76e2c3d867ec281b6d8d0bcdaf4c76d779bc4dcd" translate="yes" xml:space="preserve">
          <source>Select the Alert Message Format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce47e66cfd7a7468ce978c7d74bc75931416b313" translate="yes" xml:space="preserve">
          <source>Select the bottom &lt;code&gt;num&lt;/code&gt; points for &lt;code&gt;field&lt;/code&gt; and sort by any extra tags or fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d8695762c05e3ed35896d4dc1dff956fc58262b" translate="yes" xml:space="preserve">
          <source>Select the first five observations in the measurement h2o_feet:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed162353eb3e8ddc6f6a3872b001643dc8acea2" translate="yes" xml:space="preserve">
          <source>Select the first point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e50d1bdf071022b005368a43bcf097be18f31ee" translate="yes" xml:space="preserve">
          <source>Select the last point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b71ec4837c867c7bc808ff106213ca88df831a15" translate="yes" xml:space="preserve">
          <source>Select the maximum point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71c7244825aba5823cdb24412fb71448ee2d7473" translate="yes" xml:space="preserve">
          <source>Select the minimum point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e484a74f6dc752ae24fd1e00b47543a4795330f6" translate="yes" xml:space="preserve">
          <source>Select the top &lt;code&gt;num&lt;/code&gt; points for &lt;code&gt;field&lt;/code&gt; and sort by any extra tags or fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c80cec1544b0989a8e343a7c9269849624853c97" translate="yes" xml:space="preserve">
          <source>Select this option to disable &lt;a href=&quot;https://telegram.org/blog/link-preview&quot;&gt;link previews&lt;/a&gt; in alert messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70a910b4e47f29fde8f2407ec9624d3f517033b7" translate="yes" xml:space="preserve">
          <source>Select this option to disable notifications on iOS Devices and sounds on Android devices. Android users will continue to receive notifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da44b1e180205de7cf3c40ba6b00d56e5ed95529" translate="yes" xml:space="preserve">
          <source>Selector Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df28d2cb8a74e0553a8b501f660f7fd482671ed" translate="yes" xml:space="preserve">
          <source>Selectors</source>
          <target state="translated">Selectors</target>
        </trans-unit>
        <trans-unit id="7ebf3bfc1eb663cfdabef3a7d35e63ba2ed47217" translate="yes" xml:space="preserve">
          <source>Self-signed certificates are not signed by a CA and you can &lt;a href=&quot;#step-1-generate-a-self-signed-certificate&quot;&gt;generate&lt;/a&gt; them on your own machine. Unlike CA-signed certificates, self-signed certificates only provide cryptographic security to HTTPS requests. They do not allow clients to verify the identity of the InfluxDB server. We recommend using a self-signed certificate if you are unable to obtain a CA-signed certificate. With this certificate option, every InfluxDB instance requires a unique self-signed certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bfe2ba6021a3d65ece98a823d52ec4e4e4d5a1f" translate="yes" xml:space="preserve">
          <source>Send JSON alert data to a specified address over TCP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cc441db45b9ad9ac19866ade5b53204e335feb5" translate="yes" xml:space="preserve">
          <source>Send JSON encoded alert data to a TCP endpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="855a79cfce4267fa9eaf191a7d6710fd39293105" translate="yes" xml:space="preserve">
          <source>Send a message to your bot in the Telegram application. The message text can be anything; your chat history must include at least one message to get your chat id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b72570d02aa58ce76d697ce70a950915b85089d3" translate="yes" xml:space="preserve">
          <source>Send aggregate events of the past &lt;code&gt;5m&lt;/code&gt; to the &lt;code&gt;agg_5m&lt;/code&gt; topic. Further handling of the aggregated events can be configured on the &lt;code&gt;agg_5m&lt;/code&gt; topic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1134ff75824904358a68319169ad3b74d9fa395" translate="yes" xml:space="preserve">
          <source>Send alert events to OpsGenie.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e386eedfda3baa81fc85721b1831dedfa2e94f" translate="yes" xml:space="preserve">
          <source>Send alert events to PagerDuty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a786a88b54fc2520ae72526c013aeb9cf556628" translate="yes" xml:space="preserve">
          <source>Send alert events to Pushover.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7116096024e17b972e5de4caf0cf8409898f4bdc" translate="yes" xml:space="preserve">
          <source>Send alert events to Sensu.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a2f31210597962d648684e08c0c7b860f5245f5" translate="yes" xml:space="preserve">
          <source>Send alert events to a Hipchat room.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55d353aed8eec68908352fc6f91393ccdfd443d2" translate="yes" xml:space="preserve">
          <source>Send alert events to a Talk instance. No options are available. See the Talk service configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c70e3fdc31347983810a7654c96e98ad72332a" translate="yes" xml:space="preserve">
          <source>Send alert events to a Telegram instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf2d732bae6794130ed38ec6708632f25dccd67" translate="yes" xml:space="preserve">
          <source>Send alert events to a VictorOps instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d04f9cf25961272c23d45f28561d33b53cba1b6" translate="yes" xml:space="preserve">
          <source>Send alert events to an Alerta instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a4853d754ce9459e4098fdc99d32f7efa4b15f8" translate="yes" xml:space="preserve">
          <source>Send alert events via email.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f8b9b99d89fdd56df4ad1fb88534a13d9f2c2e" translate="yes" xml:space="preserve">
          <source>Send alert to HipChat using default room 'Test Room'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea588825e245395bf84cd74a9c86a9d456875060" translate="yes" xml:space="preserve">
          <source>Send alert to OpsGenie using the default recipients, found in the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e4e5bb43c4988e374925a8b4c2cdd7a85dc9642" translate="yes" xml:space="preserve">
          <source>Send alert to OpsGenie. To use OpsGenie alerting you must first enable the 'Alert Ingestion API' in the 'Integrations' section of OpsGenie. Then place the API key from the URL into the 'opsgenie' section of the Kapacitor configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3d0374e08532b8c9d9d3537e3c9ab4e4ee318cb" translate="yes" xml:space="preserve">
          <source>Send alert to PagerDuty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe14317ea5a47eb58811301a8b8db2ef86d314a8" translate="yes" xml:space="preserve">
          <source>Send alert to Slack using default channel '#general'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22167eb26b882f78aab7b1a9d8ead3004581f1e9" translate="yes" xml:space="preserve">
          <source>Send alert to Telegram using default chat-id 'xxxxxxxx'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b96991963408767b937f990b7a1b61710a9f0f7c" translate="yes" xml:space="preserve">
          <source>Send alert to VictorOps using the default routing key, found in the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="729f8780d45f3bc37f32b87fca50126f7561da49" translate="yes" xml:space="preserve">
          <source>Send alert to VictorOps. To use VictorOps alerting you must first enable the 'Alert Ingestion API' in the 'Integrations' section of VictorOps. Then place the API key from the URL into the 'victorops' section of the Kapacitor configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10a7c9f735eb1032c1e9ed96d596251a0fd427de" translate="yes" xml:space="preserve">
          <source>Send alert to user '@jsmith'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5616093cf30f36300e0903bdaa79625ff989a3a8" translate="yes" xml:space="preserve">
          <source>Send alerts to &lt;code&gt;target-ip:target-port&lt;/code&gt; on OID '1.3.6.1.2.1.1.7'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30b4e2138e3e0b2fa10f5cf4d023ed4579ae5b84" translate="yes" xml:space="preserve">
          <source>Send alerts to Alerta. The resource and event properties are required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55588e5dfffd567874bf235847de2eb05a883143" translate="yes" xml:space="preserve">
          <source>Send alerts to OpsGenie using the teams and recipients in the configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0fd51be3128ade4ad00c3989cfd7049e15d4544" translate="yes" xml:space="preserve">
          <source>Send alerts to OpsGenie with team set to 'team_rocket' and 'team_test'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28882d38338e373b1fb40d6d43ce338f05b9ffe0" translate="yes" xml:space="preserve">
          <source>Send alerts to Pushover.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ba8dd11799d33f49edc75d8dfa39a27b1bcdea6" translate="yes" xml:space="preserve">
          <source>Send alerts to Sensu client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5670ba9a566cc15ac571d9f090cdc370a372cf0" translate="yes" xml:space="preserve">
          <source>Send alerts to Sensu specifying the handlers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27c47f89816b49e94975a8992613e263bf42407f" translate="yes" xml:space="preserve">
          <source>Send alerts to Slack channel '#alerts'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89dc54ed419916101f1a16400dabb6783d70a43a" translate="yes" xml:space="preserve">
          <source>Send alerts to Slack channel in the configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c406f00c6f13721b83113c1c6062fcf84070e50" translate="yes" xml:space="preserve">
          <source>Send alerts to Talk client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8182ac29dceefd465e5e1b08ae50debcea25a3f4" translate="yes" xml:space="preserve">
          <source>Send alerts to Telegram chat-id in the configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4018ed292e88d7882eab16f4d64987f4e8e42e4d" translate="yes" xml:space="preserve">
          <source>Send alerts to Telegram user/group 'xxxxxx'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16110d7cf5422733d8c99a3e0503d055191b8ef0" translate="yes" xml:space="preserve">
          <source>Send alerts to VictorOps using the routing key in the configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cb80db24f61ecfc7a7584d24534b13b303aef46" translate="yes" xml:space="preserve">
          <source>Send alerts to VictorOps with routing key 'team_rocket'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eae0bd39705eed2e340affd752b571c54def69e8" translate="yes" xml:space="preserve">
          <source>Send an email with custom subject and body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da7508fd811941ac6ee5a63b6a516a6f1cdd3456" translate="yes" xml:space="preserve">
          <source>Send email to 'oncall@example.com' from 'kapacitor@example.com'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a88cc088148ba1263b49932489c055cf9b3d93c" translate="yes" xml:space="preserve">
          <source>Send events with the tag &amp;ldquo;host&amp;rdquo; equal to &lt;code&gt;s001.example.com&lt;/code&gt; to the handler:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87f0c7024e49aa56721bb4bfa3aea531b30f195c" translate="yes" xml:space="preserve">
          <source>Send multiple queries to InfluxDB in a single API call. Simply delimit each query using a semicolon, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa01d6811ac329cb5dec538b5e3624d32359721" translate="yes" xml:space="preserve">
          <source>Send only WARNING and CRITICAL events to the handler:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c63e957a467c7c282fe398babac25029ef8b22e" translate="yes" xml:space="preserve">
          <source>Send only changed events to the handler:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="743f2e81ab646dc82c7cbf5a8bbdff91cf8ab559" translate="yes" xml:space="preserve">
          <source>Send the alert to Alerta.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9ce11f3308f0c32f31639572fb2cee7192fb19e" translate="yes" xml:space="preserve">
          <source>Send the alert to PagerDuty. To use PagerDuty alerting you must first follow the steps to enable a new 'Generic API' service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="528aeac3556b6b4776d287835d1fbfe2fb39b334" translate="yes" xml:space="preserve">
          <source>Send the alert to Pushover. Register your application with Pushover at &lt;a href=&quot;https://pushover.net/apps/build&quot;&gt;https://pushover.net/apps/build&lt;/a&gt; to get a Pushover token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="992c68e432ea6ef7e0334431d0cfde109ea1ca54" translate="yes" xml:space="preserve">
          <source>Send the alert to Sensu.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea7e7b97834f427bbc41c849f084934fd3982331" translate="yes" xml:space="preserve">
          <source>Send the alert to Slack. To allow Kapacitor to post to Slack, go to the URL &lt;a href=&quot;https://slack.com/services/new/incoming-webhook&quot;&gt;https://slack.com/services/new/incoming-webhook&lt;/a&gt; and create a new incoming webhook and place the generated URL in the 'slack' configuration section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e136bb131284b67cc9d16ad220d1ba6ee4e4f5f" translate="yes" xml:space="preserve">
          <source>Send the alert to Talk. To use Talk alerting you must first follow the steps to create a new incoming webhook.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95ae6c4e4a696fb1fa348147b433d04f4d62e83d" translate="yes" xml:space="preserve">
          <source>Send the alert to Telegram. For step-by-step instructions on setting up Kapacitor with Telegram, see the Event Handler Setup Guide (&lt;a href=&quot;https://docs.influxdata.com//kapacitor/latest/guides/event-handler-setup/#telegram-setup&quot;&gt;https://docs.influxdata.com//kapacitor/latest/guides/event-handler-setup/#telegram-setup&lt;/a&gt;). To allow Kapacitor to post to Telegram,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9098d85a944d120be8541b1f530ed22e57ee1aaa" translate="yes" xml:space="preserve">
          <source>Send the alert using SNMP traps. To allow Kapacitor to post SNMP traps,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2252083c090f0b896db6163548ec197dec97a869" translate="yes" xml:space="preserve">
          <source>Sending a sample metric to Telegraf&amp;rsquo;s statsd port:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74d21f295f17dc1a24b2bca2cca78f283065dd48" translate="yes" xml:space="preserve">
          <source>Sensors plugin strconv.ParseFloat: parsing &amp;ldquo;&amp;rdquo;: invalid syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0166be3a73f6171426147c4368e709f1ff2db399" translate="yes" xml:space="preserve">
          <source>Sensu</source>
          <target state="translated">Sensu</target>
        </trans-unit>
        <trans-unit id="259bb84c094715e25ab79d71644638b69dc0052c" translate="yes" xml:space="preserve">
          <source>Sensu &amp;ndash; Post alert message to Sensu client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4b44008940a5cdd4e963c52c6dfe82e166057b0" translate="yes" xml:space="preserve">
          <source>Sensu Handlers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17b5a0cf1baed9ee0e80ebd70f4ae7ef1493466c" translate="yes" xml:space="preserve">
          <source>Sensu Source</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21c9f8be41dd63610b2f4c8edc8ca7646b685614" translate="yes" xml:space="preserve">
          <source>Sensu handler list. If empty uses the handler list from the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7a85ee37e3acdbbaa3b717000102e56aefedfa" translate="yes" xml:space="preserve">
          <source>Sensu source for which to post messages. If empty uses the source from the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1f2321d3a1fb55ad775eb140d8007bcf42aa684" translate="yes" xml:space="preserve">
          <source>Sensu source in which to post messages. If empty uses the Source from the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f26df9c6b1c1b0b797d4948ebb5abed93201712" translate="yes" xml:space="preserve">
          <source>Separate container_version from container_image tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5220f4a69b29e18bb3ca9de86416bbfc380bcbb" translate="yes" xml:space="preserve">
          <source>Separate field key-value pairs with an equals sign &lt;code&gt;=&lt;/code&gt; and no spaces:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="017900eb38404bb57bdc7c29cbeb35f44cc14d11" translate="yes" xml:space="preserve">
          <source>Separate multiple &lt;a href=&quot;#the-basic-select-statement&quot;&gt;&lt;code&gt;SELECT&lt;/code&gt; statements&lt;/a&gt; in a query with a semicolon (&lt;code&gt;;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="065bfccd88b436dcb82b5939e2f4b1f9f268ed42" translate="yes" xml:space="preserve">
          <source>Separate multiple field-value pairs with a comma and no spaces:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba794a324770081fb340c5631274da620fd7451d" translate="yes" xml:space="preserve">
          <source>Separate multiple functions in one &lt;code&gt;SELECT&lt;/code&gt; statement with a comma (&lt;code&gt;,&lt;/code&gt;). The syntax applies to all InfluxQL functions except &lt;a href=&quot;#top&quot;&gt;&lt;code&gt;TOP()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#bottom&quot;&gt;&lt;code&gt;BOTTOM()&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;SELECT&lt;/code&gt; clause does not support specifying &lt;code&gt;TOP()&lt;/code&gt; or &lt;code&gt;BOTTOM()&lt;/code&gt; with another function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9322870860428ade125fe3b87ab546c9a974f8c" translate="yes" xml:space="preserve">
          <source>Separate multiple tag-value pairs with a comma and no spaces:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc7e1d45ab9c37da3be500245c01ff5de3cb3e9" translate="yes" xml:space="preserve">
          <source>Separate tag key-value pairs with an equals sign &lt;code&gt;=&lt;/code&gt; and no spaces:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc1d48bdd9556f57b6046a4f7a768d451b707ec4" translate="yes" xml:space="preserve">
          <source>Separate the field set and the optional timestamp with a whitespace. The whitespace is required in Line Protocol if you&amp;rsquo;re including a timestamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="546c70d9e2022f5036df2e1880023492e87d0f05" translate="yes" xml:space="preserve">
          <source>Separate the measurement and the field set or, if you&amp;rsquo;re including a tag set with your data point, separate the tag set and the field set with a whitespace. The whitespace is required in Line Protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0518fd9ac0412ef9ceaa69e2ea372c286dab0b11" translate="yes" xml:space="preserve">
          <source>Series cardinality across all database:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba760d7c151245ea7f9a65f857eb37ff991e59cf" translate="yes" xml:space="preserve">
          <source>Series cardinality per database:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f7afbed556df18d17e524ecb3b339ad0c0f9737" translate="yes" xml:space="preserve">
          <source>Server Monitoring</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27d1511f8b2742aa04db9a6758b010d35e4f20fb" translate="yes" xml:space="preserve">
          <source>ServerInfo &amp;ndash; Information about the running server. Available nested fields are: Hostname, ClusterID and ServerID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="603d1da16486bcd97666002c2989c288eca6e4c6" translate="yes" xml:space="preserve">
          <source>Service Plugin - CollectD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5378e55ed7484be4ab328a0c82bff844c4fa7cee" translate="yes" xml:space="preserve">
          <source>Service Plugin - Graphite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3efb6d837238d1c6f1fc7c91a6623a615ebd9cb2" translate="yes" xml:space="preserve">
          <source>Service Plugin - OpenTSDB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b931fff765e191f508248bc85cb41b9f445007f5" translate="yes" xml:space="preserve">
          <source>Service Plugin - UDP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0d02da8f20fd2bd816065ad9862215892bd854c" translate="yes" xml:space="preserve">
          <source>Service Plugins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f50c438bb664fa41e2b07335d52d8da06bfe24f" translate="yes" xml:space="preserve">
          <source>Service input plugins are input plugins that run in a passive collection mode while the Telegraf agent is running. They listen on a socket for known protocol inputs, or apply their own logic to ingested metrics before delivering them to the Telegraf agent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="602e2e0acfcae8e5872e7ed75a4b2372ea14b414" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;u&lt;/code&gt; as the username and &lt;code&gt;p&lt;/code&gt; as the password.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68bf08292a0140c06922ab95869b065eba78d21b" translate="yes" xml:space="preserve">
          <source>Set X-Influxdb-Version header on every request (even 404 requests).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fb31ea6fdc4d2ae7ed392737a1569113ad6f6a3" translate="yes" xml:space="preserve">
          <source>Set a &lt;a href=&quot;https://tools.ietf.org/html/rfc7519&quot;&gt;JWT&lt;/a&gt; signature to a random string. This is needed for all OAuth2 providers that you choose to configure. &lt;em&gt;Keep this random string around!&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb3cb1ea923dbd70c934a8567717699901a1757c" translate="yes" xml:space="preserve">
          <source>Set a header key and value on the post request. Setting the Authenticate header is not allowed from within TICKscript, please use the configuration file to specify sensitive headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412e0c517519c1de0c93433d0c3ce2ac2e07d918" translate="yes" xml:space="preserve">
          <source>Set default Zookeeper chroot to empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72abbddf68763720cd12dbfe2e32f67c106ca2b8" translate="yes" xml:space="preserve">
          <source>Set default measurement name for snmp input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad456f304ce6689f3db1789a55d5a15fbea96dc0" translate="yes" xml:space="preserve">
          <source>Set of extra header values to set on the POST request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f8c676f023b8385999863d52c1ec2a9da2f062f" translate="yes" xml:space="preserve">
          <source>Set of named vars from the TICKscript with their type, default values and description.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f4f13dfc39a28c7598b381b50c0cbef41e072c2" translate="yes" xml:space="preserve">
          <source>Set required default values in udp_listener &amp;amp; tcp_listener.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7693a068ab726a094b3d19ba10599f67e40d9fb" translate="yes" xml:space="preserve">
          <source>Set the CSV output to an empty string for null values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ffd055b16393bc5e11f0ba8c3a8295a346dde23" translate="yes" xml:space="preserve">
          <source>Set the condition cursor instead of aux iterator when creating a nil condition cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59533b9aaccfde7f80ab1fd9ab4b9cc7f5fd2a87" translate="yes" xml:space="preserve">
          <source>Set the dashboard&amp;rsquo;s &lt;strong&gt;auto-refresh interval&lt;/strong&gt; at the top of the page - the default interval is every 15 seconds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f11ea70d993c4cc0f8769368847e5c17e1c621d4" translate="yes" xml:space="preserve">
          <source>Set the dashboard&amp;rsquo;s &lt;strong&gt;time range&lt;/strong&gt; at the top of the page - the default range is the past one hour</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="123c3034c86231930799fc1080b6568706392c0a" translate="yes" xml:space="preserve">
          <source>Set the environment variable &lt;code&gt;INFLUXDB_CONFIG_PATH&lt;/code&gt; to the path of your configuration file and start the process. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9667a77a0903b348a1d1267b1439545cbd561dad" translate="yes" xml:space="preserve">
          <source>Set the logging level (default: &lt;code&gt;info&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a48f4f389c5d471afe11e5c45a26714ed82c0375" translate="yes" xml:space="preserve">
          <source>Set the value in the configuration overrides.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c909c000265f1c4aefb3a91523cf702ee59deb" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;false&lt;/code&gt; to disable CQs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e85704ec352053215d6d524710aa2fde98a761e" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;false&lt;/code&gt; to disable HTTP. Note that the InfluxDB &lt;a href=&quot;../../tools/shell/index&quot;&gt;command line interface (CLI)&lt;/a&gt; connects to the database using the HTTP API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99dcea0506d70076ae68ed36991bf8e9599b818b" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;false&lt;/code&gt; to disable logging for CQ events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e1660533924a88791e8a768a9fc46d2df1ff00f" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;false&lt;/code&gt; to disable logging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12e63e7c39c4a72ddacc77a41290effff53876bb" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;false&lt;/code&gt; to disable recording statistics internally. If set to &lt;code&gt;false&lt;/code&gt; it will make it substantially more difficult to diagnose issues with your installation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ce76aba765b9e1dd0656e43a5900b652d7592f" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;false&lt;/code&gt; to disable the subscriber service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfb5443a89036a0e9ef27c3ce9ef2693012abf90" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;false&lt;/code&gt; to prevent InfluxDB from enforcing retention policies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c96a46d9056ab2ba40caf6f4a8c091353ee6f4c5" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;tcp&lt;/code&gt; or &lt;code&gt;udp&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d02d503316646edaf62ead6857585a0f2180a026" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;true&lt;/code&gt; to enable Graphite input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4593a504bb82c067a0909e536e7d0c1ea6551f5b" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;true&lt;/code&gt; to enable HTTPS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d207ebfb0b123d3fa5ed27025d2c51de54bf67c9" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;true&lt;/code&gt; to enable collectd writes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a917f1e74432326afd94a762a88e00880110306f" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;true&lt;/code&gt; to enable http service over unix domain socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1714ab35cf91190098172e60270676e956061e5" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;true&lt;/code&gt; to enable logging for the write payload. If set to &lt;code&gt;true&lt;/code&gt;, this will duplicate every write statement in the logs and is thus not recommended for general use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a9302bdf7144bb1294141dfd570f8d24140920d" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;true&lt;/code&gt; to enable openTSDB writes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bf06c1a72f7e0115705d6c5bfc8da2906503692" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;true&lt;/code&gt; to enable writes over UDP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4910b2777e7ca44ded2dd78641a7e77b67735e00" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;true&lt;/code&gt; to require authentication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8526e5c8736a023ce1393e7a19ad08d9287ab6f5" translate="yes" xml:space="preserve">
          <source>Set up Authentication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d3d84986b4b7c1fa474f559b98abf093f92235c" translate="yes" xml:space="preserve">
          <source>Set up HTTPS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c30283f994ecf33fcb20eb6b4c0f789b3772a323" translate="yes" xml:space="preserve">
          <source>Sets the duration (in seconds) over which the client collects information. The default duration is ten seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbd07f786419b25137c709126ef0477e50d71487" translate="yes" xml:space="preserve">
          <source>Sets the new retention policy as the default retention policy for the database. This setting is optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a951f62ea05ae5086475a75340c9a80b808b4f8" translate="yes" xml:space="preserve">
          <source>Sets the password for authentication if you&amp;rsquo;ve enabled authentication. Use with the query string parameter &lt;code&gt;u&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee6fa3b22398db43757b202f0904ca204f54032b" translate="yes" xml:space="preserve">
          <source>Sets the precision for the supplied Unix time values. InfluxDB assumes that timestamps are in nanoseconds if you do not specify &lt;code&gt;precision&lt;/code&gt;.**</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae4d9cd747e1f5f89d41d92724be04c324cb3f4" translate="yes" xml:space="preserve">
          <source>Sets the target &lt;a href=&quot;../../concepts/glossary/index#database&quot;&gt;database&lt;/a&gt; for the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e8033f0f1d53a267e291c91fbf5556472a94fcf" translate="yes" xml:space="preserve">
          <source>Sets the target &lt;a href=&quot;../../concepts/glossary/index#database&quot;&gt;database&lt;/a&gt; for the write.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb83a0a08396b5f87f05a1fbb1dde0238aa03edf" translate="yes" xml:space="preserve">
          <source>Sets the target &lt;a href=&quot;../../concepts/glossary/index#retention-policy-rp&quot;&gt;retention policy&lt;/a&gt; for the write. InfluxDB writes to the &lt;code&gt;DEFAULT&lt;/code&gt; retention policy if you do not specify a retention policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af68ad1cd0db731983d2d46b15c1c70f730050f2" translate="yes" xml:space="preserve">
          <source>Sets the username for authentication if you&amp;rsquo;ve enabled authentication. The user must have read access to the database. Use with the query string parameter &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d453e9bd04e48daede05f4881664a1efdec8b9" translate="yes" xml:space="preserve">
          <source>Sets the username for authentication if you&amp;rsquo;ve enabled authentication. The user must have write access to the database. Use with the query string parameter &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ac358d934f0ecd9a71c477a16161e6e7a860586" translate="yes" xml:space="preserve">
          <source>Sets the write consistency for the point. InfluxDB assumes that the write consistency is &lt;code&gt;one&lt;/code&gt; if you do not specify &lt;code&gt;consistency&lt;/code&gt;. See the &lt;a href=&quot;https://docs.influxdata.com/enterprise/v1.3/concepts/clustering#write-consistency&quot;&gt;InfluxEnterprise documentation&lt;/a&gt; for detailed descriptions of each consistency option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae7eae68da38d7c8f16561f21f0383ca6dd74605" translate="yes" xml:space="preserve">
          <source>Sets the write consistency level: &lt;code&gt;any&lt;/code&gt;, &lt;code&gt;one&lt;/code&gt;, &lt;code&gt;quorum&lt;/code&gt;, or &lt;code&gt;all&lt;/code&gt; for writes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdd7bb2816b7a8f88bce0e47be39943bc369516b" translate="yes" xml:space="preserve">
          <source>Setup</source>
          <target state="translated">Setup</target>
        </trans-unit>
        <trans-unit id="4a3361580ab9dbb41495858e2ef2376087641a00" translate="yes" xml:space="preserve">
          <source>Setup HTTPS with a CA-Signed Certificate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a97f41f54477c7231093e9710390a872ee91dfa" translate="yes" xml:space="preserve">
          <source>Setup HTTPS with a Self-Signed Certificate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4ac45e1622602a395724671f287582024d475ed" translate="yes" xml:space="preserve">
          <source>Setup Tip:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82886abe99cdb9af4454faeb4da3fcd51d02d1b3" translate="yes" xml:space="preserve">
          <source>Several factors explain why data may not be immediately dropped after a retention policy (RP) change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a7c502f26588d90efc563d79342503834746fc" translate="yes" xml:space="preserve">
          <source>Several statements were missing the DefaultDatabase method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ff14e79f59576a8475ff65eb8b30ee412a86ce2" translate="yes" xml:space="preserve">
          <source>Shard Group Duration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89ce75fe3529976d55e5a8b9ab6b64648b43bc7e" translate="yes" xml:space="preserve">
          <source>Shard Group Duration Management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e13d8b8399ad189bf134bb7453e88a6c1bb1d45" translate="yes" xml:space="preserve">
          <source>Shard Group Duration Overview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d6419339b2077f27df0ef4522fe5daeefd9f55b" translate="yes" xml:space="preserve">
          <source>Shard Group Duration Recommendations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8940e810587c8eedb2de63bd64f159879919ecea" translate="yes" xml:space="preserve">
          <source>Shard group interval</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f982d889c19f7f585d4ee8ad32de93018817477" translate="yes" xml:space="preserve">
          <source>Shard groups are logical containers for shards. Shard groups are organized by time and retention policy. Every retention policy that contains data has at least one associated shard group. A given shard group contains all shards with data for the interval covered by the shard group. The interval spanned by each shard group is the shard duration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d00dfb6835bc778f3695382b0f739c1c2d07cf44" translate="yes" xml:space="preserve">
          <source>Shard stats include WAL path tag so disk bytes make more sense.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1313825bbab6df1cf226b81b48daa8358b7ec99" translate="yes" xml:space="preserve">
          <source>Shared WaitGroup in Exec plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="469d5b183fdc0d59e41a51e61529cdd95274ba7c" translate="yes" xml:space="preserve">
          <source>Shift</source>
          <target state="translated">Shift</target>
        </trans-unit>
        <trans-unit id="798d7d4b3d8676795b51f6de849e2ec9bea8c6ab" translate="yes" xml:space="preserve">
          <source>Shift Node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="556d453be88044ad978951b6e418a2fa088068bd" translate="yes" xml:space="preserve">
          <source>Shift all data points 10s backward in time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7510b76cacb6d91ffafff4c3fe655a868ab20d1" translate="yes" xml:space="preserve">
          <source>Shift all data points 5m forward in time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="557fca895850a4b472adf39b6d2c900294fe0dae" translate="yes" xml:space="preserve">
          <source>Shift points and batches in time, this is useful for comparing batches or points from different times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="349601f79a49abeed6d0a066c48f9da6b4453019" translate="yes" xml:space="preserve">
          <source>ShiftNode</source>
          <target state="translated">ShiftNode</target>
        </trans-unit>
        <trans-unit id="6d14ffe2fe3f0a97a0eecc15acad940636280212" translate="yes" xml:space="preserve">
          <source>Shorten query runtimes by pre-calculating expensive queries with CQs. Use a CQ to automatically downsample commonly-queried, high precision data to a lower precision. Queries on lower precision data require fewer resources and return faster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb865ff50441626cc79650a461dc34b6f14db0c4" translate="yes" xml:space="preserve">
          <source>Show Chronograf version information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cb735e9fcb83f520c880a2a3ae409af9d0decb6" translate="yes" xml:space="preserve">
          <source>Show legend on &lt;a href=&quot;../../troubleshooting/frequently-asked-questions/index#line-stat&quot;&gt;Line+Stat&lt;/a&gt; visualization type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04267c3ed9def3272d2340b129d03686c0720ef6" translate="yes" xml:space="preserve">
          <source>Show red indicator on Hosts Page for an offline host</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35314c4eb6ca0c9c2edd86960a792df17b4390a0" translate="yes" xml:space="preserve">
          <source>Show submenus when the alert notification is present</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="968d580d9742572273d92d5875cd702f2658a761" translate="yes" xml:space="preserve">
          <source>Show the help information for &lt;code&gt;chronograf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31d4e81a423c0b0f9b11350258f0c48a78cc3101" translate="yes" xml:space="preserve">
          <source>Show the time-series&amp;rsquo; single most recent value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba21d7274b2f9b99cf1b644e2ced1c3dfb2b8ebc" translate="yes" xml:space="preserve">
          <source>Show time-series arranged on top of each other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd64510085507cfbe1b3f3d2518928203128cda" translate="yes" xml:space="preserve">
          <source>Show time-series in a bar chart. Bar graphs are available in versions 1.3.3.0+.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c055a8aef04cf2408413768113bd2b15a9fcb775" translate="yes" xml:space="preserve">
          <source>Show time-series in a line graph and overlay the time-series&amp;rsquo; single most recent value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="110582b4ac4fba08be29085f8e432ccb15f23855" translate="yes" xml:space="preserve">
          <source>Show time-series in a line graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0c2614c320b39579aa8cc578e62e8a1fd4067b3" translate="yes" xml:space="preserve">
          <source>Show time-series in a staircase graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c51a7d4312110627624c46c66475fa267533ad18" translate="yes" xml:space="preserve">
          <source>Sigma</source>
          <target state="translated">Sigma</target>
        </trans-unit>
        <trans-unit id="a48f5584941f5096faaedebe74518786f362b1a4" translate="yes" xml:space="preserve">
          <source>Sign in with you account. under the Team tab, click &quot;Integrations&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b12b4d4aaca2c5b4cf9cfb1b551d784c98463b" translate="yes" xml:space="preserve">
          <source>Signed 64-bit integers (-9223372036854775808 to 9223372036854775807). Specify an integer with a trailing &lt;code&gt;i&lt;/code&gt; on the number. Example: &lt;code&gt;1i&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b52240a15871a3b90d108416ca5b0a2341a78b1" translate="yes" xml:space="preserve">
          <source>Significantly improve DROP DATABASE speed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8bf7eba461d0af77abf64240b97057ec125985" translate="yes" xml:space="preserve">
          <source>Significantly improve shutdown speed for high cardinality databases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25adcdd79d899ff994f00b7712d83e5214db7c5c" translate="yes" xml:space="preserve">
          <source>Similar to Github&amp;rsquo;s organization restriction, Google authentication can be restricted to permit access to Chronograf from only specific domains. These are configured using the &lt;code&gt;GOOGLE_DOMAINS&lt;/code&gt; environment variable or the &lt;a href=&quot;../configuration/index#google-domains&quot;&gt;&lt;code&gt;--google-domains&lt;/code&gt;&lt;/a&gt; switch. Multiple domains are separated with a comma. For example, if we wanted to permit access only from biffspleasurepalace.com and savetheclocktower.com the environment variable would be set as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ccd813b579ed87fb4c95c930b78d3709cbc859b" translate="yes" xml:space="preserve">
          <source>Similar to the point above, splitting a single tag with multiple pieces into separate tags will simplify your queries and reduce the need for regular expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d755a735b6c31a203f80c8a13cd1bd29d501934e" translate="yes" xml:space="preserve">
          <source>Simple queries:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ad70287c15809c851f868ec91d6187a3f9292bf" translate="yes" xml:space="preserve">
          <source>Simplify admin user check.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="075c110c0699e442aa63898cf7b067d7c6ffbf44" translate="yes" xml:space="preserve">
          <source>Simplify plugin testing without outputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="274cb65585f35780e865f4e1ac2284e1226ec90b" translate="yes" xml:space="preserve">
          <source>Simplify the admin user check.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60fef841296be9ebf7de4bce978c61ea99668ac2" translate="yes" xml:space="preserve">
          <source>Sin returns the sine of the radian argument x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a242209220c5d80c28d74c0e4d5acdae175d0e8" translate="yes" xml:space="preserve">
          <source>Since InfluxDB is running on &lt;code&gt;http://localhost:8086&lt;/code&gt; Kapacitor finds it during start up and creates several &lt;a href=&quot;https://github.com/influxdb/influxdb/blob/master/influxql/README.md#create-subscription&quot;&gt;subscriptions&lt;/a&gt; on InfluxDB. These subscriptions tell InfluxDB to send all the data it receives to Kapacitor. You should see some basic start up messages and something about listening on UDP port and starting subscriptions. At this point InfluxDB is streaming the data it is receiving from Telegraf to Kapacitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="047b5a513ff1cdb690d94103bb27f8b9d0521387" translate="yes" xml:space="preserve">
          <source>Since TICKscript is its own language we have built a small utility similiar to &lt;a href=&quot;https://godoc.org/golang.org/x/tools/cmd/godoc&quot;&gt;godoc&lt;/a&gt; named &lt;a href=&quot;https://github.com/influxdb/kapacitor/tree/master/tick/cmd/tickdoc&quot;&gt;tickdoc&lt;/a&gt;. &lt;code&gt;tickdoc&lt;/code&gt; generates documentation from comments in the code. The &lt;code&gt;tickdoc&lt;/code&gt; utility understands two special comments to help it generate clean documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3959dc567df0d2a044d729316859d6de1cda9928" translate="yes" xml:space="preserve">
          <source>Since flattening points creates dynamically named fields in general it is expected that the resultant data is passed to a UDF or similar for custom processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2290760bcb65e0bdf2d9dd58621cd964e92fcb5" translate="yes" xml:space="preserve">
          <source>Since the &lt;a href=&quot;../alert_node/index&quot;&gt;AlertNode&lt;/a&gt; is the last piece it can be further modified as usual. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3639000bd7494a312108030695a3d2c90d750033" translate="yes" xml:space="preserve">
          <source>Since the &lt;a href=&quot;index&quot;&gt;AlertNode&lt;/a&gt; is the last piece it can be further modified as usual. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd7099a0739039e75d9c9a0626d0395eae6d0e19" translate="yes" xml:space="preserve">
          <source>Since the operations team has a on-call rotation you can setup handling of alerts on the &lt;code&gt;ops_team&lt;/code&gt; topic accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3bc9104cf4e471253db494e9b4482ed8575e297" translate="yes" xml:space="preserve">
          <source>Since we already have the data recorded, we can just replay the data as fast as possible instead of waiting for real time to pass. If &lt;code&gt;-real&lt;/code&gt; was set, then the data would be replayed by waiting for the deltas between the timestamps to pass, though the result is identical whether real time passes or not. This is because time is measured on each node by the data points it receives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d9f9d824be7e5703f7b78b45018ad6cbf017d4d" translate="yes" xml:space="preserve">
          <source>Since we are writing data back to InfluxDB create a database &lt;code&gt;game&lt;/code&gt; for our results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da8b6fc7058c30ea29350c563f90c3b66d4808a5" translate="yes" xml:space="preserve">
          <source>Since we defined the task with a database and retention policy pair, the recording knows to only record data from that database and retention policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cb74481d4849de7a61a3b59cff4ce72b5686551" translate="yes" xml:space="preserve">
          <source>Single node or Cluster?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd69de879477bc62f7b3016e376f60a386f45cac" translate="yes" xml:space="preserve">
          <source>Single quote &lt;a href=&quot;../../concepts/glossary/index#tag-value&quot;&gt;tag values&lt;/a&gt; in the &lt;code&gt;WHERE&lt;/code&gt; clause. Queries with unquoted tag values or double quoted tag values will not return any data and, in most cases, &lt;a href=&quot;#common-issues-with-the-where-clause&quot;&gt;will not return an error&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b32ad2f930781308b4b4d213814d5775fca93d97" translate="yes" xml:space="preserve">
          <source>Single quote date time strings. InfluxDB returns an error (&lt;code&gt;ERR: invalid
operation: time and *influxql.VarRef are not compatible&lt;/code&gt;) if you double quote a date time string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="036127657e4b845b5ac017c32f6dc8949d7a1d11" translate="yes" xml:space="preserve">
          <source>Single quote string field values in the &lt;code&gt;WHERE&lt;/code&gt; clause. Queries with unquoted string field values or double quoted string field values will not return any data and, in most cases, &lt;a href=&quot;#common-issues-with-the-where-clause&quot;&gt;will not return an error&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58eab5cb58da2371dc2d033b4ca309350b5deef2" translate="yes" xml:space="preserve">
          <source>Single quote string values (for example, tag values) but do not single quote identifiers (database names, retention policy names, user names, measurement names, tag keys, and field keys).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45b8cd330d3cb817e919c84ab91ca1777300ec3e" translate="yes" xml:space="preserve">
          <source>Single quoted date-time strings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bea48abaae81780b8d6e9aeddb0bb7d5a86322e" translate="yes" xml:space="preserve">
          <source>Single quoted strings with backslash escaped single quotes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf4e6055724041d575ee777bbda5cb694b4608ee" translate="yes" xml:space="preserve">
          <source>Single quotes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c4205a69b803328efe1ed158c8d7e8251919c31" translate="yes" xml:space="preserve">
          <source>Single quotes and double quotes in kapacitor do very different things:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef9bb079afde38e94511750acc3abbd8322cea8e" translate="yes" xml:space="preserve">
          <source>SingleStat</source>
          <target state="translated">SingleStat</target>
        </trans-unit>
        <trans-unit id="f35b8f7d99b41bcac88dc066f89ded4a25031767" translate="yes" xml:space="preserve">
          <source>Sinh returns the hyperbolic sine of x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed9a878a1f03728d8e1863fbc708180d069f9ba" translate="yes" xml:space="preserve">
          <source>Size of the recording on disk in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82bc97f1f6ed8f44f36c6bbc6cde8d2dcdb5ad8a" translate="yes" xml:space="preserve">
          <source>Skip past points at the same time in derivative call within a merged series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="430b38bf6daa7f9164b164b2ffd540b5a3afe2fd" translate="yes" xml:space="preserve">
          <source>Slack</source>
          <target state="translated">Slack</target>
        </trans-unit>
        <trans-unit id="d57a8c63297151ef71e1c64b3b905ff4929fe8d4" translate="yes" xml:space="preserve">
          <source>Slack &amp;ndash; Post alert message to Slack channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d5f54da69409057315a3273824280f83d05ce87" translate="yes" xml:space="preserve">
          <source>Slack Channel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09f1fbe26bb9594b7fc73b7f348f2788b7b7faff" translate="yes" xml:space="preserve">
          <source>Slack IconEmoji</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee9fe1239bfc20c4f918527f9aeaf353d4a57bfd" translate="yes" xml:space="preserve">
          <source>Slack Username</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9efe185b3836eecb4de57182ae54b48d91441d82" translate="yes" xml:space="preserve">
          <source>Slack WebHook URL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae1815b7b45c6c5b2d4bc43d5b78313b6dd1f7dc" translate="yes" xml:space="preserve">
          <source>Slack channel in which to post messages. If empty uses the channel from the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6c1a02e3c285d797ad00fa7beca43c681a45639" translate="yes" xml:space="preserve">
          <source>Small edits to the etc/config.sample.toml file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8013bd224ffe82aa6cd6d1990cc7e975d77013ea" translate="yes" xml:space="preserve">
          <source>Snapshot/Restore &amp;ndash; Kapacitor will regularly snapshot the state of your UDF process so that it can be restored if the process is restarted. The examples &lt;a href=&quot;https://github.com/influxdata/kapacitor/tree/master/udf/agent/examples/&quot;&gt;here&lt;/a&gt; have implementations for the &lt;code&gt;snapshot&lt;/code&gt; and &lt;code&gt;restore&lt;/code&gt; methods. Implement them for the &lt;code&gt;TTestHandler&lt;/code&gt; handler as an exercise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1da6fa3e02b98fd4db9ef00bf89d390d656f5156" translate="yes" xml:space="preserve">
          <source>Snapshots - Values in the Cache and WAL must be converted to TSM files to free memory and disk space used by the WAL segments. These compactions occur based on the cache memory and time thresholds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f9e2f0e0e2880cac3f01389af86eae1e0507355" translate="yes" xml:space="preserve">
          <source>SnmpTrap</source>
          <target state="translated">SnmpTrap</target>
        </trans-unit>
        <trans-unit id="f1a2a4b152b20f48bc3eb6c280f4b63d2a8f619b" translate="yes" xml:space="preserve">
          <source>SnmpTrap Data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30ca7cfc8ac1b934ee7a951fa0de8d4970ec7818" translate="yes" xml:space="preserve">
          <source>Snmptrap</source>
          <target state="translated">Snmptrap</target>
        </trans-unit>
        <trans-unit id="ea90bfef87009eadcf45c2149598bd334308f856" translate="yes" xml:space="preserve">
          <source>So far so good! You&amp;rsquo;re ready to move on to the next section. Note that there&amp;rsquo;s no need to create your own database on your InfluxDB instance; the other components of the TICK stack will handle that for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f87cd30094171261a690b14476f55624e77251e9" translate="yes" xml:space="preserve">
          <source>So for example, this JSON:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8001910865e71f55c58d3380a8b4f1eff611ea3d" translate="yes" xml:space="preserve">
          <source>So what do we want to tell Kapacitor to do? As an example, we will trigger an alert on high cpu usage. What is high cpu usage? Let&amp;rsquo;s say when idle cpu drops below 70% we should trigger an alert.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76af710bb08dbbe47782e194609d6e682378a24a" translate="yes" xml:space="preserve">
          <source>Socket based UDF</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4f91bdb0e1b0e40fff4debcd0fea22f1999f491" translate="yes" xml:space="preserve">
          <source>Solution</source>
          <target state="translated">Solution</target>
        </trans-unit>
        <trans-unit id="c048d01e9b2680871546b109348d7b319a848f1c" translate="yes" xml:space="preserve">
          <source>Some InfluxQL functions &lt;a href=&quot;../../troubleshooting/frequently-asked-questions/index#which-influxql-functions-support-nesting&quot;&gt;support nesting&lt;/a&gt; of other functions. Most do not. If your function does not support nesting, you can get the same functionality using a CQ to calculate the inner-most function. Then simply query the CQ results to calculate the outer-most function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e93335e4e8c72f9e9490b1b5f0fe04b69358e09b" translate="yes" xml:space="preserve">
          <source>Some InfluxQL functions support nesting in the &lt;a href=&quot;../data_exploration/index#select-clause&quot;&gt;&lt;code&gt;SELECT&lt;/code&gt; clause&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="795f19c8b3f773977a70a8294587db60e92ff40a" translate="yes" xml:space="preserve">
          <source>Some customers may choose to install InfluxDB with public internet access, however doing so can inadvertently expose your data and invite unwelcome attacks on your database. Check out the sections below for how protect the data in your InfluxDB instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="257b089b685325f7ec3adc2f97b9b537a1f6ac59" translate="yes" xml:space="preserve">
          <source>Some examples of TICKscripts built against common Telegraf plugin data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a59ade9331363d09b1ba180dea58705e7a67721b" translate="yes" xml:space="preserve">
          <source>Some iterators are more complex or need to be implemented at a higher level. For example, the &lt;code&gt;DERIVATIVE()&lt;/code&gt; needs to retrieve all points for a window first before performing the calculation. This iterator is created by the engine itself and is never requested to be created by the lower levels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4de3c2b14c04bfd654dae2743315915eddb5175b" translate="yes" xml:space="preserve">
          <source>Some users were able to get past this by putting InfluxDB on big hardware with near unlimited IOPS. However, most users are on VMs with limited resources in the cloud. We had to figure out a way to reduce the impact of writing a bunch of points into hundreds of thousands of series at a time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d25216d263760d44f7ed413947a23e9fb6bcbe0a" translate="yes" xml:space="preserve">
          <source>Something so simple as defining an alert can quickly be extended to apply to a much larger scope. With the above script, you will be alerted if any service in any datacenter deviates more than 3 standard deviations away from normal behavior as defined by the historical 95th percentile of cpu usage, within 1 minute!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c0226dae58dd18a7d62904334775421376a2e6" translate="yes" xml:space="preserve">
          <source>Sort and dynamically adjust column width in CLI output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9e184d1331454d96941608a6d2152a97963f5c3" translate="yes" xml:space="preserve">
          <source>Sort tags by key before sending them to the database. The sort should match the results from the &lt;a href=&quot;http://golang.org/pkg/bytes/#Compare&quot;&gt;Go bytes.Compare function&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27706eee5ea331854f991b0aff139a9a4b84c2a2" translate="yes" xml:space="preserve">
          <source>Sorted Merge Iterator - This iterator also combines one or more iterators into a new iterator of the same type. However, this iterator guarantees time ordering of every point. This makes it slower than the &lt;code&gt;MergeIterator&lt;/code&gt; but this ordering guarantee is required for non-aggregate queries which return the raw data points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc8151c23c073cec08422521c2f183a0461f435f" translate="yes" xml:space="preserve">
          <source>Special Characters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f684b6e8a2e91b0b334eaedd0210fb438b22d6a" translate="yes" xml:space="preserve">
          <source>Special Characters and Keywords</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d16a0db4e4defc0bb007c250399a6d0baebd9cfe" translate="yes" xml:space="preserve">
          <source>Special characters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adb41c129dcec3e1758df6b4fdd8fdc584e7c19f" translate="yes" xml:space="preserve">
          <source>Special characters and keywords</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7eb929771bfd11e5a75842025fb3c7ec0fb514b" translate="yes" xml:space="preserve">
          <source>Special characters should be escaped with a backslash and not placed in quotes.   Write: &lt;code&gt;INSERT wacky va\&quot;ue=4&lt;/code&gt; Applicable query: &lt;code&gt;SELECT &quot;va\&quot;ue&quot; FROM &quot;wacky&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e365040a3dbb130db0d2e7c10fb83535b73eb84" translate="yes" xml:space="preserve">
          <source>Specific list of user&amp;rsquo;devices rather than all of a user&amp;rsquo;s devices (multiple device names may be separated by a comma)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f9516776a2419db239c5811fa688ffca914dc0" translate="yes" xml:space="preserve">
          <source>Specify Multiple Functions in the SELECT Clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb6f12c2367dac1fd7e634e960a2f44398793883" translate="yes" xml:space="preserve">
          <source>Specify Multiple Functions in the SELECT clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="045e26d24b26bbf153a9632a77ac9c141fd975e9" translate="yes" xml:space="preserve">
          <source>Specify absolute time with date-time strings and epoch time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8027a9a200343b286dece9e8dd7e67a4f08b88a0" translate="yes" xml:space="preserve">
          <source>Specify an empty tag value with &lt;code&gt;''&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a062efabafe403e66eb4c94a40d80046aabce1" translate="yes" xml:space="preserve">
          <source>Specify that the key is a field:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a014a80f5ea4a415a24a9ace51476ce1ce063d7b" translate="yes" xml:space="preserve">
          <source>Specify that the key is a tag:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41fe3e6b297da51cb4980cd846ef457ecd44846a" translate="yes" xml:space="preserve">
          <source>Specify the database with &lt;code&gt;USE &amp;lt;database_name&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6a5c1434faaa0a83c9d17189cd4aad4774bc2f9" translate="yes" xml:space="preserve">
          <source>Specify the database with the &lt;code&gt;db&lt;/code&gt; query string parameter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f391c4e12d9c1d68aea2246dcd2159b37d236974" translate="yes" xml:space="preserve">
          <source>Specify the dimensions on which to flatten the points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24d40bef7113d2ba98b719fb76bac2f40b2e5351" translate="yes" xml:space="preserve">
          <source>Specify the format of the server responses with &lt;code&gt;-format&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b267d7821be0d5b0fa7be1a2bcd4e9b8ce23d8" translate="yes" xml:space="preserve">
          <source>Speed up drop database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b9569a271eb9147adcaac2939641c93acf5930a" translate="yes" xml:space="preserve">
          <source>Speed up shutdown by closing shards concurrently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f13245f80e260a77782391b9bf429c23fab11079" translate="yes" xml:space="preserve">
          <source>Speed up statsd parsing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bde101117a83786a9fe359d813c1badf4a6b2ee" translate="yes" xml:space="preserve">
          <source>Spread</source>
          <target state="translated">Spread</target>
        </trans-unit>
        <trans-unit id="1b795ae9b134bc8c4c0b446e88fecc1f3b41d092" translate="yes" xml:space="preserve">
          <source>Sqrt returns the square root of x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b745a9c14c1c1b16dc1f0ac89a645ebda5794caa" translate="yes" xml:space="preserve">
          <source>Stability and Compatibility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eafca4643813baaae2f7a9fede6aaccb01f75bd" translate="yes" xml:space="preserve">
          <source>Stacked</source>
          <target state="translated">Stacked</target>
        </trans-unit>
        <trans-unit id="5538b8295dcbff0912ccc36faf9887be3dea6fec" translate="yes" xml:space="preserve">
          <source>Standalone Binary: see the next section for how to create a configuration file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2129403cbb4913ee84b4ee4073ce7276f66ace29" translate="yes" xml:space="preserve">
          <source>Standardized AWS credentials evaluation &amp;amp; wildcard CloudWatch dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39fd7a372aa4dd8ba9b42288dbef6ce32093cac9" translate="yes" xml:space="preserve">
          <source>Start InfluxDB and send it data from Telegraf.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9195c6c12fe50ae16c72dc7c995a3a6343ea070" translate="yes" xml:space="preserve">
          <source>Start InfluxDB:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b08e0dee00ad4845b801ee2e5266b85cc66ba8da" translate="yes" xml:space="preserve">
          <source>Start Kapacitor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49cbb50d1bedf482588fcaa719fe4ff43a289994" translate="yes" xml:space="preserve">
          <source>Start Kapacitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4fb9f2e46f342915b48abca0a1248f1ac538b5a" translate="yes" xml:space="preserve">
          <source>Start Recording</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6071db4ba7f7c76661a1a77b54c329d26569a726" translate="yes" xml:space="preserve">
          <source>Start by logging into the Influx CLI:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b79692c280493ce7d172818afb1aeaa5dc56c70a" translate="yes" xml:space="preserve">
          <source>Start the Kapacitor Service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79a59326ead068e27025a8f758f128279d5ddf13" translate="yes" xml:space="preserve">
          <source>Start the Prometheues node_exporter locally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3347bbc25bdcbe578c328a87c02931beec08d81e" translate="yes" xml:space="preserve">
          <source>Start the Telegraf Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9b22ff3d1548b6f4db70bbac54c8315a7bfbc53" translate="yes" xml:space="preserve">
          <source>Start the Telegraf server and direct it to the relevant configuration file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f986c4494a88fe87c17d433b6fc55d7360d8e49a" translate="yes" xml:space="preserve">
          <source>Start the UDF</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcd07da4aec543a0d16f8a7677b1cd83dc8e78ec" translate="yes" xml:space="preserve">
          <source>Start the backend by executing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e9885bf94b5dd1733ccabd140fd420f2f1467eb" translate="yes" xml:space="preserve">
          <source>Start the task:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f4e37b1631853ef482605de658e217280dbe4bc" translate="yes" xml:space="preserve">
          <source>Start the telegraf service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be18dcf9ee5a716df1d17babc461dde27cb1d1f8" translate="yes" xml:space="preserve">
          <source>Start up Kapacitor and you should see it connect to your UDF in both the Kapacitor logs and the UDF process logs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34e963c11887609b20fc09699df0b3331f6cb6af" translate="yes" xml:space="preserve">
          <source>Starting Kapacitor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8872d03dc83dca2197fb5d688593f886a410438" translate="yes" xml:space="preserve">
          <source>Starting with version 1.0, InfluxDB on systemd systems will no longer write files to &lt;code&gt;/var/log/influxdb&lt;/code&gt; by default, and will now use the system configured default for logging (usually journald). On most systems, the logs will be directed to the systemd journal and can be accessed with the command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="758647fe7bd05f270b1f5dabe6a09a43e97a0ffb" translate="yes" xml:space="preserve">
          <source>Starting with version 1.3, non-admin users can execute the &lt;code&gt;USE &amp;lt;database_name&amp;gt;&lt;/code&gt; query for databases on which they have &lt;code&gt;READ&lt;/code&gt; and/or &lt;code&gt;WRITE&lt;/code&gt; permissions. If a non-admin user attempts to &lt;code&gt;USE&lt;/code&gt; a database on which the user doesn&amp;rsquo;t have &lt;code&gt;READ&lt;/code&gt; and/or &lt;code&gt;WRITE&lt;/code&gt; permissions, the system returns an error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c0cc002019bc0a88d40e9fb899f1c75bf286966" translate="yes" xml:space="preserve">
          <source>State Count Node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbdf2e1d2702e625bfb1620db2a495a9aa3ec12a" translate="yes" xml:space="preserve">
          <source>State Duration Node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="581ca91ea7944420575b3bf087eff95d78c91b1c" translate="yes" xml:space="preserve">
          <source>StateChangesOnly</source>
          <target state="translated">StateChangesOnly</target>
        </trans-unit>
        <trans-unit id="fc333ffd6e4d8a11db6dfed95ff907e11a6ac8fa" translate="yes" xml:space="preserve">
          <source>StateCount</source>
          <target state="translated">StateCount</target>
        </trans-unit>
        <trans-unit id="81981c282b621547a8e2a6c1c37ba06792ac49b2" translate="yes" xml:space="preserve">
          <source>StateCountNode</source>
          <target state="translated">StateCountNode</target>
        </trans-unit>
        <trans-unit id="2ce13676f28da445dc3e463464bdd5b7cbdd085d" translate="yes" xml:space="preserve">
          <source>StateDuration</source>
          <target state="translated">StateDuration</target>
        </trans-unit>
        <trans-unit id="0c88f9a0efab865db117dd680634d887a990d5a7" translate="yes" xml:space="preserve">
          <source>StateDurationNode</source>
          <target state="translated">StateDurationNode</target>
        </trans-unit>
        <trans-unit id="71935ea4bf5ee8ec266ebc80897169c7237a27d7" translate="yes" xml:space="preserve">
          <source>Stateful</source>
          <target state="translated">Stateful</target>
        </trans-unit>
        <trans-unit id="c9801250cc59992491c9bee1aed04c17ddb849ea" translate="yes" xml:space="preserve">
          <source>Stateful Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5653cebc057d4791ce07031ad9286e729de6d691" translate="yes" xml:space="preserve">
          <source>Statements</source>
          <target state="translated">Statements</target>
        </trans-unit>
        <trans-unit id="e1ca4e1fbd7b64b5c49ec8c940bb84e923893c59" translate="yes" xml:space="preserve">
          <source>Statically list targets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be763e9aba2af6b8baabada85d5e26c043c93fed" translate="yes" xml:space="preserve">
          <source>Stats</source>
          <target state="translated">Stats</target>
        </trans-unit>
        <trans-unit id="bc3c40405e2e22965a10aa862af8e5a66c848d4f" translate="yes" xml:space="preserve">
          <source>Stats Node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8a635d76c4a3a2b3638d1fec4926c5c0c3d335f" translate="yes" xml:space="preserve">
          <source>StatsNode</source>
          <target state="translated">StatsNode</target>
        </trans-unit>
        <trans-unit id="0eefa2e14f522d71bf8c5996c37a0a19829ace02" translate="yes" xml:space="preserve">
          <source>Status Codes and Responses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1d10c0707e0f10b8b0910f75b97e8dc4a0e0bc7" translate="yes" xml:space="preserve">
          <source>Status codes and responses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="903ce185e6c62193fdc11ac7c222154c05534958" translate="yes" xml:space="preserve">
          <source>Stddev</source>
          <target state="translated">Stddev</target>
        </trans-unit>
        <trans-unit id="6c5ec48b0d008fc4377cc66d6b71f10126481fc6" translate="yes" xml:space="preserve">
          <source>Step 1: Create some load on your system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7537140e5e4892b80870988d5f283c3a6ab6b309" translate="yes" xml:space="preserve">
          <source>Step 1: Enable authentication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a17f20f74756fdcd36495925d3ea15544f29c58" translate="yes" xml:space="preserve">
          <source>Step 1: Generate a self-signed certificate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c245d15fb28cb5887db468ae8f636b823fb0d0e" translate="yes" xml:space="preserve">
          <source>Step 1: Install the SSL/TLS certificate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98a2f91509ed7b178e8a9dba2d47bfff7a0fc5c2" translate="yes" xml:space="preserve">
          <source>Step 1: Locate the &lt;code&gt;chronograf&lt;/code&gt; database and click on the infinity symbol (&amp;infin;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5690b5a650cb0a3547e3f5fa1fa086b46a4bc2fd" translate="yes" xml:space="preserve">
          <source>Step 1: Match the Trends of the Raw Data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e587642c3f62de1027a945367434c211a84b53f7" translate="yes" xml:space="preserve">
          <source>Step 1: Name the rule</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15e4ef7d5cc925303908c9bb80ab8e48c2eb606e" translate="yes" xml:space="preserve">
          <source>Step 1: Name your dashboard</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc0c4c8a4fcf9b03c751065eeba9c229bdb3f5c0" translate="yes" xml:space="preserve">
          <source>Step 2 should create a configuration file with &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/inputs/system&quot;&gt;system stats&lt;/a&gt; as an input plugin and InfluxDB as an output plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0fa76538378f47badeae5ab9d23f8b27ce7c4f9" translate="yes" xml:space="preserve">
          <source>Step 2: Determine the Seasonal Pattern</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a13d918e839ec996d207d0a13e1ecec75328aec7" translate="yes" xml:space="preserve">
          <source>Step 2: Enable HTTPS in InfluxDB&amp;rsquo;s configuration file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="763ed8e11701e4a0bd007b3c132b8f0b4d456308" translate="yes" xml:space="preserve">
          <source>Step 2: Ensure file permissions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="562575256ccdb55a6f24defde8eb09879e550d9c" translate="yes" xml:space="preserve">
          <source>Step 2: Enter a different duration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed0369cd52a633deefd2f5b3ce4c891b62e19b9b" translate="yes" xml:space="preserve">
          <source>Step 2: Enter cell editor mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12053e0da86b02bcd9a419a0d0dbbc7b426f0dec" translate="yes" xml:space="preserve">
          <source>Step 2: Restart the process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e538b7a517501a93941488633a44733bb908f6b2" translate="yes" xml:space="preserve">
          <source>Step 2: Select the time series</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76cdc555a6e250a9dbd29de5d33cdcd7f0029997" translate="yes" xml:space="preserve">
          <source>Step 2: Visit Slack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43fa5a39aad1674196a09e0adcb89edb5bbbed8c" translate="yes" xml:space="preserve">
          <source>Step 3: Apply the HOLT_WINTERS() function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="673380f266cb591cafabf651b104a0f062e81569" translate="yes" xml:space="preserve">
          <source>Step 3: Click the green check mark to save your changes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e42e888a076bcc0bb249a920d1b09e94c0dd536d" translate="yes" xml:space="preserve">
          <source>Step 3: Create an admin user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31ac6bb080a8d9f542a89fc87d65f2c7b7f4ef65" translate="yes" xml:space="preserve">
          <source>Step 3: Create your query</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98b2119c0ffd312600a909464884aec9fdb2dee4" translate="yes" xml:space="preserve">
          <source>Step 3: Enable HTTPS in InfluxDB&amp;rsquo;s configuration file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ea95dadb0951f7712da9cbfee540f9cc6483d24" translate="yes" xml:space="preserve">
          <source>Step 3: Restart InfluxDB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a7fbba0bbedb881f7333da038b6e188f3435a42" translate="yes" xml:space="preserve">
          <source>Step 3: Select the alert type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c50c87062d8937f905b90828b565d43ea09b9b8c" translate="yes" xml:space="preserve">
          <source>Step 4: Choose your visualization type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="203fa2cf137be62f0dc75210b4d98fb9c8039a73" translate="yes" xml:space="preserve">
          <source>Step 4: Define the rule condition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef9671e36e07ffd0a8ebde2a591fb2cf002340f8" translate="yes" xml:space="preserve">
          <source>Step 4: Edit the database source in Chronograf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f8cfbd2c99f74d900505a56671fea4f7d1a1ac4" translate="yes" xml:space="preserve">
          <source>Step 4: Restart InfluxDB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eac67625f2df3136c5299655bce6db8b22906008" translate="yes" xml:space="preserve">
          <source>Step 4: Verify the HTTPS Setup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3deede0edfacac70a2c1e89a0cee85184c37595b" translate="yes" xml:space="preserve">
          <source>Step 5: Save your cell</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb960f155c8ef9d09b7ed4495e3cde57c0c4655f" translate="yes" xml:space="preserve">
          <source>Step 5: Select the event handler and configure the alert message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2181b8ba644f5c941075a81b764271b6393aad9" translate="yes" xml:space="preserve">
          <source>Step 5: Verify the HTTPS Setup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d86f5afbd8f801ed8c5e6458bc3bf09554125faf" translate="yes" xml:space="preserve">
          <source>Step 6: Configure your dashboard</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66e5cf854ab6502bce4e130aa3ed2b4a515c65a1" translate="yes" xml:space="preserve">
          <source>Step 6: Save the alert rule</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe38ed876088bdd43819e8fd1d9640ad88ec88d" translate="yes" xml:space="preserve">
          <source>Step-Plot</source>
          <target state="translated">Step-Plot</target>
        </trans-unit>
        <trans-unit id="764bde94ab9fc07ed5014af9258e9d1399a46c95" translate="yes" xml:space="preserve">
          <source>Step-by-step instructions for setting up event handlers with Kapacitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="131543147c6fb14481b5cf6dd0496cf40df5a7a6" translate="yes" xml:space="preserve">
          <source>Still send processes metrics if a process exited during metric collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62232410f67ee430081f812f709b87bb5e30fa75" translate="yes" xml:space="preserve">
          <source>Stop currently-running queries with &lt;code&gt;KILL QUERY&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cbd578f9dc72cc6e763e74c840667b029c987f1" translate="yes" xml:space="preserve">
          <source>Stop the telegraf service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e092dda4f0e27d0c7686ddd00272079e678b6e6" translate="yes" xml:space="preserve">
          <source>Storage</source>
          <target state="translated">Storage</target>
        </trans-unit>
        <trans-unit id="555db8f05eb21beabc1523a7b12f7c5c6ddfb929" translate="yes" xml:space="preserve">
          <source>Storage Engine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ebd1bfc74d76bd461fa5cf0fa0dad7795511ace" translate="yes" xml:space="preserve">
          <source>Storage engine stability</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50467f70adce386b7ede9230c430006b39345f3d" translate="yes" xml:space="preserve">
          <source>Store data in fields if you &lt;em&gt;need&lt;/em&gt; them to be something other than a string - &lt;a href=&quot;../glossary/index#tag-value&quot;&gt;tag values&lt;/a&gt; are always interpreted as strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fd1013e711412723f3cc80738f15f75bd54685e" translate="yes" xml:space="preserve">
          <source>Store data in fields if you plan to use them with an &lt;a href=&quot;../../query_language/functions/index&quot;&gt;InfluxQL function&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2527a9c154dae651bf7722de867bbbd0ddce876b" translate="yes" xml:space="preserve">
          <source>Store data in tags if they&amp;rsquo;re commonly-queried meta data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b0dc48e728e5fb32c254f97ac993d3a3f2c2b1f" translate="yes" xml:space="preserve">
          <source>Store data in tags if you plan to use them with &lt;code&gt;GROUP BY()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2aceb0e8b76ec3a7df34b28384ea768f7445d88" translate="yes" xml:space="preserve">
          <source>Store the field value &lt;code&gt;82&lt;/code&gt; as a float:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="741282a4932793cfdd7502ba664a28dfb7c72749" translate="yes" xml:space="preserve">
          <source>Store the field value &lt;code&gt;82&lt;/code&gt; as an integer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e131265821eb995949f891bbb9de2cb1d5197a3" translate="yes" xml:space="preserve">
          <source>Store the field value &lt;code&gt;too warm&lt;/code&gt; as a string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98cf555d5b9421bf10a7b21fc81a157b62b73578" translate="yes" xml:space="preserve">
          <source>Store the field value &lt;code&gt;true&lt;/code&gt; as a boolean:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="983fd7bc323e2dee1f0042e9a93e162ae8403859" translate="yes" xml:space="preserve">
          <source>Stores</source>
          <target state="translated">Stores</target>
        </trans-unit>
        <trans-unit id="bf00e9b8f71354ce419700ba1d2a68dd0461366c" translate="yes" xml:space="preserve">
          <source>Stores TRUE or FALSE values.TRUE write syntax:&lt;code&gt;[t, T, true, True, TRUE]&lt;/code&gt;.FALSE write syntax:&lt;code&gt;[f, F, false, False, FALSE]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c28438d1c0800ee3493fa267b10c98103330992" translate="yes" xml:space="preserve">
          <source>StrContains reports whether substr is within s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="311695a1babdf5a634437331822ca41bafbbd4f4" translate="yes" xml:space="preserve">
          <source>StrContainsAny reports whether any Unicode code points in chars are within s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f579ac778f8ed72dbf34d60022e5f85d7c8b105" translate="yes" xml:space="preserve">
          <source>StrCount counts the number of non-overlapping instances of sep in s. If sep is an empty string, Count returns 1 + the number of Unicode code points in s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb0ab8110b458a90e984e2256d3ad84030c2eb79" translate="yes" xml:space="preserve">
          <source>StrHasPrefix tests whether the string s begins with prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abebdb25d4f6debd68bbac82bdef1d3349e10dd1" translate="yes" xml:space="preserve">
          <source>StrHasSuffix tests whether the string s ends with suffix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bf98283f71ee85dc392ccc82977d72a9415708f" translate="yes" xml:space="preserve">
          <source>StrIndex returns the index of the first instance of sep in s, or -1 if sep is not present in s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="111492a410a2ded741f42f3157eddc2f97f193bf" translate="yes" xml:space="preserve">
          <source>StrIndexAny returns the index of the first instance of any Unicode code point from chars in s, or -1 if no Unicode code point from chars is present in s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aff429c43da4c190d9e1957364c104d882dfd55" translate="yes" xml:space="preserve">
          <source>StrLastIndex returns the index of the last instance of sep in s, or -1 if sep is not present in s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aee34f49b859b9fb4ba1e8d30e882ac2da107ecf" translate="yes" xml:space="preserve">
          <source>StrLastIndexAny returns the index of the last instance of any Unicode code point from chars in s, or -1 if no Unicode code point from chars is present in s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77dc17e5469216a6eaabaff85d4ef48a04b55503" translate="yes" xml:space="preserve">
          <source>StrLength returns the length of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9fe5911c0e96412c553413c5f3e1e9f3a37237a" translate="yes" xml:space="preserve">
          <source>StrReplace returns a copy of the string s with the first n non-overlapping instances of old replaced by new.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6ea36f5e3f6568a55f834766bf651a907b93a0a" translate="yes" xml:space="preserve">
          <source>StrSubstring returns a substring based on the given indexes, strSubstring(str, start, stop) is equivalent to str[start:stop] in Go.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d043d6dc9b3850e7784f431ae5019cb60e2ed8" translate="yes" xml:space="preserve">
          <source>StrToLower returns a copy of the string s with all Unicode letters mapped to their lower case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73cc7b9e70efcdd7d6aaeb4c910846c48a21b46d" translate="yes" xml:space="preserve">
          <source>StrToUpper returns a copy of the string s with all Unicode letters mapped to their upper case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb492ae5f64ef835d4b1153dcb4c0745512dc26d" translate="yes" xml:space="preserve">
          <source>StrTrim returns a slice of the string s with all leading and trailing Unicode code points contained in cutset removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a485f6e66d850dc8f18e53362b0d1eebbd4fbbf4" translate="yes" xml:space="preserve">
          <source>StrTrimLeft returns a slice of the string s with all leading Unicode code points contained in cutset removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea12512b30844adc4fd270c8f9f56ccf9a11def" translate="yes" xml:space="preserve">
          <source>StrTrimPrefix returns s without the provided leading prefix string. If s doesn&amp;rsquo;t start with prefix, s is returned unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c9ff7426330b803bdda27258c96e290b00c920c" translate="yes" xml:space="preserve">
          <source>StrTrimRight returns a slice of the string s, with all trailing Unicode code points contained in cutset removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d5bd8fbdb235021887c4c203fd4e89031d3cfd" translate="yes" xml:space="preserve">
          <source>StrTrimSpace returns a slice of the string s, with all leading and trailing white space removed, as defined by Unicode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f74f944462cbd137f016690dc6ce7e0221977bca" translate="yes" xml:space="preserve">
          <source>StrTrimSuffix returns s without the provided trailing suffix string. If s doesn&amp;rsquo;t end with suffix, s is returned unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df063869e11d7a9aa132cd4a984f7b5eb870d656" translate="yes" xml:space="preserve">
          <source>Stream</source>
          <target state="translated">Stream</target>
        </trans-unit>
        <trans-unit id="634cd805c7b217c15db40f6a5f26924d70b3b2d3" translate="yes" xml:space="preserve">
          <source>Stream Node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d14663a5dc14a0503c54fa692bb521ea220b30cd" translate="yes" xml:space="preserve">
          <source>Stream method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32f0fba1610dad3bdc43925c8f6570e40ffd95af" translate="yes" xml:space="preserve">
          <source>StreamEdge &amp;ndash; an edge that transfers data a single data point at a time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04e7b46eca28b914d8c985138b1df2fcd19caa64" translate="yes" xml:space="preserve">
          <source>StreamName</source>
          <target state="translated">StreamName</target>
        </trans-unit>
        <trans-unit id="1edd8a437b26d5c403c59bba209aa9ae282dba0e" translate="yes" xml:space="preserve">
          <source>StreamNode</source>
          <target state="translated">StreamNode</target>
        </trans-unit>
        <trans-unit id="3df63b7acb0522da685dad5fe84b81fdd7b25264" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">String</target>
        </trans-unit>
        <trans-unit id="04b8788d25ed10120b8f672bd182a4fbe5d0fa5d" translate="yes" xml:space="preserve">
          <source>String functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2923fdd30868ebea7718552d811d1b8d332fd497" translate="yes" xml:space="preserve">
          <source>String literals must be surrounded by single quotes. Strings may contain &lt;code&gt;'&lt;/code&gt; characters as long as they are escaped (i.e., &lt;code&gt;\'&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3816c4beac471c733eed1d91c213f8c2b6a29262" translate="yes" xml:space="preserve">
          <source>Strings</source>
          <target state="translated">Strings</target>
        </trans-unit>
        <trans-unit id="69276c97a004419ff538058b82e9eaf78533764e" translate="yes" xml:space="preserve">
          <source>Strings - double quote string field values (more on quoting in Line Protocol &lt;a href=&quot;#quoting&quot;&gt;below&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="994ee57f9603cb67caad3d21f14dbd5d409d423d" translate="yes" xml:space="preserve">
          <source>Strings are encoding using &lt;a href=&quot;http://google.github.io/snappy/&quot;&gt;Snappy&lt;/a&gt; compression. Each string is packed consecutively and they are compressed as one larger block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b0fb54273d4979cb1f03a329c0cb08afd9812f8" translate="yes" xml:space="preserve">
          <source>Subdomain</source>
          <target state="translated">Subdomain</target>
        </trans-unit>
        <trans-unit id="bd2c0979cc184d21a57a35312f19718ad90df700" translate="yes" xml:space="preserve">
          <source>Submit Queries from a File</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34be04c7aabf3ee8cc4b91495b82db6458493fa4" translate="yes" xml:space="preserve">
          <source>Submit sample data to Telegraf&amp;rsquo;s socket listener:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae95124ec10519737161dc6e6312b8b2b0dd718" translate="yes" xml:space="preserve">
          <source>Submit test inputs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbd17ca7716d1959474368eb0c63e1ad9ad957be" translate="yes" xml:space="preserve">
          <source>Subqueries</source>
          <target state="translated">Subqueries</target>
        </trans-unit>
        <trans-unit id="bab641450e1664bfbf301343142bd3ca685066f4" translate="yes" xml:space="preserve">
          <source>Subscription data loss under high write load.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9a4e7d3693097c7ec86e0bc481d91ee0c3c581b" translate="yes" xml:space="preserve">
          <source>Subscriptions allow &lt;a href=&quot;https://docs.influxdata.com/kapacitor/latest/&quot;&gt;Kapacitor&lt;/a&gt; to receive data from InfluxDB in a push model rather than the pull model based on querying data. When Kapacitor is configured to work with InfluxDB, the subscription will automatically push every write for the subscribed database from InfluxDB to Kapacitor. Subscriptions can use TCP or UDP for transmitting the writes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3548cf7f37dd6b861bdb51b97a5b724af32e126" translate="yes" xml:space="preserve">
          <source>Subscriptions tell InfluxDB to send all the data it receives to &lt;a href=&quot;../../../../kapacitor/v1.3/introduction/index&quot;&gt;Kapacitor&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c54fdfc8c20bb1fc62104e701b01b7a9a9b98fd" translate="yes" xml:space="preserve">
          <source>Substituting for Nested Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d4b29722ebaf188d437f92413182a2ed3e8a8f8" translate="yes" xml:space="preserve">
          <source>Substituting for a &lt;code&gt;HAVING&lt;/code&gt; Clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5b58ce4dec6fe8562096a10da3109ac06c55815" translate="yes" xml:space="preserve">
          <source>Subtraction</source>
          <target state="translated">Subtraction</target>
        </trans-unit>
        <trans-unit id="42a8f651d79fd005eeac0612df6442b983a01184" translate="yes" xml:space="preserve">
          <source>Success</source>
          <target state="translated">Success</target>
        </trans-unit>
        <trans-unit id="7ce01f6381463362cf6aef2f843a59261e8f5587" translate="yes" xml:space="preserve">
          <source>Success!</source>
          <target state="translated">Success!</target>
        </trans-unit>
        <trans-unit id="22efdcf41a70c6aaba258ff3c4988927ec43cb0b" translate="yes" xml:space="preserve">
          <source>Success! The returned JSON offers further information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c40a23931f9b21f2f03191607eb0ad85d068c1b7" translate="yes" xml:space="preserve">
          <source>Success! Your InfluxDB instance is up and running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f28c25d4567d3e699a592db27e1bbd001f34b1e" translate="yes" xml:space="preserve">
          <source>Success, even if the service under test fails a 200 is returned as the test complete correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1feb0d4a44973b11c194229d529258df89c5c1b" translate="yes" xml:space="preserve">
          <source>Success, replay has started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd0c855d74ab44da6d5cd90c882073c609cdc57e" translate="yes" xml:space="preserve">
          <source>Success, replay is no longer running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f020e7b9d81607cca888501d9d4df3a0579c7efe" translate="yes" xml:space="preserve">
          <source>Success, the recording exists but is not finished.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b144fc238ac5ad1b50c0ee71e84ecfd95e62315" translate="yes" xml:space="preserve">
          <source>Success, the recording has started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="502d1dc83467d2c1ba15f02abf7c8242ba7f1147" translate="yes" xml:space="preserve">
          <source>Success, the recording is no longer running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87d79ade9c850449287151b6c7ad1714d35cb0c9" translate="yes" xml:space="preserve">
          <source>Success, the replay exists but is not finished.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9e3910db266f97fc7206a5dceb1a53ee715bbc7" translate="yes" xml:space="preserve">
          <source>Success, the replay has started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc9ce14b28c6f2c3b72caf056ca604b2b96f7d2b" translate="yes" xml:space="preserve">
          <source>Sum</source>
          <target state="translated">Sum</target>
        </trans-unit>
        <trans-unit id="12b71c3e0fe5f7c0b8d17cc03186e281412da4a8" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="translated">Summary</target>
        </trans-unit>
        <trans-unit id="a17d2e81fb8a949094739b0b29e29f04e30b1061" translate="yes" xml:space="preserve">
          <source>Summary Table</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a7613b92af42bc2224365e970736ecb426c74c1" translate="yes" xml:space="preserve">
          <source>Support &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/inputs/ipmi_sensor&quot;&gt;ipmi_sensor input plugin&lt;/a&gt; querying local ipmi sensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a199b2de55c311fde8565600d091c7b8ccd9d7a" translate="yes" xml:space="preserve">
          <source>Support &lt;code&gt;INFLUX_USERNAME&lt;/code&gt; and &lt;code&gt;INFLUX_PASSWORD&lt;/code&gt; for setting username/password in the CLI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97b97570129f0bc0dc75328ca10913a698271ded" translate="yes" xml:space="preserve">
          <source>Support &lt;code&gt;ON&lt;/code&gt; for &lt;code&gt;SHOW&lt;/code&gt; commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53e044a582cbccafdb37dc9349d3f9406afff277" translate="yes" xml:space="preserve">
          <source>Support DEAD(X) state in the &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/inputs/system&quot;&gt;system input plugin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="526b4cff3188b6f6807602128a6e260bfd7c2566" translate="yes" xml:space="preserve">
          <source>Support ON and use default database for SHOW commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92037b741207379297243915e6c58103e6448132" translate="yes" xml:space="preserve">
          <source>Support a metric.Split function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ab327a2d7177e7ed593d0c3e7469f66ae8aca2" translate="yes" xml:space="preserve">
          <source>Support adding &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/inputs/snmp&quot;&gt;SNMP&lt;/a&gt; table indexes as tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b65282147a2495ab72810e08d53c25bef1fc9892" translate="yes" xml:space="preserve">
          <source>Support bound parameters in the parser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08f8b986c706430998de91607485d6ea34f9b036" translate="yes" xml:space="preserve">
          <source>Support cast syntax for selecting a specific type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9f6e2ee437bcc13fd8c20ab6346e3fd3dfc3faa" translate="yes" xml:space="preserve">
          <source>Support enable HTTP service over unix domain socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eca07926d5725821a4450e9a562b8ee9a263b1f" translate="yes" xml:space="preserve">
          <source>Support escaping from presentation mode in Safari</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f2c4748a17adc4dfa5bd1c578d23f90d05be0d5" translate="yes" xml:space="preserve">
          <source>Support for config options &lt;code&gt;[collectd]&lt;/code&gt; and &lt;code&gt;[opentsdb]&lt;/code&gt; has been removed; use &lt;code&gt;[[collectd]]&lt;/code&gt; and &lt;code&gt;[[opentsdb]]&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdaf152f037bb09c6896faf171eb3d717cb75089" translate="yes" xml:space="preserve">
          <source>Support for glob patterns in exec plugin commands configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22111a4287274b70fcb8f80c590a00de91b68ac1" translate="yes" xml:space="preserve">
          <source>Support loading a folder for collectd typesdb files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fa05c760dcb40f38663b02af16535b39d7db27b" translate="yes" xml:space="preserve">
          <source>Support mixed duration units.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b2a801bfad093242f767913152aa9077b57ff9" translate="yes" xml:space="preserve">
          <source>Support negative statsd counters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa457ddc4ee0f5e1416f5ac9d7acb14360ef5e72" translate="yes" xml:space="preserve">
          <source>Support negative timestamps for the query engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55c6ec101a7a8918ba0d5050f12b3a95744bdd0b" translate="yes" xml:space="preserve">
          <source>Support queries that perform math on functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9841d6afafc9272dddf7608e5af2d8162c95e64" translate="yes" xml:space="preserve">
          <source>Support regex selection in SHOW TAG VALUES for the key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db47fc8d442c6ccc44cefdd82617d7f297378ae5" translate="yes" xml:space="preserve">
          <source>Support regular expressions on fields keys in select clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5800bed630b20ad01862efba21bc8ef1c8f97128" translate="yes" xml:space="preserve">
          <source>Support setting per-device and total metrics for Docker network and blockio.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d34d869a2272c7105a7a9c37a6640106be1a5f0" translate="yes" xml:space="preserve">
          <source>Support single and multiline comments in InfluxQL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873582835758c7dc589a1afc2b47511d06594be3" translate="yes" xml:space="preserve">
          <source>Support specifying a retention policy for the graphite service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fad029296533671bc09280187d6798ad94b64d2" translate="yes" xml:space="preserve">
          <source>Support subquery execution in the query language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d0755c3b7a89c17dd71ce022baa72ded74d96b2" translate="yes" xml:space="preserve">
          <source>Support timezone offsets for queries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43da176a48ecf1e1b09ea952665976a28d9eb709" translate="yes" xml:space="preserve">
          <source>Support to include/exclude docker container labels as tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3c4d9ce2e5ea19804d9eb5a6492efc403083ed3" translate="yes" xml:space="preserve">
          <source>Support tools for running async queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc806be0d70024362e32641e36e674e3babedbf5" translate="yes" xml:space="preserve">
          <source>Support wildcards in aggregate functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d7e0ecbdc851d259a4297dcb93bfc03dafd3072" translate="yes" xml:space="preserve">
          <source>Supported Input Plugins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec627cb0ed653dc70f4e135d4b50940b2b0ddb33" translate="yes" xml:space="preserve">
          <source>Supported Outputs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75a44d92ab85f57145820f8e859b6f5daf976240" translate="yes" xml:space="preserve">
          <source>Supported Service Inputs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a72acca9638828e6fcd59dd9d5146b8ffaac77cb" translate="yes" xml:space="preserve">
          <source>Supported operators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b144a29ca7b85d2d9369fa2c5d9e3f62165f4fa" translate="yes" xml:space="preserve">
          <source>Supported operators in the &lt;code&gt;WHERE&lt;/code&gt; clause: &lt;code&gt;=&lt;/code&gt; equal to &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; not equal to &lt;code&gt;!=&lt;/code&gt; not equal to &lt;code&gt;=~&lt;/code&gt; matches against &lt;code&gt;!~&lt;/code&gt; doesn&amp;rsquo;t match against</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02238e8e8d8cab9118f177e369baf804444cec96" translate="yes" xml:space="preserve">
          <source>Supported operators in the &lt;code&gt;WITH&lt;/code&gt; and &lt;code&gt;WHERE&lt;/code&gt; clauses: &lt;code&gt;=&lt;/code&gt; equal to &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; not equal to &lt;code&gt;!=&lt;/code&gt; not equal to &lt;code&gt;=~&lt;/code&gt; matches against &lt;code&gt;!~&lt;/code&gt; doesn&amp;rsquo;t match against</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a78eed3f653e8e8fd3caf2126e10842d1420271" translate="yes" xml:space="preserve">
          <source>Supported operators: &lt;code&gt;=&lt;/code&gt; equal to &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; not equal to &lt;code&gt;!=&lt;/code&gt; not equal to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aeea7ca73ddbbc81800cb37f41579433ed74cdd" translate="yes" xml:space="preserve">
          <source>Supported operators: &lt;code&gt;=&lt;/code&gt; equal to &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; not equal to &lt;code&gt;!=&lt;/code&gt; not equal to &lt;code&gt;&amp;gt;&lt;/code&gt; greater than &lt;code&gt;&amp;gt;=&lt;/code&gt; greater than or equal to &lt;code&gt;&amp;lt;&lt;/code&gt; less than &lt;code&gt;&amp;lt;=&lt;/code&gt; less than or equal to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed0de0549ff4260002e0d4d257da0275c1eb11d3" translate="yes" xml:space="preserve">
          <source>Supported operators: &lt;code&gt;=~&lt;/code&gt; matches against &lt;code&gt;!~&lt;/code&gt; doesn&amp;rsquo;t match against</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2319a93ebcacb9cec5c615e4a2670ccbf576bf78" translate="yes" xml:space="preserve">
          <source>Suppress errors during evaluation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed52dd50c64ed7b2b2118b8f16939746d60a305a" translate="yes" xml:space="preserve">
          <source>Suppress headers in output for influx cli when they are the same</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b61da92a6c8ab3b43aa9a04aabdb95a95a422d09" translate="yes" xml:space="preserve">
          <source>Switch logging to use structured logging everywhere.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da4a9859935477f5a57bf41e9f79b820e2aa115c" translate="yes" xml:space="preserve">
          <source>Switch to github.com/kballard/go-shellquote.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d34caac4088790609d0a3fffd53abf510e420ed" translate="yes" xml:space="preserve">
          <source>Synchronize vertical crosshair at same time across all graphs in a dashboard</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c7ba7676ad1ad6dd1c4e6b997adcae910262c9" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Syntax</target>
        </trans-unit>
        <trans-unit id="1de8dba368e7754dc199c99b017f5c51265ee8dc" translate="yes" xml:space="preserve">
          <source>Syntax:</source>
          <target state="translated">Syntax:</target>
        </trans-unit>
        <trans-unit id="ad389d108ee4ed2aab37b302c362976e02e0df04" translate="yes" xml:space="preserve">
          <source>Sysstat plugin needs LANG=C or similar locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc0792d8dc81e8aa30b987246a5ce97c40cd6833" translate="yes" xml:space="preserve">
          <source>System</source>
          <target state="translated">System</target>
        </trans-unit>
        <trans-unit id="018f04491452c1120333baa16f5faa93a8d46372" translate="yes" xml:space="preserve">
          <source>System Monitoring</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64de04038397cc970431e0d127f16420d1cb136d" translate="yes" xml:space="preserve">
          <source>System Monitoring means all statistical and diagnostic information made available to the user of the InfluxDB system, about the system itself. Its purpose is to assist with troubleshooting and performance analysis of the database itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f544fb304c83e23652a63e1bb1b28f4fcc7f6ac0" translate="yes" xml:space="preserve">
          <source>TCP</source>
          <target state="translated">TCP</target>
        </trans-unit>
        <trans-unit id="5738e275f040e9e388681551af5fd14225b085e1" translate="yes" xml:space="preserve">
          <source>TCP port &lt;code&gt;8086&lt;/code&gt; is used for client-server communication over InfluxDB&amp;rsquo;s HTTP API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ead011fe37d5946cf122c13919bacc8b3461d343" translate="yes" xml:space="preserve">
          <source>TCP port &lt;code&gt;8088&lt;/code&gt; is used for the RPC service for backup and restore</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10e558c53b5893ce842500faf88c532d4b1d3aa4" translate="yes" xml:space="preserve">
          <source>TICK</source>
          <target state="translated">TICK</target>
        </trans-unit>
        <trans-unit id="7381ede0e09a4f8cbbe7ecbb232cc39c57817f6b" translate="yes" xml:space="preserve">
          <source>TICKscript Language Reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f01f45fb5c27776ba4e0b786d330c935d706fc47" translate="yes" xml:space="preserve">
          <source>TICKscript Management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbebcb22384c1b3fb8c99b65a0df18a6b0b205f3" translate="yes" xml:space="preserve">
          <source>TICKscript Node Overview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="710c144dddb4cc951a7709cc9f300ec83f105a36" translate="yes" xml:space="preserve">
          <source>TICKscript Specification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4502280657e47ce00d082edff20e1076918375f9" translate="yes" xml:space="preserve">
          <source>TICKscript Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aea41a1f8cacf47790df6c660640c6232d7cffc" translate="yes" xml:space="preserve">
          <source>TICKscript supports durations literals. They are of the form of InfluxQL duration literals. See &lt;a href=&quot;../../../../influxdb/v1.3/query_language/spec/index#literals&quot;&gt;https://docs.influxdata.com/influxdb/v1.3/query_language/spec/#literals&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2e0948e9f28050d9a2ce4809b95fea7e40288e1" translate="yes" xml:space="preserve">
          <source>TICKscript uses lambda expressions to define transformations on data points as well as define boolean conditions that act as filters. TICKscript tries to be similar to InfluxQL in that most expressions that you would use in an InfluxQL &lt;code&gt;WHERE&lt;/code&gt; clause will work as expressions in TICKscript. There are few exceptions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="308b96ceb357d05551aee46f3ff58db655ff08a7" translate="yes" xml:space="preserve">
          <source>TICKscript with lambda expression:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bd1d09a0e9ab27ea759148e5a29280abcf0f0f8" translate="yes" xml:space="preserve">
          <source>TICKscript:</source>
          <target state="translated">TICKscript:</target>
        </trans-unit>
        <trans-unit id="d91e1888f2dc09f11a876e25966a6fbd32b9cd87" translate="yes" xml:space="preserve">
          <source>TLS</source>
          <target state="translated">TLS</target>
        </trans-unit>
        <trans-unit id="794bdf28bd5161efd2296d5fdff420fb36e72eb7" translate="yes" xml:space="preserve">
          <source>TOP()</source>
          <target state="translated">TOP()</target>
        </trans-unit>
        <trans-unit id="95399ae690e05f01619d71fa86dfe63caec27a0d" translate="yes" xml:space="preserve">
          <source>TSI</source>
          <target state="translated">TSI</target>
        </trans-unit>
        <trans-unit id="04bc345f78dee0fa03b4eab57595079e9620b6d6" translate="yes" xml:space="preserve">
          <source>TSI Release</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8d0b3d1806bc568c5dc81b279775bd73b0be97f" translate="yes" xml:space="preserve">
          <source>TSI branch has duplicate tag values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a95cfc61af2af2736a641bf76b4990f3768ac3" translate="yes" xml:space="preserve">
          <source>TSI is disabled by default in version 1.3. To enable TSI, uncomment the &lt;a href=&quot;../../administration/config/index#index-version-inmem&quot;&gt;&lt;code&gt;index-version&lt;/code&gt; setting&lt;/a&gt; and set it to &lt;code&gt;tsi1&lt;/code&gt;. The &lt;code&gt;index-version&lt;/code&gt; setting is in the &lt;code&gt;[data]&lt;/code&gt; section of the configuration file. Next, restart your InfluxDB instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="563dcd61b5165d374422c2a62616d04c1d39d90e" translate="yes" xml:space="preserve">
          <source>TSI is disabled by default in version 1.3. To enable TSI, uncomment the &lt;a href=&quot;../config/index#index-version-inmem&quot;&gt;&lt;code&gt;index-version&lt;/code&gt; setting&lt;/a&gt; and set it to &lt;code&gt;tsi1&lt;/code&gt;. The &lt;code&gt;index-version&lt;/code&gt; setting is in the &lt;code&gt;[data]&lt;/code&gt; section of the configuration file. Next, restart your InfluxDB instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="551e57932237ceb4a2b7690df881528cdde341bd" translate="yes" xml:space="preserve">
          <source>TSM Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bb01282cb81cfe236b45db305363ba6b24beec7" translate="yes" xml:space="preserve">
          <source>TSM Files - TSM files store compressed series data in a columnar format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c14133501d825ac1f4b949887a5e683237f8254" translate="yes" xml:space="preserve">
          <source>TSM compaction does not remove .tmp on error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f77967816ef8fd0b2aa3b707380f4fa4fc3fdd36" translate="yes" xml:space="preserve">
          <source>TSM files are a collection of read-only files that are memory mapped. The structure of these files looks very similar to an SSTable in LevelDB or other LSM Tree variants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="982963c1c41cbed8cab073724749592fe35c532b" translate="yes" xml:space="preserve">
          <source>Tag</source>
          <target state="translated">Tag</target>
        </trans-unit>
        <trans-unit id="6eb6e2da4ae130fa2603726a5e72edc28e700eb9" translate="yes" xml:space="preserve">
          <source>Tag Keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5c3fabcd709979d8d2749cea761210ef50f400f" translate="yes" xml:space="preserve">
          <source>Tag Keys in the SELECT clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2580f891a43b9c3f736c0c951e7727c8a09c875" translate="yes" xml:space="preserve">
          <source>Tag Values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0cb0e5eaadce2a4fa3f50ef385a891987436910" translate="yes" xml:space="preserve">
          <source>Tag set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="848eed0fbd5429f556b2982dec3ea87136e33e44" translate="yes" xml:space="preserve">
          <source>Tags</source>
          <target state="translated">Tags</target>
        </trans-unit>
        <trans-unit id="7b88cce51efb310120b26c20eafc2d29bf246f0f" translate="yes" xml:space="preserve">
          <source>Tags &amp;ndash; Map of tags. Use '{{ index .Tags &quot;key&quot; }}' to get a specific tag value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22b8418cd52052990e10e9dc628a102b91525ab7" translate="yes" xml:space="preserve">
          <source>Tags are optional. You don&amp;rsquo;t need to have tags in your data structure, but it&amp;rsquo;s generally a good idea to make use of them because, unlike fields, tags are indexed. This means that queries on tags are faster and that tags are ideal for storing commonly-queried metadata.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4bc00108867e2c9f5db0cd647e7221df1347326" translate="yes" xml:space="preserve">
          <source>Take a look at the &lt;a href=&quot;../../guides/index&quot;&gt;example guides&lt;/a&gt; for how to use Kapacitor. These use cases demonstrate some of the more rich features of Kapacitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0003756ab8677514d17128a174269a217321b82" translate="yes" xml:space="preserve">
          <source>Take a look at the other &lt;a href=&quot;https://github.com/influxdata/kapacitor/tree/master/udf/agent/examples&quot;&gt;examples&lt;/a&gt; and modify one to do something similar to one of your existing requirements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3907ee8a220a01202e6f6a7f43d47d43a195c63d" translate="yes" xml:space="preserve">
          <source>Take an existing task and add &lt;code&gt;@mirror()&lt;/code&gt; at any point in the TICKscript pipeline to see it in action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b82afa3c39086e0b08839ac88ea050944cc42924" translate="yes" xml:space="preserve">
          <source>Takes the union of all of its parents. The union is just a simple pass through. Each data points received from each parent is passed onto children nodes without modification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e6a710d7f8571d8af578697436aef0e7bd40998" translate="yes" xml:space="preserve">
          <source>Talk</source>
          <target state="translated">Talk</target>
        </trans-unit>
        <trans-unit id="762740b7a9df1e67c8cf19265502b23fed33cb4a" translate="yes" xml:space="preserve">
          <source>Talk &amp;ndash; Post alert message to Talk client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c442668b04fe0d2fb49d4d83b1b51198b583f812" translate="yes" xml:space="preserve">
          <source>Tan returns the tangent of the radian argument x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc8ae90d27ce708b07a5ac10906ccc3ed208c4a5" translate="yes" xml:space="preserve">
          <source>Tanh returns the hyperbolic tangent of x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1136551f129b2179540da9819e4fdb8159a7d218" translate="yes" xml:space="preserve">
          <source>Task created, contains task information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e13b7e2154759ee3ee46af72063bc66d32cdf7dd" translate="yes" xml:space="preserve">
          <source>Task does not exist</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef537cb4d0f42e1c6347d415505c6924c6a82b02" translate="yes" xml:space="preserve">
          <source>TaskName &amp;ndash; The name of the task</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="090ec5f560fc50377fcd95e5cda128e91b276e98" translate="yes" xml:space="preserve">
          <source>Tasks</source>
          <target state="translated">Tasks</target>
        </trans-unit>
        <trans-unit id="24eb45ba7d08bcf308968148dc61cf04573cd301" translate="yes" xml:space="preserve">
          <source>Tcp</source>
          <target state="translated">Tcp</target>
        </trans-unit>
        <trans-unit id="9bc578b541fa6e5ef0d964664ac2562508e67969" translate="yes" xml:space="preserve">
          <source>Tcp Address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5547f71fb251b84202651a80bf28ae84a27ead93" translate="yes" xml:space="preserve">
          <source>Teach the http service how to enforce connection limits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa90434b9294127df2a0eff127738caa745a2ec" translate="yes" xml:space="preserve">
          <source>Technical Preview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10f2eb372e29a472270bc7ce23a06c08a8327632" translate="yes" xml:space="preserve">
          <source>Telegraf</source>
          <target state="translated">Telegraf</target>
        </trans-unit>
        <trans-unit id="d13f3c829f8c7e94ee93f1253d64a2bbcca5b5a9" translate="yes" xml:space="preserve">
          <source>Telegraf &amp;gt;= 1.3:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3444d3c82618f86c54274d4acc953c49b557acd" translate="yes" xml:space="preserve">
          <source>Telegraf &amp;ldquo;internal&amp;rdquo; plugin for collecting stats on itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20a2a5dcfaa1f823eb2f8c14a5d9b940793fa92e" translate="yes" xml:space="preserve">
          <source>Telegraf &amp;lt; 1.3:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13bf882b1c706c96cb8638b1a52391177c035387" translate="yes" xml:space="preserve">
          <source>Telegraf (recommended)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0df118ba21412a29b979a23f1160cddb108f3235" translate="yes" xml:space="preserve">
          <source>Telegraf Documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a946fc1c6f21c5fb03efd3c4b7eee27a66bf953" translate="yes" xml:space="preserve">
          <source>Telegraf Setup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d41119d9936b59ae789fb04e28f9c775178ef836" translate="yes" xml:space="preserve">
          <source>Telegraf allows users to specify multiple output sinks in the configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="069f961560b8d55938f9cf2004c27222e4957859" translate="yes" xml:space="preserve">
          <source>Telegraf can crash in LoadDirectory on 0600 files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a41b536e3ab999a95c4aa18dcc0800e90e85204" translate="yes" xml:space="preserve">
          <source>Telegraf can manage its own service through the &amp;ndash;service flag:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e899a2cbdf6e40fea9745ec8170ac7625b9c031a" translate="yes" xml:space="preserve">
          <source>Telegraf has a few options you can configure under the &lt;code&gt;[agent]&lt;/code&gt; section of the config.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cdad47c56cd3f5e6b57e14698f584c351824577" translate="yes" xml:space="preserve">
          <source>Telegraf is able to parse the following input data formats into metrics:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb39f2acaa2f07307702d403864fad50b0b6df0a" translate="yes" xml:space="preserve">
          <source>Telegraf is able to serialize metrics into the following output data formats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86af26e71da3383ef43f31186ccd27e7e835960e" translate="yes" xml:space="preserve">
          <source>Telegraf is an agent written in Go for collecting metrics and writing them into InfluxDB or other possible outputs. This guide will get you up and running with Telegraf. It walks you through the download, installation, and configuration processes, and it shows how to use Telegraf to get data into InfluxDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="513015a9cddcfa1578ad0e46d2325b056d29f3d1" translate="yes" xml:space="preserve">
          <source>Telegraf is entirely input driven. It gathers all metrics from the inputs specified in the configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7af1db7058a761fe86c6582f25aabcae74283680" translate="yes" xml:space="preserve">
          <source>Telegraf is part of the FreeBSD package system. It can be installed by running:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7745c15956399e83d4955f42e1608269cb9c5211" translate="yes" xml:space="preserve">
          <source>Telegraf metrics, like InfluxDB &lt;a href=&quot;https://docs.influxdata.com/influxdb/v0.10/write_protocols/line/&quot;&gt;points&lt;/a&gt;, are a combination of four basic parts:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bdbf7a4a6bdce6dd7f6d771760db45552aefa57" translate="yes" xml:space="preserve">
          <source>Telegraf natively supports running as a Windows Service. Outlined below is are the general steps to set it up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b42f42b93ae249984c138f50096296da26192cd" translate="yes" xml:space="preserve">
          <source>Telegraf now supports being installed as an official windows service, which can be installed via &lt;code&gt;&amp;gt; C:\Program Files\Telegraf\telegraf.exe --service install&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb8c64221916771d0c0223e57d1bb692007586a5" translate="yes" xml:space="preserve">
          <source>Telegraf now supports two new types of plugins: processors &amp;amp; aggregators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e65e9ddd18c1b22ed5394cf70d0fdf1db1e4174" translate="yes" xml:space="preserve">
          <source>Telegraf offers multiple &lt;a href=&quot;../../services/index&quot;&gt;service plugins&lt;/a&gt; that may require custom ports. All port mappings can be modified through the configuration file which is located at &lt;code&gt;/etc/telegraf/telegraf.conf&lt;/code&gt; for default installations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bac8ba0b2087e44ff30a85de179d5ac7d1e6bbdf" translate="yes" xml:space="preserve">
          <source>Telegraf systemd service, log to journal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58b012ca2813f291774888fbf5344bbcd136ae6f" translate="yes" xml:space="preserve">
          <source>Telegraf uses a host&amp;rsquo;s local time in UTC to assign timestamps to data. Use the Network Time Protocol (NTP) to synchronize time between hosts; if hosts&amp;rsquo; clocks aren&amp;rsquo;t synchronized with NTP, the timestamps on the data can be inaccurate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edbea9ff1a787818a7119cda6ab9799959a5d9fa" translate="yes" xml:space="preserve">
          <source>Telegram</source>
          <target state="translated">Telegram</target>
        </trans-unit>
        <trans-unit id="4722d5a7f85076ec0ea9101adfec84f9328fbc0b" translate="yes" xml:space="preserve">
          <source>Telegram &amp;ndash; Post alert message to Telegram client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb2a1a4d9d5669828784ee58d5f63fe41cc1b84" translate="yes" xml:space="preserve">
          <source>Telegram API Access Token</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c97c2d6c61d8b649fe5afe23fcefb1171a38c65" translate="yes" xml:space="preserve">
          <source>Telegram Bot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3dcc5df9670eeb6a60c785f0abd15e57d0fe6b3" translate="yes" xml:space="preserve">
          <source>Telegram Chat Id</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b79226933a41c4cc7431fafa31e1e4ccc5e4ae73" translate="yes" xml:space="preserve">
          <source>Telegram ChatId</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cb56d21644b7a7529551fccd6de754bb1aa6830" translate="yes" xml:space="preserve">
          <source>Telegram DisableNotification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b518a75bb07c758da57f1c56a13b91b99d081ced" translate="yes" xml:space="preserve">
          <source>Telegram DisableWebPagePreview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4fa1e1032de06d17c7387f0bbdb8895f0fc2d95" translate="yes" xml:space="preserve">
          <source>Telegram ParseMode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58bd451e28c744749097368365ac078113226ff9" translate="yes" xml:space="preserve">
          <source>Telegram Setup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8c7ab4fe73997790cb97b079208e2412b41818d" translate="yes" xml:space="preserve">
          <source>Telegram user/group ID to post messages to. If empty uses the chati-d from the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53b1141ca3e0e38f181020daa5786102b7760ba5" translate="yes" xml:space="preserve">
          <source>Telegram&amp;rsquo;s &lt;code&gt;@BotFather&lt;/code&gt; bot sent you an API access token when you created your bot. See the &lt;code&gt;@BotFather&lt;/code&gt; response in step 5 of the previous section for where to find your token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e3dd0b90684a29d82bac3d8e45c337ec7d1bc59" translate="yes" xml:space="preserve">
          <source>Template Tasks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0c3eb4fa9a5b4158dce707f67ce1889183867d6" translate="yes" xml:space="preserve">
          <source>Template Variable Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c60964a86b731bdfde1c0c4adf5123f6df86674c" translate="yes" xml:space="preserve">
          <source>Template created, contains template information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3a120b7327545594f1a3712a8d85e3fbb2ab6d3" translate="yes" xml:space="preserve">
          <source>Template does not exist</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb879d4417fe39eea07f910825514939ace7b865" translate="yes" xml:space="preserve">
          <source>Template for constructing a detailed HTML message for the alert. The same template data is available as the &lt;a href=&quot;index#message&quot;&gt;AlertNode.Message&lt;/a&gt; property, in addition to a Message field that contains the rendered Message value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c946e602980fa60891a8499aa9ce875ffdf56674" translate="yes" xml:space="preserve">
          <source>Template for constructing a meaningful message for the alert.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3657463acb87983bcfaadf3e78fc7f5b29528c66" translate="yes" xml:space="preserve">
          <source>Template for constructing a unique ID for a given alert.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28dbf63cae657ef60106250983c4178da95844af" translate="yes" xml:space="preserve">
          <source>Template variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f25b700ed9f092123a43acb205a6869342cf9dd6" translate="yes" xml:space="preserve">
          <source>Templates</source>
          <target state="translated">Templates</target>
        </trans-unit>
        <trans-unit id="4a7933140a9aed7905328eee2c2f1b35a0e64996" translate="yes" xml:space="preserve">
          <source>Templates are of the form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26ea7a710e11d2b58fbd82ebcfa4337926d8a5f5" translate="yes" xml:space="preserve">
          <source>Terminal - Kapacitor&amp;rsquo;s interface is via a CLI and so you will need a basic terminal to issue commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d278837034557e7a9b46210d42d6e7b8075142" translate="yes" xml:space="preserve">
          <source>Terminology</source>
          <target state="translated">Terminology</target>
        </trans-unit>
        <trans-unit id="0dcc55430510aeace8de75dbd9e70de0be9699aa" translate="yes" xml:space="preserve">
          <source>Test queries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d68b747cdbb04470dfc97c6020dee8adda8bd26a" translate="yes" xml:space="preserve">
          <source>Test the slack service integration using custom options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e91f32b602b8fcdab2e461e316669d6135950b38" translate="yes" xml:space="preserve">
          <source>Testing Services</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9ac496b5387c3c021d5b5897145a8879b9ac542" translate="yes" xml:space="preserve">
          <source>Testing a service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e919993d354a8b14536eefa09dda30836198d478" translate="yes" xml:space="preserve">
          <source>Testing other plugins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71469eb852fc2a2f5daf97a3b3bb30010d7234bc" translate="yes" xml:space="preserve">
          <source>Testing with Self-Signed Certificates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8427d6e597c76c82c31b59d8965940469cc2d35" translate="yes" xml:space="preserve">
          <source>That query creates a CQ called &lt;code&gt;cq_30m&lt;/code&gt; in the database &lt;code&gt;food_data&lt;/code&gt;. &lt;code&gt;cq_30m&lt;/code&gt; tells InfluxDB to calculate the 30-minute average of the two fields &lt;code&gt;website&lt;/code&gt; and &lt;code&gt;phone&lt;/code&gt; in the measurement &lt;code&gt;orders&lt;/code&gt; and in the &lt;code&gt;DEFAULT&lt;/code&gt; RP &lt;code&gt;two_hours&lt;/code&gt;. It also tells InfluxDB to write those results to the measurement &lt;code&gt;downsampled_orders&lt;/code&gt; in the retention policy &lt;code&gt;a_year&lt;/code&gt; with the field keys &lt;code&gt;mean_website&lt;/code&gt; and &lt;code&gt;mean_phone&lt;/code&gt;. InfluxDB will run this query every 30 minutes for the previous 30 minutes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96fe2d17cc46aa72d5fc897d18d2901e082eb9f1" translate="yes" xml:space="preserve">
          <source>That query creates an RP called &lt;code&gt;a_year&lt;/code&gt; that exists in the database &lt;code&gt;food_data&lt;/code&gt;. &lt;code&gt;a_year&lt;/code&gt; keeps data for a &lt;code&gt;DURATION&lt;/code&gt; of 52 weeks (&lt;code&gt;52w&lt;/code&gt;). Leaving out the &lt;code&gt;DEFAULT&lt;/code&gt; argument ensures that &lt;code&gt;a_year&lt;/code&gt; is not the &lt;code&gt;DEFAULT&lt;/code&gt; RP for the database &lt;code&gt;food_data&lt;/code&gt;. That is, write and read operations against &lt;code&gt;food_data&lt;/code&gt; that do not specify an RP will still go to the &lt;code&gt;two_hours&lt;/code&gt; RP (the &lt;code&gt;DEFAULT&lt;/code&gt; RP).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f8304ad39bd01248164e6e60e0ce8e31d8cded1" translate="yes" xml:space="preserve">
          <source>That query creates an RP called &lt;code&gt;two_hours&lt;/code&gt; that exists in the database &lt;code&gt;food_data&lt;/code&gt;. &lt;code&gt;two_hours&lt;/code&gt; keeps data for a &lt;code&gt;DURATION&lt;/code&gt; of two hours (&lt;code&gt;2h&lt;/code&gt;) and it&amp;rsquo;s the &lt;code&gt;DEFAULT&lt;/code&gt; RP for the database &lt;code&gt;food_data&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ae75763fefbf7bc074917894d54be7e248934df" translate="yes" xml:space="preserve">
          <source>That query outputs the data in the &lt;code&gt;foodships&lt;/code&gt; measure where the timestamp is newer than the server&amp;rsquo;s current time minus one hour. The options for specifying time durations with &lt;code&gt;now()&lt;/code&gt; are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="949a17bd43e166311497299b5dfde5b6e2824e75" translate="yes" xml:space="preserve">
          <source>That was a bit of setup, but at this point it should be smooth sailing and we can get to the fun stuff of actually using Kapacitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f8f318f2b3fde0bd64c7ebc497bc68c28fa516d" translate="yes" xml:space="preserve">
          <source>That was a lot, but now we are ready to configure Kapacitor to run our code. Create a scratch dir for working through the rest of this guide:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af3a981b25fd7ca8f0076141116d1419641725f0" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s it! You now have the foundation for using Telegraf to collect metrics and write them to your output of choice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d11d76b8035761d1df5084a05224b37ff2eec41" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s it! You&amp;rsquo;ve successfully downloaded, installed, and configured each component of the TICK stack. Next, check out &lt;a href=&quot;../../guides/index&quot;&gt;our guides&lt;/a&gt; to get familiar with Chronograf and see all that it can do for you!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728c87ca98c1b6c5372298054d535989dfcd7a2a" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s it! You&amp;rsquo;ve successfully set up HTTPS with InfluxDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a8187884a77817e544c815d817e16109a0d963e" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s it! You&amp;rsquo;ve successfully used Chronograf to configure a Kapacitor alert rule to monitor your idle CPU usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e78f8d0600083d33c4ab94b5f041472bd86179ff" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s it, Kapacitor now knows how to trigger our alert.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c168b72e520b9f751b86e71bd73aac12fa323aa" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;value&amp;rdquo; data format translates single values into Telegraf metrics. This is done by assigning a measurement name and setting a single field (&amp;ldquo;value&amp;rdquo;) as the parsed metric.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="025940b262233382f4435be94d6ca36bd77f88aa" translate="yes" xml:space="preserve">
          <source>The 1.3 output from the queries &lt;code&gt;SHOW DATABASES&lt;/code&gt;,&lt;code&gt;SHOW USERS&lt;/code&gt; and &lt;code&gt;SHOW RETENTION POLICIES ON &amp;lt;database_name&amp;gt;&lt;/code&gt; should match the 0.10 or 0.11 output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165c4cb7f0c0088080545c92cbf856bf58f04132" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#advanced-group-by-time-syntax&quot;&gt;advanced &lt;code&gt;GROUP BY time()&lt;/code&gt; syntax&lt;/a&gt; allows users to shift the start time of InfluxDB&amp;rsquo;s preset time boundaries. &lt;a href=&quot;#example-3-group-query-results-into-12-minute-intervals-and-shift-the-preset-time-boundaries-forward&quot;&gt;Example 3&lt;/a&gt; in the Advanced Syntax section continues with the query shown here; it shifts forward the preset time boundaries by six minutes such that InfluxDB returns:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95982789fecb5db29742ec88690170d556fd70c7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#example-5-write-aggregated-results-for-more-than-one-measurement-to-a-different-database-downsampling-with-backreferencing&quot;&gt;backreference&lt;/a&gt; syntax (&lt;code&gt;:MEASUREMENT&lt;/code&gt;) maintains the source measurement names in the destination database. Note that both the &lt;code&gt;copy_NOAA_water_database&lt;/code&gt; database and its &lt;code&gt;autogen&lt;/code&gt; retention policy must exist prior to running the &lt;code&gt;INTO&lt;/code&gt; query. See &lt;a href=&quot;../database_management/index&quot;&gt;Database Management&lt;/a&gt; for how to manage databases and retention policies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a441a8e307d3b94baeaefb699f5771a96989af64" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#the-basic-select-statement&quot;&gt;&lt;code&gt;SELECT&lt;/code&gt; clause&lt;/a&gt; specifies an InfluxQL &lt;a href=&quot;../functions/index&quot;&gt;function&lt;/a&gt;. The &lt;a href=&quot;#the-basic-select-statement&quot;&gt;&lt;code&gt;FROM&lt;/code&gt; clause&lt;/a&gt; specifies a single measurement. The &lt;a href=&quot;#the-where-clause&quot;&gt;&lt;code&gt;WHERE&lt;/code&gt; clause&lt;/a&gt; specifies the time range for the query. The &lt;a href=&quot;#the-group-by-clause&quot;&gt;&lt;code&gt;GROUP BY&lt;/code&gt; clause&lt;/a&gt; groups results by all tags (&lt;code&gt;*&lt;/code&gt;) and into 12-minute intervals. The &lt;a href=&quot;#order-by-time-desc&quot;&gt;&lt;code&gt;ORDER BY time DESC&lt;/code&gt; clause&lt;/a&gt; returns results in descending timestamp order. The &lt;a href=&quot;#the-limit-clause&quot;&gt;&lt;code&gt;LIMIT 2&lt;/code&gt; clause&lt;/a&gt; limits the number of points returned to two. The &lt;a href=&quot;#the-offset-clause&quot;&gt;&lt;code&gt;OFFSET 2&lt;/code&gt; clause&lt;/a&gt; excludes the first two averages from the query results. The &lt;a href=&quot;#the-slimit-clause&quot;&gt;&lt;code&gt;SLIMIT 1&lt;/code&gt; clause&lt;/a&gt; limits the number of series returned to one. The &lt;code&gt;SOFFSET 1&lt;/code&gt; clause paginates the series returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c12d4c1dcae251abed0316c06fc430f1030ea1a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#the-basic-select-statement&quot;&gt;&lt;code&gt;SELECT&lt;/code&gt; clause&lt;/a&gt; specifies an InfluxQL &lt;a href=&quot;../functions/index&quot;&gt;function&lt;/a&gt;. The &lt;a href=&quot;#the-basic-select-statement&quot;&gt;&lt;code&gt;FROM&lt;/code&gt; clause&lt;/a&gt; specifies a single measurement. The &lt;a href=&quot;#the-where-clause&quot;&gt;&lt;code&gt;WHERE&lt;/code&gt; clause&lt;/a&gt; specifies the time range for the query. The &lt;a href=&quot;#the-group-by-clause&quot;&gt;&lt;code&gt;GROUP BY&lt;/code&gt; clause&lt;/a&gt; groups results by all tags (&lt;code&gt;*&lt;/code&gt;) and into 12-minute intervals. The &lt;a href=&quot;#order-by-time-desc&quot;&gt;&lt;code&gt;ORDER BY time DESC&lt;/code&gt; clause&lt;/a&gt; returns results in descending timestamp order. The &lt;a href=&quot;#the-limit-clause&quot;&gt;&lt;code&gt;LIMIT 2&lt;/code&gt; clause&lt;/a&gt; limits the number of points returned to two. The &lt;code&gt;OFFSET 2&lt;/code&gt; clause excludes the first two averages from the query results. The &lt;a href=&quot;#the-slimit-clause&quot;&gt;&lt;code&gt;SLIMIT 1&lt;/code&gt; clause&lt;/a&gt; limits the number of series returned to one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d2c8b2bfe7694914f3d5a8c239e1ab82f20942f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#the-basic-select-statement&quot;&gt;&lt;code&gt;SELECT&lt;/code&gt; clause&lt;/a&gt; supports specifying a &lt;a href=&quot;../../concepts/glossary/index#field&quot;&gt;field&amp;rsquo;s&lt;/a&gt; type and basic cast operations with the &lt;code&gt;::&lt;/code&gt; syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0581b0f19f88c92e9277ee58471b78126b379154" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#time-syntax&quot;&gt;Time Syntax&lt;/a&gt; section on this page details how to specify alternative time ranges in the &lt;code&gt;WHERE&lt;/code&gt; clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e05071ed85ac4086036364945cf48607d73c365" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../administration/config/index#max-row-limit-0&quot;&gt;&lt;code&gt;max-row-limit&lt;/code&gt; configuration option&lt;/a&gt; allows users to limit the maximum number of returned results to prevent InfluxDB from running out of memory while it aggregates the results. The &lt;code&gt;max-row-limit&lt;/code&gt; configuration option is set to &lt;code&gt;0&lt;/code&gt; by default. That default setting allows for an unlimited number of rows returned per request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb76d8b3b82656634b9917132e1564cec0f2066" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../concepts/glossary/index#field&quot;&gt;field(s)&lt;/a&gt; for your data point. Every data point requires at least one field in Line Protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bc644e9bf2cff236833e0a17ded9e5a5e648b7d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../concepts/glossary/index#tag&quot;&gt;tag(s)&lt;/a&gt; that you want to include with your data point. Tags are optional in Line Protocol. Notice that the measurement and tag set are separated by a comma and no spaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ff9deafada5d8582979b42b10c6666e0dd5a877" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../concepts/glossary/index#timestamp&quot;&gt;timestamp&lt;/a&gt; for your data point in nanosecond-precision Unix time. The timestamp is optional in Line Protocol. If you do not specify a timestamp for your data point InfluxDB uses the server&amp;rsquo;s local nanosecond timestamp in UTC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ed8d7355ad977d45461327d95a06e8452093ffa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../concepts/glossary/index#tsm-time-structured-merge-tree&quot;&gt;TSM&lt;/a&gt; storage engine file format is now at version 1. While we may introduce new versions of the format in the 1.x releases, these new versions will run side-by-side with previous versions. What this means for users is there will be no lengthy migrations when upgrading from one 1.x release to another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="124f499cd84fb7f809f35cc3d4f85de19829c094" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../query_language/data_exploration/index#the-basic-select-statement&quot;&gt;&lt;code&gt;SELECT&lt;/code&gt; statement&lt;/a&gt; returns all field values &lt;strong&gt;if&lt;/strong&gt; all values have the same type. If field value types differ across shards, InfluxDB first performs any applicable &lt;a href=&quot;../../query_language/data_exploration/index#cast-operations&quot;&gt;cast&lt;/a&gt; operations and then returns all values with the type that occurs first in the following list: float, integer, string, boolean.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f7fcb1ac5351b3d42e822c84c57fef54a57f841" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../query_language/schema_exploration/index#explore-field-keys-with-show-field-keys&quot;&gt;&lt;code&gt;SHOW FIELD KEYS&lt;/code&gt;&lt;/a&gt; query also returns the field&amp;rsquo;s type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c45a2e587e250900675cb58a45ad16b831c7159" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../tools/shell/index&quot;&gt;CLI&lt;/a&gt; returns timestamps in nanosecond epoch format by default. Specify alternative formats with the &lt;a href=&quot;../../tools/shell/index#influx-commands&quot;&gt;&lt;code&gt;precision &amp;lt;format&amp;gt;&lt;/code&gt; command&lt;/a&gt;. The &lt;a href=&quot;../../tools/api/index&quot;&gt;HTTP API&lt;/a&gt; returns timestamps in &lt;a href=&quot;https://www.ietf.org/rfc/rfc3339.txt&quot;&gt;RFC3339&lt;/a&gt; format by default. Specify alternative formats with the &lt;a href=&quot;../../tools/api/index#query-string-parameters&quot;&gt;&lt;code&gt;epoch&lt;/code&gt; query string parameter&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a81900ce35f11eb9676484e8281e2aa3f15766b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../tools/shell/index#influx-arguments&quot;&gt;&lt;code&gt;-precision&lt;/code&gt; argument&lt;/a&gt; specifies the format/precision of any returned timestamps. In the example above, &lt;code&gt;rfc3339&lt;/code&gt; tells InfluxDB to return timestamps in &lt;a href=&quot;https://www.ietf.org/rfc/rfc3339.txt&quot;&gt;RFC3339 format&lt;/a&gt; (&lt;code&gt;YYYY-MM-DDTHH:MM:SS.nnnnnnnnnZ&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1336b203355e9c8f8d5c1d553f083fc38b2f42f4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../user-management/index&quot;&gt;password&lt;/a&gt; for your InfluxDB instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26f6826283a6641b8ec045753f30ef1b1b36c073" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../user-management/index&quot;&gt;username&lt;/a&gt; for your InfluxDB instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bf8bd67ff82e5827624a68cc1bb2dbe4b4b199f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;getting-started/index&quot;&gt;getting started guide&lt;/a&gt; gets you up and running with Chronograf with as little configuration and code as possible. By the end of the guide, you will have downloaded, installed, and configured all four packages of the TICK stack (&lt;a href=&quot;https://github.com/influxdata/telegraf&quot;&gt;Telegraf&lt;/a&gt;, &lt;a href=&quot;https://github.com/influxdata/influxdb&quot;&gt;InfluxDB&lt;/a&gt;, Chronograf, and &lt;a href=&quot;https://github.com/influxdata/kapacitor&quot;&gt;Kapacitor&lt;/a&gt;), and you will be all set to monitor your infrastructure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="686e5c449ea005201f17851f78c7ae27170c1816" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.influxdata.com/influxdb/v1.2/tools/shell/#influx-arguments&quot;&gt;&lt;code&gt;-precision&lt;/code&gt; argument&lt;/a&gt; specifies the format/precision of any returned timestamps. In the example above, &lt;code&gt;rfc3339&lt;/code&gt; tells InfluxDB to return timestamps in &lt;a href=&quot;https://www.ietf.org/rfc/rfc3339.txt&quot;&gt;RFC3339 format&lt;/a&gt; (&lt;code&gt;YYYY-MM-DDTHH:MM:SS.nnnnnnnnnZ&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b260787340c2a0b16ce5d50c2bb78c93fe35926" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/outputs/riemann&quot;&gt;Riemann output plugin&lt;/a&gt; has been rewritten and the &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/outputs/riemann_legacy&quot;&gt;previous riemann plugin&lt;/a&gt; is &lt;em&gt;incompatible&lt;/em&gt; with the new one. The reasons for this are outlined in issue &lt;a href=&quot;https://github.com/influxdata/telegraf/issues/1878&quot;&gt;#1878&lt;/a&gt;. The previous Riemann output will still be available using &lt;code&gt;outputs.riemann_legacy&lt;/code&gt; if needed, but that will eventually be deprecated. It is highly recommended that all users migrate to the new Riemann output plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ff11167c506a3a9eb8255b275e8f7f5030a0ee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;index&quot;&gt;WhereNode&lt;/a&gt; filters the data stream by a given expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90f0e38c5507850dafdea584d3e2741c543239f7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;installation/index&quot;&gt;installation page&lt;/a&gt; lists the requirements for installing, starting, and configuring Chronograf.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee50a6cb5633ba1c3a614eb63f6b9eb4038e8f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;field_key&amp;gt;::&amp;lt;type&amp;gt;&lt;/code&gt; syntax supports casting field values from integers to floats or from floats to integers. See &lt;a href=&quot;../../query_language/data_exploration/index#data-types-and-cast-operations&quot;&gt;Cast Operations&lt;/a&gt; for an example. There is no way to cast a float or integer to a string or boolean (or vice versa).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da2ecf39f363e3c7fd2fe62bdfd00060ddd8f61f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.chatId()&lt;/code&gt;, &lt;code&gt;.disableNotification()&lt;/code&gt;, &lt;code&gt;.disableWebPagePreview()&lt;/code&gt;, and &lt;code&gt;.parseMode()&lt;/code&gt; specifications are optional. If they aren&amp;rsquo;t set in the TICKscript, they default to the &lt;code&gt;chat-id&lt;/code&gt;, &lt;code&gt;disable-notification&lt;/code&gt;, &lt;code&gt;disable-web-page-preview&lt;/code&gt;, and &lt;code&gt;parse-mode&lt;/code&gt; settings in the &lt;code&gt;[telegram]&lt;/code&gt; section of the configuration file. Note that if &lt;code&gt;global&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; in the configuration file, there&amp;rsquo;s no need to specify &lt;code&gt;.telegram()&lt;/code&gt; in the TICKscript; Kapacitor sends all alerts to Telegram by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be3e2a4ccd6a662f7698319fc6d2f8dcd183b4b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.room()&lt;/code&gt; and &lt;code&gt;.token()&lt;/code&gt; specifications are optional. If they aren&amp;rsquo;t set in the TICKscript, they default to the &lt;code&gt;room&lt;/code&gt; and &lt;code&gt;token&lt;/code&gt; settings in the &lt;code&gt;[hipchat]&lt;/code&gt; section of the configuration file. Note that if &lt;code&gt;global&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; in the configuration file, there&amp;rsquo;s no need to specify &lt;code&gt;.hipChat()&lt;/code&gt; in the TICKscript; Kapacitor sends all alerts to HipChat by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="298a94f50a5e83f3f3ffd81b07a6ffbfa6170244" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;/query&lt;/code&gt; endpoint accepts &lt;code&gt;GET&lt;/code&gt; and &lt;code&gt;POST&lt;/code&gt; HTTP requests. Use this endpoint to query data and manage databases, retention policies, and users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d7899326e1a7976c74928f0ab55675c3aefb41" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;/write&lt;/code&gt; endpoint accepts &lt;code&gt;POST&lt;/code&gt; HTTP requests. Use this endpoint to write data to a pre-existing database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="787c3545d3b1276e0e025733249edc5b300efc3c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;::&lt;/code&gt; syntax allows users to perform basic cast operations in queries. Currently, InfluxDB supports casting &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field values&lt;/a&gt; from integers to floats or from floats to integers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84931ec12fbb39367043ff4db51962703ef931cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ALTER RETENTION POLICY&lt;/code&gt; query takes the following form, where you must declare at least one of the retention policy attributes &lt;code&gt;DURATION&lt;/code&gt;, &lt;code&gt;REPLICATION&lt;/code&gt;, &lt;code&gt;SHARD DURATION&lt;/code&gt;, or &lt;code&gt;DEFAULT&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aab24843af015d81ebabdf84beef62e55bff915" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Alert Message&lt;/code&gt; section on the Rule Configuration page determines where the system sends the alert (the event handler) and the text that accompanies the alert (the alert message). Chronograf supports several &lt;a href=&quot;../../troubleshooting/frequently-asked-questions/index#what-kapacitor-event-handlers-are-supported-in-chronograf&quot;&gt;event handlers&lt;/a&gt;. Here, we choose to send alerts to Slack, specifically to the existing &lt;code&gt;#chronocats&lt;/code&gt; channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42a702db19e346ddcb7a9629e6006729fded0d16" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Authorization callback URL&lt;/code&gt; must be the location of the &lt;code&gt;Homepage URL&lt;/code&gt; plus &lt;code&gt;/oauth/github/callback&lt;/code&gt;. For example, if &lt;code&gt;Homepage URL&lt;/code&gt; was &lt;code&gt;http://localhost:8888&lt;/code&gt; then the &lt;code&gt;Authorization callback URL&lt;/code&gt; should be &lt;code&gt;http://localhost:8888/oauth/github/callback&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0afd9ad4a8a14945545e2338f1c9bb698bcf9a4c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CREATE USER&lt;/code&gt; statement requires single quotation marks around the password string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f978f61819fb0c7af4e3cd91185e4aea819ba4bf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DELETE&lt;/code&gt; query deletes all points from a &lt;a href=&quot;../../concepts/glossary/index#series&quot;&gt;series&lt;/a&gt; in a database. Unlike &lt;a href=&quot;index#drop-series-from-the-index-with-drop-series&quot;&gt;&lt;code&gt;DROP SERIES&lt;/code&gt;&lt;/a&gt;, it does not drop the series from the index and it supports time intervals in the &lt;code&gt;WHERE&lt;/code&gt; clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d69042c418f94aec01d3166946b427a35bb50036" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DROP DATABASE&lt;/code&gt; query deletes all of the data, measurements, series, continuous queries, and retention policies from the specified database. The query takes the following form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffb1de600b1b60d0df7d469cda13670c8834aca6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DROP MEASUREMENT&lt;/code&gt; query deletes all data and series from the specified &lt;a href=&quot;../../concepts/glossary/index#measurement&quot;&gt;measurement&lt;/a&gt; and deletes the measurement from the index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f802246aa67de131c8d7d1c1db8cee8f2e0ff03" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DROP SERIES&lt;/code&gt; query deletes all points from a &lt;a href=&quot;../../concepts/glossary/index#series&quot;&gt;series&lt;/a&gt; in a database, and it drops the series from the index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce8f95717a54fbcc9199d19bad23cabd642e8b33" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DROP SHARD&lt;/code&gt; query deletes a shard. It also drops the shard from the &lt;a href=&quot;../../concepts/glossary/index#metastore&quot;&gt;metastore&lt;/a&gt;. The query takes the following form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e5e8e7676379ca603cd09d31cf75c8a0b8a642a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DURATION&lt;/code&gt; clause determines how long InfluxDB keeps the data. The &lt;code&gt;&amp;lt;duration&amp;gt;&lt;/code&gt; is a &lt;a href=&quot;../spec/index#durations&quot;&gt;duration literal&lt;/a&gt; or &lt;code&gt;INF&lt;/code&gt; (infinite). The minimum duration for a retention policy is one hour and the maximum duration is &lt;code&gt;INF&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c1b7f10a7a65b351a8e6e8fcde54a2ed8ac2b3a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ELAPSED()&lt;/code&gt; function supports the &lt;a href=&quot;../data_exploration/index#group-by-time-intervals&quot;&gt;&lt;code&gt;GROUP BY time()&lt;/code&gt; clause&lt;/a&gt; but the query results aren&amp;rsquo;t particularly useful. Currently, an &lt;code&gt;ELAPSED()&lt;/code&gt; query with a nested function and a &lt;code&gt;GROUP BY time()&lt;/code&gt; clause simply returns the interval specified in the &lt;code&gt;GROUP BY time()&lt;/code&gt; clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d1e05bd3df3fc86ce2d144d1fe504a25f07b3e4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FROM&lt;/code&gt; clause and the &lt;code&gt;WHERE&lt;/code&gt; clause are optional. The &lt;code&gt;WHERE&lt;/code&gt; clause supports tag comparisons; field comparisons are not valid for the &lt;code&gt;SHOW TAG KEYS&lt;/code&gt; query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45eacf2da568049bcd46f259a3ca2b24ed4358b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FROM&lt;/code&gt; clause is also optional. See the Data Exploration page for documentation on the &lt;a href=&quot;../data_exploration/index#the-basic-select-statement&quot;&gt;&lt;code&gt;FROM&lt;/code&gt; clause&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42aebc96222d93b82a53202d337e014c13f79806" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FROM&lt;/code&gt; clause supports several formats for specifying a &lt;a href=&quot;../../concepts/glossary/index#measurement&quot;&gt;measurement(s)&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41dfcbdbd0b676ba85845f7ca5dc9cf26c5626a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FROM&lt;/code&gt;, &lt;code&gt;WHERE&lt;/code&gt;, &lt;code&gt;LIMIT&lt;/code&gt;, and &lt;code&gt;OFFSET&lt;/code&gt; clauses are optional. The &lt;code&gt;WHERE&lt;/code&gt; clause supports tag comparisons; field comparisons are not valid for the &lt;code&gt;SHOW SERIES&lt;/code&gt; query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89db912d43af0ad65c936b01480af9f1c9d0a07c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FROM&lt;/code&gt;, &lt;code&gt;WHERE&lt;/code&gt;, &lt;code&gt;LIMIT&lt;/code&gt;, and &lt;code&gt;OFFSET&lt;/code&gt; clauses are optional. The &lt;code&gt;WHERE&lt;/code&gt; clause supports tag comparisons; field comparisons are not valid for the &lt;code&gt;SHOW TAG KEYS&lt;/code&gt; query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa8d5f35eed8e48c1f94656b0a9d5f00e4684482" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GROUP BY *&lt;/code&gt; clause &lt;a href=&quot;#issue-1-missing-data&quot;&gt;preserves tags&lt;/a&gt; in the source database as tags in the destination database. The following query does not maintain the series context for tags; tags will be stored as fields in the destination database (&lt;code&gt;copy_NOAA_water_database&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da4b4571c268c5732a29b6390425ea361c535d5b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GROUP BY time()&lt;/code&gt; clause determines the timestamps in the results; each timestamp marks the start of a time interval. That behavior also applies to nested selector functions (like &lt;a href=&quot;#first&quot;&gt;&lt;code&gt;FIRST()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#max&quot;&gt;&lt;code&gt;MAX()&lt;/code&gt;&lt;/a&gt;) which would, in all other cases, return a specific timestamp from the raw data. Because the &lt;code&gt;GROUP BY time()&lt;/code&gt; clause overrides the original timestamps, the &lt;code&gt;ELAPSED()&lt;/code&gt; calculation always returns the same value as the &lt;code&gt;GROUP BY time()&lt;/code&gt; interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a6d036edf39702382bee89b5ad550693374536f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GROUP BY&lt;/code&gt; clause groups query results by a user-specified set of &lt;a href=&quot;../../concepts/glossary/index#tag&quot;&gt;tags&lt;/a&gt; or a time interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a72c8babf7ebf264aa4159a9af27ca9460cb61" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Homepage URL&lt;/code&gt; should be Chronograf&amp;rsquo;s full server name and port. If you are running it locally for example, make it &lt;code&gt;http://localhost:8888&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1f30f36b35d0904064faecf58d13c196bf4b208" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INTEGRAL()&lt;/code&gt; function returns the area under the curve for subsequent &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field values&lt;/a&gt;. The query below returns the area under the curve (in seconds) for the field values associated with the &lt;code&gt;water_level&lt;/code&gt; field key and in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f86f49ef8f662c3810b5ee28f5a9b3a2618a4804" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INTO&lt;/code&gt; clause section in this document shows how to manually implement queries with an &lt;code&gt;INTO&lt;/code&gt; clause. See the &lt;a href=&quot;../index#continuous_queries&quot;&gt;Continuous Queries&lt;/a&gt; documentation for how to automate &lt;code&gt;INTO&lt;/code&gt; clause queries on realtime data. Among &lt;a href=&quot;../continuous_queries/index#continuous-query-use-cases&quot;&gt;other uses&lt;/a&gt;, Continuous Queries automate the downsampling process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b469e3d791f67cae5bac9f83ddb06c8e816b5fcc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INTO&lt;/code&gt; clause supports several formats for specifying a &lt;a href=&quot;../../concepts/glossary/index#measurement&quot;&gt;measurement&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbf04b1f2267889d404d3849d8c2784eac743e7b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INTO&lt;/code&gt; clause writes query results to a user-specified &lt;a href=&quot;../../concepts/glossary/index#measurement&quot;&gt;measurement&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99bfa7907ca2029568773f8c67ffa838ff682265" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IteratorOptions&lt;/code&gt; provide arguments about field selection, time ranges, and dimensions that the iterator creator can use when planning an iterator. The &lt;code&gt;IteratorCreator&lt;/code&gt; interface is used at many levels such as the &lt;code&gt;Shards&lt;/code&gt;, &lt;code&gt;Shard&lt;/code&gt;, and &lt;code&gt;Engine&lt;/code&gt;. This allows optimizations to be performed when applicable such as returning a precomputed &lt;code&gt;COUNT()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b43aceb394cf41d028baea1378b614d838b1715e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;N&lt;/code&gt; predicted values occur at the same interval as the &lt;a href=&quot;../data_exploration/index#group-by-time-intervals&quot;&gt;&lt;code&gt;GROUP BY time()&lt;/code&gt; interval&lt;/a&gt;. If your &lt;code&gt;GROUP BY time()&lt;/code&gt; interval is &lt;code&gt;6m&lt;/code&gt; and &lt;code&gt;N&lt;/code&gt; is &lt;code&gt;3&lt;/code&gt; you&amp;rsquo;ll receive three predicted values that are each six minutes apart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be4602808427274d1e82a59b4d3c4527dd2cf302" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NON_NEGATIVE_DIFFERENCE()&lt;/code&gt; function returns the non-negative result of subtraction between subsequent &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field values&lt;/a&gt;. Non-negative results of subtraction include positive differences and differences that equal zero. The query below returns the non-negative difference between subsequent field values in the &lt;code&gt;water_level&lt;/code&gt; field key and in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="962ba2ac812a376af548ab3b71664490347b0914" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OFFSET&lt;/code&gt; clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e310ee34c06d215d4e466ef8ef49d401e1775b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;REPLICATION&lt;/code&gt; clause determines how many independent copies of each point are stored in the &lt;a href=&quot;../../high_availability/clusters/index&quot;&gt;cluster&lt;/a&gt;, where &lt;code&gt;n&lt;/code&gt; is the number of data nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39b501c9ec31aa4fbba74e2706b11138db6f2136" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SELECT&lt;/code&gt; clause supports several formats for specifying data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1082df63b88287f5610b2b6e39fa04191d06f8c3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SELECT&lt;/code&gt; statement queries data from a particular &lt;a href=&quot;../../concepts/glossary/index#measurement&quot;&gt;measurement&lt;/a&gt; or measurements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="300580eb5487568bef0187c710f5b6bc487243f7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SELECT&lt;/code&gt; statement requires a &lt;code&gt;SELECT&lt;/code&gt; clause and a &lt;code&gt;FROM&lt;/code&gt; clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91979fc30f939a49a7ddd40358abac0fdb51d4ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SHARD DURATION&lt;/code&gt; clause determines the time range covered by a &lt;a href=&quot;../../concepts/glossary/index#shard-group&quot;&gt;shard group&lt;/a&gt;. The &lt;code&gt;&amp;lt;duration&amp;gt;&lt;/code&gt; is a &lt;a href=&quot;../spec/index#durations&quot;&gt;duration literal&lt;/a&gt; and does not support an &lt;code&gt;INF&lt;/code&gt; (infinite) duration. This setting is optional. By default, the shard group duration is determined by the retention policy&amp;rsquo;s &lt;code&gt;DURATION&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e6733fa789b850addd0e314bdbb54a2f12bec0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SLIMIT&lt;/code&gt; Clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd21270198bc52ee7f5818b5eb7afdf29970a64c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SOFFSET&lt;/code&gt; clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24c14fb429ae56ee76956bb3f54cc6609885d7c0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TOP()&lt;/code&gt; and &lt;code&gt;BOTTOM()&lt;/code&gt; functions no longer support other functions in the &lt;code&gt;SELECT&lt;/code&gt;&lt;a href=&quot;../../query_language/data_exploration/index#description-of-syntax&quot;&gt;clause&lt;/a&gt;. The following query now returns an error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4577da30e0f1b49081ee9f15de545208571e49ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TOP()&lt;/code&gt; and &lt;code&gt;BOTTOM()&lt;/code&gt; functions now maintain &lt;code&gt;tags&lt;/code&gt; as &lt;code&gt;tags&lt;/code&gt; if the query includes a &lt;a href=&quot;../../concepts/glossary/index#tag-key&quot;&gt;tag key&lt;/a&gt; as an argument. The &lt;a href=&quot;../../query_language/functions/index#issue-3-bottom-tags-and-the-into-clause&quot;&gt;query below&lt;/a&gt; preserves &lt;code&gt;location&lt;/code&gt; as a tag in the newly-written data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="745945cb7fb374e2b325c484eedbb6c2d1b5c7b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TOP()&lt;/code&gt; and &lt;code&gt;BOTTOM()&lt;/code&gt; functions now preserve the timestamps in the original data when they&amp;rsquo;re used with the &lt;a href=&quot;../../query_language/data_exploration/index#group-by-time-intervals&quot;&gt;&lt;code&gt;GROUP BY time()&lt;/code&gt; clause&lt;/a&gt;. The &lt;a href=&quot;../../query_language/functions/index#issue-1-top-with-a-group-by-time-clause&quot;&gt;following query&lt;/a&gt; returns the points&amp;rsquo; original timestamps; the timestamps are not forced to match the start of the &lt;code&gt;GROUP BY time()&lt;/code&gt; intervals:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dc8d65eafdab11b157dec22efd60297e727f69b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WHERE&lt;/code&gt; clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef7f5445a3cde6896cc9f7fb1da62d8780ee267" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WHERE&lt;/code&gt; clause supports &lt;code&gt;conditional_expression&lt;/code&gt;s on fields, tags, and timestamps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6caa7e0eee5cee40298f56ebf7a50fedcb15d839" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WHERE&lt;/code&gt; clause supports comparisons against string, boolean, float, and integer &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field values&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1d02f378c2d4fa237671106ea43f0ef8655f37f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WHERE&lt;/code&gt; filters data based on &lt;a href=&quot;../../concepts/glossary/index#field&quot;&gt;fields&lt;/a&gt;, &lt;a href=&quot;../../concepts/glossary/index#tag&quot;&gt;tags&lt;/a&gt;, and/or &lt;a href=&quot;../../concepts/glossary/index#timestamp&quot;&gt;timestamps&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e06b97aaf128999e2ffd53a13aa4b413bc3091" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WITH&lt;/code&gt; clause is required. It supports specifying a single tag key, a regular expression, and multiple tag keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b5f7ccfacb766a98ab4d5f8278448da1899b141" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WITH&lt;/code&gt;, &lt;code&gt;DURATION&lt;/code&gt;, &lt;code&gt;REPLICATION&lt;/code&gt;, &lt;code&gt;SHARD DURATION&lt;/code&gt;, and &lt;code&gt;NAME&lt;/code&gt; clauses are optional and create a single &lt;a href=&quot;../../concepts/glossary/index#retention-policy-rp&quot;&gt;retention policy&lt;/a&gt; associated with the created database. If you do not specify one of the clauses after &lt;code&gt;WITH&lt;/code&gt;, the relevant behavior defaults to the &lt;code&gt;autogen&lt;/code&gt; retention policy settings. The created retention policy automatically serves as the database&amp;rsquo;s default retention policy. For more information about those clauses, see &lt;a href=&quot;index#retention-policy-management&quot;&gt;Retention Policy Management&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ce5dc387965accacb514cbb649c2c7ad47dadc8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WITH&lt;/code&gt;, &lt;code&gt;WHERE&lt;/code&gt;, &lt;code&gt;LIMIT&lt;/code&gt; and &lt;code&gt;OFFSET&lt;/code&gt; clauses are optional. The &lt;code&gt;WHERE&lt;/code&gt; clause supports tag comparisons; field comparisons are not valid for the &lt;code&gt;SHOW SERIES&lt;/code&gt; query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9fb7807aa63e4a90cd90cdcc623f3d1a178ec4a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;align&lt;/code&gt; property of &lt;code&gt;window&lt;/code&gt; defines how to align the window edges. (By default, the edges are defined relative to the first data point the &lt;code&gt;window&lt;/code&gt; node receives.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a957bbe1011274af540f25483eae7d80a03b751" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;all_the_types&lt;/code&gt; field stores four different data types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3137e06b7dc17b8cfc2a4ce025e5f3530efeedcc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bad timestamp&lt;/code&gt; error occurs when the &lt;a href=&quot;../../concepts/glossary/index#line-protocol&quot;&gt;line protocol&lt;/a&gt; includes a timestamp in a format other than a UNIX timestamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25def794b818705e1dcda34d98770af0d32cd47b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cache maximum memory size exceeded&lt;/code&gt; error occurs when the cached memory size increases beyond the &lt;a href=&quot;../../administration/config/index#cache-max-memory-size-524288000&quot;&gt;&lt;code&gt;cache-max-memory-size&lt;/code&gt; setting&lt;/a&gt; in the configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06f11abcccc2dafd04b62c38bfe40527ce763b52" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cq_query&lt;/code&gt; requires a &lt;a href=&quot;../../concepts/glossary/index#function&quot;&gt;function&lt;/a&gt;, an &lt;a href=&quot;../spec/index#clauses&quot;&gt;&lt;code&gt;INTO&lt;/code&gt; clause&lt;/a&gt;, and a &lt;a href=&quot;../spec/index#clauses&quot;&gt;&lt;code&gt;GROUP BY time()&lt;/code&gt; clause&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f95bb60e2d4f42640f5e1fe5ceea36ce800cb3e4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;database name required&lt;/code&gt; error occurs when certain &lt;code&gt;SHOW&lt;/code&gt; queries do not specify a &lt;a href=&quot;../../concepts/glossary/index#database&quot;&gt;database&lt;/a&gt;. Specify a database with an &lt;code&gt;ON&lt;/code&gt; clause in the &lt;code&gt;SHOW&lt;/code&gt; query, with &lt;code&gt;USE &amp;lt;database_name&amp;gt;&lt;/code&gt; in the &lt;a href=&quot;../../tools/shell/index&quot;&gt;CLI&lt;/a&gt;, or with the &lt;code&gt;db&lt;/code&gt; query string parameter in the &lt;a href=&quot;../../tools/api/index#query-string-parameters&quot;&gt;HTTP API&lt;/a&gt; request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a15196acc86e49a361e627bacbf3b18534979182" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;every&lt;/code&gt; property of &lt;code&gt;window&lt;/code&gt; defines the frequency at which the window is emitted to the next node in the pipeline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e54c0cb258565b4c966cce50cea0699336e6e24c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;expected identifier&lt;/code&gt; error occurs when InfluxDB anticipates an identifier in a query but doesn&amp;rsquo;t find it. Identifiers are tokens that refer to continuous query names, database names, field keys, measurement names, retention policy names, subscription names, tag keys, and user names. The error is often a gentle reminder to double-check your query&amp;rsquo;s syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6d60d0c3868d7469d141766233d5d4047233e6d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;expected string&lt;/code&gt; error occurs when InfluxDB anticipates a string but doesn&amp;rsquo;t find it. In most cases, the error is a result of forgetting to quote the password string in the &lt;code&gt;CREATE USER&lt;/code&gt; statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ce82e7c9ced5e7d9b3afc42a3371211cc5a3818" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;french_bulldogs&lt;/code&gt; measurement includes the &lt;code&gt;color&lt;/code&gt; tag and the &lt;code&gt;name&lt;/code&gt; field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fe6467f27e11f9d756d152122fea7b7f09a7aac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;h2o_feet&lt;/code&gt; measurement is the only measurement that contains the NOAA data. Please note that the &lt;code&gt;level description&lt;/code&gt; field isn&amp;rsquo;t part of the original NOAA data - we snuck it in there for the sake of having a field key with a special character and string &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field values&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a526d1313d9b43ff1e1ae04f1fb293b94eef7aa4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;h2o_feet&lt;/code&gt;&lt;a href=&quot;../../concepts/glossary/index#measurement&quot;&gt;measurement&lt;/a&gt; in the &lt;code&gt;NOAA_water_database&lt;/code&gt; is part of two &lt;a href=&quot;../../concepts/glossary/index#series&quot;&gt;series&lt;/a&gt;. The first series is made up of the &lt;code&gt;h2o_feet&lt;/code&gt; measurement and the &lt;code&gt;location = coyote_creek&lt;/code&gt;&lt;a href=&quot;../../concepts/glossary/index#tag&quot;&gt;tag&lt;/a&gt;. The second series is made of up the &lt;code&gt;h2o_feet&lt;/code&gt; measurement and the &lt;code&gt;location = santa_monica&lt;/code&gt; tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9efaa32b7a82a1c43e525f3a4259bda2d5f8bd28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;message&lt;/code&gt; alert properties can be configured globally via the 'deadman' configuration section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76139842247ba8cd73077bfa5486528cab0894b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;if&lt;/code&gt; function&amp;rsquo;s return type is the same type as its second and third arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc7c1015b5cefe831df9b562cb0931f0b930ed5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;json&lt;/code&gt; method is available within the template to convert any variable to a valid JSON string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c1c1e1d4cc4cd003b365228089afef8e75d481d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;kapacitor&lt;/code&gt; package also defines an interface named &lt;code&gt;Node&lt;/code&gt; and provides a default implementation via the &lt;code&gt;kapacitor.node&lt;/code&gt; type. Again we use composition to implement the interface. Notice we also have a field that will contain an instance of the &lt;code&gt;pipeline.HouseDBOutNode&lt;/code&gt; we just finished defining. This &lt;code&gt;pipeline.HouseDBOutNode&lt;/code&gt; acts like a configuration struct telling the &lt;code&gt;kapacitor.HouseDBOutNode&lt;/code&gt; what it needs to do its job.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8e0865e5e98bf42997a21b64475bb9dc75c4a84" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;max series per database exceeded&lt;/code&gt; error occurs when a write causes the number of &lt;a href=&quot;../../concepts/glossary/index#series&quot;&gt;series&lt;/a&gt; in a database to exceed the maximum allowable series per database. The maximum allowable series per database is controlled by the &lt;code&gt;max-series-per-database&lt;/code&gt; setting in the &lt;code&gt;[data]&lt;/code&gt; section of the configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d95a464c59598847d3e002e3e47e49afa760fcc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;meta&lt;/code&gt; directory. Files in the &lt;code&gt;meta&lt;/code&gt; directory include &lt;code&gt;meta.db&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="038e6d8200e549c5b4fd3a9299d5701d34b142c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mixing aggregate and non-aggregate&lt;/code&gt; error occurs when a &lt;code&gt;SELECT&lt;/code&gt; statement includes both an &lt;a href=&quot;../../query_language/functions/index&quot;&gt;aggregate function&lt;/a&gt; and a standalone &lt;a href=&quot;../../concepts/glossary/index#field-key&quot;&gt;field key&lt;/a&gt; or &lt;a href=&quot;../../concepts/glossary/index#tag-key&quot;&gt;tag key&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8e57bbfe8f56f2209a502f54a5c08b194fcc831" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mymeas&lt;/code&gt;&lt;a href=&quot;../../concepts/glossary/index#measurement&quot;&gt;measurement&lt;/a&gt; has two points. The first point has the &lt;a href=&quot;../../concepts/glossary/index#timestamp&quot;&gt;timestamp&lt;/a&gt;&lt;code&gt;2017-03-01T00:16:18Z&lt;/code&gt;, a &lt;code&gt;myfield&lt;/code&gt; value of &lt;code&gt;33.1&lt;/code&gt;, and no tag values for the &lt;code&gt;mytag1&lt;/code&gt; and &lt;code&gt;mytag2&lt;/code&gt;&lt;a href=&quot;../../concepts/glossary/index#tag-key&quot;&gt;tag keys&lt;/a&gt;. The second point has the timestamp &lt;code&gt;2017-03-01T00:17:18Z&lt;/code&gt;, a &lt;code&gt;myfield&lt;/code&gt; value of &lt;code&gt;12.4&lt;/code&gt;, a &lt;code&gt;mytag1&lt;/code&gt; value of &lt;code&gt;12&lt;/code&gt;, and a &lt;code&gt;mytag2&lt;/code&gt; value of &lt;code&gt;14&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="722c0f7afa536132d45bdd95a2d15b19bbf0bc7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;node&lt;/code&gt; type we included via composition in the &lt;code&gt;HouseDBOutNode&lt;/code&gt; provides a list of edges in the field named &lt;code&gt;ins&lt;/code&gt;. Since &lt;code&gt;HouseDBOutNode&lt;/code&gt; can have only one parent, the edge we are concerned with is the 0th edge. The &lt;code&gt;Edge&lt;/code&gt; type provides two methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d206a542ff7f7f2d18b5bd99916645f28273c835" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;offset_interval&lt;/code&gt; is a &lt;a href=&quot;../spec/index#durations&quot;&gt;duration literal&lt;/a&gt;. It shifts forward or back InfluxDB&amp;rsquo;s preset time boundaries. The &lt;code&gt;offset_interval&lt;/code&gt; can be positive or negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="769c38ee9e90659a49d60aa18ead7f02c92af69f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;peg&lt;/code&gt; measurement has two fields (&lt;code&gt;square&lt;/code&gt; and &lt;code&gt;round&lt;/code&gt;) and one tag (&lt;code&gt;force&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a4f97f751d1fe3c81ddb6af9abc76a6fed5250c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reporting-disabled&lt;/code&gt; option toggles the reporting of data every 24 hours to &lt;code&gt;usage.influxdata.com&lt;/code&gt;. Each report includes a randomly-generated identifier, OS, architecture, InfluxDB version, and the number of &lt;a href=&quot;../../concepts/glossary/index#database&quot;&gt;databases&lt;/a&gt;, &lt;a href=&quot;../../concepts/glossary/index#measurement&quot;&gt;measurements&lt;/a&gt;, and unique &lt;a href=&quot;../../concepts/glossary/index#series&quot;&gt;series&lt;/a&gt;. Setting this option to &lt;code&gt;true&lt;/code&gt; will disable reporting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f0a95da1edac0aad88db39d652658637f0fd80e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;show&lt;/code&gt; command will display the &lt;code&gt;vars&lt;/code&gt; associated with this task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dee7e29083b24da4831ee6aa0e2eafb5850ff058" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;time and \*influxql.VarRef are not compatible&lt;/code&gt; error occurs when date-time strings are double quoted in queries. Date-time strings require single quotes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ffd29bbe117990bfcc6ba914f5822a08347f1e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;time outside range&lt;/code&gt; error occurs when the timestamp in the &lt;a href=&quot;../../concepts/glossary/index#line-protocol&quot;&gt;line protocol&lt;/a&gt; falls outside the valid time range for InfluxDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41436349a4cbb7a604401c5df96845f27ab75176" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;time_interval&lt;/code&gt; in the &lt;code&gt;GROUP BY time()&lt;/code&gt; clause is a &lt;a href=&quot;../spec/index#durations&quot;&gt;duration literal&lt;/a&gt;. It determines how InfluxDB groups query results over time. For example, a &lt;code&gt;time_interval&lt;/code&gt; of &lt;code&gt;5m&lt;/code&gt; groups query results into five-minute time groups across the time range specified in the &lt;a href=&quot;#the-where-clause&quot;&gt;&lt;code&gt;WHERE&lt;/code&gt; clause&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f7208b11c44071cb1bc1e97a56a57e8540e2c3c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;topScores&lt;/code&gt; variable now contains the top 15 player&amp;rsquo;s score per game. All we need to be able to build our leaderboard. Kapacitor can expose the scores over HTTP via the &lt;a href=&quot;../../nodes/http_out_node/index&quot;&gt;HTTPOutNode&lt;/a&gt;. We will call our task &lt;code&gt;top_scores&lt;/code&gt;; with the following addition the most recent scores will be available at &lt;code&gt;http://localhost:9092/kapacitor/v1/tasks/top_scores/top_scores&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10310c08660696421e3d754f546327388b0ad4a0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tz()&lt;/code&gt; clause returns the UTC offset for the specified timezone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd44ab2ced5bb66b20265fb6fb5f1b1b4c27e066" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unit&lt;/code&gt; argument is an integer followed by a &lt;a href=&quot;../spec/index#literals&quot;&gt;duration literal&lt;/a&gt; and it is optional. If the query does not specify the &lt;code&gt;unit&lt;/code&gt; the &lt;code&gt;unit&lt;/code&gt; defaults to the &lt;code&gt;GROUP BY time()&lt;/code&gt; interval. Note that this behavior is different from the &lt;a href=&quot;#basic-syntax-1&quot;&gt;basic syntax&amp;rsquo;s&lt;/a&gt; default behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1372ea7a897e0279be38336b0f8a0cd5ae8cd655" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unit&lt;/code&gt; argument is an integer followed by a &lt;a href=&quot;../spec/index#literals&quot;&gt;duration literal&lt;/a&gt; and it is optional. If the query does not specify the &lt;code&gt;unit&lt;/code&gt;, the &lt;code&gt;unit&lt;/code&gt; defaults to the &lt;code&gt;GROUP BY time()&lt;/code&gt; interval. Note that this behavior is different from the &lt;a href=&quot;#basic-syntax-4&quot;&gt;basic syntax&amp;rsquo;s&lt;/a&gt; default behavior. &lt;code&gt;NON_NEGATIVE_DERIVATIVE()&lt;/code&gt; returns only positive rates of change or rates of change that equal zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed4aa2cc87c25fc7785ed2f0a9489115aa3e0df" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;measurement&lt;/em&gt; acts as a container for tags, fields, and the &lt;code&gt;time&lt;/code&gt; column, and the measurement name is the description of the data that are stored in the associated fields. Measurement names are strings, and, for any SQL users out there, a measurement is conceptually similar to a table. The only measurement in the sample data is &lt;code&gt;census&lt;/code&gt;. The name &lt;code&gt;census&lt;/code&gt; tells us that the field values record the number of &lt;code&gt;butterflies&lt;/code&gt; and &lt;code&gt;honeybees&lt;/code&gt; - not their size, direction, or some sort of happiness index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be09283423e6c66e81baf31c4d07b653996042b" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;measurement&lt;/em&gt;&lt;em&gt;name&lt;/em&gt; is usually the name of the plugin, but can be overridden using the &lt;code&gt;name_override&lt;/code&gt; config option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0859c4e969f6de539781efed1584973399a6e74" translate="yes" xml:space="preserve">
          <source>The API (TICKscript) for creating and configuring the node, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="288809acd5337778e1fc46cdf20aaf980487f5d6" translate="yes" xml:space="preserve">
          <source>The API allows the client to specify IDs for the various resources. This way you can control the meaning of the IDs. If you do not specify an ID a random UUID will be generated for the resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e78d9912afcb50b527057a8889be3a13d0d9892" translate="yes" xml:space="preserve">
          <source>The API exposes endpoints to query the state of each alert and endpoints for configuring alert handlers. See the &lt;a href=&quot;https://docs.influxdata.com/kapacitor/latest/api/api/&quot;&gt;API docs&lt;/a&gt; for more details. The kapacitor CLI has been updated with commands for defining alert handlers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02f42c515cbbfc93b9ab9049de5052096a204f32" translate="yes" xml:space="preserve">
          <source>The API supports binding parameters to particular field values or tag values in the &lt;a href=&quot;../../query_language/data_exploration/index#the-where-clause&quot;&gt;&lt;code&gt;WHERE&lt;/code&gt; clause&lt;/a&gt;. Use the syntax &lt;code&gt;$&amp;lt;placeholder_key&amp;gt;&lt;/code&gt; as a placeholder in the query, and URL encode the map of placeholder keys to placeholder values in the request body:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="780757dab3aede4a28ecae15ac826ed1288d8238" translate="yes" xml:space="preserve">
          <source>The API supports submitting queries from a file using a multipart &lt;code&gt;POST&lt;/code&gt; request. The queries in the file must be separated a semicolon (&lt;code&gt;;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ae25eb772896d12b431b697a0db4d2f614084a" translate="yes" xml:space="preserve">
          <source>The AST is passed to the &lt;code&gt;QueryExecutor&lt;/code&gt; which directs queries to the appropriate handlers. For example, queries related to meta data are executed by the meta service and &lt;code&gt;SELECT&lt;/code&gt; statements are executed by the shards themselves.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ae97954f97813c7da6d325ecc0ebe38f551cc3e" translate="yes" xml:space="preserve">
          <source>The Agent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af6ea05c9b1aa32142dcd39165af414535ce7c3b" translate="yes" xml:space="preserve">
          <source>The Auth0 Organization that a user must belong to for access to Chronograf. Organizations are set using an &amp;ldquo;organization&amp;rdquo; key in the user&amp;rsquo;s &amp;ldquo;app_metadata&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aade39f0382466f7ee5f359245c9d5e4d1c943f" translate="yes" xml:space="preserve">
          <source>The Batch and Point Methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22a0753154467423d75824f60aa8b24f9789f483" translate="yes" xml:space="preserve">
          <source>The Cache exposes a few controls for snapshotting behavior. The two most important controls are the memory limits. There is a lower bound, &lt;a href=&quot;../../administration/config/index#cache-snapshot-memory-size-26214400&quot;&gt;&lt;code&gt;cache-snapshot-memory-size&lt;/code&gt;&lt;/a&gt;, which when exceeded will trigger a snapshot to TSM files and remove the corresponding WAL segments. There is also an upper bound, &lt;a href=&quot;../../administration/config/index#cache-max-memory-size-524288000&quot;&gt;&lt;code&gt;cache-max-memory-size&lt;/code&gt;&lt;/a&gt;, which when exceeded will cause the Cache to reject new writes. These configurations are useful to prevent out of memory situations and to apply back pressure to clients writing data faster than the instance can persist it. The checks for memory thresholds occur on every write.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4edb2f8ac08be9d7a7afb3963b7fd419b5e819" translate="yes" xml:space="preserve">
          <source>The Cache is an in-memory copy of all data points current stored in the WAL. The points are organized by the key, which is the measurement, &lt;a href=&quot;../glossary/index#tag-set&quot;&gt;tag set&lt;/a&gt;, and unique &lt;a href=&quot;../glossary/index#field&quot;&gt;field&lt;/a&gt;. Each field is kept as its own time-ordered range. The Cache data is not compressed while in memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13650b59461230b415e869380bd19d1ec3fbb588" translate="yes" xml:space="preserve">
          <source>The Client ID supplied by Auth0 for OAuth 2 support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df6a99435c6430f90cbdf7eb529eab37057963ba" translate="yes" xml:space="preserve">
          <source>The Client Secret supplied by Auth0 for OAuth 2 support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1bad4e0c203ed10e4292e0596ecc282d2a9bf4a" translate="yes" xml:space="preserve">
          <source>The Complete UDF Script</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ce52c23f6142fedca0dbfaf179a4c565eb2e7bc" translate="yes" xml:space="preserve">
          <source>The Cron property is mutually exclusive with the Every property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94dfdb88623c92ea90ae6c289da7172a4457f8d2" translate="yes" xml:space="preserve">
          <source>The Enterprise Web server is primarily an HTTP server with similar load requirements. For most applications it does not need to be very robust. The cluster will function with only one Web server, but for redundancy multiple Web servers can be connected to a single back-end Postgres database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e295aa0332d4f1468b0cf32d527adec57b221dc" translate="yes" xml:space="preserve">
          <source>The Every property is mutually exclusive with the Cron property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37fa715cd843bf737049d4a5e862734d55ba818f" translate="yes" xml:space="preserve">
          <source>The GROUP BY Clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e50d54de32549a3dc8cfa503c21760fb0cf0929" translate="yes" xml:space="preserve">
          <source>The GROUP BY clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="353acd8c2b4a9c306f87d5dea2a17f0fb10a433f" translate="yes" xml:space="preserve">
          <source>The Github Client ID for OAuth 2 support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ede794989c6a596d6826babc1e0b14e3437ef39" translate="yes" xml:space="preserve">
          <source>The Github Client Secret for OAuth 2 support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d97a6b79126f0a6e093a38c2ceec93c3bbda795" translate="yes" xml:space="preserve">
          <source>The Github organization user is required to have an active membership.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10e0c847bc8a042035fb8c6e1233c7a88ae2c375" translate="yes" xml:space="preserve">
          <source>The Goal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be6342071d4a3518b1aff95f752db472696594e" translate="yes" xml:space="preserve">
          <source>The Google Client ID for OAuth 2 support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96f8610a250daedc35b12c96c401a5e2859fb9dc" translate="yes" xml:space="preserve">
          <source>The Google Client Secret for OAuth 2 support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7744d2414544d863e14a94e00957041b42eeff45" translate="yes" xml:space="preserve">
          <source>The Google email domain user is required to have an active membership.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d97b6954bd7155756d7672f6821b7bb2184d6028" translate="yes" xml:space="preserve">
          <source>The Graphite data format translates Telegraf metrics into &lt;em&gt;dot&lt;/em&gt; buckets. A template can be specified for the output of Telegraf metrics into Graphite buckets. The default template is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afd7f4ed171bb687897f35882d908a39831ab311" translate="yes" xml:space="preserve">
          <source>The Graphite data format translates graphite &lt;em&gt;dot&lt;/em&gt; buckets directly into telegraf measurement names, with a single value field, and without any tags. By default, the separator is left as &amp;ldquo;.&amp;rdquo;, but this can be changed using the &amp;ldquo;separator&amp;rdquo; argument. For more advanced options, Telegraf supports specifying &amp;ldquo;templates&amp;rdquo; to translate graphite buckets into Telegraf metrics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5336f6378ae11e8a2d206a6e9fb23a88824ec4dd" translate="yes" xml:space="preserve">
          <source>The HTTP API is the primary means for querying data in InfluxDB (see the &lt;a href=&quot;../../tools/shell/index&quot;&gt;command line interface&lt;/a&gt; and &lt;a href=&quot;../../tools/api_client_libraries/index&quot;&gt;client libraries&lt;/a&gt; for alternative ways to query the database).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dcdd71a6b07f9e290fe644d9866a7000875df8f" translate="yes" xml:space="preserve">
          <source>The HTTP API is the primary means of writing data into InfluxDB, by sending &lt;code&gt;POST&lt;/code&gt; requests to the &lt;code&gt;/write&lt;/code&gt; endpoint. The example below writes a single point to the &lt;code&gt;mydb&lt;/code&gt; database. The data consist of the &lt;a href=&quot;../../concepts/glossary/index#measurement&quot;&gt;measurement&lt;/a&gt;&lt;code&gt;cpu_load_short&lt;/code&gt;, the &lt;a href=&quot;../../concepts/glossary/index#tag-key&quot;&gt;tag keys&lt;/a&gt;&lt;code&gt;host&lt;/code&gt; and &lt;code&gt;region&lt;/code&gt; with the &lt;a href=&quot;../../concepts/glossary/index#tag-value&quot;&gt;tag values&lt;/a&gt;&lt;code&gt;server01&lt;/code&gt; and &lt;code&gt;us-west&lt;/code&gt;, the &lt;a href=&quot;../../concepts/glossary/index#field-key&quot;&gt;field key&lt;/a&gt;&lt;code&gt;value&lt;/code&gt; with a &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field value&lt;/a&gt; of &lt;code&gt;0.64&lt;/code&gt;, and the &lt;a href=&quot;../../concepts/glossary/index#timestamp&quot;&gt;timestamp&lt;/a&gt;&lt;code&gt;1434055562000000000&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="832543af19fb557a6345586d8d2e0bb1fc708894" translate="yes" xml:space="preserve">
          <source>The Handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="153130899b2aa25de31d4cd67cdf11a95093f9aa" translate="yes" xml:space="preserve">
          <source>The Handler Interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f3f896425b57f4e394687e658814f6fa113907d" translate="yes" xml:space="preserve">
          <source>The Header is a magic number to identify the file type and a version number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16a3a82cbe15112f244a94713164298db2ee2a7d" translate="yes" xml:space="preserve">
          <source>The Heroku Client ID for OAuth 2 support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae554dc86c867160c09d399e36c5efe84c261c71" translate="yes" xml:space="preserve">
          <source>The Heroku Organization Memberships a user is required to have for access to Chronograf. Lists are comma-separated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="360cd06c35bf30409f12119c26085b49e461d05a" translate="yes" xml:space="preserve">
          <source>The Heroku Secret for OAuth 2 support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65a4e1dfb8251d86fe0bc1c9858a29a3c846eb56" translate="yes" xml:space="preserve">
          <source>The HipChat room name. Chronograf sends alert messages to this room.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08189ada739ba46f255cf7c55011f0e2b8ce3029" translate="yes" xml:space="preserve">
          <source>The HipChat subdomain name. Identify the subdomain in your HipChat URL; for example, the subdomain in the Hipchat URL &lt;code&gt;https://example-hi.hipchat.com/home&lt;/code&gt; is &lt;code&gt;example-hi&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a712746f253d77b84fd6d0de490aa1d9470bb30" translate="yes" xml:space="preserve">
          <source>The INTO Clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f101b77f7b3f8299b71a89b6f2ec91dd34236ec" translate="yes" xml:space="preserve">
          <source>The INTO clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffe7a0870ddd367d5b4d9ae0993442fb0976a7ec" translate="yes" xml:space="preserve">
          <source>The IP that &lt;code&gt;chronograf&lt;/code&gt; listens on (default: &lt;code&gt;0.0.0.0&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3912b701b38b7f3d16e558c4ed46dc2a28a68e2a" translate="yes" xml:space="preserve">
          <source>The InfluxDB API provides a simple way interact with the database. It uses HTTP response codes, HTTP authentication, JWT Tokens, and basic authentication, and responses are returned in JSON.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e8caadcd8bca0ff207dfe4d84d2b7d6d1b6ab2" translate="yes" xml:space="preserve">
          <source>The InfluxDB HTTP API runs on port &lt;code&gt;8086&lt;/code&gt; by default. Therefore, &lt;code&gt;influx&lt;/code&gt; will connect to port &lt;code&gt;8086&lt;/code&gt; and &lt;code&gt;localhost&lt;/code&gt; by default. If you need to alter these defaults, run &lt;code&gt;influx --help&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3beaeede2489e12a28bb928ec269ee73ed304645" translate="yes" xml:space="preserve">
          <source>The InfluxDB Storage Engine and the Time-Structured Merge Tree (TSM)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97bb867c7850b35d7ad4985c76d7a85324a64a8f" translate="yes" xml:space="preserve">
          <source>The InfluxDB configuration file contains configuration settings specific to a local node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da04e7311f02e3ba49fa99ceb9c5bdb0ef599920" translate="yes" xml:space="preserve">
          <source>The Info Method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97452fc7c5a09db61bd0484b08046439f0f3ffc6" translate="yes" xml:space="preserve">
          <source>The Init Method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9b4aeb0e6f9a4be7eccac63bf2d969fd85fb477" translate="yes" xml:space="preserve">
          <source>The JSON data format flattens JSON into metric &lt;em&gt;fields&lt;/em&gt;. NOTE: Only numerical values are converted to fields, and they are converted into a float. strings are ignored unless specified as a tag_key (see below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e36e3b7a8e7445ea32d4caf37105c604d6a22a" translate="yes" xml:space="preserve">
          <source>The JSON data format serialized Telegraf metrics in json format. The format is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93866955d97a3eecd54de81aa2f404b91dc2f1bc" translate="yes" xml:space="preserve">
          <source>The JSON data format supports specifying &amp;ldquo;tag keys&amp;rdquo;. If specified, keys will be searched for in the root-level of the JSON blob. If the key(s) exist, they will be applied as tags to the Telegraf metrics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4987473c50c3e9afe08a4100e96044169f482dc1" translate="yes" xml:space="preserve">
          <source>The JSON parser can now parse an array of objects using the same configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15912b7e00f3d2f5f4c623737bfff26aff698e28" translate="yes" xml:space="preserve">
          <source>The Kapacitor repository has a number of &lt;a href=&quot;https://github.com/influxdata/kapacitor/tree/master/examples/telegraf&quot;&gt;example TICKscripts&lt;/a&gt;. These scripts use common &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/inputs&quot;&gt;Telegraf plugins&lt;/a&gt; as the data source and show how to build common alerts. Telegraf plugins with example scripts include &amp;ldquo;cpu&amp;rdquo;, &amp;ldquo;disk&amp;rdquo;, &amp;ldquo;mem&amp;rdquo;, and &amp;ldquo;netstat&amp;rdquo; metrics from the &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/inputs/system&quot;&gt;&lt;code&gt;system&lt;/code&gt; plugin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6765cbe560cba1a3084a6aa21cb3e27f86cc46e4" translate="yes" xml:space="preserve">
          <source>The LIMIT Clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfcd754552cfac6738b1acb039410ee087bbcde4" translate="yes" xml:space="preserve">
          <source>The LIMIT and SLIMIT Clauses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ef742ac779d6a80a592be8b1a9eba00034315e0" translate="yes" xml:space="preserve">
          <source>The LIMIT and SLIMIT clauses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27e34a8b84aa89f98641f077285612504cb94024" translate="yes" xml:space="preserve">
          <source>The Line Protocol is a text based format for writing points to InfluxDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52f813d35cc37c0176a94ea1616449ec86f8cb3d" translate="yes" xml:space="preserve">
          <source>The Main method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc330e31af54a8ab7a662df15193d489c0ca63c4" translate="yes" xml:space="preserve">
          <source>The OAuth 2.0 provider&amp;rsquo;s authorization endpoint URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="645819a00d2e55127eeb42966f7c67a28a39a3dc" translate="yes" xml:space="preserve">
          <source>The OAuth 2.0 provider&amp;rsquo;s token endpoint URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2b807d08c3ee5fff6c2da05c7e8819938743fd8" translate="yes" xml:space="preserve">
          <source>The OFFSET and SOFFSET Clauses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9368ccd14d2b9637de2e3a4dfd5c971d4a3aa946" translate="yes" xml:space="preserve">
          <source>The OFFSET clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e516d70ab7e2246fcc4df82bd6488893c54019" translate="yes" xml:space="preserve">
          <source>The Process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="780f120b0b1e6abf36063c6dffa6615631a55c23" translate="yes" xml:space="preserve">
          <source>The Rule Configuration page is where you create and edit your Kapacitor alert rules. Steps one through six walk you through each section of the Rule Configuration page:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc570115179d2dea53c3ae68bc6a936ea97e745a" translate="yes" xml:space="preserve">
          <source>The SELECT Statement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c234c891881b88ae91a9590c49f424f234d8e8b2" translate="yes" xml:space="preserve">
          <source>The SELECT statement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e485b3c0796eab92bdc6f351f7eb331cb762f4d5" translate="yes" xml:space="preserve">
          <source>The SHOW FIELD KEYS query</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dab74be0fe342d91937e8d1909156a7bbd76d5e" translate="yes" xml:space="preserve">
          <source>The SOFFSET clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcb2448f85f301123fb5e4a4ce69f395c71b9206" translate="yes" xml:space="preserve">
          <source>The Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e17cbe621570dce3dd0d11d3ab49ab5e6201b80" translate="yes" xml:space="preserve">
          <source>The Shard &lt;code&gt;writePointsFail&lt;/code&gt; stat has been renamed to &lt;code&gt;writePointsErr&lt;/code&gt; for consistency with other stats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06cd12c15c43c312fe1e34d8f7aa75d244bd89e3" translate="yes" xml:space="preserve">
          <source>The Slack WebHook URL allows you to post messages from Chronograf to Slack. The following steps describe how to create a Slack WebHook URL:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b556d21188f042c21df51419fd764e5f524a98a2" translate="yes" xml:space="preserve">
          <source>The Slack handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5fcbd6c6a8eff1b8ac65f2c877b6ac36931d217" translate="yes" xml:space="preserve">
          <source>The StatsD plugin will also no longer save it&amp;rsquo;s state on a service reload. Essentially we have reverted PR &lt;a href=&quot;https://github.com/influxdata/telegraf/pull/887&quot;&gt;#887&lt;/a&gt;. The reason for this is that saving the state in a global variable is not thread-safe (see &lt;a href=&quot;https://github.com/influxdata/telegraf/issues/1975&quot;&gt;#1975&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://github.com/influxdata/telegraf/issues/2102&quot;&gt;#2102&lt;/a&gt;), and this creates issues if users want to define multiple instances of the statsd plugin. Saving state on reload may be considered in the future, but this would need to be implemented at a higher level and applied to all plugins, not just statsd.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be64271a00b344712c42d8bcf5d6ae93a61f85a0" translate="yes" xml:space="preserve">
          <source>The StatsD plugin will now default all &amp;ldquo;delete_&amp;rdquo; config options to &amp;ldquo;true&amp;rdquo;. This will change te default behavior for users who were not specifying these parameters in their config file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06889edc144aa8afc1260b1b28b6d3a66bce7393" translate="yes" xml:space="preserve">
          <source>The TICKscript</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47265885d3f9e0b72206584c8485fac244270e80" translate="yes" xml:space="preserve">
          <source>The TICKscript below will compute the running mean and compare current values to it. It will then trigger an alert if the values are more than 3 standard deviations away from the mean. Replace the &lt;code&gt;cpu_alert.tick&lt;/code&gt; script with the TICKscript below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef137af75973b25a3b58a7c0f4ae373d97f8a0f" translate="yes" xml:space="preserve">
          <source>The TICKscript language is an invocation chaining language used to define data processing pipelines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc173c72d426a711dbfdef8767c0cbf498e297fa" translate="yes" xml:space="preserve">
          <source>The TICKscript language is an invocation chaining language. Each script has a flat scope and each variable in the scope defines methods that can be called on it. These methods come in two flavors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18e2839ca4c6e54045ce38fd69672956ff8ae260" translate="yes" xml:space="preserve">
          <source>The TSI engine is a significant technical advancement in InfluxDB. It offers a solution to the &lt;a href=&quot;https://docs.influxdata.com/influxdb/v1.2/concepts/storage_engine/&quot;&gt;time-structured merge tree&lt;/a&gt; engine&amp;rsquo;s &lt;a href=&quot;../../troubleshooting/frequently-asked-questions/index#why-does-series-cardinality-matter&quot;&gt;high series cardinality issue&lt;/a&gt;. With TSI, the number of series should be unbounded by the memory on the server hardware and the number of existing series will have a negligible impact on database startup time. See Paul Dix&amp;rsquo;s blogpost &lt;a href=&quot;https://www.influxdata.com/path-1-billion-time-series-influxdb-high-cardinality-indexing-ready-testing/&quot;&gt;Path to 1 Billion Time Series: InfluxDB High Cardinality Indexing Ready for Testing&lt;/a&gt; for additional information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cf0ff513679656837e4b8656cd1c21e841f0b0a" translate="yes" xml:space="preserve">
          <source>The Task</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ec460446b3f467aaea70c2b982af3002f001179" translate="yes" xml:space="preserve">
          <source>The Telegraf agent sends metrics to output plugins in batches, not individually. The batch size controls the size of each write batch that Telegraf sends to the output plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d031f27d2142bb7f86317786722798941ed261a" translate="yes" xml:space="preserve">
          <source>The Telegram API access token. The following section describes how to identify or create the API access token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0efc186208474d2a46e915e28164f9ff29177582" translate="yes" xml:space="preserve">
          <source>The Telegram chat id. The following steps describe how to identify your chat id:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a9a4af408ac22ae4f01cf947cdb47d8f3ad01ac" translate="yes" xml:space="preserve">
          <source>The Time Zone Clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cd216505104b8d480bcbdeae480633cf48060b3" translate="yes" xml:space="preserve">
          <source>The UDF process is started, independently from Kapacitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969f59a3dbb7a4f87b80ecb19c8e46b3cab76fba" translate="yes" xml:space="preserve">
          <source>The URL path prefix under which all &lt;code&gt;chronograf&lt;/code&gt; routes will be mounted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbcb48d4cce8d3c598e2ce43f4b7b3de7b6cc0a3" translate="yes" xml:space="preserve">
          <source>The URL that returns OpenID UserInfo compatible information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d83bd251f695c343b807fed182e22ba0a3e66fa3" translate="yes" xml:space="preserve">
          <source>The URL to which the alert data will be posted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f94a0347133273e9130ba54132f715bb3bdf170" translate="yes" xml:space="preserve">
          <source>The Use Case</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36e2fe4dd76747ea31e15ec53d71f028e78cea62" translate="yes" xml:space="preserve">
          <source>The WAL directory is the location of the &lt;a href=&quot;../../concepts/glossary/index#wal-write-ahead-log&quot;&gt;write ahead log&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fed9c31c5d2ee83494282e324cb66845464c791" translate="yes" xml:space="preserve">
          <source>The WAL is organized as a bunch of files that look like &lt;code&gt;_000001.wal&lt;/code&gt;. The file numbers are monotonically increasing and referred to as WAL segments. When a segment reaches 10MB in size, it is closed and a new one is opened. Each WAL segment stores multiple compressed blocks of writes and deletes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6e84aa9de6bf2975b02446da2f27a75cf41e098" translate="yes" xml:space="preserve">
          <source>The WHERE Clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c92c001304037f565ade28ea43fe7e7bccd0fce5" translate="yes" xml:space="preserve">
          <source>The above TICKscript creates a threshold alert for cpu usage and sends the alerts to the &lt;code&gt;cpu&lt;/code&gt; topic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b51dce8a38f30fb74593ca7b9bf30a059323d32d" translate="yes" xml:space="preserve">
          <source>The above data encodes multiple separate parameters, the &lt;code&gt;plot&lt;/code&gt; and &lt;code&gt;region&lt;/code&gt; into a long tag value (&lt;code&gt;plot-1.north&lt;/code&gt;). Compare this to the following schema represented in line protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b3d6f2bf96942d909dc3252e8a24b04133677d" translate="yes" xml:space="preserve">
          <source>The above example calculates an expression from the field &lt;code&gt;value&lt;/code&gt;, casts it as a string, and names it &lt;code&gt;value_bucket&lt;/code&gt;. The &lt;code&gt;value_bucket&lt;/code&gt; expression is then converted from a field on the point to a tag &lt;code&gt;value_bucket&lt;/code&gt; on the point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ac5a2302b77335cda84c35fd1e18c3090286a19" translate="yes" xml:space="preserve">
          <source>The above example calculates an expression from the field &lt;code&gt;value&lt;/code&gt;, casts it as a string, and names it &lt;code&gt;value_bucket&lt;/code&gt;. The &lt;code&gt;value_bucket&lt;/code&gt; expression is then converted from a field on the point to a tag &lt;code&gt;value_bucket&lt;/code&gt; on the point. The &lt;code&gt;keep&lt;/code&gt; property preserves the original field &lt;code&gt;value&lt;/code&gt;. Tags are always kept since creating a tag implies you want to keep it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="202b605c145147e77ad9f19717d2b97bba6f505b" translate="yes" xml:space="preserve">
          <source>The above example calculates two fields from the value and names them &lt;code&gt;value2&lt;/code&gt; and &lt;code&gt;inv_value2&lt;/code&gt; respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e93534a8ed5490fa7780975efc901c4b67d42ef6" translate="yes" xml:space="preserve">
          <source>The above example computes the requests per second by deployment and host. Then the total_requests per second across all hosts is computed per deployment. Using the mean of the total_requests over the last time period a desired number of replicas is computed based on the target number of request per second per host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44c4dec2e1eebf3ff5eedd253d6925ab0a713a73" translate="yes" xml:space="preserve">
          <source>The above example groups points by their host tag and measurement name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e730d8811efd0cb0004c64594687279a91b5098" translate="yes" xml:space="preserve">
          <source>The above example groups the data along two dimensions &lt;code&gt;service&lt;/code&gt; and &lt;code&gt;datacenter&lt;/code&gt;. Groups are dynamically created as new data arrives and each group is processed independently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8df20311d86c95a31d3c8ca1ba47eb33ea1c3cd7" translate="yes" xml:space="preserve">
          <source>The above example selects all measurements from the database 'mydb' and then each point is grouped by the host tag and measurement name. Thus keeping measurements in their own groups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f31d63d01f9cf6d5ac9f389b35f715bc8b993bed" translate="yes" xml:space="preserve">
          <source>The above example selects data from several measurements matching `/process_.*/ and then each point is grouped by the host tag and measurement name. Thus keeping measurements in their own groups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75e318813968f6e97a1a2ad8974264c31a122c09" translate="yes" xml:space="preserve">
          <source>The above example selects only data points from the database &lt;code&gt;mydb&lt;/code&gt; and retention policy &lt;code&gt;myrp&lt;/code&gt; and measurement &lt;code&gt;mymeasurement&lt;/code&gt; where the tag &lt;code&gt;host&lt;/code&gt; matches the regex &lt;code&gt;logger\d+&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c5f333ff29104b52b35e3bf0b2f9b739c082fbb" translate="yes" xml:space="preserve">
          <source>The above example will add a new field &lt;code&gt;error_percent&lt;/code&gt; to each data point with the result of &lt;code&gt;error_count / total_count&lt;/code&gt; where &lt;code&gt;error_count&lt;/code&gt; and &lt;code&gt;total_count&lt;/code&gt; are existing fields on the data point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33566d115f6384034679c12452e319b8ef87e27c" translate="yes" xml:space="preserve">
          <source>The above example will remove the field &lt;code&gt;value&lt;/code&gt; and the tag &lt;code&gt;host&lt;/code&gt;, from each point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="422592c1390cf9b8aa9a06422f6395ce1f32374c" translate="yes" xml:space="preserve">
          <source>The above example will set the field &lt;code&gt;value&lt;/code&gt; to float64(0) if it does not already exist It will also set the tag &lt;code&gt;host&lt;/code&gt; to string(&quot;&quot;) if it does not already exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1645a0ff7771d60e0ddb8c9fd5ce3ed5ff105393" translate="yes" xml:space="preserve">
          <source>The above expression evaluates to &lt;code&gt;true&lt;/code&gt; if the hour of the day for the data point is 9 AM, using local time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="262232d8e887f20f3d4d152ad1e304271e0b6f6f" translate="yes" xml:space="preserve">
          <source>The above handler definition defines a handler that sends alerts to the slack channel &lt;code&gt;#alerts&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a34d6797fffd6a1f639f2cf74277c1e83bd46e1" translate="yes" xml:space="preserve">
          <source>The above is equivalent to this Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8a460e79354137166ff7629f63473b2ecff20e8" translate="yes" xml:space="preserve">
          <source>The above removes the group by measurement name if any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a66014dd3a436f4536e1007d746e339c4dfb7ee" translate="yes" xml:space="preserve">
          <source>The above usage will only trigger alerts to slack on state changes or at least every 10 minutes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81d56faa6f831330a28ae7a94f463b5926482aea" translate="yes" xml:space="preserve">
          <source>The admin UI is removed and unusable in this release. The &lt;code&gt;[admin]&lt;/code&gt; configuration section will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5ef413179b734fe4e5a2618529306d818d19a94" translate="yes" xml:space="preserve">
          <source>The admin interface is deprecated and will be removed in a subsequent release. The configuration setting to enable the admin UI is now disabled by default, but can be enabled if necessary. We recommend using &lt;a href=&quot;https://github.com/influxdata/chronograf&quot;&gt;Chronograf&lt;/a&gt; or &lt;a href=&quot;https://github.com/grafana/grafana&quot;&gt;Grafana&lt;/a&gt; as a replacement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff761e41815ac9faf4b14a6ee0873e910c2c061" translate="yes" xml:space="preserve">
          <source>The admin user that you created when you enabled authentication, has the following permissions by default:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5f4a54e8d4b33f6cc239ccd3aa6efbebb00029b" translate="yes" xml:space="preserve">
          <source>The administration documentation contains all the information needed to administer a working InfluxDB installation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="588568457a5a70669ea0906b2ca3f595c2e92a7b" translate="yes" xml:space="preserve">
          <source>The advanced syntax requires a &lt;a href=&quot;../data_exploration/index#group-by-time-intervals&quot;&gt;&lt;code&gt;GROUP BY time()&lt;/code&gt; clause&lt;/a&gt; and a nested InfluxQL function. The query first calculates the results for the nested function at the specified &lt;code&gt;GROUP BY time()&lt;/code&gt; interval and then applies the &lt;code&gt;CUMULATIVE_SUM()&lt;/code&gt; function to those results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e65f449d6bdff831e16ffea6943dfeaecea9b15b" translate="yes" xml:space="preserve">
          <source>The advanced syntax requires a &lt;a href=&quot;../data_exploration/index#group-by-time-intervals&quot;&gt;&lt;code&gt;GROUP BY time()&lt;/code&gt; clause&lt;/a&gt; and a nested InfluxQL function. The query first calculates the results for the nested function at the specified &lt;code&gt;GROUP BY time()&lt;/code&gt; interval and then applies the &lt;code&gt;DERIVATIVE()&lt;/code&gt; function to those results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="677146e4cc5d184de38aca6e8eaa0a08451781d2" translate="yes" xml:space="preserve">
          <source>The advanced syntax requires a &lt;a href=&quot;../data_exploration/index#group-by-time-intervals&quot;&gt;&lt;code&gt;GROUP BY time()&lt;/code&gt; clause&lt;/a&gt; and a nested InfluxQL function. The query first calculates the results for the nested function at the specified &lt;code&gt;GROUP BY time()&lt;/code&gt; interval and then applies the &lt;code&gt;DIFFERENCE()&lt;/code&gt; function to those results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="207c593b0ed3eefc56448ff9ac174498005d8b57" translate="yes" xml:space="preserve">
          <source>The advanced syntax requires a &lt;a href=&quot;../data_exploration/index#group-by-time-intervals&quot;&gt;&lt;code&gt;GROUP BY time()&lt;/code&gt; clause&lt;/a&gt; and a nested InfluxQL function. The query first calculates the results for the nested function at the specified &lt;code&gt;GROUP BY time()&lt;/code&gt; interval and then applies the &lt;code&gt;MOVING_AVERAGE()&lt;/code&gt; function to those results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e238ee256654e346162eca66b154618a15eca06c" translate="yes" xml:space="preserve">
          <source>The advanced syntax requires a &lt;a href=&quot;../data_exploration/index#group-by-time-intervals&quot;&gt;&lt;code&gt;GROUP BY time()&lt;/code&gt; clause&lt;/a&gt; and a nested InfluxQL function. The query first calculates the results for the nested function at the specified &lt;code&gt;GROUP BY time()&lt;/code&gt; interval and then applies the &lt;code&gt;NON_NEGATIVE_DERIVATIVE()&lt;/code&gt; function to those results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ea45ad86d126603777c006e14bcfd97498e9002" translate="yes" xml:space="preserve">
          <source>The advanced syntax requires a &lt;a href=&quot;../data_exploration/index#group-by-time-intervals&quot;&gt;&lt;code&gt;GROUP BY time()&lt;/code&gt; clause&lt;/a&gt; and a nested InfluxQL function. The query first calculates the results for the nested function at the specified &lt;code&gt;GROUP BY time()&lt;/code&gt; interval and then applies the &lt;code&gt;NON_NEGATIVE_DIFFERENCE()&lt;/code&gt; function to those results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c28fd4bd40de8e337fc82f5fe75078b7343a1fa" translate="yes" xml:space="preserve">
          <source>The alert level of the alert event, one of &amp;lsquo;0&amp;rsquo;, &amp;lsquo;1&amp;rsquo;, &amp;lsquo;2&amp;rsquo;, or &amp;lsquo;3&amp;rsquo; corresponding to &amp;lsquo;OK&amp;rsquo;, &amp;lsquo;INFO&amp;rsquo;, &amp;lsquo;WARNING&amp;rsquo;, and &amp;lsquo;CRITICAL&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f1869971a8d2ace7632282fdd76977cf3717b0c" translate="yes" xml:space="preserve">
          <source>The alert message is the text that accompanies an alert. In this example, the alert message is &lt;code&gt;Your idle CPU usage is {{.Level}} at {{ index .Fields &quot;value&quot; }}. 😸&lt;/code&gt;. &lt;code&gt;{{.Level}}&lt;/code&gt; is a template that evaluates to &lt;code&gt;CRITICAL&lt;/code&gt; when the &lt;code&gt;usage_idle&lt;/code&gt; data initially dip below 80% and &lt;code&gt;OK&lt;/code&gt; when the &lt;code&gt;usage_idle&lt;/code&gt; data first return to 80% or above. The &lt;code&gt;{{ index .Fields &quot;value&quot; }}&lt;/code&gt; template prints the relevant &lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#field-value&quot;&gt;field value&lt;/a&gt; that triggered the alert.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="060165fe61ecd474d2efd65101d7b51f43a482de" translate="yes" xml:space="preserve">
          <source>The amount of time that a write waits before fsyncing. Use a duration greater than &lt;code&gt;0&lt;/code&gt; to batch up multiple fsync calls. This is useful for slower disks or when experiencing &lt;a href=&quot;../../concepts/glossary/index#wal-write-ahead-log&quot;&gt;WAL&lt;/a&gt; write contention. A value of &lt;code&gt;0s&lt;/code&gt; fsyncs every write to the WAL. We recommend values in the range of &lt;code&gt;0ms&lt;/code&gt;-&lt;code&gt;100ms&lt;/code&gt; for non-SSD disks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="109d52514d7fc2ade80886e464edca5c48300cbf" translate="yes" xml:space="preserve">
          <source>The attribute of the retention policy that determines how long InfluxDB stores data. Data older than the duration are automatically dropped from the database. See &lt;a href=&quot;../../query_language/database_management/index#create-retention-policies-with-create-retention-policy&quot;&gt;Database Management&lt;/a&gt; for how to set duration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f88792e5b78fe440ce0954bdaf348f6820bd550f" translate="yes" xml:space="preserve">
          <source>The attribute of the retention policy that determines how many copies of the data are stored in the cluster. InfluxDB replicates data across &lt;code&gt;N&lt;/code&gt; data nodes, where &lt;code&gt;N&lt;/code&gt; is the replication factor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0141b8fb79a7735c901f1b34b33df97f2e992bd" translate="yes" xml:space="preserve">
          <source>The basic CQ runs a single query that covers the time range between &lt;code&gt;now()&lt;/code&gt; and &lt;code&gt;now()&lt;/code&gt; minus the &lt;code&gt;GROUP BY time()&lt;/code&gt; interval. See the &lt;a href=&quot;#advanced-syntax&quot;&gt;advanced syntax&lt;/a&gt; for how to configure the query&amp;rsquo;s time range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684eadc3451027e6aa647a2ea09b7c36d023129b" translate="yes" xml:space="preserve">
          <source>The basic SELECT statement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="088d8ee3755a0ea1d1ba55b1af22b88b47943f36" translate="yes" xml:space="preserve">
          <source>The basic syntax supports &lt;code&gt;GROUP BY&lt;/code&gt; clauses that &lt;a href=&quot;../data_exploration/index#group-by-tags&quot;&gt;group by tags&lt;/a&gt; but not &lt;code&gt;GROUP BY&lt;/code&gt; clauses that &lt;a href=&quot;../data_exploration/index#group-by-time-intervals&quot;&gt;group by time&lt;/a&gt;. See the &lt;a href=&quot;#advanced-syntax&quot;&gt;Advanced Syntax&lt;/a&gt; section for how to use &lt;code&gt;CUMULATIVE_SUM()&lt;/code&gt; with a &lt;code&gt;GROUP BY time()&lt;/code&gt; clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1c2d59575f50cd90480fd7fafcf36e72599c4e7" translate="yes" xml:space="preserve">
          <source>The basic syntax supports &lt;code&gt;GROUP BY&lt;/code&gt; clauses that &lt;a href=&quot;../data_exploration/index#group-by-tags&quot;&gt;group by tags&lt;/a&gt; but not &lt;code&gt;GROUP BY&lt;/code&gt; clauses that &lt;a href=&quot;../data_exploration/index#group-by-time-intervals&quot;&gt;group by time&lt;/a&gt;. See the &lt;a href=&quot;#advanced-syntax-1&quot;&gt;Advanced Syntax&lt;/a&gt; section for how to use &lt;code&gt;DERIVATIVE()&lt;/code&gt; with a &lt;code&gt;GROUP BY time()&lt;/code&gt; clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdee5f6202d6d5aeed20fdb033f7f69d2ab88eaa" translate="yes" xml:space="preserve">
          <source>The basic syntax supports &lt;code&gt;GROUP BY&lt;/code&gt; clauses that &lt;a href=&quot;../data_exploration/index#group-by-tags&quot;&gt;group by tags&lt;/a&gt; but not &lt;code&gt;GROUP BY&lt;/code&gt; clauses that &lt;a href=&quot;../data_exploration/index#group-by-time-intervals&quot;&gt;group by time&lt;/a&gt;. See the &lt;a href=&quot;#advanced-syntax-2&quot;&gt;Advanced Syntax&lt;/a&gt; section for how to use &lt;code&gt;DIFFERENCE()&lt;/code&gt; with a &lt;code&gt;GROUP BY time()&lt;/code&gt; clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53d6938a3980a6401bda2e60283c2a76f38944c3" translate="yes" xml:space="preserve">
          <source>The basic syntax supports &lt;code&gt;GROUP BY&lt;/code&gt; clauses that &lt;a href=&quot;../data_exploration/index#group-by-tags&quot;&gt;group by tags&lt;/a&gt; but not &lt;code&gt;GROUP BY&lt;/code&gt; clauses that &lt;a href=&quot;../data_exploration/index#group-by-time-intervals&quot;&gt;group by time&lt;/a&gt;. See the &lt;a href=&quot;#advanced-syntax-3&quot;&gt;Advanced Syntax&lt;/a&gt; section for how to use &lt;code&gt;MOVING_AVERAGE()&lt;/code&gt; with a &lt;code&gt;GROUP BY time()&lt;/code&gt; clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89bfb3b0d39d9814808b6ebbb6e9effba8ae5b5b" translate="yes" xml:space="preserve">
          <source>The basic syntax supports &lt;code&gt;GROUP BY&lt;/code&gt; clauses that &lt;a href=&quot;../data_exploration/index#group-by-tags&quot;&gt;group by tags&lt;/a&gt; but not &lt;code&gt;GROUP BY&lt;/code&gt; clauses that &lt;a href=&quot;../data_exploration/index#group-by-time-intervals&quot;&gt;group by time&lt;/a&gt;. See the &lt;a href=&quot;#advanced-syntax-4&quot;&gt;Advanced Syntax&lt;/a&gt; section for how to use &lt;code&gt;NON_NEGATIVE_DERIVATIVE()&lt;/code&gt; with a &lt;code&gt;GROUP BY time()&lt;/code&gt; clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16e8f40b836e4b92f09f69f23393652511ca7766" translate="yes" xml:space="preserve">
          <source>The basic syntax supports &lt;code&gt;GROUP BY&lt;/code&gt; clauses that &lt;a href=&quot;../data_exploration/index#group-by-tags&quot;&gt;group by tags&lt;/a&gt; but not &lt;code&gt;GROUP BY&lt;/code&gt; clauses that &lt;a href=&quot;../data_exploration/index#group-by-time-intervals&quot;&gt;group by time&lt;/a&gt;. See the &lt;a href=&quot;#advanced-syntax-5&quot;&gt;Advanced Syntax&lt;/a&gt; section for how to use &lt;code&gt;NON_NEGATIVE_DIFFERENCE()&lt;/code&gt; with a &lt;code&gt;GROUP BY time()&lt;/code&gt; clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ee8f67f35d429cc46d6027807f62eca0f2eab1d" translate="yes" xml:space="preserve">
          <source>The batch recording can be replayed in the same way:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6afe01f42a4498a094cb434e897bbcd79a17f1dd" translate="yes" xml:space="preserve">
          <source>The biggest win for us was that BoltDB used a single file as the database. At this point our most common source of bug reports were from people running out of file handles. Bolt solved the hot backup problem and the file limit problems all at the same time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31a257574c9c25f4914f234d153af0a2a8fa5116" translate="yes" xml:space="preserve">
          <source>The bind address to use for the RPC service for &lt;a href=&quot;../backup_and_restore/index&quot;&gt;backup and restore&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b26ab98ac47a84db200d850fd53398fac704ac07" translate="yes" xml:space="preserve">
          <source>The blue line shows the results of the query:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3b46982ed288be79fd866a6ddcedd426ce292b0" translate="yes" xml:space="preserve">
          <source>The body of the POST - we call this the &lt;a href=&quot;../../concepts/glossary/index#line-protocol&quot;&gt;Line Protocol&lt;/a&gt; - contains the time-series data that you wish to store. They consist of a measurement, tags, fields, and a timestamp. InfluxDB requires a measurement name. Strictly speaking, tags are optional but most series include tags to differentiate data sources and to make querying both easy and efficient. Both tag keys and tag values are strings. Field keys are required and are always strings, and, &lt;a href=&quot;../../write_protocols/line_protocol_reference/index#data-types&quot;&gt;by default&lt;/a&gt;, field values are floats. The timestamp - supplied at the end of the line in Unix time in nanoseconds since January 1, 1970 UTC - is optional. If you do not specify a timestamp InfluxDB uses the server&amp;rsquo;s local nanosecond timestamp in Unix epoch. Anything that has to do with time in InfluxDB is always UTC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0215f8ac5eb2cb95092e89d3a3beb1e14c45b92b" translate="yes" xml:space="preserve">
          <source>The cache maximum memory size is the maximum size (in bytes) a shard&amp;rsquo;s cache can reach before it starts rejecting writes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6273362a0d5ac5b0bec14da429ba28b6141de8e" translate="yes" xml:space="preserve">
          <source>The cache snapshot memory size is the size at which the engine will snapshot the cache and write it to a TSM file, freeing up memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5af669c3438bfd962bd9947414a34e242b463a4c" translate="yes" xml:space="preserve">
          <source>The cache snapshot write cold duration is the length of time at which the engine will snapshot the cache and write it to a new TSM file if the shard hasn&amp;rsquo;t received writes or deletes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e742cd563eb2e01dcd3464bda29fa76c819877d" translate="yes" xml:space="preserve">
          <source>The cached data is available at the given endpoint. The endpoint is the relative path from the API endpoint of the running task. For example if the task endpoint is at &lt;code&gt;/kapacitor/v1/tasks/&amp;amp;lt;task_id&amp;amp;gt;&lt;/code&gt; and endpoint is &lt;code&gt;top10&lt;/code&gt;, then the data can be requested from &lt;code&gt;/kapacitor/v1/tasks/&amp;amp;lt;task_id&amp;amp;gt;/top10&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f66885c9d551016777174ee9de2e4deb1263c1a7" translate="yes" xml:space="preserve">
          <source>The closed source Chronograf product is deprecated and is no longer supported or developed. There is no path for upgrading to the all-new open source product. Users can continue to use the deprecated product; the documentation is available under the &lt;code&gt;Deprecated&lt;/code&gt; header in the sidebar. For more information, please read the original &lt;a href=&quot;https://www.influxdata.com/announcing-the-new-chronograf-a-ui-for-the-tick-stack-and-a-complete-open-source-monitoring-solution/&quot;&gt;announcement blog&lt;/a&gt; by our CTO, Paul Dix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f64f7930e24eefc7996be61e8b4752db3258e8e0" translate="yes" xml:space="preserve">
          <source>The code mirrors these requirements with two Go packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="798135e068f3d9ee7e0f445919b393ec49ab8536" translate="yes" xml:space="preserve">
          <source>The collectd format parses the collectd binary network protocol. Tags are created for host, instance, type, and type instance. All collectd values are added as float64 fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c3c2c5449215573fd4b19d83a68ee2c2615444d" translate="yes" xml:space="preserve">
          <source>The collectd service supports either scanning a directory for multiple types db files, or specifying a single db file. A sample &lt;code&gt;types.db&lt;/code&gt; file can be found &lt;a href=&quot;https://github.com/collectd/collectd/blob/master/src/types.db&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b9af13e3c0ad882b16f67d5f46fb18945e14df" translate="yes" xml:space="preserve">
          <source>The collection of data in InfluxDB&amp;rsquo;s data structure that share a measurement, tag set, and retention policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e4f86ba785df257e7701ff439f45d602b8aeb45" translate="yes" xml:space="preserve">
          <source>The collection of field keys and field values on a point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f6f9a8975a12c47abab7344e4fcef188d1004a3" translate="yes" xml:space="preserve">
          <source>The collection of tag keys and tag values on a point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f666f38f3702fc216a4270e1c822bb857012006f" translate="yes" xml:space="preserve">
          <source>The command line is now ready to take input in the form of the Influx Query Language (a.k.a InfluxQL) statements. To exit the InfluxQL shell, type &lt;code&gt;exit&lt;/code&gt; and hit return.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf36d4bf76cf15f8e81020fd401a488dca84f20d" translate="yes" xml:space="preserve">
          <source>The compact full write cold duration is the duration at which the engine will compact all TSM files in a shard if it hasn&amp;rsquo;t received a write or delete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb7be9ba5229ce08bbdb112dbcbcb645c396771" translate="yes" xml:space="preserve">
          <source>The comparison operator for equality is &lt;code&gt;==&lt;/code&gt; not &lt;code&gt;=&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b51634d8918d089077d85b136405f79ecfe927d" translate="yes" xml:space="preserve">
          <source>The configuration file is located at &lt;code&gt;/usr/local/etc/influxd.conf&lt;/code&gt; with examples in &lt;code&gt;/usr/local/etc/influxd.conf.sample&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c566106ea3e1b2fe78a82126e50a59e89c4d553c" translate="yes" xml:space="preserve">
          <source>The configuration file is located at &lt;code&gt;/usr/local/etc/telegraf.conf&lt;/code&gt; with examples in &lt;code&gt;/usr/local/etc/telegraf.conf.sample&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74f989a2767535cf4af6bcd9e053b5fe09875a34" translate="yes" xml:space="preserve">
          <source>The configuration is a &lt;a href=&quot;https://github.com/toml-lang/toml&quot;&gt;toml&lt;/a&gt; file and is very similar to the InfluxDB configuration. That is because any input that you can configure for InfluxDB also works for Kapacitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="125f2fe512ba189907995715b060f9c33479e347" translate="yes" xml:space="preserve">
          <source>The connection details form requires additional information when connecting Chronograf to an &lt;a href=&quot;https://docs.influxdata.com/enterprise_influxdb/v1.2/&quot;&gt;InfluxEnterprise cluster&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4caa978f536868ba3795ff66fe7a693c502b22d" translate="yes" xml:space="preserve">
          <source>The content of the script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c75089d1fc568b2c0b3e7c6027d6a1d9d0344793" translate="yes" xml:space="preserve">
          <source>The cq_query</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2aadf4be2784e988c5df8c619762da6b24a782c" translate="yes" xml:space="preserve">
          <source>The currently available internal statistics:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18eb42eed3a2b24ce855f6f00f4120c77d04a0c1" translate="yes" xml:space="preserve">
          <source>The data in &lt;code&gt;orders&lt;/code&gt; are the raw, ten-second resolution data that reside in the two-hour RP. The data in &lt;code&gt;downsampled_orders&lt;/code&gt; are the aggregated, 30-minute resolution data that are subject to the 52-week RP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5af23e1d558b27fcef0f26b7c34fd902e3ebb3b8" translate="yes" xml:space="preserve">
          <source>The data in the &lt;code&gt;h2o_feet&lt;/code&gt;&lt;a href=&quot;../../concepts/glossary/index#measurement&quot;&gt;measurement&lt;/a&gt; occur at six-minute time intervals. The measurement has one &lt;a href=&quot;../../concepts/glossary/index#tag-key&quot;&gt;tag key&lt;/a&gt; (&lt;code&gt;location&lt;/code&gt;) which has two &lt;a href=&quot;../../concepts/glossary/index#tag-value&quot;&gt;tag values&lt;/a&gt;: &lt;code&gt;coyote_creek&lt;/code&gt; and &lt;code&gt;santa_monica&lt;/code&gt;. The measurement also has two &lt;a href=&quot;../../concepts/glossary/index#field&quot;&gt;fields&lt;/a&gt;: &lt;code&gt;level description&lt;/code&gt; stores string &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field values&lt;/a&gt; and &lt;code&gt;water_level&lt;/code&gt; stores float field values. All of these data are in the &lt;code&gt;NOAA_water_database&lt;/code&gt;&lt;a href=&quot;../../concepts/glossary/index#database&quot;&gt;database&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5163c283c8eb7a459c9d83e7dd9644ab64b4222" translate="yes" xml:space="preserve">
          <source>The data is joined by time, meaning that as pairs of batches arrive from each source they will be combined into a single batch. As a result the fields from each source need to be renamed to properly namespace the fields. This is done via the &lt;code&gt;.as('errors', 'views')&lt;/code&gt; line. In this example each measurement has only one field named &lt;code&gt;sum&lt;/code&gt;, the joined fields will be called &lt;code&gt;errors.sum&lt;/code&gt; and &lt;code&gt;views.sum&lt;/code&gt; respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32dfd7de79a189852dd4396c944be055828fd2b5" translate="yes" xml:space="preserve">
          <source>The data used in this document are available for download on the &lt;a href=&quot;../data_download/index&quot;&gt;Sample Data&lt;/a&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de7234213781f51e6b2b691a9252e2b69131507c" translate="yes" xml:space="preserve">
          <source>The database has now been successfully restored!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8529f51b3d1ad99b239399c89863b565aa73200b" translate="yes" xml:space="preserve">
          <source>The database name. If empty any database will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff5ecd1d2534f360faaf332db133399e2045ec61" translate="yes" xml:space="preserve">
          <source>The date and time associated with a point. All time in InfluxDB is UTC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d28a199d72d7720228435dece6e9f098b0925240" translate="yes" xml:space="preserve">
          <source>The date and time literal format is not specified in EBNF like the rest of this document. It is specified using Go&amp;rsquo;s date / time parsing format, which is a reference date written in the format required by InfluxQL. The reference date time is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f89f589fcb72294a2ca5e56231fc522d1d786b4e" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;url&lt;/code&gt; setting (&lt;code&gt;https://api.telegram.org/bot&lt;/code&gt;) requires no additional configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bddc1ae967b8fcbfbd4e91501b94c2a2c7e183cd" translate="yes" xml:space="preserve">
          <source>The default format is &lt;code&gt;column&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2fbc6c1ad6e442ab4a35f05b761c69fabf4a837" translate="yes" xml:space="preserve">
          <source>The default global interval for collecting data from each input plugin. The collection interval can be overridden by each individual input plugin&amp;rsquo;s configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="789e11b55b3cdc7b9f2093b081982cfc613d4cb6" translate="yes" xml:space="preserve">
          <source>The default location for the log output file is &lt;code&gt;/var/log/influxdb/influxdb.log&lt;/code&gt;. However on systems that use systemd (most modern Linux distributions) those logs are output to &lt;code&gt;journalctl&lt;/code&gt;. You should be able to view the InfluxDB logs using the following command: &lt;code&gt;journalctl -u influxdb&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97c0ea6b6d57d495342e41b9befa56f049612021" translate="yes" xml:space="preserve">
          <source>The default port that runs the Collectd service. &lt;a href=&quot;../config/index#bind-address-25826&quot;&gt;Enable and configure this port&lt;/a&gt; in the configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae34b23b51a10b144de65ee45c9a798ae27406c5" translate="yes" xml:space="preserve">
          <source>The default port that runs the Graphite service. &lt;a href=&quot;../config/index#bind-address-2003&quot;&gt;Enable and configure this port&lt;/a&gt; in the configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc221f6f1def886afac1f46aece4468e67149700" translate="yes" xml:space="preserve">
          <source>The default port that runs the InfluxDB HTTP service. &lt;a href=&quot;../config/index#bind-address-8086&quot;&gt;Configure this port&lt;/a&gt; in the configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36459b33bc3a61fd957f4fc13c43e9067d1cb1a5" translate="yes" xml:space="preserve">
          <source>The default port that runs the OpenTSDB service. &lt;a href=&quot;../config/index#bind-address-4242&quot;&gt;Enable and configure this port&lt;/a&gt; in the configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99f904cccc0883ac8462fc19b5d3295d6c61d963" translate="yes" xml:space="preserve">
          <source>The default port that runs the RPC service for backup and restore. &lt;a href=&quot;../config/index#bind-address-8088&quot;&gt;Configure this port&lt;/a&gt; in the configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16eca225ecd08c6463d76afb6ff6b74fe1bee555" translate="yes" xml:space="preserve">
          <source>The default port that runs the UDP service. &lt;a href=&quot;../config/index#bind-address-8089&quot;&gt;Enable and configure this port&lt;/a&gt; in the configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bded2ca08ad3855bb26527970264ecadc7a4151d" translate="yes" xml:space="preserve">
          <source>The default port.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f40044e8871d892b95bf7ab7b2d674acde5d0b7" translate="yes" xml:space="preserve">
          <source>The delimiter between field name parts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39725f1b968d07ca768517a646cc0611d9249a5f" translate="yes" xml:space="preserve">
          <source>The delimiter between the As names and existing field an tag keys. Can be the empty string, but you are responsible for ensuring conflicts are not possible if you use the empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1c0d99f341e39cab95ad122363f44c21429cf9c" translate="yes" xml:space="preserve">
          <source>The delimiter for the field name prefixes. Can be the empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="159908f3362b044f4698fc256aee1fe37a47c5d3" translate="yes" xml:space="preserve">
          <source>The derivative is computed for each point, and because of boundary conditions the first point is dropped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4725310ffb98c8e56b07c67452aceb0054884727" translate="yes" xml:space="preserve">
          <source>The destination database for recorded statistics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fbdc77fe3ffdc58788ee820f28c6443dcd188cf" translate="yes" xml:space="preserve">
          <source>The diagram above outlines the infrastructure for discovering and scraping data with Kapacitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ecf868d27774e3ba78332dfd29e53b669689d92" translate="yes" xml:space="preserve">
          <source>The directory where InfluxDB stores the data. This directory may be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="967987a96ea948bc821c8d8ee4a694595bfa60cd" translate="yes" xml:space="preserve">
          <source>The directory will be created if it doesn&amp;rsquo;t already exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ea4b337010f2477e7838ca6d9ff67f4dc1941f" translate="yes" xml:space="preserve">
          <source>The duration uses the Go (golang) &lt;a href=&quot;https://golang.org/pkg/time/#ParseDuration&quot;&gt;time duration format&lt;/a&gt;, so the largest time unit is &lt;code&gt;h&lt;/code&gt; (hours). So to change it to 45 days, use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b2e9a13ad967907b1365159eb398a9f2022e0b0" translate="yes" xml:space="preserve">
          <source>The email domain users&amp;rsquo; email address to have. Example: &lt;code&gt;example.com&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a267ee09df922b55bc856afb7527b5f08ea0df09" translate="yes" xml:space="preserve">
          <source>The end of the time range. The date-time string must be &lt;a href=&quot;../../query_language/data_exploration/index#absolute-time&quot;&gt;RFC3339 format&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f509b41fbefd4d9f2b01130f8372690ba67beba4" translate="yes" xml:space="preserve">
          <source>The endpoint address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39a6bd1aa9100ea47a401a388c72f93d812da57a" translate="yes" xml:space="preserve">
          <source>The equivalent command line switches are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="132cdf2d70f691ecc7c8092066ea680d34192761" translate="yes" xml:space="preserve">
          <source>The event handler configurations appear on Chronograf&amp;rsquo;s Configure Kapacitor page. You must have a connected Kapacitor instance to access the configurations. See the Getting Started guide for &lt;a href=&quot;../../introduction/getting-started/index#kapacitor-setup&quot;&gt;Kapacitor installation instructions&lt;/a&gt; and how to &lt;a href=&quot;../../introduction/getting-started/index#4-connect-chronograf-to-kapacitor&quot;&gt;connect a Kapacitor instance&lt;/a&gt; to Chronograf.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd44cbe440207b9f9c0ccd0344fb98c8f700754a" translate="yes" xml:space="preserve">
          <source>The example above is equivalent to the example below, which is obviously not what was intended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08dcdc7a2b95796f988cfcafe1e418086a7d59c8" translate="yes" xml:space="preserve">
          <source>The example below will create two different streams each selecting a different subset of the original stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38fb133163064bc76db1e6560b7fb011f984e1cb" translate="yes" xml:space="preserve">
          <source>The examples below use the following sample data in the &lt;code&gt;transportation&lt;/code&gt; database. The measurement &lt;code&gt;bus_data&lt;/code&gt; stores 15-minute resolution data on the number of bus &lt;code&gt;passengers&lt;/code&gt; and &lt;code&gt;complaints&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bde10c25ad873c78c63e75ad1af8c42f05807b8" translate="yes" xml:space="preserve">
          <source>The examples below use the following sample data in the &lt;code&gt;transportation&lt;/code&gt; database. The measurement &lt;code&gt;bus_data&lt;/code&gt; stores 15-minute resolution data on the number of bus &lt;code&gt;passengers&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="336404abcc88d468350261f11c081d467582da6e" translate="yes" xml:space="preserve">
          <source>The examples below use the following subsample of the sample data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="077e6c4744121eb22a618f8563ecbf9fd612dadc" translate="yes" xml:space="preserve">
          <source>The examples in the sections below use InfluxDB&amp;rsquo;s &lt;a href=&quot;../../introduction/getting_started/index&quot;&gt;Command Line Interface (CLI)&lt;/a&gt;. You can also execute the commands using the HTTP API; simply send a &lt;code&gt;GET&lt;/code&gt; request to the &lt;code&gt;/query&lt;/code&gt; endpoint and include the command in the URL parameter &lt;code&gt;q&lt;/code&gt;. See the &lt;a href=&quot;../../guides/querying_data/index&quot;&gt;Querying Data&lt;/a&gt; guide for more on using the HTTP API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2ce2f807b68e9ede5734a185a45def7c7778edf" translate="yes" xml:space="preserve">
          <source>The field key can also be derived from all remaining elements of the graphite bucket by specifying &lt;code&gt;field*&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ad37864d3cba5835b1091e386f3689ac394f9e8" translate="yes" xml:space="preserve">
          <source>The field keyword tells Telegraf to give the metric that field name. So the following template:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77e3b3b65f47ba8cfd48bf977f3b9b1d4ad3cf74" translate="yes" xml:space="preserve">
          <source>The field to operate on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dd9b2a1c7421d565aae8aca9457cd4e876defe9" translate="yes" xml:space="preserve">
          <source>The file path to PEM encoded public key certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c9a8337e1ff9866e1285786653ee520bc509676" translate="yes" xml:space="preserve">
          <source>The file path to private key associated with given certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="979a424724b27b19e51af7d62c216c4ab36268b1" translate="yes" xml:space="preserve">
          <source>The file path to the boltDB file (default: &lt;code&gt;/var/lib/chronograf/chronograf-v1-.db&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bb59b9ce6eb35d83d5e73420627671cddf05709" translate="yes" xml:space="preserve">
          <source>The final common explanation involves &lt;a href=&quot;../../concepts/glossary/index#schema&quot;&gt;schemas&lt;/a&gt; with &lt;a href=&quot;../../concepts/glossary/index#field&quot;&gt;fields&lt;/a&gt; and &lt;a href=&quot;../../concepts/glossary/index#tag&quot;&gt;tags&lt;/a&gt; that have the same key. If a field and tag have the same key, the field will take precedence in all queries. You&amp;rsquo;ll need to use the &lt;a href=&quot;../../query_language/data_exploration/index#description-of-syntax&quot;&gt;&lt;code&gt;::tag&lt;/code&gt; syntax&lt;/a&gt; to specify the tag key in queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5580db85b2f8befbe47f86f90aed71b4a15bb641" translate="yes" xml:space="preserve">
          <source>The final section, &lt;a href=&quot;#writing-data-to-influxdb&quot;&gt;Writing data to InfluxDB&lt;/a&gt;, describes how to get data into InfluxDB and how InfluxDB handles Line Protocol duplicates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfb9236e4ec4bceafe9fd86001c48282b4588ad5" translate="yes" xml:space="preserve">
          <source>The final step in the installation process is to connect Chronograf to Kapacitor. Navigate to the Configuration page (the last item in the sidebar) and click &lt;code&gt;Add Config&lt;/code&gt; in the &lt;code&gt;Active Kapacitor&lt;/code&gt; column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="857d0daedc1034e1db4779ddf8677757fbe0a6e3" translate="yes" xml:space="preserve">
          <source>The first alert message indicates that your idle CPU usage was &lt;code&gt;CRITICAL&lt;/code&gt;, that is, it dipped below &lt;code&gt;80%&lt;/code&gt;. The specific &lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#field-value&quot;&gt;field value&lt;/a&gt; that triggered the alert is &lt;code&gt;69.59999999998138&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad2a7ba388510e051cd4ef2b11a8ce653685a52e" translate="yes" xml:space="preserve">
          <source>The first and most common explanation involves &lt;a href=&quot;../../concepts/glossary/index#retention-policy-rp&quot;&gt;retention policies&lt;/a&gt; (RP). InfluxDB automatically queries data in a database&amp;rsquo;s &lt;code&gt;DEFAULT&lt;/code&gt; RP. If your data are stored in an RP other than the &lt;code&gt;DEFAULT&lt;/code&gt; RP, InfluxDB won&amp;rsquo;t return any results unless you &lt;a href=&quot;../../query_language/data_exploration/index#example-7-select-all-data-from-a-fully-qualified-measurement&quot;&gt;specify&lt;/a&gt; the alternative RP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc100af438a204fcdcb645052a2fb349ab79786c" translate="yes" xml:space="preserve">
          <source>The first and most likely cause is that, by default, InfluxDB checks to enforce an RP every 30 minutes. You may need to wait for the next RP check for InfluxDB to drop data that are outside the RP&amp;rsquo;s new &lt;code&gt;DURATION&lt;/code&gt; setting. The 30 minute interval is &lt;a href=&quot;../../administration/config/index#check-interval-30m0s&quot;&gt;configurable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24d3a64960d9599ee4c1818ddb9264616945cf71" translate="yes" xml:space="preserve">
          <source>The first and most obvious problem is one of scale. In DevOps, IoT, or APM it is easy to collect hundreds of millions or billions of unique data points every day.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c35d02f3f60b2c29f299da5e03aa03fe813e80b" translate="yes" xml:space="preserve">
          <source>The first difference is that your new node will want to use the &lt;code&gt;pipeline.chainnode&lt;/code&gt; implementation of the &lt;code&gt;pipeline.Node&lt;/code&gt; interface in the &lt;code&gt;pipeline&lt;/code&gt; package if it can send data on to child nodes. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa250e0a695e055348ba1b81d774679f9a96aea" translate="yes" xml:space="preserve">
          <source>The first part has information about the state of the task and any error it may have encounted. The &lt;code&gt;TICKscript&lt;/code&gt; section displays the version of the TICKscript that Kapacitor has stored in its local db.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d2171674e6092b2bb062a2fc315404632ad1d17" translate="yes" xml:space="preserve">
          <source>The first point has no &lt;a href=&quot;../../concepts/glossary/index#tag-value&quot;&gt;tag values&lt;/a&gt; for the &lt;code&gt;mytag1&lt;/code&gt; and &lt;code&gt;mytag2&lt;/code&gt;&lt;a href=&quot;../../concepts/glossary/index#tag-key&quot;&gt;tag keys&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68f2689d91cf19ccce1d6a9374c209cc70105309" translate="yes" xml:space="preserve">
          <source>The first preset 12-minute time boundary begins at &lt;code&gt;00:00&lt;/code&gt; and ends just before &lt;code&gt;00:12&lt;/code&gt;. Only one raw point (&lt;code&gt;8.005&lt;/code&gt;) falls both within the query&amp;rsquo;s first &lt;code&gt;GROUP BY time()&lt;/code&gt; interval and in that first time boundary. Note that while the returned timestamp occurs before the start of the query&amp;rsquo;s time range, the query result excludes data that occur before the query&amp;rsquo;s time range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ac29c6b0807f38989acdad1d39806c22a92fc99" translate="yes" xml:space="preserve">
          <source>The first preset 18-minute time boundary begins at &lt;code&gt;00:00&lt;/code&gt; and ends just before &lt;code&gt;00:18&lt;/code&gt;. Two raw points (&lt;code&gt;8.005&lt;/code&gt; and &lt;code&gt;7.887&lt;/code&gt;) fall both within the first &lt;code&gt;GROUP BY time()&lt;/code&gt; interval and in that first time boundary. Note that while the returned timestamp occurs before the start of the query&amp;rsquo;s time range, the query result excludes data that occur before the query&amp;rsquo;s time range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e2c393dfe5a96dedcc44a2a3f1897d10326b4d" translate="yes" xml:space="preserve">
          <source>The first problem we had was that LevelDB doesn&amp;rsquo;t support hot backups. If you want to do a safe backup of the database, you have to close it and then copy it. The LevelDB variants RocksDB and HyperLevelDB fix this problem, but there was another more pressing problem that we didn&amp;rsquo;t think they could solve.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ecf2f8783312e8b265236ee5e0a1f8998a52adf" translate="yes" xml:space="preserve">
          <source>The first query in the codeblock below does not include &lt;code&gt;fill()&lt;/code&gt;. The last time interval has no data so the reported value for that time interval is zero. The second query includes &lt;code&gt;fill(800000)&lt;/code&gt;; it replaces the zero in the last interval with &lt;code&gt;800000&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6419ef0b79498c47e4bd1df2307cf69f0f9d3c47" translate="yes" xml:space="preserve">
          <source>The first query in the codeblock below returns the greatest field values in the &lt;code&gt;water_level&lt;/code&gt; field key for two tag values associated with the &lt;code&gt;location&lt;/code&gt; tag key. It also writes those results to the &lt;code&gt;top_water_levels&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="272dd69caaabf8d2a60724d533904551417c25a6" translate="yes" xml:space="preserve">
          <source>The first query in the codeblock below returns the smallest field values in the &lt;code&gt;water_level&lt;/code&gt; field key for two tag values associated with the &lt;code&gt;location&lt;/code&gt; tag key. It also writes those results to the &lt;code&gt;bottom_water_levels&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1ac3eec97143b2322b11d96217f03b63348f18f" translate="yes" xml:space="preserve">
          <source>The first query in the codeblock below uses the &lt;code&gt;DISTINCT()&lt;/code&gt; function and returns four results. Notice that each result has the same timestamp. The second query adds an &lt;code&gt;INTO&lt;/code&gt; clause to the initial query and writes the query results to the &lt;code&gt;distincts&lt;/code&gt; measurement. The last query in the codeblock selects all the data in the &lt;code&gt;distincts&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af1fa5a87b7e4c14fce40e6cb1709b46023d4796" translate="yes" xml:space="preserve">
          <source>The first query returns InfluxDB&amp;rsquo;s null timestamp equivalent (epoch 0: &lt;code&gt;1970-01-01T00:00:00Z&lt;/code&gt;) as the timestamp. &lt;code&gt;FIRST(*)&lt;/code&gt; returns two timestamps (one for each field key in the &lt;code&gt;h2o_feet&lt;/code&gt;&lt;a href=&quot;../../concepts/glossary/index#measurement&quot;&gt;measurement&lt;/a&gt;) so the system overrides those timestamps with the null timestamp equivalent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32fb4444af5564a9f46e0ca4cf4f03e753904d65" translate="yes" xml:space="preserve">
          <source>The first result (&lt;code&gt;0.00014444444444444457&lt;/code&gt;) is the one-second rate of change between the first two subsequent field values in the raw data. InfluxDB calculates the difference between the field values and normalizes that value to the one-second rate of change:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85f5083f2ea5a37bb96284cf7357991f732f73d3" translate="yes" xml:space="preserve">
          <source>The first result (&lt;code&gt;0.01733333333333335&lt;/code&gt;) is the two-minute rate of change between the first two subsequent field values in the raw data. InfluxDB calculates the difference between the field values and normalizes that value to the two-minute rate of change:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02994c3cc8b356a5d9acff1b32a99efcb57b5af6" translate="yes" xml:space="preserve">
          <source>The first result (&lt;code&gt;0.026000000000000023&lt;/code&gt;) is the three-minute rate of change between the first two subsequent field values in the raw data. InfluxDB calculates the difference between the field values and normalizes that value to the three-minute rate of change:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16607853667f24086f8d803262c5e7cbd3c1a26c" translate="yes" xml:space="preserve">
          <source>The first result (&lt;code&gt;0.052000000000000046&lt;/code&gt;) is the six-minute rate of change between the first two subsequent field values in the raw data. InfluxDB calculates the difference between the field values and normalizes that value to the six-minute rate of change:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9926f1f6282773bb3b3a9c22c42fa6adf3464ce2" translate="yes" xml:space="preserve">
          <source>The first seven documents in this section provide a tutorial-style introduction to InfluxQL. Feel free to download the dataset provided in &lt;a href=&quot;data_download/index&quot;&gt;Sample Data&lt;/a&gt; and follow along with the documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed5ad993f836903b58f61acfbfb3d2dd0a30969" translate="yes" xml:space="preserve">
          <source>The first two queries in the code block below attempt to specify the string field value &lt;code&gt;at or greater than 9 feet&lt;/code&gt; without any quotes and with double quotes. The first query returns an error because the string field value includes white spaces. The second query returns no results. The third query single quotes &lt;code&gt;at or greater than 9 feet&lt;/code&gt; (this is the supported syntax) and returns the expected results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5987f1ad312a4a8bae641a641e2626f9e7de9bee" translate="yes" xml:space="preserve">
          <source>The first two queries in the code block below attempt to specify the tag value &lt;code&gt;santa_monica&lt;/code&gt; without any quotes and with double quotes. Those queries return no results. The third query single quotes &lt;code&gt;santa_monica&lt;/code&gt; (this is the supported syntax) and returns the expected results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4819253140d240b8504f91fc8502ef433bdf4a84" translate="yes" xml:space="preserve">
          <source>The following CQ automatically calculates the average number of &lt;code&gt;bees&lt;/code&gt; at &lt;code&gt;30&lt;/code&gt; minutes intervals and writes those averages to the &lt;code&gt;mean_bees&lt;/code&gt; field in the &lt;code&gt;aggregate_bees&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3fbc93f7996e0f9ae517ed68c5088424668f7dd" translate="yes" xml:space="preserve">
          <source>The following CQ automatically calculates the number of non-null values of &lt;code&gt;bees&lt;/code&gt; at &lt;code&gt;30&lt;/code&gt; minute intervals and writes those counts to the &lt;code&gt;count_bees&lt;/code&gt; field in the &lt;code&gt;aggregate_bees&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe4f8133826610fff71b1b47a3344325e28c7a30" translate="yes" xml:space="preserve">
          <source>The following InfluxQL functions support nesting:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a00ed70ee97d6b4f6654cd739eefcdac4b50153" translate="yes" xml:space="preserve">
          <source>The following command generates a private key file (&lt;code&gt;.key&lt;/code&gt;) and a self-signed certificate file (&lt;code&gt;.crt&lt;/code&gt;) which remain valid for the specified &lt;code&gt;NUMBER_OF_DAYS&lt;/code&gt;. It outputs those files to InfluxDB&amp;rsquo;s default certificate file paths and gives them the required permissions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a9d33746b5b12c43a9d22c665af44c419f2d3f2" translate="yes" xml:space="preserve">
          <source>The following config parameters are available for all aggregators:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dab4b39a5c7caa52b690af8de2910b5049a2e7f9" translate="yes" xml:space="preserve">
          <source>The following config parameters are available for all inputs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbf897a783d3ab85d8290508232f127b7752bb0a" translate="yes" xml:space="preserve">
          <source>The following config parameters are available for all processors:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3889a8b4fd43d98025ee290d24420bb5cbf3648c" translate="yes" xml:space="preserve">
          <source>The following configuration changes may need to changed before upgrading to &lt;code&gt;1.1.0&lt;/code&gt; from prior versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a0ac1993c27a0a9a3f0570afa70786b428102d1" translate="yes" xml:space="preserve">
          <source>The following configuration settings are in the &lt;a href=&quot;../../administration/config/index#coordinator&quot;&gt;[coordinator]&lt;/a&gt; section of the configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95e031b32199e607b9b01cecba2be30e4996aee1" translate="yes" xml:space="preserve">
          <source>The following example writes three points to the database &lt;code&gt;mydb&lt;/code&gt;. The first point belongs to the series with the measurement &lt;code&gt;cpu_load_short&lt;/code&gt; and tag set &lt;code&gt;host=server02&lt;/code&gt; and has the server&amp;rsquo;s local timestamp. The second point belongs to the series with the measurement &lt;code&gt;cpu_load_short&lt;/code&gt; and tag set &lt;code&gt;host=server02,region=us-west&lt;/code&gt; and has the specified timestamp &lt;code&gt;1422568543702900257&lt;/code&gt;. The third point has the same specified timestamp as the second point, but it is written to the series with the measurement &lt;code&gt;cpu_load_short&lt;/code&gt; and tag set &lt;code&gt;direction=in,host=server01,region=us-west&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e8626ee01e87ce1e93247f8157f937eccdab86" translate="yes" xml:space="preserve">
          <source>The following is a list of available alert handlers and their options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba6c3fa4c7f1798f73c5b9036f89e66078f2781e" translate="yes" xml:space="preserve">
          <source>The following is a list of examples in no particular order that demonstrate some of the features of Kapacitor. These guides assume your are familiar with the basics of defining, recording, replaying and enabling tasks within Kapacitor. See the &lt;a href=&quot;../introduction/getting_started/index&quot;&gt;getting started&lt;/a&gt; guide if you need a refresher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="829ff8585d5792672683e192a1068ee960c63b9e" translate="yes" xml:space="preserve">
          <source>The following is a simple Telegraf configuration file that will send just cpu metrics to InfluxDB:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c739da2c294ef482ab7f7b7f8f46c451a012b2f" translate="yes" xml:space="preserve">
          <source>The following is a simple example that defines a template that computes the mean of a field and triggers an alert.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f1f17f32e5a9a2afe0a529e6635274e09fb4fa" translate="yes" xml:space="preserve">
          <source>The following is a table of valid types and example values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a34eb5a02a01011085e57c7c4a869c7caf35f6d8" translate="yes" xml:space="preserve">
          <source>The following is the EBNF grammar definition of TICKscript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a05cef17614bc87535ddfb07aff37487d3b4782" translate="yes" xml:space="preserve">
          <source>The following lines are all examples of points that can be written to InfluxDB:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51c6f9cb98651109a247e1410ed8d4c29be8d4a2" translate="yes" xml:space="preserve">
          <source>The following mathematical functions are available. Each function is implemented via the equivalent Go function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e03a053ba29421fd388b3921251361bf8c1268b" translate="yes" xml:space="preserve">
          <source>The following new configuration options are available, if upgrading to &lt;code&gt;1.2.0&lt;/code&gt; from prior versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ae0f3f48f1deed4026ba4f7103845e28dd5570" translate="yes" xml:space="preserve">
          <source>The following new configuration options are available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afcaf81c204a9580e0d61fd9a27e63e321c687cc" translate="yes" xml:space="preserve">
          <source>The following queries calculate the average of &lt;code&gt;temp&lt;/code&gt; for blueberries that fall in the &lt;code&gt;north&lt;/code&gt; region. While both queries are relatively simple, use of the regular expression make certain queries much more complicated or impossible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05fe7f8779c1c629243b3b1adde6979ceda0398b" translate="yes" xml:space="preserve">
          <source>The following queries calculate the average of &lt;code&gt;temp&lt;/code&gt; for blueberries that fall in the &lt;code&gt;north&lt;/code&gt; region. While both queries are similar, the use of multiple tags in Schema 2 avoids the use of a regular expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f54a535f54a8358888b6740a3f1fbff0a2db3f89" translate="yes" xml:space="preserve">
          <source>The following queries return &lt;a href=&quot;../../concepts/glossary/index#series-cardinality&quot;&gt;series cardinality&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34031117d27ae2a4393f789388ce1decc04317fb" translate="yes" xml:space="preserve">
          <source>The following query automatically merges those two series when it calculates the &lt;a href=&quot;../functions/index#mean&quot;&gt;average&lt;/a&gt;&lt;code&gt;water_level&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36259bd575c1381db46710514936ed764ad3d83" translate="yes" xml:space="preserve">
          <source>The following query calculates the average value of &lt;code&gt;sunflowers&lt;/code&gt; between 6:15pm and 7:45pm and groups those averages into one hour intervals. It also offsets InfluxDB&amp;rsquo;s preset time buckets by &lt;code&gt;15&lt;/code&gt; minutes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36682e5b27de0ff44812be1264f20797c4dbb320" translate="yes" xml:space="preserve">
          <source>The following query calculates the average value of &lt;code&gt;sunflowers&lt;/code&gt; between 6:15pm and 7:45pm and groups those averages into one hour intervals:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aca3c453de6c50e93ca5d2558717b157496ff30" translate="yes" xml:space="preserve">
          <source>The following query covers a 12-minute time range and groups results into 12-minute time intervals, but it returns &lt;strong&gt;two&lt;/strong&gt; results:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32bf2fb2112d08b49ed8b44e349f96a3dd40f9c2" translate="yes" xml:space="preserve">
          <source>The following query covers the time range between &lt;code&gt;2015-09-18T16:24:00Z&lt;/code&gt; and &lt;code&gt;2015-09-18T16:54:00Z&lt;/code&gt;. Note that &lt;code&gt;fill(previous)&lt;/code&gt; fills the result for &lt;code&gt;2015-09-18T16:36:00Z&lt;/code&gt; with the result from &lt;code&gt;2015-09-18T16:24:00Z&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a51e78bb73511d90af769c7756907ae828f3aff5" translate="yes" xml:space="preserve">
          <source>The following query covers the time range between &lt;code&gt;2016-11-11T21:24:00Z&lt;/code&gt; and &lt;code&gt;2016-11-11T22:06:00Z&lt;/code&gt;. Note that &lt;code&gt;fill(linear)&lt;/code&gt; fills the results for the &lt;code&gt;2016-11-11T21:36:00Z&lt;/code&gt; time interval and the &lt;code&gt;2016-11-11T21:48:00Z&lt;/code&gt; time interval using the values from the &lt;code&gt;2016-11-11T21:24:00Z&lt;/code&gt; time interval and the &lt;code&gt;2016-11-11T22:00:00Z&lt;/code&gt; time interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b54d49d31b426a6e3ab250f90a5bc10022693076" translate="yes" xml:space="preserve">
          <source>The following query returns no data because &lt;code&gt;water_level&lt;/code&gt; has no points within the query&amp;rsquo;s time range. Note that &lt;code&gt;fill(800)&lt;/code&gt; has no effect on the query results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d68cca61a0207a5fd905e65a6f0365be12e2b18" translate="yes" xml:space="preserve">
          <source>The following query returns no data because it specifies a single tag key (&lt;code&gt;location&lt;/code&gt;) in the &lt;code&gt;SELECT&lt;/code&gt; clause:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ba4cad6b93ddcd6709030dcc75195cd1d789bbc" translate="yes" xml:space="preserve">
          <source>The following section describes how to identify or create the API access token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d869107a9fd996f49654dd1ecf2e30d822dfcb23" translate="yes" xml:space="preserve">
          <source>The following sections assume your InfluxDB instance is running on &lt;code&gt;localhost&lt;/code&gt; port &lt;code&gt;8086&lt;/code&gt; and HTTPS is not enabled. Those settings &lt;a href=&quot;../../administration/config/index#http&quot;&gt;are configurable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2d5eb427e6583922e882a5ded2766e1df77e98f" translate="yes" xml:space="preserve">
          <source>The following sections cover how to create, alter, and delete retention policies. Note that when you create a database, InfluxDB automatically creates a retention policy named &lt;code&gt;autogen&lt;/code&gt; which has infinite retention. You may rename that retention policy or disable its auto-creation in the &lt;a href=&quot;../../administration/config/index#meta&quot;&gt;configuration file&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9efc5198d3a204761c585f947039d45f41ff9d9" translate="yes" xml:space="preserve">
          <source>The following sections describe frequent sources of confusion with all functions, aggregation functions, and selector functions. See the function-specific documentation for common issues with individual functions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab1d51cd30de2351160c55e2c83885f378df2b27" translate="yes" xml:space="preserve">
          <source>The following steps create a template variable called &lt;code&gt;:database:&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cf1b627c2ece2169efd8c79f86f79260269b2cb" translate="yes" xml:space="preserve">
          <source>The following steps create a template variable called &lt;code&gt;:field-key:&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e59496b0cadd1fadc200eb895cee6cf1faf96f7" translate="yes" xml:space="preserve">
          <source>The following steps create a template variable called &lt;code&gt;:field-value:&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75406e8f039cf06e638c823114b8220491486066" translate="yes" xml:space="preserve">
          <source>The following steps create a template variable called &lt;code&gt;:measurement:&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d750bcc2397fd5981f534c6944cfb66d04808d16" translate="yes" xml:space="preserve">
          <source>The following steps create a template variable called &lt;code&gt;:tag-key:&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="900f9da3046d2b155cc222135ee1f593f0235dc5" translate="yes" xml:space="preserve">
          <source>The following steps create a template variable called &lt;code&gt;:tag-value:&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b6d6afd6b3d2a72ed40e46e905abb0ae015ec7b" translate="yes" xml:space="preserve">
          <source>The following steps describe how to create a new Telegram bot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94a5bd0c1fdbdd0f40975768ef69910e4a1379ef" translate="yes" xml:space="preserve">
          <source>The following steps describe how to create the API access token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd23fadfdf7c2e796019d564deb812f2fc3660fb" translate="yes" xml:space="preserve">
          <source>The following steps describe how to identify your chat id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e4ec49a21297f8cbeab06e905cdda8bf263f331" translate="yes" xml:space="preserve">
          <source>The following steps outline how to transfer metastore information to the new format. They also outline when to upgrade the binary to 1.3 and when to generate a new configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bd2c15b8b0210c0328f522d00d5dfa711436aef" translate="yes" xml:space="preserve">
          <source>The following string manipulation functions are available. Each function is implemented via the equivalent Go function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d53e050ccd6cfa96b2e90d2966c9f1357ce478c" translate="yes" xml:space="preserve">
          <source>The following two sections outline how to set up HTTPS with InfluxDB &lt;a href=&quot;#setup-https-with-a-ca-signed-certificate&quot;&gt;using a CA-signed certificate&lt;/a&gt; and &lt;a href=&quot;#setup-https-with-a-self-signed-certificate&quot;&gt;using a self-signed certificate&lt;/a&gt; on Ubuntu 16.04. Specific steps may be different for other operating systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e1f159ae63a9c0202afea79554da343e1bb49d1" translate="yes" xml:space="preserve">
          <source>The fourth preset 18-minute time boundary begins at &lt;code&gt;00:54&lt;/code&gt; and ends just before &lt;code&gt;1:12:00&lt;/code&gt;. One raw point (&lt;code&gt;6.982&lt;/code&gt;) falls both within the fourth &lt;code&gt;GROUP BY time()&lt;/code&gt; interval and in that fourth time boundary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4152d223b22ba4c0ab072d3cb065415c4f782ed" translate="yes" xml:space="preserve">
          <source>The framework is in place, now go plug in a real anomaly detection algorithm that works for your domain!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="830f9bcfeda4df3be717e7e9cb0146453b521e2b" translate="yes" xml:space="preserve">
          <source>The full public URL used to access Chronograf from a web browser (default: &lt;code&gt;http://localhost:8888&lt;/code&gt;). Used for Google, Auth0, and some Generic OAuth2 authentication providers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dff4f7e219f99b6a8a2ac4645e27609c90654e8" translate="yes" xml:space="preserve">
          <source>The generic OAuth 2 Client ID. Can be used for own OAuth 2 service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c3064be9fd0bbe25fd59f4b8e0006cfc017b907" translate="yes" xml:space="preserve">
          <source>The generic OAuth 2 Client Secret.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b208fe67238a03fd6508e60e860086c6fb9b20b7" translate="yes" xml:space="preserve">
          <source>The generic OAuth 2 name presented on the login page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af1c23329fbbb91f24cb01652bf7b3de0c6d15d" translate="yes" xml:space="preserve">
          <source>The generic OAuth2 provider has a few optional parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="592755fee3661216a908c09617d3d791229b04c2" translate="yes" xml:space="preserve">
          <source>The generic OAuth2 provider is very similar to the Github provider, but, you are able to set your own authentication, token, and API URLs. The callback URL path will be &lt;code&gt;/oauth/generic/callback&lt;/code&gt;. So, if your Chronograf is hosted at &lt;code&gt;https://localhost:8888&lt;/code&gt; then the full callback URL would be &lt;code&gt;https://localhost:8888/oauth/generic/callback&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f05f652dea98473d6f3bfdbc92159750a3886c2" translate="yes" xml:space="preserve">
          <source>The generic OAuth2 provider requires several settings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21a5ab6803f4a0130c2594e9028a7727566b526a" translate="yes" xml:space="preserve">
          <source>The global interval for flushing data from each output plugin to its destination. This value should not be set lower than the collection interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b986eb62f3382a45e053c0413a0640fcdc990e38" translate="yes" xml:space="preserve">
          <source>The graph shows a preview of the relevant data and the threshold number. By default, the graph shows data within the past 15 minutes. The time range selector in the top right corner adjusts the graph&amp;rsquo;s time range. Use this feature when determining a reasonable threshold number based on your data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c7f38b9f47eafd81d4c1e47fe819e9b72d71127" translate="yes" xml:space="preserve">
          <source>The handler defintion has been simplified as a result. Here are some example alert handlers using the new structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="234002415d8dc96cc63553e1ea685f7e68e79de9" translate="yes" xml:space="preserve">
          <source>The hardware recommendations for cluster data nodes are similar to the standalone instance recommendations. Data nodes should always have at least 2 CPU cores, as they must handle regular read and write traffic, as well as intra-cluster read and write traffic. Due to the cluster communication overhead, data nodes in a cluster handle less throughput than a standalone instance on the same hardware.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5971268bfca28ab3b2f4d812716ea10d94fb05e1" translate="yes" xml:space="preserve">
          <source>The implementation of the data processing step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad1f404e5aea4f77488f2e06bf4602bbc719bdcf" translate="yes" xml:space="preserve">
          <source>The import file has two sections:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae82eaf8f9b5bc9dcbaa2884cb141060d150a128" translate="yes" xml:space="preserve">
          <source>The in-memory Cache is recreated on restart by re-reading the WAL files on disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7a85c8cd928e6f7d3bdff0feaf1b42906cae97" translate="yes" xml:space="preserve">
          <source>The increase in RAM needs relative to series cardinality is exponential where the exponent is between one and two:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="262acc4d196e1ad7fc5f866cab6c1cd4bfde7a72" translate="yes" xml:space="preserve">
          <source>The index structure can provide efficient access to all blocks as well as the ability to determine the cost associated with accessing a given key. Given a key and timestamp, we can determine whether a file contains the block for that timestamp. We can also determine where that block resides and how much data must be read to retrieve the block. Knowing the size of the block, we can efficiently provision our IO statements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eec03258312eb7a52891997478da1e7459b1fbd" translate="yes" xml:space="preserve">
          <source>The information in the &lt;code&gt;&amp;lt; &amp;gt;&lt;/code&gt; shows the measurement and the tag set of the series that exceeded &lt;code&gt;max-series-per-database&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9816f2f5302ef2cc2bb4be3112571efc4e91b99e" translate="yes" xml:space="preserve">
          <source>The input will flush at least this often even if it hasn&amp;rsquo;t reached the configured batch-size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28cb8966f8b093dc0f57ebabad45ee516b67b204" translate="yes" xml:space="preserve">
          <source>The input will flush if this many points get buffered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1444908553e3da43529d513807bc3601ab313398" translate="yes" xml:space="preserve">
          <source>The intent is that the Message property be a single line summary while the Details property is a more detailed message possibly spanning multiple lines, and containing HTML formatting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="316addb1e9a7e2c8a557bd0928c676923fecb3f2" translate="yes" xml:space="preserve">
          <source>The intent of the API is to allow for dynamic configuration of sensitive credentials without requiring that the Kapacitor process be restarted. As such, it is recommended to use either the configuration file or the API to manage these configuration sections, but not both. This will help to eliminate any confusion that may arise as to the source of a given configuration option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7129596cfb923045de5e3ed726b0888db6dc3f01" translate="yes" xml:space="preserve">
          <source>The interface we need to implement is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43e75061f4308350c867e40fafae0565bc2313e2" translate="yes" xml:space="preserve">
          <source>The internal input plugin uses the wrong units for &lt;code&gt;heap_objects&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="953e75cabe007fd5036aaf133ff4e05c7eaef7bd" translate="yes" xml:space="preserve">
          <source>The interval at which InfluxDB checks to see if a CQ needs to run. Set this option to the lowest interval at which your CQs run. For example, if your most frequent CQ runs every minute, set &lt;code&gt;run-interval&lt;/code&gt; to &lt;code&gt;1m&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be26d70c307ae5d0c191e941d6af371074304c39" translate="yes" xml:space="preserve">
          <source>The interval at which InfluxDB records statistics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="267466e0378dbfb2f67e3edc446563883bf638e4" translate="yes" xml:space="preserve">
          <source>The interval represents how often to emit the statistics based on real time. This means the interval time is independent of the times of the data points the other node is receiving. As a result the &lt;a href=&quot;index&quot;&gt;StatsNode&lt;/a&gt; is a root node in the task pipeline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55e4c294e4e66ff6b86348478bfa5cbf1e9f387d" translate="yes" xml:space="preserve">
          <source>The introductory documentation includes all the information you need to get up and running with InfluxDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="323a3507a618414d583864aac1fef61d8544d80a" translate="yes" xml:space="preserve">
          <source>The introductory documentation includes all the information you need to get up and running with Kapacitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a7fa8d154448a0147d58d87c76b96dea1815804" translate="yes" xml:space="preserve">
          <source>The introductory documentation includes all the information you need to get up and running with Telegraf.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fe2c7d6f4a28f49e780c3cfed79e2312a5a32c4" translate="yes" xml:space="preserve">
          <source>The join can be an inner or outer join, see the &lt;a href=&quot;index#fill&quot;&gt;JoinNode.Fill&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f35abf7f71a597220f200bd920b00eab8245929f" translate="yes" xml:space="preserve">
          <source>The join process skips points that do not have a matching point in time from the other source. As a result it is important to both &lt;code&gt;groupBy&lt;/code&gt; and &lt;code&gt;fill&lt;/code&gt; the data while joining batch data. Grouping the data by time ensures that each source has data points at consistent time values. Filling the data ensures every point will have a match with a sane default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c874639f017ffdebf76f0d2b23c0cec895079b56" translate="yes" xml:space="preserve">
          <source>The key part of the key-value pair that makes up a field. Field keys are strings and they store metadata.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="330a5ccf45cdced93beb866744d2ac2688091628" translate="yes" xml:space="preserve">
          <source>The key part of the key-value pair that makes up a tag. Tag keys are strings and they store metadata. Tag keys are indexed so queries on tag keys are performant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c94f740c6b8c995d92134ce7344f79647325639b" translate="yes" xml:space="preserve">
          <source>The key-value pair in InfluxDB&amp;rsquo;s data structure that records metadata and the actual data value. Fields are required in InfluxDB&amp;rsquo;s data structure and they are not indexed - queries on field values scan all points that match the specified time range and, as a result, are not performant relative to tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e71ccd34ea406211a829079ca632d8c9f00dd8be" translate="yes" xml:space="preserve">
          <source>The key-value pair in InfluxDB&amp;rsquo;s data structure that records metadata. Tags are an optional part of InfluxDB&amp;rsquo;s data structure but they are useful for storing commonly-queried metadata; tags are indexed so queries on tags are performant. &lt;em&gt;Query tip:&lt;/em&gt; Compare tags to fields; fields are not indexed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a16b97f0f014eb335e6c21e506b839cfd6a982d" translate="yes" xml:space="preserve">
          <source>The keyword &lt;code&gt;time&lt;/code&gt; is a special case. &lt;code&gt;time&lt;/code&gt; can be a &lt;a href=&quot;../../concepts/glossary/index#continuous-query-cq&quot;&gt;continuous query&lt;/a&gt; name, database name, &lt;a href=&quot;../../concepts/glossary/index#measurement&quot;&gt;measurement&lt;/a&gt; name, &lt;a href=&quot;../../concepts/glossary/index#retention-policy-rp&quot;&gt;retention policy&lt;/a&gt; name, &lt;a href=&quot;../../concepts/glossary/index#subscription&quot;&gt;subscription&lt;/a&gt; name, and &lt;a href=&quot;../../concepts/glossary/index#user&quot;&gt;user&lt;/a&gt; name. In those cases, &lt;code&gt;time&lt;/code&gt; does not require double quotes in queries. &lt;code&gt;time&lt;/code&gt; cannot be a &lt;a href=&quot;../../concepts/glossary/index#field-key&quot;&gt;field key&lt;/a&gt; or &lt;a href=&quot;../../concepts/glossary/index#tag-key&quot;&gt;tag key&lt;/a&gt;; InfluxDB rejects writes with &lt;code&gt;time&lt;/code&gt; as a field key or tag key and returns an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bf53ccf7d562553522cb3eaf1b0595e637b96fe" translate="yes" xml:space="preserve">
          <source>The keyword &lt;code&gt;time&lt;/code&gt; is a special case. &lt;code&gt;time&lt;/code&gt; can be a &lt;a href=&quot;../../concepts/glossary/index#continuous-query-cq&quot;&gt;continuous query&lt;/a&gt; name, database name, &lt;a href=&quot;../../concepts/glossary/index#measurement&quot;&gt;measurement&lt;/a&gt; name, &lt;a href=&quot;../../concepts/glossary/index#retention-policy-rp&quot;&gt;retention policy&lt;/a&gt; name, &lt;a href=&quot;../../concepts/glossary/index#subscription&quot;&gt;subscription&lt;/a&gt; name, and &lt;a href=&quot;../../concepts/glossary/index#user&quot;&gt;user&lt;/a&gt; name. In those cases, &lt;code&gt;time&lt;/code&gt; does not require double quotes in queries. &lt;code&gt;time&lt;/code&gt; cannot be a &lt;a href=&quot;../../concepts/glossary/index#field-key&quot;&gt;field key&lt;/a&gt; or &lt;a href=&quot;../../concepts/glossary/index#tag-key&quot;&gt;tag key&lt;/a&gt;; InfluxDB rejects writes with &lt;code&gt;time&lt;/code&gt; as a field key or tag key and returns an error. See &lt;a href=&quot;../../troubleshooting/frequently-asked-questions/index#time&quot;&gt;Frequently Asked Questions&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6236c678785067ef1030b8f2c6608ac1ec8f5263" translate="yes" xml:space="preserve">
          <source>The keywords &lt;code&gt;IF&lt;/code&gt;, &lt;code&gt;EXISTS&lt;/code&gt;, and &lt;code&gt;NOT&lt;/code&gt; where removed for this release. This means you no longer need to specify &lt;code&gt;IF NOT EXISTS&lt;/code&gt; for &lt;code&gt;DROP DATABASE&lt;/code&gt; or &lt;code&gt;IF EXISTS&lt;/code&gt; for &lt;code&gt;CREATE DATABASE&lt;/code&gt;. If these are specified, a query parse error is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="855bb473a77c3da36f642b6b0ca24cf0da68fa83" translate="yes" xml:space="preserve">
          <source>The last query returns one point because the four initial results are duplicate points; they belong to the same series and have the same timestamp. When the system encounters duplicate points, it simply overwrites the previous point with the most recent point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0f4f0cd33277286575c0ebe23b7610f3a4fc468" translate="yes" xml:space="preserve">
          <source>The last section &lt;code&gt;DOT&lt;/code&gt; is a &lt;a href=&quot;http://www.graphviz.org&quot;&gt;graphviz dot&lt;/a&gt; formatted string that contains information about the data processing pipeline defined by the TICKscript. The &lt;em&gt;key=value&lt;/em&gt; pairs are stats about each node or edge. The &lt;em&gt;processed&lt;/em&gt; key indicates the number of data points that have passed along the specified edge of the graph. For example in the above the &lt;code&gt;stream0&lt;/code&gt; node (aka the &lt;code&gt;stream&lt;/code&gt; var from the TICKscript) has sent 12 points to the &lt;code&gt;from1&lt;/code&gt; node. The &lt;code&gt;from1&lt;/code&gt; node has also sent 12 points on to the &lt;code&gt;alert2&lt;/code&gt; node. Since Telegraf is configured to only send &lt;code&gt;cpu&lt;/code&gt; data all 12 points match the from/measurement criteria of the &lt;code&gt;from1&lt;/code&gt; node and are passed on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="694714aadf4ecbc8ab533904064061b2fc192641" translate="yes" xml:space="preserve">
          <source>The last section is the footer that stores the offset of the start of the index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="599f719c7a01b1387b50f6d87941a47805d29377" translate="yes" xml:space="preserve">
          <source>The last two columns in the sample data, called &lt;code&gt;location&lt;/code&gt; and &lt;code&gt;scientist&lt;/code&gt;, are tags. Tags are made up of tag keys and tag values. Both &lt;em&gt;tag keys&lt;/em&gt; and &lt;em&gt;tag values&lt;/em&gt; are stored as strings and record metadata. The tag keys in the sample data are &lt;code&gt;location&lt;/code&gt; and &lt;code&gt;scientist&lt;/code&gt;. The tag key &lt;code&gt;location&lt;/code&gt; has two tag values: &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;2&lt;/code&gt;. The tag key &lt;code&gt;scientist&lt;/code&gt; also has two tag values: &lt;code&gt;langstroth&lt;/code&gt; and &lt;code&gt;perpetua&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dea4bcfcc82a901903218009dd2ccd3ec1629114" translate="yes" xml:space="preserve">
          <source>The latest Chronograf builds are available on InfluxData&amp;rsquo;s &lt;a href=&quot;https://influxdata.com/downloads&quot;&gt;Downloads page&lt;/a&gt;. See Chronograf&amp;rsquo;s &lt;a href=&quot;https://github.com/influxdata/chronograf/blob/master/README.md#from-source&quot;&gt;README&lt;/a&gt; on GitHub for instructions on building from source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3863b292e3069de2307664b7a788eabdf16bd451" translate="yes" xml:space="preserve">
          <source>The level at which to log the data. One of: DEBUG, INFO, WARN, ERROR Default: INFO</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a872d6b21ad41ac09ecad1a6d7fe86a7bdd4db1f" translate="yes" xml:space="preserve">
          <source>The life cycle of a query looks like this:</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
