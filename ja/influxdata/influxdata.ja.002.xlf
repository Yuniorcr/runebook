<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="">
    <body>
      <group id="">
        <trans-unit id="4980b174b65026ec53c689a404bdf8294f325095" translate="yes" xml:space="preserve">
          <source>A new system for working with alerts has been introduced. This alerting system allows you to configure topics for alert events and then configure handlers for various topics. This way alert generation is decoupled from alert handling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="168ffdb2dfe295c178adc1d4d29c4bdd420d7b86" translate="yes" xml:space="preserve">
          <source>A node that does not perform any operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6b4569dc7ef5086a47517120faf88daec069442" translate="yes" xml:space="preserve">
          <source>A node that handles creating several child QueryNodes. Each call to &lt;code&gt;query&lt;/code&gt; creates a child batch node that can further be configured. See &lt;a href=&quot;../query_node/index&quot;&gt;QueryNode&lt;/a&gt; The &lt;code&gt;batch&lt;/code&gt; variable in batch tasks is an instance of a &lt;a href=&quot;index&quot;&gt;BatchNode.&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dd65faec2476140471e5d5584e2c16931b02002" translate="yes" xml:space="preserve">
          <source>A node that logs all data that passes through the node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5812ef8cc2371529b6e6302872613a5e39c71c9" translate="yes" xml:space="preserve">
          <source>A note on REST&amp;hellip;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a5da22aa637f1e091bcaca761c6f2e84bf7c3f4" translate="yes" xml:space="preserve">
          <source>A note on why InfluxDB isn&amp;rsquo;t CRUD&amp;hellip;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8f6b4d4c1ca785941c69dbad703c96c80800cc6" translate="yes" xml:space="preserve">
          <source>A overview of how InfluxDB to stores data on disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ace315e8c5d3e323b2631444b368870a8b10b00" translate="yes" xml:space="preserve">
          <source>A point is uniquely identified by the measurement name, &lt;a href=&quot;../../concepts/glossary/index#tag-set&quot;&gt;tag set&lt;/a&gt;, and timestamp. If you submit a new point with the same measurement, tag set, and timestamp as an existing point, the field set becomes the union of the old field set and the new field set, where any ties go to the new field set. This is the intended behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c88086666d5eb56d882e4ea612e1360208cf0f34" translate="yes" xml:space="preserve">
          <source>A point is uniquely identified by the measurement name, tag set, and timestamp. If you submit Line Protocol with the same measurement, tag set, and timestamp, but with a different field set, the field set becomes the union of the old field set and the new field set, where any conflicts favor the new field set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4148f2e9e55c6d914536ab2cd73f546e7397019f" translate="yes" xml:space="preserve">
          <source>A point with the measurement name of &lt;code&gt;cpu&lt;/code&gt; and tags &lt;code&gt;host&lt;/code&gt; and &lt;code&gt;region&lt;/code&gt; has now been written to the database, with the measured &lt;code&gt;value&lt;/code&gt; of &lt;code&gt;0.64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bda8bba6d5a674aac638511a06310e8a682961e" translate="yes" xml:space="preserve">
          <source>A process UDF, is a child process of Kapacitor that communicates over STDIN/STDOUT with Kapacitor and is completely managed by Kapacitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b19df06afc1da3f0890ad1997cc44c726ff863f" translate="yes" xml:space="preserve">
          <source>A query is composed of one or more statements separated by a semicolon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5239e39106b6eaefcc0ea19afd38e3dc76eb9867" translate="yes" xml:space="preserve">
          <source>A query requires at least one &lt;a href=&quot;../../concepts/glossary/index#field-key&quot;&gt;field key&lt;/a&gt; in the &lt;code&gt;SELECT&lt;/code&gt; clause to return data. If the &lt;code&gt;SELECT&lt;/code&gt; clause only includes a single &lt;a href=&quot;../../concepts/glossary/index#tag-key&quot;&gt;tag key&lt;/a&gt; or several tag keys, the query returns an empty response. Please see the &lt;a href=&quot;../../query_language/data_exploration/index#common-issues-with-the-select-statement&quot;&gt;Data Exploration&lt;/a&gt; page for additional information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc89fc5944ec358259441c12bc26fb38703fbc15" translate="yes" xml:space="preserve">
          <source>A query requires at least one &lt;a href=&quot;../../concepts/glossary/index#field-key&quot;&gt;field key&lt;/a&gt; in the &lt;code&gt;SELECT&lt;/code&gt; clause to return data. If the &lt;code&gt;SELECT&lt;/code&gt; clause only includes a single &lt;a href=&quot;../../concepts/glossary/index#tag-key&quot;&gt;tag key&lt;/a&gt; or several tag keys, the query returns an empty response. This behavior is a result of how the system stores data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8594489ae2d8e88f9bc5ed2614337d89606b61d1" translate="yes" xml:space="preserve">
          <source>A query with a selector function and a &lt;code&gt;GROUP BY time()&lt;/code&gt; clause returns the lower time bound for each &lt;code&gt;GROUP BY time()&lt;/code&gt; interval. Note that the &lt;code&gt;SAMPLE()&lt;/code&gt; function behaves differently from other selector functions when paired with the &lt;code&gt;GROUP BY time()&lt;/code&gt; clause. See &lt;a href=&quot;#common-issues-with-sample&quot;&gt;Common Issues with &lt;code&gt;SAMPLE()&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a911f1fd0e60393d2ad72d70fc5a2d83e277b32" translate="yes" xml:space="preserve">
          <source>A query with a single selector function, a single &lt;a href=&quot;../../concepts/glossary/index#field-key&quot;&gt;field key&lt;/a&gt; argument, and no &lt;a href=&quot;../data_exploration/index#group-by-time-intervals&quot;&gt;&lt;code&gt;GROUP BY time()&lt;/code&gt; clause&lt;/a&gt; returns the timestamp for the point that appears in the raw data. A query with a single selector function, multiple field key arguments, and no &lt;a href=&quot;../data_exploration/index#group-by-time-intervals&quot;&gt;&lt;code&gt;GROUP BY time()&lt;/code&gt; clause&lt;/a&gt; returns the timestamp for the point that appears in the raw data or InfluxDB&amp;rsquo;s null timestamp equivalent (epoch 0: &lt;code&gt;1970-01-01T00:00:00Z&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37c0ee9399bc6aca436cc38f6a9f4db96bc4e670" translate="yes" xml:space="preserve">
          <source>A query with an &lt;a href=&quot;#aggregations&quot;&gt;aggregation function&lt;/a&gt; and no time range in the &lt;a href=&quot;../data_exploration/index#the-where-clause&quot;&gt;&lt;code&gt;WHERE&lt;/code&gt; clause&lt;/a&gt; returns epoch 0 (&lt;code&gt;1970-01-01T00:00:00Z&lt;/code&gt;) as the timestamp. InfluxDB uses epoch 0 as the null timestamp equivalent. A query with an aggregate function that includes a time range in the &lt;code&gt;WHERE&lt;/code&gt; clause returns the lower time bound as the timestamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8128f99c1e714f9e3a5429bada16b71925523f59" translate="yes" xml:space="preserve">
          <source>A query with more than one function and no time range in the &lt;a href=&quot;../data_exploration/index#the-where-clause&quot;&gt;&lt;code&gt;WHERE&lt;/code&gt; clause&lt;/a&gt; returns InfluxDB&amp;rsquo;s null timestamp equivalent (epoch 0: &lt;code&gt;1970-01-01T00:00:00Z&lt;/code&gt;). A query with more than one function and a time range in the &lt;code&gt;WHERE&lt;/code&gt; clause returns the lower time bound as the timestamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59e7794c9974d3a42c73ce700a984756b02da21b" translate="yes" xml:space="preserve">
          <source>A quick way to view Telegraf&amp;rsquo;s output is by enabling a new UDP output plugin to run in parallel with the existing output plugins. Since each output plugin creates its own stream, the already existing outputs will not be affected. Traffic will be replicated to all active outputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6daf52110e3e532c81a962fdaacbb75702b22fcf" translate="yes" xml:space="preserve">
          <source>A recording has these read only properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c29c30a522485e5a0d91d0ef89f670d2ea1a8192" translate="yes" xml:space="preserve">
          <source>A replay has these read only properties in addition to the properties listed &lt;a href=&quot;#replay-recording&quot;&gt;above&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6c4e0f4a43adf96a1402615828d88ea3aef9dd1" translate="yes" xml:space="preserve">
          <source>A sample of the data in &lt;code&gt;data.txt&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab740daa537bd2e880c2edcfbe6eca7a40000f39" translate="yes" xml:space="preserve">
          <source>A sample of the queries in &lt;code&gt;queries.txt&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45bcde969140872845c775ef6e95aff943f3279a" translate="yes" xml:space="preserve">
          <source>A set of vars for overwriting any defined vars in the TICKscript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="514c5a3877c7a9438a50efdf74a65b7c1be4dacd" translate="yes" xml:space="preserve">
          <source>A shard contains the actual encoded and compressed data, and is represented by a TSM file on disk. Every shard belongs to one and only one shard group. Multiple shards may exist in a single shard group. Each shard contains a specific set of series. All points falling on a given series in a given shard group will be stored in the same shard (TSM file) on disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d587f885faf5c6903015013fa4715b608dab2c0f" translate="yes" xml:space="preserve">
          <source>A single line comment begins with two hyphens (&lt;code&gt;--&lt;/code&gt;) and ends where InfluxDB detects a line break. This comment type cannot span several lines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e297ca02b3bf597855a953cb36c557fb60c72d44" translate="yes" xml:space="preserve">
          <source>A single line of Line Protocol represents one data point in InfluxDB. It informs InfluxDB of the point&amp;rsquo;s measurement, tag set, field set, and timestamp. The following code block shows a sample of Line Protocol and breaks it into its individual components:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="231ac5a37688de2dab8a168410cbfe06ff191a4c" translate="yes" xml:space="preserve">
          <source>A single measurement can belong to different retention policies. A &lt;em&gt;retention policy&lt;/em&gt; describes how long InfluxDB keeps data (&lt;code&gt;DURATION&lt;/code&gt;) and how many copies of those data are stored in the cluster (&lt;code&gt;REPLICATION&lt;/code&gt;). If you&amp;rsquo;re interested in reading more about retention policies, check out &lt;a href=&quot;../../query_language/database_management/index#retention-policy-management&quot;&gt;Database Management&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf98bf9ecafac4b781b002d76dad3e840b3a59db" translate="yes" xml:space="preserve">
          <source>A single scraper scrapes the targets from a single discoverer. Configuring both scrapers and discoverers comes down to configuring each individually and then informing the scraper about the discoverer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d322b1383d440e9e005d9d131d1da0f57e2317da" translate="yes" xml:space="preserve">
          <source>A socket UDF is process external to Kapacitor that communicates over a configured unix domain socket. The process itself is not managed by Kapacitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c5c0c8e51480fded131464eb481e5b2b01a2de" translate="yes" xml:space="preserve">
          <source>A statement begins with an identifier and any number of chaining function calls. The result of a statement can be assigned to a variable using the &lt;code&gt;var&lt;/code&gt; keyword and assignment operator &lt;code&gt;=&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd03e85a6c1c2cfffa1d8b975ed541e1fc3c86f4" translate="yes" xml:space="preserve">
          <source>A stream task does have one slight advantage in that since its watching the stream of data it understands time by the timestamps on the data. As such there are no race conditions for whether a given point will make it into a window or not. If you are using a batch task it is still possible for a point to arrive late and be missed in a window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92dd076bea0bf7f3a6310e3c140a4cebe38cf672" translate="yes" xml:space="preserve">
          <source>A stream task will have to keep all data in RAM for the specified period. If this period is too long for the available RAM then you will first need to store the data in InfluxDB and then query using a batch task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8f126e10c1d19b410c9bc626ca5527c85329fd7" translate="yes" xml:space="preserve">
          <source>A subquery is a query that is nested in the &lt;code&gt;FROM&lt;/code&gt; clause of another query. Use a subquery to apply a query as a condition in the enclosing query. Subqueries offer functionality similar to nested functions and SQL &lt;a href=&quot;https://en.wikipedia.org/wiki/Having_(SQL)&quot;&gt;&lt;code&gt;HAVING&lt;/code&gt; clauses&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b1ff85e9e173b1df834e9dc2c053f896b39cb19" translate="yes" xml:space="preserve">
          <source>A successful &lt;a href=&quot;../../query_language/database_management/index#create-database&quot;&gt;&lt;code&gt;CREATE DATABASE&lt;/code&gt; query&lt;/a&gt; returns no additional information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff3d51d884b885ac71feaac303f31af5cdfe5484" translate="yes" xml:space="preserve">
          <source>A successful &lt;code&gt;ALTER RETENTION POLICY&lt;/code&gt; query returns an empty result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d1ba45445824ef01274547d88155eb8f8bf64ca" translate="yes" xml:space="preserve">
          <source>A successful &lt;code&gt;CREATE DATABASE&lt;/code&gt; query returns an empty result. If you attempt to create a database that already exists, InfluxDB does nothing and does not return an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a10d1152958069085803177be9975d804ed8f15f" translate="yes" xml:space="preserve">
          <source>A successful &lt;code&gt;CREATE RETENTION POLICY&lt;/code&gt; query returns an empty response. If you attempt to create a retention policy identical to one that already exists, InfluxDB does not return an error. If you attempt to create a retention policy with the same name as an existing retention policy but with differing attributes, InfluxDB returns an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="147e4afa0d6763e39b75dc2bfaec3d5bb9ba19b3" translate="yes" xml:space="preserve">
          <source>A successful &lt;code&gt;CREATE USER&lt;/code&gt; query returns a blank result:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8354eab95aa3aff924739bee1bc88f931d53d290" translate="yes" xml:space="preserve">
          <source>A successful &lt;code&gt;DELETE&lt;/code&gt; query returns an empty result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c87bb08964ce60076383495071c5cd824e630816" translate="yes" xml:space="preserve">
          <source>A successful &lt;code&gt;DROP DATABASE&lt;/code&gt; query returns an empty result. If you attempt to drop a database that does not exist, InfluxDB does not return an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fbab56b4a4dad697808e6a3db00ca21e32b6c87" translate="yes" xml:space="preserve">
          <source>A successful &lt;code&gt;DROP MEASUREMENT&lt;/code&gt; query returns an empty result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1494e61f132cf78f64840dc7f4b2a56e9be9d3c1" translate="yes" xml:space="preserve">
          <source>A successful &lt;code&gt;DROP RETENTION POLICY&lt;/code&gt; query returns an empty result. If you attempt to drop a retention policy that does not exist, InfluxDB does not return an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb253f4c6b29ed198d21001cfbaad495e04bf24c" translate="yes" xml:space="preserve">
          <source>A successful &lt;code&gt;DROP SERIES&lt;/code&gt; query returns an empty result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af79e47ada611c8cf58dd7a7e43d64237283b3c3" translate="yes" xml:space="preserve">
          <source>A successful &lt;code&gt;DROP SHARD&lt;/code&gt; query returns an empty result. InfluxDB does not return an error if you attempt to drop a shard that does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04546f2b7bd8c28c1919e2bc9d7cd7f4236addc5" translate="yes" xml:space="preserve">
          <source>A successful &lt;code&gt;KILL QUERY&lt;/code&gt; query returns no results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff547451483d82bdce61327e6ccb2415e90ea55" translate="yes" xml:space="preserve">
          <source>A successful connection returns the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e597e96a14adb0160412445e0b9d97dee593478" translate="yes" xml:space="preserve">
          <source>A successful response looks like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73e0ab98ed8602b4b3dde19f6206faa87a88597c" translate="yes" xml:space="preserve">
          <source>A supplementary URL to show with your message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab08a1f4beec23290e43fc079efc85c696dbb65" translate="yes" xml:space="preserve">
          <source>A supplementary URL to show with your message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0698eabbce593437cb3e5893a7001279df0c5a" translate="yes" xml:space="preserve">
          <source>A task has these read only properties in addition to the properties listed &lt;a href=&quot;#define-task&quot;&gt;above&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47ee136af702e4ae076e17d4fff2b32ede32de0b" translate="yes" xml:space="preserve">
          <source>A task represents work for Kapacitor to perform. A task is defined by its id, type, TICKscript, and list of database retention policy pairs it is allowed to access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="108c673b5e6321c6fd2e76923b3210cdeb8d9ee4" translate="yes" xml:space="preserve">
          <source>A task will gain its type and TICKscript properties from the template. The specific values of vars and set of database/retention policies for a task are unique per task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a114138b3daba944441ce1bf1a86b8b570947b8" translate="yes" xml:space="preserve">
          <source>A template has these read only properties in addition to the properties listed &lt;a href=&quot;#define-template&quot;&gt;above&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e869e3a143dcc74e39c7b45cfc08afb28ec595f" translate="yes" xml:space="preserve">
          <source>A template string where &lt;code&gt;{{.Interval}}&lt;/code&gt; and &lt;code&gt;{{.Count}}&lt;/code&gt; are available for constructing a meaning full message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5110b7f33acf489ffb6e71f87c801b5749b6c0c6" translate="yes" xml:space="preserve">
          <source>A title for your supplementary URL, otherwise just URL is shown</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3227420022594c46cb6f23bbb3b80cf3f23d0046" translate="yes" xml:space="preserve">
          <source>A title for your supplementary URL, otherwise just URL is shown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="670705e8af632942aa35ebcf14ab99788000ec28" translate="yes" xml:space="preserve">
          <source>A topic into which to publish the aggregate events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="348640250980a38c0a9038729c9475fb68a39b34" translate="yes" xml:space="preserve">
          <source>A useful overview of the InfluxDB time series data structure and how it affects performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa602c3d76d0dfaace1ce5fec0a7bcc3643fd518" translate="yes" xml:space="preserve">
          <source>ALTER RETENTION POLICY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ecd61587ae6c02c840fc651125bdb0b55622f26" translate="yes" xml:space="preserve">
          <source>AMQP Consumer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6291865733fd9161f61d50029a38ca41132d051" translate="yes" xml:space="preserve">
          <source>AMQP output disconnect blocks all outputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc3ffae01100d83f8972d0aaa6113548cfcc3307" translate="yes" xml:space="preserve">
          <source>API Client Libraries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b276f94cd8d0e74a21de6e5939b8c10ca9a975d6" translate="yes" xml:space="preserve">
          <source>API Reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ca0a1dafaea5e84f002eb1c3a7a92dd033b7a8c" translate="yes" xml:space="preserve">
          <source>APIs</source>
          <target state="translated">APIs</target>
        </trans-unit>
        <trans-unit id="03ae227cd6fd9109a25c2cb3d47b2fa9d8816d50" translate="yes" xml:space="preserve">
          <source>AWS Recommendations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e993dedc354f4a864433b21c81ccea0c5b40f44" translate="yes" xml:space="preserve">
          <source>Ability to configure response_timeout in httpjson input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ced1419ef4fe14493ebab8e9ef74b8c1e2a287e3" translate="yes" xml:space="preserve">
          <source>About the Project</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a8448a94fd95ffe832314a2edd0df275aba2f6" translate="yes" xml:space="preserve">
          <source>About the project</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea6f0b4dac884978efb8a2a3ce802681b993d2d8" translate="yes" xml:space="preserve">
          <source>Abs returns the absolute value of x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f0706fc3a8f1e5674c0012c3c67d4a3b62625a8" translate="yes" xml:space="preserve">
          <source>Absolute Time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd4927e4b5fadfc84fe14e15088104d0be6e6dfe" translate="yes" xml:space="preserve">
          <source>Accept points with trailing whitespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75c52e89be578c93cd9160a0fe754dacf63cfbd8" translate="yes" xml:space="preserve">
          <source>Accept strings for StatsD sets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46fe8c7aa7d604ed19ccbf743f76de3f486079cc" translate="yes" xml:space="preserve">
          <source>Acceptable boolean syntax differs for data writes and data queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58b469bc1f9b1b6214361167ba387231ae2fa814" translate="yes" xml:space="preserve">
          <source>Acceptable boolean syntax differs for data writes and data queries. See &lt;a href=&quot;../../troubleshooting/frequently-asked-questions/index#why-can-t-i-query-boolean-field-values&quot;&gt;Frequently Asked Questions&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ec162a3f0eb0d539229eaef831d34b303a9dc5e" translate="yes" xml:space="preserve">
          <source>Acos returns the arccosine, in radians, of x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="473dc4a14e53c4e4b4da1925bd0307c4f77ea728" translate="yes" xml:space="preserve">
          <source>Acosh returns the inverse hyperbolic cosine of x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97c89a4d6630adeb18fa12ba9976a31413fe293e" translate="yes" xml:space="preserve">
          <source>Action</source>
          <target state="translated">Action</target>
        </trans-unit>
        <trans-unit id="927bc1581f5e499569c4e4225635348e50cdf5f4" translate="yes" xml:space="preserve">
          <source>Actions can be combined in a single request. Enable the SMTP handler, set its host and remove the port override.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a97c3d2ce5e9505b0abcaab2b92ef54c950e9a7" translate="yes" xml:space="preserve">
          <source>Add &amp;ldquo;integral&amp;rdquo; function to InfluxQL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0d2c13fd268a016aef1ea3d55285e0f42f5fdd2" translate="yes" xml:space="preserve">
          <source>Add &amp;ldquo;non_negative_difference&amp;rdquo; function to InfluxQL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe5959caab6d8190e65d35e38597e091d742d5b5" translate="yes" xml:space="preserve">
          <source>Add &lt;a href=&quot;../../concepts/data_formats_input/index#collectd&quot;&gt;collectd parser&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16abb12d575251315ecee68965cb1cacfec22256" translate="yes" xml:space="preserve">
          <source>Add &lt;a href=&quot;https://github.com/influxdata/telegraf/blob/master/plugins/inputs/system/DISK_README.md#diskio-input-plugin&quot;&gt;DiskIO input plugin&lt;/a&gt; for Darwin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ae815c5dcea0b6f1eba89026b7b3a1c88fdc225" translate="yes" xml:space="preserve">
          <source>Add &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/inputs/amqp_consumer&quot;&gt;AMQP consumer input plugin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a70ab3d50ca8e32dcb2e047c9e9838d15d1de13" translate="yes" xml:space="preserve">
          <source>Add &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/inputs/dmcache&quot;&gt;DMCache input plugin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f6984b3cfbe828af7fe1f672640b2a520014cd0" translate="yes" xml:space="preserve">
          <source>Add &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/inputs/kapacitor&quot;&gt;Kapacitor input plugin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6db7261d4780872a1546516db673efc9a9098f1" translate="yes" xml:space="preserve">
          <source>Add &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/inputs/webhooks/papertrail&quot;&gt;papertrail&lt;/a&gt; support to webhooks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92e30125fef68d7cfd24661ff1a02972bf70098e" translate="yes" xml:space="preserve">
          <source>Add &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/outputs/elasticsearch&quot;&gt;Elasticsearch 5.x output plugin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8e27553759a32d99f5be00255bd4eafeede3454" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;.create&lt;/code&gt; property to InfluxDBOut node, which when set will create the database and retention policy on task start.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fadd204c26f1f31c67fb1590777c3c40aed5b6b2" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;:dashboardTime:&lt;/code&gt; to support cell-specific time ranges on dashboards</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c293e605117763671b225bd97db8f4932b8d442" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;fill(linear)&lt;/code&gt; to query language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b49c1894f8fa9505020e6eeea2e47fb24861a85" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;message_len_max&lt;/code&gt; option to the &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/inputs/kafka_consumer&quot;&gt;Kafka consumer input plugin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1ab7c68d321cecd27a480340f1d6df579bfe9d2" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;read_repairs&lt;/code&gt; statistics to riak plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f3bda1de3334b9f86321ad88953825a6b57c23" translate="yes" xml:space="preserve">
          <source>Add API endpoints for testing service integrations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="284e0147ae4fed7e4b8ac3cde1b69d5f0dfe2dcf" translate="yes" xml:space="preserve">
          <source>Add Ceph Cluster Performance Statistics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a04060d272716e2610201d7d639afd166c6ef2f2" translate="yes" xml:space="preserve">
          <source>Add Docker container state metrics to Docker input plugin output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a57a3fd34adc73daf5ea3a925faa35a18bb76655" translate="yes" xml:space="preserve">
          <source>Add GC pause metric to InfluxDB input plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ee898feaa731423077cbb463e96db340510c88c" translate="yes" xml:space="preserve">
          <source>Add HTTP(s) based subscriptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d34c349db2dd56d1312e2ddef8bdf32d8cf1245" translate="yes" xml:space="preserve">
          <source>Add Holt-Winter forecasting function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50235882f9c7d99a2cc21e06809b6e03d37a6ded" translate="yes" xml:space="preserve">
          <source>Add Kubernetes plugin for retrieving pod metrics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eaa098736878c7100190a64a2fb9d6e6c8b9a6e" translate="yes" xml:space="preserve">
          <source>Add MaxSeriesPerDatabase config setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d065c465fef040bd1488fbd22938421e7b6c7fbd" translate="yes" xml:space="preserve">
          <source>Add NATS output plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="543bc28a8ac9905b7c16fd069e4df507f442b875" translate="yes" xml:space="preserve">
          <source>Add NodeID to execution options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c57a897581af00395d05129f500d26d86c6dd2d" translate="yes" xml:space="preserve">
          <source>Add SASL options for the &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/outputs/kafka&quot;&gt;Kafka output plugin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19357143c22085abdd1d4b8108b3f50e19021d4f" translate="yes" xml:space="preserve">
          <source>Add SNMP trap service for alerting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2394ba6790c7c363c7bfb04a542ec7687d86866e" translate="yes" xml:space="preserve">
          <source>Add SSL config options to http_response plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5633e5f64854ccf62cdbcc157c56f8942e67a925" translate="yes" xml:space="preserve">
          <source>Add SSL configuration for &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/inputs/haproxy&quot;&gt;HAproxy input plugin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9fbc0f49494841c0af1376a62a6447b4f123128" translate="yes" xml:space="preserve">
          <source>Add TCP alert handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59f6715a88657e119a8b6a69a44ae10055eebafb" translate="yes" xml:space="preserve">
          <source>Add TSI support tooling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3107cd438ddfcaaf5230d03c2085bd36f95c1167" translate="yes" xml:space="preserve">
          <source>Add UI to the Data Explorer for &lt;a href=&quot;../../guides/transition-web-admin-interface/index#writing-data&quot;&gt;writing data to InfluxDB&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f238a0f0aa714bdd8bf6b2c2c40c7624a5a8ae14" translate="yes" xml:space="preserve">
          <source>Add WAL sync delay</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45a1c1f23b186b96cb4fbc118bb64a5f456cd04d" translate="yes" xml:space="preserve">
          <source>Add a Kubernetes autoscaler node. You can now autoscale your Kubernetes deployments via Kapacitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ece5b668456e10ecdfee2a7cd2952826f254f62" translate="yes" xml:space="preserve">
          <source>Add a Status Page with Recent Alerts bar graph, Recent Alerts table, News Feed, and Getting Started widgets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a34e56ba3e1078cdd713d53e1ba5282c91965488" translate="yes" xml:space="preserve">
          <source>Add a global snmp translation cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c5d280551f1108a7a1ab9ab32ba6fb72300cfc3" translate="yes" xml:space="preserve">
          <source>Add a new InfluxDB cluster:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="730e0c55f6b55dd85674d4600c8d14bc78fc1af3" translate="yes" xml:space="preserve">
          <source>Add a new SNMP plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f32bdd86d23f77a157d7b621b59c468ffce474f" translate="yes" xml:space="preserve">
          <source>Add a new element to a list configuration section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f13d6b1288e927a70af943d4e4ae044019fc31f7" translate="yes" xml:space="preserve">
          <source>Add a new node to Kapacitor that can output data to a custom endpoint. For this guide assume we want to output data to a fictitous in-house database called HouseDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="698862598bbf6794b2bf1288e22ab4c91ba96a89" translate="yes" xml:space="preserve">
          <source>Add a query for windows uptime - thank you, @brianbaker!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e779023037d1702558ec1736fb35fb26dc98150b" translate="yes" xml:space="preserve">
          <source>Add a static tag to all data points. Tag can be called more than once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="907c8b3480d3176556573168e6f41d7cb1cf0e61" translate="yes" xml:space="preserve">
          <source>Add a trailing &lt;code&gt;i&lt;/code&gt; to the end of the field value when writing an integer. If you do not provide the &lt;code&gt;i&lt;/code&gt;, InfluxDB will treat the field value as a float.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d2d9e31c7f39293c3a38a1ab546633540729161" translate="yes" xml:space="preserve">
          <source>Add ability to create snapshots of shards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24322f4b4a8e7402febd6b65fa673ab555524772" translate="yes" xml:space="preserve">
          <source>Add ability to read Redis from a socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ac07c33b3e3b4a853bc104c6326a2ee35ef7adb" translate="yes" xml:space="preserve">
          <source>Add ability to set alert message as a field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed600f8586a5af7fc2d3934869ddc4ed8fe93c5d" translate="yes" xml:space="preserve">
          <source>Add ability to set specific HTTP port and hostname per configured InfluxDB cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972362eaa5e8d17cfb540ee4737fb12f4a866c64" translate="yes" xml:space="preserve">
          <source>Add additional redis metrics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71cd834e8a2dd2a0e7012f752dabf5169cd533f8" translate="yes" xml:space="preserve">
          <source>Add additional statistics to query executor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="667fbecda5a33566785dfe5c8f1bb274bce521a3" translate="yes" xml:space="preserve">
          <source>Add autocomplete functionality to &lt;a href=&quot;../../guides/dashboard-template-variables/index&quot;&gt;template variable&lt;/a&gt; dropdowns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d24d40581bbeba4502cbde09e34b2e05cf89ae12" translate="yes" xml:space="preserve">
          <source>Add automatic &lt;code&gt;GROUP BY (time)&lt;/code&gt; functionality to dashboards</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d817f0641c22d3c5e1d7766663a8f5790668cbef" translate="yes" xml:space="preserve">
          <source>Add bitwise AND, OR and XOR operators to the query language</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0a42d7149bc46e22cfa5e2b2183231dde332e95" translate="yes" xml:space="preserve">
          <source>Add chunked request processing back into the Go client v2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b70ed2ae8b8ed93046bad497926c498a666ae69" translate="yes" xml:space="preserve">
          <source>Add chunked/chunk size as setting/options in cli</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89f000d27113b2ec677c4f6f3f19193b364e5bef" translate="yes" xml:space="preserve">
          <source>Add clear command to CLI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3496e094d7d00c154f447bd4e7d4c2543e8671d" translate="yes" xml:space="preserve">
          <source>Add configurable timeout to influxdb input plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2619e7c927b88689290ada24032dca1f139aff02" translate="yes" xml:space="preserve">
          <source>Add database blacklist option for Postgresql</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94dd31803c82a6829a48a786258999973f11d4f0" translate="yes" xml:space="preserve">
          <source>Add diskio io_time to FreeBSD &amp;amp; report timing metrics as ms (as linux does).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47c8376d03e899ea5888b47e95b617a89a4b1e39" translate="yes" xml:space="preserve">
          <source>Add documentation for the &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/inputs/rabbitmq&quot;&gt;RabbitMQ input plugin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daee883d6a28c390cff8d079cd34fd5b8ae191d2" translate="yes" xml:space="preserve">
          <source>Add extra trace logging to tsm engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a4529623fffe5e8eae8a91b463b89a9fdeabc4c" translate="yes" xml:space="preserve">
          <source>Add filestack webhook plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6e1c179ab5c337dba11b8e8bb66ded2c58f4643" translate="yes" xml:space="preserve">
          <source>Add fillPeriod option to Window node, so that the first emit waits till the period has elapsed before emitting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3d080715541848c032b4f00133cc0a508ffb0d0" translate="yes" xml:space="preserve">
          <source>Add generic &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/inputs/socket_listener&quot;&gt;Socket Listener input plugin&lt;/a&gt; and &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/outputs/socket_writer&quot;&gt;socket writer output plugin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fb302c1bd95b84cf7d6b5adbf26daf6dc823845" translate="yes" xml:space="preserve">
          <source>Add graylog input pluging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aaa0b2ba477d64c712791591dea41c6e684572a" translate="yes" xml:space="preserve">
          <source>Add https-private-key option to httpd config.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43ee11bda72cba971f9bbb3f370341aa1dabcf9d" translate="yes" xml:space="preserve">
          <source>Add inactive &amp;amp; active memory to mem plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de2e1bad91a2f104969dba5a7ca3479744e98cca" translate="yes" xml:space="preserve">
          <source>Add input plugin for consuming metrics from NSQD.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a3ce2d0222f9a51b2e5f5c44e903dd2f92724cb" translate="yes" xml:space="preserve">
          <source>Add integer metrics for &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/inputs/consul&quot;&gt;Consul&lt;/a&gt; check health state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0e6ce8779df2fcc8f5107eead8f5583e8f40571" translate="yes" xml:space="preserve">
          <source>Add json timestamp units configurability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e1229b39fe02a420cc5a28dbf9293cb043feeb0" translate="yes" xml:space="preserve">
          <source>Add line-protocol proxy for InfluxDB/InfluxEnterprise Cluster data sources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f30c702bded8ece8c65a4f6734ea00e0a32ab94" translate="yes" xml:space="preserve">
          <source>Add lock option to the &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/inputs/iptables&quot;&gt;IPtables input plugin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa52ade3c4449ad8ac2dd914777e5a55b4a0b905" translate="yes" xml:space="preserve">
          <source>Add log &lt;a href=&quot;../../troubleshooting/frequently-asked-questions/index#what-kapacitor-event-handlers-are-supported-in-chronograf&quot;&gt;event handler&lt;/a&gt; - thank you, @mpchadwick!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7295f9589d20f8ca90cb4c5c374a34f8a4143fac" translate="yes" xml:space="preserve">
          <source>Add max concurrent compaction limits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2b0e7dfea854cd9a489257091784e7da0cf55b1" translate="yes" xml:space="preserve">
          <source>Add max-values-per-tag to limit high tag cardinality data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc3ef8f2ac4c90456d7801855fff9e708343065e" translate="yes" xml:space="preserve">
          <source>Add measurement name arg to logparser plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29109d3e1414181e3b036bdf96705407e760cf33" translate="yes" xml:space="preserve">
          <source>Add missing fields for HAproxy input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5ca9d34400c1bdc6850c1e4b86361ffb03b1ae1" translate="yes" xml:space="preserve">
          <source>Add mode function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94cdae111b71f9a56ec4d3e7cee6b8fd3fdb1c18" translate="yes" xml:space="preserve">
          <source>Add modulo operator to the query language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdeaade29d239e917afe03371950409cbbd8a640" translate="yes" xml:space="preserve">
          <source>Add more InnoDB metric to the &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/inputs/mysql&quot;&gt;MySQL input plugin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee33da9840e32d7494ea0ffee4c0f3b6600a85c9" translate="yes" xml:space="preserve">
          <source>Add nanosecond duration literal support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47aaaa4b0782ab31ed112d819aaee0288a342ea3" translate="yes" xml:space="preserve">
          <source>Add new API endpoint for dynamically overriding sections of the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb94ed70fde66bedb7a5d3177d5e763479fb127b" translate="yes" xml:space="preserve">
          <source>Add new HTTP statistics to monitoring.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="680cfc871a2d8b77ca85ec6ad14511c9fbe3752f" translate="yes" xml:space="preserve">
          <source>Add new alert API, with support for configuring handlers and topics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f89b614da2fddfb6ce1e6c4cc27664d402e85f29" translate="yes" xml:space="preserve">
          <source>Add new profile endpoint for gathering all debug profiles and queries in single archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2e3363b27752827c12b3ea0d6e9ac9afd3a208b" translate="yes" xml:space="preserve">
          <source>Add new query property for aligning group by intervals to start times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d07ca26c3805ee94845c1c83695f5ab5dc3f7e36" translate="yes" xml:space="preserve">
          <source>Add optional ability to define PID as a tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ec36f2b01ede343369b1054090ddb44b926df08" translate="yes" xml:space="preserve">
          <source>Add page spinners to pages that did not have them</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c95b44e6e38f1b3c301150e52d80bf7d56ccdd" translate="yes" xml:space="preserve">
          <source>Add port to all graphite log output to help with debugging multiple endpoints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dd2f3872f817725a1f85591f7df61728096c92d" translate="yes" xml:space="preserve">
          <source>Add pprof tool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d495e8112eb019d19630f5effb324aac046e962f" translate="yes" xml:space="preserve">
          <source>Add precision rounding to all metrics on collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18acaad126c2b97baedc810ee688f586f9086439" translate="yes" xml:space="preserve">
          <source>Add sample function to query language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27b58b388e7da33c7bc566a03985b7b8d43ddc42" translate="yes" xml:space="preserve">
          <source>Add server hostname for each Docker measurements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="810d6950c898776228ba84823a8b9223a9dea7ce" translate="yes" xml:space="preserve">
          <source>Add stats and diagnostics to the TSM engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c863d6e47fceb381cdf10b5f38994646f88a1faf" translate="yes" xml:space="preserve">
          <source>Add stats for active compactions, compaction errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="246f088ed5f4ccd50cc21257e8d2c0e316723a1d" translate="yes" xml:space="preserve">
          <source>Add support for &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/inputs/mongodb&quot;&gt;MongoDB&lt;/a&gt; client certificates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30133e4a5044fbbfac64abca83d15292a782d020" translate="yes" xml:space="preserve">
          <source>Add support for JWT token authentication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="365e602301667894c9749dcd536c75829a8191c7" translate="yes" xml:space="preserve">
          <source>Add support for Linux sysctl-fs metrics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55de88304c0f106ff33f4d2f1273adf128f911f6" translate="yes" xml:space="preserve">
          <source>Add support for Slack icon emojis and custom usernames.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ffa1063f0c968c37d5f8a69f8e37767e826b80" translate="yes" xml:space="preserve">
          <source>Add support for Tengine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="651e5792425238b6b349aae6dbe3bc140871327a" translate="yes" xml:space="preserve">
          <source>Add support for enabling and disabling &lt;a href=&quot;../../guides/advanced-kapacitor/index#tickscript-management&quot;&gt;TICKscripts that were created outside Chronograf&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52c4fe7b689a43081069c1075eb227af5606bb7d" translate="yes" xml:space="preserve">
          <source>Add support for name templates and udev tags to the &lt;a href=&quot;https://github.com/influxdata/telegraf/blob/master/plugins/inputs/system/DISK_README.md#diskio-input-plugin&quot;&gt;DiskIO input plugin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b787a670c6c977d146bd3c904e030282863d12" translate="yes" xml:space="preserve">
          <source>Add support for precision in &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/inputs/http_listener&quot;&gt;HTTP Listener input plugin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8b51d26c64aad327977c266d84bf3e71d051c1a" translate="yes" xml:space="preserve">
          <source>Add support for secure transmission via collectd.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6aa75e6c9eb766122374b8a99b0f5f555e0d268" translate="yes" xml:space="preserve">
          <source>Add support for string manipulation functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbde3d9ddca751e259c5f80a8c3aea667c33457d" translate="yes" xml:space="preserve">
          <source>Add support to SNMP for IP &amp;amp; MAC address conversion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d5176236069ce1c018d02899b4a340aa81a4393" translate="yes" xml:space="preserve">
          <source>Add support to SNMP for OID index suffixes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43045884b31c6f3ccdf9fcd1887b556f8cff17db" translate="yes" xml:space="preserve">
          <source>Add system information to /debug/vars</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ac7a92e69183b500d68e5d8ffae68254404c0e8" translate="yes" xml:space="preserve">
          <source>Add tcp keep-alive to &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/inputs/socket_listener&quot;&gt;Socket Listener input plugin&lt;/a&gt; and &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/outputs/socket_writer&quot;&gt;Socket Writer output plugin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27ca0ae0fc1568ea47d514a27023dd56e8952c0a" translate="yes" xml:space="preserve">
          <source>Add the &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/inputs/interrupts&quot;&gt;Interrupts input plugin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53ea2dbbf945fb5735e5ddfc491e5038aed3d917" translate="yes" xml:space="preserve">
          <source>Add the Holt-Winters function to the query. Here, we use &lt;code&gt;HOLT_WINTERS_WITH_FIT()&lt;/code&gt; to view both the fitted values and the predicted values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a1dfc87768057bfc120dc9e71c610ca6b5ca4ab" translate="yes" xml:space="preserve">
          <source>Add the Source Indicator icon to the Configuration and Admin pages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="013c50722f3d7455a6d77663b3040cbfbbfb8d65" translate="yes" xml:space="preserve">
          <source>Add the above snippet to your kapacitor.conf file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a44b96bc743ee6ba34ff45ab42989571e0cd96d2" translate="yes" xml:space="preserve">
          <source>Add the missing DefaultDatabase method to several InfluxQL statements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="883d3462308450e7629ecb0dc46d3840ec36c426" translate="yes" xml:space="preserve">
          <source>Add these methods to the &lt;code&gt;main.go&lt;/code&gt; file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c6d2ad4189eee6ab19a505637b4cb342c58a982" translate="yes" xml:space="preserve">
          <source>Add this method to the &lt;code&gt;main.go&lt;/code&gt; file which sends back every point it receives to Kapacitor via the agent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f69c0683447e613a0fe18b04678e84dec7b1e8b" translate="yes" xml:space="preserve">
          <source>Add this snippet to your Kapacitor configuration file (typically located at &lt;code&gt;/etc/kapacitor/kapacitor.conf&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79cb96db0c4d0099ea7ca71d4f5e4415eae691d9" translate="yes" xml:space="preserve">
          <source>Add tls support for certs to RabbitMQ input plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99fa933a1080cc5cfc90e3aeaf262b9e914bf53e" translate="yes" xml:space="preserve">
          <source>Add tsm file export to influx_inspect tool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e935666e85861040d9c8bb9bb267c73bf08eea28" translate="yes" xml:space="preserve">
          <source>Add use_random_partitionkey option to the &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/outputs/kinesis&quot;&gt;Kinesis output plugin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dafd6429547781b189cb786a8be0570a9e134c0" translate="yes" xml:space="preserve">
          <source>Add userstats to the &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/inputs/mysql&quot;&gt;MySQL input plugin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1a2c4d571ece5a7f9cefe7334299882c329777b" translate="yes" xml:space="preserve">
          <source>Add write timeout to Riemann output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d2637895e3ac981fcb386ee8f5c389b9f585c4" translate="yes" xml:space="preserve">
          <source>AddRemoveNode</source>
          <target state="translated">AddRemoveNode</target>
        </trans-unit>
        <trans-unit id="c6f073429d03e2057cde70892f4d7ad3094b9b62" translate="yes" xml:space="preserve">
          <source>Added capability to send metrics through HTTP API for OpenTSDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="accc00389899355b97f811cf44ba0c7200acc897" translate="yes" xml:space="preserve">
          <source>Added favicon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="016582d1c982657e6fc300745000ee2725c03c6a" translate="yes" xml:space="preserve">
          <source>Added response_timeout property to prometheus input plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c6e6f6ce84cfd67d03a20f23c2fd3a55de17f86" translate="yes" xml:space="preserve">
          <source>Adding Gauge and Counter metric types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77de4d63140a80f4ddf78a54aaf5da8371e4d82d" translate="yes" xml:space="preserve">
          <source>Adding Tags:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47f31de900ac273a1ef29ec6359998f0db2adcab" translate="yes" xml:space="preserve">
          <source>Adding a Custom Field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c93ccae832d950635d30c452db8f96529ead0a6c" translate="yes" xml:space="preserve">
          <source>Adding ability to use parameters in queries in the v2 client using the &lt;code&gt;Parameters&lt;/code&gt; map in the &lt;code&gt;Query&lt;/code&gt; struct.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f289bc2e4ef1748db42c5315c5761b0723b1bdf3" translate="yes" xml:space="preserve">
          <source>Adding the tags in the graylog output plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e8428e85c661f03dd33db8f12b20a010ab5be5e" translate="yes" xml:space="preserve">
          <source>Addition</source>
          <target state="translated">Addition</target>
        </trans-unit>
        <trans-unit id="035d2d2ccd144c64d057a97f013c29e446e20d82" translate="yes" xml:space="preserve">
          <source>Addition of scraping and discovering for Prometheues style data collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5b23a488ddd078a560afb600519b24488be4ce9" translate="yes" xml:space="preserve">
          <source>Additional Naming Guidelines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af2de5be8b71b762be163734e8ac431fc8c5395d" translate="yes" xml:space="preserve">
          <source>Additional information including client setup can be found &lt;a href=&quot;https://collectd.org/wiki/index.php/Networking_introduction#Cryptographic_setup&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a481b8283046567085da122e8a2cfdeeca0fa03" translate="yes" xml:space="preserve">
          <source>Additional inputs (or outputs) of the same type can be specified, just define more instances in the config file. It is highly recommended that you utilize &lt;code&gt;name_override&lt;/code&gt;, &lt;code&gt;name_prefix&lt;/code&gt;, or &lt;code&gt;name_suffix&lt;/code&gt; config options to avoid measurement collisions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a80543d734c5686f12ad93f7dfe8dee69ca77edd" translate="yes" xml:space="preserve">
          <source>Additional tags can be added to a metric that don&amp;rsquo;t exist on the received metric. You can add additional tags by specifying them after the pattern. Tags have the same format as the line protocol. Multiple tags are separated by commas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29ff6c6c13c3e3bdb93e56cd1237d7eba1aea82d" translate="yes" xml:space="preserve">
          <source>Additionally the vars &lt;code&gt;OK&lt;/code&gt;, &lt;code&gt;INFO&lt;/code&gt;, &lt;code&gt;WARNING&lt;/code&gt;, and &lt;code&gt;CRITICAL&lt;/code&gt; have been defined to correspond with the return value of the &lt;code&gt;level&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dbaaf5e575b6fc8f4634479870d2d2c1993c36b" translate="yes" xml:space="preserve">
          <source>Additionally using &lt;code&gt;AND&lt;/code&gt;, &lt;code&gt;OR&lt;/code&gt; in the &lt;code&gt;SELECT&lt;/code&gt; clause of a query will not behave as mathematical operators and simply yield empty results, as they are tokens in InfluxQL. However, you can apply the bitwise operators &lt;code&gt;&amp;amp;&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt; and &lt;code&gt;^&lt;/code&gt; to boolean data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08124452a1aee7d33c9c352de5a73a956410f6a6" translate="yes" xml:space="preserve">
          <source>Additionally, for greater security, if you want to require re-authentication every time the browser is closed, set &lt;code&gt;AUTH_DURATION&lt;/code&gt; to &lt;code&gt;0&lt;/code&gt;. This makes the cookie transient (aka &amp;ldquo;in-memory&amp;rdquo;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c184309dacf640633ae8205062207ba010897424" translate="yes" xml:space="preserve">
          <source>Additive changes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6245f4947e844b622af771e9437ecd52a2df2b24" translate="yes" xml:space="preserve">
          <source>Address Out of Memory Error when Dropping Measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d499a143fa0895f35e1949dd0672d28787aa0c0" translate="yes" xml:space="preserve">
          <source>Address deadlock issue causing 1.3.0 to become unresponsive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e4cbe0979b804deac2c536f75ad32f9ac2664bf" translate="yes" xml:space="preserve">
          <source>Address of TCP endpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef9d798191d95335bff9cbe8f9845e7b1b51436" translate="yes" xml:space="preserve">
          <source>Address slow startup time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25eb583e3a1b9873f1ab58b56f97af801c700689" translate="yes" xml:space="preserve">
          <source>Adds missing strLength function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de176fb16e0e36fa93be1aa979facf21f731812f" translate="yes" xml:space="preserve">
          <source>Adds monitoring statistic for on-disk shard size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49741fedab9c8302a452c7cda9ad7a06db1aee18" translate="yes" xml:space="preserve">
          <source>Admin user management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5786a69c1e883e3bf1f100469f886c33119fde18" translate="yes" xml:space="preserve">
          <source>Admin users</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9d94cc1c9969bcfd23d296062e04e5b182836fa" translate="yes" xml:space="preserve">
          <source>Admin users have &lt;code&gt;READ&lt;/code&gt; and &lt;code&gt;WRITE&lt;/code&gt; access to all databases and full access to the following administrative queries:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8be3d1264310c3b8c848d4b90d5206179a40cc4" translate="yes" xml:space="preserve">
          <source>Administration</source>
          <target state="translated">Administration</target>
        </trans-unit>
        <trans-unit id="4a534b851965af41f5f1f142fc8368864054170e" translate="yes" xml:space="preserve">
          <source>Advanced &lt;code&gt;GROUP BY time()&lt;/code&gt; queries rely on the &lt;code&gt;time_interval&lt;/code&gt;, the &lt;code&gt;offset_interval&lt;/code&gt; , and on InfluxDB&amp;rsquo;s preset time boundaries to determine the raw data included in each time interval and the timestamps returned by the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc0e615995d43ca39192a6e29e8680a993d7aba9" translate="yes" xml:space="preserve">
          <source>Advanced &lt;code&gt;GROUP BY time()&lt;/code&gt; queries require an InfluxQL &lt;a href=&quot;../functions/index&quot;&gt;function&lt;/a&gt; in the &lt;a href=&quot;#the-basic-select-statement&quot;&gt;&lt;code&gt;SELECT&lt;/code&gt; clause&lt;/a&gt; and a time range in the &lt;a href=&quot;#the-where-clause&quot;&gt;&lt;code&gt;WHERE&lt;/code&gt; clause&lt;/a&gt;. Note that the &lt;code&gt;GROUP BY&lt;/code&gt; clause must come after the &lt;code&gt;WHERE&lt;/code&gt; clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4536ac5a049c4bcd17e361112a3c2db7877b3346" translate="yes" xml:space="preserve">
          <source>Advanced GROUP BY time() Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe0e76bc56a60ab250d0746a4574b163bca878d" translate="yes" xml:space="preserve">
          <source>Advanced Kapacitor Usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e8e20f8c57d4ff21f4c62fce5ac2a9c501afe22" translate="yes" xml:space="preserve">
          <source>Advanced Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7850ce9b1fe590ce6bdb6179430fa401c2e7129b" translate="yes" xml:space="preserve">
          <source>Aerospike plugin refactored to use official client library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="424b8070e336f3b73d7c737d34ced9c63e2f5f16" translate="yes" xml:space="preserve">
          <source>After choose the topic to connect with &quot;xxx&quot;, click &quot;Confirm Add&quot; button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5bda4d562afb2dea8f9261b21cf85049edc11bc" translate="yes" xml:space="preserve">
          <source>After struggling with LevelDB and its variants for a year we decided to move over to BoltDB, a pure Golang database heavily inspired by LMDB, a mmap B+Tree database written in C. It has the same API semantics as LevelDB: a key value store where the keyspace is ordered. Many of our users were surprised. Our own posted tests of the LevelDB variants vs. LMDB (a mmap B+Tree) showed RocksDB as the best performer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="243ca8166c3b38abfe193344f277fd04d5f507cf" translate="yes" xml:space="preserve">
          <source>After writing the new point to InfluxDB:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb9efd39045c7dc25e5cc9f91b89d509369f335a" translate="yes" xml:space="preserve">
          <source>After you submit the new point, InfluxDB overwrites &lt;code&gt;val_1&lt;/code&gt; with the new field value and leaves the field &lt;code&gt;val_2&lt;/code&gt; alone:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9125a44528172dec31e14e54f065268a5ff5bab0" translate="yes" xml:space="preserve">
          <source>Agent Configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b10c2d24e7c0f4baef37e74e4209c8ddcd3d08ba" translate="yes" xml:space="preserve">
          <source>Aggreate multiple events into a single event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a8e8189f1313ddd69a6c196be4e792c160e8ade" translate="yes" xml:space="preserve">
          <source>Aggregate</source>
          <target state="translated">Aggregate</target>
        </trans-unit>
        <trans-unit id="ea271ed942253706ceb3d04f584ab3bcfc2b2ae7" translate="yes" xml:space="preserve">
          <source>Aggregate functions return a single calculated value and there is no obvious single value to return for any unaggregated fields or tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a0670a4cfb039bdac744063f4ae0a1e4f52da91" translate="yes" xml:space="preserve">
          <source>Aggregate, select, transform, and predict data with InfluxQL functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca2776f4e850b7175ce217fa728a20f1b8c81d95" translate="yes" xml:space="preserve">
          <source>Aggregation Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f248a28a1e2ab09f5696c0608ca1a25b458bc9fa" translate="yes" xml:space="preserve">
          <source>Aggregation functions do not support specifying standalone &lt;a href=&quot;../../concepts/glossary/index#field-key&quot;&gt;field keys&lt;/a&gt; or &lt;a href=&quot;../../concepts/glossary/index#tag-key&quot;&gt;tag keys&lt;/a&gt; in the &lt;a href=&quot;../data_exploration/index#select-clause&quot;&gt;&lt;code&gt;SELECT&lt;/code&gt; clause&lt;/a&gt;. Aggregation functions return a single calculated value and there is no obvious single value to return for any unaggregated fields or tags. Including a standalone field key or tag key with an aggregation function in the &lt;code&gt;SELECT&lt;/code&gt; clause returns an error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88a712aa19feedd2b5d39b7aaf43fc0ec0206cff" translate="yes" xml:space="preserve">
          <source>Aggregations</source>
          <target state="translated">Aggregations</target>
        </trans-unit>
        <trans-unit id="324fdcb295c68c6c81e60873776910a6c0802f74" translate="yes" xml:space="preserve">
          <source>Aggregator Configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="610642f20715dba645fe09fb4d75f87042e97ef0" translate="yes" xml:space="preserve">
          <source>Aggregator Configuration Examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a50369bbba16205fa21f834c018b96a36dc92fd" translate="yes" xml:space="preserve">
          <source>Aggregator and Processor Plugins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efc97edb34cca30c97a69798df860c5fd16c5497" translate="yes" xml:space="preserve">
          <source>Aggregator plugins receive raw metrics from input plugins and create aggregate metrics from them. The aggregate metrics are then passed to the configured output plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be0223ab99c0b6366e01a6efef1a724e1b4b330e" translate="yes" xml:space="preserve">
          <source>Aggregators and Processor Plugins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b969680a4943d3e0dd28ec47387f131504ca1678" translate="yes" xml:space="preserve">
          <source>Alert</source>
          <target state="translated">Alert</target>
        </trans-unit>
        <trans-unit id="5ba2949c80ebffb7b35009d4f78671711c631423" translate="yes" xml:space="preserve">
          <source>Alert Handlers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2c24414145bc6b1811264cc21f5a5c5036663b4" translate="yes" xml:space="preserve">
          <source>Alert History Management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6202170bc3cc2f2ae33776e3ad223138ecf387a0" translate="yes" xml:space="preserve">
          <source>Alert Level Mapping: OK - Sends a -2 priority level. Info - Sends a -1 priority level. Warning - Sends a 0 priority level. Critical - Sends a 1 priority level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="192471c82beb2a88c41a8f90243fd038593ef8f1" translate="yes" xml:space="preserve">
          <source>Alert Match Expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a99a182eef69f3cf4ef36386cb84388ccd785fb" translate="yes" xml:space="preserve">
          <source>Alert Node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f5be50a6fef548ff543669c85ebc2cce47c08ed" translate="yes" xml:space="preserve">
          <source>Alert handlers support match expressions that filters which alert events the handler processes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63a35bb70e5671ac56d2f653767f7fccb5b033c5" translate="yes" xml:space="preserve">
          <source>AlertNode</source>
          <target state="translated">AlertNode</target>
        </trans-unit>
        <trans-unit id="a76d1dc8171a3205bf8e7bba84c8adfb7a6303a9" translate="yes" xml:space="preserve">
          <source>Alerta</source>
          <target state="translated">Alerta</target>
        </trans-unit>
        <trans-unit id="e82449c88fb757601526f7feb2e714aa0e3261a9" translate="yes" xml:space="preserve">
          <source>Alerta &amp;ndash; Post alert message to Alerta.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7936fbece27405cf44b2957b3baa5f6733d76bf1" translate="yes" xml:space="preserve">
          <source>Alerta Environment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c851b166d57078366b5333c949c97b6f9cacbad" translate="yes" xml:space="preserve">
          <source>Alerta Event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17e09a56de2ad3ff9fe8a9ee558136218b9ed21b" translate="yes" xml:space="preserve">
          <source>Alerta Group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e529c70f499184d7ee7e62187ab72bc50f425226" translate="yes" xml:space="preserve">
          <source>Alerta Origin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c026e01c858634e42b5b38ab8e5baee32904935" translate="yes" xml:space="preserve">
          <source>Alerta Resource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e87151697aafd7f2572664820389946edc443e8" translate="yes" xml:space="preserve">
          <source>Alerta Services</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4133407945814aaf985e94b01f2714a09196f9d" translate="yes" xml:space="preserve">
          <source>Alerta Token</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28822364ee7b30f0ac883a595cdb09a100361a98" translate="yes" xml:space="preserve">
          <source>Alerta Value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fac003faadb4b5c9899c8407c6cb754b2bb0814" translate="yes" xml:space="preserve">
          <source>Alerta also accepts optional alert information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bd98b0c5766ce170610ca1ad19d6591d12ea1d5" translate="yes" xml:space="preserve">
          <source>Alerta authentication token prefix. If empty uses Bearer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46b4fa8ddbf21e57f1969d4c742408445585b705" translate="yes" xml:space="preserve">
          <source>Alerta authentication token. If empty uses the token from the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9011260ddb7dbf866275fc72560008470a77a92c" translate="yes" xml:space="preserve">
          <source>Alerta environment. Can be a template and has access to the same data as the &lt;a href=&quot;index#details&quot;&gt;AlertNode.Details&lt;/a&gt; property. Defaut is set from the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24c05853b3b283b3e33ef649b2c38177c154c3c8" translate="yes" xml:space="preserve">
          <source>Alerta environment. Can be a template and has access to the same data as the AlertNode.Details property. Defaut is set from the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f05aa338911aae6a7cc7cb21bd9426df10fae77" translate="yes" xml:space="preserve">
          <source>Alerta event. Can be a template and has access to the same data as the idInfo property. Default: {{ .ID }}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7f839c6ed1ea4622ef6f493516822b31bfa0d4b" translate="yes" xml:space="preserve">
          <source>Alerta event. Can be a template and has access to the same data as the idInfo property. Default: {{ .ID }}.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1defc8b3372ebea51c99669bbd65b3dec12d12ae" translate="yes" xml:space="preserve">
          <source>Alerta group. Can be a template and has access to the same data as the &lt;a href=&quot;index#details&quot;&gt;AlertNode.Details&lt;/a&gt; property. Default: {{ .Group }}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa027b8a3a4dabd0d1fdf277f6c3b208be86b02" translate="yes" xml:space="preserve">
          <source>Alerta group. Can be a template and has access to the same data as the AlertNode.Details property. Default: {{ .Group }}.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f58811a1d6a869dd96301d942fe22e684c8a039" translate="yes" xml:space="preserve">
          <source>Alerta origin. If empty uses the origin from the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08c8a01709125092b06d7856b3ac6801a6faf1ed" translate="yes" xml:space="preserve">
          <source>Alerta resource. Can be a template and has access to the same data as the &lt;a href=&quot;index#details&quot;&gt;AlertNode.Details&lt;/a&gt; property. Default: {{ .Name }}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eaa9410ef4a19e69bf8e83e1ef29e943b67e79f" translate="yes" xml:space="preserve">
          <source>Alerta resource. Can be a template and has access to the same data as the AlertNode.Details property. Default: {{ .Name }}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2210d52cfc0dc741dc9b2cfc80c9077602782f4e" translate="yes" xml:space="preserve">
          <source>Alerta value. Can be a template and has access to the same data as the &lt;a href=&quot;index#details&quot;&gt;AlertNode.Details&lt;/a&gt; property. Default is an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b40db53121db087cc847a3315aa2efd3473d06ae" translate="yes" xml:space="preserve">
          <source>Alerta value. Can be a template and has access to the same data as the AlertNode.Details property. Default is an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0efe0b2c75c1c670b3146f5f276e23a667f15ec" translate="yes" xml:space="preserve">
          <source>Alerts</source>
          <target state="translated">Alerts</target>
        </trans-unit>
        <trans-unit id="4fedb7e63c9c815e0a0234dea132aba32be4adcf" translate="yes" xml:space="preserve">
          <source>Alerts are grouped into topics. An alert handler &amp;ldquo;listens&amp;rdquo; on a topic for any new events. You can either specify the alert topic in the TICKscript or one will be generated for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a633355b839076e218aa2fb738ff28b1c67dbaf8" translate="yes" xml:space="preserve">
          <source>Aliases are used to prefix all fields from the respective nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c83b0ec2d98a2ca38077be2f03102aedeb0ab261" translate="yes" xml:space="preserve">
          <source>Align</source>
          <target state="translated">Align</target>
        </trans-unit>
        <trans-unit id="ae5f6669d6069d8fadad1a50c7199f98fa0984d4" translate="yes" xml:space="preserve">
          <source>Align binary math expression streams by time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d17cc0dd6497a7e73a79d9d9448b31e05c40d96" translate="yes" xml:space="preserve">
          <source>Align start and stop times for queries with even boundaries of the &lt;a href=&quot;index#every&quot;&gt;QueryNode.Every&lt;/a&gt; property. Does not apply if using the &lt;a href=&quot;index#cron&quot;&gt;QueryNode.Cron&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06bc4826b0e746fdebcc3aa2594ad06a21cd1470" translate="yes" xml:space="preserve">
          <source>Align the group by time intervals with the start time of the query</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a263fe57dde7e6e3c7d9705b637cb6aabab0e73" translate="yes" xml:space="preserve">
          <source>AlignGroup</source>
          <target state="translated">AlignGroup</target>
        </trans-unit>
        <trans-unit id="6a72085653e4c5be8c7640c868ef787cbcf063d1" translate="yes" xml:space="preserve">
          <source>All</source>
          <target state="translated">All</target>
        </trans-unit>
        <trans-unit id="421782775bf1c54673936defd22b99d788efcf3f" translate="yes" xml:space="preserve">
          <source>All Changes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07e4ea73b9562625159b6f59bb2782a6ef8ab918" translate="yes" xml:space="preserve">
          <source>All Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a86fd4b40f6a84b64c0eb49bec8b3bc6fb45a73e" translate="yes" xml:space="preserve">
          <source>All IDs must match this regex &lt;code&gt;^[-\._\p{L}0-9]+$&lt;/code&gt;, which is essentially numbers, unicode letters, &amp;lsquo;-&amp;rsquo;, &amp;lsquo;.&amp;rsquo; and &amp;lsquo;_&amp;lsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d41f1de59a78b639c3662fcaaf6054c830e50f" translate="yes" xml:space="preserve">
          <source>All Queries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="458114b822fa6575152bd2a6849e417efbc5799d" translate="yes" xml:space="preserve">
          <source>All configuration options can be specified in the configuration file or in an environment variable. The environment variable overrides the equivalent option in the configuration file. If a configuration option is not specified in either the configuration file or in an environment variable, InfluxDB uses its internal default configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1739fa96c1fe20912ee582ca2c20eaf38caa8e96" translate="yes" xml:space="preserve">
          <source>All data must be binary encoded and in the &lt;a href=&quot;../../concepts/glossary/index#line-protocol&quot;&gt;Line Protocol&lt;/a&gt; format. Our example shows the &lt;code&gt;--data-binary&lt;/code&gt; parameter from curl, which we will use in all examples on this page. Using any encoding method other than &lt;code&gt;--data-binary&lt;/code&gt; will likely lead to issues; &lt;code&gt;-d&lt;/code&gt;, &lt;code&gt;--data-urlencode&lt;/code&gt;, and &lt;code&gt;--data-ascii&lt;/code&gt; may strip out newlines or introduce new, unintended formatting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e8ee01574c80fd539b1a7c8148c21071be65556" translate="yes" xml:space="preserve">
          <source>All examples will assume that Kapacitor is running on &lt;code&gt;http://localhost:9092&lt;/code&gt; and InfluxDB on &lt;code&gt;http://localhost:8086&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67880e46f6637cd73cb184f7221fc17d07135b51" translate="yes" xml:space="preserve">
          <source>All expressions in TICKscript begin with the &lt;code&gt;lambda:&lt;/code&gt; keyword.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="083278faae5638007c9bddbeceb8e3e7e8845237" translate="yes" xml:space="preserve">
          <source>All field key-value pairs for the point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ca7d4a4fc4378414421197ff04bf7c6cfcd624" translate="yes" xml:space="preserve">
          <source>All field or tag identifiers must be double quoted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93aca471ef78fecaceab83fa380b886913f84c7e" translate="yes" xml:space="preserve">
          <source>All incoming data will be rounded to the nearest 1 second boundary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f50b888df2fb51095135bfc6a18c4bf2f15ab709" translate="yes" xml:space="preserve">
          <source>All incoming data will be truncated to 1 second resolution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0172271cd30b33c133021ef6232d115e5a9b4f9f" translate="yes" xml:space="preserve">
          <source>All of the data in the measurement &lt;code&gt;fleeting&lt;/code&gt; fall under the &lt;code&gt;DEFAULT&lt;/code&gt; RP called &lt;code&gt;one_hour&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16c4f62954dc5609354d85e476fb987fc27e8126" translate="yes" xml:space="preserve">
          <source>All of the stuff we&amp;rsquo;ve just covered is stored in a database - the sample data are in the database &lt;code&gt;my_database&lt;/code&gt;. An InfluxDB &lt;em&gt;database&lt;/em&gt; is similar to traditional relational databases and serves as a logical container for users, retention policies, continuous queries, and, of course, your time series data. See &lt;a href=&quot;../../query_language/authentication_and_authorization/index&quot;&gt;Authentication and Authorization&lt;/a&gt; and &lt;a href=&quot;../../query_language/continuous_queries/index&quot;&gt;Continuous Queries&lt;/a&gt; for more on those topics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c54c735cd6f6c6cfda0cddf091d33bc2ecc1d5" translate="yes" xml:space="preserve">
          <source>All queries must be URL encoded and follow &lt;a href=&quot;../../query_language/index&quot;&gt;InfluxQL&lt;/a&gt; syntax. Our example shows the &lt;code&gt;--data-urlencode&lt;/code&gt; parameter from &lt;code&gt;curl&lt;/code&gt;, which we use in all examples on this page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b75b88e6dadfa9b009b9a9a096c8150c899528d1" translate="yes" xml:space="preserve">
          <source>All recordings are assigned an ID which is returned in this format with a link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="023cf9b9222d52b349ee39a8e50748e69d118d51" translate="yes" xml:space="preserve">
          <source>All replays are assigned an ID which is returned in this format with a link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4243e0f2803cadd3a3ab9c1824949a41b707e5f5" translate="yes" xml:space="preserve">
          <source>All requests are versioned and namespaced using the base path &lt;code&gt;/kapacitor/v1/&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9010c9b6ba7e51eed78759b9404e5f9a7a401a68" translate="yes" xml:space="preserve">
          <source>All requests can return JSON in the following format to provide more information about a failed request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56e0e9280e54658c9a9110514a979840a54813e2" translate="yes" xml:space="preserve">
          <source>All requests can return these response codes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9be7728180d072a0f4fb4728d6441d03dde79bf6" translate="yes" xml:space="preserve">
          <source>All sensitive information will not be returned in the request body. Instead a boolean value will be in its place indicating whether the value is empty or not. A list of which options are redacted is returned for each element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9521fb7e7aa7f8a927eaa755c07fc3dc79ee8d50" translate="yes" xml:space="preserve">
          <source>All tag key-value pairs for the point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4097cb57333b7811902962c57b3704ba1fc37280" translate="yes" xml:space="preserve">
          <source>All three email addresses will receive the alert message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a24e0a768d576330ac5c725623ce18dd918f1778" translate="yes" xml:space="preserve">
          <source>All three of these methods will produce the same results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7228415c0fb70c2ccb7230296d450fa283760bdc" translate="yes" xml:space="preserve">
          <source>All three of these temperatures affect the quality of the print (some being more important than others), but we want to make sure and track all of them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="588c04234e3b4da0f43e93a39943d47ab7f3d039" translate="yes" xml:space="preserve">
          <source>All timestamp formats support basic arithmetic. Add (&lt;code&gt;+&lt;/code&gt;) or subtract (&lt;code&gt;-&lt;/code&gt;) a time from a timestamp with a &lt;a href=&quot;../spec/index#durations&quot;&gt;duration literal&lt;/a&gt;. Note that InfluxQL requires a whitespace between the &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; and the duration literal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1388f340582fa92eb72791009458045a7438f00" translate="yes" xml:space="preserve">
          <source>Allow &lt;code&gt;@&lt;/code&gt; symbol in password for the ipmi_sensor plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eda447f12b256e6f7e68270041453ce5e210b82a" translate="yes" xml:space="preserve">
          <source>Allow a non-admin to call &amp;ldquo;use&amp;rdquo; for the influx CLI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46f129ee5f548cf2ec6626dfb144280929f92269" translate="yes" xml:space="preserve">
          <source>Allow add items to array config via ENV.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0373f30ef93fdf47873e16f467305f0bf591ec53" translate="yes" xml:space="preserve">
          <source>Allow any variant of the help option to trigger the help.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e587e60d78efd2dc7cde9e6e97258cfae4cf0e" translate="yes" xml:space="preserve">
          <source>Allow blank lines in the line protocol input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="516119010be1b268bf553e66e68e3265257ed3d2" translate="yes" xml:space="preserve">
          <source>Allow changing jolokia attribute delimiter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b6f625fbc27eda56efcb963a8e78916398d2245" translate="yes" xml:space="preserve">
          <source>Allow duration / duration in TICKscript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="622577ac77b5ef4c56fce816a89a6ba6eb4238db" translate="yes" xml:space="preserve">
          <source>Allow non-admin users to execute SHOW DATABASES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe41c5cecea45d6804d8a0cebce24fa42ab8e57f" translate="yes" xml:space="preserve">
          <source>Allow numeric and non-string values for tag_keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e353fde31294ec0c1ca196f672a7fef8f844a4" translate="yes" xml:space="preserve">
          <source>Allow the database to ingest points by using &lt;code&gt;-pps&lt;/code&gt; to set the number of points per second allowed by the import. By default, pps is zero and &lt;code&gt;influx&lt;/code&gt; does not throttle importing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6732408c064ddeb8671d77684f1d315fc7ddab6" translate="yes" xml:space="preserve">
          <source>Allow users to add functions to existing Kapacitor rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36342ce2caf33d0d3c64c0b0439ddad9ba2039e5" translate="yes" xml:space="preserve">
          <source>Allow users to click the add query button after selecting singleStat as the &lt;a href=&quot;../../troubleshooting/frequently-asked-questions/index#what-visualization-types-does-chronograf-support&quot;&gt;visualization type&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2ca536add82052940e88fe887d9a93a3803d4b9" translate="yes" xml:space="preserve">
          <source>Allow users to delete Kapacitor configurations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d307f4ba5227235b9b080bbe106733fbb54a88d" translate="yes" xml:space="preserve">
          <source>Allow wildcard filtering of varnish stats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f250d0e51c94bf8028472cef829c539b8e65661" translate="yes" xml:space="preserve">
          <source>Allows insecure HTTPS connections to subscribers. This is useful when testing with self-signed certificates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4acd8d350cbe1efad5ca25e1705edad9446f1eb4" translate="yes" xml:space="preserve">
          <source>Alter CQs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad943bb75c91b7c3489743de5a23667a7eafc6dd" translate="yes" xml:space="preserve">
          <source>Alternatively, specify the precision once you&amp;rsquo;ve already connected to the CLI:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a00b4185fb63e1849e068c5a51e2b912b5ff7007" translate="yes" xml:space="preserve">
          <source>Alternatively, this can also be set using the command line switches:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97e2db79a597315046d7b7e7ae6d3f310dc23d0e" translate="yes" xml:space="preserve">
          <source>Always double quote string field values. More on quoting &lt;a href=&quot;#quoting&quot;&gt;below&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5461f87ef57c315283b8557d7ab95641926df175" translate="yes" xml:space="preserve">
          <source>Always use the demo config when outputting a new config.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c61766c282f173e1cbef74ce381349d9a21af503" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;index&quot;&gt;AlertNode&lt;/a&gt; can trigger an event of varying severity levels, and pass the event to alert handlers. The criteria for triggering an alert is specified via a &lt;a href=&quot;https://docs.influxdata.com/kapacitor/latest/tick/expr/&quot;&gt;lambda expression&lt;/a&gt;. See &lt;a href=&quot;index#info&quot;&gt;AlertNode.Info,&lt;/a&gt;&lt;a href=&quot;index#warn&quot;&gt;AlertNode.Warn,&lt;/a&gt; and &lt;a href=&quot;index#crit&quot;&gt;AlertNode.Crit&lt;/a&gt; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4cd32463af7969936429fdd780e1bc773cc96e2" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;index&quot;&gt;HTTPOutNode&lt;/a&gt; caches the most recent data for each group it has received.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3199a2a02b4cd3f726a17d95295e6fe7bc3d274d" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;index&quot;&gt;HTTPPostNode&lt;/a&gt; will take the incoming data stream and POST it to an HTTP endpoint. That endpoint may be specified as a positional argument, or as an endpoint property method on httpPost. Multiple endpoint property methods may be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aee7389ea8d997188341ecd1fa960b54e96c0612" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;index&quot;&gt;InfluxQLNode&lt;/a&gt; performs the available function from the InfluxQL language. These function can be performed on a stream or batch edge. The resulting edge is dependent on the function. For a stream edge, all points with the same time are accumulated into the function. For a batch edge, all points in the batch are accumulated into the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51a7f5889c0805348319dfa08732bae22f72121b" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;--auth0-organizations&lt;/code&gt; command line switch is also available. However, it is limited to a single organization and does not accept a comma-separated list like its environment variable equivalent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="321797c928bfe90666580fe4e9893b5ac47d8733" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;INTO&lt;/code&gt; query with a &lt;code&gt;GROUP BY *&lt;/code&gt; clause preserves &lt;code&gt;color&lt;/code&gt; as a tag in the newly written data. In this case, the &lt;code&gt;nugget&lt;/code&gt; point and the &lt;code&gt;rumple&lt;/code&gt; point remain unique points and InfluxDB does not overwrite any data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e067e3bbe4f071b3e8135f49c1d33d659d9c7d67" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;INTO&lt;/code&gt; query without a &lt;code&gt;GROUP BY *&lt;/code&gt; clause turns the &lt;code&gt;color&lt;/code&gt; tag into a field in the newly written data. In the initial data the &lt;code&gt;nugget&lt;/code&gt; point and the &lt;code&gt;rumple&lt;/code&gt; points are differentiated only by the &lt;code&gt;color&lt;/code&gt; tag. Once &lt;code&gt;color&lt;/code&gt; becomes a field, InfluxDB assumes that the &lt;code&gt;nugget&lt;/code&gt; point and the &lt;code&gt;rumple&lt;/code&gt; point are duplicate points and it overwrites the &lt;code&gt;nugget&lt;/code&gt; point with the &lt;code&gt;rumple&lt;/code&gt; point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcd29613666219a97f2491f0610be4945ceed298" translate="yes" xml:space="preserve">
          <source>An Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="527bc4a820f0e9f1b54be590146d493bc0018e1d" translate="yes" xml:space="preserve">
          <source>An InfluxDB measurement (&lt;code&gt;foodships&lt;/code&gt;) is similar to an SQL database table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="954a1bb19497e255c7bdafec1d795c1f803f31fa" translate="yes" xml:space="preserve">
          <source>An InfluxQL function that returns a single point from the range of specified points. See &lt;a href=&quot;../../query_language/functions/index#selectors&quot;&gt;InfluxQL Functions&lt;/a&gt; for a complete list of the available and upcoming selectors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1e7c43c38adfd7243c0cb03522142fd1879434e" translate="yes" xml:space="preserve">
          <source>An InfluxQL function that returns a value or a set of values calculated from specified points, but does not return an aggregated value across those points. See &lt;a href=&quot;../../query_language/functions/index#transformations&quot;&gt;InfluxQL Functions&lt;/a&gt; for a complete list of the available and upcoming aggregations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfc0b9647321b92c081d7d5ad3af8d09af11a17e" translate="yes" xml:space="preserve">
          <source>An InfluxQL function that returns an aggregated value across a set of points. See &lt;a href=&quot;../../query_language/functions/index#aggregations&quot;&gt;InfluxQL Functions&lt;/a&gt; for a complete list of the available and upcoming aggregations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf1afe52f726eaec368ca9f892727df6a61a8b4" translate="yes" xml:space="preserve">
          <source>An InfluxQL query that runs automatically and periodically within a database. Continuous queries require a function in the &lt;code&gt;SELECT&lt;/code&gt; clause and must include a &lt;code&gt;GROUP BY time()&lt;/code&gt; clause. See &lt;a href=&quot;../../query_language/continuous_queries/index&quot;&gt;Continuous Queries&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9165d73d5a667515adfba9a499154be985789f64" translate="yes" xml:space="preserve">
          <source>An agent is the core part of Telegraf that gathers metrics from the declared input plugins and sends metrics to the declared output plugins, based on the plugins enabled by the given configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31af4f89de8736579ffbf5c4dfa94ba0fe1cfa11" translate="yes" xml:space="preserve">
          <source>An alert topic is simply a namespace where alerts are grouped. When an alert event fires it is assigned to a topic. Multiple handlers can be defined on a topic and all handlers process each alert event for the topic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd974f44144ec3f8208d3a563d7eeed2f18f578" translate="yes" xml:space="preserve">
          <source>An empty string is equivalent to &lt;code&gt;0.0.0.0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="230852158455d4b4b080d648db6c0b710b7b6831" translate="yes" xml:space="preserve">
          <source>An example configuration file can be found &lt;a href=&quot;https://github.com/influxdb/kapacitor/blob/master/etc/kapacitor/kapacitor.conf&quot;&gt;here&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c582223fbd3be336134fc929a015ac80edb4dd5" translate="yes" xml:space="preserve">
          <source>An independent &lt;code&gt;influxd&lt;/code&gt; process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e993a8fc9f5e8175cb0d69aec04fc24a2b553e06" translate="yes" xml:space="preserve">
          <source>An operation that retrieves data from InfluxDB. See &lt;a href=&quot;../../query_language/data_exploration/index&quot;&gt;Data Exploration&lt;/a&gt;, &lt;a href=&quot;../../query_language/schema_exploration/index&quot;&gt;Schema Exploration&lt;/a&gt;, &lt;a href=&quot;../../query_language/database_management/index&quot;&gt;Database Management&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="311fe513938a0a224e56af27a04565e171cab530" translate="yes" xml:space="preserve">
          <source>An optional ID of a template to use instead of specifying a TICKscript and type directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db4e8ffdb82695364f0df877230bcccdd783e4f9" translate="yes" xml:space="preserve">
          <source>An optional maximum interval duration can be provided. An event will not be ignore (aka trigger an alert) if more than the maximum interval has elapsed since the last alert.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8d29c872ba42a053df8413e560c1b0a600c4607" translate="yes" xml:space="preserve">
          <source>Anchors not working as expected with case-insensitive regular expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3048f17085f38b6ecbfec14a2637fb38172503aa" translate="yes" xml:space="preserve">
          <source>And again the &lt;code&gt;vars&lt;/code&gt; output:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a70427a3467aedc8c25a47e4b744cbb2e1898a7c" translate="yes" xml:space="preserve">
          <source>And the batch TICKscript:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b00c8e17fd3c6d34ae7ede552b6ad45183f40fc9" translate="yes" xml:space="preserve">
          <source>And then to start InfluxDB now, run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f04f09231729f9f925330f0c4b2035cf1b7cf210" translate="yes" xml:space="preserve">
          <source>Annotated log output on the morning of August 28, 2016:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0878cc2f5c4c23ed0c52c0dfcedfeb6916f96a7" translate="yes" xml:space="preserve">
          <source>Another Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="673a65b355cf3d40a0560bc4b0bdde91c08dcac6" translate="yes" xml:space="preserve">
          <source>Another possible explanation has to do with your query&amp;rsquo;s time range. By default, most &lt;a href=&quot;../../query_language/data_exploration/index#the-basic-select-statement&quot;&gt;&lt;code&gt;SELECT&lt;/code&gt; queries&lt;/a&gt; cover the time range between &lt;code&gt;1677-09-21 00:12:43.145224194&lt;/code&gt; and &lt;code&gt;2262-04-11T23:47:16.854775806Z&lt;/code&gt; UTC. &lt;code&gt;SELECT&lt;/code&gt; queries that also include a &lt;a href=&quot;../../query_language/data_exploration/index#group-by-time-intervals&quot;&gt;&lt;code&gt;GROUP BY time()&lt;/code&gt; clause&lt;/a&gt;, however, cover the time range between &lt;code&gt;1677-09-21 00:12:43.145224194&lt;/code&gt; and &lt;a href=&quot;../../concepts/glossary/index#now&quot;&gt;&lt;code&gt;now()&lt;/code&gt;&lt;/a&gt;. If any of your data occur after &lt;code&gt;now()&lt;/code&gt; a &lt;code&gt;GROUP BY time()&lt;/code&gt; query will not cover those data points. Your query will need to provide &lt;a href=&quot;../../query_language/data_exploration/index#time-syntax&quot;&gt;an alternative upper bound&lt;/a&gt; for the time range if the query includes a &lt;code&gt;GROUP BY time()&lt;/code&gt; clause and if any of your data occur after &lt;code&gt;now()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bfa0f8789ba61e60b6aa228230b4dcddb426250" translate="yes" xml:space="preserve">
          <source>Any error encountered when creating the recording.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b6f2f71de432cd0e5fa02f30f9671a4a4790694" translate="yes" xml:space="preserve">
          <source>Any error encountered when executing the task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90680611294776d3e2da228b068d49ab61687af3" translate="yes" xml:space="preserve">
          <source>Any error encountered when reading the template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9dafa8e6f91dc3d2b377104aed8d80d72a5fd4f" translate="yes" xml:space="preserve">
          <source>Any error that occured while perfoming the replay</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5503904f057e7feb683f795c3b946f3af9bf2c7f" translate="yes" xml:space="preserve">
          <source>Any existing tag keys with tag values that exceed &lt;code&gt;max-values-per-tag&lt;/code&gt; will continue to accept writes, but writes that create a new tag value will fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deeaa4705797b2907606cdb757aeef705cf706ad" translate="yes" xml:space="preserve">
          <source>Any integer value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17707e533748cff6db77cf293037389cd477d609" translate="yes" xml:space="preserve">
          <source>Any integer value interpretted in nanoseconds or an influxql duration string, (i.e. 10000000000 is 10s)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c745c2262f85927910b723a486817aaeb533ebd" translate="yes" xml:space="preserve">
          <source>Any numeric value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b09582742f3ecf4bd82c64ce63f7af5d873f98d9" translate="yes" xml:space="preserve">
          <source>Any numerical value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="816d1b3f0aa0c926da1e14cc58bb514dd6f93c7e" translate="yes" xml:space="preserve">
          <source>Any numerical value - fill fields with given value, full outer join.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69468a253a7be06de8fcc29de5690c377f799144" translate="yes" xml:space="preserve">
          <source>Any numerical value Reports the given numerical value for time intervals with no data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d6b269d3866a473515f52eed2eacf71d7371f7" translate="yes" xml:space="preserve">
          <source>Any part of the template that is not a keyword is treated as a tag key. This can also be specified multiple times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="193473920d2f8670c533eae3fe44152ffdc93ae7" translate="yes" xml:space="preserve">
          <source>Any string that is a valid TICKscript lambda expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05bde3bc94c8fdd1d752e1cbfbfeeefcca859c97" translate="yes" xml:space="preserve">
          <source>Any string value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09227f10b6756f76f890373b0a5b1bb358ea3cca" translate="yes" xml:space="preserve">
          <source>Any string value that represents a valid Go regular expression &lt;a href=&quot;https://golang.org/pkg/regexp/&quot;&gt;https://golang.org/pkg/regexp/&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44910caafc69a9a6018fb71ca426e2b26650bfab" translate="yes" xml:space="preserve">
          <source>Any time the k8sAutoscale node changes a replica count, it emits a point. The point is tagged with the namespace, kind and resource name, using the NamespaceTag, KindTag, and ResourceTag properties respectively. In addition the group by tags will be preserved on the emitted point. The point contains two fields: &lt;code&gt;old&lt;/code&gt;, and &lt;code&gt;new&lt;/code&gt; representing change in the replicas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ca11a99d4f74ad6ff0c4f56a07fa2072325f0cf" translate="yes" xml:space="preserve">
          <source>Apach Mesos input plugin: very high-cardinality mesos-task metrics removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b5958b0f53cb499388dd9ee04a106a30b02c5d1" translate="yes" xml:space="preserve">
          <source>Apache</source>
          <target state="translated">Apache</target>
        </trans-unit>
        <trans-unit id="11909a134bbe4423e3e2ad8df4a9f01ed67fc59c" translate="yes" xml:space="preserve">
          <source>Apache Mesos improvements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd97e262425045836e888af9a81db7ffd2813894" translate="yes" xml:space="preserve">
          <source>Append the TCP or UDP input section to Telegraf&amp;rsquo;s config file and restart Telegraf for the change to take effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f34a306ffc20b65bcbe8d20172e180e710d80e3" translate="yes" xml:space="preserve">
          <source>Application Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b26abb8ffedc9fe9f2b78f5416f298eb7efba7e7" translate="yes" xml:space="preserve">
          <source>Arbitrary series number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f4a8e21123ebc8f49cedf95cb3746ba97069fa" translate="yes" xml:space="preserve">
          <source>Are bounded in time to a few minutes, hours, or maybe a day</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d31985fda87b26d6554bcfbfe7dbc398b51917e" translate="yes" xml:space="preserve">
          <source>As</source>
          <target state="translated">As</target>
        </trans-unit>
        <trans-unit id="90f3d8dd1f927fa066b520914782ef7a679336ca" translate="yes" xml:space="preserve">
          <source>As a quick check, we can verify the database is known to the metastore by running a &lt;code&gt;SHOW DATABASES&lt;/code&gt; command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8d1b8b50266e293b67878e98f479ad9f1132180" translate="yes" xml:space="preserve">
          <source>As a real-world example, you can take a backup of the &lt;code&gt;autogen&lt;/code&gt; retention policy for the &lt;code&gt;telegraf&lt;/code&gt; database since midnight UTC on February 1st, 2016 by using the command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f46c3bee841b5e91daeb1d25a87053ef018f4c9" translate="yes" xml:space="preserve">
          <source>As a result, we need to close the channel to let the &lt;code&gt;agent&lt;/code&gt; know that we will not be sending any more data, which can be done via the &lt;code&gt;Stop&lt;/code&gt; method. Once the &lt;code&gt;agent&lt;/code&gt; calls &lt;code&gt;Stop&lt;/code&gt; on the &lt;code&gt;handler&lt;/code&gt;, no other methods will be called and the &lt;code&gt;agent&lt;/code&gt; won&amp;rsquo;t stop until the channel is closed. This gives the UDF the chance to flush out any remaining data before it&amp;rsquo;s shutdown:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03f81f9e7b6fcb8f58af67d3138cdad2c67ef849" translate="yes" xml:space="preserve">
          <source>As a result, you will not be able to update a template if it introduces a breaking change in the TICKscript. In order to update a template in a breaking way you have two options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e374129fe97437a4dd7fb942d62edeac37b7faa3" translate="yes" xml:space="preserve">
          <source>As long as the size is more than a few bytes we know we captured data. If Kapacitor is not receiving data yet, check each layer: Telegraf -&amp;gt; InfluxDB -&amp;gt; Kapacitor. Telegraf will log errors if it cannot communicate to InfluxDB. InfluxDB will log an error about &lt;code&gt;connection refused&lt;/code&gt; if it cannot send data to Kapacitor. Run the query &lt;code&gt;SHOW SUBSCRIPTIONS&lt;/code&gt; to find the endpoint that InfluxDB is using to send data to Kapacitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="274bf4fe8ffe9341f8b38079a75f50a2795d998f" translate="yes" xml:space="preserve">
          <source>As mentioned earlier, Kapacitor provides an implementation of the communication layer for UDFs called the &lt;code&gt;agent&lt;/code&gt;. Our code need only implement an interface in order to take advantage of the &lt;code&gt;agent&lt;/code&gt; logic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee497d8039e5cd09722bc3db2ea0aeb2fee6a61f" translate="yes" xml:space="preserve">
          <source>As of release 1.1.0, Telegraf has the concept of Aggregator and Processor Plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c39fa086729c7335d149cdfd4c29fad0b7255521" translate="yes" xml:space="preserve">
          <source>As shown in the example above, InfluxQL allows you to specify the time range of your query in the &lt;code&gt;WHERE&lt;/code&gt; clause. You can use date-time strings wrapped in single quotes that have the format &lt;code&gt;YYYY-MM-DD HH:MM:SS.mmm&lt;/code&gt; ( &lt;code&gt;mmm&lt;/code&gt; is milliseconds and is optional, and you can also specify microseconds or nanoseconds). You can also use relative time with &lt;code&gt;now()&lt;/code&gt; which refers to the server&amp;rsquo;s current timestamp:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d672c390f666392bcaa7e284a97d945df29aab2f" translate="yes" xml:space="preserve">
          <source>As we learned earlier nodes communicate via edges. There is a Go type &lt;code&gt;kapacitor.Edge&lt;/code&gt; that handles this communication. All we want to do is read data from the edge and send it to HouseDB. Recall that we said that a &lt;code&gt;HouseDBOutNode&lt;/code&gt; &amp;ldquo;wants&amp;rdquo; whatever edge type we give it. Because the node accepts any edge type, we must define how to read stream or batch data. Lets update the &lt;code&gt;runOut&lt;/code&gt; method with an appropriate switch statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bad1e47810824babb31078e94077c5944ed414b" translate="yes" xml:space="preserve">
          <source>Asin returns the arcsine, in radians, of x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b958528f6028414e36bacd2591d4b6be481f7b4" translate="yes" xml:space="preserve">
          <source>Asinh returns the inverse hyperbolic sine of x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="724eed594888e4f2db225e3fb96a83accf5d07e7" translate="yes" xml:space="preserve">
          <source>Assign admin and remove admin permissions to or from a user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc27a2407227db7c1cff73c600793dcb9368008" translate="yes" xml:space="preserve">
          <source>Assign and remove permissions to or from a user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7700f4d14e6731f8f3cdd02b6747d75dfff96a98" translate="yes" xml:space="preserve">
          <source>Assign and remove roles to or from a user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58001764d76989c80a5859f1910c86e5a5abeb51" translate="yes" xml:space="preserve">
          <source>Assign and remove roles to or from a user (available in InfluxEnterprise only)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b923175f67537214fa72848884d8228dd4c59f2e" translate="yes" xml:space="preserve">
          <source>Assume that, in the long run, we&amp;rsquo;re only interested in the average number of orders by phone and by website at 30 minute intervals. In the next steps, we use RPs and CQs to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea531955a3e03fba6d5670a46234774993463aeb" translate="yes" xml:space="preserve">
          <source>Assuming everything is up and running we should be able to connect to and configure Chronograf. Point your web browser to &lt;code&gt;http://localhost:8888&lt;/code&gt; (replace &lt;code&gt;localhost&lt;/code&gt; with your server&amp;rsquo;s IP if you&amp;rsquo;re not running on &lt;code&gt;localhost&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ade459d89e377182cf051e204163dfa15fff13" translate="yes" xml:space="preserve">
          <source>Assuming step one was successful, &lt;code&gt;#chronograf&lt;/code&gt; should reveal at least two alert messages:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08f4f350e54b067073279dcd448db4fc8a235588" translate="yes" xml:space="preserve">
          <source>At &lt;strong&gt;11:00&lt;/strong&gt;, &lt;code&gt;cq_advanced_for_fill&lt;/code&gt; executes a query with the time range &lt;code&gt;WHERE time &amp;gt;= '9:00' AND time &amp;lt; '11:00'&lt;/code&gt;. &lt;code&gt;cq_advanced_for_fill&lt;/code&gt; writes two points to &lt;code&gt;average_passengers&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c67970ad1dc032227a0a26edfd2094e1da8ef10d" translate="yes" xml:space="preserve">
          <source>At &lt;strong&gt;12:00&lt;/strong&gt;, &lt;code&gt;cq_advanced_for_fill&lt;/code&gt; executes a query with the time range &lt;code&gt;WHERE time &amp;gt;= '10:00' AND time &amp;lt; '12:00'&lt;/code&gt;. &lt;code&gt;cq_advanced_for_fill&lt;/code&gt; writes nothing to &lt;code&gt;average_passengers&lt;/code&gt;; &lt;code&gt;bus_data&lt;/code&gt; has no data that fall within that time range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="894c5dd1fdfc4b3fc67a034ca2fa96c723819a2b" translate="yes" xml:space="preserve">
          <source>At &lt;strong&gt;6:00&lt;/strong&gt;, &lt;code&gt;cq_advanced_for_fill&lt;/code&gt; executes a query with the time range &lt;code&gt;WHERE time &amp;gt;= '4:00' AND time &amp;lt; '6:00'&lt;/code&gt;. &lt;code&gt;cq_advanced_for_fill&lt;/code&gt; writes nothing to &lt;code&gt;average_passengers&lt;/code&gt;; &lt;code&gt;bus_data&lt;/code&gt; has no data that fall within that time range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a99dbabd9e36e8b0354f86aa60b17e6e1eb8fe2" translate="yes" xml:space="preserve">
          <source>At &lt;strong&gt;7:00&lt;/strong&gt;, &lt;code&gt;cq_advanced_for_fill&lt;/code&gt; executes a query with the time range &lt;code&gt;WHERE time &amp;gt;= '5:00' AND time &amp;lt; '7:00'&lt;/code&gt;. &lt;code&gt;cq_advanced_for_fill&lt;/code&gt; writes two points to &lt;code&gt;average_passengers&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ca397698a03d423293047734e752d2d61e51b59" translate="yes" xml:space="preserve">
          <source>At &lt;strong&gt;7:30&lt;/strong&gt;, &lt;code&gt;cq_basic_br&lt;/code&gt; executes a query with the time range &lt;code&gt;time &amp;gt;= '7:00' AND time &amp;lt; '7:30'&lt;/code&gt;. &lt;code&gt;cq_basic_br&lt;/code&gt; writes two points to the &lt;code&gt;bus_data&lt;/code&gt; measurement in the &lt;code&gt;downsampled_transportation&lt;/code&gt; database:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dde174125734db89c1d441ace3ec2261b3cdd2a5" translate="yes" xml:space="preserve">
          <source>At &lt;strong&gt;8:00&lt;/strong&gt;, &lt;code&gt;cq_advanced_every&lt;/code&gt; executes a query with the time range &lt;code&gt;WHERE time &amp;gt;= '7:00' AND time &amp;lt; '8:00'&lt;/code&gt;. &lt;code&gt;cq_advanced_every&lt;/code&gt; writes one point to the &lt;code&gt;average_passengers&lt;/code&gt; measurement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="babed593bfb6e80c7945dc59286980030eb105d7" translate="yes" xml:space="preserve">
          <source>At &lt;strong&gt;8:00&lt;/strong&gt;, &lt;code&gt;cq_basic_br&lt;/code&gt; executes a query with the time range &lt;code&gt;time &amp;gt;= '7:30' AND time &amp;lt; '8:00'&lt;/code&gt;. &lt;code&gt;cq_basic_br&lt;/code&gt; writes two points to the &lt;code&gt;bus_data&lt;/code&gt; measurement in the &lt;code&gt;downsampled_transportation&lt;/code&gt; database:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b0c7714dc357c88d7299e9932fbd01c22117bbc" translate="yes" xml:space="preserve">
          <source>At &lt;strong&gt;8:00&lt;/strong&gt;&lt;code&gt;cq_advanced_every_for&lt;/code&gt; executes a query with the time range &lt;code&gt;WHERE time &amp;gt;= '6:30' AND time &amp;lt; '8:00'&lt;/code&gt;. &lt;code&gt;cq_advanced_every_for&lt;/code&gt; writes three points to the &lt;code&gt;average_passengers&lt;/code&gt; measurement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8e30be1e9e87020f3510f00835a7acff53b77a5" translate="yes" xml:space="preserve">
          <source>At &lt;strong&gt;8:00&lt;/strong&gt;&lt;code&gt;cq_advanced_for&lt;/code&gt; executes a query with the time range &lt;code&gt;WHERE time &amp;gt;= '7:00' AND time &amp;lt; '8:00'&lt;/code&gt;. &lt;code&gt;cq_advanced_for&lt;/code&gt; writes two points to the &lt;code&gt;average_passengers&lt;/code&gt; measurement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3713bf518747b16e0e526e99b5e61a474544827b" translate="yes" xml:space="preserve">
          <source>At &lt;strong&gt;8:00&lt;/strong&gt;&lt;code&gt;cq_basic&lt;/code&gt; executes a query with the time range &lt;code&gt;time &amp;gt;= '7:00' AND time &amp;lt; '08:00'&lt;/code&gt;. &lt;code&gt;cq_basic&lt;/code&gt; writes one point to the &lt;code&gt;average_passengers&lt;/code&gt; measurement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eda8cde1c52dea00589234242ac3bca90268ef36" translate="yes" xml:space="preserve">
          <source>At &lt;strong&gt;8:00&lt;/strong&gt;&lt;code&gt;cq_basic_rp&lt;/code&gt; executes a query with the time range &lt;code&gt;time &amp;gt;= '7:00' AND time &amp;lt; '8:00'&lt;/code&gt;. &lt;code&gt;cq_basic_rp&lt;/code&gt; writes one point to the &lt;code&gt;three_weeks&lt;/code&gt; RP and the &lt;code&gt;average_passengers&lt;/code&gt; measurement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8449c3a4e8abd65d92eafdce59c655b3427c3eeb" translate="yes" xml:space="preserve">
          <source>At &lt;strong&gt;8:15&lt;/strong&gt;&lt;code&gt;cq_basic_offset&lt;/code&gt; executes a query with the time range &lt;code&gt;time &amp;gt;= '7:15' AND time &amp;lt; '8:15'&lt;/code&gt;. &lt;code&gt;cq_basic_offset&lt;/code&gt; writes one point to the &lt;code&gt;average_passengers&lt;/code&gt; measurement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="900676ed1a2f158de9d8a94ca6fd29e2cbc02a58" translate="yes" xml:space="preserve">
          <source>At &lt;strong&gt;8:30&lt;/strong&gt;, &lt;code&gt;cq_advanced_every&lt;/code&gt; executes a query with the time range &lt;code&gt;WHERE time &amp;gt;= '8:00' AND time &amp;lt; '9:00'&lt;/code&gt;. &lt;code&gt;cq_advanced_every&lt;/code&gt; writes one point to the &lt;code&gt;average_passengers&lt;/code&gt; measurement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16a3a9ddb75f04f3961bad7b3f26de7370498506" translate="yes" xml:space="preserve">
          <source>At &lt;strong&gt;8:30&lt;/strong&gt;&lt;code&gt;cq_advanced_for&lt;/code&gt; executes a query with the time range &lt;code&gt;WHERE time &amp;gt;= '7:30' AND time &amp;lt; '8:30'&lt;/code&gt;. &lt;code&gt;cq_advanced_for&lt;/code&gt; writes two points to the &lt;code&gt;average_passengers&lt;/code&gt; measurement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="782b035a8eaa0627291cccfba899e83a4b0c1829" translate="yes" xml:space="preserve">
          <source>At &lt;strong&gt;9:00&lt;/strong&gt;, &lt;code&gt;cq_advanced_every&lt;/code&gt; executes a query with the time range &lt;code&gt;WHERE time &amp;gt;= '8:00' AND time &amp;lt; '9:00'&lt;/code&gt;. &lt;code&gt;cq_advanced_every&lt;/code&gt; writes one point to the &lt;code&gt;average_passengers&lt;/code&gt; measurement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3eb8c7b4590349cb324ba6471a6ec17ee760025" translate="yes" xml:space="preserve">
          <source>At &lt;strong&gt;9:00&lt;/strong&gt;, &lt;code&gt;cq_basic_br&lt;/code&gt; executes a query with the time range &lt;code&gt;time &amp;gt;= '8:30' AND time &amp;lt; '9:00'&lt;/code&gt;. &lt;code&gt;cq_basic_br&lt;/code&gt; writes two points to the &lt;code&gt;bus_data&lt;/code&gt; measurement in the &lt;code&gt;downsampled_transportation&lt;/code&gt; database:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab1a5555eab3aed60bacd1c2b18f25e81c0f6bd" translate="yes" xml:space="preserve">
          <source>At &lt;strong&gt;9:00&lt;/strong&gt;&lt;code&gt;cq_advanced_every_for&lt;/code&gt; executes a query with the time range &lt;code&gt;WHERE time &amp;gt;= '7:30' AND time &amp;lt; '9:00'&lt;/code&gt;. &lt;code&gt;cq_advanced_every_for&lt;/code&gt; writes three points to the &lt;code&gt;average_passengers&lt;/code&gt; measurement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b82b081e6f833a4769dc51aaa5d5ac608c470d22" translate="yes" xml:space="preserve">
          <source>At &lt;strong&gt;9:00&lt;/strong&gt;&lt;code&gt;cq_advanced_for&lt;/code&gt; executes a query with the time range &lt;code&gt;WHERE time &amp;gt;= '8:00' AND time &amp;lt; '9:00'&lt;/code&gt;. &lt;code&gt;cq_advanced_for&lt;/code&gt; writes two points to the &lt;code&gt;average_passengers&lt;/code&gt; measurement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="516903d612ff7a902c72adce92a233cd8e1b47d0" translate="yes" xml:space="preserve">
          <source>At &lt;strong&gt;9:00&lt;/strong&gt;&lt;code&gt;cq_basic&lt;/code&gt; executes a query with the time range &lt;code&gt;time &amp;gt;= '8:00' AND time &amp;lt; '9:00'&lt;/code&gt;. &lt;code&gt;cq_basic&lt;/code&gt; writes one point to the &lt;code&gt;average_passengers&lt;/code&gt; measurement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f1f6ff078e3404135f7a973b6f1bfd6c19ae645" translate="yes" xml:space="preserve">
          <source>At &lt;strong&gt;9:00&lt;/strong&gt;&lt;code&gt;cq_basic_rp&lt;/code&gt; executes a query with the time range &lt;code&gt;time &amp;gt;= '8:00' AND time &amp;lt; '9:00'&lt;/code&gt;. &lt;code&gt;cq_basic_rp&lt;/code&gt; writes one point to the &lt;code&gt;three_weeks&lt;/code&gt; RP and the &lt;code&gt;average_passengers&lt;/code&gt; measurement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32a2de95560be66a77d53a3addc100ca4e498ff7" translate="yes" xml:space="preserve">
          <source>At &lt;strong&gt;9:15&lt;/strong&gt;&lt;code&gt;cq_basic_offset&lt;/code&gt; executes a query with the time range &lt;code&gt;time &amp;gt;= '8:15' AND time &amp;lt; '9:15'&lt;/code&gt;. &lt;code&gt;cq_basic_offset&lt;/code&gt; writes one point to the &lt;code&gt;average_passengers&lt;/code&gt; measurement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3da840047029875a452bfa60f6b0c74b302ac88" translate="yes" xml:space="preserve">
          <source>At a high level, this is what our UDF code will do for each of the &lt;code&gt;begin_batch&lt;/code&gt;, &lt;code&gt;point&lt;/code&gt;, and &lt;code&gt;end_batch&lt;/code&gt; calls:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59680adf46372dfeb79486b3dd468f26b30c3775" translate="yes" xml:space="preserve">
          <source>At the same time, time series data can be a high read throughput use case. It&amp;rsquo;s true that if you&amp;rsquo;re tracking 700,000 unique metrics or time series you can&amp;rsquo;t hope to visualize all of them. That leads many people to think that you don&amp;rsquo;t actually read most of the data that goes into the database. However, other than dashboards that people have up on their screens, there are automated systems for monitoring or combining the large volume of time series data with other types of data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1bb802eac65c4d16fba7a594a3008b034b8204a" translate="yes" xml:space="preserve">
          <source>At this point there are a few questions we should answer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969fd15157fcd678f07f5afeb3a3f4c42a64fde0" translate="yes" xml:space="preserve">
          <source>At this point we are ready to start the UDF. Here is the complete &lt;code&gt;main.go&lt;/code&gt; file for reference:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efc03cee3ea0a9ae7e99978a52ca65c9fca38307" translate="yes" xml:space="preserve">
          <source>At this point we have a Kapacitor task which is generating alerts and sending them to the &lt;code&gt;cpu&lt;/code&gt; topic, but since the topic does not have any handlers nothing happens with the alerts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad7e8761e7efc6818089b4281e8cda37a98e7b8c" translate="yes" xml:space="preserve">
          <source>At this point we have a complete implementation of the &lt;code&gt;Handler&lt;/code&gt; interface. In step #4 of the Lifecycle above, Kapacitor makes a new connection to the UDF for each use in a task. Since it&amp;rsquo;s possible that our UDF process can handle multiple connections simultaneously, we need a mechanism for creating a new &lt;code&gt;agent&lt;/code&gt; and &lt;code&gt;handler&lt;/code&gt; per connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bdf843f9b778c1bb42d0a6c0592f390e1652b73" translate="yes" xml:space="preserve">
          <source>At this point we have a task ready to go, and a script to generate some fake data with anomalies. Now we can create a recording of our fake data so that we can easily iterate on the task:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d30613c09139cd28e9517755d87c5a20dcd2b26" translate="yes" xml:space="preserve">
          <source>At this point you can run &lt;code&gt;show-template&lt;/code&gt; to see more information about our template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="720d184a8669a86d9ae7321c7d3294e8fbc76347" translate="yes" xml:space="preserve">
          <source>At this point, you should be able to write custom UDFs using either the socket or process-based methods. UDFs have a wide range of uses, from custom downsampling logic as part of a continuous query, custom anomaly detection algorithms, or simply a system to &amp;ldquo;massage&amp;rdquo; your data a bit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c50e85584d7681c5aba445dde84464172eb36a4c" translate="yes" xml:space="preserve">
          <source>Atan returns the arctangent, in radians, of x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63a222caf5c6142da57e1b301f3487b179288ab4" translate="yes" xml:space="preserve">
          <source>Atan2 returns the arc tangent of y/x, using the signs of the two to determine the quadrant of the return value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f20e96a43909d1a86e1589070972405040e354c" translate="yes" xml:space="preserve">
          <source>Atanh returns the inverse hyperbolic tangent of x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b9b186394dc47e0a7115fc19a4a9a4c7bc606cc" translate="yes" xml:space="preserve">
          <source>Auth0</source>
          <target state="translated">Auth0</target>
        </trans-unit>
        <trans-unit id="2280b3375505259271b5688542f5cddce3c6c472" translate="yes" xml:space="preserve">
          <source>Auth0 can be customized to operators&amp;rsquo; requirements, so it has no official concept of an &amp;ldquo;organization.&amp;rdquo; Organizations are supported in Chronograf using a lightweight &amp;ldquo;app_metadata&amp;rdquo; key that can be inserted into Auth0 users&amp;rsquo; profiles automatically or manually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8af5b42e60acef7715495059abd8953824f67e3" translate="yes" xml:space="preserve">
          <source>Auth0 clients should be configured as &amp;ldquo;Regular Web Applications&amp;rdquo; with the &amp;ldquo;Token Endpoint Authentication&amp;rdquo; set to &amp;ldquo;None&amp;rdquo;. Clients must have the &amp;ldquo;Allowed Callback URLs&amp;rdquo; set to &amp;ldquo;https://www.example.com/oauth/auth0/callback&quot; and the &amp;ldquo;Allowed Logout URLs&amp;rdquo; to &amp;ldquo;https://www.example.com&quot;, substituting &amp;ldquo;example.com&amp;rdquo; for the &lt;a href=&quot;../configuration/index#public-url&quot;&gt;&lt;code&gt;PUBLIC_URL&lt;/code&gt;&lt;/a&gt; of your Chronograf instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d4e2e716729a4d5fa8c4cfe1b9773e760070dc5" translate="yes" xml:space="preserve">
          <source>Authenticate Requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c00c595613817b01ffb6031e002612c8aeeb17a1" translate="yes" xml:space="preserve">
          <source>Authenticate Telegraf requests to InfluxDB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f479297c5a0382c5b45ea434d5730f854c068c" translate="yes" xml:space="preserve">
          <source>Authenticate by providing query parameters in the URL or request body</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74786d6025cbb40a2b899a890f9c1531f25e0b27" translate="yes" xml:space="preserve">
          <source>Authenticate by setting the &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; flags when you start the CLI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22a180646140255e3cefe17eaf36ca6536447307" translate="yes" xml:space="preserve">
          <source>Authenticate with &lt;code&gt;auth &amp;lt;username&amp;gt; &amp;lt;password&amp;gt;&lt;/code&gt; after starting the CLI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e7a62a3db23544a619fef068e385a4992bdb1a" translate="yes" xml:space="preserve">
          <source>Authenticate with Basic Authentication as described in &lt;a href=&quot;http://tools.ietf.org/html/rfc2617&quot;&gt;RFC 2617, Section 2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bc91ab3728eef5d78cd5c2c4ea855ced77e1a3e" translate="yes" xml:space="preserve">
          <source>Authenticate with the &lt;code&gt;INFLUX_USERNAME&lt;/code&gt; and &lt;code&gt;INFLUX_PASSWORD&lt;/code&gt; environment variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca61cecad6196738fcb2f111d3f2b426541054b6" translate="yes" xml:space="preserve">
          <source>Authenticate with the CLI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a589f154db92a11c522151812a6f8ad1f9992fd6" translate="yes" xml:space="preserve">
          <source>Authenticate with the HTTP API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="808cbcb98188f11e99ab664fd4af1a1beb5a0b67" translate="yes" xml:space="preserve">
          <source>Authenticating &lt;a href=&quot;../../../../telegraf/v1.3/index&quot;&gt;Telegraf&lt;/a&gt; requests to an InfluxDB instance with authentication enabled requires some additional steps. In Telegraf&amp;rsquo;s configuration file (&lt;code&gt;/etc/telegraf/telegraf.conf&lt;/code&gt;), uncomment and edit the &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; settings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee1acfa55eb1476c86c5c4a68f256a67b25289ab" translate="yes" xml:space="preserve">
          <source>Authentication</source>
          <target state="translated">Authentication</target>
        </trans-unit>
        <trans-unit id="259182d2b39530cc1d61fa0f36b918da2852b48e" translate="yes" xml:space="preserve">
          <source>Authentication and Authorization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c46f6a41364b60e282db15fe705bf6e6e2875ec" translate="yes" xml:space="preserve">
          <source>Authentication and Authorization HTTP Errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d81fce66659b352f7ad2545286028764146046e" translate="yes" xml:space="preserve">
          <source>Authentication in InfluxDB is disabled by default. See &lt;a href=&quot;../../query_language/authentication_and_authorization/index&quot;&gt;Authentication and Authorization&lt;/a&gt; for how to enable and set up authentication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e665f157fbdeb393aebb10fefc799a8fbad12ee1" translate="yes" xml:space="preserve">
          <source>Authentication:</source>
          <target state="translated">Authentication:</target>
        </trans-unit>
        <trans-unit id="5e25ce007aa95ea2ea8b158aee9c630a32ea5616" translate="yes" xml:space="preserve">
          <source>Authorization</source>
          <target state="translated">Authorization</target>
        </trans-unit>
        <trans-unit id="1e2faf044822b816be76e60e17774b17d87ec77a" translate="yes" xml:space="preserve">
          <source>Authorization is only enforced once you&amp;rsquo;ve &lt;a href=&quot;#set-up-authentication&quot;&gt;enabled authentication&lt;/a&gt;. By default, authentication is disabled, all credentials are silently ignored, and all users have all privileges.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f26a27a3eec1ae97ca592288c3f1f40c5a70963e" translate="yes" xml:space="preserve">
          <source>Authorization:</source>
          <target state="translated">Authorization:</target>
        </trans-unit>
        <trans-unit id="8281c778055b5e4c59d27463821b6a6174327d95" translate="yes" xml:space="preserve">
          <source>Automatically aggregate the ten-second resolution data to 30-minute resolution data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50da7599315e483ec6e8933a12cb0e8dd10b08ba" translate="yes" xml:space="preserve">
          <source>Automatically delete the 30-minute resolution data that are older than 52 weeks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86b7578c45d8772aa7127295bdec2c2dccb8bb44" translate="yes" xml:space="preserve">
          <source>Automatically delete the raw, ten-second resolution data that are older than two hours</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3dabda462529549808e000a0c00db669eda462c" translate="yes" xml:space="preserve">
          <source>Available Discoverers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fad714fe5d8e4d5195fd161083d6c909be97702" translate="yes" xml:space="preserve">
          <source>Available Statistics:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17ecbf15ff973566a5ab1b7eb54d2db06ba8e493" translate="yes" xml:space="preserve">
          <source>Available actions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3bdf558ae66621d1155f41488b047a7edacc950" translate="yes" xml:space="preserve">
          <source>Available event handlers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41048df8566e4368f17ec704ef62e4397e79f04c" translate="yes" xml:space="preserve">
          <source>Available template data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8cd6dfda30d7101d6cf0b9c53adfc21f1274ba4" translate="yes" xml:space="preserve">
          <source>Available types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac1f144d881e01aa815dc255dd0d541d731be8a8" translate="yes" xml:space="preserve">
          <source>Avoid deadlock when &lt;code&gt;max-row-limit&lt;/code&gt; is hit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74bca3f44865017bd24498c9fde23271db0af3b6" translate="yes" xml:space="preserve">
          <source>Avoid single quoting and double quoting identifiers when writing data via the line protocol; see the examples below for how writing identifiers with quotes can complicate queries. Identifiers are database names, retention policy names, user names, measurement names, tag keys, and field keys.   Write with a double-quoted measurement: &lt;code&gt;INSERT &quot;bikes&quot; bikes_available=3&lt;/code&gt; Applicable query: &lt;code&gt;SELECT * FROM &quot;\&quot;bikes\&quot;&quot;&lt;/code&gt;   Write with a single-quoted measurement: &lt;code&gt;INSERT 'bikes' bikes_available=3&lt;/code&gt; Applicable query: &lt;code&gt;SELECT * FROM &quot;\'bikes\'&quot;&lt;/code&gt;   Write with an unquoted measurement: &lt;code&gt;INSERT bikes bikes_available=3&lt;/code&gt; Applicable query: &lt;code&gt;SELECT * FROM &quot;bikes&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2d242f205a8b5c83a0c1b8f8c2cede15c0923ac" translate="yes" xml:space="preserve">
          <source>Avoid stat syscall when planning compactions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69e21f5d77c45f116d5b92429b3eda9a1757eb38" translate="yes" xml:space="preserve">
          <source>BOTTOM()</source>
          <target state="translated">BOTTOM()</target>
        </trans-unit>
        <trans-unit id="a3feed69886e16cf1eec0b04b54a1aed121aecb1" translate="yes" xml:space="preserve">
          <source>Backfill</source>
          <target state="translated">Backfill</target>
        </trans-unit>
        <trans-unit id="dfe58bdbb1b26f13b09026956aa81e0a0337922c" translate="yes" xml:space="preserve">
          <source>Backing up a Database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbc7ca4bfee469c511fabe78a81192480601c417" translate="yes" xml:space="preserve">
          <source>Backing up the Metastore</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95b7618fb7ef39edf9716a55fcfcedb01cd7f6fb" translate="yes" xml:space="preserve">
          <source>Backing up the Storage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="176ca6659f14474478fbd5e0c9683dbfde28cbc8" translate="yes" xml:space="preserve">
          <source>Backport from 1.2.0: Reduce GC allocations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5932464fe7ee7685cdde1f28a54e89455da1784" translate="yes" xml:space="preserve">
          <source>Backup and Restore</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="530cc25bdc7d0ba5a4ef3d1206ec89ca3164965a" translate="yes" xml:space="preserve">
          <source>Backups</source>
          <target state="translated">Backups</target>
        </trans-unit>
        <trans-unit id="57702bfb28ed9547528aa68a728d20b92c526740" translate="yes" xml:space="preserve">
          <source>Backwards Compatibility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e496fd20136d4bb7828ebb0ab925b1bd977208e4" translate="yes" xml:space="preserve">
          <source>Bar</source>
          <target state="translated">Bar</target>
        </trans-unit>
        <trans-unit id="85a57017a1435598ce73a01cc7705362d228dacb" translate="yes" xml:space="preserve">
          <source>Based on the &lt;code&gt;printer_data.py&lt;/code&gt; script above, there should be anomalies at:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fc0417965684092fe45fe9d7689e0533af49dc9" translate="yes" xml:space="preserve">
          <source>Basic &lt;code&gt;//&lt;/code&gt; style single line comments are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33facf8d250b133e73a9daa75f81b9d845579ae8" translate="yes" xml:space="preserve">
          <source>Basic &lt;code&gt;GROUP BY time()&lt;/code&gt; queries rely on the &lt;code&gt;time_interval&lt;/code&gt; and on InfluxDB&amp;rsquo;s preset time boundaries to determine the raw data included in each time interval and the timestamps returned by the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70c0e9c4c107a01dd48f1208b4ba00354cfafe4d" translate="yes" xml:space="preserve">
          <source>Basic &lt;code&gt;GROUP BY time()&lt;/code&gt; queries require an InfluxQL &lt;a href=&quot;../functions/index&quot;&gt;function&lt;/a&gt; in the &lt;a href=&quot;#the-basic-select-statement&quot;&gt;&lt;code&gt;SELECT&lt;/code&gt; clause&lt;/a&gt; and a time range in the &lt;a href=&quot;#the-where-clause&quot;&gt;&lt;code&gt;WHERE&lt;/code&gt; clause&lt;/a&gt;. Note that the &lt;code&gt;GROUP BY&lt;/code&gt; clause must come after the &lt;code&gt;WHERE&lt;/code&gt; clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed4e1ae50a872721309053536914fc593b79a9e6" translate="yes" xml:space="preserve">
          <source>Basic Arithmetic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac8fabe9248eb4f836abe9dc892fe78bfb76868a" translate="yes" xml:space="preserve">
          <source>Basic GROUP BY time() Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15e10e999d9f45564ef18325b8fb75ba7dfdf012" translate="yes" xml:space="preserve">
          <source>Basic Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad95552d5155f9d5f8194153584872df3f0287e4" translate="yes" xml:space="preserve">
          <source>Basically the answer boils down to two things, the available RAM and time period being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bf1ef5668b1aa8218115f5e8e419a984186f72c" translate="yes" xml:space="preserve">
          <source>Batch</source>
          <target state="translated">Batch</target>
        </trans-unit>
        <trans-unit id="54f41efe894f1744f0eb7e122496ae499d70d427" translate="yes" xml:space="preserve">
          <source>Batch Node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a7f786d1b9750b7ee47befc5db263c64c7ea67f" translate="yes" xml:space="preserve">
          <source>Batch SELECT INTO / CQ writes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0bd1d86166621763c4d3c143a99d96959a4d03d" translate="yes" xml:space="preserve">
          <source>BatchEdge &amp;ndash; an edge that transfers data in chunks instead of one point at a time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784da316e0eb3688710a61df9f8967e69048baa8" translate="yes" xml:space="preserve">
          <source>BatchNode</source>
          <target state="translated">BatchNode</target>
        </trans-unit>
        <trans-unit id="916ca17418455dc387ac1de30394ad9845a6cd33" translate="yes" xml:space="preserve">
          <source>Because InfluxQL allows users to use selector functions such as &lt;code&gt;FIRST()&lt;/code&gt;, &lt;code&gt;LAST()&lt;/code&gt;, &lt;code&gt;MIN()&lt;/code&gt;, and &lt;code&gt;MAX()&lt;/code&gt;, the engine must provide a way to return related data at the same time with the selected point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66662c7a9d7f9cf00359244175d8588b4716511c" translate="yes" xml:space="preserve">
          <source>Because fields aren&amp;rsquo;t indexed, InfluxDB scans every value of &lt;code&gt;butterflies&lt;/code&gt; in the first query and every value of &lt;code&gt;honeybees&lt;/code&gt; in the second query before it provides a response. That behavior can hurt query response times - especially on a much larger scale. To optimize your queries, it may be beneficial to rearrange your &lt;a href=&quot;../glossary/index#schema&quot;&gt;schema&lt;/a&gt; such that the fields (&lt;code&gt;butterflies&lt;/code&gt; and &lt;code&gt;honeybees&lt;/code&gt;) become the tags and the tags (&lt;code&gt;location&lt;/code&gt; and &lt;code&gt;scientist&lt;/code&gt;) become the fields:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63885ad9dfab5f764f3638e9169bb91b62784c13" translate="yes" xml:space="preserve">
          <source>Because of the &lt;a href=&quot;https://docs.influxdata.com/influxdb/v0.11/concepts/010_vs_011/#breaking-api-changes&quot;&gt;changes&lt;/a&gt; to the &lt;code&gt;SHOW SERIES&lt;/code&gt; and &lt;code&gt;SHOW TAG VALUES&lt;/code&gt; formats in InfluxDB 0.11, InfluxDB 1.3 will not work with the Query Editor in Grafana 2.6. This issue does not affect existing queries and dashboards or users working with Grafana 3.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae0bf7761b106ffa693fb30907bfa057c3d12a0" translate="yes" xml:space="preserve">
          <source>Because you enabled authentication, you must create an &lt;a href=&quot;../../../../influxdb/v1.3/query_language/authentication_and_authorization/index#user-types-and-privileges&quot;&gt;admin user&lt;/a&gt; before you can do anything else in the database. Run the command below to create an admin user, replacing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37089fb957ef38daea16aa3826b79fdf30d502b7" translate="yes" xml:space="preserve">
          <source>Before diving into InfluxDB it&amp;rsquo;s good to get acquainted with some of the key concepts of the database. This document provides a gentle introduction to those concepts and common InfluxDB terminology. We&amp;rsquo;ve provided a list below of all the terms we&amp;rsquo;ll cover, but we recommend reading this document from start to finish to gain a more general understanding of our favorite time series database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ebd173cfd81156d6f2f79b958834dd65cdf2fc" translate="yes" xml:space="preserve">
          <source>Before proceeding, login to the Influx CLI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="def61a12398cccb78939df1600b1069aee4c5e9a" translate="yes" xml:space="preserve">
          <source>Before starting the Telegraf server you need to edit and/or create an initial configuration that specifies your desired &lt;a href=&quot;../../inputs/index&quot;&gt;inputs&lt;/a&gt; (where the metrics come from) and &lt;a href=&quot;../../outputs/index&quot;&gt;outputs&lt;/a&gt; (where the metrics go). There are &lt;a href=&quot;../../administration/configuration/index&quot;&gt;several ways&lt;/a&gt; to create and edit the configuration file. Here, we&amp;rsquo;ll generate a configuration file and simultaneously specify the desired inputs with the &lt;code&gt;-input-filter&lt;/code&gt; flag and the desired output with the &lt;code&gt;-output-filter&lt;/code&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52e3950b76ca9e3e3991f0f63f39a168bead9e09" translate="yes" xml:space="preserve">
          <source>Before we write any code lets look at the lifecycle of a socket UDF:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98b4af4a9b5eb924cccab8deee0b528ff7b9d8ea" translate="yes" xml:space="preserve">
          <source>Before you start, navigate to the Dashboards page and click on the &lt;code&gt;Create Dashboard&lt;/code&gt; button. That button takes you to your new dashboard; this is your blank canvas on which you&amp;rsquo;ll create your visualization masterpieces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b62db08e5822a91d7dfa18fadc12d340a4539069" translate="yes" xml:space="preserve">
          <source>Before you start, navigate to the Rule Configuration page by visiting the Alert Rules page and clicking on the &lt;code&gt;Create Rule&lt;/code&gt; button in the top right corner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="976b732e33a1f8a48375de155a72329cec60182a" translate="yes" xml:space="preserve">
          <source>Before you start, we recommend making a copy of the entire 0.10 or 0.11 &lt;code&gt;meta&lt;/code&gt; directory in case you experience problems with the upgrade. The upgrade process removes the &lt;code&gt;raft.db&lt;/code&gt; and &lt;code&gt;node.json&lt;/code&gt; files from the &lt;code&gt;meta&lt;/code&gt; directory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e14d5919fa024dca3966bf50fda29fbf8a2ae4fd" translate="yes" xml:space="preserve">
          <source>Being able to write and query the data is more important than having a strongly consistent view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56e2781d00b40bc0c7244c358e70ec6d1349e840" translate="yes" xml:space="preserve">
          <source>Below are a collection of commands to find useful performance metrics about your InfluxDB instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b486a4581dfc6315901ce225465c473d2f14eb7" translate="yes" xml:space="preserve">
          <source>Below are all the configuration options for a scraper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4880aff0b1d5f0064c5908b3f38f2a316b3f5abe" translate="yes" xml:space="preserve">
          <source>Below we have the implementation of the &lt;code&gt;info&lt;/code&gt; method for our handler that defines the edge types and options available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aae9e2ee2ed8d95067a397bf8b2cf7248f99e89" translate="yes" xml:space="preserve">
          <source>Billions of individual data points</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="300bd60d78a917973075bc30920e235553834e0b" translate="yes" xml:space="preserve">
          <source>Bind Parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="add71abae5df3d5d33c6e409f0273379119a6c31" translate="yes" xml:space="preserve">
          <source>Bind backup and restore port to localhost by default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17e80e5f71e9b85954b350f117d4dfeb3c5cf70a" translate="yes" xml:space="preserve">
          <source>Bitwise AND</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e73e33f0154290496954bbb786cc6ebfaae8e05a" translate="yes" xml:space="preserve">
          <source>Bitwise AND (&lt;code&gt;&amp;amp;&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ab7704c2536214450e9e76d835c3c02518bbecd" translate="yes" xml:space="preserve">
          <source>Bitwise Exclusive-OR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b241589e683ed87daffa203bd50b5d8652d9355" translate="yes" xml:space="preserve">
          <source>Bitwise Exclusive-OR (&lt;code&gt;^&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5a638b02217b12d090d341e4b81a2d3db1e1c47" translate="yes" xml:space="preserve">
          <source>Bitwise Not</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4be0adcfa81c37e1e7bbf2e23630f30974d164f" translate="yes" xml:space="preserve">
          <source>Bitwise OR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb767312d1a286ee39f30231251472f859aeb2a0" translate="yes" xml:space="preserve">
          <source>Bitwise OR (&lt;code&gt;|&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9062df2beaa2803471deeaab94d9db2ab83ac623" translate="yes" xml:space="preserve">
          <source>Blocks are sequences of pairs of CRC32 checksums and data. The block data is opaque to the file. The CRC32 is used for block level error detection. The length of the blocks is stored in the index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a744a1141ae81cc03f3d68eeeb61c1fe8c0ab68d" translate="yes" xml:space="preserve">
          <source>BoltDB and mmap B+Trees</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daf760a167a8047cee872015a8e80002f3b67442" translate="yes" xml:space="preserve">
          <source>Bool</source>
          <target state="translated">Bool</target>
        </trans-unit>
        <trans-unit id="b76ff4906f33c2dd97ddd929b9662ba8cac6174c" translate="yes" xml:space="preserve">
          <source>Boolean</source>
          <target state="translated">Boolean</target>
        </trans-unit>
        <trans-unit id="b2264496000618ecedbe307bc01e79a4d032e65c" translate="yes" xml:space="preserve">
          <source>Boolean literals are the keywords &lt;code&gt;TRUE&lt;/code&gt; and &lt;code&gt;FALSE&lt;/code&gt;. They are case sensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd6db6a179417a96fdf8622432a4feeef312dcfe" translate="yes" xml:space="preserve">
          <source>Boolean syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5beef4f6f6c0fff1b3a52f259451844829e8905b" translate="yes" xml:space="preserve">
          <source>Boolean syntax for writes vs. queries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0786cdff946e6084c50bb7df6cacd8ed965599fa" translate="yes" xml:space="preserve">
          <source>Booleans</source>
          <target state="translated">Booleans</target>
        </trans-unit>
        <trans-unit id="cb5e1d7de69d9828827b64d8e0ad9e040efc7c5e" translate="yes" xml:space="preserve">
          <source>Booleans - specify TRUE with &lt;code&gt;t&lt;/code&gt;, &lt;code&gt;T&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;True&lt;/code&gt;, or &lt;code&gt;TRUE&lt;/code&gt;. Specify FALSE with &lt;code&gt;f&lt;/code&gt;, &lt;code&gt;F&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;False&lt;/code&gt;, or &lt;code&gt;FALSE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34e45ab9b06c9825d97c5678d277fc7b4d33cf78" translate="yes" xml:space="preserve">
          <source>Booleans are encoded using a simple bit packing strategy where each boolean uses 1 bit. The number of booleans encoded is stored using variable-byte encoding at the beginning of the block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a37ba1caa1c2cc5c51ad680354b022e70d77e717" translate="yes" xml:space="preserve">
          <source>Both Aggregators and Processors analyze metrics as they pass through Telegraf.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef8a63e3c9240d67aba4294bca11f0f74c01b712" translate="yes" xml:space="preserve">
          <source>Both measurements exist in a database called &lt;code&gt;pages&lt;/code&gt; and in the retention policy &lt;code&gt;autogen&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd9f34fff4fef42d7523017c508db7f5f160931" translate="yes" xml:space="preserve">
          <source>Both the &lt;code&gt;EVERY&lt;/code&gt; interval and the &lt;code&gt;FOR&lt;/code&gt; interval accept &lt;a href=&quot;../spec/index#durations&quot;&gt;duration literals&lt;/a&gt;. The &lt;code&gt;RESAMPLE&lt;/code&gt; clause works with either or both of the &lt;code&gt;EVERY&lt;/code&gt; and &lt;code&gt;FOR&lt;/code&gt; intervals configured. CQs default to the relevant &lt;a href=&quot;index#description-of-basic-syntax&quot;&gt;basic syntax behavior&lt;/a&gt; if the &lt;code&gt;EVERY&lt;/code&gt; interval or &lt;code&gt;FOR&lt;/code&gt; interval is not provided (see the first issue in &lt;a href=&quot;index#common-issues-with-advanced-syntax&quot;&gt;Common Issues with Advanced Syntax&lt;/a&gt; for an anomalistic case).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cce7f2f2f0dc525117a70d581d9c335212145e5b" translate="yes" xml:space="preserve">
          <source>Bottom</source>
          <target state="translated">Bottom</target>
        </trans-unit>
        <trans-unit id="87e2f27b9815cbdd5c08413b590c4d5b0a33ea28" translate="yes" xml:space="preserve">
          <source>Breaking changes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb59a86b216fa4cfb2e0118c442eef34ffb9c058" translate="yes" xml:space="preserve">
          <source>Bring Kapacitor up to parity with available InfluxQL functions in 1.1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be5f64b36230104ef9c6e230215846a83d18df6" translate="yes" xml:space="preserve">
          <source>Buffer</source>
          <target state="translated">Buffer</target>
        </trans-unit>
        <trans-unit id="7f147ff8d9a12c5eb4e0148a6d33cdc3862cdf5a" translate="yes" xml:space="preserve">
          <source>Buffered Iterator - This iterator provides the ability to &amp;ldquo;unread&amp;rdquo; a point back onto a buffer so it can be read again next time. This is used extensively to provide lookahead for windowing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57a6465f9c4b12d9c6da8b9fa760e0daef844727" translate="yes" xml:space="preserve">
          <source>Bug Fixes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d93084bc4770be8acdab759839bcb2348c3d246" translate="yes" xml:space="preserve">
          <source>Bugfixes</source>
          <target state="translated">Bugfixes</target>
        </trans-unit>
        <trans-unit id="ce728737a34c134fbd1e6c6cccf2ff9adaec0b5b" translate="yes" xml:space="preserve">
          <source>Build a Dashboard</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9925e6676aca879085ac53380f37b58dd4c6f7b7" translate="yes" xml:space="preserve">
          <source>Building on this comparison of database terminology, InfluxDB&amp;rsquo;s &lt;a href=&quot;../glossary/index#continuous-query-cq&quot;&gt;continuous queries&lt;/a&gt; and &lt;a href=&quot;../glossary/index#retention-policy-rp&quot;&gt;retention policies&lt;/a&gt; are similar to stored procedures in an SQL database. They&amp;rsquo;re specified once and then performed regularly and automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b82b3fe83d42765d8aa437ed8d9b48e92d7a0db6" translate="yes" xml:space="preserve">
          <source>Builds</source>
          <target state="translated">Builds</target>
        </trans-unit>
        <trans-unit id="3fe957ab50c047f78dc9261c1cacaabb53d26a72" translate="yes" xml:space="preserve">
          <source>Built-in Iterators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce64a3485e5540eb2d738ffca93bc4a6a99dac9d" translate="yes" xml:space="preserve">
          <source>Builtin Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac1c488ae5a33b922fe5342d6e016fd06198f10d" translate="yes" xml:space="preserve">
          <source>But now we are normalizing the parsing of various data formats across all plugins that can support it. You will be able to identify a plugin that supports different data formats by the presence of a &lt;code&gt;data_format&lt;/code&gt; config option, for example, in the exec plugin:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76420ddffdca45f33ec81c0a18892d749fcd8241" translate="yes" xml:space="preserve">
          <source>But, writing an integer to a field that previously accepted floats succeeds if InfluxDB stores the integer in a new shard:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caf6cd68661b4d394f4e308c30722b0b0030220b" translate="yes" xml:space="preserve">
          <source>By combining discovery with scraping, Kapacitor enables your metrics gathering infrastructure to pull metrics off of targets instead of requiring them to push metrics out to InfluxDB. Pulling metrics has several advantages in dynamic environments where a target may have a short lifecycle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c88e163d65ebe807aa973dea460ac1de22c92bb3" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;max-series-per-database&lt;/code&gt; is set to one million. Changing the setting to &lt;code&gt;0&lt;/code&gt; allows an unlimited number of series per database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f32391383dd576acf0ea9418ce0c2a318956f441" translate="yes" xml:space="preserve">
          <source>By default Chronograf will ask for the &lt;code&gt;user:email&lt;/code&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc6749#section-3.3&quot;&gt;scope&lt;/a&gt; of the client. If your provider scopes email access under a different scope or scopes provide them as comma-separated values in the &lt;code&gt;GENERIC_SCOPES&lt;/code&gt; environment variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e468dd917a90512abac4481bd7f82442209169ed" translate="yes" xml:space="preserve">
          <source>By default the ability to override the configuration is enabled. If you do not wish to enable this feature it can be disabled via the &lt;code&gt;config-override&lt;/code&gt; configuration section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fd434ecdf79388539ad2846c0503c6799282e5f" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;INTO&lt;/code&gt; queries convert any tags in the initial data to fields in the newly written data. This can cause InfluxDB to overwrite &lt;a href=&quot;../../concepts/glossary/index#point&quot;&gt;points&lt;/a&gt; that were previously differentiated by a tag. Include &lt;code&gt;GROUP BY *&lt;/code&gt; in all &lt;code&gt;INTO&lt;/code&gt; queries to preserve tags in the newly written data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9773303cfbaeb200e2f1b37167e7156228e4ef43" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;cache-max-memory-size&lt;/code&gt; is set to 512mb. This value is fine for most workloads, but is too small for larger write volumes or for datasets with higher &lt;a href=&quot;../../concepts/glossary/index#series-cardinality&quot;&gt;series cardinality&lt;/a&gt;. If you have lots of RAM you could set it to &lt;code&gt;0&lt;/code&gt; to disable the cached memory limit and never get this error. You can also examine the &lt;code&gt;memBytes&lt;/code&gt; field in the&lt;code&gt;cache&lt;/code&gt; measurement in the &lt;a href=&quot;../statistics/index#internal-monitoring&quot;&gt;&lt;code&gt;_internal&lt;/code&gt; database&lt;/a&gt; to get a sense of how big the caches are in memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7273d9d52873d3177f3dc2af025e3a079a77d71" translate="yes" xml:space="preserve">
          <source>By default, InfluxDB assumes that all epoch timestamps are in nanoseconds. Include a &lt;a href=&quot;../spec/index#durations&quot;&gt;duration literal&lt;/a&gt; at the end of the epoch timestamp to indicate a precision other than nanoseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c986ce2dede0ef34b22606106f9ea226192971b8" translate="yes" xml:space="preserve">
          <source>By default, InfluxDB checks to enforce an RP every 30 minutes. Between checks, &lt;code&gt;orders&lt;/code&gt; may have data that are older than two hours. The rate at which InfluxDB checks to enforce an RP is a configurable setting, see &lt;a href=&quot;../../administration/config/index#check-interval-30m0s&quot;&gt;Database Configuration&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37334dcdaa59dbaa94c8f3bec689812902627469" translate="yes" xml:space="preserve">
          <source>By default, InfluxDB returns results in ascending time order; the first &lt;a href=&quot;../../concepts/glossary/index#point&quot;&gt;point&lt;/a&gt; returned has the oldest &lt;a href=&quot;../../concepts/glossary/index#timestamp&quot;&gt;timestamp&lt;/a&gt; and the last point returned has the most recent timestamp. &lt;code&gt;ORDER BY time DESC&lt;/code&gt; reverses that order such that InfluxDB returns the points with the most recent timestamps first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f941dd6698a91b44fb6d75ada3118e03ba02a53" translate="yes" xml:space="preserve">
          <source>By default, InfluxDB stores and returns timestamps in UTC. The &lt;code&gt;tz()&lt;/code&gt; clause includes the UTC offset or, if applicable, the UTC Daylight Savings Time (DST) offset to the query&amp;rsquo;s returned timestamps. The returned timestamps must be in &lt;a href=&quot;index#issue-3-configuring-the-returned-timestamps&quot;&gt;RFC3339 format&lt;/a&gt; for the UTC offset or UTC DST to appear. The &lt;code&gt;time_zone&lt;/code&gt; parameter follows the TZ syntax in the &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List&quot;&gt;Internet Assigned Numbers Authority time zone database&lt;/a&gt; and it requires single quotes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28fc42b0480d0911f7be0cdefb5e11d1a0bf6495" translate="yes" xml:space="preserve">
          <source>By default, InfluxDB uses the following network ports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a556ec0387c24901c850d8093c43e85e57f69465" translate="yes" xml:space="preserve">
          <source>By default, InfluxDB writes the data to the &lt;code&gt;_internal&lt;/code&gt; database. If that database does not exist, InfluxDB creates it automatically. The &lt;code&gt;DEFAULT&lt;/code&gt; retention policy on the &lt;code&gt;_internal&lt;/code&gt; database is seven days. If you want to use a retention policy other than the seven-day retention policy, you must &lt;a href=&quot;../../query_language/database_management/index#retention-policy-management&quot;&gt;create&lt;/a&gt; it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a262a41a20d2874edcf13fb6b13ada944b1d990" translate="yes" xml:space="preserve">
          <source>By default, a &lt;code&gt;GROUP BY time()&lt;/code&gt; interval with no data reports &lt;code&gt;null&lt;/code&gt; as its value in the output column. &lt;code&gt;fill()&lt;/code&gt; changes the value reported for time intervals that have no data. Note that &lt;code&gt;fill()&lt;/code&gt; must go at the end of the &lt;code&gt;GROUP BY&lt;/code&gt; clause if you&amp;rsquo;re &lt;code&gt;GROUP(ing) BY&lt;/code&gt; several things (for example, both &lt;a href=&quot;../../concepts/glossary/index#tag&quot;&gt;tags&lt;/a&gt; and a time interval).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98addff615db842e50eca41325d5ad817d626edf" translate="yes" xml:space="preserve">
          <source>By default, all &lt;a href=&quot;../data_exploration/index#the-into-clause&quot;&gt;&lt;code&gt;INTO&lt;/code&gt; queries&lt;/a&gt; convert any tags in the source measurement to fields in the destination measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1ac35ccefb3c1eba682300dbd76e035b5e69344" translate="yes" xml:space="preserve">
          <source>By default, authentication will remain valid for 30 days via a cookie stored in the browser. Configure that duration with the &lt;code&gt;AUTH_DURATION&lt;/code&gt; environment variable. For example, to change it to 1 hour, use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29fae518c54891a8452892e932f15b292ff5a0ba" translate="yes" xml:space="preserve">
          <source>By default, functions return results under a field key that matches the function name. Include an &lt;code&gt;AS&lt;/code&gt; clause to specify the name of the output field key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fc0da1e9652ca9c935501f7fa23e2e628128e29" translate="yes" xml:space="preserve">
          <source>By default, queries with an InfluxQL function and a &lt;a href=&quot;../data_exploration/index#group-by-time-intervals&quot;&gt;&lt;code&gt;GROUP BY time()&lt;/code&gt; clause&lt;/a&gt; report null values for intervals with no data. Include &lt;code&gt;fill()&lt;/code&gt; at the end of the &lt;code&gt;GROUP BY&lt;/code&gt; clause to change that value. See &lt;a href=&quot;../data_exploration/index#group-by-time-intervals-and-fill&quot;&gt;Data Exploration&lt;/a&gt; for a complete discussion of &lt;code&gt;fill()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eafb60b5722b640b9d0e7d16a33c8bbb14ea179" translate="yes" xml:space="preserve">
          <source>By default, the shard group duration is determined by the RP&amp;rsquo;s &lt;a href=&quot;../glossary/index#duration&quot;&gt;duration&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24d78b39d54c78afbaa6b87a7195afbcb15e9e35" translate="yes" xml:space="preserve">
          <source>By default, the timestamp that is output in JSON data format serialized Telegraf metrics is in seconds. The precision of this timestamp can be adjusted for any output by adding the optional &lt;code&gt;json_timestamp_units&lt;/code&gt; parameter to the configuration for that output. This parameter can be used to set the timestamp units to nanoseconds (&lt;code&gt;ns&lt;/code&gt;), microseconds (&lt;code&gt;us&lt;/code&gt; or &lt;code&gt;&amp;micro;s&lt;/code&gt;), milliseconds (&lt;code&gt;ms&lt;/code&gt;), or seconds (&lt;code&gt;s&lt;/code&gt;). Note that this parameter will be truncated to the nearest power of 10 that, so if the &lt;code&gt;json_timestamp_units&lt;/code&gt; are set to &lt;code&gt;15ms&lt;/code&gt; the timestamps for the JSON format serialized Telegraf metrics will be output in hundredths of a second (&lt;code&gt;10ms&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe230dd1eefa4f4a0a61005654e8268401fe576a" translate="yes" xml:space="preserve">
          <source>By explicitly stating the types of edges the node &lt;code&gt;wants&lt;/code&gt; and &lt;code&gt;provides&lt;/code&gt;, Kapacitor will do the necessary type checking to prevent invalid pipelines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e7c811e7286d0a5aaef0ae600b27a693f2f94ac" translate="yes" xml:space="preserve">
          <source>By the end of this document, you&amp;rsquo;ll be aware of all the tools you need to create a dashboard similar to this one:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e425c6f9d567f1cdcfb44a4864ad267462a0743b" translate="yes" xml:space="preserve">
          <source>ByMeasurement</source>
          <target state="translated">ByMeasurement</target>
        </trans-unit>
        <trans-unit id="659fa06f8791d7b5e48905681304975908976eef" translate="yes" xml:space="preserve">
          <source>CEILING()</source>
          <target state="translated">CEILING()</target>
        </trans-unit>
        <trans-unit id="7f564b82b0cf1988515352fc25bc49440f842056" translate="yes" xml:space="preserve">
          <source>CLA</source>
          <target state="translated">CLA</target>
        </trans-unit>
        <trans-unit id="700b401ca52b1bd3071dc838bf11be9cdb19fc5f" translate="yes" xml:space="preserve">
          <source>CLI</source>
          <target state="translated">CLI</target>
        </trans-unit>
        <trans-unit id="8c1c9a226c9bd22aeb4cc10b44bafb3ddf0baaa5" translate="yes" xml:space="preserve">
          <source>CLI Precision Command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dff7207a1bc2ba4f0b14806f1154cdd6878050f" translate="yes" xml:space="preserve">
          <source>CLI example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f2e226a7a2c861b2e9f510ada38aa4bb47e48c0" translate="yes" xml:space="preserve">
          <source>CLI examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eec0659eeeffa3fbc10c0404f9bba769a75abd7" translate="yes" xml:space="preserve">
          <source>CLI non-admin user updates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8b77e8721b0537871020332dd8328e89cfba14c" translate="yes" xml:space="preserve">
          <source>CLI should use spaces for alignment, not tabs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8f9eaef4960853a85a5c6fd81a7a3781a3536b1" translate="yes" xml:space="preserve">
          <source>CLI was caching db/rp for insert into statements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="930b51cceffc02d7d2c0153ce3896ec3f604a11c" translate="yes" xml:space="preserve">
          <source>CLI/Shell</source>
          <target state="translated">CLI/Shell</target>
        </trans-unit>
        <trans-unit id="ef7ea24747414e3bceaaba4d043701e8df4f5990" translate="yes" xml:space="preserve">
          <source>CLIHTTP API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e532b89f9667c5d4af7893496f35285de1f689" translate="yes" xml:space="preserve">
          <source>COUNT()</source>
          <target state="translated">COUNT()</target>
        </trans-unit>
        <trans-unit id="ff221d4752ce05f5a91bbf1d28b78a7bf7e2ddaa" translate="yes" xml:space="preserve">
          <source>CPU</source>
          <target state="translated">CPU</target>
        </trans-unit>
        <trans-unit id="8836294df8d1dbf1249bb870f76884cb1fe9ee36" translate="yes" xml:space="preserve">
          <source>CPU: 1-2 cores</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff0d98014e0fc3b8ecaa6d64f31826ccc9f03574" translate="yes" xml:space="preserve">
          <source>CPU: 1-4 cores</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf753cf7a64aa87a12aaf40f9d210d186dfbe3a" translate="yes" xml:space="preserve">
          <source>CPU: 2 cores</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33353ffc3dd6f8cf3cfab79bc4f3fe85384cb733" translate="yes" xml:space="preserve">
          <source>CPU: 2-4 cores</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d7ab80c2623b80aa697e54a32e93d76661fc930" translate="yes" xml:space="preserve">
          <source>CPU: 4-6</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bdb47513fc8e7dda70bc7dcb1a4b25d898ffcc4" translate="yes" xml:space="preserve">
          <source>CPU: 4-6 cores</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92fe5eb85a2cb3ee136442e5b58b43327cbebb25" translate="yes" xml:space="preserve">
          <source>CPU: 8+</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c34b4ebd8f22e5a1ae42fb4b0e3d3c7dfa954b78" translate="yes" xml:space="preserve">
          <source>CPU: 8+ cores</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b000524ef88ca42b98999895d6eec07664860fa8" translate="yes" xml:space="preserve">
          <source>CQ Management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5727e1bf61dfd87dc3a928cc09406eb72d4d082" translate="yes" xml:space="preserve">
          <source>CQ Use Cases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deffc14d70e3ca61e8f7af13d1cc75fa0a2ac634" translate="yes" xml:space="preserve">
          <source>CQs cannot be altered once they&amp;rsquo;re created. To change a CQ, you must &lt;code&gt;DROP&lt;/code&gt; and re&lt;code&gt;CREATE&lt;/code&gt; it with the updated settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="470d0442aae7843b749f882b27dc95e65c80be6f" translate="yes" xml:space="preserve">
          <source>CQs do not write any results for a time interval if no data fall within that time range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18cf9d69a8e1eeb56f3c83c6a5c3c7850a782550" translate="yes" xml:space="preserve">
          <source>CQs execute at the same interval as the &lt;code&gt;EVERY&lt;/code&gt; interval in the &lt;code&gt;RESAMPLE&lt;/code&gt; clause, and they run at the start of InfluxDB&amp;rsquo;s preset time boundaries. If the &lt;code&gt;EVERY&lt;/code&gt; interval is two hours, InfluxDB executes the CQ at the top of every other hour.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2c534d9996fcab4a31d9ca4daac13c01f63b49b" translate="yes" xml:space="preserve">
          <source>CQs execute at the same interval as the &lt;code&gt;cq_query&lt;/code&gt;&amp;rsquo;s &lt;code&gt;GROUP BY time()&lt;/code&gt; interval, and they run at the start of InfluxDB&amp;rsquo;s preset time boundaries. If the &lt;code&gt;GROUP BY time()&lt;/code&gt; interval is one hour, the CQ executes at the start of every hour.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1031e6a1e6bf61d72bef71490330fcad5e7bd6f" translate="yes" xml:space="preserve">
          <source>CQs operate on realtime data, that is, data with timestamps that occur relative to &lt;a href=&quot;../../concepts/glossary/index#now&quot;&gt;&lt;code&gt;now()&lt;/code&gt;&lt;/a&gt;. Use a basic &lt;a href=&quot;../data_exploration/index#the-into-clause&quot;&gt;&lt;code&gt;INTO&lt;/code&gt; query&lt;/a&gt; to backfill results for data with older timestamps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="549735052fdf2a43ac7b027b5d6fee93eaea75af" translate="yes" xml:space="preserve">
          <source>CQs operate on realtime data. They use the local server&amp;rsquo;s timestamp, the &lt;code&gt;GROUP BY time()&lt;/code&gt; interval, and InfluxDB&amp;rsquo;s preset time boundaries to determine when to execute and what time range to cover in the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8a0b130c9df4f44267080ef367672b2d4ab1888" translate="yes" xml:space="preserve">
          <source>CQs operate on realtime data. With the advanced syntax, CQs use the local server&amp;rsquo;s timestamp, the information in the &lt;code&gt;RESAMPLE&lt;/code&gt; clause, and InfluxDB&amp;rsquo;s preset time boundaries to determine when to execute and what time range to cover in the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b10af434ef4eac0c63927764f485ea39ce5dddf" translate="yes" xml:space="preserve">
          <source>CREATE CONTINUOUS QUERY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d4062ecf576482c660a1aa699cc54b88d165ea7" translate="yes" xml:space="preserve">
          <source>CREATE DATABASE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f658317a4c5aabf063fa7fb98435f7db3f7be08d" translate="yes" xml:space="preserve">
          <source>CREATE RETENTION POLICY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e0c7a97306134a592b25c59e20dd36d2a769213" translate="yes" xml:space="preserve">
          <source>CREATE SUBSCRIPTION</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b4f23af8e09b7f85cfa3af0d06b6b261d9ae23" translate="yes" xml:space="preserve">
          <source>CREATE USER</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3281188351b89c8e2db28d6da7af4992d415de90" translate="yes" xml:space="preserve">
          <source>CSV</source>
          <target state="translated">CSV</target>
        </trans-unit>
        <trans-unit id="943978b75616a81f4947ea391467c46040fc2ba9" translate="yes" xml:space="preserve">
          <source>CUMULATIVE_SUM()</source>
          <target state="translated">CUMULATIVE_SUM()</target>
        </trans-unit>
        <trans-unit id="50338b3b242845e21a0ace9ae9684283d945fb52" translate="yes" xml:space="preserve">
          <source>Cache</source>
          <target state="translated">Cache</target>
        </trans-unit>
        <trans-unit id="14b5330f9de85890b2225c51ed9f017f605bb2ec" translate="yes" xml:space="preserve">
          <source>Cache &amp;amp; expire metrics for delivery to prometheus</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da10226022ae3241e13122893f106ce07bf8ffe5" translate="yes" xml:space="preserve">
          <source>Cache - The Cache is an in-memory representation of the data stored in the WAL. It is queried at runtime and merged with the data stored in TSM files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f20ac7e6dc36b91994c9524c43c3ea1d11b689d6" translate="yes" xml:space="preserve">
          <source>Cache snapshotting performance improvements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4e66c8d545caf10b1bdb69362802c20bd6ddaea" translate="yes" xml:space="preserve">
          <source>Calculate Rates across joined series + Backfill</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc87c434a4bc44b03c57763462fbe3771e8de311" translate="yes" xml:space="preserve">
          <source>Call Iterators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f392e6e889a158b18fb0342156753c38435f6620" translate="yes" xml:space="preserve">
          <source>Can I change a field&amp;rsquo;s data type?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93681a02fc95c917f26e43ae55dbf36c4bc07046" translate="yes" xml:space="preserve">
          <source>Can I identify write precision from returned timestamps?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bf747992d8587cd44758371478cc73493dd9df3" translate="yes" xml:space="preserve">
          <source>Can I perform mathematical operations against timestamps?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c0b129051d17b032b8cc114da154b93d7fd8aa8" translate="yes" xml:space="preserve">
          <source>Can pass literal * to group by all dimensions. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14db46befa3ef94e03da564a647300f69b71be77" translate="yes" xml:space="preserve">
          <source>Capture output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cebaca86eca01ea157c64219dcdf516e228e5fd9" translate="yes" xml:space="preserve">
          <source>Cassandra input: version 2.x &amp;ldquo;column family&amp;rdquo; fix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35195fa8f0c0b892450007f8f0ea4fe65a8ee9d5" translate="yes" xml:space="preserve">
          <source>Cast Operations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcaa33a7ae44bd5042c37a9cdbea7f843b1cf7c8" translate="yes" xml:space="preserve">
          <source>Caveats</source>
          <target state="translated">Caveats</target>
        </trans-unit>
        <trans-unit id="e587577dc59bfafa8f316d5453515821dcbce5ea" translate="yes" xml:space="preserve">
          <source>Cbrt returns the cube root of x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46536626864b36557258c2a5e53e6d4465979040" translate="yes" xml:space="preserve">
          <source>Ceil returns the least integer value greater than or equal to x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f616470619864e78cc4f2ee6f927dab1599e11b" translate="yes" xml:space="preserve">
          <source>Certificate files require read and write access by the &lt;code&gt;root&lt;/code&gt; user. Ensure that you have the correct file permissions by running the following commands:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58560508f21fb50e98f2adce8ce9a269581b0fe9" translate="yes" xml:space="preserve">
          <source>Chaining Methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dde4a9e4bfaa89b97d14ba470473d73020d19e21" translate="yes" xml:space="preserve">
          <source>Chaining methods &amp;ndash; Creates a new node as a child of the node they are called on and returns a reference to the new node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="716bec8a8941d04b4d793b12f87a121d53782af8" translate="yes" xml:space="preserve">
          <source>Chaining methods create a new node in the pipeline as a child of the calling node. They do not modify the calling node. Chaining methods are marked using the &lt;code&gt;|&lt;/code&gt; operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e9aac19c0a57ad647858e917cd32b5e1d0aad9c" translate="yes" xml:space="preserve">
          <source>Chaining topics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8410b2009256b8e466fbf3b26b0e93801a784e9a" translate="yes" xml:space="preserve">
          <source>Change &amp;ldquo;default&amp;rdquo; retention policy to &amp;ldquo;&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3db8b9281ce9444da489fa3fc7231ce3d292afe" translate="yes" xml:space="preserve">
          <source>Change &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/inputs/jolokia&quot;&gt;jolokia input plugin&lt;/a&gt; to use bulk requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d612de6bfb67288c841c9ca24075fd2636ed31bb" translate="yes" xml:space="preserve">
          <source>Change Amazon Kinesis output plugin to use the built-in serializer plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b86694879f1cd7d78072de6587a76073d0ce5d4f" translate="yes" xml:space="preserve">
          <source>Change StatsD default &amp;ldquo;reset&amp;rdquo; behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="347e7cdfad1be6646a08c8663283d04b9a4c2909" translate="yes" xml:space="preserve">
          <source>Change default arguments for SNMP plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c64c34643f629546ca7cfe79e7125a42ed1c0afe" translate="yes" xml:space="preserve">
          <source>Change default time boundaries for raw queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80349da11db606a5075d90cb13f3d59330e82651" translate="yes" xml:space="preserve">
          <source>Change the Values Reported for Intervals with no Data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6de4674bf0b94ab54e832de4586d695b3a1f399f" translate="yes" xml:space="preserve">
          <source>Change the algorithm from a t-test to something more fitting for your domain. Both &lt;code&gt;numpy&lt;/code&gt; and &lt;code&gt;scipy&lt;/code&gt; have a wealth of algorithms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae2778696e2ea07d8a0561eb6160584c33a7ec51" translate="yes" xml:space="preserve">
          <source>Change the default &lt;a href=&quot;../../administration/config/index#max-row-limit-0&quot;&gt;&lt;code&gt;max-row-limit&lt;/code&gt;&lt;/a&gt; setting from &lt;code&gt;10000&lt;/code&gt; to &lt;code&gt;0&lt;/code&gt; to prevent the absence of data in Grafana or Kapacitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c95f2c1799b3bbc82af8cada8f24b96ceca59e1a" translate="yes" xml:space="preserve">
          <source>Change the default global time range to past 1 hour</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad0e765dfe0e346fd2adc275604a60ea667cdbbd" translate="yes" xml:space="preserve">
          <source>Change the format to &lt;code&gt;csv&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1858c2d154968b037ca4c94cba411b750f4699fb" translate="yes" xml:space="preserve">
          <source>Change the format to &lt;code&gt;json&lt;/code&gt; and turn on pretty print:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4fc3afe6d66ec8d6d24a48ee0b7951a5c8292e5" translate="yes" xml:space="preserve">
          <source>Change the format to &lt;code&gt;json&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c28041c008eaa832a3f055073940bd9a0c26168c" translate="yes" xml:space="preserve">
          <source>Change the mirror UDF to work on batches instead of streams. This requires changing the edge type in the &lt;code&gt;Info&lt;/code&gt; method as well as implementing the &lt;code&gt;BeginBatch&lt;/code&gt; and &lt;code&gt;EndBatch&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c9d696ca82027bf0fa9d84fbb48ca7ee078efb0" translate="yes" xml:space="preserve">
          <source>Change user passwords</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d20ed2ca6dae5024f5fc08dae7edf86e0c1083e6" translate="yes" xml:space="preserve">
          <source>Change |log() output to be in JSON format so its self documenting structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6e97164b86cb92cba1345aba1e5477228488a6e" translate="yes" xml:space="preserve">
          <source>Changes to the Ceph plugin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="874c355bdf497a581095da15fe30812b053769f9" translate="yes" xml:space="preserve">
          <source>Changes to the Windows ping plugin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6f59f08fd6d58c6725e21a9ec24e068148ec586" translate="yes" xml:space="preserve">
          <source>Characters</source>
          <target state="translated">Characters</target>
        </trans-unit>
        <trans-unit id="23d9584ca8a0cbc5a392841ab472d298cda82ee4" translate="yes" xml:space="preserve">
          <source>Chat ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e7780addced84b97bb4eb14e7d6a54c29bd3617" translate="yes" xml:space="preserve">
          <source>Check file count before attempting a TSI level compaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96efef9c8c27003079c7ec28e93fbd3fb61837f0" translate="yes" xml:space="preserve">
          <source>Check out &lt;a href=&quot;../../tools/shell/index&quot;&gt;CLI/Shell&lt;/a&gt; for more useful CLI options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33ca91aaeb3d590f53e944ffeeddc40e45c06483" translate="yes" xml:space="preserve">
          <source>Check out the &lt;a href=&quot;../glossary/index&quot;&gt;Glossary&lt;/a&gt; if you prefer the cold, hard facts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11bf6d6698d39e11ecc7c4aa78b6073c87a0b73f" translate="yes" xml:space="preserve">
          <source>Check out the new features outlined in &lt;a href=&quot;../differences/index&quot;&gt;Differences between InfluxDB 1.3 and 1.2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b19d0028fc7667487fe07e3d344cd4cdaf87ad7" translate="yes" xml:space="preserve">
          <source>Check signature in the &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/inputs/webhooks/github&quot;&gt;GitHub webhook input plugin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d62a4dbcf80e902fdb5442bd93151f2ff9ab8a3" translate="yes" xml:space="preserve">
          <source>Check that retention policies exist before creating CQ.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e18b19aa7334817719b9826581ac2a50a2a6123" translate="yes" xml:space="preserve">
          <source>Check the &lt;code&gt;task&lt;/code&gt; list of Kapacitor with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2744ddce2a0ac93cbdda796b412d82480c73fb2" translate="yes" xml:space="preserve">
          <source>Check the HTTP response in your logs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1187810ecc7815fcc9cd1e60b7da6b79d7df8864" translate="yes" xml:space="preserve">
          <source>Check the alert log to make sure you received alerts to fire when you expected them to. You can also go back and use the &lt;code&gt;sigma&lt;/code&gt; based alert for the batch data as well. Play around until you are comfortable updating, testing, and running tasks in Kapacitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9b76cd74625b8fa68ea45a0499c7e4bea4d4630" translate="yes" xml:space="preserve">
          <source>Check the log using the command below, did we get any alerts? The file should contain lines of JSON, where each line represents one alert. The JSON contains the alert level and the data that triggered the alert.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f4767c8bbc4ee629e338263a897746da78223a" translate="yes" xml:space="preserve">
          <source>Check the logs (&lt;code&gt;/var/log/kapacitor/&lt;/code&gt;) to make sure you see a &lt;em&gt;Listening for signals&lt;/em&gt; line and that no errors occurred. If you don&amp;rsquo;t see the line, it&amp;rsquo;s because the UDF process is hung and not responding. It should be killed after a timeout, so give it a moment to stop properly. Once stopped, you can fix any errors and try again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d24445731e4711ad79f5bf72e7e1ffd0cbcee75" translate="yes" xml:space="preserve">
          <source>Check the status of the task:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc550a309ef86bf5886b59d5aa745c5b0f9dbc44" translate="yes" xml:space="preserve">
          <source>Check the various log files to see if the algorithm caught the anomalies:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6e5981a20c25776aeb1118e0076ba2236e5af74" translate="yes" xml:space="preserve">
          <source>Choose from three alert types in the &lt;code&gt;Rule Conditions&lt;/code&gt; section of the Rule Configuration page. The three alert types are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05c62e3589ea067f7c179906c53f17c6ac17a200" translate="yes" xml:space="preserve">
          <source>Chronograf</source>
          <target state="translated">Chronograf</target>
        </trans-unit>
        <trans-unit id="a18d0a2c8ea70a9770de88f8b506ff4045afacd0" translate="yes" xml:space="preserve">
          <source>Chronograf Setup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="995b981eec05367d9f898f15d28c9f20c3a7910c" translate="yes" xml:space="preserve">
          <source>Chronograf creates Kapacitor tasks using the information that you provide on the Rule Configuration page. It uses that information to communicate with Kapacitor and populate Chronograf&amp;rsquo;s alert pages. Pre-existing tasks, that is, &lt;a href=&quot;../../../../kapacitor/v1.3/tick/index&quot;&gt;TICKscripts&lt;/a&gt; that you created and enabled on your Kapacitor instance without using Chronograf, have limited functionality in the user interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82097bae453311ead25c5e79838de831ec7bc64f" translate="yes" xml:space="preserve">
          <source>Chronograf integrates with &lt;a href=&quot;../../../../kapacitor/v1.3/index&quot;&gt;Kapacitor&lt;/a&gt;, InfluxData&amp;rsquo;s data processing platform, to send alert messages to event handlers. Chronograf supports the following event handlers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a16f4f39196da100140f68b1cde628648f22bd4" translate="yes" xml:space="preserve">
          <source>Chronograf is supported on several operating systems and hardware architectures. See the &lt;a href=&quot;https://portal.influxdata.com/downloads&quot;&gt;downloads page&lt;/a&gt; page for links to the available binaries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d014a9ef334e7a3e5462ff99a9513fa739d933e8" translate="yes" xml:space="preserve">
          <source>Chronograf is the UI for the other components of the &lt;a href=&quot;https://www.influxdata.com/products/&quot;&gt;TICK stack&lt;/a&gt;: Telegraf, InfluxDB/InfluxEnterprise Clustering, and Kapacitor. You do not need to install every component of the TICK stack to use Chronograf. The following sections give a brief description of the other TICK stack components, how they fit within Chronograf, and if they are necessary for your setup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a799ccf17a85f560709773069e47e4af7a9871" translate="yes" xml:space="preserve">
          <source>Chronograf is the user interface component of InfluxData&amp;rsquo;s &lt;a href=&quot;https://www.influxdata.com/products/&quot;&gt;TICK stack&lt;/a&gt;. It makes owning the monitoring and alerting for your infrastructure easy to setup and maintain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f50db0e2019521305557c9589aadcadc91c993f2" translate="yes" xml:space="preserve">
          <source>Chronograf offers a complete dashboard solution for visualizing your data and monitoring your infrastructure. Learn how to create customized dashboards in Chronograf.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d6435f91049d8b607466592f329d42254dc4a2b" translate="yes" xml:space="preserve">
          <source>Chronograf offers a complete dashboard solution for visualizing your data and monitoring your infrastructure. Use Chronograf&amp;rsquo;s &lt;a href=&quot;../../troubleshooting/frequently-asked-questions/index#what-applications-are-supported-in-chronograf&quot;&gt;pre-created dashboards&lt;/a&gt; or create customized dashboards to meet your setup&amp;rsquo;s needs. This guide introduces Chronograf&amp;rsquo;s customized dashboard features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f923bda6994aa3c76a92a1d4f6de4eb30445bbd4" translate="yes" xml:space="preserve">
          <source>Chronograf offers pre-created dashboards for several &lt;a href=&quot;../../../../telegraf/v1.3/index&quot;&gt;Telegraf&lt;/a&gt; input plugins/applications. We list those applications below and link to their Telegraf documentation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="222cec35c223d9293c7174c172e439df47828767" translate="yes" xml:space="preserve">
          <source>Chronograf provides a user interface for &lt;a href=&quot;../../../../kapacitor/v1.3/index&quot;&gt;Kapacitor&lt;/a&gt;, InfluxData&amp;rsquo;s processing framework for creating alerts, running ETL jobs, and detecting anomalies in your data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d678d6b358d9b23ae4c87d7ab6f226ab7903f146" translate="yes" xml:space="preserve">
          <source>Chronograf provides a user interface for &lt;a href=&quot;../../../../kapacitor/v1.3/index&quot;&gt;Kapacitor&lt;/a&gt;, InfluxData&amp;rsquo;s processing framework for creating alerts, running ETL jobs, and detecting anomalies in your data. This guide offers a lower-level insight into how Kapacitor interacts with Chronograf and introduces advanced Kapacitor usage within Chronograf.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2db66b660cea99af54f28f7349ca8931bbe08800" translate="yes" xml:space="preserve">
          <source>Chronograf provides a user interface for Kapacitor, InfluxData&amp;rsquo;s processing framework for creating alerts, running ETL jobs, and detecting anomalies in your data. Learn how Kapacitor interacts with Chronograf at a lower level and learn about advanced Kapacitor usage within Chronograf.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="634500be54c58a39077e26d238e80c3491e697a4" translate="yes" xml:space="preserve">
          <source>Chronograf provides a user interface for Kapacitor, InfluxData&amp;rsquo;s processing framework for creating alerts, running ETL jobs, and detecting anomalies in your data. Learn how to create a Kapacitor alert in Chronograf.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6493ebbc56dbe07ca60e67630f8dd5e011274ca8" translate="yes" xml:space="preserve">
          <source>Chronograf requires at least one InfluxDB instance or one InfluxEnterprise cluster to serve as its data storage component. A single Chronograf instance can support several InfluxDB instances or InfluxEnterprise clusters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccfa0e609104bcf493761ce4765eab215a545fc0" translate="yes" xml:space="preserve">
          <source>Chronograf requires at least one Kapacitor instance if you plan on using Chronograf for creating, sending, and managing alerts. Kapacitor instances are scoped to the InfluxDB instance or InfluxEnterprise cluster that connects to Chronograf. An InfluxDB instance or InfluxEnterprise cluster can support more than one Kapacitor instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c58a4d2d50622f5a47943ad4793a8c42675a430" translate="yes" xml:space="preserve">
          <source>Chronograf requires at least one Telegraf instance that collects data and writes the data to an InfluxDB instance or InfluxEnterprise cluster. At a minimum, the Telegraf instance must have enabled the &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/inputs/system&quot;&gt;system statistics&lt;/a&gt; input plugin; that input plugin provides the system-level data necessary for the Chronograf interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="747c38bea9660cd8039bf5ae68d4c06d569e7c29" translate="yes" xml:space="preserve">
          <source>Chronograf runs on &lt;code&gt;localhost&lt;/code&gt; port &lt;code&gt;8888&lt;/code&gt; by default. Those settings are &lt;a href=&quot;../../administration/configuration/index#application-options&quot;&gt;configurable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea540a2c45602b306721fb44d90616c5a4f5d1f8" translate="yes" xml:space="preserve">
          <source>Chronograf sends alert messages to this channel or DM by default. The channel or DM must already exist in Slack. Prefix a channel with &lt;code&gt;#&lt;/code&gt; and a DM with &lt;code&gt;@&lt;/code&gt;; for example, &lt;code&gt;#chronocats&lt;/code&gt; is a channel and &lt;code&gt;@chronothan&lt;/code&gt; is a DM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9dba1786ea8d998a9b6b6299253dbcfe92724fb" translate="yes" xml:space="preserve">
          <source>Chronograf sends alerts to an existing Telegram bot. The following steps describe how to create a new Telegram bot:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8cd1d12bd2868556bb585f473f631fe63c96741" translate="yes" xml:space="preserve">
          <source>Chronograf server has command line and environment variable options to specify the certificate and key files. The server reads and parses a public/private key pair from these files. The files must contain PEM encoded data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882ca496046bf85abad45af17350fff973e5fede" translate="yes" xml:space="preserve">
          <source>Chronograf stores the information on the Alert History page as time-series data in InfluxDB. It stores it in the &lt;code&gt;chronograf&lt;/code&gt; database and in the &lt;code&gt;alerts&lt;/code&gt;&lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#measurement&quot;&gt;measurement&lt;/a&gt;. By default, those data are subject to an infinite &lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#retention-policy-rp&quot;&gt;retention policy&lt;/a&gt; (RP), that is, InfluxDB stores them forever. Users who expect to have a large number of alerts and users who do not want to store their alert history forever, may want to shorten the &lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#duration&quot;&gt;duration&lt;/a&gt; of that RP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35bcbe694f4f0cc5bbb56c754df981ab4dfbd8d4" translate="yes" xml:space="preserve">
          <source>Chronograf supports TLS to securely communicate between the browser and server via HTTPS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28e1cb549d900731c67ba6ef7cc350b4f2eb4ca4" translate="yes" xml:space="preserve">
          <source>Chronograf supports several &lt;a href=&quot;../../troubleshooting/frequently-asked-questions/index#what-visualization-types-does-chronograf-support&quot;&gt;visualization types&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c2879173dbdeead28e8cf3187bf0eff89af86b1" translate="yes" xml:space="preserve">
          <source>Chronograf supports six template variable types: databases, measurements, field keys, tag keys, tag values, and customized comma-separated values (CSV). To create a template variable, click on the blue &lt;code&gt;Manage&lt;/code&gt; button at the top of your dashboard and configure your variable. Reference your template variable in a cell&amp;rsquo;s query by surrounding its name with colons (&lt;code&gt;:&lt;/code&gt;). The sections below describe and provide examples of each template variable type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2358179c0e4ec664800164a6346908f56c9a5bca" translate="yes" xml:space="preserve">
          <source>Chronograf with OAuth 2.0 Authentication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6100965a201173ee86aec98952b0e9877eb1f97a" translate="yes" xml:space="preserve">
          <source>Chronograf works with &lt;a href=&quot;../../../../kapacitor/v1.3/index&quot;&gt;Kapacitor&lt;/a&gt; to send alert messages to supported event handlers. Use Chronograf to send alert messages to specific URLs as well as to applications like &lt;a href=&quot;https://slack.com/&quot;&gt;Slack&lt;/a&gt; and &lt;a href=&quot;https://www.hipchat.com/&quot;&gt;HipChat&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf8ce858c7bea8cf72e26ecf7d69810b1af314fe" translate="yes" xml:space="preserve">
          <source>Chronograf works with Kapacitor to send alert messages to supported event handlers. Use Chronograf to send alert messages to specific URLs as well as to applications like Slack and HipChat. Learn how to set up event handlers in Chronograf.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fb81f1d1243ecf8f250d0f45f4056f401c78bcc" translate="yes" xml:space="preserve">
          <source>Chronograf&amp;rsquo;s &lt;code&gt;Admin&lt;/code&gt; page includes a complete interface for database user management. The &lt;code&gt;Admin&lt;/code&gt; page supports both OSS InfluxDB users and &lt;a href=&quot;https://docs.influxdata.com/enterprise_influxdb/v1.2/&quot;&gt;InfluxEnterprise&lt;/a&gt; users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6dd8dc8cf171e4a3dffbb1a4e324b9b9f3da2dc" translate="yes" xml:space="preserve">
          <source>Chronograf&amp;rsquo;s dashboards support six visualization types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1385c29827c0421d323ac9f4284e20d06fd3c59" translate="yes" xml:space="preserve">
          <source>Chunking</source>
          <target state="translated">Chunking</target>
        </trans-unit>
        <trans-unit id="f7030183fa2f26de7d6b361e5d5e089258acb63a" translate="yes" xml:space="preserve">
          <source>Chunking can be used to return results in streamed batches rather than as a single response by setting the query string parameter &lt;code&gt;chunked=true&lt;/code&gt;. Responses will be chunked by series or by every 10,000 points, whichever occurs first. To change the maximum chunk size to a different value, set the query string parameter &lt;code&gt;chunk_size&lt;/code&gt; to a different value. For example, get your results in batches of 20,000 points with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d07749bab0d337c6f9229c51c09143514fff6ec9" translate="yes" xml:space="preserve">
          <source>Clauses</source>
          <target state="translated">Clauses</target>
        </trans-unit>
        <trans-unit id="1b3230b2c8108952a4ba74c608fc8a7fc7bff90f" translate="yes" xml:space="preserve">
          <source>Click &lt;code&gt;Connect New Source&lt;/code&gt; to move on to the &lt;code&gt;HOST LIST&lt;/code&gt; page:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b10a2bddb1eefcad2e8f5a084cb5eb7b0fcbc51a" translate="yes" xml:space="preserve">
          <source>Click on the &lt;code&gt;t.me/&amp;lt;bot-username&amp;gt;&lt;/code&gt; link in &lt;code&gt;@BotFather&lt;/code&gt;&amp;rsquo;s response and click &lt;code&gt;Start&lt;/code&gt; at the bottom of your Telegram application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41c3089d1a81a473bd023f6b82ae91a76a679344" translate="yes" xml:space="preserve">
          <source>Click on the blue &lt;code&gt;Add a Query&lt;/code&gt; button to create and edit an &lt;a href=&quot;../../../../influxdb/v1.3/query_language/index&quot;&gt;InfluxQL&lt;/a&gt; query. In query editor mode, use the builder to select from your existing data and allow Chronograf to format the query for you. Alternatively, manually enter and edit a query. Chronograf allows you to move seamlessly between using the builder and manually editing the query; when possible, the interface automatically populates the builder with the information from your raw query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f33b67dfbaa759dcb5ba52bb792f1cfe1cb4e3c9" translate="yes" xml:space="preserve">
          <source>Click on the carrot in the existing cell&amp;rsquo;s top right corner and select &lt;code&gt;Edit&lt;/code&gt;. This step takes you to cell editor mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fbf11d862bcd1ba4e0039dde9e9083123dce36f" translate="yes" xml:space="preserve">
          <source>Click on the green checkmark to save your cell. Note that Chronograf does not save your cell if you navigate away from this page without clicking that checkmark.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd075d50affc73f4924a3d3d2b365751a2f76b41" translate="yes" xml:space="preserve">
          <source>Click save, and then take note of your Domain, Client ID, and Secret at the top of the page. These should be inserted into the following environment variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8f417d6f8fc0a2ab00d5a4fdedff4ccb884fd34" translate="yes" xml:space="preserve">
          <source>Click the &quot;Add Service&quot; button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9a355f032565014a1914299fd104f860e083049" translate="yes" xml:space="preserve">
          <source>Click the &lt;code&gt;Rename&lt;/code&gt; icon at the top of the page. Name your dashboard anything you want. Here, we call it &lt;code&gt;ChronoDash&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d75dc68bbdd56c9cbd58d4bbdabda84bcca2c47f" translate="yes" xml:space="preserve">
          <source>Cluster</source>
          <target state="translated">Cluster</target>
        </trans-unit>
        <trans-unit id="1a0aca923eb94a35ef4ba75f39e9b5e9a5ad721b" translate="yes" xml:space="preserve">
          <source>Cluster is the name of the Kubernetes cluster to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1c68c22e6d9048be8630800d6c67f9b3dce775d" translate="yes" xml:space="preserve">
          <source>Clustering</source>
          <target state="translated">Clustering</target>
        </trans-unit>
        <trans-unit id="adac69379a626c2436948a4ef1792c7d719ef929" translate="yes" xml:space="preserve">
          <source>Code</source>
          <target state="translated">Code</target>
        </trans-unit>
        <trans-unit id="9de0e8a4ef3c013b40585f443ffb8bc655e4d019" translate="yes" xml:space="preserve">
          <source>Collectd</source>
          <target state="translated">Collectd</target>
        </trans-unit>
        <trans-unit id="b33a876af526a63f45ab41ee3f3391875ee8b2d3" translate="yes" xml:space="preserve">
          <source>Collectd Configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de57852151fbf7fc6890d317957894982e995a54" translate="yes" xml:space="preserve">
          <source>Collectd:</source>
          <target state="translated">Collectd:</target>
        </trans-unit>
        <trans-unit id="b03b3ecd8a76de646939a5bf06f84bcf170b45a7" translate="yes" xml:space="preserve">
          <source>Collection jitter is used to prevent every input plugin from collecting metrics simultaneously, which can have a measurable effect on the system. Each collection interval, every input plugin will sleep for a random time between zero and the collection jitter before collecting the metrics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d04e0fa9775766030300ce1babf8c3dc0c01f4" translate="yes" xml:space="preserve">
          <source>Combine</source>
          <target state="translated">Combine</target>
        </trans-unit>
        <trans-unit id="ae00ac15e4e50485dea818001e2a2b15c7fee93e" translate="yes" xml:space="preserve">
          <source>Combine Node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc8ed61421a6d4a4087a4ee014219f642bab9b6c" translate="yes" xml:space="preserve">
          <source>Combine the data from a single node with itself. Points with the same time are grouped and then combinations are created. The size of the combinations is defined by how many expressions are given. Combinations are order independent and will not ever include the same point multiple times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c15ac0a29ff0fc36eeca8fb5a1ff32cbe58ce806" translate="yes" xml:space="preserve">
          <source>Combine the measurements and tags columns in the Data Explorer and implement a new design for applying functions to fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf79d3359dca2e3b524c5a658e3a2b571fe04b2" translate="yes" xml:space="preserve">
          <source>Combine this node with itself. The data are combined on timestamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d19339590ed6dfb267ef7cefd6474aa9aae214" translate="yes" xml:space="preserve">
          <source>CombineNode</source>
          <target state="translated">CombineNode</target>
        </trans-unit>
        <trans-unit id="8901895fb1b1d4c4ea2fec368c25176bf73e2f7e" translate="yes" xml:space="preserve">
          <source>Command</source>
          <target state="translated">Command</target>
        </trans-unit>
        <trans-unit id="e7d3c5a2a69a1e7554cc4d6cced80eec24d1af6c" translate="yes" xml:space="preserve">
          <source>Command:</source>
          <target state="translated">Command:</target>
        </trans-unit>
        <trans-unit id="45e5f3f72e961cb70134ba35f7a27a9620e515f7" translate="yes" xml:space="preserve">
          <source>Commands</source>
          <target state="translated">Commands</target>
        </trans-unit>
        <trans-unit id="fce06e20e5f7f74aacccab40b59b75a56c8f7305" translate="yes" xml:space="preserve">
          <source>Comments</source>
          <target state="translated">Comments</target>
        </trans-unit>
        <trans-unit id="73a0fc417ec61417447d1a9196beba9e29a5fa67" translate="yes" xml:space="preserve">
          <source>Common Issues with &lt;code&gt;BOTTOM()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a774149018ce33496c62f16c343c3a20f13b5450" translate="yes" xml:space="preserve">
          <source>Common Issues with &lt;code&gt;HOLT_WINTERS()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d6278d2d4a551df4883a9f81b9f049197db2d82" translate="yes" xml:space="preserve">
          <source>Common Issues with &lt;code&gt;SAMPLE()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af5a8419f55b00a17a68a27cd9c78534433352b7" translate="yes" xml:space="preserve">
          <source>Common Issues with &lt;code&gt;TOP()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd16fa16270d165b2eea842d452427f073d49a90" translate="yes" xml:space="preserve">
          <source>Common Issues with Advanced Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0da5aca8a21a9b813a1a511afbb66cfff4e3551a" translate="yes" xml:space="preserve">
          <source>Common Issues with Basic Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="457de09709403c9d6e2c896b402837ba6ad411d3" translate="yes" xml:space="preserve">
          <source>Common Issues with COUNT()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a319a65d376f9e3355c35a77efc5a2ec1b1d8474" translate="yes" xml:space="preserve">
          <source>Common Issues with DISTINCT()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f77f391fe893a82b60de2188c632311d59abb83" translate="yes" xml:space="preserve">
          <source>Common Issues with ELAPSED()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06ddb7857fcd93eead1d19fa63c7dfcee7a519d7" translate="yes" xml:space="preserve">
          <source>Common Issues with Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26684694f622a03e0e704ed65885bfe85a3d5221" translate="yes" xml:space="preserve">
          <source>Common Issues with Mathematical Operators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba93f023089d27ed7ff4afd2f94f70855199198b" translate="yes" xml:space="preserve">
          <source>Common Issues with PERCENTILE()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da2ad9d608fc1299b82503c5d91692f7859a280c" translate="yes" xml:space="preserve">
          <source>Common Issues with SHOW FIELD KEYS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57f85158091febf20318c140c48d09371c270a8f" translate="yes" xml:space="preserve">
          <source>Common Issues with Subqueries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95455e0af1d55560e3b3c6daa69ddee819e32f8c" translate="yes" xml:space="preserve">
          <source>Common Issues with Time Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23a8ade8ea81e96d065d511859f40c973780e4b7" translate="yes" xml:space="preserve">
          <source>Common Issues with the &lt;code&gt;INTO&lt;/code&gt; clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5b1a0bfef16e49369b818d9470993966dfe7dc2" translate="yes" xml:space="preserve">
          <source>Common Issues with the &lt;code&gt;WHERE&lt;/code&gt; Clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a55f0d77352ddf455e01f0fb325e4af0bcefc54" translate="yes" xml:space="preserve">
          <source>Common Issues with the SELECT statement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42fac0057fcdcd763173aa201bd037a0219d7ed4" translate="yes" xml:space="preserve">
          <source>Common issues with &lt;code&gt;fill()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a66e9a2bcc007a8cc9791f8b91a87dbbc73fa8d6" translate="yes" xml:space="preserve">
          <source>Compaction Planner - The Compaction Planner determines which TSM files are ready for a compaction and ensures that multiple concurrent compactions do not interfere with each other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ecd81b2745a8396ccf41756e369b9a6477aad0c" translate="yes" xml:space="preserve">
          <source>Compaction exhausting disk resources in InfluxDB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a02a997b7cb14d1266294a486d9c973978db299" translate="yes" xml:space="preserve">
          <source>Compactions</source>
          <target state="translated">Compactions</target>
        </trans-unit>
        <trans-unit id="a10c915246b70867be188234483504987a6d55cd" translate="yes" xml:space="preserve">
          <source>Compactions are recurring processes that migrate data stored in a write-optimized format into a more read-optimized format. There are a number of stages of compaction that take place while a shard is hot for writes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35f14e67ee5ea000ec7953d18166e08aca0a8e1b" translate="yes" xml:space="preserve">
          <source>Compactor - The Compactor is responsible for converting less optimized Cache and TSM data into more read-optimized formats. It does this by compressing series, removing deleted data, optimizing indices and combining smaller files into larger ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8adf4cb9931bf7e976b78e0719183e580734e545" translate="yes" xml:space="preserve">
          <source>Compare predicted values with actual values to detect anomalies in your data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8da12a1cdcbf958ea6550846de486fb06ab7da2f" translate="yes" xml:space="preserve">
          <source>Compare your old configuration file against the &lt;a href=&quot;../config/index&quot;&gt;1.3 configuration file&lt;/a&gt; and manually update any defaults with your localized settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d0f8a53815faa2d6c225793e5717925edbe9cf" translate="yes" xml:space="preserve">
          <source>Comparison to SQL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c08a84dc0c1e7dac2e088a9e6ef2a22c9436e057" translate="yes" xml:space="preserve">
          <source>Complex queries:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c70d40d2f99976a7c11de80799aad231b24efe5" translate="yes" xml:space="preserve">
          <source>Compress the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ead4045fbadbc2f0b37b6046e5803972459710" translate="yes" xml:space="preserve">
          <source>Compression</source>
          <target state="translated">Compression</target>
        </trans-unit>
        <trans-unit id="11b397d7850534351dce655138551e3e4db0e74b" translate="yes" xml:space="preserve">
          <source>Compression - Compression is handled by various Encoders and Decoders for specific data types. Some encoders are fairly static and always encode the same type the same way; others switch their compression strategy based on the shape of the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eddaa8bfdba7c7309206c8b6722c118ce1d62536" translate="yes" xml:space="preserve">
          <source>Compute a cumulative sum of each point that is received. A point is emitted for every point collected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bcec61eb90b54e5dabc9238cd8935ef4124ab20" translate="yes" xml:space="preserve">
          <source>Compute a moving average of the last window points. No points are emitted until the window is full.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16d7d51aa58becb8187ced6ed03a43a24508cf6b" translate="yes" xml:space="preserve">
          <source>Compute the derivative of a stream or batch. The derivative is computed on a single field and behaves similarly to the InfluxQL derivative function. Kapacitor has its own implementation of the derivative function, and, as a result, is not part of the normal InfluxQL functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff5d1a061936ffb2026c037cb1cc3a611c0968b2" translate="yes" xml:space="preserve">
          <source>Compute the difference between &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt; points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a63ac429f293b06830412bca95aa3a6cb932bb" translate="yes" xml:space="preserve">
          <source>Compute the difference between points independent of elapsed time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cf9b1e5e4b5a662228702351f9176ea345b1d74" translate="yes" xml:space="preserve">
          <source>Compute the duration of a given state. The state is defined via a lambda expression. For each consecutive point for which the expression evaluates as true, the state duration will be incremented by the duration between points. When a point evaluates as false, the state duration is reset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13fc53277aaeda49aee19f6ea188ff00cf421e19" translate="yes" xml:space="preserve">
          <source>Compute the elapsed time between points</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="057a922fef61007003be5996dddc4236fb2a6238" translate="yes" xml:space="preserve">
          <source>Compute the holt-winters (&lt;a href=&quot;https://docs.influxdata.com/influxdb/latest/query_language/functions/#holt-winters&quot;&gt;https://docs.influxdata.com/influxdb/latest/query_language/functions/#holt-winters&lt;/a&gt;) forecast of a data set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5d08aa710b2cac82e64366da8811b211a55a585" translate="yes" xml:space="preserve">
          <source>Compute the holt-winters (&lt;a href=&quot;https://docs.influxdata.com/influxdb/latest/query_language/functions/#holt-winters&quot;&gt;https://docs.influxdata.com/influxdb/latest/query_language/functions/#holt-winters&lt;/a&gt;) forecast of a data set. This method also outputs all the points used to fit the data in addition to the forecasted data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69183053bbafeefe9f8c87ec927312475c0835da" translate="yes" xml:space="preserve">
          <source>Compute the mean of the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18e7d0133ed60714d14165dcca228aab9023bc87" translate="yes" xml:space="preserve">
          <source>Compute the median of the data. Note, this method is not a selector, if you want the median point use &lt;code&gt;.percentile(field, 50.0)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3138fbac886903a89e19b2517187581ba20eb05" translate="yes" xml:space="preserve">
          <source>Compute the mode of the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff9398bcf3655dcb781df8fa7b32272d1987fb22" translate="yes" xml:space="preserve">
          <source>Compute the number of consecutive points in a given state. The state is defined via a lambda expression. For each consecutive point for which the expression evaluates as true, the state count will be incremented When a point evaluates as false, the state count is reset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ef1405c14caebf50a0a4afc29ded1562ab95c04" translate="yes" xml:space="preserve">
          <source>Compute the standard deviation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0393d6a28cd82ca3b7177a46a8abef1f776352e" translate="yes" xml:space="preserve">
          <source>Compute the sum of all values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60c5b8cae001dba4394d8f5ee9394b0a2f4032d7" translate="yes" xml:space="preserve">
          <source>Computes the derivative via: (current - previous ) / ( time_difference / unit)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c878180c30c3a5f2b01577d90e9e9539dd6b3b1" translate="yes" xml:space="preserve">
          <source>Computes the number of standard deviations a given value is away from the running mean. Each time the expression is evaluated the running mean and standard deviation are updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f58d263f33944384921df8405fd4a36e06175e2" translate="yes" xml:space="preserve">
          <source>Concepts</source>
          <target state="translated">Concepts</target>
        </trans-unit>
        <trans-unit id="f89346160d3496654d946fa5224efac486925cec" translate="yes" xml:space="preserve">
          <source>Conceptually you can think of a &lt;code&gt;measurement&lt;/code&gt; as an SQL table, where the primary index is always time. &lt;code&gt;tags&lt;/code&gt; and &lt;code&gt;fields&lt;/code&gt; are effectively columns in the table. &lt;code&gt;tags&lt;/code&gt; are indexed, and &lt;code&gt;fields&lt;/code&gt; are not. The difference is that, with InfluxDB, you can have millions of measurements, you don&amp;rsquo;t have to define schemas up-front, and null values aren&amp;rsquo;t stored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e39262defe80a83fac1b793497417432c8b1a879" translate="yes" xml:space="preserve">
          <source>Conclusion</source>
          <target state="translated">Conclusion</target>
        </trans-unit>
        <trans-unit id="c485a1fb3839c1fb60865b49d13785f0d232a627" translate="yes" xml:space="preserve">
          <source>Concurrent map read write panic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fe891e325a28603b938ca1667e5089dbd749c04" translate="yes" xml:space="preserve">
          <source>Concurrent series limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f701f3d9e7475362a666964cc5a2f3fa4278cb7" translate="yes" xml:space="preserve">
          <source>Conditional Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2deaf6969b7ca6516f6cd262d87aa606fc6fddf" translate="yes" xml:space="preserve">
          <source>Config File</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df5d4032048c2a9879bbd8f0e24d9fa9cc8ddb3" translate="yes" xml:space="preserve">
          <source>Config option &lt;code&gt;[cluster]&lt;/code&gt; has been replaced with &lt;code&gt;[coordinator]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8a82eb2f167baa6aae0b62b8a97c1d3db5cb0ea" translate="yes" xml:space="preserve">
          <source>Config option &lt;code&gt;data-logging-enabled&lt;/code&gt; within the &lt;code&gt;[data]&lt;/code&gt; section, has been renamed to &lt;code&gt;trace-logging-enabled&lt;/code&gt;, and defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b25c5503ae1ed3103529aa5ad0fd40f04fd476c" translate="yes" xml:space="preserve">
          <source>Config override service not enabled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17dff12fc22b42de14fbe8d3a0bdc47520ead74f" translate="yes" xml:space="preserve">
          <source>Configurable HTTP timeouts in Jolokia plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">Configuration</target>
        </trans-unit>
        <trans-unit id="f613c5857eb297efdab332409dfda3740aa561e0" translate="yes" xml:space="preserve">
          <source>Configuration Changes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee7451289d1fa17976baf9de9126ed41171aac3a" translate="yes" xml:space="preserve">
          <source>Configuration File</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="654974f285aec907b7d13b6ba245df3e39aab7b7" translate="yes" xml:space="preserve">
          <source>Configuration Options Overview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea267da4cb15e9467e6a19b1d5cffdd628a294e" translate="yes" xml:space="preserve">
          <source>Configuration Settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faf3f4367e0e91dda363216e88a2b606903014f2" translate="yes" xml:space="preserve">
          <source>Configuration and Security</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80c0404f8da7dfcb07574f8a5d8bd6dc8aad7856" translate="yes" xml:space="preserve">
          <source>Configuration file location by installation type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="062afb7d0648146506a1657f4233f19e80ccc656" translate="yes" xml:space="preserve">
          <source>Configuration file locations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b86c0910e071c603632ab902baa2a491dd106ef" translate="yes" xml:space="preserve">
          <source>Configuration file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73fba460d7f56fa69817fe0fc4ff6388996c7d09" translate="yes" xml:space="preserve">
          <source>Configuration options by section</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8a692faff6f3c86e2c8dc220f828d3d9aeed3ad" translate="yes" xml:space="preserve">
          <source>Configuration options not specified in the request will be left unmodified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="877cdf22c1d80842b4db63813dd8f56e303c4c02" translate="yes" xml:space="preserve">
          <source>Configuration options overview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f84014e18b8914ce7eca4bf0136ac9360313c190" translate="yes" xml:space="preserve">
          <source>Configuration options that specify a duration support the following duration units:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79067e585b7690434c82d28d2bdc5d44de36e5c9" translate="yes" xml:space="preserve">
          <source>Configuration settings for query management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce45cc78cdb839345be183387d0b71d4c6534ee1" translate="yes" xml:space="preserve">
          <source>Configure Kapacitor Event Handlers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e0698f50474957b6d8428d6f3220a4d24ef70ab" translate="yes" xml:space="preserve">
          <source>Configure Kapacitor to Talk to the UDF</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6e6fcd55511b1183c8936d51d51b7f788f41a71" translate="yes" xml:space="preserve">
          <source>Configure Kapacitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9fbae8314b29e36a3a5739e20b85fc4d27f4f3c" translate="yes" xml:space="preserve">
          <source>Configure a Kapacitor alert rule</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e17ea20354fe65669be9a69808cbaad576b65474" translate="yes" xml:space="preserve">
          <source>Configure dashboard-wide settings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc70c005c28869d53975f3ef62539f590b784f59" translate="yes" xml:space="preserve">
          <source>Configure the JWT signature and the OAuth provider to use authentication in Chronograf.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e563e36399b0565657ffc05a1638d45d0fd65f1" translate="yes" xml:space="preserve">
          <source>Configure the variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="984fa64c5b70f22a34f5e2426b608f4d4d40fe83" translate="yes" xml:space="preserve">
          <source>Configuring Kapacitor for our UDF</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20da07fc578a404b10221b3391d90a9013564864" translate="yes" xml:space="preserve">
          <source>Configuring Scrapers and Discoverers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce94e362992aa198e866b706c0d14d4873e98d5b" translate="yes" xml:space="preserve">
          <source>Configuring the Instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="000900723de24e9c0a09fdbcf726dd2f364e8cce" translate="yes" xml:space="preserve">
          <source>Configuring the look of the login page</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f2022ad0fd1cbb430c1fe9172dd8b2deef6e34e" translate="yes" xml:space="preserve">
          <source>Connect Telegraf to a secured InfluxDB instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de901bdc67d1aa430b43710196c964df900eae66" translate="yes" xml:space="preserve">
          <source>Connecting &lt;a href=&quot;../../../../telegraf/v1.3/index&quot;&gt;Telegraf&lt;/a&gt; to an InfluxDB instance that&amp;rsquo;s using HTTPS requires some additional steps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d6f6f3641408505bf20970bdf19ea03970c757d" translate="yes" xml:space="preserve">
          <source>Consider the following schema represented by line protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37baee4d69952be300a7a9c9903525731b7ec916" translate="yes" xml:space="preserve">
          <source>Consul</source>
          <target state="translated">Consul</target>
        </trans-unit>
        <trans-unit id="c5863f39d00bff72d399b5a68a324a1456523513" translate="yes" xml:space="preserve">
          <source>Consul input plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2c6bb4f35951b14c01ab73d8f3bdf96ce1bc030" translate="yes" xml:space="preserve">
          <source>Consul plugin: add check_id as a tag in metrics to avoid overwrites.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34934709770c553d0f5001308cf0534d30feb20a" translate="yes" xml:space="preserve">
          <source>Contains internal information about the status of the system. The metastore contains the user information, databases, retention policies, shard metadata, continuous queries, and subscriptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f9be057f0ea5d2ba72fd2c810e8d7b9aa98b469" translate="yes" xml:space="preserve">
          <source>Content</source>
          <target state="translated">Content</target>
        </trans-unit>
        <trans-unit id="6351e951a02872ac253927f59bdd6f28cef95bd9" translate="yes" xml:space="preserve">
          <source>Continuous Queries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e0f1bf8e95bcf4ef1af7bbf7008cc0ed01e78dc" translate="yes" xml:space="preserve">
          <source>Continuous Queries (CQ) are InfluxQL queries that run automatically and periodically on realtime data and store query results in a specified measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9923a7a644ee3525209906c90595540349b0f12" translate="yes" xml:space="preserve">
          <source>Continuous Query Management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="290fc07834186de455bdb4cc2e9d01d8a18a35f5" translate="yes" xml:space="preserve">
          <source>Continuous Query Statistics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb5c4cb80051b3ac14cd08468d8907e0187392f0" translate="yes" xml:space="preserve">
          <source>Continuous Query Use Cases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9597c24d1544cf419fc7a022a732217fa94480e" translate="yes" xml:space="preserve">
          <source>Continuous full compactions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d82a4b27a4b305690d5ac612046a955778a9fa5" translate="yes" xml:space="preserve">
          <source>Contributing</source>
          <target state="translated">Contributing</target>
        </trans-unit>
        <trans-unit id="b2e28f22ed4ee77ea705ef95dd0125897b4533d8" translate="yes" xml:space="preserve">
          <source>Contributing non output node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7435c2265971b42e403c45695328b25ea541acd3" translate="yes" xml:space="preserve">
          <source>Controls how long an http request for the subscriber service will run before it times out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c027eb701fbb9d6ead751b59058f73dfaf65c5df" translate="yes" xml:space="preserve">
          <source>Controls the listener for OpenTSDB data. See the &lt;a href=&quot;https://github.com/influxdb/influxdb/blob/master/services/opentsdb/README.md&quot;&gt;README&lt;/a&gt; on GitHub for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c65fc104287a97c5148fe48838aad0dd164d5927" translate="yes" xml:space="preserve">
          <source>Controls the precreation of shards so that shards are available before data arrive. Only shards that, after creation, will have both a start- and end-time in the future are ever created. Shards that would be wholly or partially in the past are never precreated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4873b86e37904e84d3f887674aee344cb5b41afd" translate="yes" xml:space="preserve">
          <source>Convert the result of an expression into a tag. The result must be a string. Use the &lt;code&gt;string()&lt;/code&gt; expression function to convert types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b7f619c1731a78fe45387518c61f1e1c03ecb8" translate="yes" xml:space="preserve">
          <source>Converts a bool, int64 or float64 into an string via Go&amp;rsquo;s &lt;a href=&quot;https://golang.org/pkg/strconv/#FormatBool&quot;&gt;strconv.Format*&lt;/a&gt; functions. Durations are converted to a string representation of the duration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b49a99b09178eabac12984dce9aec392ad5ac0e" translate="yes" xml:space="preserve">
          <source>Converts a int64 or float64 into an duration assuming nanoseconds units. Strings are converted to duration of the form as duration literals in TICKscript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbcfe304664f518f54da6fcb51df43135fb651a7" translate="yes" xml:space="preserve">
          <source>Converts a int64 or float64 with units bytes into a human readable string representing the number of bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bb9fe4667c185879aa38d1704d70dd00890db18" translate="yes" xml:space="preserve">
          <source>Converts a string into a boolean via Go&amp;rsquo;s &lt;a href=&quot;https://golang.org/pkg/strconv/#ParseBool&quot;&gt;strconv.ParseBool&lt;/a&gt; function. Numeric types can also be converted to a bool where a 0 -&amp;gt; false and 1 -&amp;gt; true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38e1b05290f2e9d73087f2eaed0535ded2e10527" translate="yes" xml:space="preserve">
          <source>Converts a string or float64 into an int64 via Go&amp;rsquo;s &lt;a href=&quot;https://golang.org/pkg/strconv/#ParseInt&quot;&gt;strconv.ParseInt&lt;/a&gt; or simple &lt;code&gt;float64()&lt;/code&gt; coercion. Strings are assumed to be decimal numbers. Durations are converted into an int64 with nanoseconds units. A boolean is converted to an int64 where false -&amp;gt; 0 and true -&amp;gt; 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fdb8f81e6d695c3fc944624fb03e8ccbdb8d994" translate="yes" xml:space="preserve">
          <source>Converts a string or int64 into an float64 via Go&amp;rsquo;s &lt;a href=&quot;https://golang.org/pkg/strconv/#ParseInt&quot;&gt;strconv.ParseFloat&lt;/a&gt; or simple &lt;code&gt;int64()&lt;/code&gt; coercion. A boolean is converted to an float64 where false -&amp;gt; 0.0 and true -&amp;gt; 1.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e03c8cd5f87574db8b1a80499d51a08225fb81e" translate="yes" xml:space="preserve">
          <source>Copy tags in influx_stress to avoid a concurrent write panic on a map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd839458418db8d04cd5baef5b2ce3da560732fe" translate="yes" xml:space="preserve">
          <source>CopyShard</source>
          <target state="translated">CopyShard</target>
        </trans-unit>
        <trans-unit id="8102b4c974b76203bf48d5c65572207eac81a168" translate="yes" xml:space="preserve">
          <source>Correctly read in input from a non-interactive stream for the CLI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4b2d0948bde1c8482efa03bd0a262fbca51b8a6" translate="yes" xml:space="preserve">
          <source>Correctly use password-type field in Admin UI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b17b655c0904cccb87f841850df53a8ab3c54287" translate="yes" xml:space="preserve">
          <source>Cos returns the cosine of the radian argument x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aea87b623bfac6726a31f524f1570268bf8bb6a" translate="yes" xml:space="preserve">
          <source>Cosh returns the hyperbolic cosine of x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66e12969c225cc6d65e18210488acb826eba907e" translate="yes" xml:space="preserve">
          <source>Count</source>
          <target state="translated">Count</target>
        </trans-unit>
        <trans-unit id="21fe1955ec83aaba28b983e03931a8315c7868b6" translate="yes" xml:space="preserve">
          <source>Count takes no arguments but returns the number of times the expression has been evaluated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f5b2194031d06a68ea6187afd85b3a0d41f6ea" translate="yes" xml:space="preserve">
          <source>Count the number of non-null values of &lt;code&gt;water_level&lt;/code&gt; in &lt;code&gt;h2o_feet&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7ee53c653b664e7bfc7a19079a4dcc6d4fa2478" translate="yes" xml:space="preserve">
          <source>Count the number of points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98a3be211f1542f01e7e382812818375ee9ad66f" translate="yes" xml:space="preserve">
          <source>Covers InfluxQL for managing &lt;a href=&quot;../concepts/glossary/index#database&quot;&gt;databases&lt;/a&gt; and &lt;a href=&quot;../concepts/glossary/index#retention-policy-rp&quot;&gt;retention policies&lt;/a&gt; in InfluxDB. See Database Management for creating and dropping databases and retention policies as well as deleting and dropping data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9ab9c9b2b8407de171331bc6fcfbf3e2d475d3f" translate="yes" xml:space="preserve">
          <source>Covers all InfluxQL functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d589ce71cee85595e4c261b8e40b7295986fbacd" translate="yes" xml:space="preserve">
          <source>Covers how to &lt;a href=&quot;authentication_and_authorization/index#set-up-authentication&quot;&gt;set up authentication&lt;/a&gt; and how to &lt;a href=&quot;authentication_and_authorization/index#authenticating-requests&quot;&gt;authenticate requests&lt;/a&gt; in InfluxDB. This page also describes the different &lt;a href=&quot;authentication_and_authorization/index#user-types-and-their-privileges&quot;&gt;user types&lt;/a&gt; and the InfluxQL for &lt;a href=&quot;authentication_and_authorization/index#user-management-commands&quot;&gt;managing database users&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5ac9a948ff34df319f959afbc4558993c88c994" translate="yes" xml:space="preserve">
          <source>Covers queries that are useful for viewing and exploring your &lt;a href=&quot;../concepts/glossary/index#schema&quot;&gt;schema&lt;/a&gt;. See Schema Exploration for syntax explanations and examples of InfluxQL&amp;rsquo;s &lt;code&gt;SHOW&lt;/code&gt; queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44bdd6a82084f1d960ce1a49c100096fe9e6ec81" translate="yes" xml:space="preserve">
          <source>Covers the &lt;a href=&quot;continuous_queries/index#basic-syntax&quot;&gt;basic syntax&lt;/a&gt; , &lt;a href=&quot;continuous_queries/index#advanced-syntax&quot;&gt;advanced syntax&lt;/a&gt; , and &lt;a href=&quot;continuous_queries/index#cq-use-cases&quot;&gt;common use cases&lt;/a&gt; for &lt;a href=&quot;../concepts/glossary/index#continuous-query-cq&quot;&gt;Continuous Queries&lt;/a&gt;. This page also describes how to &lt;a href=&quot;continuous_queries/index#list-cqs&quot;&gt;&lt;code&gt;SHOW&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;continuous_queries/index#delete-cqs&quot;&gt;&lt;code&gt;DROP&lt;/code&gt;&lt;/a&gt; Continuous Queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b14a88583d4d33d2b08aab8ffd2ea82280ff819e" translate="yes" xml:space="preserve">
          <source>Covers the query language basics for InfluxQL, including the &lt;a href=&quot;data_exploration/index#the-basic-select-statement&quot;&gt;&lt;code&gt;SELECT&lt;/code&gt; statement&lt;/a&gt;, &lt;a href=&quot;data_exploration/index#the-group-by-clause&quot;&gt;&lt;code&gt;GROUP BY&lt;/code&gt; clauses&lt;/a&gt;, &lt;a href=&quot;data_exploration/index#the-into-clause&quot;&gt;&lt;code&gt;INTO&lt;/code&gt; clauses&lt;/a&gt;, and more. See Data Exploration to learn about &lt;a href=&quot;data_exploration/index#time-syntax&quot;&gt;time syntax&lt;/a&gt; and &lt;a href=&quot;data_exploration/index#regular-expressions&quot;&gt;regular expressions&lt;/a&gt; in queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e747d1089efb3572c0c8ee096fc4e7a366188d4" translate="yes" xml:space="preserve">
          <source>Covers the use of mathematical operators in InfluxQL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e157c5da4410b7e9de85f5c93026b9176e69064" translate="yes" xml:space="preserve">
          <source>Create</source>
          <target state="translated">Create</target>
        </trans-unit>
        <trans-unit id="9d86b6f2cb54ee7732e3c11cb1adb280e7096a04" translate="yes" xml:space="preserve">
          <source>Create a Dashboard</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10fb1a139fe1dce540c6db93a80a2aece4f77c9f" translate="yes" xml:space="preserve">
          <source>Create a Handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="290fe4a9d62538dbc4bfc2552a6d82ea31c557e0" translate="yes" xml:space="preserve">
          <source>Create a Kapacitor Alert</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6338d93acd936f833a65422a7dc68072886128a2" translate="yes" xml:space="preserve">
          <source>Create a configuration file with default input and output plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c3044f6b1690e072fa3444596eaa983210f6fd8" translate="yes" xml:space="preserve">
          <source>Create a configuration file with specific inputs and outputs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a0a297c73e45ce450b6713ac4afefe92213aba9" translate="yes" xml:space="preserve">
          <source>Create a continuous query to down sample across retention policies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae5d1e9f21061f2a57a33fb449ebd6fba0b88e2" translate="yes" xml:space="preserve">
          <source>Create a copy of the 0.10 or 0.11 &lt;code&gt;meta&lt;/code&gt; directory in &lt;code&gt;backups/&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f5f3c6bd2f3e00bf12ee4e2c0fe3fb9d7650d2e" translate="yes" xml:space="preserve">
          <source>Create a new node that computes the derivative of adjacent points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27d38d073c0526e2f890acad18f4d8be1372bf79" translate="yes" xml:space="preserve">
          <source>Create a new node that filters the data stream by a given expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50b52689a06d4213001cb3452174be82ca2fa759" translate="yes" xml:space="preserve">
          <source>Create a new node that samples the incoming points or batches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82bc0ba88f1dce3bb18de6fec4b2edb11896d43c" translate="yes" xml:space="preserve">
          <source>Create a new node that shifts the incoming points or batches in time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90d71058081dd22be2711b0f6815af486d59dc3d" translate="yes" xml:space="preserve">
          <source>Create a new node that windows the stream by time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59d7e4a16546f9065856c9bf03427a644dd535de" translate="yes" xml:space="preserve">
          <source>Create a new stream of data that contains the internal statistics of the node. The interval represents how often to emit the statistics based on real time. This means the interval time is independent of the times of the data points the source node is receiving.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ab98583f253cf558aa750583da6bd5468caac3f" translate="yes" xml:space="preserve">
          <source>Create a new task with ID TASK_ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38169b9c5b79525770f67cac7b585bb524c290ff" translate="yes" xml:space="preserve">
          <source>Create a new template and reassign each task to the new template updating the task vars as needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="998409bec39a923a1bc56bfeea96577538100cd1" translate="yes" xml:space="preserve">
          <source>Create a new template with ID TEMPLATE_ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="948477925f09f0788f869fbb7e633a12d1fb14c4" translate="yes" xml:space="preserve">
          <source>Create a node that can delete tags or fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="701f2dc52141a20f915af65bf5bccfb1ade208e8" translate="yes" xml:space="preserve">
          <source>Create a node that can set defaults for missing tags or fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dc52056ebc93819df75e6a9c92762a78e6a18f9" translate="yes" xml:space="preserve">
          <source>Create a node that can trigger autoscale events for a kubernetes cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3252134d0ab2edb86dd3db3cddb7eb8c2b551c7" translate="yes" xml:space="preserve">
          <source>Create a node that logs all data it receives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71780940fdc6f85d82a45a6c7fc90af4279d7a7e" translate="yes" xml:space="preserve">
          <source>Create a node that tracks duration in a given state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a0722c7d82bcf1a6e8ed590d7df08c84448b8da" translate="yes" xml:space="preserve">
          <source>Create a node that tracks number of consecutive points in a given state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08f1fec07949b431094bd8ca8633c14cbdf7df61" translate="yes" xml:space="preserve">
          <source>Create a recording using the &lt;code&gt;batch&lt;/code&gt; method specifying a start time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e246a8cb687d223413a8d0fb58ea1e70a196970" translate="yes" xml:space="preserve">
          <source>Create a recording using the &lt;code&gt;query&lt;/code&gt; method specifying a &lt;code&gt;batch&lt;/code&gt; type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42d6f68a30c488aeb52b88f695b9da6386484c18" translate="yes" xml:space="preserve">
          <source>Create a recording using the &lt;code&gt;query&lt;/code&gt; method specifying a &lt;code&gt;stream&lt;/code&gt; type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d2c1b693dd444b4c6b1261458b962709548a329" translate="yes" xml:space="preserve">
          <source>Create a recording using the &lt;code&gt;stream&lt;/code&gt; method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e388a5a289d0dc271bab1dd97b801401f1ffefb9" translate="yes" xml:space="preserve">
          <source>Create a recording with a custom ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf0d4e36d757c186b2cc8fa0527e84d1ba3b773" translate="yes" xml:space="preserve">
          <source>Create a replay with a custom ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00ed6e8b1a6c03acca0fe667a8825e6030f9ba0e" translate="yes" xml:space="preserve">
          <source>Create an HTTP output node that caches the most recent data it has received. The cached data are available at the given endpoint. The endpoint is the relative path from the API endpoint of the running task. For example, if the task endpoint is at &lt;code&gt;/kapacitor/v1/tasks/&amp;amp;lt;task_id&amp;amp;gt;&lt;/code&gt; and endpoint is &lt;code&gt;top10&lt;/code&gt;, then the data can be requested from &lt;code&gt;/kapacitor/v1/tasks/&amp;amp;lt;task_id&amp;amp;gt;/top10&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0db77e3bba63b064ce36cd99833092d2d0e5ef3" translate="yes" xml:space="preserve">
          <source>Create an alert node, which can trigger alerts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="663148fd8ec8867405d5bb1aac6a2520a1496a8d" translate="yes" xml:space="preserve">
          <source>Create an eval node that will evaluate the given transformation function to each data point. A list of expressions may be provided and will be evaluated in the order they are given. The results are available to later expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c9ac6bd1a07b9b7e871d8cbc37d65250ac76987" translate="yes" xml:space="preserve">
          <source>Create an influxdb output node that will store the incoming data into InfluxDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78a18e47993d7baa1c63a33eb5a5dcf98f2eb693" translate="yes" xml:space="preserve">
          <source>Create an kapacitor loopback node that will send data back into Kapacitor as a stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e25edd4480563cc4840c39e8cb854bf0827fe02" translate="yes" xml:space="preserve">
          <source>Create data_dir on startup if it does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecb18ecbcad438ae144cda7fd2ef4dfc8c2a2820" translate="yes" xml:space="preserve">
          <source>Create indicates that both the database and retention policy will be created, when the task is started. If the retention policy name is empty than no retention policy will be specified and the default retention policy name will be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baf25ef3afce6c82cce7db4321022968f261a654" translate="yes" xml:space="preserve">
          <source>Create man pages for commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f28e671a38c2ee6d5f0db6fce6028f3dc1bb3de" translate="yes" xml:space="preserve">
          <source>Create pidfile with 644 permissions &amp;amp; defer file deletion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="520b6a6426c7d41a855148686d0062a4d51fbd84" translate="yes" xml:space="preserve">
          <source>Create retention policies with CREATE RETENTION POLICY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9f6ee1ef97fbcef8034e1f3b82600be66848c5" translate="yes" xml:space="preserve">
          <source>Create the below snippet as the file &lt;code&gt;/tmp/prom/localhost.json&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8cffceb9d5a8492dcc286d6dfec2a1612aa4afc" translate="yes" xml:space="preserve">
          <source>Create the directory &lt;code&gt;C:\Program Files\Telegraf&lt;/code&gt; (if you install in a different location simply specify the &lt;code&gt;-config&lt;/code&gt; parameter with the desired location)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="318ca5eb4d58d0f0826aed9f9410f21539ab1fcf" translate="yes" xml:space="preserve">
          <source>Create, edit, and delete roles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f846876e80bc4f83c199eb6e031306b9cab6c2e7" translate="yes" xml:space="preserve">
          <source>Create, edit, and delete roles (available in InfluxEnterprise only)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f41c7ca1e65e5da70a00de41045e049541122738" translate="yes" xml:space="preserve">
          <source>CreateDatabase</source>
          <target state="translated">CreateDatabase</target>
        </trans-unit>
        <trans-unit id="c006dadf260cd8fd14ee1b4113030941a3077c24" translate="yes" xml:space="preserve">
          <source>CreateUserAndRole</source>
          <target state="translated">CreateUserAndRole</target>
        </trans-unit>
        <trans-unit id="cc5d5c3ca1e21f23e7c9822fadad9b2e63337489" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;a href=&quot;../from_node/index&quot;&gt;FromNode&lt;/a&gt; that can be further filtered using the Database, RetentionPolicy, Measurement and Where properties. From can be called multiple times to create multiple independent forks of the data stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a7d7e16c393fbd744d0d16ac7c5bfe4fefdbdde" translate="yes" xml:space="preserve">
          <source>Creates a new database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79aa546f783f53cef242c5366df13d77bf1ec85e" translate="yes" xml:space="preserve">
          <source>Creates a new stream node that can be further filtered using the Database, RetentionPolicy, Measurement and Where properties. From can be called multiple times to create multiple independent forks of the data stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fcf691700869a7af6d2d8e1bcc87a60131c1210" translate="yes" xml:space="preserve">
          <source>Creates an HTTP Post node that POSTS received data to the provided HTTP endpoint. HttpPost expects 0 or 1 arguments. If 0 arguments are provided, you must specify an endpoint property method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e83e7f6751c88f500398130471b8b60fe91fe1b2" translate="yes" xml:space="preserve">
          <source>Creating Github OAuth Application</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ef1e94a8421461d463e56742470ea0f51a73823" translate="yes" xml:space="preserve">
          <source>Creating Google OAuth Application</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2d077cbbcd0c9d8e568bd234d3be9fa5253af08" translate="yes" xml:space="preserve">
          <source>Creating Heroku Application</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="371158113667ae4a6e696877c9c5db9ab22fb55a" translate="yes" xml:space="preserve">
          <source>Creating OAuth Application using your own provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d81e9a0585aef20976adb68f4cb8df4643d8f7c" translate="yes" xml:space="preserve">
          <source>Creating a database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcbd55b428799d72eac0ce95d2c3c83d9bde12d9" translate="yes" xml:space="preserve">
          <source>Creating a database using the HTTP API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2746185db9a91774234b92ecd2e7c05ddf79f31e" translate="yes" xml:space="preserve">
          <source>Creating an Auth0 Application</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="386a943d34951e78d43225ea2ea9a16334b99c88" translate="yes" xml:space="preserve">
          <source>Creating and Editing the Configuration File</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4940a1f9e97069b9c8c2f4725d738aee77e70147" translate="yes" xml:space="preserve">
          <source>Creating and Removing Topics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1dfe39cb874e272f66f8dea9e43efa16470850c" translate="yes" xml:space="preserve">
          <source>Crit</source>
          <target state="translated">Crit</target>
        </trans-unit>
        <trans-unit id="efb4062112b3471162ec82b0f6638537e39bc21f" translate="yes" xml:space="preserve">
          <source>CritReset</source>
          <target state="translated">CritReset</target>
        </trans-unit>
        <trans-unit id="7124cac63f51d9545888f40dec485ec7955afe58" translate="yes" xml:space="preserve">
          <source>Cron</source>
          <target state="translated">Cron</target>
        </trans-unit>
        <trans-unit id="90aa122b5fd73f7cc1b38a978e4d6713ae55404a" translate="yes" xml:space="preserve">
          <source>CumulativeSum</source>
          <target state="translated">CumulativeSum</target>
        </trans-unit>
        <trans-unit id="df495466480e3a695a3f587346ffabd3b5886198" translate="yes" xml:space="preserve">
          <source>CurrentField</source>
          <target state="translated">CurrentField</target>
        </trans-unit>
        <trans-unit id="4fad8ad65938c9966c9966dff56d9957f81a82fd" translate="yes" xml:space="preserve">
          <source>CurrentField is the name of a field into which the current replica count will be set as an int. If empty no field will be set. Useful for computing deltas on the current state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50a2c0e0d35b3c9ac8d7647a2cf3d0f440622eaf" translate="yes" xml:space="preserve">
          <source>Currently Kapacitor is in 1.x release with a guarantee that all new releases will be backwards compatible with previous releases. This applies directly to the API. New additions may be made to the API but existing endpoints will not be changed in backwards incompatible ways during the 1.x releases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebeb85e661e47f331fdc60c5a06dbb71afe1d1d2" translate="yes" xml:space="preserve">
          <source>Currently, InfluxDB does not support mathematical operations within functions. We recommend using InfluxQL&amp;rsquo;s &lt;a href=&quot;../../query_language/data_exploration/index#subqueries&quot;&gt;subqueries&lt;/a&gt; as a workaround.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="594502ac4fe945aec6b01de948ab503a181042dd" translate="yes" xml:space="preserve">
          <source>Currently, InfluxDB does not support regular expressions with &lt;code&gt;DROP MEASUREMENTS&lt;/code&gt;. See GitHub Issue &lt;a href=&quot;https://github.com/influxdb/influxdb/issues/4275&quot;&gt;#4275&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e11963416fecd0ebaed87ebf79bbb70737446805" translate="yes" xml:space="preserve">
          <source>Currently, InfluxDB does not support using &lt;code&gt;OR&lt;/code&gt; with &lt;a href=&quot;../../query_language/data_exploration/index#absolute-time&quot;&gt;absolute time&lt;/a&gt; in the &lt;code&gt;WHERE&lt;/code&gt; clause. InfluxDB returns an empty response if the query&amp;rsquo;s &lt;code&gt;WHERE&lt;/code&gt; clause uses &lt;code&gt;OR&lt;/code&gt; with absolute time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27d860162370ec4423a564ed35def3ad93d6bbf9" translate="yes" xml:space="preserve">
          <source>Currently, InfluxDB does not support using &lt;code&gt;OR&lt;/code&gt; with absolute time in the &lt;code&gt;WHERE&lt;/code&gt; clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cc7c7d036dfbd35555ba2d2f78c62d33c7cdb68" translate="yes" xml:space="preserve">
          <source>Currently, InfluxDB does not support using &lt;code&gt;OR&lt;/code&gt; with absolute time in the &lt;code&gt;WHERE&lt;/code&gt; clause. See the &lt;a href=&quot;../../troubleshooting/frequently-asked-questions/index#why-is-my-query-with-a-where-or-time-clause-returning-empty-results&quot;&gt;Frequently Asked Questions&lt;/a&gt; document and the &lt;a href=&quot;https://github.com/influxdata/influxdb/issues/7530&quot;&gt;GitHub Issue&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4fc2b85f43dcbab347e69c9b9758b960ceb9f5e" translate="yes" xml:space="preserve">
          <source>Currently, InfluxDB offers very limited support for changing a field&amp;rsquo;s data type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ce09da44682c9c53d15585d42ef5a205838c259" translate="yes" xml:space="preserve">
          <source>Currently, InfluxQL does not support using regular expressions to match non-string field values in the &lt;code&gt;WHERE&lt;/code&gt; clause, &lt;a href=&quot;../../concepts/glossary/index#database&quot;&gt;databases&lt;/a&gt;, and &lt;a href=&quot;../../concepts/glossary/index#retention-policy-rp&quot;&gt;retention polices&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a6182a73c7eeb851b27a3f0a0b112880dfbb17" translate="yes" xml:space="preserve">
          <source>Currently, adding a &lt;a href=&quot;../../guides/dashboard-template-variables/index&quot;&gt;template variable&lt;/a&gt; to a cell&amp;rsquo;s query renders the query builder unusable. If you click on a database in the builder&amp;rsquo;s &lt;code&gt;Databases&lt;/code&gt; column after adding a template variable to your query, Chronograf simply overwrites your existing query. Note that this behavior does not apply to Chronograf&amp;rsquo;s pre-created template variable: &lt;code&gt;:dashboardTime:&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bcbcdc72033902693ec61be140959e65ed07bb5" translate="yes" xml:space="preserve">
          <source>Currently, it is not possible to execute mathematical operators against timestamp values in InfluxDB. Most time calculations must be carried out by the client receiving the query results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e19c385cad4b30df627e99840f452c57f8efca4f" translate="yes" xml:space="preserve">
          <source>Currently, queries ignore &lt;code&gt;fill()&lt;/code&gt; if no data fall within the query&amp;rsquo;s time range. This is the expected behavior. An open &lt;a href=&quot;https://github.com/influxdata/influxdb/issues/6967&quot;&gt;feature request&lt;/a&gt; on GitHub proposes that &lt;code&gt;fill()&lt;/code&gt; should force a return of values even if the query&amp;rsquo;s time range covers no data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba700baf6c54b52a5b86123607c03e1fa985b2c" translate="yes" xml:space="preserve">
          <source>Currently, there is no syntax to distinguish between regular expressions for field keys and regular expressions for tag keys in the &lt;code&gt;SELECT&lt;/code&gt; clause. The syntax &lt;code&gt;/&amp;lt;regular_expression&amp;gt;/::[field | tag]&lt;/code&gt; is not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40db2b260c69fcb505869aea8b5d0761df14982a" translate="yes" xml:space="preserve">
          <source>Currently, there is no way to perform cross-measurement math or grouping. All data must be under a single measurement to query it together. InfluxDB is not a relational database and mapping data across measurements is not currently a recommended &lt;a href=&quot;../../concepts/glossary/index#schema&quot;&gt;schema&lt;/a&gt;. See GitHub Issue &lt;a href=&quot;https://github.com/influxdata/influxdb/issues/3552&quot;&gt;#3552&lt;/a&gt; for a discussion of implementing JOIN in InfluxDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d1fcbc227e3ed088347da7ece068c9304cccb3" translate="yes" xml:space="preserve">
          <source>Currently, this is the intended behavior. GitHub Issue &lt;a href=&quot;https://github.com/influxdata/influxdb/issues/6963&quot;&gt;#6963&lt;/a&gt; outlines a feature request for CQs to support gaps in data coverage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a2d44995a56919f62d8208cdc102a8ef2acae83" translate="yes" xml:space="preserve">
          <source>Custom Anomaly Detection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10523f4e04e0ac16e2b1a2899ae4efd9acdb6147" translate="yes" xml:space="preserve">
          <source>Custom Task HTTP Endpoints</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4e0711d48841b7c96e7d5cc1bcebfa977ee821b" translate="yes" xml:space="preserve">
          <source>Customize cells:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6f5636098cd458ce9d22939f8e3e8deab0e9bd0" translate="yes" xml:space="preserve">
          <source>DELETE</source>
          <target state="translated">DELETE</target>
        </trans-unit>
        <trans-unit id="0d436e3ae31c07d2a3438a28757ca10a6b6c33af" translate="yes" xml:space="preserve">
          <source>DERIVATIVE()</source>
          <target state="translated">DERIVATIVE()</target>
        </trans-unit>
        <trans-unit id="ff8956b84782b9c1edeee4c01fa558d24e2343f7" translate="yes" xml:space="preserve">
          <source>DIFFERENCE()</source>
          <target state="translated">DIFFERENCE()</target>
        </trans-unit>
        <trans-unit id="d7045916b36beedda08338ebfc10e497dab8adae" translate="yes" xml:space="preserve">
          <source>DISTINCT()</source>
          <target state="translated">DISTINCT()</target>
        </trans-unit>
        <trans-unit id="4bbeb4816cab6c3498cf95c3c8c32ca1b17777bc" translate="yes" xml:space="preserve">
          <source>DMCache</source>
          <target state="translated">DMCache</target>
        </trans-unit>
        <trans-unit id="303d7b1d3220fbc5508be687932fe2bf609d87c4" translate="yes" xml:space="preserve">
          <source>DROP CONTINUOUS QUERY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8358a0155f1603f907bd9069abebad9bcb3c37af" translate="yes" xml:space="preserve">
          <source>DROP DATABASE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba2c36d4cf9da5e9fd0d6852d76d63963697f696" translate="yes" xml:space="preserve">
          <source>DROP MEASUREMENT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea0a45583e6bc3c2a4c08c585d47eaba29835b74" translate="yes" xml:space="preserve">
          <source>DROP RETENTION POLICY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cca2e05ab52fcf4dbc18013e3d528f21965772b" translate="yes" xml:space="preserve">
          <source>DROP SERIES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0190184dae97d0269b8b54d5225f4ff13dfa734d" translate="yes" xml:space="preserve">
          <source>DROP SHARD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91cb6492240ad5b2b81e16f85da30d058e5f7969" translate="yes" xml:space="preserve">
          <source>DROP SUBSCRIPTION</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11cf63e97fca8f5739f4d40bb716551c534d305c" translate="yes" xml:space="preserve">
          <source>DROP USER</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d27d5d41a523aeb8efd888c6ef922db468785cb3" translate="yes" xml:space="preserve">
          <source>Dashboard Template Variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aea54e56d430cf00402fb60fab6c64e7b5fbf34" translate="yes" xml:space="preserve">
          <source>Dashboards support template variables. See the &lt;a href=&quot;../dashboard-template-variables/index&quot;&gt;Dashboard Template Variables&lt;/a&gt; guide for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2ec19b4548a69d09c5dee982c4a838c919fb0ba" translate="yes" xml:space="preserve">
          <source>Data &amp;ndash; influxql.Result containing the data that triggered the alert.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="654e90ea119e4c2bbf5754f7e14b89ba33ff5c07" translate="yes" xml:space="preserve">
          <source>Data Exploration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d83b763809dbf1782ea117dc9885e64311acdd" translate="yes" xml:space="preserve">
          <source>Data Management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d06d50de690e6590de3a062dbd2855475f96242" translate="yes" xml:space="preserve">
          <source>Data Nodes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c18842877f84be9bb3ae10673c4e60242f22c160" translate="yes" xml:space="preserve">
          <source>Data Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d7c8faa0bb09847eeb9ced2f152a10a2fec6f8" translate="yes" xml:space="preserve">
          <source>Data Types and Cast Operations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be47d8fbd8a440f8538b302b937b76ca6d24d4de" translate="yes" xml:space="preserve">
          <source>Data race when dropping a database immediately after writing to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be57e60f32cf88ce96e10eef6d92af0708d2d2f" translate="yes" xml:space="preserve">
          <source>Data sources and things to note</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea88eb510724d95036e08a577872ab351edfa69b" translate="yes" xml:space="preserve">
          <source>Data storage path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6be514c02654c4ded06230fc9559da237b0aa77" translate="yes" xml:space="preserve">
          <source>Data types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61074f1c958d6cdd32dad889b3d58a2d0704cbe3" translate="yes" xml:space="preserve">
          <source>Database</source>
          <target state="translated">Database</target>
        </trans-unit>
        <trans-unit id="e655fbd68618696581b890783f54d6addc1a0dd1" translate="yes" xml:space="preserve">
          <source>Database Administration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="417e0c969fa619a7e00a8f9a5f9775897855a480" translate="yes" xml:space="preserve">
          <source>Database Management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4540556d83a9f9e474221ad30525babd2a2df801" translate="yes" xml:space="preserve">
          <source>Database Preparation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf99bc1ca5da7044d2989a86f5b181501f4736f6" translate="yes" xml:space="preserve">
          <source>Database and Retention Policy Management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c8b854981c13ec33a90629078ec59c6aa7b76ce" translate="yes" xml:space="preserve">
          <source>Database management: ◦ &lt;code&gt;CREATE DATABASE&lt;/code&gt;, and &lt;code&gt;DROP DATABASE&lt;/code&gt; ◦ &lt;code&gt;DROP SERIES&lt;/code&gt; and &lt;code&gt;DROP MEASUREMENT&lt;/code&gt; ◦ &lt;code&gt;CREATE RETENTION POLICY&lt;/code&gt;, &lt;code&gt;ALTER RETENTION POLICY&lt;/code&gt;, and &lt;code&gt;DROP RETENTION POLICY&lt;/code&gt; ◦ &lt;code&gt;CREATE CONTINUOUS QUERY&lt;/code&gt; and &lt;code&gt;DROP CONTINUOUS QUERY&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8467775fbf02dc931aeb5424e4629975fe5ccaf9" translate="yes" xml:space="preserve">
          <source>Database name for the writes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93158ffc86259649c1725a9fec425b2c3679f610" translate="yes" xml:space="preserve">
          <source>Database names, &lt;a href=&quot;../../concepts/glossary/index#measurement&quot;&gt;measurements&lt;/a&gt;, &lt;a href=&quot;../../concepts/glossary/index#tag-key&quot;&gt;tag keys&lt;/a&gt;, &lt;a href=&quot;../../concepts/glossary/index#field-key&quot;&gt;field keys&lt;/a&gt;, and &lt;a href=&quot;../../concepts/glossary/index#tag-value&quot;&gt;tag values&lt;/a&gt; are stored only once and always as strings. Only &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field values&lt;/a&gt; and &lt;a href=&quot;../../concepts/glossary/index#timestamp&quot;&gt;timestamps&lt;/a&gt; are stored per-point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="529130d95e89d7cdf029b34aaa74d395b9ccbe3e" translate="yes" xml:space="preserve">
          <source>Database to export.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8999fbadcd90323cde1293a2ac33e858d0aeab4" translate="yes" xml:space="preserve">
          <source>Database unresponsive after DROP MEASUREMENT.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9df769b266c487f912c433c67364fc569bb2078" translate="yes" xml:space="preserve">
          <source>Databases</source>
          <target state="translated">Databases</target>
        </trans-unit>
        <trans-unit id="830cbbd32fac4511aa86d9965186c0248c70432b" translate="yes" xml:space="preserve">
          <source>Databases can have several users, continuous queries, retention policies, and measurements. InfluxDB is a schemaless database which means it&amp;rsquo;s easy to add new measurements, tags, and fields at any time. It&amp;rsquo;s designed to make working with time series data awesome.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b3b2437f86ea4a0a8830ee6f8676cb1c3fc7da2" translate="yes" xml:space="preserve">
          <source>Datatype</source>
          <target state="translated">Datatype</target>
        </trans-unit>
        <trans-unit id="7cd54a42527e51e205aa803e0fbf08c2bdf72d9c" translate="yes" xml:space="preserve">
          <source>Date the recording finished.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c38d7d977e2d2c68b542b395331580544765b33a" translate="yes" xml:space="preserve">
          <source>Date the task was first created</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53807e8d6fe79960af798bafef7ef8b374691b6b" translate="yes" xml:space="preserve">
          <source>Date the task was last modified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b857f23d965a2a7067462779188b8d835e2ddec" translate="yes" xml:space="preserve">
          <source>Date the task was last set to status &lt;code&gt;enabled&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dd1df08e5c1fde34ee8a9b3e807573dc41d89b6" translate="yes" xml:space="preserve">
          <source>Date the template was first created</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d4d457e58448742f2c3ce5913f9d02ace9c0f42" translate="yes" xml:space="preserve">
          <source>Date the template was last modified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c228d62b1bf29dc8cf9fe094adcd90eef8590d30" translate="yes" xml:space="preserve">
          <source>Dates &amp;amp; Times</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99c565ef6e10d8e297e71e5e478b887a662dd382" translate="yes" xml:space="preserve">
          <source>Deadman</source>
          <target state="translated">Deadman</target>
        </trans-unit>
        <trans-unit id="cc95c51482e7fa9e9c866dca0d0ffb6a17ebc0a8" translate="yes" xml:space="preserve">
          <source>Deadman - alert if InfluxDB receives no relevant data for the specified time duration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="351b835d112f787524bcaa5518eab23b282db0db" translate="yes" xml:space="preserve">
          <source>Debian and Ubuntu users can install the latest stable version of InfluxDB using the &lt;code&gt;apt-get&lt;/code&gt; package manager.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="606360ef20c0d6975b569c1cbeaa18c7de997a86" translate="yes" xml:space="preserve">
          <source>Debian and Ubuntu users can install the latest stable version of Telegraf using the &lt;code&gt;apt-get&lt;/code&gt; package manager.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c89b21234830ba0b9a6a8dfb87b6ba12aa2c895" translate="yes" xml:space="preserve">
          <source>Debug Pprof</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e3d89301a130197c35ab82de92de32cb00f4830" translate="yes" xml:space="preserve">
          <source>Debug Vars</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e91ba473cb27dd999ace818fe35225bea47af5b9" translate="yes" xml:space="preserve">
          <source>DecreaseCooldown</source>
          <target state="translated">DecreaseCooldown</target>
        </trans-unit>
        <trans-unit id="fb6843a24620874f0c27e337bd056c9bb4e7ebfb" translate="yes" xml:space="preserve">
          <source>Decrement number of measurements only once when deleting the last series from a measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea5e2ba8dcbe01cefae2f15ab1e61c2eb78a9e1" translate="yes" xml:space="preserve">
          <source>Dedupe Iterator - This iterator only outputs unique points. It is resource intensive so it is only used for small queries such as meta query statements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="808d7dca8a74d84af27a2d6602c3d786de45fe1e" translate="yes" xml:space="preserve">
          <source>Default</source>
          <target state="translated">Default</target>
        </trans-unit>
        <trans-unit id="5d848dab86e6eaa688d164d250d45869e637b7b0" translate="yes" xml:space="preserve">
          <source>Default Node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="654622c2dc548aba1083742c44a2bfd40c981e2d" translate="yes" xml:space="preserve">
          <source>Default: 21</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ecfbde6665181f138a2eb5e86037af0eaabda00" translate="yes" xml:space="preserve">
          <source>Default: {{ .ID }} is {{ .Level }}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc311887ed13a3340c27238b754481bd52847c7f" translate="yes" xml:space="preserve">
          <source>Default: {{ .Name }}:{{ .Group }}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c870d311bf30b8900ceadc76d5056d57972ed0d9" translate="yes" xml:space="preserve">
          <source>Default: {{ json . }}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d1eb5c126efb1a678f227c2836592fde6599373" translate="yes" xml:space="preserve">
          <source>DefaultNode</source>
          <target state="translated">DefaultNode</target>
        </trans-unit>
        <trans-unit id="9983d47076a376e33d6c144c51136a79d1650b4f" translate="yes" xml:space="preserve">
          <source>Defaults fields and tags on data points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5df3b35077d08f190d5f25a5e383ee1ba1ecfe7" translate="yes" xml:space="preserve">
          <source>Define Data for SNMP Trap alert. Multiple calls append to the existing list of data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391484aa3d5d93e192027fc6fb8303ab114173c2" translate="yes" xml:space="preserve">
          <source>Define Task</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ae7791f8d53214d29d92ec21f6b5f8150835beb" translate="yes" xml:space="preserve">
          <source>Define Templates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e10a7d266ca3f56d9f2ff2be0f30068616cec4f" translate="yes" xml:space="preserve">
          <source>Define a field default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="064d02453cf9fc43dd24c011e1369e47fa30bfd5" translate="yes" xml:space="preserve">
          <source>Define a new task that is enabled on creation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ff4b0ff67830869b8eb4a32bfa016303455f71d" translate="yes" xml:space="preserve">
          <source>Define a schedule using a cron syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e40e3c324d9f9e6b22e93af2cd7761c1b44bc157" translate="yes" xml:space="preserve">
          <source>Define a tag default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b75d1a0518eebbba289bd9f6ac622d92487a339d" translate="yes" xml:space="preserve">
          <source>Define a task using a JSON object with the following options:</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
