<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="c65b9836e74a8f2a76fb4477631d7e2de4d9994a" translate="yes" xml:space="preserve">
          <source>, with case sensitivity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9241ed7f6d59666c50186935320988005c245e40" translate="yes" xml:space="preserve">
          <source>, with no name filtering and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20c9c793586cebc6eaf3433e86ab3bdbdd524950" translate="yes" xml:space="preserve">
          <source>, with parent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33d0090769f97aea6c30a566a529b3e4f8c5c0dc" translate="yes" xml:space="preserve">
          <source>, with size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a45aaec14f0cc609ea2c647f1d1f35745483194" translate="yes" xml:space="preserve">
          <source>, with standard stretch and no height-for-width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40f275f92e28180314c9504c02faaa1e1cfd9bbd" translate="yes" xml:space="preserve">
          <source>, with stretch factor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ebe9a52e754814d12450c680c1c8f9f8301b9d5" translate="yes" xml:space="preserve">
          <source>, with the clip</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11659757a0f2c677cc2a6c0a3f43b21a48929453" translate="yes" xml:space="preserve">
          <source>, with the focus reason</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24bb3623142911105e7d3c8b22e5c57ec03e0d65" translate="yes" xml:space="preserve">
          <source>, with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="387c3f5ec7f7c40e17f2b7fd9a198e0f0266f33c" translate="yes" xml:space="preserve">
          <source>, with the matrix applied post-point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3159c135f740c0babdd0bee4d63e92efb5f661c1" translate="yes" xml:space="preserve">
          <source>, with the matrix applied post-vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32cc52939e8241bb14cca554c2734c7f56c52792" translate="yes" xml:space="preserve">
          <source>, with the matrix applied pre-point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f244a42b107aea22dcb036e6c3330119d9363413" translate="yes" xml:space="preserve">
          <source>, with the matrix applied pre-vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c73ffe62389d7a47072088795bc9583c2fde5f15" translate="yes" xml:space="preserve">
          <source>, with the object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac3302ce3f34fe3d96800010b29b31c1d967990" translate="yes" xml:space="preserve">
          <source>, with the parent object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d55297bd53267bf72e6129be068d03c9e0f93c0" translate="yes" xml:space="preserve">
          <source>, with the specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20c88182a3566d46fa1ff62d271a408cfaf8034b" translate="yes" xml:space="preserve">
          <source>, with the string and returns an integer less than, equal to, or greater than zero if the string is less than, equal to, or greater than</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411cb7ebc9a9a60ea7c5bc008efe4252b8ab596c" translate="yes" xml:space="preserve">
          <source>, with the values in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45fb1e537bfba551b436ce73dd5cf80eba93f7db" translate="yes" xml:space="preserve">
          <source>, with widget flags set to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db5dc9cbfa734e1e98d1192187b8f24c22d7c1bd" translate="yes" xml:space="preserve">
          <source>, with zero minimum size and stretch factor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b999be051bc0e24758bc27f000a23bc329b43d1f" translate="yes" xml:space="preserve">
          <source>, with zero minimum size and stretch factor. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d84387a0a33d7619887c2af0cbe2a61fcbc9fb2d" translate="yes" xml:space="preserve">
          <source>, within the SQL framework. This is useful if you have a custom SQL driver and don't want to compile it as a plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef40e5a2236f484c4def6b6c4eeeaa0513c4e79c" translate="yes" xml:space="preserve">
          <source>, within the same paragraph in the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d87717f937ab5b059eaf442a4c43bffae09f1531" translate="yes" xml:space="preserve">
          <source>, without side effects (i.e., if you call &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;() after peek(), you will get the same data). Returns the number of bytes read. If an error occurs, such as when attempting to peek a device opened in &lt;a href=&quot;qiodevice#OpenModeFlag-enum&quot;&gt;WriteOnly&lt;/a&gt; mode, this function returns -1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e817e571bbd4d72ac15bbd0a8d12b17981387e13" translate="yes" xml:space="preserve">
          <source>, wl_client *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8b2da7cfc18771dac10acb8606c548d0a8e7dba" translate="yes" xml:space="preserve">
          <source>, wl_resource *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4c69415e5c8e826ee7e8fa58514e425f6f84ab8" translate="yes" xml:space="preserve">
          <source>, y), width</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85414050076b3a2163b6961e425df76dea916896" translate="yes" xml:space="preserve">
          <source>, you can also use the &lt;a href=&quot;qformbuilder&quot;&gt;QFormBuilder&lt;/a&gt; class provided by the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdesigner-module.html&quot;&gt;QtDesigner&lt;/a&gt; module to create user interfaces from UI files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4daa7983c6a57b49bbf861e11e5a74350fc7ea17" translate="yes" xml:space="preserve">
          <source>, you can provide it with the expected behavior and functionality within</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83b964f2c1808994011674423676a61b545f2ce0" translate="yes" xml:space="preserve">
          <source>, you can select commercial or open source versions of Qt, tools, and Add-On components to install. Using the online installer requires signing in to your &lt;a href=&quot;https://account.qt.io/#&quot;&gt;Qt Account&lt;/a&gt;. The installer retrieves the license attached to the account from a server and provides a list of available components corresponding to the license.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6c4917684883998cb2e8cd27618447ec8ec190c" translate="yes" xml:space="preserve">
          <source>, you can take a look at the &lt;a href=&quot;designer-to-know#&quot;&gt;Getting To Know Qt Designer&lt;/a&gt; document. For a quick tutorial on how to use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f949ba7dc78dd1e6e6e83fc20c7cec709ca5206b" translate="yes" xml:space="preserve">
          <source>, you can use &lt;code&gt;QPixmap(&quot;assets:/images/logo.png&quot;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f47f8cc32e385a8491423c4fba07e871caa433f" translate="yes" xml:space="preserve">
          <source>, you require a suitable description for the widget and an appropriate &lt;code&gt;.pro&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aad8ceda7f26cb882ac56f822fad46e11aef2134" translate="yes" xml:space="preserve">
          <source>, you will always be in one of these four modes. To switch between modes, simply select it from the &lt;b&gt;Edit&lt;/b&gt; menu or the toolbar. The table below describes these modes in further detail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bc15c8aae3e4124dd409035f32ea2fd6835efc9" translate="yes" xml:space="preserve">
          <source>-</source>
          <target state="translated">-</target>
        </trans-unit>
        <trans-unit id="59b901e2ec411e0ac7c4976bcce9f8ee1906624c" translate="yes" xml:space="preserve">
          <source>- 1 bytes are read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bd5271820cda9fc6d2014a017291eace73fa7ba" translate="yes" xml:space="preserve">
          <source>- 1 bytes, stores the characters in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb10a0d1be0cca17afc24f3d7e37d2a6cd24ac82" translate="yes" xml:space="preserve">
          <source>- 1).&lt;a href=&quot;qmap#key&quot;&gt;key&lt;/a&gt;() &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="573a1d2a17676482c8f71e7b6461944779a3ff77" translate="yes" xml:space="preserve">
          <source>- 1, following the sames rule for non relative seek, above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6ddf0b299788f51d63d35e55db02af285c3d592" translate="yes" xml:space="preserve">
          <source>- External QIODevices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4fcb226b9ada98c2e900d5a4dd858194e74584f" translate="yes" xml:space="preserve">
          <source>- Inner join mode, return rows when there is at least one match in both tables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31bd317aa13bb53156a41d77447a627c8cc4de7f" translate="yes" xml:space="preserve">
          <source>- Left join mode, returns all rows from the left table (table_name1), even if there are no matches in the right table (table_name2).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aad3a4d999a7004fd5cac19f54f34a395155d241" translate="yes" xml:space="preserve">
          <source>- Offset in pixels specifying the top-left corner of the screen. The default position is at &lt;code&gt;(0, 0)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62e194684782b5edee866440987dd683a5234ab2" translate="yes" xml:space="preserve">
          <source>- Physical width and height in millimeters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8a89d90e19a5144d4ccaf73dc18a027bb5759d8" translate="yes" xml:space="preserve">
          <source>- Specifies the screen size in pixels. The plugin will try to query the display dimensions, both physical and logical, from the framebuffer device. This may not always lead to proper results however, and therefore it may become necessary to explicitly specify the values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b30a9b6bc9d04c072fc5057c747d6ee2266dfc6" translate="yes" xml:space="preserve">
          <source>- Updates a single row. Treats every entry in a &lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt; as a single value of an array type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f7c9099f90c439a8b938515f71ac1a097a8b4f9" translate="yes" xml:space="preserve">
          <source>- Updates multiple rows. Treats every entry in a &lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt; as a value for updating the next row.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa1f9ef7dda6f89a59b85e3fa8af2d41b7bc005" translate="yes" xml:space="preserve">
          <source>- an optional string that helps disambiguate different uses of the same text in the same context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="734d06242cc9db750cce60bdaf8e454116e005ff" translate="yes" xml:space="preserve">
          <source>- briefly occupies most of the status bar. Used to explain tool tip texts or menu entries, for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b4ede8c4f3aa5e5778bde95ec2c02fea48de7d5" translate="yes" xml:space="preserve">
          <source>- downloads and installs Qt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5525cf1a1146b2522f060e21f9c7b33ffe750080" translate="yes" xml:space="preserve">
          <source>- is never hidden. Used for important mode indications, for example, some applications put a Caps Lock indicator in the status bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="553d8528b9d8f27307cadc8c7e0a2e960dc0aabd" translate="yes" xml:space="preserve">
          <source>- no range is applied and the highlight will move freely within the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c073953f19978949a61d52fe814d4c4b4de2b55" translate="yes" xml:space="preserve">
          <source>- occupies part of the status bar and may be hidden by temporary messages. Used to display the page and line number in a word processor, for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ded363bb24b8e6e88c8817a8916daa6761b13d7" translate="yes" xml:space="preserve">
          <source>- see &lt;a href=&quot;qimage#operator-eq-eq&quot;&gt;QImage::operator==&lt;/a&gt; (since 5.6)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55c3eded1b8673c6c67d2322b4c58ab54c2d5a31" translate="yes" xml:space="preserve">
          <source>- the highlight will never move outside of the range. This means that the current item will change if a keyboard or mouse action would cause the highlight to move outside of the range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a050dddf91c3d8114b2980d7da314e574abea5" translate="yes" xml:space="preserve">
          <source>- the view will attempt to maintain the highlight within the range, however the highlight can move outside of the range at the ends of the path or due to a mouse interaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35d31989a7cde184eee96c38259e95dd7df59263" translate="yes" xml:space="preserve">
          <source>- they will be destroyed by Qt. The target is responsible for taking ownership of the data sent in the drag and drop operation; this is usually done by keeping references to the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b79a77d9444f538eda4f7c315607c8135ab61744" translate="yes" xml:space="preserve">
          <source>- unless</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a2a7c0f02ace8de08104f1225859ed96328293" translate="yes" xml:space="preserve">
          <source>- usually the argument to &lt;a href=&quot;qobject#tr&quot;&gt;tr&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19409d9f99cf05a09f8bac60e1e6c15ea5fe46ed" translate="yes" xml:space="preserve">
          <source>- usually the class name for the &lt;a href=&quot;qobject#tr&quot;&gt;tr&lt;/a&gt;() caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dec21e2f36b04a243eaf5bcc293c07ddaf436c4" translate="yes" xml:space="preserve">
          <source>-&amp;gt;&lt;a href=&quot;qobject#findChildren&quot;&gt;findChildren&lt;/a&gt;&amp;lt;T&amp;gt;(</source>
          <target state="translated">-&amp;gt;&lt;a href=&quot;qobject#findChildren&quot;&gt;findChildren&lt;/a&gt;&amp;lt;T&amp;gt;(</target>
        </trans-unit>
        <trans-unit id="84f265bc5cf11f48f3687131f27761b2b64afa43" translate="yes" xml:space="preserve">
          <source>-&amp;gt;&lt;a href=&quot;qobject#inherits&quot;&gt;inherits&lt;/a&gt;(&quot;&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;&quot;).</source>
          <target state="translated">-&amp;gt;&lt;a href=&quot;qobject#inherits&quot;&gt;inherits&lt;/a&gt;(&quot;&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;&quot;).</target>
        </trans-unit>
        <trans-unit id="2b75e32d8767095b0864c87bc559b76c0da66be5" translate="yes" xml:space="preserve">
          <source>-&amp;gt;blockSignals(true).</source>
          <target state="translated">-&amp;gt;blockSignals(true).</target>
        </trans-unit>
        <trans-unit id="344d649992ed691122f5bc44c6736d14cb108152" translate="yes" xml:space="preserve">
          <source>-&amp;gt;event(</source>
          <target state="translated">-&amp;gt;event(</target>
        </trans-unit>
        <trans-unit id="5dca167dd5782355f014aff6ba4477c8497bd349" translate="yes" xml:space="preserve">
          <source>-&amp;gt;release(</source>
          <target state="translated">-&amp;gt;release(</target>
        </trans-unit>
        <trans-unit id="cb84e6b388ab116f200242842e2481d4e82915aa" translate="yes" xml:space="preserve">
          <source>-- a single source file compiled into the platform plugin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d76f8cc2e2be4bbd994af37aa3a02f4d732bcccc" translate="yes" xml:space="preserve">
          <source>-- dynamically loaded plugins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67eaaa6f4d71223790f5b4ce28bd7aecd48287e7" translate="yes" xml:space="preserve">
          <source>-- would be passed to the &lt;code&gt;script&lt;/code&gt; property and the class could choose how to handle it. Typically, the class will evaluate the script at some later time using a &lt;a href=&quot;qqmlexpression&quot;&gt;QQmlExpression&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49fd5e2b279405e185b186750e1e56d48e84d01c" translate="yes" xml:space="preserve">
          <source>-1 indicates an unknown or absent version number component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d80b4fcbe3c1421b901c31de0817ec61b47cf8b" translate="yes" xml:space="preserve">
          <source>-14 * 3600,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f6e763c84cc1ca08829158bd695a23b67716a55" translate="yes" xml:space="preserve">
          <source>-1: infinite time left, timer never expires</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82938fd30b05aef119e06302b4fb4686eb60f838" translate="yes" xml:space="preserve">
          <source>-27&amp;deg; 28' 3.2&quot;, 153&amp;deg; 1' 40.4&quot;, 28.1m</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36a939c1219e180a6079d75e63d9d186b9445933" translate="yes" xml:space="preserve">
          <source>-27&amp;deg; 28.054', 153&amp;deg; 1.673', 28.1m</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84b5c1562246ded16156b175edc7ed28bca410e8" translate="yes" xml:space="preserve">
          <source>-27.46758&amp;deg;, 153.02789&amp;deg;, 28.1m</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ed913aabd5ea02df22b4eb5d2bad94a2fdf6b4f" translate="yes" xml:space="preserve">
          <source>-compat</source>
          <target state="translated">-compat</target>
        </trans-unit>
        <trans-unit id="02145c187b081dab0f1d63526694bb6494f035dc" translate="yes" xml:space="preserve">
          <source>-developer-build</source>
          <target state="translated">-developer-build</target>
        </trans-unit>
        <trans-unit id="bed38b9110d761fa00dcae1ff6b113c135728a27" translate="yes" xml:space="preserve">
          <source>-getfile libid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c3003f7f0bedaf2a7334f932c515378a93f1402" translate="yes" xml:space="preserve">
          <source>-h</source>
          <target state="translated">-h</target>
        </trans-unit>
        <trans-unit id="6b6a89d25a6576734025d75c81ccd3d78abce183" translate="yes" xml:space="preserve">
          <source>-n namespace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d86a8395625f567f8cf374e83065a7b9a3360112" translate="yes" xml:space="preserve">
          <source>-nometaobject</source>
          <target state="translated">-nometaobject</target>
        </trans-unit>
        <trans-unit id="6d2844f0fd6340fe6105616c94533d26f0b5a7b7" translate="yes" xml:space="preserve">
          <source>-o file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96be536f4fd6e484fc85f130430ac31c577d9766" translate="yes" xml:space="preserve">
          <source>-prefix</source>
          <target state="translated">-prefix</target>
        </trans-unit>
        <trans-unit id="8dd195a044719d0b3880a7110e115c8840000859" translate="yes" xml:space="preserve">
          <source>-qmljsdebugger=, activates the QML/JS debugger with a specified port. The value must be of format port:1234[,block], where block is optional and will make the application wait until a debugger connects to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="620e2e988f33d404d5b698c9f6480eedd938f399" translate="yes" xml:space="preserve">
          <source>-regserver dll</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87f6d0ba08846440c9e3ffe586c227dee09a6d91" translate="yes" xml:space="preserve">
          <source>-reverse, sets the application's layout direction to &lt;a href=&quot;qt#LayoutDirection-enum&quot;&gt;Qt::RightToLeft&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f392df8b048e8479c61f2db9a1ca53c8e7f43fb" translate="yes" xml:space="preserve">
          <source>-style</source>
          <target state="translated">-style</target>
        </trans-unit>
        <trans-unit id="8acde3d9c699fc6ff88de2aaba8eb51464c24afc" translate="yes" xml:space="preserve">
          <source>-style=</source>
          <target state="translated">-style=</target>
        </trans-unit>
        <trans-unit id="f8726da87262775e73ecfb8278b62478262fdaaf" translate="yes" xml:space="preserve">
          <source>-stylesheet</source>
          <target state="translated">-stylesheet</target>
        </trans-unit>
        <trans-unit id="8151ee7b126df02daa2ef9b92415c9507cb98662" translate="yes" xml:space="preserve">
          <source>-stylesheet=</source>
          <target state="translated">-stylesheet=</target>
        </trans-unit>
        <trans-unit id="91442a4fe96d89b5136a48d87964395551c051ab" translate="yes" xml:space="preserve">
          <source>-th backreference, e.g. \1, \2, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec81f5979e76ef2b961ddd2a6c674ceabd006ced" translate="yes" xml:space="preserve">
          <source>-th character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40d6c0b26d9603f9455d394144deeb4547af9542" translate="yes" xml:space="preserve">
          <source>-th line of text in this text layout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef22ef40717e93ac8ee1c85fcaf5761fa53a3d2f" translate="yes" xml:space="preserve">
          <source>-th text block in the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb8efc781da2570e1e3c67b6ec3ff64758c070b" translate="yes" xml:space="preserve">
          <source>-unregserver</source>
          <target state="translated">-unregserver</target>
        </trans-unit>
        <trans-unit id="75262c839fe7bdce825dee598401d72dc8394722" translate="yes" xml:space="preserve">
          <source>-v</source>
          <target state="translated">-v</target>
        </trans-unit>
        <trans-unit id="4c2e609a7e7f51c9b051cec9086833233e3214f7" translate="yes" xml:space="preserve">
          <source>-widgetcount, prints debug message at the end about number of widgets left undestroyed and maximum number of widgets existed at the same time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a52ce780950d4d969792a2559cd519d7ee8c727" translate="yes" xml:space="preserve">
          <source>.</source>
          <target state="translated">.</target>
        </trans-unit>
        <trans-unit id="8c8bc713978c45d08afcc3b34a65c24b3233a5f0" translate="yes" xml:space="preserve">
          <source>. (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14ab0493c8bdc79a9f2820f33f6d9ee2b16d4e35" translate="yes" xml:space="preserve">
          <source>. (&lt;a href=&quot;qfont#fromString&quot;&gt;fromString&lt;/a&gt;() reads from a text stream.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f208551d71fd8561b07823c07883e31ec5db3392" translate="yes" xml:space="preserve">
          <source>. (&lt;a href=&quot;qfont#toString&quot;&gt;toString&lt;/a&gt;() writes to a text stream.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d8e8a983294be7f1edba041da534a5e037e1ce" translate="yes" xml:space="preserve">
          <source>. (See &lt;a href=&quot;qtquick-input-focus#&quot;&gt;Keyboard Focus in Qt Quick&lt;/a&gt; for more details.) Any key events received in the loaded item should likely also be &lt;a href=&quot;qml-qtquick-keyevent#accepted-prop&quot;&gt;accepted&lt;/a&gt; so they are not propagated to the Loader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd5eeb07b6670cb113010b0caf56f6339242320" translate="yes" xml:space="preserve">
          <source>. -1 means the default DBus timeout (usually 25 seconds).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e2c847ec2b152ac4c81be239270dfe56fa44855" translate="yes" xml:space="preserve">
          <source>. . This method is equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="555103191e814ec2509f6857a5150b7432d8f3fc" translate="yes" xml:space="preserve">
          <source>. 0 is an invalid column number. The first column number is 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24d917a635f9ca93364c18ae0c4f590aa1262125" translate="yes" xml:space="preserve">
          <source>. 0 is an invalid line number. The first line number is 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4b4ca037cbb664c88e8fc661925774dfae117dc" translate="yes" xml:space="preserve">
          <source>. 0-based index. The number of children of an object can be checked with &lt;a href=&quot;qaccessibleinterface#childCount&quot;&gt;childCount&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="280ecd719b7addabe1e8ce1a41d6de26172a153d" translate="yes" xml:space="preserve">
          <source>. &lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt; does</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0977578e91bf7b60dff20a74e24816af38e87809" translate="yes" xml:space="preserve">
          <source>. &lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt; handles the following events:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aa7477dda531e04aafd72ef4ea1d623bc67f663" translate="yes" xml:space="preserve">
          <source>. &lt;a href=&quot;qabstractoauth&quot;&gt;QAbstractOAuth&lt;/a&gt; does not take ownership of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a48267d3d5681cb76b7ebb5c1bd857f5bf835ac" translate="yes" xml:space="preserve">
          <source>. &lt;a href=&quot;qabstractxmlreceiver#endDocument&quot;&gt;endDocument&lt;/a&gt;() is not called until all the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e8d206cc00f20ecdf1f121e7749c602d6050008" translate="yes" xml:space="preserve">
          <source>. &lt;a href=&quot;qabstractxmlreceiver#endElement&quot;&gt;endElement&lt;/a&gt;() is not called until all the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f83fb80c6ebbf1957e8e7af55f2f5e84cb7575c9" translate="yes" xml:space="preserve">
          <source>. &lt;a href=&quot;qcborstreamreader&quot;&gt;QCborStreamReader&lt;/a&gt; does not take ownership of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c5d9eebed2abd10fe408dab809846e394cf07d8" translate="yes" xml:space="preserve">
          <source>. &lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt; takes ownership of the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06ef0dca908ca67ef09f7280400c30afaa799c51" translate="yes" xml:space="preserve">
          <source>. &lt;a href=&quot;qgraphicspixmapitem&quot;&gt;QGraphicsPixmapItem&lt;/a&gt; will draw its pixmap using</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3779522ee41db846215cab3b46d50b9fcc0d969" translate="yes" xml:space="preserve">
          <source>. &lt;a href=&quot;qlinef&quot;&gt;QLineF&lt;/a&gt; will move the end point - &lt;a href=&quot;qlinef#p2&quot;&gt;p2&lt;/a&gt;() - of the line to give the line its new length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fcc11b644134cb611633ea2965b678bb2efd787" translate="yes" xml:space="preserve">
          <source>. &lt;a href=&quot;qlistwidget&quot;&gt;QListWidget&lt;/a&gt; mouseTracking needs to be enabled for this feature to work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75e16757a362995c62e5a95af9b1470db7394688" translate="yes" xml:space="preserve">
          <source>. &lt;a href=&quot;qlocalserver&quot;&gt;QLocalServer&lt;/a&gt; will accept no more than</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4d7b8e985575b63ccd2495959df435af3d1318a" translate="yes" xml:space="preserve">
          <source>. &lt;a href=&quot;qmaccocoaviewcontainer&quot;&gt;QMacCocoaViewContainer&lt;/a&gt; will retain the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5e217cc0fceca00c02938c99c59a2495193a85b" translate="yes" xml:space="preserve">
          <source>. &lt;a href=&quot;qml-qtwebengine-webengineview&quot;&gt;WebEngineView&lt;/a&gt; also takes care of implementing the action, so that upon triggering the corresponding action is performed on the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daae66d725367967ea3bcf83a44a863629bc2441" translate="yes" xml:space="preserve">
          <source>. &lt;a href=&quot;qml-qtwebsockets-websocketserver&quot;&gt;WebSocketServer&lt;/a&gt; will accept no more than</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c652ff01e98837034a549c7eb81e96fd3a10943" translate="yes" xml:space="preserve">
          <source>. &lt;a href=&quot;qmovie&quot;&gt;QMovie&lt;/a&gt; will read image data from this device when the movie is running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddead86f8315296f37fe92faeca073bcade49a5e" translate="yes" xml:space="preserve">
          <source>. &lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt; will start the process in this directory. The default behavior is to start the process in the working directory of the calling process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68abaacf4903885669824b3d4c74e76170e73a9c" translate="yes" xml:space="preserve">
          <source>. &lt;a href=&quot;qqmlfileselector&quot;&gt;QQmlFileSelector&lt;/a&gt; does not take ownership of the new &lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt;. To reset &lt;a href=&quot;qqmlfileselector&quot;&gt;QQmlFileSelector&lt;/a&gt; to use its internal &lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt; instance, call setSelector(0).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a1d1888c5425e5494b481e73bb5b6ca84e12df8" translate="yes" xml:space="preserve">
          <source>. &lt;a href=&quot;qscopedpointer&quot;&gt;QScopedPointer&lt;/a&gt; now owns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92963154b4086c08cadf6b5f965e71149265b469" translate="yes" xml:space="preserve">
          <source>. &lt;a href=&quot;qtablewidget&quot;&gt;QTableWidget&lt;/a&gt; mouse tracking needs to be enabled for this feature to work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99c5cdaa43cc902f7b688ceb0c387d2dd1f1c8d7" translate="yes" xml:space="preserve">
          <source>. &lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt; will accept no more than</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="345b43c1d1edae1320d338ea63401d5c06d6b0a6" translate="yes" xml:space="preserve">
          <source>. &lt;a href=&quot;qtreewidget&quot;&gt;QTreeWidget&lt;/a&gt; mouse tracking needs to be enabled for this feature to work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edc0942da89f7733cabe86911470782d366c592b" translate="yes" xml:space="preserve">
          <source>. &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; will automatically percent encode all characters that are not allowed in a URL and decode the percent-encoded sequences that represent an unreserved character (letters, digits, hyphens, undercores, dots and tildes). All other characters are left in their original forms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe97d0ebceb078a57c7ea545b444be5f4a4b382" translate="yes" xml:space="preserve">
          <source>. &lt;a href=&quot;qwizard#cleanupPage&quot;&gt;cleanupPage&lt;/a&gt;() will be called if necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="110300f7df402e0e9bc9b90eb9ba55ca3e606acc" translate="yes" xml:space="preserve">
          <source>. &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; does not take ownership of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d99b83994f05c2db180a427b1d13fa217e54b02" translate="yes" xml:space="preserve">
          <source>. &lt;a href=&quot;qxmlschema&quot;&gt;QXmlSchema&lt;/a&gt; does not take ownership of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fbe3429a3e0033d6615b6081c034cbfcd925b3e" translate="yes" xml:space="preserve">
          <source>. &lt;a href=&quot;qxmlschemavalidator&quot;&gt;QXmlSchemaValidator&lt;/a&gt; does not take ownership of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49320ac0c983a6a8b90e6b19627aa601d4359b39" translate="yes" xml:space="preserve">
          <source>. &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt;'s &lt;code&gt;id()&lt;/code&gt; function calls this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d05a69d787295da96e89a6a31250c2f852dc9863" translate="yes" xml:space="preserve">
          <source>. &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt;'s &lt;code&gt;idref()&lt;/code&gt; function calls this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020c2abac1e137a020ba6c0677d5c814368c32f2" translate="yes" xml:space="preserve">
          <source>. &lt;b&gt;&lt;i&gt;E&lt;/i&gt;+&lt;/b&gt; is the same as &lt;b&gt;&lt;i&gt;E&lt;/i&gt;{1,}&lt;/b&gt;. e.g., &lt;b&gt;0+&lt;/b&gt; matches '0', '00', '000', etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64ee53e2216b6313a2bc0501e47641fae4cdab62" translate="yes" xml:space="preserve">
          <source>. &lt;b&gt;&lt;i&gt;E&lt;/i&gt;{,m}&lt;/b&gt; is the same as &lt;b&gt;&lt;i&gt;E&lt;/i&gt;{0,m}&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e31b52d8d9a31017aa7313d67c82ea089c84767" translate="yes" xml:space="preserve">
          <source>. &lt;b&gt;&lt;i&gt;E&lt;/i&gt;{n}&lt;/b&gt; is the same as repeating</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8063ea28a1af6c17ff16bffe5a430efb117f73a" translate="yes" xml:space="preserve">
          <source>. &lt;code&gt;T&lt;/code&gt; needs to support streaming into &lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a4491aa281ea824e3286ca742f37c83298c8ef1" translate="yes" xml:space="preserve">
          <source>. &lt;code&gt;r1&amp;amp;r2&lt;/code&gt; is equivalent to &lt;code&gt;r1.intersected(r2)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6caec4d73aa7e9714bc6c5c01583585ddfc2a4b6" translate="yes" xml:space="preserve">
          <source>. &lt;code&gt;r1+r2&lt;/code&gt; is equivalent to &lt;code&gt;r1.united(r2)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97e1fa011deba564ed568e8c829a3aeb59500359" translate="yes" xml:space="preserve">
          <source>. &lt;code&gt;r1-r2&lt;/code&gt; is equivalent to &lt;code&gt;r1.subtracted(r2)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d94c8c788edae76e30edd34732c4e0c20755b533" translate="yes" xml:space="preserve">
          <source>. &lt;code&gt;r1^r2&lt;/code&gt; is equivalent to &lt;code&gt;r1.xored(r2)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1157773bb32c0d666909b73109bc90cb6ea2da2" translate="yes" xml:space="preserve">
          <source>. &lt;code&gt;r1|r2&lt;/code&gt; is equivalent to &lt;code&gt;r1.united(r2)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a7e1859fc323854d47ce86452386a58e1c6117e" translate="yes" xml:space="preserve">
          <source>. A</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8358ebaed00db06bd57d8e03391cd9356c656181" translate="yes" xml:space="preserve">
          <source>. A &lt;a href=&quot;qsyntaxhighlighter&quot;&gt;QSyntaxHighlighter&lt;/a&gt; can only be used with one document at a time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a1828dc82b11c0701dc08a29f3ddae2766d09c4" translate="yes" xml:space="preserve">
          <source>. A Node constructed in this manner can not be connected to, and thus can not expose Source objects on the network. It also will not include a &lt;a href=&quot;qremoteobjectregistry&quot;&gt;QRemoteObjectRegistry&lt;/a&gt;, unless set manually using &lt;a href=&quot;qremoteobjectnode#registryUrl-prop&quot;&gt;setRegistryUrl&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1fa0ccc30d314c7cf6cb8d3c92c40688207fecb" translate="yes" xml:space="preserve">
          <source>. A PKCS#12 file is a bundle that can contain a number of certificates and keys. This method reads a single</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16d160c5310e0ba84f1f81cb6e369988dc180767" translate="yes" xml:space="preserve">
          <source>. A blend tree is a hierarchical tree structure where the leaf nodes are value nodes that encapsulate an animation clip (&lt;a href=&quot;qt3danimation-qabstractanimationclip&quot;&gt;QAbstractAnimationClip&lt;/a&gt;); and the internal nodes represent blending operations that operate on the nodes pointed to by their operand properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b273e2f529ceaaae70d6c74ff9d325a9d233b7d" translate="yes" xml:space="preserve">
          <source>. A blend tree is a hierarchical tree structure where the leaf nodes are value nodes that encapsulate an animation clip (AbstractAnimationClip); and the internal nodes represent blending operations that operate on the nodes pointed to by their operand properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="780b508685d23ae4d5b4a992709a646021f749f1" translate="yes" xml:space="preserve">
          <source>. A boolean predicate takes the value of its expression and determines its</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="827a70984a4134943a844e49800eeb6f8e672177" translate="yes" xml:space="preserve">
          <source>. A cache can hold a number of items equal to its capacity. When inserting, appending or prepending items to the cache, if the cache is already full then the item farthest from the added item will be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27c76ba6d0472a7a02129f4aff2c35eae60b2db5" translate="yes" xml:space="preserve">
          <source>. A category label has to be unique.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb5450c17279b4fd8e711c9c95c98831a377a3ad" translate="yes" xml:space="preserve">
          <source>. A descriptive message is available in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd5bbbf7d9ac40bfecba2dea1d9ca8f7fd41e865" translate="yes" xml:space="preserve">
          <source>. A file should be open for a map to succeed but the file does not need to stay open after the memory has been mapped. When the &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; is destroyed or a new file is opened with this object, any maps that have not been unmapped will automatically be unmapped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1c373a88ea0347c7c074128e116036e5b2afe34" translate="yes" xml:space="preserve">
          <source>. A handler that reports support for this feature will have image transformation metadata applied by default on read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd382465f599e37094e92732940034b7eda6181" translate="yes" xml:space="preserve">
          <source>. A handler which supports this option can read the transformation metadata of an image. A handler that supports this option should not apply the transformation itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5533a7e6a06520b2b860a600e600db2635d9954c" translate="yes" xml:space="preserve">
          <source>. A handler which supports this option is expected to turn on optimization flags when writing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52b3d52f6c443604a2f92668ca160c1e5d6df73c" translate="yes" xml:space="preserve">
          <source>. A handler which supports this option is expected to write the image as a progressive scan image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8149dfac9b0c43297a09b51815100863228b4322" translate="yes" xml:space="preserve">
          <source>. A history state (&lt;a href=&quot;qhistorystate&quot;&gt;QHistoryState&lt;/a&gt; object) is a pseudo-state that represents the child state that the parent state was in the last time the parent state was exited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="111cf32086ae7cd58397940efbadce78990c9c96" translate="yes" xml:space="preserve">
          <source>. A history state (&lt;a href=&quot;qml-qtqml-statemachine-historystate&quot;&gt;HistoryState&lt;/a&gt; object) is a pseudo-state that represents the child state that the parent state was in before it exited last.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79d87ad00a79757da9c3c1718afd0561efa03771" translate="yes" xml:space="preserve">
          <source>. A non-zero value indicates an error, whereas 0 means that the IO operation was successful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e0736f4507cd84f28eae63df4a66c5c17aeda35" translate="yes" xml:space="preserve">
          <source>. A parameter that was provided was invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66522f4dcd06b8b0b06734e91deee1add73cebc3" translate="yes" xml:space="preserve">
          <source>. A patch is a custom OpenGL primitive whose interpretation is entirely defined by the tessellation shader stages. Therefore, calling this function only makes sense when using a &lt;a href=&quot;qopenglshaderprogram&quot;&gt;QOpenGLShaderProgram&lt;/a&gt; containing tessellation stage shaders. When using OpenGL tessellation, the only primitive that can be rendered with &lt;code&gt;glDraw*()&lt;/code&gt; functions is &lt;code&gt;GL_PATCHES&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d51f87e82e3d4b5ad7665e7e560fab4a18c385d" translate="yes" xml:space="preserve">
          <source>. A positive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fc2997e7bad67fbe50880dff29a0166214dcd06" translate="yes" xml:space="preserve">
          <source>. A positive value produces right-aligned text; a negative value produces left-aligned text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda6bc7e5cebd5e689953fc88d748aac9f3986cf" translate="yes" xml:space="preserve">
          <source>. A proxy factory is used to determine a more specific list of proxies to be used for a given request, instead of trying to use the same proxy value for all requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25fdbe849214efe00445d7b789690965ae52c595" translate="yes" xml:space="preserve">
          <source>. A raw request can contain anything that fits inside the Modbus PDU data section and has a valid function code. The only check performed before sending is therefore the validity check, see &lt;a href=&quot;qmodbuspdu#isValid&quot;&gt;QModbusPdu::isValid&lt;/a&gt;. If no error occurred the function returns a a new valid &lt;a href=&quot;qmodbusreply&quot;&gt;QModbusReply&lt;/a&gt;; nullptr otherwise. Modbus networks may have multiple servers, each server has a unique</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b982235df4b4b73449424dc14761bf9feb2aba" translate="yes" xml:space="preserve">
          <source>. A read-only field cannot have its value set with &lt;a href=&quot;qsqlfield#setValue&quot;&gt;setValue&lt;/a&gt;() and cannot be cleared to NULL with &lt;a href=&quot;qsqlfield#clear&quot;&gt;clear&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d95fdc23567b4ddf218f46aac4960660672ff2e0" translate="yes" xml:space="preserve">
          <source>. A resolver can rewrite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c51e9f1e2a198c5d8ee39a4fd0c5df5eef002922" translate="yes" xml:space="preserve">
          <source>. A simple workaround is to use &lt;a href=&quot;qstring#toInt&quot;&gt;QString::toInt&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="272ce24a3cf88858eff0fe143c7e196f4f7d8947" translate="yes" xml:space="preserve">
          <source>. A simple workaround is to use &lt;a href=&quot;qstring#toUInt&quot;&gt;QString::toUInt&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c26ae5d2bcc9f073cecbca2e68842f4a16e17d17" translate="yes" xml:space="preserve">
          <source>. A word boundary is any non-word character, e.g., a space, newline, or the beginning or ending of a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb63a404a3d4f5cc0cf6a17f77deaeba875a2cab" translate="yes" xml:space="preserve">
          <source>. Additional parameters, specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc5bfa9519ac10f6b8f8a3d246bb8708c8a9331" translate="yes" xml:space="preserve">
          <source>. After being moved from, the only valid operations on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="206c723eef3630afe0b215ec887f54da2ade2314" translate="yes" xml:space="preserve">
          <source>. After calling this function, &lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt; will no longer receive data on the channel. Any data that has already been received is still available for reading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d7cbed179c38a83aebd5bbbd753e491fa6aa194" translate="yes" xml:space="preserve">
          <source>. After setting the number of samples with this function, you must call &lt;a href=&quot;qopengltimemonitor#create&quot;&gt;create&lt;/a&gt;() to instantiate the underlying OpenGL timer query objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85db82a07f213eb8f6ecff0cb3dd2dc3f2aa8a61" translate="yes" xml:space="preserve">
          <source>. After setting the source to monitor with &lt;a href=&quot;qaudioprobe#setSource&quot;&gt;setSource&lt;/a&gt;(), the &lt;a href=&quot;qaudioprobe#audioBufferProbed&quot;&gt;audioBufferProbed&lt;/a&gt;() signal will be emitted when audio buffers are flowing in the source media object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af1ed6cf6c471cd1e0f6a27bcac370eb06d55662" translate="yes" xml:space="preserve">
          <source>. After setting the source to monitor with &lt;a href=&quot;qvideoprobe#setSource&quot;&gt;setSource&lt;/a&gt;(), the &lt;a href=&quot;qvideoprobe#videoFrameProbed&quot;&gt;videoFrameProbed&lt;/a&gt;() signal will be emitted when video frames are flowing in the source media object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b565e299abc1be2d3fd60949e439ccfd5ed8be" translate="yes" xml:space="preserve">
          <source>. After the call,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d27ecb108aa055dc4929aa00b59ecb995c945f1" translate="yes" xml:space="preserve">
          <source>. After the line is drawn, the current position is updated to be at the end point of the line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b70097bce87508565122d938736535f3334191ec" translate="yes" xml:space="preserve">
          <source>. All declarations will be in a type library with the id</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6b0fe0943a6caa849df2230df8c7ecbd81f7a4e" translate="yes" xml:space="preserve">
          <source>. All existing paths will be deleted and the path list will consist of the paths given in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59fd34cf263fb5ed8fff864cf877b9b5051e1f1c" translate="yes" xml:space="preserve">
          <source>. All flags in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4980b5aa64d6d5f06407939ece63fb450882bf9" translate="yes" xml:space="preserve">
          <source>. All items on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b79c7077527a5fc587c70529901811303419b9c" translate="yes" xml:space="preserve">
          <source>. All items within this area are immediately selected, and all items outside are unselected. You can get the list of all selected items by calling &lt;a href=&quot;qgraphicsscene#selectedItems&quot;&gt;selectedItems&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dca77f778f42ba3ffc04a9d386a1648030076fd" translate="yes" xml:space="preserve">
          <source>. All objects in this list must have been returned from a call to &lt;a href=&quot;qlowenergycontroller#addService&quot;&gt;QLowEnergyController::addService&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9118b097c9636e2a5acb17a81ab513ce443f58fc" translate="yes" xml:space="preserve">
          <source>. All other accessible objects are reachable using object navigation from the root object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e37e3e0145cd439214512ca61c996d2c72f6f35" translate="yes" xml:space="preserve">
          <source>. All possible valid states are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1b45bdc4d1d5258d866a09e1ad3ba0783704ed1" translate="yes" xml:space="preserve">
          <source>. All services watched will be transferred to this connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d422bbfdbcba16d54779933a37c19e8da4e0a055" translate="yes" xml:space="preserve">
          <source>. All streaming is done immediately to the byte array, without the need for flushing any buffers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f182d44fba1f3b5f146a96dec038a2bd345543ff" translate="yes" xml:space="preserve">
          <source>. All that is guaranteed is that the operator returns &lt;code&gt;false&lt;/code&gt; if both fonts are equal and that (f1 &amp;lt; f2) == !(f2 &amp;lt; f1) if the fonts are not equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb2e13f45f29530588d59f52b95ef731d31d88d0" translate="yes" xml:space="preserve">
          <source>. All the settings from the original database, e.g. &lt;a href=&quot;qsqldatabase#databaseName&quot;&gt;databaseName&lt;/a&gt;(), &lt;a href=&quot;qsqldatabase#hostName&quot;&gt;hostName&lt;/a&gt;(), etc., are copied across. Does nothing if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd8c343b094ead86ecffa40bb30cc8319ad5f357" translate="yes" xml:space="preserve">
          <source>. All widgets in Qt contain a palette and use their palette to draw themselves. This makes the user interface easily configurable and easier to keep consistent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75873fab82d5813647d5dd213a432d718616ef0e" translate="yes" xml:space="preserve">
          <source>. Also returns &lt;code&gt;true&lt;/code&gt; if the current path contains or is contained by any part of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d540789ae427c7038f66c7a74acbab0e7b00cb23" translate="yes" xml:space="preserve">
          <source>. Also returns &lt;code&gt;true&lt;/code&gt; if the current polygon contains or is contained by any part of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afa56dcd763737502b6eb46448e25958b08981d4" translate="yes" xml:space="preserve">
          <source>. Also, you can use the &lt;a href=&quot;qdesignercustomwidgetcollectioninterface&quot;&gt;QDesignerCustomWidgetCollectionInterface&lt;/a&gt; class to combine several custom widgets into a single library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3d469717886be74257b0523d0f9c9d64a43c3e5" translate="yes" xml:space="preserve">
          <source>. Altitude is not used in the calculation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5180b112e6cec2e76f4295ff30817756b37a8906" translate="yes" xml:space="preserve">
          <source>. An</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f227db0f7ef9529a731bc07b9b96d8a75f6dadc" translate="yes" xml:space="preserve">
          <source>. An BGRA to RGBA conversion (occurring in the shader on the GPU, instead of a slow CPU-side transformation) can be useful when the source texture contains data from a &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; with a format like &lt;a href=&quot;qimage#Format-enum&quot;&gt;QImage::Format_ARGB32&lt;/a&gt; which maps to BGRA on little endian systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da0c2ed4464a67d2a18f9e974c5a9ef41ad0fe8" translate="yes" xml:space="preserve">
          <source>. An action that is managed by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee75aa0d115a26ff42287d445b6948ed8de8b2fc" translate="yes" xml:space="preserve">
          <source>. An active &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; is one that has been &lt;a href=&quot;qsqlquery#exec-1&quot;&gt;exec()'d&lt;/a&gt; successfully but not yet finished with. When you are finished with an active query, you can make the query inactive by calling &lt;a href=&quot;qsqlquery#finish&quot;&gt;finish&lt;/a&gt;() or &lt;a href=&quot;qsqlquery#clear&quot;&gt;clear&lt;/a&gt;(), or you can delete the &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9773f95e85eecc00595e4da4995db2265b6456a5" translate="yes" xml:space="preserve">
          <source>. An atomic value is a value in the domain of one of the &lt;a href=&quot;http://www.w3.org/TR/xmlschema-2/#built-in-datatypes&quot;&gt;built-in datatypes&lt;/a&gt; defined in &lt;a href=&quot;http://www.w3.org/TR/xmlschema-2&quot;&gt;Part 2&lt;/a&gt; of the W3C XML Schema. A node is normally an XML element or attribute, but when non-XML data is &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;modeled to look like XML&lt;/a&gt;, a node can also represent a non-XML data items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7101cbca81b1324605820165ddc0d74b9fe44d2a" translate="yes" xml:space="preserve">
          <source>. An empty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b529177b2ea21e8adfa1ab9f3cef254aabbb40ab" translate="yes" xml:space="preserve">
          <source>. An empty hostname can be used to indicate that the remote host is unknown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23063aa7924b0a6ce187424d9e1f7c4a5d5665f8" translate="yes" xml:space="preserve">
          <source>. An interval can be moved forward through time with a positive offset, or backward through time with a negative offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f61796c1bcc0fcde28f3747092cea83dc6a1039" translate="yes" xml:space="preserve">
          <source>. An invalid index is returned if no such an item exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="074efd7dada7d4393e0e0e1516a4476536497107" translate="yes" xml:space="preserve">
          <source>. An item's visual parent may not necessarily be the same as its object parent. See &lt;a href=&quot;qtquick-visualcanvas-visualparent&quot;&gt;Concepts - Visual Parent in Qt Quick&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bf01a244a4ea75a08c7b828c4d110dfc9fd781b" translate="yes" xml:space="preserve">
          <source>. An item's visual parent may not necessarily be the same as its object parent. See &lt;a href=&quot;qtquick-visualcanvas-visualparent#&quot;&gt;Concepts - Visual Parent in Qt Quick&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad11fdeb7600c7527e410f11d99870428c1305c9" translate="yes" xml:space="preserve">
          <source>. An off-the-record profile forces cookies, the HTTP cache, and other normally persistent data to be stored only in memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f9ba222b8adfed679f2a508b6579ddd85a99af4" translate="yes" xml:space="preserve">
          <source>. An opaque</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="633703ac9f491d77fba2b09a7ca11b8fff5888a3" translate="yes" xml:space="preserve">
          <source>. An unmanaged action is not available in the action editor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a0304d94dfb82f5fac4b48db44f3e0da8295121" translate="yes" xml:space="preserve">
          <source>. And finally, the &lt;code&gt;m13&lt;/code&gt; and &lt;code&gt;m23&lt;/code&gt; elements specify horizontal and vertical projection, with &lt;code&gt;m33&lt;/code&gt; as an additional projection factor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0588d1fe49d03e3714d6fefa7f474e64e2e6703" translate="yes" xml:space="preserve">
          <source>. Animations declared in &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt; types apply to the property and animates any property value changes. However, Behavior types have an &lt;code&gt;enabled&lt;/code&gt; property to purposely enable or disable the behavior animations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8011ae32f3c57d2e143dd74aa160d7539145a228" translate="yes" xml:space="preserve">
          <source>. Any</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11cd25a64f1d0f28c36ab2fcbaa7020d23154353" translate="yes" xml:space="preserve">
          <source>. Any existing layout manager is deleted before the new layout is assigned. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2779d577719215634de1b5189e9a04fa5b4f6268" translate="yes" xml:space="preserve">
          <source>. Any object with the same key already in the cache will be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0b50ac8c7832de6e6dc2084cfdc6acc1a457bcc" translate="yes" xml:space="preserve">
          <source>. Any other bytes in the buffer will be left unmodified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44dc8218d0892568a4bd148bfadb2dd2d4bdee83" translate="yes" xml:space="preserve">
          <source>. Any other operation will result in undefined behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80133203cd9907b05f3439ee3944cbc7b929edf7" translate="yes" xml:space="preserve">
          <source>. Any places returned during the search will match at least one of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3ef30a607d34a86691505ee34351742320d2f9f" translate="yes" xml:space="preserve">
          <source>. Any previous content is cleared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="098d3cab84cf1952953b439115f234c914e067ed" translate="yes" xml:space="preserve">
          <source>. Any previous content is cleared. Does nothing if the double's string representation is the same as the current contents of the label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce75b77612afbe63f62060d52052bd35264b548" translate="yes" xml:space="preserve">
          <source>. Any previous content is cleared. Does nothing if the integer's string representation is the same as the current contents of the label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07058ebecb5490ac3045fcd44baa7dd76628dd76" translate="yes" xml:space="preserve">
          <source>. Any previous content is cleared. The label does NOT take ownership of the movie.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e05799a7f140d51b94e57be6853e16bfbdc0ce56" translate="yes" xml:space="preserve">
          <source>. Any previous contents will be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00a0a80ec91269a7feade5dfd855cf1238489a25" translate="yes" xml:space="preserve">
          <source>. Any previous text is removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77af114910eba24135127655cf84411be6a6c169" translate="yes" xml:space="preserve">
          <source>. Any previously set observer will be deleted. The observer can be uninstalled by calling this function with &lt;code&gt;nullptr&lt;/code&gt; as parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bf4a500b1a24fc33f4598bb48140a16b6c75c50" translate="yes" xml:space="preserve">
          <source>. As a result, constantly moving an object between threads can postpone timer events indefinitely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b945c92c54993077bb24c42b9f4879d2da948b10" translate="yes" xml:space="preserve">
          <source>. As a scheme can only contain ASCII characters, no conversion or decoding is done on the input. It must also start with an ASCII letter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb36de111dedf71c46d76ede046af3597c1ea7e" translate="yes" xml:space="preserve">
          <source>. As long as the object exists this function will always return the same &lt;a href=&quot;qscroller&quot;&gt;QScroller&lt;/a&gt; instance. If no &lt;a href=&quot;qscroller&quot;&gt;QScroller&lt;/a&gt; exists for the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf5698aa68d579e6588685aed3b5c79712f5b6ec" translate="yes" xml:space="preserve">
          <source>. Assigns the result to this bit array, and returns a reference to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1f3cbbd055be47325da73ea9322cd5935abe333" translate="yes" xml:space="preserve">
          <source>. At that time,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7687723377ec00f076fcdbdd8b1987f418e8a027" translate="yes" xml:space="preserve">
          <source>. Attempting to remove items past the end of the array does nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="729bb1ac770cbcb687d4eebb3e81fe428b3f4046" translate="yes" xml:space="preserve">
          <source>. Attempting to remove rows past the end of the array does nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c6644432841ba948de1067b6700a6c0dc65d636" translate="yes" xml:space="preserve">
          <source>. Attempting to remove rows past the end of the array does nothing. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="998451682e4b72f61b4b89ac801d9f670cad01bd" translate="yes" xml:space="preserve">
          <source>. Backends can either be built-in or be installed in form of dynamically loaded plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="838aaefbdc85f7644a404532ef95452c151759d1" translate="yes" xml:space="preserve">
          <source>. Because an &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; is a lot of expressions, understanding &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; expression precedence is very important. Consider the following query:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03bea831e4f06faa915f2817ac4e1e33aab2c5ed" translate="yes" xml:space="preserve">
          <source>. Because its key is set, its &lt;a href=&quot;qsharedmemory#create&quot;&gt;create&lt;/a&gt;() and &lt;a href=&quot;qsharedmemory#attach&quot;&gt;attach&lt;/a&gt;() functions can be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a997c07103293328fd4852368b7b41a99b890a9" translate="yes" xml:space="preserve">
          <source>. Because this function already registers the service, the &lt;a href=&quot;qbluetoothserviceinfo&quot;&gt;QBluetoothServiceInfo&lt;/a&gt; object which is returned can not be changed any more. To shutdown the server later on it is required to call &lt;a href=&quot;qbluetoothserviceinfo#unregisterService&quot;&gt;QBluetoothServiceInfo::unregisterService&lt;/a&gt;() and &lt;a href=&quot;qbluetoothserver#close&quot;&gt;close&lt;/a&gt;() on this server object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533186b033fd65bd88deb38a60c8e06e2bfb3165" translate="yes" xml:space="preserve">
          <source>. Behaves exactly like &lt;a href=&quot;qvariant#setValue&quot;&gt;setValue&lt;/a&gt;() otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56e1250476815eefd64a59335d19e152f95d01f6" translate="yes" xml:space="preserve">
          <source>. Both</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c38fcf25629e9c8e75ea7385a8526c8fed68098" translate="yes" xml:space="preserve">
          <source>. Both &lt;code&gt;Key&lt;/code&gt; and &lt;code&gt;T&lt;/code&gt; need to support streaming into &lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d949e1f25d7e597e620e6f67b8f9fc7c1241530" translate="yes" xml:space="preserve">
          <source>. Both &lt;code&gt;T1&lt;/code&gt; and &lt;code&gt;T2&lt;/code&gt; need to support streaming into &lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12dc3c80da9b77903e9f71533b639df7bf29db8c" translate="yes" xml:space="preserve">
          <source>. Both new and existing delegates will use the new factory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4bd0d7c50c315e59456d7e19e69890593585150" translate="yes" xml:space="preserve">
          <source>. Both objects need to be of type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e8c8b83a1c31a743c673f4afcde884cc9288da4" translate="yes" xml:space="preserve">
          <source>. Building these tools might fail if another command prompt is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="650b10a59d862b411d388083a689dbf8a6fdcef1" translate="yes" xml:space="preserve">
          <source>. But if the system already has a semaphore identified as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23756c119c3b8cc44038f2a8a9260f10ca04e240" translate="yes" xml:space="preserve">
          <source>. But now QDoc doesn't need to re-parse each module's source files, because the module's syntax tree is still in memory. Nor does QDoc need to re-read the index files for the dependent modules, again because it still has the syntax trees for those modules in memory. It remains only to traverse each module's syntax tree to generate the documentation pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44b3104739a7eddbf5c3b7b148355febaee0371e" translate="yes" xml:space="preserve">
          <source>. By default it is assumed that the cursor has moved to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7883ec67a16d410d3ada9600450c787242c60fd4" translate="yes" xml:space="preserve">
          <source>. By default this is an opaque color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2000a5eccb6c3c2d7e2ce589d7cc86b0a11bcb06" translate="yes" xml:space="preserve">
          <source>. By default, &lt;a href=&quot;qmovie&quot;&gt;QMovie&lt;/a&gt; will attempt to guess the format of the image data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69a904bb0732b6f58960dd6dc3e2a9957ab858b2" translate="yes" xml:space="preserve">
          <source>. By default, all dock areas show their tabs at the bottom.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aea17ba65d93b1a808600d9ea760bd4e947da422" translate="yes" xml:space="preserve">
          <source>. By default, all items whose shape intersects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00e4bea5eaacad977ec5ba3e1339a99cf9da4d89" translate="yes" xml:space="preserve">
          <source>. By default, combo box performs case sensitive exact matching (&lt;code&gt;Qt.MatchExactly&lt;/code&gt;). All other match types are case-insensitive unless the &lt;code&gt;Qt.MatchCaseSensitive&lt;/code&gt; flag is also specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e395f148f05cce955589b326fcf4ec2cfaf2663" translate="yes" xml:space="preserve">
          <source>. By default, it is assumed that the cursor has moved to the end of the selection. If that is not the case, one needs to manually set it with &lt;a href=&quot;qaccessibletextcursorevent#setCursorPosition&quot;&gt;QAccessibleTextCursorEvent::setCursorPosition&lt;/a&gt;() for this event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a4b62a55d5c1b069500c0c15e7b18f54bdb5251" translate="yes" xml:space="preserve">
          <source>. By default, multisampling is disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0fdd89e4285584b1ef09b245d748447f9b99538" translate="yes" xml:space="preserve">
          <source>. By default, the order in which</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e55236e16de7b29656ac2eeefeb617c97896685b" translate="yes" xml:space="preserve">
          <source>. By default, the orientation is horizontal and the submit policy is &lt;code&gt;AutoSubmit&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7613211169f272845aaa62d439c95354c5d815f1" translate="yes" xml:space="preserve">
          <source>. By default, the output codec is set to the one for &lt;code&gt;UTF-8&lt;/code&gt;. The serializer does not take ownership of the codec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9448281510a290d6274f3882f57278b793391c0b" translate="yes" xml:space="preserve">
          <source>. By default, this is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c1e5f871bf38ed2bce02a1cfba8df53d208f2f2" translate="yes" xml:space="preserve">
          <source>. CAN bus implementations must use this function to update the device state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb3f0631a585bd81c01233a3d2b4dfb66f8c3f08" translate="yes" xml:space="preserve">
          <source>. CBOR recommends using integer keys, since they occupy less space and are simpler to encode and decode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c95293da850a9265c49fff1f3e5d2a34d13810a" translate="yes" xml:space="preserve">
          <source>. Call &lt;a href=&quot;qbytearraymatcher#indexIn&quot;&gt;indexIn&lt;/a&gt;() to perform a search.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c938676a31b64d2f0eb7a7b2e25f425c28daa3d" translate="yes" xml:space="preserve">
          <source>. Call this function to set the open mode if the flags change after the device has been opened.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0a4772b09a70b195136bbfd33c38eff3494a1a0" translate="yes" xml:space="preserve">
          <source>. Call this function when using an Out-of-band reply handler to supply the verifier provided by the web server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="256a94e88f8438ea97526ec1fae94a2e00a6104e" translate="yes" xml:space="preserve">
          <source>. Calling this function is usually not necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c936aee98658f473e59321bd87697e8cf1cf48" translate="yes" xml:space="preserve">
          <source>. Calling this function when &lt;a href=&quot;qcborstreamreader#hasNext&quot;&gt;hasNext&lt;/a&gt;() has returned false is also an error. If this function returns false, &lt;a href=&quot;qcborstreamreader#lastError&quot;&gt;lastError&lt;/a&gt;() will return the error code detailing what the failure was.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="747d189a4ead5aa58f9ee1f876168de960eb8e5f" translate="yes" xml:space="preserve">
          <source>. Calling this method automatically resets the object state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f299b0553409cf5c88d97f072be32512b3e36a9e" translate="yes" xml:space="preserve">
          <source>. Calls to functions such as &lt;a href=&quot;qsettings#setValue&quot;&gt;setValue&lt;/a&gt;(), &lt;a href=&quot;qsettings#value&quot;&gt;value&lt;/a&gt;(), &lt;a href=&quot;qsettings#remove&quot;&gt;remove&lt;/a&gt;(), and &lt;a href=&quot;qsettings#contains&quot;&gt;contains&lt;/a&gt;() will operate on the array entry at that index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea12c72a8cad6665cbdab29fb936d214faefca0" translate="yes" xml:space="preserve">
          <source>. Can also return 0, in which case the plugin loader will use the factory with the next highest priority.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6aa49b0df55a994dd341d598ce1844e2654eae9" translate="yes" xml:space="preserve">
          <source>. Changes the row label to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef1a34e48e18c6407e00e9df302c4b28378b2a3" translate="yes" xml:space="preserve">
          <source>. Changing the layout orientation will automatically invalidate the layout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="210d3868d9472d24c0f1f772fece735f356a3ca7" translate="yes" xml:space="preserve">
          <source>. Changing the source will stop any current decoding and discard any buffers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b9c0f3536019b9332a4e2b1806abf4c91195c69" translate="yes" xml:space="preserve">
          <source>. Clears the error handler if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3d47f4b4a4bce78fe28a083c2bd46650431eaff" translate="yes" xml:space="preserve">
          <source>. Clears the existing array if the new array differs from it. If the arrays are the same, this function just triggers the &lt;a href=&quot;qbardataproxy#arrayReset&quot;&gt;arrayReset&lt;/a&gt;() signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f60c17cd53c1344a24a1341512e219a485aab4a" translate="yes" xml:space="preserve">
          <source>. Clears the existing array if the new array differs from it. If the arrays are the same, this function just triggers the &lt;a href=&quot;qscatterdataproxy#arrayReset&quot;&gt;arrayReset&lt;/a&gt;() signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc9511fb52a8d8597e0f70da24144c9427baa65f" translate="yes" xml:space="preserve">
          <source>. Clears the existing array if the new array differs from it. If the arrays are the same, this function just triggers the &lt;a href=&quot;qsurfacedataproxy#arrayReset&quot;&gt;arrayReset&lt;/a&gt;() signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2115f04b32442036f18db76ab201d37449ebca2e" translate="yes" xml:space="preserve">
          <source>. Client nodes connected to the node hosting this object may obtain Replicas of this Source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37b751526d4476929f8c574e0071c31940baf115" translate="yes" xml:space="preserve">
          <source>. Code paths in Qt that calculate layout geometry based on the pixmap size will use this size. The net effect of this is that the pixmap is displayed as high DPI pixmap rather than a large pixmap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62aa20929de70d6d29097d7b460e8a11909bbe52" translate="yes" xml:space="preserve">
          <source>. Collisions are determined by calling &lt;a href=&quot;qgraphicsitem#collidesWithItem&quot;&gt;QGraphicsItem::collidesWithItem&lt;/a&gt;(); the collision detection is determined by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="135287c17bb679a5b215bb6b08c0e999d89f77d9" translate="yes" xml:space="preserve">
          <source>. Color roles set in this instance take precedence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="726b919b2cdbc3125976f862a1461a9b8fe73508" translate="yes" xml:space="preserve">
          <source>. Common values for &lt;code&gt;codecName&lt;/code&gt; include &quot;ISO 8859-1&quot;, &quot;UTF-8&quot;, and &quot;UTF-16&quot;. If the encoding isn't recognized, nothing happens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="847265afdc68da578a38df839298f96169883b90" translate="yes" xml:space="preserve">
          <source>. Common words such as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a449040b5a921b3682ebe62ddafb10c571628d76" translate="yes" xml:space="preserve">
          <source>. Conceptually, evaluation of an axis step proceeds as follows: For each node in the focus set, the query engine navigates out from the node along the specified axis and applies the node test to each node it encounters. The nodes selected by the node test are collected in the result set, which becomes the focus set for the next step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a3b3114a87cb9dd5301579e887a0718b6be483d" translate="yes" xml:space="preserve">
          <source>. Corresponds to &lt;code&gt;GL_UNPACK_IMAGE_HEIGHT&lt;/code&gt;. The default value is 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98ca75179be250624eb67a5ca339dff97f9baf8a" translate="yes" xml:space="preserve">
          <source>. Corresponds to &lt;code&gt;GL_UNPACK_ROW_LENGTH&lt;/code&gt;. The default value is 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e6ec61b76febba2399ac9d79e7c85dab40174bc" translate="yes" xml:space="preserve">
          <source>. Corresponds to &lt;code&gt;GL_UNPACK_SKIP_IMAGES&lt;/code&gt;. Equivalent to incrementing the pointer passed to &lt;a href=&quot;qopengltexture#setData&quot;&gt;QOpenGLTexture::setData&lt;/a&gt;(). The default value is 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2763b136c078d356d9c61f11fba5539ed0397380" translate="yes" xml:space="preserve">
          <source>. Corresponds to &lt;code&gt;GL_UNPACK_SKIP_PIXELS&lt;/code&gt;. Equivalent to incrementing the pointer passed to &lt;a href=&quot;qopengltexture#setData&quot;&gt;QOpenGLTexture::setData&lt;/a&gt;(). The default value is 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="974d4cc91088c121d9042cfbe6aad1f9bfee6be1" translate="yes" xml:space="preserve">
          <source>. Corresponds to &lt;code&gt;GL_UNPACK_SKIP_ROWS&lt;/code&gt;. Equivalent to incrementing the pointer passed to &lt;a href=&quot;qopengltexture#setData&quot;&gt;QOpenGLTexture::setData&lt;/a&gt;(). The default value is 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4469cbeaf2ed9abcbb8378ccf9a42d88590bdcf" translate="yes" xml:space="preserve">
          <source>. Creates an empty polygon if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d08f6d2cf47b168ff27bc0b9affa6bdfd26640c" translate="yes" xml:space="preserve">
          <source>. Current pairing status is in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc9322cc90e5163626bc1d7bbb36e291e764c59" translate="yes" xml:space="preserve">
          <source>. Currently returns always 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef354b4ae31024385e4926b0ddbdb89d5d55028" translate="yes" xml:space="preserve">
          <source>. Currently, the version number is ignored on Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a5cd9af2170ad23ec09dec8ee2399d684a39e3" translate="yes" xml:space="preserve">
          <source>. Data can be a variable length argument list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5531d26d917d577fcd99b827d9d2e767431bd3d" translate="yes" xml:space="preserve">
          <source>. Default is &lt;a href=&quot;qwebenginesettings#UnknownUrlSchemePolicy-enum&quot;&gt;QWebEngineSettings::AllowUnknownUrlSchemesFromUserInteraction&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1770a56924e76a572434409fb8eb54697b48de0" translate="yes" xml:space="preserve">
          <source>. Default level is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55d1f7fd6b1a57946a454892998313faad7f3c32" translate="yes" xml:space="preserve">
          <source>. Default size is the window size. Image is rendered with antialiasing level given in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ad8b03b9ee787fb4ff401bc8db288670b1b5df5" translate="yes" xml:space="preserve">
          <source>. Defaults to Qt3DRender::QRenderTargetOutput::AttachmentPoint::Color0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bab0e27f8bd81ecb172a107e2001d3cb8dfcc1e" translate="yes" xml:space="preserve">
          <source>. Deletes the resources allocated to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6d5763fa763623655511b1ebcc83a7f5802c0fa" translate="yes" xml:space="preserve">
          <source>. Deletes the resources allocated to them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb9422d2559fb9f997f9e46c1a77773f171e4e4d" translate="yes" xml:space="preserve">
          <source>. Derived classes can use this function to report the status of &lt;a href=&quot;qsqldriver#open&quot;&gt;open&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0bbcf4d49ddfdd42a547b49bdb145d1784d7872" translate="yes" xml:space="preserve">
          <source>. Derived classes can use this function to report the status of &lt;a href=&quot;qsqldriver#open&quot;&gt;open&lt;/a&gt;(). Note that if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e2fae4849473919dbd0d83b7e0dac199467520" translate="yes" xml:space="preserve">
          <source>. Direction and velocity are all set to &lt;code&gt;&quot;0,0,0&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e112bef4c331453141da88941a6d9006d0a0789" translate="yes" xml:space="preserve">
          <source>. Direction is set to &lt;code&gt;&quot;0,0,0&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17f4d7198b14d9c429a826654ce38248c0641749" translate="yes" xml:space="preserve">
          <source>. Does not select data from the table, but fetches its field information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="276f4d562f6c73523cb5bd75b17693b2cb0c0043" translate="yes" xml:space="preserve">
          <source>. Does not take ownership of the model, but does connect to it to listen for changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="522a9c28f79315098a7b4452fd6e90121670a16f" translate="yes" xml:space="preserve">
          <source>. Does nothing if no gesture is grabbed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a48aa3d82c5a8893af78047fc799594b56d01d16" translate="yes" xml:space="preserve">
          <source>. Does nothing if the old point does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5300c4f8c5049aba37e3ef130e16c60dadb00faf" translate="yes" xml:space="preserve">
          <source>. Each</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b72531e70bfd096b24233da53f1d496ed1ac1946" translate="yes" xml:space="preserve">
          <source>. Each element has</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf82bc61a401492be7e87a74ff687ace33bde0e" translate="yes" xml:space="preserve">
          <source>. Each item can be thought of as having a set of 7 invisible &quot;anchor lines&quot;: &lt;a href=&quot;qml-qtquick-item#anchors.left-prop&quot;&gt;left&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-item#anchors.horizontalCenter-prop&quot;&gt;horizontalCenter&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-item#anchors.right-prop&quot;&gt;right&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-item#anchors.top-prop&quot;&gt;top&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-item#anchors.verticalCenter-prop&quot;&gt;verticalCenter&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-item#anchors.baseline-prop&quot;&gt;baseline&lt;/a&gt;, and &lt;a href=&quot;qml-qtquick-item#anchors.bottom-prop&quot;&gt;bottom&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf034c3f50b6bbdb2b945546a5d4343f961212d1" translate="yes" xml:space="preserve">
          <source>. Each toolbar item has an icon and a text label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68046bce826f6304f205e557c31f5b996024bb1e" translate="yes" xml:space="preserve">
          <source>. Either of these may be an empty string in which case the current directory and a default caption will be used respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d437c94b8c023d3d8f768796f0226f63145de534" translate="yes" xml:space="preserve">
          <source>. Equivalent to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="065af80c6a4e2745ba2dbc53cabef119a9985315" translate="yes" xml:space="preserve">
          <source>. Equivalent to calling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e865263be9f376c4a20e1d0a2c4e31e39451290f" translate="yes" xml:space="preserve">
          <source>. Equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff5e5070f95636789552901d9f9c454d7991eef" translate="yes" xml:space="preserve">
          <source>. Even if subsequent roles are added, only the first two will be handled by views using the model. To reset the roles available in the model, call &lt;a href=&quot;qml-qtqml-models-listmodel#clear-method&quot;&gt;ListModel::clear&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d934222f835d43f6059a3543eae9ecf629ac1aef" translate="yes" xml:space="preserve">
          <source>. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cf983226f59457ed62970f09bfa201b8faea554" translate="yes" xml:space="preserve">
          <source>. Existing connections are not affected by this call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47fe9e6da6c046001891836b000b032e2d331c31" translate="yes" xml:space="preserve">
          <source>. Existing row labels are not affected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5618549ee739454951b900be5efb9780db40ab6" translate="yes" xml:space="preserve">
          <source>. Existing row labels are not affected. The rows in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33ed3839fed08aa6f2b0b2f709e376383e76f2fb" translate="yes" xml:space="preserve">
          <source>. Extra values in the list are kept and used when the columns are created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65febeeb85cc8fb4ad9f5957775dc5031ee42134" translate="yes" xml:space="preserve">
          <source>. Float components are specified in the range 0.0-1.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3720ea431a208d57b7bd8df297f6e1a93a4cc0b2" translate="yes" xml:space="preserve">
          <source>. For Qt 5.12 or later, use the latest available version of NDK with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f596117c62c3aa9d2bd500eb4ec68c76d9c8a3" translate="yes" xml:space="preserve">
          <source>. For RGB the firstSize will represent the Red channel. On CMYK it will represent the value of the Cyan channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d0c513e1b3c771a14551a762fcf0aa123090d9f" translate="yes" xml:space="preserve">
          <source>. For an example, please read the &lt;a href=&quot;qtesteventlist&quot;&gt;QTestEventList&lt;/a&gt; class documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ce7f4437bf2ce5d380988d6102474aa61f2c379" translate="yes" xml:space="preserve">
          <source>. For each time value, &lt;a href=&quot;qtimeline&quot;&gt;QTimeLine&lt;/a&gt; will find the corresponding frame when you call &lt;a href=&quot;qtimeline#currentFrame&quot;&gt;currentFrame&lt;/a&gt;() or &lt;a href=&quot;qtimeline#frameForTime&quot;&gt;frameForTime&lt;/a&gt;() by interpolating, using the return value of &lt;a href=&quot;qtimeline#valueForTime&quot;&gt;valueForTime&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19acb734a5d522838098d898e5b72364e17daa98" translate="yes" xml:space="preserve">
          <source>. For example, &quot;Bold Italic&quot;, &quot;Bold&quot;, &quot;Italic&quot; or &quot;Normal&quot;. An empty string may be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9350a0674735ce9f400b05bac45d4fc49cbb4db" translate="yes" xml:space="preserve">
          <source>. For example, a value of 1.0 indicates an unscaled view, which is approximately the size the view will have on paper. A value of 0.5 will halve the size of the view, while a value of 2.0 will double the size of the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e1a1e9c40e3e1108ab31d53b8fdfd51b241b8ae" translate="yes" xml:space="preserve">
          <source>. For example, here's how to use &lt;code&gt;foreach&lt;/code&gt; to iterate over a &lt;a href=&quot;qlinkedlist&quot;&gt;QLinkedList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;&amp;gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e5760c83ceb782038c90a6af715375e4bf445b" translate="yes" xml:space="preserve">
          <source>. For example, if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="008df726fa9b37af7e5b3b0411e1b2837b06a86f" translate="yes" xml:space="preserve">
          <source>. For example, if the future is already stopped, the finished signal will be emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4630dc9ef7ab310726d243a10e81940fa1dc1cc4" translate="yes" xml:space="preserve">
          <source>. For example, suppose that thread A is waiting for thread B to unlock a resource. If thread B is also waiting for thread A to unlock a different resource, then both threads will end up waiting forever, so the application will freeze.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6322017e6bd7261ac4097c9e9553d5ca7abe1779" translate="yes" xml:space="preserve">
          <source>. For example, this is the declaration for the plugin used in the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdesigner-customwidgetplugin-example.html#&quot;&gt;Custom Widget Plugin example&lt;/a&gt; that enables an analog clock custom widget to be used by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a31685f07c8786c5dd080c91ad200430bf0394e4" translate="yes" xml:space="preserve">
          <source>. For example, when a JavaScript program requests to open a document in a new window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c021c2e5ea670f5b4ef4d80304cf68885d340b5e" translate="yes" xml:space="preserve">
          <source>. For example, when a JavaScript request to open a document in a new window is issued.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b17ecac96b1adb18dd520ee9c0b9bae11aca3ab3" translate="yes" xml:space="preserve">
          <source>. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f91cd0b85dbfd2780091771242ba1b89e54d8fd" translate="yes" xml:space="preserve">
          <source>. For existing Qt users, a focus scope is like an automatic focus proxy. A focus scope is created by declaring the &lt;a href=&quot;qml-qtquick-focusscope&quot;&gt;FocusScope&lt;/a&gt; type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d53a91aa35e3232e308de0483e6760f00a83725c" translate="yes" xml:space="preserve">
          <source>. For external objects to be loaded, &lt;code&gt;baseUrl&lt;/code&gt; cannot be empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d975c62b825594df922ed92fea81702cf22194a9" translate="yes" xml:space="preserve">
          <source>. For external objects to be loaded, &lt;code&gt;baseUrl&lt;/code&gt; cannot be empty. For example, if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6abff8ceded6b5f9a3f736100a644e6a73d0f561" translate="yes" xml:space="preserve">
          <source>. For image formats that do not support gamma correction, this value is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2097d2051de39f8734dc964db1a8e13d25ad28d4" translate="yes" xml:space="preserve">
          <source>. For image formats that do not support setting the gamma level, this value is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a388d5e178c85339cd3f9484b590dd300af5936" translate="yes" xml:space="preserve">
          <source>. For information on the manifest XML format, see &lt;a href=&quot;http://developer.android.com/guide/topics/manifest/manifest-intro.html#&quot;&gt;Android: App Manifest&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abae2c4bc2a39a8c81d967dc47a5f8142c176339" translate="yes" xml:space="preserve">
          <source>. For instance, it is possible to set a pattern to match case insensitively by setting the &lt;a href=&quot;qregularexpression#PatternOption-enum&quot;&gt;QRegularExpression::CaseInsensitiveOption&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="877bfde3aaa46201362abcd6a236c1ea06520532" translate="yes" xml:space="preserve">
          <source>. For large amounts of data this method should be preferred over &lt;a href=&quot;qhttppart#setBody&quot;&gt;setBody&lt;/a&gt;(), because the content is not copied when using this method, but read directly from the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1db30cf9758af6be7f6a09e9c63e36d24dc5dda" translate="yes" xml:space="preserve">
          <source>. For more details on OpenGL and Tessellation shaders see &lt;a href=&quot;http://www.opengl.org/wiki/Tessellation_Shader#&quot;&gt;OpenGL Tessellation Shaders&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="960d81b1d9a198ce3a189c7edd01d0dd4eca846b" translate="yes" xml:space="preserve">
          <source>. For more information about the differences, see the &lt;a href=&quot;http://doc.qt.io/qtcreator/index.html&quot;&gt;Qt Creator Manual&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27e62a7a1f26d3f1e3eb1c4436710c84cb0476c7" translate="yes" xml:space="preserve">
          <source>. For more information on deep copies, see the &lt;a href=&quot;implicit-sharing&quot;&gt;Implicit Data Sharing&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a200ad918cd86d0c2694e4ab8cca620240358330" translate="yes" xml:space="preserve">
          <source>. For more information, see &lt;a href=&quot;designer-creating-custom-widgets#building-and-installing-the-plugin&quot;&gt;Building and Installing the Plugin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f145a3574678b321ea01b1e2a4cc653a85ebe3c" translate="yes" xml:space="preserve">
          <source>. For more information, visit the &lt;a href=&quot;http://wiki.qt.io/Category:Devices&quot;&gt;Devices&lt;/a&gt; Wiki page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d65d8fc4cbc9fdc1f6c9d19dba54ce3c68edf013" translate="yes" xml:space="preserve">
          <source>. For most Unicode characters this is the same as &lt;a href=&quot;qchar#toLower&quot;&gt;toLower&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62ec2752b4bb78b1d40541a32f2f62150bcacfd8" translate="yes" xml:space="preserve">
          <source>. For strings this is the maximum number of characters the string can hold; the meaning varies for other types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d4576a9c3956afd27a8fbf924b843d9d93685f4" translate="yes" xml:space="preserve">
          <source>. For the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d27bb4f552b5f8e6d3bb7613927f3fc570885c9" translate="yes" xml:space="preserve">
          <source>. For the 'e', 'E', and 'f' formats, the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c76fc43fa4f607ec87e16f2578bad3ac23463f2d" translate="yes" xml:space="preserve">
          <source>. For the anchor to work as a hyperlink, the destination must be set with &lt;a href=&quot;qtextcharformat#setAnchorHref&quot;&gt;setAnchorHref&lt;/a&gt;() and the anchor must be enabled with &lt;a href=&quot;qtextcharformat#setAnchor&quot;&gt;setAnchor&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b008b732de6e6c4aae33e140de90530bfab22691" translate="yes" xml:space="preserve">
          <source>. From then on, that property becomes accessible using &lt;a href=&quot;qwizardpage#field&quot;&gt;field&lt;/a&gt;() and &lt;a href=&quot;qwizardpage#setField&quot;&gt;setField&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd9a8e96cbd6f8a4fc4307df2032d81b6d1fa30" translate="yes" xml:space="preserve">
          <source>. Further use of the same touch point should maintain the same touchId.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0964a11bfc46b81f58982266de0f60217a6c22c5" translate="yes" xml:space="preserve">
          <source>. Furthermore, a vertical &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; only calculates (estimates) the &lt;a href=&quot;qml-qtquick-flickable#contentHeight-prop&quot;&gt;contentHeight&lt;/a&gt;, and a horizontal &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; only calculates the &lt;a href=&quot;qml-qtquick-flickable#contentWidth-prop&quot;&gt;contentWidth&lt;/a&gt;. The other dimension is set to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28c8c7f8da1eeab3b18c899f602d3c5a0c5d1eb3" translate="yes" xml:space="preserve">
          <source>. Generally this will have copy-on-write semantics - a copy will only be made when it has to be.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39820a8a444858910cf179d718f84fdfbc818131" translate="yes" xml:space="preserve">
          <source>. Geocoding is the process of finding a coordinate that corresponds to a given address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65d9cd76c01eb3a01810c914058af296b1228acd" translate="yes" xml:space="preserve">
          <source>. Guarantees that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebd46aaf021e322528ed48ca0068698a01cf47b4" translate="yes" xml:space="preserve">
          <source>. Height map is set by calling &lt;a href=&quot;qheightmapsurfacedataproxy#setHeightMap&quot;&gt;setHeightMap&lt;/a&gt;() with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca140532516b64c6df042e6add677e8d886f03a" translate="yes" xml:space="preserve">
          <source>. Height map is set by calling &lt;a href=&quot;qheightmapsurfacedataproxy#setHeightMapFile&quot;&gt;setHeightMapFile&lt;/a&gt;() with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44eafc86875d5ef5dd1e48e88ba6d694ced43f38" translate="yes" xml:space="preserve">
          <source>. Here an application plugin might, for example, expose some data or objects to QML, as context properties on the engine's root context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35efddb26e3628d0c798f7b09e7ac6435639fc62" translate="yes" xml:space="preserve">
          <source>. Here is a simple FrameGraph that can be used for forward rendering:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db22cf450748123cf0b9480f7da3afc70e48f710" translate="yes" xml:space="preserve">
          <source>. Here is an example of an application with Norwegian localization:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea4b35bc37fcd9e763c3d70aab09a01300f23df0" translate="yes" xml:space="preserve">
          <source>. How it is added is specific to each subclass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09fbd46b4cd7ddfcdf695be57649ab2779191f39" translate="yes" xml:space="preserve">
          <source>. How these values are treated is controlled by the &lt;a href=&quot;qt3dinput-qaxisaccumulator#sourceAxisType&quot;&gt;sourceAxisType&lt;/a&gt; and scale properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f863c23a93501fd973cdcb1d746f38bd8aa20cad" translate="yes" xml:space="preserve">
          <source>. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0103a075b43dc181bf0a7780f4a69d2148f4487" translate="yes" xml:space="preserve">
          <source>. If  set to -1 then the tree will always follow visual index 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddffc4b2569cd37a63bc12328c7f83b0bbbe723e" translate="yes" xml:space="preserve">
          <source>. If &lt;a href=&quot;qmodbusreply#errorString&quot;&gt;errorString&lt;/a&gt; is not empty it will contain a textual description of the error. In case of a &lt;a href=&quot;qmodbusdevice#Error-enum&quot;&gt;QModbusDevice::ProtocolError&lt;/a&gt; the &lt;a href=&quot;qmodbusreply#rawResult&quot;&gt;rawResult&lt;/a&gt;() function can be used to obtain the original Modbus exception response to get the exception code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92846ca59267b30dd85df0b426c6ad38c1a145d4" translate="yes" xml:space="preserve">
          <source>. If &lt;a href=&quot;qsignalspy&quot;&gt;QSignalSpy&lt;/a&gt; is not able to listen for a valid signal (for example, because</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cc9a43e6d234bef01f59d51a369dc0ecc7853ca" translate="yes" xml:space="preserve">
          <source>. If &lt;code&gt;T&lt;/code&gt; is a type that &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; doesn't support, &lt;a href=&quot;qmetatype&quot;&gt;QMetaType&lt;/a&gt; is used to store the value. A compile error will occur if &lt;a href=&quot;qmetatype&quot;&gt;QMetaType&lt;/a&gt; doesn't handle the type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff44399f93e14654e1657f759ccf3b2ec4f104a" translate="yes" xml:space="preserve">
          <source>. If a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17402230438623b4312b21ff1a003344d6e32fc7" translate="yes" xml:space="preserve">
          <source>. If a &lt;a href=&quot;qwaylandclient&quot;&gt;QWaylandClient&lt;/a&gt; has not already been created for a client, it is created and returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f68cecef378e3af967487de3f0e8f7f42ffca9b" translate="yes" xml:space="preserve">
          <source>. If a connection is established, &lt;a href=&quot;qbluetoothsocket&quot;&gt;QBluetoothSocket&lt;/a&gt; enters &lt;a href=&quot;qbluetoothsocket#SocketState-enum&quot;&gt;ConnectedState&lt;/a&gt; and emits &lt;a href=&quot;qbluetoothsocket#connected&quot;&gt;connected&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db149cb6be633637485edc2568a534091d1c07f5" translate="yes" xml:space="preserve">
          <source>. If a dash pattern is set, each segment of the pattern is subject to the cap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da6378020fbfa4a3679ff1c9f79458c2a372cca4" translate="yes" xml:space="preserve">
          <source>. If a device has already been assigned, &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; will call &lt;a href=&quot;qtextstream#flush&quot;&gt;flush&lt;/a&gt;() before replacing it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="267bfe4121903f85e0c71719d448bf900edf7e45" translate="yes" xml:space="preserve">
          <source>. If a device has already been assigned, &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; will call &lt;a href=&quot;qtextstream#flush&quot;&gt;flush&lt;/a&gt;() before the old device is replaced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="214333fa913cbc19238ee4f3d649720ecb593c5e" translate="yes" xml:space="preserve">
          <source>. If a device has already been set, the old device is removed from &lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt; and is otherwise left unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="452a55f314493e1fc14b84f02558579386214414" translate="yes" xml:space="preserve">
          <source>. If a device has already been set, the old device is removed from &lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt; and is otherwise left unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d2a50e8511b68c66490867eab2a67de14bed2d" translate="yes" xml:space="preserve">
          <source>. If a key is common to both hashes, the resulting hash will contain the key multiple times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="203af6739afd43f70ad4943ce661a67ce20eeb80" translate="yes" xml:space="preserve">
          <source>. If a key is common to both maps, the resulting map will contain the key multiple times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c53ddcc0513a59280032138eaaf46f1736096ed5" translate="yes" xml:space="preserve">
          <source>. If a long-term reference to a piece of information is required, a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07a4337900cd4dad1d0c4e76b1b367aa6316ed02" translate="yes" xml:space="preserve">
          <source>. If a namespace referenced in an attribute not been declared yet, &lt;a href=&quot;qxmlstreamwriter&quot;&gt;QXmlStreamWriter&lt;/a&gt; will generate a namespace declaration for it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ffa2c5b5ab99ac7ede279ee04fbe7e3c6eb1233" translate="yes" xml:space="preserve">
          <source>. If a null or invalid &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; is passed, backend should choose the value automatically, and if possible report the actual value to user with &lt;a href=&quot;qcameraexposurecontrol#actualValue&quot;&gt;QCameraExposureControl::actualValue&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dd0bbac0c99020fce80278f336f872a70bbbcc8" translate="yes" xml:space="preserve">
          <source>. If a plugin cannot create a style, it should return 0 instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="557d70bfe477f74a385759875dabca6985729c3e" translate="yes" xml:space="preserve">
          <source>. If a resource for the specific locale is not found then the C locale is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57a2bbcc81518579cc27d38591cdf91d118d9b2a" translate="yes" xml:space="preserve">
          <source>. If a valid path has been set, the transition will only trigger if the mouse event position (&lt;a href=&quot;qmouseevent#pos&quot;&gt;QMouseEvent::pos&lt;/a&gt;()) is inside the path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6eb6342d4306d20a665139fb4f9f67752194d61" translate="yes" xml:space="preserve">
          <source>. If an attribute with the same local name and namespace URI exists, its prefix is replaced by the prefix of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d2f62869442858d47a815155d18f906d95606b5" translate="yes" xml:space="preserve">
          <source>. If an attribute with the same name exists, its value is replaced by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37ef5a83ce4dc70f87f51911f5d7ff4a2d4e1f1" translate="yes" xml:space="preserve">
          <source>. If an error occurs, the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5865984b29c36c4338552c7a1cd94abf535bddc3" translate="yes" xml:space="preserve">
          <source>. If an explicit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e25ae16d1e26a2843a085846127457c99610875" translate="yes" xml:space="preserve">
          <source>. If an invalid index is provided, &lt;code&gt;null&lt;/code&gt; is returned</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33174712dce3890892889ea1065cd5959da75fd4" translate="yes" xml:space="preserve">
          <source>. If an item accepts hover events (see &lt;a href=&quot;qgraphicsitem#acceptHoverEvents&quot;&gt;QGraphicsItem::acceptHoverEvents&lt;/a&gt;()), it will receive a &lt;a href=&quot;qevent#Type-enum&quot;&gt;GraphicsSceneHoverEnter&lt;/a&gt; event when the mouse enters its area. As the mouse continues moving inside the item's area, &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; will send it &lt;a href=&quot;qevent#Type-enum&quot;&gt;GraphicsSceneHoverMove&lt;/a&gt; events. When the mouse leaves the item's area, the item will receive a &lt;a href=&quot;qevent#Type-enum&quot;&gt;GraphicsSceneHoverLeave&lt;/a&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1c2fadf630b033d376405dd5ed1769124af1521" translate="yes" xml:space="preserve">
          <source>. If an item's stretch factor changes, this function will invalidate the layout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f205a83b786c094a567dc1a97937ee79f66a2b" translate="yes" xml:space="preserve">
          <source>. If another item already has focus, that item will first receive a &lt;a href=&quot;qgraphicsitem#focusOutEvent&quot;&gt;focus out event&lt;/a&gt; indicating that it has lost input focus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b93a790d31aed89576a06f72e9fae933b6cffe34" translate="yes" xml:space="preserve">
          <source>. If another model was set, all mappings to that old model are cleared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ce56f216e0fbe63efb96348f74952acfad9c2ed" translate="yes" xml:space="preserve">
          <source>. If both are null, the &lt;a href=&quot;qpictureio&quot;&gt;QPictureIO&lt;/a&gt; object is valid but useless.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3059d3c81b609b3dfec03ff3880df77ad2e95497" translate="yes" xml:space="preserve">
          <source>. If either</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29b96b6d4a36afc97363af6b131b2f823cd1a831" translate="yes" xml:space="preserve">
          <source>. If either of the blue rectangles are moved,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3514dc1b1663c5455a0a3b2addf567daefdb046" translate="yes" xml:space="preserve">
          <source>. If focus is not currently set to &lt;code&gt;true&lt;/code&gt;, this component will receive keyboard focus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="406e7d07928e4222b818937bb7133c80c11b0f01" translate="yes" xml:space="preserve">
          <source>. If it is a checkable action, the specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="606b0eed7aea90fe69ac2c6e1344e1ff3ca96b19" translate="yes" xml:space="preserve">
          <source>. If it is the first &lt;a href=&quot;qwaylandoutput&quot;&gt;QWaylandOutput&lt;/a&gt; object created for this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e073889bf8b64d22f4f61a25b17c5662bf36b178" translate="yes" xml:space="preserve">
          <source>. If items are added to the array without calling &lt;a href=&quot;qscatterdataproxy#addItem&quot;&gt;addItem&lt;/a&gt;() or &lt;a href=&quot;qscatterdataproxy#addItems&quot;&gt;addItems&lt;/a&gt;(), this signal needs to be emitted to update the graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be7e630140c387824c75c05dec4d7ccd8c951eaf" translate="yes" xml:space="preserve">
          <source>. If items are changed in the array without calling &lt;a href=&quot;qscatterdataproxy#setItem&quot;&gt;setItem&lt;/a&gt;() or &lt;a href=&quot;qscatterdataproxy#setItems&quot;&gt;setItems&lt;/a&gt;(), this signal needs to be emitted to update the graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bdbb16232cf6f6bf905448852386faadc94d5d7" translate="yes" xml:space="preserve">
          <source>. If items are inserted into the array without calling &lt;a href=&quot;qscatterdataproxy#insertItem&quot;&gt;insertItem&lt;/a&gt;() or &lt;a href=&quot;qscatterdataproxy#insertItems&quot;&gt;insertItems&lt;/a&gt;(), this signal needs to be emitted to update the graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e3d7d4f8d2298d4e2a061693f31469fc2a435ad" translate="yes" xml:space="preserve">
          <source>. If listen only mode is set to &lt;code&gt;true&lt;/code&gt;, messages are monitored but no response will be sent. The default value preset is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cf645e9384cd165a3b28342eb4c92e77f20040a" translate="yes" xml:space="preserve">
          <source>. If necessary, the column count is increased to fit the item. The previous header item (if there was one) is deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc8ef2f56a9a247272d350081808d744aafd6ad3" translate="yes" xml:space="preserve">
          <source>. If necessary, the column count is increased to the size of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56ab35414231840f28aefe98cd30d44479d27dca" translate="yes" xml:space="preserve">
          <source>. If necessary, the row count and column count are increased to fit the item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb2ab1ebee00fd107284185d7026fef562e649bd" translate="yes" xml:space="preserve">
          <source>. If necessary, the row count is increased to the size of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db719dd3fa406d489914d3d33cea7142d579de6f" translate="yes" xml:space="preserve">
          <source>. If no</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee6c61af088d0cbd098ae58f2b574f6f2f3cf74" translate="yes" xml:space="preserve">
          <source>. If no categories were previously defined, the minimum value on the axis will also be changed to match</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ce46651bd1f9749233b9c909300362404e7e277" translate="yes" xml:space="preserve">
          <source>. If no categories were previously defined, the minimum value on the axis will also be changed to match the first category in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d297ae0cf0d497cf54654da9c01928eed72a2c3" translate="yes" xml:space="preserve">
          <source>. If no custom network access manager is set, an internal network access manager is used. This network access manager will be used to make the request to the authentication server and the authenticated request to the web service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="464085406c57347cf7405f320ef9ccbc31bf8e10" translate="yes" xml:space="preserve">
          <source>. If no database (or an invalid database) is specified, the default connection is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ce40b8b9c17f748b464250489adb7e138c3c53d" translate="yes" xml:space="preserve">
          <source>. If no default value is specified in the XML file,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a22c2a7d6834e68221a264fb08ffad0ea2b194a" translate="yes" xml:space="preserve">
          <source>. If no editor exists, the delegate will create a new editor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf0fc06e2165e2b82462b19ba15d6dc536b60273" translate="yes" xml:space="preserve">
          <source>. If no element with the ID was found, this function returns a &lt;a href=&quot;qdomnode#isNull&quot;&gt;null element&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea982f2ced6cfbff2d22ea8bf57900552b63d13" translate="yes" xml:space="preserve">
          <source>. If no factory can provide an accessibility implementation for the class the function loads installed accessibility plugins, and tests if any of the plugins can provide the implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe00eb6d75488d7f52dbc559df252b8e7611dcab" translate="yes" xml:space="preserve">
          <source>. If no item has active focus, the key event is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a66a51d2d2cf435f3db4352c803f5a5bec0aff46" translate="yes" xml:space="preserve">
          <source>. If no item is found nothing happens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c869b39a0944b53ee33b2b97015af9c4b28b637" translate="yes" xml:space="preserve">
          <source>. If no matching font could be created, a &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; object that uses the application's default font is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbf19a2e646b129864b6d31650d9036bf5912f04" translate="yes" xml:space="preserve">
          <source>. If no matching string is found, the id itself is returned. This should not happen under normal conditions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f61231c97daeca4fe82c6e4a184687bfb8cf5ed" translate="yes" xml:space="preserve">
          <source>. If no message handler has been installed, the message is printed to stderr. Under Windows the message is sent to the console, if it is a console application; otherwise, it is sent to the debugger. On QNX, the message is sent to slogger2. This function does nothing if &lt;code&gt;QT_NO_DEBUG_OUTPUT&lt;/code&gt; was defined during compilation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="937a122b91f2882be1a01b268f2b36448625b675" translate="yes" xml:space="preserve">
          <source>. If no message handler has been installed, the message is printed to stderr. Under Windows, the message is sent to the console, if it is a console application; otherwise, it is sent to the debugger. On QNX the message is sent to slogger2. This function does nothing if &lt;code&gt;QT_NO_INFO_OUTPUT&lt;/code&gt; was defined during compilation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b12d8b682e722c8fc691490abff1786893167d" translate="yes" xml:space="preserve">
          <source>. If no message handler has been installed, the message is printed to stderr. Under Windows, the message is sent to the debugger. On QNX the message is sent to slogger2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faf3daec17ab2e7e676157df7231b03bd1c14e98" translate="yes" xml:space="preserve">
          <source>. If no message handler has been installed, the message is printed to stderr. Under Windows, the message is sent to the debugger. On QNX the message is sent to slogger2. This function does nothing if &lt;code&gt;QT_NO_WARNING_OUTPUT&lt;/code&gt; was defined during compilation; it exits if at the nth warning corresponding to the counter in environment variable &lt;code&gt;QT_FATAL_WARNINGS&lt;/code&gt;. That is, if the environment variable contains the value 1, it will exit on the 1st message; if it contains the value 10, it will exit on the 10th message. Any non-numeric value is equivalent to 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f94821def76cc9e3af653f1f3aa08edda74d46e8" translate="yes" xml:space="preserve">
          <source>. If no namespace processing is done or if the attribute has no namespace, the namespace URI is an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cf0388e033e290eab717daab9ab91799cf943de" translate="yes" xml:space="preserve">
          <source>. If no namespace processing is done, the local name is an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac26ce2a473b2e77d3acb3725e0415811470dea3" translate="yes" xml:space="preserve">
          <source>. If no other parameters are given, the function returns all the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28810e7239558aa01fb117a4ac82a57526f305bb" translate="yes" xml:space="preserve">
          <source>. If no other parameters are given, the method returns all the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d5de3470e3fb5c4a70cf3786555e489e2e94f25" translate="yes" xml:space="preserve">
          <source>. If no pen is set, the line will be painted using a black solid 0-width pen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4409244d47f49e0d4ecaf28006f1016668a2d448" translate="yes" xml:space="preserve">
          <source>. If no primary index exists, an empty &lt;a href=&quot;qsqlindex&quot;&gt;QSqlIndex&lt;/a&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fbe7c111d7aa3d9dca41178ed48de6315ed501d" translate="yes" xml:space="preserve">
          <source>. If no primary key is defined, the returned record will contain all fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a99ddfb8b5957bcd1b8fcef7d89603d98309025b" translate="yes" xml:space="preserve">
          <source>. If no series is provided, any axis with the specified polar orientation is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2653a2eb72a2890275db8db4c3be16575a8573bc" translate="yes" xml:space="preserve">
          <source>. If no series is specified, all axes added to the chart with the specified orientation are returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c89a0540346b944d6e0f2a2760f17b1498c82ec1" translate="yes" xml:space="preserve">
          <source>. If no size hint is set, the item delegate will compute the size hint based on the item data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cbba0d408cc729cddd84ae04dfe6d41066c08eb" translate="yes" xml:space="preserve">
          <source>. If no such attribute exists a &lt;a href=&quot;qdomnode#isNull&quot;&gt;null attribute&lt;/a&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b71c18ae26f72df96923749f04e424dcfc68bcb0" translate="yes" xml:space="preserve">
          <source>. If no such header is present or the proxy is not of type &lt;a href=&quot;qnetworkproxy#ProxyType-enum&quot;&gt;HttpProxy&lt;/a&gt; or &lt;a href=&quot;qnetworkproxy#ProxyType-enum&quot;&gt;HttpCachingProxy&lt;/a&gt;, an empty &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; is returned, which may be indistinguishable from a header that is present but has no content (use &lt;a href=&quot;qnetworkproxy#hasRawHeader&quot;&gt;hasRawHeader&lt;/a&gt;() to find out if the header exists or not).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="782b7aef05025bc929ad9798b1b7232e74d79c51" translate="yes" xml:space="preserve">
          <source>. If no such header is present, an empty &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; is returned, which may be indistinguishable from a header that is present but has no content (use &lt;a href=&quot;qnetworkrequest#hasRawHeader&quot;&gt;hasRawHeader&lt;/a&gt;() to find out if the header exists or not).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc936a236d715608fb33c266452c38b475bdba3" translate="yes" xml:space="preserve">
          <source>. If no such header is present, an empty &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; is returned, which may be indistinguishable from a header that is present but has no content (use &lt;a href=&quot;qwebenginehttprequest#hasHeader&quot;&gt;hasHeader&lt;/a&gt;() to find out if the header exists or not).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="590bdc1325c8b1479c7c53b1f3d02ee253bafa9d" translate="yes" xml:space="preserve">
          <source>. If no such interface exists, this function returns an invalid &lt;a href=&quot;qnetworkinterface&quot;&gt;QNetworkInterface&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ac9b7766a8e4ddebc18a228ade992d4e09734f7" translate="yes" xml:space="preserve">
          <source>. If no such property exists, a null &lt;a href=&quot;qmetaproperty&quot;&gt;QMetaProperty&lt;/a&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12da777e3eff0f351201917951c7ca50775f3b7e" translate="yes" xml:space="preserve">
          <source>. If no such property exists, an undefined &lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf869adc1b65ea6e7957c833e9868b6895cd06d0" translate="yes" xml:space="preserve">
          <source>. If no such table exists, an empty record is returned. The default implementation returns an empty record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="775daf28269937b6ee2b57491afaa4afbcf57828" translate="yes" xml:space="preserve">
          <source>. If no time is set yet, it is set to midnight. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="619accfdc3c6384ee11c30aa53475d40ae877388" translate="yes" xml:space="preserve">
          <source>. If not, only slots named</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98034ff529181dae5a471e61a0c73f81f1de8052" translate="yes" xml:space="preserve">
          <source>. If not, slots in objects other than</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9acd8b8aae6e7e978f662153942e0ebc6be71e1f" translate="yes" xml:space="preserve">
          <source>. If only the &lt;a href=&quot;qml-qtwebengine-webengineprofile#storageName-prop&quot;&gt;storageName&lt;/a&gt; property is set, the other values are generated automatically based on it. If you specify any of the values manually, you should do it before creating any pages that belong to the profile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="511315e6f36449fffcc004073fc569f99b43e8d5" translate="yes" xml:space="preserve">
          <source>. If only the &lt;a href=&quot;qquickwebengineprofile#storageName-prop&quot;&gt;storageName&lt;/a&gt; property is set, the other values are generated automatically based on it. If you specify any of the values manually, you should do it before creating any pages that belong to the profile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2564ce16524ddd2b137cfc2c30167bfa637df3c" translate="yes" xml:space="preserve">
          <source>. If path is empty the program's working directory, (&quot;.&quot;), is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5028e359b16b94378b512e67910442c7361f250c" translate="yes" xml:space="preserve">
          <source>. If possible the &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; should be of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0459986a5dfca1825d37f1dc733df9b2424f90b" translate="yes" xml:space="preserve">
          <source>. If rows are added to the array without calling &lt;a href=&quot;qbardataproxy#addRow&quot;&gt;addRow&lt;/a&gt;() or &lt;a href=&quot;qbardataproxy#addRows&quot;&gt;addRows&lt;/a&gt;(), this signal needs to be emitted to update the graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac6adcef007fbdba2701fead33861a23203800c3" translate="yes" xml:space="preserve">
          <source>. If rows are added to the array without calling &lt;a href=&quot;qsurfacedataproxy#addRow&quot;&gt;addRow&lt;/a&gt;() or &lt;a href=&quot;qsurfacedataproxy#addRows&quot;&gt;addRows&lt;/a&gt;(), this signal needs to be emitted to update the graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d14eeb702ae3197cf2cca4a3a8e995f2219a984" translate="yes" xml:space="preserve">
          <source>. If rows are changed in the array without calling &lt;a href=&quot;qbardataproxy#setRow&quot;&gt;setRow&lt;/a&gt;() or &lt;a href=&quot;qbardataproxy#setRows&quot;&gt;setRows&lt;/a&gt;(), this signal needs to be emitted to update the graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2244ba481aad5299dae97e83abdecbf193f3580a" translate="yes" xml:space="preserve">
          <source>. If rows are changed in the array without calling &lt;a href=&quot;qsurfacedataproxy#setRow&quot;&gt;setRow&lt;/a&gt;() or &lt;a href=&quot;qsurfacedataproxy#setRows&quot;&gt;setRows&lt;/a&gt;(), this signal needs to be emitted to update the graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa7cc9a9977c4417f4edc97ef167ca9c35cf3dd" translate="yes" xml:space="preserve">
          <source>. If set to &lt;code&gt;true&lt;/code&gt; the sample positions and number of samples used are the same for all texels in the image and will not depend upon the image size or internal format. This function should be called before storage is allocated for the texture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8aed90e94b9c58c7c30ade8973d9a7b118dbdfd" translate="yes" xml:space="preserve">
          <source>. If set,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="009ece4ef7713d597a191ce92b785c38f5fd22a4" translate="yes" xml:space="preserve">
          <source>. If shader programs are not supported, &lt;a href=&quot;qopenglshaderprogram#hasOpenGLShaderPrograms&quot;&gt;QOpenGLShaderProgram::hasOpenGLShaderPrograms&lt;/a&gt;() will return false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="150eced926a09083a3210646ec96b579b0e63876" translate="yes" xml:space="preserve">
          <source>. If specified,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b77c1c1ac91e55e65b38dbd52a3e03d62faa0d1" translate="yes" xml:space="preserve">
          <source>. If sw or sh are equal to zero the width/height of the pixmap is used and adjusted by the offset sx/sy;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78cc0c3b505d68e25649874f60e1a6bc89f8555f" translate="yes" xml:space="preserve">
          <source>. If that copy operation fails or this file can't be removed, the destination file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79af01cf79fa9d42d7f4abae6b5acd3c363321bf" translate="yes" xml:space="preserve">
          <source>. If that is not the case, one needs to manually set it with &lt;a href=&quot;qaccessibletextcursorevent#setCursorPosition&quot;&gt;QAccessibleTextCursorEvent::setCursorPosition&lt;/a&gt;() for this event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41942a18b516a69ae3b7a9fa38b6eeb5721f1aab" translate="yes" xml:space="preserve">
          <source>. If the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd48159cf50326859c505f649947c9384f9ef5ad" translate="yes" xml:space="preserve">
          <source>. If the &lt;a href=&quot;qml-qt3d-render-clearbuffers&quot;&gt;ClearBuffers&lt;/a&gt; node were to be the last instead of the first, this would result in a black screen for the simple reason that everything would be cleared right after having been so carefully rendered. For a similar reason, it could not be used as the root of the FrameGraph as that would result in a call to clear the whole screen for each of our viewports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbef1ee3b8d1857459b694eab01eea363ef44b13" translate="yes" xml:space="preserve">
          <source>. If the &lt;a href=&quot;qtextlayout&quot;&gt;QTextLayout&lt;/a&gt; is backed by a document, you can ignore this and use the option in &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt;, this option is for widgets like &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; or custom widgets without a &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt;. Default value is &lt;a href=&quot;qt#CursorMoveStyle-enum&quot;&gt;Qt::LogicalMoveStyle&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e75da908e864aecca5e1800e805b566b8d83d890" translate="yes" xml:space="preserve">
          <source>. If the Plugin used for the Map supports bearing, the valid range for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc52f3a87543352eb98bff805ba59b14b037359d" translate="yes" xml:space="preserve">
          <source>. If the active type is std::monostate a default &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a4c41255af4ff707bd375266a6fc7935ec0a414" translate="yes" xml:space="preserve">
          <source>. If the address protocol is not IPv6, this function does nothing. The scope ID may be set as an interface name (such as &quot;eth0&quot; or &quot;en1&quot;) or as an integer representing the interface index. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a630fbe4b36f1843fa4e830d041d71cbf0674fe" translate="yes" xml:space="preserve">
          <source>. If the associated controller object is in the &lt;a href=&quot;qlowenergycontroller#Role-enum&quot;&gt;central&lt;/a&gt; role, the change must have been caused by calling &lt;a href=&quot;qlowenergyservice#writeDescriptor&quot;&gt;writeDescriptor&lt;/a&gt;(). Otherwise, the signal is the result of a write request or command from a GATT client to the respective descriptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fb1b738189c23fa00ecb4229b29015e47166b06" translate="yes" xml:space="preserve">
          <source>. If the attribute does not exist</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20009bcef37fbd9e8fde78f4eed62328b75bd570" translate="yes" xml:space="preserve">
          <source>. If the attribute has not been set, it returns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81836915790f71620b904bb1c32ab36f99d29a55" translate="yes" xml:space="preserve">
          <source>. If the attribute has not been set, it returns an invalid &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; (type &lt;a href=&quot;qmetatype#Type-enum&quot;&gt;QMetaType::UnknownType&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37b98df5ba92eccb23bfcbf92a685ad7e2375d02" translate="yes" xml:space="preserve">
          <source>. If the attribute is already set, the previous value is discarded. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7c45be476f4353f09a4b6bd29931ebad5385730" translate="yes" xml:space="preserve">
          <source>. If the attribute is already set, the previous value is discarded. In special, if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d68066536745a73621edb1d32391293cdd366de" translate="yes" xml:space="preserve">
          <source>. If the bounding rectangle is not specified the SVG element is mapped to the whole paint device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2af4cdca59fed21e018b4edaf18b4b48b0c241fd" translate="yes" xml:space="preserve">
          <source>. If the brush is not defined, the brush from the chart theme setting is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6be6836ee7bebcc636bb15c677df516acd9516fa" translate="yes" xml:space="preserve">
          <source>. If the cache already contains an item at</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f315035b1ba386406841df359ae2f5fb098c5e7" translate="yes" xml:space="preserve">
          <source>. If the call is not finished yet, this function will call QDBusPendingCall::waitForFinished() to block until the reply arrives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8409e36a6ac9ad1257f4438c6baf60016ee57165" translate="yes" xml:space="preserve">
          <source>. If the call isn't finished yet, &lt;a href=&quot;qdbusreply&quot;&gt;QDBusReply&lt;/a&gt; will call QDBusPendingCall::waitForFinished(), which is a blocking operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1d685373a525981bf303d8626d4aac7ac417cb9" translate="yes" xml:space="preserve">
          <source>. If the camera isn't loaded, the list will be empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76c46651cce4c6a615cd0f88b39058eb1b7960c8" translate="yes" xml:space="preserve">
          <source>. If the capturing group named</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b8f71e615d69e84c50374c9ea4376dd0f9c45ab" translate="yes" xml:space="preserve">
          <source>. If the cast cannot be done, the variant is still changed to the requested type, but is left in a cleared null state similar to that constructed by &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;(Type).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05231e04daa6f1d3f9adc325ebc9bef892ba4201" translate="yes" xml:space="preserve">
          <source>. If the client replies to the event the &lt;a href=&quot;qml-qtwayland-compositor-xdgshell#pong-signal&quot;&gt;pong&lt;/a&gt; signal will be emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f15f5cfecdd7e997daa3487bcbc9d26cbb15d6ce" translate="yes" xml:space="preserve">
          <source>. If the client replies to the event the &lt;a href=&quot;qml-qtwayland-compositor-xdgshellv6#pong-signal&quot;&gt;pong&lt;/a&gt; signal will be emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8e6f7dcc5db54978d5b47e316bcd474a3119a94" translate="yes" xml:space="preserve">
          <source>. If the client replies to the event the &lt;a href=&quot;qwaylandxdgshell#pong&quot;&gt;pong&lt;/a&gt; signal will be emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ac1faa069897ddd23255c7be35aec6a567a2bb9" translate="yes" xml:space="preserve">
          <source>. If the client replies to the event the &lt;a href=&quot;qwaylandxdgshellv6#pong&quot;&gt;pong&lt;/a&gt; signal will be emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdef329ab527effa76cc33a54c03e68d8bcb7517" translate="yes" xml:space="preserve">
          <source>. If the client replies to the event, the pong signal will be emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73fc7a0a9673846a1f7a79f89bfbd192a837d19d" translate="yes" xml:space="preserve">
          <source>. If the current total cost is greater than</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3633cafa51e01d27bb62a67920229664db30fc93" translate="yes" xml:space="preserve">
          <source>. If the cursor has a selection, the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21a080d07093e572a9bad16942fd6af7c8f9a6bd" translate="yes" xml:space="preserve">
          <source>. If the cursor has a selection, this function applies all the properties set in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34e1b0e4b1b7c43f4f393445883b57ee3822ff8d" translate="yes" xml:space="preserve">
          <source>. If the desired</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ade0bb0189a57af1ac1a128d6a5dc4498ca4c4d" translate="yes" xml:space="preserve">
          <source>. If the device is not open, it will be opened in &lt;a href=&quot;qiodevice#OpenModeFlag-enum&quot;&gt;QIODevice::ReadOnly&lt;/a&gt; mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b727dabcbcd66904b7a94596d54212429c13ffc4" translate="yes" xml:space="preserve">
          <source>. If the document is used with the &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt; class and you need a signal when the cursor is moved with the arrow keys you can use the &lt;a href=&quot;qtextedit#cursorPositionChanged&quot;&gt;cursorPositionChanged()&lt;/a&gt; signal in &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07fc7b3dc37a67908a6199b4c0631646ffbe35a1" translate="yes" xml:space="preserve">
          <source>. If the entity has multiple matching components, the first match in the component list of the entity is returned. If there is no match, a null pointer is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01a175cbea0a8821c103180c3f7f33636487e261" translate="yes" xml:space="preserve">
          <source>. If the entity has multiple matching components, the first match in the component list of the entity is returned. If there is no match, an undefined item is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef2a4760a68b527e47bb824e9806cb112e82d8bf" translate="yes" xml:space="preserve">
          <source>. If the error state is not set, or if it is set to &lt;code&gt;nullptr&lt;/code&gt;, the state will inherit its parent's error state recursively. If no error state is set for the state itself or any of its ancestors, an error will cause the machine to stop executing and an error will be printed to the console.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82b4ead1b1c999367e608aa5e64d9139b0c543c2" translate="yes" xml:space="preserve">
          <source>. If the event loop is not running, this function does nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c921f70b276eead3a2025a4064c6b9af8719e4a" translate="yes" xml:space="preserve">
          <source>. If the field does not exist, an empty string is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b4ec90d1a52e666e69a12b5ccf55fd36c82a2cc" translate="yes" xml:space="preserve">
          <source>. If the field does not exist, nothing happens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c90f6a82c98b3eddf49a770085320119553d1809" translate="yes" xml:space="preserve">
          <source>. If the field does not exist, nothing happens. Only fields that have</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fe4cd25974c26d43b3c1e3749f27af76bc80f02" translate="yes" xml:space="preserve">
          <source>. If the field is read-only (&lt;a href=&quot;qsqlfield#isReadOnly&quot;&gt;isReadOnly&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt;), nothing happens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ff785b993b94f903753dd323c7a0536fd5471c7" translate="yes" xml:space="preserve">
          <source>. If the file does not exist or is of an unknown format, the pixmap becomes a null pixmap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="558fe36a9f5ae5980c5667f478f1729455a13129" translate="yes" xml:space="preserve">
          <source>. If the file does not exist, 0 is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fad175fa3d6b994ff6cb39cbeac3eea6c666022" translate="yes" xml:space="preserve">
          <source>. If the file does not exist, an empty &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caeec655967139cc22a976ac811260445e3e172d" translate="yes" xml:space="preserve">
          <source>. If the file does not exist, or has an unknown format, the bitmap becomes a null bitmap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16d49820894094f47aaa34fcf0ece4937c85e13d" translate="yes" xml:space="preserve">
          <source>. If the file doesn't already exist, it is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="221cd7f61c8d39c99e409aa2eb4ba64ce38bbd87" translate="yes" xml:space="preserve">
          <source>. If the file is not valid, an empty string is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0110eaa146f3727d3453f7cd522a22613fc6d210" translate="yes" xml:space="preserve">
          <source>. If the file template contains XXXXXX that will automatically be replaced with the unique part of the filename, otherwise a filename will be determined automatically based on the static portion specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bed80afaaeda9138b80f2f19defcdf9420a504f" translate="yes" xml:space="preserve">
          <source>. If the filter does not exist, a new filter is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e7dcca18df27a7576786bdeeff59caa37f31e2" translate="yes" xml:space="preserve">
          <source>. If the floating point precision is &lt;a href=&quot;qdatastream#FloatingPointPrecision-enum&quot;&gt;DoublePrecision&lt;/a&gt; and the version of the data stream is &lt;a href=&quot;qdatastream#Version-enum&quot;&gt;Qt_4_6&lt;/a&gt; or higher, all floating point numbers will be written and read with 64-bit precision. If the floating point precision is &lt;a href=&quot;qdatastream#FloatingPointPrecision-enum&quot;&gt;SinglePrecision&lt;/a&gt; and the version is &lt;a href=&quot;qdatastream#Version-enum&quot;&gt;Qt_4_6&lt;/a&gt; or higher, all floating point numbers will be written and read with 32-bit precision.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7733b8c74d69f2e718f5cb9af9368126797e779b" translate="yes" xml:space="preserve">
          <source>. If the future reports multiple results, the index will indicate which one it is. Results can be reported out-of-order. To get the result, call &lt;a href=&quot;qfuturewatcher#resultAt&quot;&gt;resultAt&lt;/a&gt;(index);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb7c9c4e50b6168bd800d419c8e20ce14fc680fc" translate="yes" xml:space="preserve">
          <source>. If the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a610f114c01dbe9b5b02319f89f53a9f7615444" translate="yes" xml:space="preserve">
          <source>. If the hash contains no such item, the function returns &lt;a href=&quot;qhash#end&quot;&gt;end&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="527dfd077e0f01b1895d626931a880930d419e09" translate="yes" xml:space="preserve">
          <source>. If the header is horizontal the x-coordinate will be used, otherwise the y-coordinate will be used to find the logical index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9244032b0ff194e18ddf6f5311bcd8d3ed0fe39" translate="yes" xml:space="preserve">
          <source>. If the image cannot be saved, an exception will be thrown. (since 5.10)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c81a4fbe5854644458e75812f43f471ee76b343" translate="yes" xml:space="preserve">
          <source>. If the image has an alpha channel, the corresponding texture will have an alpha channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a04d6a6b5e235c64a6cbab4df3d2ebd6fbc91e51" translate="yes" xml:space="preserve">
          <source>. If the index does not exist, returns 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75da305ed81f296a82bd9327170d1392125696bd" translate="yes" xml:space="preserve">
          <source>. If the index is equal to data array size, the items are added to the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40dc96c72bb19fa106fd27cedf98098ceb649c55" translate="yes" xml:space="preserve">
          <source>. If the index is equal to the data array size, the item is added to the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7879560e33c9be8f4708ac60584ec113cdcfa2aa" translate="yes" xml:space="preserve">
          <source>. If the index is not visible or explicitly hidden, the returned rectangle is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e4d82d4311dbe891e6df99b0e0273384192f515" translate="yes" xml:space="preserve">
          <source>. If the index is out of bounds, 0.0 is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58ed53f8ad45854e6e4a9549451bb3d5b80d51be" translate="yes" xml:space="preserve">
          <source>. If the index is outside the path's bounds then an invalid coordinate is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4112ec6032ba8acbfa871061c813317a3432dff6" translate="yes" xml:space="preserve">
          <source>. If the invocation is asynchronous, the return value cannot be evaluated. You can pass up to ten arguments (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="946774b5a3965d129343314757b383e627a731d4" translate="yes" xml:space="preserve">
          <source>. If the item has an internal layout, the editor will be laid out accordingly. Note that the index contains information about the model being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dca90a54647d327a3d396fb0e44c08b535e6fe8d" translate="yes" xml:space="preserve">
          <source>. If the item has keyboard input focus, this function will also call &lt;a href=&quot;qgraphicsitem#ensureVisible&quot;&gt;ensureVisible&lt;/a&gt;() to ensure that the text is visible in all viewports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d165baf7f917b597742bdb2ba4b9142d25bc1f" translate="yes" xml:space="preserve">
          <source>. If the item has no parent, an invalid &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90bbba78e077b64ecf8ce73b56d6359fac6eaa26" translate="yes" xml:space="preserve">
          <source>. If the item is cached using &lt;a href=&quot;qgraphicsitem#CacheMode-enum&quot;&gt;QGraphicsItem::DeviceCoordinateCache&lt;/a&gt; mode, caching is bypassed if the extension of the item in device coordinates is larger than</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdad88e576a0fd946d5908a03b175ff34887a897" translate="yes" xml:space="preserve">
          <source>. If the key already exist, the value will be overwritten. Returns true if the value was saved successfully, otherwise false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac1e53a46c21854672ca5d4509873986984a5a9" translate="yes" xml:space="preserve">
          <source>. If the list view's movement mode is Static or its view mode is &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;, this function will have no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f89f78c37a4f96a933ec604916a94fa076d84edb" translate="yes" xml:space="preserve">
          <source>. If the lookup succeeds, &lt;a href=&quot;qabstractsocket#hostFound&quot;&gt;hostFound&lt;/a&gt;() is emitted and &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; enters &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectingState&lt;/a&gt;. It then attempts to connect to the address or addresses returned by the lookup. Finally, if a connection is established, &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; enters &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectedState&lt;/a&gt; and emits &lt;a href=&quot;qabstractsocket#connected&quot;&gt;connected&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0e5638eaedb4e405e2b92f11010686a18d41860" translate="yes" xml:space="preserve">
          <source>. If the namespace has not been declared yet, &lt;a href=&quot;qxmlstreamwriter&quot;&gt;QXmlStreamWriter&lt;/a&gt; will generate a namespace declaration for it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc6ebe53497594bd288d944ac181df3e23e0cc55" translate="yes" xml:space="preserve">
          <source>. If the namespace has not been declared yet, &lt;a href=&quot;qxmlstreamwriter&quot;&gt;QXmlStreamWriter&lt;/a&gt; will generate a namespace declaration for it. Subsequent calls to &lt;a href=&quot;qxmlstreamwriter#writeAttribute&quot;&gt;writeAttribute&lt;/a&gt;() will add attributes to this element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd45eb5f826b49481544c3084b99208ca05ae476" translate="yes" xml:space="preserve">
          <source>. If the namespace has not been declared, &lt;a href=&quot;qxmlstreamwriter&quot;&gt;QXmlStreamWriter&lt;/a&gt; will generate a namespace declaration for it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6716bfe0279c10b4cc56ee238af4a84eb7773b8b" translate="yes" xml:space="preserve">
          <source>. If the namespace has not been declared, &lt;a href=&quot;qxmlstreamwriter&quot;&gt;QXmlStreamWriter&lt;/a&gt; will generate a namespace declaration for it. Subsequent calls to &lt;a href=&quot;qxmlstreamwriter#writeAttribute&quot;&gt;writeAttribute&lt;/a&gt;() will add attributes to this element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209fa345337e26476aee7d400cd7b24b3fbe694f" translate="yes" xml:space="preserve">
          <source>. If the new node replaces an existing node, the replaced node is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0965ae76bd8049bffae5c4b6e66b342df5e9cdb9" translate="yes" xml:space="preserve">
          <source>. If the number of pending sockets exceeds this limit new sockets will be rejected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="074dd5eb092bb9a442be321b7bcaf318e3f37bbe" translate="yes" xml:space="preserve">
          <source>. If the object does not support the MIME type or variant type given, a null variant is returned instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3258a2c8d56554d7076cba3916e7e33882354fa" translate="yes" xml:space="preserve">
          <source>. If the old label does not exist, the method returns without making any changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc7913c6fb59e9d3f7ffc089a0c2ced1b64366e4" translate="yes" xml:space="preserve">
          <source>. If the operation is successful, the &lt;a href=&quot;qlowenergyservice#characteristicRead&quot;&gt;characteristicRead&lt;/a&gt;() signal is emitted; otherwise the &lt;a href=&quot;qlowenergyservice#ServiceError-enum&quot;&gt;CharacteristicReadError&lt;/a&gt; is set. In general, a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6364f3bc15e453b53897ee16a0b00cff3e8d4fde" translate="yes" xml:space="preserve">
          <source>. If the operation is successful, the &lt;a href=&quot;qlowenergyservice#descriptorRead&quot;&gt;descriptorRead&lt;/a&gt;() signal is emitted; otherwise the &lt;a href=&quot;qlowenergyservice#ServiceError-enum&quot;&gt;DescriptorReadError&lt;/a&gt; is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1824ed6309f0900f28f45fe7074d98ac52cb20e1" translate="yes" xml:space="preserve">
          <source>. If the pairing request was not successful, this signal will not be emitted. The &lt;a href=&quot;qbluetoothlocaldevice#error&quot;&gt;error&lt;/a&gt;() signal is emitted if the pairing request failed. The signal is only ever emitted for pairing requests which have previously requested by calling &lt;a href=&quot;qbluetoothlocaldevice#requestPairing&quot;&gt;requestPairing&lt;/a&gt;() of the current object instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c2ce91062330d738ad038dbbc03d7a3a57672f9" translate="yes" xml:space="preserve">
          <source>. If the parent is not specified, the item will need to be inserted into a list widget with &lt;a href=&quot;qlistwidget#insertItem&quot;&gt;QListWidget::insertItem&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11585d7b6875fad0b00d09cc389fce714a23b1a5" translate="yes" xml:space="preserve">
          <source>. If the pen is not defined, the pen from the chart theme is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="964ab709af08544d647f38eab7db09fb83550034" translate="yes" xml:space="preserve">
          <source>. If the picture format stores a gamma value for which the picture is intended to be used, then this setting will be used to modify the picture. Setting to 0.0 will disable gamma correction (i.e. any specification in the file will be ignored).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16ff60115bdf1f4e73af00f77b9d8bed436faae9" translate="yes" xml:space="preserve">
          <source>. If the place does not have that particular attribute type, a default constructed QPlaceExtendedAttribute is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac2a04921375402f9ada570c1dfcb5998d9d6ba2" translate="yes" xml:space="preserve">
          <source>. If the property is not of QTextFormat::Integer type, 0 is returned instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e6d3bb5a41105ba9346449503c09220cff45a0" translate="yes" xml:space="preserve">
          <source>. If the property isn't of QTextFormat::Bool type, false is returned instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b08bd46d8c2a177ba7b7b36183070e7523aa2741" translate="yes" xml:space="preserve">
          <source>. If the property isn't of QTextFormat::LengthVector type, an empty length vector is returned instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0ef10c3d12401e32354690275e1a9525784a063" translate="yes" xml:space="preserve">
          <source>. If the property isn't of QVariant::Double or &lt;a href=&quot;qmetatype#Type-enum&quot;&gt;QMetaType::Float&lt;/a&gt; type, 0 is returned instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffb705f0e369166258b81c299d5266de446833db" translate="yes" xml:space="preserve">
          <source>. If the range is empty then both iterators will be equal to &lt;a href=&quot;qhash#end&quot;&gt;end&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1a8a4d2c5df4988228b571289784a27712fd6ff" translate="yes" xml:space="preserve">
          <source>. If the reader doesn't have the feature nothing happens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c241000304ab6aab43fd1b92645bef97253eac67" translate="yes" xml:space="preserve">
          <source>. If the reader doesn't have the property nothing happens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79d6809bfe65359423b79c0363054d4f63d0779a" translate="yes" xml:space="preserve">
          <source>. If the record at position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e55b4379cca43ac2962bd44e50d1175408f34ba" translate="yes" xml:space="preserve">
          <source>. If the record is set the &lt;a href=&quot;qqmlndefrecord#record-prop&quot;&gt;recordChanged&lt;/a&gt;() signal will be emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c248a918efdd8dc3f4f0c26a4588d24f193cb4b1" translate="yes" xml:space="preserve">
          <source>. If the relevant features (see &lt;a href=&quot;qgeoserviceprovider#MappingFeature-enum&quot;&gt;LocalizedMappingFeature&lt;/a&gt; etc), this will change the languages, units and other locale-specific attributes of the provider's data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ba187a99e6d24bd7be6c82b89cf2e4a4719712" translate="yes" xml:space="preserve">
          <source>. If the request is successful, the &lt;a href=&quot;qlowenergycontroller#connectionUpdated&quot;&gt;connectionUpdated&lt;/a&gt;() signal will be emitted with the actual new parameters. See the &lt;a href=&quot;qlowenergyconnectionparameters&quot;&gt;QLowEnergyConnectionParameters&lt;/a&gt; class for more information on connection parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb0be2066d31cf15ea8cc8ae4c25c6bfc3c2250" translate="yes" xml:space="preserve">
          <source>. If the request is unknown or has not yet been completed an invalid &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00e2aeb38c8380912a55b830f782a11713b556c8" translate="yes" xml:space="preserve">
          <source>. If the requested key does not exist, the specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84068fe087b3827e7c6e5bfe46cd225ab089dc1c" translate="yes" xml:space="preserve">
          <source>. If the requested name doesn't have an owner, returns a &lt;code&gt;org.freedesktop.DBus.Error.NameHasNoOwner&lt;/code&gt; error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95c4c2d29960f6dcf6f1f640986a5fae05528072" translate="yes" xml:space="preserve">
          <source>. If the role is invalid, the button is not added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f469267f8d8b72db4732353dd31f68e5da036418" translate="yes" xml:space="preserve">
          <source>. If the server is currently listening then it will return false. Return true on success otherwise false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b25e1b2a4104853824d4525159834583c6db161" translate="yes" xml:space="preserve">
          <source>. If the service parameters are successfully retrieved the socket enters &lt;a href=&quot;qbluetoothsocket#SocketState-enum&quot;&gt;ConnectingState&lt;/a&gt;, and attempts to connect to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90798414481797980d948df203b94825ed1613bf" translate="yes" xml:space="preserve">
          <source>. If the setting doesn't exist, returns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc48a8fb1fd4c64194e86d7d4c19eaeed73e4b4b" translate="yes" xml:space="preserve">
          <source>. If the slot in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99deb31ddc824e5b722bb175125f7c559046a5f7" translate="yes" xml:space="preserve">
          <source>. If the smart poster does not already contain a title record with locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="966e824ce4beaf5895a7b0d9b82f9ed6c7854c15" translate="yes" xml:space="preserve">
          <source>. If the socket is created with a service uuid device address, use service discovery to find the port number to connect to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cab76222bc75be5557599981aaea6aad89a2cf31" translate="yes" xml:space="preserve">
          <source>. If the specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69a897a620956e42a0882329c7885df0b3d78682" translate="yes" xml:space="preserve">
          <source>. If the specified point cannot be reached, the contents are scrolled to the nearest valid position. The default value for both margins is 50 pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4343dd821c56ccf2bb77c028ca6365e04a3e4ea" translate="yes" xml:space="preserve">
          <source>. If the specified rect cannot be reached, the contents are scrolled to the nearest valid position. The default value for both margins is 50 pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fef2609d504bfa1af5dd1821b30f5e375e37b93" translate="yes" xml:space="preserve">
          <source>. If the stream contains lines longer than this, then the lines will be split after</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80a014c4c2114c2d150c64e85b973a8d6396b5e3" translate="yes" xml:space="preserve">
          <source>. If the system does not already have a semaphore identified as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9abfe9cdec87831967727c2d0b87ff92b44652d0" translate="yes" xml:space="preserve">
          <source>. If the system does not already have a semaphore identified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e98c94593d4c8bf58103d90a696405d979bd73" translate="yes" xml:space="preserve">
          <source>. If the text is scrolled,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5acc3a6edf8d5db09184b316906d1e0a0404f9b6" translate="yes" xml:space="preserve">
          <source>. If the text is set to QString() then it will cause the cancel button to be hidden and deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bc04aef56ac99ad72a3be0ecd7b514f7e3cd8ba" translate="yes" xml:space="preserve">
          <source>. If the time cannot be determined return QDateTime() (an invalid date time).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc035308ac55667d3e4906e08ae52166d5531571" translate="yes" xml:space="preserve">
          <source>. If the time cannot be determined, an invalid date time is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e748f098efb8a5cbe912427456bf2edaf5044dc" translate="yes" xml:space="preserve">
          <source>. If the timer is inactive, the returned value will be -1. If the timer is overdue, the returned value will be 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="900d7e2204eb8fd4473111a7423ae8bdadb06500" translate="yes" xml:space="preserve">
          <source>. If the two geometries are the same, it doesn't do anything.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ca2eb29092928886916e6c2abff750447207952" translate="yes" xml:space="preserve">
          <source>. If the upward direction was not specified or the forward and upward vectors are collinear, a new orthonormal upward direction will be generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbd96bf91d679a7d79e04116ed9a149b3943ef17" translate="yes" xml:space="preserve">
          <source>. If the user requests a multisampled OpenGL context, by setting a &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; with samples greater than &lt;code&gt;0&lt;/code&gt; using &lt;a href=&quot;qwindow#setFormat&quot;&gt;QQuickWindow::setFormat&lt;/a&gt;(), the scene graph will prefer multisample based antialiasing (MSAA). The two techniques will affect how the rendering happens internally and have different limitations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8c77798887ad579196136d879c2ae41d7051da0" translate="yes" xml:space="preserve">
          <source>. If the value is in the past, this &lt;a href=&quot;qdeadlinetimer&quot;&gt;QDeadlineTimer&lt;/a&gt; will be marked as expired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03b5a68f995b6ebd715d82829310582a672c54cc" translate="yes" xml:space="preserve">
          <source>. If the value is not an empty byte array, it will be sent as-is as the advertising data and all other data in this object will be ignored. This can be used to send non-standard data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7217199591e9146576be0a38cb5f34a83f35b3d" translate="yes" xml:space="preserve">
          <source>. If the virtual folder matches the namespace of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f7d379907a9d41eba24d88a1a11afc41f77d78a" translate="yes" xml:space="preserve">
          <source>. If the widget has any children, then they are also painted in the appropriate positions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ca9c9ee8e0e4e9f488f1e94e3cab9329e0a7c15" translate="yes" xml:space="preserve">
          <source>. If the widget is an &lt;a href=&quot;qabstractitemview&quot;&gt;item view class&lt;/a&gt;, then the result of scrolling one</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd45e08e3e33f7042ea18645f53b81b5cdd5b27" translate="yes" xml:space="preserve">
          <source>. If there already exists a database connection called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6661324bc4d0d021ede8e6caba0f4594d6efbccf" translate="yes" xml:space="preserve">
          <source>. If there are no sensors of that type available the list will be empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59311cb8c6f9e4a525e9bed3d849d312d44fdef3" translate="yes" xml:space="preserve">
          <source>. If there is already an item with the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="294ea90283d9728355ed92f66ee4e6cda616f2e9" translate="yes" xml:space="preserve">
          <source>. If there is no Qt compressed help file with the specified namespace registered, an empty string is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c55e40b7f25018bac14b456951c8a138829486" translate="yes" xml:space="preserve">
          <source>. If there is no command available for redo, if the group is empty or if none of the stacks are active, this action will be disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="115f5a64b931f2a1ac1e6f648264840c07f24fb9" translate="yes" xml:space="preserve">
          <source>. If there is no command available for redo, this action will be disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e592959c81e2176f23323c6059d8e54157a84007" translate="yes" xml:space="preserve">
          <source>. If there is no command available for undo, if the group is empty or if none of the stacks are active, this action will be disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece8c93a1849a3bbf02a3760c7841d73fbf9855a" translate="yes" xml:space="preserve">
          <source>. If there is no command available for undo, this action will be disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc80e5b8a4af15ae54701182781d8cf1b571ad79" translate="yes" xml:space="preserve">
          <source>. If there is no data available for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="260bc603d08d6d8e55d7e39ac709d39b37087788" translate="yes" xml:space="preserve">
          <source>. If there is no default property, an invalid &lt;a href=&quot;qqmlproperty&quot;&gt;QQmlProperty&lt;/a&gt; will be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01cc32416d005a04c8e53352b3d8264a476c03f2" translate="yes" xml:space="preserve">
          <source>. If there is no equivalent format &lt;a href=&quot;qimage#Format-enum&quot;&gt;QImage::Format_Invalid&lt;/a&gt; is returned instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b556c9916932da5564b45ad73126a5558233d9e3" translate="yes" xml:space="preserve">
          <source>. If there is no equivalent format QVideoFrame::InvalidType is returned instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b2781a0138214af48d022669e0eebc875a4413c" translate="yes" xml:space="preserve">
          <source>. If there is no item for that index, for example because it has not been created yet, or because it has been panned out of the visible area and removed from the cache, null is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09a4234541b193d3254c70fdc3ae7c78b2e536d3" translate="yes" xml:space="preserve">
          <source>. If there is no item with the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa9335e4dbe61faf5340e35b8cba681472cbf69" translate="yes" xml:space="preserve">
          <source>. If there is no public identifier specified, it passes an empty string in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="559caa3c8bb042d754c31a357ba2f79b599c3ead" translate="yes" xml:space="preserve">
          <source>. If there is no selection both</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e95c47d9a4aae337802c3f5ca058728edaf8469" translate="yes" xml:space="preserve">
          <source>. If there is no series with that name, returns null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7506a0ff8974f703f220e2cb5facf53b35fdf6a7" translate="yes" xml:space="preserve">
          <source>. If there is no sibling at this position, an invalid &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bab01325c7c238a665794849aa270287afca2df" translate="yes" xml:space="preserve">
          <source>. If there is no such anchor, the function will return 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e13fc835d5575d7cd89ad8e59d2baef53a66398c" translate="yes" xml:space="preserve">
          <source>. If there is no such element, a default constructed &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; instance is returned. The implementor guarantees that if the returned node index is not null, it identifies an element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7fc1cef833c0d3c3740a4e9a19da0dd3fac429a" translate="yes" xml:space="preserve">
          <source>. If there is no such family and style combination, returns -1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9f5b791fe2507d9d9701c27e946d41939537881" translate="yes" xml:space="preserve">
          <source>. If there is no such item, the function must return 0. Items are numbered consecutively from 0. If an item is deleted, other items will be renumbered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0d1fa2b73ae328cd2f04cedf30361dced1ceebb" translate="yes" xml:space="preserve">
          <source>. If there's no key matching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c7ec671a0ffe8489d304f88a2e43c918424e4d" translate="yes" xml:space="preserve">
          <source>. If there's no matching value in the array or map, or if this &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; object is not an array or map, returns the undefined value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16e867f9659bd4472abc58a2598355ecf10b9beb" translate="yes" xml:space="preserve">
          <source>. If they do not match, the mainwindow's state is left unchanged, and this function returns &lt;code&gt;false&lt;/code&gt;; otherwise, the state is restored, and this function returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c449ce1f76b8ca1dc167ebb6195f85a354d25148" translate="yes" xml:space="preserve">
          <source>. If this dialog is shown with &lt;a href=&quot;qdialog#exec&quot;&gt;exec&lt;/a&gt;(), done() causes the local event loop to finish, and &lt;a href=&quot;qdialog#exec&quot;&gt;exec&lt;/a&gt;() to return</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad776dff60fd50a2264720f0819b1204ae9b831" translate="yes" xml:space="preserve">
          <source>. If this dialog is shown with &lt;a href=&quot;qprintdialog#exec&quot;&gt;exec&lt;/a&gt;(), done() causes the local event loop to finish, and &lt;a href=&quot;qprintdialog#exec&quot;&gt;exec&lt;/a&gt;() to return</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d038c37df594efd080adf3fddc608292cf14dbb3" translate="yes" xml:space="preserve">
          <source>. If this is a &lt;a href=&quot;qcborarray&quot;&gt;QCborArray&lt;/a&gt;, returns the element whose index is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1122fab41c8b084355ba7b0f0adad470fb8cbe8b" translate="yes" xml:space="preserve">
          <source>. If this is a data-driven test, then only the current row is skipped. Similar to &lt;code&gt;QSKIP(message)&lt;/code&gt; in C++.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e8b58e1dd6cf601452afe277a38bd07658b4119" translate="yes" xml:space="preserve">
          <source>. If this is less than &lt;a href=&quot;qstandarditem#columnCount&quot;&gt;columnCount&lt;/a&gt;(), the data in the unwanted columns is discarded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9733896fae4dcf883ac0bda150d0a03a6b5d3eef" translate="yes" xml:space="preserve">
          <source>. If this is less than &lt;a href=&quot;qstandarditem#rowCount&quot;&gt;rowCount&lt;/a&gt;(), the data in the unwanted rows is discarded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89b2db2bddbff1cec60456336e467ce2d678a95f" translate="yes" xml:space="preserve">
          <source>. If this is less than &lt;a href=&quot;qstandarditemmodel#columnCount&quot;&gt;columnCount&lt;/a&gt;(), the data in the unwanted columns is discarded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751bf1a16d79e9bb16dc0c8ddaafdd1d7c84ce17" translate="yes" xml:space="preserve">
          <source>. If this is less than &lt;a href=&quot;qstandarditemmodel#rowCount&quot;&gt;rowCount&lt;/a&gt;(), the data in the unwanted rows is discarded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e893732624bdf4cdfd8b147052733079fbea4c3" translate="yes" xml:space="preserve">
          <source>. If this is less than &lt;a href=&quot;qtablewidget#columnCount&quot;&gt;columnCount&lt;/a&gt;(), the data in the unwanted columns is discarded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e4f1e0bbd21239eda1e75455035ee30435d38ba" translate="yes" xml:space="preserve">
          <source>. If this is less than &lt;a href=&quot;qtablewidget#rowCount&quot;&gt;rowCount&lt;/a&gt;(), the data in the unwanted rows is discarded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0538236cf1072bcacd96219153c22f32a3132a04" translate="yes" xml:space="preserve">
          <source>. If this is not possible then &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; is the obvious choice for a placeholder widget since it is the lowest common denominator for all widgets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c94deaedc71f2ce8048fb384047b7a6ebfdbc785" translate="yes" xml:space="preserve">
          <source>. If this item already has a parent, it is first removed from the previous parent. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d86626adce48ae48e826525738002580356d26" translate="yes" xml:space="preserve">
          <source>. If this series is added to a graph, the graph can adjust the selection according to user interaction or if it becomes invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3a3337c59537b16fe8fee28b9f663c8ea8ce6f6" translate="yes" xml:space="preserve">
          <source>. If this series is added to a graph, the graph can adjust the selection according to user interaction or if it becomes invalid. Selecting an item on another added series will also clear the selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce5d4eaa2659964baae570937ca45ed973f8ede1" translate="yes" xml:space="preserve">
          <source>. If you also set a weekday text format, this format's foreground and background color will take precedence over the header's format. The other formatting information will still be decided by the header's format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25a4fcd5591c9f071f0fa5630d60e5c52deb87f2" translate="yes" xml:space="preserve">
          <source>. If you are using a texture target and filtering option that requires mipmaps and you have disabled automatic mipmap generation then you need to call this function or the overload to create the mipmap chain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31ebf00f428a0ca674c5427dfb934042e7e2b073" translate="yes" xml:space="preserve">
          <source>. If you do not need tristate support, you can also use &lt;a href=&quot;qabstractbutton#checked-prop&quot;&gt;QAbstractButton::setChecked&lt;/a&gt;(), which takes a boolean.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2370369a8d1466c0e99b1653fb08514227a28ff" translate="yes" xml:space="preserve">
          <source>. If you don't need that test, it is not necessary to reimplement this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f7953916e2e6f5a706f14b402c7a8639f9f4341" translate="yes" xml:space="preserve">
          <source>. If you need more than 8 parameters or if you have a variable number of parameters to be passed, use &lt;a href=&quot;qdbusabstractinterface#asyncCallWithArgumentList&quot;&gt;asyncCallWithArgumentList&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f0896f78f492c22348531da8b66682745034a9" translate="yes" xml:space="preserve">
          <source>. If you need more than 8 parameters or if you have a variable number of parameters to be passed, use &lt;a href=&quot;qdbusabstractinterface#callWithArgumentList&quot;&gt;callWithArgumentList&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9e25e40e09b3af4a2b534c0080178fa7a197a78" translate="yes" xml:space="preserve">
          <source>. If you pass an identity &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt; as a parameter, this function will return a local coordinate region.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d47bca256a93a5c064b15b07fb14eae8e3dc7682" translate="yes" xml:space="preserve">
          <source>. If you want the stream to write into a &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;, you can create a &lt;a href=&quot;qbuffer&quot;&gt;QBuffer&lt;/a&gt; device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09cb391ff003015df198e6fdc4b19487191ca0b9" translate="yes" xml:space="preserve">
          <source>. If you want to search for all matching items, use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3abc96776038d0d2dfa40a87c442e3c0631547b" translate="yes" xml:space="preserve">
          <source>. If you want to use certain features for parsing you can use this function to set up the reader appropriately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77c28b8d125c916eba0a0075d3251a59ffbc3a6c" translate="yes" xml:space="preserve">
          <source>. If you wish to have a chain of mipmaps generated then set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6124507ff14b913cc611994b56d43f734e1a7ee6" translate="yes" xml:space="preserve">
          <source>. If you wish to process this document you will encounter problems because each of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f226bf23fddcb02f95ab3d71f703467c00c0d847" translate="yes" xml:space="preserve">
          <source>. If your OpenGL implementation supports it (by exposing the &lt;code&gt;GL_KHR_debug&lt;/code&gt; extension), messages from the OpenGL server will be either logged in an internal OpenGL log, or passed in &quot;real-time&quot; to listeners as they're generated from OpenGL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11ed6bfafb9b5f4496e177812673e1b7142fd708" translate="yes" xml:space="preserve">
          <source>. Ignored for multisample framebuffer objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c41a6876ddaabe93cca94be455f453b2b180b2a" translate="yes" xml:space="preserve">
          <source>. Image formats that support this operation are expected to initialize the background to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00cc96329b7a6838cff1765fc50a0bed1ea7a0ad" translate="yes" xml:space="preserve">
          <source>. Implicitly calls &lt;a href=&quot;q3dbars#addAxis&quot;&gt;addAxis&lt;/a&gt;() to transfer the ownership of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c9720ce1718afba7b3a5e0ab2e19ea512508582" translate="yes" xml:space="preserve">
          <source>. Implicitly calls &lt;a href=&quot;q3dbars#addAxis&quot;&gt;addAxis&lt;/a&gt;() to transfer the ownership of the axis to this graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e85d4999a1b81490694b515bb39d6f4ec077a42f" translate="yes" xml:space="preserve">
          <source>. In &lt;a href=&quot;qurl#ParsingMode-enum&quot;&gt;TolerantMode&lt;/a&gt; (the default), &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; will correct certain mistakes, notably the presence of a percent character ('%') not followed by two hexadecimal digits, and it will accept any character in any position. In &lt;a href=&quot;qurl#ParsingMode-enum&quot;&gt;StrictMode&lt;/a&gt;, encoding mistakes will not be tolerated and &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; will also check that certain forbidden characters are not present in unencoded form. If an error is detected in &lt;a href=&quot;qurl#ParsingMode-enum&quot;&gt;StrictMode&lt;/a&gt;, &lt;a href=&quot;qurl#isValid&quot;&gt;isValid&lt;/a&gt;() will return false. The parsing mode &lt;a href=&quot;qurl#ParsingMode-enum&quot;&gt;DecodedMode&lt;/a&gt; is not permitted in this context and will produce a run-time warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bd8929a3751755a079350a09e65ca04ce9ebd31" translate="yes" xml:space="preserve">
          <source>. In &lt;a href=&quot;qurl#ParsingMode-enum&quot;&gt;TolerantMode&lt;/a&gt; (the default), &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; will correct certain mistakes, notably the presence of a percent character ('%') not followed by two hexadecimal digits, and it will accept any character in any position. In &lt;a href=&quot;qurl#ParsingMode-enum&quot;&gt;StrictMode&lt;/a&gt;, encoding mistakes will not be tolerated and &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; will also check that certain forbidden characters are not present in unencoded form. If an error is detected in &lt;a href=&quot;qurl#ParsingMode-enum&quot;&gt;StrictMode&lt;/a&gt;, &lt;a href=&quot;qurl#isValid&quot;&gt;isValid&lt;/a&gt;() will return false. The parsing mode &lt;a href=&quot;qurl#ParsingMode-enum&quot;&gt;DecodedMode&lt;/a&gt; is not permitted in this context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdc6ebdb95a31239ae0e7bf78ee29d7cb0e2f7c6" translate="yes" xml:space="preserve">
          <source>. In In this case, without parantheses enclosing &lt;code&gt;$i + $d&lt;/code&gt;, the return clause only returns &lt;code&gt;$i&lt;/code&gt;. The &lt;code&gt;+$d&lt;/code&gt; will have the result of the FLWOR expression as its left operand. And, since the scope of variable &lt;code&gt;$d&lt;/code&gt; ends at the end of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c06050acb40960a689a35d5a04aa30038429062" translate="yes" xml:space="preserve">
          <source>. In a future release, it is expected that this function will be changed to respect serialization options set in the stylesheet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e43b6c901a206397d4abfef66f3afb75e822a2c" translate="yes" xml:space="preserve">
          <source>. In addition the range of the attributes is returned in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f2fd51ecc20b489d4b087a6094e8cf33704313" translate="yes" xml:space="preserve">
          <source>. In addition, depending on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c03e0c595e4024b094310da5067dc7f5962896cb" translate="yes" xml:space="preserve">
          <source>. In addition, the private slots &lt;code&gt;initTestCase()&lt;/code&gt;, &lt;code&gt;cleanupTestCase()&lt;/code&gt;, &lt;code&gt;init()&lt;/code&gt; and &lt;code&gt;cleanup()&lt;/code&gt; are executed if they exist. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtest-overview.html#creating-a-test&quot;&gt;Creating a Test&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e28c6d05d188af43dfd3c0a9fedeb2a5d8fcd31" translate="yes" xml:space="preserve">
          <source>. In addition, you need to provide a container extension for them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="136f06bf3531df8f68c0f5570bf63913f2e620e0" translate="yes" xml:space="preserve">
          <source>. In areas beyond this image, pixels are set to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fb346629b471828a8c3309062e2dd4876d9add9" translate="yes" xml:space="preserve">
          <source>. In case of failure, the optional parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd9e62f0f36158701a83828207c14b7d1d13f9ca" translate="yes" xml:space="preserve">
          <source>. In case the text cannot be split until</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3847cb96374ac08bf349be40fe6dd1ae47b9dba2" translate="yes" xml:space="preserve">
          <source>. In order to unset the maximum size, use an invalid size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2dd32c806c8a1397936963e8042b768c1a00ebf" translate="yes" xml:space="preserve">
          <source>. In order to unset the minimum size, use an invalid size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e35bcb697ff25f5ed42b59aa1311898613cab0d" translate="yes" xml:space="preserve">
          <source>. In other words, the return value is the result of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="418e813d3c445b4a508897491e40caea322f7569" translate="yes" xml:space="preserve">
          <source>. In practice, it would be written as &lt;b&gt;^\d\d?$&lt;/b&gt;. The &lt;b&gt;?&lt;/b&gt; is shorthand for the quantifier &lt;b&gt;{0,1}&lt;/b&gt;, i.e. 0 or 1 occurrences. &lt;b&gt;?&lt;/b&gt; makes an expression optional. The regexp &lt;b&gt;^\d\d?$&lt;/b&gt; means</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="457b191104d5189d0d91cf87e470d99f92d1b22a" translate="yes" xml:space="preserve">
          <source>. In the following example, the &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt; object is the binding's scope object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb4b4f0fc090077829d569731a576252ad713e8" translate="yes" xml:space="preserve">
          <source>. In the unlikely event of this being problematic, set this attribute to disable all disk-based caching of shaders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d005867f0b1418abe05091ca7a55f8e9477cb0e" translate="yes" xml:space="preserve">
          <source>. In this case, &quot;visible&quot; defines items for which: isVisible() returns &lt;code&gt;true&lt;/code&gt;, effectiveOpacity() returns a value greater than 0.0 (which is fully transparent) and the parent item does not clip it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf8d70f39ef48a9e2d2da56c3225f6215226ed3" translate="yes" xml:space="preserve">
          <source>. In this case, &lt;a href=&quot;qtexttospeech#state-prop&quot;&gt;QTextToSpeech::state&lt;/a&gt;() will return &lt;a href=&quot;qtexttospeech#State-enum&quot;&gt;QTextToSpeech::BackendError&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbc6fbfe08afba584beb23d34613242906c8434e" translate="yes" xml:space="preserve">
          <source>. In this case, no copying of data is done, taking &lt;a href=&quot;containers#constant-time&quot;&gt;constant time&lt;/a&gt;. If a shared instance is modified, it will be copied (copy-on-write), taking &lt;a href=&quot;containers#linear-time&quot;&gt;linear time&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffb429a9ffd34e39a67d5b57e324fe954ec5295c" translate="yes" xml:space="preserve">
          <source>. In this case, this object will be already in its finished state and the reply's contents will be accessible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64a91a6139fc8b14541c4aad1f18d0cf0c60eebc" translate="yes" xml:space="preserve">
          <source>. In this function, the coordinates in the &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; are used to specify the dimensions of a rectangle in the grid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2fcb6a30dcf27aee459706be7d73b098dd7af8d" translate="yes" xml:space="preserve">
          <source>. In this mode, Windows forces all application main windows to open in maximized state. Applications should then avoid resizing windows or restoring geometries to non-maximized states.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dce4c5f329513f839411c526d66445276c396105" translate="yes" xml:space="preserve">
          <source>. Indentation can be applied separately with &lt;a href=&quot;qtextblockformat#setIndent&quot;&gt;setIndent&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31317e9ecb41993d36b2d1db4ed24f8aed91b329" translate="yes" xml:space="preserve">
          <source>. Input is not checked for validity; invalid characters in the input are skipped, enabling the decoding process to continue with subsequent characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63d0be59f0a06b043f018e534de7f8437eda6037" translate="yes" xml:space="preserve">
          <source>. Input methods often use this information to offer more word suggestions to the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2450037bbb1cc0639b64fe15083d2d9fcd97aee" translate="yes" xml:space="preserve">
          <source>. Instead, select one of the &lt;b&gt;Lay Out Horizontally&lt;/b&gt;, &lt;b&gt;Lay Out in a Grid&lt;/b&gt;, etc., options from the context menu.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3714450d8423983853a9743b6c1401919cb669d" translate="yes" xml:space="preserve">
          <source>. Integer alpha is specified in the range 0-255.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b502984f9366f7ba502d581964b86aa38957f396" translate="yes" xml:space="preserve">
          <source>. Integer components are specified in the range 0-255.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0066ef608f45925b03cf620a15630e0c2967367e" translate="yes" xml:space="preserve">
          <source>. Internally, &lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt; will create a &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; object and open it in &lt;a href=&quot;qiodevice#OpenModeFlag-enum&quot;&gt;QIODevice::ReadOnly&lt;/a&gt; mode, and use this when reading images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec9116af2c54eb3449c822d35f55289f8cac007a" translate="yes" xml:space="preserve">
          <source>. Internally, &lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt; will create a &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; and open it in &lt;a href=&quot;qiodevice#OpenModeFlag-enum&quot;&gt;QIODevice::WriteOnly&lt;/a&gt; mode, and use this file when writing images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6988a2f027247a496d1f119e1e9cceeb8af932d2" translate="yes" xml:space="preserve">
          <source>. Internally, &lt;a href=&quot;qtextdocumentwriter&quot;&gt;QTextDocumentWriter&lt;/a&gt; will create a &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; and open it in &lt;a href=&quot;qiodevice#OpenModeFlag-enum&quot;&gt;QIODevice::WriteOnly&lt;/a&gt; mode, and use this file when writing the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ddab5596c71fba92bc57866fa2a49a43a2e71db" translate="yes" xml:space="preserve">
          <source>. It also sorts the names using</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bc895ab9dee2418aa8b5a601779853bc80c5387" translate="yes" xml:space="preserve">
          <source>. It always returns false to indicate error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77c30fa1122849940cfaa03f0314c11c2f4242ae" translate="yes" xml:space="preserve">
          <source>. It appends the action if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792da5e742ccd0d37c60419186fe95eb4e8a7517" translate="yes" xml:space="preserve">
          <source>. It assumes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="487116052802b9c5e83d41ceeeae30f14c078eb5" translate="yes" xml:space="preserve">
          <source>. It can be accessed later using the &lt;a href=&quot;qthreadstorage#localData&quot;&gt;localData&lt;/a&gt;() functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69a3e7e251c601796129c47d273f597e57671b69" translate="yes" xml:space="preserve">
          <source>. It can be used to extend or override the implementation inside &lt;a href=&quot;qmodbusrequest#calculateDataSize&quot;&gt;QModbusRequest::calculateDataSize&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c009ff7d7c733deb3847fff2ef1d8f52bcf113b" translate="yes" xml:space="preserve">
          <source>. It can be used to extend or override the implementation inside &lt;a href=&quot;qmodbusresponse#calculateDataSize&quot;&gt;QModbusResponse::calculateDataSize&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5308cc1c3599d02c23219f3f52243027c51112c" translate="yes" xml:space="preserve">
          <source>. It enables the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a315d3acd6f7244752867d04970e7977916fbfee" translate="yes" xml:space="preserve">
          <source>. It enables the notifier, and watches for the event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffebdf6cf6879aa4445f33d4836ab22bf29a6166" translate="yes" xml:space="preserve">
          <source>. It enhances the visibility of a checkable button's state by placing color-coded indicators around the button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94d880000ec3201d6eac436b28c0596a691261f7" translate="yes" xml:space="preserve">
          <source>. It is a common technique for protecting shared resources such as data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa19cbbfcc826872f8cdc85ce6ed8712fbebf17f" translate="yes" xml:space="preserve">
          <source>. It is also called by Qt WebEngine if the user triggers the action, for example through a context menu item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f7d0d3a637c26bd3987ad5bcab3c872ed904350" translate="yes" xml:space="preserve">
          <source>. It is customary to add a &quot;.&quot; at the end of the description.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a8e3963152c158881557d00cc26656539c5924a" translate="yes" xml:space="preserve">
          <source>. It is guaranteed to be valid only until the next call that modifies data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d4f1d1138620a36f9e9851a736af58c6d680623" translate="yes" xml:space="preserve">
          <source>. It is not possible to set the SSL-state related fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de3e67c699332addd661fa351a7cccdd112f9669" translate="yes" xml:space="preserve">
          <source>. It is only possible to redirect requests that do not have payload data, such as GET requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1e284fbbfe837b79ecae1f1ce49d6f24c592722" translate="yes" xml:space="preserve">
          <source>. It is set up by specifying the minimum and maximum possible step values, and it will display the percentage of steps that have been completed when you later give it the current step value. The percentage is calculated by dividing the progress (&lt;a href=&quot;qwintaskbarprogress#value-prop&quot;&gt;value&lt;/a&gt;() - &lt;a href=&quot;qwintaskbarprogress#minimum-prop&quot;&gt;minimum&lt;/a&gt;()) divided by &lt;a href=&quot;qwintaskbarprogress#maximum-prop&quot;&gt;maximum&lt;/a&gt;() - &lt;a href=&quot;qwintaskbarprogress#minimum-prop&quot;&gt;minimum&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0984ef670907faeee3a74f408f5ba55f61cc50c4" translate="yes" xml:space="preserve">
          <source>. It is the application programmer's responsibility to ensure the array is allocated for as long as the &lt;a href=&quot;qtextboundaryfinder&quot;&gt;QTextBoundaryFinder&lt;/a&gt; object stays alive. The same applies to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f33d6e835a20bcc4ff63d9341ad26810f368c4d8" translate="yes" xml:space="preserve">
          <source>. It is the base URI of the schema, that is used internally to resolve relative URIs that appear in the schema, and for message reporting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78012350d47aeb0f9e42f0d9b595feb81fe28f03" translate="yes" xml:space="preserve">
          <source>. It is the same as &lt;b&gt;&lt;i&gt;E&lt;/i&gt;{0,}&lt;/b&gt;. The &lt;b&gt;*&lt;/b&gt; quantifier is often used in error where &lt;b&gt;+&lt;/b&gt; should be used. For example, if &lt;b&gt;\s*$&lt;/b&gt; is used in an expression to match strings that end in whitespace, it will match every string because &lt;b&gt;\s*$&lt;/b&gt; means</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9028ce5faf6b3e0385005b259132f2fa8a721778" translate="yes" xml:space="preserve">
          <source>. It is used for the &lt;code&gt;Is&lt;/code&gt; operator and for sorting nodes in document order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="816df7c9923151b63087e13ca4a40dcbfa476f00" translate="yes" xml:space="preserve">
          <source>. It is usually not necessary to call this function on received datagrams. For outgoing datagrams, this function sets the data to be sent on the network.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f9aa24a3d9246550103eb379a1801b836aed279" translate="yes" xml:space="preserve">
          <source>. It is usually unnecessary to reimplement this function in a subclass of &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77cb33c311e535bf5950ee4afc09c4f779c05475" translate="yes" xml:space="preserve">
          <source>. It must not be deleted. To remove the connection, use &lt;a href=&quot;qsqldatabase#removeDatabase&quot;&gt;removeDatabase&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="858bfae4695c234c69e433b76ac5a66dc7a37a5b" translate="yes" xml:space="preserve">
          <source>. It must return xml of the form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3298d1f9eee6f877e33e489926cbde7bca3ab9f" translate="yes" xml:space="preserve">
          <source>. It passes a string that represents the attribute type in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89236584d351a9a1bfc11b9902c4f0980f57f8cc" translate="yes" xml:space="preserve">
          <source>. It returns an invalid (see &lt;a href=&quot;qcolor#isValid&quot;&gt;QColor::isValid&lt;/a&gt;()) color if the user cancels the dialog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e63baccb5578f7ecc696b785af914f0c3d15f24" translate="yes" xml:space="preserve">
          <source>. It should be set to 0 if the user requested to see the help, and to any other value in case of an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fee53d165129d66981a4eb1e290f9d9bb964964" translate="yes" xml:space="preserve">
          <source>. It should do this without changing the state of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9da5d89107097038024efe6f00831be2c0102b1b" translate="yes" xml:space="preserve">
          <source>. It should never return itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa2517095c2e803b79088a27cc7e452b84e78e4c" translate="yes" xml:space="preserve">
          <source>. It will be sent to a peer device exactly the way it is provided here, so callers need to take care of things such as endianness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fb77148c927308e22cb4f2994f082aeaaa4e076" translate="yes" xml:space="preserve">
          <source>. It will create the variable if it does not exist. It returns 0 if the variable could not be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f67fbad560b40b5bbf3ced6f8a409c9b888fce6c" translate="yes" xml:space="preserve">
          <source>. It will use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e7377a4c07f9ba9d6f6bd4a1b72f3b35b3f5164" translate="yes" xml:space="preserve">
          <source>. It's typically emitted in response to the user right-clicking the window decorations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa84a9c0fae7c9bbda3063e936cf392c157e773" translate="yes" xml:space="preserve">
          <source>. Item transform needs to be updated by the focused window like QQuickCanvas whenever item is moved inside the scene.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54e3b225b6d26ab598c168df86b472ac5d5737f7" translate="yes" xml:space="preserve">
          <source>. Items in the new row will be children of the item represented by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e702124f40676dda4133b9016f31a599fea0e35f" translate="yes" xml:space="preserve">
          <source>. Its also possible to define very accurate alpha formats using doubles to describe each pixel by passing 8 as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="476ab2c0f42d773a50159faf690d231b6e37b2c6" translate="yes" xml:space="preserve">
          <source>. Its also possible to define very accurate grayscale formats using doubles to describe each pixel by passing 8 as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a78fd4d91491bcd00b30e2d7e88b09bec5bc6a0e" translate="yes" xml:space="preserve">
          <source>. Keys are case sensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9732c2f05c725c6b8e2f86f19f7fbd59abc1396a" translate="yes" xml:space="preserve">
          <source>. Level of detail bias affects the point at which mipmapping levels change. Increasing values for level of detail bias makes the overall images blurrier or smoother. Decreasing values make the overall images sharper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feab05c14db4f889bdd2cc02047bf28424432763" translate="yes" xml:space="preserve">
          <source>. Likewise, when the Rectangle is clicked, the console prints,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="956bb1e13ded0848d0fa314c2c0a91646ab3827f" translate="yes" xml:space="preserve">
          <source>. Load that file into the browser. The top-level QA page shows a table that contains links to several QA sub-pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f1a21e51da736b026d02dba1dbf287dd8a09b79" translate="yes" xml:space="preserve">
          <source>. Longer lists are easily created like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d0ba40bc08043b04f45596c5e0dc2c03a222354" translate="yes" xml:space="preserve">
          <source>. Margins are set independently of indentation with &lt;a href=&quot;qtextblockformat#setLeftMargin&quot;&gt;setLeftMargin&lt;/a&gt;() and &lt;a href=&quot;qtextblockformat#setTextIndent&quot;&gt;setTextIndent&lt;/a&gt;(). The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d5b92aba48fc8326e1f69f78c244280bc607314" translate="yes" xml:space="preserve">
          <source>. May change the size, but will never change the bottom-left corner of the rectangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f35461e6c5bafd90253871fbd282ade4f65b07d" translate="yes" xml:space="preserve">
          <source>. May change the size, but will never change the bottom-right corner of the rectangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a99aac79257ecebd3fd0b407d5741286afbf9f50" translate="yes" xml:space="preserve">
          <source>. May change the size, but will never change the top-left corner of the rectangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73cf844f6fbadf2b6d938bb5efc9167bf62a9334" translate="yes" xml:space="preserve">
          <source>. May change the size, but will never change the top-right corner of the rectangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5ce79cf4f4878178051cffb801d4a549dc2d9d2" translate="yes" xml:space="preserve">
          <source>. Mipmaps are generated by default. Set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba075d6ac141d34c0d0342f36279895cdaff8f55" translate="yes" xml:space="preserve">
          <source>. Modbus device implementations must use this function to update the device state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c04b3df758950fdcc270475d58c92ffb60ecc36d" translate="yes" xml:space="preserve">
          <source>. Modeless dialogs do not prevent the user from interacting with any of the other windows in the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="156313861ed4acc2e26b29d3fe5d1f3dd3916f58" translate="yes" xml:space="preserve">
          <source>. More information about using auto-connection with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a60f73ce2b485cf06bc4d37cce9e706e71f6e4b6" translate="yes" xml:space="preserve">
          <source>. Mouse tracking needs to be enabled for this feature to work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4b4cecf7750e0276c28155147c2cc544ab51d56" translate="yes" xml:space="preserve">
          <source>. Multiple filters can be passed in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b99d498afa69cd3df3109d77623b543db8e08b4" translate="yes" xml:space="preserve">
          <source>. Must be in the range 0..99.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fb3622abad38d66dbc2f4eeae60206643ba6d30" translate="yes" xml:space="preserve">
          <source>. NOTE: the integer limits for IEEE 754 double precision data is 2^53 (-9007199254740992 to +9007199254740992). If you pass in values outside this range expect a loss of precision to occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e700250a8574d653324778d2ae1028ecc87d783" translate="yes" xml:space="preserve">
          <source>. Network interfaces have a unique identifier called the &quot;interface index&quot; to distinguish it from other interfaces on the system. Often, this value is assigned progressively and interfaces being removed and then added again get a different value every time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70192fd23f426cc21f0d278e274a778639073189" translate="yes" xml:space="preserve">
          <source>. Non-void return values can be accessed via the &lt;a href=&quot;qfuture#result&quot;&gt;QFuture::result&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e86d52fb45bf1a858fe58af985d65f6a9398de5" translate="yes" xml:space="preserve">
          <source>. Normally, the URL matches that of the request that was posted, but for a variety of reasons it can be different (for example, a file path being made absolute or canonical).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="942f969f2d2324987d51e4b16e9a30637ef1345a" translate="yes" xml:space="preserve">
          <source>. Normally, when adding pages (tabs, pages, compartments) to these containers in your own code, you need to supply existing widgets, either as placeholders or containing child widgets. In</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac87e0e2ab0c70a6e761f7ae0f4cab58de6727df" translate="yes" xml:space="preserve">
          <source>. Normally, when resources are built as part of the application, the resources are loaded automatically at startup. The Q_INIT_RESOURCE() macro is necessary on some platforms for resources stored in a static library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ff71909047e7c47a905d950f38da466694c427" translate="yes" xml:space="preserve">
          <source>. Not all subclasses support alignment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f343476bef359dda8b4b62707a5e522663387a" translate="yes" xml:space="preserve">
          <source>. Note also that the URL we choose as our namespace URI need not refer to an actual location, and doesn't refer to one in this case. But click on &lt;a href=&quot;http://www.w3.org/XML/1998/namespace&quot;&gt;http://www.w3.org/XML/1998/namespace&lt;/a&gt;, for example, which is the namespace URI for elements and attributes prefixed with &lt;code&gt;xml:&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f34fe05979b590c729ff0d227a1fb77ead9ef76" translate="yes" xml:space="preserve">
          <source>. Note that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e031ae2c6cb2bc5178237a05bc709ac0eb239ea" translate="yes" xml:space="preserve">
          <source>. Note that &lt;a href=&quot;qlistwidgetitem#type&quot;&gt;type&lt;/a&gt;() and &lt;a href=&quot;qlistwidgetitem#listWidget&quot;&gt;listWidget&lt;/a&gt;() are not copied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a000b520a111aef18ebaf20f281024127825370" translate="yes" xml:space="preserve">
          <source>. Note that &lt;a href=&quot;qstandarditem#model&quot;&gt;model&lt;/a&gt;() is not copied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b330c1827c266151258159fe110aa0a7409b70b0" translate="yes" xml:space="preserve">
          <source>. Note that &lt;a href=&quot;qtablewidgetitem#type&quot;&gt;type&lt;/a&gt;() and &lt;a href=&quot;qtablewidgetitem#tableWidget&quot;&gt;tableWidget&lt;/a&gt;() are not copied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25c3367e0c6b91f586cd538b98a0b468c0773c36" translate="yes" xml:space="preserve">
          <source>. Note that &lt;a href=&quot;qtreewidgetitem#type&quot;&gt;type&lt;/a&gt;() and &lt;a href=&quot;qtreewidgetitem#treeWidget&quot;&gt;treeWidget&lt;/a&gt;() are not copied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e4fc7f6c1b5b9d67b26f7c2504cde43fb8c0a88" translate="yes" xml:space="preserve">
          <source>. Note that &lt;code&gt;r.intersected(s)&lt;/code&gt; is equivalent to &lt;code&gt;r &amp;amp; s&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff15f79c62074716601e1fadbc55cf007b7cf692" translate="yes" xml:space="preserve">
          <source>. Note that result cursor position includes possible preedit area text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ce3014ccbd396ae5bbd2b4d98078083825f9058" translate="yes" xml:space="preserve">
          <source>. Note that setting a cookie name to an empty &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; will make this cookie invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b4b99716df73d6a4faf46a6c34dd33dc388d4ed" translate="yes" xml:space="preserve">
          <source>. Note that the &lt;code&gt;m13&lt;/code&gt;, &lt;code&gt;m23&lt;/code&gt;, and &lt;code&gt;m33&lt;/code&gt; elements are set to 0, 0, and 1 respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50ad215f6e5f983dcbf049e82aa695885ae0db25" translate="yes" xml:space="preserve">
          <source>. Note that the data is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baac3456a7440dc5446c01c693e28b16b8aa4d92" translate="yes" xml:space="preserve">
          <source>. Note that the document node is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b2bed620dad76bf58ce6518c9ea56eb4f209099" translate="yes" xml:space="preserve">
          <source>. Note that the index contains information about the model being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc668814880fc3928ee7fb9a8a17ae7365bcd527" translate="yes" xml:space="preserve">
          <source>. Note that the index contains information about the model being used. The editor's parent widget is specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="986e2fe1f5983b74c62db237c4ae5ca80764f226" translate="yes" xml:space="preserve">
          <source>. Note that the query must be active and must not be isForwardOnly().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d74077f642df0119477b132908b2e72432fe72db" translate="yes" xml:space="preserve">
          <source>. Note that these resources must reside within the current resource file's directory or one of its subdirectories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b3d44168696ac75eeea9260c317c45d18d5734c" translate="yes" xml:space="preserve">
          <source>. Note that this function replaces the previous values. &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt; provides the &lt;a href=&quot;qtransform#translate&quot;&gt;translate&lt;/a&gt;(), &lt;a href=&quot;qtransform#rotate&quot;&gt;rotate&lt;/a&gt;(), &lt;a href=&quot;qtransform#scale&quot;&gt;scale&lt;/a&gt;() and &lt;a href=&quot;qtransform#shear&quot;&gt;shear&lt;/a&gt;() convenience functions to manipulate the various matrix elements based on the currently defined coordinate system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58dcecf50e6df5076a2e31dfe42a6728b18b58cb" translate="yes" xml:space="preserve">
          <source>. Note that this function will not return in this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54eb8e907286392d5991f6855405f9ded02c572a" translate="yes" xml:space="preserve">
          <source>. Note that this must be called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a53c54f504d711b44000a6da11e8202d7da4c7d" translate="yes" xml:space="preserve">
          <source>. Note that you must cast the &lt;code&gt;this&lt;/code&gt; pointer to the appropriate superclass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8845d12ae25fac3d91078907b901201843ed25df" translate="yes" xml:space="preserve">
          <source>. On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, the window title is ignored (as required by the &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; Guidelines).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a4c23995d0e62ff5c20e46e84d84745cfcdff27" translate="yes" xml:space="preserve">
          <source>. On application startup, the hint is set to &lt;code&gt;RestartIfRunning&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f6560c0a0930122b7dde3f054c2cc7966214694" translate="yes" xml:space="preserve">
          <source>. One compressed help file, uniquely identified by its namespace can only be registered once. True is returned if the registration was successful, otherwise false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d67e61924d05242bb048cfd8e47911559f728e72" translate="yes" xml:space="preserve">
          <source>. Only checkable buttons can be checked and unchecked (see below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a46635eee53c51f8b682ab1f3486f0162bd64d03" translate="yes" xml:space="preserve">
          <source>. Only makes sense if profiles are supported by this version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b7c7964400d01b182254fe201648ed5ded5bcf7" translate="yes" xml:space="preserve">
          <source>. Only one render capture result is produced per requestCapture call even if the frame graph has multiple leaf nodes. The function returns a &lt;a href=&quot;qt3drender-qrendercapturereply&quot;&gt;QRenderCaptureReply&lt;/a&gt; object, which receives the captured image when it is done. The user is responsible for deallocating the returned object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd944f40e8acb66adfb68abf6793a8d3b2b65a11" translate="yes" xml:space="preserve">
          <source>. Only one render capture result is produced per requestCapture call even if the frame graph has multiple leaf nodes. The function returns a QRenderCaptureReply object, which receives the captured image when it is done. The user is responsible for deallocating the returned object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2039d4f6a922390ee473a368c431fb4c1b93f414" translate="yes" xml:space="preserve">
          <source>. Only services matching the UUIDs in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9822e7a8d8a33d167d55872a88140c9809fdf4bb" translate="yes" xml:space="preserve">
          <source>. Only the data and flags of the item are read, not the child items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="912ef56150f49fad688aa11f1412ed2f7f6b444f" translate="yes" xml:space="preserve">
          <source>. Only the data and flags of the item are written, not the child items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7050147844bcb468d399ac5e35fa28b6bb63a4b" translate="yes" xml:space="preserve">
          <source>. Only those files matching the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e8e5fd0e9b62cbd3f11de530276b13dc5a10b83" translate="yes" xml:space="preserve">
          <source>. Only two formats are supported currently: &lt;a href=&quot;qimage#Format-enum&quot;&gt;QImage::Format_Indexed8&lt;/a&gt; and &lt;a href=&quot;qimage#Format-enum&quot;&gt;QImage::Format_ARGB32&lt;/a&gt;. If an indexed format is specified, &lt;a href=&quot;qcustom3dvolume#colorTable-prop&quot;&gt;colorTable&lt;/a&gt; must also be set. Defaults to &lt;a href=&quot;qimage#Format-enum&quot;&gt;QImage::Format_ARGB32&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e577a080c9270209fae34266f6db0e20f3b420e" translate="yes" xml:space="preserve">
          <source>. Only valid characteristics are considered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24b33033aaa7603adb6aeb5b958b59880674e4d9" translate="yes" xml:space="preserve">
          <source>. Only valid descriptors are considered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb4aeb3f3e086334c464f3e245ecb0e6fafbc14" translate="yes" xml:space="preserve">
          <source>. Optionally, a keyboard</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="759b75bd6c5c8b79e424ff1fd526c2d6a94ff050" translate="yes" xml:space="preserve">
          <source>. Or a &lt;a href=&quot;qabstracturiresolver&quot;&gt;QAbstractUriResolver&lt;/a&gt; subclass could be written for a web browser to let the web browser protect the user's private files by mapping incoming requests for them to null URIs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="688dea4867492eb6f280f60a3da9dca6e5570e89" translate="yes" xml:space="preserve">
          <source>. Other constraints may increase the limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41c1a6a04f5fa9d86808f6b8c2eae13102035b8f" translate="yes" xml:space="preserve">
          <source>. Otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2918eee242addbefd7910df209cc7d8366cfd94" translate="yes" xml:space="preserve">
          <source>. Otherwise returns false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a9d1be9df4d51db2d92bbd89616a9c9541834aa" translate="yes" xml:space="preserve">
          <source>. Otherwise returns true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="436e91a5a2e2b7fd81c29f744fc291a09b01ba36" translate="yes" xml:space="preserve">
          <source>. Otherwise the value specified with &lt;a href=&quot;qopenglshaderprogram#setAttributeValue&quot;&gt;setAttributeValue&lt;/a&gt;() for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de6058a7a0776096100d49104c34dea63f4bad65" translate="yes" xml:space="preserve">
          <source>. Otherwise this function does nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7127467e8cd6dc9d6039bfcf3f4db050569ac81" translate="yes" xml:space="preserve">
          <source>. Otherwise, an empty string is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="540e59ea3c0fa176cdf6c77615b3838fab9dcf84" translate="yes" xml:space="preserve">
          <source>. Otherwise, returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57d7279c2d0d4465d0727e77c38b8beb1e2a36a" translate="yes" xml:space="preserve">
          <source>. Otherwise, returns the original string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf2997df89845f95396757edfc17d55e41b334f7" translate="yes" xml:space="preserve">
          <source>. Override it to implement the lookup of data model properties via the &lt;code&gt;location&lt;/code&gt; attribute of various elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b53b4f27727efdcb97e321cb747f69e858fd4c5" translate="yes" xml:space="preserve">
          <source>. Ownership of the data is transferred to the &lt;a href=&quot;qdrag&quot;&gt;QDrag&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fc79416fea24fa6e15f1e1f64ed270b148f46f6" translate="yes" xml:space="preserve">
          <source>. Ownership of the data is transferred to the clipboard. If you want to remove the data either call &lt;a href=&quot;qclipboard#clear&quot;&gt;clear&lt;/a&gt;() or call setMimeData() again with new data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="915a584c6d5b0bbc0f0ad8ccb46c64d91ed00562" translate="yes" xml:space="preserve">
          <source>. Ownership of the style object is transferred to &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;, so &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; will delete the style object on application exit or when a new style is set and the old style is still the parent of the application object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad528d40fd4a98d21f64ab0c4be73cba6151ace" translate="yes" xml:space="preserve">
          <source>. Parallel animations will play a group of animations at the same time while sequential animations play a group of animations in order: one after the other. Grouping animations in &lt;a href=&quot;qml-qtquick-sequentialanimation&quot;&gt;SequentialAnimation&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-parallelanimation&quot;&gt;ParallelAnimation&lt;/a&gt; will play the animations in sequence or in parallel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01cbea9b9d8815f4911492207622eb490a3117ab" translate="yes" xml:space="preserve">
          <source>. Parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f36994ebe85ab9e5c36cdbdf1244ed6b1555a9b1" translate="yes" xml:space="preserve">
          <source>. Passing the format returned from &lt;a href=&quot;qwindow#requestedFormat&quot;&gt;QWindow::requestedFormat&lt;/a&gt;() to &lt;a href=&quot;qoffscreensurface#setFormat&quot;&gt;setFormat&lt;/a&gt;() may result in an incompatible offscreen surface since the underlying windowing system interface may offer a different set of configurations for window and pbuffer surfaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f89cb3f6f52e614009c47e6093b1cd3f35bbb0" translate="yes" xml:space="preserve">
          <source>. Passing the null or invalid &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; value allows backend to choose the suitable parameter value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4d5c0f44f185a120d9dffe3e7b6fac2850e48c1" translate="yes" xml:space="preserve">
          <source>. Position, direction and velocity are all set to &lt;code&gt;&quot;0,0,0&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a446c7d0aa9029d45dfe9c90bc1f3e2befd1008" translate="yes" xml:space="preserve">
          <source>. Possible actions are &lt;a href=&quot;qabstractslider#SliderAction-enum&quot;&gt;SliderSingleStepAdd&lt;/a&gt;, &lt;a href=&quot;qabstractslider#SliderAction-enum&quot;&gt;SliderSingleStepSub&lt;/a&gt;, &lt;a href=&quot;qabstractslider#SliderAction-enum&quot;&gt;SliderPageStepAdd&lt;/a&gt;, &lt;a href=&quot;qabstractslider#SliderAction-enum&quot;&gt;SliderPageStepSub&lt;/a&gt;, &lt;a href=&quot;qabstractslider#SliderAction-enum&quot;&gt;SliderToMinimum&lt;/a&gt;, &lt;a href=&quot;qabstractslider#SliderAction-enum&quot;&gt;SliderToMaximum&lt;/a&gt;, and &lt;a href=&quot;qabstractslider#SliderAction-enum&quot;&gt;SliderMove&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe3aebb4bd50fc132ce66c67e05db5aee853dc56" translate="yes" xml:space="preserve">
          <source>. Possible values are in the range of &lt;code&gt;0x00&lt;/code&gt; to 0xff. The default value preset is &lt;code&gt;0x0a&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6ee8c2177e27420fcfdea600103c288f90c7342" translate="yes" xml:space="preserve">
          <source>. Properties not appearing in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d397b51ba1186df0544b600373ea9ff3b8dc8147" translate="yes" xml:space="preserve">
          <source>. Properties not available in the main type will be searched for in the extension object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="761ec47a83a30f5a010605ae464ec0032604ba8d" translate="yes" xml:space="preserve">
          <source>. Proxy doesn't take ownership of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1abe99855e1d034ae18c9f38546220332d8f7c2" translate="yes" xml:space="preserve">
          <source>. Qt Creator builds the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="292078fe4b70038f38120badf67f87b26c31ae93" translate="yes" xml:space="preserve">
          <source>. Qt WebEngine will read the client certificates installed in the system settings in &lt;a href=&quot;qtwebengine-platform-notes#macos&quot;&gt;macOS&lt;/a&gt; and Windows, and on Linux those installed into the NSS database. Certificates can be installed into the NSS database using the &lt;code&gt;pk12util&lt;/code&gt; tool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad9a3a9cbcd72d9dff9dec2eeaf9d97501b17ce2" translate="yes" xml:space="preserve">
          <source>. Qt provides two methods for filling paths:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1be58bf92813e05f2ca815d75c24ee0234b512d5" translate="yes" xml:space="preserve">
          <source>. Read and write buffers are cleared, discarding any pending data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8c496b18a5d0971688f7fd9e88d7ce33b8f8f61" translate="yes" xml:space="preserve">
          <source>. RegistryHost Nodes have the same functionality as &lt;a href=&quot;qremoteobjecthost&quot;&gt;QRemoteObjectHost&lt;/a&gt; Nodes, except rather than being able to connect to a &lt;a href=&quot;qremoteobjectregistry&quot;&gt;QRemoteObjectRegistry&lt;/a&gt;, the provided Host &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3b71fd492ffa41cd378bcf8697c4b269776d0f6" translate="yes" xml:space="preserve">
          <source>. Reimplement this function if you need extra roles or special behavior for certain roles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fbabd2196a2704164d1abb5bbda10d7de8662ad" translate="yes" xml:space="preserve">
          <source>. Remember that a QDoc comment begins with an exclamation mark: &lt;b&gt;/*!&lt;/b&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09b50644961acc1144ba7808e139dfabde41b1ce" translate="yes" xml:space="preserve">
          <source>. Removing an already set property can be achieved by passing an invalid &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e76d6da33fb7762b10393b0ef08fe852d298775" translate="yes" xml:space="preserve">
          <source>. Return true if the function was successful; otherwise return false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48a9638353fe890e2d12e4aa60846055fa0e6b52" translate="yes" xml:space="preserve">
          <source>. Return true if the initialization was successful; otherwise return false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cc1941126d6949fa81dd6566f8a76a6da6e12c3" translate="yes" xml:space="preserve">
          <source>. Returns (0, 0) if the index is not valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc4e12d51fde73b864c3328286d0f92c6fb4e7a7" translate="yes" xml:space="preserve">
          <source>. Returns -1 if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb5431441281a7b4d9df2c849025b1c8aa06d2cb" translate="yes" xml:space="preserve">
          <source>. Returns -1 if no &lt;a href=&quot;qml-qt3d-animation-animationgroup&quot;&gt;AnimationGroup&lt;/a&gt; with the given name is found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88f116e661b0ee9efbe500f94238488750378a14" translate="yes" xml:space="preserve">
          <source>. Returns -1 if no item matched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cae7349ac9523d2366f4b0ecbfac0b1a4427223c" translate="yes" xml:space="preserve">
          <source>. Returns -1 if no valid cursor position was found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="094a4ee993a72ef801a3d4bbe17f283721c20238" translate="yes" xml:space="preserve">
          <source>. Returns -1 if the block was not present in the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff521c0a9b3179bf77bf632c2ac9041510741ece" translate="yes" xml:space="preserve">
          <source>. Returns &lt;a href=&quot;qchar#Decomposition-enum&quot;&gt;QChar::NoDecomposition&lt;/a&gt; if no decomposition exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ab392f2303d6bce6c1065aa9944d01355f0e3ad" translate="yes" xml:space="preserve">
          <source>. Returns &lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfa06f9d00c6ea98eb66d9c3ec5fde0d0f432abc" translate="yes" xml:space="preserve">
          <source>. Returns &lt;a href=&quot;qkeysequence#SequenceMatch-enum&quot;&gt;ExactMatch&lt;/a&gt; if successful, &lt;a href=&quot;qkeysequence#SequenceMatch-enum&quot;&gt;PartialMatch&lt;/a&gt; if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfbc69d54a86d9eeff4415f99dbfbbd659ab009b" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;false&lt;/code&gt; if the current node is a client node or if the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b06caa9b548684bf87134a062285eb5f361cfa50" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;nullptr&lt;/code&gt; if there is no action at</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="541e936b1f31c0fdeb39d7abf6224e50e8e95e95" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; and sets the address if the address was successfully parsed; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57db9eedef5f7101b2025ba7708d190dbb666e94" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; and sets the query state to &lt;a href=&quot;qsqlquery#isActive&quot;&gt;active&lt;/a&gt; if the query was successful; otherwise returns &lt;code&gt;false&lt;/code&gt;. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab77a9ece0257629d735cd12d7ce6e6d8ce114ff" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e12e7aab42263c81e9e1313d2ad7da9d300f5067" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; if &lt;a href=&quot;qlocalsocket#socketDescriptor&quot;&gt;socketDescriptor&lt;/a&gt; is accepted as a valid socket descriptor; otherwise returns &lt;code&gt;false&lt;/code&gt;. The socket is opened in the mode specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b20a85a9732e6f8483e7b703417c247310e6ecfc" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; if all of them match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad9e29db8ab00e44d165702614ce78e90b5dbd14" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; if all timers were successful removed; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79b1e1d3074c9fc082efff2bf5fca7fdc37228b4" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; if any CA certificates are added to the default database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62ac481818c927f00c3acfe9e01549f1b1c0c31a" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; if one or more certificates are added to the socket's CA certificate database; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="647c058c8e6ad7ff46674dafe4c9b1a3186722a4" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; if successful; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ed02ebba5892c77f8f2c5a8433fbd6172038edf" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; if successful; otherwise returns &lt;code&gt;false&lt;/code&gt;. The latter may happen if the surface is not exposed, or the graphics hardware is not available due to e.g. the application being suspended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4806bafd9ece41988720daaa19034e187e3d039a" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; if successful; otherwise returns &lt;code&gt;false&lt;/code&gt;. This function should be called from any reimplementations of open() or other functions that open the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4ab5f65a66acac0f3a16adf217308f2ccee1d5f" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; if the connection is successfully broken; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a17f36dfe829d2e3f3a1b5a90cd2f262e953984" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; if the contents were written; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="098a181375a3672c3acc233fde6925a99456cb73" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; if the data and action can be handled by the model; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b41be5177be75b81199443cedcadb71a46bc1dd" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; if the date is valid; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2037fafa577cdbb4050651210b055aa6a09ba281" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; if the directory was successfully changed; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a2a5df8d43bd285c973d83858696e0191c9d20f" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; if the frameMarker was found, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9add8ac943e0e7a9eafed60bf1e044964cf76b65" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; if the image is successfully read; otherwise returns false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fd8d2f3c890dadb0657e38ef601e8324b502c76" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; if the image was successfully loaded; otherwise invalidates the image and returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f8cf66369e661ebf771d1d24e8f970ff9ae6351" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; if the key event was accepted by the input engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e27d8c28eb2af2f8fd9c75765a10f724433196f" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; if the member could be invoked. Returns &lt;code&gt;false&lt;/code&gt; if there is no such member or the parameters did not match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3360fb232afa23f9849f94d97819f2f3616dc09" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; if the object is loaded successfully; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dddbc5d71ebbf06fd7d55d2752ac43e49008e8c1" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; if the object is saved successfully; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fdc7adfa5124a245d55f37a521a9718167e8e04" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; if the object was found in the cache; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b9bf5c586b23996f934b67000fd5c071b7f048d" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; if the painter is ready to use; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bdc1d204a2b5d53f270158480c655f29570c0cc" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; if the pixmap was loaded successfully; otherwise invalidates the pixmap and returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd33f0af6d3f80205a01f6383d03de9fd58f25d" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; if the resize succeeds; false otherwise. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="069f666996cfdcc66fd07c98d116c50e7dc001ec" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; if the socket is set successfully; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4895a37389e9eb44b8c74f2a51973d17b5106543" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; if the transformation is constructed or false if such a transformation does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aece8a8803b1ffa50755215d772aed4cd62f2be9" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; if the transformation is possible; otherwise returns false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed08cc07ddd0b93f308e0060b1b0daf5cc25b829" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; if the translation is successfully loaded; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b06d4cee3183a46a65e029a4c63eebc9810e8c" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; if the user confirms the message; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f44031d21349a6967bd4b5ea6e825788942b2040" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; if they are not identical.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6014b2ca56d4cd3a26e2b703ce1a5d5c2a7f42" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; if unloading of the font succeeded; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe15510b9a95edbacaf5e2c17ebb7da943db41a" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; in case of success.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75bd8515ad7e405156db084442a3767100e11c65" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; on success or &lt;code&gt;false&lt;/code&gt; if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="446908b52355234bd5db8413f5515d573c970a2d" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; on success, or &lt;code&gt;false&lt;/code&gt; if the property can't be set because the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6b8da37f00eb4520347c85c3fd86c55b771ad2b" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; on success, otherwise false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="317f70dc0cb411869259375553d1d83c5b8166ee" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; on success.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66f9e2634688b3dd82f0161c3c8e252dc307133b" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; on success; false if reading from the buffer is not supported. Buffer reading is not supported under OpenGL/ES.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="423947d2f76b9a28966fdf892ca4146b18b453f5" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; on success; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb2461d194c7bbfe485ee19a3508e777cd0e0c6c" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt; on success; otherwise returns &lt;code&gt;false&lt;/code&gt;. Error information can be retrieved using the &lt;a href=&quot;qsqldatabase#lastError&quot;&gt;lastError&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="765389aa231019e18a48d22664a4ada49a7cab78" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt;, if the comparison succeeded, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b294f462bfbf176ae0615ccf5185b2a5aa9b9d2b" translate="yes" xml:space="preserve">
          <source>. Returns &lt;code&gt;true&lt;/code&gt;, if the conversion succeeded, otherwise false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b64a2e16aa75be47cbf64d243fa80b09c0f6479b" translate="yes" xml:space="preserve">
          <source>. Returns a &lt;a href=&quot;qdbusconnection&quot;&gt;QDBusConnection&lt;/a&gt; object associated with that connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b155f77daf475d020803d1f1c7e7d60943aa6c0e" translate="yes" xml:space="preserve">
          <source>. Returns a boolean indicating if the operation was successful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bde3f816e5993f064695374e8ad57aaea73812ec" translate="yes" xml:space="preserve">
          <source>. Returns a boolean that indicates whether the &lt;a href=&quot;qt3drender-qabstracttextureimage&quot;&gt;QAbstractTextureImage&lt;/a&gt; needs to reload the &lt;a href=&quot;qt3drender-qtextureimagedata&quot;&gt;QTextureImageData&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d44d9c86b80aee7007c6d00c62fce43497570820" translate="yes" xml:space="preserve">
          <source>. Returns a negative value if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cb640e0469ed00a8472d2525895456c15b6d411" translate="yes" xml:space="preserve">
          <source>. Returns a negative value if the key is less than</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ac58a547e3eeb8ea5986bfcffd1dcca7624a79a" translate="yes" xml:space="preserve">
          <source>. Returns a new valid &lt;a href=&quot;qmodbusreply&quot;&gt;QModbusReply&lt;/a&gt; object if no error occurred, otherwise nullptr. Modbus network may have multiple servers, each server has unique</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b778d2187b6cb461d1212a77719e9ce35540b766" translate="yes" xml:space="preserve">
          <source>. Returns a reference to the &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;, so several operators can be nested. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffdc613f8804f53b703880428bf07f0b92291b73" translate="yes" xml:space="preserve">
          <source>. Returns a reference to the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="596675161841ab8586feda1ec217dab830f7fb07" translate="yes" xml:space="preserve">
          <source>. Returns a reference to the string list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e2b734db385c2066f377fe29c2cb4b0c98b273d" translate="yes" xml:space="preserve">
          <source>. Returns a reference to the string. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="672f5526f4da22bbd964b42517fbc88feda65034" translate="yes" xml:space="preserve">
          <source>. Returns an empty &lt;a href=&quot;qsqlindex&quot;&gt;QSqlIndex&lt;/a&gt; if the table doesn't have a primary index. The default implementation returns an empty index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bab5c3c258c407dc0af850a958ce73431c287b77" translate="yes" xml:space="preserve">
          <source>. Returns an empty rectangle if there is no intersection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df67e1d98dce830a7e76e0db81fa71bee122cfcd" translate="yes" xml:space="preserve">
          <source>. Returns an integer less than, equal to, or greater than zero depending on whether</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="959d1829380185275ccc486bb97b27cdfa7c2548" translate="yes" xml:space="preserve">
          <source>. Returns an iterator pointing at the first of the inserted items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2e1b738c60df4717cce72234a8ce9630b67e471" translate="yes" xml:space="preserve">
          <source>. Returns an iterator pointing at the inserted item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46246c78afb02d0fd3433fa388ec730679099692" translate="yes" xml:space="preserve">
          <source>. Returns an iterator pointing at the inserted item. Note that the iterator passed to the function will be invalid after the call; the returned iterator should be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06833a8f97cfb80199e9c047c07c7d8e9d81f6b8" translate="yes" xml:space="preserve">
          <source>. Returns an iterator to the same item that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bc077cbc046ca0732de0c52c4f25495bd988d20" translate="yes" xml:space="preserve">
          <source>. Returns null if no suitable backend exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd87095403189dbdacfb57e441bb0f5df8121040" translate="yes" xml:space="preserve">
          <source>. Returns null if the index is not valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10a6ca4153ca22bcc200fc3e717edd0861d64d4d" translate="yes" xml:space="preserve">
          <source>. Returns null if the label is not found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f10394a234384933316613f34d53474960674298" translate="yes" xml:space="preserve">
          <source>. Returns null when the resource in question is not supported or not available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70c520af9ba47b47a715e42d62418903aa3e6e8e" translate="yes" xml:space="preserve">
          <source>. Returns the &lt;code&gt;CGImageRef&lt;/code&gt; handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35d55b0178353a8af8955d05942be3c900d3991b" translate="yes" xml:space="preserve">
          <source>. Returns the &lt;code&gt;NSImage&lt;/code&gt; handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="242c991ca0a482c374f0d533381d36c22da1cec1" translate="yes" xml:space="preserve">
          <source>. Returns the DBus message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e4a39eaf9d5c2f7d2e7c90525008c5a72ce11bd" translate="yes" xml:space="preserve">
          <source>. Returns the created list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e64873d0bf428f2e02d50295b3fde68b75c1fb2" translate="yes" xml:space="preserve">
          <source>. Returns the index of the property if it was added successfully; otherwise returns -1 to indicate failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b236be767fd455a0d87f0ce0b651724d2f1cb0d9" translate="yes" xml:space="preserve">
          <source>. Returns the new item's index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e33ff937f2a57269b26982ab93b6c091c5a93c6" translate="yes" xml:space="preserve">
          <source>. Returns the new tab's index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb1bdde3d2066045b9d39415e206ab7575c57081" translate="yes" xml:space="preserve">
          <source>. Returns the number of bytes sent on success; otherwise returns -1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d2eb1f4e0905634263080681c65293dcccb77d5" translate="yes" xml:space="preserve">
          <source>. Returns the number of bytes written, or -1 in case of error. The handshake must be completed before writing encrypted data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de01517d01d203c22a2175c52edbb7bee95b11ef" translate="yes" xml:space="preserve">
          <source>. Returns the resulting &lt;a href=&quot;qmatrix4x4&quot;&gt;QMatrix4x4&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0323a1a2495f294ffde424308ca852366e03dbab" translate="yes" xml:space="preserve">
          <source>. Returns the resulting &lt;a href=&quot;qquaternion&quot;&gt;QQuaternion&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acb7b2ffb63fec48357a2822d9237b6bdb9dccbb" translate="yes" xml:space="preserve">
          <source>. Returns the resulting quaternion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="162bf84cc464219e4aad456fd51d44f34cd9f01f" translate="yes" xml:space="preserve">
          <source>. Returns the value if it was able to read it; otherwise returns an invalid variant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bf9d3ca704dee43eca279ec41004836cbccb95c" translate="yes" xml:space="preserve">
          <source>. Returns the value of the baseclass &lt;a href=&quot;qwidget#event&quot;&gt;QWidget::event&lt;/a&gt;(&lt;a href=&quot;qevent&quot;&gt;QEvent&lt;/a&gt; *event) function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65466628270e3a3ed47407d79b926c55a8a06a45" translate="yes" xml:space="preserve">
          <source>. Returns true if attached successfully, otherwise returns false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8686c47efe38501925b35f122f981348585d71f" translate="yes" xml:space="preserve">
          <source>. Returns true if it was inserted or changed, false if it was already known.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e01fa28f0957211051b272196a31b2adac3061c0" translate="yes" xml:space="preserve">
          <source>. Returns true if successful; otherwise returns false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ebd6e23540f05a29afda47f4893c5347f619d38" translate="yes" xml:space="preserve">
          <source>. Returns true if the contents were read; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1caaa9cc306ac20bac188ea5947a55f8d8bdeac6" translate="yes" xml:space="preserve">
          <source>. Returns true if the image was successfully saved; otherwise returns false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b120358073116db360bb9f5593e2b1ebe7ecfa79" translate="yes" xml:space="preserve">
          <source>. Returns true if the margin was successfully set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="723063e90243349045ef2e85a8bc307c4eeb2b52" translate="yes" xml:space="preserve">
          <source>. Returns true if the operation succeeds; otherwise returns false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a518f11c43e85f0e92a427d35dbc652d4fa0a2c9" translate="yes" xml:space="preserve">
          <source>. Returns true if the pixmap was successfully loaded; otherwise invalidates the pixmap and returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5915a81325aa56e7ece587ae91c895eb449f4cf9" translate="yes" xml:space="preserve">
          <source>. Returns true if the property was deleted, otherwise returns false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f103ec675dfa28146f15a2cd053bc443cda521ee" translate="yes" xml:space="preserve">
          <source>. Returns true if the response is handled; otherwise returns false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8be8478cefc891f4f9a39a09bac3b1a61c6f14a4" translate="yes" xml:space="preserve">
          <source>. Returns true if the write succeeded; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cea953b1c398e3587dd27ac2d30097bd9e5acbaf" translate="yes" xml:space="preserve">
          <source>. Returns true on success; otherwise false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="178f2aabba535e96f937c9375b7f2e51bebb2181" translate="yes" xml:space="preserve">
          <source>. Returns value of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baf17746e108732e724a24adc5225678fb767ca3" translate="yes" xml:space="preserve">
          <source>. Reverse geocoding is the process of finding an address that corresponds to a given coordinate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c45c09babfaad3f5a6c7211c3044de949994e569" translate="yes" xml:space="preserve">
          <source>. Row and column categories are set with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="425ee6fec2280bd5cfa1680ad47478127385fc06" translate="yes" xml:space="preserve">
          <source>. Scopes may be concatenated to include more than one condition, as described in the following sections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7deb00cbccb26f46bbccbb371995f555384256e6" translate="yes" xml:space="preserve">
          <source>. See &lt;a href=&quot;configure-options#&quot;&gt;Qt Configure Options&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf8be8da08b8ee4b69d05f37e6b860624d7712ca" translate="yes" xml:space="preserve">
          <source>. See &lt;a href=&quot;qfile#encodeName&quot;&gt;encodeName&lt;/a&gt;() for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dbd56713b4fdb4b00d328a823c2b78706c7b35d" translate="yes" xml:space="preserve">
          <source>. See &lt;a href=&quot;qstring#argument-formats&quot;&gt;Argument Formats&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0755ce45bd669b6d661729abad68522a3b5e8fd2" translate="yes" xml:space="preserve">
          <source>. See &lt;a href=&quot;qt#TimerType-enum&quot;&gt;Qt::TimerType&lt;/a&gt; for information on the different timer types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="423079b5693ac0fdecbb5cc8d63b3455a2e5b239" translate="yes" xml:space="preserve">
          <source>. See &lt;a href=&quot;qurl#setUrl&quot;&gt;setUrl&lt;/a&gt;() for more information on this parameter. &lt;a href=&quot;qurl#ParsingMode-enum&quot;&gt;QUrl::DecodedMode&lt;/a&gt; is not permitted in this context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ce8f779860077bfc1894d50b31300d23c3c036c" translate="yes" xml:space="preserve">
          <source>. See &lt;a href=&quot;qvariant#canConvert-1&quot;&gt;canConvert()&lt;/a&gt; for a list of possible conversions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23ab57d7acc6d9f1329ccbe404407a29766f5002" translate="yes" xml:space="preserve">
          <source>. See the &lt;a href=&quot;qauthenticator#qauthenticator-options&quot;&gt;Options section&lt;/a&gt; for more information on outgoing options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a97cbb24cfd7bc382a77dc7f7cb4dbeff440667f" translate="yes" xml:space="preserve">
          <source>. See the &lt;a href=&quot;qbytearray#qvsnprintf&quot;&gt;qvsnprintf&lt;/a&gt;() documentation for caveats and limitations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e980c08ec590c77cc424d33e6ac1ac92c703b967" translate="yes" xml:space="preserve">
          <source>. See the &lt;a href=&quot;qshortcut#mnemonic&quot;&gt;QShortcut&lt;/a&gt; documentation for details (to display an actual ampersand, use '&amp;amp;&amp;amp;').</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b349c600dc52b8c72a81db29cdc5f44737de9c7" translate="yes" xml:space="preserve">
          <source>. See the &lt;a href=&quot;qshortcut#mnemonic&quot;&gt;QShortcut&lt;/a&gt; documentation for details. To display an actual ampersand, use '&amp;amp;&amp;amp;'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1db7717e097302e5dfb83de7373e78d6d1ba0e4f" translate="yes" xml:space="preserve">
          <source>. See the above link and the specification for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7ec2f3c1e570f454303de5338b3ba09da5a079c" translate="yes" xml:space="preserve">
          <source>. See the platform-specific pages, for instance &lt;a href=&quot;windows&quot;&gt;Qt for Windows&lt;/a&gt;, for more information. This attribute must be set before &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; is constructed. This value was added in Qt 5.4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee90b18f965bf7ccfaefb66b3c4b01de1fa797c" translate="yes" xml:space="preserve">
          <source>. Sequential devices, such as stdin and stdout, are unaffected by this limitation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f863d5f212884953f530bed97a8afe022b33d7e" translate="yes" xml:space="preserve">
          <source>. Set the data with &lt;a href=&quot;qqmlcomponent#setData&quot;&gt;setData&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88e382655b7a878acd6755a4d13d0fd6d0b61832" translate="yes" xml:space="preserve">
          <source>. Setting a depth of 0 means that no maximum depth is set, indicating that the whole certificate chain should be checked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93d0f9b80022683623d1eb61b444b0b3dd73b260" translate="yes" xml:space="preserve">
          <source>. Setting a small period value will give a high frequency of the curve. A large period will give it a small frequency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9bd35a990ddc46c8fea92c87f35e5bda6467e00" translate="yes" xml:space="preserve">
          <source>. Setting an invalid expiration date to this cookie will mean it's a session cookie.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d82649c9a14289512baac038c3b33c58100adcf6" translate="yes" xml:space="preserve">
          <source>. Setting the URL will also set the protocol tag, the remote host name and port number. This is done so as to facilitate the implementation of the code that determines the proxy server to be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b003e12998643b14ec0f406254cb991a37d0a396" translate="yes" xml:space="preserve">
          <source>. Setting the device resets the stream to its initial state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ed32cb5da5b03856065c178ecc0524d196d376" translate="yes" xml:space="preserve">
          <source>. Setting the format is only allowable while in &lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio::StoppedState&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f35e9cdb8556595638c220d5857812dbf9ca8ed3" translate="yes" xml:space="preserve">
          <source>. Setting the netmask also sets the prefix length to match the new netmask.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e465ef885c6c8e813ef11660f44d2919d980f52" translate="yes" xml:space="preserve">
          <source>. Several files whose names begin with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71764b19b64124d7b2a7d4987cdb81f9f99e3108" translate="yes" xml:space="preserve">
          <source>. Similar to &lt;code&gt;QCOMPARE(actual, expected)&lt;/code&gt; in C++.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f127bb8e6027337eba2f7d739232c3c696ac3a6e" translate="yes" xml:space="preserve">
          <source>. Similar to &lt;code&gt;QFAIL(message)&lt;/code&gt; in C++.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61301077d42fff8f8c7708661f19982a814c311d" translate="yes" xml:space="preserve">
          <source>. Similar to &lt;code&gt;QVERIFY(condition)&lt;/code&gt; or &lt;code&gt;QVERIFY2(condition, message)&lt;/code&gt; in C++.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c655428a349014cd8e50fd6740cba96ffe940719" translate="yes" xml:space="preserve">
          <source>. Similar to &lt;code&gt;qFuzzyCompare(actual, expected)&lt;/code&gt; in C++ but with a required</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c12241576750442efdabd85a3f897270a2d540e" translate="yes" xml:space="preserve">
          <source>. Similar to how the Qt 3D ECS (entity component system) allows you to define a so-called Scenegraph by building a scene from a tree of Entities and Components, the framegraph is also a tree structure but one used for a different purpose. Namely, controlling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f7c94e7a2c93c96c0f0f3a68fd4270fac9fab7" translate="yes" xml:space="preserve">
          <source>. Similarly, calling this command's &lt;a href=&quot;qundocommand#undo&quot;&gt;undo&lt;/a&gt;() must have the same effect as undoing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d45c596db92a0981f9dd79e5de1ee215fbbb6376" translate="yes" xml:space="preserve">
          <source>. Since &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; doesn't allow duplicates, the resulting &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; might be smaller than the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0da3d283a77bc2bf58213bcdd755f775494c9215" translate="yes" xml:space="preserve">
          <source>. Since &lt;a href=&quot;qvideoframe&quot;&gt;QVideoFrame&lt;/a&gt; is explicitly shared, these two instances will reflect the same frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a52693a1b0ce17ac591536653f5e0b241b56bb" translate="yes" xml:space="preserve">
          <source>. Since the sizes of the strings are given by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af8dea78b9767f9a68a9097e5d25d8630d1ccd1" translate="yes" xml:space="preserve">
          <source>. Since the state changes may take some time to occur this signal may arrive sometime after the state change has been requested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddfde3fd8a46895eeb3aa2c0d1c79b2268c21daf" translate="yes" xml:space="preserve">
          <source>. Since this model does not support hierarchical structures,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8155983984ae9b5d8ca77143d379786ee283dce2" translate="yes" xml:space="preserve">
          <source>. Slice ownership is passed to the series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="158c99878cded7e1ac4320c8a1ca4d75cdf1a15f" translate="yes" xml:space="preserve">
          <source>. Some example styles: &quot;Light&quot;, &quot;Light Italic&quot;, &quot;Bold&quot;, &quot;Oblique&quot;, &quot;Demi&quot;. The list may be empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b82377d954df1569893d9f918bdabe7e0a55e9b3" translate="yes" xml:space="preserve">
          <source>. Some scenegraph backends, software in particular, use no scissor or stencil. There the clip region is provided as an ordinary &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e3a7d3275b3c7e9e15fa5b98be42f44ffe165d0" translate="yes" xml:space="preserve">
          <source>. Some widgets may allow the user to set any value at all; others may just provide multiples of &lt;a href=&quot;qabstractslider#singleStep-prop&quot;&gt;singleStep&lt;/a&gt;() or &lt;a href=&quot;qabstractslider#pageStep-prop&quot;&gt;pageStep&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95eb9600402039552348c29101f211c68c279720" translate="yes" xml:space="preserve">
          <source>. Spacing refers to the vertical and horizontal distances between items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a910d9038c3bdd12afebfc714ed08e78c3c1a3ac" translate="yes" xml:space="preserve">
          <source>. Specifically, if a custom widget grabs the keyboard as a result of a call to &lt;a href=&quot;qwidget#grabKeyboard&quot;&gt;QWidget::grabKeyboard&lt;/a&gt;(), the operation of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e7b314146df3067277524731d204db116b27e01" translate="yes" xml:space="preserve">
          <source>. Standalone applications that need to dynamically generate user interfaces at run-time use the &lt;a href=&quot;quiloader&quot;&gt;QUiLoader&lt;/a&gt; class, found in the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtuitools-module.html&quot;&gt;QtUiTools&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="924eae298e2e78ce2427fe5ddba0418d0dd3eff4" translate="yes" xml:space="preserve">
          <source>. Standalone applications that need to dynamically generate user interfaces at run-time use the &lt;a href=&quot;quiloader&quot;&gt;QUiLoader&lt;/a&gt;, found in the &lt;a href=&quot;qtuitools-index&quot;&gt;Qt UI Tools&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8da57c35fbafc44a7af295fcfd507e2198f3f912" translate="yes" xml:space="preserve">
          <source>. Standard or custom buttons can be added at any time using &lt;a href=&quot;qmessagebox#addButton&quot;&gt;addButton&lt;/a&gt;(). The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ec970c56553afe24d65a676b15c5a73eb95cff" translate="yes" xml:space="preserve">
          <source>. Start address is set to &lt;code&gt;0&lt;/code&gt;, data range and data values are empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b9d5a5300da05aeb70f8878e6742f880a88864b" translate="yes" xml:space="preserve">
          <source>. Start address of the data is set to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcfe021846571d0455d5fb642422c0364cfcd359" translate="yes" xml:space="preserve">
          <source>. State and history of the view and the page possibly loaded in it will be lost.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1204f3fbbecf8d8df42999f62b9798511d21236" translate="yes" xml:space="preserve">
          <source>. Storage must have been allocated before uploading pixel data. Some overloads of setData() will set appropriate dimensions, mipmap levels, and array layers and then allocate storage for you if they have enough information to do so. This will be noted in the function documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba73c610f3e3b781e1f58676857388c7838ff387" translate="yes" xml:space="preserve">
          <source>. Subclasses should implement this to call &lt;a href=&quot;qqmlengine#qmlRegisterType-1&quot;&gt;qmlRegisterType&lt;/a&gt;() for all types which are provided by the extension plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fced88e97da6becc431ef3047a45a70091c965b" translate="yes" xml:space="preserve">
          <source>. Subsequent calls to &lt;a href=&quot;qxmlstreamwriter#writeAttribute&quot;&gt;writeAttribute&lt;/a&gt;() will add attributes to this element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58bbc3a5b9a3719ffeaed749c8746ff8745bbc02" translate="yes" xml:space="preserve">
          <source>. Subtype can be used by a handler to determine which format it should use while saving the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86edf02b271c2cb8fee38867893a88507a75378d" translate="yes" xml:space="preserve">
          <source>. Such casting is done automatically when calling the &lt;a href=&quot;qvariant#toInt&quot;&gt;toInt&lt;/a&gt;(), &lt;a href=&quot;qvariant#toBool&quot;&gt;toBool&lt;/a&gt;(), ... methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff3e10642ad807150be1b68bbe69b29c9686f5c" translate="yes" xml:space="preserve">
          <source>. Takes ownership of the item. If the item is null or already belongs to the series, it is not inserted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a10fb1350b57c7cea50901a4ad36373f4e2c5f3" translate="yes" xml:space="preserve">
          <source>. Takes ownership of the item. If the item is null or already belongs to the series, it is not inserted. Returns &lt;code&gt;true&lt;/code&gt; if inserting succeeded, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="601bd3fb1f27cf9684a47744035c7b943f3daf70" translate="yes" xml:space="preserve">
          <source>. That is, &lt;a href=&quot;qmediatimeinterval#start&quot;&gt;start&lt;/a&gt;() &amp;lt;= time &amp;lt;= &lt;a href=&quot;qmediatimeinterval#end&quot;&gt;end&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="338bcb0d0b4f6443c09736e45408c62579701cfd" translate="yes" xml:space="preserve">
          <source>. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b88b71956581371b70fdeabdfe38102c08142f23" translate="yes" xml:space="preserve">
          <source>. The &quot;first&quot; &quot;second&quot; .. &quot;fifth&quot; channels are all set to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd4e84e47ca9bc8c188e455da64004876c5194d6" translate="yes" xml:space="preserve">
          <source>. The &lt;a href=&quot;qabstracteventdispatcher-timerinfo&quot;&gt;TimerInfo&lt;/a&gt; struct has &lt;code&gt;timerId&lt;/code&gt;, &lt;code&gt;interval&lt;/code&gt;, and &lt;code&gt;timerType&lt;/code&gt; members.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43fd5ce589f9ea50d383e476435352fde1c26f34" translate="yes" xml:space="preserve">
          <source>. The &lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea&lt;/a&gt; will take ownership of the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="343e0181547f3f83f79f899eb15c08efe4236add" translate="yes" xml:space="preserve">
          <source>. The &lt;a href=&quot;qbluetoothsocket#socketType&quot;&gt;socketType&lt;/a&gt;() is ignored if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cccf5d91750e40f40e3d2b2d435876d609d33b44" translate="yes" xml:space="preserve">
          <source>. The &lt;a href=&quot;qcustom3dvolume#textureDataWidth&quot;&gt;textureDataWidth&lt;/a&gt;() function returns the padded byte count. The padding bytes should indicate a fully transparent color to avoid rendering artifacts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4e346d8685b0e9e791bd6bc39dfc8fdc51d8beb" translate="yes" xml:space="preserve">
          <source>. The &lt;a href=&quot;qdialog#finished&quot;&gt;finished&lt;/a&gt;() signal will emit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0932cc3e159e958ac787b3650670b28a026c0ed2" translate="yes" xml:space="preserve">
          <source>. The &lt;a href=&quot;qgeocodingmanager#finished&quot;&gt;QGeoCodingManager::finished&lt;/a&gt;() signal will probably follow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1de6a203b9e640d060e9776832a20f2e4a639262" translate="yes" xml:space="preserve">
          <source>. The &lt;a href=&quot;qgeocodingmanagerengine#finished&quot;&gt;QGeoCodingManagerEngine::finished&lt;/a&gt;() signal will probably follow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ac7fd08459e83c8d453c03709fb6fe4846e5dd6" translate="yes" xml:space="preserve">
          <source>. The &lt;a href=&quot;qgeoroutingmanager#finished&quot;&gt;QGeoRoutingManager::finished&lt;/a&gt;() signal will probably follow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34f7fe8f5615f25c238715b392553311c9451d37" translate="yes" xml:space="preserve">
          <source>. The &lt;a href=&quot;qgeoroutingmanagerengine#finished&quot;&gt;QGeoRoutingManagerEngine::finished&lt;/a&gt;() signal will probably follow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47da479ee20cf765e6a72d38836f3cf3eba43fff" translate="yes" xml:space="preserve">
          <source>. The &lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; member of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2178a78afabdd9af300a3101866642dfe133e48a" translate="yes" xml:space="preserve">
          <source>. The &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e284ea099264e812b66594745ad0584a86db59b" translate="yes" xml:space="preserve">
          <source>. The &lt;a href=&quot;qitemmodelsurfacedataproxy#zPosRole-prop&quot;&gt;zPosRole&lt;/a&gt; and the &lt;a href=&quot;qitemmodelsurfacedataproxy#xPosRole-prop&quot;&gt;xPosRole&lt;/a&gt; are set to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ae32cf116b9adb4872ff5f6bc2c145fd813ad4" translate="yes" xml:space="preserve">
          <source>. The &lt;a href=&quot;qitemselectionmodel#modelChanged&quot;&gt;modelChanged&lt;/a&gt;() signal will be emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fccd07b3d5bedc493f0a901806298484b2cf7e5" translate="yes" xml:space="preserve">
          <source>. The &lt;a href=&quot;qml-qtmultimedia-cameracapture#imageCaptured-signal&quot;&gt;imageCaptured&lt;/a&gt; and &lt;a href=&quot;qml-qtmultimedia-cameracapture#imageSaved-signal&quot;&gt;imageSaved&lt;/a&gt; signals will be emitted when the capture is complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67524e226e275702219c3adad628579c2f5c32dc" translate="yes" xml:space="preserve">
          <source>. The &lt;a href=&quot;qmodbusserver#serverAddress&quot;&gt;serverAddress&lt;/a&gt; preset is &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2858f10ac967b73900e5b10991b6b1c00579f2d" translate="yes" xml:space="preserve">
          <source>. The &lt;a href=&quot;qmodbusserver#serverAddress&quot;&gt;serverAddress&lt;/a&gt; preset is &lt;code&gt;255&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16cd71048af3fc51e2a89671c144068d4fe7a52e" translate="yes" xml:space="preserve">
          <source>. The &lt;a href=&quot;qopenglwindow&quot;&gt;QOpenGLWindow&lt;/a&gt;'s context will share with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc4413c338820787c24b45f1851d7c81a1dbadad" translate="yes" xml:space="preserve">
          <source>. The &lt;a href=&quot;qpagedpaintdevice&quot;&gt;QPagedPaintDevice&lt;/a&gt; must be set up before being used with this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c99f57e579933ac1bb61dad40591b2bce35a19a0" translate="yes" xml:space="preserve">
          <source>. The &lt;a href=&quot;qplacemanager#finished&quot;&gt;QPlaceManager::finished&lt;/a&gt;() signal will probably follow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0e31226924d386dd155797d803f8a163e17e365" translate="yes" xml:space="preserve">
          <source>. The &lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt; takes ownership of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59f946fdbb309f7f9df96bcf35007260bab54195" translate="yes" xml:space="preserve">
          <source>. The &lt;a href=&quot;qtextdocument#FindFlag-enum&quot;&gt;QTextDocument::FindCaseSensitively&lt;/a&gt; option is ignored for this overload, use &lt;a href=&quot;qregexp#caseSensitivity&quot;&gt;QRegExp::caseSensitivity&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ff2680954a9b7feb7a658d37fc459763a300abb" translate="yes" xml:space="preserve">
          <source>. The &lt;a href=&quot;qtextdocument#FindFlag-enum&quot;&gt;QTextDocument::FindCaseSensitively&lt;/a&gt; option is ignored for this overload, use &lt;a href=&quot;qregularexpression#PatternOption-enum&quot;&gt;QRegularExpression::CaseInsensitiveOption&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="568380f1dcf3986655ea84639090126bdd87e920" translate="yes" xml:space="preserve">
          <source>. The &lt;a href=&quot;qwaylandcompositor#create&quot;&gt;create()&lt;/a&gt; function must be called on the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f906b676252116543cf9d115fe4b0b434d92f4b0" translate="yes" xml:space="preserve">
          <source>. The &lt;b&gt;\b&lt;/b&gt; assertion matches a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bde45773668bbcded64cc6f8a431833f733348e5" translate="yes" xml:space="preserve">
          <source>. The &lt;code&gt;RESET&lt;/code&gt; function must return void and take no parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fef80044ed7801fb76fad78fc6365a2e5a90fd5" translate="yes" xml:space="preserve">
          <source>. The UERE is used in calculating an estimate of the accuracy of the position information reported by the position info source. The UERE should be set to a value appropriate for the GPS device which generated the NMEA stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb383526b56ae7ef335b3ccd96c3b1601d18fe31" translate="yes" xml:space="preserve">
          <source>. The URL of the icon image that most closely matches the given parameters is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd2709d796b6a68d747e70b2bc7a5dd7ae4352f4" translate="yes" xml:space="preserve">
          <source>. The Unicode data is converted into 8-bit characters using &lt;a href=&quot;qstring#toUtf8&quot;&gt;QString::toUtf8&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99be73b1df6545c25b2583244f58d6be028d3b54" translate="yes" xml:space="preserve">
          <source>. The Z value decides the stacking order of sibling (neighboring) items. A sibling item of high Z value will always be drawn on top of another sibling item with a lower Z value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="241dcfde4bf84035d426696d7e8bc329820948bf" translate="yes" xml:space="preserve">
          <source>. The abbreviation may change depending on DST or even historical events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2586d7d4ea8aa4ae684f10cef4ec089b7ece233d" translate="yes" xml:space="preserve">
          <source>. The about box's parent is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54e16bcf126078ce67719317cf95677f211826ea" translate="yes" xml:space="preserve">
          <source>. The accumulative size of the mapped data is returned in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53edc99f7211b2e9519f30fe5df05afe28331328" translate="yes" xml:space="preserve">
          <source>. The action will be automatically added to the group's list of actions.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
