<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="842d93485e99d398b4974f7d7ddb9e0412dfd3a8" translate="yes" xml:space="preserve">
          <source>This template function registers the C++ type in the QML system. Instances of this type cannot be created from the QML system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c1d52afee1c2eb40cc636e9d7416e5fee97b924" translate="yes" xml:space="preserve">
          <source>This template function registers the specified revision of a C++ type in the QML system with the library imported from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f8de021e5cdcf476571cad0b1bc4c2c935952fa" translate="yes" xml:space="preserve">
          <source>This template provides a visualization of the key in which the state can be on or off. This template is used in situations where the key label will remain the same regardless of status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cdc6112a9220988a9d085fe3e14fbd6c39993b8" translate="yes" xml:space="preserve">
          <source>This templated function (taking a &lt;a href=&quot;qtremoteobjects-repc#&quot;&gt;repc&lt;/a&gt; generated type as the template parameter) will return the list of names of every instance of that type on the Remote Objects network. For example, if you have a Shape class defined in a .rep file, and Circle and Square classes inherit from the Source definition, they can be shared on the Remote Objects network using &lt;a href=&quot;qremoteobjecthostbase#enableRemoting&quot;&gt;enableRemoting&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="880aa4d0df9b8ce1a664af735876ba83089465ff" translate="yes" xml:space="preserve">
          <source>This templated function overload enables a host node to provide remote access to a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcf963e1d5f39eb468fd4214c9b7fc4f8dd73957" translate="yes" xml:space="preserve">
          <source>This templatized structure lets you treat a block of individual samples as an interleaved stereo stream frame. This is most useful when used with the templatized &lt;a href=&quot;qaudiobuffer#data&quot;&gt;data()&lt;/a&gt; functions of &lt;a href=&quot;qaudiobuffer&quot;&gt;QAudioBuffer&lt;/a&gt;. Generally the data is accessed as a pointer, so no copying should occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc52115e89118f511401ae6d2da6177a84dde729" translate="yes" xml:space="preserve">
          <source>This temporary axis is destroyed if another axis is set explicitly to the same orientation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b39830448a90fbaa0ce02276587146d0227e53e8" translate="yes" xml:space="preserve">
          <source>This text is used for the tooltip. If no tooltip is specified, the action's text is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48645de090e016b6b628825b0cbad27f153730fd" translate="yes" xml:space="preserve">
          <source>This total angle measures the complete angle covered by the gesture. Usually, this is equal to the value held by the &lt;a href=&quot;qpinchgesture#rotationAngle-prop&quot;&gt;rotationAngle&lt;/a&gt; property, except in the case where the user performs multiple rotations by removing and repositioning one of the touch points, as described above. In this case, the total angle will be the sum of the rotation angles for the multiple stages of the gesture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be312cfef6fd544464fe7e932b1c85d94b783f2" translate="yes" xml:space="preserve">
          <source>This transform provides an alternative to the &lt;a href=&quot;qgraphicsitem#mapToItem&quot;&gt;mapToItem&lt;/a&gt;() or &lt;a href=&quot;qgraphicsitem#mapFromItem&quot;&gt;mapFromItem&lt;/a&gt;() functions, by returning the appropriate transform so that you can map shapes and coordinates yourself. It also helps you write more efficient code when repeatedly mapping between the same two items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="959f7e19bfbdc8547f801e21369014bd52bc0b87" translate="yes" xml:space="preserve">
          <source>This tree is a bit more complex with 5 leaves. Following the same rules as before we construct 5 RenderView objects from the FrameGraph. The following diagrams show the construction for the first two RenderViews. The remaining RenderViews are very similar to the second diagram just with the other sub-trees.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c98e0e86ede83f5a0b79d0c7ec479785d264b057" translate="yes" xml:space="preserve">
          <source>This type actively prevents you from holding it in a &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;, because doing so would be very inefficient. Use a &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; instead, which has the same API as &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;, but more efficient storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="798c92f22fea1ce81b6e17342f553ccad637137d" translate="yes" xml:space="preserve">
          <source>This type allows control over manual and automatic focus settings, including information about any parts of the camera frame that are selected for autofocusing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="374ac617fbd2c1ed1db0e99434bac169d4e92fd9" translate="yes" xml:space="preserve">
          <source>This type allows you to capture still images and be notified when they are available or saved to disk. You can adjust the resolution of the captured image and where the saved image should go.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cad859b259d213bad295d1b1a6e954d949666d5" translate="yes" xml:space="preserve">
          <source>This type allows you to operate the camera flash hardware and control the flash mode used. Not all cameras have flash hardware (and in some cases it is shared with the &lt;a href=&quot;qml-qtmultimedia-torch&quot;&gt;torch&lt;/a&gt; hardware).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72268142d6bd62fc4271cdc26c5a9a863a9242ff" translate="yes" xml:space="preserve">
          <source>This type allows you to play uncompressed audio files (typically WAV files) in a generally lower latency way, and is suitable for &quot;feedback&quot; type sounds in response to user actions (e.g. virtual keyboard sounds, positive or negative feedback for popup dialogs, or game sounds). If low latency is not important, consider using the &lt;a href=&quot;qml-qtmultimedia-mediaplayer&quot;&gt;MediaPlayer&lt;/a&gt; or Audio types instead, since they support a wider variety of media formats and are less resource intensive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8a3df00fdb760a35c47f51d17b16d44e5a4be95" translate="yes" xml:space="preserve">
          <source>This type allows you to use &lt;code&gt;AbstractItemModel&lt;/code&gt; derived models as a data source for &lt;a href=&quot;qml-qtdatavisualization-surface3d&quot;&gt;Surface3D&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d242a0a85f0d2ce82df16b5cdc62084f1bcb26d" translate="yes" xml:space="preserve">
          <source>This type allows you to use AbstractItemModel derived models as a data source for &lt;a href=&quot;qml-qtdatavisualization-bars3d&quot;&gt;Bars3D&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e125bca0878af3f71a7bc549d93b1c40e8503923" translate="yes" xml:space="preserve">
          <source>This type allows you to use AbstractItemModel derived models as a data source for &lt;a href=&quot;qml-qtdatavisualization-scatter3d&quot;&gt;Scatter3D&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="002429d3dbfb8b14baea1ee31813ddff00aa30af" translate="yes" xml:space="preserve">
          <source>This type can be placed in the keyboard layout. It collects and renders touch input data (trace) from the key area.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0bd7d9e75cda1565dc8763b013dbe9f65119379" translate="yes" xml:space="preserve">
          <source>This type can be registered by calling &lt;a href=&quot;qqmlengine#qmlRegisterType-1&quot;&gt;qmlRegisterType&lt;/a&gt;() with an appropriate type namespace and version number. For example, to make the type available in the &lt;code&gt;com.mycompany.messaging&lt;/code&gt; namespace with version 1.0:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73970de178284bc3fc4c91d5b591508dcf8fa529" translate="yes" xml:space="preserve">
          <source>This type can be used in special cases where multiple columns are added to a single keyboard layout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="087d838ff038ad41819e947fff5d18a7a54dfe5c" translate="yes" xml:space="preserve">
          <source>This type can be used to explain the underlying data by adding labeled categories. The widths of the category ranges can be specified freely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0172f5bd7fe38cb376c00eadb7a3e491e1e75a85" translate="yes" xml:space="preserve">
          <source>This type cannot be instantiated directly. Instead, one of the following derived types should be used to create a series: &lt;a href=&quot;qml-qtcharts-lineseries&quot;&gt;LineSeries&lt;/a&gt;, &lt;a href=&quot;qml-qtcharts-areaseries&quot;&gt;AreaSeries&lt;/a&gt;, &lt;a href=&quot;qml-qtcharts-barseries&quot;&gt;BarSeries&lt;/a&gt;, &lt;a href=&quot;qml-qtcharts-stackedbarseries&quot;&gt;StackedBarSeries&lt;/a&gt;, &lt;a href=&quot;qml-qtcharts-percentbarseries&quot;&gt;PercentBarSeries&lt;/a&gt;, &lt;a href=&quot;qml-qtcharts-horizontalbarseries&quot;&gt;HorizontalBarSeries&lt;/a&gt;, &lt;a href=&quot;qml-qtcharts-horizontalstackedbarseries&quot;&gt;HorizontalStackedBarSeries&lt;/a&gt;, &lt;a href=&quot;qml-qtcharts-horizontalpercentbarseries&quot;&gt;HorizontalPercentBarSeries&lt;/a&gt;, &lt;a href=&quot;qml-qtcharts-pieseries&quot;&gt;PieSeries&lt;/a&gt;, &lt;a href=&quot;qml-qtcharts-scatterseries&quot;&gt;ScatterSeries&lt;/a&gt;, &lt;a href=&quot;qml-qtcharts-splineseries&quot;&gt;SplineSeries&lt;/a&gt;, &lt;a href=&quot;qml-qtcharts-boxplotseries&quot;&gt;BoxPlotSeries&lt;/a&gt;, or &lt;a href=&quot;qml-qtcharts-candlestickseries&quot;&gt;CandlestickSeries&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acfe82c6c2f26096096b0faab95eda50605f8e9b" translate="yes" xml:space="preserve">
          <source>This type determines how numbers are shown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="277528c3ed65ca2c6548e2bb45ca813cdb8624bb" translate="yes" xml:space="preserve">
          <source>This type determines the visual appearance of the &lt;a href=&quot;qlcdnumber&quot;&gt;QLCDNumber&lt;/a&gt; widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65c3ad49f2a29d7d5220ce713153492e2b4c3c3e" translate="yes" xml:space="preserve">
          <source>This type enables developers to render bar graphs in 3D with Qt Quick 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07459181c175d1efc5c54b28640d42ed082b8d9f" translate="yes" xml:space="preserve">
          <source>This type enables developers to render scatter graphs in 3D with Qt Quick 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3ee9d6121cc0b8427aedec269cd471ea5205eb5" translate="yes" xml:space="preserve">
          <source>This type enables developers to render surface plots in 3D with Qt Quick 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15230820037bc97ddc8c399ce95c4525999bddc8" translate="yes" xml:space="preserve">
          <source>This type enables rendering qml into a texture, which then can be used as a part of 3D scene. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="694df4387e8d46220c5492d65bca8ed61aea3607" translate="yes" xml:space="preserve">
          <source>This type encapsulates a rectangular area of pixels that is displayed on an output device. It corresponds to the interface &lt;code&gt;wl_surface&lt;/code&gt; in the Wayland protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d828ff5f57e6f8a6bf3f829a7ad8212dccf765a5" translate="yes" xml:space="preserve">
          <source>This type handles adding, inserting, changing, and removing data items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b24d681aedcd8c5cfdd02fb6f8bce40b4be60577" translate="yes" xml:space="preserve">
          <source>This type handles adding, inserting, changing, and removing rows of data with Qt Quick 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fcc00ef07b54d87ee57fcc3c08d427146bb23cf" translate="yes" xml:space="preserve">
          <source>This type handles surface data items. The data is arranged into rows and columns, and all rows must have the same number of columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25274c59aa54977186ad6b08a9af6e530d8cb951" translate="yes" xml:space="preserve">
          <source>This type handles the trace interaction between the touch screen and the input engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="136f23c1cdb7736189800f7e28f766c7ea337fa4" translate="yes" xml:space="preserve">
          <source>This type has a non-trivial destructor. If the flag is not set calls to the destructor are not necessary before discarding objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2f89be1692e8fd15e2341d79a578cf35aaf1e9a" translate="yes" xml:space="preserve">
          <source>This type has non-trivial constructors. If the flag is not set instances can be safely initialized with memset to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e5054ca809a69939fb0356d8d4fb915966b5c9" translate="yes" xml:space="preserve">
          <source>This type interacts with &lt;a href=&quot;qprinter#PaperSize-typedef&quot;&gt;QPrinter::PaperSize&lt;/a&gt; and &lt;a href=&quot;qprinter#setFullPage&quot;&gt;QPrinter::setFullPage&lt;/a&gt;() to determine the final size of the page available to the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de8335dec37ad90b5a3fe14c42ce3a6743018c40" translate="yes" xml:space="preserve">
          <source>This type is a QML representation of &lt;a href=&quot;qgeocoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; and represents a geographic position in the form of &lt;a href=&quot;qml-coordinate#latitude&quot;&gt;latitude&lt;/a&gt;, &lt;a href=&quot;qml-coordinate#longitude&quot;&gt;longitude&lt;/a&gt; and &lt;a href=&quot;qml-coordinate#altitude&quot;&gt;altitude&lt;/a&gt; attributes. The &lt;a href=&quot;qml-coordinate#latitude&quot;&gt;latitude&lt;/a&gt; attribute specifies the number of decimal degrees above and below the equator. A positive latitude indicates the Northern Hemisphere and a negative latitude indicates the Southern Hemisphere. The &lt;a href=&quot;qml-coordinate#longitude&quot;&gt;longitude&lt;/a&gt; attribute specifies the number of decimal degrees east and west. A positive longitude indicates the Eastern Hemisphere and a negative longitude indicates the Western Hemisphere. The &lt;a href=&quot;qml-coordinate#altitude&quot;&gt;altitude&lt;/a&gt; attribute specifies the number of meters above sea level. Together, these attributes specify a 3-dimensional position anywhere on or near the Earth's surface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59b5263c1be3f24d19c3cd3ea040fe16d4dd1810" translate="yes" xml:space="preserve">
          <source>This type is a QML representation of &lt;a href=&quot;qgeoshape&quot;&gt;QGeoShape&lt;/a&gt; which is an abstract geographic area. It includes attributes and methods common to all geographic areas. To create objects that represent a valid geographic area use &lt;a href=&quot;qml-georectangle&quot;&gt;georectangle&lt;/a&gt; or &lt;a href=&quot;qml-geocircle&quot;&gt;geocircle&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e606480c5e16bb363de6ccac1a050eb2d42bda13" translate="yes" xml:space="preserve">
          <source>This type is a pointer to a derived of &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45e331fb78d3bcca28a0b43465728c7402429328" translate="yes" xml:space="preserve">
          <source>This type is an enumeration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efe0aa81d586581898da10b689386f4033ab2a68" translate="yes" xml:space="preserve">
          <source>This type is defined as a &lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="152262cb349589ce68979326393a6b9ac2387a2f" translate="yes" xml:space="preserve">
          <source>This type is defined as a list of qoutputrange values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="971a43395d146eef24635147c2e9810cbec81d85" translate="yes" xml:space="preserve">
          <source>This type is defined as a list of qrange values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca68123f02332eb6488bdd82970817d385ecb8b1" translate="yes" xml:space="preserve">
          <source>This type is guaranteed to be the same size as a &lt;code&gt;size_t&lt;/code&gt; on all platforms supported by Qt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27854cf27b582cee2c4882fab2b754a7cfe4804e" translate="yes" xml:space="preserve">
          <source>This type is later used in a signal-slot connection in the &lt;code&gt;window.cpp&lt;/code&gt; file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a741d21cfb504727a3fc1c047bd15423b18cc87" translate="yes" xml:space="preserve">
          <source>This type is part of the &lt;a href=&quot;qml-qtwayland-compositor-iviapplication&quot;&gt;IviApplication&lt;/a&gt; extension and provides a way to extend the functionality of an existing &lt;a href=&quot;qml-qtwayland-compositor-waylandsurface&quot;&gt;WaylandSurface&lt;/a&gt; with a way to resize and identify it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c1c453b6e53607eb81d716cf9db958cb60786c2" translate="yes" xml:space="preserve">
          <source>This type is part of the &lt;a href=&quot;qml-qtwayland-compositor-wlshell&quot;&gt;WlShell&lt;/a&gt; extension and provides a way to extend the functionality of an existing &lt;a href=&quot;qml-qtwayland-compositor-waylandsurface&quot;&gt;WaylandSurface&lt;/a&gt; with features specific to desktop-style compositors, such as resizing and moving the surface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90a3e7b58128f77b818e8c4738b7e4016ef517b8" translate="yes" xml:space="preserve">
          <source>This type is part of the &lt;a href=&quot;qml-qtwayland-compositor-xdgshell&quot;&gt;XdgShell&lt;/a&gt; extension and provides a way to extend extend the functionality of an &lt;a href=&quot;qml-qtwayland-compositor-xdgsurface&quot;&gt;XdgSurface&lt;/a&gt; with features specific to desktop-style menus for an xdg surface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1d3c110dc35acb6e0c37aab05c0dc9617ec2fd5" translate="yes" xml:space="preserve">
          <source>This type is part of the &lt;a href=&quot;qml-qtwayland-compositor-xdgshell&quot;&gt;XdgShell&lt;/a&gt; extension and provides a way to extend the functionality of an &lt;a href=&quot;qml-qtwayland-compositor-xdgsurface&quot;&gt;XdgSurface&lt;/a&gt; with features specific to desktop-style windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8cf947eb749279c1e5dea94e30ccfaa9dc64e4f" translate="yes" xml:space="preserve">
          <source>This type is part of the &lt;a href=&quot;qml-qtwayland-compositor-xdgshell&quot;&gt;XdgShell&lt;/a&gt; extension and provides a way to extend the functionality of an existing &lt;a href=&quot;qml-qtwayland-compositor-waylandsurface&quot;&gt;WaylandSurface&lt;/a&gt; with features specific to desktop-style compositors, such as resizing and moving the surface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47fe5e9abf7ae7bd483dc8c1caed3e9740590cf1" translate="yes" xml:space="preserve">
          <source>This type is part of the &lt;a href=&quot;qml-qtwayland-compositor-xdgshellv5&quot;&gt;XdgShellV5&lt;/a&gt; extension and provides a way to extend the functionality of an existing &lt;a href=&quot;qml-qtwayland-compositor-waylandsurface&quot;&gt;WaylandSurface&lt;/a&gt; for handling popup surfaces created by clients using xdg-shell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5164c256749064ea4833eb4fd9c2da7928abeb0d" translate="yes" xml:space="preserve">
          <source>This type is part of the &lt;a href=&quot;qml-qtwayland-compositor-xdgshellv5&quot;&gt;XdgShellV5&lt;/a&gt; extension and provides a way to extend the functionality of an existing &lt;a href=&quot;qml-qtwayland-compositor-waylandsurface&quot;&gt;WaylandSurface&lt;/a&gt; with features specific to desktop-style compositors, such as resizing and moving the surface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f7a3287c2755d11ac62ce8a6cfe67420b23ec10" translate="yes" xml:space="preserve">
          <source>This type is part of the &lt;a href=&quot;qml-qtwayland-compositor-xdgshellv6&quot;&gt;XdgShellV6&lt;/a&gt; extension and provides a way to extend extend the functionality of an &lt;a href=&quot;qml-qtwayland-compositor-xdgsurfacev6&quot;&gt;XdgSurfaceV6&lt;/a&gt; with features specific to desktop-style menus for an xdg surface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f974a8acfc13c0e3a41e72cab7fc512502044a7" translate="yes" xml:space="preserve">
          <source>This type is part of the &lt;a href=&quot;qml-qtwayland-compositor-xdgshellv6&quot;&gt;XdgShellV6&lt;/a&gt; extension and provides a way to extend the functionality of an &lt;a href=&quot;qml-qtwayland-compositor-xdgsurfacev6&quot;&gt;XdgSurfaceV6&lt;/a&gt; with features specific to desktop-style windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11bad4f6f00fc488360fadd21af84f9ed59bd202" translate="yes" xml:space="preserve">
          <source>This type is part of the &lt;a href=&quot;qml-qtwayland-compositor-xdgshellv6&quot;&gt;XdgShellV6&lt;/a&gt; extension and provides a way to extend the functionality of an existing &lt;a href=&quot;qml-qtwayland-compositor-waylandsurface&quot;&gt;WaylandSurface&lt;/a&gt; with features specific to desktop-style compositors, such as resizing and moving the surface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7de1387d9e0adf74dcbb479cbf086e5973f86c2" translate="yes" xml:space="preserve">
          <source>This type is the base for all path types. It cannot be instantiated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4721184f0e834101d55ffff273e17ae5b8458378" translate="yes" xml:space="preserve">
          <source>This type is the root element of the keyboard layout. Use this element to build a new keyboard layout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b69f418a6400faa9d59674cb1839c6c4272d0059" translate="yes" xml:space="preserve">
          <source>This type is uncreatable, but contains properties that are exposed via subtypes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab4ae249ea89b6daafce50a894518aed8423c3d" translate="yes" xml:space="preserve">
          <source>This type is uncreatable, but contains properties that are exposed via the following subtypes: &lt;a href=&quot;qml-qtdatavisualization-bar3dseries&quot;&gt;Bar3DSeries&lt;/a&gt;, &lt;a href=&quot;qml-qtdatavisualization-scatter3dseries&quot;&gt;Scatter3DSeries&lt;/a&gt;, and &lt;a href=&quot;qml-qtdatavisualization-surface3dseries&quot;&gt;Surface3DSeries&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebd1d63788453eeeed0be4e1e63be1570e9dcd2f" translate="yes" xml:space="preserve">
          <source>This type is uncreatable, but contains properties that are exposed via the following subtypes: &lt;a href=&quot;qml-qtdatavisualization-bardataproxy&quot;&gt;BarDataProxy&lt;/a&gt;, &lt;a href=&quot;qml-qtdatavisualization-scatterdataproxy&quot;&gt;ScatterDataProxy&lt;/a&gt;, &lt;a href=&quot;qml-qtdatavisualization-surfacedataproxy&quot;&gt;SurfaceDataProxy&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36b1513dd256fc9190cb78b28fe6ae0767aa6709" translate="yes" xml:space="preserve">
          <source>This type is uncreatable, but it can be accessed by using the &lt;a href=&quot;qml-qtwebengine-webengineview#navigationHistory-prop&quot;&gt;WebEngineView.navigationHistory&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfae04b22ea936a425396ecd7612418784f461c5" translate="yes" xml:space="preserve">
          <source>This type is uncreatable, but it contains properties that are shared between the 3D visualizations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="205f1afa429caaa91330c41798f3694e9f5f55e3" translate="yes" xml:space="preserve">
          <source>This type is uncreatable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1e013d15fd73dfac500ff51651a54366e619075" translate="yes" xml:space="preserve">
          <source>This type is used to determine the direction of a box layout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="437bb98fa851773086bf00b99f9bdcf3c1d0d798" translate="yes" xml:space="preserve">
          <source>This type is used to render &lt;code&gt;wl_shell&lt;/code&gt;, &lt;code&gt;xdg_shell&lt;/code&gt; or &lt;code&gt;ivi_application&lt;/code&gt; surfaces as part of a Qt Quick scene. It handles moving and resizing triggered by clicking on the window decorations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f6e69e66f34ac5088bdf067c97ccffd1900e7bd" translate="yes" xml:space="preserve">
          <source>This type is used to signify an object's orientation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82f03f9fa9e4769f44a253cfd0a74ac903b1358d" translate="yes" xml:space="preserve">
          <source>This type is used to specify visual properties that affect the whole graph. There are several built-in themes that can be used as is or modified freely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae3775b430be32525848fdf8fc9a3362879cee62" translate="yes" xml:space="preserve">
          <source>This type is used when you need to enumerate months or weekdays. Usually standalone names are represented in singular forms with capitalized first letter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="639c9441bf15879c4483417e52483de92adc720c" translate="yes" xml:space="preserve">
          <source>This type is useful for keyboard layouts consisting of multiple pages of keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7cbd6ed3cd6c99deeecd16b6ce7ef529df87896" translate="yes" xml:space="preserve">
          <source>This type manages the series specific visual elements, as well as the series data (via a data proxy).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc06f57af8545d3d4b8c01c1ca477d4eaea20b59" translate="yes" xml:space="preserve">
          <source>This type of data can be alterable by an application program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d673bfd5544e967307bc48c1c90cccc4994b1327" translate="yes" xml:space="preserve">
          <source>This type of data can be provided by an I/O system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dccda9f8c69a991b1d81f4c6d9e38992a81787b" translate="yes" xml:space="preserve">
          <source>This type of function should be used in conditional expressions only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cde812b05e2bc79c3ae2debaf741de4709f72fe" translate="yes" xml:space="preserve">
          <source>This type of function should be used on the right-hand side of assignments (that is, as an operand).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25a7b47e9827ff89a267c094cefe2ae161720a5c" translate="yes" xml:space="preserve">
          <source>This type of keyboard layout must meet the following requirements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db6e3f46c922866fec1cf7d26a55748e4efc65dd" translate="yes" xml:space="preserve">
          <source>This type of name can be used for date-to-string formatting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ec0184ac6a1e72071c025d66bbca9f854b02c4" translate="yes" xml:space="preserve">
          <source>This type provides a &lt;a href=&quot;qml-qtquick-virtualkeyboard-settings-virtualkeyboardsettings&quot;&gt;VirtualKeyboardSettings&lt;/a&gt; singleton instance, which can be used to configure the virtual keyboard settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a1da84832d178f02b17ca2271c663b036839111" translate="yes" xml:space="preserve">
          <source>This type provides an axis that can be given a range of values and segment and subsegment counts to divide the range into.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa789492f586ba35b9cd0c9c2c509020a195997" translate="yes" xml:space="preserve">
          <source>This type provides an axis that can be given labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc0aaef3c1bd4bcfc3c4be7a7e5f2595f683eaff" translate="yes" xml:space="preserve">
          <source>This type provides capabilities for rendering Trace objects on the screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="954c18554c68ece67125c1c7fd9a81f53d21cae7" translate="yes" xml:space="preserve">
          <source>This type provides formatting rules for a linear value 3D axis. This type is the default type for &lt;a href=&quot;qml-qtdatavisualization-valueaxis3d&quot;&gt;ValueAxis3D&lt;/a&gt; and thus never needs to be explicitly created. This type has no public functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52a36b744016739651d8589453213f9bb6ec334c" translate="yes" xml:space="preserve">
          <source>This type provides notification when sensor gestures are triggered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f871b0d58cf29031b19a4f746307200c6a95f36d" translate="yes" xml:space="preserve">
          <source>This type provides panel for decorating &lt;a href=&quot;qml-qtquick-virtualkeyboard-traceinputkey&quot;&gt;TraceInputKey&lt;/a&gt; items in the keyboard layout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d77174b50890e072fb6f6d84ba8a2a51eafcf472" translate="yes" xml:space="preserve">
          <source>This type provides simple &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;-based storage for properties marked as PERSISTED. It is used in conjunction with &lt;a href=&quot;qml-qtremoteobjects-node#persistedStore-prop&quot;&gt;Node::persistedStore&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69dd55c762a02a6b7079e6ed2d77259c057ba0bc" translate="yes" xml:space="preserve">
          <source>This type represents a client connecting to the compositor using the Wayland protocol. It corresponds to the Wayland interface wl_client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c71cc386e5b636662b83408e4724f859a8db00c4" translate="yes" xml:space="preserve">
          <source>This type should not be used directly in the layouts. The specialized key types, such as Key or &lt;a href=&quot;qml-qtquick-virtualkeyboard-enterkey&quot;&gt;EnterKey&lt;/a&gt; should be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8564b543f6f7a1288f08074fc59de374e849bd9" translate="yes" xml:space="preserve">
          <source>This typedef is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7795ba9f7d059711bae1b25f86370b0e7bc73baa" translate="yes" xml:space="preserve">
          <source>This typedef provides an STL-style const iterator for &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b42f893ef4c5c861c621e8d1269b0cd36178fb5" translate="yes" xml:space="preserve">
          <source>This typedef provides an STL-style const iterator for &lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f88d6630851326200c4f92355abf27e849eea50f" translate="yes" xml:space="preserve">
          <source>This typedef provides an STL-style const iterator for &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce3afe26e2568dd7af87de2a6f83e394cfa4d183" translate="yes" xml:space="preserve">
          <source>This typedef provides an STL-style const iterator for &lt;a href=&quot;qstringref&quot;&gt;QStringRef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d18297773cfe6f9d63b559769ec72148b55325a" translate="yes" xml:space="preserve">
          <source>This typedef provides an STL-style const iterator for &lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27213f6c1998811139043b59258bee08000b5676" translate="yes" xml:space="preserve">
          <source>This typedef provides an STL-style const reference for a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; element (&lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05bed2b6185ff8c5145d1f1553fc8853f840d16b" translate="yes" xml:space="preserve">
          <source>This typedef provides an STL-style const reverse iterator for &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d3b135abe6ddc1095296e71d8fd66b9507cf813" translate="yes" xml:space="preserve">
          <source>This typedef provides an STL-style const reverse iterator for &lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68eb18c54ad4f5a46f3c998c356aac538186fbe6" translate="yes" xml:space="preserve">
          <source>This typedef provides an STL-style const reverse iterator for &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8c6716455da6e863142f0c5b4e8bba502fb278a" translate="yes" xml:space="preserve">
          <source>This typedef provides an STL-style const reverse iterator for &lt;a href=&quot;qstringref&quot;&gt;QStringRef&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0441604a9945708f42db5c6ef83cade71a04828e" translate="yes" xml:space="preserve">
          <source>This typedef provides an STL-style const reverse iterator for &lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7efb3a07aebdab30dc7fe8611f67857dd75a4ade" translate="yes" xml:space="preserve">
          <source>This typedef provides an STL-style non-const iterator for &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="753e1e148628d2647fa6f148ef8ef7e5ca837437" translate="yes" xml:space="preserve">
          <source>This typedef provides an STL-style non-const reverse iterator for &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68696793de895ef3a0aa97faa41dd090776a80e1" translate="yes" xml:space="preserve">
          <source>This typedef provides an STL-style non-const reverse iterator for &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6973064ccf757e738b1ccfc4c7c701a3ca55ce7a" translate="yes" xml:space="preserve">
          <source>This typedef provides an STL-style reference for a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; element (&lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="786e9a6e62d20e50734e8e8d55e3589185d2ae54" translate="yes" xml:space="preserve">
          <source>This typedef provides an STL-style value type for &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0df8da4e783bb471dbf607bbc084ea32f7e33af7" translate="yes" xml:space="preserve">
          <source>This typedef was introduced in Qt 4.2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1d08a4eb71ef576c4cff3eebe194a63f5c89fc3" translate="yes" xml:space="preserve">
          <source>This typedef was introduced in Qt 4.4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4c207ef3c36b03d6bf742eb015171919b0dba2b" translate="yes" xml:space="preserve">
          <source>This typedef was introduced in Qt 4.5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="817bcd5f74f78c4c86fe6e022cef44b81eb29e42" translate="yes" xml:space="preserve">
          <source>This typedef was introduced in Qt 4.7.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62c261ddb6ca870dbdfed89b966b88cb6d71cbfd" translate="yes" xml:space="preserve">
          <source>This typedef was introduced in Qt 5.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01db4f56802d97983bf4a360ad87f096f8bf2b4d" translate="yes" xml:space="preserve">
          <source>This typedef was introduced in Qt 5.1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adfa3d64279ea28f66f74f2d59468c88f14bb687" translate="yes" xml:space="preserve">
          <source>This typedef was introduced in Qt 5.10.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e4bf03f89601d31eb4cdafee988734b75ac323b" translate="yes" xml:space="preserve">
          <source>This typedef was introduced in Qt 5.11.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d9d798737ba032594105b1ef2574f82210bcc4b" translate="yes" xml:space="preserve">
          <source>This typedef was introduced in Qt 5.12.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40dab358dbcb097fce6985e3bf64c918a6a31760" translate="yes" xml:space="preserve">
          <source>This typedef was introduced in Qt 5.13.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60cc4890a4931a8f8a4e6727d24aad53570a28cd" translate="yes" xml:space="preserve">
          <source>This typedef was introduced in Qt 5.3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a0536ba799b6b416ae44cc391bc11251678fe80" translate="yes" xml:space="preserve">
          <source>This typedef was introduced in Qt 5.4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42d33133d05537945dd21f329496713ee594adf3" translate="yes" xml:space="preserve">
          <source>This typedef was introduced in Qt 5.6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33a4decdf0c6ced375dd66add901a9239c2e1034" translate="yes" xml:space="preserve">
          <source>This typedef was introduced in Qt 5.6.2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="846b7d937ef2dacd0bbf8d5d70b73675da109ad2" translate="yes" xml:space="preserve">
          <source>This typedef was introduced in Qt 5.7.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5f4a86d4c06ac37907d52433a7d6ba87fce15ff" translate="yes" xml:space="preserve">
          <source>This typedef was introduced in Qt 5.8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9854f08e03b4bde5ac11651432c8ffb3c9cb2876" translate="yes" xml:space="preserve">
          <source>This typedef was introduced in Qt 5.9.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae30e09e2c0ec4094ff2690d838e98e07575a53" translate="yes" xml:space="preserve">
          <source>This typically includes a street number and street name but may also contain things like a unit number, a building name, or anything else that might be used to distinguish one address from another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b2165d455eb9ea3cd4fbb77a209f5372a8a6886" translate="yes" xml:space="preserve">
          <source>This usage can be further optimized by using the &lt;a href=&quot;qcontiguouscache#insert&quot;&gt;insert&lt;/a&gt;() function in the case where the requested row is a long way from the currently cached items. If there is a gap between where the new item is inserted and the currently cached items then the existing cached items are first removed to retain the contiguous nature of the cache. Hence it is important to take some care then when using &lt;a href=&quot;qcontiguouscache#insert&quot;&gt;insert&lt;/a&gt;() in order to avoid unwanted clearing of the cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebd155af92f9e9ea796a0c18e8786be6b73cc153" translate="yes" xml:space="preserve">
          <source>This usually matches the size of the window, but may also differ in case &lt;code&gt;vkGetPhysicalDeviceSurfaceCapabilitiesKHR&lt;/code&gt; reports a fixed size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4201ca5901a7713805563a4bddb52ee55aab9a4a" translate="yes" xml:space="preserve">
          <source>This uuid is invalid on any other platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a9e0bfe9470496f44c8f6f2780d32f7df7e1b0f" translate="yes" xml:space="preserve">
          <source>This value affects all grid lines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c17d4a6eb3a4310b47435f3a8e09f1400319188a" translate="yes" xml:space="preserve">
          <source>This value affects the light specified in &lt;a href=&quot;q3dscene&quot;&gt;Q3DScene&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e180539323bfe157644e0b88b2a3c5c6dee2ef50" translate="yes" xml:space="preserve">
          <source>This value affects the light specified in &lt;a href=&quot;qml-qtdatavisualization-scene3d&quot;&gt;Scene3D&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f94a09226463754766d105ae159091f30581001" translate="yes" xml:space="preserve">
          <source>This value can be overridden by setting &lt;a href=&quot;qml-qtdatavisualization-abstract3dseries#baseGradient-prop&quot;&gt;Abstract3DSeries.baseGradient&lt;/a&gt; explicitly in the series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ba619885ceeb7138fcc5ff1da5547bcff8c0cea" translate="yes" xml:space="preserve">
          <source>This value can be overridden by setting &lt;a href=&quot;qml-qtdatavisualization-abstract3dseries#colorStyle-prop&quot;&gt;Abstract3DSeries.colorStyle&lt;/a&gt; explicitly in the series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d36ad073b4080bdb4f43d0348737e47dd54937a" translate="yes" xml:space="preserve">
          <source>This value can be overridden by setting &lt;a href=&quot;qml-qtdatavisualization-abstract3dseries#colorStyle-prop&quot;&gt;colorStyle&lt;/a&gt; explicitly in the series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6896ad1c65f99d9f328750c5bfacb47caa94e9f" translate="yes" xml:space="preserve">
          <source>This value can be overridden by setting the &lt;a href=&quot;qabstract3dseries#baseColor-prop&quot;&gt;baseColor&lt;/a&gt; explicitly in the series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a34e5fefb8825a1730ec82d50fec39dfab4f814f" translate="yes" xml:space="preserve">
          <source>This value can be overridden by setting the &lt;a href=&quot;qabstract3dseries#baseGradient-prop&quot;&gt;baseGradient&lt;/a&gt; explicitly in the series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d481794f81504929661173c25282c406b8415569" translate="yes" xml:space="preserve">
          <source>This value can be used by subclasses to implement extensions without breaking compatibility. If you use &lt;a href=&quot;qstylehintreturn#qstyleoption_cast&quot;&gt;qstyleoption_cast&lt;/a&gt;&amp;lt;T&amp;gt;(), you normally do not need to check it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf295861115c2bff04fe37988763539d6b9af425" translate="yes" xml:space="preserve">
          <source>This value can be used by subclasses to implement extensions without breaking compatibility. If you use the &lt;a href=&quot;qstyleoption#qstyleoption_cast&quot;&gt;qstyleoption_cast&lt;/a&gt;() function, you normally do not need to check it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69b53b3c5fe6721afe2aa1d0982e7607d3737886" translate="yes" xml:space="preserve">
          <source>This value can be used for implementing secure cross-origin checks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a1ee618c50604ce367758f9cd00be9123ac22a9" translate="yes" xml:space="preserve">
          <source>This value can be used to convert font point sizes to pixel sizes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97807427694ed08a48340071cc4eb175ac31902b" translate="yes" xml:space="preserve">
          <source>This value comes from the attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40e0360f4405a5bbbc8dbb83cf27eee3542bb424" translate="yes" xml:space="preserve">
          <source>This value corresponds to a mask of all possible message severities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="250a50892323b118fcf031c8f28b1d9a8fc1dd76" translate="yes" xml:space="preserve">
          <source>This value corresponds to a mask of all possible message sources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60646c064ea35bcdb105a0356d235084da9188ce" translate="yes" xml:space="preserve">
          <source>This value corresponds to a mask of all possible message types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f82ed54f0c3334159f8ebb853ca51151bada1db" translate="yes" xml:space="preserve">
          <source>This value corresponds to a mask of all possible mouse buttons. Use to set the 'acceptedButtons' property of a &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; to accept ALL mouse buttons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1519ac508b77741b66d2b4b5af1fac48257accc" translate="yes" xml:space="preserve">
          <source>This value defines the format of the JSON byte array produced when converting to a &lt;a href=&quot;qjsondocument&quot;&gt;QJsonDocument&lt;/a&gt; using &lt;a href=&quot;qjsondocument#toJson&quot;&gt;toJson&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd432375a767222ecf8ceb073b4fff34ccdede97" translate="yes" xml:space="preserve">
          <source>This value describes how quickly the spring-like motion comes to rest. The default value is 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ce2e252ecc085f80103faf604ca5d6c65347d2c" translate="yes" xml:space="preserve">
          <source>This value determines how evenly and brightly the colors are shown throughout the graph regardless of the light position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="778c2a2442d0265b52de409076c89db58413ccfe" translate="yes" xml:space="preserve">
          <source>This value determines the depth of &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;'s BSP tree. The depth directly affects &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;'s performance and memory usage; the latter growing exponentially with the depth of the tree. With an optimal tree depth, &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; can instantly determine the locality of items, even for scenes with thousands or millions of items. This also greatly improves rendering performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6da92d20e37bf048d1c6cc09a752b093f7929be" translate="yes" xml:space="preserve">
          <source>This value does only have effect when the pen style is set to &lt;a href=&quot;qt#PenJoinStyle-enum&quot;&gt;Qt::MiterJoin&lt;/a&gt;. The value is specified in units of the pen's width, e.g. a miter limit of 5 in width 10 is 50 pixels long. The default miter limit is 2, i.e. twice the pen width in pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="476e5c8f68cbe412c97bb7e6273fc9ae171b86bb" translate="yes" xml:space="preserve">
          <source>This value indicates imperial units, such as inches and miles as they are used in the United Kingdom.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07fedfec3abac54e114d8f111d36c8b4b8741961" translate="yes" xml:space="preserve">
          <source>This value indicates imperial units, such as inches and miles as they are used in the United States.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c5535fa6e5fc76603cb48bb1cfc3ff8b18c829c" translate="yes" xml:space="preserve">
          <source>This value indicates metric units, such as meters, centimeters and millimeters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e598c17cfd8b21475b846c6b8ef00d555044bc0" translate="yes" xml:space="preserve">
          <source>This value is a multiplier applied to the media's standard play rate. By default this value is 1.0, indicating that the media is playing at the standard pace. Values higher than 1.0 will increase the rate of play. Values less than zero can be set and indicate the media will rewind at the multiplier of the standard pace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe025896303a8fcd8d445d39f3150616cff802e" translate="yes" xml:space="preserve">
          <source>This value is always equal to &lt;a href=&quot;qfontmetrics#leading&quot;&gt;leading&lt;/a&gt;()+&lt;a href=&quot;qfontmetrics#height&quot;&gt;height&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e86a613bd9d2ab05c29faadcdab8a2ff8b09a096" translate="yes" xml:space="preserve">
          <source>This value is always equal to &lt;a href=&quot;qfontmetricsf#leading&quot;&gt;leading&lt;/a&gt;()+&lt;a href=&quot;qfontmetricsf#height&quot;&gt;height&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="811af184f50351d5c6118d6e1ee45ea52129462f" translate="yes" xml:space="preserve">
          <source>This value is currently always 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c03cd063dc8c7ef29fba416f16062d6a38a20f88" translate="yes" xml:space="preserve">
          <source>This value is deprecated. It is equivalent to ScreenResolution on Unix and HighResolution on Windows and Mac. Due to the difference between ScreenResolution and HighResolution, use of this value may lead to non-portable printer code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="380a209a4e2e011edb79482c82b31d80a3b3c149" translate="yes" xml:space="preserve">
          <source>This value is either &lt;code&gt;1&lt;/code&gt; when index type is &lt;code&gt;GL_UNSIGNED_BYTE&lt;/code&gt; or &lt;code&gt;2&lt;/code&gt; when index type is &lt;code&gt;GL_UNSIGNED_SHORT&lt;/code&gt;. For Desktop OpenGL, &lt;code&gt;GL_UNSIGNED_INT&lt;/code&gt; with the value &lt;code&gt;4&lt;/code&gt; is also supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bec689d3c9b1daa676f8b84a7aadacca57ba4e6d" translate="yes" xml:space="preserve">
          <source>This value is normally below &lt;a href=&quot;qcache#maxCost&quot;&gt;maxCost&lt;/a&gt;(), but &lt;a href=&quot;qcache&quot;&gt;QCache&lt;/a&gt; makes an exception for Qt's &lt;a href=&quot;implicit-sharing#&quot;&gt;implicitly shared&lt;/a&gt; classes. If a cached object shares its internal data with another instance, &lt;a href=&quot;qcache&quot;&gt;QCache&lt;/a&gt; may keep the object lying around, possibly contributing to making totalCost() larger than &lt;a href=&quot;qcache#maxCost&quot;&gt;maxCost&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="303f53b9c5cb0a86ed911b5574f4758101b8f9b8" translate="yes" xml:space="preserve">
          <source>This value is not updated properly during drag and drop operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29e51f040513e2fd0327d4f72bb11fcaf8ae8692" translate="yes" xml:space="preserve">
          <source>This value is not valid unless &lt;a href=&quot;qprocess#exitStatus&quot;&gt;exitStatus&lt;/a&gt;() returns &lt;a href=&quot;qprocess#ExitStatus-enum&quot;&gt;NormalExit&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6eb221825ddd37868dbcd2a21a4d3bd5c4f203d" translate="yes" xml:space="preserve">
          <source>This value is obsolete and does nothing since Qt 4.5:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecf9a5d7293df4b0f5ee9366553d82fe143040f8" translate="yes" xml:space="preserve">
          <source>This value is obsolete and has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6894c64d69f78c2c280616000aa16d90c3291755" translate="yes" xml:space="preserve">
          <source>This value is obsolete and will be ignored, use the Antialiasing render hint instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f2460ee2b543759ba290504a93cdabc3169524c" translate="yes" xml:space="preserve">
          <source>This value is obsolete since Qt 4.5:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5adfdf4f665552ebe6b50088b9050610e5fdda9d" translate="yes" xml:space="preserve">
          <source>This value is obsolete, the default for &lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; is now non-cosmetic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c21b6830d3d4d6f04f460c3b1ca838ad475c36a4" translate="yes" xml:space="preserve">
          <source>This value is obsolete. Use WA_OpaquePaintEvent instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a6ea9ee948a8e50ac069760ba8d7a34d30a0d0b" translate="yes" xml:space="preserve">
          <source>This value is obsolete. Use Window instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c5fc41f94fb5f58184ba39971006e0b8f26d3f2" translate="yes" xml:space="preserve">
          <source>This value is obsolete. Use WindowText instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="827a22c3b83fc89f435de5268c915c14c8d6d17f" translate="yes" xml:space="preserve">
          <source>This value is only used if &lt;a href=&quot;qstyleoptiontoolbutton#features-var&quot;&gt;features&lt;/a&gt; includes &lt;a href=&quot;qstyleoptiontoolbutton#ToolButtonFeature-enum&quot;&gt;Arrow&lt;/a&gt;. The default value is &lt;a href=&quot;qt#ArrowType-enum&quot;&gt;Qt::DownArrow&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d69c7181bf46cbe6590a04f7b584cade8ff4794" translate="yes" xml:space="preserve">
          <source>This value is only used if &lt;a href=&quot;qstyleoptiontoolbutton#toolButtonStyle-var&quot;&gt;toolButtonStyle&lt;/a&gt; is &lt;a href=&quot;qt#ToolButtonStyle-enum&quot;&gt;Qt::ToolButtonTextUnderIcon&lt;/a&gt;, &lt;a href=&quot;qt#ToolButtonStyle-enum&quot;&gt;Qt::ToolButtonTextBesideIcon&lt;/a&gt;, or &lt;a href=&quot;qt#ToolButtonStyle-enum&quot;&gt;Qt::ToolButtonTextOnly&lt;/a&gt;. By default, the application's default font is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="833f0315d354f436f37414a05b3ea19a88ca0be0" translate="yes" xml:space="preserve">
          <source>This value is only used if &lt;a href=&quot;qstyleoptiontoolbutton#toolButtonStyle-var&quot;&gt;toolButtonStyle&lt;/a&gt; is &lt;a href=&quot;qt#ToolButtonStyle-enum&quot;&gt;Qt::ToolButtonTextUnderIcon&lt;/a&gt;, &lt;a href=&quot;qt#ToolButtonStyle-enum&quot;&gt;Qt::ToolButtonTextBesideIcon&lt;/a&gt;, or &lt;a href=&quot;qt#ToolButtonStyle-enum&quot;&gt;Qt::ToolButtonTextOnly&lt;/a&gt;. The default value is an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="006ba049b7f5461c977e1eaee39e892ab1fab76e" translate="yes" xml:space="preserve">
          <source>This value is only used if the join style is &lt;a href=&quot;qt#PenJoinStyle-enum&quot;&gt;Qt::MiterJoin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="793e18ad0afc32d078f3de1deb9c4126f46458ec" translate="yes" xml:space="preserve">
          <source>This value is only used in the &lt;a href=&quot;qcameraexposure#FlashMode-enum&quot;&gt;manual flash mode&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bde2362428ab82a6c6f2d7cb3d3e2a3a2e37a18c" translate="yes" xml:space="preserve">
          <source>This value is only used in the &lt;a href=&quot;qcameraexposure#FlashMode-enum&quot;&gt;torch flash mode&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da6284b15eb6363d26272d7ff7b1228a83436248" translate="yes" xml:space="preserve">
          <source>This value is only valid while the frame data is &lt;a href=&quot;qvideoframe#map&quot;&gt;mapped&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f8923aed93b9715a9499c961711bd4f65db7576" translate="yes" xml:space="preserve">
          <source>This value is proportional to the keyboard's width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed9c14e4953faf8872b9f35ca2f3172e08236d0c" translate="yes" xml:space="preserve">
          <source>This value is the factor between the mouse dragging and the actual scroll area movement (during overshoot). The factor must be between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff49b55f9ef8f4343053e516dde477bf143c613b" translate="yes" xml:space="preserve">
          <source>This value is used in &lt;a href=&quot;qtableview#sizeHintForColumn&quot;&gt;QTableView::sizeHintForColumn&lt;/a&gt;(), &lt;a href=&quot;qtableview#sizeHintForRow&quot;&gt;QTableView::sizeHintForRow&lt;/a&gt;() and &lt;a href=&quot;qtreeview#sizeHintForColumn&quot;&gt;QTreeView::sizeHintForColumn&lt;/a&gt;(). Reimplementing these functions can make this function not having an effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ceee0d01715aba9c2d8eeb6373c26a2559b5d10" translate="yes" xml:space="preserve">
          <source>This value is used only if the type of this item is &lt;a href=&quot;qwinjumplistitem#Type-enum&quot;&gt;QWinJumpListItem::Link&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c8e57bda575addb1534531b118349ff7c78c82b" translate="yes" xml:space="preserve">
          <source>This value is used to convert font point sizes to pixel sizes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17a11b5c6838221dfb13ef1b788e170c938af202" translate="yes" xml:space="preserve">
          <source>This value is used to tell &lt;a href=&quot;qjsondocument&quot;&gt;QJsonDocument&lt;/a&gt; whether to validate the binary data when converting to a &lt;a href=&quot;qjsondocument&quot;&gt;QJsonDocument&lt;/a&gt; using &lt;a href=&quot;qjsondocument#fromBinaryData&quot;&gt;fromBinaryData&lt;/a&gt;() or &lt;a href=&quot;qjsondocument#fromRawData&quot;&gt;fromRawData&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06c61515d37fdd970f3bd2450dc683a758c9bda1" translate="yes" xml:space="preserve">
          <source>This value is valid if the &lt;a href=&quot;qhostaddress#protocol&quot;&gt;protocol&lt;/a&gt;() is &lt;a href=&quot;qabstractsocket#NetworkLayerProtocol-enum&quot;&gt;IPv4Protocol&lt;/a&gt;, or if the protocol is &lt;a href=&quot;qabstractsocket#NetworkLayerProtocol-enum&quot;&gt;IPv6Protocol&lt;/a&gt;, and the IPv6 address is an IPv4 mapped address. (RFC4291)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc14116e70a3a6cda202b93e7d2dba63a5d0e0cb" translate="yes" xml:space="preserve">
          <source>This value is valid if the &lt;a href=&quot;qhostaddress#protocol&quot;&gt;protocol&lt;/a&gt;() is &lt;a href=&quot;qabstractsocket#NetworkLayerProtocol-enum&quot;&gt;IPv4Protocol&lt;/a&gt;, or if the protocol is &lt;a href=&quot;qabstractsocket#NetworkLayerProtocol-enum&quot;&gt;IPv6Protocol&lt;/a&gt;, and the IPv6 address is an IPv4 mapped address. (RFC4291). In those cases,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10e42af3b12a5f09fa6d0074b1e628c6a4f60c79" translate="yes" xml:space="preserve">
          <source>This value is valid if the &lt;a href=&quot;qhostaddress#protocol&quot;&gt;protocol&lt;/a&gt;() is &lt;a href=&quot;qabstractsocket#NetworkLayerProtocol-enum&quot;&gt;IPv6Protocol&lt;/a&gt;. If the protocol is &lt;a href=&quot;qabstractsocket#NetworkLayerProtocol-enum&quot;&gt;IPv4Protocol&lt;/a&gt;, then the address is returned an an IPv4 mapped IPv6 address. (RFC4291)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7da40b43f6f2b4ca641b94fb31c4bc7f9dc16a5" translate="yes" xml:space="preserve">
          <source>This value may change at run-time. An event with type &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::WinIdChange&lt;/a&gt; will be sent to the widget following a change in window system identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd2c419be73e1e443fa6b02c1d9669037eda795" translate="yes" xml:space="preserve">
          <source>This value means that the direction is unknown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0605d4c92ee8552773e448c499e0308c888e1f5" translate="yes" xml:space="preserve">
          <source>This value must match the name of the effect's source texture property so that the Item can pass the layer's offscreen surface to the effect correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="539f4f2265451059a72ada138ff0034a7c08623e" translate="yes" xml:space="preserve">
          <source>This value of the right thumbstick's X axis. The axis values range from -1.0 to 1.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b52d25443f6db4fd33b7193e16c988968497dd3" translate="yes" xml:space="preserve">
          <source>This value of the right thumbstick's Y axis. The axis values range from -1.0 to 1.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="133c652c552a2c3e96bcc8471a91c67d8967b459" translate="yes" xml:space="preserve">
          <source>This value represents a data frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cfb82069ca4c79a23d0a6a0aa1b498d58542752" translate="yes" xml:space="preserve">
          <source>This value represents a remote request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f65b0a3f533d41ef8b97f0c6d294e5984e5b812" translate="yes" xml:space="preserve">
          <source>This value represents an error frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2694599fabe967f6fc71db2cdfb3d0b370b4f7bd" translate="yes" xml:space="preserve">
          <source>This value represents an invalid frame. This type is used for error reporting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf33c1ba38228383f73d576f4888dcd36d507f16" translate="yes" xml:space="preserve">
          <source>This value represents the actual horizontal pixel density on the screen's display. Depending on what information the underlying system provides the value might not be entirely accurate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19504b9dd1f24380cacdf42cc85db4dcd6e47b22" translate="yes" xml:space="preserve">
          <source>This value represents the actual vertical pixel density on the screen's display. Depending on what information the underlying system provides the value might not be entirely accurate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7494a1f86611ec63d7d5f1ef8890ddf24a555e0f" translate="yes" xml:space="preserve">
          <source>This value represents the index in the &lt;a href=&quot;qsensor#outputRanges-prop&quot;&gt;QSensor::outputRanges&lt;/a&gt; list to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e5f8870fb8dcebd83e2352be58b42b2c770c2e6" translate="yes" xml:space="preserve">
          <source>This value represents the pixel density on the screen's display. Depending on what information the underlying system provides the value might not be entirely accurate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fd926ccec71457b88cdcf18f53708d16399fb41" translate="yes" xml:space="preserve">
          <source>This value should always be higher than the last value specified by a &lt;a href=&quot;qml-qtquick-pathpercent&quot;&gt;PathPercent&lt;/a&gt; at a previous position in the Path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="598c685720dc8f70b9037d6c0ebe5392fc527b1d" translate="yes" xml:space="preserve">
          <source>This value should be an odd number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f266cf68e76d99dcaa660fc0b5469aca2d5c6b03" translate="yes" xml:space="preserve">
          <source>This variable currently has no effect when linking against a shared/dynamic build of Qt, or when linking libraries. It may be used for deployment of dynamic plugins at a later time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bf0bfbe0f60ca4c406c04a81b9d3118b2c6d61c" translate="yes" xml:space="preserve">
          <source>This variable holds a &lt;a href=&quot;qt#ToolButtonStyle-enum&quot;&gt;Qt::ToolButtonStyle&lt;/a&gt; value describing the appearance of the tool button</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44ad0efde0ce588b4987b8a6f8e5fb0d92f701aa" translate="yes" xml:space="preserve">
          <source>This variable holds a bitwise OR of the &lt;a href=&quot;qstyle#SubControl-enum&quot;&gt;sub-controls&lt;/a&gt; that are active for the complex control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e43fb29838638935ffddf95bad8881db9ccf2fac" translate="yes" xml:space="preserve">
          <source>This variable holds a bitwise OR of the &lt;a href=&quot;qstyle#SubControl-enum&quot;&gt;sub-controls&lt;/a&gt; to be drawn for the complex control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="156d04b87169f153d1d5d6334dd96aaed0620da4" translate="yes" xml:space="preserve">
          <source>This variable holds a bitwise OR of the features that describe this button</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0d890cc335cf6e075518d24090ec2c4da990f91" translate="yes" xml:space="preserve">
          <source>This variable holds a bitwise OR of the features that describe this frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff031063014c681e13788a986b848e497bcfa9b" translate="yes" xml:space="preserve">
          <source>This variable holds a bitwise OR of the features that describe this view item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee3eb181f144a54d2ecaf168beb203b99beeb7b" translate="yes" xml:space="preserve">
          <source>This variable holds a constant value that is always equal to or greater than the maximum value of &lt;a href=&quot;qvulkanwindow#concurrentFrameCount&quot;&gt;concurrentFrameCount&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edc30cf19e2863c6f57d5b6ccbf31665eceddabb" translate="yes" xml:space="preserve">
          <source>This variable holds a flag indicating whether or not text is visible</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01095f0c7e8ca8c1db7ee17c09764e914e611f7d" translate="yes" xml:space="preserve">
          <source>This variable holds a hint to the layout specifying the area around paragraphs, frames or text require painting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784e3f55e6690a751689e3933ec4e48eb36a981e" translate="yes" xml:space="preserve">
          <source>This variable holds a version corresponding to &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; High Sierra (version 10.13).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72ae870eaff2b6676740947978b69294c32abd4f" translate="yes" xml:space="preserve">
          <source>This variable holds a version corresponding to &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; Mojave (version 10.14).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dca2ceb0a468803fbb142734402a4a3285269060" translate="yes" xml:space="preserve">
          <source>This variable holds a version corresponding to &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; Sierra (version 10.12).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89ae6c4df67d9af2baea75d829d9b7cbfb03d6d9" translate="yes" xml:space="preserve">
          <source>This variable holds a version corresponding to Android Jelly Bean (version 4.1, API level 16).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="171e8ff2ef70985eb95cb854df9600e86ab7a253" translate="yes" xml:space="preserve">
          <source>This variable holds a version corresponding to Android Jelly Bean, maintenance release 1 (version 4.2, API level 17).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa7b772f92a51f67dff91a280c2d85ab8a19d0a1" translate="yes" xml:space="preserve">
          <source>This variable holds a version corresponding to Android Jelly Bean, maintenance release 2 (version 4.3, API level 18).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b622167fd6602a14c7e1e493d427c31895dbcca" translate="yes" xml:space="preserve">
          <source>This variable holds a version corresponding to Android KitKat (versions 4.4 &amp;amp; 4.4W, API levels 19 &amp;amp; 20).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc629c8c2851b0e6327c47dae8d89f80c4e86cd" translate="yes" xml:space="preserve">
          <source>This variable holds a version corresponding to Android Lollipop (version 5.0, API level 21).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f94bdd7204a97f8f4fba644f053aada16d40de0e" translate="yes" xml:space="preserve">
          <source>This variable holds a version corresponding to Android Lollipop, maintenance release 1 (version 5.1, API level 22).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="526ac988ec92171dbc5d5644eb7bd7f7a48963c5" translate="yes" xml:space="preserve">
          <source>This variable holds a version corresponding to Android Marshmallow (version 6.0, API level 23).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ec4f4fd8b8c00460452ef358127609a96bd0066" translate="yes" xml:space="preserve">
          <source>This variable holds a version corresponding to Android Nougat (version 7.0, API level 24).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ebe537151691f9584316bb67c08375f13f38fe3" translate="yes" xml:space="preserve">
          <source>This variable holds a version corresponding to Android Nougat, maintenance release 1 (version 7.0, API level 25).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ce362cad82fa1b6eadbdf9d13022207f8a4203f" translate="yes" xml:space="preserve">
          <source>This variable holds a version corresponding to Android Oreo (version 8.0, API level 26).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6052f9d3f51dfd75fec52656c20ebf4198edf2b" translate="yes" xml:space="preserve">
          <source>This variable holds a version corresponding to OS X El Capitan (version 10.11).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76e2aed6b3cbe14cdb41ed4e15d9933ee89d26f4" translate="yes" xml:space="preserve">
          <source>This variable holds a version corresponding to OS X Mavericks (version 10.9).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="734777f4c3b69d18d9a9be44887e8f5f38658d83" translate="yes" xml:space="preserve">
          <source>This variable holds a version corresponding to OS X Yosemite (version 10.10).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb07fe24220751e06ff933ae2ba7f8d44aef954c" translate="yes" xml:space="preserve">
          <source>This variable holds a version corresponding to Windows 10 (version 10.0).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56bcbf355a270f4a052154806493d3608a61a83b" translate="yes" xml:space="preserve">
          <source>This variable holds a version corresponding to Windows 7 (version 6.1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c80f69a97c7eb3ab74899519f69f1a3a2caf8ba7" translate="yes" xml:space="preserve">
          <source>This variable holds a version corresponding to Windows 8 (version 6.2).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a881aca774e821a540749023b1334365403f3cdf" translate="yes" xml:space="preserve">
          <source>This variable holds a version corresponding to Windows 8.1 (version 6.3).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e8e0990b16e5b2581987fedd1ac7a1098bd1570" translate="yes" xml:space="preserve">
          <source>This variable holds an OR combination of &lt;a href=&quot;qstyleoptiontab#CornerWidget-enum&quot;&gt;CornerWidget&lt;/a&gt; values indicating the corner widgets of the tab bar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf29af2e67341e10ccc409a221be7c75f63f636" translate="yes" xml:space="preserve">
          <source>This variable holds an OR combination of the tool button's features</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8885b871574effb80c075fe98b8906a16f3909d4" translate="yes" xml:space="preserve">
          <source>This variable holds the ID of the container of executable content to be run on finalizing the invocation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc38628d4bf58956e74b94c3b35ef6b023e9918d" translate="yes" xml:space="preserve">
          <source>This variable holds the ID specified by the &lt;code&gt;id&lt;/code&gt; attribute in the &lt;code&gt;&amp;lt;invoke&amp;gt;&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3ae87dd2a75f8891b1a93ecda856b4b624995e4" translate="yes" xml:space="preserve">
          <source>This variable holds the URL of the script or content accessing a cookie.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e50c58fc52a827d6caf0348ef87155c44f3fabba" translate="yes" xml:space="preserve">
          <source>This variable holds the URL that was navigated to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2046209560bd3fcbe531b483c2c1669bf80b01e" translate="yes" xml:space="preserve">
          <source>This variable holds the Vulkan version the layer was written against.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8db19acae11c35eba860cd5e3088f460ae11f472" translate="yes" xml:space="preserve">
          <source>This variable holds the alignment flags for the icon of the header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="520aba64afc7fb5223c13a70e8025728b8062187" translate="yes" xml:space="preserve">
          <source>This variable holds the alignment flags for the text of the header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea0b0171c075e4484cef7c0bc98b1b0d7c44eb7e" translate="yes" xml:space="preserve">
          <source>This variable holds the alignment of the decoration for the item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3d3ae6fd232fb4624f180f136b51d023d4114c1" translate="yes" xml:space="preserve">
          <source>This variable holds the alignment of the display value for the item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03c3e4642a629e442d907049274337b6808f4c3c" translate="yes" xml:space="preserve">
          <source>This variable holds the alignment of the group box title</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="822b3c8bb500965cfa362d61bfad8ddf8c831fb1" translate="yes" xml:space="preserve">
          <source>This variable holds the area that should be used for various calculations and painting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03dafbca4b2cce6339663879517f015781877ecc" translate="yes" xml:space="preserve">
          <source>This variable holds the background color on which the focus rectangle is being drawn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e646923ccccc9afb5c4df52cc3dbc0d137670a15" translate="yes" xml:space="preserve">
          <source>This variable holds the bit mask that is applied to the frame id of the filter and the received frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b41d360e65a97e68efc7ed5fbabfc01d1ef1339b" translate="yes" xml:space="preserve">
          <source>This variable holds the collection of selections that will be rendered when passing this paint context to &lt;a href=&quot;qabstracttextdocumentlayout&quot;&gt;QAbstractTextDocumentLayout&lt;/a&gt;'s &lt;a href=&quot;qabstracttextdocumentlayout#draw&quot;&gt;draw&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b3e8063bf7718e257feb5eef17f3dcefff90ad5" translate="yes" xml:space="preserve">
          <source>This variable holds the color of the group box title</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9403811e916ffc7e828f69a9b0d1c8d406dd0710" translate="yes" xml:space="preserve">
          <source>This variable holds the context for evaluating the expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f91dc518c6636599d6aff3480bf14ca44efc0419" translate="yes" xml:space="preserve">
          <source>This variable holds the context to interpret the location in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b515c04de872a25c484bd57226c90f2b75af95a" translate="yes" xml:space="preserve">
          <source>This variable holds the current progress for the progress bar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="861601974a96453a21a52b663a4799660ee6bcc4" translate="yes" xml:space="preserve">
          <source>This variable holds the data model location to write the invocation ID to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee41d45a1f4c4498db5826a10bc8808d6f57e84" translate="yes" xml:space="preserve">
          <source>This variable holds the data model name of the item to be passed as a parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73b8d5d6197cc83e593a04891eb7ffc73233d64d" translate="yes" xml:space="preserve">
          <source>This variable holds the default color that is used for the text, when no color is specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c873f6dfeed7184fc1af4c2958e8437461ffe2c" translate="yes" xml:space="preserve">
          <source>This variable holds the description of the layer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43007c4ec45220e993f2692929fcf3dd17a70442" translate="yes" xml:space="preserve">
          <source>This variable holds the direction of the arrow for the tool button</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c8166723b208281719c29bb76145ce8eb8d0932" translate="yes" xml:space="preserve">
          <source>This variable holds the direction the sort indicator should be drawn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27b088e3adab68b638ea3ff2efe16e928318a35c" translate="yes" xml:space="preserve">
          <source>This variable holds the exposed rectangle, in item coordinates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee5a6ffab407dee1a0beb8a5b010506c24c36d5b" translate="yes" xml:space="preserve">
          <source>This variable holds the expression representing the srcexpr of the invoke element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0898a7c1c6c42d27f0f70af6fc2392a315ea594" translate="yes" xml:space="preserve">
          <source>This variable holds the expression to be evaluated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c5121ffae5c040d1f330c3b660d26a15f539ef4" translate="yes" xml:space="preserve">
          <source>This variable holds the features of the group box frame</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c428eda27ca4e1359789562c8024bb52c0722f7c" translate="yes" xml:space="preserve">
          <source>This variable holds the font metrics that should be used when drawing text in the control</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef3d68066e30d339b039b1d34a9cdc1ed5379eff" translate="yes" xml:space="preserve">
          <source>This variable holds the font that is used for the text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8251dfd11b3c46456ece4304f44a657a48d77094" translate="yes" xml:space="preserve">
          <source>This variable holds the font used for the item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b07f8e0328f7bbe8abe6c2cda666ebbba315dce" translate="yes" xml:space="preserve">
          <source>This variable holds the font used for the menu item text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e6d9c6e41f2da58c818148c1664dcaedf48938" translate="yes" xml:space="preserve">
          <source>This variable holds the format of the selection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc8f19fb9c69dbb3967fa2520b986b628c3c7db3" translate="yes" xml:space="preserve">
          <source>This variable holds the frame format of the matching CAN bus frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="355e397184495db0740a61b106adec1f816db6f0" translate="yes" xml:space="preserve">
          <source>This variable holds the frame id used to filter the incoming frames.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd44e28a169db5be7c1e81645eb66ccc86f1278a" translate="yes" xml:space="preserve">
          <source>This variable holds the header's orientation (horizontal or vertical)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d88ba0904489a78381c4def37829b1b20add50b" translate="yes" xml:space="preserve">
          <source>This variable holds the height of the source rectangle and is used to calculate the height of the target rectangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0907f27647b3691c80e3b1aa61bce04a4417a842" translate="yes" xml:space="preserve">
          <source>This variable holds the horizontal scale of the target rectangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728eac9b6b970c6b72a1065c16657d5804e8bbb7" translate="yes" xml:space="preserve">
          <source>This variable holds the icon for the current item of the combo box</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9599a9ccafd104a3e65690086676cd0a7c030ae8" translate="yes" xml:space="preserve">
          <source>This variable holds the icon for the menu item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49cfc9e1e7e5b67c556343e3f6146e6367f8be47" translate="yes" xml:space="preserve">
          <source>This variable holds the icon for the tab</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b47d4518fd704670c44a3e18e04a6171ca3f495" translate="yes" xml:space="preserve">
          <source>This variable holds the icon for the title bar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe00f3eec4bdb97d772fda604e09ff646a021d72" translate="yes" xml:space="preserve">
          <source>This variable holds the icon for the tool box tab</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b9cfd7a774c16b434d8444ecd71a2a74cb535df" translate="yes" xml:space="preserve">
          <source>This variable holds the icon for the tool button</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4acceb4e687639de8f8401ec3084eeab5c273a0" translate="yes" xml:space="preserve">
          <source>This variable holds the icon of the button</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d700a6b8a7965dea305adabfb22659a52b7eeb3" translate="yes" xml:space="preserve">
          <source>This variable holds the icon of the header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a773f4769761714338aa5841b409014c301c12" translate="yes" xml:space="preserve">
          <source>This variable holds the icon size for the current item of the combo box</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d50923129089486bf7618d10c0668bddb05de1f6" translate="yes" xml:space="preserve">
          <source>This variable holds the interval that should be drawn between tick marks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e29f92b96972e0eea548b30a4cc1cabdaab9ff7a" translate="yes" xml:space="preserve">
          <source>This variable holds the left coordinate of the source rectangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71aa0da247d3ef1b151b11a99194684e2619197" translate="yes" xml:space="preserve">
          <source>This variable holds the left sample</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeeea364c7c119ddda5160117d64904308913ba5" translate="yes" xml:space="preserve">
          <source>This variable holds the line width for drawing the frame</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14ad165a5e2e0ac139d1aa44a46805cfd6a64a70" translate="yes" xml:space="preserve">
          <source>This variable holds the line width for drawing the panel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c123794cff9a6e592395ac58a51e05c1be0b4b95" translate="yes" xml:space="preserve">
          <source>This variable holds the line width for drawing the toolbar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d05ab4affef126151f77e27e2de747b98f2b742" translate="yes" xml:space="preserve">
          <source>This variable holds the location for drawing the toolbar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42f46af17c349cc5fb7c7bc6242064816b08ac46" translate="yes" xml:space="preserve">
          <source>This variable holds the maximum icon width for the icon in the menu item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c568dea1caf044863d4ad56dde6c76b15e8af3e" translate="yes" xml:space="preserve">
          <source>This variable holds the maximum value for the progress bar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33371efeeee2b551550fe357d6d39908a2704916" translate="yes" xml:space="preserve">
          <source>This variable holds the maximum value for the slider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d144574c1d7744ba82b3a96a94ffc572b6234fc8" translate="yes" xml:space="preserve">
          <source>This variable holds the mid-line width for drawing the frame</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1def12ddc3174d54b0b514a3fd5999e1ddb4c157" translate="yes" xml:space="preserve">
          <source>This variable holds the mid-line width for drawing the panel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="754f909ce267a12da8de7683f0c16fee9589c7d5" translate="yes" xml:space="preserve">
          <source>This variable holds the mid-line width for drawing the toolbar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9378c45b85bfcfb029d16a8244cf057324eae2f4" translate="yes" xml:space="preserve">
          <source>This variable holds the minimum value for the progress bar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="add0f1567a223b7fc0367299bb2ab8acc8e66e34" translate="yes" xml:space="preserve">
          <source>This variable holds the minimum value for the slider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9f6da75ae20a4706a74ce50cc50a5bdffda2b4b" translate="yes" xml:space="preserve">
          <source>This variable holds the name of the array that is iterated over</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bcbf2169a311ecad4e66e6e6ab0ad7b32148338" translate="yes" xml:space="preserve">
          <source>This variable holds the name of the data item to assign to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4b58dae077c551acdba1034a7f3f47d8162a6d" translate="yes" xml:space="preserve">
          <source>This variable holds the name of the extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac8ca3cab1720c9cb15c4844842e097e597fe5d3" translate="yes" xml:space="preserve">
          <source>This variable holds the name of the index variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ae0ce617b6b1ff7f490cb1ca0edba19a053572c" translate="yes" xml:space="preserve">
          <source>This variable holds the name of the iteration variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd7bcef50e8aff9f849a7b6eaf67f0b6a0a8a13f" translate="yes" xml:space="preserve">
          <source>This variable holds the name of the layer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb85f2a14151479dbc5bd357c68768050c61a42f" translate="yes" xml:space="preserve">
          <source>This variable holds the name of the parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ca0988b7c329b25618d7315a00a26116f5cb855" translate="yes" xml:space="preserve">
          <source>This variable holds the number of pixel between notches</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="576a6c171a9fe79e9c6ad10cedda6cc9a8f21b53" translate="yes" xml:space="preserve">
          <source>This variable holds the object being styled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05fc3b5694e8a860566f951aa1c225f3282ace8d" translate="yes" xml:space="preserve">
          <source>This variable holds the opacity of the target rectangle, where 0.0 is fully transparent and 1.0 is fully opaque.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="237593610255399320a00ed7f52c94fbb4ba7d60" translate="yes" xml:space="preserve">
          <source>This variable holds the option type of the style option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="624c483e264dcbf22ed9d6987bbc6c2786182080" translate="yes" xml:space="preserve">
          <source>This variable holds the palette that should be used when painting the control</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04946f9455ab3a4917bedcabe2e3722b13d930dc" translate="yes" xml:space="preserve">
          <source>This variable holds the pixmap that is the best match for the given &lt;a href=&quot;qiconengine-scaledpixmapargument#size-var&quot;&gt;size&lt;/a&gt;, &lt;a href=&quot;qiconengine-scaledpixmapargument#mode-var&quot;&gt;mode&lt;/a&gt;, &lt;a href=&quot;qiconengine-scaledpixmapargument#state-var&quot;&gt;state&lt;/a&gt;, and &lt;a href=&quot;qiconengine-scaledpixmapargument#scale-var&quot;&gt;scale&lt;/a&gt;. This is an output parameter that is set after calling &lt;a href=&quot;qiconengine#virtual_hook&quot;&gt;virtual_hook&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="515ebf99a7a0816ad870b02ea271f85c65081aaa" translate="yes" xml:space="preserve">
          <source>This variable holds the popup rectangle for the combobox</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a592c529d99f129fceecf4e39c7b88d358194c0" translate="yes" xml:space="preserve">
          <source>This variable holds the position of the decoration for the item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5a4ffe96bcd79f2363042da868e303831fb4072" translate="yes" xml:space="preserve">
          <source>This variable holds the position of the selected tab in relation to this tab</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa2221d7422b9246a311f28163ad9ecd5ae5024" translate="yes" xml:space="preserve">
          <source>This variable holds the position of the slider handle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4ea9c0e1c9f3698a871c2d22ec738e4af33824c" translate="yes" xml:space="preserve">
          <source>This variable holds the position of the slider's tick marks, if any</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4432de369ede1b3db47d1bdec753c1beb7148d01" translate="yes" xml:space="preserve">
          <source>This variable holds the position of the tab in the tab bar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="330d40b7ca545077b6a7fd458a4bc3d7c474567b" translate="yes" xml:space="preserve">
          <source>This variable holds the position of the tool button</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b43d95f30966c68414f5e4e5c26511541e60ade3" translate="yes" xml:space="preserve">
          <source>This variable holds the position of the toolbar line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19da4c1abc71ab774ea1e5e31e2108b5f83a3b61" translate="yes" xml:space="preserve">
          <source>This variable holds the position of the toolbar within a line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8961d1a0915b29a0034c87def1e7c097b6263c25" translate="yes" xml:space="preserve">
          <source>This variable holds the position within the document, where the cursor line should be drawn.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="284b348a0e2784f2b22979d1b2e86a303ffa2afe" translate="yes" xml:space="preserve">
          <source>This variable holds the rectangle containing all the tabs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e21ab03803d844703be6cfd1b1fab826e73a9952" translate="yes" xml:space="preserve">
          <source>This variable holds the rectangle containing the selected tab</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="952da2671fd142f0c3ef4f02bd6ad41278936a9d" translate="yes" xml:space="preserve">
          <source>This variable holds the rectangle for the entire menu</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79978259f1ad0a0eb60b6d8ff811281198ffd093" translate="yes" xml:space="preserve">
          <source>This variable holds the region for style hints that return a &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31ca472cd6296b5175190ce641a4b51d3be45504" translate="yes" xml:space="preserve">
          <source>This variable holds the requested mode of an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68d3d8a70ebafc91abf5901463a54f0e6a735df8" translate="yes" xml:space="preserve">
          <source>This variable holds the requested mode of the pixmap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb1cc1f3e7376424a53a7c8a3c2f396740a258a5" translate="yes" xml:space="preserve">
          <source>This variable holds the requested scale of the pixmap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3887e67470529129a16381bfa5dac7dc3dc4ae8c" translate="yes" xml:space="preserve">
          <source>This variable holds the requested size of the pixmap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e70753560e8df20f208b11422d6f4c89f551ec41" translate="yes" xml:space="preserve">
          <source>This variable holds the requested state of an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d49ee8829b5e6f213d1f1a5f4c3ff2ac60378b" translate="yes" xml:space="preserve">
          <source>This variable holds the requested state of the pixmap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf503107b65b1a3e3744043a8e1a9c792f20055" translate="yes" xml:space="preserve">
          <source>This variable holds the reserved width for the menu item's shortcut</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2509168a3eefaea4990634b2e1feb37ff31afefb" translate="yes" xml:space="preserve">
          <source>This variable holds the right sample</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70619e7ab3c01af8d25426143465716b590f4b9e" translate="yes" xml:space="preserve">
          <source>This variable holds the rotation of the target rectangle in degrees. The target rectangle is rotated after it has been scaled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e03f3c111ce7f28bd262e86d5833ee4f25e936f7" translate="yes" xml:space="preserve">
          <source>This variable holds the section's position in relation to the other sections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e70172e8a728d1669e40a46e398adf24610a21b" translate="yes" xml:space="preserve">
          <source>This variable holds the section's position in relation to the selected section</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfdd6ebd94a2bebc6eca8628834d31b196415d8d" translate="yes" xml:space="preserve">
          <source>This variable holds the selection's cursor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e1290f2155d7aca2ac539214a7db29f20059dd2" translate="yes" xml:space="preserve">
          <source>This variable holds the shape of the rubber band</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57414f16c55098703cbd52fffd257ab7d1df0f3d" translate="yes" xml:space="preserve">
          <source>This variable holds the shape of the tab bar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f72e00732a1db5c40635695e941d539c3558f04" translate="yes" xml:space="preserve">
          <source>This variable holds the size for the icons</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73c1663f14e713783c495bd25c6bc853883af403" translate="yes" xml:space="preserve">
          <source>This variable holds the size for the left widget on the tab.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9138be7d25f9db210da27d3932998f66f3861d5e" translate="yes" xml:space="preserve">
          <source>This variable holds the size for the right widget on the tab.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ca81cc484e4bd6489af36f8ff18808678709c6f" translate="yes" xml:space="preserve">
          <source>This variable holds the size of the decoration for the item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc34f7c3e491aae8fc3e488ec25363dfeedbf2cb" translate="yes" xml:space="preserve">
          <source>This variable holds the size of the icon for the button</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="978461452f71ba743a8ba75e67980f1900d9cfbe" translate="yes" xml:space="preserve">
          <source>This variable holds the size of the icon for the tool button</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20bf4218ecd54094329d8d979320a7f9baddf294" translate="yes" xml:space="preserve">
          <source>This variable holds the size of the left-corner widget</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed1cd62dd37bd065b4644a2cadb6a6fde1706ea" translate="yes" xml:space="preserve">
          <source>This variable holds the size of the page step of the slider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff94c9086bb2814fd69746473d1b526effb74da6" translate="yes" xml:space="preserve">
          <source>This variable holds the size of the right-corner widget</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ca68dfeee70b6d38d008e8eb49bdfae0ed6660e" translate="yes" xml:space="preserve">
          <source>This variable holds the size of the single step of the slider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdb1d9a2569f2356d83c2f1f094f55ca12e83b07" translate="yes" xml:space="preserve">
          <source>This variable holds the size of the tab bar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e668128f048f8f83872a2c30baf14ffb9300566" translate="yes" xml:space="preserve">
          <source>This variable holds the slider control orientation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79690608730a71bbacde00f0978f79e6ced2b3ee" translate="yes" xml:space="preserve">
          <source>This variable holds the slider's orientation (horizontal or vertical)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e65289058c75a22e1287e05d2d8037cc195a2b94" translate="yes" xml:space="preserve">
          <source>This variable holds the state of the title bar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6464e9b4be66d916d31fe0f4e4e4d73b16eecd49" translate="yes" xml:space="preserve">
          <source>This variable holds the style flags that are used when drawing the control</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de7aa968b1008d604d5d3c42e3ebf7f686fa773d" translate="yes" xml:space="preserve">
          <source>This variable holds the tab shape used to draw the tab; by default &lt;a href=&quot;qtabbar#Shape-enum&quot;&gt;QTabBar::RoundedNorth&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb9b55cd52a57237fe86912a8f83dbcac40195cb" translate="yes" xml:space="preserve">
          <source>This variable holds the tab shape used to draw the tabs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="094b8e0945f1cb44788eabf65fe427b253819fc9" translate="yes" xml:space="preserve">
          <source>This variable holds the text alignment for the text in the &lt;a href=&quot;qprogressbar&quot;&gt;QProgressBar&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b981dfa5ce51ad096e3ad177da2a0440dcf44e9c" translate="yes" xml:space="preserve">
          <source>This variable holds the text for the current item of the combo box</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a33436362f1040fe16f91cdc76a6f8d3e934a65c" translate="yes" xml:space="preserve">
          <source>This variable holds the text for the menu item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d5f407438a18294d657a9dc0e5896463d687c96" translate="yes" xml:space="preserve">
          <source>This variable holds the text for the progress bar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="853fec09dd275439406bb03ba33eb7c2e34eab3f" translate="yes" xml:space="preserve">
          <source>This variable holds the text for the tool box tab</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09b2f951fd69bc77ed366b868ddf35a735ebe926" translate="yes" xml:space="preserve">
          <source>This variable holds the text layout direction that should be used when drawing text in the control</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="523f6cee9cd20901def1a473eaa65c42f3539719" translate="yes" xml:space="preserve">
          <source>This variable holds the text of the button</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a39d7c3e4a8698ea5e8dd72f9ea6d7c223f3c81" translate="yes" xml:space="preserve">
          <source>This variable holds the text of the group box</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c9622f8e3f540a0503f2b816f5d30894feb40a" translate="yes" xml:space="preserve">
          <source>This variable holds the text of the header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93cb0bbd77b17035a422880b35900aa6cb415083" translate="yes" xml:space="preserve">
          <source>This variable holds the text of the tab</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d0d923630dc87952f3037029216802a0012c3f3" translate="yes" xml:space="preserve">
          <source>This variable holds the text of the title bar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fa81a249db5d0412e002627691503005145eeb3" translate="yes" xml:space="preserve">
          <source>This variable holds the text of the tool button</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c649ea4ae5d9d43a9094f27078d596a9987aca8" translate="yes" xml:space="preserve">
          <source>This variable holds the title of the dock window</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18929af6c43ce5827a0abcf433e45229c1fc302f" translate="yes" xml:space="preserve">
          <source>This variable holds the top coordinate of the source rectangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7a010f889ab04cc96c344cf146b0b26db42c5cc" translate="yes" xml:space="preserve">
          <source>This variable holds the type of button symbols to draw for the spin box</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a39fcfc08eef6bac68d32d26f4057974876e969c" translate="yes" xml:space="preserve">
          <source>This variable holds the type of checkmark of the menu item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c165ede0b992906eb907fe80aa34c9794be07666" translate="yes" xml:space="preserve">
          <source>This variable holds the type of element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d989080824f2b05e36159158eb16d6501fbe943" translate="yes" xml:space="preserve">
          <source>This variable holds the type of menu item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a90ff2f672d82a211381a698ad006bcfe1562245" translate="yes" xml:space="preserve">
          <source>This variable holds the type of the frame to be filtered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb931adfbd237d912d4785bfd3f8297e2fbe82c6" translate="yes" xml:space="preserve">
          <source>This variable holds the type of the style hint container</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6859978bef55db2e322ed39ed3dcb99fcf466467" translate="yes" xml:space="preserve">
          <source>This variable holds the unique prefix for this invocation in the context of the state from which it is called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="021aaaeb6d703f5bd3bcefbe121b7d800f55e35d" translate="yes" xml:space="preserve">
          <source>This variable holds the value of the slider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51c0d0b9ec3ecf26c9c7296534abcbe0ab472ab2" translate="yes" xml:space="preserve">
          <source>This variable holds the value used for negotiating HTTP 1.1 during the Next Protocol Negotiation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="306a8202e617d86c5e0b881b3d788ced36873f2e" translate="yes" xml:space="preserve">
          <source>This variable holds the value used for negotiating SPDY 3.0 during the Next Protocol Negotiation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9548035a4866f5e042d41dbeb31933636673a2d" translate="yes" xml:space="preserve">
          <source>This variable holds the variant for style hints that return a &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad7784c974bad13e626d6a02d0f2b8e38311b9ec" translate="yes" xml:space="preserve">
          <source>This variable holds the version of the extension. This is an integer, increasing with each backward compatible change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84281a0cbb7bdd97f96722e4eb5c44c228dbcaa1" translate="yes" xml:space="preserve">
          <source>This variable holds the version of the layer. This is an integer, increasing with each backward compatible change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39467f142f83a2c64ad11a14fe8d43ddc2b7556d" translate="yes" xml:space="preserve">
          <source>This variable holds the version of the style hint return container</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de0b90c4b24f8db4efb1c6617a6c1c996ec8760" translate="yes" xml:space="preserve">
          <source>This variable holds the version of the style option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="938b97f3e0d60cf5db5267f638c80728c12d0290" translate="yes" xml:space="preserve">
          <source>This variable holds the vertical scale of the target rectangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f442b7f481995f2d359805a08bc7078a912875e3" translate="yes" xml:space="preserve">
          <source>This variable holds the widget flags for the title bar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6e442f7c88ba3f12d1304bb16ea216b2294e7e0" translate="yes" xml:space="preserve">
          <source>This variable holds the width of the source rectangle and is used to calculate the width of the target rectangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7053bd70f8b39c0e12a0d5a55f9c63e5f81722aa" translate="yes" xml:space="preserve">
          <source>This variable holds the x coordinate of center point in the target rectangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa044eba093d5ffaa7b98d1130ee14a12a5c3be4" translate="yes" xml:space="preserve">
          <source>This variable holds the x coordinate of the element's position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a1b571b78849dee6e33ee89a4744846408292b" translate="yes" xml:space="preserve">
          <source>This variable holds the y coordinate of the center point in the target rectangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="576bb0d321b0e9eb967c589350635695d50f1b03" translate="yes" xml:space="preserve">
          <source>This variable holds the y coordinate of the element's position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdd96348d3bdd6ac8e816139f3ef57295255b750" translate="yes" xml:space="preserve">
          <source>This variable holds whether events should automatically be forwarded to the invoked service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37855af19030761ef182bebf2c3d9ca6323bb847" translate="yes" xml:space="preserve">
          <source>This variable holds whether or not the combobox is editable or not</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0203cec19dba68cfe4d8580aaf781b182886b70e" translate="yes" xml:space="preserve">
          <source>This variable holds whether the combo box has a frame</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09b210d1795db47eed797b3becfd586764757c9d" translate="yes" xml:space="preserve">
          <source>This variable holds whether the decoration should be highlighted on selected items</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df3f716538337e3bae80f23b7652a5f87d98b35" translate="yes" xml:space="preserve">
          <source>This variable holds whether the dial should wrap or not</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c46ccb9f8830793bb96229eb79f7bf37adf0adc6" translate="yes" xml:space="preserve">
          <source>This variable holds whether the dock window is closable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6242b5ccd2bb77e94cf4593e3d9df2f979ac97e8" translate="yes" xml:space="preserve">
          <source>This variable holds whether the dock window is floatable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27542cd5b61de59960101e378fe1093b2b1d06a5" translate="yes" xml:space="preserve">
          <source>This variable holds whether the dock window is movable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f07297ca0dbe2b9964cba5c1d2872abd14e9a416" translate="yes" xml:space="preserve">
          <source>This variable holds whether the menu as a whole has checkable items or not</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f28b292cd0d05c594db8e7b46d48244174a1223" translate="yes" xml:space="preserve">
          <source>This variable holds whether the menu item is checked or not</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41163aadba9212600ba92399d7a4def334a5672f" translate="yes" xml:space="preserve">
          <source>This variable holds whether the progress bar's appearance is inverted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a63c5daa3a72cb9b83e0659690a10e0c03f9d86" translate="yes" xml:space="preserve">
          <source>This variable holds whether the rubber band is required to be drawn in an opaque style</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43a09a4ebbb579278440a8f535b44a2ec473683a" translate="yes" xml:space="preserve">
          <source>This variable holds whether the spin box has a frame</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d84067b9f8c387244f116af5c1ae035930c526a" translate="yes" xml:space="preserve">
          <source>This variable holds whether the tabbar is in document mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdccf11d046e4697a8b8763c633d1d9fe922edff" translate="yes" xml:space="preserve">
          <source>This variable holds whether the text reads from bottom to top when the progress bar is vertical</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9cc5790e72cf92f445e13d096f0a6d0db8854cc" translate="yes" xml:space="preserve">
          <source>This variable holds whether the toolbar is movable or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="311a507104498512820d2ffb5a5517ded400675b" translate="yes" xml:space="preserve">
          <source>This variable holds whether this is considered a third-party access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="241d159273bf2ea091d68215fafa718aaba850e3" translate="yes" xml:space="preserve">
          <source>This variable holds which buttons of the spin box that are enabled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d797ee891a7862876cc3b855f350b4d6fafbd47e" translate="yes" xml:space="preserve">
          <source>This variable holds which row the tab is currently in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4dcad9c35d306dc764a93c1a0102b3f6ebb2638" translate="yes" xml:space="preserve">
          <source>This variable holds which section of the header is being painted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4db6b92e6f5655d316d56da93076e3c808caf23" translate="yes" xml:space="preserve">
          <source>This variable is also used to specify which additional files will be deployed to embedded devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85efe5a4be4e32ba630f973961872a241e1aad2c" translate="yes" xml:space="preserve">
          <source>This variable is automatically populated from the &lt;a href=&quot;#sources&quot;&gt;SOURCES&lt;/a&gt; variable. The extension of each source file is replaced by .o (Unix) or .obj (Win32). You can add objects to the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7721a1d91d442572c6642ee2c5098972a3953031" translate="yes" xml:space="preserve">
          <source>This variable is currently not used and is always 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3013bfb4bfad2d165ce23971f2463a07f675b5f8" translate="yes" xml:space="preserve">
          <source>This variable is currently unused. You can safely ignore it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d497a13e414cc77325888d170953cef92e53e387" translate="yes" xml:space="preserve">
          <source>This variable is not empty if the &lt;code&gt;lib&lt;/code&gt; template is specified. The value of this variable is typically handled by qmake or &lt;a href=&quot;#qmakespec&quot;&gt;qmake.conf&lt;/a&gt; and rarely needs to be modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8ccb91183f875fe00d45ced05cc5efd04c5d6a2" translate="yes" xml:space="preserve">
          <source>This variable is now obsolete, Objective-C/C++ files (.m and .mm) can be added to the &lt;a href=&quot;#sources&quot;&gt;SOURCES&lt;/a&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="255d07988560dc9b419f8c7e88140f97930b3f4b" translate="yes" xml:space="preserve">
          <source>This variable is specific to &lt;code&gt;.vcproj&lt;/code&gt; files only; it is ignored otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c27e74c9a7291a3388d895a3ccfdf72aa32a9c40" translate="yes" xml:space="preserve">
          <source>This variable is used on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; when building universal binaries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc6bd4037a13a2b65b0627750ccab39c4a5fef8e" translate="yes" xml:space="preserve">
          <source>This variable is used only on Mac OS to set the application icon. Please see &lt;a href=&quot;https://doc.qt.io/qt-5.13/appicon.html&quot;&gt;the application icon documentation&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66c0474ab441d70030b475cc10c379a82596e8fa" translate="yes" xml:space="preserve">
          <source>This variable is used only on Windows for the Visual Studio project generation to put the specified files in the Generated Files folder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac84043a3fd016c194aa4a451116e37749777d35" translate="yes" xml:space="preserve">
          <source>This variable is used only when the &lt;code&gt;warn_off&lt;/code&gt;&lt;a href=&quot;#config&quot;&gt;CONFIG&lt;/a&gt; option is set. The value of this variable is typically handled by qmake or &lt;a href=&quot;#qmakespec&quot;&gt;qmake.conf&lt;/a&gt; and rarely needs to be modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="563266b877d07f820d4d309f016814dfa11745c6" translate="yes" xml:space="preserve">
          <source>This variable is used only when the &lt;code&gt;warn_on&lt;/code&gt;&lt;a href=&quot;#config&quot;&gt;CONFIG&lt;/a&gt; option is set. The value of this variable is typically handled by qmake or &lt;a href=&quot;#qmakespec&quot;&gt;qmake.conf&lt;/a&gt; and rarely needs to be modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44342f2d0019a6c2c766a16febf9570627b9f40e" translate="yes" xml:space="preserve">
          <source>This variable is used to customize the list of options passed to the &lt;a href=&quot;rcc&quot;&gt;Resource Compiler&lt;/a&gt; in each of the build rules where it is used. For example, the following line ensures that the &lt;code&gt;-threshold&lt;/code&gt; and &lt;code&gt;-compress&lt;/code&gt; options are used with particular values each time that &lt;code&gt;rcc&lt;/code&gt; is invoked:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89dedb7e57d1f8cc4829e7c1067dc9f354b3b1da" translate="yes" xml:space="preserve">
          <source>This variable is used to customize the list of options passed to the &lt;a href=&quot;uic&quot;&gt;User Interface Compiler&lt;/a&gt; in each of the build rules where it is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8dfe1d57477856cc69e295caeb52d9c4fba5611" translate="yes" xml:space="preserve">
          <source>This variable is used whenever a literal hash character (&lt;code&gt;#&lt;/code&gt;) is needed in a variable declaration, perhaps as part of a file name or in a string passed to some external application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="932d575f8090d6ad3839f2eff4dd027052d058cd" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes either the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyClipPath&lt;/a&gt; or the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyClipRegion&lt;/a&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d6478466e95fea07b2a4ee93ae8d08bdb40ae2" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyBackground&lt;/a&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb6bec407383ced1245d477287af433732ac9c9" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyBackgroundMode&lt;/a&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60ba8258474e76cc20f436e9e229e7d9f6f5ece4" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyBrush&lt;/a&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="135d575c029f3962c57f9922e65a645ba83caad5" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyBrushOrigin&lt;/a&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f88cf745c7ab3c89fd7bd46f041ce63d2807ee08" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyClipEnabled&lt;/a&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88555217b5ca76efd15dd668e02df83fcfd6ce86" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyClipPath&lt;/a&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7739a8cc5642b90827ba79cec478909f46fa907d" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyClipRegion&lt;/a&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dc92a7f277470c4dec64fc4455b504c4edd5dc5" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyCompositionMode&lt;/a&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11be25e513b50d06a4494068d9f1aa229d9ee955" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyFont&lt;/a&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a56b0d61162e7d7c70156d3492f6e9c71d6eea2" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyHints&lt;/a&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73c98d911c706f336c1e96fefeb8ece51d8adc33" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyPen&lt;/a&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69e85f2a6d67fe86e3a62bb4b4cf80d7613012e2" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyTransform&lt;/a&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ebe50a83e7ef91b133003c8535a0088ebeb780d" translate="yes" xml:space="preserve">
          <source>This variable specifies the location of OpenGL header files to be added to &lt;a href=&quot;#includepath&quot;&gt;INCLUDEPATH&lt;/a&gt; when building a target with OpenGL ES 2 support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b60efa0a9902e9c0dc044059f73cc9b15d56b73" translate="yes" xml:space="preserve">
          <source>This variable stores the meta-object for the class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef2dc52470f2f8ea64f5447cdfb37d7b0460a064" translate="yes" xml:space="preserve">
          <source>This variable, when used with the &lt;code&gt;subdirs&lt;/code&gt;&lt;a href=&quot;#template&quot;&gt;template&lt;/a&gt; specifies the names of all subdirectories or project files that contain parts of the project that need to be built. Each subdirectory specified using this variable must contain its own project file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e319b42d6c8d30be8776ff2dd387be0ddc37a40" translate="yes" xml:space="preserve">
          <source>This version adds the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="522e89e1f28dbb79282d329bbfaaaba3463d0ffa" translate="yes" xml:space="preserve">
          <source>This version adds the layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f2cb21cca9cc80bf4f7b8371033fa6b0fc1ebbd" translate="yes" xml:space="preserve">
          <source>This version of the function disregards &lt;a href=&quot;qlcdnumber#mode-prop&quot;&gt;mode&lt;/a&gt;() and &lt;a href=&quot;qlcdnumber#smallDecimalPoint-prop&quot;&gt;smallDecimalPoint&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a356554250f4bcbd115d4d97d897c5a442ade6ae" translate="yes" xml:space="preserve">
          <source>This version only scrolls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b08d9c1cec489b0443ca77438b984f68e850519a" translate="yes" xml:space="preserve">
          <source>This version produces the same result set but in the expected order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4b94ef2f488af426d3211c139a4f9de4987abe1" translate="yes" xml:space="preserve">
          <source>This version repaints a rectangle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="382fe17b3497192ab88821152a1323744cd284d3" translate="yes" xml:space="preserve">
          <source>This version repaints a rectangle (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8c25dae0e4946a1844d1484dd2f17e737c17b40" translate="yes" xml:space="preserve">
          <source>This version repaints a region</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b7389b58125c38c756978b2bb14e1f2afacd60a" translate="yes" xml:space="preserve">
          <source>This version updates a rectangle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a4b7917e3389f9d585adbe4129dbe98ee7ac411" translate="yes" xml:space="preserve">
          <source>This version updates a rectangle (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9b476c0478f854701abdec5fd877fd5154302b7" translate="yes" xml:space="preserve">
          <source>This version uses the &lt;a href=&quot;http://www.w3.org/TR/xpath-functions/#func-not&quot;&gt;not&lt;/a&gt; and &lt;a href=&quot;http://www.w3.org/TR/xpath-functions/#func-normalize-space&quot;&gt;normalize-space()&lt;/a&gt; functions. &lt;code&gt;normalize-space(method))&lt;/code&gt; returns the contents of the method element as a string, but with all the whitespace normalized, i.e., the string value of each &lt;code&gt;&amp;lt;step&amp;gt;&lt;/code&gt; element will have its whitespace normalized, and then all the normalized step values will be concatenated. If that string is empty, then &lt;code&gt;not()&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; and the predicate is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8a08cd0b5f807e5dd5c09be7683f1ccf8fcd333" translate="yes" xml:space="preserve">
          <source>This version will reach its destination position in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85c1f0bf7c3fad18fae966ca1b2f86a16097541b" translate="yes" xml:space="preserve">
          <source>This view does not display horizontal or vertical headers; to display a list of items with a horizontal header, use &lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a9c1973b42b493b382fd9fa06b3493b70c95842" translate="yes" xml:space="preserve">
          <source>This virtual event handler receives all events for the managed widget. &lt;a href=&quot;graphicsview#qgraphicslayout&quot;&gt;QGraphicsLayout&lt;/a&gt; uses this event handler to listen for layout related events such as geometry changes, layout changes or layout direction changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6900842a2e401d91860300b5f752623331ad878f" translate="yes" xml:space="preserve">
          <source>This virtual function discards any cached size hint information. You should always call this function if you change the return value of the &lt;a href=&quot;qgraphicslayoutitem#sizeHint&quot;&gt;sizeHint&lt;/a&gt;() function. Subclasses must always call the base implementation when reimplementing this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0f339a3db83372a623a17ae29bb3f470294d686" translate="yes" xml:space="preserve">
          <source>This virtual function is called after each invocation of &lt;a href=&quot;qopenglwindow#paintGL&quot;&gt;paintGL&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63509dee1110a50d0db31d7957dbaf660dd68c6f" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt; when the direction of the animation is changed. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4439eba594e21fbd00a4cf3615327d51f7681d7c" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt; when the state of the animation is changed from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc3d68df9aa990e7d1403087669d0a619dbe5cce" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qaxbase#control-prop&quot;&gt;setControl&lt;/a&gt;() and creates the requested COM object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f20034c3837f8ab16ee47ecceaa7f8b0b6b3ae5" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qgraphicseffect&quot;&gt;QGraphicsEffect&lt;/a&gt; to notify the effect that the source has changed. If the effect applies any cache, then this cache must be purged in order to reflect the new appearance of the source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71296ee4c5f141586335f2af33fd83737e7612b2" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; to notify custom items that some part of the item's state changes. By reimplementing this function, you can react to a change, and in some cases (depending on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b61b2ffc0de0ba3b6dbb62ca23b895feb6edfae" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; to draw the window frame for windows using</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="956c762b6b2ac6b65af94931cf4fd7ae51def03d" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qlocalserver&quot;&gt;QLocalServer&lt;/a&gt; when a new connection is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab1fff1cbe154a34b90fef992a2c123160547ded" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt; when a new connection is available. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fe0e8c86e57c97b576741cc5f9c5836240e289d" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qvariantanimation&quot;&gt;QVariantAnimation&lt;/a&gt; whenever the current value changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c158a5454a58d2b7067c7d0ff2397603847f9b5" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; to clean up page</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44418bca78ab4293e572085c6e00f17e3ef86fca" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; to determine whether the &lt;b&gt;Next&lt;/b&gt; or &lt;b&gt;Finish&lt;/b&gt; button should be enabled or disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1db68dacf3385a4a6dfb3201e5cb7f6417620caa" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; to find out which page to show when the user clicks the &lt;b&gt;Next&lt;/b&gt; button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee9d6a8dd18f17ed3dbe3b9013475a636becbed7" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; to prepare page</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c774840ff114df26e52dc2f1490ca8c3dc585c0b" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; when the user clicks &lt;b&gt;Next&lt;/b&gt; or &lt;b&gt;Finish&lt;/b&gt; to perform some last-minute validation. If it returns &lt;code&gt;true&lt;/code&gt;, the next page is shown (or the wizard finishes); otherwise, the current page stays up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41fc458329d08e7cba071ef34fa2fe045432db33" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qwizard#cleanupPage&quot;&gt;QWizard::cleanupPage&lt;/a&gt;() when the user leaves the page by clicking &lt;b&gt;Back&lt;/b&gt; (unless the &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;QWizard::IndependentPages&lt;/a&gt; option is set).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8f241643c89b7f827872e67662da6eaff928f5e" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qwizard#initializePage&quot;&gt;QWizard::initializePage&lt;/a&gt;() to prepare the page just before it is shown either as a result of &lt;a href=&quot;qwizard#restart&quot;&gt;QWizard::restart&lt;/a&gt;() being called, or as a result of the user clicking &lt;b&gt;Next&lt;/b&gt;. (However, if the &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;QWizard::IndependentPages&lt;/a&gt; option is set, this function is only called the first time the page is shown.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c2c9d5ee24df339edb6858ee82108b82ded03a4" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qwizard#nextId&quot;&gt;QWizard::nextId&lt;/a&gt;() to find out which page to show when the user clicks the &lt;b&gt;Next&lt;/b&gt; button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c239fea67f69219fdac0e910808a6a4fffa5a20a" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qwizard#validateCurrentPage&quot;&gt;QWizard::validateCurrentPage&lt;/a&gt;() when the user clicks &lt;b&gt;Next&lt;/b&gt; or &lt;b&gt;Finish&lt;/b&gt; to perform some last-minute validation. If it returns &lt;code&gt;true&lt;/code&gt;, the next page is shown (or the wizard finishes); otherwise, the current page stays up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56bac9c33269a3bd4442827b04f65b772ebb58c9" translate="yes" xml:space="preserve">
          <source>This virtual function is called by the &lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt; if the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b478efddfaa34ede968666a2e20ad0a597f5a87" translate="yes" xml:space="preserve">
          <source>This virtual function is called by the &lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt; to determine whether</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="841a589463889e4c5197615bc177139d102a2e98" translate="yes" xml:space="preserve">
          <source>This virtual function is called every time the animation's current value changes. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0578249a2d20a0f60522ed3b978da38fbc15ae26" translate="yes" xml:space="preserve">
          <source>This virtual function is called once before the first call to &lt;a href=&quot;qopenglwidget#paintGL&quot;&gt;paintGL&lt;/a&gt;() or &lt;a href=&quot;qopenglwidget#resizeGL&quot;&gt;resizeGL&lt;/a&gt;(). Reimplement it in a subclass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b8c54e05a4a1cb4a76484fde26bd2c67588f11c" translate="yes" xml:space="preserve">
          <source>This virtual function is called once before the first call to &lt;a href=&quot;qopenglwindow#paintGL&quot;&gt;paintGL&lt;/a&gt;() or &lt;a href=&quot;qopenglwindow#resizeGL&quot;&gt;resizeGL&lt;/a&gt;(). Reimplement it in a subclass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a927f34505fa33b3cd0fad16c550a3cfa3d4069f" translate="yes" xml:space="preserve">
          <source>This virtual function is called once during the lifetime of the window, at some point after making it visible for the first time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ec5aae87d4f32d58510c151a32da5ba7db8db4a" translate="yes" xml:space="preserve">
          <source>This virtual function is called right before graphics initialization, that ends up in calling &lt;a href=&quot;qvulkanwindowrenderer#initResources&quot;&gt;initResources&lt;/a&gt;(), is about to begin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d67cf8415772650cfe6ac48b554aa1d735d9885" translate="yes" xml:space="preserve">
          <source>This virtual function is called to pop up the dialog. It must be reimplemented in subclasses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98bea5b49f9b6c0cc606ac3e564e7811d99443ea" translate="yes" xml:space="preserve">
          <source>This virtual function is called twice for all items by the &lt;a href=&quot;qgraphicsscene#advance&quot;&gt;QGraphicsScene::advance&lt;/a&gt;() slot. In the first phase, all items are called with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9fd56ec85aa7b65d3d045620f8b6724791b34f7" translate="yes" xml:space="preserve">
          <source>This virtual function is called when it is time to create the renderer's graphics resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="941828d233fc2c24770ed23be717d838014315cf" translate="yes" xml:space="preserve">
          <source>This virtual function is called when something has been connected to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce06f6e822a1d76a4c93103531bc17e5ef62ff92" translate="yes" xml:space="preserve">
          <source>This virtual function is called when something has been disconnected from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3688ee300d710ceca6a9485b0fd09ece22f601fb" translate="yes" xml:space="preserve">
          <source>This virtual function is called when swapchain, framebuffer or renderpass related initialization can be performed. Swapchain and related resources are reset and then recreated in response to window resize events, and therefore a pair of calls to &lt;a href=&quot;qvulkanwindowrenderer#initResources&quot;&gt;initResources&lt;/a&gt;() and &lt;a href=&quot;qvulkanwindowrenderer#releaseResources&quot;&gt;releaseResources&lt;/a&gt;() can have multiple calls to initSwapChainResources() and &lt;a href=&quot;qvulkanwindowrenderer#releaseSwapChainResources&quot;&gt;releaseSwapChainResources&lt;/a&gt;() calls in-between.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ff430fb97514a894ac72a5e067d3f2ef150ab9e" translate="yes" xml:space="preserve">
          <source>This virtual function is called when swapchain, framebuffer or renderpass related resources must be released.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ef7e464f42e33491a6877229f301717508e9ee" translate="yes" xml:space="preserve">
          <source>This virtual function is called when the logical device (VkDevice) is lost, meaning some operation failed with &lt;code&gt;VK_ERROR_DEVICE_LOST&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cde034e660af543b35b086b3f0ce9a72c6757fda" translate="yes" xml:space="preserve">
          <source>This virtual function is called when the physical device is lost, meaning the creation of the logical device fails with &lt;code&gt;VK_ERROR_DEVICE_LOST&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc04d37894f605793081663229da204ee9aaf47c" translate="yes" xml:space="preserve">
          <source>This virtual function is called when the renderer's graphics resources must be released.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84b0ef869ea87904f66359886fc9e9d7d4f1463e" translate="yes" xml:space="preserve">
          <source>This virtual function is called whenever the query changes. The default implementation does nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b68db5c44313cb9b3659e59bac1c4632083edb2" translate="yes" xml:space="preserve">
          <source>This virtual function is called whenever the widget has been resized. Reimplement it in a subclass. The new size is passed in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db0f755e6b7ae620fc79e7b65eec6ee877d4016c" translate="yes" xml:space="preserve">
          <source>This virtual function is called whenever the widget needs to be painted. Reimplement it in a subclass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae8aab40d878e290da18464e535e827c0549203e" translate="yes" xml:space="preserve">
          <source>This virtual function is called whenever the window contents needs to be painted. Reimplement it in a subclass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4668ccebd420a018db1ede54c80cace4c92bc1a" translate="yes" xml:space="preserve">
          <source>This virtual function is used by the date time edit whenever it needs to display</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf2b75f6351d98995e4ed78bc37b13d445fadbb" translate="yes" xml:space="preserve">
          <source>This virtual function is used by the datetime edit whenever it needs to interpret text entered by the user as a value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09f2550fa4babbe68c7842dd60a5737f98fcc228" translate="yes" xml:space="preserve">
          <source>This virtual function is used by the spin box whenever it needs to display the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d69280eefff2269c575325998a086c46761d22b" translate="yes" xml:space="preserve">
          <source>This virtual function is used by the spin box whenever it needs to interpret</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c405498f9c38255177b6d74bf542ba9dcb8f4cf" translate="yes" xml:space="preserve">
          <source>This virtual function provides the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fec2616dcd24120412b5d8942b65049210f31207" translate="yes" xml:space="preserve">
          <source>This virtual function receives events to an object and should return true if the event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6672e1c9f0d3adb4dd2260d5548db14f0dda97cf" translate="yes" xml:space="preserve">
          <source>This virtual function receives events to this item. Reimplement this function to intercept events before they are dispatched to the specialized event handlers &lt;a href=&quot;qgraphicsitem#contextMenuEvent&quot;&gt;contextMenuEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#focusInEvent&quot;&gt;focusInEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#focusOutEvent&quot;&gt;focusOutEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#hoverEnterEvent&quot;&gt;hoverEnterEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#hoverMoveEvent&quot;&gt;hoverMoveEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#hoverLeaveEvent&quot;&gt;hoverLeaveEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#keyPressEvent&quot;&gt;keyPressEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#keyReleaseEvent&quot;&gt;keyReleaseEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#mousePressEvent&quot;&gt;mousePressEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#mouseReleaseEvent&quot;&gt;mouseReleaseEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#mouseMoveEvent&quot;&gt;mouseMoveEvent&lt;/a&gt;(), and &lt;a href=&quot;qgraphicsitem#mouseDoubleClickEvent&quot;&gt;mouseDoubleClickEvent&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1c583bba7e245e22af676c919ca81689f423067" translate="yes" xml:space="preserve">
          <source>This virtual function returns &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Invalid&lt;/a&gt; if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7556dfdcb4dc09b27eebe4c90d8139deb15c5b8b" translate="yes" xml:space="preserve">
          <source>This virtual function returns a shape representing the area where this item is opaque. An area is opaque if it is filled using an opaque brush or color (i.e., not transparent).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dd7ada00be4c60522221343cb17a5be2c783e4e" translate="yes" xml:space="preserve">
          <source>This virtual function returns the linear interpolation between variants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c6b16ff1b43a04f8a3703c5feb07b19d379cbc0" translate="yes" xml:space="preserve">
          <source>This virtual function sets the geometry of the &lt;a href=&quot;qgraphicslayoutitem&quot;&gt;QGraphicsLayoutItem&lt;/a&gt; to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f1c4758810e6eec4fb7cc58134afca0db174f3f" translate="yes" xml:space="preserve">
          <source>This virtual handler is called after a new item was added or inserted at position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c13b944c5ab2c6654337265f9d9c7b8cf7c64503" translate="yes" xml:space="preserve">
          <source>This virtual handler is called after a new tab was added or inserted at position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cb5fad9529e2351ea0bebb9724c997310c17fca" translate="yes" xml:space="preserve">
          <source>This virtual handler is called after a tab was removed from position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f74c88ee9bf748fe1f354277472491f4a0065832" translate="yes" xml:space="preserve">
          <source>This virtual handler is called after an item was removed from position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a74d3fa9528aae922df538bdd47a6afa5d004e7" translate="yes" xml:space="preserve">
          <source>This virtual handler is called when &lt;a href=&quot;qabstractbutton#checked-prop&quot;&gt;setChecked&lt;/a&gt;() is used, unless it is called from within &lt;a href=&quot;qabstractbutton#nextCheckState&quot;&gt;nextCheckState&lt;/a&gt;(). It allows subclasses to reset their intermediate button states.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ea2758e02fe95cb122a8c0c636f7e8e83e947d" translate="yes" xml:space="preserve">
          <source>This virtual handler is called when a button is clicked. The default implementation calls &lt;a href=&quot;qabstractbutton#checked-prop&quot;&gt;setChecked&lt;/a&gt;(!&lt;a href=&quot;qabstractbutton#checked-prop&quot;&gt;isChecked&lt;/a&gt;()) if the button &lt;a href=&quot;qabstractbutton#checkable-prop&quot;&gt;isCheckable&lt;/a&gt;(). It allows subclasses to implement intermediate button states.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4754c9d8af8e9d83b1008e6455ca40b8b5c202d0" translate="yes" xml:space="preserve">
          <source>This virtual handler is called when the scroll bars are moved by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccc57a8b2847f964748b51b0f38ae760039cd6cb" translate="yes" xml:space="preserve">
          <source>This virtual handler is called whenever the tab layout changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac4cbaf1280a5ea681a8d5f11aa2483deb189e68" translate="yes" xml:space="preserve">
          <source>This virtual method is provided as a callback to allow re-binding a target frame buffer object or context when different &lt;a href=&quot;qopenglpaintdevice&quot;&gt;QOpenGLPaintDevice&lt;/a&gt; instances are issuing draw calls alternately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0d164bea92aeb9b50de5f40b66c7436a8591859" translate="yes" xml:space="preserve">
          <source>This virtual method is provided to enable overriding the behavior of &lt;a href=&quot;qnetworkreply#ignoreSslErrors&quot;&gt;ignoreSslErrors&lt;/a&gt;(). &lt;a href=&quot;qnetworkreply#ignoreSslErrors&quot;&gt;ignoreSslErrors&lt;/a&gt;() is a public wrapper for this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b607e31416c963de8ce7086970eb04b7f742ca2" translate="yes" xml:space="preserve">
          <source>This virtual method is provided to enable overriding the behavior of &lt;a href=&quot;qnetworkreply#setSslConfiguration&quot;&gt;setSslConfiguration&lt;/a&gt;(). &lt;a href=&quot;qnetworkreply#setSslConfiguration&quot;&gt;setSslConfiguration&lt;/a&gt;() is a public wrapper for this method. If you override this method use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec7a780397dcfd2b9843b16c0bb60185e881a240" translate="yes" xml:space="preserve">
          <source>This virtual method is provided to enable overriding the behavior of &lt;a href=&quot;qnetworkreply#sslConfiguration&quot;&gt;sslConfiguration&lt;/a&gt;(). &lt;a href=&quot;qnetworkreply#sslConfiguration&quot;&gt;sslConfiguration&lt;/a&gt;() is a public wrapper for this method. The configuration will be returned in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ab2cc0db50331c8618146101da3c2a5fe2d3d2e" translate="yes" xml:space="preserve">
          <source>This widget lets the user choose a &lt;a href=&quot;qkeysequence&quot;&gt;QKeySequence&lt;/a&gt;, which is usually used as a shortcut. The recording is initiated when the widget receives the focus and ends one second after the user releases the last key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75ed49118d938284114a599ababeab8020814f1f" translate="yes" xml:space="preserve">
          <source>This widget must enable focus setting in order to get the keyboard input focus, i.e. it must call &lt;a href=&quot;qwidget#focusPolicy-prop&quot;&gt;setFocusPolicy&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="036036620494ee25eed6da897cd5436c1c63f3c7" translate="yes" xml:space="preserve">
          <source>This widget receives all keyboard events until &lt;a href=&quot;qwidget#releaseKeyboard&quot;&gt;releaseKeyboard&lt;/a&gt;() is called; other widgets get no keyboard events at all. Mouse events are not affected. Use &lt;a href=&quot;qwidget#grabMouse&quot;&gt;grabMouse&lt;/a&gt;() if you want to grab that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9363f96107b01677909803495e64bc5811ff7cea" translate="yes" xml:space="preserve">
          <source>This widget receives all mouse events until &lt;a href=&quot;qwidget#releaseMouse&quot;&gt;releaseMouse&lt;/a&gt;() is called; other widgets get no mouse events at all. Keyboard events are not affected. Use &lt;a href=&quot;qwidget#grabKeyboard&quot;&gt;grabKeyboard&lt;/a&gt;() if you want to grab that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea3a8670981c22b971d10d95378de37a75441210" translate="yes" xml:space="preserve">
          <source>This widget works like the standard Windows resize handle. In the X11 version this resize handle generally works differently from the one provided by the system if the X11 window manager does not support necessary modern post-ICCCM specifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfedc7e87c2f263e8e0a388ac84b0e6bf71afc7f" translate="yes" xml:space="preserve">
          <source>This will access the &lt;code&gt;title&lt;/code&gt; value for the first item in the model:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e147857bbca4b81d17023b8d837054f64b38fc6" translate="yes" xml:space="preserve">
          <source>This will again control which item gets resized when the user drags a handle, and which handle gets hidden when an item is told to hide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b132deae3408b0cb56f26c8ee9a3dccb4f891de5" translate="yes" xml:space="preserve">
          <source>This will allow for better interoperability between &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;, &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; and friends and STL-style algorithms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="277bf4441c381bf1e386238b69f7a7da3010df7b" translate="yes" xml:space="preserve">
          <source>This will also affect copies of this &lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fe6ff0919fbc91c77431dafc0b14ba3850b76af" translate="yes" xml:space="preserve">
          <source>This will also cause &lt;a href=&quot;qgeocodereply#error&quot;&gt;error&lt;/a&gt;() and &lt;a href=&quot;qgeocodereply#finished&quot;&gt;finished&lt;/a&gt;() signals to be emitted, in that order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a670a15de482ae9bf67f9d2d4ec83c8007f6dc23" translate="yes" xml:space="preserve">
          <source>This will also cause &lt;a href=&quot;qgeoroutereply#error&quot;&gt;error&lt;/a&gt;() and &lt;a href=&quot;qgeoroutereply#finished&quot;&gt;finished&lt;/a&gt;() signals to be emitted, in that order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7edec0ff2c95f8d70dd606f22c875d2e07bde3eb" translate="yes" xml:space="preserve">
          <source>This will append the following declaration to the translation file, where you can fill in either &quot;LTR&quot; or &quot;RTL&quot; as the translation for the locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15cc4de4c05eb938c588c9bfca1d469be2683ecf" translate="yes" xml:space="preserve">
          <source>This will be &lt;code&gt;1.0&lt;/code&gt; on cameras that do not support digital zoom.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="615c3954135cb391fa54891e740c07fdd3420a6f" translate="yes" xml:space="preserve">
          <source>This will be &lt;code&gt;1.0&lt;/code&gt; on cameras that do not support optical zoom.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b0e707ab24edb74218ca76138e6c8f1beb18e29" translate="yes" xml:space="preserve">
          <source>This will be done in &lt;a href=&quot;qml-qt-labs-wavefrontmesh-wavefrontmesh&quot;&gt;WavefrontMesh&lt;/a&gt; by an orthographic projection onto an appropriate plane.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7cf2d5498481f0813874f118399dc67d50132a7" translate="yes" xml:space="preserve">
          <source>This will be the screen where QWindows are initially shown, unless otherwise specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="899c4b4536bdc80cc6987168fbe983bb79e19294" translate="yes" xml:space="preserve">
          <source>This will capture the text from the first set of capturing parentheses (counting capturing left parentheses from left to right). The parentheses are counted from 1 since cap(0) is the whole matched regexp (equivalent to '&amp;amp;' in most regexp engines).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="856c9ae28d54a18becaec5f4a1937d44845114db" translate="yes" xml:space="preserve">
          <source>This will cause &lt;a href=&quot;qprintpreviewwidget&quot;&gt;QPrintPreviewWidget&lt;/a&gt; to create an internal, default constructed &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; object, which will be used to generate the preview.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eddf8b5010dba06228708f8215a7d9f12343e8c" translate="yes" xml:space="preserve">
          <source>This will cause an index file called &lt;code&gt;qtcreator.index&lt;/code&gt; to be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e5182bb265c9238ab5299fe49ce30ec2c80bfcf" translate="yes" xml:space="preserve">
          <source>This will cause any QML which imports the &quot;MinehuntCore&quot; type namespace and attempts to use the type to produce an error message:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d423d949fdcbcb72b1e3e5fb713515ad7f4a437d" translate="yes" xml:space="preserve">
          <source>This will center the widget on the page and scale it so that it fits the page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de7faa4633ecd7c8cd9691cfbb247b4c45975a0f" translate="yes" xml:space="preserve">
          <source>This will create a global variable called &lt;code&gt;myObject&lt;/code&gt; in the script environment. The variable serves as a proxy to the underlying C++ object. Note that the name of the script variable can be anything; i.e., it is not dependent upon &lt;a href=&quot;qobject#objectName-prop&quot;&gt;QObject::objectName&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f2ae01b624ecf2b4a4c21845e84539e20e8462a" translate="yes" xml:space="preserve">
          <source>This will create an internal &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; object, which will use the system default printer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="677aae3d07bcdd8367ec284c0045d6e3e4b3c1cc" translate="yes" xml:space="preserve">
          <source>This will do nothing if the reply is finished.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d628a39e0927171621f656bb464c0262f36c69d" translate="yes" xml:space="preserve">
          <source>This will emit &lt;a href=&quot;qwebengineprofile#downloadRequested&quot;&gt;QWebEngineProfile::downloadRequested&lt;/a&gt;() after the download has started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="284694b874ffcc3b4d4793bffcb0c036695d5a87" translate="yes" xml:space="preserve">
          <source>This will enable proper sorting of numeric digits, so that e.g. 100 sorts after 99.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d8ca382dadb24c447f301b2d3d6ecfa8cfd0d41" translate="yes" xml:space="preserve">
          <source>This will export &lt;code&gt;MyWidget&lt;/code&gt; and &lt;code&gt;MyWidget2&lt;/code&gt; as COM objects that can be created by COM clients, and will register &lt;code&gt;MySubType&lt;/code&gt; as a type that can be used in properties and parameters of &lt;code&gt;MyWidget&lt;/code&gt; and &lt;code&gt;MyWidget2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f89d394dc550923959a6d1b528accb7b2f6bea7f" translate="yes" xml:space="preserve">
          <source>This will flip the x and y dimensions of the rectangle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="476ebdd5ba4112aee7ca44cd4e1658e370f4f291" translate="yes" xml:space="preserve">
          <source>This will force cookies and HTTP cache to be in memory, but also force all other normally persistent data to be stored in memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="849bc2e76dd7e86f7415f233f4a11d51ff0cdb4f" translate="yes" xml:space="preserve">
          <source>This will generate a &quot;tap&quot; event with the map contents available in _event.data inside the state machine. In QML:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c3db3de14b51d84ccd920cbf22752590b083ac0" translate="yes" xml:space="preserve">
          <source>This will give the full screen window a 1-pixel border, thus enabling the other top level windows to appear on top.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a45f037699a619d5874d66b5c257e05eff5bf38" translate="yes" xml:space="preserve">
          <source>This will give us a 200 x 200 square area, with the origin (0, 0) in the center, that we can draw on. What we draw will show up in the largest possible square that will fit in the widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df547cf209710a4977a4bb9f85cd2acc6a37adda" translate="yes" xml:space="preserve">
          <source>This will include the &lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; class in the &lt;code&gt;io&lt;/code&gt; group, which means, for example, that &lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; will appear on the list created by calling the &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#group-command&quot;&gt;\group&lt;/a&gt; command with the &lt;code&gt;io&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f61a6a0cf375c2bc778adc26ea837b44488576" translate="yes" xml:space="preserve">
          <source>This will invalidate the choice of previous configurations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="389d5b2be3bfaad066fdc3c8ef80d24fecb5ddbb" translate="yes" xml:space="preserve">
          <source>This will invoke &lt;a href=&quot;qabstractspinbox#stepBy&quot;&gt;stepBy&lt;/a&gt;(-1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8436917bc6ee82fe226655c22fd15c9c2b2b3d0b" translate="yes" xml:space="preserve">
          <source>This will invoke &lt;a href=&quot;qabstractspinbox#stepBy&quot;&gt;stepBy&lt;/a&gt;(-10)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4da02021c15eeaca6215b4496509614b8d7b5c9c" translate="yes" xml:space="preserve">
          <source>This will invoke &lt;a href=&quot;qabstractspinbox#stepBy&quot;&gt;stepBy&lt;/a&gt;(1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27bc2ec02f3e6bd4d3ebd42f03e6e9b5ca137d08" translate="yes" xml:space="preserve">
          <source>This will invoke &lt;a href=&quot;qabstractspinbox#stepBy&quot;&gt;stepBy&lt;/a&gt;(10)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c361f955cbee070b6e115d654627f5e0f1fd81d" translate="yes" xml:space="preserve">
          <source>This will override the default size constraints set by &lt;a href=&quot;qlayout&quot;&gt;QLayout&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ef2e3442f082330a6b8fd9a80dec814f03c190" translate="yes" xml:space="preserve">
          <source>This will reinterpret the text and emit a signal even if the value has not changed since last time a signal was emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="845b3953fb337f3c791fef08bf856268c771984c" translate="yes" xml:space="preserve">
          <source>This will release any system resources used and free any buffers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7090cff90aff46e9c484b6ef6282e925fe44b8f" translate="yes" xml:space="preserve">
          <source>This will repeat the loop continuously until it is explicitly stopped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ad79594adc71c1c87b8b8bb8b09093f27f11a0" translate="yes" xml:space="preserve">
          <source>This will reset the &lt;a href=&quot;qvideosurfaceformat#viewport&quot;&gt;viewport&lt;/a&gt;() to fill the entire frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccd74e262e785f0cf32b709f41874ce3db5439b8" translate="yes" xml:space="preserve">
          <source>This will result in pressed only being &lt;code&gt;true&lt;/code&gt; upon mouse presses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc32d9cdc98bf929f6a2e73f3ee0282e561e1a6" translate="yes" xml:space="preserve">
          <source>This will result in:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24a36dddc522a3a3d2d645de49905bc771f9a887" translate="yes" xml:space="preserve">
          <source>This will revert any pending changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ded94c11b3ce6c1de1ac4fda1deb463e30df170" translate="yes" xml:space="preserve">
          <source>This will run</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ff457f1b772bc1df9980caf6f0cbe131da80368" translate="yes" xml:space="preserve">
          <source>This will set the amplitude of the bounce or the amplitude of the elastic &quot;spring&quot; effect. The higher the number, the higher the amplitude.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3a446d026f83a835d044b6af3bc71dd0978adb1" translate="yes" xml:space="preserve">
          <source>This will set the value of three settings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a81034d89ae405983d2a1a4a25f9f1cce863436" translate="yes" xml:space="preserve">
          <source>This will start recording if the format specified is supported by the input device (you can check this with &lt;a href=&quot;qaudiodeviceinfo#isFormatSupported&quot;&gt;QAudioDeviceInfo::isFormatSupported&lt;/a&gt;(). In case there are any snags, use the &lt;a href=&quot;qaudioinput#error&quot;&gt;error&lt;/a&gt;() function to check what went wrong. We stop recording in the &lt;code&gt;stopRecording()&lt;/code&gt; slot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="956453e02e41fb5d6b3c94178c58d8a36f4a874d" translate="yes" xml:space="preserve">
          <source>This will tell qmake to run</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aefdda8426346ec46e84446c33d4416b4b120470" translate="yes" xml:space="preserve">
          <source>This works with both modules, and will reduce the amount of work needed when the migration begins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1aa3f4e65b25c9f69327542e78e4599fe389cae" translate="yes" xml:space="preserve">
          <source>This would (internally) create a node in proxyNode, which (again internally/automatically) connects to the provided registry (given by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19862f15a89457ba93c92d6e0cde7f15acb20987" translate="yes" xml:space="preserve">
          <source>This would result in an error, since objects can only be dynamically destroyed if they were dynamically created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d8e710aec27ae55326fe38bc95b8a3eabc55f60" translate="yes" xml:space="preserve">
          <source>This would result in the following tags:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80c28aedd68e139003aba62e14864b48b10d1c08" translate="yes" xml:space="preserve">
          <source>This wrapper class can now be used in .NET code, e.g. using C++, C#, Visual Basic or any other programming language available for .NET.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20b4e9fb6e2f48f97b31b3d601865802f6c5439a" translate="yes" xml:space="preserve">
          <source>This zone is being used for autofocusing and is currently in focus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f52a4a83dce0236375fe5434f42943fb5b4a77a6" translate="yes" xml:space="preserve">
          <source>This zone is currently being used for autofocusing, but is not in focus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26914f45ba244bd2884905f8fd0fe2f008f89a9f" translate="yes" xml:space="preserve">
          <source>This zone is not valid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1f45588e59d57b8bdeae181abab634c1e924d72" translate="yes" xml:space="preserve">
          <source>This zone may be used for autofocusing, but is not currently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0447f3617fd9349cab495e45c9c74400e68aa2e5" translate="yes" xml:space="preserve">
          <source>Those character classes only match ASCII characters by default when using &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt;: for instance, &lt;code&gt;\d&lt;/code&gt; matches exactly a character in the &lt;code&gt;0-9&lt;/code&gt; ASCII range. It is possible to change this behaviour by using the &lt;a href=&quot;qregularexpression#PatternOption-enum&quot;&gt;UseUnicodePropertiesOption&lt;/a&gt; pattern option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d97e8e200de5c4db6f0251368b8ba8cb97a9434" translate="yes" xml:space="preserve">
          <source>Those classes that wrap creatable coclasses (i.e. coclasses that are not marked as &lt;code&gt;noncreatable&lt;/code&gt;) have a default constructor; this is typically a single class of type &lt;code&gt;Application&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efa77051db8332dcf6b9ce4f1bd6d9eb6c27334b" translate="yes" xml:space="preserve">
          <source>Though this assumes that the origin of the childrenRect is 0,0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a85fe45efc5207d5e166f439531439a3bf96588" translate="yes" xml:space="preserve">
          <source>Thread Affinity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b66b6cbe04365929e922b75680e179e46127f3a3" translate="yes" xml:space="preserve">
          <source>Thread Safety</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd7dbb9b1d7cd43de427372cc1cad6df83f4e456" translate="yes" xml:space="preserve">
          <source>Thread Support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8803d3e5c78674672f989d114e22d5045772703" translate="yes" xml:space="preserve">
          <source>Thread Support in Qt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d8441a8e15b132b589dbea20e3462aa34aeaae1" translate="yes" xml:space="preserve">
          <source>Thread can be controlled using signals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5ef0f326fcc428db4fe05c11a48baaaad932f29" translate="yes" xml:space="preserve">
          <source>Thread can be monitored through a &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac581572a548d642723328b1049dc4349fefc89e" translate="yes" xml:space="preserve">
          <source>Thread can receive data updates through signals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c664a16940b02b1131476bec0d5424eac148ffe" translate="yes" xml:space="preserve">
          <source>Thread can run an event loop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4b7c38b48824028c061b2715262f748a4ed322" translate="yes" xml:space="preserve">
          <source>Thread priority can be specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26bd4d40a8e776e33b552dabcffeb47911034ed2" translate="yes" xml:space="preserve">
          <source>Thread support is enabled. This is enabled when CONFIG includes &lt;code&gt;qt&lt;/code&gt;, which is the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70472f453d318be74d62719df909f639ad359586" translate="yes" xml:space="preserve">
          <source>Thread-Safety</source>
          <target state="translated">Thread-Safety</target>
        </trans-unit>
        <trans-unit id="e48afd792893cdd980ff448874ca186e881b8310" translate="yes" xml:space="preserve">
          <source>Thread-Support in Qt Modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2533dafc39a8884cf4d26ce3c29a2f9eb66ad89c" translate="yes" xml:space="preserve">
          <source>Threaded Render Loop (&quot;threaded&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddbedcd4fc98fdc7c72b003acb15b95ed41dccdf" translate="yes" xml:space="preserve">
          <source>Threaded Rendering and Render Target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5541d0b76d127f6a3c54bbc247ffcc1b6c2bbc25" translate="yes" xml:space="preserve">
          <source>Threading</source>
          <target state="translated">Threading</target>
        </trans-unit>
        <trans-unit id="835e9fd215f9dc523b754674da31ace0d2935df2" translate="yes" xml:space="preserve">
          <source>Threading Classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecde27b345e48e3da056d368cb2fbb2fd1fba016" translate="yes" xml:space="preserve">
          <source>Threading and Concurrent Programming</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8b8bfd64ca6f976c70417c5d82b48e34cd7f3b0" translate="yes" xml:space="preserve">
          <source>Threads and QObjects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a21891c5fcbab7a6dfbc42562aa03c56f87692e3" translate="yes" xml:space="preserve">
          <source>Threads that are unused for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9143c4b1f873358473af2611451d630715df5ca0" translate="yes" xml:space="preserve">
          <source>Threads that are unused for a certain amount of time will expire. The default expiry timeout is 30000 milliseconds (30 seconds). This can be changed using &lt;a href=&quot;qthreadpool#expiryTimeout-prop&quot;&gt;setExpiryTimeout&lt;/a&gt;(). Setting a negative expiry timeout disables the expiry mechanism.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020f75643a2a2107248c5e694479886e498821dd" translate="yes" xml:space="preserve">
          <source>Three enum values are useful in applications that can be run in right-to-left mode:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a3b28d4d8f70ab3cb09cd00360a53b06b617f52" translate="yes" xml:space="preserve">
          <source>Three important macros are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b43767a7f1a6f5de1ee79114a35ec5ff58e2f896" translate="yes" xml:space="preserve">
          <source>Three pixel wide pen</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7997a0ba69821008e888f473fc1b436a68ee7d19" translate="yes" xml:space="preserve">
          <source>ThresholdMask</source>
          <target state="translated">ThresholdMask</target>
        </trans-unit>
        <trans-unit id="c138a1dc1845757c354e090b07439e2866f6f3b3" translate="yes" xml:space="preserve">
          <source>ThresholdMask (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f65bb37fb08b42169aac7fa73010536aa505f69c" translate="yes" xml:space="preserve">
          <source>ThresholdMask QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02277b4b187d971bd1305669d03b9b4aad8b563b" translate="yes" xml:space="preserve">
          <source>ThresholdMask.cached</source>
          <target state="translated">ThresholdMask.cached</target>
        </trans-unit>
        <trans-unit id="f44ee4710d1c6188665391602c1fc16a4ece8479" translate="yes" xml:space="preserve">
          <source>ThresholdMask.maskSource</source>
          <target state="translated">ThresholdMask.maskSource</target>
        </trans-unit>
        <trans-unit id="6b2e176e2d1df4dbc22be451861b3396710a8aba" translate="yes" xml:space="preserve">
          <source>ThresholdMask.source</source>
          <target state="translated">ThresholdMask.source</target>
        </trans-unit>
        <trans-unit id="1d4e6841db4a51236e1a7dec0b9a62e2d04146fa" translate="yes" xml:space="preserve">
          <source>ThresholdMask.spread</source>
          <target state="translated">ThresholdMask.spread</target>
        </trans-unit>
        <trans-unit id="a463dde102e660e0113f0d6e991c44302d271c8a" translate="yes" xml:space="preserve">
          <source>ThresholdMask.threshold</source>
          <target state="translated">ThresholdMask.threshold</target>
        </trans-unit>
        <trans-unit id="a52d5f111c4afbc84e5767cebb33e27dfde4a3a8" translate="yes" xml:space="preserve">
          <source>ThresholdType : &lt;a href=&quot;qml-enumeration&quot;&gt;enumeration&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c92b15f801a35369cf31e6a5edc0d98424e66bf" translate="yes" xml:space="preserve">
          <source>Throttling control is provided by the &lt;a href=&quot;qfuturewatcher#setPendingResultsLimit&quot;&gt;setPendingResultsLimit&lt;/a&gt;() function. When the number of pending &lt;a href=&quot;qfuturewatcher#resultReadyAt&quot;&gt;resultReadyAt&lt;/a&gt;() or &lt;a href=&quot;qfuturewatcher#resultsReadyAt&quot;&gt;resultsReadyAt&lt;/a&gt;() signals exceeds the limit, the computation represented by the future will be throttled automatically. The computation will resume once the number of pending signals drops below the limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c5769c40b690a1e332cca42f1cd8b7defaece35" translate="yes" xml:space="preserve">
          <source>Through &lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt;, Graphics View is able to deeply integrate the client widget features including its cursors, tooltips, mouse, tablet and keyboard events, child widgets, animations, pop-ups (e.g., &lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt; or &lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt;), and the widget's input focus and activation. &lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt; even integrates the embedded widget's tab order so that you can tab in and out of embedded widgets. You can even embed a new &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; into your scene to provide complex nested scenes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="002ccfbbd57d9093aaba13afbfa71b54c81f307f" translate="yes" xml:space="preserve">
          <source>Through a script engine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dac4c6f8274f79f09bf5f3ff09e92a2beb81598a" translate="yes" xml:space="preserve">
          <source>Throughout our documentation and examples, &lt;a href=&quot;qtqml-syntax-objectattributes&quot;&gt;QML object attributes&lt;/a&gt; are always structured in the following order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d13b17b5b7778b415a2152e64b89d7afb15c57d2" translate="yes" xml:space="preserve">
          <source>Throughout the documentation, the terms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4c48fb501ba99ce70d4c3ba720bb3ac4b7d5a46" translate="yes" xml:space="preserve">
          <source>Throws a run-time error (exception) with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fc6880de4bd0dd8277032c198b6ced2641df8fa" translate="yes" xml:space="preserve">
          <source>Throws an error and sets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91fb51be98c5e0d17bdece8530009789c41d0894" translate="yes" xml:space="preserve">
          <source>ThumbnailImage</source>
          <target state="translated">ThumbnailImage</target>
        </trans-unit>
        <trans-unit id="7c0ff893241c9f24af90152047e7deb53591e5b2" translate="yes" xml:space="preserve">
          <source>ThumbnailToolBar (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="183375e3cb989da638012defa6030d68af15e0f5" translate="yes" xml:space="preserve">
          <source>ThumbnailToolBar QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e69b0a3abd02f867774e1a9aff8042dd74e8dccd" translate="yes" xml:space="preserve">
          <source>ThumbnailToolBar.iconicLivePreviewRequested()</source>
          <target state="translated">ThumbnailToolBar.iconicLivePreviewRequested()</target>
        </trans-unit>
        <trans-unit id="4eaf9801ee040c5ecb2af1184d0b1a7f10e3527f" translate="yes" xml:space="preserve">
          <source>ThumbnailToolBar.iconicLivePreviewSource</source>
          <target state="translated">ThumbnailToolBar.iconicLivePreviewSource</target>
        </trans-unit>
        <trans-unit id="f4fefa332e3ed341e162dce0a5842e064a32878a" translate="yes" xml:space="preserve">
          <source>ThumbnailToolBar.iconicNotificationsEnabled</source>
          <target state="translated">ThumbnailToolBar.iconicNotificationsEnabled</target>
        </trans-unit>
        <trans-unit id="6cf36efc979b3d1b2cc6cec8ae9e856d3a5b47eb" translate="yes" xml:space="preserve">
          <source>ThumbnailToolBar.iconicThumbnailRequested()</source>
          <target state="translated">ThumbnailToolBar.iconicThumbnailRequested()</target>
        </trans-unit>
        <trans-unit id="00f7fa8e84d7c9961435267bcb49ac6832ed1bdc" translate="yes" xml:space="preserve">
          <source>ThumbnailToolBar.iconicThumbnailSource</source>
          <target state="translated">ThumbnailToolBar.iconicThumbnailSource</target>
        </trans-unit>
        <trans-unit id="12238375d9d613083f190c972e988cad147f185d" translate="yes" xml:space="preserve">
          <source>ThumbnailToolButton (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ca14b74f1402cd558556c6abdb100139afbab5c" translate="yes" xml:space="preserve">
          <source>ThumbnailToolButton QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b05830b2f5041e34f3da3e6a3d29c8cb74869e61" translate="yes" xml:space="preserve">
          <source>ThumbnailToolButton.clicked()</source>
          <target state="translated">ThumbnailToolButton.clicked()</target>
        </trans-unit>
        <trans-unit id="3f6fbda0428229e44c933f41dead508216a6ef6e" translate="yes" xml:space="preserve">
          <source>ThumbnailToolButton.dismissOnClick</source>
          <target state="translated">ThumbnailToolButton.dismissOnClick</target>
        </trans-unit>
        <trans-unit id="f2b4ca4b22686255eacdd954c4fb32e4a1d8fabf" translate="yes" xml:space="preserve">
          <source>ThumbnailToolButton.enabled</source>
          <target state="translated">ThumbnailToolButton.enabled</target>
        </trans-unit>
        <trans-unit id="9a6d37c2bd18bba81aa1278f57c6b2ac7a6c6207" translate="yes" xml:space="preserve">
          <source>ThumbnailToolButton.flat</source>
          <target state="translated">ThumbnailToolButton.flat</target>
        </trans-unit>
        <trans-unit id="6b7ade172f57ad2500c79d00cbcdffbaeb093e6a" translate="yes" xml:space="preserve">
          <source>ThumbnailToolButton.iconSource</source>
          <target state="translated">ThumbnailToolButton.iconSource</target>
        </trans-unit>
        <trans-unit id="06540195376074f727e535ede7fd1cf7b95b0499" translate="yes" xml:space="preserve">
          <source>ThumbnailToolButton.interactive</source>
          <target state="translated">ThumbnailToolButton.interactive</target>
        </trans-unit>
        <trans-unit id="e6d1533a55ddefb5e17f5a9de1f42d3b23116ff8" translate="yes" xml:space="preserve">
          <source>ThumbnailToolButton.tooltip</source>
          <target state="translated">ThumbnailToolButton.tooltip</target>
        </trans-unit>
        <trans-unit id="bdb395b644cbdf8580ba24a5ed7f8f55619ac333" translate="yes" xml:space="preserve">
          <source>ThumbnailToolButton.visible</source>
          <target state="translated">ThumbnailToolButton.visible</target>
        </trans-unit>
        <trans-unit id="2980e11b5d0d1dd98d00c7aac7cd7bf503584c61" translate="yes" xml:space="preserve">
          <source>Thus the string finally becomes &lt;code&gt;&quot;Hello500&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fec10f52b29474d42bef01a882ea4e9d05317b2f" translate="yes" xml:space="preserve">
          <source>Thus, if a QML document named &quot;MyButton.qml&quot; exists, it provides the definition of the &quot;MyButton&quot; type, which may be used in a QML application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a92156ef45f0e284e93eea70bf821593a335a365" translate="yes" xml:space="preserve">
          <source>Thus, in the &lt;a href=&quot;qtwebengine-platform-notes#macos&quot;&gt;macOS&lt;/a&gt; Hunspell case, Qt WebEngine will look in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b6a4f79c67e1c0cfc398c2295408f2eb4b88ca9" translate="yes" xml:space="preserve">
          <source>Tibetan</source>
          <target state="translated">Tibetan</target>
        </trans-unit>
        <trans-unit id="9e4207afe874af7c13c701477ed16800ec9d54b5" translate="yes" xml:space="preserve">
          <source>TickCounter</source>
          <target state="translated">TickCounter</target>
        </trans-unit>
        <trans-unit id="b78cd499da296994e464c7d76ef18bedae252f69" translate="yes" xml:space="preserve">
          <source>Ticks are placed according to &lt;a href=&quot;qml-qtcharts-valueaxis#tickAnchor-prop&quot;&gt;tickAnchor&lt;/a&gt; and &lt;a href=&quot;qml-qtcharts-valueaxis#tickInterval-prop&quot;&gt;tickInterval&lt;/a&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="136379b6caffb661288f697884852acfa67f5abc" translate="yes" xml:space="preserve">
          <source>Ticks are placed according to &lt;a href=&quot;qvalueaxis#tickAnchor-prop&quot;&gt;tickAnchor&lt;/a&gt; and &lt;a href=&quot;qvalueaxis#tickInterval-prop&quot;&gt;tickInterval&lt;/a&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b42998e43935d3d04465715e4ce7c0857379df7" translate="yes" xml:space="preserve">
          <source>Ticks are placed evenly across the axis range. The &lt;a href=&quot;qml-qtcharts-valueaxis#tickCount-prop&quot;&gt;tickCount&lt;/a&gt; value specifies the number of ticks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de1dbf7d98c07647b8fc25c78f10bce49c508e71" translate="yes" xml:space="preserve">
          <source>Ticks are placed evenly across the axis range. The &lt;a href=&quot;qvalueaxis#tickCount-prop&quot;&gt;tickCount&lt;/a&gt; value specifies the number of ticks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dd2c660983753cf7cd7ed0bfc6dd2c1219c9bc2" translate="yes" xml:space="preserve">
          <source>Tile</source>
          <target state="translated">Tile</target>
        </trans-unit>
        <trans-unit id="c6cd47d4bb73d5278a94ee40065ff606037a97e1" translate="yes" xml:space="preserve">
          <source>Tile background color. Defaults to &lt;code&gt;green&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="439446deb2e08642170a83f9665053b3b8ed4333" translate="yes" xml:space="preserve">
          <source>Tile cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54ea380b09bac1ed2b70cb8862b530ce5a74fd62" translate="yes" xml:space="preserve">
          <source>Tile foreground (text) color. Defaults to &lt;code&gt;light&lt;/code&gt;. This option is only available for Windows Store apps on Windows 8 and Windows RT.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f328e9d87e7209966b6a06a4bc96fabfe1b2ce19" translate="yes" xml:space="preserve">
          <source>TileHorizontally</source>
          <target state="translated">TileHorizontally</target>
        </trans-unit>
        <trans-unit id="d3ef36c1e8fa2e8700ba50396bd44452c4c3c0c2" translate="yes" xml:space="preserve">
          <source>TileVertically</source>
          <target state="translated">TileVertically</target>
        </trans-unit>
        <trans-unit id="cc7b623df0df256f506f3321e45473f007a12d72" translate="yes" xml:space="preserve">
          <source>Tilt Sensor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="488a01a4d6577dfcddec95940066692710ba5cbd" translate="yes" xml:space="preserve">
          <source>TiltReading (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe6799bec4d352c0acdaadc4278323aa15d8dd36" translate="yes" xml:space="preserve">
          <source>TiltReading QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f925c9ea69fde68de8b1b1d49ee5c4a870f89a26" translate="yes" xml:space="preserve">
          <source>TiltReading.xRotation</source>
          <target state="translated">TiltReading.xRotation</target>
        </trans-unit>
        <trans-unit id="2c5e3411813d08f41e9e1d43840ea1316763c970" translate="yes" xml:space="preserve">
          <source>TiltReading.yRotation</source>
          <target state="translated">TiltReading.yRotation</target>
        </trans-unit>
        <trans-unit id="5bfc07826ce0912b4b44d7cb4a15a824a93e3e6a" translate="yes" xml:space="preserve">
          <source>TiltSensor (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="038a5fd6c1a16ecaa0c1cb2602c35ff35d00afd4" translate="yes" xml:space="preserve">
          <source>TiltSensor QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cb02b21861cb5e6aa4dbb2dcb660099089a41bd" translate="yes" xml:space="preserve">
          <source>TiltSensor.calibrate()</source>
          <target state="translated">TiltSensor.calibrate()</target>
        </trans-unit>
        <trans-unit id="6c82e6dd86807ee3db07e3c82bec1ae1ce00b08b" translate="yes" xml:space="preserve">
          <source>Time</source>
          <target state="translated">Time</target>
        </trans-unit>
        <trans-unit id="df9f2f189f171f2004391a431fbb4e10d42a352b" translate="yes" xml:space="preserve">
          <source>Time  (in nano seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbe0c64294419b5fef0170f7a67cb31cb0d683dc" translate="yes" xml:space="preserve">
          <source>Time - sort by time modified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f86ab85e19a02d7d3c7e99d395f0a203eb9132d" translate="yes" xml:space="preserve">
          <source>Time Zone Offsets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d458cd29adea646a8c3463a3bccc45a16b8250d4" translate="yes" xml:space="preserve">
          <source>Time attribute of the object being transferred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eecacec77fd46eb2ec90c3b6a07a5f60b8e4cf81" translate="yes" xml:space="preserve">
          <source>Time stamp of GPS data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0de70db1beefa1adababbd94b08c968a2d4e9f60" translate="yes" xml:space="preserve">
          <source>Time-based, by using timestamp, clock sequence, and MAC network card address (if available) for the node sections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18530197f7f6f6937126d7540f0f7aaa7f8e88f2" translate="yes" xml:space="preserve">
          <source>TimeExample QML extension plugin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef1258d8d00628ceb619d9da1eb4d43759e2fd1a" translate="yes" xml:space="preserve">
          <source>TimeStamp</source>
          <target state="translated">TimeStamp</target>
        </trans-unit>
        <trans-unit id="0fd27374c7411b33295d582909be774e2a78db2c" translate="yes" xml:space="preserve">
          <source>TimeStamp Class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81b8c6c243681242dc92a6d859791b3ad56a6c59" translate="yes" xml:space="preserve">
          <source>TimeStamp::TimeStamp(&lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</source>
          <target state="translated">TimeStamp::TimeStamp(&lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e1cacc334413ef3d92e1dd019bcd202b0733fa9f" translate="yes" xml:space="preserve">
          <source>Timeline for controlling animations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65885a7a634228e9ea2d6401b354ae3bb1b825f7" translate="yes" xml:space="preserve">
          <source>TimeoutTransition</source>
          <target state="translated">TimeoutTransition</target>
        </trans-unit>
        <trans-unit id="55a6ffceeb1e147d0ce610c500ac4544d992cce3" translate="yes" xml:space="preserve">
          <source>TimeoutTransition (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a98ebcbf261e141495b4c747eefd519e988bda40" translate="yes" xml:space="preserve">
          <source>TimeoutTransition QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da970b5ad07cc1a02dc0ec779307a5f772ff0450" translate="yes" xml:space="preserve">
          <source>TimeoutTransition.timeout</source>
          <target state="translated">TimeoutTransition.timeout</target>
        </trans-unit>
        <trans-unit id="9d9cec22f36fd2bb99d5fe8c4723347bec202ca5" translate="yes" xml:space="preserve">
          <source>Timer</source>
          <target state="translated">Timer</target>
        </trans-unit>
        <trans-unit id="cf87b74e515e894f3a1db836dd9d04b0dbb942ee" translate="yes" xml:space="preserve">
          <source>Timer (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab6f4e525fe8eaa3723f7554b2f61279c783e947" translate="yes" xml:space="preserve">
          <source>Timer QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bc4dfb8ac0e86d1780fa4cf1cfd3efe49a8a923" translate="yes" xml:space="preserve">
          <source>Timer events are sent at regular intervals to objects that have started one or more timers. Each timer has a unique identifier. A timer is started with &lt;a href=&quot;qobject#startTimer&quot;&gt;QObject::startTimer&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519ab8eca94f5aae9736637347aaf35527562209" translate="yes" xml:space="preserve">
          <source>Timer events for objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b5b6ac99e699a92e95ebc7551671535ee232ef7" translate="yes" xml:space="preserve">
          <source>Timer types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72ae00dc956dc5a1e6d4aff7c13ecbb7d79e0839" translate="yes" xml:space="preserve">
          <source>Timer.interval</source>
          <target state="translated">Timer.interval</target>
        </trans-unit>
        <trans-unit id="ec45e0cbea8d8b92cad6657591fdf2375ce1baa7" translate="yes" xml:space="preserve">
          <source>Timer.repeat</source>
          <target state="translated">Timer.repeat</target>
        </trans-unit>
        <trans-unit id="b69c30408b43f65301d2ca6bbb1d4253ff625226" translate="yes" xml:space="preserve">
          <source>Timer.restart()</source>
          <target state="translated">Timer.restart()</target>
        </trans-unit>
        <trans-unit id="dea26de05bee1dc789346800c02929ca8161f959" translate="yes" xml:space="preserve">
          <source>Timer.running</source>
          <target state="translated">Timer.running</target>
        </trans-unit>
        <trans-unit id="68fca54c892ed8115fe16a2ca295987b82732716" translate="yes" xml:space="preserve">
          <source>Timer.start()</source>
          <target state="translated">Timer.start()</target>
        </trans-unit>
        <trans-unit id="464ee22a6605fc707ee61cbe4b6acf2a62a27242" translate="yes" xml:space="preserve">
          <source>Timer.stop()</source>
          <target state="translated">Timer.stop()</target>
        </trans-unit>
        <trans-unit id="fdded1eca4bccd92062623639fb22ead2d036f83" translate="yes" xml:space="preserve">
          <source>Timer.triggered()</source>
          <target state="translated">Timer.triggered()</target>
        </trans-unit>
        <trans-unit id="b3da4b736217304342be104a49c53e113a53fbaa" translate="yes" xml:space="preserve">
          <source>Timer.triggeredOnStart</source>
          <target state="translated">Timer.triggeredOnStart</target>
        </trans-unit>
        <trans-unit id="497d4d77970dc0f8cf3c3cdf9b8eb52fc9462a39" translate="yes" xml:space="preserve">
          <source>TimerInfo Struct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41837d3d18a0f8ec43137476fdd1a1f438dde38e" translate="yes" xml:space="preserve">
          <source>TimerInfo::TimerInfo()</source>
          <target state="translated">TimerInfo::TimerInfo()</target>
        </trans-unit>
        <trans-unit id="c2990280c73174d6dd6bcfa47f7ffa872db60cf8" translate="yes" xml:space="preserve">
          <source>TimerInfo::TimerInfo(int</source>
          <target state="translated">TimerInfo::TimerInfo(int</target>
        </trans-unit>
        <trans-unit id="7fde205fa220e53c1f989fd481500574b7c371f1" translate="yes" xml:space="preserve">
          <source>TimerInfo::interval</source>
          <target state="translated">TimerInfo::interval</target>
        </trans-unit>
        <trans-unit id="5e0bc1c92ffd3fafc8f5364aecd3aefd01fbb69b" translate="yes" xml:space="preserve">
          <source>TimerInfo::timerId</source>
          <target state="translated">TimerInfo::timerId</target>
        </trans-unit>
        <trans-unit id="f1dff395b38157a299b7aa9757924f8c112f2473" translate="yes" xml:space="preserve">
          <source>TimerInfo::timerType</source>
          <target state="translated">TimerInfo::timerType</target>
        </trans-unit>
        <trans-unit id="841cd03a97cd854590864d79ae48ee749c5e902e" translate="yes" xml:space="preserve">
          <source>Timers</source>
          <target state="translated">Timers</target>
        </trans-unit>
        <trans-unit id="b5b491aac3bd26ca261e3f188a1a01228d0ddf6b" translate="yes" xml:space="preserve">
          <source>Timestamps values are microseconds since a fixed point. You can use timestamps to see how far apart two sensor readings are.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecd84ddfb662a7926d34883ae55f89c17a0f006c" translate="yes" xml:space="preserve">
          <source>Timing Considerations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0df3c5d2117fe663102f4996198057ecd01aab54" translate="yes" xml:space="preserve">
          <source>Tint is most useful when a subtle change is intended to be conveyed due to some event; you can then use tinting to more effectively tune the visible color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d53e4d941a0d8d4d4277ad07d57d91297b8749b7" translate="yes" xml:space="preserve">
          <source>TinyCBOR, version 0.6+patches</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f495111da803097b7b34ec71369826f0c6d2bf4" translate="yes" xml:space="preserve">
          <source>Tip end of a stylus-like device (the narrow end of the pen).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8911538c52924d154c723c7d1e6f7c9cb22c0e61" translate="yes" xml:space="preserve">
          <source>Tips For QML Application Developers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f1d7cd80b33ea00a648efe4bbe44baacebce1fa" translate="yes" xml:space="preserve">
          <source>Tips for Porting Existing HTML5 Canvas Applications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcd890ad3d53d8eb5a934d619caa4aa389f9c1a5" translate="yes" xml:space="preserve">
          <source>Tips for Using Layouts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="768e0c1c69573fb588f61f1308a015c11468e05f" translate="yes" xml:space="preserve">
          <source>Title</source>
          <target state="translated">Title</target>
        </trans-unit>
        <trans-unit id="bdca972c5ffd1202222bd6267a51a55f1b7c6823" translate="yes" xml:space="preserve">
          <source>Title Bar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda33cd4c2e9a12d11bb3188904556c81e873947" translate="yes" xml:space="preserve">
          <source>Title for the menu as a submenu or in a menubar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="608fe97562074e03db3a4737b42d1567b2d29e15" translate="yes" xml:space="preserve">
          <source>Title from column axis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="049f3e1ee87dde6ecea41a19b6ec22bdfecb597f" translate="yes" xml:space="preserve">
          <source>Title from row axis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba70763c45afbe7628d9df71fb42e84afbcb149" translate="yes" xml:space="preserve">
          <source>Title from value axis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f35e8ff8046388721784170578e6dee8fd68a29f" translate="yes" xml:space="preserve">
          <source>Title from x-axis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1a0dfcc4afcf4f96d1a178a82f77a6981428d49" translate="yes" xml:space="preserve">
          <source>Title from y-axis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5e8cd54095e433e45e8483a1d49349d827862f1" translate="yes" xml:space="preserve">
          <source>Title from z-axis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f75cecf904f02abe41d1a56b16a1a591ae2602c" translate="yes" xml:space="preserve">
          <source>To abort saving due to an application error, call &lt;a href=&quot;qsavefile#cancelWriting&quot;&gt;cancelWriting&lt;/a&gt;(), so that even a call to &lt;a href=&quot;qsavefile#commit&quot;&gt;commit&lt;/a&gt;() later on will not save.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97e5691d0f32e4dfd78ace3c639c1d308ab03c22" translate="yes" xml:space="preserve">
          <source>To accept or reject a request, set &lt;a href=&quot;qml-qtwebengine-webenginenavigationrequest#action-prop&quot;&gt;action&lt;/a&gt; to &lt;code&gt;WebEngineNavigationRequest.AcceptRequest&lt;/code&gt; or &lt;code&gt;WebEngineNavigationRequest.IgnoreRequest&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e293dbb3d776a5b1f2ed284c6fca2a8d3bc965bd" translate="yes" xml:space="preserve">
          <source>To accept other forms of data, these functions must be reimplemented:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165782c939ab77fa1f04d4150188d5bff4c40caf" translate="yes" xml:space="preserve">
          <source>To access a database with &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; or &lt;a href=&quot;qsqlquerymodel&quot;&gt;QSqlQueryModel&lt;/a&gt;, create and open one or more database connections. Database connections are normally identified by connection name,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b6c415b7285bddbdd278bf09b46c96af58892f5" translate="yes" xml:space="preserve">
          <source>To access additional functions, applications can use &lt;a href=&quot;qvulkaninstance#getInstanceProcAddr&quot;&gt;QVulkanInstance::getInstanceProcAddr&lt;/a&gt;() and vkGetDeviceProcAddr(). Applications can also decide to link to a Vulkan library directly, as many implementations export function symbols for the core commands. See &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkGetInstanceProcAddr.html&quot;&gt;the man page for vkGetInstanceProcAddr&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d5be5fdb6e2b3a7c9eaf46b7f8dca39c132d2e9" translate="yes" xml:space="preserve">
          <source>To access additional functions, applications can use &lt;a href=&quot;qvulkaninstance#getInstanceProcAddr&quot;&gt;QVulkanInstance::getInstanceProcAddr&lt;/a&gt;() and vkGetDeviceProcAddr(). Applications can also decide to link to a Vulkan library directly, as platforms with an appropriate loader will typically export function symbols for the core commands. See &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkGetInstanceProcAddr.html&quot;&gt;the man page for vkGetInstanceProcAddr&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2205cee1ece12f6b7a1282a11830cf39346886e" translate="yes" xml:space="preserve">
          <source>To access array elements, use the &lt;a href=&quot;qjsvalue#setProperty-1&quot;&gt;setProperty(quint32 arrayIndex, const QJSValue &amp;amp;value)&lt;/a&gt; overload instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c4c23a2465e91f3424ab7d6bb54b4b2ab91828" translate="yes" xml:space="preserve">
          <source>To access individual segments you can use standard list accessors: 'path.length' indicates the number of objects and 'path[index starting from zero]' gives the actual object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ad53d66c568536d8e5fd405545ae4e9ac4aba0" translate="yes" xml:space="preserve">
          <source>To access individual segments you can use standard list accessors: 'segments.length' indicates the number of objects and 'segments[index starting from zero]' gives the actual objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ed7ace94bb589e27eba567ca1aa49d7d1a82b12" translate="yes" xml:space="preserve">
          <source>To access the &lt;code&gt;VkInstance&lt;/code&gt; handle the &lt;a href=&quot;qvulkaninstance&quot;&gt;QVulkanInstance&lt;/a&gt; wraps, call &lt;a href=&quot;qvulkaninstance#vkInstance&quot;&gt;vkInstance&lt;/a&gt;(). To resolve Vulkan functions, call &lt;a href=&quot;qvulkaninstance#getInstanceProcAddr&quot;&gt;getInstanceProcAddr&lt;/a&gt;(). For core Vulkan commands manual resolving is not necessary as they are provided via the &lt;a href=&quot;qvulkanfunctions&quot;&gt;QVulkanFunctions&lt;/a&gt; and &lt;a href=&quot;qvulkandevicefunctions&quot;&gt;QVulkanDeviceFunctions&lt;/a&gt; objects accessible via &lt;a href=&quot;qvulkaninstance#functions&quot;&gt;functions&lt;/a&gt;() and &lt;a href=&quot;qvulkaninstance#deviceFunctions&quot;&gt;deviceFunctions&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ecd238d4dc3239eae697d061e4bc002d48cbc55" translate="yes" xml:space="preserve">
          <source>To access the data returned by a query, use value(int). Each field in the data returned by a &lt;code&gt;SELECT&lt;/code&gt; statement is accessed by passing the field's position in the statement, starting from 0. This makes using &lt;code&gt;SELECT *&lt;/code&gt; queries inadvisable because the order of the fields returned is indeterminate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="029da581aa9bfb21eda3da3cea8f7710134bc973" translate="yes" xml:space="preserve">
          <source>To access the hierarchical category model it is necessary to use a &lt;a href=&quot;qml-qtqml-models-delegatemodel&quot;&gt;DelegateModel&lt;/a&gt; to access the child items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a9b6c42d27b7cd15328ca9a50a97846312eb051" translate="yes" xml:space="preserve">
          <source>To access the strings in a &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; returned by an &lt;a href=&quot;qxmlquery#evaluateTo&quot;&gt;XQuery evaluation&lt;/a&gt;, the &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; must be accessed with the &lt;a href=&quot;qxmlnamepool&quot;&gt;name pool&lt;/a&gt; from the instance of &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; that was used for the evaluation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82adea037c6efc168185274af650eb77ab634cfe" translate="yes" xml:space="preserve">
          <source>To access top-level items in a model, specify a null model index as the parent index with &lt;code&gt;QModelIndex()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a6a0224dc1e99c5a439537b98f55da8a83b7075" translate="yes" xml:space="preserve">
          <source>To accommodate new functionality, the datastream serialization format of some Qt classes has changed in some versions of Qt. If you want to read data that was created by an earlier version of Qt, or write data that can be read by a program that was compiled with an earlier version of Qt, use this function to modify the serialization format used by &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6519201e41ad153fe9e9b937057b005076d3ae1d" translate="yes" xml:space="preserve">
          <source>To accommodate the &quot;Ask user&quot; use case the default configuration can be of type &lt;a href=&quot;qnetworkconfiguration#Type-enum&quot;&gt;QNetworkConfiguration::UserChoice&lt;/a&gt;. A user choice configuration is resolved as part of the &lt;a href=&quot;qnetworksession#open&quot;&gt;QNetworkSession::open&lt;/a&gt;() call. Note that a &lt;a href=&quot;qnetworkconfiguration#Type-enum&quot;&gt;UserChoice&lt;/a&gt; configuration is only ever returned via &lt;a href=&quot;qnetworkconfigurationmanager#defaultConfiguration&quot;&gt;QNetworkConfigurationManager::defaultConfiguration&lt;/a&gt;() and not &lt;a href=&quot;qnetworkconfigurationmanager#allConfigurations&quot;&gt;QNetworkConfigurationManager::allConfigurations&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74fd8f76a0c68751f3cbb80b331461d2b50f4b9a" translate="yes" xml:space="preserve">
          <source>To activate support for client certificates, an application needs to listen to the &lt;a href=&quot;qwebenginepage#selectClientCertificate&quot;&gt;QWebEnginePage::selectClientCertificate&lt;/a&gt; signal and select one of the offered certificates. For applications that can navigate to untrusted web sites, it is recommended to always give the user a choice before uniquely identifying them to a remote server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="008d2023a3e72262ce922c41fdfbfd7cb8d07295" translate="yes" xml:space="preserve">
          <source>To activate the developer tools, start an application that uses Qt WebEngine with the command-line arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea17decfc6fb9b22fd5ae885d1a70a6c0c48cbc9" translate="yes" xml:space="preserve">
          <source>To actually make use of the custom URL scheme, a &lt;a href=&quot;qwebengineurlschemehandler&quot;&gt;QWebEngineUrlSchemeHandler&lt;/a&gt; must be created and registered in a profile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="233e5076604c8d35a691dca9ba363ed57d67870b" translate="yes" xml:space="preserve">
          <source>To add &quot;What's This?&quot; text to a widget or an action, you simply call &lt;a href=&quot;qwidget#whatsThis-prop&quot;&gt;QWidget::setWhatsThis&lt;/a&gt;() or &lt;a href=&quot;qaction#whatsThis-prop&quot;&gt;QAction::setWhatsThis&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="561cadd3bd982353e84991715bd15854465fde6e" translate="yes" xml:space="preserve">
          <source>To add a dock widget to a form, drag one from the &lt;b&gt;Containers&lt;/b&gt; section of the widget box, and drop it onto the main form area. Do not add the dock widget to an existing layout. Instead, open the &lt;b&gt;Property Editor&lt;/b&gt; and enable the &lt;b&gt;docked&lt;/b&gt; property to place it in a dock area.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35b4d064014acabeb9316dc5a73f08b604540da5" translate="yes" xml:space="preserve">
          <source>To add a dynamic property, click on the &lt;b&gt;Add&lt;/b&gt; button</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8a60b49e5dbd819d54aa15f3dd17f6a59fcd20d" translate="yes" xml:space="preserve">
          <source>To add a menu bar to the main window, we simply create the menus, and add them to the main window's menu bar. Note that the &lt;a href=&quot;qmainwindow#menuBar&quot;&gt;QMainWindow::menuBar&lt;/a&gt;() function will automatically create the menu bar the first time it is called. You can also call &lt;a href=&quot;qmainwindow#setMenuBar&quot;&gt;QMainWindow::setMenuBar&lt;/a&gt;() to use a custom menu bar in the main window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13da36d650412cd07fe7d00c274a591a7dda9dab" translate="yes" xml:space="preserve">
          <source>To add a new page, select &lt;b&gt;Insert Page&lt;/b&gt; from the toolbox widget's context menu. You can add the page before or after the current page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14b0e14dda6ed3e43b5d89d3c4cbdd43bcc989bb" translate="yes" xml:space="preserve">
          <source>To add a new tab:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25868537480596e4f22730b64ee229ad6be0c2b0" translate="yes" xml:space="preserve">
          <source>To add a placeholder, select an object of a suitable base class and choose &lt;b&gt;Promote to ...&lt;/b&gt; from the form's context menu. After entering the class name and header file in the lower part of the dialog, choose &lt;b&gt;Add&lt;/b&gt;. The placeholder class will now appear along with the base class in the upper list. Click the &lt;b&gt;Promote&lt;/b&gt; button to accept this choice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58ed9015ce139add70c078b408b123047c1f1c8b" translate="yes" xml:space="preserve">
          <source>To add a system tray entry, create a &lt;a href=&quot;qsystemtrayicon&quot;&gt;QSystemTrayIcon&lt;/a&gt; object, call &lt;a href=&quot;qsystemtrayicon#setContextMenu&quot;&gt;setContextMenu&lt;/a&gt;() to provide a context menu for the icon, and call &lt;a href=&quot;qsystemtrayicon#show&quot;&gt;show&lt;/a&gt;() to make it visible in the system tray. Status notification messages (&quot;balloon messages&quot;) can be displayed at any time using &lt;a href=&quot;qsystemtrayicon#showMessage&quot;&gt;showMessage&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba896642afdd8acf0fd8fdf53c25f05373dad0d2" translate="yes" xml:space="preserve">
          <source>To add a visual effect to a &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;, for example, you can use one of the standard effects, or alternately, create your own effect by creating a subclass of &lt;a href=&quot;qgraphicseffect&quot;&gt;QGraphicsEffect&lt;/a&gt;. The effect can then be installed on the item using &lt;a href=&quot;qgraphicsitem#setGraphicsEffect&quot;&gt;QGraphicsItem::setGraphicsEffect&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1b1d0f0c7cea6647f41635633e72115c21db2de" translate="yes" xml:space="preserve">
          <source>To add an action to a menu or a toolbar, simply press the left mouse button over the action in the action editor, and drag it to the preferred location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d47ec3809bf32413165beac2f60d6c251fc49a17" translate="yes" xml:space="preserve">
          <source>To add content to a group box, you can reparent it to its &lt;a href=&quot;qml-qtquick-controls-groupbox#contentItem-prop&quot;&gt;contentItem&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22a6d502fb12e63290739a33467a08706c0717b5" translate="yes" xml:space="preserve">
          <source>To add custom types to the testdata, the type must be registered with &lt;a href=&quot;qmetatype&quot;&gt;QMetaType&lt;/a&gt; via &lt;a href=&quot;qmetatype#Q_DECLARE_METATYPE&quot;&gt;Q_DECLARE_METATYPE&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e7f5dfddfb2cef4b2c5072880e73ac2ffa812b" translate="yes" xml:space="preserve">
          <source>To add extra buttons to the wizard (e.g., a &lt;b&gt;Print&lt;/b&gt; button), one way is to call setButton() with &lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton1&lt;/a&gt; to &lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton3&lt;/a&gt;, and make the buttons visible using the &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton1&lt;/a&gt; to &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton3&lt;/a&gt; options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e06f9796d195ee4589416c593fba8526903832e2" translate="yes" xml:space="preserve">
          <source>To add extra buttons to the wizard (e.g., a &lt;b&gt;Print&lt;/b&gt; button), one way is to call setButtonText() with &lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton1&lt;/a&gt;, &lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton2&lt;/a&gt;, or &lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton3&lt;/a&gt; to set their text, and make the buttons visible using the &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton1&lt;/a&gt;, &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton2&lt;/a&gt;, and/or &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton3&lt;/a&gt; options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a1a13a545c6c805e0464273f1aa3a98701d6dad" translate="yes" xml:space="preserve">
          <source>To add items to a scene, you start off by constructing a &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; object. Then, you have two options: either add your existing &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; objects by calling &lt;a href=&quot;qgraphicsscene#addItem&quot;&gt;addItem&lt;/a&gt;(), or you can call one of the convenience functions &lt;a href=&quot;qgraphicsscene#addEllipse&quot;&gt;addEllipse&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addLine&quot;&gt;addLine&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addPath&quot;&gt;addPath&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addPixmap&quot;&gt;addPixmap&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addPolygon&quot;&gt;addPolygon&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addRect&quot;&gt;addRect&lt;/a&gt;(), or &lt;a href=&quot;qgraphicsscene#addText&quot;&gt;addText&lt;/a&gt;(), which all return a pointer to the newly added item. The dimensions of the items added with these functions are relative to the item's coordinate system, and the items position is initialized to (0, 0) in the scene.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b453f1e6a25e6a7eaa1b1c990a34922fc7eb7771" translate="yes" xml:space="preserve">
          <source>To add multiple certificates, use &lt;a href=&quot;qsslsocket#addCaCertificates&quot;&gt;addCaCertificates&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88bfae2ccc4b0487573533a6fd99fc094617d42f" translate="yes" xml:space="preserve">
          <source>To add or move an item to a scene, call &lt;a href=&quot;qgraphicsscene#addItem&quot;&gt;QGraphicsScene::addItem&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a59b8530984a752b12a22f9dc3e1c2e98daea8b" translate="yes" xml:space="preserve">
          <source>To add sorting and filtering support to &lt;code&gt;MyItemModel&lt;/code&gt;, we need to create a &lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt;, call &lt;a href=&quot;qsortfilterproxymodel#setSourceModel&quot;&gt;setSourceModel&lt;/a&gt;() with the &lt;code&gt;MyItemModel&lt;/code&gt; as argument, and install the &lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt; on the view:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a585b1b5bdff862330fddcbf31d8ee821f724b2" translate="yes" xml:space="preserve">
          <source>To add support for an additional language, see &lt;a href=&quot;technical-guide#adding-new-keyboard-layouts&quot;&gt;Adding New Keyboard Layouts&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86823dd473661cd1a813e063afc2901e0ad24fb8" translate="yes" xml:space="preserve">
          <source>To add support for another encoding to Qt, make a subclass of &lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; and implement the functions listed in the table below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f249c6889f0d4684fff984088d0da53c150d382" translate="yes" xml:space="preserve">
          <source>To add support for drawing of new datatypes and item data roles, it is necessary to create a custom delegate. But if you only need to support the datatypes implemented by the default delegate, a custom style does not need an accompanying delegate. The &lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt; class description gives more information on custom delegates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e12e0ebfdd72480c154219ba3eb8fe2ef43ff91a" translate="yes" xml:space="preserve">
          <source>To add support for new gestures, you need to derive from &lt;a href=&quot;qgesturerecognizer&quot;&gt;QGestureRecognizer&lt;/a&gt; to create a custom recognizer class, construct an instance of this class, and register it with the application by calling &lt;a href=&quot;qgesturerecognizer#registerRecognizer&quot;&gt;QGestureRecognizer::registerRecognizer&lt;/a&gt;(). You can also subclass &lt;a href=&quot;qgesture&quot;&gt;QGesture&lt;/a&gt; to create a custom gesture class, or rely on dynamic properties to express specific details of the gesture you want to handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f990f02b150bfd773ce6dea0ed57068dcebf9e" translate="yes" xml:space="preserve">
          <source>To add times of precision greater than 1 millisecond, use &lt;a href=&quot;qdeadlinetimer#addNSecs&quot;&gt;addNSecs&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5ddbde2db777dbe8defd68af3c9749e41126dd9" translate="yes" xml:space="preserve">
          <source>To aid in such situations, a &lt;a href=&quot;qmovie&quot;&gt;QMovie&lt;/a&gt; object can be instructed to cache the frames, at the added memory cost of keeping the frames in memory for the lifetime of the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46eaf35a925c107168e3bc75b42c44c3e12cf019" translate="yes" xml:space="preserve">
          <source>To aid writing a particle vertex shader, the following GLSL code is prepended to your vertex shader:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaf59ced55383f90bc336e2d1de3d953f4122944" translate="yes" xml:space="preserve">
          <source>To allow elements such as videos to be shown in the fullscreen mode, applications must set &lt;a href=&quot;qwebenginesettings#WebAttribute-enum&quot;&gt;QWebEngineSettings::FullScreenSupportEnabled&lt;/a&gt; and connect to &lt;a href=&quot;qwebenginepage#fullScreenRequested&quot;&gt;QWebEnginePage::fullScreenRequested&lt;/a&gt;, which takes a &lt;a href=&quot;qwebenginefullscreenrequest&quot;&gt;QWebEngineFullScreenRequest&lt;/a&gt; instance as an argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="312b28023a2f1c9829a19172150be05295545c31" translate="yes" xml:space="preserve">
          <source>To allow for measurements in all 6 directions, negative values are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ce9be0b2f928ffb8698ce47f34350b16ee61b1d" translate="yes" xml:space="preserve">
          <source>To allow the user to drop either internal or external items within the view, set the view's &lt;a href=&quot;qabstractscrollarea#viewport&quot;&gt;viewport()&lt;/a&gt;'s &lt;a href=&quot;qwidget#acceptDrops-prop&quot;&gt;acceptDrops&lt;/a&gt; property to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d551f839da29ddb5f305afe593c0fccd5bce6dc" translate="yes" xml:space="preserve">
          <source>To append columns, insert them after the last column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a73d422347ff54dd6a4673e3cd6516f7eef7cfc7" translate="yes" xml:space="preserve">
          <source>To append rows to another parent, move them to after the last row.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcf058086e00e8943938cba4b0e39d109e2d1d39" translate="yes" xml:space="preserve">
          <source>To append rows, insert them after the last row.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c30043e0c000838853f9933b478f1575d2d6a549" translate="yes" xml:space="preserve">
          <source>To apply a layout, you can select your choice of layout from the toolbar shown on the left, or from the context menu shown below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e3341387e2959d1acc8d88687351b3b1206da01" translate="yes" xml:space="preserve">
          <source>To apply a quantifier to more than just the preceding character, use parentheses to group characters together in an expression. For example, &lt;b&gt;tag+&lt;/b&gt; matches a 't' followed by an 'a' followed by at least one 'g', whereas &lt;b&gt;(tag)+&lt;/b&gt; matches at least one occurrence of 'tag'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d681eb2e8cceb01fee405a8e8a77c8a047495b5" translate="yes" xml:space="preserve">
          <source>To apply the same-origin policy to a custom URL scheme, &lt;a href=&quot;qml-qtwebengine-webengine&quot;&gt;WebEngine&lt;/a&gt; must be able to compute the origin (host and port combination) of a URL. The &lt;code&gt;Host...&lt;/code&gt; options indicate that the URL scheme conforms to the standard URL syntax (like &lt;code&gt;http&lt;/code&gt;) and automatically enable the same-origin policy. The &lt;code&gt;Path&lt;/code&gt; option indicates that the URL scheme uses a non-standard syntax and that the same-origin policy cannot be applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="154f875a2f422ad52116c20e853c9e5a3c663de4" translate="yes" xml:space="preserve">
          <source>To associate a blend tree with a &lt;a href=&quot;qml-qt3d-animation-blendedclipanimator&quot;&gt;BlendedClipAnimator&lt;/a&gt;, set the animator's &lt;a href=&quot;qml-qt3d-animation-blendedclipanimator#blendTree-prop&quot;&gt;blendTree&lt;/a&gt; property to point at the root node of your blend tree:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de7b8ca0a938cf273383d5b93f4b49e9998f03f6" translate="yes" xml:space="preserve">
          <source>To associate a blend tree with a &lt;a href=&quot;qt3danimation-qblendedclipanimator&quot;&gt;QBlendedClipAnimator&lt;/a&gt;, set the animator's &lt;a href=&quot;qt3danimation-qblendedclipanimator#blendTree-prop&quot;&gt;blendTree&lt;/a&gt; property to point at the root node of your blend tree:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b018f5df0c693b157c3cd59c041fd1f944e039c" translate="yes" xml:space="preserve">
          <source>To associate a cursor with a widget, use &lt;a href=&quot;qwidget#cursor-prop&quot;&gt;QWidget::setCursor&lt;/a&gt;(). To associate a cursor with all widgets (normally for a short period of time), use &lt;a href=&quot;qguiapplication#setOverrideCursor&quot;&gt;QGuiApplication::setOverrideCursor&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d802e7742bada638ebe4da7c194b6d3c78904deb" translate="yes" xml:space="preserve">
          <source>To asynchronously invoke the &lt;a href=&quot;qabstractbutton#animateClick&quot;&gt;animateClick()&lt;/a&gt; slot on a &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13b730de938257ee3ff62ec8e1d5637705a5fa57" translate="yes" xml:space="preserve">
          <source>To automatically generate map overlay objects based on the contents of a &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;QtQuick&lt;/a&gt; model (for example a &lt;a href=&quot;qml-qtqml-models-listmodel&quot;&gt;ListModel&lt;/a&gt; item), the &lt;a href=&quot;qml-qtlocation-mapitemview&quot;&gt;MapItemView&lt;/a&gt; type is available. It accepts any map overlay object as its delegate, and can only be created within a &lt;a href=&quot;qml-qtlocation-map&quot;&gt;Map&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62ed8fa1c3b52b110e11936cd2f817f4dc1b6c41" translate="yes" xml:space="preserve">
          <source>To avoid a race condition, it is important to call this function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9981b8a029072a3f501de8f7b8d459614ddd0cc2" translate="yes" xml:space="preserve">
          <source>To avoid confusion with the controls in the module itself, we'll call the file &lt;code&gt;MyButton.qml&lt;/code&gt;. To use the control in your application, refer to it by its filename:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc91f87f8488391c70dd52a85a00bdc8ca13ccc" translate="yes" xml:space="preserve">
          <source>To avoid failures when your list can be empty, call &lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() before calling other member functions. If you must pass an index value that might not be in the valid range, check that it is less than the value returned by &lt;a href=&quot;qlist#size&quot;&gt;size&lt;/a&gt;() but</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09e95b506f60a8cd8c466637a56d779a0f15991c" translate="yes" xml:space="preserve">
          <source>To avoid memory leaks, the previous chart must be deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="957aa62e5c225e7652aa8a3818c966a33d3038ea" translate="yes" xml:space="preserve">
          <source>To avoid potential conflicts like these, give distinctive names to header files that will be precompiled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27e04a7bff0648b0b326c1df2d7bb891d5ce56fe" translate="yes" xml:space="preserve">
          <source>To avoid race conditions and read/write issues from two threads it is important that the renderer and the item never read or write shared variables. Communication between the item and the renderer should primarily happen via the &lt;a href=&quot;qquickframebufferobject-renderer#synchronize&quot;&gt;QQuickFramebufferObject::Renderer::synchronize&lt;/a&gt;() function. This function will be called on the render thread while the GUI thread is blocked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c8c1403f9d043007f4c1777ca2fc261157b5bf9" translate="yes" xml:space="preserve">
          <source>To avoid relying on dynamic array sizes, applications can use &lt;a href=&quot;qvulkanwindow#MAX_CONCURRENT_FRAME_COUNT-var&quot;&gt;MAX_CONCURRENT_FRAME_COUNT&lt;/a&gt; when declaring arrays. This is guaranteed to be always equal to or greater than the value returned from &lt;a href=&quot;qvulkanwindow#concurrentFrameCount&quot;&gt;concurrentFrameCount&lt;/a&gt;(). Such arrays can then be indexed by the value returned from this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a42386ac3ec977e79c0969af7a7bd2be274175" translate="yes" xml:space="preserve">
          <source>To avoid seeing the items loading progressively set &lt;code&gt;visible&lt;/code&gt; appropriately, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97433bca212c3e78ab005df4e720c46fd0a9e3d7" translate="yes" xml:space="preserve">
          <source>To avoid that, the JIT is disabled by default if you compile Qt in debug mode. It is possible to override the default and enable or disable the JIT usage (both in debug or release mode) by setting the &lt;code&gt;QT_ENABLE_REGEXP_JIT&lt;/code&gt; environment variable to a non-zero or zero value respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d01c805e5387f23e7a4903c9f47d427438deefd" translate="yes" xml:space="preserve">
          <source>To avoid the loss of signal emissions it is recommend to immidiately connect to this signal once a &lt;a href=&quot;qbluetoothtransferreply&quot;&gt;QBluetoothTransferReply&lt;/a&gt; instance has been created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b7c1f1ca365a926ae81d8dc9e75d954dd9ddbb3" translate="yes" xml:space="preserve">
          <source>To avoid the loss of signal emissions it is recommend to immidiately connect to this signal once a &lt;code&gt;QBluetoothTransferReply&lt;/code&gt; instance has been created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f092283de36ddde7aff37726fef4ccfcdf10c32" translate="yes" xml:space="preserve">
          <source>To avoid the need to know (or check) what the default sensor for a type is, the system will use the default sensor for a type. Most of the time this is what the app developer wants to do. If the app developer wants to select a specific sensor, he needs to call the &lt;a href=&quot;qsensor#identifier-prop&quot;&gt;QSensor::setIdentifier&lt;/a&gt;() method before starting the sensor so that the appropriate backend is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ffe4dad6e0465a198ba9c298e061050211df72c" translate="yes" xml:space="preserve">
          <source>To avoid the overhead of creating the layout the first time you draw the &lt;a href=&quot;qstatictext&quot;&gt;QStaticText&lt;/a&gt; after making changes, you can use the prepare() function and pass in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="852ddc71baa7f459435c9304ccb69b050b5d7e83" translate="yes" xml:space="preserve">
          <source>To avoid this problem, replace &lt;code&gt;hash[i]&lt;/code&gt; with &lt;code&gt;hash.value(i)&lt;/code&gt; in the code above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1da48f22fabbeb7f047c06a4f5d064ed5c108281" translate="yes" xml:space="preserve">
          <source>To avoid this problem, replace &lt;code&gt;map[i]&lt;/code&gt; with &lt;code&gt;map.value(i)&lt;/code&gt; in the code above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac46b708d7fcb58bf8706a8c1d8f6479caccfff9" translate="yes" xml:space="preserve">
          <source>To avoid this, Qt will group new touch points together using the following rules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dcef05d5ef1e46a33e99afc44bd952605060be7" translate="yes" xml:space="preserve">
          <source>To be able to check the spelling, the spellchecker needs dictionaries. It supports dictionaries from the &lt;a href=&quot;https://sourceforge.net/projects/hunspell/#&quot;&gt;Hunspell project&lt;/a&gt;, but they have to be compiled into a special binary format. A Hunspell dictionary consists of two files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0e64a52b99814817715b0b03bb149dc47feae80" translate="yes" xml:space="preserve">
          <source>To be able to receive media dropped on a widget, call &lt;a href=&quot;qwidget#acceptDrops-prop&quot;&gt;setAcceptDrops(true)&lt;/a&gt; for the widget, and reimplement the &lt;a href=&quot;qwidget#dragEnterEvent&quot;&gt;dragEnterEvent()&lt;/a&gt; and &lt;a href=&quot;qwidget#dropEvent&quot;&gt;dropEvent()&lt;/a&gt; event handler functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23d1045b9d70f17ba3c57dc0d2c220a91b8d925b" translate="yes" xml:space="preserve">
          <source>To be able to use your new App ID, generate a new provision profile that includes the new ID to sign and run your app. Provisioning Profiles are also managed through the &lt;b&gt;Apple Developer Certificate, Identifiers, and Profiles&lt;/b&gt; manager.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad37069b2a756eb35da98ea17b15a5581a4e278f" translate="yes" xml:space="preserve">
          <source>To be called after getting a &lt;a href=&quot;qbluetoothlocaldevice#pairingDisplayConfirmation&quot;&gt;pairingDisplayConfirmation&lt;/a&gt;(). The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8d265687de97e6932807a1fc8751330f8b7b526" translate="yes" xml:space="preserve">
          <source>To be implemented by custom Modbus client implementation. The default implementation ignores</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f2fefafba9f1d93b8e36464975da9f054ee4393" translate="yes" xml:space="preserve">
          <source>To be loadable, the file's suffix must be a valid suffix for a loadable library in accordance with the platform, e.g. &lt;code&gt;.so&lt;/code&gt; on Unix, - &lt;code&gt;.dylib&lt;/code&gt; on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; and iOS, and &lt;code&gt;.dll&lt;/code&gt; on Windows. The suffix can be verified with &lt;a href=&quot;qlibrary#isLibrary&quot;&gt;QLibrary::isLibrary&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65e057dbe275548f05737e527b0c6d9714d4965f" translate="yes" xml:space="preserve">
          <source>To be valid, a context must have a engine, and it's &lt;a href=&quot;qqmlcontext#contextObject&quot;&gt;contextObject&lt;/a&gt;(), if any, must not have been deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c85d2cb52c798844bf3eccfe92387a667731b08f" translate="yes" xml:space="preserve">
          <source>To be valid, the latitude must be between -90 to 90 inclusive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f5363421e22a113fa3ee2c0f940db7688d896ca" translate="yes" xml:space="preserve">
          <source>To be valid, the longitude must be between -180 to 180 inclusive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8b65b98f45c6e4ceda4bf9ea9b73dd252de3fbc" translate="yes" xml:space="preserve">
          <source>To begin connecting objects, enter the signals and slots editing mode by opening the &lt;b&gt;Edit&lt;/b&gt; menu and selecting &lt;b&gt;Edit Signals/Slots&lt;/b&gt;, or by pressing the &lt;b&gt;F4&lt;/b&gt; key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa952e59f704bba7833c7af41a71665e4257927" translate="yes" xml:space="preserve">
          <source>To bind NULL values, a null &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; of the relevant type has to be added to the bound &lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt;; for example, &lt;code&gt;QVariant(QVariant::String)&lt;/code&gt; should be used if you are using strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62e057d6e72a2262f69afed3f0038d0389b9a84d" translate="yes" xml:space="preserve">
          <source>To bind a NULL value, use a null &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;; for example, use &lt;code&gt;QVariant(QVariant::String)&lt;/code&gt; if you are binding a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8641eb7169caf9ed3873577e9c44b647a26fb3e7" translate="yes" xml:space="preserve">
          <source>To bind a value of type &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; or &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;, wrap the value in a &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; such that &lt;a href=&quot;qxmlitem&quot;&gt;QXmlItem&lt;/a&gt;'s &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; constructor is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9eef59e1de8efbb0ab3e7f73e02949fafc97c56" translate="yes" xml:space="preserve">
          <source>To break a layout, press &lt;b&gt;Ctrl+0&lt;/b&gt; or choose &lt;b&gt;Break Layout&lt;/b&gt; from the form's context menu, the &lt;b&gt;Form&lt;/b&gt; menu or the main toolbar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73b397f95db7c026bbcf06f8703b952ac1ddd8e7" translate="yes" xml:space="preserve">
          <source>To break up a string into a string list, use the &lt;a href=&quot;qstring#split&quot;&gt;QString::split&lt;/a&gt;() function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96d5fbf8f8d413b59ecc5e91d42c6f8ed9e8f5cb" translate="yes" xml:space="preserve">
          <source>To browse the elements of a dom document use &lt;a href=&quot;qdomnode#firstChildElement&quot;&gt;firstChildElement&lt;/a&gt;(), &lt;a href=&quot;qdomnode#lastChildElement&quot;&gt;lastChildElement&lt;/a&gt;(), &lt;a href=&quot;qdomnode#nextSiblingElement&quot;&gt;nextSiblingElement&lt;/a&gt;() and &lt;a href=&quot;qdomnode#previousSiblingElement&quot;&gt;previousSiblingElement&lt;/a&gt;(). For example, to iterate over all child elements called &quot;entry&quot; in a root element called &quot;database&quot;, you can use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00add77aed28b67caf71dda17fce457e12a73a0d" translate="yes" xml:space="preserve">
          <source>To build QDoc on Debian-based Linux distributions, it is sufficient to install the &lt;code&gt;libclang-dev&lt;/code&gt; package and its dependencies. For running QDoc, the &lt;code&gt;libclang&lt;/code&gt; package is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2869b0834ba0a5387d41676a61fb3be92a1deb79" translate="yes" xml:space="preserve">
          <source>To build Qt Multimedia, you need the GStreamer library, base plugins, and development files for your system. To run applications that use Qt Multimedia, you might also need to install the following GStreamer plugins: 'good', 'ugly', 'bad', ffmpeg (0.10), and libav (1.x). These additional plugins contain various codecs for audio and video decoding, as well as the necessary components for using the camera APIs. The package names for GStreamer vary between Linux distributions; try searching for &lt;code&gt;gstreamer&lt;/code&gt; or &lt;code&gt;libgstreamer&lt;/code&gt; in your distribution's package repository to find suitable packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e204d395595ecb3b606d87138ab82f5940dd7df" translate="yes" xml:space="preserve">
          <source>To build Qt applications that can host COM objects and ActiveX controls link the application against the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; module by adding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d560d831d02540eb6f4ba5cf3f22dc2a9ad43141" translate="yes" xml:space="preserve">
          <source>To build a helloworld GUI executable, typical usage would be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99d8b9f5fba1d0957b73547db7b3557927d30ce8" translate="yes" xml:space="preserve">
          <source>To build an in-process server, use a &lt;code&gt;.pro&lt;/code&gt; file like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1614524c5909d18dc641e5b2b4285967e4046f0" translate="yes" xml:space="preserve">
          <source>To build the ActiveX server executable run &lt;code&gt;qmake&lt;/code&gt; to generate the makefile, and use your compiler's make tool as for any other Qt application. The make process will also register the controls in the system registry by calling the resulting executable with the &lt;code&gt;-regserver&lt;/code&gt; command line option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="187c3080b49928df37dc613f7d01dc6c67e42b54" translate="yes" xml:space="preserve">
          <source>To build the static libraries, change into the &lt;code&gt;activeqt&lt;/code&gt; directory (usually &lt;code&gt;QTDIR/src/activeqt&lt;/code&gt;), and run &lt;code&gt;qmake&lt;/code&gt; and your make tool in both the &lt;code&gt;container&lt;/code&gt; and the &lt;code&gt;control&lt;/code&gt; subdirectory. The &lt;code&gt;qaxcontainer&lt;/code&gt; and &lt;code&gt;qaxserver&lt;/code&gt; libraries will be linked into &lt;code&gt;QTDIR/lib&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94f0c2be17c91e259f3e0f43ac4876760f349cf1" translate="yes" xml:space="preserve">
          <source>To build the tool you must first build the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; and the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxserver-module.html&quot;&gt;QAxServer&lt;/a&gt; libraries. Then run your make tool in &lt;code&gt;tools/testcon&lt;/code&gt; and run the resulting &lt;code&gt;testcon.exe&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5ff3c92c87afa5ff07c3d4a06c46484e512a7fc" translate="yes" xml:space="preserve">
          <source>To build the tool you must first build the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; library. Then run your make tool in &lt;code&gt;tools/dumpcpp&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b3cc49f1dc4b398c4b35a6ccd2f0e602557c774" translate="yes" xml:space="preserve">
          <source>To build the tool you must first build the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; library. Then run your make tool in &lt;code&gt;tools/dumpdoc&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="596d9a7c88baa44a72f65d5301d18ec6a3ed121d" translate="yes" xml:space="preserve">
          <source>To calculate the speed of the interpolation, the easing curve provides the function &lt;a href=&quot;qeasingcurve#valueForProgress&quot;&gt;valueForProgress&lt;/a&gt;(), where the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ddbcfc7549b915f19e0ae88ce69f07720b295e1" translate="yes" xml:space="preserve">
          <source>To call functions of the COM object that can not be accessed via any of the above methods it is possible to request the COM interface directly using &lt;a href=&quot;qaxbase#queryInterface&quot;&gt;QAxBase::queryInterface&lt;/a&gt;(). To get a C++ definition of the respective interface classes use the &lt;code&gt;#import&lt;/code&gt; directive with the type library provided with the control; see your compiler manual for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4dd8cea10b120d22c91995eb8e1c82760069733" translate="yes" xml:space="preserve">
          <source>To call the methods of a COM interface described by the following IDL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e3233e4c484d2910da29a4b4c0dfa747589a488" translate="yes" xml:space="preserve">
          <source>To cancel a prepared inserted call &lt;a href=&quot;qabstractnetworkcache#remove&quot;&gt;remove&lt;/a&gt;() on the metadata's url.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcbd7a07bdc6638917f260af881a7fd8dbda4d21" translate="yes" xml:space="preserve">
          <source>To cater for left-to-right and right-to-left languages you can set a block's direction with setDirection(). Paragraph alignment is set with &lt;a href=&quot;qtextblockformat#setAlignment&quot;&gt;setAlignment&lt;/a&gt;(). Margins are controlled by &lt;a href=&quot;qtextblockformat#setTopMargin&quot;&gt;setTopMargin&lt;/a&gt;(), &lt;a href=&quot;qtextblockformat#setBottomMargin&quot;&gt;setBottomMargin&lt;/a&gt;(), &lt;a href=&quot;qtextblockformat#setLeftMargin&quot;&gt;setLeftMargin&lt;/a&gt;(), &lt;a href=&quot;qtextblockformat#setRightMargin&quot;&gt;setRightMargin&lt;/a&gt;(). Overall indentation is set with &lt;a href=&quot;qtextblockformat#setIndent&quot;&gt;setIndent&lt;/a&gt;(), the indentation of the first line with &lt;a href=&quot;qtextblockformat#setTextIndent&quot;&gt;setTextIndent&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e00d24d3f10292a6dc92284633f8da4fc3e1787" translate="yes" xml:space="preserve">
          <source>To cause static plugins actually being linked and instantiated, &lt;a href=&quot;#Q_IMPORT_PLUGIN&quot;&gt;Q_IMPORT_PLUGIN&lt;/a&gt;() macros are also needed in application code, but those are automatically generated by qmake and added to your application project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9fa74a2427a59666f310118acb8c43c5e3115c1" translate="yes" xml:space="preserve">
          <source>To change model data, you can assign updated values to the &lt;code&gt;model&lt;/code&gt; properties. The QML &lt;a href=&quot;qml-qtqml-models-listmodel&quot;&gt;ListModel&lt;/a&gt; is editable by default whereas C++ models must implement setData() to become editable. Integer and JavaScript array models are read-only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a00363765f988416bdb7cfb367b0cc2fb38426c" translate="yes" xml:space="preserve">
          <source>To change the behavior of this function, i.e. to modify what &lt;a href=&quot;qplaintextedit&quot;&gt;QPlainTextEdit&lt;/a&gt; can paste and how it is being pasted, reimplement the virtual &lt;a href=&quot;qplaintextedit#canInsertFromMimeData&quot;&gt;canInsertFromMimeData&lt;/a&gt;() and &lt;a href=&quot;qplaintextedit#insertFromMimeData&quot;&gt;insertFromMimeData&lt;/a&gt;() functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52f1e82bdd16cc15e2ed5d0bc080208f6abfaf46" translate="yes" xml:space="preserve">
          <source>To change the behavior of this function, i.e. to modify what &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt; can paste and how it is being pasted, reimplement the virtual &lt;a href=&quot;qtextedit#canInsertFromMimeData&quot;&gt;canInsertFromMimeData&lt;/a&gt;() and &lt;a href=&quot;qtextedit#insertFromMimeData&quot;&gt;insertFromMimeData&lt;/a&gt;() functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="becd3a6b72959ec86000882e8742c680a69d93b7" translate="yes" xml:space="preserve">
          <source>To change the position of the &lt;a href=&quot;qtabbar&quot;&gt;QTabBar&lt;/a&gt; within a &lt;a href=&quot;qtabwidget&quot;&gt;QTabWidget&lt;/a&gt;, use the &lt;a href=&quot;#tab-bar-sub&quot;&gt;tab-bar&lt;/a&gt; subcontrol (and set subcontrol-position).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c64a9defcb46a9385be110dd92f917a63a0a053" translate="yes" xml:space="preserve">
          <source>To change this position, use the &lt;a href=&quot;qml-qtmultimedia-audio#seek-method&quot;&gt;seek()&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab847e5c531a4b8b265b3ac5dd99eff36271ed2" translate="yes" xml:space="preserve">
          <source>To change this position, use the &lt;a href=&quot;qml-qtmultimedia-mediaplayer#seek-method&quot;&gt;seek()&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9720435a742525e10b9be1f28192d07456b4c60f" translate="yes" xml:space="preserve">
          <source>To change this position, use the &lt;a href=&quot;qml-qtmultimedia-video#seek-method&quot;&gt;seek()&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee5d4dc8efd5128635d763bc6f5e48bc5cea72b" translate="yes" xml:space="preserve">
          <source>To check at runtime what is supported, use the &lt;a href=&quot;qml-qtquick-graphicsinfo&quot;&gt;GraphicsInfo&lt;/a&gt;.shaderSourceType and &lt;a href=&quot;qml-qtquick-graphicsinfo&quot;&gt;GraphicsInfo&lt;/a&gt;.shaderCompilationType properties. Note that these are bitmasks, because some backends may support multiple approaches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="640bbe38ce134e3166250195b4b4fad9fd0ea89c" translate="yes" xml:space="preserve">
          <source>To check if a file has the expected MIME type, you should use &lt;a href=&quot;qmimetype#inherits&quot;&gt;inherits&lt;/a&gt;() rather than a simple string comparison based on the &lt;a href=&quot;qmimetype#name-prop&quot;&gt;name&lt;/a&gt;(). This is because MIME types can inherit from each other: for instance a C source file is a specific type of plain text file, so text/x-csrc inherits text/plain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e66850a5141a7d46203ce1106e6dfb88e25399a8" translate="yes" xml:space="preserve">
          <source>To check if the current backend supports the feature</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fc033fba68d185dc7bae7af0957309c9103f0de" translate="yes" xml:space="preserve">
          <source>To check if two numbers are equivalent, use normalized() on both version numbers before performing the compare.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21747a8db96a8d50b23ef1b8939e679ea8aab6ab" translate="yes" xml:space="preserve">
          <source>To check visibility, use !&lt;a href=&quot;qwidget#visible-prop&quot;&gt;isVisible&lt;/a&gt;() instead (notice the exclamation mark).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20209323a4b5d4933ad26616eda6a242dd066c78" translate="yes" xml:space="preserve">
          <source>To check whether a system tray is present on the user's desktop, call the &lt;a href=&quot;qsystemtrayicon#isSystemTrayAvailable&quot;&gt;QSystemTrayIcon::isSystemTrayAvailable&lt;/a&gt;() static function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc805a6dc1c18de12edfec793bf45abfdc670417" translate="yes" xml:space="preserve">
          <source>To check whether the response came from the cache or from the network, the following can be applied:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2170dd98311055f932a1f2f3ce4aec490fb711a" translate="yes" xml:space="preserve">
          <source>To choose the name that your thread will be given (as identified by the command &lt;code&gt;ps -L&lt;/code&gt; on Linux, for example), you can call &lt;a href=&quot;qobject#objectName-prop&quot;&gt;setObjectName()&lt;/a&gt; before starting the thread. If you don't call &lt;a href=&quot;qobject#objectName-prop&quot;&gt;setObjectName()&lt;/a&gt;, the name given to your thread will be the class name of the runtime type of your thread object (for example, &lt;code&gt;&quot;RenderThread&quot;&lt;/code&gt; in the case of the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcore-threads-mandelbrot-example.html#&quot;&gt;Mandelbrot Example&lt;/a&gt;, as that is the name of the &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt; subclass). Note that this is currently not available with release builds on Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb6b21e7bba8f8c702540a64a1c95c63c8ec97b8" translate="yes" xml:space="preserve">
          <source>To clear an anchor value, set it to &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f1825b9c8a37a50d24ef3d20a57bce31df82588" translate="yes" xml:space="preserve">
          <source>To clear selection from this series, &lt;a href=&quot;qbar3dseries#invalidSelectionPosition&quot;&gt;invalidSelectionPosition&lt;/a&gt;() is set as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="429aeecebcca5aeec29093c841d6e67eade5d6cf" translate="yes" xml:space="preserve">
          <source>To clear selection from this series, &lt;a href=&quot;qml-qtdatavisualization-surface3dseries#invalidSelectionPosition-prop&quot;&gt;invalidSelectionPosition&lt;/a&gt; is set as the position. If this series is added to a graph, the graph can adjust the selection according to user interaction or if it becomes invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaf607a23811745069fde6b201c651b4eac9d0e5" translate="yes" xml:space="preserve">
          <source>To clear selection from this series, &lt;a href=&quot;qscatter3dseries#invalidSelectionIndex&quot;&gt;invalidSelectionIndex&lt;/a&gt;() is set as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b4ffb34de657c74ab25a489628184b27204c799" translate="yes" xml:space="preserve">
          <source>To clear selection from this series, &lt;a href=&quot;qsurface3dseries#invalidSelectionPosition&quot;&gt;invalidSelectionPosition&lt;/a&gt;() is set as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3547c182ba77bff841fd3ea66ba3a4f560835dac" translate="yes" xml:space="preserve">
          <source>To clear selection from this series, set &lt;a href=&quot;qml-qtdatavisualization-bar3dseries#invalidSelectionPosition-prop&quot;&gt;invalidSelectionPosition&lt;/a&gt; as the position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cef577b4897a98142ef0babd4324111d6d0632b" translate="yes" xml:space="preserve">
          <source>To clear the pointer held without deleting the object it points to (and hence take ownership of the object), use &lt;a href=&quot;qscopedpointer#take&quot;&gt;take&lt;/a&gt;() instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb5744d865a5c89ea379146ea4bc698001057a3" translate="yes" xml:space="preserve">
          <source>To clear the search highlight, just pass an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75f37ad6da3248d89d7e621c33edbd844abcbe3d" translate="yes" xml:space="preserve">
          <source>To clear the selection, just pass an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4521bd570c5c0d10f60de205e7196927a1793b53" translate="yes" xml:space="preserve">
          <source>To close the socket, call &lt;a href=&quot;qabstractsocket#disconnectFromHost&quot;&gt;disconnectFromHost&lt;/a&gt;(). &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; enters &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket::ClosingState&lt;/a&gt;. After all pending data has been written to the socket, &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; actually closes the socket, enters &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket::UnconnectedState&lt;/a&gt;, and emits &lt;a href=&quot;qabstractsocket#disconnected&quot;&gt;disconnected&lt;/a&gt;(). If you want to abort a connection immediately, discarding all pending data, call &lt;a href=&quot;qabstractsocket#abort&quot;&gt;abort&lt;/a&gt;() instead. If the remote host closes the connection, &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; will emit error(&lt;a href=&quot;qabstractsocket#SocketError-enum&quot;&gt;QAbstractSocket::RemoteHostClosedError&lt;/a&gt;), during which the socket state will still be &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectedState&lt;/a&gt;, and then the &lt;a href=&quot;qabstractsocket#disconnected&quot;&gt;disconnected&lt;/a&gt;() signal will be emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad76e35c696315e34a7861f3714d7bf48681d198" translate="yes" xml:space="preserve">
          <source>To communicate with a &lt;a href=&quot;qwebchannel&quot;&gt;QWebChannel&lt;/a&gt; or &lt;a href=&quot;qml-qtwebchannel-webchannel&quot;&gt;WebChannel&lt;/a&gt;, a client must use and set up the JavaScript API provided by &lt;code&gt;qwebchannel.js&lt;/code&gt;. For clients run inside &lt;a href=&quot;qtwebengine-index&quot;&gt;Qt WebEngine&lt;/a&gt;, you can load the file via &lt;code&gt;qrc:///qtwebchannel/qwebchannel.js&lt;/code&gt;. For external clients, you need to copy the file to your web server. Then instantiate a &lt;a href=&quot;qwebchannel&quot;&gt;QWebChannel&lt;/a&gt; object and pass it a transport object and a callback function, which will be invoked once the initialization of the channel finishes and the published objects become available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d7c886843b6483c6becfe351eff0447da11db72" translate="yes" xml:space="preserve">
          <source>To compile a state machine, the following lines have to be added to a .pro file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="385fd6ee52a45816bc30f53d324d45284678cafa" translate="yes" xml:space="preserve">
          <source>To complete the connection, select a signal from the source object and a slot from the destination object, then click &lt;b&gt;OK&lt;/b&gt;. Click &lt;b&gt;Cancel&lt;/b&gt; if you wish to abandon the connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d4403ef3c0807c9173800f15ae382e772988187" translate="yes" xml:space="preserve">
          <source>To complete the installation, select the components that you want to install and follow the instructions of the installation program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fd982abdeefd37c9280dd7d76e4c9e45e9ee32b" translate="yes" xml:space="preserve">
          <source>To compute the value of an attribute, enclose the expression in curly braces and embed it in the attribute value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1accdd21abcb118fb19d47858fd3802dff230382" translate="yes" xml:space="preserve">
          <source>To configure Qt for cross-platform development and deployment, the development toolchain for the target platform needs to be set up. This set up varies among the &lt;a href=&quot;supported-platforms#&quot;&gt;Supported Platforms&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28d7dc8fb66f10c0e99b4aadc3a922818a72a339" translate="yes" xml:space="preserve">
          <source>To configure the behavior of the EGLStream object used by the backend, use the &lt;code&gt;QT_QPA_EGLFS_STREAM_FIFO_LENGTH&lt;/code&gt; environment variable. This assumes that &lt;code&gt;KHR_stream_fifo&lt;/code&gt; is supported by the target system. By default the stream operates in mailbox mode. To switch to FIFO mode, set a value of 1 or greater. The value specifies the maximum number of frames the stream can hold.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="348fe7189be0fc647a0f804a97da34178809c40a" translate="yes" xml:space="preserve">
          <source>To connect an object to the form itself, simply position the cursor over the form and release the mouse button. The end point of the connection changes to the electrical &quot;ground&quot; symbol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecd4e0bff8add9df7b65d573b18eb28d4f311c11" translate="yes" xml:space="preserve">
          <source>To connect signals to (or receive signals from) dynamically created objects, use the signal &lt;code&gt;connect()&lt;/code&gt; method. See &lt;a href=&quot;qtqml-syntax-signals#connecting-signals-to-methods-and-signals&quot;&gt;Connecting Signals to Methods and Signals&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8092fbe768516ca34194cc8702ac92e5d739899" translate="yes" xml:space="preserve">
          <source>To connect the &lt;code&gt;int&lt;/code&gt; version to &lt;a href=&quot;qabstractslider#valueChanged&quot;&gt;QSlider::valueChanged&lt;/a&gt;(), the two syntaxes are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2c9772a576ce009f821c0e6f9a6307beb2b63fd" translate="yes" xml:space="preserve">
          <source>To connect the &lt;code&gt;query&lt;/code&gt; to the custom node model, we must bind a variable name used in the query to a node in the model. The variable can then be used in the query as a starting node. First, an &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;index&lt;/a&gt; for the desired starting node is retrieved by calling &lt;a href=&quot;qabstractxmlnodemodel#createIndex&quot;&gt;QAbstractXmlNodeModel::createIndex&lt;/a&gt;(). Then the index is bound to a variable name, in this case &lt;code&gt;queryRoot&lt;/code&gt;, by passing the name and the index to &lt;a href=&quot;qxmlquery#bindVariable&quot;&gt;QXmlQuery::bindVariable&lt;/a&gt;(). The query can then use a variable reference &lt;code&gt;$queryRoot&lt;/code&gt; to refer to the starting node. Note that if the &lt;a href=&quot;qxmlquery&quot;&gt;query&lt;/a&gt; uses multiple variable references, a call to &lt;a href=&quot;qxmlquery#bindVariable&quot;&gt;QXmlQuery::bindVariable&lt;/a&gt;() is required to bind each different variable name to a node in the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd249ed4ee2223b3e62e75f49e835ae0edc3be2" translate="yes" xml:space="preserve">
          <source>To connect the signal to the slot, we use &lt;a href=&quot;qobject#connect&quot;&gt;QObject::connect&lt;/a&gt;(). There are several ways to connect signal and slots. The first is to use function pointers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b762b07916df9d837de8a328a5628b22eb6e9a" translate="yes" xml:space="preserve">
          <source>To connect to an already running object use the following pattern:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a19a95cad12632ac72088c619f02487f5d463f9c" translate="yes" xml:space="preserve">
          <source>To consider a field &quot;filled&quot;, &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; simply checks that the field's current value doesn't equal the original value (the value it had when &lt;a href=&quot;qwizard#initializePage&quot;&gt;initializePage&lt;/a&gt;() was called). For &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; and &lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt; subclasses, &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; also checks that &lt;a href=&quot;qlineedit#acceptableInput-prop&quot;&gt;hasAcceptableInput()&lt;/a&gt; returns true, to honor any validator or mask.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2edee2a37dabae580c5126569c51aff2f373155d" translate="yes" xml:space="preserve">
          <source>To consider a field &quot;filled&quot;, &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; simply checks that their current value doesn't equal their original value (the value they had before &lt;a href=&quot;qwizardpage#initializePage&quot;&gt;initializePage&lt;/a&gt;() was called). For &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;, it also checks that &lt;a href=&quot;qlineedit#acceptableInput-prop&quot;&gt;hasAcceptableInput()&lt;/a&gt; returns true, to honor any validator or mask.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5912952d7c745121c584651eddefb7924ac9c1ba" translate="yes" xml:space="preserve">
          <source>To construct a &lt;a href=&quot;qdomtext&quot;&gt;QDomText&lt;/a&gt; with content, use &lt;a href=&quot;qdomdocument#createTextNode&quot;&gt;QDomDocument::createTextNode&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="244e27a59676038dcc24c3ef5766f53925be31c8" translate="yes" xml:space="preserve">
          <source>To construct a &lt;a href=&quot;qhttppart&quot;&gt;QHttpPart&lt;/a&gt; reading from a device (e.g. a file), the following can be applied:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c162150a543bb63880b7ef25bc3548b97e779f06" translate="yes" xml:space="preserve">
          <source>To construct a &lt;a href=&quot;qhttppart&quot;&gt;QHttpPart&lt;/a&gt; with a small body, consider the following snippet (this produces the data shown in the example above):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc3c5c1cfcaedc2a4f359dbff663897263086440" translate="yes" xml:space="preserve">
          <source>To construct a URL from an encoded string, you can also use &lt;a href=&quot;qurl#fromEncoded&quot;&gt;fromEncoded&lt;/a&gt;():</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc38274e52cf92f9d8becfe61f16477fb11af2db" translate="yes" xml:space="preserve">
          <source>To construct an atomic value as element content, enclose an expression in curly braces and embed it in the element constructor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f12a94dd34862c121b6bab97a2a50797526acd9" translate="yes" xml:space="preserve">
          <source>To control how &lt;a href=&quot;qml-qtquick-animatedsprite&quot;&gt;AnimatedSprite&lt;/a&gt; responds to being scaled, use the &lt;a href=&quot;qml-qtquick-item#smooth-prop&quot;&gt;smooth&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4ad18b3df3f807a463e0902f12c6e38a95cc647" translate="yes" xml:space="preserve">
          <source>To convert a &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; to and from HICON you can use the QtWinExtras functions QtWin::toHICON() and QtWin::fromHICON() respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="253dc35440ac13f2db005b757af6cf58c070a3c3" translate="yes" xml:space="preserve">
          <source>To convert from one of these encodings, &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; provides &lt;a href=&quot;qstring#fromLatin1&quot;&gt;fromLatin1&lt;/a&gt;(), &lt;a href=&quot;qstring#fromUtf8&quot;&gt;fromUtf8&lt;/a&gt;(), and &lt;a href=&quot;qstring#fromLocal8Bit&quot;&gt;fromLocal8Bit&lt;/a&gt;(). Other encodings are supported through the &lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9353d8e93b16276c8bb026dfd3b3e0a8224d920" translate="yes" xml:space="preserve">
          <source>To convert the data to a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; use &lt;a href=&quot;qstring#fromLocal8Bit&quot;&gt;QString::fromLocal8Bit&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c0b98e8d438993f6225ef263a034f987f0f8408" translate="yes" xml:space="preserve">
          <source>To create a &lt;a href=&quot;qml-qtquick-controls-splitview&quot;&gt;SplitView&lt;/a&gt; with three items, and let the center item get superfluous space, one could do the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b423b442d54e1a56f6328346069fafe0a0a62a4" translate="yes" xml:space="preserve">
          <source>To create a &lt;a href=&quot;qml-qtquick-controls2-splitview&quot;&gt;SplitView&lt;/a&gt; with three items, and let the center item get superfluous space, one could do the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffe94bae9af82fed893b71a5819fba6ddc4890eb" translate="yes" xml:space="preserve">
          <source>To create a &lt;a href=&quot;qml-qtquick-extras-piemenu&quot;&gt;PieMenu&lt;/a&gt; that opens after a long press and selects items upon releasing, you can combine ActivationMode.ActivateOnRelease with a &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; using a Timer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8859e5003561fdd4ad44e9cb0de34fe8e5e72173" translate="yes" xml:space="preserve">
          <source>To create a &lt;a href=&quot;qml-qtquick-propertychanges&quot;&gt;PropertyChanges&lt;/a&gt; object, specify the &lt;a href=&quot;qml-qtquick-propertychanges#target-prop&quot;&gt;target&lt;/a&gt; item whose properties are to be modified, and define the new property values or bindings. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06f2b45a447e4fcc17ba2c84c4c41911d97f6589" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;coordinate&lt;/code&gt; value, use the &lt;a href=&quot;qml-qtpositioning-qtpositioning#coordinate-method&quot;&gt;QtPositioning.coordinate()&lt;/a&gt; function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="921b58a7a20e4f1f6e42135ab076cba8b29ccca1" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;date&lt;/code&gt; value, specify it as a &quot;YYYY-MM-DDThh:mm:ss.zzzZ&quot; string. (The T is literal, YYYY is a full year number, MM and DD are month and day numbers, hh, mm and ss are hours, minutes and seconds, with .zzz as milliseconds and Z as time-zone offset. The T and following time are optional. If they are omitted, the date is handled as the start of UTC's day, which falls on other dates in some time-zones. When T is included, the :ss.zzz or just .zzz part can be omitted. With or without those, the zone offset can be omitted, in which case local time is used.) For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="446fbb84f53b7754e237f55e86e35f80743230cd" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;geoshape&lt;/code&gt; value, specify it as a &quot;shape()&quot; string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cff5a876d89bee729fad48017121368e3590e27" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;point&lt;/code&gt; value, specify it as a &quot;x,y&quot; string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6ac9b71a1af4e698659515cce04971a111607e" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;quaternion&lt;/code&gt; value, specify it as a &quot;scalar,x,y,z&quot; string, or define the components individually, or compose it with the Qt.quaternion() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93007e8723c47bd61271059bc879a5378661092f" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;rect&lt;/code&gt; value, specify it as a &quot;x, y, width x height&quot; string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab05e5352707b4948ec04985a6a1ed66e277afe" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;size&lt;/code&gt; value, specify it as a &quot;width x height&quot; string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d1593183166c4771a8129d27a6bb4b9d3beda1f" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;vector2d&lt;/code&gt; value, specify it as a &quot;x,y&quot; string, or define the components individually, or compose it with the Qt.vector2d() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3960ad797c60cbd3e7bdf33fc5e746b5446468ee" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;vector3d&lt;/code&gt; value, specify it as a &quot;x,y,z&quot; string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea3ab395d74001dde7ede58d72cb5712d8066d1f" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;vector4d&lt;/code&gt; value, specify it as a &quot;x,y,z,w&quot; string, or define the components individually, or compose it with the Qt.vector4d() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0efb198ed1bb9f2dc77d8859c0cf44f9371e2c25" translate="yes" xml:space="preserve">
          <source>To create a QML object from an arbitrary string of QML (instead of a file), use &lt;a href=&quot;qml-qtqml-qt#createQmlObject-method&quot;&gt;Qt.createQmlObject()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1448f444843668c38d94b9c442de50def080b5b" translate="yes" xml:space="preserve">
          <source>To create a Vulkan surface for a window, or retrieve an existing one, call &lt;a href=&quot;qvulkaninstance#surfaceForWindow&quot;&gt;surfaceForWindow&lt;/a&gt;(). Most platforms will only create the surface via &lt;code&gt;VK_KHR_*_surface&lt;/code&gt; when first calling &lt;a href=&quot;qvulkaninstance#surfaceForWindow&quot;&gt;surfaceForWindow&lt;/a&gt;(), but there may be platform-specific variations in the internal behavior. Once created, subsequent calls to &lt;a href=&quot;qvulkaninstance#surfaceForWindow&quot;&gt;surfaceForWindow&lt;/a&gt;() just return the same handle. This fits the structure of typical Vulkan-enabled &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; subclasses well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="864bc9dd34c447162f88d8c6a63ddc7b5eaf9b54" translate="yes" xml:space="preserve">
          <source>To create a completely circular button (the default), use a value that is equal to half of the width or height of the button, and make the button's width and height identical.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d222d8116ee7c4eec4c4ded1bca4ed02db1502da" translate="yes" xml:space="preserve">
          <source>To create a connection to a Bluetooth service, create a socket of the appropriate type and call &lt;a href=&quot;qbluetoothsocket#connectToService&quot;&gt;connectToService&lt;/a&gt;() passing the Bluetooth address and port number. &lt;a href=&quot;qbluetoothsocket&quot;&gt;QBluetoothSocket&lt;/a&gt; will emit the &lt;a href=&quot;qbluetoothsocket#connected&quot;&gt;connected&lt;/a&gt;() signal when the connection is established.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92e7bfba5b3728581cb792d4eb623e3460f64694" translate="yes" xml:space="preserve">
          <source>To create a container extension, your extension class must inherit from both &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and &lt;a href=&quot;qdesignercontainerextension&quot;&gt;QDesignerContainerExtension&lt;/a&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50fb15d63ca35b4f3540ad016b3af11e5cc696ba" translate="yes" xml:space="preserve">
          <source>To create a custom task menu extension, your extension class must inherit from both &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and &lt;a href=&quot;qdesignertaskmenuextension&quot;&gt;QDesignerTaskMenuExtension&lt;/a&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dc0ea98f1ab1c227f0ea7e83c76fba2411a0cba" translate="yes" xml:space="preserve">
          <source>To create a datagram suitable for sending in a reply, use &lt;a href=&quot;qnetworkdatagram#makeReply&quot;&gt;QNetworkDatagram::makeReply&lt;/a&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c224c1444538d57a11108f65feb0fbea82e4fde" translate="yes" xml:space="preserve">
          <source>To create a document using DOM use code like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfecba2b3a6932dcdf4b5f5f9302a7a6d0dea3cb" translate="yes" xml:space="preserve">
          <source>To create a menu, define at least one &lt;a href=&quot;qml-qtquick-controls-menuitem&quot;&gt;MenuItem&lt;/a&gt; as a child of it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ca27048ac036978c1baf8a603ee098179432c9" translate="yes" xml:space="preserve">
          <source>To create a parallel state group, pass &lt;a href=&quot;qstate#ChildMode-enum&quot;&gt;QState::ParallelStates&lt;/a&gt; to the &lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt; constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d56870857a4fba8adcbc11e08fc642fd3808e56f" translate="yes" xml:space="preserve">
          <source>To create a parallel state group, set childMode to &lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt;.ParallelStates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7583a1cee4a37ff29efd75ede35bae5ddfacb982" translate="yes" xml:space="preserve">
          <source>To create a property binding, a property is assigned a JavaScript expression that evaluates to the desired value. At its simplest, a binding may be a reference to another property. Take the following example, where the blue &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;'s height is bound to the height of its parent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c32bf0f82af76f299e99cc0c6bc22c865ecfbf6" translate="yes" xml:space="preserve">
          <source>To create a property sheet extension, your extension class must inherit from both &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and &lt;a href=&quot;qdesignerpropertysheetextension&quot;&gt;QDesignerPropertySheetExtension&lt;/a&gt;. Then, since we are implementing an interface, we must ensure that it's made known to the meta object system using the &lt;a href=&quot;qobject#Q_INTERFACES&quot;&gt;Q_INTERFACES&lt;/a&gt;() macro:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1c4d85861d3b5e5c4ca1fdc4fe7cda2274dda7f" translate="yes" xml:space="preserve">
          <source>To create a relatively square button that has slightly rounded corners, use a small value, such as &lt;code&gt;3&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06c0d7dbdf6efbf073eacf55224c1c8101c7985c" translate="yes" xml:space="preserve">
          <source>To create a service, do the following steps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acd78a5e638c557eda155f6a1bd49d0933be844b" translate="yes" xml:space="preserve">
          <source>To create a state, add a &lt;a href=&quot;qml-qtquick-state&quot;&gt;State&lt;/a&gt; object to the item's &lt;a href=&quot;qml-qtquick-item#states-prop&quot;&gt;states&lt;/a&gt; property, which holds a list of states for that item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0adc8f65d42702c08ca00af4615175e46e786f" translate="yes" xml:space="preserve">
          <source>To create a table of contents for a manual, create a subproject with a &lt;code&gt;type&lt;/code&gt; property and set it to &lt;code&gt;manual&lt;/code&gt;. The page in the documentation referred to by the &lt;code&gt;indexTitle&lt;/code&gt; property must contain a list of links that acts as a table of contents for the whole manual. QDoc will take the information in this list and create a table of contents for the subproject.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36ea89fb7402d90c4b70f7cc90ff5236b5d88983" translate="yes" xml:space="preserve">
          <source>To create a vertical desktop space (that is, to stack top to bottom instead of left to right), add a &lt;code&gt;virtualDesktopLayout&lt;/code&gt; property after &lt;code&gt;device&lt;/code&gt; with the value of &lt;code&gt;vertical&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3d653b42a97efdcf98a7a0fda0db4a56f6136b7" translate="yes" xml:space="preserve">
          <source>To create an action, use the action editor's &lt;b&gt;New&lt;/b&gt; button, which will then pop up an input dialog. Provide the new action with a &lt;b&gt;Text&lt;/b&gt; -- this is the text that will appear in a menu entry and as the action's tooltip. The text is also automatically added to an &quot;action&quot; prefix, creating the action's &lt;b&gt;Object Name&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c2a63ae45a1f157ad89e3395b12a12e4c3e9eda" translate="yes" xml:space="preserve">
          <source>To create an animation, use an appropriate animation type for the type of the property that is to be animated, and apply the animation depending on the type of behavior that is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b73aa7d03e692976c68c37bf6086ff1f95f7dee2" translate="yes" xml:space="preserve">
          <source>To create an array using &lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt;, use &lt;a href=&quot;qjsengine#newArray&quot;&gt;QJSEngine::newArray&lt;/a&gt;():</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c6ca0e70f220cea2260c3edfb777a4ff0542ad3" translate="yes" xml:space="preserve">
          <source>To create an axis step, concatenate an axis specifier and a node test. The following sections list the axis specifiers and node tests that are available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a0cbeea65a93100732eaf9424fc57d690218111" translate="yes" xml:space="preserve">
          <source>To create an extension you must inherit both &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and the appropriate base class, and reimplement its functions. Since we are implementing an interface, we must ensure that it is made known to the meta object system using the &lt;a href=&quot;qobject#Q_INTERFACES&quot;&gt;Q_INTERFACES&lt;/a&gt;() macro in the extension class's definition. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16848dbe37048f97005540453d734b7b5ef1e5ef" translate="yes" xml:space="preserve">
          <source>To create an iTunes test user, log into &lt;a href=&quot;https://itunesconnect.apple.com&quot;&gt;iTunes Connect&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba4a830997f9fa33e068ab2f25bc6da685931092" translate="yes" xml:space="preserve">
          <source>To create an object type, a QML document should be placed into a text file named as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01bf512177d18ccb0d1bb9a0b187ebe4a421bbd2" translate="yes" xml:space="preserve">
          <source>To create and edit new forms, open the &lt;b&gt;File&lt;/b&gt; menu and select &lt;b&gt;New Form...&lt;/b&gt; or press &lt;b&gt;Ctrl+N&lt;/b&gt;. Existing forms can also be edited by selecting &lt;b&gt;Open Form...&lt;/b&gt; from the &lt;b&gt;File&lt;/b&gt; menu or pressing &lt;b&gt;Ctrl+O&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82a553a6445c668db1d09f8972f4910285e3188c" translate="yes" xml:space="preserve">
          <source>To create events of a custom type, you need to define an event number, which must be greater than &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::User&lt;/a&gt;, and you may need to subclass &lt;a href=&quot;qevent&quot;&gt;QEvent&lt;/a&gt; in order to pass specific information about your custom event. See the &lt;a href=&quot;qevent&quot;&gt;QEvent&lt;/a&gt; documentation for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af56d9217718b5cf4e05ffb77714d10da1c0915a" translate="yes" xml:space="preserve">
          <source>To create instances of a component in code where a &lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt; instance is not available, you can use &lt;a href=&quot;qqmlengine#qmlContext&quot;&gt;qmlContext&lt;/a&gt;() or &lt;a href=&quot;qqmlengine#qmlEngine&quot;&gt;qmlEngine&lt;/a&gt;(). For example, in the scenario below, child items are being created within a &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; subclass:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="befc27a6b724ef04ec2e30f8e2ff5432b6395cdf" translate="yes" xml:space="preserve">
          <source>To create models that populate incrementally, you can reimplement &lt;a href=&quot;qabstractitemmodel#fetchMore&quot;&gt;fetchMore&lt;/a&gt;() and &lt;a href=&quot;qabstractitemmodel#canFetchMore&quot;&gt;canFetchMore&lt;/a&gt;(). If the reimplementation of &lt;a href=&quot;qabstractitemmodel#fetchMore&quot;&gt;fetchMore&lt;/a&gt;() adds rows to the model, &lt;a href=&quot;qabstractitemmodel#beginInsertRows&quot;&gt;beginInsertRows()&lt;/a&gt; and &lt;a href=&quot;qabstractitemmodel#endInsertRows&quot;&gt;endInsertRows()&lt;/a&gt; must be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33091be195ce3f51bf1057ca78223889e43d2741" translate="yes" xml:space="preserve">
          <source>To create submenus, declare a Menu as a child of another Menu:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2767df73cc666fe65bcc4086b7aaa21d6f45d320" translate="yes" xml:space="preserve">
          <source>To create the COM object when the client asks for it the server must export an implementation of a &lt;a href=&quot;qaxfactory&quot;&gt;QAxFactory&lt;/a&gt;. The easist way to do this is to use a set of macros:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfc05acf1ac011d738c7821397030f760b6e36d9" translate="yes" xml:space="preserve">
          <source>To create these types, mark the pages by providing a &lt;code&gt;type&lt;/code&gt; argument to the &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#page-command&quot;&gt;\page&lt;/a&gt; command. The &lt;code&gt;type&lt;/code&gt; argument is the second argument, with the file name being the first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c36d901d4a220ea1e4fe4a5e1175f092ecd5f53" translate="yes" xml:space="preserve">
          <source>To create this &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt; object, we first create the definition file, &lt;code&gt;simpleswitch.rep&lt;/code&gt;. This file describes the properties and methods for the object and is input to the &lt;a href=&quot;qtremoteobjects-repc#&quot;&gt;repc&lt;/a&gt; utility which is part of Qt Remote Objects. Only the interfaces that need to be exposed to &lt;a href=&quot;qtremoteobjects-replica#replica&quot;&gt;Replica&lt;/a&gt; objects are defined in this file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c0f6c8abffbd32c1f421c7de16e9910c36df192" translate="yes" xml:space="preserve">
          <source>To create your own custom effect, create a subclass of &lt;a href=&quot;qgraphicseffect&quot;&gt;QGraphicsEffect&lt;/a&gt; (or any other existing effects) and reimplement the virtual function &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;draw&lt;/a&gt;(). This function is called whenever the effect needs to redraw. The &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;draw&lt;/a&gt;() function takes the painter with which to draw as an argument. For more information, refer to the documenation for &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;draw&lt;/a&gt;(). In the &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;draw&lt;/a&gt;() function you can call &lt;a href=&quot;qgraphicseffect#sourcePixmap&quot;&gt;sourcePixmap&lt;/a&gt;() to get a pixmap of the graphics effect source which you can then process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4dbc39d98a3b7d47d8cd5e1882f44ef08ed68bd" translate="yes" xml:space="preserve">
          <source>To customize the appearance of each &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#menuItem-prop&quot;&gt;menuItem&lt;/a&gt; without having to define your own, you can use the &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#backgroundColor-prop&quot;&gt;backgroundColor&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#selectionColor-prop&quot;&gt;selectionColor&lt;/a&gt; properties. To customize the drop shadow, use the &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#shadowColor-prop&quot;&gt;shadowColor&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#shadowRadius-prop&quot;&gt;shadowRadius&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#shadowSpread-prop&quot;&gt;shadowSpread&lt;/a&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e70151e99cc8552276a9e1bfec4748811fad93de" translate="yes" xml:space="preserve">
          <source>To debug an executable server, run the application in a debugger and start with the command line parameter &lt;code&gt;-activex&lt;/code&gt;. Then start your client and create an instance of your ActiveX control. COM will use the existing process for the next client trying to create an ActiveX control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48715a0a1aa281de08597b22876c63f4417a3c88" translate="yes" xml:space="preserve">
          <source>To debug an in-process server in Visual Studio, set the server project as the active project, and specify a client &quot;executable for debug session&quot; in the project settings (e.g. use the ActiveX Test Container). You can set breakpoints in your code, and also step into &lt;a href=&quot;activeqt-index#&quot;&gt;ActiveQt&lt;/a&gt; and Qt code if you installed the debug version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d6d53607b2d75e2cb48061d7d53b8d5288cd9cd" translate="yes" xml:space="preserve">
          <source>To debug your server run it with -dumpidl outputfile and check where it crashes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a5e71f4fa016e8b6a5350a6e3f9f3601bcbb0c" translate="yes" xml:space="preserve">
          <source>To declare a property, use the &lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY()&lt;/a&gt; macro in a class that inherits &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0360b68c626ea835bebf2bfc518b0780d95c3cfa" translate="yes" xml:space="preserve">
          <source>To define a buddy widget for a label, click on the label, drag the connection to another widget on the form, and release the mouse button. The connection shown indicates how input focus is passed to the buddy widget. You can use the form preview to test the connections between each label and its buddy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="636712b0cb3960110f9c8112889e686d6afb6ed4" translate="yes" xml:space="preserve">
          <source>To define a class use the &lt;code&gt;class&lt;/code&gt; keyword, followed by the name you want for your type, and then enclose your API in brackets like so</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12c2b34290a4cd4461c82e19bbc59fd22df515c8" translate="yes" xml:space="preserve">
          <source>To define a drawing area in the Canvas item set the &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; properties. For example, the following code creates a Canvas item which has a drawing area with a height of 100 pixels and width of 200 pixels:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="237460d82f046cee21b9f4e182de5fb34d4888f3" translate="yes" xml:space="preserve">
          <source>To define multiple transitions, specify &lt;a href=&quot;qml-qtquick-item#transitions-prop&quot;&gt;Item::transitions&lt;/a&gt; as a list:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdd1aa6229fc5dc07c802818527d5d2a5d325dc1" translate="yes" xml:space="preserve">
          <source>To define the layout direction for a particular locale, declare the dedicated string literal &lt;code&gt;QT_LAYOUT_DIRECTION&lt;/code&gt; in context &lt;code&gt;QGuiApplication&lt;/code&gt; as either &quot;LTR&quot; or &quot;RTL&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c602695b2e00e6ebc1596ab8c081b2992c0e3ee" translate="yes" xml:space="preserve">
          <source>To delete a page, select &lt;b&gt;Delete Page&lt;/b&gt; from the toolbox widget's context menu.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c2e5b9cf85294ed97eb4f2b0a49a9baddaa0e1d" translate="yes" xml:space="preserve">
          <source>To delete a tab:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b8e9e0d2d5bb873a528c34b89848f84f1c67828" translate="yes" xml:space="preserve">
          <source>To demonstrate how data can be retrieved from a model, using model indexes, we set up a &lt;a href=&quot;qfilesystemmodel&quot;&gt;QFileSystemModel&lt;/a&gt; without a view and display the names of files and directories in a widget. Although this does not show a normal way of using a model, it demonstrates the conventions used by models when dealing with model indexes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23bb4f43022105d83bee84cf85192d718e4022d0" translate="yes" xml:space="preserve">
          <source>To demonstrate some of the principal features of selections, we construct an instance of a custom table model with 32 items in total, and open a table view onto its data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="232c2ad79105d729fe63e677713ea96eafbdd588" translate="yes" xml:space="preserve">
          <source>To demonstrate the core functionality of the State Machine API, let's look at a small example: A state machine with three states, &lt;code&gt;s1&lt;/code&gt;, &lt;code&gt;s2&lt;/code&gt; and &lt;code&gt;s3&lt;/code&gt;. The state machine is controlled by a single &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt;; when the button is clicked, the machine transitions to another state. Initially, the state machine is in state &lt;code&gt;s1&lt;/code&gt;. The statechart for this machine is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d8c504baae60f12e60b66ca8ae4d452e033a100" translate="yes" xml:space="preserve">
          <source>To demonstrate the core functionality of the State Machine API, let's look at an example: A state machine with three states, &lt;code&gt;s1&lt;/code&gt;, &lt;code&gt;s2&lt;/code&gt; and &lt;code&gt;s3&lt;/code&gt;. The state machine is controlled by a single Button; when the button is clicked, the machine transitions to another state. Initially, the state machine is in state &lt;code&gt;s1&lt;/code&gt;. The following is a state chart showing the different states in our example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aade4445c4a9f13cd4201b65b8311a26873dcf8" translate="yes" xml:space="preserve">
          <source>To demonstrate, we create a simple Calculator Form application. It is based on the original &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdesigner-calculatorform-example.html#&quot;&gt;Calculator Form&lt;/a&gt; example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b09875b7d23305c526572d4b5302c7b3d8cdfb7e" translate="yes" xml:space="preserve">
          <source>To demonstrate, we create two instances of our previously defined component and set the first one to have focus. The intention is that when the &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, or &lt;code&gt;C&lt;/code&gt; keys are pressed, the first of the two components receives the event and responds accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77915c725f4e90ed2d82ab53947eb39c04d3e920" translate="yes" xml:space="preserve">
          <source>To describe algorithmic complexity, we use the following terminology, based on the &quot;big Oh&quot; notation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d7889216337e1c79e0a700cf9e93146ec92e9c1" translate="yes" xml:space="preserve">
          <source>To detect other failures check the output of &lt;a href=&quot;qpainter#begin&quot;&gt;QPainter::begin&lt;/a&gt;() or &lt;a href=&quot;qprinter#newPage&quot;&gt;QPrinter::newPage&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5b57b0e303bce0cb02dc3888fc360ece9199c40" translate="yes" xml:space="preserve">
          <source>To detect value changes made in the UI layer you can connect to the &lt;a href=&quot;qqmlpropertymap#valueChanged&quot;&gt;valueChanged&lt;/a&gt;() signal. However, note that &lt;a href=&quot;qqmlpropertymap#valueChanged&quot;&gt;valueChanged&lt;/a&gt;() is &lt;b&gt;NOT&lt;/b&gt; emitted when changes are made by calling &lt;a href=&quot;qqmlpropertymap#insert&quot;&gt;insert&lt;/a&gt;() or &lt;a href=&quot;qqmlpropertymap#clear&quot;&gt;clear&lt;/a&gt;() - it is only emitted when a value is updated from QML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de0644713aee6e242015906cdf56846e10af46eb" translate="yes" xml:space="preserve">
          <source>To determine the attributes of the font actually used in the window system, use a &lt;a href=&quot;qfontinfo&quot;&gt;QFontInfo&lt;/a&gt; object, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27687f31e3222b2c704e422d9733df4344fbb379" translate="yes" xml:space="preserve">
          <source>To determine the length of the array, access the &lt;code&gt;&quot;length&quot;&lt;/code&gt; property. To access array elements, use the &lt;a href=&quot;qjsvalue#property-1&quot;&gt;property&lt;/a&gt;(quint32 arrayIndex) overload. The following code reads the array we created above back into a list:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db9bf2959b33b982ef422645bf01dc26957ebbf2" translate="yes" xml:space="preserve">
          <source>To determine the number of rows affected by a non-&lt;code&gt;SELECT&lt;/code&gt; statement, use &lt;a href=&quot;qsqlquery#numRowsAffected&quot;&gt;numRowsAffected&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d4e793c01ffa7b30f31211ea3ee05fb08ef4b77" translate="yes" xml:space="preserve">
          <source>To determine what a &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; refers to, the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0de072ff5a4f8f5f27c0ba6ad638c7dc42698c91" translate="yes" xml:space="preserve">
          <source>To determine whether a database driver supports a given feature, use &lt;a href=&quot;qsqldriver#hasFeature&quot;&gt;QSqlDriver::hasFeature&lt;/a&gt;(). In the following example, we call &lt;a href=&quot;qsqlquery#size&quot;&gt;QSqlQuery::size&lt;/a&gt;() to determine the size of a result set of the underlying database supports that feature; otherwise, we navigate to the last record and use the query's position to tell us how many records there are.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4af566d30f9855053a412d6a6ed49be993f0f25" translate="yes" xml:space="preserve">
          <source>To determine whether an error has occurred, check to see if &lt;a href=&quot;qgeocodereply#error&quot;&gt;QGeoCodeReply::error&lt;/a&gt;() is equal to &lt;a href=&quot;qgeocodereply#Error-enum&quot;&gt;QGeoCodeReply::NoError&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19dc0f738286f03277cfbb373d2c0e42a2d0d5d7" translate="yes" xml:space="preserve">
          <source>To determine whether an error has occurred, check to see if &lt;a href=&quot;qgeoroutereply#error&quot;&gt;QGeoRouteReply::error&lt;/a&gt;() is equal to &lt;a href=&quot;qgeoroutereply#Error-enum&quot;&gt;QGeoRouteReply::NoError&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd8152693b302591b8d689ea068dbe289b5fc1db" translate="yes" xml:space="preserve">
          <source>To develop a simple application from scratch, see &lt;a href=&quot;http://doc.qt.io/qtcreator/qt-creator-accelbubble-example.html#&quot;&gt;Creating a Mobile Application&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="115328fb8e6fff6dfba67f71c74424a9e9df69ae" translate="yes" xml:space="preserve">
          <source>To develop style aware widgets (i.e., widgets that conform to the style in which they are drawn), you need to draw them using the current style. This document shows how widgets draw themselves and which possibilities the style gives them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b86c4e12dd9a51c3f35a31b2899bdd694654762" translate="yes" xml:space="preserve">
          <source>To disable SSL support in a Qt build, configure Qt with the &lt;code&gt;-no-openssl&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81d326b8d2456c6feacc013bacffe0ed2bbd45d1" translate="yes" xml:space="preserve">
          <source>To disable mouse events for an item (i.e., make it transparent for mouse events), call setAcceptedMouseButtons(0).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b323854ba1ebb3dd7a8e3314eb85590755efe9ec" translate="yes" xml:space="preserve">
          <source>To disable the use of a proxy for this socket, use the &lt;a href=&quot;qnetworkproxy#ProxyType-enum&quot;&gt;QNetworkProxy::NoProxy&lt;/a&gt; proxy type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d00c974ae095cff55f1135181e516df84f9953e" translate="yes" xml:space="preserve">
          <source>To disable the use of a proxy, use the &lt;a href=&quot;qnetworkproxy#ProxyType-enum&quot;&gt;QNetworkProxy::NoProxy&lt;/a&gt; proxy type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dbeb4bca6a5e3a208cf1d780f1d01de04b0e20e" translate="yes" xml:space="preserve">
          <source>To discard all standard output from the process, pass &lt;a href=&quot;qprocess#nullDevice&quot;&gt;nullDevice&lt;/a&gt;() here. This is more efficient than simply never reading the standard output, as no &lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt; buffers are filled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f52aad99eec4bf9b20f309412e90176296e7a48" translate="yes" xml:space="preserve">
          <source>To discover the nearby Bluetooth devices:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a534004bdb54ac02295d4f983cabcde4eb345542" translate="yes" xml:space="preserve">
          <source>To display the given search results use the &lt;a href=&quot;qhelpsearchresultwidget&quot;&gt;QHelpSearchResultWidget&lt;/a&gt; or build up your own one if you need more advanced functionality. Note that the &lt;a href=&quot;qhelpsearchresultwidget&quot;&gt;QHelpSearchResultWidget&lt;/a&gt; can not be instantiated directly, you must retrieve the widget from the search engine in use as all connections will be established for you by the widget itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72881948bb70802fc5e2383d56e72743a5d55d28" translate="yes" xml:space="preserve">
          <source>To display the graphical scene defined by the QML document, it may be loaded with &lt;a href=&quot;http://doc.qt.io/qtcreator/index.html#&quot;&gt;Qt Creator&lt;/a&gt;. For simple UI files such as this one, select &lt;b&gt;File &amp;gt; New File or Project &amp;gt; Applications &amp;gt; Qt Quick UI&lt;/b&gt; from within Qt Creator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f8ca203f4829cb4103f45cd63e96a58a7425c29" translate="yes" xml:space="preserve">
          <source>To display the movie in your application, you can pass your &lt;a href=&quot;qmovie&quot;&gt;QMovie&lt;/a&gt; object to &lt;a href=&quot;qlabel#setMovie&quot;&gt;QLabel::setMovie&lt;/a&gt;(). Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="677ecf257c36ecf7200ecb35423451235ef61e86" translate="yes" xml:space="preserve">
          <source>To distinguish the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27ef7c0db92cc246e83e1d7fc6053acb2ddf2c72" translate="yes" xml:space="preserve">
          <source>To distribute the available space according to the space requirement of each column or row, call the view's &lt;a href=&quot;qtableview#resizeColumnsToContents&quot;&gt;resizeColumnsToContents&lt;/a&gt;() or &lt;a href=&quot;qtableview#resizeRowsToContents&quot;&gt;resizeRowsToContents&lt;/a&gt;() functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="564faa3728a2dbdfd8744cb9fa46aeeaf3d47734" translate="yes" xml:space="preserve">
          <source>To do this, you have to switch to &lt;b&gt;Edit Signals/Slots&lt;/b&gt; mode, either by pressing &lt;b&gt;F4&lt;/b&gt; or selecting &lt;b&gt;Edit Signals/Slots&lt;/b&gt; from the &lt;b&gt;Edit&lt;/b&gt; menu.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54de2ad84d48d9d7c293176637193c14b489bca0" translate="yes" xml:space="preserve">
          <source>To document a QML type, start by creating a QDoc comment that uses the &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#qmltype-command&quot;&gt;\qmltype&lt;/a&gt; command as its topic command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca2d5583409e2053223dec82c1cab6ebcd21b467" translate="yes" xml:space="preserve">
          <source>To download and install Qt for Linux, follow the instructions on the &lt;a href=&quot;gettingstarted#&quot;&gt;Getting Started with Qt&lt;/a&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6222aa165b9921f7e413be9611472ca48c9069c7" translate="yes" xml:space="preserve">
          <source>To download and install Qt for Windows, follow the instructions on the &lt;a href=&quot;gettingstarted#&quot;&gt;Getting Started with Qt&lt;/a&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04e9609377770feedc94c407c90ced6c69ada91b" translate="yes" xml:space="preserve">
          <source>To download and install Qt for macOS, follow the instructions on the &lt;a href=&quot;gettingstarted#&quot;&gt;Getting Started with Qt&lt;/a&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d6a8eb87459e3bf1e33d477cc4243f493dd3a9c" translate="yes" xml:space="preserve">
          <source>To draw an arc or circle, call the arcTo(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb88c81ea3b00b5582ff3d8ba43dda532cb5c1f9" translate="yes" xml:space="preserve">
          <source>To draw images, load them by calling the Canvas's &lt;a href=&quot;qml-qtquick-canvas#loadImage-method&quot;&gt;loadImage()&lt;/a&gt; method and then request to paint them in the &lt;code&gt;onImageLoaded&lt;/code&gt; handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42cfe2184a40f7a2069a19c867e30c635c56ee3b" translate="yes" xml:space="preserve">
          <source>To draw its up and down arrows, &lt;a href=&quot;qspinbox&quot;&gt;QSpinBox&lt;/a&gt; uses the &lt;a href=&quot;qstyle#PrimitiveElement-enum&quot;&gt;PE_IndicatorSpinUp&lt;/a&gt; and &lt;a href=&quot;qstyle#PrimitiveElement-enum&quot;&gt;PE_IndicatorSpinDown&lt;/a&gt; primitive elements. Here's how to reimplement the &lt;a href=&quot;qstyle#drawPrimitive&quot;&gt;drawPrimitive&lt;/a&gt;() function to draw them differently:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c451f286685115955e2bed890f44a94ede197e03" translate="yes" xml:space="preserve">
          <source>To dynamically load a component defined in a QML file, call the &lt;a href=&quot;qml-qtqml-qt#createComponent-method&quot;&gt;Qt.createComponent()&lt;/a&gt; function in the &lt;a href=&quot;qml-qtqml-qt&quot;&gt;Qt object&lt;/a&gt;. This function takes the URL of the QML file as its only argument and creates a &lt;a href=&quot;qml-qtqml-component&quot;&gt;Component&lt;/a&gt; object from this URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="097167f467a3974c7e89c1530d65692536a62c49" translate="yes" xml:space="preserve">
          <source>To emit a signal, invoke it as a method. Any relevant &lt;a href=&quot;#signal-handler-attributes&quot;&gt;signal handlers&lt;/a&gt; will be invoked when the signal is emitted, and handlers can use the defined signal argument names to access the respective arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d19a580f99381c23f452ddf3c4869e73c2d081ca" translate="yes" xml:space="preserve">
          <source>To enable &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; to be partially transparent, it needs to be stacked on top of all other widgets. This means you cannot have other widgets partially covering the chart when using accelerated series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d98b5aa396be67022f1fb6f335f462dbdb0bc253" translate="yes" xml:space="preserve">
          <source>To enable &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; to do anti-aliased rendering, use &lt;a href=&quot;qquickpainteditem#setAntialiasing&quot;&gt;setAntialiasing&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="874dfcc9fdaac3126976065732207effa2ed47e3" translate="yes" xml:space="preserve">
          <source>To enable OpenGL rendering, you simply set a new QGLWidget as the viewport of &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; by calling &lt;a href=&quot;qabstractscrollarea#setViewport&quot;&gt;QGraphicsView::setViewport&lt;/a&gt;(). If you want OpenGL with antialiasing, you need OpenGL sample buffer support (see QGLFormat::sampleBuffers()).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2338d65334f9a13bbbe546f8b507c5dc7534dc1d" translate="yes" xml:space="preserve">
          <source>To enable Qt Multimedia Widgets in a project, add this directive into the C++ files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e0ae11fd48c631a5df540e6fb36da76c615182e" translate="yes" xml:space="preserve">
          <source>To enable Qt SQL in a project, add this directive into the C++ files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0645941442dc24eb4ff90f94b85df46b24b4017d" translate="yes" xml:space="preserve">
          <source>To enable Qt Test in a project, add this directive into the C++ files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5873c6978dbf0682c31f63e9b19264330fefbb6c" translate="yes" xml:space="preserve">
          <source>To enable a project to be built in both modes, you must add the &lt;code&gt;debug_and_release&lt;/code&gt; option to the &lt;code&gt;CONFIG&lt;/code&gt; variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ff46e8bef769bb8c1125621845ba41087f769a1" translate="yes" xml:space="preserve">
          <source>To enable additional layers and extensions, provide the list via &lt;a href=&quot;qvulkaninstance#setLayers&quot;&gt;setLayers&lt;/a&gt;() and &lt;a href=&quot;qvulkaninstance#setExtensions&quot;&gt;setExtensions&lt;/a&gt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1162d7488e2af5b103ab4a85a8b657fc5cbb32da" translate="yes" xml:space="preserve">
          <source>To enable again, assign a new &lt;a href=&quot;qsemaphorereleaser&quot;&gt;QSemaphoreReleaser&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb1b03533866db9af8f9e815ab69ee74ae46631a" translate="yes" xml:space="preserve">
          <source>To enable also the pasting of clipboard content from JavaScript, use &lt;a href=&quot;qml-qtwebengine-webenginesettings#javascriptCanPaste-prop&quot;&gt;javascriptCanPaste&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e494c85ec970020aa3c30dc3d670c62740b7ecf" translate="yes" xml:space="preserve">
          <source>To enable background running, uncomment &lt;code&gt;android.app.background_running&lt;/code&gt;&lt;code&gt;meta-data&lt;/code&gt; and set it to true (&lt;code&gt;android:value=&quot;true&quot;&lt;/code&gt; ).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1272d72ae29a37e07175c513526c2874f40b62e" translate="yes" xml:space="preserve">
          <source>To enable creation of objects at run-time, call the &lt;a href=&quot;qmetatype#qRegisterMetaType-1&quot;&gt;qRegisterMetaType&lt;/a&gt;() template function to register it with the meta-object system. This also makes the type available for queued signal-slot communication as long as you call it before you make the first connection that uses the type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25a6f872882df17687b295bad80c78ef3d2c7a2f" translate="yes" xml:space="preserve">
          <source>To enable debugging -- from the start or to attach a debugger later on -- start the application with the following arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96c5d6206105cb45573d8cfe9d7139cb5ebf2537" translate="yes" xml:space="preserve">
          <source>To enable editing in your model, you must also implement &lt;a href=&quot;qabstractitemmodel#setData&quot;&gt;setData&lt;/a&gt;(), and reimplement &lt;a href=&quot;qabstractitemmodel#flags&quot;&gt;flags&lt;/a&gt;() to ensure that &lt;code&gt;ItemIsEditable&lt;/code&gt; is returned. You can also reimplement &lt;a href=&quot;qabstractitemmodel#headerData&quot;&gt;headerData&lt;/a&gt;() and &lt;a href=&quot;qabstractitemmodel#setHeaderData&quot;&gt;setHeaderData&lt;/a&gt;() to control the way the headers for your model are presented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9415e3b27fdbb1b4e2e9fbaffb3b077af4dba7f" translate="yes" xml:space="preserve">
          <source>To enable in process screen readers, all events must be sent after the change has happened.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dac4223acdd40a1f7d7d600929c6a6cbb9c901d" translate="yes" xml:space="preserve">
          <source>To enable item dragging, set the view's &lt;a href=&quot;qabstractitemview#dragEnabled-prop&quot;&gt;dragEnabled&lt;/a&gt; property to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b5a0e6494560eaf4882048760b2cf78e36cad80" translate="yes" xml:space="preserve">
          <source>To enable multisampling, set the number of requested samples on the &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; that is passed to &lt;a href=&quot;qopenglwidget#setFormat&quot;&gt;setFormat&lt;/a&gt;(). On systems that do not support it the request may get ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="142605f19b421aaaa0c5c63389e30bd395f0d471" translate="yes" xml:space="preserve">
          <source>To enable other devices to find your service, create a &lt;a href=&quot;qbluetoothserviceinfo&quot;&gt;QBluetoothServiceInfo&lt;/a&gt; with the applicable attributes for your service and register it using &lt;a href=&quot;qbluetoothserviceinfo#registerService&quot;&gt;QBluetoothServiceInfo::registerService&lt;/a&gt;(). Call &lt;a href=&quot;qbluetoothserver#serverPort&quot;&gt;serverPort&lt;/a&gt;() to get the channel number that is being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dec42b7d3cbb49bb6c6601b169b4fbf45629b6d" translate="yes" xml:space="preserve">
          <source>To enable the &lt;a href=&quot;qhelpengine&quot;&gt;QHelpEngine&lt;/a&gt; to retrieve the proper documentation to a given link, every documentation set has to have a unique identifier. A unique identifier also makes it possible for the help collection to keep track of a documentation set without relying on its file name. The Qt help system uses a namespace as identifier which is defined by the mandatory namespace tags. In the example above, the namespace is &quot;mycompany.com.myapplication.1.0&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ed4fa65eb80d4af0440920652a583c187b1053c" translate="yes" xml:space="preserve">
          <source>To enable the user to interact with an accessible object the object must implement &lt;a href=&quot;qaccessibleactioninterface&quot;&gt;QAccessibleActionInterface&lt;/a&gt; in addition to &lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt;. Objects that support selections can define actions to change the selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b9a2ff5d07ec13b638513a8fbcd2ebc9ff4a2ab" translate="yes" xml:space="preserve">
          <source>To enable the user to move the items around within the view, we must set the list widget's &lt;a href=&quot;qabstractitemview#dragDropMode-prop&quot;&gt;dragDropMode&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab021340b3b0172776086379b98cd71af66d1eb3" translate="yes" xml:space="preserve">
          <source>To enable this feature in a top-level widget, set its &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt::WA_TranslucentBackground&lt;/a&gt; attribute with &lt;a href=&quot;qwidget#setAttribute&quot;&gt;setAttribute&lt;/a&gt;() and ensure that its background is painted with non-opaque colors in the regions you want to be partially transparent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bd0ffcf560e599409a5dc4562e76e194ff7437b" translate="yes" xml:space="preserve">
          <source>To enable this model, use the command-line argument &lt;code&gt;--process-per-site&lt;/code&gt;. See &lt;a href=&quot;qtwebengine-debugging#using-command-line-arguments&quot;&gt;Using Command-Line Arguments&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93808c402beed6e0eeca237097cf151794335cb6" translate="yes" xml:space="preserve">
          <source>To enable use of &lt;a href=&quot;qgraphicsitem#qgraphicsitem_cast&quot;&gt;qgraphicsitem_cast&lt;/a&gt;() with a custom item, reimplement this function and declare a Type enum value equal to your custom item's type. Custom items must return a value larger than or equal to &lt;a href=&quot;qgraphicsitem#anonymous-enum&quot;&gt;UserType&lt;/a&gt; (65536).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4536380ce40a5e2a04b3479d6ae865efb72d096" translate="yes" xml:space="preserve">
          <source>To enable user interaction with the pie chart, some basic signals are emitted when users click pie slices or hover the mouse over them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab2ceb31dac20e8ca1b52170d124221fb2753b95" translate="yes" xml:space="preserve">
          <source>To ensure that drawing operations are as fast as possible, &lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt; and its subclasses have public data members. See the &lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt; class documentation for details on how to use it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62ff9df43f53693353d70e441423a5dcc7762b1e" translate="yes" xml:space="preserve">
          <source>To ensure that operations with &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; are efficient, e.g., copying names and comparing them, each instance of &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; is associated with a &lt;a href=&quot;qxmlnamepool&quot;&gt;name pool&lt;/a&gt;, which must be specified at &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; construction time. The three components of the &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt;, i.e., the namespace URI, the local name, and the prefix, are stored in the name pool mapped to identifiers so they can be shared. For this reason, the only way to create a valid instance of &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; is to use the class constructor, where the &lt;a href=&quot;qxmlnamepool&quot;&gt;name pool&lt;/a&gt;, local name, namespace URI, and prefix must all be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e1e730033532e279b8bb13f9ebfce5ed261932d" translate="yes" xml:space="preserve">
          <source>To ensure that the documentation remains synchronized with the source file, a substring of the line must be specified as an argument to the command. Note that the command considers the rest of the line as part of its argument, make sure to follow the substring with a line break.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c960442894010c156bf4de0977ded475c3d7f3df" translate="yes" xml:space="preserve">
          <source>To ensure that the message box does not pop up until the geometry actually reaches its final value, we can use the state's &lt;a href=&quot;qstate#propertiesAssigned&quot;&gt;propertiesAssigned()&lt;/a&gt; signal. The &lt;a href=&quot;qstate#propertiesAssigned&quot;&gt;propertiesAssigned()&lt;/a&gt; signal will be emitted when the property is assigned its final value, whether this is done immediately or after the animation has finished playing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa264dc11e8254e6035f6eb159af438b211901dc" translate="yes" xml:space="preserve">
          <source>To ensure that the popup is positioned within the bounds of the enclosing window, the &lt;a href=&quot;qml-qtquick-controls2-popup#margins-prop&quot;&gt;margins&lt;/a&gt; property can be set to a non-negative value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9089db3084e6a9ad462d32cf5c7c0d599a312f2d" translate="yes" xml:space="preserve">
          <source>To ensure that the representation of the data is kept separate from the way it is accessed, the concept of a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d445470a3e92e5406abb78858f44adbe012d74e" translate="yes" xml:space="preserve">
          <source>To ensure that they are laid out exactly like this in your program, you need to place these widgets into a layout. We will do this in groups of three. Select the &quot;RED&quot; label. Then, hold down &lt;b&gt;Ctrl&lt;/b&gt; while you select its corresponding spin box and slider. In the &lt;b&gt;Form&lt;/b&gt; menu, select &lt;b&gt;Lay Out in a Grid&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98260433cee8dca3516df592d80a0c6b941bb6b0" translate="yes" xml:space="preserve">
          <source>To ensure that we can use the user interface, we need to include the header file that &lt;code&gt;uic&lt;/code&gt; generates before referring to &lt;code&gt;Ui::CalculatorForm&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
