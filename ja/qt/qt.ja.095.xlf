<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="">
    <body>
      <group id="">
        <trans-unit id="9cb11fe279199d295d36a39f725588445000acad" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt; object can be built using the &lt;a href=&quot;qtransform#setMatrix&quot;&gt;setMatrix&lt;/a&gt;(), &lt;a href=&quot;qtransform#scale&quot;&gt;scale&lt;/a&gt;(), &lt;a href=&quot;qtransform#rotate&quot;&gt;rotate&lt;/a&gt;(), &lt;a href=&quot;qtransform#translate&quot;&gt;translate&lt;/a&gt;() and &lt;a href=&quot;qtransform#shear&quot;&gt;shear&lt;/a&gt;() functions. Alternatively, it can be built by applying &lt;a href=&quot;qtransform#basic-matrix-operations&quot;&gt;basic matrix operations&lt;/a&gt;. The matrix can also be defined when constructed, and it can be reset to the identity matrix (the default) using the &lt;a href=&quot;qtransform#reset&quot;&gt;reset&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f3e0edd9340a005d02da86d1820bb1a11ff9c8" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt; object contains a 3 x 3 matrix. The &lt;code&gt;m31&lt;/code&gt; (&lt;code&gt;dx&lt;/code&gt;) and &lt;code&gt;m32&lt;/code&gt; (&lt;code&gt;dy&lt;/code&gt;) elements specify horizontal and vertical translation. The &lt;code&gt;m11&lt;/code&gt; and &lt;code&gt;m22&lt;/code&gt; elements specify horizontal and vertical scaling. The &lt;code&gt;m21&lt;/code&gt; and &lt;code&gt;m12&lt;/code&gt; elements specify horizontal and vertical</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c8522cd77dc0b643894db25338dab319c7bce1" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt; implements a tree representation of items from a model. This class is used to provide standard hierarchical lists that were previously provided by the &lt;code&gt;QListView&lt;/code&gt; class, but using the more flexible approach provided by Qt's model/view architecture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3238aea85fb128f26a859e01cfd164c89492e357" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qtremoteobjects-replica#replica&quot;&gt;Replica&lt;/a&gt; is a light-weight proxy for the &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt; object, but a Replica supports the same connections and behavior of QObjects, which makes it usable in the same way as any other &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; that Qt provides. Behind the scenes, QtRO handles everything that's necessary for the Replica to look like its Source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1abd5b29a8e30044dcc5467f8733822760bee3f5" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qundocommand&quot;&gt;QUndoCommand&lt;/a&gt; has an associated &lt;a href=&quot;qundocommand#text&quot;&gt;text&lt;/a&gt;(). This is a short string describing what the command does. It is used to update the text properties of the stack's undo and redo actions; see &lt;a href=&quot;qundostack#createUndoAction&quot;&gt;QUndoStack::createUndoAction&lt;/a&gt;() and &lt;a href=&quot;qundostack#createRedoAction&quot;&gt;QUndoStack::createRedoAction&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9011f19ddbb2da47c4e83d75f16cab77553161d4" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qundocommand&quot;&gt;QUndoCommand&lt;/a&gt; represents a single editing action on a document; for example, inserting or deleting a block of text in a text editor. &lt;a href=&quot;qundocommand&quot;&gt;QUndoCommand&lt;/a&gt; can apply a change to the document with &lt;a href=&quot;qundocommand#redo&quot;&gt;redo&lt;/a&gt;() and undo the change with &lt;a href=&quot;qundocommand#undo&quot;&gt;undo&lt;/a&gt;(). The implementations for these functions must be provided in a derived class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44cc484f511c2c9e5ff7b0df34a1adbc48de27df" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qundogroup&quot;&gt;QUndoGroup&lt;/a&gt; is also useful in conjunction with &lt;a href=&quot;qundoview&quot;&gt;QUndoView&lt;/a&gt;. If a &lt;a href=&quot;qundoview&quot;&gt;QUndoView&lt;/a&gt; is set to watch a group using &lt;a href=&quot;qundoview#setGroup&quot;&gt;QUndoView::setGroup&lt;/a&gt;(), it will update itself to display the active stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e875425a43b04cc9d6b7876976a9cdc1a8b4d13e" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; containing a null pointer (&lt;a href=&quot;qmetatype#Type-enum&quot;&gt;QMetaType::Nullptr&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ebfda5a9111d2694a1b3f3b4392e022ac7a8946" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; containing a pointer to a type derived from &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; will also convert and return true for this function if a &lt;a href=&quot;qobject#qobject_cast&quot;&gt;qobject_cast&lt;/a&gt; to the type described by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9de8c189ee6e4b0bb5de2aac660b8d944db4103f" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; containing a pointer to a type derived from &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; will also return true for this function if a &lt;a href=&quot;qobject#qobject_cast&quot;&gt;qobject_cast&lt;/a&gt; to the template type &lt;code&gt;T&lt;/code&gt; would succeed. Note that this only works for &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclasses which use the &lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT&lt;/a&gt; macro.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e951e7f9dbc2d83362bfbfae4560b84516671b10" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; containing a pointer to a type derived from &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; will also return true for this function if a &lt;a href=&quot;qobject#qobject_cast&quot;&gt;qobject_cast&lt;/a&gt; to the type described by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b40ec11d4513b06064df6234ba2446931b977f7" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; containing a pointer to the &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="170019f1637d46474755638f7443c62b497dd150" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; containing a sequential container will also return true for this function if the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="550799b9c40a3740f0e1e880ec146b7d720fd090" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; containing the date value (&lt;a href=&quot;qjsvalue#toDateTime&quot;&gt;toDateTime&lt;/a&gt;()).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a5337d8806bba5b1f4de3cab80b8a523bafa5f9" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; containing the regular expression value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9923b0e5bb2e221393075db0b910e7d2d7b757c9" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; containing the value of the boolean.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c0bb00d97d940cbc36a240d8e3eaa8119c8076c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; containing the value of the number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6059293c49670d8977abec1000506dc5ddb28960" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; containing the value of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b632ab2ce7b912c18487142617c4488c6dd1bc8" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; is used because &lt;a href=&quot;qmimedata&quot;&gt;QMimeData&lt;/a&gt; belongs to the Qt Core module, whereas &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; belongs to Qt GUI. To convert the &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; to a &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt;, simply use &lt;a href=&quot;qvariant#qvariant_cast&quot;&gt;qvariant_cast&lt;/a&gt;(). For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db07e2e1ccf64cc63f5cf860986f9f442d3b8020" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; is used because &lt;a href=&quot;qmimedata&quot;&gt;QMimeData&lt;/a&gt; belongs to the Qt Core module, whereas &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; belongs to Qt GUI. The conversion from &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; to &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; is implicit. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25783dcfe2b1fde71fd30288caf1a8aa18d67a86" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; is used because &lt;a href=&quot;qmimedata&quot;&gt;QMimeData&lt;/a&gt; belongs to the Qt Core module, whereas &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; belongs to Qt GUI. To convert the &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; to a &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;, simply use &lt;a href=&quot;qvariant#qvariant_cast&quot;&gt;qvariant_cast&lt;/a&gt;(). For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89ee1cc409d7b731c23de4a41da95cd5af9da5c7" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; object holds a single value of a single &lt;a href=&quot;qvariant#type&quot;&gt;type&lt;/a&gt;() at a time. (Some &lt;a href=&quot;qvariant#type&quot;&gt;type&lt;/a&gt;()s are multi-valued, for example a string list.) You can find out what type, T, the variant holds, convert it to a different type using &lt;a href=&quot;qvariant#convert&quot;&gt;convert&lt;/a&gt;(), get its value using one of the toT() functions (e.g., &lt;a href=&quot;qvariant#toSize&quot;&gt;toSize&lt;/a&gt;()) and check whether the type can be converted to a particular type using &lt;a href=&quot;qvariant#canConvert-1&quot;&gt;canConvert&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72b456a0c9544fe1c851b99fb902baced468b135" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; with a structure dependent on the type of extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b3e5711d653f48626f14b4105add2f90847f263" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt; can be bound to an XQuery $variable. All the &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;s in the list must be of the same atomic type, and the $variable the variant list is bound to must be of that same atomic type. If the QVariants in the list are not all of the same atomic type, the XQuery behavior is undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b185ce739528a8ae124eb36f663f899e59e723f" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qvboxlayout&quot;&gt;QVBoxLayout&lt;/a&gt; lays out widgets in a vertical column, from top to bottom.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="126ee8b6fc37613a52b0af53733429dcce8494c4" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qvideoframe&quot;&gt;QVideoFrame&lt;/a&gt; encapsulates the pixel data of a video frame, and information about the frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e5633fef7f9f6851c0077a68898eeff7969e3c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qwebengineurlrequestjob&quot;&gt;QWebEngineUrlRequestJob&lt;/a&gt; is given to &lt;a href=&quot;qwebengineurlschemehandler#requestStarted&quot;&gt;QWebEngineUrlSchemeHandler::requestStarted&lt;/a&gt;() and must be handled by the derived implementations of the class. The job can be handled by calling either &lt;a href=&quot;qwebengineurlrequestjob#reply&quot;&gt;reply&lt;/a&gt;(), &lt;a href=&quot;qwebengineurlrequestjob#redirect&quot;&gt;redirect&lt;/a&gt;(), or &lt;a href=&quot;qwebengineurlrequestjob#fail&quot;&gt;fail&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f748e52a14295d3e7d73adb735bce9e18173bb7" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qwebengineurlschemehandler&quot;&gt;QWebEngineUrlSchemeHandler&lt;/a&gt; can be registered for a profile by &lt;a href=&quot;qwebengineprofile#installUrlSchemeHandler&quot;&gt;installUrlSchemeHandler&lt;/a&gt;() to add support for custom URL schemes. Requests for the scheme are then issued to &lt;a href=&quot;qwebengineurlschemehandler#requestStarted&quot;&gt;QWebEngineUrlSchemeHandler::requestStarted&lt;/a&gt;() as &lt;a href=&quot;qwebengineurlrequestjob&quot;&gt;QWebEngineUrlRequestJob&lt;/a&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2474d728b83d04fa2385364e0e3618d61b802549" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; can have at most one of each action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="829a0e839b2fe25903a026615766f8e1f6017f33" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; pointer to an instance of the custom widget, constructed with the parent supplied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8206b5d79978cc62137016510c0899301c0d4d34" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; respects the safe area margins of a window by incorporating the margins into its contents' margins by default. This means, that a &lt;a href=&quot;qlayout&quot;&gt;QLayout&lt;/a&gt; will use the content area of a widget for its layout, unless the Qt::WA_LayoutOnEntireRect attribute is set. This along with a contents margin of 0 can be used on the actual layout, to allow for example a background image to underlay the status bar and other system areas on an iOS device, while still allowing child widgets of that background to be inset based on the safe area.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="964b43044c29ab894791e5dc004d14bc9b97b6f3" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; should only have one of each action and adding an action it already has will not cause the same action to be in the widget twice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ec30fd7f2212793bc9e4abef7e6c0f3ceeb66e9" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; should only have one of each action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ac199e9f73c744264011450f907be51315abd24" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; created with the &lt;a href=&quot;qsurface#SurfaceType-enum&quot;&gt;QSurface::OpenGLSurface&lt;/a&gt; can be used in combination with &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; and &lt;a href=&quot;qopenglpaintdevice&quot;&gt;QOpenGLPaintDevice&lt;/a&gt; to have OpenGL hardware accelerated 2D graphics, by sacrificing some of the visual quality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="745ac1a7d7742ffec52578bdde2360e661acd0db" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; created with the surface type &lt;a href=&quot;qsurface#SurfaceType-enum&quot;&gt;QSurface::RasterSurface&lt;/a&gt; can be used in combination with &lt;a href=&quot;qbackingstore&quot;&gt;QBackingStore&lt;/a&gt; and &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;, Qt's highly optimized 2D vector graphics API. &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; supports drawing lines, polygons, vector paths, images and text. For more information, see &lt;a href=&quot;paintsystem#&quot;&gt;Paint System&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtgui-rasterwindow-example.html#&quot;&gt;Raster Window Example&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5df3f42a0d3687ebb50a05e01cdedb1afdd0cd68" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qwizardpage#subTitle-prop&quot;&gt;subTitle&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cae12dc8d73ba388f4f16abfddc1282cc00f3d0" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qwizardpage#title-prop&quot;&gt;title&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33e7f960c35917466e319a88de2b56f3863f5c81" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; is constructed from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8390f8bfbcd2f1be61b391d1f0f7de0260838e23" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt; application may not do socket-based communication with another application running on the same host (as this would violate the sandboxing).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2b866a1aef922537575b7fa144890693739fec1" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;Cancel&lt;/b&gt; button defined with the &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;RejectRole&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e881d3c2c45790aae7fcb537e837e0adb2bbd0" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;Close&lt;/b&gt; button defined with the &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;RejectRole&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90248d825c2215c0da2d4cf30b4e1bf81bee27fb" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;Commit&lt;/b&gt; button replaces the &lt;b&gt;Next&lt;/b&gt; button on a commit page. Clicking this button simply calls &lt;a href=&quot;qwizard#next&quot;&gt;QWizard::next&lt;/a&gt;() just like clicking &lt;b&gt;Next&lt;/b&gt; does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09fb529c2989b795d8c27e02565218348b84b3e8" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;Discard&lt;/b&gt; or &lt;b&gt;Don't Save&lt;/b&gt; button, depending on the platform, defined with the &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;DestructiveRole&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9177b410e9fc17156f42973a5c6b8fca00a6544" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;Help&lt;/b&gt; button defined with the &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;HelpRole&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b03e4b6a36ae75c2f853d1555bf05681bed5134" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;No to All&lt;/b&gt; button defined with the &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;NoRole&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86e23d198c62cc796c78cce610baa65585a00ce8" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;No&lt;/b&gt; button defined with the &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;NoRole&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ae1a29d1376fa7e9fb4d3c342c1a1b96c1399a2" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;Reset&lt;/b&gt; button defined with the &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;ResetRole&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11a59ec0b188e43ec67481e31b7dc60b647d897c" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;Restore Defaults&lt;/b&gt; button defined with the &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;ResetRole&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a719628b27f2951fb4aae5c60393dd4c9e347c21" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;Retry&lt;/b&gt; button defined with the &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;AcceptRole&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26608f4e742cb8475e2900936c660fd46d2571fe" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;Save All&lt;/b&gt; button defined with the &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;AcceptRole&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd87d74dc4e75d47ce6d32e621aef5b15871af9" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;Save&lt;/b&gt; button defined with the &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;AcceptRole&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="000d380f271b6a56c079fe53d60157c35b098393" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;Yes to All&lt;/b&gt; button defined with the &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;YesRole&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89bef340393f198a6f41acda53a4ab670053a93b" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;Yes&lt;/b&gt; button defined with the &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;YesRole&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="919a9d06adaef23366d180df88b7fd4fad8449c5" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;modal&lt;/b&gt; dialog is a dialog that blocks input to other visible windows in the same application. Dialogs that are used to request a file name from the user or that are used to set application preferences are usually modal. Dialogs can be &lt;a href=&quot;qt#WindowModality-enum&quot;&gt;application modal&lt;/a&gt; (the default) or &lt;a href=&quot;qt#WindowModality-enum&quot;&gt;window modal&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5eb153f25dbaabba051451793fe380e1fc6a23b" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;modeless&lt;/b&gt; dialog is a dialog that operates independently of other windows in the same application. Find and replace dialogs in word-processors are often modeless to allow the user to interact with both the application's main window and with the dialog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100c7f7399b4bd52f03d3ca247c88ba3a3e0493e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;.dic&lt;/code&gt; file that is a dictionary containing words for the language</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e3386648ae214b0a94fa645c50250352b2d137e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CreateProcessArgumentModifier&lt;/code&gt; function takes one parameter: a pointer to a &lt;code&gt;CreateProcessArguments&lt;/code&gt; struct. The members of this struct will be passed to &lt;code&gt;CreateProcess&lt;/code&gt; after the &lt;code&gt;CreateProcessArgumentModifier&lt;/code&gt; function is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b44f0df69a00d7248e9924b1d0bfd79849e35db6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MEMBER&lt;/code&gt; variable association is required if no &lt;code&gt;READ&lt;/code&gt; accessor function is specified. This makes the given member variable readable and writable without the need of creating &lt;code&gt;READ&lt;/code&gt; and &lt;code&gt;WRITE&lt;/code&gt; accessor functions. It's still possible to use &lt;code&gt;READ&lt;/code&gt; or &lt;code&gt;WRITE&lt;/code&gt; accessor functions in addition to &lt;code&gt;MEMBER&lt;/code&gt; variable association (but not both), if you need to control the variable access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="830dd5040f27fbf255adaa7a733f96dfb8d77cae" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Mac0&lt;/code&gt; map as specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc8152&quot;&gt;RFC 8152&lt;/a&gt; (CBOR Object Signing and Encryption).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e70b630c6be4c039a81474782973914c175778ae" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Mac&lt;/code&gt; map as specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc8152&quot;&gt;RFC 8152&lt;/a&gt; (CBOR Object Signing and Encryption).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de2d38b6c2e8eecb7d12c9e4e7315bcb906ea889" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Message&lt;/code&gt; object, which will be the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eae0730ba549e750ed809f7cf3b5737f261309c9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;NOTIFY&lt;/code&gt; signal is optional. If defined, it should specify one existing signal in that class that is emitted whenever the value of the property changes. &lt;code&gt;NOTIFY&lt;/code&gt; signals for &lt;code&gt;MEMBER&lt;/code&gt; variables must take zero or one parameter, which must be of the same type as the property. The parameter will take the new value of the property. The &lt;code&gt;NOTIFY&lt;/code&gt; signal should only be emitted when the property has really been changed, to avoid bindings being unnecessarily re-evaluated in QML, for example. Qt emits automatically that signal when needed for MEMBER properties that do not have an explicit setter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2e736a5fa7d1fb3d36b0daf949b24867acebc06" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;READ&lt;/code&gt; accessor function is required if no &lt;code&gt;MEMBER&lt;/code&gt; variable was specified. It is for reading the property value. Ideally, a const function is used for this purpose, and it must return either the property's type or a const reference to that type. e.g., &lt;a href=&quot;qwidget#focus-prop&quot;&gt;QWidget::focus&lt;/a&gt; is a read-only property with &lt;code&gt;READ&lt;/code&gt; function, &lt;a href=&quot;qwidget#focus-prop&quot;&gt;QWidget::hasFocus&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="469541031836ec916cac9a1bf1b20fb1d61cc9fc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;RESET&lt;/code&gt; function is optional. It is for setting the property back to its context specific default value. e.g., &lt;a href=&quot;qwidget#cursor-prop&quot;&gt;QWidget::cursor&lt;/a&gt; has the typical &lt;code&gt;READ&lt;/code&gt; and &lt;code&gt;WRITE&lt;/code&gt; functions, &lt;a href=&quot;qwidget#cursor-prop&quot;&gt;QWidget::cursor&lt;/a&gt;() and &lt;a href=&quot;qwidget#cursor-prop&quot;&gt;QWidget::setCursor&lt;/a&gt;(), and it also has a &lt;code&gt;RESET&lt;/code&gt; function, &lt;a href=&quot;qwidget#cursor-prop&quot;&gt;QWidget::unsetCursor&lt;/a&gt;(), since no call to &lt;a href=&quot;qwidget#cursor-prop&quot;&gt;QWidget::setCursor&lt;/a&gt;() can mean</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77de2e94bea91e675dcd5ef7deabd1595c40bd43" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;REVISION&lt;/code&gt; number is optional. If included, it defines the property and its notifier signal to be used in a particular revision of the API (usually for exposure to QML). If not included, it defaults to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70a58f5ac6c89faf3e26d28054eebc0ee8267e8f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Sign1&lt;/code&gt; map as specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc8152&quot;&gt;RFC 8152&lt;/a&gt; (CBOR Object Signing and Encryption).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83d9a1df88edaab8cdf6d0ce58f2a7053a456dd1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Sign&lt;/code&gt; map as specified by &lt;a href=&quot;https://tools.ietf.org/html/rfc8152&quot;&gt;RFC 8152&lt;/a&gt; (CBOR Object Signing and Encryption).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="306105a32c96a9365806a61df4bc01571546be2e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;WRITE&lt;/code&gt; accessor function is optional. It is for setting the property value. It must return void and must take exactly one argument, either of the property's type or a pointer or reference to that type. e.g., &lt;a href=&quot;qwidget#enabled-prop&quot;&gt;QWidget::enabled&lt;/a&gt; has the &lt;code&gt;WRITE&lt;/code&gt; function &lt;a href=&quot;qwidget#enabled-prop&quot;&gt;QWidget::setEnabled&lt;/a&gt;(). Read-only properties do not need &lt;code&gt;WRITE&lt;/code&gt; functions. e.g., &lt;a href=&quot;qwidget#focus-prop&quot;&gt;QWidget::focus&lt;/a&gt; has no &lt;code&gt;WRITE&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d0fe0b309c0df8eb1aa0106b0b34950f77ad7f6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;georectangle&lt;/code&gt; can never cross the poles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e4876e257741e2eace4eb6c90ba174d0077bdaa" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;georectangle&lt;/code&gt; is considered invalid if the top-left or bottom-right coordinates are invalid or if the top-left coordinate is south of the bottom-right coordinate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0407992046ea1d51383d8e2c7a6ea7275f37513" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;list&lt;/code&gt; can only store QML objects, and cannot contain any &lt;a href=&quot;qtqml-typesystem-basictypes#&quot;&gt;basic type&lt;/a&gt; values. (To store basic types within a list, use the &lt;a href=&quot;qml-var&quot;&gt;var&lt;/a&gt; type instead.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b9747cc4a733ae74fe8615a32ecec20a5061e61" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;matrix4x4&lt;/code&gt; type has sixteen values, each accessible via the properties &lt;code&gt;m11&lt;/code&gt; through &lt;code&gt;m44&lt;/code&gt; in QML (in row/column order). Values of this type can be composed with the Qt.matrix4x4() function. Each attribute in a matrix4x4 is stored as a real (single-precision on ARM, double-precision on x86).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc3a9fe2b4481aeba4419bddf6d9310dd61e096b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;quaternion&lt;/code&gt; type has &lt;code&gt;scalar&lt;/code&gt;, &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt; and &lt;code&gt;z&lt;/code&gt; attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05e26ab843b04c33d6c023d99b422fad08cf843" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;variant&lt;/code&gt; type property can also hold an image or pixmap. A &lt;code&gt;variant&lt;/code&gt; which contains a &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; or &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; is known as a &quot;scarce resource&quot; and the declarative engine will attempt to automatically release such resources after evaluation of any JavaScript expression which requires one to be copied has completed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ebb1622ace5751207676ca0c880533f928b5d37" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;vector2d&lt;/code&gt; type has &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; attributes, otherwise it is similar to the &lt;code&gt;vector3d&lt;/code&gt; type. Please see the documentation about the &lt;code&gt;vector3d&lt;/code&gt; type for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="881313a028420b5654f454097e43b03352080e35" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;vector4d&lt;/code&gt; type has &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, &lt;code&gt;z&lt;/code&gt; and &lt;code&gt;w&lt;/code&gt; attributes, otherwise it is similar to the &lt;code&gt;vector3d&lt;/code&gt; type. Please see the documentation about the &lt;code&gt;vector3d&lt;/code&gt; type for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94d0575d8e0f30fa662cdf6a23b439e18e40e4ba" translate="yes" xml:space="preserve">
          <source>A Backtab occurred. The input for this may include the Shift or Control keys; e.g. Shift+Tab.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a53d81f01e07bdff9b7990cb94117757816eae1" translate="yes" xml:space="preserve">
          <source>A Behavior defines the default animation to be applied whenever a particular property value changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac5620841e528e85daaf560f5bf7e286c2e745a1" translate="yes" xml:space="preserve">
          <source>A Binary Space Partitioning tree is applied. All &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;'s item location algorithms are of an order close to logarithmic complexity, by making use of binary search. Adding, moving and removing items is logarithmic. This approach is best for static scenes (i.e., scenes where most items do not move).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9acf7cadc643bcef87f518ff525eca2aebfe60d1" translate="yes" xml:space="preserve">
          <source>A Bluetooth Low Energy peripheral device can contain multiple services. In turn each service may include further services. This class represents a single service of the peripheral device and is created via &lt;a href=&quot;qlowenergycontroller#createServiceObject&quot;&gt;QLowEnergyController::createServiceObject&lt;/a&gt;(). The &lt;a href=&quot;qlowenergyservice#type&quot;&gt;type&lt;/a&gt;() indicates whether this service is a primary (top-level) service or whether the service is part of another service. Each service may contain one or more characteristics and each characteristic may contain descriptors. The resulting structure may look like the following diagram:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1df710b360011e4760aab2209623772d9e8f7c17" translate="yes" xml:space="preserve">
          <source>A Bodymovin player for Qt. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b7694d2e441e138e30511b5100b9446e39e5f6b" translate="yes" xml:space="preserve">
          <source>A C++ API for low-level access and control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="103d07f523362891969f482c236dfce2794992df" translate="yes" xml:space="preserve">
          <source>A C++ class is documented with the &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#class-command&quot;&gt;\class&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e8ed824a4565df4089d053f4f9df00b3cbab45" translate="yes" xml:space="preserve">
          <source>A C++ class is documented with the &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#class-command&quot;&gt;\class&lt;/a&gt; command. The annotation for the class is taken from the argument of the class comment's &lt;a href=&quot;11-qdoc-commands-specialcontent#brief-command&quot;&gt;\brief&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deff3292f5525434f11ce861649b3c20c1941503" translate="yes" xml:space="preserve">
          <source>A C++ model class can be defined as a &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt;, a &lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt;, a &lt;a href=&quot;qobject#QObjectList-typedef&quot;&gt;QObjectList&lt;/a&gt; or a &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt;. The first three are useful for exposing simpler datasets, while &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; provides a more flexible solution for more complex models.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49371d5aeeb4de6074949dfc6677a975df2c89c3" translate="yes" xml:space="preserve">
          <source>A CAN bus error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e6bd33976c8b452f95cab9dc14145864fd5747a" translate="yes" xml:space="preserve">
          <source>A CSS stylesheet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41557512656d9ff5a00723bc11e17b5c2ae1b7c4" translate="yes" xml:space="preserve">
          <source>A CSS-style sheet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63cdd70b268f237cb8c56b7f4679b6679288c5c0" translate="yes" xml:space="preserve">
          <source>A Column animate items using specific transitions when items are added to or moved within a Column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ff8d8c5112704061aeafa944c178cbb863b93db" translate="yes" xml:space="preserve">
          <source>A Connections object creates a connection to a QML signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c7e2e475b906f15673f23ccfdc4eaa854b126eb" translate="yes" xml:space="preserve">
          <source>A Controller Area Network (CAN) is a vehicle bus standard designed to allow microcontrollers and devices to communicate with each other in applications without a host computer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b503e119e4fdbebf72027adfb72d6c8344e64978" translate="yes" xml:space="preserve">
          <source>A Ctrl key on the keyboard is pressed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="067afe9cf8afa7053c05df09954a1dd2199b2f99" translate="yes" xml:space="preserve">
          <source>A D-Bus function that takes an integer, a D-Bus variant and a string as parameters can be called with the following argument list (see &lt;a href=&quot;qdbusmessage#setArguments&quot;&gt;QDBusMessage::setArguments&lt;/a&gt;()):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb9b37927bdba7a3fe01972772f3d1178f63ead9" translate="yes" xml:space="preserve">
          <source>A D-Bus variant type can contain any type, including other variants. It is similar to the Qt &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85feba6bd47bdb30e1f79ed4b08f1f256ac071b0" translate="yes" xml:space="preserve">
          <source>A DBus signal is emitted from one application and is received by all applications that are listening for that signal from that interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d382d7e43f709662b72b0596cfabd1f2e1c37e6c" translate="yes" xml:space="preserve">
          <source>A DBus signal is emitted from one application and is received only by the application owning the destination</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27c8de78fe38a89b97c7a9822be33472bcf448c0" translate="yes" xml:space="preserve">
          <source>A DNS host name entry; the entry contains a host name entry that the certificate is valid for. The entry may contain wildcards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f6ec2e382d3863d3aa2900bbd7b8c8241e4b89" translate="yes" xml:space="preserve">
          <source>A DTLS connection may be closed using &lt;a href=&quot;qdtls#shutdown&quot;&gt;shutdown&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="194b7fb3505ce444afd166e9e6a32bd5d19a0a2b" translate="yes" xml:space="preserve">
          <source>A Dialog Without Auto-Connect</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7696353a2b078c8d27719c27c72a9fd51c80c173" translate="yes" xml:space="preserve">
          <source>A Dialog in English</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51937631ef93b7534a1d4c5a929b61bcf0ad014d" translate="yes" xml:space="preserve">
          <source>A Dialog in French</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4300c782a67b8272f8415165fbd0f0f3e88aaeb" translate="yes" xml:space="preserve">
          <source>A Dithering type enables dithering. Dithering adds noise to the color values to randomize quantization error in order to prevent large scale patterns in the final image, such as banding. Dithering is most useful when rendering to a surface with low color bit depth, such as RGB565 or RGBA4444.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae5e00252de3df624d754cb8c6cfa1daf441562" translate="yes" xml:space="preserve">
          <source>A Geometry type is used to group a list of Attribute objects together to form a geometric shape Qt3D is able to render using &lt;a href=&quot;qt3drender-geometry#geometryrenderer&quot;&gt;GeometryRenderer&lt;/a&gt;. Special attribute can be set in order to calculate bounding volume of the shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a522ab31d2513bb58d99fa08d473ce0b3e8595fb" translate="yes" xml:space="preserve">
          <source>A Grid creates a grid of cells that is large enough to hold all of its child items, and places these items in the cells from left to right and top to bottom. Each item is positioned at the top-left corner of its cell with position (0, 0).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eca227560551d4563e6526b484f9b526385d902d" translate="yes" xml:space="preserve">
          <source>A Grid defaults to four columns, and creates as many rows as are necessary to fit all of its child items. The number of rows and columns can be constrained by setting the &lt;a href=&quot;qml-qtquick-grid#rows-prop&quot;&gt;rows&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-grid#columns-prop&quot;&gt;columns&lt;/a&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83c3b2763ae7d06052abbcf2d6b2306db98bc983" translate="yes" xml:space="preserve">
          <source>A HiFi audio device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c6fac845a7634fec0e13fe47197c8ace4d55b89" translate="yes" xml:space="preserve">
          <source>A Instantiator can be used to control the dynamic creation of objects, or to dynamically create multiple objects from a template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8e96555e019a1da02432108906c1dd923ed7a0e" translate="yes" xml:space="preserve">
          <source>A JSON array is a list of values. The list can be manipulated by inserting and removing &lt;a href=&quot;qjsonvalue&quot;&gt;QJsonValue&lt;/a&gt;'s from the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="895335865b457e39a7c4665829b4e5db7995a49a" translate="yes" xml:space="preserve">
          <source>A JSON document can be converted from its text-based representation to a &lt;a href=&quot;qjsondocument&quot;&gt;QJsonDocument&lt;/a&gt; using &lt;a href=&quot;qjsondocument#fromJson&quot;&gt;QJsonDocument::fromJson&lt;/a&gt;(). &lt;a href=&quot;qjsondocument#toJson&quot;&gt;toJson&lt;/a&gt;() converts it back to text. The parser is very fast and efficient and converts the JSON to the binary representation used by Qt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce75b69642a02c35cf596b9ea912be38b2c22a7e" translate="yes" xml:space="preserve">
          <source>A JSON object is a list of key value pairs, where the keys are unique strings and the values are represented by a &lt;a href=&quot;qjsonvalue&quot;&gt;QJsonValue&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b5647424b7ed7669496c2a6a4f52200c911e69" translate="yes" xml:space="preserve">
          <source>A JavaScript alert dialog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ab3126feaa317be32c45e104127998e4494c996" translate="yes" xml:space="preserve">
          <source>A JavaScript confirmation dialog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e11f677df78ac281ab1d154abc86bbda4b8aa1e" translate="yes" xml:space="preserve">
          <source>A JavaScript expression which describes a property's relationship with other properties. The variables in this expression are called the property's</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b287935a6a5adabd58ebe90cc1e40c6f4ecf36e" translate="yes" xml:space="preserve">
          <source>A JavaScript prompt dialog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2b4a7aa2d583703bc5bcf321c1920d7fd512bf9" translate="yes" xml:space="preserve">
          <source>A JavaScript resource declaration allows a JavaScript file to be exposed via the given identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="719abd787e129f7f89b0edd4e3692ca6877e8b05" translate="yes" xml:space="preserve">
          <source>A JavaScript resource may import a QML module in the following fashion:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9aa5ef85c4c42a4fb9d1dc02522beeac80b86dd" translate="yes" xml:space="preserve">
          <source>A JavaScript resource may import another in the following fashion:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3213969583f1fc21e8fd7c9884919c4656073d45" translate="yes" xml:space="preserve">
          <source>A Layer can be applied to a subtree of entities by setting the recursive property to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1a62c8aee42c2e3c9bad30ab5580ec78d32034d" translate="yes" xml:space="preserve">
          <source>A Meta key on the keyboard is pressed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7e92cf9e5d4cba56606e15ecad9e635b183bf51" translate="yes" xml:space="preserve">
          <source>A Mifare target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37f7a301d4eaf4061408a24e906f898ac9485c9a" translate="yes" xml:space="preserve">
          <source>A Minimal qdocconf File</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d63e3142a7bbaae16dd36374e3714b7cee34acd" translate="yes" xml:space="preserve">
          <source>A Modbus request usually consists of a single byte describing the &lt;code&gt;FunctionCode&lt;/code&gt; and N bytes of payload</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4e0bb40d65b1adef35f30fb4ede4fc0ea2f0df2" translate="yes" xml:space="preserve">
          <source>A Modbus specific protocol error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ced844949f1162ebdd89cbac1174f683903ab7" translate="yes" xml:space="preserve">
          <source>A Multi Viewport FrameGraph</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b679d25fd28d569eef126683ff5a43df57d32f45" translate="yes" xml:space="preserve">
          <source>A Node does not have a url that other nodes can connect to, and thus is able to acquire replicas only. It is not able to share source objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eb45de1cb5275ec96a100314098ad48fd9f27f7" translate="yes" xml:space="preserve">
          <source>A Note About Accessing Attached Properties and Signal Handlers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dde7956f78dcc3ffc4f86e5eb8cd52a3eeb334b" translate="yes" xml:space="preserve">
          <source>A Note for X11 Users</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d62cb028bc946f0de5fba86a93e8eb32c5fb41f" translate="yes" xml:space="preserve">
          <source>A Note on GUI Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a7dbddcecedeae7ca85b8436433b9187bc690e5" translate="yes" xml:space="preserve">
          <source>A Null value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="388b764611680da0ff157c77367c9ef5b56efe1a" translate="yes" xml:space="preserve">
          <source>A PDF 1.4 compatible document is produced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6be8458e8da70b9585d213592e359deb6a5998ca" translate="yes" xml:space="preserve">
          <source>A PDF 1.6 compatible document is produced. This value was added in Qt 5.12.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="453b23bc8be051a0522d2abdae3d3e320599978c" translate="yes" xml:space="preserve">
          <source>A PDF/A-1b compatible document is produced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c6422c25ccbe1c5d95aaf89461f32d217aac687" translate="yes" xml:space="preserve">
          <source>A PDU is considered valid if the message code is in the range of 1 to 255 decimal and the PDU's compound size (function code + data) does not exceed 253 bytes. A default constructed PDU is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50e4e98dea9ff59b3de4ad7533fbd09b0f18e083" translate="yes" xml:space="preserve">
          <source>A Pan gesture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3132a391c608fce93fb5e453f42d0920cfc89a15" translate="yes" xml:space="preserve">
          <source>A PaperSource defined by the printer that is unknown to Qt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b2a4fbb37af10d05fe8dc1ed47c4610e2cdb181" translate="yes" xml:space="preserve">
          <source>A Parameter can be referenced by a &lt;a href=&quot;qml-qt3d-render-renderpass&quot;&gt;RenderPass&lt;/a&gt;, Technique, Effect, Material, &lt;a href=&quot;qml-qt3d-render-techniquefilter&quot;&gt;TechniqueFilter&lt;/a&gt;, &lt;a href=&quot;qml-qt3d-render-renderpassfilter&quot;&gt;RenderPassFilter&lt;/a&gt;. At runtime, depending on which shader is selected for a given step of the rendering, the value contained in a Parameter will be converted and uploaded if the shader contains a uniform with a name matching that of the Parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="660b4cd64fd9b8d39121ea3a13aea924fab87bda" translate="yes" xml:space="preserve">
          <source>A Parameter defined on a Material is overridden by a Parameter (of the same name) defined in a &lt;a href=&quot;qml-qt3d-render-techniquefilter&quot;&gt;TechniqueFilter&lt;/a&gt; or a &lt;a href=&quot;qml-qt3d-render-renderpassfilter&quot;&gt;RenderPassFilter&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45f1375d6118f9d2eb91810f33ff3d5396cd10a8" translate="yes" xml:space="preserve">
          <source>A Parameter defined on an Effect is overridden by a QParameter (of the same name) defined in a Material, &lt;a href=&quot;qml-qt3d-render-techniquefilter&quot;&gt;TechniqueFilter&lt;/a&gt;, &lt;a href=&quot;qml-qt3d-render-renderpassfilter&quot;&gt;RenderPassFilter&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb72163aa0828179ebde19a5d52aab2e94dc8b4" translate="yes" xml:space="preserve">
          <source>A Path is composed of one or more path segments - &lt;a href=&quot;qml-qtquick-pathline&quot;&gt;PathLine&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-pathquad&quot;&gt;PathQuad&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-pathcubic&quot;&gt;PathCubic&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-patharc&quot;&gt;PathArc&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-pathanglearc&quot;&gt;PathAngleArc&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-pathcurve&quot;&gt;PathCurve&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-pathsvg&quot;&gt;PathSvg&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1626d5d47b178d2a836026f3584b5e52f81e9c0" translate="yes" xml:space="preserve">
          <source>A Pinch gesture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b7fa55f63f41105cdb01d6362b0a4918fa5095d" translate="yes" xml:space="preserve">
          <source>A Place is almost always tied to a &lt;a href=&quot;location-places-qml#plugin&quot;&gt;plugin&lt;/a&gt;. The &lt;a href=&quot;location-places-qml#plugin&quot;&gt;plugin&lt;/a&gt; property must be set before it is possible to call &lt;a href=&quot;qml-qtlocation-place#save-method&quot;&gt;save()&lt;/a&gt;, &lt;a href=&quot;qml-qtlocation-place#remove-method&quot;&gt;remove()&lt;/a&gt; or &lt;a href=&quot;qml-qtlocation-place#getDetails-method&quot;&gt;getDetails()&lt;/a&gt;. The &lt;a href=&quot;qml-qtlocation-place#reviewModel-prop&quot;&gt;reviewModel&lt;/a&gt;, &lt;a href=&quot;qml-qtlocation-place#imageModel-prop&quot;&gt;imageModel&lt;/a&gt; and &lt;a href=&quot;qml-qtlocation-place#editorialModel-prop&quot;&gt;editorialModel&lt;/a&gt; are only valid then the &lt;a href=&quot;location-places-qml#plugin&quot;&gt;plugin&lt;/a&gt; property is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fa4d344f1b2ee1eb1f2093b27eda3bce2c5ae8c" translate="yes" xml:space="preserve">
          <source>A Puck (a device that is similar to a flat mouse with a transparent circle with cross-hairs).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c39af331fc76aae36f3ee1819306f14807d3cf03" translate="yes" xml:space="preserve">
          <source>A QAbstractTexture with a Target1D target format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc527b4ecef0b93b5743c6b4691ae35c9b17988c" translate="yes" xml:space="preserve">
          <source>A QAbstractTexture with a Target1DArray target format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67f11b1698e0aa9fc08a1e9c64e9d56f14c5753e" translate="yes" xml:space="preserve">
          <source>A QAbstractTexture with a Target2D target format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08720583737610faae1f65cf15b2df1a508f0ba6" translate="yes" xml:space="preserve">
          <source>A QAbstractTexture with a Target2DArray target format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5497e7c3bdfe6b83397869bc9093e80690f3ae12" translate="yes" xml:space="preserve">
          <source>A QAbstractTexture with a Target2DMultisample target format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdba4836d483d64f42eb02562f61ac3c69221af6" translate="yes" xml:space="preserve">
          <source>A QAbstractTexture with a Target2DMultisampleArray target format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a191d78f82f2434e4a642ab8ab521b3db9e8b006" translate="yes" xml:space="preserve">
          <source>A QAbstractTexture with a Target3D target format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="136503d616e9218f60f67c75a0448ae81a497796" translate="yes" xml:space="preserve">
          <source>A QAbstractTexture with a TargetBuffer target format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19d6a95d0ea568213abe9f1858d0f4bca613db28" translate="yes" xml:space="preserve">
          <source>A QAbstractTexture with a TargetCubeMap target format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5626e9e63a24fb26b692727552f4fa1116ad24be" translate="yes" xml:space="preserve">
          <source>A QAbstractTexture with a TargetCubeMapArray target format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fee204d873e0cc13d1b61045879060dda8f67be2" translate="yes" xml:space="preserve">
          <source>A QAbstractTexture with a TargetRectangle target format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab43479c8fa9c0bca07e52dcf88e33c95696c66d" translate="yes" xml:space="preserve">
          <source>A QAbstractTextureImage that can be written through a QPainter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37c318d6947de10612fea2697842fe5764efbcdc" translate="yes" xml:space="preserve">
          <source>A QAbstractXmlForwardIterator over &lt;a href=&quot;qxmlitem&quot;&gt;QXmlItem&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cada93d7684b3555a23f52358673b0668c15357" translate="yes" xml:space="preserve">
          <source>A QFrameGraphNode used to select QTechniques to use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4de08028afeca51bba2d441b657b9c042ebce01" translate="yes" xml:space="preserve">
          <source>A QML API to display and manipulate client content, fully integrated with all the features in Qt Quick.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="920c0b4f7e34014d5d0913de7eccfc4f465607bc" translate="yes" xml:space="preserve">
          <source>A QML RSS news reader that uses XmlListModel and XmlRole to download XML data, ListModel and ListElement to create a category list, and ListView to display the data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e54c5336b8a18349545a05b51ae15cff8a6c1293" translate="yes" xml:space="preserve">
          <source>A QML app designed for portrait devices that uses custom components, animated with AnimationController, and JavaScript for the application logic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8004934a3066d0207e27275b969c18a11d7b7dfa" translate="yes" xml:space="preserve">
          <source>A QML app for touch devices that uses a Repeater with a FolderListModel to access content in a folder, and a PinchArea that contains a MouseArea to handle pinch gestures on the fetched content</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f4df3538384dedcdd19700792266bc954f988c0" translate="yes" xml:space="preserve">
          <source>A QML clock application that demonstrates using a ListView type to display data generated by a ListModel and a SpringAnimation type to animate images</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="616724e307e8f12c53414e21e101a8222ebc84dc" translate="yes" xml:space="preserve">
          <source>A QML document can be loaded with &lt;a href=&quot;qqmlcomponent&quot;&gt;QQmlComponent&lt;/a&gt; or &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt;. &lt;a href=&quot;qqmlcomponent&quot;&gt;QQmlComponent&lt;/a&gt; loads a QML document as a C++ object that can then be modified from C++ code. &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt; also does this, but as &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt; is a &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;-derived class, the loaded object will also be rendered into a visual display; &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt; is generally used to integrate a displayable QML object into an application's user interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9e63afaeacfd614132f2a447fcae1459655ca2d" translate="yes" xml:space="preserve">
          <source>A QML document defines a hierarchy of objects with a highly-readable, structured layout. Every QML document consists of two parts: an imports section and an object declaration section. The types and functionality most common to user interfaces are provided in the &lt;code&gt;QtQuick&lt;/code&gt; import.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="242bed9d8a0f4cf0d719c1931a26fe983eb22ea1" translate="yes" xml:space="preserve">
          <source>A QML document describes a hierarchy of objects which can be instantiated. Each object definition has a certain structure; it has a type, it can have an id and an object name, it can have properties, it can have methods, it can have signals and it can have signal handlers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62dbf738e9ce5c8c7bcc487815895002e287be71" translate="yes" xml:space="preserve">
          <source>A QML document is a self contained piece of QML source code that consists of two parts:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dccaba1ba51386a450e990e51d3a751bf1e8a11" translate="yes" xml:space="preserve">
          <source>A QML document may have one or more imports at the top of the file. An import can be any one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc1d65d26ba3994c5339ac0c25f745e3f7e1ed6" translate="yes" xml:space="preserve">
          <source>A QML document may import a JavaScript resource with the following syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ed64dc3e1b4d0ce15c8a5fa150d411fe45739b" translate="yes" xml:space="preserve">
          <source>A QML engine uses QNetworkAccessManager for all network access. By implementing a factory, it is possible to provide the QML engine with custom QNetworkAccessManager instances with specialized caching, proxy and cookies support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b473bb0bf18e6c236f4330256adb358f9673bcf" translate="yes" xml:space="preserve">
          <source>A QML file must only contain &lt;b&gt;a single root object definition&lt;/b&gt;. The following is invalid and will generate an error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8be433f78ce4c5edeffe46a21a6b3c376c973670" translate="yes" xml:space="preserve">
          <source>A QML implementation of the popular puzzle game by Kuniaki Moribe</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="539c0efd0db71b943853d0a7aa8403072a1ede0c" translate="yes" xml:space="preserve">
          <source>A QML object emits the &lt;code&gt;Component.completed&lt;/code&gt;&lt;a href=&quot;qtqml-syntax-signals#attached-signal-handlers&quot;&gt;attached signal&lt;/a&gt; when its instantiation is complete. The JavaScript code in the corresponding &lt;code&gt;Component.onCompleted&lt;/code&gt; handler runs after the object is instantiated. Thus, the best place to write application startup code is in the &lt;code&gt;Component.onCompleted&lt;/code&gt; handler of the top-level object, because this object emits &lt;code&gt;Component.completed&lt;/code&gt; when the QML environment is fully established.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="333c8d8189fdf0930403963f1c665edd4ad03bc8" translate="yes" xml:space="preserve">
          <source>A QML object is an instance of a &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtqml-typesystem-topic.html&quot;&gt;QML Object Type&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f391b89dfabb207994996b227c973b15dcf1688d" translate="yes" xml:space="preserve">
          <source>A QML object may have different easing curve for each property animation. There are also different parameters to control the curve, some of which are exclusive to a particular curve. For more information about the easing curves, visit the &lt;a href=&quot;qml-qtquick-propertyanimation#easing.type-prop&quot;&gt;easing&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80c6fb55c7a79058748bf0dc23012dacc7206ef0" translate="yes" xml:space="preserve">
          <source>A QML object type is a type from which a QML object can be instantiated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c794f68b80b692d9ea92bb08ab562c1a16fbd53" translate="yes" xml:space="preserve">
          <source>A QML photo viewer that that uses XmlListModel and XmlRole to download Flickr feeds, and Package to display the photos in different views</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="234fe6f91b7e4295045f671a76f0711f7dfeb2fa" translate="yes" xml:space="preserve">
          <source>A QML representation of a QQuickEventPoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="650d09ef9f087d6167988ef44f38d68b485fed83" translate="yes" xml:space="preserve">
          <source>A QML type belongs to a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c66f5ea9502e8b53f0f287aee8022c5ef463cd91" translate="yes" xml:space="preserve">
          <source>A QML type can be defined either by a document in a .qml file beginning with a capital letter, or by a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;-based C++ class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c71035835e0cbb6343d3da945540441ca9c26ea" translate="yes" xml:space="preserve">
          <source>A QML type implementation may choose to &lt;a href=&quot;qtqml-cppintegration-definetypes#providing-attached-properties&quot;&gt;create an &lt;i&gt;attaching type&lt;/i&gt; in C++&lt;/a&gt; with particular properties and signals. Instances of this type can then be created and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e8582a55fc71487d6fe5501c5743f08c3e86213" translate="yes" xml:space="preserve">
          <source>A QNX Neutrino RTOS target used for development with Qt Creator should provide a few additional command line tools and services.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a152ca10de7a2c15fc088f7428e086a31b8404d0" translate="yes" xml:space="preserve">
          <source>A Qt Quick application requires also additional dependencies:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="396da1e4cf2b474616d0d8a75d9d8ffd9b60cdcb" translate="yes" xml:space="preserve">
          <source>A Qt Quick game for touch devices that uses SpriteSequence, ParticleSystem, Emitter, and Wander types to animate objects and the SoundEffect type to play sound effects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1780afd02e7529e96a406608bf595a9813b0715b" translate="yes" xml:space="preserve">
          <source>A Qt Quick item type for displaying and interacting with a &lt;a href=&quot;qml-qtwayland-compositor-shellsurface&quot;&gt;ShellSurface&lt;/a&gt;. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b86136452304a51a734d41ed8bb4f1a6fcf7550d" translate="yes" xml:space="preserve">
          <source>A Qt application can host any ActiveScript engine installed on the system. The script engine can then run script code that accesses the COM objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b28ce28f8d0d3fce04fffc8c7e476be6866d391" translate="yes" xml:space="preserve">
          <source>A Qt application can load this QML document and set the value of &lt;code&gt;myModel&lt;/code&gt; to a &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c50f9906faa08c5c686686d75be71332468a2a1" translate="yes" xml:space="preserve">
          <source>A Qt help project collects all data necessary to generate a compressed help file. Along with the actual help data, like the table of contents, index keywords and help documents, it contains some extra information like a namespace to identify the help file. One help project stands for one documentation set, for example the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtassistant-index.html&quot;&gt;Qt Assistant Manual&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="373d90b1db67d87b64d5ef7efd3f22340fabafd4" translate="yes" xml:space="preserve">
          <source>A Quick Start to Qt Designer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6621f1dd89b5618a721c99c526f9f683eeb189c2" translate="yes" xml:space="preserve">
          <source>A Real Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4daa20a6d104883e6088b08d33c3227e048d7679" translate="yes" xml:space="preserve">
          <source>A Remote Object Replica is a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; proxy for another &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; (called the &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt; object). Once initialized, a replica can be considered a &quot;latent copy&quot; of the &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt; object. That is, every change to a &lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt; on the &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt;, or signal emitted by the &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt; will be updated/emitted by all &lt;a href=&quot;qtremoteobjects-replica#replica&quot;&gt;Replica&lt;/a&gt; objects. Latency is introduced by process scheduling by any OSes involved and network communication latency. As long as the replica has been initialized and the communication is not disrupted, receipt and order of changes is guaranteed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7884495e42f5e99b08a5f07723981f23bf0a4427" translate="yes" xml:space="preserve">
          <source>A Remote Object Source is the &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; that is responsible for the implementation of the exposed API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93a97660b3db888200d74175348d326c383dcdfc" translate="yes" xml:space="preserve">
          <source>A Repeater's &lt;a href=&quot;qml-qtquick-repeater#model-prop&quot;&gt;model&lt;/a&gt; can be any of the supported &lt;a href=&quot;qtquick-modelviewsdata-modelview#qml-data-models&quot;&gt;data models&lt;/a&gt;. Additionally, like delegates for other views, a Repeater delegate can access its index within the repeater, as well as the model data relevant to the delegate. See the &lt;a href=&quot;qml-qtquick-repeater#delegate-prop&quot;&gt;delegate&lt;/a&gt; property documentation for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7205d55ad3ac513810e456318f8890cd13d9ef6" translate="yes" xml:space="preserve">
          <source>A Route type contains high level information about a route, such as the length the route, the estimated travel time for the route, and enough information to render a basic image of the route on a map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffb690330ab626e6963b926b2b3b53ca3e49e7cf" translate="yes" xml:space="preserve">
          <source>A SQL field name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5f1f413a7d740c49a137a3a67998bab62883c51" translate="yes" xml:space="preserve">
          <source>A SQL table name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="790f0681b47e45637cd8fc3679a41f384c715b0d" translate="yes" xml:space="preserve">
          <source>A Shift key on the keyboard is pressed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="228e710c8f0864592ab0eb6de2fe5a5635085cd0" translate="yes" xml:space="preserve">
          <source>A Short Path to XQuery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b671ac0d028246c423146116e7e15964cde16b69" translate="yes" xml:space="preserve">
          <source>A Simple Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="398afec2838a221a1a7feeecbef89a3c963cc504" translate="yes" xml:space="preserve">
          <source>A Simple Forward Renderer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85aa5a207b4c476aa65dd9720b0c24a87bce2896" translate="yes" xml:space="preserve">
          <source>A Simple Plugin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11d83a91467702ba45c8fb7e546e2ec338cb519a" translate="yes" xml:space="preserve">
          <source>A Simple State Machine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d817b3db003caca03a74d56c37b4d6dd03e46cba" translate="yes" xml:space="preserve">
          <source>A Small Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b32ca5bd8c5f712c1dc2a9d89b661a6aa1c1f5f" translate="yes" xml:space="preserve">
          <source>A Stylus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d871924e2ff98bf8236ff757c74937a321dd2d54" translate="yes" xml:space="preserve">
          <source>A Swipe gesture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f6c67498a1348916cd29fef1d1e36f7d52e9e57" translate="yes" xml:space="preserve">
          <source>A Switch is a toggle button that can be switched on (checked) or off (unchecked). Switches are typically used to represent features in an application that can be enabled or disabled without affecting others.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a809a1eb554819a273035210ecbcee04ac29580" translate="yes" xml:space="preserve">
          <source>A TCP connection must be established to a remote host and port before any data transfer can begin. Once the connection has been established, the IP address and port of the peer are available through &lt;a href=&quot;qabstractsocket#peerAddress&quot;&gt;QTcpSocket::peerAddress&lt;/a&gt;() and &lt;a href=&quot;qabstractsocket#peerPort&quot;&gt;QTcpSocket::peerPort&lt;/a&gt;(). At any time, the peer can close the connection, and data transfer will then stop immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d10035f4a30f204261ce4ca96eae4ab22660b0" translate="yes" xml:space="preserve">
          <source>A Tab item inherits from Loader and provides a similar API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33132d9d7b7ac8b3fcbb7943172023137e4cba4b" translate="yes" xml:space="preserve">
          <source>A TabPosition enum value that indicates the tab's position on the bar relative to the other tabs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a29d076fe65ecb18ca10a21d47acb865400b6b" translate="yes" xml:space="preserve">
          <source>A Tap gesture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="602a0e503013a86fc6bf8b6093c7752426c769f7" translate="yes" xml:space="preserve">
          <source>A Tap-And-Hold (Long-Tap) gesture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6cd8e4630824759f7d3d88345257cee49bfff2d" translate="yes" xml:space="preserve">
          <source>A Technique specifies a set of &lt;a href=&quot;qml-qt3d-render-renderpass&quot;&gt;RenderPass&lt;/a&gt; objects, &lt;a href=&quot;qml-qt3d-render-filterkey&quot;&gt;FilterKey&lt;/a&gt; objects, Parameter objects and a &lt;a href=&quot;qml-qt3d-render-graphicsapifilter&quot;&gt;GraphicsApiFilter&lt;/a&gt;, which together define a rendering technique the given graphics API can render. The filter keys are used by &lt;a href=&quot;qml-qt3d-render-techniquefilter&quot;&gt;TechniqueFilter&lt;/a&gt; to select specific techniques at specific parts of the FrameGraph. If two Parameter instances with the same name are specified in a Technique and a &lt;a href=&quot;qml-qt3d-render-renderpass&quot;&gt;RenderPass&lt;/a&gt;, the one in Technique overrides the one used in the &lt;a href=&quot;qml-qt3d-render-renderpass&quot;&gt;RenderPass&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca3b7f1aed12d8636ce9cda62a5a56e80aa78b5c" translate="yes" xml:space="preserve">
          <source>A Thermometer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac1adedf939bab3f89db872b91496d81634b484e" translate="yes" xml:space="preserve">
          <source>A Timer can be used to trigger an action either once, or repeatedly at a given interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="146e3e9ae06d5e0d823da75d63c014b025b7ee6d" translate="yes" xml:space="preserve">
          <source>A Title bar, like those used in &lt;a href=&quot;qmdisubwindow&quot;&gt;QMdiSubWindow&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df66e6f806611101e7317ec476cf059a4c2f1119" translate="yes" xml:space="preserve">
          <source>A Transition defines the animations to be applied when a &lt;a href=&quot;qml-qtquick-state&quot;&gt;State&lt;/a&gt; change occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbd7a5add22a30636a2a9b9e029d50724d23c541" translate="yes" xml:space="preserve">
          <source>A Trivial Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db327eb4dc7bcf9d7f1b62c5d8e788c663d72427" translate="yes" xml:space="preserve">
          <source>A Twitter search client with 3D effects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ec3b640c769b80bf19044be991ee7d9f0a5e1ce" translate="yes" xml:space="preserve">
          <source>A URI handling function was used incorrectly or the URI provided is malformed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc2dd45d674390b494af9f27530c75932adaefa2" translate="yes" xml:space="preserve">
          <source>A URL can also be constructed piece by piece by calling &lt;a href=&quot;qurl#setScheme&quot;&gt;setScheme&lt;/a&gt;(), &lt;a href=&quot;qurl#setUserName&quot;&gt;setUserName&lt;/a&gt;(), &lt;a href=&quot;qurl#setPassword&quot;&gt;setPassword&lt;/a&gt;(), &lt;a href=&quot;qurl#setHost&quot;&gt;setHost&lt;/a&gt;(), &lt;a href=&quot;qurl#setPort&quot;&gt;setPort&lt;/a&gt;(), &lt;a href=&quot;qurl#setPath&quot;&gt;setPath&lt;/a&gt;(), &lt;a href=&quot;qurl#setQuery&quot;&gt;setQuery&lt;/a&gt;() and &lt;a href=&quot;qurl#setFragment&quot;&gt;setFragment&lt;/a&gt;(). Some convenience functions are also available: &lt;a href=&quot;qurl#setAuthority&quot;&gt;setAuthority&lt;/a&gt;() sets the user name, password, host and port. &lt;a href=&quot;qurl#setUserInfo&quot;&gt;setUserInfo&lt;/a&gt;() sets the user name and password at once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca046dbb4fd93166413e30194371092366b3a981" translate="yes" xml:space="preserve">
          <source>A URL of this type has no authority component at all. Everything after scheme name and separator character (:) will be preserved as is without validation or canonicalization. All URLs of such a scheme will be considered as having the same origin (unless the &lt;code&gt;NoAccessAllowed&lt;/code&gt; flag is used).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30637756af49b89f054072a66299e8ff88b71564" translate="yes" xml:space="preserve">
          <source>A Unique Connection Name is a string in the form &quot;:x.xxx&quot; (where x are decimal digits) that is assigned by the D-Bus server daemon upon connection. It uniquely identifies this client in the bus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c040d39bf56be3d58b0e163f7a0ae82a15bd9046" translate="yes" xml:space="preserve">
          <source>A Vertex Array Object (VAO) is an OpenGL container object that encapsulates the state needed to specify per-vertex attribute data to the OpenGL pipeline. To put it another way, a VAO remembers the states of buffer objects (see &lt;a href=&quot;qopenglbuffer&quot;&gt;QOpenGLBuffer&lt;/a&gt;) and their associated state (e.g. vertex attribute divisors). This allows a very easy and efficient method of switching between OpenGL buffer states for rendering different &quot;objects&quot; in a scene. The &lt;a href=&quot;qopenglvertexarrayobject&quot;&gt;QOpenGLVertexArrayObject&lt;/a&gt; class is a thin wrapper around an OpenGL VAO.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47fd46ac8ceec7f7d8ecd953d915a482685ff3ad" translate="yes" xml:space="preserve">
          <source>A Waypoint is a type that allows to specify properties of a waypoint in a &lt;a href=&quot;qml-qtlocation-routequery&quot;&gt;RouteQuery&lt;/a&gt;, such as the waypoint coordinate, or the angle of approach to the waypoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f70c6706b3b0ba7345a41f55e6aa5a088677e95d" translate="yes" xml:space="preserve">
          <source>A Window can be declared inside an Item or inside another Window; in that case the inner Window will automatically become &quot;transient for&quot; the outer Window: that is, most platforms will show it centered upon the outer window by default, and there may be other platform-dependent behaviors, depending also on the &lt;a href=&quot;qml-qtquick-window-window#flags-prop&quot;&gt;flags&lt;/a&gt;. If the nested window is intended to be a dialog in your application, you should also set &lt;a href=&quot;qml-qtquick-window-window#flags-prop&quot;&gt;flags&lt;/a&gt; to Qt.Dialog, because some window managers will not provide the centering behavior without that flag. You can also declare multiple windows inside a top-level &lt;a href=&quot;qml-qtqml-qtobject&quot;&gt;QtObject&lt;/a&gt;, in which case the windows will have no transient relationship.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53ae62b04edda97b8471d29cc4ac77cee3f3397f" translate="yes" xml:space="preserve">
          <source>A Window with a client area that is completely covered by another window, or is otherwise not visible may be considered obscured by Qt and may in such cases not receive expose events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae187e74ab287c25cf5413e5ac698f96220e51c4" translate="yes" xml:space="preserve">
          <source>A Windows-only extension for accessing ActiveX controls and COM objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dcabac94e3a5e7f190696db7ba62d69513c3b31" translate="yes" xml:space="preserve">
          <source>A Windows-only static library for turning a Qt binary into a COM server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="252a334825ee491509d7cc4310352ff83f47c01c" translate="yes" xml:space="preserve">
          <source>A Windows-specific activation event has occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bba148cbad0fb8629fa4f9910a0472d1032807b" translate="yes" xml:space="preserve">
          <source>A Y'CbCr color space defined by ITU-R BT.709 with the same values range as YCbCr_BT601. Used for HDTV.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db086ffe60c6b2a9eaad01ee36e60155912c8140" translate="yes" xml:space="preserve">
          <source>A Y'CbCr color space defined by ITU-R recommendation BT.601 with Y value range from 16 to 235, and Cb/Cr range from 16 to 240. Used in standard definition video.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75342d9f1139eb43b7d17b3e43e1bbd4806ea909" translate="yes" xml:space="preserve">
          <source>A audio encoder settings object is used to specify the audio encoder settings used by &lt;a href=&quot;qmediarecorder&quot;&gt;QMediaRecorder&lt;/a&gt;. Audio encoder settings are selected by constructing a &lt;a href=&quot;qaudioencodersettings&quot;&gt;QAudioEncoderSettings&lt;/a&gt; object, setting the desired properties and then passing it to a &lt;a href=&quot;qmediarecorder&quot;&gt;QMediaRecorder&lt;/a&gt; instance using the &lt;a href=&quot;qmediarecorder#setEncodingSettings&quot;&gt;QMediaRecorder::setEncodingSettings&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc679c5ad6651530019bc750409a7522a68543b3" translate="yes" xml:space="preserve">
          <source>A background-image does not scale with the size of the widget. To provide a &quot;skin&quot; or background that scales along with the widget size, one must use &lt;a href=&quot;stylesheet-reference#border-image-prop&quot;&gt;border-image&lt;/a&gt;. Since the border-image property provides an alternate background, it is not required to specify a background-image when border-image is specified. In the case, when both of them are specified, the border-image draws over the background-image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b6d19ecdb6261ff99bea43f8cf5e3e4f0afce70" translate="yes" xml:space="preserve">
          <source>A backtrace with the number of frames specified by the optional &lt;code&gt;depth&lt;/code&gt; parameter (defaults to 5), and separated by the optional &lt;code&gt;separator&lt;/code&gt; parameter (defaults to &quot;|&quot;). This expansion is available only on some platforms (currently only platfoms using glibc). Names are only known for exported functions. If you want to see the name of every function in your application, use &lt;code&gt;QMAKE_LFLAGS += -rdynamic&lt;/code&gt;. When reading backtraces, take into account that frames might be missing due to inlining or tail call optimization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed99aa7ce083c8958402410f1e7c8e403460ed6" translate="yes" xml:space="preserve">
          <source>A ball component might have a behavior animation assigned to its &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, and &lt;code&gt;color&lt;/code&gt; properties. The behavior animation could be set up to simulate an elastic effect. In effect, this behavior animation would apply the elastic effect to the properties whenever the ball moves.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bb6d27425744e5fa8ebe85b81ce2e5ef27353c3" translate="yes" xml:space="preserve">
          <source>A banner component may have several icons or slogans to display, one after the other. The &lt;code&gt;opacity&lt;/code&gt; property could transform to &lt;code&gt;1.0&lt;/code&gt; denoting an opaque object. Using the &lt;a href=&quot;qml-qtquick-sequentialanimation&quot;&gt;SequentialAnimation&lt;/a&gt; type, the opacity animations will play after the preceding animation finishes. The &lt;a href=&quot;qml-qtquick-parallelanimation&quot;&gt;ParallelAnimation&lt;/a&gt; type will play the animations at the same time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d23654db4b54872002a5cc144770e24680b8e47" translate="yes" xml:space="preserve">
          <source>A bar data item holds the data for a single rendered bar in a graph. Bar data proxies parse data into &lt;a href=&quot;qbardataitem&quot;&gt;QBarDataItem&lt;/a&gt; instances for visualization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93a8b38c721b81c297b8adfbbcf74632e64dbc23" translate="yes" xml:space="preserve">
          <source>A bar data proxy handles adding, inserting, changing, and removing rows of data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be79e228b398d83560fb7b5e2f87a11af0ef501a" translate="yes" xml:space="preserve">
          <source>A bar legend marker is related to &lt;a href=&quot;qabstractbarseries&quot;&gt;QAbstractBarSeries&lt;/a&gt; derived classes. With a bar series, each marker is related to one &lt;a href=&quot;qbarset&quot;&gt;QBarSet&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7749737118e19b6e396ecd3ac66841e99379c7e" translate="yes" xml:space="preserve">
          <source>A bar series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="382df92f881d019f8148e191887092bb721435ca" translate="yes" xml:space="preserve">
          <source>A bar set contains one data value for each category. The first value of a set is assumed to belong to the first category, the second one to the second category, and so on. If the set has fewer values than there are categories, the missing values are assumed to be located at the end of the set. For missing values in the middle of a set, the numerical value of zero is used. Labels for zero value sets are not shown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d8546684c88f7763be453dd5b0e24c91a29da2" translate="yes" xml:space="preserve">
          <source>A base QML type that other types inherit. It cannot be directly created. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7199d06eede04e924c5217487aacab3e0c37fb85" translate="yes" xml:space="preserve">
          <source>A base class for changes in the &lt;a href=&quot;qml-qt3d-render-framegraphnode&quot;&gt;FrameGraphNode&lt;/a&gt;. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b03c6b8becc8a65dd9fdbde6fc1d5ff42daa970a" translate="yes" xml:space="preserve">
          <source>A base class for changes in the &lt;a href=&quot;qml-qt3d-render-framegraphnode&quot;&gt;FrameGraphNode&lt;/a&gt;. &lt;a href=&quot;qt3drender-qframegraphnodecreatedchangebase#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="892444e50ba524498a230a852672f03c83ff39f9" translate="yes" xml:space="preserve">
          <source>A base class for changes in the FrameGraphNode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efbcc6f43d42370f7eeac347f3dc4e8ba106ab2a" translate="yes" xml:space="preserve">
          <source>A base class for handling keyframes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01895fee30cd8d98677086f3b6ce1069390e4a83" translate="yes" xml:space="preserve">
          <source>A base class for handling keyframes. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b1f52d087ec59be2a14f9bffbf72dfa1453a1d2" translate="yes" xml:space="preserve">
          <source>A base class for handling keyframes. &lt;a href=&quot;qt3danimation-qkeyframe#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab3b598b5ad73e835ecacce813d8f8e8aad6efa1" translate="yes" xml:space="preserve">
          <source>A base class that allows obtaining a &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; for an object already managed by a shared pointer. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a80ca27c319e98db226fe4a04e5ca1eedf28f48b" translate="yes" xml:space="preserve">
          <source>A base class to be used to provide textures</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="023bfcdcb93e07c8f4f56aa6e67df0652756aa3a" translate="yes" xml:space="preserve">
          <source>A base class to be used to provide textures. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abfd78e0be8c4e9464818bc1e602e0a4406f3b94" translate="yes" xml:space="preserve">
          <source>A base class to be used to provide textures. &lt;a href=&quot;qt3drender-qabstracttexture#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cd921da4bce1b6568b1505010f82f576d38e813" translate="yes" xml:space="preserve">
          <source>A base type for all data series. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2ac0810528c74a2cd8ead55308134b7e1a3a1a1" translate="yes" xml:space="preserve">
          <source>A base type for all the objects in a 3D scene. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a0f80c3888bb9841e130f3b7fa2b601a6778ad6" translate="yes" xml:space="preserve">
          <source>A base type for line, spline, and scatter series. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="896121b50569bf39634722a9287aa1beaebfb12a" translate="yes" xml:space="preserve">
          <source>A base type for selection list item delegates. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f68e4dcb084a3bf6e757ee314a5c27111449476a" translate="yes" xml:space="preserve">
          <source>A base type for the axes of a graph. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10f426520d8c02aeeb47526de87482cd977be7db" translate="yes" xml:space="preserve">
          <source>A base type for value axis formatters. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a8afccb631fafc2911267f5331704d857c68652" translate="yes" xml:space="preserve">
          <source>A base type of the styled keys. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4391581a7a9bc99a26782600d337cf5df7aee185" translate="yes" xml:space="preserve">
          <source>A base type of the trace input key. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d30e06bb873b7403dbdd35a39c8fa583e3c26a8" translate="yes" xml:space="preserve">
          <source>A base type used for specialized axis types. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e41b504c72e82e5687ad73eec1de3e145285cac6" translate="yes" xml:space="preserve">
          <source>A basic QML type. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="120600024f41f3514d450624cf42ebd58fcf4148" translate="yes" xml:space="preserve">
          <source>A basic element, which is understood by &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;. The following types are considered basic: bool, byte, short, ushort, int, uint, qint64, quint64, double, &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;, &lt;a href=&quot;qdbusobjectpath&quot;&gt;QDBusObjectPath&lt;/a&gt;, &lt;a href=&quot;qdbussignature&quot;&gt;QDBusSignature&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0aef4eec6125a99af23ed8e026f5a7a96e3e9f0" translate="yes" xml:space="preserve">
          <source>A basic example of a QML file that makes use of controls is shown here:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a29d9cc83590e0b380a7cc59755c4b6c85096d06" translate="yes" xml:space="preserve">
          <source>A basic example of a source file that makes use of controls is shown here:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f02a79201a24baf7e657be9e6aaab9778c60f6e" translate="yes" xml:space="preserve">
          <source>A basic store for persisted properties. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c9eba467d31b6ba5d27835e049e8069a5666d59" translate="yes" xml:space="preserve">
          <source>A basic visual QML type. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a43d0a4bf8a05a50c15d14e89c515225351b914" translate="yes" xml:space="preserve">
          <source>A better approach than just alerting the user to an event is to also ask the user what to do about it. Store the question in the &lt;a href=&quot;qmessagebox#informativeText-prop&quot;&gt;informative text&lt;/a&gt; property, and set the &lt;a href=&quot;qmessagebox#standardButtons-prop&quot;&gt;standard buttons&lt;/a&gt; property to the set of buttons you want as the set of user responses. The buttons are specified by combining values from &lt;a href=&quot;qmessagebox#StandardButton-enum&quot;&gt;StandardButtons&lt;/a&gt; using the bitwise OR operator. The display order for the buttons is platform-dependent. For example, on Windows, &lt;b&gt;Save&lt;/b&gt; is displayed to the left of &lt;b&gt;Cancel&lt;/b&gt;, whereas on Mac OS, the order is reversed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91517aba76347c98123d5729458ac183f70f1b9e" translate="yes" xml:space="preserve">
          <source>A binary large object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d32849d41343bbdcfa2c1f991316aad1d2ff094" translate="yes" xml:space="preserve">
          <source>A binding can contain any valid JavaScript expression or statement, as QML uses a standards compliant JavaScript engine. Bindings can access object properties, call methods and use built-in JavaScript objects such as &lt;code&gt;Date&lt;/code&gt; and &lt;code&gt;Math&lt;/code&gt;. Below are other possible bindings for the previous example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89f7c0cf31f1cb06cd4adfa08cc2474bce7d3510" translate="yes" xml:space="preserve">
          <source>A binding is a JavaScript expression which is &quot;bound&quot; to a property. The value of the property at any point in time will be the value returned by evaluating that expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e0bd48d55e2e5d47def7b8986a6c5f60df53c5" translate="yes" xml:space="preserve">
          <source>A bit faster equivalent of (&lt;a href=&quot;qchar#mirroredChar&quot;&gt;QChar::mirroredChar&lt;/a&gt;(ucs4) != ucs4).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da57b3ba6eb85fbb86a69d47612377e5fe23b1c2" translate="yes" xml:space="preserve">
          <source>A bit faster equivalent of (ch.&lt;a href=&quot;qchar#mirroredChar&quot;&gt;mirroredChar&lt;/a&gt;() != ch).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff40644a3a6f8f19950b64b62f1ab30376057331" translate="yes" xml:space="preserve">
          <source>A blackboard filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a13f76f9ba4c90900c2921ae4fdeb0a6ed4b421c" translate="yes" xml:space="preserve">
          <source>A blank/invisible cursor, typically used when the cursor shape needs to be hidden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84edaa213659c871672f5e17ed395a7bdfae9c72" translate="yes" xml:space="preserve">
          <source>A blend tree can be constructed from the following node types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdf1fd94e813e55724df58e4b2a4df2f2c3faac4" translate="yes" xml:space="preserve">
          <source>A block consists of a sequence of text fragments. This class provides a way to iterate over these, and read their contents. It does not provide a way to modify the internal structure or contents of the block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e9bb1670eee10af9defc5d7a6745b40c579ea4d" translate="yes" xml:space="preserve">
          <source>A blood oxygen saturation meter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06bc3559a3e0483df08faf4720a4eff5798663a5" translate="yes" xml:space="preserve">
          <source>A blood pressure monitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a30e72e8e26acb11fbf55198a04066964b51aa10" translate="yes" xml:space="preserve">
          <source>A blur effect blurs the source. This effect is useful for reducing details, such as when the source loses focus and you want to draw attention to other elements. The level of detail can be modified using the &lt;a href=&quot;qgraphicsblureffect#blurRadius-prop&quot;&gt;setBlurRadius&lt;/a&gt;() function. Use &lt;a href=&quot;qgraphicsblureffect#blurHints-prop&quot;&gt;setBlurHints&lt;/a&gt;() to choose the blur hints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1385afbbfc3e3f8639fc35491b66f4c8572ce9b" translate="yes" xml:space="preserve">
          <source>A boolean describing if the printer should be full page or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66d7435ffef2fc6e08846f5da5d98348bb624f5d" translate="yes" xml:space="preserve">
          <source>A boolean indicating if the text in a message box should allow user interfactions (e.g. selection) or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43d99742cc5dcb459537b466d039c2720b87d61c" translate="yes" xml:space="preserve">
          <source>A boolean indicating what the to use the border of the buttons (computed as half the button height) for the spacing of the button in a message box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4165ab995f72831ac0a8d55f2930d4a2331f8d0a" translate="yes" xml:space="preserve">
          <source>A boolean indicating whether controls on a title bar ought to update when the mouse is over them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f92fd18dc3667952397a215400feeae5a1b58d9" translate="yes" xml:space="preserve">
          <source>A boolean indicating whether gamma correction is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="776cd9ba8a01949fd2dc7b6088a72b988b07c9c1" translate="yes" xml:space="preserve">
          <source>A boolean indicating whether the buttons in the message box should be centered or not (see QDialogButtonBox::setCentered()).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea63403f8dc69ec0ab46dfada81f804e2840bab" translate="yes" xml:space="preserve">
          <source>A boolean that indicates whether the certificate error can be overridden and ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9bc9f71e9520f3f1fc22c0e9ba2c6b7d2f59d80" translate="yes" xml:space="preserve">
          <source>A boolean value indicating if the word candidate can be removed from the dictionary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4e570ef43d0a83479e1ab449e289e5ff02e503a" translate="yes" xml:space="preserve">
          <source>A boolean value indicating whether both sides of the printer paper should be used for the printout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa5edd29164f6dd63baee6a5e0dd115980ccd498" translate="yes" xml:space="preserve">
          <source>A boolean value indicating whether data for the document's fonts should be embedded in the data sent to the printer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e06b4c402da4a3545019cfc5bafaceb95b5f996" translate="yes" xml:space="preserve">
          <source>A boolean value indicating whether or not the printer supports printing multiple copies in one job.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65eeb39b575446199454fcdb70136d30b317a432" translate="yes" xml:space="preserve">
          <source>A boolean value indicating whether the printout should be collated or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b24a5abb0b9f0a30bdfe7f743c73ac10cb975a7" translate="yes" xml:space="preserve">
          <source>A boolean value which, when &lt;code&gt;true&lt;/code&gt;, enables single-directory output mode; all generated files go to &lt;a href=&quot;#format-outputsubdir&quot;&gt;FORMAT.outputsubdir&lt;/a&gt; directory, instead of a subdirectory based on the documentation project name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c8a566f062f7da064996667fb5f4cfa5b9bb8c" translate="yes" xml:space="preserve">
          <source>A boolean value which, when &lt;code&gt;true&lt;/code&gt;, generates references to quoted content (for example, &lt;a href=&quot;07-0-qdoc-commands-includingexternalcode#quotefromfile-command&quot;&gt;\quotefromfile&lt;/a&gt; and &lt;a href=&quot;07-0-qdoc-commands-includingexternalcode#snippet-command&quot;&gt;\snippet&lt;/a&gt; commands) instead of including the content directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20fce9945cbc012f4dc34373333167e76d7bfb48" translate="yes" xml:space="preserve">
          <source>A boolean value. If true, left clicking on a scroll bar causes the slider to jump to that position. If false, left clicking will behave as appropriate for each control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2472f93eb5271b0532fd57a1074b72b33b9545d3" translate="yes" xml:space="preserve">
          <source>A boolean value. If true, middle clicking on a scroll bar causes the slider to jump to that position. If false, middle clicking is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c0efedf6b27777e43eab1dff50b840800d6a71a" translate="yes" xml:space="preserve">
          <source>A boolean value. If true, when clicking a scroll bar &lt;a href=&quot;qstyle#SubControl-enum&quot;&gt;SubControl&lt;/a&gt;, holding the mouse button down and moving the pointer outside the &lt;a href=&quot;qstyle#SubControl-enum&quot;&gt;SubControl&lt;/a&gt;, the scroll bar continues to scroll. If false, the scollbar stops scrolling when the pointer leaves the &lt;a href=&quot;qstyle#SubControl-enum&quot;&gt;SubControl&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4b9c2a24ed4081cf776775f43c543394a0da5fc" translate="yes" xml:space="preserve">
          <source>A boolean value. If true, when clicking a scroll bar button (&lt;a href=&quot;qstyle#SubControl-enum&quot;&gt;SC_ScrollBarAddLine&lt;/a&gt; or &lt;a href=&quot;qstyle#SubControl-enum&quot;&gt;SC_ScrollBarSubLine&lt;/a&gt;) and dragging over to the opposite button (rolling) will press the new button and release the old one. When it is false, the original button is released and nothing happens (like a push button).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65c7c21e566ea525d1067d0e1b9837b1f5ce6aa9" translate="yes" xml:space="preserve">
          <source>A boolean value. Use &lt;a href=&quot;qjsonvalue#toBool&quot;&gt;toBool&lt;/a&gt;() to convert to a bool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="419f96b1757747d7827663b26e75e1b02d9eb6cb" translate="yes" xml:space="preserve">
          <source>A border image is an image that is composed of nine parts (top left, top center, top right, center left, center, center right, bottom left, bottom center, and bottom right). When a border of a certain size is required, the corner parts are used as is, and the top, right, bottom, and left parts are stretched or repeated to produce a border with the desired size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a3d3047aa7d9fbbe26c1b917afdae1960b93f22" translate="yes" xml:space="preserve">
          <source>A box plot chart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b44ef30a7bf4766062ddc0612b552ca2bba1255" translate="yes" xml:space="preserve">
          <source>A box plot legend marker is related to a &lt;a href=&quot;qboxplotseries&quot;&gt;QBoxPlotSeries&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e1eff73bff24979c4ceba2ea1dce0cf431d6f5" translate="yes" xml:space="preserve">
          <source>A box plot series acts as a container for box-and-whiskers items. Items from multiple series are grouped into categories according to their index value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="435625d075eaf9111b22423ebca2911477465d6d" translate="yes" xml:space="preserve">
          <source>A box plot series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e28bd17db2f35d630c247e40bbeb82721b91f8ae" translate="yes" xml:space="preserve">
          <source>A box-and-whiskers item is a graphical representation of a range and three median values that is constructed from five different values. There are two ways to specify the values. The first one is by using a constructor or stream operator (&amp;lt;&amp;lt;). The values have to be specified in the following order: lower extreme, lower quartile, median, upper quartile, and upper extreme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4903dead201c3b2103de42eabd7dbe307e4506b" translate="yes" xml:space="preserve">
          <source>A box-and-whiskers item is a graphical representation of a range and three median values that is constructed from five different values. There are two ways to specify the values. The first one is by using a constructor or the &lt;a href=&quot;qml-qtcharts-boxset#append-method&quot;&gt;append()&lt;/a&gt; method. The values have to be specified in the following order: lower extreme, lower quartile, median, upper quartile, and upper extreme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f19da4c030ae6ad6856f9162817b838e28c1eac" translate="yes" xml:space="preserve">
          <source>A brief introduction to regexps is presented, a description of Qt's regexp language, some examples, and the function documentation itself. &lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; is modeled on Perl's regexp language. It fully supports Unicode. &lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; can also be used in a simpler,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0a911d6318efa1994a904469c80f90cc48d14cb" translate="yes" xml:space="preserve">
          <source>A brush has a style, a color, a gradient and a texture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7208674860ae3c99d2955f1439b1badb07c9b726" translate="yes" xml:space="preserve">
          <source>A bug in the OpenGL driver related to framebuffer object (FBO) readbacks may corrupt rendered glyphs. If you set the &lt;code&gt;QML_USE_GLYPHCACHE_WORKAROUND&lt;/code&gt; environment variable, Qt keeps an additional copy of the glyph in RAM. This means that performance is slightly lower when drawing glyphs that have not been drawn before, as Qt accesses the extra copy via the CPU. It also means that the glyph cache will use twice as much memory. The quality is not affected by this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="128491aeb8ae34f2eb3cecbc41e7f6920b89076a" translate="yes" xml:space="preserve">
          <source>A busy indicator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1d7e635a9f1ede437020e73cb251a356066d331" translate="yes" xml:space="preserve">
          <source>A busy indicator. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="609cc4e081ee1fd649bcd7b21d2f2c717f1cc2aa" translate="yes" xml:space="preserve">
          <source>A button box used in dialogs. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7272a50e50b670a5fb2d5b39ae145843413d5545" translate="yes" xml:space="preserve">
          <source>A button can be added to the group with &lt;a href=&quot;qbuttongroup#addButton&quot;&gt;addButton&lt;/a&gt;() and removed with &lt;a href=&quot;qbuttongroup#removeButton&quot;&gt;removeButton&lt;/a&gt;(). If the group is exclusive, the currently checked button is available with &lt;a href=&quot;qbuttongroup#checkedButton&quot;&gt;checkedButton&lt;/a&gt;(). If a button is clicked, the &lt;a href=&quot;qbuttongroup#buttonClicked&quot;&gt;buttonClicked&lt;/a&gt;() signal is emitted; for a checkable button in an exclusive group this means that the button has been checked. The list of buttons in the group is returned by &lt;a href=&quot;qbuttongroup#buttons&quot;&gt;buttons&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2497d364b1a62832d83b4c164b55a1294f2dded8" translate="yes" xml:space="preserve">
          <source>A button can be highlighted in order to draw the user's attention towards it. It has no effect on keyboard interaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a7342c866f20cc585f7d7564e11d82ae4a85a8d" translate="yes" xml:space="preserve">
          <source>A button can be made the default button in a dialog by means of &lt;a href=&quot;qpushbutton#default-prop&quot;&gt;QPushButton::setDefault&lt;/a&gt;() and &lt;a href=&quot;qpushbutton#autoDefault-prop&quot;&gt;QPushButton::setAutoDefault&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e1e0e6b10d6a25dd228adadbffc5ea2bcf636f0" translate="yes" xml:space="preserve">
          <source>A button emits the signal &lt;a href=&quot;qml-qtquick-controls2-abstractbutton#clicked-signal&quot;&gt;clicked()&lt;/a&gt; when it is activated by the user. Connect to this signal to perform the button's action. Buttons also provide the signals &lt;a href=&quot;qml-qtquick-controls2-abstractbutton#canceled-signal&quot;&gt;canceled()&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-abstractbutton#doubleClicked-signal&quot;&gt;doubleClicked()&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-abstractbutton#pressed-signal&quot;&gt;pressed()&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-abstractbutton#released-signal&quot;&gt;released()&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls2-abstractbutton#pressAndHold-signal&quot;&gt;pressAndHold()&lt;/a&gt; for long presses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f15fe6779d9f2bd664406c7028ec2f16f408810f" translate="yes" xml:space="preserve">
          <source>A button might have two states, the &lt;code&gt;pressed&lt;/code&gt; state when the user clicks on the button and a &lt;code&gt;released&lt;/code&gt; state when the user releases the button. We can assign different property configurations for each state. A transition would animate the change from the &lt;code&gt;pressed&lt;/code&gt; state to the &lt;code&gt;released&lt;/code&gt; state. Likewise, there would be an animation during the change from the &lt;code&gt;released&lt;/code&gt; state to the &lt;code&gt;pressed&lt;/code&gt; state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efe8bb6922d7bd4d8f5e0fdcfafa390417d02d39" translate="yes" xml:space="preserve">
          <source>A button should have a signal handler with the name &lt;code&gt;onPressAction&lt;/code&gt;. This signal may be emitted by an assistive tool such as a screen-reader. The implementation needs to behave the same as a mouse click or tap on the button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed5ad419951654815bf4a4de98c8c7ff92d1cfd" translate="yes" xml:space="preserve">
          <source>A button that drops down a grid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5c3257a981edefdc4311df1c8c0cc337d5b7471" translate="yes" xml:space="preserve">
          <source>A button that drops down a list of items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feb27363c7131557dca217667eb959d04e55a817" translate="yes" xml:space="preserve">
          <source>A button that drops down a menu.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00f4764b9bd8fdbac0556580e9b1dbf35820e1c7" translate="yes" xml:space="preserve">
          <source>A button with this property set to true (i.e., the dialog's</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be695cd7044454b87d1306eb29238045fd92cbe9" translate="yes" xml:space="preserve">
          <source>A button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b149150fce88356d35ff9955eb380f4d81b43e06" translate="yes" xml:space="preserve">
          <source>A calendar model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92588cbb54e0f3c0cae869fcebf0d30cd73fae03" translate="yes" xml:space="preserve">
          <source>A calendar model. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60e3e7d65d5dd4cd624a9b7823770044ecf5e01d" translate="yes" xml:space="preserve">
          <source>A calendar namespace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac5a319eb40e19ef6583d3cce7647cb885b3ac09" translate="yes" xml:space="preserve">
          <source>A calendar namespace. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="558544903de5fcadbfd88f1d6ff3d9fa79ff1102" translate="yes" xml:space="preserve">
          <source>A call to this function results in a write request to the remote device. If the operation is successful, the &lt;a href=&quot;qlowenergyservice#descriptorWritten&quot;&gt;descriptorWritten&lt;/a&gt;() signal is emitted; otherwise the &lt;a href=&quot;qlowenergyservice#ServiceError-enum&quot;&gt;DescriptorWriteError&lt;/a&gt; is emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec58acdddc0c9749c3cafebb437e0727abab41a" translate="yes" xml:space="preserve">
          <source>A camera.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79ab48857799fe6d7a941e3d09e55d6ad3bc1dc9" translate="yes" xml:space="preserve">
          <source>A cancelled &lt;a href=&quot;qquickimageresponse&quot;&gt;QQuickImageResponse&lt;/a&gt; still needs to emit &lt;a href=&quot;qquickimageresponse#finished&quot;&gt;finished&lt;/a&gt;() so that the engine may clean up the &lt;a href=&quot;qquickimageresponse&quot;&gt;QQuickImageResponse&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe94f2bb164a785104820f23f89290b25d2b95f5" translate="yes" xml:space="preserve">
          <source>A candlestick chart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aedc28e1670639c07f1b48b1b2b96a01db39c8a" translate="yes" xml:space="preserve">
          <source>A candlestick is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a614fcd8cfdaaf6dbef87dfe0fac181ad1b8b82d" translate="yes" xml:space="preserve">
          <source>A candlestick series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be84e962b2da0217c4d744a4f692b67ed3fbe279" translate="yes" xml:space="preserve">
          <source>A canvas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cadbbbe6e6e8bf24d1252363a6e4554c703c609c" translate="yes" xml:space="preserve">
          <source>A car audio device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="779079ac0db3514f8cf252c436ae917e02b8a42d" translate="yes" xml:space="preserve">
          <source>A card reader peripheral.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fde8263bc4589294cd424e4af86748769447c81" translate="yes" xml:space="preserve">
          <source>A caret or ibeam cursor, indicating that a widget can accept and display text input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45cad47112b06803329dbdd2e1c6f353279ae113" translate="yes" xml:space="preserve">
          <source>A cartesian chart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="666dafa162e794b8ce56fbf157b3cbe18afd90ff" translate="yes" xml:space="preserve">
          <source>A case insensitive comparison is used when determining section boundaries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5377a387f9b4f49aff927b3c79e5963a4c7bbfb2" translate="yes" xml:space="preserve">
          <source>A category has to be a valid &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; and it cannot be duplicated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1965348afe199399d844ffe3bac6f41ac976195a" translate="yes" xml:space="preserve">
          <source>A category has to be a valid &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; and it cannot be duplicated. Duplicated categories will not be appended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7d575d107a5422778f541a348130daed9ba7b4b" translate="yes" xml:space="preserve">
          <source>A cell in a table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cbd0bf91edb1ab168224670aeb6d7b9ed0aca74" translate="yes" xml:space="preserve">
          <source>A cellular phone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b7dce42d2f59ed76aa837ccc65bfde1741dd5d" translate="yes" xml:space="preserve">
          <source>A centered-tab</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28b03e8ca566693c16a56c1739ffaf6a98a6a963" translate="yes" xml:space="preserve">
          <source>A central widget will typically be a standard Qt widget such as a &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt; or a &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;. Custom widgets can also be used for advanced applications. You set the central widget with &lt;code&gt;setCentralWidget()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a69bb4e9027db42bf7e3e18e79892b2928c4afda" translate="yes" xml:space="preserve">
          <source>A certificate is considered self-signed its issuer and subject are identical.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6093d7384b5b8c9bb058cf4c3436fd19809c9bd" translate="yes" xml:space="preserve">
          <source>A certificate is the means of identification used in the SSL process. The local certificate is used by the remote end to verify the local user's identity against its list of Certification Authorities. In most cases, such as in HTTP web browsing, only servers identify to the clients, so the client does not send a certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f3b217ad2b7fef3916423a2a387d3bf74a34e8e" translate="yes" xml:space="preserve">
          <source>A change occurs in the QML scene, causing &lt;code&gt;QQuickItem::update()&lt;/code&gt; to be called. This can be the result of for instance an animation or user input. An event is posted to the render thread to initiate a new frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdd6b0668e6bf766ccb1da072392109f3e2885ec" translate="yes" xml:space="preserve">
          <source>A character represents itself unless it has a special regexp meaning. e.g. &lt;b&gt;c&lt;/b&gt; matches the character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d05b7daaba0cf9c580c318292d1c3fcf2906a043" translate="yes" xml:space="preserve">
          <source>A character that follows a backslash matches the character itself, except as specified below. e.g., To match a literal caret at the beginning of a string, write &lt;b&gt;\^&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8cfa68a7caef63e2e65376beba8eb59b47b317c" translate="yes" xml:space="preserve">
          <source>A characteristic belongs to a service if &lt;a href=&quot;qlowenergyservice#characteristics&quot;&gt;characteristics&lt;/a&gt;() contains the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3bd8c6a594af37f9dc4b4ca31858117c2e53e60" translate="yes" xml:space="preserve">
          <source>A characteristic can only be read if the service is in the &lt;a href=&quot;qlowenergyservice#ServiceState-enum&quot;&gt;ServiceDiscovered&lt;/a&gt; state and belongs to the service. If one of these conditions is not true the &lt;a href=&quot;qlowenergyservice#ServiceError-enum&quot;&gt;QLowEnergyService::OperationError&lt;/a&gt; is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e330f868aa683ecb78c92abe79c89d9cb1d6852" translate="yes" xml:space="preserve">
          <source>A characteristic can only be written if this service is in the &lt;a href=&quot;qlowenergyservice#ServiceState-enum&quot;&gt;ServiceDiscovered&lt;/a&gt; state and belongs to the service. If one of these conditions is not true the &lt;a href=&quot;qlowenergyservice#ServiceError-enum&quot;&gt;QLowEnergyService::OperationError&lt;/a&gt; is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f350792e445787068030d52e84fae01f78e5fce5" translate="yes" xml:space="preserve">
          <source>A characteristic is the principal information carrier. It has a &lt;a href=&quot;qlowenergycharacteristic#value&quot;&gt;value()&lt;/a&gt; and &lt;a href=&quot;qlowenergycharacteristic#value&quot;&gt;properties()&lt;/a&gt; describing the access permissions for the value. The general purpose of the contained descriptor is to further define the nature of the characteristic. For example, it might specify how the value is meant to be interpreted or whether it can notify the value consumer about value changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="796ed48ca2b07d9b5ebd0790c64cfe2c6610ccd1" translate="yes" xml:space="preserve">
          <source>A chart view does not require a &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; object to work. To display a chart in an existing &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;, the &lt;a href=&quot;qchart&quot;&gt;QChart&lt;/a&gt; or &lt;a href=&quot;qpolarchart&quot;&gt;QPolarChart&lt;/a&gt; class should be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="151dbd453e9e81aed06730583c8d205be0364a6b" translate="yes" xml:space="preserve">
          <source>A check box, like &lt;a href=&quot;qcheckbox&quot;&gt;QCheckBox&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5268ccff6ca860d351a4eb531f722284344d32ed" translate="yes" xml:space="preserve">
          <source>A checkable action is one which has an on/off state. For example, in a word processor, a Bold toolbar button may be either on or off. An action which is not a toggle action is a command action; a command action is simply executed, e.g. file save. By default, this property is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d321928e909f7a3b523aecf0849a50eaa9c249c" translate="yes" xml:space="preserve">
          <source>A checkable action toggles between checked (on) and unchecked (off) when triggered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4897475d78fa7ddfa214578a1302ba3109e6f369" translate="yes" xml:space="preserve">
          <source>A checkable button that triggers an action when held in long enough</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f046c948ec63912abc7d0345d72e333fdc80f6" translate="yes" xml:space="preserve">
          <source>A checkable button that triggers an action when held in long enough. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9fd85822e662247fe1d67747df03be6d14b9c41" translate="yes" xml:space="preserve">
          <source>A checkable button toggles between checked (on) and unchecked (off) when the user clicks on it or presses the space bar while the button has active focus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac249a5c8641bdf7ac99bb5378e34bb1f08ef293" translate="yes" xml:space="preserve">
          <source>A checkable menu item has an on/off state. For example, in a word processor, a &quot;Bold&quot; menu item may be either on or off. A menu item that is not checkable is a command item that is simply executed, e.g. file save.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd80ea84342561d19669d0066b0ec589c01054a3" translate="yes" xml:space="preserve">
          <source>A checkbox may be in a partially checked state when the regular checked state can not be determined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06b2d936364b3b07aa4c1d1eb6dc0625f2218fad" translate="yes" xml:space="preserve">
          <source>A checkbox with a text label</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8be560b2187c63e123b3adfe80a77edd19b705a1" translate="yes" xml:space="preserve">
          <source>A checkbox with a text label. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c692d27f3e2938ae92e34873782d260655a99426" translate="yes" xml:space="preserve">
          <source>A checked &lt;a href=&quot;qml-qtquick-extras-togglebutton&quot;&gt;ToggleButton&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26a975206cbeb7b8ddfb2a709a56672115751c3e" translate="yes" xml:space="preserve">
          <source>A child is added to this item. The value argument is the new child item (i.e., a &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; pointer). Do not pass this item to any item's &lt;a href=&quot;qgraphicsitem#setParentItem&quot;&gt;setParentItem&lt;/a&gt;() function as this notification is delivered. The return value is unused; you cannot adjust anything in this notification. Note that the new child might not be fully constructed when this notification is sent; calling pure virtual functions on the child can lead to a crash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4422932c3807d2763240d7cbfc1ab4084d18510" translate="yes" xml:space="preserve">
          <source>A child is removed from this item. The value argument is the child item that is about to be removed (i.e., a &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; pointer). The return value is unused; you cannot adjust anything in this notification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0a45cc581adcc3dd71f17a696eb9308c6078802" translate="yes" xml:space="preserve">
          <source>A child state can be final (a &lt;a href=&quot;qfinalstate&quot;&gt;QFinalState&lt;/a&gt; object); when a final child state is entered, the parent state emits the &lt;a href=&quot;qstate#finished&quot;&gt;QState::finished&lt;/a&gt;() signal. The following diagram shows a composite state &lt;code&gt;s1&lt;/code&gt; which does some processing before entering a final state:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cceb832fe4aba21d006559052f76fc13613c52f" translate="yes" xml:space="preserve">
          <source>A child state can be final (a &lt;a href=&quot;qml-qtqml-statemachine-finalstate&quot;&gt;FinalState&lt;/a&gt; object); when a final child state is entered, the parent state emits the &lt;a href=&quot;qml-qtqml-statemachine-state#finished-signal&quot;&gt;State::finished&lt;/a&gt; signal. The following diagram shows a composite state &lt;code&gt;s1&lt;/code&gt; which does some processing before entering a final state:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f0d51606fcfe264c55def86057706496107a953" translate="yes" xml:space="preserve">
          <source>A child state can override an inherited transition. For example, the following code adds a transition that effectively causes the Quit button to be ignored when the state machine is in state &lt;code&gt;s12&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb5f921ccea69491a39f7f68bfac75e60be6cbb9" translate="yes" xml:space="preserve">
          <source>A child state can override an inherited transition. For example, the following code adds a transition that effectively causes the Quit button to be ignored when the state machine is in state, &lt;code&gt;s12&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a3178e84d5a23a9d268577cb20ab73683f1bcc1" translate="yes" xml:space="preserve">
          <source>A child was added. &lt;a href=&quot;qquickitem-itemchangedata#item-var&quot;&gt;ItemChangeData::item&lt;/a&gt; contains the added child.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f84ba19d98bd6549531c85e6c6da9842b569e529" translate="yes" xml:space="preserve">
          <source>A child was removed. &lt;a href=&quot;qquickitem-itemchangedata#item-var&quot;&gt;ItemChangeData::item&lt;/a&gt; contains the removed child.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee4c5a170aa4b05a9d3035c018b357f2c5bbecba" translate="yes" xml:space="preserve">
          <source>A child widget has been hidden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76a6200d9ad865158136f4a74ccb61dbb2cbd56b" translate="yes" xml:space="preserve">
          <source>A child widget has been shown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad6c6776e0f78101707e6af1d802cd0eb611baf8" translate="yes" xml:space="preserve">
          <source>A circular arc between the two lines is filled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2f6596e501bfdc7410e4968e10af755ef273d03" translate="yes" xml:space="preserve">
          <source>A circular dial that is rotated to set a value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62fd5640ed5b85f62d73f5724040b4057f94ad60" translate="yes" xml:space="preserve">
          <source>A circular dial that is rotated to set a value. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ebbc80cbfd3364df8d8b26b91f64fc7e29f5ded" translate="yes" xml:space="preserve">
          <source>A circular shape</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1145ad09acaab40b2ef5801fd9879dd380ae655a" translate="yes" xml:space="preserve">
          <source>A clamshell handheld computer or PDA.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c40d78bbf9369b63c1bc7d03705d6a04571557c0" translate="yes" xml:space="preserve">
          <source>A clark name is a way to present a full QName with only one string, where the namespace cannot contain braces. Here are a couple of examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9db2c007fbe6f140b506973cd84f4f35664e51" translate="yes" xml:space="preserve">
          <source>A class declaring properties must be a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;. To make it possible to animate a property, it must provide a setter (so that &lt;a href=&quot;qpropertyanimation&quot;&gt;QPropertyAnimation&lt;/a&gt; can set the property's value). Note that this makes it possible to animate many of Qt's widgets. Let's look at an example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28fb83c180669a6b010f108815f630d84cad1678" translate="yes" xml:space="preserve">
          <source>A class encapsulating a Cocoa NSOpenGLContext. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="106e429f4511ca1db8c867851b703a78d15bc359" translate="yes" xml:space="preserve">
          <source>A class encapsulating a WGL context on Windows with desktop OpenGL (opengl32.dll). &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4184e168d12383dc1be66ac69870b8aadbf04c1c" translate="yes" xml:space="preserve">
          <source>A class encapsulating an EGL context and display handle. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c680e9945128bdf78968a6001e540153f582a09d" translate="yes" xml:space="preserve">
          <source>A class for applying a &lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt; to QML file loading. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71e7aa0bff88916f9aa1eb03d1155f83996187b4" translate="yes" xml:space="preserve">
          <source>A class grouping animations together</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e11d6e6c622acadd050ef71f5b49a1a70b980ac2" translate="yes" xml:space="preserve">
          <source>A class grouping animations together. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="171d030e86e903757ba67dedaafadc4df0401eca" translate="yes" xml:space="preserve">
          <source>A class grouping animations together. &lt;a href=&quot;qt3danimation-qanimationgroup#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c36bcc860febf6c2300f686373662ab02bb364f" translate="yes" xml:space="preserve">
          <source>A class holding information about &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt; objects available on the Qt Remote Objects network. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c81c287d7291dd68fc112bc07579d1818b1e17f" translate="yes" xml:space="preserve">
          <source>A class implementing &lt;a href=&quot;qwidget#inputMethodEvent&quot;&gt;QWidget::inputMethodEvent&lt;/a&gt;() or &lt;a href=&quot;qgraphicsitem#inputMethodEvent&quot;&gt;QGraphicsItem::inputMethodEvent&lt;/a&gt;() should at least understand and honor the &lt;a href=&quot;qinputmethodevent#AttributeType-enum&quot;&gt;TextFormat&lt;/a&gt; and &lt;a href=&quot;qinputmethodevent#AttributeType-enum&quot;&gt;Cursor&lt;/a&gt; attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1712c915336e5aa3cab00128c357cd5724f37472" translate="yes" xml:space="preserve">
          <source>A class implementing a text object needs to inherit both &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and &lt;a href=&quot;qtextobjectinterface&quot;&gt;QTextObjectInterface&lt;/a&gt;. &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; must be the first class inherited. For instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b49c83d20dc44d2157e4bb585a1a62d5725fc42" translate="yes" xml:space="preserve">
          <source>A class implementing blend-shape morphing animation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e49b21227d8bff1c63039b3d4ded77fa097f341" translate="yes" xml:space="preserve">
          <source>A class implementing blend-shape morphing animation. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c416248ff5e66b372e5fbc0dd5f7e03421b00099" translate="yes" xml:space="preserve">
          <source>A class implementing blend-shape morphing animation. &lt;a href=&quot;qt3danimation-qmorphinganimation#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="252fe3b5fd75630d6db07e0b0ebc8badad33966e" translate="yes" xml:space="preserve">
          <source>A class implementing simple keyframe animation to a &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt;. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fe9bcca8de505102cd5342900eb62556774a53b" translate="yes" xml:space="preserve">
          <source>A class implementing simple keyframe animation to a &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt;. &lt;a href=&quot;qt3danimation-qkeyframeanimation#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82c114c3718f9bf018683121e868e11405da16f2" translate="yes" xml:space="preserve">
          <source>A class implementing simple keyframe animation to a QTransform</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6f3cfd2e9e48fe145f37769e7f7c0460b67a7b9" translate="yes" xml:space="preserve">
          <source>A class implementing vertex-blend morphing animation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae4dbe25b45b10eac6f8e1c6f45183d9993ff414" translate="yes" xml:space="preserve">
          <source>A class implementing vertex-blend morphing animation. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7392bba63cd02134a0b62e3673cd310ca945b22c" translate="yes" xml:space="preserve">
          <source>A class implementing vertex-blend morphing animation. &lt;a href=&quot;qt3danimation-qvertexblendanimation#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00a8c084b6b421f18308857756d942ac4b8c9ebf" translate="yes" xml:space="preserve">
          <source>A class interacting with (but not implementing) a Qt API on the Remote Object network. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afd86f542bfb0450a872caf9d5bf35956f2f0611" translate="yes" xml:space="preserve">
          <source>A class is considered to inherit itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80766e3b7e27abeb670c7d9dcc39ac8e45372059" translate="yes" xml:space="preserve">
          <source>A class or overview may belong to many groups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b413e1263094bdb03d8fc07677d63b529459216b" translate="yes" xml:space="preserve">
          <source>A class providing morph targets to blend-shape animation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="457caf6079e4b1f7f537d65b667f6ca87bd91065" translate="yes" xml:space="preserve">
          <source>A class providing morph targets to blend-shape animation. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d71dd4128f60959aff7b9c6db00f4c60ed1834ec" translate="yes" xml:space="preserve">
          <source>A class providing morph targets to blend-shape animation. &lt;a href=&quot;qt3danimation-qmorphtarget#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63a267eb9d3afd8b317a55e5140bcec17efdd746" translate="yes" xml:space="preserve">
          <source>A class which provides the methods for setting PROP values of a replica to value they had the last time the replica was used. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f3ba622140922fc46d3758f3eaad0c4ea5ee6e0" translate="yes" xml:space="preserve">
          <source>A client must attempt to contact the target host with the lowest-numbered priority.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2da448b3b1ed8d770e441f62711f3265a6336bb6" translate="yes" xml:space="preserve">
          <source>A clock displaying time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c51cb943e3767e2177a01475e798aa1bd8d1724" translate="yes" xml:space="preserve">
          <source>A colon separating keys from values inside objects is missing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15fbfe8bf1257f945078913fd63ee7bcb8c6b174" translate="yes" xml:space="preserve">
          <source>A color can be set by passing an RGB string (such as &quot;#112233&quot;), or an ARGB string (such as &quot;#ff112233&quot;) or a color name (such as &quot;blue&quot;), to the &lt;a href=&quot;qcolor#setNamedColor&quot;&gt;setNamedColor&lt;/a&gt;() function. The color names are taken from the SVG 1.0 color names. The &lt;a href=&quot;qcolor#name&quot;&gt;name&lt;/a&gt;() function returns the name of the color in the format &quot;#RRGGBB&quot;. Colors can also be set using &lt;a href=&quot;qcolor#setRgb&quot;&gt;setRgb&lt;/a&gt;(), &lt;a href=&quot;qcolor#setHsv&quot;&gt;setHsv&lt;/a&gt;() and &lt;a href=&quot;qcolor#setCmyk&quot;&gt;setCmyk&lt;/a&gt;(). To get a lighter or darker color use the &lt;a href=&quot;qcolor#lighter&quot;&gt;lighter&lt;/a&gt;() and &lt;a href=&quot;qcolor#darker&quot;&gt;darker&lt;/a&gt;() functions respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5ad0c4310ca592338efc0b5a9289116e599f268" translate="yes" xml:space="preserve">
          <source>A color is normally specified in terms of RGB (red, green, and blue) components, but it is also possible to specify it in terms of HSV (hue, saturation, and value) and CMYK (cyan, magenta, yellow and black) components. In addition a color can be specified using a color name. The color name can be any of the SVG 1.0 color names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef6b395db2eedf58dee91744269625807c1c40d5" translate="yes" xml:space="preserve">
          <source>A color to indicate a selected item or the current item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d6a2c390fb307088d19fa185c444cb4599ce5e" translate="yes" xml:space="preserve">
          <source>A color to indicate a selected item or the current item. By default, the highlight color is &lt;a href=&quot;qt#GlobalColor-enum&quot;&gt;Qt::darkBlue&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6df669bd06253e7b37d26d3ce8b21ae17d2d536" translate="yes" xml:space="preserve">
          <source>A color type has &lt;code&gt;r&lt;/code&gt;, &lt;code&gt;g&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;a&lt;/code&gt; properties that refer to the red, green, blue and alpha values of the color, respectively. Additionally it has &lt;code&gt;hsvHue&lt;/code&gt;, &lt;code&gt;hsvSaturation&lt;/code&gt;, &lt;code&gt;hsvValue&lt;/code&gt; and &lt;code&gt;hslHue&lt;/code&gt;, &lt;code&gt;hslSaturation&lt;/code&gt;, &lt;code&gt;hslLightness&lt;/code&gt; properties, which allow access to color values in HSV and HSL color models accordingly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acbd29f7e97306c785659e9a53cdf7aafa4adae7" translate="yes" xml:space="preserve">
          <source>A colorize effect renders the source with a tint of its &lt;a href=&quot;qgraphicscolorizeeffect#color-prop&quot;&gt;color&lt;/a&gt;(). The color can be modified using the &lt;a href=&quot;qgraphicscolorizeeffect#color-prop&quot;&gt;setColor&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed86029bf2cd8b7da0bfe8ec238c9a06dc40cae7" translate="yes" xml:space="preserve">
          <source>A column of cells, usually within a table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6fbe42b297bb3f991da572b5d731017729445e6" translate="yes" xml:space="preserve">
          <source>A column of week numbers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec9c74b17b97e312e218c95a7acc61c77c957de4" translate="yes" xml:space="preserve">
          <source>A column of week numbers. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e9d96834fc8d23965b6cb0bdbdbd51107410e03" translate="yes" xml:space="preserve">
          <source>A column within a tumbler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44d51517d064d11c668abc9ec2baefca0b061b4e" translate="yes" xml:space="preserve">
          <source>A column within a tumbler. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c110bc0121608496b4cf6f5cf8e098b6f02718" translate="yes" xml:space="preserve">
          <source>A combination of &lt;a href=&quot;qabstract3dgraph#SelectionFlag-enum&quot;&gt;SelectionFlags&lt;/a&gt;. By default, &lt;code&gt;SelectionItem&lt;/code&gt;. Different graph types support different selection modes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cad76bcac1975a42227279e2510846581837a45" translate="yes" xml:space="preserve">
          <source>A combination of Clear and Select, provided for convenience.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2325ea5c128499eb2f69533a76c1a61f69ed195c" translate="yes" xml:space="preserve">
          <source>A combination of Select and Current, provided for convenience.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="340888b1701873ef30dcb69749168c701dc1a76c" translate="yes" xml:space="preserve">
          <source>A combination of Toggle and Current, provided for convenience.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33c493b159aa45c70dcef39b4b224fe38a531e53" translate="yes" xml:space="preserve">
          <source>A combo box, like &lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e822f091e202c0f34473a5fff40f5a341c2fd17b" translate="yes" xml:space="preserve">
          <source>A combobox can be populated using the insert functions, &lt;a href=&quot;qcombobox#insertItem&quot;&gt;insertItem&lt;/a&gt;() and &lt;a href=&quot;qcombobox#insertItems&quot;&gt;insertItems&lt;/a&gt;() for example. Items can be changed with &lt;a href=&quot;qcombobox#setItemText&quot;&gt;setItemText&lt;/a&gt;(). An item can be removed with &lt;a href=&quot;qcombobox#removeItem&quot;&gt;removeItem&lt;/a&gt;() and all items can be removed with &lt;a href=&quot;qcombobox#clear&quot;&gt;clear&lt;/a&gt;(). The text of the current item is returned by &lt;a href=&quot;qcombobox#currentText-prop&quot;&gt;currentText&lt;/a&gt;(), and the text of a numbered item is returned with text(). The current item can be set with &lt;a href=&quot;qcombobox#currentIndex-prop&quot;&gt;setCurrentIndex&lt;/a&gt;(). The number of items in the combobox is returned by &lt;a href=&quot;qcombobox#count-prop&quot;&gt;count&lt;/a&gt;(); the maximum number of items can be set with &lt;a href=&quot;qcombobox#maxCount-prop&quot;&gt;setMaxCount&lt;/a&gt;(). You can allow editing using &lt;a href=&quot;qcombobox#editable-prop&quot;&gt;setEditable&lt;/a&gt;(). For editable comboboxes you can set auto-completion using &lt;a href=&quot;qcombobox#setCompleter&quot;&gt;setCompleter&lt;/a&gt;() and whether or not the user can add duplicates is set with &lt;a href=&quot;qcombobox#duplicatesEnabled-prop&quot;&gt;setDuplicatesEnabled&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61df4f2a8de1c3f11d8a1d1d12bc55cff5baa624" translate="yes" xml:space="preserve">
          <source>A combobox is a selection widget that displays the current item, and can pop up a list of selectable items. A combobox may be editable, allowing the user to modify each item in the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b47b63bb5a98d0e0fba54e671bc03ae12e91926" translate="yes" xml:space="preserve">
          <source>A combobox, like &lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdf808982ec1978822829821add4806b746bc45d" translate="yes" xml:space="preserve">
          <source>A comma separating different items is missing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5128fb14af5c348d1c1ba73ebe9b2998ca4403eb" translate="yes" xml:space="preserve">
          <source>A command ID is used in command compression. It must be an integer unique to this command's class, or -1 if the command doesn't support compression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f1ccfe8f5fe3fdd2c9290b01954868158cf282e" translate="yes" xml:space="preserve">
          <source>A command button is rectangular and typically displays a text label describing its action. A shortcut key can be specified by preceding the preferred character with an ampersand in the text. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cf55cf2364114c5a7c391231ad87e5e06b15c65" translate="yes" xml:space="preserve">
          <source>A command can be marked obsolete with the &lt;a href=&quot;qundocommand#setObsolete&quot;&gt;QUndoCommand::setObsolete&lt;/a&gt;() function. The &lt;a href=&quot;qundocommand#isObsolete&quot;&gt;QUndoCommand::isObsolete&lt;/a&gt;() flag is checked in &lt;a href=&quot;qundostack#push&quot;&gt;QUndoStack::push&lt;/a&gt;(), &lt;a href=&quot;qundostack#undo&quot;&gt;QUndoStack::undo&lt;/a&gt;(), &lt;a href=&quot;qundostack#redo&quot;&gt;QUndoStack::redo&lt;/a&gt;(), and &lt;a href=&quot;qundostack#setIndex&quot;&gt;QUndoStack::setIndex&lt;/a&gt;() after calling &lt;a href=&quot;qundocommand#undo&quot;&gt;QUndoCommand::undo&lt;/a&gt;(), &lt;a href=&quot;qundocommand#redo&quot;&gt;QUndoCommand::redo&lt;/a&gt;() and &lt;a href=&quot;qundocommand&quot;&gt;QUndoCommand&lt;/a&gt;:mergeWith() where applicable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2b132f3b223a778c8d8191db30c1427ffa61341" translate="yes" xml:space="preserve">
          <source>A command macro is a sequence of commands, all of which are undone and redone in one go. Command macros are created by giving a command a list of child commands. Undoing or redoing the parent command will cause the child commands to be undone or redone. Command macros may be created explicitly by specifying a parent in the &lt;a href=&quot;qundocommand&quot;&gt;QUndoCommand&lt;/a&gt; constructor, or by using the convenience functions &lt;a href=&quot;qundostack#beginMacro&quot;&gt;beginMacro&lt;/a&gt;() and &lt;a href=&quot;qundostack#endMacro&quot;&gt;endMacro&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4edd9ffe13d90913c5fb11cc1d25565e01f5c2ef" translate="yes" xml:space="preserve">
          <source>A command or shell fragment prepended to each test command. An example use-case is a &quot;timeout&quot; script which will terminate a test if it does not complete within a specified time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="477bc9e3eee121001fc4e49f60071511c40b957c" translate="yes" xml:space="preserve">
          <source>A comment in the parsed XML such as this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97e6fd3dcd10abfe9d91aa194e9a5b660e14a273" translate="yes" xml:space="preserve">
          <source>A comment may be provided by the host platform to assist users in choosing the correct time zone. Depending on the platform this may not be localized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="639036f532dc688068023b1683be72b5cd49180f" translate="yes" xml:space="preserve">
          <source>A commit page is a page that represents an action which cannot be undone by clicking &lt;b&gt;Back&lt;/b&gt; or &lt;b&gt;Cancel&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f5958a9034c37ae82a75b916410ae0723a865de" translate="yes" xml:space="preserve">
          <source>A common cause of bugs in QML applications is accidentally overwriting bindings with static values from JavaScript statements. To help developers track down problems of this kind, the QML engine is able to emit messages whenever a binding is lost due to imperative assignments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c553d9b9de382ae28563479347e802638cce6f49" translate="yes" xml:space="preserve">
          <source>A common convention used in models that expose tree data structures is that only items in the first column have children. For that case, when reimplementing this function in a subclass the column of the returned &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; would be 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb2f2762cfb46f4a4d619d7958e96d5101b5f365" translate="yes" xml:space="preserve">
          <source>A common error is to assume that attached properties and signal handlers are directly accessible from the children of the object to which these attributes have been attached. This is not the case. The instance of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb30d8291d11f4f4e5f991693002a15855714c43" translate="yes" xml:space="preserve">
          <source>A common implementation of dragEnterEvent accepts or ignores</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad5ac5f8e22cb263b4300453f17ae1ab2ee8faf" translate="yes" xml:space="preserve">
          <source>A common problem with progress dialogs is that it is difficult to know when to use them; operations take different amounts of time on different hardware. &lt;a href=&quot;qprogressdialog&quot;&gt;QProgressDialog&lt;/a&gt; offers a solution to this problem: it estimates the time the operation will take (based on time for steps), and only shows itself if that estimate is beyond &lt;a href=&quot;qprogressdialog#minimumDuration-prop&quot;&gt;minimumDuration&lt;/a&gt;() (4 seconds by default).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae9d4446500fce41a882a411c7f868dd58ae56c" translate="yes" xml:space="preserve">
          <source>A common requirement is to remove an item from a list and do something with it. For this, &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; provides &lt;a href=&quot;qlist#takeAt&quot;&gt;takeAt&lt;/a&gt;(), &lt;a href=&quot;qlist#takeFirst&quot;&gt;takeFirst&lt;/a&gt;(), and &lt;a href=&quot;qlist#takeLast&quot;&gt;takeLast&lt;/a&gt;(). Here's a loop that removes the items from a list one at a time and calls &lt;code&gt;delete&lt;/code&gt; on them:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="148f8d6ed7d7004c33096c3945c1f4b2c8276c3a" translate="yes" xml:space="preserve">
          <source>A common requirement is to remove the first or last item in the list and do something with it. For this, &lt;a href=&quot;qlinkedlist&quot;&gt;QLinkedList&lt;/a&gt; provides &lt;a href=&quot;qlinkedlist#takeFirst&quot;&gt;takeFirst&lt;/a&gt;() and &lt;a href=&quot;qlinkedlist#takeLast&quot;&gt;takeLast&lt;/a&gt;(). Here's a loop that removes the items from a list one at a time and calls &lt;code&gt;delete&lt;/code&gt; on them:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2d5106322347695c9b4dfc0312f3ebb4ca93929" translate="yes" xml:space="preserve">
          <source>A common usage pattern is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e9f75e225f60244bf7056d00dd98aab303754ea" translate="yes" xml:space="preserve">
          <source>A common use case is to center a popup within its parent. One way to do this is with the &lt;a href=&quot;qml-qtquick-item#x-prop&quot;&gt;x&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-item#y-prop&quot;&gt;y&lt;/a&gt; properties. Anchors offer a more convenient approach:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c2cb7bb39598cad610315bdbbe10ab9287788e9" translate="yes" xml:space="preserve">
          <source>A common use case is to let the user specify the filter regular expression, wildcard pattern, or fixed string in a &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; and to connect the &lt;a href=&quot;qlineedit#textChanged&quot;&gt;textChanged()&lt;/a&gt; signal to &lt;a href=&quot;qsortfilterproxymodel#setFilterRegularExpression&quot;&gt;setFilterRegularExpression&lt;/a&gt;(), &lt;a href=&quot;qsortfilterproxymodel#setFilterWildcard&quot;&gt;setFilterWildcard&lt;/a&gt;(), or &lt;a href=&quot;qsortfilterproxymodel#setFilterFixedString&quot;&gt;setFilterFixedString&lt;/a&gt;() to reapply the filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e75b7f0392f224ac1920664088f56b1f16e73578" translate="yes" xml:space="preserve">
          <source>A common way to distribute applications is to provide a compressed disk image (.dmg file) that the user can mount in Finder. The deployment tool, &lt;code&gt;macdeployqt&lt;/code&gt; (available from the macOS installers), can be used to create the self-contained bundles, and optionally also create a .dmg archive. Applications can also be distributed through the Mac App Store. Qt 5 aims to stay within the app store sandbox rules. macdeployqt (bin/macdeployqt) can be used as a starting point for app store deployment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d4c06dcfe6d54dc086164905150db9ec9fbeae" translate="yes" xml:space="preserve">
          <source>A common way to perform incremental parsing is to connect the &lt;code&gt;readyRead()&lt;/code&gt; signal of a &lt;a href=&quot;qnetworkreply&quot;&gt;network reply&lt;/a&gt; a slot, and handle the incoming data there. See &lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="864cf07a7d838ba7a2c027903f7c0bb14dcbc5a1" translate="yes" xml:space="preserve">
          <source>A compile time processed form can be used in your application with one of the following approaches:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e11801dc14d8a845c06c251ea6b8371b8246a3bd" translate="yes" xml:space="preserve">
          <source>A compiled replica is a &lt;a href=&quot;qremoteobjectreplica&quot;&gt;QRemoteObjectReplica&lt;/a&gt; based type, where the derived class definition is automatically generated by the &lt;a href=&quot;qtremoteobjects-repc#&quot;&gt;repc&lt;/a&gt; compiler. Only a header file is generated (using the &lt;a href=&quot;qtremoteobjects-repc#repc-replica&quot;&gt;REPC_REPLICA&lt;/a&gt; variable in your .pro file will make generation part of the build process), but it is a complete type. There is no public constructor, you need to use the &lt;a href=&quot;qremoteobjectnode#acquire&quot;&gt;QRemoteObjectNode::acquire&lt;/a&gt; template function to create the Replica instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ea731e7e4fa5b37fe7883f02c8ef94b2f3176be" translate="yes" xml:space="preserve">
          <source>A compiled state machine can be instantiated the same way as any C++ object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56c91b39af1a78cbb435f1df379bd9cba572a4d5" translate="yes" xml:space="preserve">
          <source>A complete &lt;a href=&quot;qbluetoothserviceinfo&quot;&gt;QBluetoothServiceInfo&lt;/a&gt; object contains a &lt;a href=&quot;qbluetoothserviceinfo#AttributeId-enum&quot;&gt;ProtocolDescriptorList&lt;/a&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab4882c64f44c58d02ad145187bd87ae025df83f" translate="yes" xml:space="preserve">
          <source>A complete custom widget specification looks like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76a9017adfa8a4106d6f3a9a0164c49357fe4051" translate="yes" xml:space="preserve">
          <source>A complete description of DITA can be found at the &lt;a href=&quot;http://www.oasis-open.org/committees/tc_home.php?wg_abbrev=dita&quot;&gt;OASIS Darwin Information Typing Architecture&lt;/a&gt; site.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e4b24e283775b6d244e20f8047672f17d6033a7" translate="yes" xml:space="preserve">
          <source>A complete path to a directory containing a &lt;code&gt;qmake.conf&lt;/code&gt; file. In this case qmake will open the &lt;code&gt;qmake.conf&lt;/code&gt; file from within that directory. If the file does not exist, qmake will exit with an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23e8cc9528ee2c9db8bb4a099346df09a9a8358d" translate="yes" xml:space="preserve">
          <source>A complete web browser window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c712b496087f939e164f0ce3aef073b161529e2d" translate="yes" xml:space="preserve">
          <source>A component for displaying web content. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c3858f37abfe07c1e0eba1f63ab78c13a7b3ceb" translate="yes" xml:space="preserve">
          <source>A component is a template from which a QML object or object tree is created. It is produced when a document is loaded by the QML engine. Once it has been loaded, it can be used to instantiate the object or object tree that it represents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b328525d196a5bd7b479fec47247fba9aff5b9a8" translate="yes" xml:space="preserve">
          <source>A component is considered to be in use if there are any extant instances of the component itself, any instances of other components that use the component, or any objects instantiated by any of those components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f576eded800f741e3e288acf2ecba1856cd5e5e" translate="yes" xml:space="preserve">
          <source>A computer device or PDA.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="963158a84d58b5338416baf086c1c44aee7c02fa" translate="yes" xml:space="preserve">
          <source>A configurable stock chart for the NASDAQ-100</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9edc9508e4e416d4d2e514af0cb62bf16d7f458f" translate="yes" xml:space="preserve">
          <source>A configuration can represent a single access point configuration or a set of access point configurations. Such a set is called service network. A configuration that is based on a service network can potentially support roaming of network sessions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16efa5515b03c1b20f59574d4c1476cd7e202dd5" translate="yes" xml:space="preserve">
          <source>A conical mesh</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a669105f5e99fe0ecb2a7c943259cf9049e666c" translate="yes" xml:space="preserve">
          <source>A conical mesh. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85e6f92a4b32e24ce2389b32934aec504b310ed0" translate="yes" xml:space="preserve">
          <source>A conical mesh. &lt;a href=&quot;qt3dextras-qconemesh#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43e6a4dfc68f973467bf70d0b82b8f1e31bedc5d" translate="yes" xml:space="preserve">
          <source>A connection is established.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24f3ee9df98ea18ec7b6566034194b70db9d14c0" translate="yes" xml:space="preserve">
          <source>A consequence of this is that if Qt has problems dealing with some of these macOS features (dark-mode, layer-backed views), the only way to opt out of them is building with an earlier SDK (the 10.13 SDK, available through Xcode 9). This is a last-resort solution, and should only be applied if your application has no other ways of working around the problem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ceb965987308bf617c0ec322f5c7557c4ca613d" translate="yes" xml:space="preserve">
          <source>A const pointer to the model is returned because calls to non-const functions of the model might invalidate the model index and possibly crash your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2d371833dad13e2036a8f14eb1db350d959f80a" translate="yes" xml:space="preserve">
          <source>A constant property providing an invalid index for selection. This index is set to the &lt;a href=&quot;qml-qtdatavisualization-scatter3dseries#selectedItem-prop&quot;&gt;selectedItem&lt;/a&gt; property to clear the selection from this series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04147bde11823f127ca5d5aa3b2cab189f09dd4e" translate="yes" xml:space="preserve">
          <source>A constant property providing an invalid point for selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c307b93e6abe6756eaac5e4aac2045553faebbfb" translate="yes" xml:space="preserve">
          <source>A constant property providing an invalid position for selection. This position is set to the &lt;a href=&quot;qml-qtdatavisualization-bar3dseries#selectedBar-prop&quot;&gt;selectedBar&lt;/a&gt; property to clear the selection from this series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddbedf210eaeb96bcba7e26855d33eba1351e08d" translate="yes" xml:space="preserve">
          <source>A constant property providing an invalid selection position. This position is set to the &lt;a href=&quot;qml-qtdatavisualization-surface3dseries#selectedPoint-prop&quot;&gt;selectedPoint&lt;/a&gt; property to clear the selection from this series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae348a04894fab380002fe435b429835d75ef45" translate="yes" xml:space="preserve">
          <source>A constant value which does not depend on other properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5c5bf9c16ecf17dcd562ba7b2f208ff1d1125ea" translate="yes" xml:space="preserve">
          <source>A constructor for &lt;a href=&quot;qxmlstreamattributes&quot;&gt;QXmlStreamAttributes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6686f0acf80e639b125d2e9f291f3edcad77cb28" translate="yes" xml:space="preserve">
          <source>A context can be made current against a given surface by calling &lt;a href=&quot;qopenglcontext#makeCurrent&quot;&gt;makeCurrent&lt;/a&gt;(). When OpenGL rendering is done, call &lt;a href=&quot;qopenglcontext#swapBuffers&quot;&gt;swapBuffers&lt;/a&gt;() to swap the front and back buffers of the surface, so that the newly rendered content becomes visible. To be able to support certain platforms, &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; requires that you call &lt;a href=&quot;qopenglcontext#makeCurrent&quot;&gt;makeCurrent&lt;/a&gt;() again before starting rendering a new frame, after calling &lt;a href=&quot;qopenglcontext#swapBuffers&quot;&gt;swapBuffers&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f757ccec389d16fbf58f929eab9c112e27f0cb9c" translate="yes" xml:space="preserve">
          <source>A context menu click/tap (e.g. right-button or tap-and-hold)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7067809906b4b97ae9c3eb0bc7e3c8ac9e665f0" translate="yes" xml:space="preserve">
          <source>A continuous gesture has started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="550b66bd9de26070a9341776afc97a7803ad8746" translate="yes" xml:space="preserve">
          <source>A contrived example with TCP/IP is shown below. A more realistic example would use an SSL connection, which would require configuration of certificates, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="174195b45132484462fd4bb5c31bf1a628abfd8d" translate="yes" xml:space="preserve">
          <source>A control element performs an action or displays information to the user. Examples of control elements are push buttons, check boxes, and header sections in tables and tree views. Control elements are not necessarily complete widgets such as push buttons, but can also be widget parts such as tab bar tabs and scroll bar sliders. They differ from primitive elements in that they are not passive, but fill a function in the interaction with the user. Controls that consist of several elements often use the style to calculate the bounding rectangles of the elements. The available sub elements are defined by the &lt;a href=&quot;qstyle#SubElement-enum&quot;&gt;SubElement&lt;/a&gt; enum. This enum is only used for calculating bounding rectangles; sub elements are not graphical elements to be drawn like primitive, control, and complex elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a88cebe45ea6c7b5d963ca7ba2f3a0e62e6020a6" translate="yes" xml:space="preserve">
          <source>A control that allows the user to select one of multiple stacked items</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c640e23e6d2a1c71c4660ebad7927694d7da0c1" translate="yes" xml:space="preserve">
          <source>A control that allows the user to select one of multiple stacked items. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7096300e782b53bbc69e42593943d5f24e821974" translate="yes" xml:space="preserve">
          <source>A control that can have several spinnable wheels, each with items that can be selected</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89ed0eac2acbb00488857ec712b84e58e2cf49f6" translate="yes" xml:space="preserve">
          <source>A control that can have several spinnable wheels, each with items that can be selected. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dccebd0cf42ca64850a406aab8004ebaacadb16" translate="yes" xml:space="preserve">
          <source>A controller class for animations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="888825d62a271f19b33ec83b21ccf2c894afddcd" translate="yes" xml:space="preserve">
          <source>A controller class for animations. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="271dbb91ef6f7afafbab3dfa655f0d8a802b9910" translate="yes" xml:space="preserve">
          <source>A controller class for animations. &lt;a href=&quot;qt3danimation-qanimationcontroller#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0db6e2572dd2d8e616c7dbc3e2bd7480122a8ad9" translate="yes" xml:space="preserve">
          <source>A controller in the central role is created via the &lt;a href=&quot;qlowenergycontroller#createCentral&quot;&gt;createCentral&lt;/a&gt;() factory method. Such an object essentially acts as a placeholder towards a remote Low Energy peripheral device, enabling features such as service discovery and state tracking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e450e7ce8342e392da33ca352e3ffa44cca4c52" translate="yes" xml:space="preserve">
          <source>A controller in the peripheral role is created via the &lt;a href=&quot;qlowenergycontroller#createPeripheral&quot;&gt;createPeripheral&lt;/a&gt;() factory method. Such an object acts as a peripheral device itself, enabling features such as advertising services and allowing clients to get notified about changes to characteristic values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dadf459cae8fcde1e1aec042714997826aa06e4b" translate="yes" xml:space="preserve">
          <source>A controller type for animations. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d883e0ec508299f33715af94b7570d11986a116f" translate="yes" xml:space="preserve">
          <source>A controller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9150a8515d77f278df7119614512953d0431a525" translate="yes" xml:space="preserve">
          <source>A convenience function for setting all minimum (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb63d18f18bea8e120a7f9912ff918d371cab3b0" translate="yes" xml:space="preserve">
          <source>A convenience function for setting all three slice indices (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b90dcfa2acd913ee8e814490d441ac6f9b912bdc" translate="yes" xml:space="preserve">
          <source>A convenience function for setting all three texture dimensions (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ade15656a6a773159d8ca0ddc4c69c9a39661cde" translate="yes" xml:space="preserve">
          <source>A convenience function to construct a mesh rotation quaternion from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72961375931bd22fb8e6e58da31b6c90392d5d8a" translate="yes" xml:space="preserve">
          <source>A convenience function to construct the rotation quaternion from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00b6c3f8cb4083cc0144897502d9e99374246a56" translate="yes" xml:space="preserve">
          <source>A convenience macro that disables the use of copy constructors, assignment operators, move constructors and move assignment operators for the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f975e597f9ad8276a0d82490644ee6063913fcd" translate="yes" xml:space="preserve">
          <source>A convenience method to request single update from the location source. If there is no source available, this method has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5153f541a44793f0299733330e2bf80a9b123b9a" translate="yes" xml:space="preserve">
          <source>A convenience operator for appending the real value specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d090b7946a04bab76198dedb8ce37a3781fa8fe2" translate="yes" xml:space="preserve">
          <source>A convenience property for defining the series rotation angle in degrees.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f481eab58a036321161e870e646b5b64e3f71ee3" translate="yes" xml:space="preserve">
          <source>A convenience type for showing a specified video</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="081061020ccd44f63c934869e65c79754c0cdf54" translate="yes" xml:space="preserve">
          <source>A convenience type for showing a specified video. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a86779d2ba8729614baec4be3ee33473865e1ce" translate="yes" xml:space="preserve">
          <source>A cookie can also have an expiration date, indicating its validity. If the expiration date is not present, the cookie is considered a &quot;session cookie&quot; and should be discarded when the application exits (or when its concept of session is over).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a8ea14cb5ab1e12158995e3d6e6e00d3913ab26" translate="yes" xml:space="preserve">
          <source>A cookie is only valid if it has a name. However, the value is opaque to the application and being empty may have significance to the remote server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f07a9e4f081ff195d3f2ec52b6001b5cc5c20fa" translate="yes" xml:space="preserve">
          <source>A cookie is set by a remote server when it replies to a request and it expects the same cookie to be sent back when further requests are sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5312df2277639f111ffc894a0e5ae292b707e0e3" translate="yes" xml:space="preserve">
          <source>A cookie that is &quot;HttpOnly&quot; is only set and retrieved by the network requests and replies; i.e., the HTTP protocol. It is not accessible from scripts running on browsers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdc24cdfdbee2a8d171f7a444355feb725674739" translate="yes" xml:space="preserve">
          <source>A coordinate with valid latitude and longitude values, and also an altitude value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59d454b446d5959de763db37ffb26b8e518fab3e" translate="yes" xml:space="preserve">
          <source>A coordinate with valid latitude and longitude values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b85cc44a423c19420a3cafefb6b40bb6900fe055" translate="yes" xml:space="preserve">
          <source>A copy of each argument is made at the point where QtConcurrent::run() is called, and these values are passed to the thread when it begins executing the function. Changes made to the arguments after calling QtConcurrent::run() are</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f333c23265e46bc1290102221b4c249ab6ea55" translate="yes" xml:space="preserve">
          <source>A copy sequence is far simpler as the actual sequence is stored in the JavaScript object's resource data, so no read/modify/write cycle occurs (instead, the resource data is modified directly).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e90a4d03321bc7f6812eade11bf13cb6ecc1559" translate="yes" xml:space="preserve">
          <source>A cordless phone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7371fb5be34a470b6dd674accff5894f81e09e39" translate="yes" xml:space="preserve">
          <source>A create operation failed because the requested size was invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd2bf41b822d1b6d98b6678c7d13c5efc3b0785" translate="yes" xml:space="preserve">
          <source>A critical warning icon is shown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e2ddc582f0d64767c0de53b37b085609da8c149" translate="yes" xml:space="preserve">
          <source>A crossfade time of zero or negative will result in gapless playback (suitable for some continuous media).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15d1a7d83ad7ae62c9504d4db708e79b471266e5" translate="yes" xml:space="preserve">
          <source>A crosshair cursor, typically used to help the user accurately select a point on the screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19a341962c78363e6fdceeda1253c581bd7a9396" translate="yes" xml:space="preserve">
          <source>A cubemap texture. Equivalent to GL_TEXTURE_CUBE_MAP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91fe7f18640f7154913e2dd19f2d8b3dc4470342" translate="yes" xml:space="preserve">
          <source>A cuboid mesh</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9f7a0497da340afd38b9c86ae28db857fcab8ba" translate="yes" xml:space="preserve">
          <source>A cuboid mesh. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="415e46bba93d384e6be5665e5910044a4420b856" translate="yes" xml:space="preserve">
          <source>A cuboid mesh. &lt;a href=&quot;qt3dextras-qcuboidmesh#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a529d8acfc010758b69c69c0541e8da35d21d1bd" translate="yes" xml:space="preserve">
          <source>A cursor representing a closed hand, typically used to indicate that a dragging operation is in progress that involves scrolling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76bd8ce940cab7051178cae545502eddd49eeb14" translate="yes" xml:space="preserve">
          <source>A cursor representing an open hand, typically used to indicate that the area under the cursor is the visible part of a canvas that the user can click and drag in order to scroll around.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc49ace4f4355783136e6b7a4a01ac544315725f" translate="yes" xml:space="preserve">
          <source>A cursor that contains a selection in a &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8615287e549b58cb39e9165814ca1a98b337983" translate="yes" xml:space="preserve">
          <source>A cursor that is usually used when dragging an item to copy it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf6dbf2ae06e6b3583ce1eb08802237a1e711ac7" translate="yes" xml:space="preserve">
          <source>A cursor that is usually used when dragging an item to make a link to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c96921121e41544b8bbad698d0210824bc0c659" translate="yes" xml:space="preserve">
          <source>A cursor that is usually used when dragging an item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca38e73aec435ee7935cce512844702cacb1845c" translate="yes" xml:space="preserve">
          <source>A cursor used for elements that are used to diagonally resize top-level windows at their top-left and bottom-right corners.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec3b13441f6010102d2c816075724dabd9cd8615" translate="yes" xml:space="preserve">
          <source>A cursor used for elements that are used to diagonally resize top-level windows at their top-right and bottom-left corners.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3138756000c6d57cd2531899b2595c1693435c67" translate="yes" xml:space="preserve">
          <source>A cursor used for elements that are used to horizontally resize top-level windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e6d874ccf8e4cecb90dcf9970dc32db2d196650" translate="yes" xml:space="preserve">
          <source>A cursor used for elements that are used to resize top-level windows in any direction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39016cdf338cdc7491c03fc24accc280acd4e169" translate="yes" xml:space="preserve">
          <source>A cursor used for elements that are used to vertically resize top-level windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="737859dffe28e5991cd53fc4d104a1323a95aa6d" translate="yes" xml:space="preserve">
          <source>A cursor used for horizontal splitters, indicating that a handle can be dragged vertically to adjust the use of available space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a3a696e98e843f9a1f755a0fed2b842b34a825" translate="yes" xml:space="preserve">
          <source>A cursor used for vertical splitters, indicating that a handle can be dragged horizontally to adjust the use of available space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3964d06fa2ae2bd5a10018f8b125884b05318466" translate="yes" xml:space="preserve">
          <source>A curve. See also &lt;a href=&quot;qpainterpath#cubicTo&quot;&gt;cubicTo&lt;/a&gt;() and &lt;a href=&quot;qpainterpath#quadTo&quot;&gt;quadTo&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d55f4711ece4938e7fc0b1445e3a91a5998d67" translate="yes" xml:space="preserve">
          <source>A custom background for the window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="361a956d082e9be77596e6819f58df5a742661a4" translate="yes" xml:space="preserve">
          <source>A custom error has been raised with &lt;a href=&quot;qxmlstreamreader#raiseError&quot;&gt;raiseError&lt;/a&gt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d8e18f783be6004bc3b4cd0b601704c6b72b412" translate="yes" xml:space="preserve">
          <source>A custom item has a custom mesh, position, scaling, rotation, and an optional texture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3eb888dfc28f634f9104cfd39c805cae70add77" translate="yes" xml:space="preserve">
          <source>A custom item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f66059e1217c23d79fd8dfe4a2345259c4758048" translate="yes" xml:space="preserve">
          <source>A custom jump list category.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6159dd945586e27ad312321a29f04ee5fb15f49" translate="yes" xml:space="preserve">
          <source>A custom mesh loader</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b5daf3ebd629ec66c932d75c66bc2fbb3f5e48e" translate="yes" xml:space="preserve">
          <source>A custom mesh loader. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c4d983b70e4cb400fadb15ffea27fc961b52a0" translate="yes" xml:space="preserve">
          <source>A custom mesh loader. &lt;a href=&quot;qt3drender-qmesh#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fd38d592b5804c469f87a60d9080b6db6bc3469" translate="yes" xml:space="preserve">
          <source>A custom pattern defined using &lt;a href=&quot;qpainterpathstroker#setDashPattern&quot;&gt;QPainterPathStroker::setDashPattern&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e6fc6fd680734c5c6c8a22e9864b07b1b1fd9a7" translate="yes" xml:space="preserve">
          <source>A custom refresh token can be used to refresh the access token via this method and then the access token can be refreshed via &lt;a href=&quot;qoauth2authorizationcodeflow#refreshAccessToken&quot;&gt;QOAuth2AuthorizationCodeFlow::refreshAccessToken&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf21e7861dd76507257ca7478c9f01a14f5fe802" translate="yes" xml:space="preserve">
          <source>A custom type represented by a structure, like &lt;a href=&quot;qdatetime&quot;&gt;QDateTime&lt;/a&gt;, &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b50c283bd8106176c243b0ff0e52f774bbb8bd6" translate="yes" xml:space="preserve">
          <source>A cylindrical mesh</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f8ce629aa203abeef208baeea6cfd55ca6723fc" translate="yes" xml:space="preserve">
          <source>A cylindrical mesh. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cae9687a3c7b29e14564a49ab6ef61490696480" translate="yes" xml:space="preserve">
          <source>A cylindrical mesh. &lt;a href=&quot;qt3dextras-qcylindermesh#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="859aec9e4824babd0d3d9cdf5935e6f881e1b10e" translate="yes" xml:space="preserve">
          <source>A dark theme with white as the base color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0572d98c1ba561a20857e54de63dc063bcdbf7f" translate="yes" xml:space="preserve">
          <source>A dark theme with yellow as the base color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a28aa859236f74709b87b4ff4381c6da00f84d" translate="yes" xml:space="preserve">
          <source>A data display.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ca5bea3158a3c798cf47bd98b0ca818eada3b31" translate="yes" xml:space="preserve">
          <source>A data model can only belong to a single state machine and a state machine can only have one data model. This relation needs to be set up before the state machine is started. Setting this property on a data model will automatically set the corresponding &lt;code&gt;dataModel&lt;/code&gt; property on the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="415212b412e240efce1bd4685fc0459074ae7db8" translate="yes" xml:space="preserve">
          <source>A data model that represents the history of a web engine page. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a893afa76f7fae5a09a05609df56c1ac8ba2fd1" translate="yes" xml:space="preserve">
          <source>A data stream cooperates closely with a &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt;. A &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; represents an input/output medium one can read data from and write data to. The &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; class is an example of an I/O device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="173f046d4e0f775acbf39fb4dec138b6c0cc3c27" translate="yes" xml:space="preserve">
          <source>A data stream is a binary stream of encoded information which is 100% independent of the host computer's operating system, CPU or byte order. For example, a data stream that is written by a PC under Windows can be read by a Sun SPARC running Solaris.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb6f476ff415e142ed35fd2d76cc512ab48fac5e" translate="yes" xml:space="preserve">
          <source>A data structure to store the items handled by the layout. Each item is a &lt;a href=&quot;qlayoutitem&quot;&gt;QLayoutItem&lt;/a&gt;. We will use a &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; in this example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b820874f08f41a056126b85a2c7ff72a05ea88b" translate="yes" xml:space="preserve">
          <source>A date and time string, formatted according to RFC 3339, as refined by RFC 4287. It is the same format as &lt;a href=&quot;qt#DateFormat-enum&quot;&gt;Qt::ISODate&lt;/a&gt; and &lt;a href=&quot;qt#DateFormat-enum&quot;&gt;Qt::ISODateWithMs&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="166fdd3526875b6842e9b4f61a16a36500d294c1" translate="yes" xml:space="preserve">
          <source>A decimal fraction, encoded as an array of two integers: the first is the exponent of the power of 10, the second the integral mantissa. The value 273.15 would be encoded as array &lt;code&gt;[-2, 27315]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a402dd4cf3dcb0e52b48c9fd696aa765815512d" translate="yes" xml:space="preserve">
          <source>A decimal integer or a real number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f04f47087281d76c3ede9f5e2c27745e318682" translate="yes" xml:space="preserve">
          <source>A default &lt;a href=&quot;qsplitter&quot;&gt;QSplitter&lt;/a&gt; lays out its children horizontally (side by side); you can use &lt;a href=&quot;qsplitter#orientation-prop&quot;&gt;setOrientation&lt;/a&gt;(&lt;a href=&quot;qt#Orientation-enum&quot;&gt;Qt::Vertical&lt;/a&gt;) to lay its children out vertically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd118f7c2089340af51953d19aec89b6cc3babe0" translate="yes" xml:space="preserve">
          <source>A default UTC time zone backend is provided which is always guaranteed to be available. This provides a set of generic Offset From UTC time zones in the range UTC-14:00 to UTC+14:00. These time zones can be created using either the standard ISO format names &quot;UTC+00:00&quot; as listed by &lt;a href=&quot;qtimezone#availableTimeZoneIds&quot;&gt;availableTimeZoneIds&lt;/a&gt;(), or using the number of offset seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="123b60e6a4cdc0c05dab7afc9291dbce35e7c5b5" translate="yes" xml:space="preserve">
          <source>A default constructed &lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; will not filter out files based on their permissions, so &lt;a href=&quot;qdir#entryList&quot;&gt;entryList&lt;/a&gt;() and &lt;a href=&quot;qdir#entryInfoList&quot;&gt;entryInfoList&lt;/a&gt;() will return all files that are readable, writable, executable, or any combination of the three. This makes the default easy to write, and at the same time useful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4a26ffa61780da1329c6a6b339040c9801b7355" translate="yes" xml:space="preserve">
          <source>A default constructed &lt;a href=&quot;qgeocircle&quot;&gt;QGeoCircle&lt;/a&gt; uses an invalid &lt;a href=&quot;qgeocoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; as center.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcbdf6b7612ba7c25fb812530617debe63de26ad" translate="yes" xml:space="preserve">
          <source>A default constructed &lt;a href=&quot;qxmlitem&quot;&gt;QXmlItem&lt;/a&gt; instance is neither a node nor an atomic value. It is considered null, in which case &lt;a href=&quot;qxmlitem#isNull&quot;&gt;isNull&lt;/a&gt;() returns true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3059c3806d99790c47732396589ce5ad4989f2b7" translate="yes" xml:space="preserve">
          <source>A default constructed node index is said to be null, i.e., &lt;a href=&quot;qxmlnodemodelindex#isNull&quot;&gt;isNull&lt;/a&gt;() returns true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97782874226297b288a6b9ac8e0c03c211439390" translate="yes" xml:space="preserve">
          <source>A default implementation is provided for objects inheriting &lt;a href=&quot;qaccessibleobject&quot;&gt;QAccessibleObject&lt;/a&gt;. This will iterate over all children. If the widget manages its children (e.g. a table) it will be more efficient to write a specialized implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad7d721bb42bb16013c97bfe1d6e2f11b227646d" translate="yes" xml:space="preserve">
          <source>A default position source may be available on some platforms. Call &lt;a href=&quot;qgeopositioninfosource#createDefaultSource&quot;&gt;QGeoPositionInfoSource::createDefaultSource&lt;/a&gt;() to create an instance of the default position source; the method returns 0 if no default source is available for the platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7646e0918ff188765c77b698655b479e9ee573b" translate="yes" xml:space="preserve">
          <source>A default title for the dialog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e22ced6cfa457cd2a534eaf67b816833702404e" translate="yes" xml:space="preserve">
          <source>A delayed binding will not immediately update the target, but rather wait until the event queue has been cleared. This can be used as an optimization, or to prevent intermediary values from being assigned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="783b7fe7dbc7c13828dc4bdd1cd33f0091a1fb88" translate="yes" xml:space="preserve">
          <source>A delegate can be highlighted in order to draw the user's attention towards it. It has no effect on keyboard interaction. For example, you can highlight the current item in a &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; using the following code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="211827e1188fee8d1c961de4de2b20d81aba9d94" translate="yes" xml:space="preserve">
          <source>A delegate checks whether an item is editable before creating an editor. The model must let the delegate know that its items are editable. We do this by returning the correct flags for each item in the model; in this case, we enable all items and make them both selectable and editable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19e4cefb7323d0d00b3f3f19997a8e3e2ccbf0aa" translate="yes" xml:space="preserve">
          <source>A delegate defines how individual data elements should appear as visual items in the view. The models expose a set of data roles and the delegate uses them to construct a visual item. The delegate may also define behaviour such as an operation to invoke when a visual item is clicked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8ff2c28dba40c50430e3064f876e360f5a20301" translate="yes" xml:space="preserve">
          <source>A delegate should specify its size using &lt;a href=&quot;qml-qtquick-item#implicitWidth-prop&quot;&gt;implicitWidth&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-item#implicitHeight-prop&quot;&gt;implicitHeight&lt;/a&gt;. The &lt;a href=&quot;qml-qtquick-tableview&quot;&gt;TableView&lt;/a&gt; lays out the items based on that information. Explicit width or height settings are ignored and overwritten.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f390177672b410d3efaf2d17c91f5cfe9d5cd27" translate="yes" xml:space="preserve">
          <source>A delegate used by &lt;a href=&quot;qml-qtquick-controls-stackview&quot;&gt;StackView&lt;/a&gt; for loading transitions. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e3587063a420d24ce7f15d3bceb849adc8d649" translate="yes" xml:space="preserve">
          <source>A delegate used by StackView for loading transitions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc6d5cb29979cb3942b7327be9ddf68d73edb993" translate="yes" xml:space="preserve">
          <source>A depth buffer is attached to the framebuffer object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb3c14466b52369c2c8b7120df4dc233d4bd397" translate="yes" xml:space="preserve">
          <source>A description of how OAuth 2 works can be found in: &lt;a href=&quot;https://tools.ietf.org/html/rfc6749&quot;&gt;The OAuth 2.0 Authorization Framework&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc3b6d3d442617b76df589ad5af64539303100e5" translate="yes" xml:space="preserve">
          <source>A description of the current error condition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87e6f6f15195280beb638336d8c44e0db915f204" translate="yes" xml:space="preserve">
          <source>A description of the item for accessibility purposes. (&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b770d7ef0e79a369ec14b92282a11516ce555a92" translate="yes" xml:space="preserve">
          <source>A description of the media.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f45b08f140a58c8e57bf4818962a05c556935652" translate="yes" xml:space="preserve">
          <source>A description of the widget's properties, such as its object name, size hint, and other standard &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b9bd1cf600dbd119647983b08ef842365dbab53" translate="yes" xml:space="preserve">
          <source>A description of what the custom compiler is doing. This is only used in some backends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01d91d2328c4015ae45c81d891d246f3018af286" translate="yes" xml:space="preserve">
          <source>A descriptor can only be read if the service is in the &lt;a href=&quot;qlowenergyservice#ServiceState-enum&quot;&gt;ServiceDiscovered&lt;/a&gt; state and the descriptor belongs to the service. If one of these conditions is not true the &lt;a href=&quot;qlowenergyservice#ServiceError-enum&quot;&gt;QLowEnergyService::OperationError&lt;/a&gt; is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="911c408f9f884ed9bc759d41056a6dfa7c0d57aa" translate="yes" xml:space="preserve">
          <source>A descriptor can only be written if this service is in the &lt;a href=&quot;qlowenergyservice#ServiceState-enum&quot;&gt;ServiceDiscovered&lt;/a&gt; state, belongs to the service. If one of these conditions is not true the &lt;a href=&quot;qlowenergyservice#ServiceError-enum&quot;&gt;QLowEnergyService::OperationError&lt;/a&gt; is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be58299b0c7a65e15411940974b55a8d52d22228" translate="yes" xml:space="preserve">
          <source>A desktop computer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c11ca2df1d3c8addcf4c34e233d0173e6f828c3" translate="yes" xml:space="preserve">
          <source>A device capable of displaying images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="038c8495b615cda39e40633e9fc14aa5ae0655a8" translate="yes" xml:space="preserve">
          <source>A device capable of playback or capture of audio and/or video.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e785e39be6c1c44e639e2f720528212344a1f9c7" translate="yes" xml:space="preserve">
          <source>A device identification object is considered valid if &lt;a href=&quot;qmodbusdeviceidentification#ObjectId-enum&quot;&gt;ProductNameObjectId&lt;/a&gt;, &lt;a href=&quot;qmodbusdeviceidentification#ObjectId-enum&quot;&gt;ProductCodeObjectId&lt;/a&gt; and &lt;a href=&quot;qmodbusdeviceidentification#ObjectId-enum&quot;&gt;MajorMinorRevisionObjectId&lt;/a&gt; are set to a non-empty value. Still the object can contain valid object id's and associated data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5459ceb8fd4b7d5f5bfa3e8168ea8620f83bf673" translate="yes" xml:space="preserve">
          <source>A device that does not fit into any of the other device classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e70f9da9d496533dfc4ef9d0604de22f6e3266c9" translate="yes" xml:space="preserve">
          <source>A device that provides ISDN access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdced6489fe0c4f2963b83ea2a889d0865c856ad" translate="yes" xml:space="preserve">
          <source>A device that provides access to a local area network (deprecated since Qt 5.13 and replaced by QBluetoothDeviceInfo::NetworkDevice).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c03e9d25e1bc2d82557a2b52a8f9c2149d1acee" translate="yes" xml:space="preserve">
          <source>A device that provides access to a local area network (since Qt 5.13).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48b53a8e0b3ae446c9ea7e8314d7978726857cd5" translate="yes" xml:space="preserve">
          <source>A diagonal linear gradient from black at (100, 100) to white at (200, 200) could be specified like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="462971733f4393a794a5b4026a2f714fd6a7b568" translate="yes" xml:space="preserve">
          <source>A dial, like &lt;a href=&quot;qdial&quot;&gt;QDial&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63209bbec29f27e3e675f890217297644dd37844" translate="yes" xml:space="preserve">
          <source>A dialog (&lt;a href=&quot;qdialog&quot;&gt;QDialog&lt;/a&gt;) has been hidden</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7dfef8a2cffd5531572f6fadbfcfa471166494f" translate="yes" xml:space="preserve">
          <source>A dialog (&lt;a href=&quot;qdialog&quot;&gt;QDialog&lt;/a&gt;) has been set visible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4910898de8eae3fa7d4c34a33e798bc3dff96472" translate="yes" xml:space="preserve">
          <source>A dialog box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d961b0a0062602afba83415bc914c68f958aaf74" translate="yes" xml:space="preserve">
          <source>A dialog is a popup mostly used for short-term tasks and brief communications with the user. Similarly to &lt;a href=&quot;qml-qtquick-controls2-applicationwindow&quot;&gt;ApplicationWindow&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls2-page&quot;&gt;Page&lt;/a&gt;, Dialog is organized into three sections: &lt;a href=&quot;qml-qtquick-controls2-dialog#header-prop&quot;&gt;header&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-popup#contentItem-prop&quot;&gt;contentItem&lt;/a&gt;, and &lt;a href=&quot;qml-qtquick-controls2-dialog#footer-prop&quot;&gt;footer&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77e25ae5d17c745f07d7f10e12937fe33e5a6f11" translate="yes" xml:space="preserve">
          <source>A dialog is always a top-level widget, but if it has a parent, its default location is centered on top of the parent. It will also share the parent's taskbar entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d77da9abe95c11a466d360d394bf40088464ef6" translate="yes" xml:space="preserve">
          <source>A dialog that lets the user choose a color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d9c644bd1db0170ada147f77a5403bd82e448d" translate="yes" xml:space="preserve">
          <source>A dialog window is a top-level window mostly used for short-term tasks and brief communications with the user. QDialogs may be modal or modeless. QDialogs can provide a &lt;a href=&quot;qdialog#return&quot;&gt;return value&lt;/a&gt;, and they can have &lt;a href=&quot;qdialog#default&quot;&gt;default buttons&lt;/a&gt;. QDialogs can also have a &lt;a href=&quot;qsizegrip&quot;&gt;QSizeGrip&lt;/a&gt; in their lower-right corner, using &lt;a href=&quot;qdialog#sizeGripEnabled-prop&quot;&gt;setSizeGripEnabled&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="596e10e7035fe80b7ef469482999e232dd943b0d" translate="yes" xml:space="preserve">
          <source>A dialog's</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce1ea5de290012f0b9373fe062a6abd48b64a35" translate="yes" xml:space="preserve">
          <source>A digitizer tablet peripheral.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43702c646e3339216c1012c55201e9087f2f8c6d" translate="yes" xml:space="preserve">
          <source>A directional light</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3752c9f633175c7016807f80c87deb1d306329a7" translate="yes" xml:space="preserve">
          <source>A directory listing &lt;code&gt;qmldir&lt;/code&gt; file distinctly different from a &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtqml-modules-qmldir.html#&quot;&gt;module definition qmldir file&lt;/a&gt;. A directory listing &lt;code&gt;qmldir&lt;/code&gt; file allows a group of QML documents to be quickly and easily shared, but it does not define a type namespace into which the QML object types defined by the documents are registered, nor does it support versioning of those QML object types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7956a6667e3495dab5f25cadde8b938788ad0577" translate="yes" xml:space="preserve">
          <source>A directory model that displays the contents of a default directory is usually constructed with a parent object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130ac1d2c7d19f571977f57b221b9c3f09b0835b" translate="yes" xml:space="preserve">
          <source>A directory of QML files can also be imported from a remote location if the directory contains a directory listing &lt;code&gt;qmldir&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc70385bc353fc5d63c8591f376e16bcc9d6d55a" translate="yes" xml:space="preserve">
          <source>A directory which contains QML documents may also be imported directly in a QML document. This provides a simple way for QML types to be segmented into reusable groupings: directories on the filesystem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a44005587e353e0e5d7aa49e5f51a71a8006d3db" translate="yes" xml:space="preserve">
          <source>A directory's path can be obtained with the &lt;a href=&quot;qdir#path&quot;&gt;path&lt;/a&gt;() function, and a new path set with the &lt;a href=&quot;qdir#setPath&quot;&gt;setPath&lt;/a&gt;() function. The absolute path to a directory is found by calling &lt;a href=&quot;qdir#absolutePath&quot;&gt;absolutePath&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef53cb7b5c07fa3ef814b6a86cb14264e7b30474" translate="yes" xml:space="preserve">
          <source>A disabled button does not react to user interaction, and is also visually disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a6aab5f0d25e887666c2974f6673f30d19c2c7b" translate="yes" xml:space="preserve">
          <source>A discovered configuration can be immediately used to create a new &lt;a href=&quot;qnetworksession&quot;&gt;QNetworkSession&lt;/a&gt;. An example of a discovered configuration could be a WLAN which is within in range. If the device moves out of range the discovered flag is dropped. A second example is a GPRS configuration which generally remains discovered for as long as the device has network coverage. A configuration that has this state is also in state QNetworkConfiguration::Defined. If the configuration is a service network this flag is set if at least one of the underlying access points configurations has the Discovered state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6eba3d1ca703c2b23bd8955c5b79b3386a29309" translate="yes" xml:space="preserve">
          <source>A disk-based &lt;a href=&quot;qwebengineprofile&quot;&gt;QWebEngineProfile&lt;/a&gt; should be destroyed on or before application exit, otherwise the cache and persistent data may not be fully flushed to disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f86a369104124a426608bdfdb5a3906e5cbcc5d" translate="yes" xml:space="preserve">
          <source>A document can also be created from a stored binary representation using &lt;a href=&quot;qjsondocument#fromBinaryData&quot;&gt;fromBinaryData&lt;/a&gt;() or &lt;a href=&quot;qjsondocument#fromRawData&quot;&gt;fromRawData&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4058a387ea0417a8b2515a23fa9b58fb32f57d84" translate="yes" xml:space="preserve">
          <source>A document can be queried as to whether it contains an array or an object using &lt;a href=&quot;qjsondocument#isArray&quot;&gt;isArray&lt;/a&gt;() and &lt;a href=&quot;qjsondocument#isObject&quot;&gt;isObject&lt;/a&gt;(). The array or object contained in the document can be retrieved using &lt;a href=&quot;qjsondocument#array&quot;&gt;array&lt;/a&gt;() or &lt;a href=&quot;qjsondocument#object&quot;&gt;object&lt;/a&gt;() and then read or manipulated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3643cf0a6fbf92fd68114378ca3dd6569c77e42" translate="yes" xml:space="preserve">
          <source>A document has been loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="586b1cf508ede8a3cf1e363e0f4006e14c30c226" translate="yes" xml:space="preserve">
          <source>A document is composed of a list of blocks, represented by &lt;a href=&quot;qtextblock&quot;&gt;QTextBlock&lt;/a&gt; objects. Each block can contain an item of some kind, such as a paragraph of text, a table, a list, or an image. Every block has an associated &lt;a href=&quot;qtextblockformat&quot;&gt;QTextBlockFormat&lt;/a&gt; that specifies its characteristics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fccfd7b7fbb58f62ec2b039eececf288cb0bf48a" translate="yes" xml:space="preserve">
          <source>A document load has been stopped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56dc0cf14fe3f057991fc7318f26216134ebfc41" translate="yes" xml:space="preserve">
          <source>A document must import the necessary modules or type namespaces to enable the engine to load the QML object types referenced within the document. By default, a document can access any QML object types that have been defined through &lt;code&gt;.qml&lt;/code&gt; files in the same directory; if a document needs to refer to any other object types, it must import the type namespace into which those types have been registered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3684b2f6bdcfb171a4cb8605d7cacbeccde06b3d" translate="yes" xml:space="preserve">
          <source>A document reload has been initiated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d39f237606180dcacdcddc487ba677dc9e78728b" translate="yes" xml:space="preserve">
          <source>A document, for example in an office application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="719c3191978c542586323560cc4b98af61654ab7" translate="yes" xml:space="preserve">
          <source>A double. Use &lt;a href=&quot;qjsonvalue#toDouble&quot;&gt;toDouble&lt;/a&gt;() to convert to a double.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="452122a5901864a734caf434fa0d51ea906a895e" translate="yes" xml:space="preserve">
          <source>A drag and drop operation is about to be initiated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80f059357582f2d5e3fc6b9f6f419fa82fff63c2" translate="yes" xml:space="preserve">
          <source>A drag and drop operation is about to finished.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f5df08e8427ae0856a262b8557092bc7110ee6a" translate="yes" xml:space="preserve">
          <source>A drag and drop operation is completed (&lt;a href=&quot;qdropevent&quot;&gt;QDropEvent&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3633f117387d3f1ecad1d9df2694af7796c4b50" translate="yes" xml:space="preserve">
          <source>A drag and drop operation is completed over a scene (&lt;a href=&quot;qgraphicsscenedragdropevent&quot;&gt;QGraphicsSceneDragDropEvent&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7234ff6141ebcd9bced405f3ed69947ba542beed" translate="yes" xml:space="preserve">
          <source>A drag and drop operation is in progress (&lt;a href=&quot;qdragmoveevent&quot;&gt;QDragMoveEvent&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a35762bae7861b8be9dfc203b364abe731ea736c" translate="yes" xml:space="preserve">
          <source>A drag and drop operation is in progress over a scene (&lt;a href=&quot;qgraphicsscenedragdropevent&quot;&gt;QGraphicsSceneDragDropEvent&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6afb115754fae798d747965b7793178a8daaac4a" translate="yes" xml:space="preserve">
          <source>A drag can also be started manually using &lt;a href=&quot;qml-qtquick-drag#startDrag-method&quot;&gt;startDrag&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e5fe1bd087f214ecb9ce195bca225ef616e5153" translate="yes" xml:space="preserve">
          <source>A drag can be terminated either by canceling it with Drag.&lt;a href=&quot;qml-qtquick-drag#cancel-method&quot;&gt;cancel()&lt;/a&gt; or setting Drag.active to false, or it can be terminated with a drop event by calling Drag.&lt;a href=&quot;qml-qtquick-drag#drop-method&quot;&gt;drop()&lt;/a&gt;. If the drop event is accepted, Drag.&lt;a href=&quot;qml-qtquick-drag#drop-method&quot;&gt;drop()&lt;/a&gt; will return the &lt;a href=&quot;qml-qtquick-drag#supportedActions-attached-prop&quot;&gt;drop action&lt;/a&gt; chosen by the recipient of the event, otherwise it will return Qt.IgnoreAction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d0b5a4dcb8cc40d7fcfc535e194677d15a8335e" translate="yes" xml:space="preserve">
          <source>A drag will be applied to moving objects which is this factor of their current velocity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2c0fe105220aa11fcea77eb02dcdcc7d36963dd" translate="yes" xml:space="preserve">
          <source>A drop shadow effect renders the source with a drop shadow. The color of the drop shadow can be modified using the &lt;a href=&quot;qgraphicsdropshadoweffect#color-prop&quot;&gt;setColor&lt;/a&gt;() function. The drop shadow offset can be modified using the &lt;a href=&quot;qgraphicsdropshadoweffect#offset-prop&quot;&gt;setOffset&lt;/a&gt;() function and the blur radius of the drop shadow can be changed with the &lt;a href=&quot;qgraphicsdropshadoweffect#blurRadius-prop&quot;&gt;setBlurRadius&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f64821371e32eb5416714d53efaac6870690c3eb" translate="yes" xml:space="preserve">
          <source>A dynamic property was added, changed, or removed from the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ef243974923ff298fd87365d7ff9eec35f8c7b6" translate="yes" xml:space="preserve">
          <source>A dynamic replica is initially created as a &quot;bare&quot; &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; - that is, it has no properties, signals or slots. QtRO returns the API for the object during initialization (after the connection to the source is made), thus the API is added to the object at runtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef995e17ab682fef85f8aa1fa6467ff47d87d3b" translate="yes" xml:space="preserve">
          <source>A dynamically instantiated &lt;a href=&quot;qtremoteobjects-replica#replica&quot;&gt;Replica&lt;/a&gt;. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e116ec3fbd1e295c797bbd0b3cbb93113e41a2b0" translate="yes" xml:space="preserve">
          <source>A factor over 1.0 zooms into the view and a factor between 0.0 and 1.0 zooms out of it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa157da04cd22d812b15ded3478d1566f24b3a48" translate="yes" xml:space="preserve">
          <source>A factor over 1.0 zooms into the view in and a factor between 0.0 and 1.0 zooms out of it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9891129d010caa594227e09832641e11063828d9" translate="yes" xml:space="preserve">
          <source>A factory can also be set in certain frameworks that support multiple connections, such as &lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt;. When set on such object, the factory will be queried for sockets created by that framework only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f248d7813f978630c21f7f17251d7dd0a35ac315" translate="yes" xml:space="preserve">
          <source>A factory can also reimplement the &lt;a href=&quot;qaxfactory#registerClass&quot;&gt;registerClass&lt;/a&gt;() and &lt;a href=&quot;qaxfactory#unregisterClass&quot;&gt;unregisterClass&lt;/a&gt;() functions to set additional flags for an ActiveX control in the registry. To limit the number of methods or properties a widget class exposes from its parent classes reimplement &lt;a href=&quot;qaxfactory#exposeToSuperClass&quot;&gt;exposeToSuperClass&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b02b313e3a239bdcbdef996527f8329458e0b9e" translate="yes" xml:space="preserve">
          <source>A factory for instantiating SCXML state machines from files known at compile time, that is, files specified via the &lt;code&gt;src&lt;/code&gt; attribute in &lt;code&gt;&amp;lt;invoke&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32e2d70ae4a0b50e7b4d675f5866440fe89fb088" translate="yes" xml:space="preserve">
          <source>A factory is a function pointer for a function that takes the same parameters as &lt;a href=&quot;qaccessibleplugin&quot;&gt;QAccessiblePlugin&lt;/a&gt;'s &lt;a href=&quot;qaccessibleplugin#create&quot;&gt;create()&lt;/a&gt; - a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; and a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;. It also works the same way. You install the factory with the &lt;a href=&quot;qaccessible#installFactory&quot;&gt;installFactory()&lt;/a&gt; function. We give an example of how to create a factory for the &lt;code&gt;QAccessibleSlider&lt;/code&gt; interface:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fdfde0eaeb17f4ae6e57ce76aac3fc102fe4836" translate="yes" xml:space="preserve">
          <source>A factory keeps a collection of &lt;a href=&quot;qitemeditorcreatorbase&quot;&gt;QItemEditorCreatorBase&lt;/a&gt; instances, which are specialized editors that produce editors for one particular &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; data type (All Qt models store their data in &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6ec0ebd8c359d9d693f6f85bf0a6ab8d7531493" translate="yes" xml:space="preserve">
          <source>A failure to encrypt or decrypt a datagram, non-fatal, meaning &lt;a href=&quot;qdtls&quot;&gt;QDtls&lt;/a&gt; can continue working after this error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1333466226e1cc46181666c98e31a4888b870491" translate="yes" xml:space="preserve">
          <source>A failure to restore the splitter's layout may result from either invalid or out-of-date data in the supplied byte array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeb80255f7ccb7081693dc7052ccf540f39118dc" translate="yes" xml:space="preserve">
          <source>A failure will cause immediate and abnormal program termination. The reason for the failure will be reported using &lt;code&gt;qFatal()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7bbe9245e4ac4b3a21fbd077127f1969c0dad8b" translate="yes" xml:space="preserve">
          <source>A family and style combination can be checked to see if it is &lt;a href=&quot;qfontdatabase#italic&quot;&gt;italic&lt;/a&gt;() or &lt;a href=&quot;qfontdatabase#bold&quot;&gt;bold&lt;/a&gt;(), and to retrieve its &lt;a href=&quot;qfontdatabase#weight&quot;&gt;weight&lt;/a&gt;(). Similarly we can call &lt;a href=&quot;qfontdatabase#isBitmapScalable&quot;&gt;isBitmapScalable&lt;/a&gt;(), &lt;a href=&quot;qfontdatabase#isSmoothlyScalable&quot;&gt;isSmoothlyScalable&lt;/a&gt;(), &lt;a href=&quot;qfontdatabase#isScalable&quot;&gt;isScalable&lt;/a&gt;() and &lt;a href=&quot;qfontdatabase#isFixedPitch&quot;&gt;isFixedPitch&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23bca1670796fc3aa13b15dd8cdb87ea0234b456" translate="yes" xml:space="preserve">
          <source>A faster, ordered dither.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b69f5c73955366f458c1df0e071826ed202178c4" translate="yes" xml:space="preserve">
          <source>A fatal error occurred during TLS handshake, other than peer verification error or TLS initialization error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fee2760bcd4523b0e5ba8068b083d8e3750ae5d" translate="yes" xml:space="preserve">
          <source>A fatal error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6806dcaaf7001beda372a78bc4bd9f64186f1200" translate="yes" xml:space="preserve">
          <source>A favicon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fe71c8be0ee11857bea3a3e87457fd4c17727c2" translate="yes" xml:space="preserve">
          <source>A feature of &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; that can be enabled at compile-time for debugging purposes is a pointer tracking mechanism. When enabled, &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; registers in a global set all the pointers that it tracks. This allows one to catch mistakes like assigning the same pointer to two &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="083a80fe4f520f6ad7464eec0306737b8bf72a63" translate="yes" xml:space="preserve">
          <source>A field widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c33266775b32e510610cf24ddf29c983fcfb6639" translate="yes" xml:space="preserve">
          <source>A file with a height map image to be visualized. Setting this property replaces current data with height map data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="838c4ea1629653a68fd4e3d4af956d2154d9c234" translate="yes" xml:space="preserve">
          <source>A file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="769c6fb68a2771c950c5a957defb5944a582a4fc" translate="yes" xml:space="preserve">
          <source>A filled ellipse has a size of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9c85c6b5312d826f01bdc756828150991768d78" translate="yes" xml:space="preserve">
          <source>A filled rectangle has a size of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a25b463031ff9ee5ce821877855a7b4c9a1f30" translate="yes" xml:space="preserve">
          <source>A filled rectangle has a size of rect.size(). A stroked rectangle has a size of rect.size() plus the pen width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e40385fab5ffdffee3af2ab491a5d0f223bdcf03" translate="yes" xml:space="preserve">
          <source>A filter section contains the actual documentation. One Qt help project file may contain more than one filter sections. Every filter section consists of four parts, the filter attributes section, the table of contents, the keywords and the files list. In theory all parts are optional but not specifying anything there will result in an empty documentation set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07ddb9785f2d8d110650cec1dba0806757d41581" translate="yes" xml:space="preserve">
          <source>A final state is used to communicate that (part of) a &lt;a href=&quot;qml-qtqml-statemachine-statemachine&quot;&gt;StateMachine&lt;/a&gt; has finished its work. When a final top-level state is entered, the state machine's &lt;a href=&quot;qml-qtqml-statemachine-state#finished-signal&quot;&gt;finished&lt;/a&gt;() signal is emitted. In general, when a final substate (a child of a State) is entered, the parent state's &lt;a href=&quot;qml-qtqml-statemachine-state#finished-signal&quot;&gt;finished&lt;/a&gt;() signal is emitted. &lt;a href=&quot;qml-qtqml-statemachine-finalstate&quot;&gt;FinalState&lt;/a&gt; is part of &lt;a href=&quot;qmlstatemachine#&quot;&gt;The Declarative State Machine Framework&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fcc7fa4a2f761adccd93640dca75de064b76bf0" translate="yes" xml:space="preserve">
          <source>A final state is used to communicate that (part of) a &lt;a href=&quot;qstatemachine&quot;&gt;QStateMachine&lt;/a&gt; has finished its work. When a final top-level state is entered, the state machine's &lt;a href=&quot;qstate#finished&quot;&gt;finished&lt;/a&gt;() signal is emitted. In general, when a final substate (a child of a &lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt;) is entered, the parent state's &lt;a href=&quot;qstate#finished&quot;&gt;finished&lt;/a&gt;() signal is emitted. &lt;a href=&quot;qfinalstate&quot;&gt;QFinalState&lt;/a&gt; is part of &lt;a href=&quot;statemachine-api#&quot;&gt;The State Machine Framework&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb6eeac5e5a8f3f8d36d617a60ae22ce026c063a" translate="yes" xml:space="preserve">
          <source>A flag that can be used to test if the gesture is a user-defined gesture ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7568d2d7b2cf0c36e4896edbbdef7bfb1ca40359" translate="yes" xml:space="preserve">
          <source>A flat button does not draw a background nor a frame - only an icon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78681e0a43e23e22fe08d148b6174b2ddaf66f54" translate="yes" xml:space="preserve">
          <source>A flat button typically does not draw a background unless it is pressed or checked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="798a776182fbba13cd7db3f48321e13d8310a612" translate="yes" xml:space="preserve">
          <source>A flat combo box button does not draw a background unless it is interacted with. In comparison to normal combo boxes, flat combo boxes provide looks that make them stand out less from the rest of the UI. For instance, when placing a combo box into a tool bar, it may be desirable to make the combo box flat so it matches better with the flat looks of tool buttons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d159feebfe7de33876acb1ee60b0af66047fd1aa" translate="yes" xml:space="preserve">
          <source>A floating dock widget is presented to the user as an independent window &quot;on top&quot; of its parent &lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow&lt;/a&gt;, instead of being docked in the &lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c09ba80417cc3c56015a88ea4d4a5065330accb" translate="yes" xml:space="preserve">
          <source>A fluid and modern UI is key for any application's success in today's world, and that's where QML makes so much sense for a designer or developer. Qt offers the most basic UI controls that are necessary to create a fluid and modern-looking UI. It is recommended to browse this list of UI controls before creating your own custom UI control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ef8d05728fe45b7ccce865cdb96f01a71b41fe8" translate="yes" xml:space="preserve">
          <source>A focus proxy can itself have a focus proxy, and so on. In such case, keyboard input will be handled by the outermost focus proxy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1f182d55d0cd76aada25c28ecef747adf856ac3" translate="yes" xml:space="preserve">
          <source>A font dialog is created through one of the static &lt;a href=&quot;qfontdialog#getFont&quot;&gt;getFont&lt;/a&gt;() functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99450e44085d965926762e59f60fede74fa61684" translate="yes" xml:space="preserve">
          <source>A font's capitalization makes the text appear in the selected capitalization mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="550d41a51c88715ed09df3542ecec617fade41d3" translate="yes" xml:space="preserve">
          <source>A font.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bc02ee6df43be9323972ca0e1675507bed06c18" translate="yes" xml:space="preserve">
          <source>A footer in a page (usually in documents).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dae79bf531ed88c6a7046390e0d7ebfade6a1712" translate="yes" xml:space="preserve">
          <source>A foreground color used with the &lt;code&gt;Button&lt;/code&gt; color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="032fa1fbdf26486e707b34df90f742ae79d4decf" translate="yes" xml:space="preserve">
          <source>A foreground color used with the &lt;code&gt;palette.button&lt;/code&gt; color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aa56859779d4560fcf30290b57ad509b76d755d" translate="yes" xml:space="preserve">
          <source>A form loader object, provided by the &lt;a href=&quot;quiloader&quot;&gt;QUiLoader&lt;/a&gt; class, is used to construct the user interface. This user interface can be retrieved from any &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt;. For example, a &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; object can be used to obtain a form stored in a project's resources. The &lt;a href=&quot;quiloader#load&quot;&gt;QUiLoader::load&lt;/a&gt;() function takes the user interface description contained in the file and constructs the form widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9543403f20889927c2f914507ca42993a69fdbd8" translate="yes" xml:space="preserve">
          <source>A format error occurred (e.g. loading a malformed INI file).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8791ef62139eab60e8ee9b6e82f2fe218c2ca5aa" translate="yes" xml:space="preserve">
          <source>A format has a &lt;code&gt;FormatType&lt;/code&gt; which specifies the kinds of text item it can format; e.g. a block of text, a list, a table, etc. A format also has various properties (some specific to particular format types), as described by the Property enum. Every property has a corresponding Property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e03c059f0fe954992a02dc1e1f9650ac5b7c5b3f" translate="yes" xml:space="preserve">
          <source>A format that is used to specify a foreground or background brush/color for the selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca1e32d2bbc3d8f33477c4ea90d60bca4761af5a" translate="yes" xml:space="preserve">
          <source>A format's object index can be set with &lt;a href=&quot;qtextformat#setObjectIndex&quot;&gt;setObjectIndex&lt;/a&gt;(), and retrieved with &lt;a href=&quot;qtextformat#objectIndex&quot;&gt;objectIndex&lt;/a&gt;(). These methods can be used to associate the format with a &lt;a href=&quot;qtextobject&quot;&gt;QTextObject&lt;/a&gt;. It is used to represent lists, frames, and tables inside the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4792668a4812dca3b5167070913a05f0dfcbe4d" translate="yes" xml:space="preserve">
          <source>A format's properties can be set with the &lt;a href=&quot;qtextformat#setProperty&quot;&gt;setProperty&lt;/a&gt;() functions, and retrieved with &lt;a href=&quot;qtextformat#boolProperty&quot;&gt;boolProperty&lt;/a&gt;(), &lt;a href=&quot;qtextformat#intProperty&quot;&gt;intProperty&lt;/a&gt;(), &lt;a href=&quot;qtextformat#doubleProperty&quot;&gt;doubleProperty&lt;/a&gt;(), and &lt;a href=&quot;qtextformat#stringProperty&quot;&gt;stringProperty&lt;/a&gt;() as appropriate. All the property IDs used in the format can be retrieved with allPropertyIds(). One format can be merged into another using &lt;a href=&quot;qtextformat#merge&quot;&gt;merge&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e8b42cc1c89fc86539674a97171abbbe5f0d16b" translate="yes" xml:space="preserve">
          <source>A fourth thread would read key presses and wake the other three threads up every time it receives one, like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="275a7296c359029ffbcc6c57ac203a48f73c39d4" translate="yes" xml:space="preserve">
          <source>A fragment's text and character format can be obtained with the &lt;a href=&quot;qtextfragment#text&quot;&gt;text&lt;/a&gt;() and &lt;a href=&quot;qtextfragment#charFormat&quot;&gt;charFormat&lt;/a&gt;() functions. The &lt;a href=&quot;qtextfragment#length&quot;&gt;length&lt;/a&gt;() function gives the length of the text in the fragment. &lt;a href=&quot;qtextfragment#position&quot;&gt;position&lt;/a&gt;() gives the position in the document of the start of the fragment. To determine whether the fragment contains a particular position within the document, use the &lt;a href=&quot;qtextfragment#contains&quot;&gt;contains&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09310c589da7d0489bc12df35fcf2355928b1aa3" translate="yes" xml:space="preserve">
          <source>A frame also has a format (specified using &lt;a href=&quot;qtextframeformat&quot;&gt;QTextFrameFormat&lt;/a&gt;) which can be set with &lt;a href=&quot;qtextobject#setFormat&quot;&gt;setFormat&lt;/a&gt;() and read with &lt;a href=&quot;qtextobject#format&quot;&gt;format&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="653d48cf6423bf698c76ac2eb1d8e1ebdfc6f312" translate="yes" xml:space="preserve">
          <source>A frame consists of an arbitrary sequence of &lt;a href=&quot;qtextblock&quot;&gt;QTextBlock&lt;/a&gt;s and child &lt;a href=&quot;qtextframe&quot;&gt;QTextFrame&lt;/a&gt;s. This class provides a way to iterate over the child objects of a frame, and read their contents. It does not provide a way to modify the contents of the frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44dbb7048882e2b286d2a60696b6329324c6ebc6" translate="yes" xml:space="preserve">
          <source>A frame widget has three attributes that describe the thickness of the border: &lt;a href=&quot;qframe#lineWidth-prop&quot;&gt;lineWidth&lt;/a&gt;, &lt;a href=&quot;qframe#midLineWidth-prop&quot;&gt;midLineWidth&lt;/a&gt;, and &lt;a href=&quot;qframe#frameWidth-prop&quot;&gt;frameWidth&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="269cbd04a2c62c7a413ab16e0931316090f9c328" translate="yes" xml:space="preserve">
          <source>A framebuffer object has several characteristics:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fdf80901d15a25d819c6eb59a3fefa4372e423f" translate="yes" xml:space="preserve">
          <source>A frequent requirement is to remove whitespace characters from a byte array ('\n', '\t', ' ', etc.). If you want to remove whitespace from both ends of a &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;, use &lt;a href=&quot;qbytearray#trimmed&quot;&gt;trimmed&lt;/a&gt;(). If you want to remove whitespace from both ends and replace multiple consecutive whitespaces with a single space character within the byte array, use &lt;a href=&quot;qbytearray#simplified&quot;&gt;simplified&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa9b6832169c792c4a75cdf4c995902e9785e5b" translate="yes" xml:space="preserve">
          <source>A frequent requirement is to remove whitespace characters from a string ('\n', '\t', ' ', etc.). If you want to remove whitespace from both ends of a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, use the &lt;a href=&quot;qstring#trimmed&quot;&gt;trimmed&lt;/a&gt;() function. If you want to remove whitespace from both ends and replace multiple consecutive whitespaces with a single space character within the string, use &lt;a href=&quot;qstring#simplified&quot;&gt;simplified&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c45361c9d86c988e20175a24d971876817f33ffc" translate="yes" xml:space="preserve">
          <source>A full example would look like this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85961e76e8d990a16000c770a4f5d7d2ac885a54" translate="yes" xml:space="preserve">
          <source>A full pie is 360 degrees, where 0 degrees is at 12 a'clock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a844ed1c2dfa0628dafe4c9a403fce3ebac47c80" translate="yes" xml:space="preserve">
          <source>A fully declarative syntax, achieved by using property aliases, comes at the cost of storing persistent settings whenever the values of aliased properties change. Normal properties can be used to gain more fine-grained control over storing the persistent settings. The following example illustrates how to save a setting on component destruction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58e972d2a9bb1fbe88e106a29893b5b54892e4fa" translate="yes" xml:space="preserve">
          <source>A function for receiving and processing a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="945a21a9ed3cffe041ea89e8af106446112c9682" translate="yes" xml:space="preserve">
          <source>A function which this signature is generated by &lt;a href=&quot;qloggingcategory#Q_DECLARE_LOGGING_CATEGORY&quot;&gt;Q_DECLARE_LOGGING_CATEGORY&lt;/a&gt;, &lt;a href=&quot;qloggingcategory#Q_LOGGING_CATEGORY&quot;&gt;Q_LOGGING_CATEGORY&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39a9f177114129766c40a6c20d48be275f3f5f7b" translate="yes" xml:space="preserve">
          <source>A function with the following signature that can be used to implement basic image memory management:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca91e5b4e9d3657a92c0c66a6d5f7ebd72bd30bb" translate="yes" xml:space="preserve">
          <source>A function with this signature can be installed with &lt;a href=&quot;qloggingcategory#installFilter&quot;&gt;installFilter&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a612b0d1f217d84034080540d27bb2c28d302d0" translate="yes" xml:space="preserve">
          <source>A game pad.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee3050576850a0ce50e8e21ee60e82dc18493795" translate="yes" xml:space="preserve">
          <source>A game.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a04b8a22300d974b670775c6e444a99837df13a8" translate="yes" xml:space="preserve">
          <source>A gamepad device connected to a system. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="039a54597ff054a4a353134778a949b62e5827f6" translate="yes" xml:space="preserve">
          <source>A gaming device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be3d5ac05ddd8976f1ddbd33b30c952fb0643ed0" translate="yes" xml:space="preserve">
          <source>A gauge that displays a value within a range along an arc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5f759e200544e0ff2133300bcc5ca738b32fa3e" translate="yes" xml:space="preserve">
          <source>A gauge that displays a value within a range along an arc. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a494a89ecb96e05ea032521d5716dde08b92b483" translate="yes" xml:space="preserve">
          <source>A general background color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="448255da3de99037ae4ac7ab10244385fe187ce7" translate="yes" xml:space="preserve">
          <source>A general foreground color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f1b10dd0810a34f20f45b3f7766a964bc5f8b91" translate="yes" xml:space="preserve">
          <source>A general unlimited inquiry. Discovers all visible Bluetooth devices in the local vicinity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="940100b5101bdc174dcd974bb66ab318be006835" translate="yes" xml:space="preserve">
          <source>A generic &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;QtQuick&lt;/a&gt; dialog wrapper with standard buttons. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f61130f53c36ee05c4a5ea85ef9432ea779c65a7" translate="yes" xml:space="preserve">
          <source>A generic Error object, but not of a specific sub-type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e525b4f034010a5314f9295b41ac2c835615a04" translate="yes" xml:space="preserve">
          <source>A generic QtQuick dialog wrapper with standard buttons</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a5cc7317d81b8a36e6d6d5482b53c54ac2ea8e" translate="yes" xml:space="preserve">
          <source>A generic container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d94a509a8270121e68830d558664367f9de43dfe" translate="yes" xml:space="preserve">
          <source>A geo rectangle is considered invalid if the top left or bottom right coordinates are invalid or if the top left coordinate is south of the bottom right coordinate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a1113a134ce7491ebce039d840edfe4535fc3f2" translate="yes" xml:space="preserve">
          <source>A geo shape is considered to be invalid if some of the data that is required to unambiguously describe the geo shape has not been set or has been set to an unsuitable value depending on the subclass of this object. The default constructed objects of this type are invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4799d26432eb9e50ff41b035ce23d7560d6e2e2" translate="yes" xml:space="preserve">
          <source>A geocoding query in QML is performed using the &lt;a href=&quot;qml-qtlocation-geocodemodel&quot;&gt;GeocodeModel&lt;/a&gt; type. For an address-to-coordinate query, its &lt;code&gt;query&lt;/code&gt; property may be set to either an &lt;a href=&quot;qml-qtpositioning-address&quot;&gt;Address&lt;/a&gt; object or a string containing the textual form of the address to search for. To perform the reverse, the same property can be set to a &lt;a href=&quot;qml-coordinate&quot;&gt;coordinate&lt;/a&gt; instead. Results are made available in the contents of the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64ae176bc80b7abeddb08f03f7d0b92b5bd7ad74" translate="yes" xml:space="preserve">
          <source>A geographic circle (all points at a set distance from a center), optionally with a border.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab674ffdb4cb4bb4718d71b440bf1044186bd1a" translate="yes" xml:space="preserve">
          <source>A geometry node must have both geometry and a normal material before it is added to the scene graph. When the geometry and materials are changed after the node has been added to the scene graph, the user should also mark them as dirty using &lt;a href=&quot;qsgnode#markDirty&quot;&gt;QSGNode::markDirty&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84896997718f40be358a73b0d8bdfe81d10839be" translate="yes" xml:space="preserve">
          <source>A geoshape is considered to be invalid if some of the data that is required to unambiguously describe the geoshape has not been set or has been set to an unsuitable value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aba72f20de72f6ee7d9d1881d4a652c85930be3" translate="yes" xml:space="preserve">
          <source>A gesture continues.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6649fd2a5ccb4cb560f8bc9b9d22d384585897f" translate="yes" xml:space="preserve">
          <source>A gesture has finished.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c87432f639fa37a1107386f90b517c50ed332219" translate="yes" xml:space="preserve">
          <source>A gesture override was triggered (&lt;a href=&quot;qgestureevent&quot;&gt;QGestureEvent&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0fbbfc4cac7ed17c01658fed07afdebb39a92c8" translate="yes" xml:space="preserve">
          <source>A gesture was canceled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca0ceb7874e3050dcbe9fb848bf00a669b5a02c" translate="yes" xml:space="preserve">
          <source>A gesture was triggered (&lt;a href=&quot;qgestureevent&quot;&gt;QGestureEvent&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bcb072563675f5c4000b56370fcaa2de2cdcac7" translate="yes" xml:space="preserve">
          <source>A global pointer referring to the unique application object. It is equivalent to &lt;a href=&quot;qcoreapplication#instance&quot;&gt;QCoreApplication::instance&lt;/a&gt;(), but cast as a &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; pointer, so only valid when the unique application object is a &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9cb55f9cfa31f2e622862c6340f51033d176713" translate="yes" xml:space="preserve">
          <source>A global pointer referring to the unique application object. Only valid for use when that object is a &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13c12c8173a77441c63a32e563b37a28dad79eaa" translate="yes" xml:space="preserve">
          <source>A glucose meter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d0e16da94cc02107dba9a86bf9d957e4ff354ca" translate="yes" xml:space="preserve">
          <source>A good starting point for creating a new style is to use an existing built-in style as a template and edit it. You can find the built-in styles from the virtual keyboard sources directory src/virtualkeyboard/content/styles. Copy one of the directories containing a built-in style into the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5233455ebfd10b6abd1d939a1c30ce7de18f580b" translate="yes" xml:space="preserve">
          <source>A good text on regexps is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1704e3cafa369a5cc02d81ee4f3e8149a21df8d" translate="yes" xml:space="preserve">
          <source>A gradient can have an arbitrary number of stop points. The following would create a radial gradient starting with red in the center, blue and then green on the edges:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaebe4ebab9a4ec92fc63df3ce324a53649008bc" translate="yes" xml:space="preserve">
          <source>A gradient is a smooth transition between colors. There are two types of gradients: linear and radial. Gradients must have two or more color stops, representing color shifts positioned from 0 to 1 between to the gradient's starting and end points or circles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0ff5dcd45b83b52e30d8830b4e9b31914a44500" translate="yes" xml:space="preserve">
          <source>A gradient is defined by two or more colors, which are blended seamlessly. The colors are specified as a set of &lt;a href=&quot;qml-qtquick-gradientstop&quot;&gt;GradientStop&lt;/a&gt; child items, each of which defines a position on the gradient (from 0.0 to 1.0), and a color. The position of each &lt;a href=&quot;qml-qtquick-gradientstop&quot;&gt;GradientStop&lt;/a&gt; is defined by the position property. The color is defined by the color property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e9c186f2ec48d30864d873ac333cb7874e8668e" translate="yes" xml:space="preserve">
          <source>A gradient is defined by two or more colors, which are blended seamlessly. The colors are specified as a set of &lt;a href=&quot;qml-qtquick-gradientstop&quot;&gt;GradientStop&lt;/a&gt; child items, each of which defines a position on the gradient from 0.0 to 1.0 and a color. The position of each &lt;a href=&quot;qml-qtquick-gradientstop&quot;&gt;GradientStop&lt;/a&gt; is defined by setting the position property. The color is defined by setting the color property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f21954627d624b764f5a87c1a76a320f11048092" translate="yes" xml:space="preserve">
          <source>A gradient is defined by two or more colors, which are blended seamlessly. The colors are specified as a set of &lt;a href=&quot;qml-qtquick-gradientstop&quot;&gt;GradientStop&lt;/a&gt; child items, each of which defines a position on the gradient from 0.0 to 1.0 and a color. The position of each &lt;a href=&quot;qml-qtquick-gradientstop&quot;&gt;GradientStop&lt;/a&gt; is defined by the position property, and the color is definded by the color property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dc37980a62c5663bda6cf6b320dc0bfd28d8602" translate="yes" xml:space="preserve">
          <source>A gradient is defined by two or more colors, which are blended seamlessly. The colors start from the given start point and end to the given end point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="481b9290ae11f851cdb5b793bcf4d8892af68ca0" translate="yes" xml:space="preserve">
          <source>A gradient is defined by two or more colors, which are blended seamlessly. The colors start from the middle of the item and end at the borders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9660d71ba7bea922f2b042206ef9b9add37d8054" translate="yes" xml:space="preserve">
          <source>A gradient is defined by two or more colors, which are blended seamlessly. The colors start from the specified angle and end at 360 degrees larger angle value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dc3407029d0888664813ad66c157740790b5b2e" translate="yes" xml:space="preserve">
          <source>A gradient is defined by two or more colors, which will be blended seamlessly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e50186518ef4aef5efb97ea811e97a1f06e434a" translate="yes" xml:space="preserve">
          <source>A gradient without any gradient stops falls back to &lt;a href=&quot;qlineargradient&quot;&gt;QLinearGradient&lt;/a&gt; default, which is black at 0.0 and white at 1.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0f46384fb97d8217b2fae0725fe5c4b82de32a7" translate="yes" xml:space="preserve">
          <source>A gradient without any gradient stops is rendered as a solid white fill.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd60cc081c362f80c77962cbc2e805946a1aeb9f" translate="yes" xml:space="preserve">
          <source>A gradient's type can be retrieved using the &lt;a href=&quot;qgradient#type&quot;&gt;type&lt;/a&gt;() function. Each of the types is represented by a subclass of &lt;a href=&quot;qgradient&quot;&gt;QGradient&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5978550b08f198fd46d83ea69ed34e8c612d5e38" translate="yes" xml:space="preserve">
          <source>A grapheme cluster is a sequence of two or more Unicode characters that form one indivisible entity on the screen. For example the latin character `&amp;Auml;' can be represented in Unicode by two characters, `A' (0x41), and the combining diaresis (0x308). A text cursor can only validly be positioned before or after these two characters, never between them since that wouldn't make sense. In indic languages every syllable forms a grapheme cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38c826ca91f45a68137e537a4d73f2212b73bbc2" translate="yes" xml:space="preserve">
          <source>A graphic or picture, e.g. an icon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8ce89a6f390ccfa367e2c4fffb293cf792ca4f0" translate="yes" xml:space="preserve">
          <source>A graphics ellipse item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a4dec1801f0dab1935b33a632d3e99971a3d09c" translate="yes" xml:space="preserve">
          <source>A graphics item group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e8d54b6814377a29c09a765ed46e3b4bd3651e" translate="yes" xml:space="preserve">
          <source>A graphics line item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4e15eba8bac0c026fd28be8782bf71fb8864469" translate="yes" xml:space="preserve">
          <source>A graphics path item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3991c09cd468a4d8ac2ef5337ed4d3bb3dae6483" translate="yes" xml:space="preserve">
          <source>A graphics pixmap item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="485f0c6165e9ed150bb9f1d5197aa66c6ec7223c" translate="yes" xml:space="preserve">
          <source>A graphics polygon item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d963a6440d858aa09faf346a142e5f23f935597a" translate="yes" xml:space="preserve">
          <source>A graphics proxy widget</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d34a54542edc6a342c68052f69f9b9c709227fb6" translate="yes" xml:space="preserve">
          <source>A graphics rect item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe8d27fb93c3a016438e1f8576d1fb83c12e6186" translate="yes" xml:space="preserve">
          <source>A graphics simple text item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d4c5bd53c856a47985e82110da466bfb7fc9ae8" translate="yes" xml:space="preserve">
          <source>A graphics text item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="856dc4d86cc94167274b21ca673d13569a226403" translate="yes" xml:space="preserve">
          <source>A graphics widget item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b2d5c1372248794c6ecf540977ac5ea6d6be153" translate="yes" xml:space="preserve">
          <source>A grayscale filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="808aa5bdfdff75c7895f49638ea37964ff875103" translate="yes" xml:space="preserve">
          <source>A greater mass causes slower movement and a greater spring-like motion when an item comes to rest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b7299eb638ac349bb3693018d82b60ad43b5f57" translate="yes" xml:space="preserve">
          <source>A grid of days for a calendar month</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4774ce3220c9f32ca5a5c625d78d27799a4ef80c" translate="yes" xml:space="preserve">
          <source>A grid of days for a calendar month. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="149b0ca6f29de31a4f0f4353f2abf99e0c626a82" translate="yes" xml:space="preserve">
          <source>A grip that the user can drag to change the size of widgets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8970985cfc0dc66aff251d2dbbdc78cfb0027e89" translate="yes" xml:space="preserve">
          <source>A group box provides a frame, a title on top and displays various other controls inside itself. Group boxes can also be checkable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca897df4b0b5e136f1302ad229774b5073604712" translate="yes" xml:space="preserve">
          <source>A group box provides a frame, a title on top, a keyboard shortcut, and displays various other widgets inside itself. The keyboard shortcut moves keyboard focus to one of the group box's child widgets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d3c7a098011a2101f4347e9faf16b3feb889625" translate="yes" xml:space="preserve">
          <source>A group box usually consists of a surrounding frame with a title at the top. If this property is enabled, only the top part of the frame is drawn in most styles; otherwise, the whole frame is drawn.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28dca33385f6639c99a0d06619f175b4058d4733" translate="yes" xml:space="preserve">
          <source>A group box, like &lt;a href=&quot;qgroupbox&quot;&gt;QGroupBox&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c03c26ec2ec7d02a726d4255e106c22785b36f55" translate="yes" xml:space="preserve">
          <source>A group for managing native menu items</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12ccf489b8a54adeefd4050fb3e7e2e75d23c4a3" translate="yes" xml:space="preserve">
          <source>A group for managing native menu items. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="583cb843a23c4cc8d87f5efb7f9684e8b61cbd96" translate="yes" xml:space="preserve">
          <source>A guarded pointer will automatically cast to a &lt;code&gt;T&lt;/code&gt; *, so you can freely mix guarded and unguarded pointers. This means that if you have a &lt;a href=&quot;qpointer&quot;&gt;QPointer&lt;/a&gt;&amp;lt;&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;&amp;gt;, you can pass it to a function that requires a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *. For this reason, it is of little value to declare functions to take a &lt;a href=&quot;qpointer&quot;&gt;QPointer&lt;/a&gt; as a parameter; just use normal pointers. Use a &lt;a href=&quot;qpointer&quot;&gt;QPointer&lt;/a&gt; when you are storing a pointer over time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f80e5480b6e91f7131ffecfd61b9175cde30dfa9" translate="yes" xml:space="preserve">
          <source>A guarded pointer, &lt;a href=&quot;qpointer&quot;&gt;QPointer&lt;/a&gt;&amp;lt;T&amp;gt;, behaves like a normal C++ pointer &lt;code&gt;T *&lt;/code&gt;, except that it is automatically cleared when the referenced object is destroyed (unlike normal C++ pointers, which become &quot;dangling pointers&quot; in such cases). &lt;code&gt;T&lt;/code&gt; must be a subclass of &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a7ee418a1c528ce89b7829d626599578fa48672" translate="yes" xml:space="preserve">
          <source>A handheld computer or PDA.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71abeeda1b6e05bde71acbe6c399157891e9a23c" translate="yes" xml:space="preserve">
          <source>A handle can belong to the item either on the left or top side, or on the right or bottom side:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="644365d4896989b574da3bc86ce3d7b5c0dddf55" translate="yes" xml:space="preserve">
          <source>A handle type for system objects, defined as &lt;code&gt;void *&lt;/code&gt; on all platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22e4d5148f733b14fc35da3331a3fdf532f4d6dc" translate="yes" xml:space="preserve">
          <source>A handler lets us perform actions when the reader encounters certain types of content, or if errors in the input are found. The reader must be told which handler to use for each type of event. For many common applications, we can create a custom handler by subclassing &lt;a href=&quot;qxmldefaulthandler&quot;&gt;QXmlDefaultHandler&lt;/a&gt;, and use this to handle both error and content events:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d56193ce4885fa2862c90a656d682ed945e021" translate="yes" xml:space="preserve">
          <source>A handler that supports this option is expected to read the image in several passes, as if it was an animation. &lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt; will treat the image as an animation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c38e62563a424e487a11059ba2b847dab297c6d" translate="yes" xml:space="preserve">
          <source>A handsfree device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ef960a857a826a402a5fa4fe9752a8d9adebe45" translate="yes" xml:space="preserve">
          <source>A header can be fixed in place, or made movable with &lt;a href=&quot;qheaderview#setSectionsMovable&quot;&gt;setSectionsMovable&lt;/a&gt;(). It can be made clickable with &lt;a href=&quot;qheaderview#setSectionsClickable&quot;&gt;setSectionsClickable&lt;/a&gt;(), and has resizing behavior in accordance with &lt;a href=&quot;qheaderview#setSectionResizeMode&quot;&gt;setSectionResizeMode&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e701185950731bf6d5381a3f3d8330df1147815" translate="yes" xml:space="preserve">
          <source>A header cell's text is centered within the table cell and rendered using a bold font.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="006bcb0b567925668db214ef68a9742a7ec09d6e" translate="yes" xml:space="preserve">
          <source>A header for a column of data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a668da26124396a6e98f97207ca5cf3de89f0ea6" translate="yes" xml:space="preserve">
          <source>A header for a row of data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="867792ee87e96e47f5f2da352890b78a3a8ff348" translate="yes" xml:space="preserve">
          <source>A header section, like QHeader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdea351d6cd2e6dbbf83caab88aa4590da3cd109" translate="yes" xml:space="preserve">
          <source>A header section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784d1a8c2749171dfb5a08c27d592ec7e8343268" translate="yes" xml:space="preserve">
          <source>A header will emit &lt;a href=&quot;qheaderview#sectionMoved&quot;&gt;sectionMoved&lt;/a&gt;() if the user moves a section, &lt;a href=&quot;qheaderview#sectionResized&quot;&gt;sectionResized&lt;/a&gt;() if the user resizes a section, and &lt;a href=&quot;qheaderview#sectionClicked&quot;&gt;sectionClicked&lt;/a&gt;() as well as &lt;a href=&quot;qheaderview#sectionHandleDoubleClicked&quot;&gt;sectionHandleDoubleClicked&lt;/a&gt;() in response to mouse clicks. A header will also emit &lt;a href=&quot;qheaderview#sectionCountChanged&quot;&gt;sectionCountChanged&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bacef0680fd35b5469c10d977f14a28679a61ec" translate="yes" xml:space="preserve">
          <source>A header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e11c991a625a076dcbfead783f636f9390f4b7b3" translate="yes" xml:space="preserve">
          <source>A heading in a document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95753bf0fbd45b4a8de2ed4155a799a56c71a085" translate="yes" xml:space="preserve">
          <source>A health reated device such as heart rate or temperature monitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf1fe7729b0c8e8956a0e7365ab4aea89f2782b" translate="yes" xml:space="preserve">
          <source>A helmet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27564f0b921212f271db065afe27810b866c5342" translate="yes" xml:space="preserve">
          <source>A hidden widget will only become visible when &lt;a href=&quot;qwidget#show&quot;&gt;show&lt;/a&gt;() is called on it. It will not be automatically shown when the parent is shown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdf531c33f171f044e122b0088b46ac335f33af7" translate="yes" xml:space="preserve">
          <source>A high-level API for writing extensions to Qt itself: custom database drivers, image formats, text codecs, custom styles, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a727ae2f9571a91a4b9f653c51ba8312ca79edf" translate="yes" xml:space="preserve">
          <source>A high-quality dither using error diffusion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62532682bb6ae63b87b0100046dcaeab55431be5" translate="yes" xml:space="preserve">
          <source>A history state is a pseudo-state that represents the child state that the parent state was in the last time the parent state was exited. A transition with a history state as its target is in fact a transition to one of the other child states of the parent state. &lt;a href=&quot;qml-qtqml-statemachine-historystate&quot;&gt;HistoryState&lt;/a&gt; is part of &lt;a href=&quot;qmlstatemachine#&quot;&gt;The Declarative State Machine Framework&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8c12f8dd4c5d8f0557911e0a9471f4f8075e4cc" translate="yes" xml:space="preserve">
          <source>A history state is a pseudo-state that represents the child state that the parent state was in the last time the parent state was exited. A transition with a history state as its target is in fact a transition to one or more other child states of the parent state. &lt;a href=&quot;qhistorystate&quot;&gt;QHistoryState&lt;/a&gt; is part of &lt;a href=&quot;statemachine-api#&quot;&gt;The State Machine Framework&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8fcc1ceaf3ce520f3a3902e2458bb82a5b225cd" translate="yes" xml:space="preserve">
          <source>A history state is created as a child of the state for which we wish to record the current child state; when the state machine detects the presence of such a state at runtime, it automatically records the current (real) child state when the parent state exits. A transition to the history state is in fact a transition to the child state that the state machine had previously saved; the state machine automatically &quot;forwards&quot; the transition to the real child state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00dd1cbeb69b636740bd6498f6febee3e4906a0f" translate="yes" xml:space="preserve">
          <source>A history state is created as a child of the state for which we wish to record the current child state; when the state machine detects the presence of such a state at runtime, it automatically records the current (real) child state when the parent state is exited. A transition to the history state is in fact a transition to the child state that the state machine had previously saved; the state machine automatically &quot;forwards&quot; the transition to the real child state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a1bca0b5e3d2cd62256f4557fe58900722a9b4e" translate="yes" xml:space="preserve">
          <source>A horizontal bar chart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05fdc6c1be54345ace3d3e3f94794d2e1d53706" translate="yes" xml:space="preserve">
          <source>A horizontal bar series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e9e182b2f02fe2bc513060b742ee8fc2d2d70dc" translate="yes" xml:space="preserve">
          <source>A horizontal model mapper for &lt;a href=&quot;qml-qtcharts-xyseries&quot;&gt;XYSeries&lt;/a&gt;. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d7fd35f411d503939a4b969c773c524282ea21" translate="yes" xml:space="preserve">
          <source>A horizontal percent bar chart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0c2baf766f9dde9184a7dd57b20be8bcbd3fe95" translate="yes" xml:space="preserve">
          <source>A horizontal percent bar series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dd53d014fa79ce8292fd92a44c1f686ddb44672" translate="yes" xml:space="preserve">
          <source>A horizontal separator is used in a vertical toolbar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="216ed6b774572a0300e555ad7829c42de50234bd" translate="yes" xml:space="preserve">
          <source>A horizontal stacked bar chart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1903fbdc64c65203fb0e3f44deb03b22326fac84" translate="yes" xml:space="preserve">
          <source>A horizontal stacked bar series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbf9b4573f6f9064d57719265b433b97a5559753" translate="yes" xml:space="preserve">
          <source>A horizontal stretch in the button layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6ea413a1ac5ad8462a4dfb8af110d706a1aa52c" translate="yes" xml:space="preserve">
          <source>A host address is set with &lt;a href=&quot;qhostaddress#setAddress&quot;&gt;setAddress&lt;/a&gt;(), and retrieved with &lt;a href=&quot;qhostaddress#toIPv4Address&quot;&gt;toIPv4Address&lt;/a&gt;(), &lt;a href=&quot;qhostaddress#toIPv6Address&quot;&gt;toIPv6Address&lt;/a&gt;(), or &lt;a href=&quot;qhostaddress#toString&quot;&gt;toString&lt;/a&gt;(). You can check the type with &lt;a href=&quot;qhostaddress#protocol&quot;&gt;protocol&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95354c173b93040f3b153b51d0b58883fe31700d" translate="yes" xml:space="preserve">
          <source>A host node will share the list of sources it hosts with every other node that connects to it. It will send updates when sources are added or removed from the list. In this way, a connected node will always know what sources it can attach to. Changes to a specific &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt; are only propagated to nodes that have a replica of that source. This avoids unnecessary network traffic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33cf22a795cd70fe685349d73580087cfc897c7c" translate="yes" xml:space="preserve">
          <source>A hotkey field that allows the user to enter a key sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="302106da61424630d533b8c5e510d263534bdf31" translate="yes" xml:space="preserve">
          <source>A hypertext link has been activated, perhaps by being clicked or via a key press.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f260c2f45b6d30e68aa524603fae0b1534fccd5" translate="yes" xml:space="preserve">
          <source>A hypertext link has been selected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d47721454da8d0ee6578d8947d86652df8cb231" translate="yes" xml:space="preserve">
          <source>A image encoder settings object is used to specify the image encoder settings used by &lt;a href=&quot;qcameraimagecapture&quot;&gt;QCameraImageCapture&lt;/a&gt;. Image encoder settings are selected by constructing a &lt;a href=&quot;qimageencodersettings&quot;&gt;QImageEncoderSettings&lt;/a&gt; object, setting the desired properties and then passing it to a &lt;a href=&quot;qcameraimagecapture&quot;&gt;QCameraImageCapture&lt;/a&gt; instance using the QCameraImageCapture::setImageSettings() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ddf1bf350f92d7cd49917da4b6ff245ff42f8a" translate="yes" xml:space="preserve">
          <source>A input method query event (&lt;a href=&quot;qinputmethodqueryevent&quot;&gt;QInputMethodQueryEvent&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecdb234416144a9018d0bdfd957b909aa487c087" translate="yes" xml:space="preserve">
          <source>A jacket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14e21fe3762a716805c0b632c95edcfc71ba431c" translate="yes" xml:space="preserve">
          <source>A joystick.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f09a1b0e24f2313648e4583185baa8a616f8526d" translate="yes" xml:space="preserve">
          <source>A jump list category of &quot;frequent&quot; items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="425559b736423d235ed156e28f4b16664fda4d7a" translate="yes" xml:space="preserve">
          <source>A jump list category of &quot;recent&quot; items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f0b87aa22545513d1eded0967a7114acac49221" translate="yes" xml:space="preserve">
          <source>A jump list category of tasks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="665943fca82d60d3d3945aff30a1c604c87d81d0" translate="yes" xml:space="preserve">
          <source>A key event contains a special accept flag that indicates whether the receiver will handle the key event. This flag is set by default for &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::KeyPress&lt;/a&gt; and &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::KeyRelease&lt;/a&gt;, so there is no need to call &lt;a href=&quot;qevent#accept&quot;&gt;accept&lt;/a&gt;() when acting on a key event. For &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::ShortcutOverride&lt;/a&gt; the receiver needs to explicitly accept the event to trigger the override. Calling &lt;a href=&quot;qevent#ignore&quot;&gt;ignore&lt;/a&gt;() on a key event will propagate it to the parent widget. The event is propagated up the parent widget chain until a widget accepts it or an event filter consumes it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b184553c448049512b1651a2ad3df718ebe5315" translate="yes" xml:space="preserve">
          <source>A key press toggles the current mode without emitting key event for input method processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dae9785b04a3b894c9d3b6a394f9cda8a884af4" translate="yes" xml:space="preserve">
          <source>A key setting the state of the media player to pause (&lt;b&gt;Note&lt;/b&gt;: not the pause/break key)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34410d78cf8213937a7e0926e83d588ddcaaa496" translate="yes" xml:space="preserve">
          <source>A key setting the state of the media player to play</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88ad9923349b018911d92ba78ca0c7cf60f09fc4" translate="yes" xml:space="preserve">
          <source>A key setting the state of the media player to stop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea7007f9a6d626ea9d6bbbc8f5fcc682dcb9d4d2" translate="yes" xml:space="preserve">
          <source>A key that should be treated as a 'black box' by &lt;a href=&quot;qsslkey&quot;&gt;QSslKey&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e96c9adadf07b4a46569c16b168ad41416ed222" translate="yes" xml:space="preserve">
          <source>A key to activate the camera shutter. On Windows Runtime, the environment variable QT_QPA_ENABLE_CAMERA_KEYS must be set to receive the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7a844b3d2d4ee93c047b209cb06cbd2c9e6e37b" translate="yes" xml:space="preserve">
          <source>A key to answer or initiate a call (see Qt::Key_ToggleCallHangup for a key to toggle current call state)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b0375cf7ee395183f10c4b9119af0cd82bf8693" translate="yes" xml:space="preserve">
          <source>A key to end an ongoing call (see Qt::Key_ToggleCallHangup for a key to toggle current call state)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce26b5bcbff22e6840514a2a3fad9112159a9908" translate="yes" xml:space="preserve">
          <source>A key to focus the camera. On Windows Runtime, the environment variable QT_QPA_ENABLE_CAMERA_KEYS must be set to receive the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10e88c4f291d3d5cc1e0b280ef3763fdad762571" translate="yes" xml:space="preserve">
          <source>A key to toggle the current call state (ie. either answer, or hangup) depending on current call state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf70389e1d70b5d7a0c5afd22c2916e21e7eb7a7" translate="yes" xml:space="preserve">
          <source>A key to toggle the play/pause state in the media player (rather than setting an absolute state)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2b88e1aec6fac31e888ae8d5c5e5d4bf1d41ba9" translate="yes" xml:space="preserve">
          <source>A keyboard with built-in pointing device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="017be7fe76f4f836d3196a6f4b58237772d4216c" translate="yes" xml:space="preserve">
          <source>A keyboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e31b44370cd03b3f94c5fc375f874cfd5059b3b1" translate="yes" xml:space="preserve">
          <source>A keymap provides a way to translate actual key scan codes into a meaningful value. For example, if you use a keymap with a Norwegian layout, the key to the right of the letter L produces an &amp;Oslash;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cce42f88f10e63529e5008b7efcc39c249119094" translate="yes" xml:space="preserve">
          <source>A keypad button is pressed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec128bd40772542db80a38890b1674773429e873" translate="yes" xml:space="preserve">
          <source>A label widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09eb82755e4a61a8718b2ae8d7aaea35a9f5c236" translate="yes" xml:space="preserve">
          <source>A laptop computer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a293955fa8e1d1b1506b3d67e985f3bc898962bd" translate="yes" xml:space="preserve">
          <source>A layer is rendered with the root item's opacity being 1, and then the root item's opacity is applied to the texture when it is drawn. This means that fading in a large item hierarchy from transparent to opaque, or vice versa, can be done without the overlap artifacts that the normal item by item alpha blending has. Here is the same example with layer enabled:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c4ca771c798594913ea0a6418052dd4bfcc9cdc" translate="yes" xml:space="preserve">
          <source>A layered item is rendered into an offscreen surface and cached until it is changed. Enabling layering for complex QML item hierarchies can sometimes be an optimization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="738a293e4fc491d9ce921dfb83191e954ebdec1d" translate="yes" xml:space="preserve">
          <source>A layout is used to arrange and manage the elements that make up a user interface. Qt provides a number of classes to automatically handle layouts -- &lt;a href=&quot;qhboxlayout&quot;&gt;QHBoxLayout&lt;/a&gt;, &lt;a href=&quot;qvboxlayout&quot;&gt;QVBoxLayout&lt;/a&gt;, &lt;a href=&quot;qgridlayout&quot;&gt;QGridLayout&lt;/a&gt;, and &lt;a href=&quot;qformlayout&quot;&gt;QFormLayout&lt;/a&gt;. These classes solve the challenge of laying out widgets automatically, providing a user interface that behaves predictably. Fortunately knowledge of the layout classes is not required to arrange widgets with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="475700600002d1b52795aa10caf3da23e6e6d9a5" translate="yes" xml:space="preserve">
          <source>A layout or item view has added, removed, or moved an object (Qt does not use this event).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d2987690c35bb92c15c8cda651da8db2ae2cb65" translate="yes" xml:space="preserve">
          <source>A leave event is sent to the widget when the mouse cursor leaves the widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae3ee66a9146a13a5277b5b194116b7dbc4cff17" translate="yes" xml:space="preserve">
          <source>A left-tab</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f172fa68fc98fc783c0e61aaab69df55abe229c1" translate="yes" xml:space="preserve">
          <source>A legend is a graphical object that displays the legend of a chart. The legend state is updated by &lt;a href=&quot;qchart&quot;&gt;QChart&lt;/a&gt; when series change. By default, the legend is attached to the chart, but it can be detached to make it independent of chart layout. Legend objects cannot be created or deleted, but they can be referenced via the &lt;a href=&quot;qchart&quot;&gt;QChart&lt;/a&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="416973bf9b025360f1ce7310e66f286c83d6ee88" translate="yes" xml:space="preserve">
          <source>A legend is a graphical object that displays the legend of a chart. The legend state is updated by the &lt;a href=&quot;qml-qtcharts-chartview&quot;&gt;ChartView&lt;/a&gt; type when series change. The &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcharts-overview.html#legend&quot;&gt;Legend&lt;/a&gt; type properties can be attached to the &lt;a href=&quot;qml-qtcharts-chartview&quot;&gt;ChartView&lt;/a&gt; type. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="520343d790c88d43c9e06b3ff20d483585f8fa59" translate="yes" xml:space="preserve">
          <source>A legend marker consists of an icon and a label. The icon color corresponds to the color used to draw a series and the label displays the name of the series (or the label of the slice for a pie series or bar set for a bar series). A legend marker is always related to one series, slice, or bar set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="486338112ad0f9c11b1636f7e5c039692a2fa8cc" translate="yes" xml:space="preserve">
          <source>A legend marker for a bar set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8a8471bdb27033f70bd17191519145272e18f43" translate="yes" xml:space="preserve">
          <source>A legend marker for a box plot series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb8fdb8693f34bb006d85e37778f3aa85789c820" translate="yes" xml:space="preserve">
          <source>A legend marker for a candlestick series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="403b7a27acab8fc816f7fd8c934d659ec6479f56" translate="yes" xml:space="preserve">
          <source>A legend marker for a line, spline, or scatter series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4975826e7cde13028727cd56ee807081c24d589d" translate="yes" xml:space="preserve">
          <source>A legend marker for a pie slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39b5e1be8c8bd2242125a1203479b6697f594ab1" translate="yes" xml:space="preserve">
          <source>A legend marker for an area series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="559be544a71dbf1ee54b7a25eee4a273812074db" translate="yes" xml:space="preserve">
          <source>A light theme with gray as the base color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f1775aafd57f44312b29f1035783372c2257c67" translate="yes" xml:space="preserve">
          <source>A light theme with green as the base color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb1eefc9456d5a871fb7c183ce1b778a7700413a" translate="yes" xml:space="preserve">
          <source>A light theme with yellow as the base color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6932d6f379618dc24d1867b5e7a1e2ed1567293" translate="yes" xml:space="preserve">
          <source>A limited inquiry discovers devices that are in limited inquiry mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adda84ee7bc01222b5464c2c0527957789617b85" translate="yes" xml:space="preserve">
          <source>A line chart is used to show information as a series of data points connected by straight lines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31e6d8c07d37f6d7313acbfa83828f8bb70d4bb4" translate="yes" xml:space="preserve">
          <source>A line chart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0956dd93029afa381b7c0f29e9b410d04161935" translate="yes" xml:space="preserve">
          <source>A line edit allows the user to enter and edit a single line of plain text with a useful collection of editing functions, including undo and redo, cut and paste, and drag and drop (see &lt;a href=&quot;qlineedit#dragEnabled-prop&quot;&gt;setDragEnabled&lt;/a&gt;()).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a271da6ce14840d940762ba44cc6e7f59daad75" translate="yes" xml:space="preserve">
          <source>A line edit, like &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61c42b55901b714f0a563bf935d690b1c197f689" translate="yes" xml:space="preserve">
          <source>A line is different from another line if any of their start or end points differ, or the internal order of the points is different.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e722684bb9335b460c5339ba9fc252f2ba7c194" translate="yes" xml:space="preserve">
          <source>A line is different from another line if their start or end points differ, or the internal order of the points is different.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b378cc04d365166a63c8ce791a952cd8bccee76" translate="yes" xml:space="preserve">
          <source>A line is drawn using &lt;a href=&quot;qt#PenStyle-enum&quot;&gt;Qt::SolidLine&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76a1a10132a352fd85f54b8dcdac9d0462291cf8" translate="yes" xml:space="preserve">
          <source>A line is identical to another line if the start and end points are identical, and the internal order of the points is the same.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87ade796d83f285330e0675d967e7d78159533e0" translate="yes" xml:space="preserve">
          <source>A line series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="915185fffb15b04fdfd39f5310e7ed9d89c37a0a" translate="yes" xml:space="preserve">
          <source>A line width of zero indicates a cosmetic pen. This means that the pen width is always drawn one pixel wide, independent of the &lt;a href=&quot;qpainter#coordinate-transformations&quot;&gt;transformation&lt;/a&gt; on the painter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86bd7d1fa4ef584e07398ac2c303a84349ae6a60" translate="yes" xml:space="preserve">
          <source>A line width of zero indicates a cosmetic pen. This means that the pen width is always drawn one pixel wide, independent of the &lt;a href=&quot;qpainter#coordinate-transformations&quot;&gt;transformation&lt;/a&gt; set on the painter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="986070e42875a514e6614c645a1b2d7ec7f24a58" translate="yes" xml:space="preserve">
          <source>A line. See also &lt;a href=&quot;qpainterpath#lineTo&quot;&gt;lineTo&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c79f49378042e4221cc45af9508d15b333598251" translate="yes" xml:space="preserve">
          <source>A link command with square bracket argument has the following syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec3a0ca2c2ad0a8e84b687a7c52f49ce8e735185" translate="yes" xml:space="preserve">
          <source>A link in a widget's &quot;What's This?&quot; help was clicked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e81a4db93ede1cccbcc911e191708f762de4c939" translate="yes" xml:space="preserve">
          <source>A link to something else.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a1e515508375b0a714cfc94b9793a91b142379" translate="yes" xml:space="preserve">
          <source>A linked Windows resource file may contain many elements that can be accessed by its EXE or DLL. However, the &lt;a href=&quot;resources&quot;&gt;Qt resource system&lt;/a&gt; should be used for accessing linked-in resources in a platform-independent way. But some standard elements of the linked Windows resource file are accessed by Windows itself. For example, in Windows explorer the version tab of the file properties is filled by resource elements. In addition, the program icon of the EXE is read from these elements. So it is good practice for a Qt created Windows EXE or DLL to use both techniques at the same time: link platform-independent resources via the &lt;a href=&quot;resources&quot;&gt;Qt resource system&lt;/a&gt; and add Windows specific resources via a Windows resource file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b235143efa8c654b756dc79e3c87ad15f0cf43a3" translate="yes" xml:space="preserve">
          <source>A list contains a sequence of text blocks, each of which is marked with a bullet point or other symbol. Multiple levels of lists can be used, and the automatic numbering feature provides support for ordered numeric and alphabetical lists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="043c48a2e99f731bf94f1a109928de05b783dfd7" translate="yes" xml:space="preserve">
          <source>A list is composed of one or more items, represented as text blocks. The list's format specifies the appearance of items in the list. In particular, it determines the indentation and the style of each item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5dbee19fe712bf1aed26dfe813d55f368a6fc1b" translate="yes" xml:space="preserve">
          <source>A list may contain a list indicating people's names and the team on which team the person belongs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb50a6ec37080201ed50ad21a651ff9a8206ddf2" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;qcanbusdevice-filter&quot;&gt;QCanBusDevice::Filter&lt;/a&gt; instances is passed to &lt;a href=&quot;qcanbusdevice#setConfigurationParameter&quot;&gt;QCanBusDevice::setConfigurationParameter&lt;/a&gt;() to enable filtering. If a received CAN frame matches at least one of the filters in the list, the &lt;a href=&quot;qcanbusdevice&quot;&gt;QCanBusDevice&lt;/a&gt; will accept it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c08879d608bb904d39554ad53ca0d92ad4a252d4" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;qlowenergyadvertisingparameters-addressinfo&quot;&gt;QLowEnergyAdvertisingParameters::AddressInfo&lt;/a&gt; instances is passed to &lt;a href=&quot;qlowenergyadvertisingparameters#setWhiteList&quot;&gt;QLowEnergyAdvertisingParameters::setWhiteList&lt;/a&gt;(). White lists are used to restrict the devices which have the permission to interact with the peripheral. The permitted type of interaction is defined by &lt;a href=&quot;qlowenergyadvertisingparameters#FilterPolicy-enum&quot;&gt;QLowEnergyAdvertisingParameters::FilterPolicy&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9f75c1285f277c5a4a85bdbf379e5507aa7bdfc" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;* values can also be used as a model. A &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;*&amp;gt; provides the properties of the objects in the list as roles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de015360e3e2ea7203c33fabd3649bc638023996" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;qt3drender-qparameter&quot;&gt;Qt3DRender::QParameter&lt;/a&gt; parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d9ee4bd6aaba26b5ab3a3fcef0c1437f2c09d63" translate="yes" xml:space="preserve">
          <source>A list of MIME types specified in the input element. The selection should be restricted to only these types of files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="670d992fb359f21e51bb8638ad0fc4330e878bbc" translate="yes" xml:space="preserve">
          <source>A list of QML related QDoc commands:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eae2f276e3923985eceba7e6d0c958b247e74d8f" translate="yes" xml:space="preserve">
          <source>A list of Qt modules used in the project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0d536f9c6e8a78a5df123c6a2465b9efbe9e137" translate="yes" xml:space="preserve">
          <source>A list of SCXML services that were invoked from the main state machine (possibly recursively).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1290b7b43c23f250e0c2bcd2d765a251c26909d8" translate="yes" xml:space="preserve">
          <source>A list of UI files to be processed by the &lt;a href=&quot;uic&quot;&gt;user interface compiler (uic)&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b2c6b1e0b2f75830e3d25cd5ccfc52f8ce4b448" translate="yes" xml:space="preserve">
          <source>A list of additional QtObject types nested in this type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5362ab783ce56de71506c935b9b3e4fa7946ff01" translate="yes" xml:space="preserve">
          <source>A list of available properties in control:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c25a61bfb430f2ec0e4c77ec3ec8607bedb105de" translate="yes" xml:space="preserve">
          <source>A list of choices that the user can select from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24ffaea729f9224ed0f7bf6b72c1aa3c7a062fa8" translate="yes" xml:space="preserve">
          <source>A list of currently supported sensor gestures and their descriptions can be found here: &lt;a href=&quot;https://doc.qt.io/qt-5.13/sensorgesture-plugins-topics.html#qt-sensor-gestures&quot;&gt;Qt Sensor Gestures&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="547fdf74dda2f2b0937f39df05faf325e236b5cb" translate="yes" xml:space="preserve">
          <source>A list of custom categories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24342405f13891b1455750834fdbc6acadf0846b" translate="yes" xml:space="preserve">
          <source>A list of excluded areas that the route must not cross</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="170795e68a235c907fc9ffd269d449f575a49b8a" translate="yes" xml:space="preserve">
          <source>A list of extensions that the compositor advertises to its clients. For any Wayland extension the compositor should support, instantiate its component, and add it to the list of extensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5747af555ac9a76022b0eaf196b2bdd3e6f7fca4" translate="yes" xml:space="preserve">
          <source>A list of filenames of header (.h) files used when building the project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14edaee97c0bbd9a9b06797ddb7364e7036b1851" translate="yes" xml:space="preserve">
          <source>A list of integer QVariants describing the set of supported resolutions that the printer has.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2203a46cfff5a7ac494955b86c6c2162929008e" translate="yes" xml:space="preserve">
          <source>A list of items describing the pages that can be visited by going back can be obtained by calling the &lt;a href=&quot;qwebenginehistory#backItems&quot;&gt;backItems&lt;/a&gt;() function; similarly, items describing the pages ahead of the current page can be obtained with the &lt;a href=&quot;qwebenginehistory#forwardItems&quot;&gt;forwardItems&lt;/a&gt;() function. The total list of items is obtained with the &lt;a href=&quot;qwebenginehistory#items&quot;&gt;items&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d884d04c2c3eddda96eb42b4cfcf71c687d6f8" translate="yes" xml:space="preserve">
          <source>A list of items in a tree structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21795c8077f26766c0b0f87188b3c98a01fd7547" translate="yes" xml:space="preserve">
          <source>A list of items, from which the user can select one or more items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cddb89a5f1d5c72e8b260dee416202185cf02b3" translate="yes" xml:space="preserve">
          <source>A list of items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9221ad51fad6d12b33d93d6aed1c5ae61ecb535f" translate="yes" xml:space="preserve">
          <source>A list of keywords describing the media.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adda7ce74e06f5e2ddabd89e1a6efdae42d36c5d" translate="yes" xml:space="preserve">
          <source>A list of numbers with one to three positions separated by a comma:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="657ab4f4341760205060388955c090f3908904df" translate="yes" xml:space="preserve">
          <source>A list of objects which should be accessible to remote clients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="818e8c7c5dd7c43e76aa0cf733591ccfed4b2a6d" translate="yes" xml:space="preserve">
          <source>A list of other sprites and weighted transitions to them, for example {&quot;a&quot;:1, &quot;b&quot;:2, &quot;c&quot;:0} would specify that one-third should transition to sprite &quot;a&quot; when this sprite is done, and two-thirds should transition to sprite &quot;b&quot; when this sprite is done. As the transitions are chosen randomly, these proportions will not be exact. With &quot;c&quot;:0 in the list, no sprites will randomly transition to &quot;c&quot;, but it wll be a valid path if a sprite goal is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ed662195feab55d2569dd5d784b6b284660fbd2" translate="yes" xml:space="preserve">
          <source>A list of page tabs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16fb4a76a9764d9212e5ca33dc23e7a94b812837" translate="yes" xml:space="preserve">
          <source>A list of pixel formats a surface can present is given by the &lt;a href=&quot;qabstractvideosurface#supportedPixelFormats&quot;&gt;supportedPixelFormats&lt;/a&gt;() function, and the &lt;a href=&quot;qabstractvideosurface#isFormatSupported&quot;&gt;isFormatSupported&lt;/a&gt;() function will test if a video surface format is supported. If a format is not supported the &lt;a href=&quot;qabstractvideosurface#nearestFormat&quot;&gt;nearestFormat&lt;/a&gt;() function may be able to suggest a similar format. For example, if a surface supports fixed set of resolutions it may suggest the smallest supported resolution that contains the proposed resolution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1483fa0d6a6241dc83007a2aa3e4694a2d4e39c" translate="yes" xml:space="preserve">
          <source>A list of pointers to &lt;a href=&quot;qbardataproxy#QBarDataRow-typedef&quot;&gt;QBarDataRow&lt;/a&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="919a27d71bdf0ea7dfce334fcbd20ee12e6302e1" translate="yes" xml:space="preserve">
          <source>A list of pointers to &lt;a href=&quot;qsurfacedataproxy#QSurfaceDataRow-typedef&quot;&gt;QSurfaceDataRow&lt;/a&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="679f1e00d4a5b64d6df2c588bea1aeedd953f477" translate="yes" xml:space="preserve">
          <source>A list of resource (.qrc) files to be included in the final project. See the &lt;a href=&quot;resources&quot;&gt;The Qt Resource System&lt;/a&gt; for more information about these files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbf2a692b18febfd4daaebab46cef63d13aee68b" translate="yes" xml:space="preserve">
          <source>A list of search results can be retrieved from the &lt;a href=&quot;qplacesearchreply&quot;&gt;QPlaceSearchReply&lt;/a&gt; after it has successfully completed the request. Common to all search results are the &lt;a href=&quot;qplacesearchresult#title&quot;&gt;title&lt;/a&gt; and &lt;a href=&quot;qplacesearchresult#icon&quot;&gt;icon&lt;/a&gt;, which can be used to present the search result to the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdcf22225921fe968035a2a8abc5fd47f668a229" translate="yes" xml:space="preserve">
          <source>A list of source code files to be used when building the project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9a7cbf6cb6bd5e3decd7d5529466ccfd28ccc0c" translate="yes" xml:space="preserve">
          <source>A list of strings to be used as file name filters. Each string can be a space-separated list of filters; filters may include the ? and * wildcards. The list of filters can also be enclosed in parentheses and a textual description of the filter can be provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9adb2776114338f8078839581a2709fe653c8b89" translate="yes" xml:space="preserve">
          <source>A list of texts is passed to the constructor. A signal mapper is constructed and for each text in the list a &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; is created. We connect each button's &lt;code&gt;clicked()&lt;/code&gt; signal to the signal mapper's &lt;a href=&quot;qsignalmapper#map&quot;&gt;map&lt;/a&gt;() slot, and create a mapping in the signal mapper from each button to the button's text. Finally we connect the signal mapper's &lt;a href=&quot;qsignalmapper#mapped&quot;&gt;mapped&lt;/a&gt;() signal to the custom widget's &lt;code&gt;clicked()&lt;/code&gt; signal. When the user clicks a button, the custom widget will emit a single &lt;code&gt;clicked()&lt;/code&gt; signal whose argument is the text of the button the user clicked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a479dfe6d98746285a57b91c81adb2ec784d903" translate="yes" xml:space="preserve">
          <source>A list of the JavaScript objects, functions and properties supported by the QML engine can be found in the &lt;a href=&quot;qtqml-javascript-functionlist#&quot;&gt;List of JavaScript Objects and Functions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7fc239009cb6e92a15be51bee0cdbb03d731af1" translate="yes" xml:space="preserve">
          <source>A list of the supported file formats are available through the &lt;a href=&quot;qimagereader#supportedImageFormats&quot;&gt;QImageReader::supportedImageFormats&lt;/a&gt;() and &lt;a href=&quot;qimagewriter#supportedImageFormats&quot;&gt;QImageWriter::supportedImageFormats&lt;/a&gt;() functions. Qt supports several file formats by default, and in addition new formats can be added as plugins. The currently supported formats are listed in the &lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt; and &lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt; class documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="987cf4dfbe3d7127ca750a38ad11e4bcd4e7b740" translate="yes" xml:space="preserve">
          <source>A list of transport objects, which implement &lt;a href=&quot;qwebchannelabstracttransport&quot;&gt;QWebChannelAbstractTransport&lt;/a&gt;. The transports are used to talk to the remote clients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca74d3d00d87e6ac3ddb64e3af13d2a4c90e53e2" translate="yes" xml:space="preserve">
          <source>A list of url, &lt;a href=&quot;qicon#Mode-enum&quot;&gt;QIcon::Mode&lt;/a&gt; and &lt;a href=&quot;qicon#State-enum&quot;&gt;QIcon::State&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea994191321d7fc4894420db973ce3d949166eb0" translate="yes" xml:space="preserve">
          <source>A list of waypoints</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcefa148c5c2e300314894697a45ecf9855fed4c" translate="yes" xml:space="preserve">
          <source>A list value can be accessed in a similar way to a JavaScript array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c06afe26a1e78eb2adb78c31e1569a913fcf53f" translate="yes" xml:space="preserve">
          <source>A local directory of QML files can be imported without any additional setup or configuration. A remote directory of QML files can also be imported, but requires a directory listing &lt;code&gt;qmldir&lt;/code&gt; file to exist. A local directory may optionally contain a directory listing &lt;code&gt;qmldir&lt;/code&gt; file in order to define the type names which should be provided to clients which import the directory, and to specify JavaScript resources which should be made available to importers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eee3e7d7c92373547884e444d55f0d1d535badce" translate="yes" xml:space="preserve">
          <source>A local file system directory may optionally include a &lt;code&gt;qmldir&lt;/code&gt; file. This allows the engine to only expose certain QML types to clients who import the directory. Additionally, JavaScript resources in the directory are not exposed to clients unless they are declared in a &lt;code&gt;qmldir&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a235d33a5d7482bc6630f7ca97621ebacc3b753d" translate="yes" xml:space="preserve">
          <source>A local name can never be an empty string, although the prefix and namespace URI can. If the prefix is not empty, the namespace URI cannot be empty. Local names and prefixes must be valid &lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/#NT-NCName&quot;&gt;NCNames&lt;/a&gt;, e.g.,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a5adf4c085a2aef06f42da3421d287ab835021" translate="yes" xml:space="preserve">
          <source>A locale is supported if it is included in the list of &lt;a href=&quot;qml-qtquick-virtualkeyboard-settings-virtualkeyboardsettings#availableLocales-prop&quot;&gt;availableLocales&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75c0e2b66fef35d282a72b8219bd5be93d863e91" translate="yes" xml:space="preserve">
          <source>A location-based services plugin provides data including geocoding translation results which are exposed to clients via a &lt;a href=&quot;qml-qtlocation-geocodemodel&quot;&gt;GeocodeModel&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="814a5b219d9d4e3f6342c97e4a1eb9a2c803f1ff" translate="yes" xml:space="preserve">
          <source>A location-based services plugin provides data including map data which is then displayed in a Map object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7ebaeef9d6ddefc75a8d19a4adb8dfb3549acf2" translate="yes" xml:space="preserve">
          <source>A lock file can be used to prevent multiple processes from accessing concurrently the same resource. For instance, a configuration file on disk, or a socket, a port, a region of shared memory...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da10c1cfa8dbc61cfc03c9d6274cf6d7c98bb1fa" translate="yes" xml:space="preserve">
          <source>A logarithmic scale is a nonlinear scale that is based on orders of magnitude, so that each tick mark on the axis is the previous tick mark multiplied by a value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9a0fc90e41fde7ed718344c80878ff0a9f85617" translate="yes" xml:space="preserve">
          <source>A logging category can be passed to console.log() and friends as the first argument. If supplied to to the logger the &lt;a href=&quot;qml-qtqml-loggingcategory&quot;&gt;LoggingCategory&lt;/a&gt;'s name will be used as Logging Category otherwise the default logging category will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d13126a61b029b780ef90958f345b5f6ed8ac84c" translate="yes" xml:space="preserve">
          <source>A long as there is a media service which provides radio functionality, then the &lt;a href=&quot;qmultimedia#AvailabilityStatus-enum&quot;&gt;availability&lt;/a&gt; will be that of the &lt;a href=&quot;qradiotuner#availability&quot;&gt;radio tuner&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1e49d7f30718f019fcef684556eb8905ebebbdb" translate="yes" xml:space="preserve">
          <source>A longer description of the widget for users of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7346a8bdfcd60f593277bead1a736c157cb844f2" translate="yes" xml:space="preserve">
          <source>A longer text giving information about how to use the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65eb54f3c81f74db7dc3accfa99ff328f04b2e91" translate="yes" xml:space="preserve">
          <source>A loop count of of 0 means that the timeline will loop forever.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddfcfeb83d0d3bea13e003fd45667b3f508b1b64" translate="yes" xml:space="preserve">
          <source>A loudspeaker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1f994e329fd18f0caeef6e11e6b57cec8488a26" translate="yes" xml:space="preserve">
          <source>A low-level API for extending Qt applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="710a5c168ca3874db89cbf7fc405d55a716326ed" translate="yes" xml:space="preserve">
          <source>A lower value results in a more transparent trace: &lt;code&gt;0.0&lt;/code&gt; is fully transparent, and &lt;code&gt;1.0&lt;/code&gt; is fully opaque.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc34c974e121e4e9ee129c3668e19b7b2a0d47f" translate="yes" xml:space="preserve">
          <source>A macro can also take up to seven parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b046ebbd3d018c754f68205af5546f2531139a64" translate="yes" xml:space="preserve">
          <source>A macro that defines a match pattern outputs all capture groups (parentheses) concatenated together, or the exact matched string if the pattern does not contain any capture groups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f19482d256b837f9123e3a7037ccdb3eddfc684" translate="yes" xml:space="preserve">
          <source>A macro variable can be restricted for use in one type of output generation. By appending &lt;code&gt;.HTML&lt;/code&gt; to the macro name, for example, the macro is only used when generating HTML output. By appending &lt;code&gt;.DITAXML&lt;/code&gt; to the macro name, the macro is only used when generating DITA XML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5125fe2a3f1c703470d0686d64311b31e9ce39cb" translate="yes" xml:space="preserve">
          <source>A main window provides a framework for building an application's user interface. Qt has &lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow&lt;/a&gt; and its &lt;a href=&quot;widget-classes#main-window-and-related-classes&quot;&gt;related classes&lt;/a&gt; for main window management. &lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow&lt;/a&gt; has its own layout to which you can add &lt;a href=&quot;qtoolbar&quot;&gt;QToolBar&lt;/a&gt;s, &lt;a href=&quot;qdockwidget&quot;&gt;QDockWidget&lt;/a&gt;s, a &lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt;, and a &lt;a href=&quot;qstatusbar&quot;&gt;QStatusBar&lt;/a&gt;. The layout has a center area that can be occupied by any kind of widget. You can see an image of the layout below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1be83eb68e10df25b665ab98d31d478bd276ffa5" translate="yes" xml:space="preserve">
          <source>A map of key-value pairs with &lt;a href=&quot;qtqml-typesystem-basictypes#&quot;&gt;basic-type&lt;/a&gt; values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1d38f78fccc8ec12417f0579e92e45f87c493cc" translate="yes" xml:space="preserve">
          <source>A map of some useful paths from &lt;a href=&quot;https://doc.qt.io/qt-5.13/whatsnew50.html#qstandardpaths&quot;&gt;QStandardPaths&lt;/a&gt; to their URLs. Each path is verified to exist on the user's computer before being added to this list, at the time when the &lt;a href=&quot;qml-qtquick-dialogs-filedialog&quot;&gt;FileDialog&lt;/a&gt; is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c8c60eab1919cb6ef77fcf3a9788bbdc94d577" translate="yes" xml:space="preserve">
          <source>A mask for extracting the window type part of the window flags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50573e4a8f57d5e686c5339818972211ed308580" translate="yes" xml:space="preserve">
          <source>A matrix of sample points is used to measure exposure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="820c696d37a6e0ec2f9e7cf7c0fc85c5e12cd627" translate="yes" xml:space="preserve">
          <source>A matrix specifies how to translate, scale, shear or rotate the coordinate system, and is typically used when rendering graphics. &lt;a href=&quot;qmatrix&quot;&gt;QMatrix&lt;/a&gt;, in contrast to &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt;, does not allow perspective transformations. &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt; is the recommended transformation class in Qt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e5837a24051ad1b794e181925f0f7083f8f19d" translate="yes" xml:space="preserve">
          <source>A media resource couldn't be resolved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae13181d03ef4fa4ebfa3d8bfdebcfc478f03b2d" translate="yes" xml:space="preserve">
          <source>A media resource is composed of a &lt;a href=&quot;qmediaresource#url&quot;&gt;URL&lt;/a&gt; containing the location of the resource and a set of properties that describe the format of the resource. The properties provide a means to assess a resource without first attempting to load it, and in situations where media be represented by multiple alternative representations provide a means to select the appropriate resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b932b67c78d29d47c1d29a0af82d0f65b0bdfe94" translate="yes" xml:space="preserve">
          <source>A media resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edfe20cf1b703e4a773d8d7a0502d1185ddc6167" translate="yes" xml:space="preserve">
          <source>A media service provider plug-in may implement one or more of &lt;a href=&quot;qmediaservicesupportedformatsinterface&quot;&gt;QMediaServiceSupportedFormatsInterface&lt;/a&gt;, &lt;a href=&quot;qmediaservicesupporteddevicesinterface&quot;&gt;QMediaServiceSupportedDevicesInterface&lt;/a&gt;, and &lt;a href=&quot;qmediaservicefeaturesinterface&quot;&gt;QMediaServiceFeaturesInterface&lt;/a&gt; to identify the features it supports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad543960a2ce4bcfe5d344479956f9b0e2fd9739" translate="yes" xml:space="preserve">
          <source>A medium dark theme with yellow as the base color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29735ac2d8141a360b99024e3f595b77e57593f7" translate="yes" xml:space="preserve">
          <source>A medium light theme with blue as the base color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc0c8b6b048d2c703384cff2034b6b2959846567" translate="yes" xml:space="preserve">
          <source>A medium light theme with brown as the base color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="297caeeaafed62f3f74a8aadd07a39e887335e78" translate="yes" xml:space="preserve">
          <source>A member function called &lt;code&gt;retranslateUi()&lt;/code&gt; that handles the translation of the string properties of the form. For more information, see &lt;a href=&quot;#reacting-to-language-changes&quot;&gt;Reacting to Language Changes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa57081291b8c203f4af762da99ce3c4ddc064ce" translate="yes" xml:space="preserve">
          <source>A member function called &lt;code&gt;setupUi()&lt;/code&gt; to build the widget tree on the parent widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66c3c51f8ca9003e0f420336b27fd9233bc0d183" translate="yes" xml:space="preserve">
          <source>A member variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d82f255abead2b80608b92eb03fb97ce9f055682" translate="yes" xml:space="preserve">
          <source>A menu bar consists of a list of pull-down menu items. You add menu items with &lt;a href=&quot;qmenubar#addMenu&quot;&gt;addMenu&lt;/a&gt;(). For example, asuming that &lt;code&gt;menubar&lt;/code&gt; is a pointer to a &lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt; and &lt;code&gt;fileMenu&lt;/code&gt; is a pointer to a &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt;, the following statement inserts the menu into the menu bar:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d093ad56e4b0ffb5f1305dcb9fca3dd7c23859" translate="yes" xml:space="preserve">
          <source>A menu bar from which menus are opened by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0149fa3debb24ee95720b46c4d95db07718c6dd2" translate="yes" xml:space="preserve">
          <source>A menu bar item can be highlighted by mouse hover or keyboard navigation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d84810fe94ad80db579979b77adbbec7182b3286" translate="yes" xml:space="preserve">
          <source>A menu bar item, like the buttons in a &lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f88cfb7de552acb67df7143ded1c68ac72b5b261" translate="yes" xml:space="preserve">
          <source>A menu bar, like &lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20998357cea8daa0b096a62d092fa585cefed5df" translate="yes" xml:space="preserve">
          <source>A menu consists of a list of action items. Actions are added with the &lt;a href=&quot;qmenu#addAction&quot;&gt;addAction&lt;/a&gt;(), &lt;a href=&quot;qwidget#addActions&quot;&gt;addActions&lt;/a&gt;() and &lt;a href=&quot;qwidget#insertAction&quot;&gt;insertAction&lt;/a&gt;() functions. An action is represented vertically and rendered by &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;. In addition, actions can have a text label, an optional icon drawn on the very left side, and shortcut key sequence such as &quot;Ctrl+X&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c2cfeed70680848d7d3071895823f7b5933bd5" translate="yes" xml:space="preserve">
          <source>A menu has been closed (Qt uses PopupMenuEnd for all menus).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e593c72b7d4750f294b52d89c75bb5820653090" translate="yes" xml:space="preserve">
          <source>A menu has been opened on the menubar (Qt uses PopupMenuStart for all menus).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd3ef3a6b94c08802f6cb375d9cf5f0910a3667" translate="yes" xml:space="preserve">
          <source>A menu item can be highlighted by mouse hover or keyboard navigation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca7b08095ac9ae3eae8a8723f2ef78075840503a" translate="yes" xml:space="preserve">
          <source>A menu item consists of an &lt;a href=&quot;https://doc.qt.io/qt-5.13/qml-qt-labs-platform-menuitem-obsolete.html#iconSource-prop&quot;&gt;icon&lt;/a&gt;, &lt;a href=&quot;qml-qt-labs-platform-menuitem#text-prop&quot;&gt;text&lt;/a&gt;, and &lt;a href=&quot;qml-qt-labs-platform-menuitem#shortcut-prop&quot;&gt;shortcut&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbf3894a19a3d39e082e47d4bd38be64119b8279" translate="yes" xml:space="preserve">
          <source>A menu item in a &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f615fa03933424502c72cf677835e388e89bdbbd" translate="yes" xml:space="preserve">
          <source>A menu item in a &lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41fc7dbc0484d28c8bf43978f42429d6e3b2674d" translate="yes" xml:space="preserve">
          <source>A menu item is triggered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e0abfd8be3320d13195667f23c8de0e170f8176" translate="yes" xml:space="preserve">
          <source>A menu item representing the tear off section of a &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34f613e7f2391962ea08ddec7c1ea72bdc93558d" translate="yes" xml:space="preserve">
          <source>A menu item that is the default action as specified with &lt;a href=&quot;qmenu#defaultAction&quot;&gt;QMenu::defaultAction&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dccabadeeab9f98a090b778cbc4543327c8d5fb" translate="yes" xml:space="preserve">
          <source>A menu item, like QMenuItem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90086d5de9f9481634ce812334740e875ad157e0" translate="yes" xml:space="preserve">
          <source>A menu separator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1acc1c3be3bb30ce7e003ece10d76228eb58af8" translate="yes" xml:space="preserve">
          <source>A menu which lists options that the user can select to perform an action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ee1c1dcec6aebd3b4427a7b0447abda6acdd75d" translate="yes" xml:space="preserve">
          <source>A menu widget is a selection menu. It can be either a pull-down menu in a menu bar or a standalone context menu. Pull-down menus are shown by the menu bar when the user clicks on the respective item or presses the specified shortcut key. Use &lt;a href=&quot;qmenubar#addMenu&quot;&gt;QMenuBar::addMenu&lt;/a&gt;() to insert a menu into a menu bar. Context menus are usually invoked by some special keyboard key or by right-clicking. They can be executed either asynchronously with &lt;a href=&quot;qmenu#popup&quot;&gt;popup&lt;/a&gt;() or synchronously with &lt;a href=&quot;qmenu#exec&quot;&gt;exec&lt;/a&gt;(). Menus can also be invoked in response to button presses; these are just like context menus except for how they are invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06b352b6a54e89c0633a078a9c114bae0ff7629a" translate="yes" xml:space="preserve">
          <source>A menu, like &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4ae5846e18625c4ecddbe315bd119013e228744" translate="yes" xml:space="preserve">
          <source>A menubar consists of a list of drop-down menus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f713136388f12549579bc2d0143b4180f07d53a" translate="yes" xml:space="preserve">
          <source>A message box displays a primary &lt;a href=&quot;qmessagebox#text-prop&quot;&gt;text&lt;/a&gt; to alert the user to a situation, an &lt;a href=&quot;qmessagebox#informativeText-prop&quot;&gt;informative text&lt;/a&gt; to further explain the alert or to ask the user a question, and an optional &lt;a href=&quot;qmessagebox#detailedText-prop&quot;&gt;detailed text&lt;/a&gt; to provide even more data if the user requests it. A message box can also display an &lt;a href=&quot;qmessagebox#icon-prop&quot;&gt;icon&lt;/a&gt; and &lt;a href=&quot;qmessagebox#standardButtons-prop&quot;&gt;standard buttons&lt;/a&gt; for accepting a user response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c30c227af5f0d8713e53c6603b366ba91b8dab58" translate="yes" xml:space="preserve">
          <source>A message dialog is used to inform the user, or ask the user a question. A message dialog displays a primary &lt;a href=&quot;qml-qt-labs-platform-messagedialog#text-prop&quot;&gt;text&lt;/a&gt; to alert the user to a situation, an &lt;a href=&quot;qml-qt-labs-platform-messagedialog#informativeText-prop&quot;&gt;informative text&lt;/a&gt; to further explain the alert or to ask the user a question, and an optional &lt;a href=&quot;qml-qt-labs-platform-messagedialog#detailedText-prop&quot;&gt;detailed text&lt;/a&gt; to provide even more data if the user requests it. A message box can also display a configurable set of &lt;a href=&quot;qml-qt-labs-platform-messagedialog#buttons-prop&quot;&gt;buttons&lt;/a&gt; for accepting a user response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f085c12693d8b8f2d8e9c8b8e921955b0958c4b" translate="yes" xml:space="preserve">
          <source>A message generated by the &lt;a href=&quot;qtglobal#qCritical&quot;&gt;qCritical&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23dcd6ac46dc19ae6bd4fe6be805df0737aa1cb7" translate="yes" xml:space="preserve">
          <source>A message generated by the &lt;a href=&quot;qtglobal#qDebug&quot;&gt;qDebug&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d60537463d6af0ac411ac1f8665f8e41bffd0161" translate="yes" xml:space="preserve">
          <source>A message generated by the &lt;a href=&quot;qtglobal#qFatal&quot;&gt;qFatal&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8793b3436db28e75bc94b045d39c3ecc75aceb8d" translate="yes" xml:space="preserve">
          <source>A message generated by the &lt;a href=&quot;qtglobal#qInfo&quot;&gt;qInfo&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0896f29230cd073d7981be598b43463f6f99928d" translate="yes" xml:space="preserve">
          <source>A message generated by the &lt;a href=&quot;qtglobal#qWarning&quot;&gt;qWarning&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcdb5e237c5e53c14ef30ab786cd1ffbe7b2fc0e" translate="yes" xml:space="preserve">
          <source>A meta-object contains information about a class that inherits &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;, e.g. class name, superclass name, properties, signals and slots. Every &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclass that contains the &lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT&lt;/a&gt; macro will have a meta-object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8061109ec476d532b91645a73171febe8d2e4dd" translate="yes" xml:space="preserve">
          <source>A meta-object contains information about a class that inherits &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;, e.g. class name, superclass name, properties, signals and slots. Every class that contains the &lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT&lt;/a&gt; macro will also have a meta-object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9decb3acff976c47be106f00ffcbfc9298dbe4fb" translate="yes" xml:space="preserve">
          <source>A method may be defined for a type in C++ by tagging a function of a class which is then registered with the QML type system with &lt;a href=&quot;qobject#Q_INVOKABLE&quot;&gt;Q_INVOKABLE&lt;/a&gt; or by registering it as a &lt;a href=&quot;qobject#Q_SLOT&quot;&gt;Q_SLOT&lt;/a&gt; of the class. Alternatively, a custom method can be added to an object declaration in a QML document with the following syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2c295208302480a053e9e2f0a3cdbc79aba2f66" translate="yes" xml:space="preserve">
          <source>A method of an object type is a function which may be called to perform some processing or trigger further events. A method can be connected to a signal so that it is automatically invoked whenever the signal is emitted. See &lt;a href=&quot;qtqml-syntax-signals#&quot;&gt;Signal and Handler Event System&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2a947001d50c2f1622f8782aaac1ada1b754045" translate="yes" xml:space="preserve">
          <source>A method that is a public Qt &lt;a href=&quot;signalsandslots&quot;&gt;slot&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb650c1aece9e6b2ead63e6f7ecaa9d5ffb5d73a" translate="yes" xml:space="preserve">
          <source>A microphone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f0cce3e3ba730556b965b0f9aa8e960c3a3681b" translate="yes" xml:space="preserve">
          <source>A mimetype can have multiple parents. For instance application/x-perl has two parents: application/x-executable and text/plain. This makes it possible to both execute perl scripts, and to open them in text editors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56be1329605e1d0c5a5336b4c5ebf2ab7d3aeffc" translate="yes" xml:space="preserve">
          <source>A minimal &lt;a href=&quot;qsgmaterial&quot;&gt;QSGMaterial&lt;/a&gt; implementation could look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="552cc9ea8cf61f90f8950cec2381fc0f85b1b147" translate="yes" xml:space="preserve">
          <source>A minimal C++ class declaration might read:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bfe298c35a8c591f09ae331b05cfe3f4e011480" translate="yes" xml:space="preserve">
          <source>A minimal example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ba4fc72b78c53776ab67d9e63592529c832fce" translate="yes" xml:space="preserve">
          <source>A minimum configuration file: &lt;a href=&quot;21-1-minimum-qdocconf#&quot;&gt;minimum.qdocconf&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a23857ffec4cb493b70650ffce695aaca682fda" translate="yes" xml:space="preserve">
          <source>A miscellaneous device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef0f67591ef2cf9948b02e2d7d9347533890a33e" translate="yes" xml:space="preserve">
          <source>A miter join corresponding to the definition of a miter join in the &lt;a href=&quot;http://www.w3.org/TR/SVGMobile12/&quot;&gt;SVG 1.2 Tiny&lt;/a&gt; specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="982a6856e61c21e023f702bc23d2c6729d7d9153" translate="yes" xml:space="preserve">
          <source>A modal dialog:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5602a05ec3f46d3f93b5661e086f31eb45bb3cf8" translate="yes" xml:space="preserve">
          <source>A modal widget is a special top-level widget which is a subclass of &lt;a href=&quot;qdialog&quot;&gt;QDialog&lt;/a&gt; that specifies the modal parameter of the constructor as true. A modal widget must be closed before the user can continue with other parts of the program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62f403c5c88938e5c60bb3414440e89c8aad51ab" translate="yes" xml:space="preserve">
          <source>A modal window is a window which has its &lt;a href=&quot;qwindow#modality-prop&quot;&gt;modality&lt;/a&gt; property set to &lt;a href=&quot;qt#WindowModality-enum&quot;&gt;Qt::WindowModal&lt;/a&gt; or &lt;a href=&quot;qt#WindowModality-enum&quot;&gt;Qt::ApplicationModal&lt;/a&gt;. A modal window must be closed before the user can continue with other parts of the program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d66e36b3be6eb1bb4f7643cec790464ba529e20" translate="yes" xml:space="preserve">
          <source>A modal window prevents other windows from getting any input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ac223e07e096b875ccedd9d7aa84151c3b62ee" translate="yes" xml:space="preserve">
          <source>A modal window prevents other windows from receiving input events. Possible values are Qt.NonModal (the default), Qt.WindowModal, and Qt.ApplicationModal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40bdc8d50422c1479e4a15a4d9b73012787a1c82" translate="yes" xml:space="preserve">
          <source>A modal window prevents other windows from receiving input events. Qt supports two types of modality: &lt;a href=&quot;qt#WindowModality-enum&quot;&gt;Qt::WindowModal&lt;/a&gt; and &lt;a href=&quot;qt#WindowModality-enum&quot;&gt;Qt::ApplicationModal&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c63352a143cab9b75de34576d86d33994d5a3d7" translate="yes" xml:space="preserve">
          <source>A mode where single pages in the preview is viewed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="835ca1d7139d7b2fdc769c7d4407951388560baa" translate="yes" xml:space="preserve">
          <source>A mode where the facing pages in the preview is viewed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c730025c9073180be4728f978e50c2b8e621bfff" translate="yes" xml:space="preserve">
          <source>A model (e.g. a &lt;a href=&quot;qml-qtqml-models-listmodel&quot;&gt;ListModel&lt;/a&gt; item, or a &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; subclass)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18a2d898816cd45e8a98efed2d1357faa3700aa2" translate="yes" xml:space="preserve">
          <source>A model (for example, a &lt;a href=&quot;qml-qtqml-models-listmodel&quot;&gt;ListModel&lt;/a&gt; item or a &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; subclass)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c294492c79bbbd42fc91173a96daff7d245d9f7" translate="yes" xml:space="preserve">
          <source>A model can be defined by subclassing &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt;. This is the best approach if you have a more complex model that cannot be supported by the other approaches. A &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; can also automatically notify a QML view when the model data changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8498c15f353b597f001052df30e1174355e7c650" translate="yes" xml:space="preserve">
          <source>A model holds data items and maintains their structure. The model is also responsible for retrieving the items from a data source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff3318dba83b6d2029eb067b85854d464b106169" translate="yes" xml:space="preserve">
          <source>A model may be a simple &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt;, which provides the contents of the list via the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af5837e591e4d9697c2bd84687fad5c0116c483b" translate="yes" xml:space="preserve">
          <source>A model may be a single &lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt;, which provides the contents of the list via the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebd7ef9408e4ab698f4b1e0308ac894cbe4d1019" translate="yes" xml:space="preserve">
          <source>A modeless dialog is a dialog that operates independently of other content around the dialog. When a modeless dialog is opened, the user is allowed to interact with both the dialog and the other content in the same window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae7d02c263ba6d487f806868810cc12dfc5c45b" translate="yes" xml:space="preserve">
          <source>A modeless dialog:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="135cf11aab439daf143f93f6c6dc2db61650bbb6" translate="yes" xml:space="preserve">
          <source>A modeless progress dialog is suitable for operations that take place in the background, where the user is able to interact with the application. Such operations are typically based on &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; (or &lt;a href=&quot;qobject#timerEvent&quot;&gt;QObject::timerEvent&lt;/a&gt;()) or &lt;a href=&quot;qsocketnotifier&quot;&gt;QSocketNotifier&lt;/a&gt;; or performed in a separate thread. A &lt;a href=&quot;qprogressbar&quot;&gt;QProgressBar&lt;/a&gt; in the status bar of your main window is often an alternative to a modeless progress dialog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d90d01d3662ad0481165d3e4acb1d16d268c925" translate="yes" xml:space="preserve">
          <source>A modified window is a window whose content has changed but has not been saved to disk. This flag will have different effects varied by the platform. On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; the close button will have a modified look; on other platforms, the window title will have an '*' (asterisk).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4190c9bab0d77bd96a91bcc3e1ac5e8a99583266" translate="yes" xml:space="preserve">
          <source>A monoblock device sitting at rest, face up on a desk will experience a force of approximately 9.8 on the Z axis (ie. towards the roof). This is the proper acceleration the device experiences relative to freefall.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b6e60ff4fa25477cfc6c5f95740857e25ccb8ad" translate="yes" xml:space="preserve">
          <source>A more complex example could look like the following. Here, the items are lying on the side before being rotated to an upright position:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64659faaed32cb056621f2f1066c1cfdc9b868a8" translate="yes" xml:space="preserve">
          <source>A more convenient approach is to use the &lt;a href=&quot;qmake-function-reference#files-pattern-recursive-false&quot;&gt;wildcard syntax&lt;/a&gt; to select several files at once:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e6bee710c7a3e720535ac6cb98e50e5cc22de2" translate="yes" xml:space="preserve">
          <source>A more detailed example can be found in the in &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtlocation-places-example.html#presenting-search-suggestions&quot;&gt;Places (QML)&lt;/a&gt; example.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
