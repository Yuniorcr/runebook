<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="f90f7dda50199d8c1590e76befd896512e0e7df4" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::QXmlStreamReader()</source>
          <target state="translated">QXmlStreamReader::QXmlStreamReader()</target>
        </trans-unit>
        <trans-unit id="7c49ccf87eec78c881f9b95096a48805d8df5222" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::QXmlStreamReader(&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</source>
          <target state="translated">QXmlStreamReader :: QXmlStreamReader（&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="3a666b08bfaad9392a89784bf556f454cdb40d1d" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::QXmlStreamReader(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">QXmlStreamReader :: QXmlStreamReader（const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="322fca4fbbc651610d24288cb6fe0ab98cd3c20f" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::QXmlStreamReader(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">QXmlStreamReader :: QXmlStreamReader（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="0f0e5fac490881afe050c550472fedd095c477d1" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::QXmlStreamReader(const char *</source>
          <target state="translated">QXmlStreamReader::QXmlStreamReader(const char *)</target>
        </trans-unit>
        <trans-unit id="fcba10bef7fdc15057ce030d52595ee395815f2e" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::ReadElementTextBehaviour (enum)</source>
          <target state="translated">QXmlStreamReader::ReadElementTextBehaviour (enum)</target>
        </trans-unit>
        <trans-unit id="66a04c0b85ec8704305869e446828d5085cefc5e" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::TokenType</source>
          <target state="translated">QXmlStreamReader::TokenType</target>
        </trans-unit>
        <trans-unit id="efcdcafcdd01a8e381818de11deda539d53d7475" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::TokenType (enum)</source>
          <target state="translated">QXmlStreamReader::TokenType (enum)</target>
        </trans-unit>
        <trans-unit id="77ab4c508575a80c2b4ac90f5bb666a1a8c5ad8d" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::addData()</source>
          <target state="translated">QXmlStreamReader::addData()</target>
        </trans-unit>
        <trans-unit id="5686bfd0f361c8d9ff2c8f82a611dc40e31ef143" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::addExtraNamespaceDeclaration()</source>
          <target state="translated">QXmlStreamReader::addExtraNamespaceDeclaration()</target>
        </trans-unit>
        <trans-unit id="06c11306bac9613bf1aa4ffc851614702c64cda5" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::addExtraNamespaceDeclarations()</source>
          <target state="translated">QXmlStreamReader::addExtraNamespaceDeclarations()</target>
        </trans-unit>
        <trans-unit id="0e1f89212fb88630617fc03df64538cfee31dbde" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::atEnd()</source>
          <target state="translated">QXmlStreamReader::atEnd()</target>
        </trans-unit>
        <trans-unit id="681b44eabebe95ff20725475bdf7ebc85281f92a" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::attributes()</source>
          <target state="translated">QXmlStreamReader::attributes()</target>
        </trans-unit>
        <trans-unit id="45116c1007de5db61f7905963642ba0766fa7e40" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::characterOffset()</source>
          <target state="translated">QXmlStreamReader::characterOffset()</target>
        </trans-unit>
        <trans-unit id="ba7d80522942c390446032ee4926a864a60fbf26" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::clear()</source>
          <target state="translated">QXmlStreamReader::clear()</target>
        </trans-unit>
        <trans-unit id="1c0381ada0ff45d9e8678e4b11f718248ba9579b" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::columnNumber()</source>
          <target state="translated">QXmlStreamReader::columnNumber()</target>
        </trans-unit>
        <trans-unit id="3c93f4ffab96de1a08d2e136ab3b25d8e46a2356" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::device()</source>
          <target state="translated">QXmlStreamReader::device()</target>
        </trans-unit>
        <trans-unit id="32e2a6737be508ccfd11bb8421c5b026988726ff" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::documentEncoding()</source>
          <target state="translated">QXmlStreamReader::documentEncoding()</target>
        </trans-unit>
        <trans-unit id="d9cd908a64f95db43d6919ac90c1b0f737e2319b" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::documentVersion()</source>
          <target state="translated">QXmlStreamReader::documentVersion()</target>
        </trans-unit>
        <trans-unit id="ca8ae27bc7860bf9c21c7285abceb8e0b4deb9fc" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::dtdName()</source>
          <target state="translated">QXmlStreamReader::dtdName()</target>
        </trans-unit>
        <trans-unit id="2fbf2ca9c7c2e5fd025aaf52da30bafb9b6854ab" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::dtdPublicId()</source>
          <target state="translated">QXmlStreamReader::dtdPublicId()</target>
        </trans-unit>
        <trans-unit id="a25d9f1dae5f805f853a395ae32e3bbb96459174" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::dtdSystemId()</source>
          <target state="translated">QXmlStreamReader::dtdSystemId()</target>
        </trans-unit>
        <trans-unit id="ee9c3f6147320888e1dea59cca3243f80b6a9d20" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::entityDeclarations()</source>
          <target state="translated">QXmlStreamReader::entityDeclarations()</target>
        </trans-unit>
        <trans-unit id="b09dbe9bf66b42918d1576bf5b5e1b7218ea3db0" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::entityResolver()</source>
          <target state="translated">QXmlStreamReader::entityResolver()</target>
        </trans-unit>
        <trans-unit id="0e5da6880883dbcca3d733cec4f58f2453a0b453" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::error()</source>
          <target state="translated">QXmlStreamReader::error()</target>
        </trans-unit>
        <trans-unit id="58ebb7e223cc52446b62fc072dd68ee350e60b3a" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::errorString()</source>
          <target state="translated">QXmlStreamReader::errorString()</target>
        </trans-unit>
        <trans-unit id="deb788c7000bea76c84f8bb7ec7f43f3f461929f" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::hasError()</source>
          <target state="translated">QXmlStreamReader::hasError()</target>
        </trans-unit>
        <trans-unit id="7bc556ea14b3d49d70df3ff0f9ef7d737b91b465" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::isCDATA()</source>
          <target state="translated">QXmlStreamReader::isCDATA()</target>
        </trans-unit>
        <trans-unit id="01c28de857561cdf753707d6d2716af1d1a84f59" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::isCharacters()</source>
          <target state="translated">QXmlStreamReader::isCharacters()</target>
        </trans-unit>
        <trans-unit id="c786c52021fff4143ac5dabeffb73c7e4f7e8cd1" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::isComment()</source>
          <target state="translated">QXmlStreamReader::isComment()</target>
        </trans-unit>
        <trans-unit id="5b7acc86742bca0c0c3a77ae02bb6a48f5f5f8aa" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::isDTD()</source>
          <target state="translated">QXmlStreamReader::isDTD()</target>
        </trans-unit>
        <trans-unit id="2f9738bdd116b3206e972a164984b1453129c1ae" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::isEndDocument()</source>
          <target state="translated">QXmlStreamReader::isEndDocument()</target>
        </trans-unit>
        <trans-unit id="cc58bb987ad777c454e21b441b98fb949b2a9dd9" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::isEndElement()</source>
          <target state="translated">QXmlStreamReader::isEndElement()</target>
        </trans-unit>
        <trans-unit id="2ccf7c2825ef6448ffb7e63c03ccae5494ed5598" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::isEntityReference()</source>
          <target state="translated">QXmlStreamReader::isEntityReference()</target>
        </trans-unit>
        <trans-unit id="f9cc91026a2d30d29e6cabf9a10fc1355927830a" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::isProcessingInstruction()</source>
          <target state="translated">QXmlStreamReader::isProcessingInstruction()</target>
        </trans-unit>
        <trans-unit id="34997c97af4c08114a762ed32f21e92841568387" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::isStandaloneDocument()</source>
          <target state="translated">QXmlStreamReader::isStandaloneDocument()</target>
        </trans-unit>
        <trans-unit id="a298b14d35677a7724833a7565cefc12c4b3682a" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::isStartDocument()</source>
          <target state="translated">QXmlStreamReader::isStartDocument()</target>
        </trans-unit>
        <trans-unit id="765d8b9b25e4ec39fa0890c026db14a3fe50bbf9" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::isStartElement()</source>
          <target state="translated">QXmlStreamReader::isStartElement()</target>
        </trans-unit>
        <trans-unit id="71230c8f3ac82f31dfe07c322f97ec1d25a9f4ea" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::isWhitespace()</source>
          <target state="translated">QXmlStreamReader::isWhitespace()</target>
        </trans-unit>
        <trans-unit id="424f0bbccc8ff1f99ba15174ecc8525fe0f4a99e" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::lineNumber()</source>
          <target state="translated">QXmlStreamReader::lineNumber()</target>
        </trans-unit>
        <trans-unit id="552b40fb1c501a2c44196c807ec5787b5fc2a1da" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::name()</source>
          <target state="translated">QXmlStreamReader::name()</target>
        </trans-unit>
        <trans-unit id="3e5960ea63d5c47b06ae684edf5243cb16adbd30" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::namespaceDeclarations()</source>
          <target state="translated">QXmlStreamReader::namespaceDeclarations()</target>
        </trans-unit>
        <trans-unit id="a6aef954992f5f40578d9fff2b8e45e09f184245" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::namespaceProcessing</source>
          <target state="translated">QXmlStreamReader::namespaceProcessing</target>
        </trans-unit>
        <trans-unit id="458e04e4c3a5837113152ea965bcb3fbf0fcadb2" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::namespaceUri()</source>
          <target state="translated">QXmlStreamReader::namespaceUri()</target>
        </trans-unit>
        <trans-unit id="e736f73108bc2b834ce60b39009087b8e7ba9359" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::notationDeclarations()</source>
          <target state="translated">QXmlStreamReader::notationDeclarations()</target>
        </trans-unit>
        <trans-unit id="92369820819111241a98d6e973ed2b28109bae3d" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::prefix()</source>
          <target state="translated">QXmlStreamReader::prefix()</target>
        </trans-unit>
        <trans-unit id="851cff8949449f04bbf53a2f8b68e2645fb2e27d" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::processingInstructionData()</source>
          <target state="translated">QXmlStreamReader::processingInstructionData()</target>
        </trans-unit>
        <trans-unit id="ee0bac6f4bcfd941904c3da58a8d3453fabbbd45" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::processingInstructionTarget()</source>
          <target state="translated">QXmlStreamReader::processingInstructionTarget()</target>
        </trans-unit>
        <trans-unit id="2c0877d7880b4f571b89ec3839d6ef4f12ff6c3e" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::qualifiedName()</source>
          <target state="translated">QXmlStreamReader::qualifiedName()</target>
        </trans-unit>
        <trans-unit id="404a60f292c4a067c0f23a2648ba19943162f4c7" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::raiseError()</source>
          <target state="translated">QXmlStreamReader::raiseError()</target>
        </trans-unit>
        <trans-unit id="2f535413c9fb3438a3c4210ae703412774d25ca8" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::readElementText()</source>
          <target state="translated">QXmlStreamReader::readElementText()</target>
        </trans-unit>
        <trans-unit id="dbf216ba6aeb16599bc3e41dd8c4902308dc8eb8" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::readNext()</source>
          <target state="translated">QXmlStreamReader::readNext()</target>
        </trans-unit>
        <trans-unit id="c1839b6cc51d9067c42abcdba60d4893f138d227" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::readNextStartElement()</source>
          <target state="translated">QXmlStreamReader::readNextStartElement()</target>
        </trans-unit>
        <trans-unit id="f0eaf36f6fed4eeb02b0b084e1c02e56581512f3" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::setDevice()</source>
          <target state="translated">QXmlStreamReader::setDevice()</target>
        </trans-unit>
        <trans-unit id="bb1048440bd9eec9e871cc2bd2c2ac8875febeaf" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::setEntityResolver()</source>
          <target state="translated">QXmlStreamReader::setEntityResolver()</target>
        </trans-unit>
        <trans-unit id="628655306809d4c5ecd5e0874b601402a37c9308" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::skipCurrentElement()</source>
          <target state="translated">QXmlStreamReader::skipCurrentElement()</target>
        </trans-unit>
        <trans-unit id="e5250426f358d1198494daf778ec5358831acccf" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::text()</source>
          <target state="translated">QXmlStreamReader::text()</target>
        </trans-unit>
        <trans-unit id="e6ab558bd34b8cbd0fc406b942d8dac9244099d4" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::tokenString()</source>
          <target state="translated">QXmlStreamReader::tokenString()</target>
        </trans-unit>
        <trans-unit id="1e821de837e3d6b067f444ff8183f5dd7e03db3b" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::tokenType()</source>
          <target state="translated">QXmlStreamReader::tokenType()</target>
        </trans-unit>
        <trans-unit id="a9fe0f757791612df6637cac23c33af71d82451a" translate="yes" xml:space="preserve">
          <source>QXmlStreamReader::~QXmlStreamReader()</source>
          <target state="translated">QXmlStreamReader::~QXmlStreamReader()</target>
        </trans-unit>
        <trans-unit id="9c258bcbaecee863ec0a6e4447d24984b98a29cd" translate="yes" xml:space="preserve">
          <source>QXmlStreamWriter</source>
          <target state="translated">QXmlStreamWriter</target>
        </trans-unit>
        <trans-unit id="bb6a75f99dddec6eafa00929a5e72c6ae71d6f65" translate="yes" xml:space="preserve">
          <source>QXmlStreamWriter (class)</source>
          <target state="translated">キューエックスエムエルストリームライター</target>
        </trans-unit>
        <trans-unit id="04bd60281fc97a7aeef44fad78c3fea825a3c094" translate="yes" xml:space="preserve">
          <source>QXmlStreamWriter Class</source>
          <target state="translated">QXmlStreamWriter クラス</target>
        </trans-unit>
        <trans-unit id="c65d8712307c2543344d85ca38d6870ec8bfcdad" translate="yes" xml:space="preserve">
          <source>QXmlStreamWriter::QXmlStreamWriter()</source>
          <target state="translated">QXmlStreamWriter::QXmlStreamWriter()</target>
        </trans-unit>
        <trans-unit id="5512820e6260ee4560eeaa6df6cd2851b909a80e" translate="yes" xml:space="preserve">
          <source>QXmlStreamWriter::QXmlStreamWriter(&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; *</source>
          <target state="translated">QXmlStreamWriter :: QXmlStreamWriter（&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="aada2b00300193841d6da833d89b41a00a270083" translate="yes" xml:space="preserve">
          <source>QXmlStreamWriter::QXmlStreamWriter(&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</source>
          <target state="translated">QXmlStreamWriter :: QXmlStreamWriter（&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="a1c883f1464711246dfa24db0b09b7b1d3788c0a" translate="yes" xml:space="preserve">
          <source>QXmlStreamWriter::QXmlStreamWriter(&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; *</source>
          <target state="translated">QXmlStreamWriter :: QXmlStreamWriter（&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="df508dfd73db4be2a987f6cefdd428db9f6e58e7" translate="yes" xml:space="preserve">
          <source>QXmlStreamWriter::autoFormatting</source>
          <target state="translated">QXmlStreamWriter::autoFormatting</target>
        </trans-unit>
        <trans-unit id="12edf3040ad96cab3310e7f2efba9b66221c58f9" translate="yes" xml:space="preserve">
          <source>QXmlStreamWriter::autoFormatting()</source>
          <target state="translated">QXmlStreamWriter::autoFormatting()</target>
        </trans-unit>
        <trans-unit id="42951475cba77fcb97aaa3bcdb0c1332646b6918" translate="yes" xml:space="preserve">
          <source>QXmlStreamWriter::autoFormattingIndent</source>
          <target state="translated">QXmlStreamWriter::autoFormattingIndent</target>
        </trans-unit>
        <trans-unit id="8acd197a4d4e2887492d1c3ef20eb0ab1cb89772" translate="yes" xml:space="preserve">
          <source>QXmlStreamWriter::codec()</source>
          <target state="translated">QXmlStreamWriter::codec()</target>
        </trans-unit>
        <trans-unit id="5f532454a5947417e696b5ca1865aa47d9288bdb" translate="yes" xml:space="preserve">
          <source>QXmlStreamWriter::device()</source>
          <target state="translated">QXmlStreamWriter::device()</target>
        </trans-unit>
        <trans-unit id="57bb5b0669b7995b4cf86807beb5dc9d03f2c353" translate="yes" xml:space="preserve">
          <source>QXmlStreamWriter::hasError()</source>
          <target state="translated">QXmlStreamWriter::hasError()</target>
        </trans-unit>
        <trans-unit id="34d89e09164aea5c0e2c3aa7b2a1d94486c940f7" translate="yes" xml:space="preserve">
          <source>QXmlStreamWriter::setAutoFormatting()</source>
          <target state="translated">QXmlStreamWriter::setAutoFormatting()</target>
        </trans-unit>
        <trans-unit id="08648af993926417871e2f964b1f5cd970290811" translate="yes" xml:space="preserve">
          <source>QXmlStreamWriter::setCodec()</source>
          <target state="translated">QXmlStreamWriter::setCodec()</target>
        </trans-unit>
        <trans-unit id="bef9f8835a787bed50e9c1d7d9f81aec631bb7f4" translate="yes" xml:space="preserve">
          <source>QXmlStreamWriter::setDevice()</source>
          <target state="translated">QXmlStreamWriter::setDevice()</target>
        </trans-unit>
        <trans-unit id="d61f94c8562f2a38800c34399ba26ddaf79fe48b" translate="yes" xml:space="preserve">
          <source>QXmlStreamWriter::writeAttribute()</source>
          <target state="translated">QXmlStreamWriter::writeAttribute()</target>
        </trans-unit>
        <trans-unit id="f6594e3c26de6d7a22ee2fb50127a56d311f8525" translate="yes" xml:space="preserve">
          <source>QXmlStreamWriter::writeAttributes()</source>
          <target state="translated">QXmlStreamWriter::writeAttributes()</target>
        </trans-unit>
        <trans-unit id="3458ff317f9ae16c97060a79098ee1405e3c85af" translate="yes" xml:space="preserve">
          <source>QXmlStreamWriter::writeCDATA()</source>
          <target state="translated">QXmlStreamWriter::writeCDATA()</target>
        </trans-unit>
        <trans-unit id="a9da537c99f372ea5e2862335ebb81473d974f44" translate="yes" xml:space="preserve">
          <source>QXmlStreamWriter::writeCharacters()</source>
          <target state="translated">QXmlStreamWriter::writeCharacters()</target>
        </trans-unit>
        <trans-unit id="0e74e9e0091bff09d6cb2223b750f9b5f740d5ce" translate="yes" xml:space="preserve">
          <source>QXmlStreamWriter::writeComment()</source>
          <target state="translated">QXmlStreamWriter::writeComment()</target>
        </trans-unit>
        <trans-unit id="8ab80cb120fd3797989f145c83a5447db866998e" translate="yes" xml:space="preserve">
          <source>QXmlStreamWriter::writeCurrentToken()</source>
          <target state="translated">QXmlStreamWriter::writeCurrentToken()</target>
        </trans-unit>
        <trans-unit id="b6575ecd07d6ab4b26f02d24173c208440773133" translate="yes" xml:space="preserve">
          <source>QXmlStreamWriter::writeDTD()</source>
          <target state="translated">QXmlStreamWriter::writeDTD()</target>
        </trans-unit>
        <trans-unit id="d1cc7ab1560523e18f2b58505f5426f82667dab2" translate="yes" xml:space="preserve">
          <source>QXmlStreamWriter::writeDefaultNamespace()</source>
          <target state="translated">QXmlStreamWriter::writeDefaultNamespace()</target>
        </trans-unit>
        <trans-unit id="49e20d075715c37cbd5f8fb00c73d93d12cf44cb" translate="yes" xml:space="preserve">
          <source>QXmlStreamWriter::writeEmptyElement()</source>
          <target state="translated">QXmlStreamWriter::writeEmptyElement()</target>
        </trans-unit>
        <trans-unit id="5f75e26bdb2535e2d74ea9f7fe7cfeeca233de96" translate="yes" xml:space="preserve">
          <source>QXmlStreamWriter::writeEndDocument()</source>
          <target state="translated">QXmlStreamWriter::writeEndDocument()</target>
        </trans-unit>
        <trans-unit id="5f621202adfb666f956c35d32033b67b59ceacc3" translate="yes" xml:space="preserve">
          <source>QXmlStreamWriter::writeEndElement()</source>
          <target state="translated">QXmlStreamWriter::writeEndElement()</target>
        </trans-unit>
        <trans-unit id="96285325e6ac39ebd33cbf767d4dcd3a33c9b359" translate="yes" xml:space="preserve">
          <source>QXmlStreamWriter::writeEntityReference()</source>
          <target state="translated">QXmlStreamWriter::writeEntityReference()</target>
        </trans-unit>
        <trans-unit id="dcae5c51af7f38198c145c40f4439a20b8dbcd86" translate="yes" xml:space="preserve">
          <source>QXmlStreamWriter::writeNamespace()</source>
          <target state="translated">QXmlStreamWriter::writeNamespace()</target>
        </trans-unit>
        <trans-unit id="9b06dcc85bd0c0b7ffc5a63f4c77854ef6a3151c" translate="yes" xml:space="preserve">
          <source>QXmlStreamWriter::writeProcessingInstruction()</source>
          <target state="translated">QXmlStreamWriter::writeProcessingInstruction()</target>
        </trans-unit>
        <trans-unit id="d9ab884268de5bf951143041042b1f6be5112860" translate="yes" xml:space="preserve">
          <source>QXmlStreamWriter::writeStartDocument()</source>
          <target state="translated">QXmlStreamWriter::writeStartDocument()</target>
        </trans-unit>
        <trans-unit id="5ebb19d5c588ba8dd98f23c7c598c9a3c6633d59" translate="yes" xml:space="preserve">
          <source>QXmlStreamWriter::writeStartElement()</source>
          <target state="translated">QXmlStreamWriter::writeStartElement()</target>
        </trans-unit>
        <trans-unit id="4d392a93e4b4254e6cdba12892fc4b456c1fe29b" translate="yes" xml:space="preserve">
          <source>QXmlStreamWriter::writeTextElement()</source>
          <target state="translated">QXmlStreamWriter::writeTextElement()</target>
        </trans-unit>
        <trans-unit id="0881b96a927743dfb62808dfdee532d12d2374cd" translate="yes" xml:space="preserve">
          <source>QXmlStreamWriter::~QXmlStreamWriter()</source>
          <target state="translated">QXmlStreamWriter::~QXmlStreamWriter()</target>
        </trans-unit>
        <trans-unit id="cf2f71751736e6fc189da8058e4a4fce0f2b8b22" translate="yes" xml:space="preserve">
          <source>Q_ASSERT()</source>
          <target state="translated">Q_ASSERT()</target>
        </trans-unit>
        <trans-unit id="dabcd0d397e23b2aa2e7fc564b523fe5cd864c5c" translate="yes" xml:space="preserve">
          <source>Q_ASSERT() is useful for testing pre- and post-conditions during development. It does nothing if &lt;code&gt;QT_NO_DEBUG&lt;/code&gt; was defined during compilation.</source>
          <target state="translated">Q_ASSERT（）は、開発中の事前条件と事後条件のテストに役立ちます。コンパイル中に &lt;code&gt;QT_NO_DEBUG&lt;/code&gt; が定義されている場合は何もしません。</target>
        </trans-unit>
        <trans-unit id="8c1a95b2ef53dc1a00e31c34c07e06a5369a897e" translate="yes" xml:space="preserve">
          <source>Q_ASSERT_X is useful for testing pre- and post-conditions during development. It does nothing if &lt;code&gt;QT_NO_DEBUG&lt;/code&gt; was defined during compilation.</source>
          <target state="translated">Q_ASSERT_Xは、開発中の事前条件と事後条件のテストに役立ちます。コンパイル中に &lt;code&gt;QT_NO_DEBUG&lt;/code&gt; が定義されている場合は何もしません。</target>
        </trans-unit>
        <trans-unit id="a88e79bfaaca7018409213204dd414f6b513bcb9" translate="yes" xml:space="preserve">
          <source>Q_ASSERT_X()</source>
          <target state="translated">Q_ASSERT_X()</target>
        </trans-unit>
        <trans-unit id="981bfb71bc6f658109d5c27251956f1eaa8441fc" translate="yes" xml:space="preserve">
          <source>Q_ASSUME()</source>
          <target state="translated">Q_ASSUME()</target>
        </trans-unit>
        <trans-unit id="6ebbf5c46315d86ca18e44b86d0d36baade7416c" translate="yes" xml:space="preserve">
          <source>Q_ATOMIC_INT</source>
          <target state="translated">Q_ATOMIC_INT</target>
        </trans-unit>
        <trans-unit id="d3c816b09ae7b79bf2fee181bea0f9a69c6e3677" translate="yes" xml:space="preserve">
          <source>Q_ATOMIC_POINTER_FETCH_AND_ADD_IS_ALWAYS_NATIVE</source>
          <target state="translated">Q_ATOMIC_POINTER_FETCH_AND_ADD_IS_ALWAYS_NATIVE</target>
        </trans-unit>
        <trans-unit id="97daa624f02ed32ff23ac09a6f1a29f76714d50e" translate="yes" xml:space="preserve">
          <source>Q_ATOMIC_POINTER_FETCH_AND_ADD_IS_NOT_NATIVE</source>
          <target state="translated">Q_ATOMIC_POINTER_FETCH_AND_ADD_IS_NOT_NATIVE</target>
        </trans-unit>
        <trans-unit id="91a06dd71cb76c6f07048d275e0dad3509fb49c9" translate="yes" xml:space="preserve">
          <source>Q_ATOMIC_POINTER_FETCH_AND_ADD_IS_SOMETIMES_NATIVE</source>
          <target state="translated">Q_ATOMIC_POINTER_FETCH_AND_ADD_IS_SOMETIMES_NATIVE</target>
        </trans-unit>
        <trans-unit id="b2a5bde7735c9f034ac2bf5f70e0977dd966cdfb" translate="yes" xml:space="preserve">
          <source>Q_ATOMIC_POINTER_FETCH_AND_ADD_IS_WAIT_FREE</source>
          <target state="translated">Q_ATOMIC_POINTER_FETCH_AND_ADD_IS_WAIT_FREE</target>
        </trans-unit>
        <trans-unit id="339b692773f59abbb1e099f2ff13f331d2c7625d" translate="yes" xml:space="preserve">
          <source>Q_ATOMIC_POINTER_FETCH_AND_STORE_IS_ALWAYS_NATIVE</source>
          <target state="translated">Q_ATOMIC_POINTER_FETCH_AND_STORE_IS_ALWAYS_NATIVE</target>
        </trans-unit>
        <trans-unit id="2fe32cec0f8613b0d1931c3e011ce29584d18b4b" translate="yes" xml:space="preserve">
          <source>Q_ATOMIC_POINTER_FETCH_AND_STORE_IS_NOT_NATIVE</source>
          <target state="translated">Q_ATOMIC_POINTER_FETCH_AND_STORE_IS_NOT_NATIVE</target>
        </trans-unit>
        <trans-unit id="1dece9408a0e690e32fcfa71d22aadcf09b13482" translate="yes" xml:space="preserve">
          <source>Q_ATOMIC_POINTER_FETCH_AND_STORE_IS_SOMETIMES_NATIVE</source>
          <target state="translated">Q_ATOMIC_POINTER_FETCH_AND_STORE_IS_SOMETIMES_NATIVE</target>
        </trans-unit>
        <trans-unit id="355b99afb0fd1cc7029881f92e2195e10b093803" translate="yes" xml:space="preserve">
          <source>Q_ATOMIC_POINTER_FETCH_AND_STORE_IS_WAIT_FREE</source>
          <target state="translated">Q_ATOMIC_POINTER_FETCH_AND_STORE_IS_WAIT_FREE</target>
        </trans-unit>
        <trans-unit id="b425d905b6960a4e3ff040b943a785730c40646b" translate="yes" xml:space="preserve">
          <source>Q_ATOMIC_POINTER_TEST_AND_SET_IS_ALWAYS_NATIVE</source>
          <target state="translated">Q_ATOMIC_POINTER_TEST_AND_SET_IS_ALWAYS_NATIVE</target>
        </trans-unit>
        <trans-unit id="e47ce1c39da83c93d401835307b74f207c7dd237" translate="yes" xml:space="preserve">
          <source>Q_ATOMIC_POINTER_TEST_AND_SET_IS_NOT_NATIVE</source>
          <target state="translated">Q_ATOMIC_POINTER_TEST_AND_SET_IS_NOT_NATIVE</target>
        </trans-unit>
        <trans-unit id="aa38a10d328774173de81ecd22cdbbf73b5519a4" translate="yes" xml:space="preserve">
          <source>Q_ATOMIC_POINTER_TEST_AND_SET_IS_SOMETIMES_NATIVE</source>
          <target state="translated">Q_ATOMIC_POINTER_TEST_AND_SET_IS_SOMETIMES_NATIVE</target>
        </trans-unit>
        <trans-unit id="ad64c57551387932056c353dc4748e6099a03f60" translate="yes" xml:space="preserve">
          <source>Q_ATOMIC_POINTER_TEST_AND_SET_IS_WAIT_FREE</source>
          <target state="translated">Q_ATOMIC_POINTER_TEST_AND_SET_IS_WAIT_FREE</target>
        </trans-unit>
        <trans-unit id="a026477da001a7a11ca9fb195725e2c63e8bcced" translate="yes" xml:space="preserve">
          <source>Q_BIG_ENDIAN</source>
          <target state="translated">Q_BIG_ENDIAN</target>
        </trans-unit>
        <trans-unit id="73e9f6495a3f6eb9e51e8b428b86177de48ad43c" translate="yes" xml:space="preserve">
          <source>Q_BYTE_ORDER</source>
          <target state="translated">Q_BYTE_ORDER</target>
        </trans-unit>
        <trans-unit id="f0250a4fe8d353948e3b66f2a966f070a16eaa74" translate="yes" xml:space="preserve">
          <source>Q_CC_BOR</source>
          <target state="translated">Q_CC_BOR</target>
        </trans-unit>
        <trans-unit id="13c556c1dea3ecb2b1d86c3016771c7074b55955" translate="yes" xml:space="preserve">
          <source>Q_CC_CDS</source>
          <target state="translated">Q_CC_CDS</target>
        </trans-unit>
        <trans-unit id="20eee65bd47ba19b34a9f8d4242b114bfb7410f3" translate="yes" xml:space="preserve">
          <source>Q_CC_CLANG</source>
          <target state="translated">Q_CC_CLANG</target>
        </trans-unit>
        <trans-unit id="725ccceed299b46fc0e6046e170379a041cf67ac" translate="yes" xml:space="preserve">
          <source>Q_CC_COMEAU</source>
          <target state="translated">Q_CC_COMEAU</target>
        </trans-unit>
        <trans-unit id="fe96ebb4be5348976dc8ae112e8a473fb1ad2fa2" translate="yes" xml:space="preserve">
          <source>Q_CC_DEC</source>
          <target state="translated">Q_CC_DEC</target>
        </trans-unit>
        <trans-unit id="20d868403a7462c8150ce5f0c4f239e32072c3fa" translate="yes" xml:space="preserve">
          <source>Q_CC_EDG</source>
          <target state="translated">Q_CC_EDG</target>
        </trans-unit>
        <trans-unit id="05a8a63045b3e534d6920c7a0d1f7ddc91666050" translate="yes" xml:space="preserve">
          <source>Q_CC_GHS</source>
          <target state="translated">Q_CC_GHS</target>
        </trans-unit>
        <trans-unit id="7a3216c91460665b757ef09884e2aa92a046e8f7" translate="yes" xml:space="preserve">
          <source>Q_CC_GNU</source>
          <target state="translated">Q_CC_GNU</target>
        </trans-unit>
        <trans-unit id="852da838bb587f723d1ebd887df4a91068ddb1a8" translate="yes" xml:space="preserve">
          <source>Q_CC_HIGHC</source>
          <target state="translated">Q_CC_HIGHC</target>
        </trans-unit>
        <trans-unit id="99cba180f73edf1aa98d913460be422f6bf01666" translate="yes" xml:space="preserve">
          <source>Q_CC_HPACC</source>
          <target state="translated">Q_CC_HPACC</target>
        </trans-unit>
        <trans-unit id="15955184af7f5158c774a9468abe065b7a82ab65" translate="yes" xml:space="preserve">
          <source>Q_CC_INTEL</source>
          <target state="translated">Q_CC_INTEL</target>
        </trans-unit>
        <trans-unit id="855e52e1ebae6bce2b2464b2931522bdb24fad2c" translate="yes" xml:space="preserve">
          <source>Q_CC_KAI</source>
          <target state="translated">Q_CC_KAI</target>
        </trans-unit>
        <trans-unit id="f5ffc2701fcb84869006f601ceab8d2fd1dd5b67" translate="yes" xml:space="preserve">
          <source>Q_CC_MIPS</source>
          <target state="translated">Q_CC_MIPS</target>
        </trans-unit>
        <trans-unit id="b91a2333070b74b8d94a109bc6602498f0f691e2" translate="yes" xml:space="preserve">
          <source>Q_CC_MSVC</source>
          <target state="translated">Q_CC_MSVC</target>
        </trans-unit>
        <trans-unit id="aedb168e1c2cf303cd7dc66bd24df3df04671630" translate="yes" xml:space="preserve">
          <source>Q_CC_OC</source>
          <target state="translated">Q_CC_OC</target>
        </trans-unit>
        <trans-unit id="b4af52a7daf49865645b169b55661c132cca6cdc" translate="yes" xml:space="preserve">
          <source>Q_CC_PGI</source>
          <target state="translated">Q_CC_PGI</target>
        </trans-unit>
        <trans-unit id="693de3503ac27b3c34a0c0b84df4389e8d3dc12b" translate="yes" xml:space="preserve">
          <source>Q_CC_SUN</source>
          <target state="translated">Q_CC_SUN</target>
        </trans-unit>
        <trans-unit id="1c167a8723a6f1113b566bb370b48b855b7dc33f" translate="yes" xml:space="preserve">
          <source>Q_CC_SYM</source>
          <target state="translated">Q_CC_SYM</target>
        </trans-unit>
        <trans-unit id="1f5b2bb22c7d0bf93ea1225f6541e4f25e701b06" translate="yes" xml:space="preserve">
          <source>Q_CC_USLC</source>
          <target state="translated">Q_CC_USLC</target>
        </trans-unit>
        <trans-unit id="41ec6d2463d54778820de68e5d8cfb3235fff7fe" translate="yes" xml:space="preserve">
          <source>Q_CC_WAT</source>
          <target state="translated">Q_CC_WAT</target>
        </trans-unit>
        <trans-unit id="fce0fd1b0261a1c441e8d3f22a7f1262a6a80ec6" translate="yes" xml:space="preserve">
          <source>Q_CHECK_PTR does nothing if &lt;code&gt;QT_NO_DEBUG&lt;/code&gt; and &lt;code&gt;QT_NO_EXCEPTIONS&lt;/code&gt; were defined during compilation. Therefore you must not use Q_CHECK_PTR to check for successful memory allocations because the check will be disabled in some cases.</source>
          <target state="translated">コンパイル時に &lt;code&gt;QT_NO_DEBUG&lt;/code&gt; および &lt;code&gt;QT_NO_EXCEPTIONS&lt;/code&gt; が定義されている場合、Q_CHECK_PTRは何もしません。したがって、Q_CHECK_PTRを使用してメモリ割り当てが成功したかどうかをチェックしないでください。チェックが無効になる場合があります。</target>
        </trans-unit>
        <trans-unit id="1f6c68c8553a9c8b2271736195734f68b607532e" translate="yes" xml:space="preserve">
          <source>Q_CHECK_PTR()</source>
          <target state="translated">Q_CHECK_PTR()</target>
        </trans-unit>
        <trans-unit id="973c1bbe080797f737902cb6369a56731652f05a" translate="yes" xml:space="preserve">
          <source>Q_DECLARE_INTERFACE(</source>
          <target state="translated">Q_DECLARE_INTERFACE(</target>
        </trans-unit>
        <trans-unit id="147aedf776cf3fab0c48722dd37cab662d1220cb" translate="yes" xml:space="preserve">
          <source>Q_DECLARE_INTERFACE()</source>
          <target state="translated">Q_DECLARE_INTERFACE()</target>
        </trans-unit>
        <trans-unit id="8f3f8cd5a2de8937470bebc885f0a8f9b7126be1" translate="yes" xml:space="preserve">
          <source>Q_DECLARE_TR_FUNCTIONS() must appear at the very top of the class definition (before the first &lt;code&gt;public:&lt;/code&gt; or &lt;code&gt;protected:&lt;/code&gt;). For example:</source>
          <target state="translated">Q_DECLARE_TR_FUNCTIONS（）は、クラス定義の最上部（最初の &lt;code&gt;public:&lt;/code&gt; または &lt;code&gt;protected:&lt;/code&gt; の前）になければなりません。例えば：</target>
        </trans-unit>
        <trans-unit id="f6a164e0ef77ef371ffa66489fb8721126fd592d" translate="yes" xml:space="preserve">
          <source>Q_DECLARE_TYPEINFO(</source>
          <target state="translated">Q_DECLARE_TYPEINFO(</target>
        </trans-unit>
        <trans-unit id="eadcac08a7c7e7fa5f54f7b74ccb9eeb29980846" translate="yes" xml:space="preserve">
          <source>Q_DECLARE_TYPEINFO()</source>
          <target state="translated">Q_DECLARE_TYPEINFO()</target>
        </trans-unit>
        <trans-unit id="6a885f996a27d4b35c25136438f6bf67b2de7c84" translate="yes" xml:space="preserve">
          <source>Q_DECL_CONSTEXPR</source>
          <target state="translated">Q_DECL_CONSTEXPR</target>
        </trans-unit>
        <trans-unit id="244e26a791a2ffb888f6a35291ea75ec7ef4abb6" translate="yes" xml:space="preserve">
          <source>Q_DECL_EXPORT</source>
          <target state="translated">Q_DECL_EXPORT</target>
        </trans-unit>
        <trans-unit id="e82bf689a4dc11a9b7e1181ac27a8d8a0ec99406" translate="yes" xml:space="preserve">
          <source>Q_DECL_FINAL</source>
          <target state="translated">Q_DECL_FINAL</target>
        </trans-unit>
        <trans-unit id="ee0e6ad1fc682c0d6b040f4d88831e345910fc59" translate="yes" xml:space="preserve">
          <source>Q_DECL_IMPORT</source>
          <target state="translated">Q_DECL_IMPORT</target>
        </trans-unit>
        <trans-unit id="f1c4f5c63f17c28f83fcfa6fc37841fc3092dd43" translate="yes" xml:space="preserve">
          <source>Q_DECL_NOEXCEPT</source>
          <target state="translated">Q_DECL_NOEXCEPT</target>
        </trans-unit>
        <trans-unit id="f651347105620fd0af43df0598f63d57e5382b48" translate="yes" xml:space="preserve">
          <source>Q_DECL_NOEXCEPT_EXPR(</source>
          <target state="translated">Q_DECL_NOEXCEPT_EXPR(</target>
        </trans-unit>
        <trans-unit id="768ad1040c8063c3fb225aedb4fb365b11bf639d" translate="yes" xml:space="preserve">
          <source>Q_DECL_NOEXCEPT_EXPR()</source>
          <target state="translated">Q_DECL_NOEXCEPT_EXPR()</target>
        </trans-unit>
        <trans-unit id="e296d0fa2fb4dfad1d20163ed69db68f3a01ea84" translate="yes" xml:space="preserve">
          <source>Q_DECL_NOTHROW</source>
          <target state="translated">Q_DECL_NOTHROW</target>
        </trans-unit>
        <trans-unit id="1b214464b834d002ae8334404b07a0d4c022ab01" translate="yes" xml:space="preserve">
          <source>Q_DECL_OVERRIDE</source>
          <target state="translated">Q_DECL_OVERRIDE</target>
        </trans-unit>
        <trans-unit id="2d59f7412edc23fe6a07143c3b2045f9b0f6e8fb" translate="yes" xml:space="preserve">
          <source>Q_DECL_RELAXED_CONSTEXPR</source>
          <target state="translated">Q_DECL_RELAXED_CONSTEXPR</target>
        </trans-unit>
        <trans-unit id="8f2946ed8b7737a687e57ae0183755b32e6c836d" translate="yes" xml:space="preserve">
          <source>Q_FALLTHROUGH</source>
          <target state="translated">Q_FALLTHROUGH</target>
        </trans-unit>
        <trans-unit id="97195078b8603a135db3c45455656ac1bd0e850c" translate="yes" xml:space="preserve">
          <source>Q_FOREACH(</source>
          <target state="translated">Q_FOREACH(</target>
        </trans-unit>
        <trans-unit id="68cefa6b5a7a582d0b9a3ae1956da55ac32c9c2b" translate="yes" xml:space="preserve">
          <source>Q_FOREACH()</source>
          <target state="translated">Q_FOREACH()</target>
        </trans-unit>
        <trans-unit id="6d1568b6d4825bcc784f7005c669db2eeb807599" translate="yes" xml:space="preserve">
          <source>Q_FOREVER</source>
          <target state="translated">Q_FOREVER</target>
        </trans-unit>
        <trans-unit id="aee6c6633231cc403db0ef9e521fa4261f50a474" translate="yes" xml:space="preserve">
          <source>Q_FORWARD_DECLARE_CF_TYPE(</source>
          <target state="translated">Q_FORWARD_DECLARE_CF_TYPE(</target>
        </trans-unit>
        <trans-unit id="91e5ed74d424e0b2e58848dde6654f537f850f7b" translate="yes" xml:space="preserve">
          <source>Q_FORWARD_DECLARE_CF_TYPE()</source>
          <target state="translated">Q_FORWARD_DECLARE_CF_TYPE()</target>
        </trans-unit>
        <trans-unit id="9d981b48d884a04756f71aafeb361fe791abf41c" translate="yes" xml:space="preserve">
          <source>Q_FORWARD_DECLARE_MUTABLE_CF_TYPE(</source>
          <target state="translated">Q_FORWARD_DECLARE_MUTABLE_CF_TYPE(</target>
        </trans-unit>
        <trans-unit id="bd6d417607dd688e1eabe67b946af8206d4fa401" translate="yes" xml:space="preserve">
          <source>Q_FORWARD_DECLARE_MUTABLE_CF_TYPE()</source>
          <target state="translated">Q_FORWARD_DECLARE_MUTABLE_CF_TYPE()</target>
        </trans-unit>
        <trans-unit id="9597519247dd95536e76caccf2e28fd3dca94bd1" translate="yes" xml:space="preserve">
          <source>Q_FORWARD_DECLARE_OBJC_CLASS(</source>
          <target state="translated">Q_FORWARD_DECLARE_OBJC_CLASS(</target>
        </trans-unit>
        <trans-unit id="4284a089fbb534c2f1af50df1bcc092fe5c48299" translate="yes" xml:space="preserve">
          <source>Q_FORWARD_DECLARE_OBJC_CLASS()</source>
          <target state="translated">Q_FORWARD_DECLARE_OBJC_CLASS()</target>
        </trans-unit>
        <trans-unit id="9a714c74438ee0dd3d0c5a27f2610165a9bf9af0" translate="yes" xml:space="preserve">
          <source>Q_FUNC_INFO</source>
          <target state="translated">Q_FUNC_INFO</target>
        </trans-unit>
        <trans-unit id="f5778bf3b20d02ebb2b9ea02a6de2a089a84fc0b" translate="yes" xml:space="preserve">
          <source>Q_FUNC_INFO can be conveniently used with &lt;a href=&quot;qtglobal#qDebug&quot;&gt;qDebug&lt;/a&gt;(). For example, this function:</source>
          <target state="translated">Q_FUNC_INFOは、&lt;a href=&quot;qtglobal#qDebug&quot;&gt;qDebug&lt;/a&gt;（）で便利に使用できます。たとえば、次の関数：</target>
        </trans-unit>
        <trans-unit id="af06e34507ccb68f9c18344f6cbe333a3a5f65d6" translate="yes" xml:space="preserve">
          <source>Q_GADGET makes a class member, &lt;code&gt;staticMetaObject&lt;/code&gt;, available. &lt;code&gt;staticMetaObject&lt;/code&gt; is of type &lt;a href=&quot;qmetaobject&quot;&gt;QMetaObject&lt;/a&gt; and provides access to the enums declared with Q_ENUMS.</source>
          <target state="translated">Q_GADGETは、クラスメンバー &lt;code&gt;staticMetaObject&lt;/code&gt; を使用可能にします。 &lt;code&gt;staticMetaObject&lt;/code&gt; はQMetaObject型で、&lt;a href=&quot;qmetaobject&quot;&gt;Q_ENUMS&lt;/a&gt;で宣言された列挙型へのアクセスを提供します。</target>
        </trans-unit>
        <trans-unit id="37833bddd92a70ecd4e4e9cb43518ab97e99daa9" translate="yes" xml:space="preserve">
          <source>Q_GADGETs can have &lt;a href=&quot;qobject#Q_ENUM&quot;&gt;Q_ENUM&lt;/a&gt;, &lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt; and &lt;a href=&quot;qobject#Q_INVOKABLE&quot;&gt;Q_INVOKABLE&lt;/a&gt;, but they cannot have signals or slots.</source>
          <target state="translated">Q_GADGETは&lt;a href=&quot;qobject#Q_ENUM&quot;&gt;Q_ENUM&lt;/a&gt;、&lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt;、および&lt;a href=&quot;qobject#Q_INVOKABLE&quot;&gt;Q_INVOKABLEを&lt;/a&gt;持つことができますが、シグナルまたはスロットを持つことはできません。</target>
        </trans-unit>
        <trans-unit id="01697249202dc5fdc70dedfce4a25286c6a7a59f" translate="yes" xml:space="preserve">
          <source>Q_IMPORT_PLUGIN(</source>
          <target state="translated">Q_IMPORT_PLUGIN(</target>
        </trans-unit>
        <trans-unit id="0248b92b45943d0d182a54ec41da543a055899d4" translate="yes" xml:space="preserve">
          <source>Q_IMPORT_PLUGIN()</source>
          <target state="translated">Q_IMPORT_PLUGIN()</target>
        </trans-unit>
        <trans-unit id="5817cdfe131762b6a4c55ecfcfee67c5aa255dd6" translate="yes" xml:space="preserve">
          <source>Q_INT64_C()</source>
          <target state="translated">Q_INT64_C()</target>
        </trans-unit>
        <trans-unit id="c178d91a15851dc3ddf498acb976c7ad581b292d" translate="yes" xml:space="preserve">
          <source>Q_IPV6ADDR</source>
          <target state="translated">Q_IPV6ADDR</target>
        </trans-unit>
        <trans-unit id="0f9f95615f9c479492ac09db2550068e13bd556c" translate="yes" xml:space="preserve">
          <source>Q_IPV6ADDR QHostAddress::toIPv6Address() const</source>
          <target state="translated">Q_IPV6ADDR QHostAddress::toIPv6Address()const</target>
        </trans-unit>
        <trans-unit id="68d3f0f548ccd41e676e9bb7d476964f6950d902" translate="yes" xml:space="preserve">
          <source>Q_LIKELY(</source>
          <target state="translated">Q_LIKELY(</target>
        </trans-unit>
        <trans-unit id="b40f71b93d1d8a33fba828de74c80da4021d7460" translate="yes" xml:space="preserve">
          <source>Q_LIKELY()</source>
          <target state="translated">Q_LIKELY()</target>
        </trans-unit>
        <trans-unit id="49e4d53bc87be21076e84860654bafa45c54c3fd" translate="yes" xml:space="preserve">
          <source>Q_LITTLE_ENDIAN</source>
          <target state="translated">Q_LITTLE_ENDIAN</target>
        </trans-unit>
        <trans-unit id="f75d34c0dad040b0d95dbd20742a1c134c835e8f" translate="yes" xml:space="preserve">
          <source>Q_NAMESPACE makes an external variable, &lt;code&gt;staticMetaObject&lt;/code&gt;, available. &lt;code&gt;staticMetaObject&lt;/code&gt; is of type &lt;a href=&quot;qmetaobject&quot;&gt;QMetaObject&lt;/a&gt; and provides access to the enums declared with &lt;a href=&quot;qobject#Q_ENUM_NS&quot;&gt;Q_ENUM_NS&lt;/a&gt;/&lt;a href=&quot;qobject#Q_FLAG_NS&quot;&gt;Q_FLAG_NS&lt;/a&gt;.</source>
          <target state="translated">Q_NAMESPACEは、外部変数 &lt;code&gt;staticMetaObject&lt;/code&gt; を使用可能にします。 &lt;code&gt;staticMetaObject&lt;/code&gt; は型であり&lt;a href=&quot;qmetaobject&quot;&gt;QMetaObject&lt;/a&gt;として宣言列挙型へのアクセスを提供&lt;a href=&quot;qobject#Q_ENUM_NS&quot;&gt;Q_ENUM_NS&lt;/a&gt; / &lt;a href=&quot;qobject#Q_FLAG_NS&quot;&gt;Q_FLAG_NSを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d6ef8a1f293a88c164012930f3d368b83cf80b86" translate="yes" xml:space="preserve">
          <source>Q_NAMESPACEs can have &lt;a href=&quot;qobject#Q_CLASSINFO&quot;&gt;Q_CLASSINFO&lt;/a&gt;, &lt;a href=&quot;qobject#Q_ENUM_NS&quot;&gt;Q_ENUM_NS&lt;/a&gt;, &lt;a href=&quot;qobject#Q_FLAG_NS&quot;&gt;Q_FLAG_NS&lt;/a&gt;, but they cannot have &lt;a href=&quot;qobject#Q_ENUM&quot;&gt;Q_ENUM&lt;/a&gt;, &lt;a href=&quot;qobject#Q_FLAG&quot;&gt;Q_FLAG&lt;/a&gt;, &lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt;, &lt;a href=&quot;qobject#Q_INVOKABLE&quot;&gt;Q_INVOKABLE&lt;/a&gt;, signals nor slots.</source>
          <target state="translated">Q_NAMESPACEには&lt;a href=&quot;qobject#Q_CLASSINFO&quot;&gt;Q_CLASSINFO&lt;/a&gt;、&lt;a href=&quot;qobject#Q_ENUM_NS&quot;&gt;Q_ENUM_NS&lt;/a&gt;、&lt;a href=&quot;qobject#Q_FLAG_NS&quot;&gt;Q_FLAG_NSを含める&lt;/a&gt;ことができますが、&lt;a href=&quot;qobject#Q_ENUM&quot;&gt;Q_ENUM&lt;/a&gt;、&lt;a href=&quot;qobject#Q_FLAG&quot;&gt;Q_FLAG&lt;/a&gt;、&lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt;、&lt;a href=&quot;qobject#Q_INVOKABLE&quot;&gt;Q_INVOKABLE&lt;/a&gt;、シグナル、またはスロットを含めることはできません。</target>
        </trans-unit>
        <trans-unit id="769fa47a36b64da4bcf33650de870cd2ada1c2c8" translate="yes" xml:space="preserve">
          <source>Q_OS_AIX</source>
          <target state="translated">Q_OS_AIX</target>
        </trans-unit>
        <trans-unit id="f41fb1c08b839354d532ccc4956bad1aa5d1609d" translate="yes" xml:space="preserve">
          <source>Q_OS_ANDROID</source>
          <target state="translated">Q_OS_ANDROID</target>
        </trans-unit>
        <trans-unit id="b3c3f2844e4dcf01e4d340d11ce1a0a35dd7db32" translate="yes" xml:space="preserve">
          <source>Q_OS_BSD4</source>
          <target state="translated">Q_OS_BSD4</target>
        </trans-unit>
        <trans-unit id="430e555bf58d32d4d180c4672c8e21eed34bc88a" translate="yes" xml:space="preserve">
          <source>Q_OS_CYGWIN</source>
          <target state="translated">Q_OS_CYGWIN</target>
        </trans-unit>
        <trans-unit id="205730d4f8d14249e7dd225dbf611c2122a67840" translate="yes" xml:space="preserve">
          <source>Q_OS_DARWIN</source>
          <target state="translated">Q_OS_DARWIN</target>
        </trans-unit>
        <trans-unit id="33d27f3f86623dfff17a3307d5988029de05be1e" translate="yes" xml:space="preserve">
          <source>Q_OS_FREEBSD</source>
          <target state="translated">Q_OS_FREEBSD</target>
        </trans-unit>
        <trans-unit id="3fc0901ef1e9a4e73dad0701fcac744a14b7ee4e" translate="yes" xml:space="preserve">
          <source>Q_OS_HPUX</source>
          <target state="translated">Q_OS_HPUX</target>
        </trans-unit>
        <trans-unit id="30007676e022f5c162bb6df34554952f562cf5bc" translate="yes" xml:space="preserve">
          <source>Q_OS_HURD</source>
          <target state="translated">Q_OS_HURD</target>
        </trans-unit>
        <trans-unit id="e3b6e4d1ff1cdbd0fe7b536eb3b44ea09a535001" translate="yes" xml:space="preserve">
          <source>Q_OS_IOS</source>
          <target state="translated">Q_OS_IOS</target>
        </trans-unit>
        <trans-unit id="a8c7f365c01dd06fdf6f9989c73f98a07bc82421" translate="yes" xml:space="preserve">
          <source>Q_OS_LINUX</source>
          <target state="translated">Q_OS_LINUX</target>
        </trans-unit>
        <trans-unit id="a0597ceaebbf8ca45500d0966504b49d997ad984" translate="yes" xml:space="preserve">
          <source>Q_OS_LYNX</source>
          <target state="translated">Q_OS_LYNX</target>
        </trans-unit>
        <trans-unit id="9bad1349ec8cd0dddff5b96a5f3d1e934a864ee1" translate="yes" xml:space="preserve">
          <source>Q_OS_MAC</source>
          <target state="translated">Q_OS_MAC</target>
        </trans-unit>
        <trans-unit id="6cebfc370e9fdfd8c416047bc1d0e15d9da654fb" translate="yes" xml:space="preserve">
          <source>Q_OS_MACOS</source>
          <target state="translated">Q_OS_MACOS</target>
        </trans-unit>
        <trans-unit id="ee9b4c85d534dbe43465b9df26737d172d81c65c" translate="yes" xml:space="preserve">
          <source>Q_OS_NETBSD</source>
          <target state="translated">Q_OS_NETBSD</target>
        </trans-unit>
        <trans-unit id="19657850bf90b019f63ae2d482bf1b2a1c6a5bfc" translate="yes" xml:space="preserve">
          <source>Q_OS_OPENBSD</source>
          <target state="translated">Q_OS_OPENBSD</target>
        </trans-unit>
        <trans-unit id="f1c73b6d7b203487e19c47f5106293956a65f85d" translate="yes" xml:space="preserve">
          <source>Q_OS_OSX</source>
          <target state="translated">Q_OS_OSX</target>
        </trans-unit>
        <trans-unit id="7c29b4991a79e7f001c5c32e7371b0e19c7764c5" translate="yes" xml:space="preserve">
          <source>Q_OS_QNX</source>
          <target state="translated">Q_OS_QNX</target>
        </trans-unit>
        <trans-unit id="1531f51323fbe79ec997eb7f39ac27e21217d257" translate="yes" xml:space="preserve">
          <source>Q_OS_SOLARIS</source>
          <target state="translated">Q_OS_SOLARIS</target>
        </trans-unit>
        <trans-unit id="ee7fc0059202f2a944b69dc26c13124d594dbc68" translate="yes" xml:space="preserve">
          <source>Q_OS_TVOS</source>
          <target state="translated">Q_OS_TVOS</target>
        </trans-unit>
        <trans-unit id="68119f9fb292c08d12de20cd43a9c9d9fbd68bb1" translate="yes" xml:space="preserve">
          <source>Q_OS_UNIX</source>
          <target state="translated">Q_OS_UNIX</target>
        </trans-unit>
        <trans-unit id="2988783261080f900e1a19adecebf20bd96b28ef" translate="yes" xml:space="preserve">
          <source>Q_OS_WASM</source>
          <target state="translated">Q_OS_WASM</target>
        </trans-unit>
        <trans-unit id="b832de21e0ceac77c907e6cf6a067ee0739d0561" translate="yes" xml:space="preserve">
          <source>Q_OS_WATCHOS</source>
          <target state="translated">Q_OS_WATCHOS</target>
        </trans-unit>
        <trans-unit id="8d51091d6a24712ab9dc2bba04612e2aa66cf3a7" translate="yes" xml:space="preserve">
          <source>Q_OS_WIN</source>
          <target state="translated">Q_OS_WIN</target>
        </trans-unit>
        <trans-unit id="a41e3ffae82b5265d7cfa609eee70321998cb209" translate="yes" xml:space="preserve">
          <source>Q_OS_WIN32</source>
          <target state="translated">Q_OS_WIN32</target>
        </trans-unit>
        <trans-unit id="7d22879566c44a3b346883c655cc8fa9f8b4bfac" translate="yes" xml:space="preserve">
          <source>Q_OS_WIN64</source>
          <target state="translated">Q_OS_WIN64</target>
        </trans-unit>
        <trans-unit id="1607116e78029e1d60a9dff2eaef28c9d9046a69" translate="yes" xml:space="preserve">
          <source>Q_OS_WINDOWS</source>
          <target state="translated">Q_OS_WINDOWS</target>
        </trans-unit>
        <trans-unit id="259f3284cab4792ffb2345d260026937cd96da2b" translate="yes" xml:space="preserve">
          <source>Q_OS_WINRT</source>
          <target state="translated">Q_OS_WINRT</target>
        </trans-unit>
        <trans-unit id="706e92d6ffb82545f00b8f6d2275e17f9273845c" translate="yes" xml:space="preserve">
          <source>Q_PLUGIN_METADATA(</source>
          <target state="translated">Q_PLUGIN_METADATA(</target>
        </trans-unit>
        <trans-unit id="bc86365368985f723e58f31a9a620354721cf120" translate="yes" xml:space="preserve">
          <source>Q_PLUGIN_METADATA()</source>
          <target state="translated">Q_PLUGIN_METADATA()</target>
        </trans-unit>
        <trans-unit id="e505ace0e24b355a0a50fa5219f83dbf11013090" translate="yes" xml:space="preserve">
          <source>Q_PROCESSOR_ALPHA</source>
          <target state="translated">Q_PROCESSOR_ALPHA</target>
        </trans-unit>
        <trans-unit id="37e423024cc275877b54a9cbfbc9bc6bf2de3d88" translate="yes" xml:space="preserve">
          <source>Q_PROCESSOR_ARM</source>
          <target state="translated">Q_PROCESSOR_ARM</target>
        </trans-unit>
        <trans-unit id="c38d3f4c488577019e381b2d2f7b1fa423107c1c" translate="yes" xml:space="preserve">
          <source>Q_PROCESSOR_ARM_V5</source>
          <target state="translated">Q_PROCESSOR_ARM_V5</target>
        </trans-unit>
        <trans-unit id="7b170031f42edc30991a9f4b07b0ca0c6ffb00c3" translate="yes" xml:space="preserve">
          <source>Q_PROCESSOR_ARM_V6</source>
          <target state="translated">Q_PROCESSOR_ARM_V6</target>
        </trans-unit>
        <trans-unit id="30b784fd574befbf16246277d25f15ccff9fa5f4" translate="yes" xml:space="preserve">
          <source>Q_PROCESSOR_ARM_V7</source>
          <target state="translated">Q_PROCESSOR_ARM_V7</target>
        </trans-unit>
        <trans-unit id="7de43d28e536668955a90a59a41411e6fab6df7e" translate="yes" xml:space="preserve">
          <source>Q_PROCESSOR_AVR32</source>
          <target state="translated">Q_PROCESSOR_AVR32</target>
        </trans-unit>
        <trans-unit id="5e76903a32bccd310e37c32c591fcf6479ef96d7" translate="yes" xml:space="preserve">
          <source>Q_PROCESSOR_BLACKFIN</source>
          <target state="translated">Q_PROCESSOR_BLACKFIN</target>
        </trans-unit>
        <trans-unit id="e2174ae2a924a35d520567599eca901a018c7cb0" translate="yes" xml:space="preserve">
          <source>Q_PROCESSOR_IA64</source>
          <target state="translated">Q_PROCESSOR_IA64</target>
        </trans-unit>
        <trans-unit id="b82cccd0d088c15e2de4030232128612e2c6f0c6" translate="yes" xml:space="preserve">
          <source>Q_PROCESSOR_MIPS</source>
          <target state="translated">Q_PROCESSOR_MIPS</target>
        </trans-unit>
        <trans-unit id="59734b6a890f3d2f1292edc14355c7c336f72049" translate="yes" xml:space="preserve">
          <source>Q_PROCESSOR_MIPS_32</source>
          <target state="translated">Q_PROCESSOR_MIPS_32</target>
        </trans-unit>
        <trans-unit id="1f1591f5920a098504fe513e6e1fc9dcd89fdaf9" translate="yes" xml:space="preserve">
          <source>Q_PROCESSOR_MIPS_64</source>
          <target state="translated">Q_PROCESSOR_MIPS_64</target>
        </trans-unit>
        <trans-unit id="c35bdebb0c6ac9f4a9ea873c5d7b227deeda7bce" translate="yes" xml:space="preserve">
          <source>Q_PROCESSOR_MIPS_I</source>
          <target state="translated">Q_PROCESSOR_MIPS_I</target>
        </trans-unit>
        <trans-unit id="c0554c1818f9ac51374fce188e65a53720af15bf" translate="yes" xml:space="preserve">
          <source>Q_PROCESSOR_MIPS_II</source>
          <target state="translated">Q_PROCESSOR_MIPS_II</target>
        </trans-unit>
        <trans-unit id="fa46d19c8060eb1360e18338e88eea032726f9f6" translate="yes" xml:space="preserve">
          <source>Q_PROCESSOR_MIPS_III</source>
          <target state="translated">Q_PROCESSOR_MIPS_III</target>
        </trans-unit>
        <trans-unit id="160e0cd072d7d8299740594edfa717baf288fec6" translate="yes" xml:space="preserve">
          <source>Q_PROCESSOR_MIPS_IV</source>
          <target state="translated">Q_PROCESSOR_MIPS_IV</target>
        </trans-unit>
        <trans-unit id="fc25c2f13089f388466f8c1f774ce8f720a62871" translate="yes" xml:space="preserve">
          <source>Q_PROCESSOR_MIPS_V</source>
          <target state="translated">Q_PROCESSOR_MIPS_V</target>
        </trans-unit>
        <trans-unit id="2fde323ca05515723c3888ac019ecb88a7a37a2a" translate="yes" xml:space="preserve">
          <source>Q_PROCESSOR_POWER</source>
          <target state="translated">Q_PROCESSOR_POWER</target>
        </trans-unit>
        <trans-unit id="287f22e2c5842a053e6bfa8fd92895f9b360cd77" translate="yes" xml:space="preserve">
          <source>Q_PROCESSOR_POWER_32</source>
          <target state="translated">Q_PROCESSOR_POWER_32</target>
        </trans-unit>
        <trans-unit id="9ec42219ee7be5052015a538067e654e31f2836b" translate="yes" xml:space="preserve">
          <source>Q_PROCESSOR_POWER_64</source>
          <target state="translated">Q_PROCESSOR_POWER_64</target>
        </trans-unit>
        <trans-unit id="0faa089549186a8831313c5833d4283cbf23c181" translate="yes" xml:space="preserve">
          <source>Q_PROCESSOR_S390</source>
          <target state="translated">Q_PROCESSOR_S390</target>
        </trans-unit>
        <trans-unit id="4bf82247eb1b7a697bca191bb7c5ac68d1a893cc" translate="yes" xml:space="preserve">
          <source>Q_PROCESSOR_S390_X</source>
          <target state="translated">Q_PROCESSOR_S390_X</target>
        </trans-unit>
        <trans-unit id="9c8b655779c65597b6250599345f73fbdff806a7" translate="yes" xml:space="preserve">
          <source>Q_PROCESSOR_SH</source>
          <target state="translated">Q_PROCESSOR_SH</target>
        </trans-unit>
        <trans-unit id="534bfe9adb546e108d7aca9838b73127b79e2823" translate="yes" xml:space="preserve">
          <source>Q_PROCESSOR_SH_4A</source>
          <target state="translated">Q_PROCESSOR_SH_4A</target>
        </trans-unit>
        <trans-unit id="b841b56deedc051c2ddf74f1758cf181b9c025b9" translate="yes" xml:space="preserve">
          <source>Q_PROCESSOR_SPARC</source>
          <target state="translated">Q_PROCESSOR_SPARC</target>
        </trans-unit>
        <trans-unit id="403f00287f3298741460c6a2c9ebe3c2060d8e85" translate="yes" xml:space="preserve">
          <source>Q_PROCESSOR_SPARC_V9</source>
          <target state="translated">Q_PROCESSOR_SPARC_V9</target>
        </trans-unit>
        <trans-unit id="e3c58b875a08c9bdfff6d8c8918ba4694e88ae3a" translate="yes" xml:space="preserve">
          <source>Q_PROCESSOR_X86</source>
          <target state="translated">Q_PROCESSOR_X86</target>
        </trans-unit>
        <trans-unit id="5c5b7000e7a70e0713a0b39cc3a6208f75d469c2" translate="yes" xml:space="preserve">
          <source>Q_PROCESSOR_X86_32</source>
          <target state="translated">Q_PROCESSOR_X86_32</target>
        </trans-unit>
        <trans-unit id="0cae7b51b1df59e9bb558c8121614280f71e2192" translate="yes" xml:space="preserve">
          <source>Q_PROCESSOR_X86_64</source>
          <target state="translated">Q_PROCESSOR_X86_64</target>
        </trans-unit>
        <trans-unit id="1010b6ac825a9cf5c7a187c6edc557147672e810" translate="yes" xml:space="preserve">
          <source>Q_UINT64_C()</source>
          <target state="translated">Q_UINT64_C()</target>
        </trans-unit>
        <trans-unit id="21de559b694d30c1bdb78a1b0f1f197f0b5e9918" translate="yes" xml:space="preserve">
          <source>Q_UNLIKELY(</source>
          <target state="translated">Q_UNLIKELY(</target>
        </trans-unit>
        <trans-unit id="7f69b062407b73ea93b05e1cc286bc67aa4efe95" translate="yes" xml:space="preserve">
          <source>Q_UNLIKELY()</source>
          <target state="translated">Q_UNLIKELY()</target>
        </trans-unit>
        <trans-unit id="c639c6cc4d6b26fb9c162e637737a202caa7b66c" translate="yes" xml:space="preserve">
          <source>Q_UNREACHABLE</source>
          <target state="translated">Q_UNREACHABLE</target>
        </trans-unit>
        <trans-unit id="04478b63825c6b512a93cfb000b75ba1f5bf2463" translate="yes" xml:space="preserve">
          <source>Q_UNUSED(</source>
          <target state="translated">Q_UNUSED(</target>
        </trans-unit>
        <trans-unit id="cb2910d3d0330e0befe350cb1258c1735cfca73d" translate="yes" xml:space="preserve">
          <source>Q_UNUSED()</source>
          <target state="translated">Q_UNUSED()</target>
        </trans-unit>
        <trans-unit id="5eb474535a0ed3109240b4bb1d3c30dd9af91b8d" translate="yes" xml:space="preserve">
          <source>Qml2Imports</source>
          <target state="translated">Qml2Imports</target>
        </trans-unit>
        <trans-unit id="25c583195426113d7f9a79fa48e01fd02de8db93" translate="yes" xml:space="preserve">
          <source>QmlLive</source>
          <target state="translated">QmlLive</target>
        </trans-unit>
        <trans-unit id="2fa79aa546e6021f222bcc887fe605eb4eb0836d" translate="yes" xml:space="preserve">
          <source>QmlLive, GammaRay, and Squish</source>
          <target state="translated">QmlLive、GammaRay、スクイッシュ</target>
        </trans-unit>
        <trans-unit id="bb79157979c25a4f10affa820da801007171993c" translate="yes" xml:space="preserve">
          <source>QmlSensors (QML type)</source>
          <target state="translated">QmlSensors(QML型</target>
        </trans-unit>
        <trans-unit id="edd85e532b724619247751e6cd59e73a181f37db" translate="yes" xml:space="preserve">
          <source>QmlSensors QML Type</source>
          <target state="translated">QmlSensors QML型</target>
        </trans-unit>
        <trans-unit id="cee769511e603a0b0791d76c105a9c5ee36a8f85" translate="yes" xml:space="preserve">
          <source>QmlSensors.defaultSensorForType()</source>
          <target state="translated">QmlSensors.defaultSensorForType()</target>
        </trans-unit>
        <trans-unit id="2c9fddad4110e3ceb13b469a3067a1e311476151" translate="yes" xml:space="preserve">
          <source>QmlSensors.sensorTypes()</source>
          <target state="translated">QmlSensors.sensorTypes()</target>
        </trans-unit>
        <trans-unit id="69453b0a76b6c7e1c7b06e344032f1569e570a50" translate="yes" xml:space="preserve">
          <source>QmlSensors.sensorsForType()</source>
          <target state="translated">QmlSensors.sensorsForType()</target>
        </trans-unit>
        <trans-unit id="fbeba94c4e9b16a43991c5615fab8c4406d33231" translate="yes" xml:space="preserve">
          <source>Qt</source>
          <target state="translated">Qt</target>
        </trans-unit>
        <trans-unit id="edae821f6b47a5e35b92eae7ce445c28aae83032" translate="yes" xml:space="preserve">
          <source>Qt (C++) type</source>
          <target state="translated">Qt型</target>
        </trans-unit>
        <trans-unit id="06324cb8ea0612c6fd7946cb5de2ab12000a0b21" translate="yes" xml:space="preserve">
          <source>Qt (QML type)</source>
          <target state="translated">Qt(QML型)</target>
        </trans-unit>
        <trans-unit id="812840c17a5696495edabf7838b1c6a04fa222fa" translate="yes" xml:space="preserve">
          <source>Qt 3D</source>
          <target state="translated">Qt 3D</target>
        </trans-unit>
        <trans-unit id="61a5e045e76d93764f0b84b418d3aaa94c75804e" translate="yes" xml:space="preserve">
          <source>Qt 3D Animation C++ Classes</source>
          <target state="translated">Qt 3DアニメーションC++クラス</target>
        </trans-unit>
        <trans-unit id="df90bfc929849dfe7fad0d2f53e680acfde8113b" translate="yes" xml:space="preserve">
          <source>Qt 3D Animation Module</source>
          <target state="translated">Qt 3Dアニメーションモジュール</target>
        </trans-unit>
        <trans-unit id="b58b60c5cfd50dedf6119a0125514947e4362a01" translate="yes" xml:space="preserve">
          <source>Qt 3D C++ Classes</source>
          <target state="translated">Qt 3D C++クラス</target>
        </trans-unit>
        <trans-unit id="4962faeb048b3601c8a12fc04bfec8b62868fdab" translate="yes" xml:space="preserve">
          <source>Qt 3D Core C++ Classes</source>
          <target state="translated">Qt 3D コア C++クラス</target>
        </trans-unit>
        <trans-unit id="f0ef1b2cb2b61250cf7bfd8840b9d691c988817b" translate="yes" xml:space="preserve">
          <source>Qt 3D Core Module</source>
          <target state="translated">Qt 3Dコアモジュール</target>
        </trans-unit>
        <trans-unit id="933504344878a95879669ec4be47f848d2c9c90f" translate="yes" xml:space="preserve">
          <source>Qt 3D Core QML Types</source>
          <target state="translated">Qt 3D コア QML タイプ</target>
        </trans-unit>
        <trans-unit id="63c1ce4f999cbb11561a312b678613120b7e1487" translate="yes" xml:space="preserve">
          <source>Qt 3D Examples</source>
          <target state="translated">Qt 3Dの例</target>
        </trans-unit>
        <trans-unit id="8bee341cb656df55abf13e17e8af1821e87dd381" translate="yes" xml:space="preserve">
          <source>Qt 3D Extras C++ Classes</source>
          <target state="translated">Qt 3D エクストラ C++クラス</target>
        </trans-unit>
        <trans-unit id="cc6bedd8088ab09d5682ce736ab7de62b49c7456" translate="yes" xml:space="preserve">
          <source>Qt 3D Extras Module</source>
          <target state="translated">Qt 3D エクストラモジュール</target>
        </trans-unit>
        <trans-unit id="52e5de59b3ebc27bfeb5bcff728261720a716a14" translate="yes" xml:space="preserve">
          <source>Qt 3D Extras QML Types</source>
          <target state="translated">Qt 3D その他 QML タイプ</target>
        </trans-unit>
        <trans-unit id="90690c8b148e9ec6c89625d9cd31ffdfea90acd7" translate="yes" xml:space="preserve">
          <source>Qt 3D Input C++ Classes</source>
          <target state="translated">Qt 3D 入力 C++クラス</target>
        </trans-unit>
        <trans-unit id="0747603a0bc6cf6aece21e01dea02c5f2135d9da" translate="yes" xml:space="preserve">
          <source>Qt 3D Input Module</source>
          <target state="translated">Qt 3D入力モジュール</target>
        </trans-unit>
        <trans-unit id="2b6658f5730fe3a88e34eaa596fcf93539af636b" translate="yes" xml:space="preserve">
          <source>Qt 3D Input QML Types</source>
          <target state="translated">Qt 3D 入力 QML タイプ</target>
        </trans-unit>
        <trans-unit id="d194ce7b602bb4e2970807d70f3c2d266c06b31b" translate="yes" xml:space="preserve">
          <source>Qt 3D Logic C++ Classes</source>
          <target state="translated">Qt 3D ロジック C++クラス</target>
        </trans-unit>
        <trans-unit id="e9c412d379760bef38ad4d1aa27f600cf234e34e" translate="yes" xml:space="preserve">
          <source>Qt 3D Logic Module</source>
          <target state="translated">Qt 3Dロジックモジュール</target>
        </trans-unit>
        <trans-unit id="9f3d448c06a9477ad699ea71e74784f72a2a80b1" translate="yes" xml:space="preserve">
          <source>Qt 3D Logic QML Types</source>
          <target state="translated">Qt 3Dロジック QML型</target>
        </trans-unit>
        <trans-unit id="248a9da6d05701a16b6b2a040b9c087330b91bea" translate="yes" xml:space="preserve">
          <source>Qt 3D Overview</source>
          <target state="translated">Qt 3Dの概要</target>
        </trans-unit>
        <trans-unit id="975e3449d06096750388d151b42a5ca19e581b7d" translate="yes" xml:space="preserve">
          <source>Qt 3D Platform Support</source>
          <target state="translated">Qt 3Dプラットフォームのサポート</target>
        </trans-unit>
        <trans-unit id="fa58d9ddbd970d93715703057048d8d3a71fb2ef" translate="yes" xml:space="preserve">
          <source>Qt 3D QML Types</source>
          <target state="translated">Qt 3D QMLタイプ</target>
        </trans-unit>
        <trans-unit id="9556e8430fb818e16d46b74c403df0aad249be9d" translate="yes" xml:space="preserve">
          <source>Qt 3D Qt3DAnimation QML Types</source>
          <target state="translated">Qt 3D Qt3DAnimation QMLタイプ</target>
        </trans-unit>
        <trans-unit id="4b04025c2623927f049d24309d0fe84ebbceb217" translate="yes" xml:space="preserve">
          <source>Qt 3D Render C++ Classes</source>
          <target state="translated">Qt 3D レンダリング C++クラス</target>
        </trans-unit>
        <trans-unit id="fee123883f7f1ee09d777cb67c091229e213b861" translate="yes" xml:space="preserve">
          <source>Qt 3D Render Framegraph</source>
          <target state="translated">Qt 3Dレンダリングフレームグラフ</target>
        </trans-unit>
        <trans-unit id="5e322aca982c5d7c9db8269bafe0fb51977694bd" translate="yes" xml:space="preserve">
          <source>Qt 3D Render Geometry</source>
          <target state="translated">Qt 3Dレンダリングジオメトリ</target>
        </trans-unit>
        <trans-unit id="04af8a005a967095f7f8152e8312ee314dabf670" translate="yes" xml:space="preserve">
          <source>Qt 3D Render Module</source>
          <target state="translated">Qt 3D Render モジュール</target>
        </trans-unit>
        <trans-unit id="9e60a9d2422356f3ca1b3489f20d38bc0781f934" translate="yes" xml:space="preserve">
          <source>Qt 3D Render QML Types</source>
          <target state="translated">Qt 3D レンダリング QML タイプ</target>
        </trans-unit>
        <trans-unit id="581c3b00db62e43ef8449632126b17df37e90bb3" translate="yes" xml:space="preserve">
          <source>Qt 3D Render provides a generic way of storing geometry data and specifying how it should be read by the renderer.</source>
          <target state="translated">Qt 3D Render は、ジオメトリデータを保存し、レンダラーがどのように読み込むかを指定する一般的な方法を提供します。</target>
        </trans-unit>
        <trans-unit id="f74ce37f7227546e5a764bc903c0163ce4388c91" translate="yes" xml:space="preserve">
          <source>Qt 3D Scene2D C++ Classes</source>
          <target state="translated">Qt 3D Scene2D C++クラス</target>
        </trans-unit>
        <trans-unit id="628c764b942c5b9c4ffe49a6ef519e9f06938127" translate="yes" xml:space="preserve">
          <source>Qt 3D Scene2D Module</source>
          <target state="translated">Qt 3D Scene2Dモジュール</target>
        </trans-unit>
        <trans-unit id="ec2c2470eace88025f547461d39957692ada23e4" translate="yes" xml:space="preserve">
          <source>Qt 3D Scene2D QML Types</source>
          <target state="translated">Qt 3D Scene2D QMLタイプ</target>
        </trans-unit>
        <trans-unit id="95bf2e09c180a1070dcb8cd40c317fa0541a9652" translate="yes" xml:space="preserve">
          <source>Qt 3D Scene3D QML Types</source>
          <target state="translated">Qt 3D Scene3D QMLタイプ</target>
        </trans-unit>
        <trans-unit id="1b060c318d6a5ad1acd04ba836251d1adac890fc" translate="yes" xml:space="preserve">
          <source>Qt 3D has the following support for platforms:</source>
          <target state="translated">Qt 3Dは以下のようなプラットフォームに対応しています。</target>
        </trans-unit>
        <trans-unit id="8880bf542d37b276e640ca8e7c1461e951cb360c" translate="yes" xml:space="preserve">
          <source>Qt 3D is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under the &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt 3Dは、&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;からの商用ライセンスの下で利用できます。さらに、&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License、バージョン3&lt;/a&gt;、または&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License、バージョン2で利用でき&lt;/a&gt;ます。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qtライセンス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a67fd6de57ed1b64eaf49fb7605b9d745948c49e" translate="yes" xml:space="preserve">
          <source>Qt 3D uses a task-based approach to parallelism which naturally scales up with the number of available cores. This is shown in the following diagram for the previous example.</source>
          <target state="translated">Qt 3Dはタスクベースの並列化アプローチを採用しており、利用可能なコア数に応じて自然とスケールアップしていきます。これは、先ほどの例では次のように示されています。</target>
        </trans-unit>
        <trans-unit id="3e7f1144c4dfd1df20a87f4d2b02ab281cf7d92a" translate="yes" xml:space="preserve">
          <source>Qt 4.0</source>
          <target state="translated">Qt 4.0</target>
        </trans-unit>
        <trans-unit id="ce01ffbce03266c97acb7845a6d077218027c334" translate="yes" xml:space="preserve">
          <source>Qt 4.1</source>
          <target state="translated">Qt 4.1</target>
        </trans-unit>
        <trans-unit id="20f3ab90ab1963d07dc1507d30857cc44072861c" translate="yes" xml:space="preserve">
          <source>Qt 4.2</source>
          <target state="translated">Qt 4.2</target>
        </trans-unit>
        <trans-unit id="ba400d0a2f5f40eb9378b1d86c44a528ba117533" translate="yes" xml:space="preserve">
          <source>Qt 4.2)</source>
          <target state="translated">Qt 4.2)</target>
        </trans-unit>
        <trans-unit id="c576843a97cb3a1c7de9d0faaebfd974440a9e39" translate="yes" xml:space="preserve">
          <source>Qt 4.3</source>
          <target state="translated">Qt 4.3</target>
        </trans-unit>
        <trans-unit id="6c806c6dca20daabb807541468b6fc336f0c5eab" translate="yes" xml:space="preserve">
          <source>Qt 4.4</source>
          <target state="translated">Qt 4.4</target>
        </trans-unit>
        <trans-unit id="f75ceee4485b771f88e0c273e54c48b4bd0560ae" translate="yes" xml:space="preserve">
          <source>Qt 4.4 introduced support for geometry and layout-aware items through &lt;a href=&quot;#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt;. This special base item is similar to &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;, but unlike &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;, it doesn't inherit from &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt;; rather from &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; instead. This allows you to write complete widgets with events, signals &amp;amp; slots, size hints and policies, and you can also manage your widgets geometries in layouts through &lt;a href=&quot;qgraphicslinearlayout&quot;&gt;QGraphicsLinearLayout&lt;/a&gt; and &lt;a href=&quot;qgraphicsgridlayout&quot;&gt;QGraphicsGridLayout&lt;/a&gt;.</source>
          <target state="translated">Qt 4.4では、&lt;a href=&quot;#qgraphicswidget&quot;&gt;QGraphicsWidgetを&lt;/a&gt;介して、ジオメトリおよびレイアウト対応アイテムのサポートが導入されました。この特別な基本アイテムは&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;に似ていますが、&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;とは異なり、&lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt;から継承しません。代わりに&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;から。これにより、イベント、信号とスロット、サイズのヒントとポリシーを備えた完全なウィジェットを作成でき、&lt;a href=&quot;qgraphicslinearlayout&quot;&gt;QGraphicsLinearLayout&lt;/a&gt;と&lt;a href=&quot;qgraphicsgridlayout&quot;&gt;QGraphicsGridLayout&lt;/a&gt;を使用してレイアウトでウィジェットのジオメトリを管理することもできます。</target>
        </trans-unit>
        <trans-unit id="063818378191adc2892c8206358c71b0d410b033" translate="yes" xml:space="preserve">
          <source>Qt 4.5</source>
          <target state="translated">Qt4.</target>
        </trans-unit>
        <trans-unit id="4b4792ce6ab5d1deac7112a9a81ba240a1c6ef56" translate="yes" xml:space="preserve">
          <source>Qt 4.6</source>
          <target state="translated">Qt 4.6</target>
        </trans-unit>
        <trans-unit id="064f0084f3dc61115c6003317b7e86ff4e581b23" translate="yes" xml:space="preserve">
          <source>Qt 4.7</source>
          <target state="translated">Qt 4.7</target>
        </trans-unit>
        <trans-unit id="214afdc13bbf9d0d3a4ebaa5c1650285abda50aa" translate="yes" xml:space="preserve">
          <source>Qt 4.8</source>
          <target state="translated">Qt 4.8</target>
        </trans-unit>
        <trans-unit id="d904a6e24d8e76ee008b08fbc8fe9ae822b32762" translate="yes" xml:space="preserve">
          <source>Qt 5 does not support OpenSSL for VxWorks as it does not support using OpenSSL in RTP mode.</source>
          <target state="translated">Qt 5はRTPモードでのOpenSSLの使用をサポートしていないため、VxWorksではOpenSSLをサポートしていません。</target>
        </trans-unit>
        <trans-unit id="bf97c0c1a125463c90a25e10993bdfa15e6b1fde" translate="yes" xml:space="preserve">
          <source>Qt 5 includes &lt;code&gt;qmlscene&lt;/code&gt;, a utility that loads and displays QML documents even before the application is complete. This utility also provides the following additional features that are useful while developing QML applications:</source>
          <target state="translated">Qt 5には、アプリケーションが完了する前でもQMLドキュメントを読み込んで表示するユーティリティである &lt;code&gt;qmlscene&lt;/code&gt; が含まれています。このユーティリティは、QMLアプリケーションの開発中に役立つ次の追加機能も提供します。</target>
        </trans-unit>
        <trans-unit id="46680eec7cff4e4f9c4d0e8189218bca655c74cc" translate="yes" xml:space="preserve">
          <source>Qt 5 is currently tested and supported on QNX SDP 7.0, with support for both 32-bit and 64-bit target architectures:</source>
          <target state="translated">Qt 5 は現在、QNX SDP 7.0 でテストおよびサポートされており、32 ビットと 64 ビットの両方のターゲット アーキテクチャをサポートしています。</target>
        </trans-unit>
        <trans-unit id="9eb34e964ec854743c319f1af96273329fa9f066" translate="yes" xml:space="preserve">
          <source>Qt 5.0</source>
          <target state="translated">Qt5.</target>
        </trans-unit>
        <trans-unit id="663c58de1db2a2f833daca2f50f762ad532d4c57" translate="yes" xml:space="preserve">
          <source>Qt 5.1</source>
          <target state="translated">Qt 5.1</target>
        </trans-unit>
        <trans-unit id="296541b2b470f979cbdfa5c838fb75ae882cb192" translate="yes" xml:space="preserve">
          <source>Qt 5.10</source>
          <target state="translated">Qt 5.10</target>
        </trans-unit>
        <trans-unit id="8427f7eb0a483ec7dd46fe42fcdfb391ef2c23db" translate="yes" xml:space="preserve">
          <source>Qt 5.10 added support for &lt;a href=&quot;https://www.khronos.org/vulkan/#&quot;&gt;Vulkan&lt;/a&gt;. This requires the presence of the &lt;a href=&quot;https://www.lunarg.com/vulkan-sdk/#&quot;&gt;LunarG Vulkan SDK&lt;/a&gt;.</source>
          <target state="translated">Qt 5.10は&lt;a href=&quot;https://www.khronos.org/vulkan/#&quot;&gt;Vulkanの&lt;/a&gt;サポートを追加しました。これには&lt;a href=&quot;https://www.lunarg.com/vulkan-sdk/#&quot;&gt;LunarG Vulkan SDKの&lt;/a&gt;存在が必要です。</target>
        </trans-unit>
        <trans-unit id="182f54d1f36c7fec8794c4493de27e62f8e9cfad" translate="yes" xml:space="preserve">
          <source>Qt 5.11</source>
          <target state="translated">Qt 5.11</target>
        </trans-unit>
        <trans-unit id="3be67a91aef05451819e864302f895bf51bef58a" translate="yes" xml:space="preserve">
          <source>Qt 5.12</source>
          <target state="translated">Qt 5.12</target>
        </trans-unit>
        <trans-unit id="9f127259d8cb53c90945ea7323d58a806f1bf51e" translate="yes" xml:space="preserve">
          <source>Qt 5.13</source>
          <target state="translated">Qt 5.13</target>
        </trans-unit>
        <trans-unit id="068033c668e1468ebf4dfe94a1dd0a12a7bf6b41" translate="yes" xml:space="preserve">
          <source>Qt 5.2</source>
          <target state="translated">Qt 5.2</target>
        </trans-unit>
        <trans-unit id="403f9a25ec5f8f1327e472ef1ebe0868c0289562" translate="yes" xml:space="preserve">
          <source>Qt 5.3</source>
          <target state="translated">Qt 5.3</target>
        </trans-unit>
        <trans-unit id="2b7154275605a9422484941e52a5c5c6775910e7" translate="yes" xml:space="preserve">
          <source>Qt 5.4</source>
          <target state="translated">Qt 5.4</target>
        </trans-unit>
        <trans-unit id="a57c0da2f5f2b97238b52240786ae93d368f833a" translate="yes" xml:space="preserve">
          <source>Qt 5.4 introduced a native Android style for Qt Quick Controls.</source>
          <target state="translated">Qt 5.4では、QtクイックコントロールのAndroidネイティブスタイルが導入されました。</target>
        </trans-unit>
        <trans-unit id="473dd085e5a4b523bfb39d5bee7523be30cc1b82" translate="yes" xml:space="preserve">
          <source>Qt 5.5</source>
          <target state="translated">Qt5.</target>
        </trans-unit>
        <trans-unit id="761388d77f0ca9da1ddc9b3307c986c1f2506335" translate="yes" xml:space="preserve">
          <source>Qt 5.5 is currently tested and supported on VxWorks 7 release SR0480 2016-09-16. Supported architecture is ARM-v7.</source>
          <target state="translated">Qt 5.5は現在VxWorks 7リリースSR0480 2016-09-16でテストされ、サポートされています。サポートされているアーキテクチャはARM-v7です。</target>
        </trans-unit>
        <trans-unit id="ffaef66d815d151342a9fa434d058a3f44b21fbc" translate="yes" xml:space="preserve">
          <source>Qt 5.6</source>
          <target state="translated">Qt 5.6</target>
        </trans-unit>
        <trans-unit id="46eb1df0bcaf7ba084e06a0020b4c549c4685841" translate="yes" xml:space="preserve">
          <source>Qt 5.6 supports cross-platform high-DPI scaling for legacy applications, similar to the scaling done natively by macOS. This allows applications written for low-DPI screens to run unchanged on high-DPI devices. This feature is opt-in, and can be enabled by the following environment variables:</source>
          <target state="translated">Qt 5.6 は、macOS でネイティブに行われているスケーリングと同様に、レガシーアプリケーションのためのクロスプラットフォームの高DPIスケーリングをサポートしています。これにより、低DPI画面用に書かれたアプリケーションを高DPIデバイス上で変更せずに実行できるようになります。この機能はオプトインで、以下の環境変数で有効にすることができます。</target>
        </trans-unit>
        <trans-unit id="4fae3571ba781950fc968f3777cc27b1820f5ece" translate="yes" xml:space="preserve">
          <source>Qt 5.7</source>
          <target state="translated">Qt 5.7</target>
        </trans-unit>
        <trans-unit id="30431248fc9a3ea668b601199f1d8ff6ee42f2c8" translate="yes" xml:space="preserve">
          <source>Qt 5.8</source>
          <target state="translated">Qt 5.8</target>
        </trans-unit>
        <trans-unit id="c0242b14df5372c398501440decfa44f0a2c3095" translate="yes" xml:space="preserve">
          <source>Qt 5.9</source>
          <target state="translated">Qt 5.9</target>
        </trans-unit>
        <trans-unit id="0330cf9ad791499978728c1af2a4a67b68e09e5a" translate="yes" xml:space="preserve">
          <source>Qt &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebengine-3rdparty-webkit.html&quot;&gt;WebKit&lt;/a&gt;</source>
          <target state="translated">Qt &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebengine-3rdparty-webkit.html&quot;&gt;WebKit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b20454bcb20709f40d0352ebd312f1e2b0daf629" translate="yes" xml:space="preserve">
          <source>Qt &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebengine-3rdparty-webkit.html&quot;&gt;WebKit&lt;/a&gt; Widgets</source>
          <target state="translated">Qt &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebengine-3rdparty-webkit.html&quot;&gt;WebKit&lt;/a&gt;ウィジェット</target>
        </trans-unit>
        <trans-unit id="bb59a6cb371702b3615936fe595b696490d40be0" translate="yes" xml:space="preserve">
          <source>Qt &lt;a href=&quot;qml-qtwebengine-webengine&quot;&gt;WebEngine&lt;/a&gt; supports JavaScript &lt;a href=&quot;https://www.w3.org/TR/notifications#&quot;&gt;Web Notifications API&lt;/a&gt;. The application has to explicitly allow the feature by using &lt;a href=&quot;qwebenginepage#Feature-enum&quot;&gt;QWebEnginePage::Notifications&lt;/a&gt; or &lt;a href=&quot;qml-qtwebengine-webengineview#Feature-prop&quot;&gt;WebEngineView.Notifications&lt;/a&gt;.</source>
          <target state="translated">Qt &lt;a href=&quot;qml-qtwebengine-webengine&quot;&gt;WebEngine&lt;/a&gt;はJavaScript &lt;a href=&quot;https://www.w3.org/TR/notifications#&quot;&gt;Web通知APIを&lt;/a&gt;サポートしています。アプリケーションは&lt;a href=&quot;qwebenginepage#Feature-enum&quot;&gt;QWebEnginePage :: Notifications&lt;/a&gt;または&lt;a href=&quot;qml-qtwebengine-webengineview#Feature-prop&quot;&gt;WebEngineView.Notifications&lt;/a&gt;を使用して、機能を明示的に許可する必要があります。</target>
        </trans-unit>
        <trans-unit id="8ccd0a33327e570c6adff29cf8ca4dd6a45b47e1" translate="yes" xml:space="preserve">
          <source>Qt Add-on</source>
          <target state="translated">Qt アドオン</target>
        </trans-unit>
        <trans-unit id="2dd10be1e48fc149e76553bd7bb3141e890a9ab1" translate="yes" xml:space="preserve">
          <source>Qt Android Extras</source>
          <target state="translated">Qt Android エクストラ</target>
        </trans-unit>
        <trans-unit id="609cb8dbbd296d558ef7e04a9f40d4ed3850d3ca" translate="yes" xml:space="preserve">
          <source>Qt Android Extras Examples</source>
          <target state="translated">Qt Android エクストラの例</target>
        </trans-unit>
        <trans-unit id="3843e37ac75479329ecdc72051a6e72c3e583442" translate="yes" xml:space="preserve">
          <source>Qt Application Manager</source>
          <target state="translated">Qtアプリケーションマネージャ</target>
        </trans-unit>
        <trans-unit id="2eac325b3376ade92dcfd76c81202ec7c7c0e505" translate="yes" xml:space="preserve">
          <source>Qt Assistant</source>
          <target state="translated">Qtアシスタント</target>
        </trans-unit>
        <trans-unit id="20082964b6f9c44c0fdf20bc91f02223038f8e3a" translate="yes" xml:space="preserve">
          <source>Qt Assistant uses a system for managing Qt documentation that requires QDoc to generate inventories of files.</source>
          <target state="translated">Qt Assistantは、ファイルのインベントリを生成するためにQDocが必要なQtドキュメントを管理するためのシステムを利用しています。</target>
        </trans-unit>
        <trans-unit id="7a4854a4d09a57085d412394d14fde75cb8e0e12" translate="yes" xml:space="preserve">
          <source>Qt Assistant's toolbar contains tool buttons that are associated with actions used in other parts of the main window.</source>
          <target state="translated">Qt Assistantのツールバーには、メインウィンドウの他の部分で使用されるアクションに関連付けられたツールボタンが含まれています。</target>
        </trans-unit>
        <trans-unit id="cb58ff0a9d17e98a9ba45649da3be4993d203827" translate="yes" xml:space="preserve">
          <source>Qt Attributes for macOS</source>
          <target state="translated">macOS用のQt属性</target>
        </trans-unit>
        <trans-unit id="3ba3ad80b386d1260d2fdbc3b27708bb84e7a5aa" translate="yes" xml:space="preserve">
          <source>Qt Audio Engine</source>
          <target state="translated">Qtオーディオエンジン</target>
        </trans-unit>
        <trans-unit id="46327786641f8d3005a52ed5f20766621215ce0f" translate="yes" xml:space="preserve">
          <source>Qt Australia</source>
          <target state="translated">Qtオーストラリア</target>
        </trans-unit>
        <trans-unit id="4aa58db8aec5dbf8e67d3b21a8251cc1de9b8e43" translate="yes" xml:space="preserve">
          <source>Qt Bluetooth</source>
          <target state="translated">Qt Bluetooth</target>
        </trans-unit>
        <trans-unit id="02c71cb5be938e8fe6e01d0fdac40ed7dacc53cf" translate="yes" xml:space="preserve">
          <source>Qt Bluetooth is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under the &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt Bluetoothは&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;、Qt Companyの&lt;/a&gt;商用ライセンスに基づいて利用できます。さらに、&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License、バージョン3&lt;/a&gt;、または&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License、バージョン2で利用でき&lt;/a&gt;ます。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qtライセンス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="d93a32be3d107fc80f33642c6b979deecb724b4b" translate="yes" xml:space="preserve">
          <source>Qt Bluetooth supports Bluetooth Low Energy development for client/central role use cases. Further details can be found in the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtbluetooth-le-overview.html#&quot;&gt;Bluetooth Low Energy Overview&lt;/a&gt; section.</source>
          <target state="translated">Qt Bluetoothは、クライアント/中心的な役割のユースケースのBluetooth Low Energy開発をサポートしています。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtbluetooth-le-overview.html#&quot;&gt;Bluetooth低エネルギーの概要の&lt;/a&gt;セクションをご覧ください。</target>
        </trans-unit>
        <trans-unit id="aed7d26c13c241327ec57bbe21c5e585d526368e" translate="yes" xml:space="preserve">
          <source>Qt CAN Bus</source>
          <target state="translated">Qt CANバス</target>
        </trans-unit>
        <trans-unit id="b31df9da207dc798388a4db3f3292592e7d553b9" translate="yes" xml:space="preserve">
          <source>Qt CBOR API supports encoding and decoding any Simple Type, whether one of those above or any other value.</source>
          <target state="translated">Qt CBOR APIは、上記のいずれかの値であっても、その他の値であっても、任意のSimple Typeのエンコードとデコードをサポートしています。</target>
        </trans-unit>
        <trans-unit id="57001266c70c7b7c59cda6741d0d63c536242c41" translate="yes" xml:space="preserve">
          <source>Qt Charts</source>
          <target state="translated">Qtチャート</target>
        </trans-unit>
        <trans-unit id="330d4557e7863199930c2747e63c06733f9321bb" translate="yes" xml:space="preserve">
          <source>Qt Charts Examples</source>
          <target state="translated">Qtチャートの例</target>
        </trans-unit>
        <trans-unit id="d3cdafc667fb0f8a240c2669e87f17b26eeb952b" translate="yes" xml:space="preserve">
          <source>Qt Charts Overview</source>
          <target state="translated">Qtチャートの概要</target>
        </trans-unit>
        <trans-unit id="b842290ced279cd20f201dc45c76841a9195ebae" translate="yes" xml:space="preserve">
          <source>Qt Charts is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-3.0.html&quot;&gt;GNU General Public License, version 3&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt Chartsは&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;、Qt Companyの&lt;/a&gt;商用ライセンスの下で利用できます。さらに、&lt;a href=&quot;http://www.gnu.org/licenses/gpl-3.0.html&quot;&gt;GNU General Public Licenseバージョン3に&lt;/a&gt;基づいて利用できます。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qtライセンス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="e5ede181d666613692434b2cf697c597c45cf2b3" translate="yes" xml:space="preserve">
          <source>Qt Charts module provides a set of easy to use chart components. It uses the Qt Graphics View Framework, therefore charts can be easily integrated to modern user interfaces. Qt Charts can be used as QWidgets, &lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt;, or QML types. Users can easily create impressive graphs by selecting one of the charts themes.</source>
          <target state="translated">Qtチャートモジュールは、使いやすいチャートコンポーネントのセットを提供します。Qt Graphics View Frameworkを使用しているため、チャートを最新のユーザーインターフェイスに簡単に統合できます。QtチャートはQWidgets、&lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt;、またはQMLタイプとして使用できます。ユーザーは、チャートのテーマの1つを選択することにより、印象的なグラフを簡単に作成できます。</target>
        </trans-unit>
        <trans-unit id="0f5d115f23362fb647a83fa336b7d8040891ff70" translate="yes" xml:space="preserve">
          <source>Qt China</source>
          <target state="translated">キューティーチャイナ</target>
        </trans-unit>
        <trans-unit id="8e454ed2853d2fd414237f06b06070b97c9f1dad" translate="yes" xml:space="preserve">
          <source>Qt Compressed Help</source>
          <target state="translated">Qt圧縮ヘルプ</target>
        </trans-unit>
        <trans-unit id="e77fd07963a20b1d50c477473f114ed4c2f96df1" translate="yes" xml:space="preserve">
          <source>Qt Concurrent</source>
          <target state="translated">Qtコンカレント</target>
        </trans-unit>
        <trans-unit id="b3c612741e3ac97d17627a8e96567de8a2f023db" translate="yes" xml:space="preserve">
          <source>Qt Concurrent (Map, Filter, Reduce)</source>
          <target state="translated">Qtコンカレント (マップ、フィルタ、リデュース)</target>
        </trans-unit>
        <trans-unit id="79709007404b91150321a88b3614b00edb23cb8b" translate="yes" xml:space="preserve">
          <source>Qt Concurrent supports several STL-compatible container and iterator types, but works best with Qt containers that have random-access iterators, such as &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; or &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;. The map and filter functions accept both containers and begin/end iterators.</source>
          <target state="translated">QtコンカレントはいくつかのSTL互換のコンテナーとイテレータータイプをサポートしますが、&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;や&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;などのランダムアクセスイテレーターを持つQtコンテナーで最適に動作します。map関数とfilter関数は、両方のコンテナーと開始/終了反復子を受け入れます。</target>
        </trans-unit>
        <trans-unit id="e0fb10cf7cf2840a810f7350001af7ac5f6919f8" translate="yes" xml:space="preserve">
          <source>Qt Concurrent supports throwing and catching exceptions across thread boundaries, provided that the exception inherit from &lt;a href=&quot;qexception&quot;&gt;QException&lt;/a&gt; and implement two helper functions:</source>
          <target state="translated">Qt Concurrentは、例外が&lt;a href=&quot;qexception&quot;&gt;QException&lt;/a&gt;から継承され、2つのヘルパー関数を実装している場合、スレッドの境界を越えて例外をスローおよびキャッチすることをサポートします。</target>
        </trans-unit>
        <trans-unit id="0a2da62347f83693849e684d45dded336942f408" translate="yes" xml:space="preserve">
          <source>Qt Concurrent: Using a High-level API</source>
          <target state="translated">Qtコンカレント。高レベルAPIの使用</target>
        </trans-unit>
        <trans-unit id="00287cd5dc5b25b726b66fec9d2214b0b344d8b9" translate="yes" xml:space="preserve">
          <source>Qt Configure Options</source>
          <target state="translated">Qtの設定オプション</target>
        </trans-unit>
        <trans-unit id="7ff388c095eef92e10dc716ab7e34a9db588249b" translate="yes" xml:space="preserve">
          <source>Qt Core</source>
          <target state="translated">Qtコア</target>
        </trans-unit>
        <trans-unit id="a3abe3da61119765b605fe7a5e4a082be5946d65" translate="yes" xml:space="preserve">
          <source>Qt Core Feature</source>
          <target state="translated">Qtコア機能</target>
        </trans-unit>
        <trans-unit id="97b32908c5203d6a5a8f78f144f21ac65952a0bf" translate="yes" xml:space="preserve">
          <source>Qt Core adds these features to C++:</source>
          <target state="translated">Qt Core は C++にこれらの機能を追加しました。</target>
        </trans-unit>
        <trans-unit id="5460ccd27c4cf2f5d2fe467908b6c6f6c7fd7eb1" translate="yes" xml:space="preserve">
          <source>Qt Core also provides some of Qt's key frameworks.</source>
          <target state="translated">Qt Coreは、Qtの主要なフレームワークの一部も提供しています。</target>
        </trans-unit>
        <trans-unit id="1a7ab6b3d82a6d72676e320cc53e627a9b3d6f1f" translate="yes" xml:space="preserve">
          <source>Qt Core is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under free software licenses. Since Qt 5.4, these free software licenses are &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt Coreは&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;、Qt Companyの&lt;/a&gt;商用ライセンスの下で利用できます。また、フリーソフトウェアライセンスで利用できます。Qt 5.4以降、これらのフリーソフトウェアライセンスは、&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public Licenseバージョン3&lt;/a&gt;または&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public Licenseバージョン2&lt;/a&gt;です。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qtライセンス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c79cb25077ad580879aca14c31a4717fa1a5e40c" translate="yes" xml:space="preserve">
          <source>Qt Core is configured and built with accessibility support enabled.</source>
          <target state="translated">Qt Coreはアクセシビリティ対応を有効にして設定・構築されています。</target>
        </trans-unit>
        <trans-unit id="58bc00e9bc8b8147dff81354566a8a47e48bca95" translate="yes" xml:space="preserve">
          <source>Qt Creator</source>
          <target state="translated">キューティークリエータ</target>
        </trans-unit>
        <trans-unit id="9391183ac057cff79cc05ac897980e9ef0dc0b1a" translate="yes" xml:space="preserve">
          <source>Qt Creator IDE</source>
          <target state="translated">Qt Creator IDE</target>
        </trans-unit>
        <trans-unit id="31e44b65bda8e55f7f78001651eaf9195de84812" translate="yes" xml:space="preserve">
          <source>Qt Creator Manual</source>
          <target state="translated">Qt クリエイターマニュアル</target>
        </trans-unit>
        <trans-unit id="b3792b20254532638c3ef3451d8ee6505c73f4c1" translate="yes" xml:space="preserve">
          <source>Qt Creator Target Requirements</source>
          <target state="translated">Qt Creatorのターゲット要件</target>
        </trans-unit>
        <trans-unit id="7d69495a4999ebc05c7f5a8fd1336b9c448b7053" translate="yes" xml:space="preserve">
          <source>Qt Creator adds these files in a subdirectory of your project called &lt;b&gt;android&lt;/b&gt;. The contents of the &lt;b&gt;android&lt;/b&gt; folder is used as basis for your app's distributable application package.</source>
          <target state="translated">Qt Creatorは、これらのファイルを&lt;b&gt;android&lt;/b&gt;というプロジェクトのサブディレクトリに追加します。&lt;b&gt;android&lt;/b&gt;フォルダーの内容は、アプリの配布可能なアプリケーションパッケージの基礎として使用されます。</target>
        </trans-unit>
        <trans-unit id="073472f5cff358992df56b45d487877d0d0e5ea9" translate="yes" xml:space="preserve">
          <source>Qt Creator builds your application and creates an application package (APK) with the OpenSSL libraries bundled in it. Once the APK is ready, it uses &lt;code&gt;adb&lt;/code&gt; to deploy the APK on the target you chose and launch the application.</source>
          <target state="translated">Qt Creatorはアプリケーションをビルドし、OpenSSLライブラリがバンドルされたアプリケーションパッケージ（APK）を作成します。APKの準備が完了すると、 &lt;code&gt;adb&lt;/code&gt; を使用して、選択したターゲットにAPKをデプロイし、アプリケーションを起動します。</target>
        </trans-unit>
        <trans-unit id="345308139c828b5f5fa52604dc57fd40f258d10e" translate="yes" xml:space="preserve">
          <source>Qt Creator currently supports three methods of deployment for Android apps: the default deployment method is suitable for distribution of the APK file. With this deployment method, the necessary Qt libraries and files will be copied into your project directory, and bundled as part of the APK, so that you get a stand-alone, distributable application package.</source>
          <target state="translated">Qt Creatorは現在、Androidアプリのための3つのデプロイ方法をサポートしています:デフォルトのデプロイ方法は、APKファイルの配布に適しています。この配置方法では、必要な Qt ライブラリとファイルがプロジェクトディレクトリにコピーされ、APK の一部としてバンドルされるので、スタンドアロンで配布可能なアプリケーションパッケージが得られます。</target>
        </trans-unit>
        <trans-unit id="7047f18d261455789e1873978b6cf219f02a874e" translate="yes" xml:space="preserve">
          <source>Qt Creator deploys an application to the target device before starting it remotely. On most embedded devices, it is just copying application binaries and related data files to a folder on the target device. However, there is no standard for how this folder is called and where it is located. Quite a few configurations use &lt;code&gt;/tmp&lt;/code&gt; for this, which is often mapped to a RAM disk. This can cause some confusion as deployed applications disappear on the next device shutdown.</source>
          <target state="translated">Qt Creatorは、リモートで起動する前にアプリケーションをターゲットデバイスにデプロイします。ほとんどの組み込みデバイスでは、アプリケーションバイナリと関連データファイルをターゲットデバイスのフォルダーにコピーするだけです。ただし、このフォルダーの呼び出し方法と場所の基準はありません。このためにかなりの数の構成が &lt;code&gt;/tmp&lt;/code&gt; を使用しますが、これはRAMディスクにマップされることがよくあります。デプロイされたアプリケーションが次のデバイスのシャットダウン時に消えるので、これはいくつかの混乱を引き起こす可能性があります。</target>
        </trans-unit>
        <trans-unit id="6406d64496c9db4f0f8079bf728a4a01a8c8763b" translate="yes" xml:space="preserve">
          <source>Qt Creator deploys your application on the &lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt; device, if the device is detected by the PC.</source>
          <target state="translated">デバイスがPCによって検出された場合、Qt Creatorは&lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt;デバイスにアプリケーションをデプロイします。</target>
        </trans-unit>
        <trans-unit id="ff5ff14e3ff8bf283edd10d55ff95a72b494acbc" translate="yes" xml:space="preserve">
          <source>Qt Creator integrated development environment (IDE)</source>
          <target state="translated">Qt Creator 統合開発環境 (IDE)</target>
        </trans-unit>
        <trans-unit id="7c17a663982ffaac72f16ccb5bbdc61fdf745030" translate="yes" xml:space="preserve">
          <source>Qt Creator uses the debugging infrastructure to debug, inspect, and profile Qt Quick applications on the desktop as well as on remote devices. Qt Creator provides integrated clients for debugging JavaScript, inspecting the object tree, and profiling the activities of a QML engine. For more information, see &lt;a href=&quot;http://doc.qt.io/qtcreator/creator-debugging-qml.html#&quot;&gt;Qt Creator: Debugging Qt Quick Projects&lt;/a&gt;.</source>
          <target state="translated">Qt Creatorは、デバッグインフラストラクチャを使用して、デスクトップおよびリモートデバイス上のQt Quickアプリケーションをデバッグ、検査、およびプロファイルします。Qt Creatorは、JavaScriptのデバッグ、オブジェクトツリーの検査、QMLエンジンのアクティビティのプロファイリングのための統合クライアントを提供します。詳細については、&lt;a href=&quot;http://doc.qt.io/qtcreator/creator-debugging-qml.html#&quot;&gt;Qt Creator：Qt Quickプロジェクトのデバッグを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e094b064a3a05b291588d42bffee3f07b6c3e32a" translate="yes" xml:space="preserve">
          <source>Qt Creator's full debugging workflow supports debugging both C++ and QML code as well as the ability to profile code.</source>
          <target state="translated">Qt Creator の完全なデバッグワークフローは、C++と QML コードの両方のデバッグに加え、コードのプロファイル機能をサポートしています。</target>
        </trans-unit>
        <trans-unit id="4c1851a80f4ac9cd4e37f7a75b32852f9779bfa1" translate="yes" xml:space="preserve">
          <source>Qt D-Bus</source>
          <target state="translated">キューティーディーバス</target>
        </trans-unit>
        <trans-unit id="66b5fe65e1280b589a2e7968ad8795ada5124c93" translate="yes" xml:space="preserve">
          <source>Qt D-Bus C++ Classes</source>
          <target state="translated">Qt D-Bus C++クラス</target>
        </trans-unit>
        <trans-unit id="7497a93c520b92754792bad6b59db30d647056e0" translate="yes" xml:space="preserve">
          <source>Qt D-Bus Examples</source>
          <target state="translated">Qt D-Busの例</target>
        </trans-unit>
        <trans-unit id="6750c8cfab8423d36ab982c58c0ca8d365c46db6" translate="yes" xml:space="preserve">
          <source>Qt D-Bus XML compiler (qdbusxml2cpp)</source>
          <target state="translated">Qt D-Bus XML コンパイラ (qdbusxml2cpp)</target>
        </trans-unit>
        <trans-unit id="c2ec4aa1cfe8464c57fc91170916a1653a3643b5" translate="yes" xml:space="preserve">
          <source>Qt D-Bus provides template specializations for arrays and maps for use with Qt's &lt;a href=&quot;https://doc.qt.io/qt-5.13/topics-core.html#container-classes&quot;&gt;container classes&lt;/a&gt;, such as &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; and &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;, so it is not necessary to write the streaming operator functions for those. For other types, and specially for types implementing structures, the operators have to be explicitly implemented.</source>
          <target state="translated">Qt D-Busは、&lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;や&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;などのQtの&lt;a href=&quot;https://doc.qt.io/qt-5.13/topics-core.html#container-classes&quot;&gt;コンテナークラス&lt;/a&gt;で使用する配列およびマップのテンプレート特殊化を提供するため、これらのストリーミングオペレーター関数を作成する必要はありません。その他のタイプ、特に構造を実装するタイプの場合、演算子は明示的に実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="76af51e381d3949be967b05ef802f695671f807e" translate="yes" xml:space="preserve">
          <source>Qt Data Visualization</source>
          <target state="translated">Qtデータの可視化</target>
        </trans-unit>
        <trans-unit id="e1165f46e6a44ef7bb59332cfab64549401092c2" translate="yes" xml:space="preserve">
          <source>Qt Data Visualization C++ Classes</source>
          <target state="translated">Qt データ可視化 C++クラス</target>
        </trans-unit>
        <trans-unit id="4caf1bcebac1f3e8f870041e51f7913c9aca1e12" translate="yes" xml:space="preserve">
          <source>Qt Data Visualization Data Handling</source>
          <target state="translated">Qt データの可視化 データの取り扱い</target>
        </trans-unit>
        <trans-unit id="92f3bd562653124a6a91e8c458557561bb26de82" translate="yes" xml:space="preserve">
          <source>Qt Data Visualization Examples</source>
          <target state="translated">Qtデータの可視化の例</target>
        </trans-unit>
        <trans-unit id="6847c82684e3ef57a97331571cbf9310361db922" translate="yes" xml:space="preserve">
          <source>Qt Data Visualization Interacting with Data</source>
          <target state="translated">Qt データの可視化 データとのインタラクション</target>
        </trans-unit>
        <trans-unit id="cffddf5bb87dcc723f07bdfdb17185b8f8ded85e" translate="yes" xml:space="preserve">
          <source>Qt Data Visualization Known Issues</source>
          <target state="translated">Qtデータの可視化の既知の問題</target>
        </trans-unit>
        <trans-unit id="2f79de076935d1c30e06784fbb893753dc14829c" translate="yes" xml:space="preserve">
          <source>Qt Data Visualization QML Types</source>
          <target state="translated">Qt データの可視化 QML タイプ</target>
        </trans-unit>
        <trans-unit id="0a940957a124eb5cb901efd9fc052d9d970e8a32" translate="yes" xml:space="preserve">
          <source>Qt Data Visualization has default handlers for mouse actions and touch gestures. For the default mouse controls, see &lt;a href=&quot;q3dinputhandler&quot;&gt;Q3DInputHandler&lt;/a&gt;, and for the default touch controls, see &lt;a href=&quot;qtouch3dinputhandler&quot;&gt;QTouch3DInputHandler&lt;/a&gt;. The default handlers must be disabled when using customized input handlers.</source>
          <target state="translated">Qt Data Visualizationには、マウスアクションとタッチジェスチャーのデフォルトハンドラーがあります。デフォルトのマウスコントロールについては&lt;a href=&quot;q3dinputhandler&quot;&gt;Q3DInputHandler&lt;/a&gt;を、デフォルトのタッチコントロールについては&lt;a href=&quot;qtouch3dinputhandler&quot;&gt;QTouch3DInputHandlerを&lt;/a&gt;参照してください。カスタマイズされた入力ハンドラーを使用する場合、デフォルトのハンドラーを無効にする必要があります。</target>
        </trans-unit>
        <trans-unit id="af0e9fa79f520b46c0f641aae800742d90169685" translate="yes" xml:space="preserve">
          <source>Qt Data Visualization is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-3.0.html&quot;&gt;GNU General Public License, version 3&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt Data Visualizationは&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;、Qt Companyの&lt;/a&gt;商用ライセンスの下で利用できます。さらに、&lt;a href=&quot;http://www.gnu.org/licenses/gpl-3.0.html&quot;&gt;GNU General Public Licenseバージョン3に&lt;/a&gt;基づいて利用できます。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qtライセンス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="413e128505b219bcb04a283499dca717f585428f" translate="yes" xml:space="preserve">
          <source>Qt Data Visualization is built on Qt 5 and OpenGL to take advantage of hardware acceleration and Qt Quick 2.</source>
          <target state="translated">Qt Data Visualizationは、Qt 5とOpenGLをベースに構築されており、ハードウェアアクセラレーションとQt Quick 2を活用しています。</target>
        </trans-unit>
        <trans-unit id="50e4afa66a3669185b6fd355622bea551fdb17f3" translate="yes" xml:space="preserve">
          <source>Qt Data Visualization module provides a way to visualize data in 3D as bar, scatter, and surface graphs. It is especially useful for visualizing depth maps and large quantities of rapidly changing data, such as data received from multiple sensors. The look and feel of graphs can be customized by using themes or by adding custom items and labels to them.</source>
          <target state="translated">Qt データ可視化モジュールは、データを棒グラフ、散布図、表面グラフとして 3D で可視化する方法を提供します。特に、深度マップや、複数のセンサーから受信したデータなど、変化の激しい大量のデータを視覚化するのに便利です。グラフの見た目は、テーマを使用したり、カスタムアイテムやラベルを追加することでカスタマイズすることができます。</target>
        </trans-unit>
        <trans-unit id="9d2da74693af4113cbd06e18314422df8bcb1194" translate="yes" xml:space="preserve">
          <source>Qt Designer</source>
          <target state="translated">Qtデザイナー</target>
        </trans-unit>
        <trans-unit id="e934e1aee9b1c886053e6ef9cd90ae49e6f3e441" translate="yes" xml:space="preserve">
          <source>Qt Designer Integration</source>
          <target state="translated">Qt デザイナーとの統合</target>
        </trans-unit>
        <trans-unit id="4a944ed2efc114e87aa2addacd7fe9b6954ef58c" translate="yes" xml:space="preserve">
          <source>Qt Designer Manual</source>
          <target state="translated">Qtデザイナーマニュアル</target>
        </trans-unit>
        <trans-unit id="2b0f3c8574917fedf907bd152d01d7153e790fb4" translate="yes" xml:space="preserve">
          <source>Qt Designer UI files represent the widget tree of the form in XML format. The forms can be processed:</source>
          <target state="translated">Qt Designer UI ファイルは、フォームのウィジェットツリーを XML 形式で表現します。フォームを処理することができます。</target>
        </trans-unit>
        <trans-unit id="1170fdc227253bb87276af712c656ec010108b22" translate="yes" xml:space="preserve">
          <source>Qt Designer forms are processed at run-time to produce dynamically-generated user interfaces. In order to generate a form at run-time, a resource file containing a UI file is needed. Applications that use the form handling classes need to be configured to be built against the Qt UI Tools module. This is done by including the following declaration in a &lt;code&gt;qmake&lt;/code&gt; project file to ensure that the application is compiled and linked appropriately.</source>
          <target state="translated">Qt Designerフォームは実行時に処理され、動的に生成されるユーザーインターフェイスが生成されます。実行時にフォームを生成するには、UIファイルを含むリソースファイルが必要です。フォーム処理クラスを使用するアプリケーションは、Qt UIツールモジュールに対してビルドされるように構成する必要があります。これは、アプリケーションが適切にコンパイルおよびリンクされるように、 &lt;code&gt;qmake&lt;/code&gt; プロジェクトファイルに次の宣言を含めることによって行われます。</target>
        </trans-unit>
        <trans-unit id="c7f689047bf1af0cbb49ef3c7d2c59d05895c518" translate="yes" xml:space="preserve">
          <source>Qt Designer's Buddy Editing Mode</source>
          <target state="translated">Qtデザイナーのバディ編集モード</target>
        </trans-unit>
        <trans-unit id="5bbbdd676d6f30d8ca4048a469bdd7c07c9e91be" translate="yes" xml:space="preserve">
          <source>Qt Designer's Editing Modes</source>
          <target state="translated">Qt Designer の編集モード</target>
        </trans-unit>
        <trans-unit id="e097455af1a051dbe778e02caad5cac986467ffe" translate="yes" xml:space="preserve">
          <source>Qt Designer's Signals and Slots Editing Mode</source>
          <target state="translated">Qt Designer のシグナルとスロットの編集モード</target>
        </trans-unit>
        <trans-unit id="b8abf1cc95d9773e4f60a5067430064270850d2f" translate="yes" xml:space="preserve">
          <source>Qt Designer's Tab Order Editing Mode</source>
          <target state="translated">Qtデザイナーのタブ順編集モード</target>
        </trans-unit>
        <trans-unit id="f6b9667e82ca3035357a576a8d4ca42da03c2591" translate="yes" xml:space="preserve">
          <source>Qt Designer's UI File Format</source>
          <target state="translated">Qt Designer の UI ファイル形式</target>
        </trans-unit>
        <trans-unit id="a8e72d92841b871d469d16d32b9af79b9e719f84" translate="yes" xml:space="preserve">
          <source>Qt Designer's Widget Editing Mode</source>
          <target state="translated">Qtデザイナーのウィジェット編集モード</target>
        </trans-unit>
        <trans-unit id="711ace2620aabf8cfa91eecddfdb7c93540f74ae" translate="yes" xml:space="preserve">
          <source>Qt Designer{Qt Designer} is an excellent tool to preview style sheets. You can right-click on any widget in Designer and select &lt;b&gt;Change &lt;a href=&quot;stylesheet#&quot;&gt;styleSheet&lt;/a&gt;...&lt;/b&gt; to set the style sheet.</source>
          <target state="translated">Qt Designer {Qt Designer}は、スタイルシートをプレビューするための優れたツールです。あなたはデザイナーで任意のウィジェットを右クリックして選択することができます&lt;b&gt;変更&lt;a href=&quot;stylesheet#&quot;&gt;スタイルシートを&lt;/a&gt; ...&lt;/b&gt;スタイルシートを設定します。</target>
        </trans-unit>
        <trans-unit id="d7d271dcd1a749a8cab6f984ede766778960f748" translate="yes" xml:space="preserve">
          <source>Qt Developer Guide</source>
          <target state="translated">Qt 開発者ガイド</target>
        </trans-unit>
        <trans-unit id="24e0aa7a7f268bd0bc86a4cd212d2971b7bc1369" translate="yes" xml:space="preserve">
          <source>Qt Examples and Tutorials</source>
          <target state="translated">Qt の例とチュートリアル</target>
        </trans-unit>
        <trans-unit id="15386a965e59b464e97360a91be117a80c998db0" translate="yes" xml:space="preserve">
          <source>Qt Extended styles</source>
          <target state="translated">Qt 拡張スタイル</target>
        </trans-unit>
        <trans-unit id="36ac79f94fdad989fa0e92050d0369bdf25772e3" translate="yes" xml:space="preserve">
          <source>Qt Framework</source>
          <target state="translated">Qtフレームワーク</target>
        </trans-unit>
        <trans-unit id="54a50c025e7de0b62a9fbe628542e496726e59a5" translate="yes" xml:space="preserve">
          <source>Qt Framework and tools are available under both open-source and commercial &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html#&quot;&gt;licenses&lt;/a&gt;.</source>
          <target state="translated">Qtフレームワークとツールは、オープンソース&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html#&quot;&gt;ライセンス&lt;/a&gt;と商用ライセンスの両方で利用できます。</target>
        </trans-unit>
        <trans-unit id="944a30036401e27e2899e5bfb417c8a450472236" translate="yes" xml:space="preserve">
          <source>Qt GUI</source>
          <target state="translated">Qt GUI</target>
        </trans-unit>
        <trans-unit id="2a7835b42a4d94a94e3efb3b0c7c071b36ce2d93" translate="yes" xml:space="preserve">
          <source>Qt GUI C++ Classes</source>
          <target state="translated">Qt GUI C++クラス</target>
        </trans-unit>
        <trans-unit id="03e8f3f985179b1f1bb3d15a5ff6b71906252f54" translate="yes" xml:space="preserve">
          <source>Qt GUI is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under free software licenses. Since Qt 5.4, these free software licenses are &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt GUIは&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;、Qt Companyの&lt;/a&gt;商用ライセンスの下で利用できます。また、フリーソフトウェアライセンスで利用できます。Qt 5.4以降、これらのフリーソフトウェアライセンスは、&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License、バージョン3&lt;/a&gt;、または&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License、バージョン2&lt;/a&gt;です。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qtライセンス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="5c6322e312044872430c3c8ea3fa32578b890c94" translate="yes" xml:space="preserve">
          <source>Qt Gamepad</source>
          <target state="translated">Qtゲームパッド</target>
        </trans-unit>
        <trans-unit id="000bfa091e88a22a3c7fc6906956590b4ee8bb48" translate="yes" xml:space="preserve">
          <source>Qt Gamepad C++ Classes</source>
          <target state="translated">Qtゲームパッド C++クラス</target>
        </trans-unit>
        <trans-unit id="19ac62649633f0a738499377ebd32bb9aba4c007" translate="yes" xml:space="preserve">
          <source>Qt Gamepad QML Types</source>
          <target state="translated">Qtゲームパッド QMLタイプ</target>
        </trans-unit>
        <trans-unit id="fa8420eb0c7f510229cf362cb539656a4336f5e4" translate="yes" xml:space="preserve">
          <source>Qt Gamepad is an add-on library that enables Qt applications to support the use of gamepad hardware and in some cases remote control equipment. The module provides both QML and C++ interfaces. The primary target audience are embedded devices with fullscreen user interfaces, and mobile applications targeting TV-like form factors.</source>
          <target state="translated">Qt Gamepad は、Qt アプリケーションがゲームパッドハードウェアや場合によってはリモートコントロール機器の使用をサポートできるようにするアドオンライブラリです。このモジュールは QML と C++の両方のインターフェースを提供します。主なターゲットは、フルスクリーンのユーザーインターフェイスを持つ組み込みデバイスと、テレビのようなフォームファクタをターゲットとしたモバイルアプリケーションです。</target>
        </trans-unit>
        <trans-unit id="55b9e26ff3df23b8376f54d27698687116c221c2" translate="yes" xml:space="preserve">
          <source>Qt Gamepad uses a plugin-based, multi-backend architecture. This means that on some platforms, like Linux, there are multiple backends available. In case of Linux, the choices are:</source>
          <target state="translated">Qt Gamepad はプラグインベースのマルチバックエンドアーキテクチャを採用しています。これは、Linuxのようないくつかのプラットフォームでは、複数のバックエンドが利用可能であることを意味します。Linuxの場合、選択肢は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="ceee52e3046f52b561f78de417067956c0a8a393" translate="yes" xml:space="preserve">
          <source>Qt Germany</source>
          <target state="translated">Qtドイツ</target>
        </trans-unit>
        <trans-unit id="b492107902606347714ba8bdfd11a06991911576" translate="yes" xml:space="preserve">
          <source>Qt Graphical Effects</source>
          <target state="translated">Qt グラフィカルエフェクト</target>
        </trans-unit>
        <trans-unit id="6c1b0c3e20e0b56b80664768cdb04bdf61c360f1" translate="yes" xml:space="preserve">
          <source>Qt Graphical Effects Module</source>
          <target state="translated">Qt グラフィカルエフェクトモジュール</target>
        </trans-unit>
        <trans-unit id="689a0b7490b73b45a3d67dd162f17210dc33807f" translate="yes" xml:space="preserve">
          <source>Qt Help</source>
          <target state="translated">Qtヘルプ</target>
        </trans-unit>
        <trans-unit id="97aa0364e150351ca7b4a4bdd3d629d829bdd6e6" translate="yes" xml:space="preserve">
          <source>Qt Help Collection</source>
          <target state="translated">Qtヘルプコレクション</target>
        </trans-unit>
        <trans-unit id="1522569cdfc70cec5adde3df8f39c0cca0c09046" translate="yes" xml:space="preserve">
          <source>Qt Help Collection Project</source>
          <target state="translated">Qtヘルプコレクションプロジェクト</target>
        </trans-unit>
        <trans-unit id="55061c6ceda18cbe2d376c8820131bb1d98a014b" translate="yes" xml:space="preserve">
          <source>Qt Help Framework Configuration</source>
          <target state="translated">Qt ヘルプフレームワークの設定</target>
        </trans-unit>
        <trans-unit id="462352ab8b00ac18fdfb05e72e5703162f799231" translate="yes" xml:space="preserve">
          <source>Qt Help Project</source>
          <target state="translated">Qtヘルププロジェクト</target>
        </trans-unit>
        <trans-unit id="1ce6f99b9c80503ca999527c9984fa7314f1b05c" translate="yes" xml:space="preserve">
          <source>Qt Help Project File Format</source>
          <target state="translated">Qt ヘルププロジェクトファイル形式</target>
        </trans-unit>
        <trans-unit id="de710680af7ba36e764c7377be479fba9c51897f" translate="yes" xml:space="preserve">
          <source>Qt Help is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under free software licenses. Since Qt 5.4, these free software licenses are &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qtヘルプは&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;、Qt Companyの&lt;/a&gt;商用ライセンスに基づいて利用できます。また、フリーソフトウェアライセンスで利用できます。Qt 5.4以降、これらのフリーソフトウェアライセンスは、&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License、バージョン3&lt;/a&gt;、または&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License、バージョン2&lt;/a&gt;です。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qtライセンス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="75f591632569cfe2d6c7fc3614f127bb8923d9b9" translate="yes" xml:space="preserve">
          <source>Qt High DPI Support Overview</source>
          <target state="translated">Qt High DPI サポートの概要</target>
        </trans-unit>
        <trans-unit id="c0a40db3f3b3e5d3168f74634fd3d9e819581576" translate="yes" xml:space="preserve">
          <source>Qt Image Formats</source>
          <target state="translated">Qt の画像フォーマット</target>
        </trans-unit>
        <trans-unit id="93cd460b38d79839cc10a216435dbff4a609e384" translate="yes" xml:space="preserve">
          <source>Qt Image Formats is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under the &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt Image Formatsは、&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Companyの&lt;/a&gt;商用ライセンスの下で利用できます。さらに、&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License、バージョン3&lt;/a&gt;、または&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License、バージョン2で利用でき&lt;/a&gt;ます。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qtライセンス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="9dd0c0b18b697093652954183d6d64bad2f05cd9" translate="yes" xml:space="preserve">
          <source>Qt Index Reference</source>
          <target state="translated">Qt インデックスリファレンス</target>
        </trans-unit>
        <trans-unit id="c5f2dad8c8dd8496ecd97e7e6d2feec57be5b40c" translate="yes" xml:space="preserve">
          <source>Qt Installers</source>
          <target state="translated">Qt インストーラ</target>
        </trans-unit>
        <trans-unit id="b76fceb8fdb6c4d3cba20f5e0e5c6bc27e4e850e" translate="yes" xml:space="preserve">
          <source>Qt Labs Calendar</source>
          <target state="translated">Qt Labs カレンダー</target>
        </trans-unit>
        <trans-unit id="9c14d269a3a8f31d6e0a99ced525c42df0e33567" translate="yes" xml:space="preserve">
          <source>Qt Labs Calendar QML Types</source>
          <target state="translated">Qt Labs カレンダー QML型</target>
        </trans-unit>
        <trans-unit id="f7decdb0a0b1c24dcd4ec39a8adcaa96355eff3b" translate="yes" xml:space="preserve">
          <source>Qt Labs Platform</source>
          <target state="translated">Qt Labs プラットフォーム</target>
        </trans-unit>
        <trans-unit id="875a70695cad1002918ef95982ff8b9c7da824d6" translate="yes" xml:space="preserve">
          <source>Qt Labs Platform QML Types</source>
          <target state="translated">Qt Labs プラットフォーム QML タイプ</target>
        </trans-unit>
        <trans-unit id="65161fd4592f923f02cce840b3f0f2a0b822175b" translate="yes" xml:space="preserve">
          <source>Qt Libraries as Frameworks</source>
          <target state="translated">フレームワークとしての Qt ライブラリ</target>
        </trans-unit>
        <trans-unit id="8384e9799537b724e2155b8b5248affad8406c5d" translate="yes" xml:space="preserve">
          <source>Qt Linguist Examples</source>
          <target state="translated">Qt言語学者の例</target>
        </trans-unit>
        <trans-unit id="b9e2b1969e30bedaf0ad6af65fbc1b44d12b9011" translate="yes" xml:space="preserve">
          <source>Qt Linguist Manual</source>
          <target state="translated">Qt Linguist マニュアル</target>
        </trans-unit>
        <trans-unit id="0d69070fd8707a7e980436820ca3d2069df62448" translate="yes" xml:space="preserve">
          <source>Qt Linguist Manual: Developers</source>
          <target state="translated">Qt Linguist マニュアル。開発者</target>
        </trans-unit>
        <trans-unit id="3e02f5e64bbc12638c73fcb30fcd56107e0a3cf9" translate="yes" xml:space="preserve">
          <source>Qt Linguist Manual: Release Manager</source>
          <target state="translated">Qt Linguist マニュアル。リリースマネージャ</target>
        </trans-unit>
        <trans-unit id="680e146ae64c5cc31289887f5ecb9a2dc7608c59" translate="yes" xml:space="preserve">
          <source>Qt Linguist Manual: TS File Format</source>
          <target state="translated">Qt Linguist マニュアル。TS ファイル形式</target>
        </trans-unit>
        <trans-unit id="45387efbf482253ce76697663c69c43264c8dc67" translate="yes" xml:space="preserve">
          <source>Qt Linguist Manual: Text ID Based Translations</source>
          <target state="translated">Qt 言語学者マニュアル。テキストIDベースの翻訳</target>
        </trans-unit>
        <trans-unit id="5cc94099c627eeb96698953c579b4ba90873558e" translate="yes" xml:space="preserve">
          <source>Qt Linguist Manual: Translators</source>
          <target state="translated">Qt 言語学者マニュアル。翻訳者</target>
        </trans-unit>
        <trans-unit id="8a5f54b9d7a80b51f40ba940c07c3324c3179539" translate="yes" xml:space="preserve">
          <source>Qt Location</source>
          <target state="translated">Qtの場所</target>
        </trans-unit>
        <trans-unit id="421872e6033680208557001330a2101e4eb6a2dc" translate="yes" xml:space="preserve">
          <source>Qt Location 5.11</source>
          <target state="translated">Qtの場所 5.11</target>
        </trans-unit>
        <trans-unit id="4b77cd5a60def24415981cfb6bfcefc263371cb8" translate="yes" xml:space="preserve">
          <source>Qt Location C++ API</source>
          <target state="translated">QtロケーションC++API</target>
        </trans-unit>
        <trans-unit id="c2e5ff58d19f10aa52e9abbb1bfa6fe3343b47c9" translate="yes" xml:space="preserve">
          <source>Qt Location Esri Plugin</source>
          <target state="translated">QtレンタルEsriプラグイン</target>
        </trans-unit>
        <trans-unit id="0d211f69437e4dab11c9de5885965fcfa8450608" translate="yes" xml:space="preserve">
          <source>Qt Location GeoServices</source>
          <target state="translated">Qtロケーションジオサービス</target>
        </trans-unit>
        <trans-unit id="80a9dc390c115d39264c9883855a1e111fd0e69b" translate="yes" xml:space="preserve">
          <source>Qt Location HERE Plugin</source>
          <target state="translated">QtレンタルHEREプラグイン</target>
        </trans-unit>
        <trans-unit id="f92d8d666db764b0e27cf7c3c2afd891baf56f5d" translate="yes" xml:space="preserve">
          <source>Qt Location Items Overlay Plugin</source>
          <target state="translated">Qtロケーションアイテムオーバーレイプラグイン</target>
        </trans-unit>
        <trans-unit id="b5eed045e39fa5b2eefe5726d3ec76535a9d35ac" translate="yes" xml:space="preserve">
          <source>Qt Location Mapbox GL Plugin</source>
          <target state="translated">Qt Location Mapbox GLプラグイン</target>
        </trans-unit>
        <trans-unit id="1efffa52c9c20e17b56f7d548a28dd8fa2c06fd2" translate="yes" xml:space="preserve">
          <source>Qt Location Mapbox GL Plugin has the following support for platforms:</source>
          <target state="translated">Qt Location Mapbox GLプラグインは、以下のプラットフォームに対応しています。</target>
        </trans-unit>
        <trans-unit id="18c2b541fe098cf4b7d2bc92bdc2e9b53aa90453" translate="yes" xml:space="preserve">
          <source>Qt Location Mapbox Plugin</source>
          <target state="translated">Qt Location Mapboxプラグイン</target>
        </trans-unit>
        <trans-unit id="672bc02b606ec29e7f11384c5a9751e7a7c77062" translate="yes" xml:space="preserve">
          <source>Qt Location Open Street Map Plugin</source>
          <target state="translated">Qt Location Open Street Map プラグイン</target>
        </trans-unit>
        <trans-unit id="a75afe4e1dc766cb21ec5f99fe35288fe94a3c06" translate="yes" xml:space="preserve">
          <source>Qt Location is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under the &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt Locationは&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;、Qt Companyの&lt;/a&gt;商用ライセンスの下で利用できます。さらに、&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License、バージョン3&lt;/a&gt;、または&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License、バージョン2で利用でき&lt;/a&gt;ます。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qtライセンス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="906cd9e77002df1a32193f9f38d5d6f3df51e3b0" translate="yes" xml:space="preserve">
          <source>Qt Lottie Animation</source>
          <target state="translated">Qt ロティアニメーション</target>
        </trans-unit>
        <trans-unit id="415846e97ed2bc82dd9c5004d5b885b42136070b" translate="yes" xml:space="preserve">
          <source>Qt Lottie Animation (Technology Preview)</source>
          <target state="translated">QtのLottieアニメーション(技術プレビュー</target>
        </trans-unit>
        <trans-unit id="dca9016d895c9d3e6f449f31c4114f1ba991457c" translate="yes" xml:space="preserve">
          <source>Qt Mac Extras</source>
          <target state="translated">Qt Mac エクストラ</target>
        </trans-unit>
        <trans-unit id="6d74d96c39142880131d5f5c2eaf366812ace265" translate="yes" xml:space="preserve">
          <source>Qt Mac Extras Examples</source>
          <target state="translated">Qt Mac エクストラの例</target>
        </trans-unit>
        <trans-unit id="c7da07321574709ff29b73bdc23d08fe46bedbc3" translate="yes" xml:space="preserve">
          <source>Qt Mac Extras provide classes and functions that enable you to use miscellaneous functionality specific to the &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; and iOS operating systems.</source>
          <target state="translated">Qt Mac Extrasは、&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;およびiOSオペレーティングシステムに固有のその他の機能を使用できるようにするクラスと関数を提供します。</target>
        </trans-unit>
        <trans-unit id="e3ff607f1f6e0309d21cde0cadbfd203f3fcd4f4" translate="yes" xml:space="preserve">
          <source>Qt Main Window Framework</source>
          <target state="translated">Qt メインウィンドウフレームワーク</target>
        </trans-unit>
        <trans-unit id="57a60e3f2bf5a48f928845253121b9fdc63e90be" translate="yes" xml:space="preserve">
          <source>Qt Modbus</source>
          <target state="translated">Qtモドバス</target>
        </trans-unit>
        <trans-unit id="28c87bc159a7e9c38962295ed9c6c636ab2310f2" translate="yes" xml:space="preserve">
          <source>Qt Module</source>
          <target state="translated">Qtモジュール</target>
        </trans-unit>
        <trans-unit id="c4af43d3ce4e03e29971351a4373e95c372e5f05" translate="yes" xml:space="preserve">
          <source>Qt Multimedia</source>
          <target state="translated">Qtマルチメディア</target>
        </trans-unit>
        <trans-unit id="0acdc5d6025b6645fd50e2488c618feef8a8645c" translate="yes" xml:space="preserve">
          <source>Qt Multimedia Examples</source>
          <target state="translated">Qtマルチメディアの例</target>
        </trans-unit>
        <trans-unit id="710f02c4923e7fd520fab659e36dc17871bbc29e" translate="yes" xml:space="preserve">
          <source>Qt Multimedia QML API</source>
          <target state="translated">Qt マルチメディア QML API</target>
        </trans-unit>
        <trans-unit id="1dcea6fe6acfdadd9b8114c833485a792170ff86" translate="yes" xml:space="preserve">
          <source>Qt Multimedia VideoOutput</source>
          <target state="translated">QtマルチメディアVideoOutput</target>
        </trans-unit>
        <trans-unit id="449e83b4f1283455d73fed2ca3dc1c25422e6dac" translate="yes" xml:space="preserve">
          <source>Qt Multimedia Widgets</source>
          <target state="translated">Qt マルチメディアウィジェット</target>
        </trans-unit>
        <trans-unit id="cf64bc6b2cf2d8dcc5c37cba9287a30eeaf190b5" translate="yes" xml:space="preserve">
          <source>Qt Multimedia Widgets provides additional multimedia-related widgets and controls. The classes expand the capabilities of the &lt;a href=&quot;qtmultimedia-index#&quot;&gt;Qt Multimedia&lt;/a&gt; and &lt;a href=&quot;qtwidgets-index&quot;&gt;Qt Widgets&lt;/a&gt; modules.</source>
          <target state="translated">Qtマルチメディアウィジェットは、追加のマルチメディア関連のウィジェットとコントロールを提供します。クラスは&lt;a href=&quot;qtmultimedia-index#&quot;&gt;Qtマルチメディア&lt;/a&gt;および&lt;a href=&quot;qtwidgets-index&quot;&gt;Qtウィジェット&lt;/a&gt;モジュールの機能を拡張します。</target>
        </trans-unit>
        <trans-unit id="8c4f99721db171e530cf5f44b31c40cc5ec8fb79" translate="yes" xml:space="preserve">
          <source>Qt Multimedia features for Windows are implemented in two plugins; one using the Microsoft DirectShow API, and another using WMF (Windows Media Foundation) framework. DirectShow API was introduced in Windows 98, and gradually deprecated from Windows XP onwards. Media Foundation framework was introduced in Windows Vista as a replacement for DirectShow and other multimedia APIs. Consequently, WMF plugin in Qt is supported only for Windows Vista and later versions of the operating system.</source>
          <target state="translated">Windows用のQtマルチメディア機能は、Microsoft DirectShow APIを使用したものと、WMF (Windows Media Foundation)フレームワークを使用したものの2つのプラグインで実装されています。DirectShow API は Windows 98 で導入され、Windows XP 以降は徐々に非推奨となりました。Media Foundationフレームワークは、DirectShowと他のマルチメディアAPIの代替としてWindows Vistaで導入されました.そのため、QtのWMFプラグインはWindows Vista以降のOSでのみサポートされています。</target>
        </trans-unit>
        <trans-unit id="fd7eddddebcdb10b34be4697cfa30c963f3869b5" translate="yes" xml:space="preserve">
          <source>Qt Multimedia is an essential module that provides a rich set of QML types and C++ classes to handle multimedia content. It also provides necessary APIs to access the camera and radio functionality. The included &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtaudioengine-qmlmodule.html&quot;&gt;Qt Audio Engine&lt;/a&gt; provides types for 3D positional audio playback and content management.</source>
          <target state="translated">Qtマルチメディアは、マルチメディアコンテンツを処理するためのQMLタイプとC ++クラスの豊富なセットを提供する不可欠なモジュールです。また、カメラと無線機能にアクセスするために必要なAPIも提供します。含まれている&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtaudioengine-qmlmodule.html&quot;&gt;Qtオーディオエンジン&lt;/a&gt;は、3Dポジショナルオーディオ再生とコンテンツ管理のタイプを提供します。</target>
        </trans-unit>
        <trans-unit id="1a61b011c6dd81410e9bbd4e3afb1332eca54fea" translate="yes" xml:space="preserve">
          <source>Qt Multimedia on Windows</source>
          <target state="translated">WindowsでのQtマルチメディア</target>
        </trans-unit>
        <trans-unit id="49f5f499a984aedf90427bf53e58057f0cd81b6d" translate="yes" xml:space="preserve">
          <source>Qt Multimedia on iOS</source>
          <target state="translated">iOSでのQtマルチメディア</target>
        </trans-unit>
        <trans-unit id="0fdeeff90ec427ac6a68a8e84ac91a2cffac00a5" translate="yes" xml:space="preserve">
          <source>Qt NFC</source>
          <target state="translated">キューティーエヌエフシー</target>
        </trans-unit>
        <trans-unit id="4ab0bc53d5d1fd98697d1b6a2e0d1df37de7c0ca" translate="yes" xml:space="preserve">
          <source>Qt NFC Overview</source>
          <target state="translated">Qt NFCの概要</target>
        </trans-unit>
        <trans-unit id="1d22d83686e5a809cf911d676f2e79605fa23807" translate="yes" xml:space="preserve">
          <source>Qt NFC is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under free software licenses. Since Qt 5.4, these free software licenses are &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt NFCは&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;、Qt Companyの&lt;/a&gt;商用ライセンスの下で利用できます。また、フリーソフトウェアライセンスで利用できます。Qt 5.4以降、これらのフリーソフトウェアライセンスは、&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License、バージョン3&lt;/a&gt;、または&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License、バージョン2&lt;/a&gt;です。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qtライセンス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="d81c56f98e4d6d6064cbe951669f96315ec60e1c" translate="yes" xml:space="preserve">
          <source>Qt NFC on Android</source>
          <target state="translated">AndroidでQt NFC</target>
        </trans-unit>
        <trans-unit id="0d7a27f8a2f0473f745e029bed4b370c4ace8ce2" translate="yes" xml:space="preserve">
          <source>Qt Namespace</source>
          <target state="translated">Qt 名前空間</target>
        </trans-unit>
        <trans-unit id="744c2103e4374ae5a7426aa2883352759dac889f" translate="yes" xml:space="preserve">
          <source>Qt Network</source>
          <target state="translated">キューティーネットワーク</target>
        </trans-unit>
        <trans-unit id="6f79e032ed9904fd13f32b852a01e56ff10fef3f" translate="yes" xml:space="preserve">
          <source>Qt Network Authorization</source>
          <target state="translated">Qtネットワーク認証</target>
        </trans-unit>
        <trans-unit id="4dd921164cbee916a0a843577a482b329db82f49" translate="yes" xml:space="preserve">
          <source>Qt Network Authorization Examples</source>
          <target state="translated">Qt ネットワーク認証の例</target>
        </trans-unit>
        <trans-unit id="c4ee76407d22808c74890513046db897c009c535" translate="yes" xml:space="preserve">
          <source>Qt Network Authorization is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-3.0.html&quot;&gt;GNU General Public License, version 3&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt Network Authorizationは&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;、Qt Companyの&lt;/a&gt;商用ライセンスに基づいて利用できます。さらに、&lt;a href=&quot;http://www.gnu.org/licenses/gpl-3.0.html&quot;&gt;GNU General Public Licenseバージョン3に&lt;/a&gt;基づいて利用できます。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qtライセンス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="cfc0c0462f60c3a4a2d239cc88569f554410695b" translate="yes" xml:space="preserve">
          <source>Qt Network Authorization provides a set of APIs that enable Qt applications to obtain limited access to online accounts and HTTP services without exposing users' passwords.</source>
          <target state="translated">Qt Network Authorization は、Qt アプリケーションがユーザーのパスワードを公開することなく、オンラインアカウントや HTTP サービスへの限定的なアクセスを取得できるようにする一連の API を提供します。</target>
        </trans-unit>
        <trans-unit id="3807b6ab42eb1e0e78c83911515b46b0e43f3447" translate="yes" xml:space="preserve">
          <source>Qt Network can use the &lt;a href=&quot;https://www.openssl.org/#&quot;&gt;OpenSSL Toolkit&lt;/a&gt; as a backend. The library is then linked against OpenSSL in a way that requires compliance with the &lt;a href=&quot;https://www.openssl.org/source/license.html#&quot;&gt;OpenSSL License&lt;/a&gt;. To allow linking OpenSSL with Qt Network under the GPL, following exceptions to the GPL do apply:</source>
          <target state="translated">Qt Networkは&lt;a href=&quot;https://www.openssl.org/#&quot;&gt;OpenSSL Toolkit&lt;/a&gt;をバックエンドとして使用できます。ライブラリは、&lt;a href=&quot;https://www.openssl.org/source/license.html#&quot;&gt;OpenSSLライセンスに&lt;/a&gt;準拠する必要がある方法でOpenSSLに対してリンクされます。OpenSSLをGPLの下でQtネットワークとリンクできるようにするには、GPLに対する次の例外が適用されます。</target>
        </trans-unit>
        <trans-unit id="da0bd79bf4f470c3786ffd85ba52b306780fe2db" translate="yes" xml:space="preserve">
          <source>Qt Network is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under the &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt Networkは&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;、Qt Companyの&lt;/a&gt;商用ライセンスの下で利用できます。さらに、&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License、バージョン3&lt;/a&gt;、または&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License、バージョン2で利用でき&lt;/a&gt;ます。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qtライセンス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c67dfaf23ef37b16c1b57b0c1b8c596e2d5495a2" translate="yes" xml:space="preserve">
          <source>Qt Network provides a set of APIs for programming applications that use TCP/IP. Operations such as requests, cookies, and sending data over HTTP are handled by various C++ classes.</source>
          <target state="translated">Qt Networkは、TCP/IPを使用するアプリケーションをプログラミングするためのAPIセットを提供します。HTTP 上でのリクエスト、クッキー、データ送信などの操作は、さまざまな C++クラスによって処理されます。</target>
        </trans-unit>
        <trans-unit id="8d59a69c162e2b72ebcb8f00e9882a0118f4c2a6" translate="yes" xml:space="preserve">
          <source>Qt Norway</source>
          <target state="translated">Qtノルウェー</target>
        </trans-unit>
        <trans-unit id="b9e6c21753c3d994a6fa4c4ec61ae95c8a86a725" translate="yes" xml:space="preserve">
          <source>Qt Object Model</source>
          <target state="translated">Qtオブジェクトモデル</target>
        </trans-unit>
        <trans-unit id="319fad1497a229fbe04d91f8a6d30745f1c86839" translate="yes" xml:space="preserve">
          <source>Qt Objects: Identity vs Value</source>
          <target state="translated">Qt オブジェクト。アイデンティティと価値</target>
        </trans-unit>
        <trans-unit id="2bebb5edc1f682b8ac07f14a9eb9e1c2b7272f19" translate="yes" xml:space="preserve">
          <source>Qt OpenGL</source>
          <target state="translated">Qt OpenGL</target>
        </trans-unit>
        <trans-unit id="e22bca8545c9452ef487e60f4d66ad897e945f4e" translate="yes" xml:space="preserve">
          <source>Qt Platform Abstraction</source>
          <target state="translated">Qtプラットフォームの抽象化</target>
        </trans-unit>
        <trans-unit id="7bc67b9a5dac8d577a4999042a52ef021602e61e" translate="yes" xml:space="preserve">
          <source>Qt Platform Headers</source>
          <target state="translated">Qtプラットフォームヘッダ</target>
        </trans-unit>
        <trans-unit id="090119bc24eecffeb74997216d8eb36519301d04" translate="yes" xml:space="preserve">
          <source>Qt Platforms</source>
          <target state="translated">Qtプラットフォーム</target>
        </trans-unit>
        <trans-unit id="e318696574cfa917934fdaad4d953ce3f186876d" translate="yes" xml:space="preserve">
          <source>Qt Positioning</source>
          <target state="translated">Qt ポジショニング</target>
        </trans-unit>
        <trans-unit id="60b8520ff1d98a83e234a52ee08c75784d4dfb29" translate="yes" xml:space="preserve">
          <source>Qt Positioning is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under free software licenses. Since Qt 5.4, these free software licenses are &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qtポジショニングは&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;、Qt Companyの&lt;/a&gt;商用ライセンスに基づいて利用できます。また、フリーソフトウェアライセンスで利用できます。Qt 5.4以降、これらの無料ソフトウェアライセンスは、&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public Licenseバージョン3&lt;/a&gt;または&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public Licenseバージョン2&lt;/a&gt;です。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qtライセンス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="02c4c5d460b748edf7cfc44976e931a972f3b0df" translate="yes" xml:space="preserve">
          <source>Qt Positioning provides the majority of its functionality through plugins. This document outlines how to develop a new position plugin.</source>
          <target state="translated">Qt Positioningは、その機能の大部分をプラグインで提供しています。このドキュメントでは、新しいポジションプラグインを開発する方法の概要を説明します。</target>
        </trans-unit>
        <trans-unit id="8aff3ef2229b0332680e59ea26dcdda5ff9e421b" translate="yes" xml:space="preserve">
          <source>Qt Positioning service plugins</source>
          <target state="translated">Qt 位置決めサービスプラグイン</target>
        </trans-unit>
        <trans-unit id="30f8eb4fd689cee6f5af66572222ebb3f39d0c96" translate="yes" xml:space="preserve">
          <source>Qt Prerendered Font (QPF2)</source>
          <target state="translated">Qt Prerendered Font (QPF2)</target>
        </trans-unit>
        <trans-unit id="b2bf59b7c3b6d1ee2870c36d41ece2e2a6292ec6" translate="yes" xml:space="preserve">
          <source>Qt Print Support</source>
          <target state="translated">Qt 印刷サポート</target>
        </trans-unit>
        <trans-unit id="377355c5ae27b97e49b7ff1929f51fdda8a34eed" translate="yes" xml:space="preserve">
          <source>Qt Project Community</source>
          <target state="translated">Qt プロジェクトコミュニティ</target>
        </trans-unit>
        <trans-unit id="e86debb0aeb1425c3ab219c8ff81a616b0e74daa" translate="yes" xml:space="preserve">
          <source>Qt Purchasing</source>
          <target state="translated">Qt購入</target>
        </trans-unit>
        <trans-unit id="cd0a9a809f1f2a879a60672a8f95e0f8c965cc75" translate="yes" xml:space="preserve">
          <source>Qt Purchasing C++ Classes</source>
          <target state="translated">Qt購入C++クラス</target>
        </trans-unit>
        <trans-unit id="babf400104925de71c10b798b59dea49670d1edd" translate="yes" xml:space="preserve">
          <source>Qt Purchasing QML Types</source>
          <target state="translated">Qt購入QMLの種類</target>
        </trans-unit>
        <trans-unit id="e6623b1c60a0364d70a2658b79d87e8426148eed" translate="yes" xml:space="preserve">
          <source>Qt Purchasing is an add-on library that enables Qt applications to support in-app purchases. It is a cross-platform library that currently supports purchases made to the Mac App Store on OS X, App Store on iOS, and Google Play on Android.</source>
          <target state="translated">Qt Purchasing は、Qt アプリケーションがアプリ内購入をサポートするためのアドオンライブラリです。現在、OS X の Mac App Store、iOS の App Store、Android の Google Play での購入をサポートしています。</target>
        </trans-unit>
        <trans-unit id="d67bb1d1d9652c6eb74c431d7673d57a89d46e74" translate="yes" xml:space="preserve">
          <source>Qt Purchasing is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under the &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt購入は&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;、Qt Company&lt;/a&gt;からの商用ライセンスの下で利用できます。さらに、&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public Licenseバージョン3に&lt;/a&gt;基づいて利用できます。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qtライセンス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="7218a7f2c78b734490b974d8bfd61c712db33be1" translate="yes" xml:space="preserve">
          <source>Qt Purchasing provides C++ classes and QML types to access information about in-app products registered in the external store on the current platform, as well as to request purchases for those products.</source>
          <target state="translated">Qt Purchasing は、現在のプラットフォーム上の外部ストアに登録されているアプリ内製品の情報にアクセスしたり、その製品の購入を依頼したりするための C++クラスと QML 型を提供しています。</target>
        </trans-unit>
        <trans-unit id="d788ca662989edbe5b698569ae70698572061902" translate="yes" xml:space="preserve">
          <source>Qt QML</source>
          <target state="translated">Qt QML</target>
        </trans-unit>
        <trans-unit id="2d4474bee3b008799aa35c12902ef945cf369663" translate="yes" xml:space="preserve">
          <source>Qt QML State Machine QML Types</source>
          <target state="translated">Qt QMLステートマシン QML型</target>
        </trans-unit>
        <trans-unit id="05c9771c1fa8d0b5f95ed0abd15220523689f6f8" translate="yes" xml:space="preserve">
          <source>Qt QML Type</source>
          <target state="translated">Qt QML型</target>
        </trans-unit>
        <trans-unit id="ffcdc97a6db8c050114ce6f638ff2c4488047ae7" translate="yes" xml:space="preserve">
          <source>Qt QML is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under free software licenses. Since Qt 5.4, these free software licenses are &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt QMLは&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;からの商用ライセンスの下で利用可能です。また、フリーソフトウェアライセンスで利用できます。Qt 5.4以降、これらの無料ソフトウェアライセンスは、&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public Licenseバージョン3&lt;/a&gt;または&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public Licenseバージョン2&lt;/a&gt;です。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qtライセンス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="03bdd09ec7c9fac8931bc382f10d8d30a337c12a" translate="yes" xml:space="preserve">
          <source>Qt Quarterly</source>
          <target state="translated">四半期ごとのQt</target>
        </trans-unit>
        <trans-unit id="1af66b22af0768fc8c4ea81153b1a6a6e89d73ef" translate="yes" xml:space="preserve">
          <source>Qt Quick</source>
          <target state="translated">Qt クイック</target>
        </trans-unit>
        <trans-unit id="b0a096dba330608416c6ceda9e4782b9cf4fac7b" translate="yes" xml:space="preserve">
          <source>Qt Quick 1: &lt;code&gt;CONFIG+=declarative_debug&lt;/code&gt;</source>
          <target state="translated">Qt Quick 1： &lt;code&gt;CONFIG+=declarative_debug&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f1018d5515158453043981973b75bf1f81318c10" translate="yes" xml:space="preserve">
          <source>Qt Quick 1: &lt;code&gt;QT_DECLARATIVE_DEBUG&lt;/code&gt;</source>
          <target state="translated">Qt Quick 1： &lt;code&gt;QT_DECLARATIVE_DEBUG&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d98618a45638697d40a50d52bf26a701d97c7816" translate="yes" xml:space="preserve">
          <source>Qt Quick 2 Applications</source>
          <target state="translated">Qt Quick 2 アプリケーション</target>
        </trans-unit>
        <trans-unit id="d5f7f2cafa3b675bca2fa3a3084bbcf29f7eac05" translate="yes" xml:space="preserve">
          <source>Qt Quick 2 makes use of a dedicated scene graph based and a series of adaptations of which the default uses OpenGL ES 2.0 or OpenGL 2.0 for its rendering. Using a scene graph for graphics rather than the traditional imperative painting systems (&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; and similar), means the scene to be rendered can be retained between frames and the complete set of primitives to render is known before rendering starts. This opens up for a number of optimizations, such as batch rendering to minimize state changes and discarding obscured primitives.</source>
          <target state="translated">Qt Quick 2は、専用のシーングラフと一連の適応を利用します。デフォルトでは、レンダリングにOpenGL ES 2.0またはOpenGL 2.0を使用します。従来の命令型ペインティングシステム（&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;など）ではなくグラフィックのシーングラフを使用すると、レンダリングするシーンをフレーム間で保持でき、レンダリングを開始する前にレンダリングするプリミティブの完全なセットがわかります。これにより、状態の変化を最小限に抑えるためのバッチレンダリングや不明瞭なプリミティブの破棄など、多くの最適化が可能になります。</target>
        </trans-unit>
        <trans-unit id="ed9871b5cd6f22b9e50b5ddfcc5afbae41d6a9e6" translate="yes" xml:space="preserve">
          <source>Qt Quick 2 makes use of a dedicated scene graph based on OpenGL ES 2.0 or OpenGL 2.0 for its rendering. Using a scene graph for graphics rather than the traditional imperative painting systems (&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; and similar), means the scene to be rendered can be retained between frames and the complete set of primitives to render is known before rendering starts. This opens up for a number of optimizations, such as batching the OpenGL draw calls to minimize state changes or discarding obscured primitives.</source>
          <target state="translated">Qt Quick 2は、レンダリングにOpenGL ES 2.0またはOpenGL 2.0に基づく専用のシーングラフを使用します。従来の命令型ペインティングシステム（&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;など）ではなく、グラフィックにシーングラフを使用すると、レンダリングするシーンをフレーム間で保持でき、レンダリングを開始する前に、レンダリングするプリミティブの完全なセットがわかります。これにより、OpenGL描画呼び出しをバッチ処理して状態の変化を最小限に抑えたり、不明瞭なプリミティブを破棄するなど、多くの最適化が可能になります。</target>
        </trans-unit>
        <trans-unit id="d7b691dfcb7f8c2c0838b6edee91222de4e04e96" translate="yes" xml:space="preserve">
          <source>Qt Quick 2: &lt;code&gt;CONFIG+=qml_debug&lt;/code&gt;</source>
          <target state="translated">Qt Quick 2： &lt;code&gt;CONFIG+=qml_debug&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ac96663a7fb5388e1e605c82f3edf9e3a13d3d00" translate="yes" xml:space="preserve">
          <source>Qt Quick 2: &lt;code&gt;QT_QML_DEBUG&lt;/code&gt;</source>
          <target state="translated">Qt Quick 2： &lt;code&gt;QT_QML_DEBUG&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="db41cbd62b90cee9c636111e4267799ae707af71" translate="yes" xml:space="preserve">
          <source>Qt Quick Compiler</source>
          <target state="translated">Qt クイックコンパイラ</target>
        </trans-unit>
        <trans-unit id="457e8cffe7e91910656aa62cf6956f2323dd5e6e" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls</source>
          <target state="translated">Qt クイックコントロール</target>
        </trans-unit>
        <trans-unit id="cbd9258e1528c79ac986895db8d8003dae767a0d" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls - Gallery</source>
          <target state="translated">Qt クイックコントロール-ギャラリー</target>
        </trans-unit>
        <trans-unit id="bbe8b4f4db65b3d5bee2f1c8b8789c27c38a1ffc" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls 1</source>
          <target state="translated">Qt クイックコントロール 1</target>
        </trans-unit>
        <trans-unit id="89e0471f6cade03456f7758ef1f66d3dbc3f11fe" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls 1 Examples</source>
          <target state="translated">Qt クイックコントロール 1 の例</target>
        </trans-unit>
        <trans-unit id="6d11684fcda12139b207e9bad738021b08d65916" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls 1 Overview</source>
          <target state="translated">Qt クイックコントロール 1 概要</target>
        </trans-unit>
        <trans-unit id="dc70e03c9a9905bf26925d1164a9f3727db2e0f6" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls 1 Platform Notes</source>
          <target state="translated">Qt クイックコントロール 1 プラットフォームノート</target>
        </trans-unit>
        <trans-unit id="848280c002080e11be0fc2c1ff27df66758d11ab" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls 1 QML Types</source>
          <target state="translated">Qt クイックコントロール 1 QML タイプ</target>
        </trans-unit>
        <trans-unit id="6de4dbc9e7fae54565a26436fa29dd221b3d56c9" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls 1 Styles</source>
          <target state="translated">Qt クイックコントロール 1 スタイル</target>
        </trans-unit>
        <trans-unit id="2cc4e44eedaeb4e64b1876dc4e9e0aa0389a9b45" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls 1 Styles QML Types</source>
          <target state="translated">Qt クイックコントロール 1 スタイル QML タイプ</target>
        </trans-unit>
        <trans-unit id="8d886e6f361c1e4f9c14dd507da0efb14c7c1785" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls 1 was originally developed to support desktop platforms, with mobile and embedded support coming shortly afterwards. They have a very broad scope, in that they provide a styling system flexible enough to allow the development of applications that have either a platform-dependent or platform-independent style.</source>
          <target state="translated">Qt Quick Controls 1 はもともとデスクトッププラットフォームをサポートするために開発されました。Qt Quick Controls は非常に広い範囲をカバーしており、プラットフォームに依存しないスタイルやプラットフォームに依存しないスタイルを持つアプリケーションの開発を可能にする柔軟性の高いスタイリングシステムを提供しています。</target>
        </trans-unit>
        <trans-unit id="1a95c5b3972ea913d7fdbcec7857626934da9f80" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls 2</source>
          <target state="translated">Qt クイックコントロール 2</target>
        </trans-unit>
        <trans-unit id="57c8827d9b0bc11bff0e446e03364f43a5bd3d1f" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls 2 - Contact List</source>
          <target state="translated">Qt クイックコントロール 2-コンタクトリスト</target>
        </trans-unit>
        <trans-unit id="5f2a003fb6722283ecb91c46c2f7f3f0db863678" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls 2 - Flat Style</source>
          <target state="translated">Qtクイックコントロール2-フラットスタイル</target>
        </trans-unit>
        <trans-unit id="71767cb71e13e895ea230afebe38c32b3dd3958d" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls 2 Configuration File</source>
          <target state="translated">Qtクイックコントロール2設定ファイル</target>
        </trans-unit>
        <trans-unit id="39f5c7f3ebc3a2451993ef8f6f590fe3a7fd4148" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls 2 Guidelines</source>
          <target state="translated">Qtクイックコントロール2ガイドライン</target>
        </trans-unit>
        <trans-unit id="db55991282a4d86ff57db318e2edb2a06ddb5351" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls 2 QML Types</source>
          <target state="translated">Qt クイックコントロール 2 QML タイプ</target>
        </trans-unit>
        <trans-unit id="ace894aeb418ca62ecbc9773b1c5f73d5b65ddce" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls 2 also provides a &lt;a href=&quot;http://code.qt.io/cgit/qt/qtquickcontrols2.git/tree/src/imports/controls/imagine/design&quot;&gt;plugin&lt;/a&gt; for Sketch that automatically fixes the thickness of the 9-patch lines after the assets are exported. To install this file, double-click on it. Once Sketch has confirmed that the 9-patch export plugin has been installed, the plugin will automatically process images when they are exported.</source>
          <target state="translated">Qt Quick Controls 2には、アセットのエクスポート後に9パッチラインの太さを自動的に修正するSketchの&lt;a href=&quot;http://code.qt.io/cgit/qt/qtquickcontrols2.git/tree/src/imports/controls/imagine/design&quot;&gt;プラグイン&lt;/a&gt;も用意されています。このファイルをインストールするには、ダブルクリックします。9パッチエクスポートプラグインがインストールされていることをSketchが確認すると、プラグインはエクスポート時に画像を自動的に処理します。</target>
        </trans-unit>
        <trans-unit id="5e5981dba969ca9c78afd4dd080ed61f1e4c30d8" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls 2 comes with a selection customizable styles. See &lt;a href=&quot;qtquickcontrols2-styles#&quot;&gt;Styling Qt Quick Controls 2&lt;/a&gt; for more details.</source>
          <target state="translated">Qt Quick Controls 2には、カスタマイズ可能な選択スタイルが付属しています。詳細については、&lt;a href=&quot;qtquickcontrols2-styles#&quot;&gt;Qt Quick Controls 2のスタイル設定を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3f68833a07103414c4b2f2a779efc8fc28fa7299" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls 2 comes with a selection of styles.</source>
          <target state="translated">Qtクイックコントロール2は、スタイルの選択が付属しています。</target>
        </trans-unit>
        <trans-unit id="baaeb0d54aad8666fcb209be1e1b5792c9f3eaa2" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls 2 consist of a hierarchy (tree) of items. In order to provide a custom look and feel, the default QML implementation of each item can be replaced with a custom one.</source>
          <target state="translated">Qtクイックコントロール2は、項目の階層(ツリー)で構成されています。カスタムのルックアンドフィールを提供するために、各項目のデフォルトの QML 実装をカスタムのものに置き換えることができます。</target>
        </trans-unit>
        <trans-unit id="a761d67338d5ac6a250543817dc2a859259d893c" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls 2 follows the standard &lt;a href=&quot;qtquick-input-focus&quot;&gt;Qt Quick focus system&lt;/a&gt;, while also providing some added convenience. For example, the &lt;a href=&quot;qml-qtquick-controls2-control#focusPolicy-prop&quot;&gt;focusPolicy&lt;/a&gt; property can be used to control the ways in which a control receives focus.</source>
          <target state="translated">Qt Quick Controls 2は、標準の&lt;a href=&quot;qtquick-input-focus&quot;&gt;Qt Quickフォーカスシステムに&lt;/a&gt;準拠していますが、さらに便利な機能もいくつか備えています。たとえば、&lt;a href=&quot;qml-qtquick-controls2-control#focusPolicy-prop&quot;&gt;focusPolicy&lt;/a&gt;プロパティを使用して、コントロールがフォーカスを受け取る方法を制御できます。</target>
        </trans-unit>
        <trans-unit id="3a4184d9a649a76b0b208618921c2b196b64a08f" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls 2 is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under the &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt Quick Controls 2は&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;、Qt Company&lt;/a&gt;からの商用ライセンスの下で利用できます。さらに、&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License、バージョン3&lt;/a&gt;、または&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License、バージョン2で利用でき&lt;/a&gt;ます。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qtライセンス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="df0a6ac099e9514a01f2b7079fcb82cd54dbf2f6" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls 2 offers a selection of button-like controls.</source>
          <target state="translated">Qtクイックコントロール2では、ボタンのようなコントロールを選択することができます。</target>
        </trans-unit>
        <trans-unit id="124a2841a4d4e2af6f2c9ca33796a502429fb9a0" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls 2 offers a selection of container-like controls.</source>
          <target state="translated">Qtクイックコントロール2では、コンテナのようなコントロールを選択することができます。</target>
        </trans-unit>
        <trans-unit id="9d7bb32a9e56d317a157d58fb712415d5a1dde90" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls 2 offers a selection of controls that act as &lt;a href=&quot;qtquick-input-focus#acquiring-focus-and-focus-scopes&quot;&gt;focus scopes&lt;/a&gt;:</source>
          <target state="translated">Qt Quick Controls 2は、&lt;a href=&quot;qtquick-input-focus#acquiring-focus-and-focus-scopes&quot;&gt;フォーカススコープ&lt;/a&gt;として機能する一連のコントロールを提供します。</target>
        </trans-unit>
        <trans-unit id="1aa8215241b67aac13dc196eb70baea73173e163" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls 2 offers a selection of controls that are used as delegates in views.</source>
          <target state="translated">Qt Quick Controls 2 には、ビューのデリゲートとして使用されるコントロールのセレクションが用意されています。</target>
        </trans-unit>
        <trans-unit id="55638d92f3be73832358377c19922ad655da34d6" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls 2 offers a selection of controls that can be used to build complete interfaces in Qt Quick.</source>
          <target state="translated">Qt Quick Controls 2 は、Qt Quick で完全なインターフェースを構築するために使用できるコントロールの選択を提供します。</target>
        </trans-unit>
        <trans-unit id="f8182a9d4efd82dd64e6c9ee9fbbdb3e332353b8" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls 2 offers a selection of indicator-like controls.</source>
          <target state="translated">Qtクイックコントロール2では、インジケータのようなコントロールを選択することができます。</target>
        </trans-unit>
        <trans-unit id="682ee37cef39da062321a2c9748b59eea5d3634e" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls 2 offers a selection of navigation models.</source>
          <target state="translated">Qtクイックコントロール2では、ナビゲーションモデルの選択が可能です。</target>
        </trans-unit>
        <trans-unit id="59faae7b9d3b417161d7ca37207c13073d337e93" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls 2 offers a selection of separators.</source>
          <target state="translated">Qtクイックコントロール2は、セパレータの選択を提供しています。</target>
        </trans-unit>
        <trans-unit id="085ab561a372f8c8ef995ff7a6af273a08b89b2e" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls 2 offers a variety of input controls for both numeric and textual input.</source>
          <target state="translated">Qtクイックコントロール2では、数値入力とテキスト入力の両方に対応した様々な入力コントロールを提供しています。</target>
        </trans-unit>
        <trans-unit id="046b45c405c425eb3a155ac786a2596fa593c7b2" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls 2 provides a set of controls that can be used to build complete interfaces in Qt Quick. The module was introduced in Qt 5.7.</source>
          <target state="translated">Qt Quick Controls 2 は、Qt Quick で完全なインターフェイスを構築するために使用できる一連のコントロールを提供します。このモジュールは Qt 5.7 で導入されました。</target>
        </trans-unit>
        <trans-unit id="d3d4a06254e4d80c73c501a5e4061d7e3653a97a" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls 2 support Qt's cross-platform high-DPI scaling introduced in Qt 5.6. The feature is opt-in, and can be enabled by setting the &lt;code&gt;Qt::AA_EnableHighDpiScaling&lt;/code&gt; application attribute in C++ before &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; is constructed:</source>
          <target state="translated">Qt Quick Controls 2は、Qt 5.6で導入されたQtのクロスプラットフォーム高DPIスケーリングをサポートしています。この機能はオプトインであり、&lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt;が構築される前にC ++で &lt;code&gt;Qt::AA_EnableHighDpiScaling&lt;/code&gt; アプリケーション属性を設定することで有効にできます。</target>
        </trans-unit>
        <trans-unit id="70a6e065fda763039e6ff0566436fb39785c5d38" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls 2 support a special configuration file, &lt;code&gt;:/qtquickcontrols2.conf&lt;/code&gt;, that is built into an application's resources.</source>
          <target state="translated">Qt Quick Controls 2 は、アプリケーションのリソースに組み込まれている特別な構成ファイル &lt;code&gt;:/qtquickcontrols2.conf&lt;/code&gt; をサポートしています。</target>
        </trans-unit>
        <trans-unit id="3939b1bd0d9137a76ff0420b4ae48e54dd3d406e" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls 2.0 was introduced in Qt 5.7. Subsequent minor Qt releases increment the import version of the Qt Quick Controls 2 modules by one, until Qt 5.12, where the import versions match Qt's minor version. The experimental Qt Labs modules use import version 1.0.</source>
          <target state="translated">Qt Quick Controls 2.0 は Qt 5.7 で導入されました。その後の Qt のマイナーリリースでは、Qt Quick Controls 2 モジュールのインポートバージョンが 1 つずつ増え、Qt 5.12 まではインポートバージョンが Qt のマイナーバージョンと一致するようになりました。実験的な Qt Labs モジュールは、インポートバージョン 1.0 を使用しています。</target>
        </trans-unit>
        <trans-unit id="5ff4966b0f33679da09f4aadcd13380ead5c2737" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls 2.3 (Qt 5.10) introduced built-in support for icons. Buttons, item delegates, and menu items are now capable of presenting an icon in addition to a text label.</source>
          <target state="translated">Qt クイック コントロール 2.3 (Qt 5.10)では、アイコンの組み込みサポートが導入されました。ボタン、アイテムデリゲート、メニュー項目では、テキストラベルに加えてアイコンを表示できるようになりました。</target>
        </trans-unit>
        <trans-unit id="95a18e3bf45615c2e23712953f021d4fb68a6c39" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls Configuration File</source>
          <target state="translated">Qt クイックコントロール設定ファイル</target>
        </trans-unit>
        <trans-unit id="061d14ae8cdd094540454b2a9d791d2737b96b68" translate="yes" xml:space="preserve">
          <source>Qt Quick Controls Guidelines</source>
          <target state="translated">Qt クイックコントロールガイドライン</target>
        </trans-unit>
        <trans-unit id="33070deeb05fa49a4353905abbe841eb48daf1c7" translate="yes" xml:space="preserve">
          <source>Qt Quick Demo - Calqlatr</source>
          <target state="translated">Qtクイックデモ-Calqlatr</target>
        </trans-unit>
        <trans-unit id="ba9f44675c88ebed1a6ce249220ae1dc286260b2" translate="yes" xml:space="preserve">
          <source>Qt Quick Demo - Clocks</source>
          <target state="translated">Qt クイックデモ-時計</target>
        </trans-unit>
        <trans-unit id="4b1125f4353d9538188a76b8257266bb15911119" translate="yes" xml:space="preserve">
          <source>Qt Quick Demo - Maroon in Trouble</source>
          <target state="translated">Qtクイックデモ-トラブルのマルーン</target>
        </trans-unit>
        <trans-unit id="6b77fdb9acb8988866e55bb553ae5aad132e163d" translate="yes" xml:space="preserve">
          <source>Qt Quick Demo - Photo Surface</source>
          <target state="translated">Qt クイックデモ-フォトサーフェイス</target>
        </trans-unit>
        <trans-unit id="e74739c03151fc672683d766474e6274a4086b62" translate="yes" xml:space="preserve">
          <source>Qt Quick Demo - Photo Viewer</source>
          <target state="translated">Qt クイックデモ-フォトビューア</target>
        </trans-unit>
        <trans-unit id="e95e839d47f4b7e27d9b912b36f8f50455023012" translate="yes" xml:space="preserve">
          <source>Qt Quick Demo - RSS News</source>
          <target state="translated">Qtクイックデモ-RSSニュース</target>
        </trans-unit>
        <trans-unit id="76daec552ba1a18a0011411212d1cdff8d087d95" translate="yes" xml:space="preserve">
          <source>Qt Quick Demo - Same Game</source>
          <target state="translated">Qt クイックデモ-同じゲーム</target>
        </trans-unit>
        <trans-unit id="bba2e7cb3d9ad830c65c2f06e9b17b94e2113daa" translate="yes" xml:space="preserve">
          <source>Qt Quick Demo - StocQt</source>
          <target state="translated">Qt クイックデモ-StocQt</target>
        </trans-unit>
        <trans-unit id="f9fa9a9a564c96a9e18eb7c83bc8eb34f2b1b54a" translate="yes" xml:space="preserve">
          <source>Qt Quick Demo - Tweet Search</source>
          <target state="translated">Qtクイックデモ-ツイート検索</target>
        </trans-unit>
        <trans-unit id="3ac7f7f0752fb07e3954c6cb7e1a1f1cc474c3c9" translate="yes" xml:space="preserve">
          <source>Qt Quick Demos</source>
          <target state="translated">Qt クイックデモ</target>
        </trans-unit>
        <trans-unit id="db3f975b1b1270201fb9ba65d6a3c308efc7b5bb" translate="yes" xml:space="preserve">
          <source>Qt Quick Designer</source>
          <target state="translated">Qt クイックデザイナー</target>
        </trans-unit>
        <trans-unit id="aed8cdba65fc51ad57d5bd62015bf50bb8f01df1" translate="yes" xml:space="preserve">
          <source>Qt Quick Dialogs</source>
          <target state="translated">Qt クイックダイアログ</target>
        </trans-unit>
        <trans-unit id="af80ce08bd359d4749f45375e950e5f78f7aee75" translate="yes" xml:space="preserve">
          <source>Qt Quick Direct3D 12 Adaptation</source>
          <target state="translated">QtクイックDirect3D 12の適応</target>
        </trans-unit>
        <trans-unit id="448bc4b1cc657127bd2e3ce2d77b842f034aa5f9" translate="yes" xml:space="preserve">
          <source>Qt Quick Examples and Tutorials</source>
          <target state="translated">Qt のクイックサンプルとチュートリアル</target>
        </trans-unit>
        <trans-unit id="fa1de3e11c4162db20b4328fe0ebce89a3d66d0d" translate="yes" xml:space="preserve">
          <source>Qt Quick Extras</source>
          <target state="translated">Qtクイックエクストラ</target>
        </trans-unit>
        <trans-unit id="87b18a28746480927fb35e3a115be69f45cbe1a2" translate="yes" xml:space="preserve">
          <source>Qt Quick Extras Examples</source>
          <target state="translated">Qt クイックエクストラの例</target>
        </trans-unit>
        <trans-unit id="7cce7068d56c0c7c12ae6ea2895bb45c3d0acbb7" translate="yes" xml:space="preserve">
          <source>Qt Quick Extras Overview</source>
          <target state="translated">Qt クイックエクストラの概要</target>
        </trans-unit>
        <trans-unit id="a3448a306c394713d8c7a7f26f2b7f1734719dae" translate="yes" xml:space="preserve">
          <source>Qt Quick Extras QML Types</source>
          <target state="translated">Qt クイックエクストラ QML 型</target>
        </trans-unit>
        <trans-unit id="7f2822e8b27a0141be719b7de5c49d380b44ceb3" translate="yes" xml:space="preserve">
          <source>Qt Quick Guidelines</source>
          <target state="translated">Qt クイックガイドライン</target>
        </trans-unit>
        <trans-unit id="ec7d46b6d5b27f196cea4fc87a16dde35b3dfdf5" translate="yes" xml:space="preserve">
          <source>Qt Quick Input Handlers</source>
          <target state="translated">Qt クイック入力ハンドラ</target>
        </trans-unit>
        <trans-unit id="1b5d6b6293e964006a9d9fa3654d88752d47eb52" translate="yes" xml:space="preserve">
          <source>Qt Quick Input Handlers are a set of QML types used to handle events from keyboard, touch, mouse, and stylus devices in a UI. In contrast to event-handling items, such as &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-flickable&quot;&gt;Flickable&lt;/a&gt;, input handlers are explicitly non-visual, require less memory and are intended to be used in greater numbers: one handler instance per aspect of interaction. Each input handler instance handles certain events on behalf of its &lt;code&gt;parent&lt;/code&gt; Item. Thus the visual and behavioral concerns are better separated, and the behavior is built up by finer-grained composition.</source>
          <target state="translated">Qtクイック入力ハンドラーは、UIでキーボード、タッチ、マウス、およびスタイラスデバイスからのイベントを処理するために使用される一連のQMLタイプです。&lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt;や&lt;a href=&quot;qml-qtquick-flickable&quot;&gt;Flickable&lt;/a&gt;などのイベント処理アイテムとは対照的に、入力ハンドラーは明示的に非視覚的であり、必要なメモリが少なく、より多くの数で使用することを目的としています。各入力ハンドラインスタンスは、 &lt;code&gt;parent&lt;/code&gt; アイテムに代わって特定のイベントを処理します。したがって、視覚的な問題と動作の問題はより適切に分離され、動作はより細かい構成で構築されます。</target>
        </trans-unit>
        <trans-unit id="d9f85d01dd97000f3d9e168f3c7689939b191e26" translate="yes" xml:space="preserve">
          <source>Qt Quick Layouts</source>
          <target state="translated">Qt クイックレイアウト</target>
        </trans-unit>
        <trans-unit id="c802e38d8d5b455fda19c65a2370e036c69652e0" translate="yes" xml:space="preserve">
          <source>Qt Quick Layouts - Basic Example</source>
          <target state="translated">Qtクイックレイアウト-基本的な例</target>
        </trans-unit>
        <trans-unit id="4e0d0daeeee9d6de35842f0fd3811352a1ebb89d" translate="yes" xml:space="preserve">
          <source>Qt Quick Layouts Overview</source>
          <target state="translated">Qt クイックレイアウトの概要</target>
        </trans-unit>
        <trans-unit id="eeedb9acf6800697e4f28894c32b7bd8d33e2870" translate="yes" xml:space="preserve">
          <source>Qt Quick Layouts QML Types</source>
          <target state="translated">Qt クイックレイアウト QML タイプ</target>
        </trans-unit>
        <trans-unit id="945663df216d6a47eff1e317e4bc7276da8407b5" translate="yes" xml:space="preserve">
          <source>Qt Quick Layouts are a set of QML types used to arrange items in a user interface. In contrast to &lt;a href=&quot;qtquick-positioning-layouts#&quot;&gt;positioners&lt;/a&gt;, Qt Quick Layouts can also resize their items. This makes them well suited for resizable user interfaces. Since layouts are items they can consequently be nested.</source>
          <target state="translated">Qtクイックレイアウトは、ユーザーインターフェースでアイテムを配置するために使用されるQMLタイプのセットです。対照的に&lt;a href=&quot;qtquick-positioning-layouts#&quot;&gt;ポジショナー&lt;/a&gt;、Qtのクイックレイアウトはまた、彼らのアイテムのサイズを変更することができます。これにより、サイズ変更可能なユーザーインターフェイスに適しています。レイアウトはアイテムであるため、結果的にネストすることができます。</target>
        </trans-unit>
        <trans-unit id="3de2fb729ea26326ca631c872df82c4a3e5b7cb9" translate="yes" xml:space="preserve">
          <source>Qt Quick Layouts is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under free software licenses. Since Qt 5.4, these free software licenses are &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt Quick Layoutsは&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;、Qt Companyの&lt;/a&gt;商用ライセンスに基づいて利用できます。また、フリーソフトウェアライセンスで利用できます。Qt 5.4以降、これらの無料ソフトウェアライセンスは、&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public Licenseバージョン3&lt;/a&gt;または&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public Licenseバージョン2&lt;/a&gt;です。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qtライセンス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="78c88281da5ca0abcb97a77f3bd7c4efa8c85023" translate="yes" xml:space="preserve">
          <source>Qt Quick Locale's data is based on Common Locale Data Repository v1.8.1.</source>
          <target state="translated">Qt Quick LocaleのデータはCommon Locale Data Repository v1.8.1に基づいています。</target>
        </trans-unit>
        <trans-unit id="e782ee3d531635bc1a7f1e54b1b52059435ecdef" translate="yes" xml:space="preserve">
          <source>Qt Quick OpenVG Adaptation</source>
          <target state="translated">Qt クイック OpenVG の適応</target>
        </trans-unit>
        <trans-unit id="aaadb702d9ac4f34016e2c55f562fccd30c33da4" translate="yes" xml:space="preserve">
          <source>Qt Quick Projects</source>
          <target state="translated">Qtクイックプロジェクト</target>
        </trans-unit>
        <trans-unit id="9330ed56e254310190a11d485a722347910b8423" translate="yes" xml:space="preserve">
          <source>Qt Quick Scene Graph</source>
          <target state="translated">Qt クイックシーングラフ</target>
        </trans-unit>
        <trans-unit id="9ec8cff141f56fb8637fc1123fe69d9e13f60e33" translate="yes" xml:space="preserve">
          <source>Qt Quick Scene Graph OpenGL Renderer</source>
          <target state="translated">Qt クイックシーングラフ OpenGLレンダラ</target>
        </trans-unit>
        <trans-unit id="8d4a958f8823c62c85aad68048fe2b14f255e670" translate="yes" xml:space="preserve">
          <source>Qt Quick Scene Graph Rendering Thread</source>
          <target state="translated">Qt クイックシーングラフレンダリングスレッド</target>
        </trans-unit>
        <trans-unit id="2d0ad0ccf69891b48ae06b9c3cf68512163d5213" translate="yes" xml:space="preserve">
          <source>Qt Quick Scene Graph Structure</source>
          <target state="translated">Qt クイックシーングラフ構造</target>
        </trans-unit>
        <trans-unit id="444271ec5ba6fed4304a1d1451e1bd18554e3940" translate="yes" xml:space="preserve">
          <source>Qt Quick Software Adaptation</source>
          <target state="translated">Qtクイックソフトウェアの適応</target>
        </trans-unit>
        <trans-unit id="47ff881ef8c31eeb59610f39f2445d0b2043980e" translate="yes" xml:space="preserve">
          <source>Qt Quick States</source>
          <target state="translated">Qt クイックステート</target>
        </trans-unit>
        <trans-unit id="914eff968adf8c8f2ffdab69ed57057b2520a747" translate="yes" xml:space="preserve">
          <source>Qt Quick Templates 2</source>
          <target state="translated">Qtクイックテンプレート2</target>
        </trans-unit>
        <trans-unit id="c474593a2f2b7299ed98d437cd18f3065a6ddb31" translate="yes" xml:space="preserve">
          <source>Qt Quick Templates 2 QML Types</source>
          <target state="translated">Qtクイックテンプレート2 QMLタイプ</target>
        </trans-unit>
        <trans-unit id="ecb1aba735f26d79be46d91844fe4e9998e38148" translate="yes" xml:space="preserve">
          <source>Qt Quick Templates are the foundations of &lt;a href=&quot;qtquickcontrols-index#&quot;&gt;Qt Quick Controls 2&lt;/a&gt;. Templates are non-visual implementations of controls' logic and behavior. They offer an interface to visualize the controls in QML using &lt;a href=&quot;qtquick-index&quot;&gt;Qt Quick&lt;/a&gt;.</source>
          <target state="translated">Qt Quickテンプレートは&lt;a href=&quot;qtquickcontrols-index#&quot;&gt;Qt Quick Controls 2の&lt;/a&gt;基礎です。テンプレートは、コントロールのロジックと動作の非視覚的な実装です。&lt;a href=&quot;qtquick-index&quot;&gt;Qt Quick&lt;/a&gt;を使用してQMLのコントロールを視覚化するためのインターフェースを提供します。</target>
        </trans-unit>
        <trans-unit id="0d7580cf404ee422d22047c9e18b0ce42a4a9920" translate="yes" xml:space="preserve">
          <source>Qt Quick Test</source>
          <target state="translated">Qtクイックテスト</target>
        </trans-unit>
        <trans-unit id="5aef98f6abde99385f2b8177281f030108b26731" translate="yes" xml:space="preserve">
          <source>Qt Quick Test C++ API</source>
          <target state="translated">Qt クイックテスト C++API</target>
        </trans-unit>
        <trans-unit id="4af4e5e5daf9c5940ebe96cd443539415ef17bff" translate="yes" xml:space="preserve">
          <source>Qt Quick Test QML Types</source>
          <target state="translated">Qtクイックテスト QML型</target>
        </trans-unit>
        <trans-unit id="4d8aa04af68282a2291d5b972062d309b7788fee" translate="yes" xml:space="preserve">
          <source>Qt Quick Test: QML Unit Testing Framework</source>
          <target state="translated">Qtクイックテスト。QML ユニットテストフレームワーク</target>
        </trans-unit>
        <trans-unit id="772e1499c4c22c8c6653664d363522d8f1357fdf" translate="yes" xml:space="preserve">
          <source>Qt Quick Tests is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under free software licenses. Since Qt 5.4, these free software licenses are &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qtクイックテストは&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;、Qt Company&lt;/a&gt;からの商用ライセンスの下で利用できます。また、フリーソフトウェアライセンスで利用できます。Qt 5.4以降、これらの無料ソフトウェアライセンスは、&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public Licenseバージョン3&lt;/a&gt;または&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public Licenseバージョン2&lt;/a&gt;です。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qtライセンス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c360f7b0484bfe3cfc1b007809a9e476da8148dd" translate="yes" xml:space="preserve">
          <source>Qt Quick Text Editor</source>
          <target state="translated">Qt クイックテキストエディタ</target>
        </trans-unit>
        <trans-unit id="c209c2b68533185c3779c747358eb2d036cd88ca" translate="yes" xml:space="preserve">
          <source>Qt Quick Tools and Utilities</source>
          <target state="translated">Qt クイックツールとユーティリティ</target>
        </trans-unit>
        <trans-unit id="1622275b87a26d07c2d455ad9fc291a3085cc608" translate="yes" xml:space="preserve">
          <source>Qt Quick WebGL</source>
          <target state="translated">Qt クイック WebGL</target>
        </trans-unit>
        <trans-unit id="4e4fd5d7c756eb189a4dbb85eede7a926c41fbd4" translate="yes" xml:space="preserve">
          <source>Qt Quick WebGL is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/#&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-3.0.html#&quot;&gt;GNU General Public License, version 3&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html#&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt Quick WebGLは&lt;a href=&quot;http://www.qt.io/about-us/#&quot;&gt;、Qt Company&lt;/a&gt;からの商用ライセンスの下で利用できます。さらに、&lt;a href=&quot;http://www.gnu.org/licenses/gpl-3.0.html#&quot;&gt;GNU General Public Licenseバージョン3に&lt;/a&gt;基づいて利用できます。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html#&quot;&gt;Qtライセンス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="0d42017afd29dab17f2266aefc53b93f162c4410" translate="yes" xml:space="preserve">
          <source>Qt Quick also provides access to &lt;a href=&quot;qinputmethod&quot;&gt;QInputMethod&lt;/a&gt; in QML through &lt;a href=&quot;qml-qtqml-qt&quot;&gt;Qt global object&lt;/a&gt; as &lt;code&gt;Qt.inputMethod&lt;/code&gt; property.</source>
          <target state="translated">Qt Quickは、 &lt;code&gt;Qt.inputMethod&lt;/code&gt; プロパティとして&lt;a href=&quot;qml-qtqml-qt&quot;&gt;Qtグローバルオブジェクト&lt;/a&gt;を介してQMLの&lt;a href=&quot;qinputmethod&quot;&gt;QInputMethod&lt;/a&gt;へのアクセスも提供します。</target>
        </trans-unit>
        <trans-unit id="de04cca2985a4010b580389be431eeaa43fdd4ee" translate="yes" xml:space="preserve">
          <source>Qt Quick applications use the same underlying localization system as Qt C++ applications (lupdate, lrelease and .ts files). You use the same tools as described in the &lt;a href=&quot;https://doc.qt.io/qt-5.13/linguist-manager.html&quot;&gt;Qt Linguist Manual&lt;/a&gt;. You can even have user interface strings in C++ and QML source in the same application. The system will create a single combined translation file and the strings are accessible from QML and C++.</source>
          <target state="translated">Qt Quickアプリケーションは、Qt C ++アプリケーション（lupdate、lrelease、.tsファイル）と同じローカリゼーションシステムを使用します。&lt;a href=&quot;https://doc.qt.io/qt-5.13/linguist-manager.html&quot;&gt;Qt Linguist Manualで&lt;/a&gt;説明されているのと同じツールを使用します。同じアプリケーションのC ++およびQMLソースにユーザーインターフェイス文字列を含めることもできます。システムは単一の結合翻訳ファイルを作成し、文字列はQMLおよびC ++からアクセスできます。</target>
        </trans-unit>
        <trans-unit id="7a3762fb5611ff668e712aa0d87fb6235eb0dabc" translate="yes" xml:space="preserve">
          <source>Qt Quick is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under free software licenses. Since Qt 5.4, these free software licenses are &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt Quickは&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;、Qt Companyの&lt;/a&gt;商用ライセンスの下で利用できます。また、フリーソフトウェアライセンスで利用できます。Qt 5.4以降、これらの無料ソフトウェアライセンスは、&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public Licenseバージョン3&lt;/a&gt;または&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public Licenseバージョン2&lt;/a&gt;です。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qtライセンス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="f00dc9e1bbaba5d36a1e01de873bcb4b83745bdb" translate="yes" xml:space="preserve">
          <source>Qt Quick is designed for developing animated, fluid user interfaces. When mirroring your application, remember to test that the animations and transitions continue to work as expected. If you do not have the resources to add right-to-left support for your application, it may be better to just keep the application layouts left aligned and just make sure that text is translated and aligned properly.</source>
          <target state="translated">Qt Quick は、アニメーション化された滑らかなユーザーインターフェイスを開発するために設計されています。アプリケーションをミラーリングする際には、アニメーションやトランジションが期待通りに動作するかどうかをテストすることを忘れないでください。アプリケーションに右から左へのサポートを追加するリソースがない場合は、アプリケーションのレイアウトを左揃えにしておいて、テキストが適切に翻訳されて配置されていることを確認するだけの方が良いかもしれません。</target>
        </trans-unit>
        <trans-unit id="d7291c43f982b3179d91b01991f3a8848413e585" translate="yes" xml:space="preserve">
          <source>Qt Quick is the standard library of types and functionality for QML. It includes visual types, interactive types, animations, models and views, particle effects and shader effects. A QML application developer can get access to all of that functionality with a single import statement.</source>
          <target state="translated">Qt Quickは、QMLのための標準的な型と機能のライブラリです。これには、ビジュアル型、インタラクティブ型、アニメーション、モデルやビュー、パーティクル効果、シェーダ効果などが含まれます。QML アプリケーションの開発者は、1 つのインポート ステートメントでこれらの機能のすべてにアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="21509dc7b7eeb5b18fbe51eb9ec8ee814b3fcebc" translate="yes" xml:space="preserve">
          <source>Qt Quick items use a recursive drawing algorithm for determining which items are drawn on top in case of collisions. In general items are drawn on top of their parent items, in the order they were created (or specified in the QML file). So in the following example, the blue rectangle will be drawn on top of the green rectangle:</source>
          <target state="translated">Qt Quick アイテムは、衝突した場合にどのアイテムが上に描画されるかを決定するために再帰的な描画アルゴリズムを使用しています。一般的に、アイテムは親アイテムの上に、作成された(または QML ファイルで指定された)順番で描画されます。したがって、次の例では、青の長方形が緑の長方形の上に描画されます。</target>
        </trans-unit>
        <trans-unit id="ed4171457d1aecf0e8a63a8cced9f97bbacffaef" translate="yes" xml:space="preserve">
          <source>Qt Quick only provides basic visual types and much of Qt's functionality is exposed to QML through other modules. If you require the functionality of those modules, you should browse their QML documentation.</source>
          <target state="translated">Qt Quick は基本的なビジュアルタイプを提供するだけで、Qt の機能の多くは他のモジュールを通して QML に公開されています。これらのモジュールの機能を必要とする場合は、それらのモジュールの QML ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="94845d3ec8c87cc7c2dcce22ee1754b545f31de4" translate="yes" xml:space="preserve">
          <source>Qt Quick provides everything needed to create a rich application with a fluid and dynamic user interface. It enables user interfaces to be built around the behavior of user interface components and how they connect with one another, and it provides a visual canvas with its own coordinate system and rendering engine. Animation and transition effects are a first class concept in Qt Quick, and visual effects can be supplemented through specialized components for particle and shader effects.</source>
          <target state="translated">Qt Quick は、流動的でダイナミックなユーザーインターフェイスを持つリッチなアプリケーションを作成するために必要なすべての機能を提供します。Qt Quick は、ユーザーインターフェースコンポーネントの動作とそれらがどのように相互に接続するかを中心にユーザーインターフェースを構築することを可能にし、独自の座標系とレンダリングエンジンを持つビジュアルキャンバスを提供します。アニメーションやトランジション効果は Qt Quick の一級品のコンセプトであり、ビジュアル効果はパーティクルやシェーダー効果に特化したコンポーネントで補完することができます。</target>
        </trans-unit>
        <trans-unit id="dbbb6ff5c8b9651b5f75e6a27d1f004138f42c37" translate="yes" xml:space="preserve">
          <source>Qt Quick provides the &lt;a href=&quot;qml-qtquick-anchorchanges&quot;&gt;AnchorChanges&lt;/a&gt; type for specifying the anchors in a state.</source>
          <target state="translated">Qt Quickは状態のアンカーを指定するための&lt;a href=&quot;qml-qtquick-anchorchanges&quot;&gt;AnchorChanges&lt;/a&gt;タイプを提供します。</target>
        </trans-unit>
        <trans-unit id="c2bdda53415e0a0eab1797311625747bfdc32bdd" translate="yes" xml:space="preserve">
          <source>Qt Quick-based Wayland compositors can use this type to display a client's contents on an output device. It passes user input to the client.</source>
          <target state="translated">QtクイックベースのWaylandコンポジターは、このタイプを使用してクライアントの内容を出力デバイスに表示することができます。ユーザの入力をクライアントに渡します。</target>
        </trans-unit>
        <trans-unit id="622ccdf7689216b4552c32938a50ea81e2f86fb1" translate="yes" xml:space="preserve">
          <source>Qt Reference Documentation: Getting Started</source>
          <target state="translated">Qt リファレンスドキュメント。はじめに</target>
        </trans-unit>
        <trans-unit id="43902e35dc92b222b7d6470de6b0b4fcc933c510" translate="yes" xml:space="preserve">
          <source>Qt Remote Objects</source>
          <target state="translated">Qt リモートオブジェクト</target>
        </trans-unit>
        <trans-unit id="d4410b1f837c1168b55ce84040cd107c51cbe8fc" translate="yes" xml:space="preserve">
          <source>Qt Remote Objects (QtRO) is an Inter-Process Communication (IPC) module developed for Qt. This module extends Qt's existing functionalities to enable information exchange between processes or computers, easily.</source>
          <target state="translated">Qt Remote Objects (QtRO)は、Qtのために開発されたプロセス間通信(IPC)モジュールです。このモジュールは、Qtの既存の機能を拡張し、プロセス間やコンピュータ間の情報交換を簡単に行えるようにします。</target>
        </trans-unit>
        <trans-unit id="2d14461b1f9ad39d9d883475aeb7f1f0ff07fdcd" translate="yes" xml:space="preserve">
          <source>Qt Remote Objects - External QIODevices</source>
          <target state="translated">Qt リモートオブジェクト-外部 QIODevices</target>
        </trans-unit>
        <trans-unit id="13fa59fcd553d592a52e33b15ccb9075e5d5845e" translate="yes" xml:space="preserve">
          <source>Qt Remote Objects C++ Classes</source>
          <target state="translated">Qt リモートオブジェクト C++クラス</target>
        </trans-unit>
        <trans-unit id="ae0300e27d0655ed426791746f54c95994b7422d" translate="yes" xml:space="preserve">
          <source>Qt Remote Objects Compiler</source>
          <target state="translated">Qt リモートオブジェクトコンパイラ</target>
        </trans-unit>
        <trans-unit id="23bc0a2f425b4c03583e0bfec6da4a3fd82cf3fc" translate="yes" xml:space="preserve">
          <source>Qt Remote Objects Nodes</source>
          <target state="translated">Qt リモートオブジェクトのノード</target>
        </trans-unit>
        <trans-unit id="c9e0aaead114ca9d3a4c2d8f3a1ca5faefcb917e" translate="yes" xml:space="preserve">
          <source>Qt Remote Objects Protocol Versioning</source>
          <target state="translated">Qtリモートオブジェクトプロトコルのバージョン管理</target>
        </trans-unit>
        <trans-unit id="24e674ba81d8af613b20f4b06c10d8d8cf216a0c" translate="yes" xml:space="preserve">
          <source>Qt Remote Objects QML Types</source>
          <target state="translated">Qt リモートオブジェクト QML 型</target>
        </trans-unit>
        <trans-unit id="3189a4538079fff9d6aeb935be4dbbff74056edd" translate="yes" xml:space="preserve">
          <source>Qt Remote Objects Registry</source>
          <target state="translated">Qtリモートオブジェクトレジストリ</target>
        </trans-unit>
        <trans-unit id="62638b0c21a6fb5379798c382f87f66a172092f8" translate="yes" xml:space="preserve">
          <source>Qt Remote Objects Replica</source>
          <target state="translated">Qtリモートオブジェクトのレプリカ</target>
        </trans-unit>
        <trans-unit id="8c96e15cd1c878b7837bea93e613a397223cb8fa" translate="yes" xml:space="preserve">
          <source>Qt Remote Objects Replica Objects</source>
          <target state="translated">Qtリモートオブジェクト レプリカオブジェクト</target>
        </trans-unit>
        <trans-unit id="f817d5404ce77c6a389bb771101ff90e76c4c33b" translate="yes" xml:space="preserve">
          <source>Qt Remote Objects Source</source>
          <target state="translated">Qt リモートオブジェクトのソース</target>
        </trans-unit>
        <trans-unit id="8a48f59b40bf769069420c4fba8f7854cf577b36" translate="yes" xml:space="preserve">
          <source>Qt Remote Objects Source Objects</source>
          <target state="translated">Qt リモートオブジェクト ソースオブジェクト</target>
        </trans-unit>
        <trans-unit id="6ee3364ce0f0f5af160a60c47e89195244fbeba6" translate="yes" xml:space="preserve">
          <source>Qt Remote Objects also allows &quot;External Schemas&quot; to be used with the registry, which helps with connection setup. On the &lt;a href=&quot;qremoteobjecthost&quot;&gt;QRemoteObjectHost&lt;/a&gt; side, the user must set the hostUrl with the desired schema.</source>
          <target state="translated">Qtリモートオブジェクトでは、 &quot;外部スキーマ&quot;をレジストリで使用できるため、接続のセットアップに役立ちます。上&lt;a href=&quot;qremoteobjecthost&quot;&gt;QRemoteObjectHostの&lt;/a&gt;側、ユーザは、所望のスキーマとhostUrlを設定しなければなりません。</target>
        </trans-unit>
        <trans-unit id="5571fdfb7958f372443691b1711d3bf84645c236" translate="yes" xml:space="preserve">
          <source>Qt Remote Objects is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under the &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qtリモートオブジェクトは&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;、Qt Companyの&lt;/a&gt;商用ライセンスの下で利用できます。さらに、&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License、バージョン3&lt;/a&gt;、または&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License、バージョン2で利用でき&lt;/a&gt;ます。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qtライセンス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="8b992904e52342c2e1bd1128396dbeeb4214006d" translate="yes" xml:space="preserve">
          <source>Qt Remote Objects supports several communications channels out-of-the-box, such as the &lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt; and &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt; pair. Given the desired &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; for tcp, or the desired name (for the &lt;a href=&quot;qlocalserver&quot;&gt;QLocalServer&lt;/a&gt; and &lt;a href=&quot;qlocalsocket&quot;&gt;QLocalSocket&lt;/a&gt; pair), the code needed to listen and connect are boilerplate and handled internally by Qt. Qt Remote Objects supports other types of &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; as well, and the &lt;a href=&quot;qremoteobjectnode&quot;&gt;QRemoteObjectNode&lt;/a&gt; classes provide additional methods to support cases where custom code is needed.</source>
          <target state="translated">Qtリモートオブジェクトは、&lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt;と&lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocketの&lt;/a&gt;ペアなど、すぐに使用できるいくつかの通信チャネルをサポートしています。tcpに必要な&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;、または（&lt;a href=&quot;qlocalserver&quot;&gt;QLocalServer&lt;/a&gt;と&lt;a href=&quot;qlocalsocket&quot;&gt;QLocalSocketの&lt;/a&gt;ペアに）必要な名前を指定すると、リッスンと接続に必要なコードは定型であり、Qtによって内部的に処理されます。 Qtリモートオブジェクトは、他のタイプの&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt;もサポートします&lt;a href=&quot;qremoteobjectnode&quot;&gt;。QRemoteObjectNode&lt;/a&gt;クラスは、カスタムコードが必要な場合をサポートする追加のメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="6784753072513712a6dbae7355c6f193bfbd95b8" translate="yes" xml:space="preserve">
          <source>Qt Resource files. Expressing it as an empty scheme, :/..., is not supported.</source>
          <target state="translated">Qtのリソースファイル。空のスキーム、:/...として表現することはサポートされていません。</target>
        </trans-unit>
        <trans-unit id="8cb6b0a95ac74bd3ba835a341a28d19405815de4" translate="yes" xml:space="preserve">
          <source>Qt Role</source>
          <target state="translated">Qt の役割</target>
        </trans-unit>
        <trans-unit id="c019a6a5b4b7e3ca4d61e924b0085b41009c341b" translate="yes" xml:space="preserve">
          <source>Qt Runtime Location</source>
          <target state="translated">Qtのランタイムの場所</target>
        </trans-unit>
        <trans-unit id="5e1f50dc0e955a4a1554b0e4f8ef5050a56725ce" translate="yes" xml:space="preserve">
          <source>Qt Runtime Target Requirements</source>
          <target state="translated">Qtランタイムターゲットの要件</target>
        </trans-unit>
        <trans-unit id="2fc4da54f39782a8890fd47f066461b56d28876d" translate="yes" xml:space="preserve">
          <source>Qt SCXML</source>
          <target state="translated">キューティーエスシーディーエックスエル</target>
        </trans-unit>
        <trans-unit id="575b03839fd0e4f07a4bae543b77b3a8667c697d" translate="yes" xml:space="preserve">
          <source>Qt SCXML Examples</source>
          <target state="translated">Qt SCXMLの例</target>
        </trans-unit>
        <trans-unit id="0c39316240387951bb8705c78847267f7fda169c" translate="yes" xml:space="preserve">
          <source>Qt SCXML Extensions</source>
          <target state="translated">Qt SCXML 拡張機能</target>
        </trans-unit>
        <trans-unit id="040f3b5d97e8445ca54a51945d075bd9c4749316" translate="yes" xml:space="preserve">
          <source>Qt SCXML Overview</source>
          <target state="translated">Qt SCXMLの概要</target>
        </trans-unit>
        <trans-unit id="182419cb26f1226a74004b692c7a2a2818e1f407" translate="yes" xml:space="preserve">
          <source>Qt SCXML supports the following data models:</source>
          <target state="translated">Qt SCXMLは以下のデータモデルをサポートしています。</target>
        </trans-unit>
        <trans-unit id="5b18215179bcfdd8a7bd85776e3927622d2dab13" translate="yes" xml:space="preserve">
          <source>Qt SQL</source>
          <target state="translated">キューティーエスエル</target>
        </trans-unit>
        <trans-unit id="b61d3f69833ddcf185c6163c6bb5ef01730fe933" translate="yes" xml:space="preserve">
          <source>Qt SQL is an essential module which provides support for SQL databases. Qt SQL's APIs are divided into different layers:</source>
          <target state="translated">Qt SQLは、SQLデータベースのサポートを提供する重要なモジュールです。Qt SQLのAPIは異なるレイヤーに分かれています。</target>
        </trans-unit>
        <trans-unit id="67719c9af309dd8cc46b865ef163b529f2be2217" translate="yes" xml:space="preserve">
          <source>Qt SQL is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under free software licenses. Since Qt 5.4, these free software licenses are &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt SQLは&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;、Qt Companyの&lt;/a&gt;商用ライセンスの下で利用できます。また、フリーソフトウェアライセンスで利用できます。Qt 5.4以降、これらの無料ソフトウェアライセンスは、&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public Licenseバージョン3&lt;/a&gt;または&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public Licenseバージョン2&lt;/a&gt;です。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qtライセンス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="9e153428c38e0527dd743880670988076f3b4b37" translate="yes" xml:space="preserve">
          <source>Qt SVG</source>
          <target state="translated">Qt SVG</target>
        </trans-unit>
        <trans-unit id="521f2d5148735aba3f955e1c864f64a7093e8618" translate="yes" xml:space="preserve">
          <source>Qt SVG C++ Classes</source>
          <target state="translated">Qt SVG C++クラス</target>
        </trans-unit>
        <trans-unit id="6dcebf876d16fd5c43dd930a36f54baf7b40cd61" translate="yes" xml:space="preserve">
          <source>Qt SVG comes with the following examples:</source>
          <target state="translated">Qt SVGには以下のような例が付属しています。</target>
        </trans-unit>
        <trans-unit id="2dd2f3f5dbc6b7c0772f72193ec004d27e718e1c" translate="yes" xml:space="preserve">
          <source>Qt SVG is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under the &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt SVGは&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;、Qt Companyの&lt;/a&gt;商用ライセンスの下で利用できます。さらに、&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License、バージョン3&lt;/a&gt;、または&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License、バージョン2で利用でき&lt;/a&gt;ます。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qtライセンス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="932c6449b7f4e03944efd7012be13cb7de21c48f" translate="yes" xml:space="preserve">
          <source>Qt SVG provides classes for rendering SVG files. To include the definitions of the module's classes, use the following directive:</source>
          <target state="translated">Qt SVG は SVG ファイルをレンダリングするためのクラスを提供しています。モジュールのクラスの定義を含めるには、以下のディレクティブを使用します。</target>
        </trans-unit>
        <trans-unit id="3bdec155cb080bee537fdfcea853eeaa3cd27305" translate="yes" xml:space="preserve">
          <source>Qt Script</source>
          <target state="translated">Qtスクリプト</target>
        </trans-unit>
        <trans-unit id="82dd9b92c9f5b07bb2b70d945fce99ced63b3fb8" translate="yes" xml:space="preserve">
          <source>Qt Sensors</source>
          <target state="translated">Qtセンサー</target>
        </trans-unit>
        <trans-unit id="5639af73aa84461edad1bcc6e1a734f1916163b6" translate="yes" xml:space="preserve">
          <source>Qt Sensors - Grue Sensor Example</source>
          <target state="translated">Qtセンサ-グリューセンサの例</target>
        </trans-unit>
        <trans-unit id="72c5017b0668c5b368d056f41d2529427e45815f" translate="yes" xml:space="preserve">
          <source>Qt Sensors 5.0 (the initial release) is generally expected to be source compatible with QtMobility Sensors 1.2.</source>
          <target state="translated">Qt Sensors 5.0(初期リリース)は、一般的にQtMobility Sensors 1.2とのソース互換性が期待されています。</target>
        </trans-unit>
        <trans-unit id="998d3964f7848c5872cb96f8e02c7002166605b8" translate="yes" xml:space="preserve">
          <source>Qt Sensors C++ Overview</source>
          <target state="translated">QtセンサーC++の概要</target>
        </trans-unit>
        <trans-unit id="be3b04930a5ffb272be6f61238ce0bb13f4e5cb5" translate="yes" xml:space="preserve">
          <source>Qt Sensors Examples</source>
          <target state="translated">Qtセンサの例</target>
        </trans-unit>
        <trans-unit id="9e8f104236aba7a9c79e638107ce7c21bc1d469b" translate="yes" xml:space="preserve">
          <source>Qt Sensors QML Types</source>
          <target state="translated">Qtセンサ QMLタイプ</target>
        </trans-unit>
        <trans-unit id="76663452a39bad266dfa7ac77c53286aba763999" translate="yes" xml:space="preserve">
          <source>Qt Serial Bus</source>
          <target state="translated">Qtシリアルバス</target>
        </trans-unit>
        <trans-unit id="2b083b4dccf1405b7792845ea420c014133138d4" translate="yes" xml:space="preserve">
          <source>Qt Serial Port</source>
          <target state="translated">Qtシリアルポート</target>
        </trans-unit>
        <trans-unit id="611561eef6bcda9a24a98e6a558d683382d31d52" translate="yes" xml:space="preserve">
          <source>Qt Serial Port provides the basic functionality, which includes configuring, I/O operations, getting and setting the control signals of the RS-232 pinouts.</source>
          <target state="translated">Qtシリアルポートは、RS-232ピンアウトの設定、I/O操作、制御信号の取得、設定などの基本的な機能を提供します。</target>
        </trans-unit>
        <trans-unit id="19b4dedd42e16832704159591f36fdf70fadc941" translate="yes" xml:space="preserve">
          <source>Qt Speech</source>
          <target state="translated">Qtスピーチ</target>
        </trans-unit>
        <trans-unit id="b8be06a70031ad36ff5bec3af70a15c7a2481376" translate="yes" xml:space="preserve">
          <source>Qt Style Sheet is generally case insensitive (i.e., &lt;code&gt;color&lt;/code&gt;, &lt;code&gt;Color&lt;/code&gt;, &lt;code&gt;COLOR&lt;/code&gt;, and &lt;code&gt;cOloR&lt;/code&gt; refer to the same property). The only exceptions are class names, &lt;a href=&quot;qobject#objectName-prop&quot;&gt;object names&lt;/a&gt;, and Qt property names, which are case sensitive.</source>
          <target state="translated">Qtスタイルシートは通常、大文字と小文字を区別し &lt;code&gt;cOloR&lt;/code&gt; ん（つまり、 &lt;code&gt;color&lt;/code&gt; 、 &lt;code&gt;Color&lt;/code&gt; 、 &lt;code&gt;COLOR&lt;/code&gt; 、およびcOloRは同じプロパティを参照します）。唯一の例外は、クラス名、&lt;a href=&quot;qobject#objectName-prop&quot;&gt;オブジェクト名&lt;/a&gt;、Qtプロパティ名で、大文字と小文字が区別されます。</target>
        </trans-unit>
        <trans-unit id="6277b9de9d7f29f6d768f309c505038830f71608" translate="yes" xml:space="preserve">
          <source>Qt Style Sheet terminology and syntactic rules are almost identical to those of HTML CSS. If you already know CSS, you can probably skim quickly through this section.</source>
          <target state="translated">Qt スタイルシートの用語や構文ルールは、HTML CSS とほぼ同じです。すでにCSSを知っている人は、このセクションをサクッと読み進めることができるでしょう。</target>
        </trans-unit>
        <trans-unit id="35b0b2d893bcc1877a72d0b1af73ee6f326dd636" translate="yes" xml:space="preserve">
          <source>Qt Style Sheet uses QObject::className() of the widget to determine when to apply the Type Selector. When custom widgets are inside namespaces, the QObject::className() returns &amp;lt;namespace&amp;gt;::&amp;lt;classname&amp;gt;. This conflicts with the syntax for &lt;a href=&quot;#sub-controls&quot;&gt;Sub-Controls&lt;/a&gt;. To overcome this problem, when using the Type Selector for widgets inside namespaces, we must replace the &quot;::&quot; with &quot;--&quot;. For example,</source>
          <target state="translated">Qtスタイルシートは、ウィジェットのQObject :: className（）を使用して、タイプセレクターをいつ適用するかを決定します。カスタムウィジェットが名前空間内にある場合、QObject :: className（）は&amp;lt;namespace&amp;gt; :: &amp;lt;classname&amp;gt;を返します。これは、&lt;a href=&quot;#sub-controls&quot;&gt;サブコントロールの&lt;/a&gt;構文と競合します。この問題を解決するには、名前空間内のウィジェットにタイプセレクターを使用する場合、「::」を「-」に置き換える必要があります。例えば、</target>
        </trans-unit>
        <trans-unit id="37b010ed82273cc6489fd72e2c5bacaf9bc4ea30" translate="yes" xml:space="preserve">
          <source>Qt Style Sheets</source>
          <target state="translated">Qtスタイルシート</target>
        </trans-unit>
        <trans-unit id="05401036b5c3a12c588d30b1490170750f31fbf8" translate="yes" xml:space="preserve">
          <source>Qt Style Sheets Examples</source>
          <target state="translated">Qtスタイルシートの例</target>
        </trans-unit>
        <trans-unit id="0b85d43060c7b530d4cf888979d1fa574c63cac2" translate="yes" xml:space="preserve">
          <source>Qt Style Sheets Reference</source>
          <target state="translated">Qtスタイルシートのリファレンス</target>
        </trans-unit>
        <trans-unit id="2d2e8b0891b59cf9647f94ca1d68d5ff6183fa85" translate="yes" xml:space="preserve">
          <source>Qt Style Sheets are a powerful mechanism that allows you to customize the appearance of widgets, in addition to what is already possible by subclassing &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;. The concepts, terminology, and syntax of Qt Style Sheets are heavily inspired by HTML &lt;a href=&quot;http://www.w3.org/Style/CSS/&quot;&gt;Cascading Style Sheets (CSS)&lt;/a&gt; but adapted to the world of widgets.</source>
          <target state="translated">Qtスタイルシートは、&lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;をサブクラス化することですでに可能であることに加えて、ウィジェットの外観をカスタマイズできる強力なメカニズムです。Qtスタイルシートの概念、用語、および構文は、HTML &lt;a href=&quot;http://www.w3.org/Style/CSS/&quot;&gt;カスケードスタイルシート（CSS）に&lt;/a&gt;強く影響を受けていますが、ウィジェットの世界に適応しています。</target>
        </trans-unit>
        <trans-unit id="b41a519beea5f6081ed19f25a4698e9c6f13b1d4" translate="yes" xml:space="preserve">
          <source>Qt Style Sheets support various properties, pseudo-states, and subcontrols that make it possible to customize the look of widgets.</source>
          <target state="translated">Qt スタイルシートは、ウィジェットの外観をカスタマイズすることを可能にする様々なプロパティ、疑似状態、サブコントロールをサポートしています。</target>
        </trans-unit>
        <trans-unit id="ba56eefabf803b75e2674bb29b2037736c03cba9" translate="yes" xml:space="preserve">
          <source>Qt Test</source>
          <target state="translated">Qtテスト</target>
        </trans-unit>
        <trans-unit id="8b26355b82c0c663a3031e76eae0ba50015a711a" translate="yes" xml:space="preserve">
          <source>Qt Test C++ Classes</source>
          <target state="translated">Qt テスト C++クラス</target>
        </trans-unit>
        <trans-unit id="1fd4acfc27c007bb23c82c9507f33066926a1ac4" translate="yes" xml:space="preserve">
          <source>Qt Test Overview</source>
          <target state="translated">Qtテストの概要</target>
        </trans-unit>
        <trans-unit id="a6fef081a783547c35b359449e44b7f8e4c4aee5" translate="yes" xml:space="preserve">
          <source>Qt Test Tutorial</source>
          <target state="translated">Qtテストチュートリアル</target>
        </trans-unit>
        <trans-unit id="6ba80da1e594a45819a46708d8a1d905d0d338e4" translate="yes" xml:space="preserve">
          <source>Qt Test is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under free software licenses. Since Qt 5.4, these free software licenses are &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt Testは&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;、Qt Companyの&lt;/a&gt;商用ライセンスの下で利用できます。また、フリーソフトウェアライセンスで利用できます。Qt 5.4以降、これらの無料ソフトウェアライセンスは、&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public Licenseバージョン3&lt;/a&gt;または&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public Licenseバージョン2&lt;/a&gt;です。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qtライセンス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="94f48a85c1de473942a0b38e45a93071ecb77db2" translate="yes" xml:space="preserve">
          <source>Qt Test provides classes for unit testing Qt applications and libraries. All public methods are in the &lt;a href=&quot;qtest&quot;&gt;QTest&lt;/a&gt; namespace. In addition, the &lt;a href=&quot;qsignalspy&quot;&gt;QSignalSpy&lt;/a&gt; class provides easy introspection for Qt's signals and slots, and the &lt;a href=&quot;qabstractitemmodeltester&quot;&gt;QAbstractItemModelTester&lt;/a&gt; allows for non-destructive testing of item models.</source>
          <target state="translated">Qt Testは、Qtアプリケーションとライブラリを単体テストするためのクラスを提供します。すべてのパブリックメソッドは&lt;a href=&quot;qtest&quot;&gt;QTest&lt;/a&gt;名前空間にあります。さらに、&lt;a href=&quot;qsignalspy&quot;&gt;QSignalSpy&lt;/a&gt;クラスはQtのシグナルとスロットの簡単なイントロスペクションを提供し、&lt;a href=&quot;qabstractitemmodeltester&quot;&gt;QAbstractItemModelTester&lt;/a&gt;はアイテムモデルの非破壊テストを可能にします。</target>
        </trans-unit>
        <trans-unit id="7a89319fb6b333cd0d0950774523084e599c72e8" translate="yes" xml:space="preserve">
          <source>Qt Type</source>
          <target state="translated">Qtタイプ</target>
        </trans-unit>
        <trans-unit id="7f97296c2902d1de8d52e422b27265af2a75ead3" translate="yes" xml:space="preserve">
          <source>Qt UI Tools</source>
          <target state="translated">Qt UI ツール</target>
        </trans-unit>
        <trans-unit id="d2fa31b976eb7e43d90aa076b873130ff435771b" translate="yes" xml:space="preserve">
          <source>Qt UI Tools Examples</source>
          <target state="translated">Qt UIツールの例</target>
        </trans-unit>
        <trans-unit id="e209f0e294d49d23de15233213c00240709f296a" translate="yes" xml:space="preserve">
          <source>Qt UI Tools is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. Since Qt 5.11, it is also available under the BSD 3-Clause &quot;New&quot; or &quot;Revised&quot; License:</source>
          <target state="translated">Qt UIツールは&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;、Qt Companyの&lt;/a&gt;商用ライセンスの下で利用できます。Qt 5.11以降、BSD 3-Clauseの「新規」または「改訂」ライセンスでも利用可能です。</target>
        </trans-unit>
        <trans-unit id="e5a1565060edcdd318bd23a0cda72a58702aca11" translate="yes" xml:space="preserve">
          <source>Qt USA</source>
          <target state="translated">キューティーユーエスエー</target>
        </trans-unit>
        <trans-unit id="b137daab1cc4ef355146bc1e2a19790a7e4e0bc7" translate="yes" xml:space="preserve">
          <source>Qt Virtual Keyboard</source>
          <target state="translated">Qtバーチャルキーボード</target>
        </trans-unit>
        <trans-unit id="772dac683ad3f374c8d390407015fd221e99d868" translate="yes" xml:space="preserve">
          <source>Qt Virtual Keyboard Examples</source>
          <target state="translated">Qtのバーチャルキーボードの例</target>
        </trans-unit>
        <trans-unit id="7e64ca8461c1abe52c5eb06c9ffae1f5ebb8009c" translate="yes" xml:space="preserve">
          <source>Qt Virtual Keyboard Layouts</source>
          <target state="translated">Qtの仮想キーボードレイアウト</target>
        </trans-unit>
        <trans-unit id="6550b5de08a99cbc003eb1acc7b1cba467458a32" translate="yes" xml:space="preserve">
          <source>Qt Virtual Keyboard is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-3.0.html&quot;&gt;GNU General Public License, version 3&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qtバーチャルキーボードは&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;、Qt Companyの&lt;/a&gt;商用ライセンスの下で利用できます。さらに、&lt;a href=&quot;http://www.gnu.org/licenses/gpl-3.0.html&quot;&gt;GNU General Public Licenseバージョン3に&lt;/a&gt;基づいて利用できます。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qtライセンス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="10531c87dfdbefbca34a58a18a2f7ca24538a5a3" translate="yes" xml:space="preserve">
          <source>Qt Virtual Keyboard supports handwriting recognition through open source and commercially-licensed engines.</source>
          <target state="translated">Qt Virtual Keyboardは、オープンソースと商用ライセンスのエンジンを使って手書き認識をサポートしています。</target>
        </trans-unit>
        <trans-unit id="46a1be7d167391f2896456803496b1c22306b0f8" translate="yes" xml:space="preserve">
          <source>Qt Wayland Compositor</source>
          <target state="translated">Qtウェイランド・コンポジター</target>
        </trans-unit>
        <trans-unit id="aa74a7a68fd6d6ade09e119f0cbc5d718eb96b8a" translate="yes" xml:space="preserve">
          <source>Qt Wayland Compositor C++ Classes</source>
          <target state="translated">Qt Wayland コンポジター C++クラス</target>
        </trans-unit>
        <trans-unit id="04e4c92037017449400409effec14eb36533e55c" translate="yes" xml:space="preserve">
          <source>Qt Wayland Compositor QML Types</source>
          <target state="translated">Qt Wayland コンポジター QML タイプ</target>
        </trans-unit>
        <trans-unit id="416e6b990a995055661c672deead095be9faed48" translate="yes" xml:space="preserve">
          <source>Qt Wayland Compositor and the Qt Wayland integration plugin are available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, they are available under the &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt Wayland CompositorおよびQt Wayland統合プラグインは&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;、Qt Company&lt;/a&gt;からの商用ライセンスの下で利用できます。さらに、&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License、バージョン3&lt;/a&gt;、または&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License、バージョン2で利用でき&lt;/a&gt;ます。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qtライセンス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="89949d78528e4fd6fe961b56723d584e4492a38a" translate="yes" xml:space="preserve">
          <source>Qt Wayland Compositor and the Qt Wayland integration plugin use protocol definitions under following permissive licenses:</source>
          <target state="translated">Qt Wayland CompositorとQt Wayland統合プラグインは、以下の寛容なライセンスの下でプロトコル定義を使用しています。</target>
        </trans-unit>
        <trans-unit id="2cd52c988abe390ff44a76341c5c160c4171e646" translate="yes" xml:space="preserve">
          <source>Qt Wayland provides a &lt;code&gt;wayland&lt;/code&gt; platform plugin that allows Qt applications to connect to a Wayland compositor.</source>
          <target state="translated">Qtのウェイランドが提供 &lt;code&gt;wayland&lt;/code&gt; Qtアプリケーションは、ウェイランド合成器に接続することを可能にするプラットフォームのプラグインを。</target>
        </trans-unit>
        <trans-unit id="af161ad5a31d9acf881adfcbb3de35c43f32d884" translate="yes" xml:space="preserve">
          <source>Qt WebAssembly Platform Notes</source>
          <target state="translated">Qt WebAssemblyプラットフォームノート</target>
        </trans-unit>
        <trans-unit id="7c85004129e110e3b5c335211a461fbd89e7aa22" translate="yes" xml:space="preserve">
          <source>Qt WebChannel</source>
          <target state="translated">キューティーウェブチャネル</target>
        </trans-unit>
        <trans-unit id="fbe78370fd7220a0639ba5a314d05c8f3decca32" translate="yes" xml:space="preserve">
          <source>Qt WebChannel JavaScript API</source>
          <target state="translated">Qt WebChannel JavaScript API</target>
        </trans-unit>
        <trans-unit id="92ebe479a380217133b845c53504cdefc595b532" translate="yes" xml:space="preserve">
          <source>Qt WebChannel enables peer-to-peer communication between a server (QML/C++ application) and a client (HTML/JavaScript or QML application). It is supported out of the box by &lt;a href=&quot;qtwebengine-index&quot;&gt;Qt WebEngine&lt;/a&gt;. In addition it can work on all browsers that support &lt;a href=&quot;qtwebsockets-index&quot;&gt;WebSockets&lt;/a&gt;, enabling Qt WebChannel clients to run in any JavaScript environment (including QML). This requires the implementation of a custom transport based on Qt WebSockets.</source>
          <target state="translated">Qt WebChannelは、サーバー（QML / C ++アプリケーション）とクライアント（HTML / JavaScriptまたはQMLアプリケーション）間のピアツーピア通信を可能にします。&lt;a href=&quot;qtwebengine-index&quot;&gt;Qt WebEngine&lt;/a&gt;でそのままサポートされます。さらに、&lt;a href=&quot;qtwebsockets-index&quot;&gt;WebSocket&lt;/a&gt;をサポートするすべてのブラウザーで動作するため、Qt WebChannelクライアントを任意のJavaScript環境（QMLを含む）で実行できます。これには、Qt WebSocketsに基づくカスタム転送の実装が必要です。</target>
        </trans-unit>
        <trans-unit id="e26a09fac78c32074842b257de376b9714a2b6d8" translate="yes" xml:space="preserve">
          <source>Qt WebChannel is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under free software licenses. These free software licenses are &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt WebChannelは&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;、Qt Companyの&lt;/a&gt;商用ライセンスの下で利用できます。また、フリーソフトウェアライセンスで利用できます。これらのフリーソフトウェアライセンスは、&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License、バージョン3&lt;/a&gt;、または&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License、バージョン2&lt;/a&gt;です。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qtライセンス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c79a75950264d15d0800b4377afe55d42e4722a4" translate="yes" xml:space="preserve">
          <source>Qt WebEngine</source>
          <target state="translated">キューティーウェブエンジン</target>
        </trans-unit>
        <trans-unit id="55d0e192a99e7183141bf51614d718958dc9b048" translate="yes" xml:space="preserve">
          <source>Qt WebEngine C++ Classes and Namespaces</source>
          <target state="translated">Qt WebEngine C++クラスと名前空間</target>
        </trans-unit>
        <trans-unit id="c4f3f7670a4af1b48a4e8ef25f36823a008a14ff" translate="yes" xml:space="preserve">
          <source>Qt WebEngine Core C++ Classes</source>
          <target state="translated">Qt WebEngineコアC++クラス</target>
        </trans-unit>
        <trans-unit id="380827fe34b68ae46ebd0fddd652dc43c2cb393d" translate="yes" xml:space="preserve">
          <source>Qt WebEngine Debugging and Profiling</source>
          <target state="translated">Qt WebEngine のデバッグとプロファイリング</target>
        </trans-unit>
        <trans-unit id="ac1b6639a5220e96d20a27dbfae7f294c66ed956" translate="yes" xml:space="preserve">
          <source>Qt WebEngine Dependencies</source>
          <target state="translated">Qt WebEngine の依存関係</target>
        </trans-unit>
        <trans-unit id="9bd4ba6a258cdbf846bd126e4d35ac64f47ff446" translate="yes" xml:space="preserve">
          <source>Qt WebEngine Developer Tools</source>
          <target state="translated">Qt WebEngine デベロッパーツール</target>
        </trans-unit>
        <trans-unit id="babf18abfd0220f6e412ed56187837f72a67c97b" translate="yes" xml:space="preserve">
          <source>Qt WebEngine Examples</source>
          <target state="translated">Qt Webエンジンの例</target>
        </trans-unit>
        <trans-unit id="7fbd83f5b4772ec0044ecab6ea8cecc73dd54a5c" translate="yes" xml:space="preserve">
          <source>Qt WebEngine Features</source>
          <target state="translated">Qt WebEngineの機能</target>
        </trans-unit>
        <trans-unit id="f0eba50874eab4803a283c9c5f6ff42325df45fa" translate="yes" xml:space="preserve">
          <source>Qt WebEngine Licensing</source>
          <target state="translated">Qt WebEngineライセンス</target>
        </trans-unit>
        <trans-unit id="e2ea2fd6eecc3a400a03f772db970046cad60af9" translate="yes" xml:space="preserve">
          <source>Qt WebEngine Overview</source>
          <target state="translated">Qt WebEngineの概要</target>
        </trans-unit>
        <trans-unit id="439ea3561c1ed0f5b3a8d6780cc6fb126b83d168" translate="yes" xml:space="preserve">
          <source>Qt WebEngine Platform Notes</source>
          <target state="translated">Qt WebEngineプラットフォームノート</target>
        </trans-unit>
        <trans-unit id="aa81a2db04e282b97c349e0e96c914236baa1ec1" translate="yes" xml:space="preserve">
          <source>Qt WebEngine QML Types</source>
          <target state="translated">Qt WebEngine QML型</target>
        </trans-unit>
        <trans-unit id="7789a5c8e1dbcb709616c6eca3423d1869648947" translate="yes" xml:space="preserve">
          <source>Qt WebEngine Widgets C++ Classes</source>
          <target state="translated">Qt WebEngine ウィジェット C++クラス</target>
        </trans-unit>
        <trans-unit id="c198872fc0a925e5604fc882914ab824967c0a82" translate="yes" xml:space="preserve">
          <source>Qt WebEngine Widgets Examples</source>
          <target state="translated">Qt WebEngine ウィジェットの例</target>
        </trans-unit>
        <trans-unit id="687fd8aa0335cf77a4376f06bfae4c112a3bdebd" translate="yes" xml:space="preserve">
          <source>Qt WebEngine Widgets dialogs can be customized by reimplementing the &lt;a href=&quot;qwebenginepage#chooseFiles&quot;&gt;QWebEnginePage::chooseFiles&lt;/a&gt;(), &lt;a href=&quot;qwebenginepage#javaScriptAlert&quot;&gt;QWebEnginePage::javaScriptAlert&lt;/a&gt;(), &lt;a href=&quot;qwebenginepage#javaScriptConfirm&quot;&gt;QWebEnginePage::javaScriptConfirm&lt;/a&gt;(), and &lt;a href=&quot;qwebenginepage#javaScriptPrompt&quot;&gt;QWebEnginePage::javaScriptPrompt&lt;/a&gt;() functions.</source>
          <target state="translated">&lt;a href=&quot;qwebenginepage#chooseFiles&quot;&gt;QWebEnginePage :: chooseFiles&lt;/a&gt;（）、&lt;a href=&quot;qwebenginepage#javaScriptAlert&quot;&gt;QWebEnginePage :: javaScriptAlert&lt;/a&gt;（）、&lt;a href=&quot;qwebenginepage#javaScriptConfirm&quot;&gt;QWebEnginePage :: javaScriptConfirm&lt;/a&gt;（）、および&lt;a href=&quot;qwebenginepage#javaScriptPrompt&quot;&gt;QWebEnginePage :: javaScriptPrompt&lt;/a&gt;（）関数を再実装することにより、Qt WebEngineウィジェットダイアログをカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="08c362ad69eb44f62cf4a916182c51c143d03e2f" translate="yes" xml:space="preserve">
          <source>Qt WebEngine can only be built on 64-bit Windows, with a x64-bit toolchain. For building Qt WebEngine for x86 applications, you need to configure and compile Qt with the Visual Studio 2017 x64 to x86 cross-compile toolchain. This toolchain can be set up on the command line by running &lt;code&gt;vcvarsall.bat amd64_x86&lt;/code&gt;.</source>
          <target state="translated">Qt WebEngineは、x64ビットツールチェーンを使用して、64ビットWindowsでのみ構築できます。xtアプリケーション用のQt WebEngineを構築するには、Visual Studio 2017 x64からx86へのクロスコンパイルツールチェーンでQtを構成およびコンパイルする必要があります。このツールチェーンは、 &lt;code&gt;vcvarsall.bat amd64_x86&lt;/code&gt; を実行することにより、コマンドラインで設定できます。</target>
        </trans-unit>
        <trans-unit id="e7abf8b1ea737c5ad69ad8ad94719843acf07e0c" translate="yes" xml:space="preserve">
          <source>Qt WebEngine enables accessibility support for web pages when the following conditions are met:</source>
          <target state="translated">Qt WebEngineでは、以下の条件を満たす場合にWebページのアクセシビリティ対応が可能になります。</target>
        </trans-unit>
        <trans-unit id="aaecf9afcc24ba1d0a559e27e895f692910263da" translate="yes" xml:space="preserve">
          <source>Qt WebEngine makes it possible for the application to define its own custom URL schemes with specialized security policies and transport mechanisms.</source>
          <target state="translated">Qt WebEngineでは、アプリケーションが独自のカスタムURLスキームを定義することが可能であり、特化したセキュリティポリシーとトランスポートメカニズムを備えています。</target>
        </trans-unit>
        <trans-unit id="b8e3b8ee62668fdbf04e068ce4eb53a129bba3c0" translate="yes" xml:space="preserve">
          <source>Qt WebEngine provides functionality for rendering regions of dynamic web content.</source>
          <target state="translated">Qt WebEngineでは、動的なWebコンテンツの領域をレンダリングする機能を提供しています。</target>
        </trans-unit>
        <trans-unit id="19331325924fb86d95a0b4a94a399dfc1761885d" translate="yes" xml:space="preserve">
          <source>Qt WebEngine provides out-of-the-box sandboxing support for Chromium render processes on Linux and &lt;a href=&quot;#macos&quot;&gt;macOS&lt;/a&gt;. Sandboxing is currently not supported on Windows due to a limitation in how the sandbox is set up and how it interacts with the host process provided by the Qt WebEngine libraries.</source>
          <target state="translated">Qt WebEngineは、Linuxおよび&lt;a href=&quot;#macos&quot;&gt;macOS&lt;/a&gt;上のChromiumレンダープロセスに標準のサンドボックスサポートを提供します。サンドボックスの設定方法と、Qt WebEngineライブラリによって提供されるホストプロセスとの相互作用方法に制限があるため、サンドボックス化は現在Windowsではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="c0e9558572362ee031559dcdbd2abba9cb6bc3d8" translate="yes" xml:space="preserve">
          <source>Qt WebEngine provides standard dialogs for these functions. In widget-based applications, the standard dialogs are based on &lt;a href=&quot;qdialog&quot;&gt;QDialog&lt;/a&gt;, whereas in Qt Quick applications, they can be based either on Qt Quick Controls 1 or Qt Quick Controls 2 (since Qt 5.8). The latter are used only on &lt;code&gt;eglfs&lt;/code&gt; platforms.</source>
          <target state="translated">Qt WebEngineはこれらの機能のための標準ダイアログを提供します。ウィジェットベースのアプリケーションでは、標準ダイアログは&lt;a href=&quot;qdialog&quot;&gt;QDialog&lt;/a&gt;に基づいていますが、Qt Quickアプリケーションでは、Qtクイックコントロール1またはQtクイックコントロール2（Qt 5.8以降）に基づいています。後者は &lt;code&gt;eglfs&lt;/code&gt; プラットフォームでのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="0efe122c40a3871f082e5ef2baceca873cac9f31" translate="yes" xml:space="preserve">
          <source>Qt WebEngine requires &lt;code&gt;pkg-config&lt;/code&gt; to detect most of its dependencies. The following &lt;code&gt;pkg-config&lt;/code&gt; files are required:</source>
          <target state="translated">Qt WebEngineは、依存関係のほとんどを検出するために &lt;code&gt;pkg-config&lt;/code&gt; を必要とします。次の &lt;code&gt;pkg-config&lt;/code&gt; ファイルが必要です。</target>
        </trans-unit>
        <trans-unit id="12a8716afb08a6f6b464d7189f88192a7c1aeedb" translate="yes" xml:space="preserve">
          <source>Qt WebEngine supports HTML5 drag and drop.</source>
          <target state="translated">Qt WebEngineはHTML5のドラッグ&amp;ドロップに対応しています。</target>
        </trans-unit>
        <trans-unit id="54b4847b59b17764bd7643416bc40af7fc47e35c" translate="yes" xml:space="preserve">
          <source>Qt WebEngine supports JavaScript Geolocation API with &lt;a href=&quot;qtlocation-index&quot;&gt;Qt Location&lt;/a&gt; as a backend. The application has to explicitly allow the feature by using &lt;a href=&quot;qwebenginepage#Feature-enum&quot;&gt;QWebEnginePage::Geolocation&lt;/a&gt; or &lt;a href=&quot;qml-qtwebengine-webengineview#Feature-prop&quot;&gt;WebEngineView.Feature&lt;/a&gt;.</source>
          <target state="translated">Qt WebEngineは、&lt;a href=&quot;qtlocation-index&quot;&gt;Qt Location&lt;/a&gt;をバックエンドとしてJavaScript Geolocation APIをサポートしています。アプリケーションは&lt;a href=&quot;qwebenginepage#Feature-enum&quot;&gt;QWebEnginePage :: Geolocation&lt;/a&gt;または&lt;a href=&quot;qml-qtwebengine-webengineview#Feature-prop&quot;&gt;WebEngineView.Feature&lt;/a&gt;を使用して機能を明示的に許可する必要があります。</target>
        </trans-unit>
        <trans-unit id="58cf09abe4ac4bd78201e0e345e91fb9367de36b" translate="yes" xml:space="preserve">
          <source>Qt WebEngine supports integrating spellchecking support into HTML forms to enable users to submit spellchecked messages. When the user clicks on an underlined misspelled word, the default context menu displays up to four suggestions. Selecting one will replace the misspelled word.</source>
          <target state="translated">Qt WebEngine では、HTML フォームへのスペルチェック機能の統合をサポートしており、ユーザーがスペルチェック済みのメッセージを送信できるようになっています。ユーザーがスペルミスのある下線付きの単語をクリックすると、デフォルトのコンテキストメニューに最大 4 つの候補が表示されます。1つを選択すると、スペルミスの単語が置換されます。</target>
        </trans-unit>
        <trans-unit id="98427b396d9db3d5ea964d32130ff63dea74c701" translate="yes" xml:space="preserve">
          <source>Qt WebEngine supports loading Pepper Plugin API (PPAPI) plugins if &lt;a href=&quot;qml-qtwebengine-webenginesettings#pluginsEnabled-prop&quot;&gt;WebEngineSettings::pluginsEnabled&lt;/a&gt; or &lt;a href=&quot;qwebenginesettings#WebAttribute-enum&quot;&gt;QWebEngineSettings::PluginsEnabled&lt;/a&gt; is set.</source>
          <target state="translated">Qt WebEngineは、&lt;a href=&quot;qml-qtwebengine-webenginesettings#pluginsEnabled-prop&quot;&gt;WebEngineSettings :: pluginsEnabled&lt;/a&gt;または&lt;a href=&quot;qwebenginesettings#WebAttribute-enum&quot;&gt;QWebEngineSettings :: PluginsEnabled&lt;/a&gt;が設定されている場合、Pepper Plugin API（PPAPI）プラグインのロードをサポートします。</target>
        </trans-unit>
        <trans-unit id="a97f63520994bb38fbaef47a73260ae975e469b1" translate="yes" xml:space="preserve">
          <source>Qt WebEngine supports printing a web page to a PDF file. For more information, see &lt;a href=&quot;qwebenginepage#printToPdf&quot;&gt;QWebEnginePage::printToPdf&lt;/a&gt;() and &lt;a href=&quot;qml-qtwebengine-webengineview#printToPdf-method&quot;&gt;WebEngineView.printToPdf&lt;/a&gt;.</source>
          <target state="translated">Qt WebEngineは、WebページのPDFファイルへの印刷をサポートしています。詳細については、&lt;a href=&quot;qwebenginepage#printToPdf&quot;&gt;QWebEnginePage :: printToPdf&lt;/a&gt;（）および&lt;a href=&quot;qml-qtwebengine-webengineview#printToPdf-method&quot;&gt;WebEngineView.printToPdfを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="957dfef8f8e55bbd835f159ae4b8f5c3282a9cfe" translate="yes" xml:space="preserve">
          <source>Qt WebEngine supports the Chromium implementation of the &lt;a href=&quot;https://http2.github.io/#&quot;&gt;HTTP/2&lt;/a&gt; protocol.</source>
          <target state="translated">Qt WebEngineは、&lt;a href=&quot;https://http2.github.io/#&quot;&gt;HTTP / 2&lt;/a&gt;プロトコルのChromium実装をサポートしています。</target>
        </trans-unit>
        <trans-unit id="854b2abb390cda48bbe6648ebdcc86041b3fe98a" translate="yes" xml:space="preserve">
          <source>Qt WebEngine supports the MPEG-4 Part 14 (MP4) file format only if the required proprietary audio and video codecs, such as H.264 and MPEG layer-3 (MP3), have been enabled. Proprietary codecs can be enabled by passing the following option to the &lt;code&gt;configure&lt;/code&gt; tool when configuring Qt:</source>
          <target state="translated">Qt WebEngineは、H.264やMPEGレイヤー3（MP3）などの必要な独自のオーディオおよびビデオコーデックが有効になっている場合にのみ、MPEG-4 Part 14（MP4）ファイル形式をサポートします。Qtの &lt;code&gt;configure&lt;/code&gt; 時に次のオプションを設定ツールに渡すことにより、独自のコーデックを有効にすることができます。</target>
        </trans-unit>
        <trans-unit id="3bb2489b0bf734b0d144fe41c137a710e070848b" translate="yes" xml:space="preserve">
          <source>Qt WebEngine supports the following features:</source>
          <target state="translated">Qt WebEngineは以下の機能をサポートしています。</target>
        </trans-unit>
        <trans-unit id="13a8e5c6fb156cf5e4f5082a5eb5d0ee61ce31af" translate="yes" xml:space="preserve">
          <source>Qt WebEngine supports touch devices for navigating and interacting with web pages.</source>
          <target state="translated">Qt WebEngineは、Webページを操作するためのタッチデバイスをサポートしています。</target>
        </trans-unit>
        <trans-unit id="c49790f88a8fb31b272dbd37e68b3b9ef8d95f78" translate="yes" xml:space="preserve">
          <source>Qt WebEngine supports viewing DRM protected videos if the &lt;a href=&quot;http://www.widevine.com/wv_drm.html#&quot;&gt;Widevine DRM&lt;/a&gt; plugin has been installed.</source>
          <target state="translated">Qt WebEngineは、&lt;a href=&quot;http://www.widevine.com/wv_drm.html#&quot;&gt;Widevine DRM&lt;/a&gt;プラグインがインストールされている場合、DRMで保護されたビデオの表示をサポートしています。</target>
        </trans-unit>
        <trans-unit id="91c00477f678ad7b325d38db145f8bd2318c8881" translate="yes" xml:space="preserve">
          <source>Qt WebEngine supports viewing PDF documents by navigating to them. This feature uses the Chromium extensions API and PDF viewer plugin to display the PDF documents. It can be tested in &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebengine-webenginewidgets-simplebrowser-example.html#&quot;&gt;Simple Browser&lt;/a&gt; or &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebengine-webengine-quicknanobrowser-example.html#&quot;&gt;Nano Browser&lt;/a&gt;.</source>
          <target state="translated">Qt WebEngineは、PDFドキュメントにナビゲートすることによる表示をサポートしています。この機能は、Chromium拡張APIとPDFビューアプラグインを使用してPDFドキュメントを表示します。&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebengine-webenginewidgets-simplebrowser-example.html#&quot;&gt;Simple Browser&lt;/a&gt;または&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebengine-webengine-quicknanobrowser-example.html#&quot;&gt;Nano Browser&lt;/a&gt;でテストできます。</target>
        </trans-unit>
        <trans-unit id="059adec88a8d178a167e7d6ed6f3c2e81c188e88" translate="yes" xml:space="preserve">
          <source>Qt WebEngine supports viewing the HTML source of a web page.</source>
          <target state="translated">Qt WebEngineでは、WebページのHTMLソースの表示をサポートしています。</target>
        </trans-unit>
        <trans-unit id="41cb4e4dbaf4aba570938a10248d30be48b464d5" translate="yes" xml:space="preserve">
          <source>Qt WebEngine supports viewing web content in fullscreen mode. For more information, see &lt;a href=&quot;qml-qtwebengine-webenginesettings#fullscreenSupportEnabled-prop&quot;&gt;WebEngineSettings.fullscreenSupportEnabled&lt;/a&gt;, &lt;a href=&quot;qml-qtwebengine-webengineview#fullScreenRequested-signal&quot;&gt;WebEngineView.fullScreenRequested&lt;/a&gt;, &lt;a href=&quot;qwebenginesettings#WebAttribute-enum&quot;&gt;QWebEngineSettings::FullScreenSupportEnabled&lt;/a&gt;, and &lt;a href=&quot;qwebenginepage#fullScreenRequested&quot;&gt;QWebEnginePage::fullScreenRequested&lt;/a&gt;.</source>
          <target state="translated">Qt WebEngineは、フルスクリーンモードでのWebコンテンツの表示をサポートしています。詳細については、&lt;a href=&quot;qml-qtwebengine-webenginesettings#fullscreenSupportEnabled-prop&quot;&gt;WebEngineSettings.fullscreenSupportEnabled&lt;/a&gt;、&lt;a href=&quot;qml-qtwebengine-webengineview#fullScreenRequested-signal&quot;&gt;WebEngineView.fullScreenRequested&lt;/a&gt;、&lt;a href=&quot;qwebenginesettings#WebAttribute-enum&quot;&gt;QWebEngineSettings :: FullScreenSupportEnabled&lt;/a&gt;、および&lt;a href=&quot;qwebenginepage#fullScreenRequested&quot;&gt;QWebEnginePage :: fullScreenRequestedを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d337a97655e277c3aada9fbef93ee419a10768bb" translate="yes" xml:space="preserve">
          <source>Qt WebEngine uses multiple OS processes to isolate web sites from each other and from the client application, improving security and robustness. The following process models, or ways to divide web sites between OS processes, are supported:</source>
          <target state="translated">Qt WebEngineでは、複数のOSプロセスを利用して、Webサイトをクライアントアプリケーションから分離し、セキュリティと堅牢性を向上させています。OSプロセス間でWebサイトを分離する方法として、以下のプロセスモデルがサポートされています。</target>
        </trans-unit>
        <trans-unit id="5f38f0078e0b5dd6b6ce1351142ca8b553d8af05" translate="yes" xml:space="preserve">
          <source>Qt WebSockets</source>
          <target state="translated">キューティーウェブソケット</target>
        </trans-unit>
        <trans-unit id="c80d5942849bfbe8d17a5e40748b894ef97993b0" translate="yes" xml:space="preserve">
          <source>Qt WebSockets is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under free software licenses. Since Qt 5.4, these free software licenses are &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt WebSocketsは&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;、Qt Companyの&lt;/a&gt;商用ライセンスの下で利用できます。また、フリーソフトウェアライセンスで利用できます。Qt 5.4以降、これらのフリーソフトウェアライセンスは、&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public Licenseバージョン3&lt;/a&gt;または&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public Licenseバージョン2&lt;/a&gt;です。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qtライセンス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="2ae7bb6a69e818ab90716286d9c45d65559b8d9b" translate="yes" xml:space="preserve">
          <source>Qt WebView</source>
          <target state="translated">キューティーウェブビュー</target>
        </trans-unit>
        <trans-unit id="6eccd951d187fde026f0eea29db049928e259c83" translate="yes" xml:space="preserve">
          <source>Qt WebView C++ Classes and Namespaces</source>
          <target state="translated">Qt WebView C++クラスと名前空間</target>
        </trans-unit>
        <trans-unit id="9e2bf6dc43ad14b833e7b436f17efdc478c68dc7" translate="yes" xml:space="preserve">
          <source>Qt WebView QML Types</source>
          <target state="translated">Qt WebView QML型</target>
        </trans-unit>
        <trans-unit id="b1a28b9c6ff356ec2363738912031e1e5a9f4b5f" translate="yes" xml:space="preserve">
          <source>Qt WebView is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under the &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt WebViewは&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;からの商用ライセンスの下で利用可能です。さらに、&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License、バージョン3&lt;/a&gt;、または&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License、バージョン2で利用でき&lt;/a&gt;ます。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qtライセンス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="6f9816314da67cb0195ee07f105b4d124472b708" translate="yes" xml:space="preserve">
          <source>Qt WebView provides a way to display web content in a QML application without necessarily including a full web browser stack by using native APIs where it makes sense.</source>
          <target state="translated">Qt WebView は、ネイティブ API を使用することで、必ずしも完全な Web ブラウザスタックを含まずに QML アプリケーションで Web コンテンツを表示する方法を提供します。</target>
        </trans-unit>
        <trans-unit id="13bbf0edd027e44eb7b2e748d1b83f1ea336a622" translate="yes" xml:space="preserve">
          <source>Qt Widget Gallery</source>
          <target state="translated">Qt ウィジェットギャラリー</target>
        </trans-unit>
        <trans-unit id="55b093947afff79b9d0b042d427368451af311c5" translate="yes" xml:space="preserve">
          <source>Qt Widget Projects</source>
          <target state="translated">Qt ウィジェットプロジェクト</target>
        </trans-unit>
        <trans-unit id="5e3d0ba1e51ec23b4d6ba2d288ba3759106f7b4e" translate="yes" xml:space="preserve">
          <source>Qt Widgets</source>
          <target state="translated">Qt ウィジェット</target>
        </trans-unit>
        <trans-unit id="8d6700f429130758154bd084751db38d39c85807" translate="yes" xml:space="preserve">
          <source>Qt Widgets C++ Classes</source>
          <target state="translated">Qt ウィジェット C++クラス</target>
        </trans-unit>
        <trans-unit id="c5d83e121853ff4315e7bb4fa39e5a93a6e404ff" translate="yes" xml:space="preserve">
          <source>Qt Widgets Examples</source>
          <target state="translated">Qt ウィジェットの例</target>
        </trans-unit>
        <trans-unit id="547630dd273c5d713df2cfd02d81632d25b6dce1" translate="yes" xml:space="preserve">
          <source>Qt Windows Extras</source>
          <target state="translated">Qt Windows エクストラ</target>
        </trans-unit>
        <trans-unit id="7ef6a7060423087be0627586026af3b5c93d61e5" translate="yes" xml:space="preserve">
          <source>Qt Windows Extras Examples</source>
          <target state="translated">Qt Windows エクストラの例</target>
        </trans-unit>
        <trans-unit id="350ab9181d1a713fffc9e578173c424e84cab258" translate="yes" xml:space="preserve">
          <source>Qt Windows Extras Overview</source>
          <target state="translated">Qt Windows エクストラの概要</target>
        </trans-unit>
        <trans-unit id="4dfbf783957e174ada9771d37a1488b8de6b9639" translate="yes" xml:space="preserve">
          <source>Qt Windows Extras provide classes and functions that enable you to use miscellaneous Windows-specific functions. For example, you can convert Qt objects to Windows object handles and manipulate DWM glass frames.</source>
          <target state="translated">Qt Windows エクストラは、Windows 固有の雑多な機能を使用できるようにするクラスや関数を提供しています。例えば、Qt オブジェクトを Windows オブジェクトハンドルに変換したり、DWM ガラスフレームを操作したりすることができます。</target>
        </trans-unit>
        <trans-unit id="30cb03f22d45ed064b0e85415dbdc06196a610a9" translate="yes" xml:space="preserve">
          <source>Qt X11 Extras</source>
          <target state="translated">Qt X11 エクストラ</target>
        </trans-unit>
        <trans-unit id="13b2b4e6b0266cf832549f825670c72f55eac8cf" translate="yes" xml:space="preserve">
          <source>Qt X11 Extras enables the Qt programmer to write applications for the Linux/X11 platform. Applications developed with Qt can also be deployed across several other desktop and embedded operating systems without having to rewrite the source code.</source>
          <target state="translated">Qt X11 Extras を使用すると、Qt プログラマは Linux/X11 プラットフォーム用のアプリケーションを書くことができます。Qt で開発されたアプリケーションは、ソースコードを書き換えることなく、他のいくつかのデスクトップや組み込み OS にも展開することができます。</target>
        </trans-unit>
        <trans-unit id="b6973d30da56319c14051322db652eac03345466" translate="yes" xml:space="preserve">
          <source>Qt X11 Extras is available under commercial licenses from &lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Company&lt;/a&gt;. In addition, it is available under free software licenses. Since Qt 5.4, these free software licenses are &lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License, version 3&lt;/a&gt;, or the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qt Licensing&lt;/a&gt; for further details.</source>
          <target state="translated">Qt X11 Extrasは、&lt;a href=&quot;http://www.qt.io/about-us/&quot;&gt;The Qt Companyの&lt;/a&gt;商用ライセンスに基づいて入手できます。また、フリーソフトウェアライセンスで利用できます。 Qt 5.4以降、これらのフリーソフトウェアライセンスは、&lt;a href=&quot;http://www.gnu.org/licenses/lgpl-3.0.html&quot;&gt;GNU Lesser General Public License、バージョン3&lt;/a&gt;、または&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License、バージョン2&lt;/a&gt;です。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.13/licensing.html&quot;&gt;Qtライセンス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="05e12a0224a11154f2280fb5e03a36dcbfa2cd71" translate="yes" xml:space="preserve">
          <source>Qt XML</source>
          <target state="translated">キューティーエックスエムエル</target>
        </trans-unit>
        <trans-unit id="338c1d7a56737286caec7e779cd76a37a8b6f8ea" translate="yes" xml:space="preserve">
          <source>Qt XML Patterns</source>
          <target state="translated">Qt XMLパターン</target>
        </trans-unit>
        <trans-unit id="37de7c3bd27363b200cc073bac5d1570b13909c4" translate="yes" xml:space="preserve">
          <source>Qt XML Patterns Examples</source>
          <target state="translated">Qt XMLパターンの例</target>
        </trans-unit>
        <trans-unit id="2a76dcc4af6a220b663aaf3f4a089e58887d7b97" translate="yes" xml:space="preserve">
          <source>Qt XML Patterns aims at being a &lt;a href=&quot;http://www.w3.org/TR/xquery/#id-xquery-conformance&quot;&gt;conformant XQuery processor&lt;/a&gt;. It adheres to &lt;a href=&quot;http://www.w3.org/TR/xquery/#id-minimal-conformance&quot;&gt;Minimal Conformance&lt;/a&gt; and supports the &lt;a href=&quot;http://www.w3.org/TR/xquery/#id-serialization-feature&quot;&gt;Serialization Feature&lt;/a&gt; and the &lt;a href=&quot;http://www.w3.org/TR/xquery/#id-full-axis-feature&quot;&gt;Full Axis Feature&lt;/a&gt;. Qt XML Patterns currently passes 97% of the tests in the &lt;a href=&quot;http://www.w3.org/XML/Query/test-suite&quot;&gt;XML Query Test Suite&lt;/a&gt;. Areas where conformance may be questionable and where behavior may be changed in future releases include:</source>
          <target state="translated">Qt XMLパターンは、&lt;a href=&quot;http://www.w3.org/TR/xquery/#id-xquery-conformance&quot;&gt;適合するXQueryプロセッサになる&lt;/a&gt;ことを目的としています。&lt;a href=&quot;http://www.w3.org/TR/xquery/#id-minimal-conformance&quot;&gt;最小適合性&lt;/a&gt;に準拠し、&lt;a href=&quot;http://www.w3.org/TR/xquery/#id-serialization-feature&quot;&gt;シリアル化機能&lt;/a&gt;と&lt;a href=&quot;http://www.w3.org/TR/xquery/#id-full-axis-feature&quot;&gt;全軸機能&lt;/a&gt;をサポートします。Qt XMLパターンは現在、&lt;a href=&quot;http://www.w3.org/XML/Query/test-suite&quot;&gt;XMLクエリテストスイートの&lt;/a&gt;テストの97％に合格しています。適合性が疑わしい可能性がある領域、および将来のリリースで動作が変更される可能性がある領域には、以下が含まれます。</target>
        </trans-unit>
        <trans-unit id="981b27895afae4b49d7e4bdc7fbbd97df51ea37e" translate="yes" xml:space="preserve">
          <source>Qt XML Patterns calls the URI resolver for all URIs it encounters, except for namespaces. Specifically, all builtin functions that deal with URIs (&lt;code&gt;fn:doc()&lt;/code&gt;, and &lt;code&gt;fn:doc-available()&lt;/code&gt;).</source>
          <target state="translated">Qt XMLパターンは、名前空間を除くすべてのURIに対してURIリゾルバーを呼び出します。具体的には、URIを処理するすべての組み込み関数（ &lt;code&gt;fn:doc()&lt;/code&gt; 、および &lt;code&gt;fn:doc-available()&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="532a1ffedc202f88a2d2cab378ced466b98d3a7a" translate="yes" xml:space="preserve">
          <source>Qt XML Patterns can be used out of the box to perform this query, provided</source>
          <target state="translated">Qt XML Patterns は、以下の条件を満たせば、このクエリを実行するためにすぐに使用することができます。</target>
        </trans-unit>
        <trans-unit id="ab57f564981f7a2aea4b839f9b16ae2ba1e70adf" translate="yes" xml:space="preserve">
          <source>Qt XML Patterns supports the following node tests. The tests that have a &lt;code&gt;name&lt;/code&gt; parameter test the node's name in addition to its</source>
          <target state="translated">Qt XMLパターンは、次のノードテストをサポートしています。 &lt;code&gt;name&lt;/code&gt; パラメータを持つテストは、ノードの名前に加えてノードの名前をテストします</target>
        </trans-unit>
        <trans-unit id="e9d6a993debb107d2f78a168eb574df514894710" translate="yes" xml:space="preserve">
          <source>Qt adds these features to C++:</source>
          <target state="translated">QtはC++にこれらの機能を追加しています。</target>
        </trans-unit>
        <trans-unit id="8b68405975d80ed61b909377cb5843bc113744e8" translate="yes" xml:space="preserve">
          <source>Qt allows custom text objects to be inserted into a document by registering a custom &lt;a href=&quot;qtextformat#objectType&quot;&gt;object type&lt;/a&gt; with &lt;a href=&quot;qtextcharformat&quot;&gt;QTextCharFormat&lt;/a&gt;. A &lt;a href=&quot;qtextobjectinterface&quot;&gt;QTextObjectInterface&lt;/a&gt; must also be implemented for this type and be &lt;a href=&quot;qabstracttextdocumentlayout#registerHandler&quot;&gt;registered&lt;/a&gt; with the &lt;a href=&quot;qabstracttextdocumentlayout&quot;&gt;QAbstractTextDocumentLayout&lt;/a&gt; of the document. When the object type is encountered while rendering a &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt;, the &lt;a href=&quot;qtextobjectinterface#intrinsicSize&quot;&gt;intrinsicSize&lt;/a&gt;() and &lt;a href=&quot;qtextobjectinterface#drawObject&quot;&gt;drawObject&lt;/a&gt;() functions of the interface are called.</source>
          <target state="translated">Qtでは、カスタム&lt;a href=&quot;qtextformat#objectType&quot;&gt;オブジェクトタイプ&lt;/a&gt;を&lt;a href=&quot;qtextcharformat&quot;&gt;QTextCharFormatに&lt;/a&gt;登録することにより、カスタムテキストオブジェクトをドキュメントに挿入できます。A &lt;a href=&quot;qtextobjectinterface&quot;&gt;QTextObjectInterfaceは&lt;/a&gt;また、このタイプのために実施されなければならないとされ&lt;a href=&quot;qabstracttextdocumentlayout#registerHandler&quot;&gt;登録され&lt;/a&gt;て&lt;a href=&quot;qabstracttextdocumentlayout&quot;&gt;QAbstractTextDocumentLayout&lt;/a&gt;文書の。&lt;a href=&quot;qtextdocument&quot;&gt;QTextDocumentの&lt;/a&gt;レンダリング中にオブジェクトタイプが検出されると、インターフェイスの&lt;a href=&quot;qtextobjectinterface#intrinsicSize&quot;&gt;組み込み&lt;/a&gt;&lt;a href=&quot;qtextobjectinterface#drawObject&quot;&gt;サイズ&lt;/a&gt;（）およびdrawObject（）関数が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="d57a84026fe0a6415aaee21c84da073f3b2dfeba" translate="yes" xml:space="preserve">
          <source>Qt already implements accessibility for its own widgets. We therefore recommend that you use Qt widgets where possible.</source>
          <target state="translated">Qt は既に独自のウィジェットにアクセシビリティを実装しています。そのため、可能な限り Qt ウィジェットを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="f5d708c0d734ada53fbfc2805858c82ba5cd2902" translate="yes" xml:space="preserve">
          <source>Qt also includes two convenience classes, &lt;a href=&quot;qaccessibleobject&quot;&gt;QAccessibleObject&lt;/a&gt; and &lt;a href=&quot;qaccessiblewidget&quot;&gt;QAccessibleWidget&lt;/a&gt;, that inherit from &lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; and provide the lowest common denominator of metadata (e.g., widget geometry, window title, basic help text). You can use them as base classes when wrapping your custom &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; or &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; subclasses.</source>
          <target state="translated">Qtには、&lt;a href=&quot;qaccessibleobject&quot;&gt;QAccessibleObject&lt;/a&gt;と&lt;a href=&quot;qaccessiblewidget&quot;&gt;QAccessibleWidgetの&lt;/a&gt; 2つの便利なクラスも含まれています。これらは、QAccessibleInterfaceから継承し、メタデータ（ウィジェットのジオメトリ、ウィンドウのタイトル、基本的なヘルプテキストなど）の共通の最小&lt;a href=&quot;qaccessibleinterface&quot;&gt;要素&lt;/a&gt;を提供します。カスタム&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;または&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;サブクラスをラップするときに、それらを基本クラスとして使用できます。</target>
        </trans-unit>
        <trans-unit id="9d8a12b8d51d4593376a1b982c205a96b4811e2f" translate="yes" xml:space="preserve">
          <source>Qt also offers a &lt;a href=&quot;#foreach&quot;&gt;foreach&lt;/a&gt; keyword that make it very easy to iterate over all the items stored in a container.</source>
          <target state="translated">Qtには、コンテナに格納されているすべてのアイテムを非常に簡単に反復できるようにする&lt;a href=&quot;#foreach&quot;&gt;foreach&lt;/a&gt;キーワードも用意されています。</target>
        </trans-unit>
        <trans-unit id="760f465a9f1fbf6d45846eff38c5af93299fbf60" translate="yes" xml:space="preserve">
          <source>Qt also provides &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt;, an implementation of a reference-counted shared pointer object, which can be used to maintain a collection of references to an individual pointer.</source>
          <target state="translated">Qtは&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt;も提供します。これは、参照カウントされる共有ポインターオブジェクトの実装で、個々のポインターへの参照のコレクションを維持するために使用できます。</target>
        </trans-unit>
        <trans-unit id="e453f6cc1435775fd0f49d30d277794c0423f2a2" translate="yes" xml:space="preserve">
          <source>Qt also provides the &lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt; convenience class, inheriting &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;. &lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt; guarantees monochrome (1-bit depth) pixmaps, and is mainly used for creating custom &lt;a href=&quot;qcursor&quot;&gt;QCursor&lt;/a&gt; and &lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; objects, constructing &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; objects.</source>
          <target state="translated">Qtはまた、提供して&lt;a href=&quot;qbitmap&quot;&gt;QBitmapの&lt;/a&gt;継承、便利なクラスを&lt;a href=&quot;qpixmap&quot;&gt;QPixmapのを&lt;/a&gt;。&lt;a href=&quot;qbitmap&quot;&gt;QBitmapは、&lt;/a&gt;モノクロ（1ビット深さ）ピックスマップを保証し、そして主にカスタム作成するために使用され&lt;a href=&quot;qcursor&quot;&gt;QCursor&lt;/a&gt;と&lt;a href=&quot;qbrush&quot;&gt;QBrushを&lt;/a&gt;構築、オブジェクトを&lt;a href=&quot;qregion&quot;&gt;QRegionの&lt;/a&gt;オブジェクトを。</target>
        </trans-unit>
        <trans-unit id="bafdbeeefe3894e372b92470c467305fb222c9df" translate="yes" xml:space="preserve">
          <source>Qt also provides these associative containers: &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;, &lt;a href=&quot;qmultimap&quot;&gt;QMultiMap&lt;/a&gt;, &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;, &lt;a href=&quot;qmultihash&quot;&gt;QMultiHash&lt;/a&gt;, and &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;. The &quot;Multi&quot; containers conveniently support multiple values associated with a single key. The &quot;Hash&quot; containers provide faster lookup by using a hash function instead of a binary search on a sorted set.</source>
          <target state="translated">Qtはまたこれらの連想コンテナを提供します：&lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;、&lt;a href=&quot;qmultimap&quot;&gt;QMultiMap&lt;/a&gt;、&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;、&lt;a href=&quot;qmultihash&quot;&gt;QMultiHash&lt;/a&gt;、&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;。「マルチ」コンテナは、単一のキーに関連付けられた複数の値を便利にサポートします。「ハッシュ」コンテナは、ソートされたセットのバイナリ検索の代わりにハッシュ関数を使用することにより、より高速なルックアップを提供します。</target>
        </trans-unit>
        <trans-unit id="23dcc1c4d8d1aeb39985206f4f761530a346807b" translate="yes" xml:space="preserve">
          <source>Qt also provides two other pointer wrapper classes: &lt;a href=&quot;qpointer&quot;&gt;QPointer&lt;/a&gt; and &lt;a href=&quot;qshareddatapointer&quot;&gt;QSharedDataPointer&lt;/a&gt;. They are incompatible with one another, since each has its very different use case.</source>
          <target state="translated">Qtは&lt;a href=&quot;qpointer&quot;&gt;QPointer&lt;/a&gt;と&lt;a href=&quot;qshareddatapointer&quot;&gt;QSharedDataPointerの&lt;/a&gt; 2つのポインターラッパークラスも提供します。それぞれに非常に異なるユースケースがあるため、相互に互換性がありません。</target>
        </trans-unit>
        <trans-unit id="9b61485e2ab4df9bab0e9dbd1bace4d6f4de54d7" translate="yes" xml:space="preserve">
          <source>Qt also tries to speed up painting by merging multiple paint events into one. When &lt;a href=&quot;qwidget#update&quot;&gt;update&lt;/a&gt;() is called several times or the window system sends several paint events, Qt merges these events into one event with a larger region (see &lt;a href=&quot;qregion#united&quot;&gt;QRegion::united&lt;/a&gt;()). The &lt;a href=&quot;qwidget#repaint&quot;&gt;repaint&lt;/a&gt;() function does not permit this optimization, so we suggest using &lt;a href=&quot;qwidget#update&quot;&gt;update&lt;/a&gt;() whenever possible.</source>
          <target state="translated">Qtはまた、複数のペイントイベントを1つにマージすることにより、ペイントを高速化しようとします。ときに&lt;a href=&quot;qwidget#update&quot;&gt;更新が&lt;/a&gt;（）を複数回呼び出したり、ウィンドウシステムはいくつかのペイントイベントを送信され、Qtはより大きな領域を持つ一つのイベントにこれらのイベントをマージ（参照&lt;a href=&quot;qregion#united&quot;&gt;QRegion ::団結を&lt;/a&gt;（））。&lt;a href=&quot;qwidget#repaint&quot;&gt;再描画&lt;/a&gt;（）関数は、この最適化を許可していませんので、我々は、使用することをお勧め&lt;a href=&quot;qwidget#update&quot;&gt;アップデート&lt;/a&gt;（）可能な限りを。</target>
        </trans-unit>
        <trans-unit id="e6c62ffa457fc18d5d59b6eeeb71c6c2e43abc53" translate="yes" xml:space="preserve">
          <source>Qt also uses this delay internally, e.g. in &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt; and &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;, for starting a drag.</source>
          <target state="translated">Qtは、ドラッグを開始するために、この遅延を&lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt;や&lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;などで内部的に使用します。</target>
        </trans-unit>
        <trans-unit id="d8cbce4c735ffa98c46ebadb6b764ecd7db768ea" translate="yes" xml:space="preserve">
          <source>Qt and Qt applications do not link to any Vulkan libraries by default. Instead, all functions are resolved dynamically at run time. Each &lt;a href=&quot;qvulkaninstance&quot;&gt;QVulkanInstance&lt;/a&gt; provides a &lt;a href=&quot;qvulkanfunctions&quot;&gt;QVulkanFunctions&lt;/a&gt; object retrievable via &lt;a href=&quot;qvulkaninstance#functions&quot;&gt;QVulkanInstance::functions&lt;/a&gt;(). This does not contain device level functions in order to avoid the potential overhead of an internal dispatching. Instead, functions that rely on a device, or a dispatchable child object of a device, are exposed via &lt;a href=&quot;qvulkandevicefunctions&quot;&gt;QVulkanDeviceFunctions&lt;/a&gt; and &lt;a href=&quot;qvulkaninstance#deviceFunctions&quot;&gt;QVulkanInstance::deviceFunctions&lt;/a&gt;(). &lt;a href=&quot;qvulkanfunctions&quot;&gt;QVulkanFunctions&lt;/a&gt; and &lt;a href=&quot;qvulkandevicefunctions&quot;&gt;QVulkanDeviceFunctions&lt;/a&gt; together provides access to the full core Vulkan API, excluding any extensions.</source>
          <target state="translated">QtおよびQtアプリケーションは、デフォルトではどのVulkanライブラリにもリンクしていません。代わりに、すべての関数が実行時に動的に解決されます。各&lt;a href=&quot;qvulkaninstance&quot;&gt;QVulkanInstance&lt;/a&gt;は、&lt;a href=&quot;qvulkanfunctions&quot;&gt;QVulkanInstance &lt;/a&gt;&lt;a href=&quot;qvulkaninstance#functions&quot;&gt;:: functions&lt;/a&gt;（）を介して取得可能なQVulkanFunctionsオブジェクトを提供します。これには、内部ディスパッチの潜在的なオーバーヘッドを回避するためのデバイスレベルの関数は含まれていません。代わりに、デバイスまたはデバイスのディスパッチ可能な子オブジェクトに依存する関数は、&lt;a href=&quot;qvulkandevicefunctions&quot;&gt;QVulkanDeviceFunctions&lt;/a&gt;および&lt;a href=&quot;qvulkaninstance#deviceFunctions&quot;&gt;QVulkanInstance :: deviceFunctions&lt;/a&gt;（）を介して公開されます。&lt;a href=&quot;qvulkanfunctions&quot;&gt;QVulkanFunctions&lt;/a&gt;と&lt;a href=&quot;qvulkandevicefunctions&quot;&gt;QVulkanDeviceFunctionsを&lt;/a&gt;一緒に使用すると、拡張機能を除く完全なコアVulkan APIにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="8ba30073304f1cb912992b420bf2cf364d79bca1" translate="yes" xml:space="preserve">
          <source>Qt and the STL Algorithms</source>
          <target state="translated">Qt と STL アルゴリズム</target>
        </trans-unit>
        <trans-unit id="06ce10ddea694e6f5db71a774f719535231d87c6" translate="yes" xml:space="preserve">
          <source>Qt and the operating system could not determine whether this address should be published or not. The application may need to apply further heuristics if it cannot find any eligible addresses.</source>
          <target state="translated">Qt とオペレーティングシステムは、このアドレスを公開すべきかどうかを判断できませんでした。対象となるアドレスが見つからない場合、アプリケーションはさらにヒューリスティックスを適用する必要があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="9d626b3940cf715385f00861e3253b0a6ab1cedc" translate="yes" xml:space="preserve">
          <source>Qt applications automatically know which plugins are available, because plugins are stored in the standard plugin subdirectories. Because of this applications don't require any code to find and load plugins, since Qt handles them automatically.</source>
          <target state="translated">Qtアプリケーションは、プラグインが標準のプラグインサブディレクトリに格納されているため、どのプラグインが利用可能かを自動的に知ることができます。このため、Qt はプラグインを自動的に処理するので、アプリケーションはプラグインを見つけてロードするためのコードを必要としません。</target>
        </trans-unit>
        <trans-unit id="e206013035083595ccc928c5c1660863e0230249" translate="yes" xml:space="preserve">
          <source>Qt applications behave well in the user's desktop environment, but certain integrations require additional, and sometimes platform specific, techniques.</source>
          <target state="translated">Qt アプリケーションはユーザーのデスクトップ環境でも問題なく動作しますが、特定の統合には追加のテクニックが必要で、時にはプラットフォーム固有のテクニックが必要です。</target>
        </trans-unit>
        <trans-unit id="bcb121215594e7881b5a41217ce4c0ec66345ec8" translate="yes" xml:space="preserve">
          <source>Qt applications by default are</source>
          <target state="translated">Qtアプリケーションはデフォルトでは</target>
        </trans-unit>
        <trans-unit id="cf0ea58c762275119b2ce77e6624164cd7ed6a5a" translate="yes" xml:space="preserve">
          <source>Qt automatically grabs the mouse when a mouse button is pressed inside a widget; the widget will continue to receive mouse events until the last mouse button is released.</source>
          <target state="translated">Qtは、ウィジェット内でマウスボタンが押されると自動的にマウスを掴み、最後のマウスボタンが離されるまでウィジェットはマウスイベントを受信し続けます。</target>
        </trans-unit>
        <trans-unit id="af5a25297bd8c8da9220c5627ef3d6506264f294" translate="yes" xml:space="preserve">
          <source>Qt automatically takes a copy of the container when it enters a &lt;code&gt;foreach&lt;/code&gt; loop. If you modify the container as you are iterating, that won't affect the loop. (If you do not modify the container, the copy still takes place, but thanks to &lt;a href=&quot;implicit-sharing#&quot;&gt;implicit sharing&lt;/a&gt; copying a container is very fast.)</source>
          <target state="translated">Qtは、 &lt;code&gt;foreach&lt;/code&gt; ループに入ると自動的にコンテナーのコピーを取得します。反復しながらコンテナを変更しても、ループには影響しません。 （コンテナーを変更しない場合でも、コピーは行われますが、&lt;a href=&quot;implicit-sharing#&quot;&gt;暗黙的な共有の&lt;/a&gt;おかげでコンテナーのコピーは非常に高速です。）</target>
        </trans-unit>
        <trans-unit id="e9c236ff33f3c2a6c9fb0a90ac74f5a196576ff1" translate="yes" xml:space="preserve">
          <source>Qt binary installers include the OpenSSL libraries used by &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtnetwork-module.html&quot;&gt;QtNetwork&lt;/a&gt;. However, those are not automatically deployed with applications that are built with Qt. Import and export restrictions apply for some types of software, and for some parts of the world. Developers wishing to use SSL communication in their deployed applications should either ensure that their users have the appropriate libraries installed, or they should consult a suitably qualified legal professional to ensure that applications using code from the OpenSSL project are correctly certified for import and export in relevant regions of the world.</source>
          <target state="translated">Qtバイナリインストーラーには、&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtnetwork-module.html&quot;&gt;QtNetworkで&lt;/a&gt;使用されるOpenSSLライブラリが含まれています。ただし、これらはQtで構築されたアプリケーションでは自動的にデプロイされません。インポートおよびエクスポートの制限は、一部のタイプのソフトウェアおよび一部の地域に適用されます。展開されたアプリケーションでSSL通信を使用したい開発者は、ユーザーに適切なライブラリがインストールされていることを確認するか、適切な資格のある法律専門家に相談して、OpenSSLプロジェクトのコードを使用するアプリケーションが関連するインポートおよびエクスポートについて正しく認定されていることを確認する必要があります世界の地域。</target>
        </trans-unit>
        <trans-unit id="fa54bb2aa0cbca6747cdfa57a782a5257d27cfca" translate="yes" xml:space="preserve">
          <source>Qt can be compiled with the Intel C++ compile for Linux, though, this configuration is not tested on a regular basis.</source>
          <target state="translated">Qt は Linux 用の Intel C++コンパイルでコンパイルできますが、この設定は定期的にテストされていません。</target>
        </trans-unit>
        <trans-unit id="9bd83e7e6131034e6fc94ee95675547e5ba2729f" translate="yes" xml:space="preserve">
          <source>Qt can load and save images using the &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; and &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; classes. By default, Qt supports the most common image formats including JPEG and PNG among others. Users can add support for additional formats via the &lt;a href=&quot;qimageioplugin&quot;&gt;QImageIOPlugin&lt;/a&gt; class. For more information, see &lt;a href=&quot;paintsystem-images#&quot;&gt;Reading and Writing Image Files&lt;/a&gt;</source>
          <target state="translated">Qtは&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;および&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;クラスを使用して画像をロードおよび保存できます。デフォルトでは、QtはJPEGやPNGなどの最も一般的な画像形式をサポートしています。ユーザーは&lt;a href=&quot;qimageioplugin&quot;&gt;QImageIOPlugin&lt;/a&gt;クラスを介して追加のフォーマットのサポートを追加できます。詳細については、「&lt;a href=&quot;paintsystem-images#&quot;&gt;イメージファイルの読み取りと書き込み」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1d2476d38ccc66b1a6030db4666c662801ad7752" translate="yes" xml:space="preserve">
          <source>Qt comes with a default list that contains the Internet top-level domains that have published support for Internationalized Domain Names (IDNs) and rules to guarantee that no deception can happen between similarly-looking characters (such as the Latin lowercase letter &lt;code&gt;'a'&lt;/code&gt; and the Cyrillic equivalent, which in most fonts are visually identical).</source>
          <target state="translated">Qtには、国際化ドメイン名（IDN）のサポートを公開しているインターネットトップレベルドメインと、見た目が似ている文字（ラテン小文字の &lt;code&gt;'a'&lt;/code&gt; とキリル文字相当。ほとんどのフォントで視覚的に同一です）。</target>
        </trans-unit>
        <trans-unit id="150eb794e3e3bbf5e208223c5859162c77c3e6c7" translate="yes" xml:space="preserve">
          <source>Qt comes with a selection of built-in styles. Certain styles are only available on specific platforms. Custom styles are made available as plugins or by creating an instance of a specific style class with &lt;a href=&quot;qstylefactory#create&quot;&gt;QStyleFactory::create&lt;/a&gt;() and setting it with &lt;a href=&quot;qapplication#setStyle&quot;&gt;QApplication::setStyle&lt;/a&gt;().</source>
          <target state="translated">Qtには、さまざまな組み込みスタイルが用意されています。特定のスタイルは、特定のプラットフォームでのみ使用できます。カスタムスタイルは、プラグインとして、または&lt;a href=&quot;qstylefactory#create&quot;&gt;QStyleFactory :: create&lt;/a&gt;（）を使用して特定のスタイルクラスのインスタンスを作成し、&lt;a href=&quot;qapplication#setStyle&quot;&gt;QApplication :: setStyle&lt;/a&gt;（）を使用して設定することで利用可能になります。</target>
        </trans-unit>
        <trans-unit id="4eb85746f9e370252471fc980234f4fa455b54bd" translate="yes" xml:space="preserve">
          <source>Qt comes with plugins for Windows (WinMM and WASAPI), Linux (ALSA and PulseAudio), &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; / iOS (CoreAudio), Android (OpenSL ES) and QNX.</source>
          <target state="translated">Qtには、Windows（WinMMおよびWASAPI）、Linux（ALSAおよびPulseAudio）、&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; / iOS（CoreAudio）、Android（OpenSL ES）およびQNX 用のプラグインが付属しています。</target>
        </trans-unit>
        <trans-unit id="ee59a0b11b671cccc55bc83a90fea0faaa156d2c" translate="yes" xml:space="preserve">
          <source>Qt comes with the cross-platform &lt;a href=&quot;qt-embedded-makeqpf#&quot;&gt;makeqpf&lt;/a&gt; tool, included in the &lt;code&gt;tools&lt;/code&gt; directory, which allows generation of QPF2 files from system fonts.</source>
          <target state="translated">Qtには、 &lt;code&gt;tools&lt;/code&gt; ディレクトリーに含まれているクロスプラットフォームの&lt;a href=&quot;qt-embedded-makeqpf#&quot;&gt;makeqpf&lt;/a&gt;ツールが付属しており、システムフォントからQPF2ファイルを生成できます。</target>
        </trans-unit>
        <trans-unit id="17df3ac9fe7379640024991b4dcd9923100480e6" translate="yes" xml:space="preserve">
          <source>Qt consists of different &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtmodules.html#&quot;&gt;modules&lt;/a&gt; whose sources can be found in different directories inside the top-level source directory. Users can explicitly exclude specific top-level directories to limit build times. Furthermore, each Qt module might have features that can also be explicitly enabled or disabled.</source>
          <target state="translated">Qtは、ソースがトップレベルのソースディレクトリ内の異なるディレクトリにある異なる&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtmodules.html#&quot;&gt;モジュール&lt;/a&gt;で構成されています。ユーザーは、特定の最上位ディレクトリを明示的に除外して、ビルド時間を制限できます。さらに、各Qtモジュールには、明示的に有効または無効にすることもできる機能がある場合があります。</target>
        </trans-unit>
        <trans-unit id="4b9267d54d094589b0b6e29dc0d72dd8d9bd57f8" translate="yes" xml:space="preserve">
          <source>Qt contains a set of &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; subclasses that emulate the styles of the different platforms supported by Qt (QWindowsStyle, QMacStyle etc.). By default, these styles are built into the Qt GUI module. Styles can also be made available as plugins.</source>
          <target state="translated">Qtには、Qtがサポートするさまざまなプラットフォームのスタイル（QWindowsStyle、QMacStyleなど）をエミュレートする一連の&lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;サブクラスが含まれています。デフォルトでは、これらのスタイルはQt GUIモジュールに組み込まれています。スタイルはプラグインとして利用可能にすることもできます。</target>
        </trans-unit>
        <trans-unit id="b73006fb6e9c76a29b4e33423286533241bae378" translate="yes" xml:space="preserve">
          <source>Qt contains a set of item view classes that use a model/view architecture to manage the relationship between data and the way it is presented to the user. The separation of functionality introduced by this architecture gives developers greater flexibility to customize the presentation of items, and provides a standard model interface to allow a wide range of data sources to be used with existing item views. In this document, we give a brief introduction to the model/view paradigm, outline the concepts involved, and describe the architecture of the item view system. Each of the components in the architecture is explained, and examples are given that show how to use the classes provided.</source>
          <target state="translated">Qtには、データとユーザーへの表示方法の関係を管理するためにモデル/ビューアーキテクチャを使用する一連のアイテムビュークラスが含まれています。このアーキテクチャによって導入された機能の分離により、開発者はアイテムの表示をカスタマイズするための柔軟性を高め、既存のアイテムビューで幅広いデータソースを使用できるようにするための標準モデルインターフェイスを提供します。このドキュメントでは、モデル/ビュー・パラダイムの簡単な紹介、関連する概念の概要、アイテム・ビュー・システムのアーキテクチャについて説明します。アーキテクチャの各コンポーネントについて説明し、提供されているクラスの使用方法を示す例を示します。</target>
        </trans-unit>
        <trans-unit id="6836d030abc414d99a63b9f19f47cc02c167b091" translate="yes" xml:space="preserve">
          <source>Qt currently supports three types of gradient fills:</source>
          <target state="translated">Qtは現在、3種類のグラデーションフィルをサポートしています。</target>
        </trans-unit>
        <trans-unit id="ccac7e6202c221ab23d0f07f1785999854861171" translate="yes" xml:space="preserve">
          <source>Qt currently supports three types of gradient fills: Linear gradients interpolate colors between start and end points, radial gradients interpolate colors between a focal point and end points on a circle surrounding it, and conical gradients interpolate colors around a center point.</source>
          <target state="translated">Qt は現在、3 種類のグラデーションフィルをサポートしています。線形グラデーションは開始点と終了点の間で色を補間し、放射状グラデーションは中心点とそれを囲む円上の終了点の間で色を補間し、円錐形グラデーションは中心点の周りで色を補間します。</target>
        </trans-unit>
        <trans-unit id="20b1f9e249b2a9942a80a00a63801e53042e08e2" translate="yes" xml:space="preserve">
          <source>Qt data type</source>
          <target state="translated">Qtデータ型</target>
        </trans-unit>
        <trans-unit id="b8e0b402fc247c89c9ada3677b2b34e4f690b8de" translate="yes" xml:space="preserve">
          <source>Qt defines only one role for the &lt;a href=&quot;qsqlquerymodel&quot;&gt;QSqlQueryModel&lt;/a&gt;:</source>
          <target state="translated">Qtは&lt;a href=&quot;qsqlquerymodel&quot;&gt;QSqlQueryModelの&lt;/a&gt; 1つのロールのみを定義します：</target>
        </trans-unit>
        <trans-unit id="80edd902aa5906a9e5170dafcfed9ffc5badb394" translate="yes" xml:space="preserve">
          <source>Qt detects menu bars and turns them into Mac native menu bars. Fitting this into existing Qt applications is normally automatic. However, if you have special needs, the Qt implementation currently selects a menu bar by starting at the active window (for example, &lt;a href=&quot;qguiapplication#focusWindow&quot;&gt;QGuiApplication::focusWindow&lt;/a&gt;()) and applying the following tests:</source>
          <target state="translated">Qtはメニューバーを検出し、Macのネイティブメニューバーに変換します。これを既存のQtアプリケーションに合わせるのは、通常は自動です。ただし、特別なニーズがある場合、Qt実装は現在、アクティブウィンドウ（たとえば、&lt;a href=&quot;qguiapplication#focusWindow&quot;&gt;QGuiApplication :: focusWindow&lt;/a&gt;（））から開始して次のテストを適用することにより、メニューバーを選択します。</target>
        </trans-unit>
        <trans-unit id="1002f68cb9b4335b7400af87fb57c3b199f0af3f" translate="yes" xml:space="preserve">
          <source>Qt does not entirely interact with the development environment (for example plugins to set a file to &quot;mocable&quot; from within the Xcode user interface).</source>
          <target state="translated">Qtは開発環境と完全に相互作用するわけではありません(例えば、Xcodeのユーザーインターフェイス内からファイルを「mocable」に設定するプラグインなど)。</target>
        </trans-unit>
        <trans-unit id="c48ec9f398cc78b19638893321dd2ff0138e0b70" translate="yes" xml:space="preserve">
          <source>Qt does not impose restrictions on how the check box is drawn; the Java style draws it with &lt;code&gt;CE_IndicatorCheckBox&lt;/code&gt;. See &lt;a href=&quot;#check-and-radio-buttons&quot;&gt;Check and Radio Buttons&lt;/a&gt; for the complete tree.</source>
          <target state="translated">Qtはチェックボックスの描画方法に制限を課しません。Javaスタイルは &lt;code&gt;CE_IndicatorCheckBox&lt;/code&gt; でそれを描画します。ツリー&lt;a href=&quot;#check-and-radio-buttons&quot;&gt;全体&lt;/a&gt;については、チェックボタンとラジオボタンを参照してください。</target>
        </trans-unit>
        <trans-unit id="15f09f1b71a8ad17c4c2eb3aecba7727ad7d64c6" translate="yes" xml:space="preserve">
          <source>Qt does not limit the size of files that are used for text processing. In most cases, this will not present a problem. For especially large files, however, you might experience that your application will become unresponsive or that you will run out of memory. The size of the files you can load depends on your hardware and on Qt's and your own application's implementation.</source>
          <target state="translated">Qtは、テキスト処理に使用するファイルのサイズを制限しません。ほとんどの場合、これは問題になりません。しかし、特に大きなファイルの場合は、アプリケーションが応答不能になったり、メモリを使い果たしたりすることがあるかもしれません。読み込み可能なファイルのサイズは、ハードウェアとQtの実装に依存します。</target>
        </trans-unit>
        <trans-unit id="68d34305c679207ca7fe3d7c4ae0dbb5d3260b17" translate="yes" xml:space="preserve">
          <source>Qt does not make direct use of operating system features and it makes no difference if, for example, FireFox runs on Windows or macOS. Qt does use some operating system adaptations, for example for ctrl/cmd key handling on macOS.</source>
          <target state="translated">Qtはオペレーティングシステムの機能を直接利用しているわけではなく、例えばFireFoxがWindowsでもmacOSでも違いはありません。QtはmacOSでのctrl/cmdキーの操作など、いくつかのオペレーティングシステムの機能を利用しています。</target>
        </trans-unit>
        <trans-unit id="836c0d89b914a9168214f9814a464964e4f18ba0" translate="yes" xml:space="preserve">
          <source>Qt does not support style hints on X11 since this information is not provided by the window system.</source>
          <target state="translated">Qt は X11 のスタイルヒントをサポートしていません。</target>
        </trans-unit>
        <trans-unit id="46adc65b4f1bbe2af9ac0e0c92a62854aa39b585" translate="yes" xml:space="preserve">
          <source>Qt does not support the requested image format.</source>
          <target state="translated">Qtは要求された画像フォーマットをサポートしていません。</target>
        </trans-unit>
        <trans-unit id="2d75f85e07d543542102b9718ffea9692e4f4b37" translate="yes" xml:space="preserve">
          <source>Qt does not use this feature for storing data; it is provided solely for the convenience of the user.</source>
          <target state="translated">Qtはこの機能をデータを保存するために使用しているのではなく、あくまでもユーザーの利便性のために提供されているものです。</target>
        </trans-unit>
        <trans-unit id="90bb3a5af99085508998552a20b8f47ecadb77f1" translate="yes" xml:space="preserve">
          <source>Qt expresses the deployment target via the &lt;code&gt;QMAKE_MACOSX_DEPLOYMENT_TARGET&lt;/code&gt; qmake variable, which has a default value set via the makespec for macOS. You should not need to change this default, but if needed you can increase it in your project file:</source>
          <target state="translated">Qtは、 &lt;code&gt;QMAKE_MACOSX_DEPLOYMENT_TARGET&lt;/code&gt; qmake変数を介してデプロイメントターゲットを表現します。これには、macOSのmakespecを介してデフォルト値が設定されています。このデフォルトを変更する必要はありませんが、必要に応じて、プロジェクトファイルでこれを増やすことができます。</target>
        </trans-unit>
        <trans-unit id="d81636b7bf42a763151490a2ff798a40bb615cef" translate="yes" xml:space="preserve">
          <source>Qt facilitates the creation of unit tests to test interfaces such as classes, functions, or whole libraries.</source>
          <target state="translated">Qt は、クラスや関数、ライブラリ全体などのインターフェースをテストするためのユニットテストの作成を容易にします。</target>
        </trans-unit>
        <trans-unit id="9e02d5fb1b40084b7975a494c2cd6a369a5b23e4" translate="yes" xml:space="preserve">
          <source>Qt for &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; also provides a menu bar merging feature to make &lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt; conform more closely to accepted &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; menu bar layout. The merging functionality is based on string matching the title of a &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt; entry. These strings are translated (using &lt;a href=&quot;qobject#tr&quot;&gt;QObject::tr&lt;/a&gt;()) in the &quot;&lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt;&quot; context. If an entry is moved its slots will still fire as if it was in the original place. The table below outlines the strings looked for and where the entry is placed if matched:</source>
          <target state="translated">Qt for &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;には、&lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt;を、受け入れられている&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;メニューバーレイアウトにより厳密に準拠させるためのメニューバーマージ機能もあります。マージ機能は、&lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt;エントリのタイトルに一致する文字列に基づいています。これらの文字列は、「&lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt;」コンテキストで（&lt;a href=&quot;qobject#tr&quot;&gt;QObject :: tr&lt;/a&gt;（）を使用して）翻訳されます。エントリを移動しても、スロットは元の場所にあるかのように起動します。次の表は、検索される文字列と、一致した場合のエントリの配置場所を示しています。</target>
        </trans-unit>
        <trans-unit id="97291aed260a20e0f96ea5c4456bc01503767d5c" translate="yes" xml:space="preserve">
          <source>Qt for &lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt; allows you to run Qt applications on devices supporting the Windows Store App APIs. This covers Modern UI applications on Windows 10, Windows 10 Mobile and Windows 10 IoT.</source>
          <target state="translated">Qt for &lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRTを&lt;/a&gt;使用すると、WindowsストアアプリAPIをサポートするデバイスでQtアプリケーションを実行できます。これには、Windows 10、Windows 10 Mobile、およびWindows 10 IoTのモダンUIアプリケーションが含まれます。</target>
        </trans-unit>
        <trans-unit id="641dd2e4fc8bc4de9332df7409965d2b514ebad6" translate="yes" xml:space="preserve">
          <source>Qt for &lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt; is always built as a cross-build, because tools, such as qmake, are built as desktop applications. For compiling those, a desktop development environment is required. If you have installed Visual Studio 2013 for Windows, this will only create binaries for &lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt;. You will need Visual Studio for Windows Desktop as well to create those desktop tools.</source>
          <target state="translated">qmakeなどのツールはデスクトップアプリケーションとして構築されるため、Qt for &lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt;は常にクロスビルドとして構築されます。それらをコンパイルするには、デスクトップ開発環境が必要です。Visual Studio 2013 for Windowsをインストールしている場合は、&lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRTの&lt;/a&gt;バイナリのみが作成されます。これらのデスクトップツールを作成するには、Windowsデスクトップ用のVisual Studioも必要です。</target>
        </trans-unit>
        <trans-unit id="1690ad7d6804cd054d70e4e6136e89b7ffb01d5e" translate="yes" xml:space="preserve">
          <source>Qt for Android</source>
          <target state="translated">Qt for Android</target>
        </trans-unit>
        <trans-unit id="460f925ec969ae5605f2d0e20fbf38202d640cb2" translate="yes" xml:space="preserve">
          <source>Qt for Android - Building from Source</source>
          <target state="translated">Qt for Android-ソースからのビルド</target>
        </trans-unit>
        <trans-unit id="41c8ed03028de9530b6d140e2fc617ce9c3fabb7" translate="yes" xml:space="preserve">
          <source>Qt for Android currently has binaries for ARMv7 and x86. Make sure you select the correct architecture for the device or emulator you are targeting, otherwise your application will crash. The MIPS archictecture is currently not supported by Qt.</source>
          <target state="translated">Qt for Androidには現在、ARMv7とx86用のバイナリが用意されています。対象とするデバイスやエミュレータに合ったアーキテクチャを選択してください。MIPS アーキテクトは現在のところ Qt ではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="62cb89e936d92d6df9b179ef82bebd0c71b98d38" translate="yes" xml:space="preserve">
          <source>Qt for Android enables you to run Qt 5 applications on devices with Android v4.1 (API level 16) or later. All Qt modules (essential and add-on) are supported except Qt WebEngine, Qt Serial Port, and the platform-specific ones (Qt Mac Extras, Qt Windows Extras, and Qt X11 Extras).</source>
          <target state="translated">Qt for Android は、Android v4.1 (API レベル 16)以降のデバイスで Qt 5 アプリケーションを実行できるようにします。Qt WebEngine、Qt Serial Port、プラットフォーム固有のもの(Qt Mac Extras、Qt Windows Extras、Qt X11 Extras)を除き、すべてのQtモジュール(必須およびアドオン)がサポートされています。</target>
        </trans-unit>
        <trans-unit id="318cd75626943c788d9cd6545a9ff3c5ba2d2dca" translate="yes" xml:space="preserve">
          <source>Qt for Android provides a special, virtual file system which is based on the</source>
          <target state="translated">Qt for Android は、特別な仮想ファイルシステムを提供します。</target>
        </trans-unit>
        <trans-unit id="0540f222fdde9fc958135ec909f35d190a8a2766" translate="yes" xml:space="preserve">
          <source>Qt for Device Creation</source>
          <target state="translated">デバイス作成のためのQt</target>
        </trans-unit>
        <trans-unit id="230f4fef605c41440a2dc61457c7a6d601d8e1aa" translate="yes" xml:space="preserve">
          <source>Qt for Embedded Linux</source>
          <target state="translated">組み込みLinux用Qt</target>
        </trans-unit>
        <trans-unit id="89258626bddef7836f882c87fa732b461479bed6" translate="yes" xml:space="preserve">
          <source>Qt for Embedded Linux Fonts</source>
          <target state="translated">組み込みLinuxフォントのためのQt</target>
        </trans-unit>
        <trans-unit id="0f68d9a7fe1671dc53a582c6b5f5a2749f3c4257" translate="yes" xml:space="preserve">
          <source>Qt for INTEGRITY</source>
          <target state="translated">Qt for INTEGRITY</target>
        </trans-unit>
        <trans-unit id="36d5865c7f9a1f0d71d102bbb1d52edd58f81411" translate="yes" xml:space="preserve">
          <source>Qt for INTEGRITY can be built on the following hosts:</source>
          <target state="translated">Qt for INTEGRITYは以下のホストでビルドできます。</target>
        </trans-unit>
        <trans-unit id="6e08c7961bdff2b3a82f393acf7eb12404ec2dde" translate="yes" xml:space="preserve">
          <source>Qt for INTEGRITY has a tutorial that helps you learn how to:</source>
          <target state="translated">Qt for INTEGRITYにはチュートリアルがあります。</target>
        </trans-unit>
        <trans-unit id="0a9fc8e90d92445df65db6a2a453561429968942" translate="yes" xml:space="preserve">
          <source>Qt for INTEGRITY has been tested to support the following Qt modules: Qt Core, Qt Network, Qt GUI, Qt Quick, Qt QML, Qt Quick Controls 2, Qt 3D, Qt Widgets, Qt Image Formats, Qt XML Patterns, Qt SVG.</source>
          <target state="translated">Qt for INTEGRITYは、以下のQtモジュールをサポートするようにテストされています。Qt Core、Qt Network、Qt GUI、Qt Quick、Qt QML、Qt Quick Controls 2、Qt 3D、Qt ウィジェット、Qt 画像フォーマット、Qt XML パターン、Qt SVG。</target>
        </trans-unit>
        <trans-unit id="d015fc3da93c1018f79faa46cd24ca866fae9abd" translate="yes" xml:space="preserve">
          <source>Qt for INTEGRITY supports building and developing applications for the following development boards:</source>
          <target state="translated">Qt for INTEGRITYでは、以下の開発ボード向けのアプリケーションの構築・開発をサポートしています。</target>
        </trans-unit>
        <trans-unit id="31250f37a0f4046c7a34f3fdb1409b4a01c68949" translate="yes" xml:space="preserve">
          <source>Qt for Linux/X11</source>
          <target state="translated">Qt for Linux/X11</target>
        </trans-unit>
        <trans-unit id="800dc2b98427d0206a623c38cea533d6eb97703d" translate="yes" xml:space="preserve">
          <source>Qt for Linux/X11 - Building from Source</source>
          <target state="translated">Qt for Linux/X11-ソースからのビルド</target>
        </trans-unit>
        <trans-unit id="87ba8d65f9c311a736114492370b08bac501d4a2" translate="yes" xml:space="preserve">
          <source>Qt for Linux/X11 - Deployment</source>
          <target state="translated">Qt for Linux/X11-デプロイメント</target>
        </trans-unit>
        <trans-unit id="daddb93787dcd3738e5ad9cd56bed61aceff6b8e" translate="yes" xml:space="preserve">
          <source>Qt for Linux/X11 - Specific Issues</source>
          <target state="translated">Qt for Linux/X11-固有の問題</target>
        </trans-unit>
        <trans-unit id="8ead2eec9336947e16531335cce7360889eb034f" translate="yes" xml:space="preserve">
          <source>Qt for QNX</source>
          <target state="translated">QNX 用 Qt</target>
        </trans-unit>
        <trans-unit id="706b19e2354de0c07dd223b53c3598e2c2a2b84b" translate="yes" xml:space="preserve">
          <source>Qt for QNX SDP 6.6</source>
          <target state="translated">Qt for QNX SDP 6.6</target>
        </trans-unit>
        <trans-unit id="190e5bfba22348d0b848e9dee22e94609c1fa70b" translate="yes" xml:space="preserve">
          <source>Qt for VxWorks</source>
          <target state="translated">Qt for VxWorks</target>
        </trans-unit>
        <trans-unit id="135c44d5cb85448f30ce6fa7c394fcdb144c746f" translate="yes" xml:space="preserve">
          <source>Qt for VxWorks Source Package</source>
          <target state="translated">Qt for VxWorksソースパッケージ</target>
        </trans-unit>
        <trans-unit id="cbb5429041c553ce37ecab9843b96ab0e7f01eb1" translate="yes" xml:space="preserve">
          <source>Qt for VxWorks is available only under a commercial license.</source>
          <target state="translated">Qt for VxWorksは商用ライセンスでのみ利用可能です。</target>
        </trans-unit>
        <trans-unit id="a3f5af225fbc13651f5a093f939b34a1cfa533ff" translate="yes" xml:space="preserve">
          <source>Qt for VxWorks is delivered via the &lt;a href=&quot;https://account.qt.io/#&quot;&gt;Qt Account&lt;/a&gt;, under the name &lt;b&gt;Qt 5.5.1&lt;/b&gt; &amp;gt; &lt;b&gt;Qt VxWorks Platform Source Package&lt;/b&gt;.</source>
          <target state="translated">Qt for VxWorksは、&lt;a href=&quot;https://account.qt.io/#&quot;&gt;Qtアカウント&lt;/a&gt;を通じて、&lt;b&gt;Qt 5.5.1&lt;/b&gt; &amp;gt; &lt;b&gt;Qt VxWorks Platform Source Package&lt;/b&gt;という名前で提供されます。</target>
        </trans-unit>
        <trans-unit id="94597762392a62cd93a35ac7bda5ee5122e1c946" translate="yes" xml:space="preserve">
          <source>Qt for WebAssembly supports a subset of the Qt modules. The list below lists the currently tested modules. The list can be pasted as arguments to &lt;code&gt;make&lt;/code&gt;.</source>
          <target state="translated">Qt for WebAssemblyはQtモジュールのサブセットをサポートしています。以下のリストは、現在テストされているモジュールのリストです。リストは &lt;code&gt;make&lt;/code&gt; の引数として貼り付けることができます。</target>
        </trans-unit>
        <trans-unit id="cae63323ac7dd62172408f2ef87af87cdbca41db" translate="yes" xml:space="preserve">
          <source>Qt for WinRT</source>
          <target state="translated">WinRTのためのQt</target>
        </trans-unit>
        <trans-unit id="2377d04623168caaf88f95f227d998dcb36bf480" translate="yes" xml:space="preserve">
          <source>Qt for WinRT - Building from Source</source>
          <target state="translated">Qt for WinRT-ソースからのビルド</target>
        </trans-unit>
        <trans-unit id="7c4d733adfeaf83ead286173000e50cf6fa9d7fe" translate="yes" xml:space="preserve">
          <source>Qt for Windows</source>
          <target state="translated">Windows用Qt</target>
        </trans-unit>
        <trans-unit id="380c3a38ba6f1a182468d43ad6706cd2b8fab83c" translate="yes" xml:space="preserve">
          <source>Qt for Windows - Building from Source</source>
          <target state="translated">Qt for Windows-ソースからのビルド</target>
        </trans-unit>
        <trans-unit id="26d1e7bae42209c3455cedbae650c1bdd338c409" translate="yes" xml:space="preserve">
          <source>Qt for Windows - Deployment</source>
          <target state="translated">Qt for Windows-デプロイメント</target>
        </trans-unit>
        <trans-unit id="3fce4f6b470253b407f7133fb694cceafc4cba3b" translate="yes" xml:space="preserve">
          <source>Qt for Windows - Requirements</source>
          <target state="translated">Qt for Windows-必要条件</target>
        </trans-unit>
        <trans-unit id="82a152eebb746e5ce85f395d8df1830e7cc247fc" translate="yes" xml:space="preserve">
          <source>Qt for Windows - Specific Issues</source>
          <target state="translated">Qt for Windows-特定の問題</target>
        </trans-unit>
        <trans-unit id="322f681d5705f9388867fe370fc7758f401979e4" translate="yes" xml:space="preserve">
          <source>Qt for X11 Requirements</source>
          <target state="translated">Qt for X11 の要件</target>
        </trans-unit>
        <trans-unit id="3c1f21ba15bab26a0fe56f06cd17f42dc31ac901" translate="yes" xml:space="preserve">
          <source>Qt for iOS</source>
          <target state="translated">Qt for iOS</target>
        </trans-unit>
        <trans-unit id="5b4cf7c90e79a650d00cf7e32f75003ceec20638" translate="yes" xml:space="preserve">
          <source>Qt for iOS - Building from Source</source>
          <target state="translated">Qt for iOS-ソースからのビルド</target>
        </trans-unit>
        <trans-unit id="cdaf73757ca10c633b777ca4dff9d014710530c3" translate="yes" xml:space="preserve">
          <source>Qt for macOS</source>
          <target state="translated">Qt for macOS</target>
        </trans-unit>
        <trans-unit id="fe6dafc55d2f14bccde59a38f0629e7625f97e99" translate="yes" xml:space="preserve">
          <source>Qt for macOS - Building from Source</source>
          <target state="translated">Qt for macOS-ソースからのビルド</target>
        </trans-unit>
        <trans-unit id="1822552b68a73c63eeb2b95d30210ed23b89f5c7" translate="yes" xml:space="preserve">
          <source>Qt for macOS - Deployment</source>
          <target state="translated">Qt for macOS-デプロイメント</target>
        </trans-unit>
        <trans-unit id="0f73e966014a92695c79d0902d18c5b478dcceba" translate="yes" xml:space="preserve">
          <source>Qt for macOS - Specific Issues</source>
          <target state="translated">Qt for macOS-特定の問題</target>
        </trans-unit>
        <trans-unit id="46ae69c3a7ea39291ac604680d78dfa1aad1910f" translate="yes" xml:space="preserve">
          <source>Qt function</source>
          <target state="translated">Qt関数</target>
        </trans-unit>
        <trans-unit id="57acc9790615c54a8e232cd233dd55171405c075" translate="yes" xml:space="preserve">
          <source>Qt function index</source>
          <target state="translated">Qt関数指数</target>
        </trans-unit>
        <trans-unit id="f74abb3119a1b5d3043a128d359e2f5e739daa2b" translate="yes" xml:space="preserve">
          <source>Qt has a number of standard cursor shapes, but you can also make custom cursor shapes based on a &lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt;, a mask and a hotspot.</source>
          <target state="translated">Qtにはいくつかの標準カーソル形状がありますが、&lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt;、マスク、ホットスポットに基づいてカスタムカーソル形状を作成することもできます。</target>
        </trans-unit>
        <trans-unit id="664e8d34cf723b5115c896a9dcd455da192495cd" translate="yes" xml:space="preserve">
          <source>Qt has predefined support for the following UTIs:</source>
          <target state="translated">Qtは以下のUTIをあらかじめ定義済みでサポートしています。</target>
        </trans-unit>
        <trans-unit id="62b55e10e1821fc922eae9ac4ac72aac65c2e3c0" translate="yes" xml:space="preserve">
          <source>Qt has predefined support for the following Windows Clipboard formats:</source>
          <target state="translated">Qt は、以下の Windows クリップボード形式をあらかじめ定義済みでサポートしています。</target>
        </trans-unit>
        <trans-unit id="49e54281cb43b9e04359f5457778d3e44eee0c05" translate="yes" xml:space="preserve">
          <source>Qt has some predefined &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; objects.</source>
          <target state="translated">Qtにはいくつかの定義済み&lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt;オブジェクトがあります。</target>
        </trans-unit>
        <trans-unit id="75bd4c2c2d2b05d96699a07df931fe037d161c9a" translate="yes" xml:space="preserve">
          <source>Qt has support for sheets, represented by the window flag, &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Sheet&lt;/a&gt;.</source>
          <target state="translated">Qtは、ウィンドウフラグ&lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt :: Sheet&lt;/a&gt;で表されるシートをサポートしています。</target>
        </trans-unit>
        <trans-unit id="d4fb01f8657ae809e005fda46ee7da147a420fb4" translate="yes" xml:space="preserve">
          <source>Qt implements menus in &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt; and &lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow&lt;/a&gt; keeps them in a &lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt;. &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt;s are added to the menus, which display them as menu items.</source>
          <target state="translated">Qtは&lt;a href=&quot;qmenu&quot;&gt;QMenuに&lt;/a&gt;メニューを実装し、&lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow&lt;/a&gt;はそれらを&lt;a href=&quot;qmenubar&quot;&gt;QMenuBarに&lt;/a&gt;保持します。&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt;がメニューに追加され、メニュー項目として表示されます。</target>
        </trans-unit>
        <trans-unit id="f146bc2e1892c10c144cc45be08dfb64b54b2b03" translate="yes" xml:space="preserve">
          <source>Qt in source code form (needed only if you want to build the framework and tools yourself)</source>
          <target state="translated">ソースコード形式の Qt (フレームワークやツールを自分で構築したい場合にのみ必要)</target>
        </trans-unit>
        <trans-unit id="a3315e1a174c7101112608feae6c18704dc51155" translate="yes" xml:space="preserve">
          <source>Qt includes a &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; class that inherits &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;&amp;gt; and adds a few convenience functions, such as &lt;a href=&quot;qstringlist#join&quot;&gt;QStringList::join&lt;/a&gt;() and &lt;a href=&quot;qstringlist#filter&quot;&gt;QStringList::filter&lt;/a&gt;(). &lt;a href=&quot;qstring#split&quot;&gt;QString::split&lt;/a&gt;() creates QStringLists from strings.</source>
          <target state="translated">QTは、&lt;a href=&quot;qstringlist&quot;&gt;QStringListを&lt;/a&gt;継承するクラスを&lt;a href=&quot;qlist&quot;&gt;QListに&lt;/a&gt; &amp;lt; &lt;a href=&quot;qstring&quot;&gt;QStringの&lt;/a&gt; &amp;gt;とのようないくつかの便利な機能、追加&lt;a href=&quot;qstringlist#join&quot;&gt;QStringListは::参加&lt;/a&gt;（）と&lt;a href=&quot;qstringlist#filter&quot;&gt;QStringList ::フィルタ&lt;/a&gt;（）。&lt;a href=&quot;qstring#split&quot;&gt;QString :: split&lt;/a&gt;（）は文字列からQStringListsを作成します。</target>
        </trans-unit>
        <trans-unit id="7297bef3a9112617df557becff168533a9a6a01e" translate="yes" xml:space="preserve">
          <source>Qt includes a set of layout management classes that are used to describe how widgets are laid out in an application's user interface. These layouts automatically position and resize widgets when the amount of space available for them changes, ensuring that they are consistently arranged and that the user interface as a whole remains usable.</source>
          <target state="translated">Qt には、アプリケーションのユーザーインターフェイスでウィジェットをどのようにレイアウトするかを記述するために使用される一連のレイアウト管理クラスが含まれています。これらのレイアウトは、利用可能なスペースの量が変化したときに自動的にウィジェットを配置したりサイズを変更したりするため、一貫して配置され、ユーザーインターフェイス全体が使いやすい状態を保つことができます。</target>
        </trans-unit>
        <trans-unit id="654c1e2e4b6db5eabfbfeced385e522ced569a51" translate="yes" xml:space="preserve">
          <source>Qt includes global macros for writing out warning and debug text. You can use them for the following purposes:</source>
          <target state="translated">Qt には、警告やデバッグ用のテキストを書き出すためのグローバルマクロが含まれています。以下のような目的で使用することができます。</target>
        </trans-unit>
        <trans-unit id="c4539a23d73a4c2abdae441c11e86fd6f6b43142" translate="yes" xml:space="preserve">
          <source>Qt includes three template classes that resemble containers in some respects. These classes don't provide iterators and cannot be used with the &lt;code&gt;foreach&lt;/code&gt; keyword.</source>
          <target state="translated">Qtには、いくつかの点でコンテナーに似た3つのテンプレートクラスが含まれています。これらのクラスはイテレータを提供せず、 &lt;code&gt;foreach&lt;/code&gt; キーワードと一緒に使用できません。</target>
        </trans-unit>
        <trans-unit id="a7330c0a98f90281d7ac3a2500264ff2d65f7e2d" translate="yes" xml:space="preserve">
          <source>Qt indexes each translatable string by the</source>
          <target state="translated">Qtは翻訳可能な各文字列のインデックスを</target>
        </trans-unit>
        <trans-unit id="cfe1affbf4b08b7e793e55fed360e0d54f3186dc" translate="yes" xml:space="preserve">
          <source>Qt is a C++ library and is compiled into traditional, native binaries that make full use of the performance provided by the runtime environment.</source>
          <target state="translated">QtはC++ライブラリであり、ランタイム環境が提供するパフォーマンスをフルに活用した従来のネイティブバイナリにコンパイルされています。</target>
        </trans-unit>
        <trans-unit id="2922aabeefbebaa7aede3557b5409ae01b07ab4f" translate="yes" xml:space="preserve">
          <source>Qt is a C++ toolkit for cross-platform GUI application development.</source>
          <target state="translated">QtはクロスプラットフォームGUIアプリケーション開発のためのC++ツールキットです。</target>
        </trans-unit>
        <trans-unit id="829547a64b6d474791c2aa2d42b7f5151805e46e" translate="yes" xml:space="preserve">
          <source>Qt is a commercial and open source licensed cross-platform application and UI framework. It is developed by The Qt Company, together with the Qt Project Community under an open source governance model.</source>
          <target state="translated">Qt は、商用でオープンソースのライセンスを取得したクロスプラットフォームのアプリケーションおよび UI フレームワークです。Qt は、オープンソースのガバナンスモデルのもと、Qt プロジェクトコミュニティとともに The Qt Company によって開発されています。</target>
        </trans-unit>
        <trans-unit id="1b4cd817b223956ef5abd8122594dc446c1d2a8e" translate="yes" xml:space="preserve">
          <source>Qt is a cross-platform application and UI framework. Using Qt, you can write web-enabled applications once and deploy them across desktop, mobile and embedded operating systems without rewriting the source code.</source>
          <target state="translated">Qt はクロスプラットフォームのアプリケーションおよび UI フレームワークです。Qt を使用すると、ソースコードを書き換えることなく、Web 対応のアプリケーションを一度作成して、デスクトップ、モバイル、組み込み OS にまたがってデプロイすることができます。</target>
        </trans-unit>
        <trans-unit id="fb7db49d4cdfb8e60d5632754123e4c3b0b6fde5" translate="yes" xml:space="preserve">
          <source>Qt is a full development framework with tools designed to streamline the creation of applications and user interfaces for desktop, embedded, and mobile platforms.</source>
          <target state="translated">Qtは、デスクトップ、組み込み、モバイルプラットフォーム向けのアプリケーションやユーザーインターフェースの作成を効率化するために設計されたツールを備えた完全な開発フレームワークです。</target>
        </trans-unit>
        <trans-unit id="6d6f0ace43b8ec57a2a6df72e58d52541f201013" translate="yes" xml:space="preserve">
          <source>Qt is not an appropriate solution for setuid programs due to its large attack surface. However some applications may be required to run in this manner for historical reasons. This flag will prevent Qt from aborting the application when this is detected, and must be set before a &lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt; instance is created.</source>
          <target state="translated">Qtは攻撃範囲が広いため、setuidプログラムには適切なソリューションではありません。ただし、歴史的な理由により、この方法で実行する必要があるアプリケーションもあります。このフラグは、これが検出されたときにQtがアプリケーションを中止しないようにするため、&lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt;インスタンスを作成する前に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="498975ca34a4a7d8fbf1df412d93cab17db430f5" translate="yes" xml:space="preserve">
          <source>Qt is supported on a variety of 32-bit and 64-bit platforms, and can usually be built on each platform with GCC, a vendor-supplied compiler, or a third party compiler as indicated in the overview below.</source>
          <target state="translated">Qtは32ビットと64ビットの様々なプラットフォームでサポートされており、以下の概要に示されているように、通常はGCC、ベンダーが提供するコンパイラ、またはサードパーティ製のコンパイラを使用して各プラットフォームでビルドすることができます。</target>
        </trans-unit>
        <trans-unit id="e31ae0a1a761177b5dbcce6b9a8cf19c6d7518b2" translate="yes" xml:space="preserve">
          <source>Qt itself contains several thousands of strings that will also need to be translated into the languages that you are targeting. You will find a number of translation files in the qttranslations repository. Before you start translating Qt, read the wiki page &lt;a href=&quot;http://wiki.qt.io/Qt_Localization#&quot;&gt;Translating Qt Into Other Languages&lt;/a&gt;.</source>
          <target state="translated">Qt自体には数千の文字列が含まれており、ターゲットとする言語に翻訳する必要があります。qttranslationsリポジトリーに多数の翻訳ファイルがあります。Qtの翻訳を始める前に、wikiページを&lt;a href=&quot;http://wiki.qt.io/Qt_Localization#&quot;&gt;Qtを他の言語に翻訳するを&lt;/a&gt;読んでください。</target>
        </trans-unit>
        <trans-unit id="254e8240275fd05167fc860314324e979412a8f5" translate="yes" xml:space="preserve">
          <source>Qt itself has a significant number of unit tests written with the Qt Test and Qt Quick Test frameworks (</source>
          <target state="translated">Qt 自体は、Qt Test と Qt Quick Test フレームワークを使って書かれたかなりの数のユニットテストを持っています (</target>
        </trans-unit>
        <trans-unit id="cff96e1b527b00dc0bbccd71d388b533cbe002c8" translate="yes" xml:space="preserve">
          <source>Qt libraries, prebuilt for a particular development platform (operating system and compiler)</source>
          <target state="translated">特定の開発プラットフォーム用にビルドされた Qt ライブラリ (オペレーティングシステムとコンパイラ)</target>
        </trans-unit>
        <trans-unit id="3d336333bd1f734dad729438159b3728122df43f" translate="yes" xml:space="preserve">
          <source>Qt loads the &lt;code&gt;.so&lt;/code&gt; file defined in &lt;code&gt;android.app.lib_name&lt;/code&gt;&lt;code&gt;meta-data&lt;/code&gt;, and calls the &lt;code&gt;main&lt;/code&gt; function with all the arguments set in &lt;code&gt;android.app.arguments&lt;/code&gt;&lt;code&gt;meta-data&lt;/code&gt;.</source>
          <target state="translated">Qtはロード &lt;code&gt;.so&lt;/code&gt; で定義されたファイル &lt;code&gt;android.app.lib_name&lt;/code&gt; &lt;code&gt;meta-data&lt;/code&gt; 、そして呼び出す &lt;code&gt;main&lt;/code&gt; に設定されたすべての引数を持つ関数 &lt;code&gt;android.app.arguments&lt;/code&gt; &lt;code&gt;meta-data&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6deba9ade28c55bfdfdf88b73236eb3d3b1cb6ce" translate="yes" xml:space="preserve">
          <source>Qt makes a distinction between null bit arrays and empty bit arrays for historical reasons. For most applications, what matters is whether or not a bit array contains any data, and this can be determined using &lt;a href=&quot;qbitarray#isEmpty&quot;&gt;isEmpty&lt;/a&gt;().</source>
          <target state="translated">Qtは、歴史的な理由からnullビット配列と空のビット配列を区別しています。ほとんどのアプリケーションでは、ビット配列にデータが含まれているかどうかが重要であり、これは&lt;a href=&quot;qbitarray#isEmpty&quot;&gt;isEmpty&lt;/a&gt;（）を使用して決定できます。</target>
        </trans-unit>
        <trans-unit id="06ffa696f8232ead655f8a08a7deb7a44d7c84b6" translate="yes" xml:space="preserve">
          <source>Qt makes a distinction between null byte arrays and empty byte arrays for historical reasons. For most applications, what matters is whether or not a byte array contains any data, and this can be determined using &lt;a href=&quot;qbytearray#isEmpty&quot;&gt;isEmpty&lt;/a&gt;().</source>
          <target state="translated">Qtは、歴史的な理由でnullバイト配列と空のバイト配列を区別しています。ほとんどのアプリケーションで重要なのは、バイト配列にデータが含まれているかどうかであり、これは&lt;a href=&quot;qbytearray#isEmpty&quot;&gt;isEmpty&lt;/a&gt;（）を使用して決定できます。</target>
        </trans-unit>
        <trans-unit id="080bd151795e13b333d428f6d0052bf4209fcb1e" translate="yes" xml:space="preserve">
          <source>Qt makes a distinction between null strings and empty strings for historical reasons. For most applications, what matters is whether or not a string contains any data, and this can be determined using the &lt;a href=&quot;qstring#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() function.</source>
          <target state="translated">Qtは、歴史的な理由でnull文字列と空の文字列を区別しています。ほとんどのアプリケーションで重要なのは、文字列にデータが含まれているかどうかであり、これは&lt;a href=&quot;qstring#isEmpty&quot;&gt;isEmpty&lt;/a&gt;（）関数を使用して決定できます。</target>
        </trans-unit>
        <trans-unit id="7dee2d6abac8dd712cc795b1022328d7d892bed8" translate="yes" xml:space="preserve">
          <source>Qt minor releases usually follow the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; minor releases, while Qt patch releases follow &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; patch releases. Patch releases are therefore both backward and forward compatible.</source>
          <target state="translated">通常、Qtマイナーリリースは&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt;マイナーリリースに従いますが、Qtパッチリリースは&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt;パッチリリースに従います。したがって、パッチリリースには下位互換性と上位互換性があります。</target>
        </trans-unit>
        <trans-unit id="03ac5c3b45757b572d5225054b71f5662eab4ae3" translate="yes" xml:space="preserve">
          <source>Qt needs information about the physical dimensions of the attached display to determine DPI values and thus set correct font sizes. Usually, this information is provided by the Screen. In some cases you may see an invalid screen size such as 0mmx0mm. In such a case Qt requires an environment variable &lt;code&gt;QQNX_PHYSICAL_SCREEN_SIZE&lt;/code&gt; set to according values to get the required information. If Qt applications exit with an error message saying that the physical screen size couldn't be determined, set the variable like this before starting the Qt application:</source>
          <target state="translated">Qtは、DPI値を決定して正しいフォントサイズを設定するために、接続されたディスプレイの物理的な寸法に関する情報を必要とします。通常、この情報は画面から提供されます。場合によっては、0mmx0mmなどの無効な画面サイズが表示されることがあります。このような場合、Qtは、必要な情報を取得するために、対応する値に設定された環境変数 &lt;code&gt;QQNX_PHYSICAL_SCREEN_SIZE&lt;/code&gt; を必要とします。Qtアプリケーションが終了し、物理画面サイズを特定できなかったというエラーメッセージが表示された場合は、Qtアプリケーションを開始する前に、次のように変数を設定します。</target>
        </trans-unit>
        <trans-unit id="e4dbb8aed7a5351c88e084deb297f360a51b5140" translate="yes" xml:space="preserve">
          <source>Qt normally erases the widget's area before the &lt;a href=&quot;qwidget#paintEvent&quot;&gt;paintEvent&lt;/a&gt;() call. If the &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt::WA_OpaquePaintEvent&lt;/a&gt; widget attribute is set, the widget is responsible for painting all its pixels with an opaque color.</source>
          <target state="translated">Qtは通常、&lt;a href=&quot;qwidget#paintEvent&quot;&gt;paintEvent&lt;/a&gt;（）呼び出しの前にウィジェットの領域を消去します。場合は&lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qtの:: WA_OpaquePaintEvent&lt;/a&gt;ウィジェット属性が設定され、ウィジェットが不透明な色で、そのすべてのピクセルを描くための責任があります。</target>
        </trans-unit>
        <trans-unit id="db2e2efe41460eb77e441e039bf686e8127fd06b" translate="yes" xml:space="preserve">
          <source>Qt normally uses &lt;code&gt;fontconfig&lt;/code&gt; to provide access to system fonts. If &lt;code&gt;fontconfig&lt;/code&gt; is not available, Qt will fall back to using &lt;code&gt;QBasicFontDatabase&lt;/code&gt;. In this case, Qt applications will look for fonts in Qt's &lt;code&gt;lib/fonts&lt;/code&gt; directory. Qt will automatically detect pre-rendered fonts and TrueType fonts. This directory can be overridden by setting the &lt;code&gt;QT_QPA_FONTDIR&lt;/code&gt; environment variable.</source>
          <target state="translated">Qtは通常、システムフォントへのアクセスを提供するために &lt;code&gt;fontconfig&lt;/code&gt; を使用します。場合 &lt;code&gt;fontconfig&lt;/code&gt; 利用できない、Qtは使用にフォールバックします &lt;code&gt;QBasicFontDatabase&lt;/code&gt; を。この場合、QtアプリケーションはQtの &lt;code&gt;lib/fonts&lt;/code&gt; ディレクトリでフォントを探します。 Qtは事前にレンダリングされたフォントとTrueTypeフォントを自動的に検出します。このディレクトリは、 &lt;code&gt;QT_QPA_FONTDIR&lt;/code&gt; 環境変数を設定することで上書きできます。</target>
        </trans-unit>
        <trans-unit id="aaeeac97ee362e1784217036bbe5320fad374f2d" translate="yes" xml:space="preserve">
          <source>Qt normally uses &lt;code&gt;fontconfig&lt;/code&gt; to provide access to system fonts. If &lt;code&gt;fontconfig&lt;/code&gt; is not available, e.g. in dedicated embedded systems where space is at a premium, Qt will fall back to using &lt;code&gt;QBasicFontDatabase&lt;/code&gt;. In this case, Qt applications will look for fonts in Qt's &lt;code&gt;lib/fonts/&lt;/code&gt; directory. Qt will automatically detect prerendered fonts and TrueType fonts.</source>
          <target state="translated">Qtは通常、システムフォントへのアクセスを提供するために &lt;code&gt;fontconfig&lt;/code&gt; を使用します。場合 &lt;code&gt;fontconfig&lt;/code&gt; スペースが限られている専用の組み込みシステムでは例えば、利用できない、Qtは使用にフォールバックします &lt;code&gt;QBasicFontDatabase&lt;/code&gt; を。この場合、QtアプリケーションはQtの &lt;code&gt;lib/fonts/&lt;/code&gt; ディレクトリでフォントを探します。Qtは事前レンダリングされたフォントとTrueTypeフォントを自動的に検出します。</target>
        </trans-unit>
        <trans-unit id="00621a561fad374b4010fb23e9ea2ac50f598835" translate="yes" xml:space="preserve">
          <source>Qt notifies applications if the user interface language changes by sending an event of the type &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::LanguageChange&lt;/a&gt;. To call the member function &lt;code&gt;retranslateUi()&lt;/code&gt; of the user interface object, we reimplement &lt;code&gt;QWidget::changeEvent()&lt;/code&gt; in the form class, as follows:</source>
          <target state="translated">Qtは、&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: LanguageChange&lt;/a&gt;タイプのイベントを送信することにより、ユーザーインターフェイス言語が変更された場合にアプリケーションに通知します。メンバ関数呼び出しに &lt;code&gt;retranslateUi()&lt;/code&gt; ユーザインターフェイスオブジェクトのを、私たちは再実装 &lt;code&gt;QWidget::changeEvent()&lt;/code&gt; フォームクラスでは、次のように：</target>
        </trans-unit>
        <trans-unit id="db4a4c9cfa2ed2a668bbec94f50b02e2b8dfa4a5" translate="yes" xml:space="preserve">
          <source>Qt now provides a family of classes which all inherit from &lt;a href=&quot;qabstractopenglfunctions&quot;&gt;QAbstractOpenGLFunctions&lt;/a&gt; which expose every core OpenGL function by way of a corresponding member function. There is a class for every valid combination of OpenGL version and profile. Each class follows the naming convention:</source>
          <target state="translated">Qt は、対応するメンバー関数を介してすべてのコアOpenGL関数を公開する&lt;a href=&quot;qabstractopenglfunctions&quot;&gt;QAbstractOpenGLFunctions&lt;/a&gt;からすべて継承するクラスのファミリーを提供します。 OpenGLのバージョンとプロファイルの有効な組み合わせごとにクラスがあります。各クラスは命名規則に従います。</target>
        </trans-unit>
        <trans-unit id="92b5e2be55607869c98610c2d5f2f3e459098495" translate="yes" xml:space="preserve">
          <source>Qt offers Qt Quick Layouts to arrange Qt Quick items visually in a layout. Unlike its alternative, the item positioners, the Qt Quick Layouts can also resize its children on window resize. Although Qt Quick Layouts are often the desired choice for most use cases, the following</source>
          <target state="translated">Qtには、Qt Quickのアイテムをレイアウト内に視覚的に配置するためのQt Quick Layoutsが用意されています。代替のアイテム ポジショナーとは異なり、Qt クイック レイアウトはウィンドウのサイズ変更時に子アイテムのサイズを変更することもできます。Qt クイック レイアウトは、ほとんどのユースケースで望ましい選択であることが多いですが、次のような場合には以下のようになります。</target>
        </trans-unit>
        <trans-unit id="dd1be8ba084fd99501ffdb560f868cae42d1abcf" translate="yes" xml:space="preserve">
          <source>Qt offers a better solution to this problem and recommends the application developers to follow these tips:</source>
          <target state="translated">Qt はこの問題に対するより良い解決策を提供しており、アプリケーション開発者はこれらのヒントに従うことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="fe06eaae8129a7c2a556f63b5073be2931f913cc" translate="yes" xml:space="preserve">
          <source>Qt offers many classes and functions for working with threads. Below are four different approaches that Qt programmers can use to implement multithreaded applications.</source>
          <target state="translated">Qt にはスレッドを扱うための多くのクラスや関数が用意されています。以下では、Qtプログラマがマルチスレッドアプリケーションを実装するために使用できる4つの異なるアプローチを紹介します。</target>
        </trans-unit>
        <trans-unit id="933607e2e07333ffac1e434f766ff78ad0d55767" translate="yes" xml:space="preserve">
          <source>Qt offers several tools and utilities to enable a rich developer experience, especially for Qt Quick developers. The following sections provide a brief introduction to those tools and utilities, and provide links to further information about them.</source>
          <target state="translated">Qt は、特に Qt Quick 開発者のために、豊かな開発体験を可能にするいくつかのツールやユーティリティを提供しています。以下のセクションでは、これらのツールやユーティリティの簡単な紹介と、それらについての詳細な情報へのリンクを提供します。</target>
        </trans-unit>
        <trans-unit id="7cc057726d6e021c571859d7606e53577d7aded2" translate="yes" xml:space="preserve">
          <source>Qt offers various approaches to integrate QML and C++ code in an application. A typical use case is displaying a list of data in a user interface. If the data set is static, simple, and/or small, a model written in QML can be sufficient.</source>
          <target state="translated">Qtは、QMLとC++のコードをアプリケーションに統合するための様々なアプローチを提供しています。典型的なユースケースは、ユーザーインターフェースにデータのリストを表示することです。データセットが静的でシンプルで小さい場合は、QMLで書かれたモデルで十分です。</target>
        </trans-unit>
        <trans-unit id="ff4c589debde91ae9e625d43a4a33d934f272052" translate="yes" xml:space="preserve">
          <source>Qt or C++ type</source>
          <target state="translated">QtまたはC++タイプ</target>
        </trans-unit>
        <trans-unit id="ce14258c22a023000718cf3eb4314fd32dfe9903" translate="yes" xml:space="preserve">
          <source>Qt pictures use a proprietary binary format. Unlike native picture (meta-file) formats on many window systems, Qt pictures have no limitations regarding their contents. Everything that can be painted on a widget or pixmap (e.g., fonts, pixmaps, regions, transformed graphics, etc.) can also be stored in a picture.</source>
          <target state="translated">Qt のピクチャは独自のバイナリ形式を使用しています。多くのウィンドウシステムにあるネイティブのピクチャ(メタファイル)フォーマットとは異なり、Qt のピクチャにはその内容に関する制限がありません。ウィジェットやpixmap上で描画できるもの(フォント、pixmap、リージョン、変換されたグラフィックスなど)はすべてピクチャに保存することができます。</target>
        </trans-unit>
        <trans-unit id="8fc021dec8a5de5c61ab7031bc6dcb3d55cc65e1" translate="yes" xml:space="preserve">
          <source>Qt property</source>
          <target state="translated">Qtプロパティ</target>
        </trans-unit>
        <trans-unit id="87f94e320bc40830cf6299d10ead3d324a6424b1" translate="yes" xml:space="preserve">
          <source>Qt provides &lt;a href=&quot;qxmlstreamwriter&quot;&gt;QXmlStreamWriter&lt;/a&gt; for writing XML.</source>
          <target state="translated">Qtは、XMLを書き込むための&lt;a href=&quot;qxmlstreamwriter&quot;&gt;QXmlStreamWriter&lt;/a&gt;を提供します。</target>
        </trans-unit>
        <trans-unit id="2e059dd17c54e09b3c7fac357e3fd840b1f96aa7" translate="yes" xml:space="preserve">
          <source>Qt provides C++ classes that support SQL data models. These classes work transparently on the underlying SQL data, reducing the need to run SQL queries for basic SQL operations such as create, insert, or update. For more details about these classes, see &lt;a href=&quot;sql-model&quot;&gt;Using the SQL Model Classes&lt;/a&gt;.</source>
          <target state="translated">QtはSQLデータモデルをサポートするC ++クラスを提供します。これらのクラスは、基になるSQLデータに対して透過的に機能するため、作成、挿入、更新などの基本的なSQL操作のためにSQLクエリを実行する必要がなくなります。これらのクラスの詳細について&lt;a href=&quot;sql-model&quot;&gt;は、SQLモデルクラスの使用を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="98580f7890d21d86a5850e9242275efb62ce8ac3" translate="yes" xml:space="preserve">
          <source>Qt provides a &lt;code&gt;qmlprofiler&lt;/code&gt; command line tool to capture profiling data in a file. To run this tool, enter the following command:</source>
          <target state="translated">Qtは、プロファイリングデータをファイルにキャプチャする &lt;code&gt;qmlprofiler&lt;/code&gt; コマンドラインツールを提供します。このツールを実行するには、次のコマンドを入力します。</target>
        </trans-unit>
        <trans-unit id="5f5d28a76813f4640f8fae4ba48da2825709372d" translate="yes" xml:space="preserve">
          <source>Qt provides a deploy tool, &lt;a href=&quot;https://doc.qt.io/qt-5.13/macos-deployment.html#the-mac-deployment-tool&quot;&gt;macdeployqt&lt;/a&gt;, to simplify the deployment process. The &lt;a href=&quot;https://doc.qt.io/qt-5.13/macos-deployment.html#&quot;&gt;Qt for macOS - Deployment&lt;/a&gt; article covers the deployment process in more detail.</source>
          <target state="translated">Qtには、デプロイプロセスを簡素化するためのデプロイツール&lt;a href=&quot;https://doc.qt.io/qt-5.13/macos-deployment.html#the-mac-deployment-tool&quot;&gt;macdeployqtが用意&lt;/a&gt;されています。&lt;a href=&quot;https://doc.qt.io/qt-5.13/macos-deployment.html#&quot;&gt;MacOSのためのQtは-展開の&lt;/a&gt;記事は、より詳細に展開プロセスをカバーしています。</target>
        </trans-unit>
        <trans-unit id="64edb3f1e781f37d05916d406c36c5525c91178f" translate="yes" xml:space="preserve">
          <source>Qt provides a number of built-in &lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; classes, that is, classes that know how to translate between Unicode and legacy encodings to support programs that must talk to other programs or read/write files in legacy file formats.</source>
          <target state="translated">Qtはいくつかの組み込み&lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt;クラスを提供します。つまり、他のプログラムと通信したり、レガシーファイル形式でファイルを読み書きしたりする必要があるプログラムをサポートするために、Unicodeとレガシーエンコーディングの間の変換方法を知っているクラスです。</target>
        </trans-unit>
        <trans-unit id="eebb0fc8e4b5aa641d0125df1dc05902f0268828" translate="yes" xml:space="preserve">
          <source>Qt provides a number of global template functions in &lt;code&gt;&amp;lt;QtAlgorithms&amp;gt;&lt;/code&gt; that work on containers and perform small tasks to make life easier, such as &lt;a href=&quot;qtalgorithms#qDeleteAll&quot;&gt;qDeleteAll&lt;/a&gt;(), which invokes &lt;code&gt;operator delete&lt;/code&gt; on all items in a given container or in a given range. You can use these algorithms with any &lt;a href=&quot;containers#&quot;&gt;container class&lt;/a&gt; that provides STL-style iterators, including Qt's &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;, &lt;a href=&quot;qlinkedlist&quot;&gt;QLinkedList&lt;/a&gt;, &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;, &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;, and &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; classes.</source>
          <target state="translated">Qtは、 &lt;code&gt;&amp;lt;QtAlgorithms&amp;gt;&lt;/code&gt; に多数のグローバルテンプレート関数を提供します。これは、コンテナーを操作し、小さなタスクを実行して、特定のコンテナーまたは特定の範囲のすべてのアイテムに対して &lt;code&gt;operator delete&lt;/code&gt; を呼び出す&lt;a href=&quot;qtalgorithms#qDeleteAll&quot;&gt;qDeleteAll&lt;/a&gt;（）などの簡単な作業を実行します。これらのアルゴリズムは、Qtの&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;、&lt;a href=&quot;qlinkedlist&quot;&gt;QLinkedList&lt;/a&gt;、&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;、&lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;、&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;クラスなど、STLスタイルのイテレーターを提供する&lt;a href=&quot;containers#&quot;&gt;コンテナークラス&lt;/a&gt;で使用できます。</target>
        </trans-unit>
        <trans-unit id="3346c7b6a942ed6f07dfa001e04aa9c3f833e558" translate="yes" xml:space="preserve">
          <source>Qt provides a resource system for organizing application files and assets, a set of containers, and classes for receiving input and printing output.</source>
          <target state="translated">Qtは、アプリケーションのファイルやアセットを整理するためのリソースシステム、一連のコンテナ、入力を受けて出力を印刷するためのクラスを提供しています。</target>
        </trans-unit>
        <trans-unit id="85858e3548f6ddf4e0a5330f8d5cc57937c09933" translate="yes" xml:space="preserve">
          <source>Qt provides a set of &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; subclasses that emulate the native look of the different platforms supported by Qt (QWindowsStyle, QMacStyle, etc.). These styles are built into the Qt GUI module, other styles can be made available using Qt's plugin mechansim.</source>
          <target state="translated">Qtは、Qtがサポートするさまざまなプラットフォーム（QWindowsStyle、QMacStyleなど）のネイティブな外観をエミュレートする一連の&lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;サブクラスを提供します。これらのスタイルはQt GUIモジュールに組み込まれており、他のスタイルはQtのプラグインメカニズムを使用して利用できます。</target>
        </trans-unit>
        <trans-unit id="69c7a02976d799b68728387c289937ed07b905e3" translate="yes" xml:space="preserve">
          <source>Qt provides a set of &lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; classes to help with converting non-Unicode formats to and from Unicode. You can also create your own codec classes.</source>
          <target state="translated">Qtは、非Unicode形式とUnicodeの間の変換を支援する一連の&lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt;クラスを提供します。独自のコーデッククラスを作成することもできます。</target>
        </trans-unit>
        <trans-unit id="442594ba1625b23c9a62cc5b4c5639ad452b1fc5" translate="yes" xml:space="preserve">
          <source>Qt provides a set of ready-made dialogs for file, font, color-selection and more.</source>
          <target state="translated">Qtには、ファイル、フォント、色選択などのためのダイアログが用意されています。</target>
        </trans-unit>
        <trans-unit id="231325f7c5f334278d9999ddf840f878f79069de" translate="yes" xml:space="preserve">
          <source>Qt provides a sophisticated property system similar to the ones supplied by some compiler vendors. However, as a compiler- and platform-independent library, Qt does not rely on non-standard compiler features like &lt;code&gt;__property&lt;/code&gt; or &lt;code&gt;[property]&lt;/code&gt;. The Qt solution works with</source>
          <target state="translated">Qtは、一部のコンパイラベンダーが提供するものと同様の洗練されたプロパティシステムを提供します。ただし、コンパイラおよびプラットフォームに依存しないライブラリとして、Qtは &lt;code&gt;__property&lt;/code&gt; や &lt;code&gt;[property]&lt;/code&gt; などの非標準のコンパイラ機能に依存しません。Qtソリューションは</target>
        </trans-unit>
        <trans-unit id="166ab04b878a106458763254fc0d105f8ecacbc8" translate="yes" xml:space="preserve">
          <source>Qt provides accessible interfaces for its widgets and for Qt Quick Controls. Interfaces for any &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclass can be requested through QAccessible::queryInterface(). A default implementation is provided if a more specialized interface is not defined. An AT-Client cannot acquire an interface for accessible objects that do not have an equivalent &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;, e.g., scroll bar handles, but they appear as normal objects through interfaces of parent accessible objects, e.g., you can query their relationships with &lt;a href=&quot;qaccessibleinterface#relations&quot;&gt;QAccessibleInterface::relations&lt;/a&gt;().</source>
          <target state="translated">Qtは、ウィジェットとQtクイックコントロールにアクセス可能なインターフェースを提供します。&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;サブクラスのインターフェースは、QAccessible :: queryInterface（）を通じてリクエストできます。より特殊なインターフェースが定義されていない場合、デフォルトの実装が提供されます。 ATクライアントは、同等の&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;を持たないアクセシブルオブジェクト（スクロールバーハンドルなど）のインターフェイスを取得できませんが、親のアクセシブルオブジェクトのインターフェイスを介して通常のオブジェクトとして表示されます。たとえば、&lt;a href=&quot;qaccessibleinterface#relations&quot;&gt;QAccessibleInterface :: relationsで&lt;/a&gt;それらの関係を照会できます。（）。</target>
        </trans-unit>
        <trans-unit id="7901d03663cd3e7afb4aa0a36247269d34542071" translate="yes" xml:space="preserve">
          <source>Qt provides an extensive collection of classes for parsing, rendering manipulating and editing rich text.</source>
          <target state="translated">Qt は、リッチテキストを解析、レンダリング、操作、編集するためのクラスの豊富なコレクションを提供しています。</target>
        </trans-unit>
        <trans-unit id="30e1c7defbcb1b69f91cc5e90b043a1d161194ea" translate="yes" xml:space="preserve">
          <source>Qt provides classes for all version and Core and Compatibility profile combinations. The classes for OpenGL versions 3.1 through to 4.3 are:</source>
          <target state="translated">Qtは、すべてのバージョンとCoreと互換性プロファイルの組み合わせに対応したクラスを提供しています。OpenGLのバージョン3.1から4.3までのクラスです。</target>
        </trans-unit>
        <trans-unit id="dafcc43ba81943faaf87c1a7931d6a660d25a30d" translate="yes" xml:space="preserve">
          <source>Qt provides default library paths, but they can also be set using a &lt;a href=&quot;qt-conf&quot;&gt;qt.conf&lt;/a&gt; file. Paths specified in this file will override default values. Note that if the qt.conf file is in the directory of the application executable, it may not be found until a &lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt; is created. If it is not found when calling this function, the default library paths will be used.</source>
          <target state="translated">Qtはデフォルトのライブラリパスを提供しますが、&lt;a href=&quot;qt-conf&quot;&gt;qt.conf&lt;/a&gt;ファイルを使用して設定することもできます。このファイルで指定されたパスは、デフォルト値を上書きします。 qt.confファイルがアプリケーション実行可能ファイルのディレクトリにある場合、&lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt;が作成されるまで見つからない可能性があることに注意してください。この関数を呼び出すときに見つからない場合は、デフォルトのライブラリパスが使用されます。</target>
        </trans-unit>
        <trans-unit id="25b73a1458d4fb3fbb10047b073b79f1b29e0e60" translate="yes" xml:space="preserve">
          <source>Qt provides different solutions:</source>
          <target state="translated">Qtは様々なソリューションを提供しています。</target>
        </trans-unit>
        <trans-unit id="eb3249c74afe6b26b977cd9870e40d0a6d8f0afa" translate="yes" xml:space="preserve">
          <source>Qt provides excellent support for translating Qt C++ and Qt Quick applications into local languages. Release managers, translators, and developers can use the Qt translation tools to accomplish their tasks.</source>
          <target state="translated">Qt は、Qt C++および Qt Quick アプリケーションをローカル言語に翻訳するための優れたサポートを提供しています。リリースマネージャ、翻訳者、開発者は、Qt 翻訳ツールを使用してタスクを達成することができます。</target>
        </trans-unit>
        <trans-unit id="37f492c87274560c06c898bde25312c453186f1e" translate="yes" xml:space="preserve">
          <source>Qt provides extensive cross-platform support for printing. Using the printing systems on each platform, Qt applications can print to attached printers and across networks to remote printers. Qt's printing system also supports PDF file generation, providing the foundation for basic report generation facilities.</source>
          <target state="translated">Qt は、クロスプラットフォームでの印刷を幅広くサポートしています。各プラットフォームの印刷システムを使用して、Qt のアプリケーションは、接続されたプリンタに印刷したり、ネットワークを介してリモートプリンタに印刷したりすることができます。Qt の印刷システムは PDF ファイルの生成もサポートしており、基本的なレポート生成機能の基礎を提供します。</target>
        </trans-unit>
        <trans-unit id="6c4479267b244987ab6ba5713901e5acbfabdf57" translate="yes" xml:space="preserve">
          <source>Qt provides four classes for handling image data: &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;, &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;, &lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt; and &lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt;. &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; is designed and optimized for I/O, and for direct pixel access and manipulation, while &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; is designed and optimized for showing images on screen. &lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt; is only a convenience class that inherits &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;, ensuring a depth of 1. Finally, the &lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt; class is a paint device that records and replays &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; commands.</source>
          <target state="translated">Qtは、画像データを処理するための4つのクラス、&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;、&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;、&lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt;、および&lt;a href=&quot;qpicture&quot;&gt;QPictureを提供し&lt;/a&gt;ます。&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;は、I / Oおよび直接ピクセルアクセスと操作用に設計および最適化されていますが、&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;は、画面に画像を表示するために設計および最適化されています。&lt;a href=&quot;qbitmap&quot;&gt;QBitmapが&lt;/a&gt;継承する唯一の便利なクラスである&lt;a href=&quot;qpixmap&quot;&gt;QPixmapのは&lt;/a&gt;、最後に1の深さを確保し、&lt;a href=&quot;qpicture&quot;&gt;QPictureの&lt;/a&gt;クラスは、レコードとリプレイそのペイントデバイスです&lt;a href=&quot;qpainter&quot;&gt;QPainterの&lt;/a&gt;コマンド。</target>
        </trans-unit>
        <trans-unit id="b994fea97688c825475aae74000bf222736f7393" translate="yes" xml:space="preserve">
          <source>Qt provides four classes for handling image data: &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;, &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;, &lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt; and &lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt;. &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; is designed and optimized for I/O, and for direct pixel access and manipulation, while &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; is designed and optimized for showing images on screen. &lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt; is only a convenience class that inherits &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;, ensuring a depth of 1. The &lt;a href=&quot;qpixmap#isQBitmap&quot;&gt;isQBitmap&lt;/a&gt;() function returns &lt;code&gt;true&lt;/code&gt; if a &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; object is really a bitmap, otherwise returns &lt;code&gt;false&lt;/code&gt;. Finally, the &lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt; class is a paint device that records and replays &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; commands.</source>
          <target state="translated">Qtは画像データを処理するための4つのクラスを提供します：&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;、&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;、&lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt;、&lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt;。&lt;a href=&quot;qimage&quot;&gt;QPixmap&lt;/a&gt;は画面に画像を表示するために設計および最適化されているのに対し、&lt;a href=&quot;qpixmap&quot;&gt;QImage&lt;/a&gt;はI / Oおよび直接ピクセルアクセスと操作のために設計および最適化されています。&lt;a href=&quot;qbitmap&quot;&gt;QBitmapが&lt;/a&gt;継承する唯一の便利なクラスである&lt;a href=&quot;qpixmap&quot;&gt;QPixmapのは&lt;/a&gt;、1.の深さを保証する&lt;a href=&quot;qpixmap#isQBitmap&quot;&gt;isQBitmap&lt;/a&gt;（）関数が返すの &lt;code&gt;true&lt;/code&gt; 場合&lt;a href=&quot;qpixmap&quot;&gt;QPixmapのの&lt;/a&gt;オブジェクトはそう返し、本当にビットマップで &lt;code&gt;false&lt;/code&gt; 。最後に、&lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt;クラスは、記録および再生するペイントデバイスです。&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;コマンド。</target>
        </trans-unit>
        <trans-unit id="b14a5680e99e1a944658ee836fbab84198f74686" translate="yes" xml:space="preserve">
          <source>Qt provides full Unicode support, including input methods, fonts, clipboard, drag-and-drop and file names.</source>
          <target state="translated">Qt は、入力メソッド、フォント、クリップボード、ドラッグ&amp;ドロップ、ファイル名など、Unicode を完全にサポートしています。</target>
        </trans-unit>
        <trans-unit id="6ab2967c3110cccf765f0e5aa141f835c8bb8576" translate="yes" xml:space="preserve">
          <source>Qt provides full Unicode support, including input methods, fonts, clipboard, drag-and-drop.</source>
          <target state="translated">Qt は、入力メソッド、フォント、クリップボード、ドラッグアンドドロップを含む Unicode の完全なサポートを提供します。</target>
        </trans-unit>
        <trans-unit id="6013721d7b22a6f2a4d2e51671befea99c124926" translate="yes" xml:space="preserve">
          <source>Qt provides low-level primitives as well as high-level mechanisms for synchronizing threads.</source>
          <target state="translated">Qt は低レベルのプリミティブだけでなく、スレッドを同期させるための高レベルのメカニズムも提供しています。</target>
        </trans-unit>
        <trans-unit id="f63186183d912be997bde447edd6d402d72d98fd" translate="yes" xml:space="preserve">
          <source>Qt provides several built-in styles represented by the &lt;a href=&quot;qt#PenStyle-enum&quot;&gt;Qt::PenStyle&lt;/a&gt; enum:</source>
          <target state="translated">Qtには、&lt;a href=&quot;qt#PenStyle-enum&quot;&gt;Qt :: PenStyle&lt;/a&gt;列挙型で表される組み込みのスタイルがいくつか用意されています。</target>
        </trans-unit>
        <trans-unit id="8990aa7342e67095758b3aab20deb4995cbe8127" translate="yes" xml:space="preserve">
          <source>Qt provides several premade implementations of &lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt; for the different painter backends we support. The primary paint engine provided is the raster paint engine, which contains a software rasterizer which supports the full feature set on all supported platforms. This is the default for painting on &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;-based classes in e.g. on Windows, X11 and &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, it is the backend for painting on &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; and it is used as a fallback for paint engines that do not support a certain capability. In addition we provide &lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt; implementations for &lt;a href=&quot;qpaintengine#Type-enum&quot;&gt;OpenGL&lt;/a&gt; (accessible through QGLWidget) and printing (which allows using &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; to draw on a QPrinter object).</source>
          <target state="translated">Qtは、サポートするさまざまなペインターバックエンド用に、&lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngineの&lt;/a&gt;いくつかの実装を提供しています。提供される主要なペイントエンジンはラスターペイントエンジンで、サポートされているすべてのプラットフォームですべての機能セットをサポートするソフトウェアラスタライザーが含まれています。これは、たとえばWindows、X11、および&lt;a href=&quot;internationalization#macos&quot;&gt;macOSの&lt;/a&gt;&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;ベースのクラスでのペイントのデフォルトであり、&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;でのペイントのバックエンドであり、特定の機能をサポートしないペイントエンジンのフォールバックとして使用されます。加えて、我々は提供&lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt;の実装&lt;a href=&quot;qpaintengine#Type-enum&quot;&gt;のOpenGL&lt;/a&gt;（使用可能（QGLWidgetを介してアクセス可能）と印刷&lt;a href=&quot;qpainter&quot;&gt;QPainterのを&lt;/a&gt; QPrinterオブジェクト上に描画することを）。</target>
        </trans-unit>
        <trans-unit id="8a8564d259226a3d5989df23cbfbb8212612a74f" translate="yes" xml:space="preserve">
          <source>Qt provides several ways to implement Inter-Process Communication (IPC) in Qt applications.</source>
          <target state="translated">Qt は、Qt アプリケーションにプロセス間通信(IPC)を実装するためのいくつかの方法を提供しています。</target>
        </trans-unit>
        <trans-unit id="de9cb718a3b3a5c565ab0cd54ddc9c74c0a9b149" translate="yes" xml:space="preserve">
          <source>Qt provides single-source portability across Microsoft Windows, &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, Linux, and all major commercial Unix variants. It is also available for embedded devices.</source>
          <target state="translated">Qtは、Microsoft Windows、&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;、Linux、およびすべての主要な商用Unixバリアントにわたって単一ソースの移植性を提供します。組み込みデバイスでも利用できます。</target>
        </trans-unit>
        <trans-unit id="94928b6390ee1ade63778e31065bf1b0ab7aaeeb" translate="yes" xml:space="preserve">
          <source>Qt provides some ready-made models that can be used to handle items of data:</source>
          <target state="translated">Qtには、データの項目を扱うのに使えるレディメイドのモデルがいくつか用意されています。</target>
        </trans-unit>
        <trans-unit id="0dbf898bade78887d4d180cb6793559809bfc1e8" translate="yes" xml:space="preserve">
          <source>Qt provides support for application scripting with JavaScript. The following guides and references cover aspects of programming with JavaScript and Qt.</source>
          <target state="translated">Qt は JavaScript を使ったアプリケーションスクリプトのサポートを提供しています。以下のガイドとリファレンスは、JavaScript と Qt を使ったプログラミングの側面をカバーしています。</target>
        </trans-unit>
        <trans-unit id="3de5e4631357b1acb99e5edea85a30b0585964bd" translate="yes" xml:space="preserve">
          <source>Qt provides support for dealing with JSON data. JSON is a format to encode object data derived from Javascript, but now widely used as a data exchange format on the internet.</source>
          <target state="translated">QtはJSONデータを扱うためのサポートを提供しています。JSONはJavascriptから派生したオブジェクトデータを符号化するフォーマットですが、現在ではインターネット上のデータ交換フォーマットとして広く利用されています。</target>
        </trans-unit>
        <trans-unit id="1672125b1c73ef6f3ca16c0459cad60a5f673687" translate="yes" xml:space="preserve">
          <source>Qt provides support for macOS structures such as Frameworks and bundles. It is important to be aware of these structure as they directly affect the deployment of applications.</source>
          <target state="translated">QtはフレームワークやバンドルなどのmacOSの構造をサポートしています。これらの構造はアプリケーションのデプロイに直接影響するため、注意が必要です。</target>
        </trans-unit>
        <trans-unit id="a5352b98d3aa40382c76ecab574f55a2bf3d0e4b" translate="yes" xml:space="preserve">
          <source>Qt provides support for the Global Menu Bar with &lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt;. macOS users expect to have a menu bar at the top of the screen and Qt honors this.</source>
          <target state="translated">Qtは&lt;a href=&quot;qmenubar&quot;&gt;QMenuBarで&lt;/a&gt;グローバルメニューバーをサポートします。macOSユーザーは画面の上部にメニューバーがあることを期待しており、Qtはこれを尊重しています。</target>
        </trans-unit>
        <trans-unit id="addb3010519452720d8fecf88940be415e8db7e8" translate="yes" xml:space="preserve">
          <source>Qt provides support for the legacy QPF format for compatibility reasons. QPF is based on the internal font engine data structure of Qt/Embedded versions 2 and 3.</source>
          <target state="translated">Qt は互換性の理由から、従来の QPF フォーマットのサポートを提供しています。QPF は、Qt/Embedded バージョン 2 および 3 の内部フォントエンジンのデータ構造に基づいています。</target>
        </trans-unit>
        <trans-unit id="3dc26704da55c340d6e2a532711482f07da9a792" translate="yes" xml:space="preserve">
          <source>Qt provides the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-painting-painterpaths-example.html&quot;&gt;Painter Paths Example&lt;/a&gt; and the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-painting-deform-example.html&quot;&gt;Vector Deformation example&lt;/a&gt; which are located in Qt's example directory.</source>
          <target state="translated">Qtは、Qtのサンプルディレクトリにある&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-painting-painterpaths-example.html&quot;&gt;Painter Pathsサンプル&lt;/a&gt;と&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-painting-deform-example.html&quot;&gt;Vector Deformationサンプル&lt;/a&gt;を提供します。</target>
        </trans-unit>
        <trans-unit id="a288cc31c6f5d263331d29b88d11e06e233b629f" translate="yes" xml:space="preserve">
          <source>Qt provides the &lt;a href=&quot;qpicture#load&quot;&gt;QPicture::load&lt;/a&gt;() and &lt;a href=&quot;qpicture#save&quot;&gt;QPicture::save&lt;/a&gt;() functions as well as streaming operators for loading and saving pictures.</source>
          <target state="translated">Qtは、&lt;a href=&quot;qpicture#load&quot;&gt;QPicture :: load&lt;/a&gt;（）および&lt;a href=&quot;qpicture#save&quot;&gt;QPicture :: save&lt;/a&gt;（）関数と、画像の読み込みと保存のためのストリーミングオペレーターを提供します。</target>
        </trans-unit>
        <trans-unit id="31ceb736be4a5d57240ae7b1218baac3f202f85c" translate="yes" xml:space="preserve">
          <source>Qt provides the following classes for managing main windows and associated user interface components:</source>
          <target state="translated">Qtでは、メインウィンドウや関連するユーザーインターフェイスコンポーネントを管理するための以下のクラスを提供しています。</target>
        </trans-unit>
        <trans-unit id="09bdb289cbadfecb02fcab837d46e832df09cd93" translate="yes" xml:space="preserve">
          <source>Qt provides the following sequential containers: &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;, &lt;a href=&quot;qlinkedlist&quot;&gt;QLinkedList&lt;/a&gt;, &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;, &lt;a href=&quot;qstack&quot;&gt;QStack&lt;/a&gt;, and &lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt;. For most applications, &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; is the best type to use. Although it is implemented as an array-list, it provides very fast prepends and appends. If you really need a linked-list, use &lt;a href=&quot;qlinkedlist&quot;&gt;QLinkedList&lt;/a&gt;; if you want your items to occupy consecutive memory locations, use &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;. &lt;a href=&quot;qstack&quot;&gt;QStack&lt;/a&gt; and &lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt; are convenience classes that provide LIFO and FIFO semantics.</source>
          <target state="translated">Qtは、&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;、&lt;a href=&quot;qlinkedlist&quot;&gt;QLinkedList&lt;/a&gt;、&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;、&lt;a href=&quot;qstack&quot;&gt;QStack&lt;/a&gt;、および&lt;a href=&quot;qqueue&quot;&gt;QQueueの&lt;/a&gt;順次コンテナーを提供します。ほとんどのアプリケーションでは、&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;が使用に最適なタイプです。配列リストとして実装されていますが、非常に高速なプリペンドとアペンドを提供します。本当にリンクリストが必要な場合は、&lt;a href=&quot;qlinkedlist&quot;&gt;QLinkedListを&lt;/a&gt;使用してください。アイテムが連続したメモリロケーションを占有するようにする場合は、&lt;a href=&quot;qvector&quot;&gt;QVectorを&lt;/a&gt;使用します。&lt;a href=&quot;qstack&quot;&gt;QStack&lt;/a&gt;および&lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt;は、LIFOおよびFIFOセマンティクスを提供する便利なクラスです。</target>
        </trans-unit>
        <trans-unit id="a5806dcc48e65528f5b89f6b41e80a9d40de826d" translate="yes" xml:space="preserve">
          <source>Qt provides the following standard effects:</source>
          <target state="translated">Qtでは、以下のような標準的なエフェクトが用意されています。</target>
        </trans-unit>
        <trans-unit id="9d26901d87b20f4695baad10a5f58ad41f798a8f" translate="yes" xml:space="preserve">
          <source>Qt provides the most commonly required audio operation in GUI applications: asynchronously playing a sound file. This is most easily accomplished using the static &lt;a href=&quot;qsound#play-1&quot;&gt;play&lt;/a&gt;() function:</source>
          <target state="translated">Qtは、GUIアプリケーションで最も一般的に必要なオーディオ操作を提供します：サウンドファイルの非同期再生。これは、static &lt;a href=&quot;qsound#play-1&quot;&gt;play&lt;/a&gt;（）関数を使用して最も簡単に実行できます。</target>
        </trans-unit>
        <trans-unit id="16e14b8bf9925cba42ae320c4d31e49a39306cc2" translate="yes" xml:space="preserve">
          <source>Qt provides thread support in the form of platform-independent &lt;a href=&quot;thread&quot;&gt;threading classes&lt;/a&gt;, a thread-safe way of posting events, and signal-slot connections across threads. Multithreaded programming is also a useful paradigm for performing time-consuming operations without freezing the user interface of an application.</source>
          <target state="translated">Qtは、プラットフォームに依存しない&lt;a href=&quot;thread&quot;&gt;スレッドクラス&lt;/a&gt;、イベントをポストするスレッドセーフな方法、およびスレッド間のシグナルスロット接続の形式でスレッドサポートを提供します。マルチスレッドプログラミングは、アプリケーションのユーザーインターフェイスをフリーズせずに時間のかかる操作を実行するための有用なパラダイムでもあります。</target>
        </trans-unit>
        <trans-unit id="0e5c476ed0956bf5b0cb7c652e14d9e296c32a04" translate="yes" xml:space="preserve">
          <source>Qt provides thread support in the form of platform-independent threading classes, a thread-safe way of posting events, and signal-slot connections across threads. This makes it easy to develop portable multithreaded Qt applications and take advantage of multiprocessor machines. Multithreaded programming is also a useful paradigm for performing time-consuming operations without freezing the user interface of an application.</source>
          <target state="translated">Qt は、プラットフォームに依存しないスレッドクラス、スレッドセーフなイベントの投稿方法、スレッド間のシグナルスロット接続という形でスレッドをサポートしています。これにより、ポータブルなマルチスレッドQtアプリケーションの開発が容易になり、マルチプロセッサマシンを活用することができます。また、マルチスレッドプログラミングは、アプリケーションのユーザインタフェースをフリーズさせることなく、時間のかかる操作を実行するための有用なパラダイムでもあります。</target>
        </trans-unit>
        <trans-unit id="c3a02e6ec1c01b479f407735836c4990f5c9cfd4" translate="yes" xml:space="preserve">
          <source>Qt provides three ready-to-use view classes that present data from models in ways that are familiar to most users. &lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt; can display items from a model as a simple list, or in the form of a classic icon view. &lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt; displays items from a model as a hierarchy of lists, allowing deeply nested structures to be represented in a compact way. &lt;a href=&quot;qtableview&quot;&gt;QTableView&lt;/a&gt; presents items from a model in the form of a table, much like the layout of a spreadsheet application.</source>
          <target state="translated">Qtは、ほとんどのユーザーが使い慣れた方法でモデルのデータを表示する、すぐに使用できる3つのビュークラスを提供します。&lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt;は、モデルの項目を単純なリストとして、またはクラシックアイコンビューの形式で表示できます。&lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt;はモデルのアイテムをリストの階層として表示し、深くネストされた構造をコンパクトに表現できます。&lt;a href=&quot;qtableview&quot;&gt;QTableView&lt;/a&gt;は、スプレッドシートアプリケーションのレイアウトと同様に、モデルのアイテムをテーブルの形式で表示します。</target>
        </trans-unit>
        <trans-unit id="a41a3f45636a2783fda283b7b6b146ac91c6da6c" translate="yes" xml:space="preserve">
          <source>Qt provides two APIs for creating plugins:</source>
          <target state="translated">Qtでは、プラグインを作成するためのAPIが2つ用意されています。</target>
        </trans-unit>
        <trans-unit id="2d4ed8efe219455830b613d66907864ce140ef79" translate="yes" xml:space="preserve">
          <source>Qt provides various functionality to help you develop high quality code. There are features that assist in debugging to track down bugs, and testing facilities that help to keep the bugs out.</source>
          <target state="translated">Qtには、高品質なコードを開発するための様々な機能が用意されています。バグを追い詰めるためのデバッグを支援する機能や、バグが出ないようにするためのテスト機能などがあります。</target>
        </trans-unit>
        <trans-unit id="30c4ea8b8103e2e248a7ddacd9f4bc60957d6433" translate="yes" xml:space="preserve">
          <source>Qt receives the key action and generates a key event.</source>
          <target state="translated">Qtはキーアクションを受け取り、キーイベントを生成します。</target>
        </trans-unit>
        <trans-unit id="b9eaeaa3484c3400e004061d0f8d83c9f08eea20" translate="yes" xml:space="preserve">
          <source>Qt renders application content to a canvas element, and does not use (other) native DOM elements. This means accessibility (screen readers) are not supported and that text inputs won't trigger virtual keyboards.</source>
          <target state="translated">Qt はアプリケーションのコンテンツを canvas 要素にレンダリングし、(他の)ネイティブ DOM 要素は使用しません。これは、アクセシビリティ (スクリーンリーダー)がサポートされていないことを意味し、テキスト入力がバーチャルキーボードを起動しないことを意味します。</target>
        </trans-unit>
        <trans-unit id="3f8939a301efd180fa0885c0032bdafdc2af870e" translate="yes" xml:space="preserve">
          <source>Qt requires &lt;code&gt;/dev/random&lt;/code&gt; to be present and functional. Start it before starting any Qt application or during the system startup:</source>
          <target state="translated">Qtは &lt;code&gt;/dev/random&lt;/code&gt; が存在し、機能している必要があります。Qtアプリケーションを起動する前、またはシステムの起動中に起動します。</target>
        </trans-unit>
        <trans-unit id="161fe5584c0b40235a419ff4cd6e2b0e24254004" translate="yes" xml:space="preserve">
          <source>Qt resource files are never passed as is. If the service supports &lt;a href=&quot;qmediaserviceproviderhint#Feature-enum&quot;&gt;QMediaServiceProviderHint::StreamPlayback&lt;/a&gt;, a</source>
          <target state="translated">Qtリソースファイルがそのまま渡されることはありません。サービスがサポートしている場合&lt;a href=&quot;qmediaserviceproviderhint#Feature-enum&quot;&gt;QMediaServiceProviderHint :: StreamPlayback&lt;/a&gt;、Aは</target>
        </trans-unit>
        <trans-unit id="024ff4c702a4e3ac2d5a6200acbdc106d03b3b3b" translate="yes" xml:space="preserve">
          <source>Qt returns a hue value of -1 for achromatic colors. If you pass a hue value that is too large, Qt forces it into range. Hue 360 or 720 is treated as 0; hue 540 is treated as 180.</source>
          <target state="translated">Qt は無彩色の色相値として -1 を返します。大きすぎる色相値を渡すと、Qt はそれを強制的に範囲に入れます。色相 360 または 720 は 0 として扱われ、色相 540 は 180 として扱われます。</target>
        </trans-unit>
        <trans-unit id="4e626796a6a6fc36e9f25df8bbcced5dcc06a70a" translate="yes" xml:space="preserve">
          <source>Qt rich-text document</source>
          <target state="translated">Qtリッチテキスト文書</target>
        </trans-unit>
        <trans-unit id="6a189d4a2866895114dd819c493376e6147da1a3" translate="yes" xml:space="preserve">
          <source>Qt sources</source>
          <target state="translated">Qt ソース</target>
        </trans-unit>
        <trans-unit id="d95c6f8889a36cf8005cf2dda3e632f1506c22d0" translate="yes" xml:space="preserve">
          <source>Qt supports Microsoft Active Accessibility (MSAA), &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; Accessibility, and the Unix/X11 AT-SPI standard. Other backends can be supported using QAccessibleBridge.</source>
          <target state="translated">Qtは、Microsoft Active Accessibility（MSAA）、&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; Accessibility、およびUnix / X11 AT-SPI標準をサポートしています。他のバックエンドはQAccessibleBridgeを使用してサポートできます。</target>
        </trans-unit>
        <trans-unit id="6f4aa6b6be7010b1182fee6fe883ada6b7c644bf" translate="yes" xml:space="preserve">
          <source>Qt supports a high DPI mode where the main coordinate system is virtualized and made independent of the display pixel density. This mode is implemented by some operating systems (macOS, iOS). In addition, Qt contains an implementation which may be used where operating system support is missing.</source>
          <target state="translated">Qtは、主座標系を仮想化してディスプレイのピクセル密度に依存しないようにする高DPIモードをサポートしています。このモードはいくつかのオペレーティングシステム(macOS,iOS)で実装されています。さらに、Qt には、オペレーティングシステムのサポートがない場合に使用できる実装が含まれています。</target>
        </trans-unit>
        <trans-unit id="d449be4e56685740a5447bc6de2dfcd5f06b2add" translate="yes" xml:space="preserve">
          <source>Qt supports both simple and extended radial gradients.</source>
          <target state="translated">Qtは単純な放射状グラデーションと拡張された放射状グラデーションの両方をサポートしています。</target>
        </trans-unit>
        <trans-unit id="a4d088d36194027e449a17755f70bf631223b9af" translate="yes" xml:space="preserve">
          <source>Qt supports most languages in use today, in particular:</source>
          <target state="translated">Qt は特に今日使われているほとんどの言語をサポートしています。</target>
        </trans-unit>
        <trans-unit id="64fdcd7b767207e01067845ad3146d1019367518" translate="yes" xml:space="preserve">
          <source>Qt supports most of the more frequently used encodings natively. For a complete list of supported encodings see the &lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; documentation.</source>
          <target state="translated">Qtは、頻繁に使用されるエンコーディングのほとんどをネイティブでサポートしています。サポートされるエンコーディングの完全なリストについては、&lt;a href=&quot;qtextcodec&quot;&gt;QTextCodecの&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="60739b6dcf22af03385aa4d997fe3aefeff36e6b" translate="yes" xml:space="preserve">
          <source>Qt supports rendering text in most languages written in the world. The detailed list of supported writing systems depends a bit on operating system support and font availability on the target system.</source>
          <target state="translated">Qt は世界中で書かれているほとんどの言語でのテキストのレンダリングをサポートしています。サポートされているライティングシステムの詳細なリストは、サポートされているオペレーティングシステムや、ターゲットシステムで利用できるフォントによって多少異なります。</target>
        </trans-unit>
        <trans-unit id="8a4192693596c77ed160fe8cd68868324e96e9fe" translate="yes" xml:space="preserve">
          <source>Qt supports the &lt;a href=&quot;http://www.w3.org/Graphics/SVG/feature/1.2/#SVG-static&quot;&gt;static features&lt;/a&gt; of &lt;a href=&quot;http://www.w3.org/TR/SVGMobile12&quot;&gt;SVG 1.2 Tiny&lt;/a&gt;. ECMA scripts and DOM manipulation are currently not supported.</source>
          <target state="translated">Qt は&lt;a href=&quot;http://www.w3.org/TR/SVGMobile12&quot;&gt;SVG 1.2 Tinyの&lt;/a&gt;&lt;a href=&quot;http://www.w3.org/Graphics/SVG/feature/1.2/#SVG-static&quot;&gt;静的機能&lt;/a&gt;をサポートしています。ECMAスクリプトとDOM操作は現在サポートされていません。</target>
        </trans-unit>
        <trans-unit id="29cb16da3bb91a5d46913d7fe6bddb4b10c2b9df" translate="yes" xml:space="preserve">
          <source>Qt supports these signal-slot connection types:</source>
          <target state="translated">Qt は以下のシグナルスロット接続タイプをサポートしています。</target>
        </trans-unit>
        <trans-unit id="d3326e9daf4456edfb106023867028e554d2b361" translate="yes" xml:space="preserve">
          <source>Qt tries to make internationalization as painless as possible for developers. All input controls and text drawing methods in Qt offer built-in support for all supported languages. The built-in font engine is capable of correctly and attractively rendering text that contains characters from a variety of different writing systems at the same time.</source>
          <target state="translated">Qt は開発者にとって可能な限り苦痛のない国際化を目指しています。Qt のすべての入力コントロールとテキスト描画メソッドは、サポートされているすべての言語をビルトインでサポートしています。内蔵されているフォントエンジンは、様々な異なる筆記体の文字を含むテキストを同時に正確かつ魅力的に描画することができます。</target>
        </trans-unit>
        <trans-unit id="8214ceaf5e24c79804af013cf25938bfa9a057c3" translate="yes" xml:space="preserve">
          <source>Qt tries to take care of all the special features listed above. You usually don't have to worry about these features so long as you use Qt's input controls (e.g. &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;, &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt;, and derived classes or the Quick &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt; item) and Qt's display controls (e.g. &lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt; and Qt Quick's Text item).</source>
          <target state="translated">Qtは上記のすべての特別な機能を処理しようとします。Qtの入力コントロール（例：&lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;、&lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt;、および派生クラスまたはQuick &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt;アイテム）とQtの表示コントロール（例：&lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt;およびQt Quickのテキストアイテム）を使用している限り、通常これらの機能について心配する必要はありません。</target>
        </trans-unit>
        <trans-unit id="713d8283f6fbabc1e77a9a9a0e7a08062601486b" translate="yes" xml:space="preserve">
          <source>Qt type</source>
          <target state="translated">Qt型</target>
        </trans-unit>
        <trans-unit id="fb06adec99d1dcc4b5b845f7e86f105b0ab99ac5" translate="yes" xml:space="preserve">
          <source>Qt uses &quot;/&quot; as a universal directory separator in the same way that &quot;/&quot; is used as a path separator in URLs. If you always use &quot;/&quot; as a directory separator, Qt will translate your paths to conform to the underlying operating system.</source>
          <target state="translated">Qt では、URL のパスセパレータとして &quot;/&quot; が使われているのと同じように、ユニバーサルなディレクトリセパレータとして &quot;/&quot; が使われています。もし常に &quot;/&quot; をディレクトリ区切り文字として使用している場合、Qt はあなたのパスをオペレーティングシステムに適合するように翻訳します。</target>
        </trans-unit>
        <trans-unit id="cdd9bbaadc1973cb40e4ea49cdf7b9307de862b0" translate="yes" xml:space="preserve">
          <source>Qt uses &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt; to provide type safety. For example, the &lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt::Alignment&lt;/a&gt; type is simply a typedef for &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt::AlignmentFlag&lt;/a&gt;&amp;gt;. &lt;a href=&quot;qlabel#alignment-prop&quot;&gt;QLabel::setAlignment&lt;/a&gt;() takes a &lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt::Alignment&lt;/a&gt; parameter, which means that any combination of &lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt::AlignmentFlag&lt;/a&gt; values, or 0, is legal:</source>
          <target state="translated">Qtは&lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;を使用してタイプセーフを提供します。たとえば、&lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt :: Alignment&lt;/a&gt;型は&lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt; &amp;lt; &lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt :: AlignmentFlag&lt;/a&gt; &amp;gt;のtypedefです。&lt;a href=&quot;qlabel#alignment-prop&quot;&gt;QLabel :: setAlignment&lt;/a&gt;（）は&lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt :: Alignment&lt;/a&gt;パラメータを取ります。つまり、&lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt :: AlignmentFlag&lt;/a&gt;値の任意の組み合わせ、または0は有効です。</target>
        </trans-unit>
        <trans-unit id="d9e404a81cc00854c393b79b4adc3478ffd56a6e" translate="yes" xml:space="preserve">
          <source>Qt uses &lt;a href=&quot;qgraphicslayoutitem&quot;&gt;QGraphicsLayoutItem&lt;/a&gt; to provide layout functionality in the &lt;a href=&quot;graphicsview#&quot;&gt;Graphics View Framework&lt;/a&gt;, but in the future its use may spread throughout Qt itself.</source>
          <target state="translated">Qtは&lt;a href=&quot;qgraphicslayoutitem&quot;&gt;QGraphicsLayoutItem&lt;/a&gt;を使用して&lt;a href=&quot;graphicsview#&quot;&gt;Graphics View Framework&lt;/a&gt;にレイアウト機能を提供しますが、将来的にはその使用がQt自体に広がる可能性があります。</target>
        </trans-unit>
        <trans-unit id="0673bc496c928ba0690c7a710bfcc033a15493e8" translate="yes" xml:space="preserve">
          <source>Qt uses &lt;a href=&quot;qimageiohandler&quot;&gt;QImageIOHandler&lt;/a&gt; for reading and writing images through &lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt; and &lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt;. You can also derive from this class to write your own image format handler using Qt's plugin mechanism.</source>
          <target state="translated">Qtは使用しています&lt;a href=&quot;qimageiohandler&quot;&gt;QImageIOHandlerを&lt;/a&gt;通過画像を読み書きするため&lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt;と&lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt;。このクラスから派生して、Qtのプラグインメカニズムを使用して独自の画像フォーマットハンドラーを作成することもできます。</target>
        </trans-unit>
        <trans-unit id="385707ff1df226f0827b7d4c53ce2c6d37e5529b" translate="yes" xml:space="preserve">
          <source>Qt uses QDoc to generate its documentation set into HTML and DITA XML formats. QDoc uses a set of configuration files to generate documentation from QDoc comments. The comments have types called &lt;a href=&quot;qdoc-guide-writing#writing-topic-commands&quot;&gt;topics&lt;/a&gt; that determine whether a comment is a class documentation or a property documentation. A comment may also have &lt;a href=&quot;qdoc-guide-writing#writing-markup&quot;&gt;mark up&lt;/a&gt; to enhance the layout and formatting of the final output.</source>
          <target state="translated">QtはQDocを使用して、ドキュメントセットをHTMLおよびDITA XML形式に生成します。QDocは一連の構成ファイルを使用して、QDocコメントからドキュメントを生成します。コメントには、コメントがクラスドキュメントかプロパティドキュメントかを決定する&lt;a href=&quot;qdoc-guide-writing#writing-topic-commands&quot;&gt;トピック&lt;/a&gt;と呼ばれるタイプがあります。コメントには、最終出力のレイアウトとフォーマットを強化するための&lt;a href=&quot;qdoc-guide-writing#writing-markup&quot;&gt;マークアップ&lt;/a&gt;も含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="17455e07513963dcf36337558f342cd9a6f00ead" translate="yes" xml:space="preserve">
          <source>Qt uses Unicode to store, draw and manipulate strings. In many situations you may wish to deal with data that uses a different encoding. For example, most Japanese documents are still stored in Shift-JIS or ISO 2022-JP, while Russian users often have their documents in KOI8-R or Windows-1251.</source>
          <target state="translated">Qt は文字列の保存、描画、操作に Unicode を使用しています。多くの場合、異なるエンコーディングを使用しているデータを扱いたいと思うかもしれません。例えば、ほとんどの日本語の文書は Shift-JIS や ISO 2022-JP で保存されていますが、ロシアのユーザは KOI8-R や Windows-1251 で保存されていることが多いです。</target>
        </trans-unit>
        <trans-unit id="95d84a766fbfafee8d3c00b237cd672614b21831" translate="yes" xml:space="preserve">
          <source>Qt uses a very similar mechanism in its &lt;a href=&quot;plugins-howto&quot;&gt;Plugin system&lt;/a&gt;: Base classes in C++ are associated with a unique identifier by way of the &lt;a href=&quot;#Q_DECLARE_INTERFACE&quot;&gt;Q_DECLARE_INTERFACE&lt;/a&gt;() macro.</source>
          <target state="translated">Qtは、&lt;a href=&quot;plugins-howto&quot;&gt;プラグインシステム&lt;/a&gt;で非常によく似たメカニズムを使用します。C++の基本クラスは、&lt;a href=&quot;#Q_DECLARE_INTERFACE&quot;&gt;Q_DECLARE_INTERFACE&lt;/a&gt;（）マクロによって一意の識別子に関連付けられます。</target>
        </trans-unit>
        <trans-unit id="4d182ec0775ec5f7b131929e82565781a6a85d9c" translate="yes" xml:space="preserve">
          <source>Qt uses a weighting scale from 0 to 99 similar to, but not the same as, the scales used in Windows or CSS. A weight of 0 will be thin, whilst 99 will be extremely black.</source>
          <target state="translated">Qtでは、WindowsやCSSで使われている体重計に似ていますが、同じではありません。0の重さは薄く、99の重さは非常に黒くなります。</target>
        </trans-unit>
        <trans-unit id="e22151cab96c6fb03668126e4dc2c009e1856c07" translate="yes" xml:space="preserve">
          <source>Qt uses normalized signatures to decide whether two given signals and slots are compatible. Normalization reduces whitespace to a minimum, moves 'const' to the front where appropriate, removes 'const' from value types and replaces const references with values.</source>
          <target state="translated">Qt は、与えられた 2 つのシグナルとスロットが互換性があるかどうかを判断するために、正規化されたシグネチャを使用します。正規化はホワイトスペースを最小限に抑え、必要に応じて 'const' を前に移動させ、値型から 'const' を削除し、const 参照を値に置き換えます。</target>
        </trans-unit>
        <trans-unit id="dcf1f67e0413144a44d6bed3dcdd8706cfdd6728" translate="yes" xml:space="preserve">
          <source>Qt uses the &lt;a href=&quot;http://freetype.sourceforge.net/freetype2/index.html&quot;&gt;FreeType 2&lt;/a&gt; font engine to produce font output. The formats supported depends on the locally installed version of the &lt;a href=&quot;#freetype&quot;&gt;FreeType&lt;/a&gt; library. When using QBasicFontDatabase, Qt also supports the Qt Prerendered Font format (&lt;a href=&quot;#qpf2&quot;&gt;QPF2&lt;/a&gt;), a light-weight non-scalable font formats. QPF2 is the native format of Qt for Embedded Linux 4.x.</source>
          <target state="translated">Qtは&lt;a href=&quot;http://freetype.sourceforge.net/freetype2/index.html&quot;&gt;FreeType 2&lt;/a&gt;フォントエンジンを使用してフォント出力を生成します。サポートされている形式は、ローカルにインストールされている&lt;a href=&quot;#freetype&quot;&gt;FreeType&lt;/a&gt;ライブラリのバージョンによって異なります。QBasicFontDatabaseを使用する場合、Qtは軽量でスケーラブルでないフォント形式であるQt Prerendered Font形式（&lt;a href=&quot;#qpf2&quot;&gt;QPF2&lt;/a&gt;）もサポートします。QPF2は、Qt for Embedded Linux 4.xのネイティブフォーマットです。</target>
        </trans-unit>
        <trans-unit id="8b67b1607c17f682988ebdade1626e480e551049" translate="yes" xml:space="preserve">
          <source>Qt uses the default debug key to sign your application to enable running the application on a device. Same key cannot be used to sign the Application Package (APK) that is meant to be published on Google Play.</source>
          <target state="translated">Qt は、デバイス上でアプリケーションを実行できるようにするために、デフォルトのデバッグキーを使用してアプリケーションに署名します。Google Playで公開されているアプリケーションパッケージ(APK)に署名するために同じキーを使用することはできません。</target>
        </trans-unit>
        <trans-unit id="8b9eec78abd8862875d2ed50d945976055a1fe54" translate="yes" xml:space="preserve">
          <source>Qt uses this search path to locate files with a known prefix. The search path entries are tested in order, starting with the first entry.</source>
          <target state="translated">Qt はこの検索パスを使って、既知のプレフィックスを持つファイルを探します。検索パスのエントリは、最初のエントリから順にテストされます。</target>
        </trans-unit>
        <trans-unit id="205346a5ff72861212644e89e94d2307cd7f66b7" translate="yes" xml:space="preserve">
          <source>Qt uses this value internally, e.g. in &lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog&lt;/a&gt;.</source>
          <target state="translated">Qtはこの値を内部で使用します（例：&lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e8ee65f024570e892a500bcb148a221449d63286" translate="yes" xml:space="preserve">
          <source>Qt vs. .NET</source>
          <target state="translated">Qt と .NET の比較</target>
        </trans-unit>
        <trans-unit id="61e31259f4a662d7a8ec782037b779096effb27f" translate="yes" xml:space="preserve">
          <source>Qt will detect OpenGL support as OpenGL ES. In reality the browser will be providing WebGL. WebGL is based on ES and is very similar, but there are some incompatibilities. See WebGL and OpenGL Differences.</source>
          <target state="translated">QtはOpenGLサポートをOpenGL ESとして検出します。実際にはブラウザはWebGLを提供しています。WebGLはESをベースにしており、非常に似ていますが、いくつかの非互換性があります。WebGLとOpenGLの違いを参照してください。</target>
        </trans-unit>
        <trans-unit id="3995e0e173846b75e91a8872c01da00e3be0b278" translate="yes" xml:space="preserve">
          <source>Qt will try to detect the class of a type using std::is_trivial or std::is_trivially_copyable. Use this macro to tune the behavior. For instance many types would be candidates for Q_MOVABLE_TYPE despite not being trivially-copyable. For binary compatibility reasons, &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; optimizations are only enabled if there is an explicit Q_DECLARE_TYPEINFO even for trivially-copyable types.</source>
          <target state="translated">Qtはstd :: is_trivialまたはstd :: is_trivially_copyableを使用して型のクラスを検出しようとします。このマクロを使用して、動作を調整します。たとえば、ささいにコピーできないにもかかわらず、多くのタイプがQ_MOVABLE_TYPEの候補になります。バイナリ互換性の理由から、&lt;a href=&quot;qlist&quot;&gt;QListの&lt;/a&gt;最適化は、自明にコピーできる型であっても、明示的なQ_DECLARE_TYPEINFOがある場合にのみ有効になります。</target>
        </trans-unit>
        <trans-unit id="7aa08a496a821b0d8d3ad367bb7aa6212f91f510" translate="yes" xml:space="preserve">
          <source>Qt!</source>
          <target state="translated">Qt!</target>
        </trans-unit>
        <trans-unit id="eaa9340bf303dcf8db3c2162f1e21e8d480d93d3" translate="yes" xml:space="preserve">
          <source>Qt's &lt;a href=&quot;eventsandfilters&quot;&gt;event system&lt;/a&gt; is very useful for inter-thread communication. Every thread may have its own event loop. To call a slot (or any &lt;a href=&quot;qobject#Q_INVOKABLE&quot;&gt;invokable&lt;/a&gt; method) in another thread, place that call in the target thread's event loop. This lets the target thread finish its current task before the slot starts running, while the original thread continues running in parallel.</source>
          <target state="translated">Qtの&lt;a href=&quot;eventsandfilters&quot;&gt;イベントシステム&lt;/a&gt;は、スレッド間通信に非常に役立ちます。すべてのスレッドが独自のイベントループを持つ場合があります。別のスレッドでスロット（または&lt;a href=&quot;qobject#Q_INVOKABLE&quot;&gt;呼び出し可能な&lt;/a&gt;メソッド）を呼び出すには、その呼び出しをターゲットスレッドのイベントループに配置します。これにより、スロットが実行を開始する前にターゲットスレッドが現在のタスクを終了し、元のスレッドは並行して実行を継続できます。</target>
        </trans-unit>
        <trans-unit id="d6db67f9b053e72f04155113d6a7e388f2e0cb98" translate="yes" xml:space="preserve">
          <source>Qt's &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; for example has its accessibility support implemented in QAccessibleLineEdit.</source>
          <target state="translated">たとえば、Qtの&lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;には、QAccessibleLineEditに実装されたアクセシビリティサポートがあります。</target>
        </trans-unit>
        <trans-unit id="cb29b86de2cf66dc954e71cf9cce64208d7c634d" translate="yes" xml:space="preserve">
          <source>Qt's &lt;code&gt;moc&lt;/code&gt; (Meta Object Compiler) provides a clean way to go beyond the compiled language's facilities. It does so by generating additional C++ code which can be compiled by any standard C++ compiler. The &lt;code&gt;moc&lt;/code&gt; reads C++ source files. If it finds one or more class declarations that contain the &lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT&lt;/a&gt; macro, it produces another C++ source file which contains the meta object code for those classes. The C++ source file generated by the &lt;code&gt;moc&lt;/code&gt; must be compiled and linked with the implementation of the class (or it can be &lt;code&gt;#included&lt;/code&gt; into the class's source file). Typically &lt;code&gt;moc&lt;/code&gt; is not called manually, but automatically by the build system, so it requires no additional effort by the programmer.</source>
          <target state="translated">Qtの &lt;code&gt;moc&lt;/code&gt; （Meta Object Compiler）は、コンパイルされた言語の機能を超えるクリーンな方法を提供します。これは、標準のC ++コンパイラーでコンパイルできる追加のC ++コードを生成することによって行われます。 &lt;code&gt;moc&lt;/code&gt; C ++のソースファイルを読み込みます。&lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT&lt;/a&gt;マクロを含む1つ以上のクラス宣言が見つかると、それらのクラスのメタオブジェクトコードを含む別のC ++ソースファイルが作成されます。 &lt;code&gt;moc&lt;/code&gt; によって生成されたC ++ソースファイルは、コンパイルしてクラスの実装にリンクする必要があります（または、クラスのソースファイルに &lt;code&gt;#included&lt;/code&gt; することができます）。通常、 &lt;code&gt;moc&lt;/code&gt; は手動では呼び出されませんが、ビルドシステムによって自動的に呼び出されるため、プログラマーによる追加の作業は必要ありません。</target>
        </trans-unit>
        <trans-unit id="3d2da0ef5886eb9137f41cda66663641e7b71150" translate="yes" xml:space="preserve">
          <source>Qt's ActiveX and COM support allows Qt for Windows developers to:</source>
          <target state="translated">Qt の ActiveX と COM のサポートにより、Qt for Windows の開発者は以下のようなことが可能になります。</target>
        </trans-unit>
        <trans-unit id="76e1344868dac3d009da6e86641e4fc8678d1ccb" translate="yes" xml:space="preserve">
          <source>Qt's Classes for Network Programming</source>
          <target state="translated">ネットワークプログラミングのためのQtのクラス</target>
        </trans-unit>
        <trans-unit id="ef72728f4f372a24da616b9840a92cc69d8ecd93" translate="yes" xml:space="preserve">
          <source>Qt's Classes for Working with Strings</source>
          <target state="translated">弦楽器を扱うための Qt のクラス</target>
        </trans-unit>
        <trans-unit id="2f19f2184b31bd68954b02b559731228f2c150bd" translate="yes" xml:space="preserve">
          <source>Qt's Layout Classes</source>
          <target state="translated">Qt のレイアウトクラス</target>
        </trans-unit>
        <trans-unit id="d70dc7198a10174bcf62b84cce23378b42f32f4d" translate="yes" xml:space="preserve">
          <source>Qt's Undo Framework is an implementation of the Command pattern, for implementing undo/redo functionality in applications.</source>
          <target state="translated">QtのUndoフレームワークは、アプリケーションにUndo/Redo機能を実装するためのCommandパターンの実装です。</target>
        </trans-unit>
        <trans-unit id="d87d7664b24c34ff3d3779cd07c2593f1b647c90" translate="yes" xml:space="preserve">
          <source>Qt's built-in widgets use &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; to perform nearly all of their drawing, ensuring that they look exactly like the equivalent native widgets. The diagram below shows a &lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt; in nine different styles.</source>
          <target state="translated">Qtの組み込みウィジェットは、&lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;を使用してほぼすべての描画を実行し、同等のネイティブウィジェットのように見えるようにします。以下の図は、9つの異なるスタイルの&lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt;を示しています。</target>
        </trans-unit>
        <trans-unit id="8e8595fd8d8b08c1830343a0bda53fc292f43841" translate="yes" xml:space="preserve">
          <source>Qt's built-in widgets use the &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; class to perform nearly all of their drawing. &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; is an abstract base class that encapsulates the look and feel of a GUI, and can be used to make the widgets look exactly like the equivalent native widgets or to give the widgets a custom look.</source>
          <target state="translated">Qtの組み込みウィジェットは、&lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;クラスを使用して、ほぼすべての描画を実行します。&lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;は、GUIのルックアンドフィールをカプセル化する抽象基本クラスであり、ウィジェットを同等のネイティブウィジェットとまったく同じように見せる、またはウィジェットにカスタムの外観を与えるために使用できます。</target>
        </trans-unit>
        <trans-unit id="2697b0d5b77491d7f322a4c27ce463c64e58471b" translate="yes" xml:space="preserve">
          <source>Qt's containers provide operator&amp;lt;&amp;lt;() and operator&amp;gt;&amp;gt;() so that they can easily be read and written using a &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;. This means that the data types stored in the container must also support operator&amp;lt;&amp;lt;() and operator&amp;gt;&amp;gt;(). Providing such support is straightforward; here's how we could do it for the Movie struct above:</source>
          <target state="translated">Qtのコンテナーはoperator &amp;lt;&amp;lt;（）とoperator &amp;gt;&amp;gt;（）を提供するため、&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;を使用して簡単に読み書きできます。つまり、コンテナに格納されるデータ型は、operator &amp;lt;&amp;lt;（）およびoperator &amp;gt;&amp;gt;（）もサポートする必要があります。このようなサポートの提供は簡単です。上記のMovie構造体で実行できる方法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="0992b5e1ee592eba5e5c89084c8a1058587a2ea8" translate="yes" xml:space="preserve">
          <source>Qt's drag and drop and clipboard facilities use the MIME standard. On X11, this maps trivially to the Xdnd protocol. On Mac, although some applications use MIME to describe clipboard contents, it is more common to use Apple's UTI format.</source>
          <target state="translated">Qt のドラッグ&amp;ドロップやクリップボード機能は MIME 標準を使用しています。X11 では、これは Xdnd プロトコルに対応しています。Mac では、クリップボードの内容を記述するのに MIME を使うアプリケーションもありますが、Apple の UTI フォーマットを使うのが一般的です。</target>
        </trans-unit>
        <trans-unit id="bc1c32330f709fde1008722ba874f868da072429" translate="yes" xml:space="preserve">
          <source>Qt's drag and drop infrastructure is fully supported by the model/view framework. Items in lists, tables, and trees can be dragged within the views, and data can be imported and exported as MIME-encoded data.</source>
          <target state="translated">Qt のドラッグ アンド ドロップ インフラストラクチャは、モデル/ビュー フレームワークで完全にサポートされています。リスト、テーブル、ツリーのアイテムをビュー内でドラッグしたり、データを MIME エンコードされたデータとしてインポートしたりエクスポートしたりすることができます。</target>
        </trans-unit>
        <trans-unit id="d2356ba7af800ce59bbb9ba17630261bc88092a4" translate="yes" xml:space="preserve">
          <source>Qt's drag-and-drop and clipboard facilities use the MIME standard. On X11, this maps trivially to the Xdnd protocol, but on Windows although some applications use MIME types to describe clipboard formats, others use arbitrary non-standardized naming conventions, or unnamed built-in formats of Windows.</source>
          <target state="translated">Qt のドラッグアンドドロップとクリップボード機能は MIME 標準を使用しています。X11 では、これは Xdnd プロトコルに対応していますが、Windows では、いくつかのアプリケーションがクリップボードのフォーマットを記述するために MIME タイプを使用していますが、他のアプリケーションは任意の非標準化された命名規則や Windows の名前の付いていない組み込みフォーマットを使用しています。</target>
        </trans-unit>
        <trans-unit id="b120bf3c0b00da44fc929c91e68689e3679f5552" translate="yes" xml:space="preserve">
          <source>Qt's event dispatcher is more flexible than what Cocoa offers, and lets the user spin the event dispatcher (and running &lt;a href=&quot;qeventloop#exec&quot;&gt;QEventLoop::exec&lt;/a&gt;) without having to think about whether or not modal dialogs are showing on screen (which is a difference compared to Cocoa). Therefore, we need to do extra management in Qt to handle this correctly, which unfortunately makes mixing native panels hard. The best way at the moment to do this, is to follow the pattern below, where we post the call to the function with native code rather than calling it directly. Then we know that Qt has cleanly updated any pending event loop recursions before the native panel is shown:</source>
          <target state="translated">Qtのイベントディスパッチャーは、Cocoaが提供するものよりも柔軟性が高く、ユーザーがモーダルダイアログが画面に表示されているかどうかを気にすることなく、イベントディスパッチャーをスピン（および&lt;a href=&quot;qeventloop#exec&quot;&gt;QEventLoop :: exec&lt;/a&gt;を実行）できます（Cocoaとの違いです）。 。したがって、これを正しく処理するには、Qtで追加の管理を行う必要があります。これにより、残念ながらネイティブパネルの混合が困難になります。現時点でこれを行う最善の方法は、以下のパターンに従うことです。この場合、関数を直接呼び出すのではなく、ネイティブコードを使用して関数の呼び出しをポストします。次に、ネイティブパネルが表示される前に、Qtが保留中のイベントループの再帰を完全に更新したことがわかります。</target>
        </trans-unit>
        <trans-unit id="e194f8f280103eec952327444862c7223d5c75d4" translate="yes" xml:space="preserve">
          <source>Qt's iOS port allows you to run Qt applications on iOS devices, such as iPhones, iPads, and iPod Touches.</source>
          <target state="translated">QtのiOSポートでは、iPhone、iPad、iPod TouchなどのiOSデバイスでQtアプリケーションを実行することができます。</target>
        </trans-unit>
        <trans-unit id="793b80120e8a576b5408b6900f55af73ad70f543" translate="yes" xml:space="preserve">
          <source>Qt's layout classes were designed for hand-written C++ code, allowing measurements to be specified in pixels for simplicity, so they are easy to understand and use. The code generated for forms created using Qt Designer also uses the layout classes. Qt Designer is useful to use when experimenting with the design of a form since it avoids the compile, link and run cycle usually involved in user interface development.</source>
          <target state="translated">Qt のレイアウトクラスは、手書きの C++コード用に設計されており、シンプルにするために測定値をピクセル単位で指定できるようになっているため、理解しやすく使いやすいものとなっています。Qt Designerを使って作成されたフォームに生成されるコードもレイアウトクラスを使用しています。Qt Designer は、ユーザーインターフェイス開発で通常行われるコンパイル、リンク、実行のサイクルを回避することができるので、フォームのデザインを試す際に便利です。</target>
        </trans-unit>
        <trans-unit id="961a51a26760dd1c56da4d73881ccaab7b38447b" translate="yes" xml:space="preserve">
          <source>Qt's layouts help when you:</source>
          <target state="translated">Qtのレイアウトは、以下のようなときに役立ちます。</target>
        </trans-unit>
        <trans-unit id="ef8f4cbf718cbd68d6bb54213fa9367ee458a603" translate="yes" xml:space="preserve">
          <source>Qt's main event loop (&lt;a href=&quot;qcoreapplication#exec&quot;&gt;QCoreApplication::exec&lt;/a&gt;()) fetches native window system events from the event queue, translates them into QEvents, and sends the translated events to &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;s.</source>
          <target state="translated">Qtのメインイベントループ（&lt;a href=&quot;qcoreapplication#exec&quot;&gt;QCoreApplication :: exec&lt;/a&gt;（））は、ネイティブウィンドウシステムイベントをイベントキューからフェッチし、それらをQEventsに変換し、変換されたイベントを&lt;a href=&quot;qobject&quot;&gt;QObjectに&lt;/a&gt;送信します。</target>
        </trans-unit>
        <trans-unit id="1ed55ff21e1c72a49b31271ceec357514c193ccb" translate="yes" xml:space="preserve">
          <source>Qt's meta-object system provides a mechanism to automatically connect signals and slots between &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclasses and their children. As long as objects are defined with suitable object names, and slots follow a simple naming convention, this connection can be performed at run-time by the &lt;a href=&quot;qmetaobject#connectSlotsByName&quot;&gt;QMetaObject::connectSlotsByName&lt;/a&gt;() function.</source>
          <target state="translated">Qtのメタオブジェクトシステムは、&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;サブクラスとその子の間で信号とスロットを自動的に接続するメカニズムを提供します。オブジェクトが適切なオブジェクト名で定義されていて、スロットが単純な命名規則に従っている限り、この接続は&lt;a href=&quot;qmetaobject#connectSlotsByName&quot;&gt;QMetaObject :: connectSlotsByName&lt;/a&gt;（）関数によって実行時に実行できます。</target>
        </trans-unit>
        <trans-unit id="e33ed7fba9835cd7763f45a5df63d59398f39a4a" translate="yes" xml:space="preserve">
          <source>Qt's meta-object system provides the signals and slots mechanism for inter-object communication, run-time type information, and the dynamic property system.</source>
          <target state="translated">Qtのメタオブジェクトシステムは、オブジェクト間通信のためのシグナルとスロットの仕組み、ランタイム型情報、動的なプロパティシステムを提供します。</target>
        </trans-unit>
        <trans-unit id="066f5762433c2ce151d99a962d4a54ca9f2792d1" translate="yes" xml:space="preserve">
          <source>Qt's paint system enables painting on screen and print devices using the same API, and is primarily based on the &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;, &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt;, and &lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt; classes.</source>
          <target state="translated">Qtの塗料系は、同じAPIを使用して、画面と印刷デバイスにペイント可能となり、主に基づいている&lt;a href=&quot;qpainter&quot;&gt;QPainterの&lt;/a&gt;、&lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt;、および&lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngineの&lt;/a&gt;クラス。</target>
        </trans-unit>
        <trans-unit id="0af9320a44a727b062cd04a0138ef4e0ace06e61" translate="yes" xml:space="preserve">
          <source>Qt's plugin mechanism can also be used to write a custom image format handler. This is done by deriving from the &lt;a href=&quot;qimageiohandler&quot;&gt;QImageIOHandler&lt;/a&gt; class, and creating a &lt;a href=&quot;qimageioplugin&quot;&gt;QImageIOPlugin&lt;/a&gt; object which is a factory for creating &lt;a href=&quot;qimageiohandler&quot;&gt;QImageIOHandler&lt;/a&gt; objects. When the plugin is installed, &lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt; and &lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt; will automatically load the plugin and start using it.</source>
          <target state="translated">Qtのプラグインメカニズムを使用して、カスタム画像フォーマットハンドラーを作成することもできます。これは、から派生することによって行われる&lt;a href=&quot;qimageiohandler&quot;&gt;QImageIOHandlerの&lt;/a&gt;クラス、および作成&lt;a href=&quot;qimageioplugin&quot;&gt;QImageIOPluginを&lt;/a&gt;作成するためのファクトリであるオブジェクト&lt;a href=&quot;qimageiohandler&quot;&gt;QImageIOHandlerの&lt;/a&gt;オブジェクトを。プラグインがインストールされると、&lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt;と&lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt;は自動的にプラグインをロードして使用を開始します。</target>
        </trans-unit>
        <trans-unit id="b6c9ad079a49ccc55a3c403610548da23c6fe3dc" translate="yes" xml:space="preserve">
          <source>Qt's predefined &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; objects:</source>
          <target state="translated">Qtの定義済み&lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt;オブジェクト：</target>
        </trans-unit>
        <trans-unit id="7002687ba82463a9c07a7d2e5ce763ea658a9d39" translate="yes" xml:space="preserve">
          <source>Qt's resources support the concept of a search path list. If you then refer to a resource with &lt;code&gt;:&lt;/code&gt; instead of &lt;code&gt;:/&lt;/code&gt; as the prefix, the resource will be looked up using the search path list. The search path list is empty at startup; call &lt;a href=&quot;qdir#addSearchPath&quot;&gt;QDir::addSearchPath&lt;/a&gt;() to add paths to it.</source>
          <target state="translated">Qtのリソースは、検索パスリストの概念をサポートしています。次に、接頭辞として &lt;code&gt;:/&lt;/code&gt; ではなく &lt;code&gt;:&lt;/code&gt; を使用してリソースを参照すると、リソースは検索パスリストを使用して検索されます。起動時に検索パスリストは空です。&lt;a href=&quot;qdir#addSearchPath&quot;&gt;QDir :: addSearchPath&lt;/a&gt;（）を呼び出して、パスを追加します。</target>
        </trans-unit>
        <trans-unit id="7b40b428c6ab76a6fa4418d94293c6e96b0583e0" translate="yes" xml:space="preserve">
          <source>Qt's signals and slots implementation is not as fast as a template-based solution. While emitting a signal is approximately the cost of four ordinary function calls with common template implementations, Qt requires effort comparable to about ten function calls. This is not surprising since the Qt mechanism includes a generic marshaller, introspection, queued calls between different threads, and ultimately scriptability. It does not rely on excessive inlining and code expansion and it provides unmatched runtime safety. Qt's iterators are safe while those of faster template-based systems are not. Even during the process of emitting a signal to several receivers, those receivers can be deleted safely without your program crashing. Without this safety, your application would eventually crash with a difficult to debug free'd memory read or write error.</source>
          <target state="translated">Qtのシグナルとスロットの実装は、テンプレートベースのソリューションほど高速ではありません。一般的なテンプレート実装では、シグナルを出すのは 4 回の通常の関数呼び出しに匹敵するコストですが、Qt では約 10 回の関数呼び出しに匹敵する労力を必要とします。Qt のメカニズムには、一般的なマーシャラー、イントロスペクション、異なるスレッド間のキュー呼び出し、そして最終的にはスクリプト化が含まれているので、これは驚くべきことではありません。Qt のメカニズムは過度なインライン化やコードの拡張に依存せず、比類のないランタイムの安全性を提供します。Qt のイテレータは安全ですが、より高速なテンプレートベースのシステムでは安全ではありません。複数の受信機にシグナルを発信している間であっても、プログラムがクラッシュすることなく安全に受信機を削除することができます。この安全性がなければ、アプリケーションは最終的にデバッグが困難な free'd メモリの読み書きエラーでクラッシュしてしまいます。</target>
        </trans-unit>
        <trans-unit id="09b7da54c67758cc2c3ed450d617add1ecff54ce" translate="yes" xml:space="preserve">
          <source>Qt's support</source>
          <target state="translated">Qtのサポート</target>
        </trans-unit>
        <trans-unit id="1d642fc0e51e3a0e4a099aa095679c2fa9e96574" translate="yes" xml:space="preserve">
          <source>Qt's support for different Linux platforms is extensive and mature.</source>
          <target state="translated">Qt はさまざまな Linux プラットフォームを幅広くサポートしており、成熟しています。</target>
        </trans-unit>
        <trans-unit id="a1d559e77ff38895dbf21ce810e9bd109786b207" translate="yes" xml:space="preserve">
          <source>Qt's support for different Windows platforms is extensive and mature.</source>
          <target state="translated">Qt のさまざまな Windows プラットフォームへのサポートは幅広く、成熟しています。</target>
        </trans-unit>
        <trans-unit id="85929a5b14edcaa43d9dced0b75780e0acccfe55" translate="yes" xml:space="preserve">
          <source>Qt's support for widget styles and themes enables your application to fit in with the native desktop environment.</source>
          <target state="translated">Qt のウィジェットスタイルとテーマのサポートにより、アプリケーションをネイティブのデスクトップ環境に適合させることができます。</target>
        </trans-unit>
        <trans-unit id="79c6a6dfc9fd57126e6a8e26b182bad3e51288cb" translate="yes" xml:space="preserve">
          <source>Qt's text widgets are able to display rich text, specified using a subset of &lt;a href=&quot;http://www.w3.org/TR/html401/&quot;&gt;HTML 4&lt;/a&gt; markup. Widgets that use &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt;, such as &lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt; and &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt;, are able to display rich text specified in this way.</source>
          <target state="translated">Qtのテキストウィジェットは、&lt;a href=&quot;http://www.w3.org/TR/html401/&quot;&gt;HTML 4&lt;/a&gt;マークアップのサブセットを使用して指定されたリッチテキストを表示できます。&lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt;や&lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt;などの&lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt;を使用するウィジェットは、この方法で指定されたリッチテキストを表示できます。</target>
        </trans-unit>
        <trans-unit id="4b3e9b667c11962b42975371217b82f5ddc80e73" translate="yes" xml:space="preserve">
          <source>Qt's understanding of file permissions is limited, which affects especially the &lt;a href=&quot;qfile#setPermissions&quot;&gt;QFile::setPermissions&lt;/a&gt;() function. On Windows, Qt will set only the legacy read-only flag, and that only when none of the Write* flags are passed. Qt does not manipulate access control lists (ACLs), which makes this function mostly useless for NTFS volumes. It may still be of use for USB sticks that use VFAT file systems. POSIX ACLs are not manipulated, either.</source>
          <target state="translated">Qtのファイル権限の理解は制限されており、特に&lt;a href=&quot;qfile#setPermissions&quot;&gt;QFile :: setPermissions&lt;/a&gt;（）関数に影響します。Windowsでは、Qtはレガシーの読み取り専用フラグのみを設定し、Write *フラグが渡されない場合にのみ設定します。Qtはアクセス制御リスト（ACL）を操作しないため、この機能はNTFSボリュームではほとんど役に立ちません。VFATファイルシステムを使用するUSB​​スティックには引き続き使用できます。POSIX ACLも操作されません。</target>
        </trans-unit>
        <trans-unit id="2ce490f6ffa683b36252e24dea0c004b3716a63f" translate="yes" xml:space="preserve">
          <source>Qt's vibrant and active community site, &lt;a href=&quot;http://qt.io&quot;&gt;http://qt.io&lt;/a&gt; houses a wiki, a forum, and additional learning guides and presentations.</source>
          <target state="translated">Qtの活気に満ちたアクティブなコミュニティサイトである&lt;a href=&quot;http://qt.io&quot;&gt;http://qt.ioに&lt;/a&gt;は、wiki、フォーラム、および追加の学習ガイドとプレゼンテーションがあります。</target>
        </trans-unit>
        <trans-unit id="cd5fcdd5e9009d43ae75d4a21e32aeeedf35d4a2" translate="yes" xml:space="preserve">
          <source>Qt's widgets handle keyboard focus in the ways that have become customary in GUIs.</source>
          <target state="translated">Qtのウィジェットは、GUIで慣習化されている方法でキーボードフォーカスを処理します。</target>
        </trans-unit>
        <trans-unit id="f578462d5b0b0e1b78acdbffa263190fd070b5d8" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for &lt;a href=&quot;qfuture-const-iterator&quot;&gt;QFuture::const_iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qfuture-const-iterator&quot;&gt;QFuture :: const_iteratorの&lt;/a&gt; Qtスタイルの同義語。</target>
        </trans-unit>
        <trans-unit id="62d77892bc9e443a9e7e7bfb1161686ba0665b5c" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for &lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash::const_iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash :: const_iteratorの&lt;/a&gt; Qtスタイルの同義語。</target>
        </trans-unit>
        <trans-unit id="a474b2f59528bdca26b81cd5b69bec97f82be92a" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for &lt;a href=&quot;qhash-iterator&quot;&gt;QHash::iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qhash-iterator&quot;&gt;QHash :: iteratorの&lt;/a&gt; Qtスタイルの同義語。</target>
        </trans-unit>
        <trans-unit id="57fdbac6ef567fcac81b342afd0e3f1c19893899" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for &lt;a href=&quot;qjsonarray-const-iterator&quot;&gt;QJsonArray::const_iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qjsonarray-const-iterator&quot;&gt;QJsonArray :: const_iteratorの&lt;/a&gt; Qtスタイルの同義語。</target>
        </trans-unit>
        <trans-unit id="0adfe4adc17bc28fc5e886f670872de12ceb544f" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for &lt;a href=&quot;qjsonarray-iterator&quot;&gt;QJsonArray::iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qjsonarray-iterator&quot;&gt;QJsonArray :: iteratorの&lt;/a&gt; Qtスタイルの同義語。</target>
        </trans-unit>
        <trans-unit id="52df88396cc751ec36bda445c2a9aff5e63fd400" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for &lt;a href=&quot;qjsonobject-const-iterator&quot;&gt;QJsonObject::const_iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qjsonobject-const-iterator&quot;&gt;QJsonObject :: const_iteratorの&lt;/a&gt; Qtスタイルの同義語。</target>
        </trans-unit>
        <trans-unit id="14fb88b937d7d211a16a8ab87df06ebdf1d3e018" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for &lt;a href=&quot;qjsonobject-iterator&quot;&gt;QJsonObject::iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qjsonobject-iterator&quot;&gt;QJsonObject :: iteratorの&lt;/a&gt; Qtスタイルの同義語。</target>
        </trans-unit>
        <trans-unit id="75f3f2d390f26f2ee29329dffd1481155a596fc3" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for &lt;a href=&quot;qlinkedlist-const-iterator&quot;&gt;QLinkedList::const_iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qlinkedlist-const-iterator&quot;&gt;QLinkedList :: const_iteratorの&lt;/a&gt; Qtスタイルの同義語。</target>
        </trans-unit>
        <trans-unit id="c35e9f98ad6a1dc22a5087472bb63fb77c7643a9" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for &lt;a href=&quot;qlinkedlist-iterator&quot;&gt;QLinkedList::iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qlinkedlist-iterator&quot;&gt;QLinkedList :: iteratorの&lt;/a&gt; Qtスタイルの同義語。</target>
        </trans-unit>
        <trans-unit id="dc4b3bf4556955c29ed70e7e8772a847d43dcc14" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for &lt;a href=&quot;qlist-const-iterator&quot;&gt;QList::const_iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qlist-const-iterator&quot;&gt;QList :: const_iteratorの&lt;/a&gt; Qtスタイルの同義語。</target>
        </trans-unit>
        <trans-unit id="d4b49cd3cf1bd017f4ee5c86c32af563685516ba" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for &lt;a href=&quot;qlist-iterator&quot;&gt;QList::iterator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qlist-iterator&quot;&gt;QList :: iteratorの&lt;/a&gt; Qtスタイルの同義語。</target>
        </trans-unit>
        <trans-unit id="74321b631245b03aa186df888e5f92d67d049ac0" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;&amp;lt;Key, T&amp;gt;::const_iterator.</source>
          <target state="translated">&lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; &amp;lt;Key、T&amp;gt; :: const_iteratorのQtスタイルの同義語。</target>
        </trans-unit>
        <trans-unit id="8c05d65894550fe9c890a2fcda6c805b8647776a" translate="yes" xml:space="preserve">
          <source>Qt-style synonym for &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;&amp;lt;Key, T&amp;gt;::iterator.</source>
          <target state="translated">&lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; &amp;lt;Key、T&amp;gt; :: iteratorのQtスタイルの同義語。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
