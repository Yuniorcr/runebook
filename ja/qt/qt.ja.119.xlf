<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="6366fd344da23b031fea585a5cc134a19e749604" translate="yes" xml:space="preserve">
          <source>If this property is set to &lt;code&gt;false&lt;/code&gt;, the item will no longer receive mouse events, but will continue to receive key events and will retain the keyboard &lt;a href=&quot;qml-qtquick-item#focus-prop&quot;&gt;focus&lt;/a&gt; if it has been set. (In contrast, setting the &lt;a href=&quot;qml-qtquick-item#enabled-prop&quot;&gt;enabled&lt;/a&gt; property to &lt;code&gt;false&lt;/code&gt; stops both mouse and keyboard events, and also removes focus from the item.)</source>
          <target state="translated">このプロパティが &lt;code&gt;false&lt;/code&gt; に設定されている場合、アイテムはマウスイベントを受け取りませんが、キーイベントを受け取り続け、設定されている場合はキーボード&lt;a href=&quot;qml-qtquick-item#focus-prop&quot;&gt;フォーカス&lt;/a&gt;を保持します。（対照的に、&lt;a href=&quot;qml-qtquick-item#enabled-prop&quot;&gt;enabled&lt;/a&gt;プロパティを &lt;code&gt;false&lt;/code&gt; に設定すると、マウスイベントとキーボードイベントの両方が停止し、アイテムからフォーカスも削除されます。）</target>
        </trans-unit>
        <trans-unit id="5232a5bf8d71a613191bf6438536119fdf838735" translate="yes" xml:space="preserve">
          <source>If this property is set to &lt;code&gt;false&lt;/code&gt;, the item will no longer receive mouse events, but will continue to receive key events and will retain the keyboard &lt;a href=&quot;qquickitem#focus-prop&quot;&gt;focus&lt;/a&gt; if it has been set. (In contrast, setting the &lt;a href=&quot;qquickitem#enabled-prop&quot;&gt;enabled&lt;/a&gt; property to &lt;code&gt;false&lt;/code&gt; stops both mouse and keyboard events, and also removes focus from the item.)</source>
          <target state="translated">このプロパティが &lt;code&gt;false&lt;/code&gt; に設定されている場合、アイテムはマウスイベントを受け取りませんが、キーイベントを受け取り続け、設定されている場合はキーボード&lt;a href=&quot;qquickitem#focus-prop&quot;&gt;フォーカス&lt;/a&gt;を保持します。（対照的に、&lt;a href=&quot;qquickitem#enabled-prop&quot;&gt;enabled&lt;/a&gt;プロパティを &lt;code&gt;false&lt;/code&gt; に設定すると、マウスイベントとキーボードイベントの両方が停止し、アイテムからフォーカスも削除されます。）</target>
        </trans-unit>
        <trans-unit id="66bdcee7e239e418a59113255fddb1898b69364e" translate="yes" xml:space="preserve">
          <source>If this property is set to &lt;code&gt;true&lt;/code&gt;, such errors are ignored. This is useful if you intend to connect to different types of objects, handling a different set of signals for each object.</source>
          <target state="translated">このプロパティが &lt;code&gt;true&lt;/code&gt; に設定されている場合、そのようなエラーは無視されます。これは、オブジェクトごとに異なる信号のセットを処理して、異なるタイプのオブジェクトに接続する場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="9a40541afc9b72394b30c0cb4f263c787fdd0b37" translate="yes" xml:space="preserve">
          <source>If this property is set to &lt;code&gt;true&lt;/code&gt;, the text cannot be edited by user interaction.</source>
          <target state="translated">このプロパティが &lt;code&gt;true&lt;/code&gt; に設定されている場合、ユーザーの操作によってテキストを編集することはできません。</target>
        </trans-unit>
        <trans-unit id="81d1dca4364ecf91a97e5af46a5825729958bc5b" translate="yes" xml:space="preserve">
          <source>If this property is set to Text.ElideRight, it can be used with &lt;a href=&quot;qml-qtquick-text#wrapMode-prop&quot;&gt;wrapped&lt;/a&gt; text. The text will only elide if &lt;code&gt;maximumLineCount&lt;/code&gt;, or &lt;code&gt;height&lt;/code&gt; has been set. If both &lt;code&gt;maximumLineCount&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; are set, &lt;code&gt;maximumLineCount&lt;/code&gt; will apply unless the lines do not fit in the height allowed.</source>
          <target state="translated">このプロパティがText.ElideRightに設定されている場合、&lt;a href=&quot;qml-qtquick-text#wrapMode-prop&quot;&gt;ラップされた&lt;/a&gt;テキストで使用できます。テキストは、 &lt;code&gt;maximumLineCount&lt;/code&gt; または &lt;code&gt;height&lt;/code&gt; が設定されている場合にのみ省略されます。 &lt;code&gt;maximumLineCount&lt;/code&gt; と &lt;code&gt;height&lt;/code&gt; 両方が設定されている場合、行が許可された高さに収まらない限り、 &lt;code&gt;maximumLineCount&lt;/code&gt; が適用されます。</target>
        </trans-unit>
        <trans-unit id="2bc1dd9e563b5d0004881a9c3732ed0db548f760" translate="yes" xml:space="preserve">
          <source>If this property is set to a &lt;a href=&quot;qml-geocircle&quot;&gt;geocircle&lt;/a&gt; its &lt;a href=&quot;qml-geocircle&quot;&gt;radius&lt;/a&gt; property may be left unset, in which case the &lt;a href=&quot;location-places-qml#plugin&quot;&gt;Plugin&lt;/a&gt; will choose an appropriate radius for the search.</source>
          <target state="translated">このプロパティが&lt;a href=&quot;qml-geocircle&quot;&gt;geocircleに&lt;/a&gt;設定されている場合、その&lt;a href=&quot;qml-geocircle&quot;&gt;radius&lt;/a&gt;プロパティは未設定のままにすることができます。その場合、&lt;a href=&quot;location-places-qml#plugin&quot;&gt;プラグイン&lt;/a&gt;は検索に適切な半径を選択します。</target>
        </trans-unit>
        <trans-unit id="cd8444bbc126a20a30c8fbf7f7c40dfb4bd970dc" translate="yes" xml:space="preserve">
          <source>If this property is set to a positive value, the &lt;a href=&quot;qcombobox#minimumSizeHint&quot;&gt;minimumSizeHint&lt;/a&gt;() and &lt;a href=&quot;qcombobox#sizeHint&quot;&gt;sizeHint&lt;/a&gt;() take it into account.</source>
          <target state="translated">このプロパティが正の値に設定されている場合、&lt;a href=&quot;qcombobox#minimumSizeHint&quot;&gt;minimumSizeHint&lt;/a&gt;（）および&lt;a href=&quot;qcombobox#sizeHint&quot;&gt;sizeHint&lt;/a&gt;（）はそれを考慮に入れます。</target>
        </trans-unit>
        <trans-unit id="5073e1a3a91e8f12240a132738f629a8c5bc6b8e" translate="yes" xml:space="preserve">
          <source>If this property is set to a string with more than one character, the first character is used. If the string is empty, the value is ignored and the property is not set.</source>
          <target state="translated">このプロパティが複数の文字を持つ文字列に設定されている場合、最初の文字が使用されます。文字列が空の場合、値は無視され、プロパティは設定されません。</target>
        </trans-unit>
        <trans-unit id="24519db9032f311679b8872a0437d577a4382eff" translate="yes" xml:space="preserve">
          <source>If this property is set to a value other than &lt;a href=&quot;q3dscene#invalidSelectionPoint&quot;&gt;invalidSelectionPoint&lt;/a&gt;(), the graph tries to match a graph position to the specified coordinates within the primary viewport. After the rendering pass, this property is returned to its default state of &lt;a href=&quot;q3dscene#invalidSelectionPoint&quot;&gt;invalidSelectionPoint&lt;/a&gt;(). The queried graph position can be read from the &lt;a href=&quot;qabstract3dgraph#queriedGraphPosition-prop&quot;&gt;QAbstract3DGraph::queriedGraphPosition&lt;/a&gt; property after the next render pass.</source>
          <target state="translated">このプロパティが&lt;a href=&quot;q3dscene#invalidSelectionPoint&quot;&gt;invalidSelectionPoint&lt;/a&gt;（）以外の値に設定されている場合、グラフは、グラフの位置をプライマリビューポート内の指定された座標に一致させようとします。レンダリングパスの後、このプロパティは&lt;a href=&quot;q3dscene#invalidSelectionPoint&quot;&gt;invalidSelectionPoint&lt;/a&gt;（）のデフォルト状態に戻ります。クエリされたグラフの位置は、次のレンダーパスの後に&lt;a href=&quot;qabstract3dgraph#queriedGraphPosition-prop&quot;&gt;QAbstract3DGraph :: queriedGraphPosition&lt;/a&gt;プロパティから読み取ることができます。</target>
        </trans-unit>
        <trans-unit id="d4819a3283fa793ebdc1cb160b4f5c2c5e9d0641" translate="yes" xml:space="preserve">
          <source>If this property is set to a value other than &lt;a href=&quot;q3dscene#invalidSelectionPoint&quot;&gt;invalidSelectionPoint&lt;/a&gt;(), the graph tries to select a data item, axis label, or a custom item at the specified coordinates within the primary viewport. After the rendering pass, the property is returned to its default state of &lt;a href=&quot;q3dscene#invalidSelectionPoint&quot;&gt;invalidSelectionPoint&lt;/a&gt;().</source>
          <target state="translated">このプロパティが&lt;a href=&quot;q3dscene#invalidSelectionPoint&quot;&gt;invalidSelectionPoint&lt;/a&gt;（）以外の値に設定されている場合、グラフは、プライマリビューポート内の指定された座標でデータアイテム、軸ラベル、またはカスタムアイテムを選択しようとします。レンダリングパスの後、プロパティは&lt;a href=&quot;q3dscene#invalidSelectionPoint&quot;&gt;invalidSelectionPoint&lt;/a&gt;（）のデフォルト状態に戻ります。</target>
        </trans-unit>
        <trans-unit id="42b19a605fa9c22e528488387800a0ee59e9fa45" translate="yes" xml:space="preserve">
          <source>If this property is set to false (the default), the scroll area honors the size of its widget. Regardless of this property, you can programmatically resize the widget using &lt;a href=&quot;qscrollarea#widget&quot;&gt;widget&lt;/a&gt;()-&amp;gt;&lt;a href=&quot;qwidget#size-prop&quot;&gt;resize&lt;/a&gt;(), and the scroll area will automatically adjust itself to the new size.</source>
          <target state="translated">このプロパティがfalse（デフォルト）に設定されている場合、スクロール領域はウィジェットのサイズに従います。このプロパティに関係なく、&lt;a href=&quot;qscrollarea#widget&quot;&gt;widget&lt;/a&gt;（）-&amp;gt; &lt;a href=&quot;qwidget#size-prop&quot;&gt;resize&lt;/a&gt;（）を使用してプログラムでウィジェットのサイズを変更でき、スクロール領域は自動的に新しいサイズに調整されます。</target>
        </trans-unit>
        <trans-unit id="dffe0bf3de65cba72b12a808e508b4b59cd7f02e" translate="yes" xml:space="preserve">
          <source>If this property is set to false, the directory model will allow renaming, copying and deleting of files and directories.</source>
          <target state="translated">このプロパティが false に設定されている場合、ディレクトリモデルはファイルとディレクトリの名前の変更、コピー、削除を許可します。</target>
        </trans-unit>
        <trans-unit id="73db8d9a3359c83beafc44ef47d13b3f7e9c29e0" translate="yes" xml:space="preserve">
          <source>If this property is set to false, the directory model will make sure that a directory actually containes any files before reporting that it has children. Otherwise the directory model will report that an item has children if the item is a directory.</source>
          <target state="translated">このプロパティがfalseに設定されている場合、ディレクトリモデルは、子があることを報告する前に、ディレクトリが実際にファイルを含んでいることを確認します。そうでなければ、ディレクトリモデルは、項目がディレクトリである場合、項目に子があることを報告します。</target>
        </trans-unit>
        <trans-unit id="b902cb4a8201d02db6d9d70ded5ab6faf1e5a5c5" translate="yes" xml:space="preserve">
          <source>If this property is set to true (the default), the &lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt; automatically scrolls the contents of the view if the user drags within 16 pixels of the viewport edge. If the current item changes, then the view will scroll automatically to ensure that the current item is fully visible.</source>
          <target state="translated">このプロパティがtrue（デフォルト）に設定されている場合、ユーザーがビューポートの端から16ピクセル以内でドラッグすると、&lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt;はビューのコンテンツを自動的にスクロールします。現在のアイテムが変更されると、ビューが自動的にスクロールして、現在のアイテムが完全に表示されるようになります。</target>
        </trans-unit>
        <trans-unit id="77e17ab9cb69247e19e78243865c4f4566d7e5e0" translate="yes" xml:space="preserve">
          <source>If this property is set to true then the push button is an auto default button.</source>
          <target state="translated">このプロパティがtrueに設定されている場合、プッシュボタンは自動デフォルトボタンになります。</target>
        </trans-unit>
        <trans-unit id="bd4d7e8be29dc04fe8fcc195fc1d9f928771996c" translate="yes" xml:space="preserve">
          <source>If this property is set to true, the layout will use design metrics. Otherwise, the metrics of the paint device as set on &lt;a href=&quot;qabstracttextdocumentlayout#setPaintDevice&quot;&gt;QAbstractTextDocumentLayout::setPaintDevice&lt;/a&gt;() will be used.</source>
          <target state="translated">このプロパティがtrueに設定されている場合、レイアウトはデザインメトリックを使用します。それ以外の場合は、&lt;a href=&quot;qabstracttextdocumentlayout#setPaintDevice&quot;&gt;QAbstractTextDocumentLayout :: setPaintDevice&lt;/a&gt;（）に設定されているペイントデバイスのメトリックが使用されます。</target>
        </trans-unit>
        <trans-unit id="03637033cd890d8ee0857569835f921d8c015e6e" translate="yes" xml:space="preserve">
          <source>If this property is set to true, the scroll area will automatically resize the widget in order to avoid scroll bars where they can be avoided, or to take advantage of extra space.</source>
          <target state="translated">このプロパティがtrueに設定されている場合、スクロールバーが避けられる場所ではスクロールバーを避けたり、余分なスペースを利用したりするために、スクロール領域は自動的にウィジェットのサイズを変更します。</target>
        </trans-unit>
        <trans-unit id="e85d5238f3aa170516f706f46ee54ee289390e68" translate="yes" xml:space="preserve">
          <source>If this property is set to true, then when the mouse or touchpoint moves far enough to begin dragging the content, the content will jump, such that the content pixel which was under the cursor or touchpoint when pressed remains under that point.</source>
          <target state="translated">このプロパティが真に設定されている場合、マウスやタッチポイントがコンテンツのドラッグを開始するのに十分な距離まで移動すると、コンテンツはジャンプし、押されたときにカーソルやタッチポイントの下にあったコンテンツピクセルがそのポイントの下に残るようになります。</target>
        </trans-unit>
        <trans-unit id="b6c31bd5baa06d8885b24ef5e66ab710bfe11bdd" translate="yes" xml:space="preserve">
          <source>If this property is set, it will require the given keyboard modifiers to be pressed in order to react to pointer events, and otherwise ignore them.</source>
          <target state="translated">このプロパティが設定されている場合、ポインタイベントに反応するために、与えられたキーボード修飾子を押す必要があり、そうでなければ無視されます。</target>
        </trans-unit>
        <trans-unit id="25fe5ac4eb56116ee6ca70945d9be5b3239a3f40" translate="yes" xml:space="preserve">
          <source>If this property is true (the default value), the highlight is moved smoothly to follow the current item. Otherwise, the highlight is not moved by the view, and any movement must be implemented by the highlight.</source>
          <target state="translated">このプロパティが真(デフォルト値)の場合、ハイライトは現在の項目に沿ってスムーズに移動します。そうでない場合は、ハイライトはビューによって移動されず、移動はハイライトによって実装されなければなりません。</target>
        </trans-unit>
        <trans-unit id="bf95bb03f5821fcf12dd4d7d6ad98fea00a68180" translate="yes" xml:space="preserve">
          <source>If this property is true, all modes previously added are replaced by a mode that matches window size and screen refresh rate.</source>
          <target state="translated">このプロパティが真の場合、以前に追加されたすべてのモードは、ウィンドウサイズと画面のリフレッシュレートに一致するモードに置き換えられます。</target>
        </trans-unit>
        <trans-unit id="7b2733c56d01fa4157e4f403f2b95d130cfc23e0" translate="yes" xml:space="preserve">
          <source>If this property is true, mipmaps are generated for the texture.</source>
          <target state="translated">このプロパティがtrueの場合、テクスチャに対してmipmapsが生成されます。</target>
        </trans-unit>
        <trans-unit id="89447fa2e019d30a0cde9a6f6c2bc28f70765698" translate="yes" xml:space="preserve">
          <source>If this property is true, the &lt;a href=&quot;qml-qtquick-shadereffectsource#sourceItem-prop&quot;&gt;sourceItem&lt;/a&gt; is hidden, though it will still be rendered into the texture. As opposed to hiding the &lt;a href=&quot;qml-qtquick-shadereffectsource#sourceItem-prop&quot;&gt;sourceItem&lt;/a&gt; by setting &lt;a href=&quot;qml-qtquick-item#visible-prop&quot;&gt;visible&lt;/a&gt; to false, setting this property to true will not prevent mouse or keyboard input from reaching &lt;a href=&quot;qml-qtquick-shadereffectsource#sourceItem-prop&quot;&gt;sourceItem&lt;/a&gt;. The property is useful when the &lt;a href=&quot;qml-qtquick-shadereffectsource&quot;&gt;ShaderEffectSource&lt;/a&gt; is anchored on top of, and meant to replace the &lt;a href=&quot;qml-qtquick-shadereffectsource#sourceItem-prop&quot;&gt;sourceItem&lt;/a&gt;.</source>
          <target state="translated">このプロパティがtrueの場合、&lt;a href=&quot;qml-qtquick-shadereffectsource#sourceItem-prop&quot;&gt;sourceItem&lt;/a&gt;は非表示になりますが、テクスチャにはレンダリングされます。隠蔽とは対照的に&lt;a href=&quot;qml-qtquick-shadereffectsource#sourceItem-prop&quot;&gt;sourceItemを&lt;/a&gt;設定することにより、&lt;a href=&quot;qml-qtquick-item#visible-prop&quot;&gt;可視&lt;/a&gt;到達するマウスまたはキーボードの入力を防ぐことはできませんこのプロパティをtrueに設定し、falseに&lt;a href=&quot;qml-qtquick-shadereffectsource#sourceItem-prop&quot;&gt;sourceItemを&lt;/a&gt;。このプロパティは、&lt;a href=&quot;qml-qtquick-shadereffectsource&quot;&gt;ShaderEffectSource&lt;/a&gt;が上にアンカーされていて、&lt;a href=&quot;qml-qtquick-shadereffectsource#sourceItem-prop&quot;&gt;sourceItem&lt;/a&gt;を置き換える場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="e89a18c8e26d330e01784117924442056151df7c" translate="yes" xml:space="preserve">
          <source>If this property is true, the group box displays its title using a checkbox in place of an ordinary label. If the checkbox is checked, the group box's children are enabled; otherwise, they are disabled and inaccessible.</source>
          <target state="translated">このプロパティが true の場合、グループ・ボックスのタイトルは、通常のラベルの代わりにチェックボックスを使用して表示されます。チェックボックスがチェックされている場合、グループ・ボックスの子は有効になり、チェックされていない場合は無効になり、アクセスできません。</target>
        </trans-unit>
        <trans-unit id="3ffa897652f13df657629066b7c43e9a90efd919" translate="yes" xml:space="preserve">
          <source>If this property is true, the input language is only changed between the languages providing custom layout.</source>
          <target state="translated">このプロパティが真の場合、入力言語はカスタムレイアウトを提供する言語間でのみ変更されます。</target>
        </trans-unit>
        <trans-unit id="dd815bf468ce6a60d7025c43eb015d99838d9f25" translate="yes" xml:space="preserve">
          <source>If this property is true, the output from the &lt;a href=&quot;qml-qtquick-shadereffect#fragmentShader-prop&quot;&gt;fragmentShader&lt;/a&gt; is blended with the background using source-over blend mode. If false, the background is disregarded. Blending decreases the performance, so you should set this property to false when blending is not needed. The default value is true.</source>
          <target state="translated">このプロパティがtrueの場合、&lt;a href=&quot;qml-qtquick-shadereffect#fragmentShader-prop&quot;&gt;fragmentShader&lt;/a&gt;からの出力は、source-overブレンドモードを使用して背景とブレンドされます。falseの場合、背景は無視されます。ブレンドするとパフォーマンスが低下するため、ブレンドが不要な場合は、このプロパティをfalseに設定する必要があります。デフォルト値はtrueです。</target>
        </trans-unit>
        <trans-unit id="087dbab36012dedcc9fda210a6cdb2a5d231a6a1" translate="yes" xml:space="preserve">
          <source>If this property is true, the texture is updated whenever the &lt;a href=&quot;qml-qtquick-shadereffectsource#sourceItem-prop&quot;&gt;sourceItem&lt;/a&gt; updates. Otherwise, it will be a frozen image, even if &lt;a href=&quot;qml-qtquick-shadereffectsource#sourceItem-prop&quot;&gt;sourceItem&lt;/a&gt; is assigned a new item. The property is true by default.</source>
          <target state="translated">このプロパティがtrueの場合、&lt;a href=&quot;qml-qtquick-shadereffectsource#sourceItem-prop&quot;&gt;sourceItem&lt;/a&gt;が更新されるたびにテクスチャが更新されます。それ以外の場合、&lt;a href=&quot;qml-qtquick-shadereffectsource#sourceItem-prop&quot;&gt;sourceItemに&lt;/a&gt;新しいアイテムが割り当てられていても、画像はフリーズします。プロパティはデフォルトでtrueです。</target>
        </trans-unit>
        <trans-unit id="7f8916f4a9cec10b1dcff7b2a3cd3d66cb3a8470" translate="yes" xml:space="preserve">
          <source>If this property isn't explicitly set, this property defaults to the lowest page ID in this wizard, or -1 if no page has been inserted yet.</source>
          <target state="translated">こ のプ ロ パテ ィ が明示的に設定 さ れていない と き は、 こ のプ ロ パテ ィ のデフ ォル ト は、 こ の ウ ィ ザー ド で最下位のページ ID にな り 、 ページがまだ挿入 さ れていない と き は -1 にな り ます。</target>
        </trans-unit>
        <trans-unit id="5201e8ead5ff6d46b87bf4737671f6e806f5d6ab" translate="yes" xml:space="preserve">
          <source>If this property value is &lt;code&gt;true&lt;/code&gt;, &lt;a href=&quot;qcustom3dvolume#alphaMultiplier-prop&quot;&gt;alphaMultiplier&lt;/a&gt; is only applied to texels that already have some transparency. If it is &lt;code&gt;false&lt;/code&gt;, the multiplier is applied to the alpha value of all texels. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">このプロパティ値が &lt;code&gt;true&lt;/code&gt; の場合、&lt;a href=&quot;qcustom3dvolume#alphaMultiplier-prop&quot;&gt;alphaMultiplier&lt;/a&gt;は既に透明度を持っているテクセルにのみ適用されます。それがある場合 &lt;code&gt;false&lt;/code&gt; 、乗算器は、すべてのテクセルのアルファ値に適用されます。デフォルトは &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6fc259e5e43ffbe64eb36d15782f9675d43f45df" translate="yes" xml:space="preserve">
          <source>If this property value is &lt;code&gt;true&lt;/code&gt;, &lt;a href=&quot;qml-qtdatavisualization-custom3dvolume#alphaMultiplier-prop&quot;&gt;alphaMultiplier&lt;/a&gt; is only applied to texels that already have some transparency. If it is &lt;code&gt;false&lt;/code&gt;, the multiplier is applied to the alpha value of all texels. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">このプロパティ値が &lt;code&gt;true&lt;/code&gt; の場合、&lt;a href=&quot;qml-qtdatavisualization-custom3dvolume#alphaMultiplier-prop&quot;&gt;alphaMultiplier&lt;/a&gt;は既に透明度を持っているテクセルにのみ適用されます。それがある場合 &lt;code&gt;false&lt;/code&gt; 、乗算器は、すべてのテクセルのアルファ値に適用されます。デフォルトは &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6dbfc4991bf3c40a30965d0be67022d20d746264" translate="yes" xml:space="preserve">
          <source>If this property value is &lt;code&gt;true&lt;/code&gt;, a high definition shader is used to render the volume. If it is &lt;code&gt;false&lt;/code&gt;, a low definition shader is used.</source>
          <target state="translated">このプロパティ値が &lt;code&gt;true&lt;/code&gt; の場合、高解像度シェーダーを使用してボリュームがレンダリングされます。それがある場合は &lt;code&gt;false&lt;/code&gt; を、低解像度シェーダが使用されています。</target>
        </trans-unit>
        <trans-unit id="0535fc8be4ff3e7ee689d37203fda50da5c481f5" translate="yes" xml:space="preserve">
          <source>If this property value is &lt;code&gt;true&lt;/code&gt;, a high definition shader is used. If it is &lt;code&gt;false&lt;/code&gt;, a low definition shader is used.</source>
          <target state="translated">このプロパティ値が &lt;code&gt;true&lt;/code&gt; の場合、高解像度シェーダーが使用されます。それがある場合は &lt;code&gt;false&lt;/code&gt; を、低解像度シェーダが使用されています。</target>
        </trans-unit>
        <trans-unit id="154021c467523c3ca86789d97f5f9291d5be2648" translate="yes" xml:space="preserve">
          <source>If this property value is &lt;code&gt;true&lt;/code&gt;, the frames of slices indicated by slice index properties will be drawn around the volume. If it is &lt;code&gt;false&lt;/code&gt;, no slice frames will be drawn.</source>
          <target state="translated">このプロパティ値が &lt;code&gt;true&lt;/code&gt; の場合、スライスインデックスプロパティで示されるスライスのフレームがボリュームの周りに描画されます。 &lt;code&gt;false&lt;/code&gt; の場合、スライスフレームは描画されません。</target>
        </trans-unit>
        <trans-unit id="4b3638960eac959f8c4c52e78f407f5b0a5e50f2" translate="yes" xml:space="preserve">
          <source>If this property value is &lt;code&gt;true&lt;/code&gt;, the frames of slices indicated by slice index properties will be drawn around the volume. If it is &lt;code&gt;false&lt;/code&gt;, no slice frames will be drawn. Drawing slice frames is independent of drawing slices, so you can show the full volume and still draw the slice frames around it. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">このプロパティ値が &lt;code&gt;true&lt;/code&gt; の場合、スライスインデックスプロパティで示されるスライスのフレームがボリュームの周りに描画されます。 &lt;code&gt;false&lt;/code&gt; の場合、スライスフレームは描画されません。スライスフレームの描画はスライスの描画とは独立しているため、ボリューム全体を表示しながらスライスフレームを描画できます。デフォルトは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="de0a025be717c756c002f1c5819353a5b1b6b769" translate="yes" xml:space="preserve">
          <source>If this property value is &lt;code&gt;true&lt;/code&gt;, the slices indicated by slice index properties will be drawn instead of the full volume. If it is &lt;code&gt;false&lt;/code&gt;, the full volume will always be drawn. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">このプロパティ値が &lt;code&gt;true&lt;/code&gt; の場合、ボリューム全体ではなく、スライスインデックスプロパティで示されるスライスが描画されます。 &lt;code&gt;false&lt;/code&gt; の場合、常にボリューム全体が描画されます。デフォルトは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8a080765111764977c8ae9223ac764cb884d1aa9" translate="yes" xml:space="preserve">
          <source>If this property value is set to &lt;code&gt;true&lt;/code&gt;, the parent axis sub-segment count is ignored when calculating sub-grid line positions. The sub-grid positions are generated automatically according to the &lt;a href=&quot;qlogvalue3daxisformatter#base-prop&quot;&gt;base&lt;/a&gt; property value. The number of sub-grid lines is set to the base value minus one, rounded down. This property is ignored when the base value is zero. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">このプロパティ値が &lt;code&gt;true&lt;/code&gt; に設定されている場合、サブグリッド線の位置を計算するときに、親軸のサブセグメント数は無視されます。サブグリッドの位置は、&lt;a href=&quot;qlogvalue3daxisformatter#base-prop&quot;&gt;基本&lt;/a&gt;プロパティ値に従って自動的に生成されます。サブグリッド線の数は、切り捨てられたベース値から1を引いた値に設定されます。ベース値がゼロの場合、このプロパティは無視されます。デフォルトは &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="099b07f85765cd016c077eadb3bacd9ff0df9676" translate="yes" xml:space="preserve">
          <source>If this property value is set to &lt;code&gt;true&lt;/code&gt;, the parent axis sub-segment count is ignored when calculating sub-grid line positions. The sub-grid positions are generated automatically according to the &lt;a href=&quot;qml-qtdatavisualization-logvalueaxis3dformatter#base-prop&quot;&gt;base&lt;/a&gt; property value. The number of sub-grid lines is set to the base value minus one, rounded down. This property is ignored when the base value is zero. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">このプロパティ値が &lt;code&gt;true&lt;/code&gt; に設定されている場合、サブグリッド線の位置を計算するときに、親軸のサブセグメント数は無視されます。サブグリッドの位置は、&lt;a href=&quot;qml-qtdatavisualization-logvalueaxis3dformatter#base-prop&quot;&gt;基本&lt;/a&gt;プロパティ値に従って自動的に生成されます。サブグリッド線の数は、切り捨てられたベース値から1を引いた値に設定されます。ベース値がゼロの場合、このプロパティは無視されます。デフォルトは &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="20822bb1322d8d5d555634ab7bd0e780d999181e" translate="yes" xml:space="preserve">
          <source>If this quaternion is null, then a null quaternion is returned. If the length of the quaternion is very close to 1, then the quaternion will be returned as-is. Otherwise the normalized form of the quaternion of length 1 will be returned.</source>
          <target state="translated">このクォータニオンがnullの場合、nullのクォータニオンが返されます。クォータニオンの長さが1に非常に近い場合、クォータニオンはそのまま返されます。そうでない場合は、長さ1のクォータニオンの正規化された形が返されます。</target>
        </trans-unit>
        <trans-unit id="35a24e099253b5a88e67f643863078439300a407" translate="yes" xml:space="preserve">
          <source>If this query &lt;a href=&quot;qxmlquery#isValid&quot;&gt;is invalid&lt;/a&gt;, &lt;code&gt;false&lt;/code&gt; is returned and the behavior is undefined. If</source>
          <target state="translated">このクエリ&lt;a href=&quot;qxmlquery#isValid&quot;&gt;が無効な&lt;/a&gt;場合、 &lt;code&gt;false&lt;/code&gt; が返され、動作は未定義です。もし</target>
        </trans-unit>
        <trans-unit id="e5c1dc074e2b5cf55ce9fa79c5c23d3d373abae7" translate="yes" xml:space="preserve">
          <source>If this role is not defined, &lt;a href=&quot;qitemmodelsurfacedataproxy#columnRole-prop&quot;&gt;columnRole&lt;/a&gt; is used to determine the X-coordinate value of the resolved &lt;a href=&quot;qsurfacedataitem&quot;&gt;QSurfaceDataItem&lt;/a&gt; objects.</source>
          <target state="translated">このロールが定義されていない場合、&lt;a href=&quot;qitemmodelsurfacedataproxy#columnRole-prop&quot;&gt;columnRole&lt;/a&gt;を使用して、解決された&lt;a href=&quot;qsurfacedataitem&quot;&gt;QSurfaceDataItem&lt;/a&gt;オブジェクトのX座標値を決定します。</target>
        </trans-unit>
        <trans-unit id="ff74e676e7544e509b5582d354341c399728fce4" translate="yes" xml:space="preserve">
          <source>If this role is not defined, &lt;a href=&quot;qitemmodelsurfacedataproxy#rowRole-prop&quot;&gt;rowRole&lt;/a&gt; is used to determine the Z-coordinate value of resolved &lt;a href=&quot;qsurfacedataitem&quot;&gt;QSurfaceDataItem&lt;/a&gt; objects.</source>
          <target state="translated">このロールが定義されていない場合は、&lt;a href=&quot;qitemmodelsurfacedataproxy#rowRole-prop&quot;&gt;rowRole&lt;/a&gt;を使用して、解決された&lt;a href=&quot;qsurfacedataitem&quot;&gt;QSurfaceDataItem&lt;/a&gt;オブジェクトのZ座標値を決定します。</target>
        </trans-unit>
        <trans-unit id="04bbf11a73aed0531f71d0c57ea7e9e4c1a965a3" translate="yes" xml:space="preserve">
          <source>If this routing manager supports returning addresses and instructions in different languages, they will be returned in the language of</source>
          <target state="translated">このルーティングマネージャが異なる言語でのアドレスと命令の返答をサポートしている場合、それらは</target>
        </trans-unit>
        <trans-unit id="438d6327741e081d67b307e3db8df1c170b54cae" translate="yes" xml:space="preserve">
          <source>If this semaphore releaser had the responsibility to call some &lt;a href=&quot;qsemaphore#release&quot;&gt;QSemaphore::release&lt;/a&gt;() itself, it performs the call before taking over from</source>
          <target state="translated">このセマフォ&lt;a href=&quot;qsemaphore#release&quot;&gt;リリーサがQSemaphore :: release&lt;/a&gt;（）自体を呼び出す必要がある場合、それはから引き継ぐ前に呼び出しを実行します</target>
        </trans-unit>
        <trans-unit id="76f8e89e49be027007923c5da18f2ac36b55048a" translate="yes" xml:space="preserve">
          <source>If this series is added to a graph, the graph can adjust the selection according to user interaction or if it becomes invalid. Selecting a bar on another added series will also clear the selection.</source>
          <target state="translated">この系列がグラフに追加された場合、グラフはユーザーの操作に応じて選択範囲を調整したり、無効になった場合に調整することができます。また、追加された別の系列のバーを選択すると、選択範囲がクリアされます。</target>
        </trans-unit>
        <trans-unit id="dac5211fea0cb72bd6621ff926124b6ba8d2f0d0" translate="yes" xml:space="preserve">
          <source>If this server is using &lt;a href=&quot;qnetworkproxy&quot;&gt;QNetworkProxy&lt;/a&gt; then the</source>
          <target state="translated">このサーバーが&lt;a href=&quot;qnetworkproxy&quot;&gt;QNetworkProxy&lt;/a&gt;を使用している場合、</target>
        </trans-unit>
        <trans-unit id="f5d8c50648a0b644233d60c7ba35bbb736326e83" translate="yes" xml:space="preserve">
          <source>If this setting is changed while a sound effect is playing it will only take effect when the sound effect has stopped playing.</source>
          <target state="translated">サウンドエフェクトの再生中にこの設定を変更すると、サウンドエフェクトの再生が停止したときにのみ有効になります。</target>
        </trans-unit>
        <trans-unit id="e16bb50fe73b95cd7e166915a565003f6568c417" translate="yes" xml:space="preserve">
          <source>If this signal is not handled, the requested load will fail.</source>
          <target state="translated">この信号が処理されない場合、要求された負荷は失敗します。</target>
        </trans-unit>
        <trans-unit id="fef3fff95a20a7e18389569e5f35c67c5dbfb14c" translate="yes" xml:space="preserve">
          <source>If this string contains any characters that cannot be encoded in the locale, the returned byte array is undefined. Those characters may be suppressed or replaced by another.</source>
          <target state="translated">この文字列にロケールでエンコードできない文字が含まれている場合、 返されるバイト配列は未定義となります。これらの文字は、省略したり別の文字に置き換えたりすることができます。</target>
        </trans-unit>
        <trans-unit id="d94bc2ada40f1077e7ae7e64b7e5c22d1bd6355f" translate="yes" xml:space="preserve">
          <source>If this true the animation will complete its current iteration when it is stopped - either by setting the &lt;code&gt;running&lt;/code&gt; property to false, or by calling the &lt;code&gt;stop()&lt;/code&gt; method. The &lt;code&gt;complete()&lt;/code&gt; method is not effected by this value.</source>
          <target state="translated">これがtrueの場合、 &lt;code&gt;running&lt;/code&gt; プロパティをfalseに設定するか、 &lt;code&gt;stop()&lt;/code&gt; メソッドを呼び出すことにより、停止時にアニメーションが現在の反復を完了します。 &lt;code&gt;complete()&lt;/code&gt; メソッドは、この値によって影響されません。</target>
        </trans-unit>
        <trans-unit id="1eb0f67e00d17b82f6530359a63f2aeaaad3a7b3" translate="yes" xml:space="preserve">
          <source>If this value is greater than zero, the view may keep as many delegates instantiated as it can fit within the buffer specified. For example, if in a vertical view the delegate is 20 pixels high and &lt;code&gt;cacheBuffer&lt;/code&gt; is set to 40, then up to 2 delegates above and 2 delegates below the visible area may be created/retained. The buffered delegates are created asynchronously, allowing creation to occur across multiple frames and reducing the likelihood of skipping frames. In order to improve painting performance delegates outside the visible area are not painted.</source>
          <target state="translated">この値がゼロより大きい場合、ビューは、指定されたバッファー内に収まるだけの数のデリゲートをインスタンス化したままにする可能性があります。たとえば、垂直ビューでデリゲートの高さが20ピクセルで、 &lt;code&gt;cacheBuffer&lt;/code&gt; が40に設定されている場合、可視領域の上に最大2つのデリゲート、下に最大2つのデリゲートが作成/保持されます。バッファリングされたデリゲートは非同期で作成されるため、複数のフレームにわたって作成を行うことができ、フレームをスキップする可能性が低くなります。描画パフォーマンスを向上させるために、可視領域外のデリゲートは描画されません。</target>
        </trans-unit>
        <trans-unit id="d7ad9ed01be513c9164d477bfd55038c8472be79" translate="yes" xml:space="preserve">
          <source>If this value is greater than zero, the view may keep as many delegates instantiated as will fit within the buffer specified. For example, if in a vertical view the delegate is 20 pixels high, there are 3 columns and &lt;code&gt;cacheBuffer&lt;/code&gt; is set to 40, then up to 6 delegates above and 6 delegates below the visible area may be created/retained. The buffered delegates are created asynchronously, allowing creation to occur across multiple frames and reducing the likelihood of skipping frames. In order to improve painting performance delegates outside the visible area are not painted.</source>
          <target state="translated">この値がゼロより大きい場合、ビューは、指定されたバッファー内に収まるだけの数のデリゲートをインスタンス化したままにする可能性があります。たとえば、垂直ビューでデリゲートの高さが20ピクセルで、3つの列があり、 &lt;code&gt;cacheBuffer&lt;/code&gt; が40に設定されている場合、可視領域の上に最大6つのデリゲート、下に最大6つのデリゲートが作成/保持されます。バッファリングされたデリゲートは非同期で作成されるため、複数のフレームにわたって作成を行うことができ、フレームをスキップする可能性が低くなります。描画パフォーマンスを向上させるために、可視領域外のデリゲートは描画されません。</target>
        </trans-unit>
        <trans-unit id="127580f6f41b51546fd3bc5efae2ed614120c7f5" translate="yes" xml:space="preserve">
          <source>If this value is non-zero, the view will create extra delegates before the start of the view, or after the end. The view will create as many delegates as it can fit into the pixel size specified.</source>
          <target state="translated">この値が0以外の場合、ビューはビューの開始前、または終了後に余分なデリゲートを作成します。ビューは、指定されたピクセルサイズに収まるだけの数のデリゲートを作成します。</target>
        </trans-unit>
        <trans-unit id="770b381afabf568da75de06a5ce23788975f7ca4" translate="yes" xml:space="preserve">
          <source>If this value is non-zero, then any movement of the emitter will provide additional starting velocity to the particles based on the movement. The additional vector will be the same angle as the emitter's movement, with a magnitude that is the magnitude of the emitters movement multiplied by velocityFromMovement.</source>
          <target state="translated">この値がゼロでない場合、エミッタの任意の動きは、動きに基づいて粒子に追加の開始速度を提供します。追加のベクトルは、エミッタの動きと同じ角度で、エミッタの動きの大きさに velocityFromMovement を掛けた大きさになります。</target>
        </trans-unit>
        <trans-unit id="7135c234f8bcce211d310450397ae0ceb229509e" translate="yes" xml:space="preserve">
          <source>If this value is not specified, it defaults to the value that depends on the native style.</source>
          <target state="translated">この値が指定されていない場合は、ネイティブスタイルに依存する値がデフォルトとなります。</target>
        </trans-unit>
        <trans-unit id="5cdf10f3a25ac04653570c9a405850ab7e1b2aa5" translate="yes" xml:space="preserve">
          <source>If this value is set when the emitter is loaded, then it will emit particles from the past, up to startTime milliseconds ago. These will simulate as if they were emitted then, but will not have any affectors applied to them. Affectors will take effect from the present time.</source>
          <target state="translated">エミッターのロード時にこの値が設定されている場合、過去のパーティクルを、startTimeミリ秒前までのパーティクルを放出します。これらのパーティクルは、その時点で放出されたかのようにシミュレートされますが、アフェクターは適用されません。アフェクタは現在の時刻から有効になります。</target>
        </trans-unit>
        <trans-unit id="25df681494581c983182a0ff7f7c6b3e1dc1fd02" translate="yes" xml:space="preserve">
          <source>If this value to null, the bounding volume of the entity is used. Care must be taken that this bounding volume never becomes invalid.</source>
          <target state="translated">この値をnullにすると、エンティティの外接ボリュームが使用されます。この外接ボリュームが無効にならないように注意しなければなりません。</target>
        </trans-unit>
        <trans-unit id="00572fcd65ca575d2f655af12f123f101026983f" translate="yes" xml:space="preserve">
          <source>If this value to nullptr, the bounding volume of the entity is used. Care must be taken that this bounding volume never becomes invalid.</source>
          <target state="translated">この値をnullptrにすると、エンティティの外接ボリュームが使用されます。このバウンディングボリュームが無効にならないように注意しなければなりません。</target>
        </trans-unit>
        <trans-unit id="1b9ff9f54e32c4c6447460fdd0fe4fc58d670cef" translate="yes" xml:space="preserve">
          <source>If this vector is null, then a null vector is returned. If the length of the vector is very close to 1, then the vector will be returned as-is. Otherwise the normalized form of the vector of length 1 will be returned.</source>
          <target state="translated">このベクトルがNULLの場合、NULLベクトルが返されます。ベクトルの長さが1に非常に近い場合、そのベクトルはそのまま返されます。そうでなければ、長さ1のベクトルの正規化された形が返されます。</target>
        </trans-unit>
        <trans-unit id="1af9c981cc60b8e39478122ba9858df9f6f71b20" translate="yes" xml:space="preserve">
          <source>If this view item is checkable, i.e., ViewItemFeature::HasCheckIndicator is true, &lt;code&gt;checkState&lt;/code&gt; is true if the item is checked; otherwise, it is false.</source>
          <target state="translated">このビューアイテムがチェック可能な場合、つまりViewItemFeature :: &lt;code&gt;checkState&lt;/code&gt; がtrueの場合、アイテムがチェックされている場合、checkStateはtrueです。それ以外の場合はfalseです。</target>
        </trans-unit>
        <trans-unit id="8cf301d55d9e51c75f6280fd5a29d08ad107d1fe" translate="yes" xml:space="preserve">
          <source>If this volume was not mounted from a subvolume of a larger filesystem or if the subvolume could not be detected, this function returns an empty byte array.</source>
          <target state="translated">このボリュームが、より大きなファイルシステムのサブボリュームからマウントされていない場合、またはサブボリュームが検出できなかった場合、この関数は空のバイト配列を返します。</target>
        </trans-unit>
        <trans-unit id="ef311f7dc421c384d81389971d02b87b6206c29c" translate="yes" xml:space="preserve">
          <source>If this widget has a layout, the default implementation returns the layout's preferred height. if there is no layout, the default implementation returns -1 indicating that the preferred height does not depend on the width.</source>
          <target state="translated">このウィジェットにレイアウトがある場合、デフォルトの実装はレイアウトの優先される高さを返します。レイアウトがない場合、デフォルトの実装は優先される高さが幅に依存しないことを示す -1 を返します。</target>
        </trans-unit>
        <trans-unit id="0ffec507a5615d842ae9e35d2f4b30ab9324a37a" translate="yes" xml:space="preserve">
          <source>If this widget is currently managed by a layout, this function notifies the layout that the widget's size hints have changed and the layout may need to resize and reposition the widget accordingly.</source>
          <target state="translated">このウィジェットが現在レイアウトによって管理されている場合、この関数はウィジェットのサイズヒントが変更されたことをレイアウトに通知します。</target>
        </trans-unit>
        <trans-unit id="deb9ccc0b5e466e9dd4b4bcd82150cd34b0b1599" translate="yes" xml:space="preserve">
          <source>If this widget, a child or descendant of this widget currently has input focus, this function will return a pointer to that widget. If no descendant widget has input focus, &lt;code&gt;nullptr&lt;/code&gt; is returned.</source>
          <target state="translated">このウィジェット、このウィジェットの子または子孫が現在入力フォーカスを持っている場合、この関数はそのウィジェットへのポインターを返します。子孫ウィジェットに入力フォーカスがない場合、 &lt;code&gt;nullptr&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="ae826ae43c7f7d284672ec7997b3e9d6b7a2d4d0" translate="yes" xml:space="preserve">
          <source>If those requirements are not met one ore more of the following errors are likely to occur:</source>
          <target state="translated">これらの要件が満たされていない場合、以下のエラーが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="83a8c7ad5f6cb23d01df9dd9eb0c4f8496096c47" translate="yes" xml:space="preserve">
          <source>If thread A and thread B load the variable's old value simultaneously, increment their register, and store it back, they end up overwriting each other, and the variable is incremented only once!</source>
          <target state="translated">スレッドAとスレッドBが同時に変数の古い値をロードし、レジスタをインクリメントして、それを格納し直すと、お互いに上書きされてしまい、変数は一度だけインクリメントされてしまいます!</target>
        </trans-unit>
        <trans-unit id="69de2038d5c75fedf3b59076c123348b0ac74b70" translate="yes" xml:space="preserve">
          <source>If tracking is enabled (the default), the slider emits the &lt;a href=&quot;qabstractslider#valueChanged&quot;&gt;valueChanged&lt;/a&gt;() signal while the slider is being dragged. If tracking is disabled, the slider emits the &lt;a href=&quot;qabstractslider#valueChanged&quot;&gt;valueChanged&lt;/a&gt;() signal only when the user releases the slider.</source>
          <target state="translated">トラッキングが有効になっている場合（デフォルト）、スライダーはドラッグ中に&lt;a href=&quot;qabstractslider#valueChanged&quot;&gt;valueChanged&lt;/a&gt;（）シグナルを発行します。トラッキングが無効になっている場合、ユーザーがスライダーを離したときにのみ、スライダーは&lt;a href=&quot;qabstractslider#valueChanged&quot;&gt;valueChanged&lt;/a&gt;（）シグナルを発行します。</target>
        </trans-unit>
        <trans-unit id="2fe813bb89eb1f8e684d82a8c590244de14f0457" translate="yes" xml:space="preserve">
          <source>If transformation metadata is not supported by the image format, the transform is applied before writing.</source>
          <target state="translated">変換メタデータが画像フォーマットでサポートされていない場合は、書き込み前に変換が適用されます。</target>
        </trans-unit>
        <trans-unit id="87c2eec7ff0fd9a64c44a911b81d33b0c502394b" translate="yes" xml:space="preserve">
          <source>If true the decimal point is drawn between two digit positions. Otherwise it occupies a digit position of its own, i.e. is drawn in a digit position. The default is false.</source>
          <target state="translated">真の場合、小数点は2つの桁位置の間に描画されます。そうでない場合は、それ自身の桁位置を占有し、つまり桁位置に描画されます。デフォルトは false です。</target>
        </trans-unit>
        <trans-unit id="9363d718d389d50aa53a260898f506a5e46192d6" translate="yes" xml:space="preserve">
          <source>If true the text edit shows a cursor.</source>
          <target state="translated">true の場合、テキスト編集はカーソルを表示します。</target>
        </trans-unit>
        <trans-unit id="c54421a03a8d84f52502d03221185b6a54bfd5a5" translate="yes" xml:space="preserve">
          <source>If true then &lt;a href=&quot;qtabbar&quot;&gt;QTabBar&lt;/a&gt; draws a base in relation to the styles overlab. Otherwise only the tabs are drawn.</source>
          <target state="translated">trueの場合、&lt;a href=&quot;qtabbar&quot;&gt;QTabBar&lt;/a&gt;はスタイルオーバーラブに関連してベースを描画します。それ以外の場合は、タブのみが描画されます。</target>
        </trans-unit>
        <trans-unit id="f77ddfdd2a081ae8dd7036dedaf26b2a131a9074" translate="yes" xml:space="preserve">
          <source>If true, affected particles will jump directly to the target group instead of taking the shortest valid path to get there. They will also not finish their current state, but immediately move to the beginning of the goal state.</source>
          <target state="translated">trueの場合、影響を受けたパーティクルは、ターゲットグループに到達するための最短の有効なパスを取らずに、直接ターゲットグループにジャンプします。また、パーティクルは現在の状態を終了せず、すぐに目標の状態の先頭に移動します。</target>
        </trans-unit>
        <trans-unit id="87ae48f730bdbacb8891acec503553ba883309c0" translate="yes" xml:space="preserve">
          <source>If true, affected sprites will jump directly to the goal state instead of taking the shortest valid path to get there. They will also not finish their current state, but immediately move to the beginning of the goal state.</source>
          <target state="translated">もしtrueならば、影響を受けたスプライトは、ゴール状態に到達するために最短の有効な経路を使わずに、直接ゴール状態にジャンプします。また、スプライトは現在の状態を終了せず、すぐにゴールの先頭に移動します。</target>
        </trans-unit>
        <trans-unit id="e14f31c02b5e8161ad6e453e666d875eba466728" translate="yes" xml:space="preserve">
          <source>If true, calling the &lt;a href=&quot;qml-qtmultimedia-audio#seek-method&quot;&gt;seek()&lt;/a&gt; method will cause playback to seek to the new position.</source>
          <target state="translated">trueの場合、&lt;a href=&quot;qml-qtmultimedia-audio#seek-method&quot;&gt;seek（）&lt;/a&gt;メソッドを呼び出すと、再生が新しい位置にシークします。</target>
        </trans-unit>
        <trans-unit id="0e2a44833e164e72e8ed4e671e39489a69ad886b" translate="yes" xml:space="preserve">
          <source>If true, calling the &lt;a href=&quot;qml-qtmultimedia-mediaplayer#seek-method&quot;&gt;seek()&lt;/a&gt; method will cause playback to seek to the new position.</source>
          <target state="translated">trueの場合、&lt;a href=&quot;qml-qtmultimedia-mediaplayer#seek-method&quot;&gt;seek（）&lt;/a&gt;メソッドを呼び出すと、再生が新しい位置にシークします。</target>
        </trans-unit>
        <trans-unit id="6d48c91e05b4b950fbafc2f2f1b9740c12ce5f8b" translate="yes" xml:space="preserve">
          <source>If true, calling the &lt;a href=&quot;qml-qtmultimedia-video#seek-method&quot;&gt;seek()&lt;/a&gt; method will cause playback to seek to the new position.</source>
          <target state="translated">trueの場合、&lt;a href=&quot;qml-qtmultimedia-video#seek-method&quot;&gt;seek（）&lt;/a&gt;メソッドを呼び出すと、再生が新しい位置にシークします。</target>
        </trans-unit>
        <trans-unit id="ea47b3186db45c9a348c54ad710083e01ac72d44" translate="yes" xml:space="preserve">
          <source>If true, directories are included in the model; otherwise only files are included.</source>
          <target state="translated">trueの場合、ディレクトリがモデルに含まれ、そうでない場合はファイルのみが含まれます。</target>
        </trans-unit>
        <trans-unit id="519f75663f366cd0b741f4bae7a8ee2414a588d9" translate="yes" xml:space="preserve">
          <source>If true, files are included in the model; otherwise only directories are included.</source>
          <target state="translated">trueの場合、ファイルがモデルに含まれ、そうでない場合はディレクトリのみが含まれます。</target>
        </trans-unit>
        <trans-unit id="07986e8bdf3da1e6c7d93cf9e26fc92364592901" translate="yes" xml:space="preserve">
          <source>If true, hidden files and directories are included in the model; otherwise they are excluded.</source>
          <target state="translated">trueの場合、隠しファイルとディレクトリはモデルに含まれ、そうでない場合は除外されます。</target>
        </trans-unit>
        <trans-unit id="4066953a40bd0f9690049626bc8d4661eb194a61" translate="yes" xml:space="preserve">
          <source>If true, if directories are included in the model they will always be shown first, then the files.</source>
          <target state="translated">trueの場合、ディレクトリがモデルに含まれている場合、常に最初に表示され、次にファイルが表示されます。</target>
        </trans-unit>
        <trans-unit id="77c893993cc6d54289cdf29571b831d58af82641" translate="yes" xml:space="preserve">
          <source>If true, interpolation will occur between sprite frames to make the animation appear smoother.</source>
          <target state="translated">trueの場合、スプライトフレーム間で補間が行われ、アニメーションがよりスムーズに見えるようになります。</target>
        </trans-unit>
        <trans-unit id="9627abef39738f22bb71420356025593d412c45e" translate="yes" xml:space="preserve">
          <source>If true, only readable files and directories are shown; otherwise all files and directories are shown.</source>
          <target state="translated">true の場合、読み取り可能なファイルとディレクトリのみが表示され、そうでない場合はすべてのファイルとディレクトリが表示されます。</target>
        </trans-unit>
        <trans-unit id="d3c8ed1339e32495bdf91c4a5c8ffc0973812dc3" translate="yes" xml:space="preserve">
          <source>If true, the &quot;.&quot; and &quot;..&quot; directories are included in the model; otherwise they are excluded.</source>
          <target state="translated">真の場合、&quot;.&quot; と &quot;...&quot; ディレクトリはモデルに含まれ、そうでない場合は除外されます。</target>
        </trans-unit>
        <trans-unit id="99cef708df110b3efce9af42eb5f128fb1370f6c" translate="yes" xml:space="preserve">
          <source>If true, the action will auto repeat when the keyboard shortcut combination is held down, provided that keyboard auto repeat is enabled on the system. The default value is true.</source>
          <target state="translated">trueの場合、システムでキーボードの自動リピートが有効になっている場合、キーボードショートカットの組み合わせを押し続けると、アクションが自動的に繰り返されます。既定値は true です。</target>
        </trans-unit>
        <trans-unit id="072e1bfaaef7ac1be9a7d88fde2a8c2e5216a413" translate="yes" xml:space="preserve">
          <source>If true, the item will automatically be faded in and out at the ends of its lifetime. If false, you will have to implement any entry effect yourself.</source>
          <target state="translated">trueの場合、アイテムの寿命が尽きると自動的にフェードイン、フェードアウトします。falseの場合は、エントリ効果を自分で実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="9d0361c07174b2e943b151f6e2a3093d1498a8aa" translate="yes" xml:space="preserve">
          <source>If true, the shortcut will auto repeat when the keyboard shortcut combination is held down, provided that keyboard auto repeat is enabled on the system. The default value is true.</source>
          <target state="translated">true の場合、システムでキーボードの自動リピートが有効になっている場合、キーボードショートカットの組み合わせを押したままにすると、ショートカットが自動リピートされます。既定値は true です。</target>
        </trans-unit>
        <trans-unit id="c55743c8928e6b2bf356819a6ba89c86403bf66b" translate="yes" xml:space="preserve">
          <source>If true, the tab bar is automatically hidden when it contains less than 2 tabs.</source>
          <target state="translated">true の場合、タブバーの数が 2 つ以下の場合、タブバーは自動的に非表示になります。</target>
        </trans-unit>
        <trans-unit id="d1558ec7298db42eff1fc61ae4598cf6b8318137" translate="yes" xml:space="preserve">
          <source>If true, the user can use the keyboard to select text even if the editor is read-only. If false, the user cannot use the keyboard to select text even if the editor is editable.</source>
          <target state="translated">true の場合、エディタが読み取り専用であってもキーボードを使用してテキストを選択できます。falseの場合、エディタが編集可能な場合でも、キーボードを使用してテキストを選択することはできません。</target>
        </trans-unit>
        <trans-unit id="636af586df45cf9846fb475d828a461a230be19e" translate="yes" xml:space="preserve">
          <source>If true, the user can use the mouse to select text in some platform-specific way. Note that for some platforms this may not be an appropriate interaction (it may conflict with how the text needs to behave inside a &lt;a href=&quot;qml-qtquick-flickable&quot;&gt;Flickable&lt;/a&gt;, for example).</source>
          <target state="translated">trueの場合、ユーザーはマウスを使用して、プラットフォーム固有の方法でテキストを選択できます。一部のプラットフォームでは、これは適切な相互作用ではない可能性があることに注意してください（たとえば、テキストが&lt;a href=&quot;qml-qtquick-flickable&quot;&gt;Flickable&lt;/a&gt;内で動作する方法と競合する可能性があります）。</target>
        </trans-unit>
        <trans-unit id="bc63c69ac9fa5951541e8a4527199b0caefa24e6" translate="yes" xml:space="preserve">
          <source>If true, the user can use the mouse to select text in some platform-specific way. Note that for some platforms this may not be an appropriate interaction; it may conflict with how the text needs to behave inside a Flickable, for example.</source>
          <target state="translated">true の場合、ユーザーはマウスを使ってプラットフォーム固有の方法でテキストを選択することができます。プラットフォームによっては、これが適切なインタラクションではない場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="08720e1d29cb49edb317c255966ebbaf14f6da0c" translate="yes" xml:space="preserve">
          <source>If true, then the animation will be played in reverse.</source>
          <target state="translated">true の場合、アニメーションは逆に再生されます。</target>
        </trans-unit>
        <trans-unit id="e19fd3950179344f0e0b09195c5972afecc82f56" translate="yes" xml:space="preserve">
          <source>If true, then the animation will have no duration. Instead, the animation will advance one frame each time a frame is rendered to the screen. This synchronizes it with the painting rate as opposed to elapsed time.</source>
          <target state="translated">trueの場合、アニメーションには持続時間がありません。その代わり、アニメーションはフレームがスクリーンにレンダリングされるたびに1フレーム進みます。これは、経過時間とは対照的に、描画速度と同期します。</target>
        </trans-unit>
        <trans-unit id="b6acc5d1e93dc0a9e040a2a88ed1a56888b811c1" translate="yes" xml:space="preserve">
          <source>If true, then the animation will start its first animation with a random amount of its duration skipped. This allows them to not look like they all just started when the animation begins.</source>
          <target state="translated">trueの場合、アニメーションは、その持続時間がランダムにスキップされた状態で最初のアニメーションを開始します。これにより、アニメーションが始まったときに、それらがすべて始まったように見えないようにすることができます。</target>
        </trans-unit>
        <trans-unit id="2c608cf24035c4df8ec8e6da85ae804f48c24e37" translate="yes" xml:space="preserve">
          <source>If true, then the current tab is automatically changed when dragging over the tabbar.</source>
          <target state="translated">true の場合、タブバーの上をドラッグしたときに現在のタブが自動的に変更されます。</target>
        </trans-unit>
        <trans-unit id="edefc7bc483a0bac748a69c6754b5302eaee2bdc" translate="yes" xml:space="preserve">
          <source>If true, then the value of magnitude and &lt;a href=&quot;qml-qtquick-particles-targetdirection#magnitudeVariation-prop&quot;&gt;magnitudeVariation&lt;/a&gt; shall be interpreted as multiples of the distance between the source point and the target point, per second.</source>
          <target state="translated">trueの場合、magnitudeと&lt;a href=&quot;qml-qtquick-particles-targetdirection#magnitudeVariation-prop&quot;&gt;itudeVariationの&lt;/a&gt;値は、1秒あたりのソースポイントとターゲットポイント間の距離の倍数として解釈されます。</target>
        </trans-unit>
        <trans-unit id="bba7e28a5506481feef90cba2ff52c4d5ee57976" translate="yes" xml:space="preserve">
          <source>If true, wrapping is enabled; otherwise some space is inserted at the bottom of the dial to separate the ends of the range of valid values.</source>
          <target state="translated">true の場合、ラッピングが有効になります。そうでない場合は、有効な値の範囲の両端を区切るために、ダイヤルの下部にスペースが挿入されます。</target>
        </trans-unit>
        <trans-unit id="4f3b55b01365a01150bdd3683f551b3e3b0e852a" translate="yes" xml:space="preserve">
          <source>If truncation occurs any selected text will be unselected, the cursor position is set to 0 and the first part of the string is shown.</source>
          <target state="translated">切り捨てが発生した場合、選択されたテキストは選択解除され、カーソル位置は0に設定され、文字列の最初の部分が表示されます。</target>
        </trans-unit>
        <trans-unit id="2b8b91c6eaa2516686ca8c59e69344d174677978" translate="yes" xml:space="preserve">
          <source>If two pixmaps are inserted into the cache using equal keys then the last pixmap will replace the first pixmap in the cache. This follows the behavior of the &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; and &lt;a href=&quot;qcache&quot;&gt;QCache&lt;/a&gt; classes.</source>
          <target state="translated">等しいキーを使用して2つのピックスマップがキャッシュに挿入されると、最後のピックスマップがキャッシュ内の最初のピックスマップを置き換えます。これは、の動作は以下の&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;と&lt;a href=&quot;qcache&quot;&gt;QCache&lt;/a&gt;クラスを。</target>
        </trans-unit>
        <trans-unit id="4ad83344b3bf3b576b64b6a4417e9818f086ed03" translate="yes" xml:space="preserve">
          <source>If two visible popups have the same z-value, the last one that was opened will be on top.</source>
          <target state="translated">表示されている 2 つのポップアップの z 値が同じ場合、最後に開いたものが上になります。</target>
        </trans-unit>
        <trans-unit id="092eee05ab6c42af29cb5a3f9a0b1c6eebb144f5" translate="yes" xml:space="preserve">
          <source>If type is DelimitorTab; tab until this char is found in the text.</source>
          <target state="translated">タイプが DelimitorTab の場合は、この文字がテキストに見つかるまでタブします。</target>
        </trans-unit>
        <trans-unit id="c14ebe39cde7fb63a7339dcf44b821bc27523b14" translate="yes" xml:space="preserve">
          <source>If undefined or unsupported values are passed to &lt;a href=&quot;qcameraviewfindersettingscontrol2#setViewfinderSettings&quot;&gt;QCameraViewfinderSettingsControl2::setViewfinderSettings&lt;/a&gt;(), this function returns the actual settings used by the camera viewfinder. These may be available only once the camera is active.</source>
          <target state="translated">未定義またはサポートされていない値が&lt;a href=&quot;qcameraviewfindersettingscontrol2#setViewfinderSettings&quot;&gt;QCameraViewfinderSettingsControl2 :: setViewfinderSettings&lt;/a&gt;（）に渡された場合、この関数はカメラのビューファインダーが使用する実際の設定を返します。これらは、カメラがアクティブになったときにのみ使用できる場合があります。</target>
        </trans-unit>
        <trans-unit id="38f2be60a4c75084de2e3377c072fa13a28e8741" translate="yes" xml:space="preserve">
          <source>If unset, Wander will not affect x values.</source>
          <target state="translated">設定されていない場合、Wanderはxの値に影響を与えません。</target>
        </trans-unit>
        <trans-unit id="306c443b24eb59d8ccec79d90ad71463738d2db9" translate="yes" xml:space="preserve">
          <source>If unset, Wander will not affect y values.</source>
          <target state="translated">設定されていない場合、Wanderはy値に影響を与えません。</target>
        </trans-unit>
        <trans-unit id="82fab8872a62aaba7cd627a5648ce295dae09a7a" translate="yes" xml:space="preserve">
          <source>If unset, or if a null &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; is set, this property has the same value as &lt;a href=&quot;qgraphicsscene#sceneRect-prop&quot;&gt;QGraphicsScene::sceneRect&lt;/a&gt;, and it changes with &lt;a href=&quot;qgraphicsscene#sceneRect-prop&quot;&gt;QGraphicsScene::sceneRect&lt;/a&gt;. Otherwise, the view's scene rect is unaffected by the scene.</source>
          <target state="translated">未設定の場合は、ヌルまたは場合&lt;a href=&quot;qrectf&quot;&gt;QRectFが&lt;/a&gt;設定され、このプロパティは同じ値であり&lt;a href=&quot;qgraphicsscene#sceneRect-prop&quot;&gt;QGraphicsScene :: sceneRectを&lt;/a&gt;、そしてそれが伴って変化する&lt;a href=&quot;qgraphicsscene#sceneRect-prop&quot;&gt;QGraphicsScene :: sceneRect&lt;/a&gt;。それ以外の場合、ビューのシーンの四角形はシーンの影響を受けません。</target>
        </trans-unit>
        <trans-unit id="e83f7562da52dff91b9d0216d49cc1d402e1305c" translate="yes" xml:space="preserve">
          <source>If unset, or if set to a null &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;, sceneRect() will return the largest bounding rect of all items on the scene since the scene was created (i.e., a rectangle that grows when items are added to or moved in the scene, but never shrinks).</source>
          <target state="translated">設定されていない場合、またはnullの&lt;a href=&quot;qrectf&quot;&gt;QRectFに&lt;/a&gt;設定されている場合、sceneRect（）は、シーンが作成されてからのシーン上のすべてのアイテムの最大の境界の四角形を返します（つまり、アイテムがシーンに追加または移動されると拡大する長方形ですが、縮小することはありません）。</target>
        </trans-unit>
        <trans-unit id="e3e8e1191ccf8bd49afa7c8d764c1aedcfcb386a" translate="yes" xml:space="preserve">
          <source>If unspecified, the system will look for the attribute using the name returned by &lt;a href=&quot;qt3drender-qattribute#defaultPositionAttributeName&quot;&gt;QAttribute::defaultPositionAttributeName&lt;/a&gt;.</source>
          <target state="translated">指定しない場合、システムは&lt;a href=&quot;qt3drender-qattribute#defaultPositionAttributeName&quot;&gt;QAttribute :: defaultPositionAttributeName&lt;/a&gt;によって返された名前を使用して属性を探します。</target>
        </trans-unit>
        <trans-unit id="8fb2bc982d0c7c97238ef0f8598493fb4fa741b7" translate="yes" xml:space="preserve">
          <source>If unspecified, the system will look for the attribute using the name returned by QAttribute::defaultPositionAttributeName.</source>
          <target state="translated">指定されていない場合、システムは QAttribute::defaultPositionAttributeName によって返された名前を使用して属性を探します。</target>
        </trans-unit>
        <trans-unit id="1070ad3d1f3f38156973bf7fa335773eb113cb84" translate="yes" xml:space="preserve">
          <source>If using &lt;a href=&quot;qpagesize#SizeMatchPolicy-enum&quot;&gt;FuzzyMatch&lt;/a&gt; then the point size of the &lt;a href=&quot;qpagesize#PageSizeId-enum&quot;&gt;PageSizeId&lt;/a&gt; returned may not exactly match the</source>
          <target state="translated">使用している場合&lt;a href=&quot;qpagesize#SizeMatchPolicy-enum&quot;&gt;FuzzyMatchを&lt;/a&gt;、その後のポイントサイズ&lt;a href=&quot;qpagesize#PageSizeId-enum&quot;&gt;PageSizeId&lt;/a&gt;返されたが、正確に一致しない場合があります</target>
        </trans-unit>
        <trans-unit id="73acba8b7996ac864e6a99b35a7604ff8e80a9a7" translate="yes" xml:space="preserve">
          <source>If using &lt;a href=&quot;qpagesize#SizeMatchPolicy-enum&quot;&gt;FuzzyMatch&lt;/a&gt; then the unit size of the &lt;a href=&quot;qpagesize#PageSizeId-enum&quot;&gt;PageSizeId&lt;/a&gt; returned may not exactly match the</source>
          <target state="translated">使用している場合&lt;a href=&quot;qpagesize#SizeMatchPolicy-enum&quot;&gt;FuzzyMatchを&lt;/a&gt;、その後のユニットサイズ&lt;a href=&quot;qpagesize#PageSizeId-enum&quot;&gt;PageSizeId&lt;/a&gt;返されたが、正確に一致しない場合があります</target>
        </trans-unit>
        <trans-unit id="fff58ec642a6bc6a5dd10ba387da5a4a85c71c9e" translate="yes" xml:space="preserve">
          <source>If using &lt;a href=&quot;qspinbox#prefix-prop&quot;&gt;prefix&lt;/a&gt;(), &lt;a href=&quot;qspinbox#suffix-prop&quot;&gt;suffix&lt;/a&gt;(), and &lt;a href=&quot;qabstractspinbox#specialValueText-prop&quot;&gt;specialValueText&lt;/a&gt;() don't provide enough control, you subclass &lt;a href=&quot;qspinbox&quot;&gt;QSpinBox&lt;/a&gt; and reimplement &lt;a href=&quot;qspinbox#valueFromText&quot;&gt;valueFromText&lt;/a&gt;() and &lt;a href=&quot;qspinbox#textFromValue&quot;&gt;textFromValue&lt;/a&gt;(). For example, here's the code for a custom spin box that allows the user to enter icon sizes (e.g., &quot;32 x 32&quot;):</source>
          <target state="translated">使用している場合&lt;a href=&quot;qspinbox#prefix-prop&quot;&gt;、プレフィックスを&lt;/a&gt;（）、&lt;a href=&quot;qspinbox#suffix-prop&quot;&gt;サフィックス&lt;/a&gt;（）、および&lt;a href=&quot;qabstractspinbox#specialValueText-prop&quot;&gt;specialValueTextは&lt;/a&gt;（）に十分な制御を提供していない、あなたのサブクラス&lt;a href=&quot;qspinbox&quot;&gt;QSpinBox&lt;/a&gt;と再実装&lt;a href=&quot;qspinbox#valueFromText&quot;&gt;valueFromText&lt;/a&gt;（）と&lt;a href=&quot;qspinbox#textFromValue&quot;&gt;textFromValue&lt;/a&gt;（）。たとえば、次のコードは、ユーザーがアイコンのサイズ（たとえば、「32 x 32」）を入力できるようにするカスタムスピンボックスのコードです。</target>
        </trans-unit>
        <trans-unit id="6f9a2697f68ce8c6fa3506d69c793884b3323abb" translate="yes" xml:space="preserve">
          <source>If using a compressed &lt;a href=&quot;qopengltexture#format&quot;&gt;format&lt;/a&gt;() then you should use &lt;a href=&quot;qopengltexture#setCompressedData&quot;&gt;setCompressedData&lt;/a&gt;() instead of this function.</source>
          <target state="translated">圧縮&lt;a href=&quot;qopengltexture#format&quot;&gt;形式&lt;/a&gt;（）を使用する場合は、この関数の代わりに&lt;a href=&quot;qopengltexture#setCompressedData&quot;&gt;setCompressedData&lt;/a&gt;（）を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="df175fa34fc6197b1820a44997ba2a76099c4b06" translate="yes" xml:space="preserve">
          <source>If using a custom surface format, the stencil buffer needs to be defined (&lt;a href=&quot;qsurfaceformat#setStencilBufferSize&quot;&gt;QSurfaceFormat::setStencilBufferSize&lt;/a&gt;()) for reflections to work.</source>
          <target state="translated">カスタムサーフェスフォーマットを使用している場合、反射が機能するには、ステンシルバッファーを定義する必要があります（&lt;a href=&quot;qsurfaceformat#setStencilBufferSize&quot;&gt;QSurfaceFormat :: setStencilBufferSize&lt;/a&gt;（））。</target>
        </trans-unit>
        <trans-unit id="f3b110129af5a9dbb532995d4abc5ee3ccc7010c" translate="yes" xml:space="preserve">
          <source>If using a texture that has a combined depth/stencil format this function sets which component of the texture is accessed to</source>
          <target state="translated">デプス/ステンシルフォーマットを組み合わせたテクスチャを使用している場合、この関数はテクスチャのどのコンポーネントにアクセスするかを設定します。</target>
        </trans-unit>
        <trans-unit id="d6ee08be27dd8ca1920b92a691492f1c00d26efa" translate="yes" xml:space="preserve">
          <source>If using multiple properties from a group of properties, consider using</source>
          <target state="translated">プロパティのグループから複数のプロパティを使用する場合は</target>
        </trans-unit>
        <trans-unit id="e598f0c143d34e93e28eb5bd7333fca1c29dc471" translate="yes" xml:space="preserve">
          <source>If using the assets mechanism is not required for your app, the recommended way of distributing resources with your Qt app is to use &lt;a href=&quot;resources&quot;&gt;The Qt Resource System&lt;/a&gt;, which is a cross-platform mechanism for distributing resources with your app.</source>
          <target state="translated">アプリでアセットメカニズムを使用する必要がない場合、Qtアプリでリソースを配布するための推奨される方法は、&lt;a href=&quot;resources&quot;&gt;Qtリソースシステム&lt;/a&gt;を使用することです。これは、アプリでリソースを配布するためのクロスプラットフォームメカニズムです。</target>
        </trans-unit>
        <trans-unit id="982abf038d3106d3150c19907a420813ef6c1e96" translate="yes" xml:space="preserve">
          <source>If viewfinder settings are not supported by the camera, it always returns a null &lt;a href=&quot;qcameraviewfindersettings&quot;&gt;QCameraViewfinderSettings&lt;/a&gt; object.</source>
          <target state="translated">カメラがビューファインダー設定をサポートしていない場合は、常にnullの&lt;a href=&quot;qcameraviewfindersettings&quot;&gt;QCameraViewfinderSettings&lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="994197ed75e3b5bc756c922271b51a071f942854" translate="yes" xml:space="preserve">
          <source>If we add a mutex, we should get the result we want:</source>
          <target state="translated">mutexを追加すれば、望む結果が得られるはずです。</target>
        </trans-unit>
        <trans-unit id="f511b0976d2c3e4b5c7087d4ba09c724e0a080fa" translate="yes" xml:space="preserve">
          <source>If we added a third property (say, Red vs Blue), the total number of states would double, to eight; and if we added a fourth property (say, Enclosed vs Convertible), the total number of states would double again, to 16.</source>
          <target state="translated">第3のプロパティ(例えば、赤と青)を追加すると、状態の総数は2倍の8つになり、第4のプロパティ(例えば、密閉型と転換型)を追加すると、状態の総数は再び2倍の16つになります。</target>
        </trans-unit>
        <trans-unit id="69c3920a0228de0571627a90e5da1a716ec512d5" translate="yes" xml:space="preserve">
          <source>If we apply stretch factors to each widget, they will be laid out in proportion (but never less than their minimum size hint), e.g.</source>
          <target state="translated">各ウィジェットにストレッチファクターを適用すると、それらは比例してレイアウトされます(ただし、最小サイズのヒントよりも小さくなることはありません)。</target>
        </trans-unit>
        <trans-unit id="391d5d3c94c88dfbfc5db8acaebe6629e44596f9" translate="yes" xml:space="preserve">
          <source>If we are using nested states, the parent defines a value for the property which is inherited by all descendants that do not explicitly assign a value to the property.</source>
          <target state="translated">入れ子になった状態を使用している場合、親はプロパティの値を定義し、そのプロパティに明示的に値を代入していないすべての子孫に継承されます。</target>
        </trans-unit>
        <trans-unit id="ddadac7ff808aedab2554bcc0c9e740eda355b10" translate="yes" xml:space="preserve">
          <source>If we continue our analogy with Web services, object paths equate to the path part of a URL:</source>
          <target state="translated">Webサービスへの類推を続けると、オブジェクトパスはURLのパス部分に相当します。</target>
        </trans-unit>
        <trans-unit id="0f1c1a3d2c9d206d7de9af864589670478b3e1fb" translate="yes" xml:space="preserve">
          <source>If we did provide an identifier then we could retrieve a category's children.</source>
          <target state="translated">もし識別子を提供していれば、カテゴリの子を取得することができます。</target>
        </trans-unit>
        <trans-unit id="135904c55ac8fbe0fcd1f240a70a644d44dc854a" translate="yes" xml:space="preserve">
          <source>If we don't provide a copy constructor or an assignment operator, C++ provides a default implementation that performs a member-by-member copy. In the example above, that would have been sufficient. Also, if you don't provide any constructors, C++ provides a default constructor that initializes its member using default constructors. Although it doesn't provide any explicit constructors or assignment operator, the following data type can be stored in a container:</source>
          <target state="translated">コピー コンストラクタや代入演算子を提供しない場合、C++ではメンバーごとのコピーを実行するデフォルトの実装が用意されています。上の例では、これで十分でした。また、コンストラクタを何も提供しない場合、C++はデフォルトのコンストラクタを使用してメンバを初期化するデフォルトのコンストラクタを提供しています。明示的なコンストラクタや代入演算子は提供されていませんが、以下のようなデータ型をコンテナに格納することができます。</target>
        </trans-unit>
        <trans-unit id="939f9c417675fdc58025672643465c1600ac04b7" translate="yes" xml:space="preserve">
          <source>If we had done it that way here, the copy constructor shown would be required. Since the copy constructor is trivial, you might as well just always include it.</source>
          <target state="translated">ここでそのようにしていたら、示されたコピーコンストラクタが必要になります。コピーコンストラクタは些細なものなので、常にインクルードしておいた方が良いかもしれません。</target>
        </trans-unit>
        <trans-unit id="92e2cea0383d5d45395f6838ba2705436aba982b" translate="yes" xml:space="preserve">
          <source>If we have three widgets laid out using a &lt;a href=&quot;qhboxlayout&quot;&gt;QHBoxLayout&lt;/a&gt; with no stretch factors set we will get a layout like this:</source>
          <target state="translated">ストレッチファクターが設定されていない&lt;a href=&quot;qhboxlayout&quot;&gt;QHBoxLayout&lt;/a&gt;を使用してレイアウトされた3つのウィジェットがある場合、次のようなレイアウトになります。</target>
        </trans-unit>
        <trans-unit id="b5bec29f2afa07f4a58155b5f58351c6a2ff7836" translate="yes" xml:space="preserve">
          <source>If we instead used the corresponding type from the &lt;a href=&quot;qtquickcontrols-index#&quot;&gt;QtQuick.Controls&lt;/a&gt; import as we did in the previous section, it would not work: the control we were defining would try to derive from itself.</source>
          <target state="translated">代わりに、前のセクションで行ったように&lt;a href=&quot;qtquickcontrols-index#&quot;&gt;QtQuick.Controls&lt;/a&gt;インポートの対応する型を使用した場合、機能しません。定義していたコントロールは、それ自体から派生しようとします。</target>
        </trans-unit>
        <trans-unit id="5de420dd5294579c79c00a4e4e06ba39256245db" translate="yes" xml:space="preserve">
          <source>If we just want to modify the value of an existing item, we can use &lt;a href=&quot;qmutablelistiterator#setValue&quot;&gt;setValue()&lt;/a&gt;. In the code below, we replace any value larger than 128 with 128:</source>
          <target state="translated">既存のアイテムの値を変更するだけの場合は、&lt;a href=&quot;qmutablelistiterator#setValue&quot;&gt;setValue（）を&lt;/a&gt;使用できます。以下のコードでは、128より大きい値を128に置き換えます。</target>
        </trans-unit>
        <trans-unit id="56dc8f9c50f5b17baa4ce4c71338e2386c3287f4" translate="yes" xml:space="preserve">
          <source>If we make the logical coordinate system a square, we should also make the viewport a square using the &lt;a href=&quot;qpainter#setViewport&quot;&gt;QPainter::setViewport&lt;/a&gt;() function. In the example above we make it equivalent to the largest square that fit into the paint device's rectangle. By taking the paint device's size into consideration when setting the window or viewport, it is possible to keep the drawing code independent of the paint device.</source>
          <target state="translated">論理座標系を正方形にする場合は、&lt;a href=&quot;qpainter#setViewport&quot;&gt;QPainter :: setViewport&lt;/a&gt;（）関数を使用してビューポートも正方形にする必要があります。上記の例では、ペイントデバイスの長方形に収まる最大の正方形と同等にします。ウィンドウまたはビューポートを設定するときにペイントデバイスのサイズを考慮することにより、描画コードをペイントデバイスから独立させることができます。</target>
        </trans-unit>
        <trans-unit id="e23a5c50007246fc7a836789bb8c7bf034581142" translate="yes" xml:space="preserve">
          <source>If we now compile and run the project we can click on the circle widget to increase its line width, and press the reset button to set the line width back to 1.</source>
          <target state="translated">プロジェクトをコンパイルして実行すると、円ウィジェットをクリックして線幅を増やし、リセットボタンを押して線幅を1に戻すことができます。</target>
        </trans-unit>
        <trans-unit id="dea76d6abb59ae1dba5d6f14e2566e1ea06bae4b" translate="yes" xml:space="preserve">
          <source>If we save that document as &quot;HelloWorld.qml&quot;, we can load and display it.</source>
          <target state="translated">その文書を「HelloWorld.qml」として保存しておけば、読み込んで表示することができます。</target>
        </trans-unit>
        <trans-unit id="d4e43e615e5806e9457bf677576affcd477b41dd" translate="yes" xml:space="preserve">
          <source>If we save the example XQuery shown above in a text file (e.g. &lt;code&gt;myquery.xq&lt;/code&gt;), we can run it from a Qt application using a standard Qt XML Patterns code sequence:</source>
          <target state="translated">上記のサンプルXQueryをテキストファイル（例： &lt;code&gt;myquery.xq&lt;/code&gt; ）に保存すると、標準のQt XMLパターンコードシーケンスを使用してQtアプリケーションから実行できます。</target>
        </trans-unit>
        <trans-unit id="c668140f896257a8ba1337adc7c2d1f236b8c6d4" translate="yes" xml:space="preserve">
          <source>If we want the stream operators &lt;code&gt;operator&amp;lt;&amp;lt;()&lt;/code&gt; and &lt;code&gt;operator&amp;gt;&amp;gt;()&lt;/code&gt; to work on &lt;a href=&quot;qmetatype#Type-enum&quot;&gt;QVariant&lt;/a&gt; objects that store custom types, the custom type must provide &lt;code&gt;operator&amp;lt;&amp;lt;()&lt;/code&gt; and &lt;code&gt;operator&amp;gt;&amp;gt;()&lt;/code&gt; operators.</source>
          <target state="translated">ストリーム演算子 &lt;code&gt;operator&amp;lt;&amp;lt;()&lt;/code&gt; および &lt;code&gt;operator&amp;gt;&amp;gt;()&lt;/code&gt; がカスタムタイプを格納する&lt;a href=&quot;qmetatype#Type-enum&quot;&gt;QVariant&lt;/a&gt;オブジェクトで機能するようにする場合、カスタムタイプは &lt;code&gt;operator&amp;lt;&amp;lt;()&lt;/code&gt; および &lt;code&gt;operator&amp;gt;&amp;gt;()&lt;/code&gt; 演算子を提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="f03c51cf5d11dac6ddaa2a52fb2ca9deddaeea5f" translate="yes" xml:space="preserve">
          <source>If we want to count all the occurrences of 'Eric' and 'Eirik' in a string, two valid solutions are &lt;b&gt;\b(Eric|Eirik)\b&lt;/b&gt; and &lt;b&gt;\bEi?ri[ck]\b&lt;/b&gt;. The word boundary assertion '\b' is required to avoid matching words that contain either name, e.g. 'Ericsson'. Note that the second regexp matches more spellings than we want: 'Eric', 'Erik', 'Eiric' and 'Eirik'.</source>
          <target state="translated">文字列内の「Eric」と「Eirik」のすべての出現をカウントする場合、2つの有効なソリューションは&lt;b&gt;\ b（Eric | Eirik）\ b&lt;/b&gt;と&lt;b&gt;\ bEi？ri [ck] \ b&lt;/b&gt;です。単語境界アサーション '\ b'は、 'Ericsson'などのいずれかの名前を含む単語の一致を回避するために必要です。2番目の正規表現は、「Eric」、「Erik」、「Eiric」、「Eirik」など、必要以上のスペルに一致することに注意してください。</target>
        </trans-unit>
        <trans-unit id="228813af00250292acc7d372590bf0870f0a379b" translate="yes" xml:space="preserve">
          <source>If we want to iterate through all the items with the same value, we can use &lt;a href=&quot;qmapiterator#findNext&quot;&gt;findNext()&lt;/a&gt; or &lt;a href=&quot;qmapiterator#findPrevious&quot;&gt;findPrevious()&lt;/a&gt;. Here's an example where we remove all the items with a particular value:</source>
          <target state="translated">同じ値を持つすべての項目を反復処理する場合は、&lt;a href=&quot;qmapiterator#findNext&quot;&gt;findNext（）&lt;/a&gt;または&lt;a href=&quot;qmapiterator#findPrevious&quot;&gt;findPrevious（）を&lt;/a&gt;使用できます。以下は、特定の値を持つすべてのアイテムを削除する例です。</target>
        </trans-unit>
        <trans-unit id="62dccd109997265b265acb7a29596b2ebf981557" translate="yes" xml:space="preserve">
          <source>If we want to replace ampersand characters with the HTML entity &lt;b&gt;&amp;amp;amp;&lt;/b&gt;, the regexp to match is simply &lt;b&gt;&amp;amp;&lt;/b&gt;. But this regexp will also match ampersands that have already been converted to HTML entities. We want to replace only ampersands that are not already followed by &lt;b&gt;amp;&lt;/b&gt;. For this, we need the negative lookahead assertion, &lt;b&gt;(?!&lt;/b&gt;__&lt;b&gt;)&lt;/b&gt;. The regexp can then be written as &lt;b&gt;&amp;amp;(?!amp;)&lt;/b&gt;, i.e.</source>
          <target state="translated">アンパサンド文字をHTMLエンティティ&lt;b&gt;＆amp;&lt;/b&gt;に置き換える場合 、一致する正規表現は単純に&lt;b&gt;＆&lt;/b&gt;です。ただし、この正規表現は、すでにHTMLエンティティに変換されているアンパサンドにも一致します。まだ&lt;b&gt;amp&lt;/b&gt;が付いていないアンパサンドのみを置き換え&lt;b&gt;ます。&lt;/b&gt;。これには、否定的な先読みアサーション&lt;b&gt;（？！&lt;/b&gt; __ &lt;b&gt;）&lt;/b&gt;が必要&lt;b&gt;です&lt;/b&gt;。正規表現は&lt;b&gt;＆（?! amp;）&lt;/b&gt;と書くことができ&lt;b&gt;ます。&lt;/b&gt;つまり、</target>
        </trans-unit>
        <trans-unit id="4208ebd6956f11ebfad60161063794f89f5db08f" translate="yes" xml:space="preserve">
          <source>If we want to use parentheses purely for grouping and not for capturing we can use the non-capturing syntax, e.g. &lt;b&gt;(?:green|blue)&lt;/b&gt;. Non-capturing parentheses begin '(?:' and end ')'. In this example we match either 'green' or 'blue' but we do not capture the match so we only know whether or not we matched but not which color we actually found. Using non-capturing parentheses is more efficient than using capturing parentheses since the regexp engine has to do less book-keeping.</source>
          <target state="translated">括弧を純粋にグループ化のために使用し、キャプチャのために使用したくない場合は、非キャプチャ構文を使用できます（例&lt;b&gt;：（？：green | blue））&lt;/b&gt;。キャプチャしない括弧は '（？：'で始まり、 '）'で終わります。この例では、「緑」または「青」のいずれかと一致しますが、一致はキャプチャされないため、一致したかどうかだけがわかりますが、実際に見つかった色はわかりません。正規表現エンジンが簿記を少なくする必要があるため、非キャプチャ括弧の使用はキャプチャ括弧の使用よりも効率的です。</target>
        </trans-unit>
        <trans-unit id="32198f4e4bde30e9720192f732eea0d71ba088ab" translate="yes" xml:space="preserve">
          <source>If wrap is &lt;code&gt;true&lt;/code&gt;, stepping past &lt;a href=&quot;qml-qtquick-controls2-spinbox#to-prop&quot;&gt;to&lt;/a&gt; changes the value to &lt;a href=&quot;qml-qtquick-controls2-spinbox#from-prop&quot;&gt;from&lt;/a&gt; and vice versa.</source>
          <target state="translated">wrapが &lt;code&gt;true&lt;/code&gt; の場合、次のステップに進むと値が&lt;a href=&quot;qml-qtquick-controls2-spinbox#from-prop&quot;&gt;fromに&lt;/a&gt;、またはその逆&lt;a href=&quot;qml-qtquick-controls2-spinbox#to-prop&quot;&gt;に&lt;/a&gt;変更されます。</target>
        </trans-unit>
        <trans-unit id="7d8ba470d02c9e9cab21333de5c72425c862d14e" translate="yes" xml:space="preserve">
          <source>If wrapping is true stepping up from maximum() value will take you to the minimum() value and vice versa. Wrapping only make sense if you have minimum() and maximum() values set.</source>
          <target state="translated">ラッピングが true の場合、maximum()の値からステップアップすると、minimum()の値に移動し、その逆もまた然りです。ラッピングは、最小値()と最大値()が設定されている場合にのみ意味を持ちます。</target>
        </trans-unit>
        <trans-unit id="69b99beed73cd180056131c452501a77aece7ebb" translate="yes" xml:space="preserve">
          <source>If you access out of bounds, a zero (null object) is returned and a warning is issued.</source>
          <target state="translated">境界外にアクセスした場合は、ゼロ(null オブジェクト)が返され、警告が表示されます。</target>
        </trans-unit>
        <trans-unit id="573e2c289f21af6f9eba01b6f44b050e88e36db5" translate="yes" xml:space="preserve">
          <source>If you add a &lt;a href=&quot;qtoolbutton&quot;&gt;QToolButton&lt;/a&gt; with this method, the toolbar's &lt;a href=&quot;qt#ToolButtonStyle-enum&quot;&gt;Qt::ToolButtonStyle&lt;/a&gt; will not be respected.</source>
          <target state="translated">このメソッドで&lt;a href=&quot;qtoolbutton&quot;&gt;QToolButton&lt;/a&gt;を追加すると、ツールバーの&lt;a href=&quot;qt#ToolButtonStyle-enum&quot;&gt;Qt :: ToolButtonStyle&lt;/a&gt;は考慮されません。</target>
        </trans-unit>
        <trans-unit id="e92974e65bc0cc53ad8104fe86b9f43444f1421e" translate="yes" xml:space="preserve">
          <source>If you add a child widget to an already visible widget you must explicitly show the child to make it visible.</source>
          <target state="translated">既に表示されているウィジェットに子ウィジェットを追加する場合、子ウィジェットを明示的に表示する必要があります。</target>
        </trans-unit>
        <trans-unit id="3ff0ca814fc818ed35bf736e1608d0c88b71b6d6" translate="yes" xml:space="preserve">
          <source>If you already have a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclass and want an easy optimization, you can use &lt;a href=&quot;qbasictimer&quot;&gt;QBasicTimer&lt;/a&gt; instead of &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt;. With &lt;a href=&quot;qbasictimer&quot;&gt;QBasicTimer&lt;/a&gt;, you must reimplement &lt;a href=&quot;qobject#timerEvent&quot;&gt;timerEvent()&lt;/a&gt; in your &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclass and handle the timeout there. The &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-widgets-wiggly-example.html&quot;&gt;Wiggly&lt;/a&gt; example shows how to use &lt;a href=&quot;qbasictimer&quot;&gt;QBasicTimer&lt;/a&gt;.</source>
          <target state="translated">すでに&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;サブクラスがあり、簡単な最適化が必要な場合は、&lt;a href=&quot;qbasictimer&quot;&gt;QTimerの&lt;/a&gt;代わりに&lt;a href=&quot;qtimer&quot;&gt;QBasicTimerを&lt;/a&gt;使用できます。では&lt;a href=&quot;qbasictimer&quot;&gt;QBasicTimer&lt;/a&gt;、あなたは再実装する必要があり&lt;a href=&quot;qobject#timerEvent&quot;&gt;timerEvent（）&lt;/a&gt;自分の中&lt;a href=&quot;qobject&quot;&gt;QObjectの&lt;/a&gt;サブクラスをし、そこにタイムアウトを処理します。&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-widgets-wiggly-example.html&quot;&gt;ウィグリー&lt;/a&gt;例使用する方法を示し&lt;a href=&quot;qbasictimer&quot;&gt;QBasicTimerを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="66dc6e8efe388635cff4d6b8e7b83340b07897e3" translate="yes" xml:space="preserve">
          <source>If you already have a fully defined &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;, it can become a Source simply by passing it to &lt;a href=&quot;qremoteobjecthostbase#enableRemoting&quot;&gt;QRemoteObjectHostBase::enableRemoting&lt;/a&gt;(). This lets other processes/devices create a &lt;a href=&quot;qtremoteobjects-replica#replica&quot;&gt;Replica&lt;/a&gt; of the object to interact with (see &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtremoteobjects-interaction.html#remote-object-interaction&quot;&gt;Remote Object Interaction&lt;/a&gt;). You can then instantiate &lt;a href=&quot;qremoteobjectdynamicreplica&quot;&gt;QRemoteObjectDynamicReplica&lt;/a&gt;s of your object.</source>
          <target state="translated">完全に定義された&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;がすでにある場合は、&lt;a href=&quot;qremoteobjecthostbase#enableRemoting&quot;&gt;QRemoteObjectHostBase :: enableRemoting&lt;/a&gt;（）に渡すだけでSourceになることができます。これにより、他のプロセス/デバイスは、対話するオブジェクトの&lt;a href=&quot;qtremoteobjects-replica#replica&quot;&gt;レプリカ&lt;/a&gt;を作成できます（&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtremoteobjects-interaction.html#remote-object-interaction&quot;&gt;リモートオブジェクトの対話を&lt;/a&gt;参照）。次に、オブジェクトの&lt;a href=&quot;qremoteobjectdynamicreplica&quot;&gt;QRemoteObjectDynamicReplica&lt;/a&gt;をインスタンス化できます。</target>
        </trans-unit>
        <trans-unit id="54dd070f132699b449fced117bece39fae043218" translate="yes" xml:space="preserve">
          <source>If you always use the same file you do not need to use &lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt;.</source>
          <target state="translated">常に同じファイルを使用する場合は、&lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt;を使用する必要はありません。</target>
        </trans-unit>
        <trans-unit id="357d8c8c15072da4629552f4faa8ec4975bbc4f4" translate="yes" xml:space="preserve">
          <source>If you append a built-in install set to the &lt;code&gt;INSTALLS&lt;/code&gt; variable and do not specify &lt;code&gt;files&lt;/code&gt; or &lt;code&gt;extra&lt;/code&gt; members, qmake will decide what needs to be copied for you. Currently, the &lt;code&gt;target&lt;/code&gt; and &lt;code&gt;dlltarget&lt;/code&gt; install sets are supported. For example:</source>
          <target state="translated">組み込みのインストールセットを &lt;code&gt;INSTALLS&lt;/code&gt; 変数に &lt;code&gt;extra&lt;/code&gt; 、 &lt;code&gt;files&lt;/code&gt; や追加のメンバーを指定しない場合、qmakeは何をコピーする必要があるかを決定します。現在、 &lt;code&gt;target&lt;/code&gt; および &lt;code&gt;dlltarget&lt;/code&gt; インストールセットがサポートされています。例えば：</target>
        </trans-unit>
        <trans-unit id="fb4055566f4e21980f25a6697df12ac5c9d286c0" translate="yes" xml:space="preserve">
          <source>If you are building a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; gradually and know in advance approximately how many characters the &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; will contain, you can call &lt;a href=&quot;qstring#reserve&quot;&gt;reserve&lt;/a&gt;(), asking &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; to preallocate a certain amount of memory. You can also call &lt;a href=&quot;qstring#capacity&quot;&gt;capacity&lt;/a&gt;() to find out how much memory &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; actually allocated.</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QStringを&lt;/a&gt;段階的に構築し、&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;に含まれる文字数を事前に把握している場合は、&lt;a href=&quot;qstring#reserve&quot;&gt;reserve&lt;/a&gt;（）を呼び出して、&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;に特定の量のメモリを事前に割り当てるように要求できます。また、&lt;a href=&quot;qstring#capacity&quot;&gt;capacity&lt;/a&gt;（）を呼び出して、&lt;a href=&quot;qstring&quot;&gt;QStringが&lt;/a&gt;実際に割り当てたメモリの量を調べることもできます。</target>
        </trans-unit>
        <trans-unit id="1f69359a3ea41192cfeea7a41e2eda47d527426f" translate="yes" xml:space="preserve">
          <source>If you are calling &lt;a href=&quot;qtooltip#hideText&quot;&gt;QToolTip::hideText&lt;/a&gt;(), or &lt;a href=&quot;qtooltip#showText&quot;&gt;QToolTip::showText&lt;/a&gt;() with an empty string, as a result of a &lt;a href=&quot;qevent#Type-enum&quot;&gt;ToolTip&lt;/a&gt;-event you should also call &lt;a href=&quot;qevent#ignore&quot;&gt;ignore()&lt;/a&gt; on the event, to signal that you don't want to start any tooltip specific modes.</source>
          <target state="translated">あなたが呼び出している場合は&lt;a href=&quot;qtooltip#hideText&quot;&gt;QToolTip :: hideText&lt;/a&gt;（）、または&lt;a href=&quot;qtooltip#showText&quot;&gt;QToolTip :: showText&lt;/a&gt;の結果として空の文字列とを（）、&lt;a href=&quot;qevent#Type-enum&quot;&gt;ツールヒント&lt;/a&gt;あなたも呼び出す必要があり-event &lt;a href=&quot;qevent#ignore&quot;&gt;）（無視&lt;/a&gt;したくないことを知らせるために、イベントにツールチップ固有のモードを開始します。</target>
        </trans-unit>
        <trans-unit id="43e0cbbb5c171786dfe76f3c109568d78c086065" translate="yes" xml:space="preserve">
          <source>If you are calling a function on an &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclass that doesn't live in the current thread and the object might receive events, you must protect all access to your &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclass's internal data with a mutex; otherwise, you may experience crashes or other undesired behavior.</source>
          <target state="translated">現在のスレッドに存在しない&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;サブクラスの関数を呼び出しており、オブジェクトがイベントを受け取る可能性がある場合は、&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;サブクラスの内部データへのすべてのアクセスをミューテックスで保護する必要があります。そうしないと、クラッシュやその他の望ましくない動作が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="8660160035ab2a9f737194b2dbeeab682345d2e7" translate="yes" xml:space="preserve">
          <source>If you are certain the QML file to be loaded is a local file, you could omit the &lt;code&gt;finishCreation()&lt;/code&gt; function and call &lt;a href=&quot;qml-qtqml-component#createObject-method&quot;&gt;createObject()&lt;/a&gt; immediately:</source>
          <target state="translated">あなたがロードするQMLファイルがローカルファイルである特定されている場合は、省略することができ &lt;code&gt;finishCreation()&lt;/code&gt; 関数を呼び出すと、&lt;a href=&quot;qml-qtqml-component#createObject-method&quot;&gt;CREATEOBJECT（）を&lt;/a&gt;すぐに：</target>
        </trans-unit>
        <trans-unit id="66a985357066e965ac0d58d4bd13bc9ea2d8fe59" translate="yes" xml:space="preserve">
          <source>If you are certain you want your variables processed after the files specified, then you may pass the &lt;code&gt;-after&lt;/code&gt; option. When this is specified, all assignments on the command line after the &lt;code&gt;-after&lt;/code&gt; option will be postponed until after the specified files are parsed.</source>
          <target state="translated">指定したファイルの後で変数を処理したい場合は、 &lt;code&gt;-after&lt;/code&gt; オプションを渡すことができます。これが指定されている場合、 &lt;code&gt;-after&lt;/code&gt; オプションの後のコマンドラインでのすべての割り当ては、指定されたファイルが解析されるまで延期されます。</target>
        </trans-unit>
        <trans-unit id="148f7c117f2dde1027fc147e230853f26463b083" translate="yes" xml:space="preserve">
          <source>If you are changing the number of columns or rows you do not need to emit this signal, but use the begin/end functions (refer to the section on subclassing in the &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; class description for details).</source>
          <target state="translated">列または行の数を変更する場合は、この信号を送信する必要はありませんが、開始/終了関数を使用します（詳細については、&lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt;クラスの説明のサブクラス化に関するセクションを参照してください）。</target>
        </trans-unit>
        <trans-unit id="e611044ce802a496de3904731dc8c7df2ec5aa83" translate="yes" xml:space="preserve">
          <source>If you are considering defining a new component, it's worth double checking that such a component doesn't already exist in the component set for your platform. Otherwise, you will be forcing the QML engine to generate and store type-data for a type which is essentially a duplicate of another pre-existing and potentially already loaded component.</source>
          <target state="translated">もし、新しいコンポーネントを定義しようと考えているのであれば、そのようなコンポーネントがそのプラットフォームのコンポーネントセットに既に存在していないことを再確認する価値があります。そうしないと、QMLエンジンに型データを生成して保存することを強いることになり、その型データは既に存在している別のコンポーネントの複製になってしまいます。</target>
        </trans-unit>
        <trans-unit id="a7ed74a89447502632954ce9ef8c44afaaa3bd1a" translate="yes" xml:space="preserve">
          <source>If you are designing an application which changes its layout depending on device orientation, you probably want to use primaryOrientation to determine the layout. That is because on a desktop computer, you can expect primaryOrientation to change when the user rotates the screen via the operating system's control panel, even if the computer does not contain an accelerometer. Likewise on most handheld computers which do have accelerometers, the operating system will rotate the whole screen automatically, so again you will see the primaryOrientation change.</source>
          <target state="translated">デバイスの向きに応じてレイアウトを変更するアプリケーションを設計している場合、おそらくレイアウトを決定するために primaryOrientation を使用したいと思うでしょう。というのも、デスクトップコンピュータでは、加速度センサーを搭載していないコンピュータであっても、オペレーティングシステムのコントロールパネルを介してユーザーが画面を回転させると、primaryOrientationが変化すると予想されるからです。同様に、加速度センサーを搭載しているほとんどの携帯型コンピュータでは、オペレーティングシステムが自動的に画面全体を回転させるため、primaryOrientationが変化します。</target>
        </trans-unit>
        <trans-unit id="a838ab048609c1ff2f968e68271c83f70b5950b3" translate="yes" xml:space="preserve">
          <source>If you are developing custom widgets and want them to look good on all platforms, you can use &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; functions to perform parts of the widget drawing, such as &lt;a href=&quot;qstyle#drawItemText&quot;&gt;drawItemText&lt;/a&gt;(), &lt;a href=&quot;qstyle#drawItemPixmap&quot;&gt;drawItemPixmap&lt;/a&gt;(), &lt;a href=&quot;qstyle#drawPrimitive&quot;&gt;drawPrimitive&lt;/a&gt;(), &lt;a href=&quot;qstyle#drawControl&quot;&gt;drawControl&lt;/a&gt;(), and &lt;a href=&quot;qstyle#drawComplexControl&quot;&gt;drawComplexControl&lt;/a&gt;().</source>
          <target state="translated">カスタムウィジェットを開発し、それらはすべてのプラットフォーム上での良いを見てみたいしている場合は、使用することができ&lt;a href=&quot;qstyle&quot;&gt;QStyleの&lt;/a&gt;ようなウィジェットの描画の部分、実行するための機能を&lt;a href=&quot;qstyle#drawItemText&quot;&gt;drawItemText&lt;/a&gt;（）、&lt;a href=&quot;qstyle#drawItemPixmap&quot;&gt;drawItemPixmap&lt;/a&gt;（）、&lt;a href=&quot;qstyle#drawPrimitive&quot;&gt;drawPrimitive&lt;/a&gt;（）、&lt;a href=&quot;qstyle#drawControl&quot;&gt;drawControl&lt;/a&gt;（）、および&lt;a href=&quot;qstyle#drawComplexControl&quot;&gt;drawComplexControlを&lt;/a&gt;（ ）。</target>
        </trans-unit>
        <trans-unit id="2b6f89e9c27aa8dab9848665ab7be6e8dabb614b" translate="yes" xml:space="preserve">
          <source>If you are experiencing strange problems with using special flags that modify the alignment of structure and union members (such as &lt;code&gt;/Zp2&lt;/code&gt;) then you will need to recompile Qt with the flags set for the application as well.</source>
          <target state="translated">構造体とユニオンメンバーの配置を変更する特別なフラグ（ &lt;code&gt;/Zp2&lt;/code&gt; など）を使用して奇妙な問題が発生している場合は、アプリケーションにもフラグを設定してQtを再コンパイルする必要があります。</target>
        </trans-unit>
        <trans-unit id="c59e1562773da0f0fa467136ee2b15d0a2847993" translate="yes" xml:space="preserve">
          <source>If you are extending your own C++ classes to interoperate with &lt;a href=&quot;qml-qtmultimedia-videooutput&quot;&gt;VideoOutput&lt;/a&gt;, you can either provide a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; based class with a &lt;code&gt;mediaObject&lt;/code&gt; property that exposes a &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt; derived class that has a &lt;a href=&quot;qvideorenderercontrol&quot;&gt;QVideoRendererControl&lt;/a&gt; available, or you can provide a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; based class with a writable &lt;code&gt;videoSurface&lt;/code&gt; property that can accept a &lt;a href=&quot;qabstractvideosurface&quot;&gt;QAbstractVideoSurface&lt;/a&gt; based class and can follow the correct protocol to deliver QVideoFrames to it.</source>
          <target state="translated">独自のC ++クラスを拡張して&lt;a href=&quot;qml-qtmultimedia-videooutput&quot;&gt;VideoOutput&lt;/a&gt;と相互運用する場合は、&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;ベースのクラスに &lt;code&gt;mediaObject&lt;/code&gt; プロパティを提供して、&lt;a href=&quot;qvideorenderercontrol&quot;&gt;QVideoRendererControlが&lt;/a&gt;利用可能な&lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt;派生クラスを公開するか、&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;ベースのクラスに書き込み可能な &lt;code&gt;videoSurface&lt;/code&gt; プロパティを提供できます。&lt;a href=&quot;qabstractvideosurface&quot;&gt;QAbstractVideoSurface&lt;/a&gt;ベースのクラスを受け入れることができ、正しいプロトコルに従ってQVideoFramesを配信できます。</target>
        </trans-unit>
        <trans-unit id="2068e5692548a6f1e549d6b12838d705c030e74b" translate="yes" xml:space="preserve">
          <source>If you are faced with this problem, we recommend that you address the following issues:</source>
          <target state="translated">このような問題に直面した場合は、以下のような問題に対処することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="35d5488eb1f1d92d7e5aa88f4683fbf0e4c5537e" translate="yes" xml:space="preserve">
          <source>If you are implementing your own SQL driver (by subclassing &lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt;), you will need to provide your own &lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt; subclass that implements all the pure virtual functions and other virtual functions that you need.</source>
          <target state="translated">あなたは（サブクラス化することにより、独自のSQLドライバ実装している場合&lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriverを&lt;/a&gt;）、あなたはあなた自身の提供する必要があります&lt;a href=&quot;qsqlresult&quot;&gt;QSqlResultの&lt;/a&gt;実装のすべての純粋仮想関数およびその他の仮想関数は、あなたが必要とすることをサブクラスを。</target>
        </trans-unit>
        <trans-unit id="fd7eda5202cfdf24951838ad2ef93ee507cbd43f" translate="yes" xml:space="preserve">
          <source>If you are interested in later Qt releases, please &lt;a href=&quot;https://www.qt.io/contact-us/&quot;&gt;contact&lt;/a&gt; Qt professional services.</source>
          <target state="translated">今後のQtリリースに興味がある場合は、Qtプロフェッショナルサービスにお&lt;a href=&quot;https://www.qt.io/contact-us/&quot;&gt;問い合わせ&lt;/a&gt;ください。</target>
        </trans-unit>
        <trans-unit id="fe18452186fa9062361200b3ccb934910231423b" translate="yes" xml:space="preserve">
          <source>If you are loading baked animation data from a file, e.g. as created by an artist, then use the &lt;a href=&quot;qt3danimation-qanimationcliploader&quot;&gt;QAnimationClipLoader&lt;/a&gt; class and set its &lt;code&gt;source&lt;/code&gt; property.</source>
          <target state="translated">たとえば、アーティストによって作成されたファイルなど、&lt;a href=&quot;qt3danimation-qanimationcliploader&quot;&gt;ベイク&lt;/a&gt;されたアニメーションデータをロードする場合は、QAnimationClipLoaderクラスを使用して、その &lt;code&gt;source&lt;/code&gt; プロパティを設定します。</target>
        </trans-unit>
        <trans-unit id="0cba86e45535051458a0288e4fb4ffb80d91bae6" translate="yes" xml:space="preserve">
          <source>If you are looking for the form window containing a specific widget, you can use the static &lt;a href=&quot;qdesignerformwindowinterface#findFormWindow&quot;&gt;QDesignerFormWindowInterface::findFormWindow&lt;/a&gt;() function:</source>
          <target state="translated">特定のウィジェットを含むフォームウィンドウを探している場合は、静的&lt;a href=&quot;qdesignerformwindowinterface#findFormWindow&quot;&gt;QDesignerFormWindowInterface :: findFormWindow&lt;/a&gt;（）関数を使用できます。</target>
        </trans-unit>
        <trans-unit id="2c0316dc7513ec4a829da5c582f7d1d6acdb751f" translate="yes" xml:space="preserve">
          <source>If you are making a one-of-a-kind special layout, you can also make a custom widget as described above. Reimplement &lt;a href=&quot;qwidget#resizeEvent&quot;&gt;QWidget::resizeEvent&lt;/a&gt;() to calculate the required distribution of sizes and call &lt;a href=&quot;qwidget#geometry-prop&quot;&gt;setGeometry()&lt;/a&gt; on each child.</source>
          <target state="translated">独自の特別なレイアウトを作成する場合は、上記のようにカスタムウィジェットを作成することもできます。再実装&lt;a href=&quot;qwidget#resizeEvent&quot;&gt;のQWidget :: resizeEventは&lt;/a&gt;（）に必要なサイズの分布や通話計算する&lt;a href=&quot;qwidget#geometry-prop&quot;&gt;setGeometry（）&lt;/a&gt;それぞれの子にします。</target>
        </trans-unit>
        <trans-unit id="c26fcdb2f849b2d77d06693955db2fff3cc3f735" translate="yes" xml:space="preserve">
          <source>If you are new to</source>
          <target state="translated">初めての方は</target>
        </trans-unit>
        <trans-unit id="dcd9c9ce13348f2c89eb8cba78831786c5cc5b63" translate="yes" xml:space="preserve">
          <source>If you are not using a Microsoft compiler, replace &lt;code&gt;nmake&lt;/code&gt; with &lt;code&gt;mingw32-make&lt;/code&gt; in the line above.</source>
          <target state="translated">Microsoftコンパイラを使用していない場合は、上の行の &lt;code&gt;nmake&lt;/code&gt; を &lt;code&gt;mingw32-make&lt;/code&gt; に置き換えます。</target>
        </trans-unit>
        <trans-unit id="1edeadb4bd991b2129e132ab33cd635b95bce3f1" translate="yes" xml:space="preserve">
          <source>If you are producing a new binary data format, such as a file format for documents created by your application, you could use a &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; to write the data in a portable format. Typically, you would write a brief header containing a magic string and a version number to give yourself room for future expansion. For example:</source>
          <target state="translated">アプリケーションで作成されたドキュメントのファイル形式など、新しいバイナリデータ形式を作成する場合は、&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;を使用してデータを移植可能な形式で書き込むことができます。通常、マジックストリングとバージョン番号を含む簡単なヘッダーを記述して、将来の拡張の余地を確保します。例えば：</target>
        </trans-unit>
        <trans-unit id="e7be62f1d287b5ad9255a5f38cc81e4c59081ab0" translate="yes" xml:space="preserve">
          <source>If you are targeting a remote device, please follow all instructions by Visual Studio to set it up correctly.</source>
          <target state="translated">リモートデバイスをターゲットにしている場合は、Visual Studio の指示に従って正しく設定してください。</target>
        </trans-unit>
        <trans-unit id="ea5596ebb0c31feb5d9df57aad25f2ddd84844a7" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;qmaccocoaviewcontainer&quot;&gt;QMacCocoaViewContainer&lt;/a&gt; as a subclass and are accessing Cocoa API, it is probably simpler to have your file end with &lt;code&gt;.mm&lt;/code&gt; instead of &lt;code&gt;.cpp&lt;/code&gt;. Most Apple tools will correctly identify the source as Objective-C++.</source>
          <target state="translated">&lt;a href=&quot;qmaccocoaviewcontainer&quot;&gt;QMacCocoaViewContainer&lt;/a&gt;をサブクラスとして使用していて、Cocoa APIにアクセスしている場合は、ファイルの末尾を &lt;code&gt;.cpp&lt;/code&gt; ではなく &lt;code&gt;.mm&lt;/code&gt; にする方が簡単です。ほとんどのAppleツールは、ソースをObjective-C ++として正しく識別します。</target>
        </trans-unit>
        <trans-unit id="cce264affcdcade384e7402de8bca3620ccaf966" translate="yes" xml:space="preserve">
          <source>If you are using Firebird, the Firebird library has to be set explicitly:</source>
          <target state="translated">Firebirdを使用している場合は、Firebirdのライブラリを明示的に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="76cab77a64194ebfdfb08bb8f02673df169ab05d" translate="yes" xml:space="preserve">
          <source>If you are using InterBase:</source>
          <target state="translated">InterBase を使用している場合。</target>
        </trans-unit>
        <trans-unit id="5aa0be9550f6d982ee509d2621be3bbbef0f0cdf" translate="yes" xml:space="preserve">
          <source>If you are using a pragma library script to store application-wide instance data, consider using a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; singleton type instead. This should result in better performance, and will result in less JavaScript heap memory being used.</source>
          <target state="translated">プラグマライブラリスクリプトを使用してアプリケーション全体のインスタンスデータを格納する場合は、代わりに&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;シングルトンタイプの使用を検討してください。これにより、パフォーマンスが向上し、使用されるJavaScriptヒープメモリが少なくなります。</target>
        </trans-unit>
        <trans-unit id="3770d0073ac083205b9034be2c54e0470c39f38e" translate="yes" xml:space="preserve">
          <source>If you are using a shared configuration of Qt enter the &lt;code&gt;plugin&lt;/code&gt; subdirectory and run &lt;code&gt;qmake&lt;/code&gt; and your make tool to build a plugin that integrates the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; module into &lt;a href=&quot;qtdesigner-manual&quot;&gt;Qt Designer&lt;/a&gt;.</source>
          <target state="translated">Qtの共有設定を使用している場合は、 &lt;code&gt;plugin&lt;/code&gt; サブディレクトリに入り、 &lt;code&gt;qmake&lt;/code&gt; とmakeツールを実行して、&lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt;モジュールを&lt;a href=&quot;qtdesigner-manual&quot;&gt;Qt Designerに&lt;/a&gt;統合するプラグインをビルドします。</target>
        </trans-unit>
        <trans-unit id="804809b08005ed145375e8b07500633c8542f86c" translate="yes" xml:space="preserve">
          <source>If you are using coordinates with Qt's raster-based paint engine, it is important to note that, while coordinates greater than +/- 2&lt;sup&gt;15&lt;/sup&gt; can be used, any painting performed with coordinates outside this range is not guaranteed to be shown; the drawing may be clipped. This is due to the use of &lt;code&gt;short int&lt;/code&gt; in the implementation.</source>
          <target state="translated">Qtのラスターベースのペイントエンジンで座標を使用している場合、+ /-2 &lt;sup&gt;15&lt;/sup&gt;より大きい座標を使用できますが、この範囲外の座標で実行された描画は表示されるとは限りません。図面はクリップされる場合があります。これは、実装で &lt;code&gt;short int&lt;/code&gt; を使用しているためです。</target>
        </trans-unit>
        <trans-unit id="6c0876b52f0bb97073b195db808c67ccd41dfa9f" translate="yes" xml:space="preserve">
          <source>If you are using multiple inheritance, &lt;code&gt;moc&lt;/code&gt; assumes that the first inherited class is a subclass of &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;. Also, be sure that only the first inherited class is a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;.</source>
          <target state="translated">多重継承を使用している場合、 &lt;code&gt;moc&lt;/code&gt; は最初に継承されたクラスが&lt;a href=&quot;qobject&quot;&gt;QObjectの&lt;/a&gt;サブクラスであると想定します。また、最初に継承されたクラスのみが&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;であることを確認してください。</target>
        </trans-unit>
        <trans-unit id="0118c72bf59f28a9993657d26d130211a27352ae" translate="yes" xml:space="preserve">
          <source>If you are using older versions of GDB you must run with the full path to the executable. Later versions allow you to pass the bundle name on the command line.</source>
          <target state="translated">古いバージョンの GDB を使用している場合は、実行ファイルへのフルパスで実行する必要があります。それ以降のバージョンでは、コマンドラインでバンドル名を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="85b6bb08aa314f172681866d0c5bc4b59b8c4460" translate="yes" xml:space="preserve">
          <source>If you are using other libraries in your project in addition to those supplied with Qt, you need to specify them in your project file.</source>
          <target state="translated">Qtに付属しているライブラリ以外にも、プロジェクト内で他のライブラリを使用している場合は、プロジェクトファイルで指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="8a732d6c50e076fc75334ed75ced8d8ed40fd0bd" translate="yes" xml:space="preserve">
          <source>If you are using the &lt;b&gt;default message handler&lt;/b&gt; this function will abort to create a core dump. On Windows, for debug builds, this function will report a _CRT_ERROR enabling you to connect a debugger to the application.</source>
          <target state="translated">&lt;b&gt;デフォルトのメッセージハンドラー&lt;/b&gt;を使用している&lt;b&gt;場合&lt;/b&gt;、この関数はコアダンプを作成するために中止されます。Windowsでは、デバッグビルドの場合、この関数は_CRT_ERRORを報告し、デバッガーをアプリケーションに接続できるようにします。</target>
        </trans-unit>
        <trans-unit id="c3b9a00ccce4e62ff266c186ade813aa22558a16" translate="yes" xml:space="preserve">
          <source>If you are using the mouse wheel to adjust the dial, the increment value is determined by the lesser value of &lt;a href=&quot;qapplication#wheelScrollLines-prop&quot;&gt;wheelScrollLines&lt;/a&gt; multipled by &lt;a href=&quot;qabstractslider#singleStep-prop&quot;&gt;singleStep&lt;/a&gt;, and &lt;a href=&quot;qabstractslider#pageStep-prop&quot;&gt;pageStep&lt;/a&gt;.</source>
          <target state="translated">ダイヤルを調整するために、マウスのホイールを使用している場合は、インクリメント値が小さい方の値によって決定され&lt;a href=&quot;qapplication#wheelScrollLines-prop&quot;&gt;wheelScrollLines&lt;/a&gt;掛け合わさ&lt;a href=&quot;qabstractslider#singleStep-prop&quot;&gt;singleStep&lt;/a&gt;、および&lt;a href=&quot;qabstractslider#pageStep-prop&quot;&gt;pageStep&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4e92252016948c7d93f00c52d4881602666a0f61" translate="yes" xml:space="preserve">
          <source>If you are working with large amounts of filtering and have to invoke &lt;a href=&quot;qsortfilterproxymodel#invalidateFilter&quot;&gt;invalidateFilter&lt;/a&gt;() repeatedly, using reset() may be more efficient, depending on the implementation of your model. However, reset() returns the proxy model to its original state, losing selection information, and will cause the proxy model to be repopulated.</source>
          <target state="translated">大量のフィルタリングを使用していて、&lt;a href=&quot;qsortfilterproxymodel#invalidateFilter&quot;&gt;invalidateFilter&lt;/a&gt;（）を繰り返し呼び出す必要がある場合は、モデルの実装によっては、reset（）を使用する方が効率的です。ただし、reset（）はプロキシモデルを元の状態に戻し、選択情報を失い、プロキシモデルが再入力されます。</target>
        </trans-unit>
        <trans-unit id="34e44643802042a92e26e2ac644b7bbd813df0ea" translate="yes" xml:space="preserve">
          <source>If you assign an &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt; to the data list, it becomes a child of the Window's &lt;a href=&quot;qml-qtquick-window-window#contentItem-prop&quot;&gt;contentItem&lt;/a&gt;, so that it appears inside the window. The item's parent will be the window's &lt;a href=&quot;qml-qtquick-window-window#contentItem-prop&quot;&gt;contentItem&lt;/a&gt;, which is the root of the Item ownership tree within that Window.</source>
          <target state="translated">データリストに&lt;a href=&quot;qml-qtquick-item&quot;&gt;項目&lt;/a&gt;を割り当てると、その項目はウィンドウの&lt;a href=&quot;qml-qtquick-window-window#contentItem-prop&quot;&gt;contentItemの&lt;/a&gt;子になり、ウィンドウ内に表示されます。アイテムの親は、ウィンドウの&lt;a href=&quot;qml-qtquick-window-window#contentItem-prop&quot;&gt;contentItem&lt;/a&gt;になります。これは、そのウィンドウ内のアイテム所有ツリーのルートです。</target>
        </trans-unit>
        <trans-unit id="5aaba7502661bc68db19eb08ff6699bd95815c44" translate="yes" xml:space="preserve">
          <source>If you assign an Item to the contentData list, it becomes a child of the window's &lt;a href=&quot;qml-qtquick-controls2-applicationwindow#contentItem-attached-prop&quot;&gt;contentItem&lt;/a&gt;, so that it appears inside the window. The item's parent will be the window's &lt;a href=&quot;qml-qtquick-controls2-applicationwindow#contentItem-attached-prop&quot;&gt;contentItem&lt;/a&gt;.</source>
          <target state="translated">ItemをcontentDataリストに割り当てると、ウィンドウの&lt;a href=&quot;qml-qtquick-controls2-applicationwindow#contentItem-attached-prop&quot;&gt;contentItemの&lt;/a&gt;子になり、ウィンドウ内に表示されます。アイテムの親はウィンドウの&lt;a href=&quot;qml-qtquick-controls2-applicationwindow#contentItem-attached-prop&quot;&gt;contentItemになり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="ae7ce82b8f37a865273277d942e3addd51f65355" translate="yes" xml:space="preserve">
          <source>If you assign another Window to the data list, the nested window will become &quot;transient for&quot; the outer Window.</source>
          <target state="translated">データリストに別のウィンドウを割り当てると、入れ子になったウィンドウは外側のウィンドウに対して「過渡的」になります。</target>
        </trans-unit>
        <trans-unit id="6035c7d9b7cf831619fd5c7a4a0d37226189ee56" translate="yes" xml:space="preserve">
          <source>If you assign any other object type, it is added as a resource.</source>
          <target state="translated">他のオブジェクトタイプを割り当てると、それがリソースとして追加されます。</target>
        </trans-unit>
        <trans-unit id="1c354aa520efd20d31e9318d38fb15177e0b11b8" translate="yes" xml:space="preserve">
          <source>If you build Qt directly from the Git repository, you should initialize the repository only with modules which are supported or build and install modules separately. This helps to prevent unexpected build problems.</source>
          <target state="translated">Gitリポジトリから直接Qtをビルドする場合は、サポートされているモジュールのみでリポジトリを初期化するか、モジュールを個別にビルドしてインストールする必要があります。そうすることで、予期せぬビルドの問題を防ぐことができます。</target>
        </trans-unit>
        <trans-unit id="06fc70f2a7700754e8743bc2e93d51b94fb545ce" translate="yes" xml:space="preserve">
          <source>If you build Qt from a released source code distribution archive, the &lt;code&gt;configure&lt;/code&gt; tool ensures that the build will be made only for modules which are known to build for the target specified. Additionally, you can explicitly exclude unsupported or not needed modules from the build via the &lt;code&gt;-skip &amp;lt;module&amp;gt;&lt;/code&gt; option when running the &lt;code&gt;configure&lt;/code&gt; tool.</source>
          <target state="translated">リリースされたソースコード配布アーカイブからQtをビルドする場合、 &lt;code&gt;configure&lt;/code&gt; ツールは、指定されたターゲット用にビルドすることがわかっているモジュールに対してのみビルドが行われるようにします。さらに、 &lt;code&gt;configure&lt;/code&gt; ツールの実行時に &lt;code&gt;-skip &amp;lt;module&amp;gt;&lt;/code&gt; オプションを使用して、サポートされていないモジュールまたは不要なモジュールをビルドから明示的に除外できます。</target>
        </trans-unit>
        <trans-unit id="0e610364a79b087476ba6a095bd06550ca27dd37" translate="yes" xml:space="preserve">
          <source>If you call &lt;a href=&quot;qaudiodecoder#read&quot;&gt;read&lt;/a&gt;() before a buffer is ready, an invalid buffer will be returned, again without blocking.</source>
          <target state="translated">バッファの準備が整う前に&lt;a href=&quot;qaudiodecoder#read&quot;&gt;read&lt;/a&gt;（）を呼び出すと、無効化されたバッファが再びブロックされずに返されます。</target>
        </trans-unit>
        <trans-unit id="c48e608f5b5491fc020146b414547db6c7503de9" translate="yes" xml:space="preserve">
          <source>If you call &lt;a href=&quot;qregexp#exactMatch&quot;&gt;exactMatch&lt;/a&gt;() with an empty pattern on an empty string it will return true; otherwise it returns &lt;code&gt;false&lt;/code&gt; since it operates over the whole string. If you call &lt;a href=&quot;qregexp#indexIn&quot;&gt;indexIn&lt;/a&gt;() with an empty pattern on</source>
          <target state="translated">空の文字列に空のパターンを指定して、&lt;a href=&quot;qregexp#exactMatch&quot;&gt;exactMatch&lt;/a&gt;（）を呼び出すと、trueが返されます。それ以外の場合は、文字列全体に対して機能するため、 &lt;code&gt;false&lt;/code&gt; を返します。空のパターンで&lt;a href=&quot;qregexp#indexIn&quot;&gt;indexIn&lt;/a&gt;（）を呼び出すと</target>
        </trans-unit>
        <trans-unit id="cec9bbda48a93480232a0f202e7db7386279c388" translate="yes" xml:space="preserve">
          <source>If you can't parse the entire input in one go (for example, it is huge, or is being delivered over a network connection), data can be fed to the parser in pieces. This is achieved by telling &lt;a href=&quot;qxmlsimplereader#parse&quot;&gt;parse&lt;/a&gt;() to work incrementally, and making subsequent calls to the &lt;a href=&quot;qxmlsimplereader#parseContinue&quot;&gt;parseContinue&lt;/a&gt;() function, until all the data has been processed.</source>
          <target state="translated">入力全体を一度に解析できない場合（たとえば、入力が巨大であるか、ネットワーク接続を介して配信されている場合）、データを分割してパーサーに送ることができます。これは、すべてのデータが処理されるまで、&lt;a href=&quot;qxmlsimplereader#parse&quot;&gt;parse&lt;/a&gt;（）に段階的に動作するように&lt;a href=&quot;qxmlsimplereader#parseContinue&quot;&gt;指示&lt;/a&gt;し、その後parseContinue（）関数を呼び出すことによって実現されます。</target>
        </trans-unit>
        <trans-unit id="161a3dea480d3f0f0c723c9f283dc0ca633fd1f9" translate="yes" xml:space="preserve">
          <source>If you cannot determine a better proxy alternative, use &lt;a href=&quot;qnetworkproxy#ProxyType-enum&quot;&gt;QNetworkProxy::DefaultProxy&lt;/a&gt;, which tells the code querying for a proxy to use a higher alternative. For example, if this factory is set to a &lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt; object, DefaultProxy will tell it to query the application-level proxy settings.</source>
          <target state="translated">より適切な代替プロキシを決定できない場合は、&lt;a href=&quot;qnetworkproxy#ProxyType-enum&quot;&gt;QNetworkProxy :: DefaultProxyを&lt;/a&gt;使用します。これにより、プロキシをクエリするコードに、より高い代替プロキシを使用するよう指示します。たとえば、このファクトリが&lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt;オブジェクトに設定されている場合、DefaultProxyはアプリケーションレベルのプロキシ設定をクエリするように指示します。</target>
        </trans-unit>
        <trans-unit id="47ee22ae7e0b70ca20b7a7ddcb373d31f54e2606" translate="yes" xml:space="preserve">
          <source>If you change the color of the legend, the style of the legend brush is set to &lt;a href=&quot;qt#BrushStyle-enum&quot;&gt;Qt::SolidPattern&lt;/a&gt;.</source>
          <target state="translated">凡例の色を変更すると、凡例ブラシのスタイルは&lt;a href=&quot;qt#BrushStyle-enum&quot;&gt;Qt :: SolidPatternに&lt;/a&gt;設定されます。</target>
        </trans-unit>
        <trans-unit id="7475bf20fe338cf02b178e9339633535de23b38a" translate="yes" xml:space="preserve">
          <source>If you change the values that a &lt;a href=&quot;qml-qtquick-tableview#rowHeightProvider-prop&quot;&gt;rowHeightProvider&lt;/a&gt; or a &lt;a href=&quot;qml-qtquick-tableview#columnWidthProvider-prop&quot;&gt;columnWidthProvider&lt;/a&gt; return for rows and columns inside the viewport, you must call &lt;a href=&quot;qml-qtquick-tableview#forceLayout-method&quot;&gt;forceLayout&lt;/a&gt;. This informs &lt;a href=&quot;qml-qtquick-tableview&quot;&gt;TableView&lt;/a&gt; that it needs to use the provider functions again to recalculate and update the layout.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-tableview#rowHeightProvider-prop&quot;&gt;rowHeightProvider&lt;/a&gt;または&lt;a href=&quot;qml-qtquick-tableview#columnWidthProvider-prop&quot;&gt;columnWidthProvider&lt;/a&gt;がビューポート内の行と列に対して返す値を変更する場合は、&lt;a href=&quot;qml-qtquick-tableview#forceLayout-method&quot;&gt;forceLayoutを&lt;/a&gt;呼び出す必要があります。これにより、レイアウトを再計算して更新するためにプロバイダー関数を再度使用する必要があることが&lt;a href=&quot;qml-qtquick-tableview&quot;&gt;TableViewに&lt;/a&gt;通知されます。</target>
        </trans-unit>
        <trans-unit id="500f7c2ed4541742fa250d78ebc48a1f3b9006ae" translate="yes" xml:space="preserve">
          <source>If you choose to represent a gesture by a custom &lt;a href=&quot;qgesture&quot;&gt;QGesture&lt;/a&gt; subclass, you will need to reimplement the &lt;a href=&quot;qgesturerecognizer#create&quot;&gt;create&lt;/a&gt;() function to construct instances of your gesture class. Similarly, you may need to reimplement the &lt;a href=&quot;qgesturerecognizer#reset&quot;&gt;reset&lt;/a&gt;() function if your custom gesture objects need to be specially handled when a gesture is canceled.</source>
          <target state="translated">カスタム&lt;a href=&quot;qgesture&quot;&gt;QGesture&lt;/a&gt;サブクラスでジェスチャーを表すことを選択した場合は、&lt;a href=&quot;qgesturerecognizer#create&quot;&gt;create&lt;/a&gt;（）関数を再実装して、ジェスチャークラスのインスタンスを構築する必要があります。同様に、ジェスチャーがキャンセルされたときにカスタムジェスチャーオブジェクトを特別に処理する必要がある場合は、&lt;a href=&quot;qgesturerecognizer#reset&quot;&gt;reset&lt;/a&gt;（）関数の再実装が必要になる場合があります。</target>
        </trans-unit>
        <trans-unit id="60298eee3c23b33b1a704690c48b9151a00629d4" translate="yes" xml:space="preserve">
          <source>If you create a custom style, you should take special care when drawing asymmetric elements to make sure that they also look correct in a mirrored layout. An easy way to test your styles is to run applications with the &lt;code&gt;-reverse&lt;/code&gt; command-line option or to call &lt;a href=&quot;qguiapplication#layoutDirection-prop&quot;&gt;QApplication::setLayoutDirection&lt;/a&gt;() in your &lt;code&gt;main()&lt;/code&gt; function.</source>
          <target state="translated">カスタムスタイルを作成する場合は、非対称要素を描画するときに特別な注意を払って、それらがミラーレイアウトでも正しく見えるようにする必要があります。スタイルをテストする簡単な方法は、 &lt;code&gt;-reverse&lt;/code&gt; コマンドラインオプションを使用してアプリケーションを実行するか、 &lt;code&gt;main()&lt;/code&gt; 関数で&lt;a href=&quot;qguiapplication#layoutDirection-prop&quot;&gt;QApplication :: setLayoutDirection&lt;/a&gt;（）を呼び出すことです。</target>
        </trans-unit>
        <trans-unit id="17cd68422c27362470960984384c5dc705d301d1" translate="yes" xml:space="preserve">
          <source>If you create a new widget we strongly recommend that you use the colors in the palette rather than hard-coding specific colors.</source>
          <target state="translated">新しいウィジェットを作成する場合は、特定の色をハードコーディングするのではなく、パレットの色を使用することを強くお勧めします。</target>
        </trans-unit>
        <trans-unit id="3f4462d3119b6a25e2fe9303c0a819f7485e1e86" translate="yes" xml:space="preserve">
          <source>If you create a subclass of &lt;a href=&quot;qgraphicslayoutitem&quot;&gt;QGraphicsLayoutItem&lt;/a&gt; and reimplement its virtual functions, you will enable the layout to resize and position your item along with other QGraphicsLayoutItems including &lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt; and &lt;a href=&quot;graphicsview#qgraphicslayout&quot;&gt;QGraphicsLayout&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qgraphicslayoutitem&quot;&gt;QGraphicsLayoutItemの&lt;/a&gt;サブクラスを作成し、その仮想関数を再実装すると、レイアウトが&lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt;や&lt;a href=&quot;graphicsview#qgraphicslayout&quot;&gt;QGraphicsLayout&lt;/a&gt;を含む他のQGraphicsLayoutItemsとともにアイテムのサイズを変更して配置できるようになります。</target>
        </trans-unit>
        <trans-unit id="fbd1dc4f7124280b641957b9c985d0980cf1e5a2" translate="yes" xml:space="preserve">
          <source>If you create an element or attribute with &lt;a href=&quot;qdomdocument#createElement&quot;&gt;QDomDocument::createElement&lt;/a&gt;() or &lt;a href=&quot;qdomdocument#createAttribute&quot;&gt;QDomDocument::createAttribute&lt;/a&gt;(), the prefix will be an empty string. If you use &lt;a href=&quot;qdomdocument#createElementNS&quot;&gt;QDomDocument::createElementNS&lt;/a&gt;() or &lt;a href=&quot;qdomdocument#createAttributeNS&quot;&gt;QDomDocument::createAttributeNS&lt;/a&gt;() instead, the prefix will not be an empty string; but it might be an empty string if the name does not have a prefix.</source>
          <target state="translated">&lt;a href=&quot;qdomdocument#createElement&quot;&gt;QDomDocument :: createElement&lt;/a&gt;（）または&lt;a href=&quot;qdomdocument#createAttribute&quot;&gt;QDomDocument :: createAttribute&lt;/a&gt;（）で要素または属性を作成する場合、プレフィックスは空の文字列になります。あなたが使用している場合は&lt;a href=&quot;qdomdocument#createElementNS&quot;&gt;QDomDocumentを::はcreateElementNS&lt;/a&gt;（）または&lt;a href=&quot;qdomdocument#createAttributeNS&quot;&gt;QDomDocument :: createAttributeNS&lt;/a&gt;（）の代わりに、プレフィックスは空の文字列ではありません。ただし、名前に接頭辞がない場合は空の文字列になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="9a8af07b0934236da5d1098a000948ac0c59d159" translate="yes" xml:space="preserve">
          <source>If you create multiple database connections, specify a unique connection name for each one, when you call &lt;a href=&quot;qsqldatabase#addDatabase&quot;&gt;addDatabase&lt;/a&gt;(). Use &lt;a href=&quot;qsqldatabase#database&quot;&gt;database&lt;/a&gt;() with a connection name to get that connection. Use &lt;a href=&quot;qsqldatabase#removeDatabase&quot;&gt;removeDatabase&lt;/a&gt;() with a connection name to remove a connection. &lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; outputs a warning if you try to remove a connection referenced by other &lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; objects. Use &lt;a href=&quot;qsqldatabase#contains&quot;&gt;contains&lt;/a&gt;() to see if a given connection name is in the list of connections.</source>
          <target state="translated">複数のデータベース接続を作成する場合は、&lt;a href=&quot;qsqldatabase#addDatabase&quot;&gt;addDatabase&lt;/a&gt;（）を呼び出すときに、それぞれに一意の接続名を指定します。&lt;a href=&quot;qsqldatabase#database&quot;&gt;データベース&lt;/a&gt;（）を接続名とともに使用して、その接続を取得します。接続を削除するには、接続名を指定して&lt;a href=&quot;qsqldatabase#removeDatabase&quot;&gt;removeDatabase&lt;/a&gt;（）を使用します。他の&lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt;オブジェクトが参照する接続を削除しようとすると、&lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt;は警告を出力します。指定した接続名が接続のリストにあるかどうかを確認するに&lt;a href=&quot;qsqldatabase#contains&quot;&gt;は、contains&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="7646273ae2dbacaa23658a4e7083837be610751f" translate="yes" xml:space="preserve">
          <source>If you create new widgets in the mousePressEvent() the &lt;a href=&quot;qwidget#mouseReleaseEvent&quot;&gt;mouseReleaseEvent&lt;/a&gt;() may not end up where you expect, depending on the underlying window system (or X11 window manager), the widgets' location and maybe more.</source>
          <target state="translated">基になるウィンドウシステム（またはX11ウィンドウマネージャー）、ウィジェットの場所などによっては、mousePressEvent（）で新しいウィジェットを作成すると、&lt;a href=&quot;qwidget#mouseReleaseEvent&quot;&gt;mouseReleaseEvent&lt;/a&gt;（）が期待どおりに終了しない場合があります。</target>
        </trans-unit>
        <trans-unit id="8099c41c6c4619a93004cbcf0c3515483d52ce0b" translate="yes" xml:space="preserve">
          <source>If you declare the</source>
          <target state="translated">を宣言すると</target>
        </trans-unit>
        <trans-unit id="9e4643eafbd0d4a96807a4ddcf5f41ce29cc0458" translate="yes" xml:space="preserve">
          <source>If you develop components you might want to control who is able to instantiate those components. Since the server binary can be shipped to and registered on any client machine it is possible for anybody to use those components in his own software.</source>
          <target state="translated">コンポーネントを開発する場合、誰がそれらのコンポーネントをインスタンス化できるかを制御したいと思うかもしれません。サーババイナリはどのクライアントマシンにも出荷され、登録されているので、誰でも自分のソフトウェアでこれらのコンポーネントを使用することができます。</target>
        </trans-unit>
        <trans-unit id="8ec1ab807ee3535bc730f9e500858259db3a5b6a" translate="yes" xml:space="preserve">
          <source>If you develop on a Linux machine, you can also run the compositor within a window on your development machine. This lets you run clients in an environment that closely resembles the target device. Without rebuilding the client, you can also run it with &lt;code&gt;-platform wayland&lt;/code&gt; to run it inside the compositor. If you use &lt;code&gt;-platform xcb&lt;/code&gt; (for X11), you can run the client on the desktop. In other words, you can start developing your clients before the compositor is ready for use.</source>
          <target state="translated">Linuxマシンで開発する場合は、開発マシンのウィンドウ内でコンポジターを実行することもできます。これにより、ターゲットデバイスによく似た環境でクライアントを実行できます。クライアントを再構築せずに、 &lt;code&gt;-platform wayland&lt;/code&gt; で実行して、コンポジター内で実行することもできます。 &lt;code&gt;-platform xcb&lt;/code&gt; （X11の場合）を使用すると、デスクトップでクライアントを実行できます。つまり、コンポジターを使用する前にクライアントの開発を開始できます。</target>
        </trans-unit>
        <trans-unit id="afa8bf4954cb5202a30b0fc12f02b6b538c3177e" translate="yes" xml:space="preserve">
          <source>If you did not build Qt with RPATH enabled, you can place the Qt runtime components in any folder in the file system. The following environment variables should point to valid locations assuming that the Qt installation is located in &lt;code&gt;&amp;lt;Qt-install-path&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">RPATHを有効にしてQtをビルドしなかった場合は、Qtランタイムコンポーネントをファイルシステムの任意のフォルダーに配置できます。次の環境変数は、Qtインストールが &lt;code&gt;&amp;lt;Qt-install-path&amp;gt;&lt;/code&gt; にあると想定して、有効な場所を指す必要があります。</target>
        </trans-unit>
        <trans-unit id="f5ac96c3608663c3ee69d2ea4c3f3259795c6549" translate="yes" xml:space="preserve">
          <source>If you disable a parent item, all its children will also be disabled. If you enable a parent item, all children will be enabled, unless they have been explicitly disabled (i.e., if you call setEnabled(false) on a child, it will not be reenabled if its parent is disabled, and then enabled again).</source>
          <target state="translated">親アイテムを無効にすると、その子アイテムもすべて無効になります。親アイテムを有効にすると、明示的に無効化されていない限り、すべての子アイテムが有効になります (つまり、子アイテムで setEnabled(false)をコールしても、親アイテムが無効化されている場合には再有効化されず、再度有効化されます)。</target>
        </trans-unit>
        <trans-unit id="b84a34e331b907bd7ec85f721effe578cfa854d4" translate="yes" xml:space="preserve">
          <source>If you disable the &lt;code&gt;const char *&lt;/code&gt; to &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; automatic conversion by compiling your software with the macro &lt;code&gt;QT_NO_CAST_FROM_ASCII&lt;/code&gt; defined, you'll be very likely to catch any strings you are missing. See &lt;a href=&quot;qstring#fromUtf8&quot;&gt;QString::fromUtf8&lt;/a&gt;() and &lt;a href=&quot;qstring#fromLatin1&quot;&gt;QString::fromLatin1&lt;/a&gt;() for more information.</source>
          <target state="translated">マクロ &lt;code&gt;QT_NO_CAST_FROM_ASCII&lt;/code&gt; を定義してソフトウェアをコンパイルすることにより、 &lt;code&gt;const char *&lt;/code&gt; から&lt;a href=&quot;qstring&quot;&gt;QStringへの&lt;/a&gt;自動変換を無効にすると、不足している文字列をキャッチする可能性が高くなります。詳細については、&lt;a href=&quot;qstring#fromUtf8&quot;&gt;QString :: fromUtf8&lt;/a&gt;（）および&lt;a href=&quot;qstring#fromLatin1&quot;&gt;QString :: fromLatin1&lt;/a&gt;（）を参照してください。</target>
        </trans-unit>
        <trans-unit id="7c6a1ddfc7d45f56ca6150fe2e413b375a67c3c1" translate="yes" xml:space="preserve">
          <source>If you do not see the entries for the gamepad you are using, check if the &lt;code&gt;joystick&lt;/code&gt; package is installed. If not, install the package and &lt;code&gt;grep&lt;/code&gt; the &lt;code&gt;dmesg&lt;/code&gt; logs again.</source>
          <target state="translated">使用しているゲームパッドのエントリが表示されない場合は、 &lt;code&gt;joystick&lt;/code&gt; パッケージがインストールされているかどうかを確認してください。そうでない場合は、パッケージをインストールして、 &lt;code&gt;dmesg&lt;/code&gt; ログを再度 &lt;code&gt;grep&lt;/code&gt; してください。</target>
        </trans-unit>
        <trans-unit id="ca2f383e2bf046db28456505c081643e252eeb5d" translate="yes" xml:space="preserve">
          <source>If you do not specify a format, the format of the decoded audio itself will be used. Otherwise, some format conversion will be applied.</source>
          <target state="translated">フォーマットを指定しない場合は、デコードされた音声そのもののフォーマットが使用されます。そうでない場合は、何らかのフォーマット変換が適用されます。</target>
        </trans-unit>
        <trans-unit id="de1635a44cea7651e746c1686155d7406a62dc52" translate="yes" xml:space="preserve">
          <source>If you do not want all plugins added to QTPLUGIN to be automatically linked, remove &lt;code&gt;import_plugins&lt;/code&gt; from the &lt;code&gt;CONFIG&lt;/code&gt; variable:</source>
          <target state="translated">QTPLUGINに追加されたすべてのプラグインが自動的にリンクされないようにするには、 &lt;code&gt;CONFIG&lt;/code&gt; 変数から &lt;code&gt;import_plugins&lt;/code&gt; を削除します。</target>
        </trans-unit>
        <trans-unit id="cdd8ad11a5a8433d7c4e01c15d5566bd728f5503" translate="yes" xml:space="preserve">
          <source>If you do not want particles to automatically die after a time, for example if you wish to dispose of them manually, set lifeSpan to Emitter.InfiniteLife.</source>
          <target state="translated">時間が経過した後にパーティクルを自動的に死滅させたくない場合、例えば手動でパーティクルを処分したい場合は、LifeSpan を Emitter.InfiniteLife に設定してください。</target>
        </trans-unit>
        <trans-unit id="137e6ed64703982d6f6a1b7c58462d03cb2952de" translate="yes" xml:space="preserve">
          <source>If you do not want the line edit to have a context menu, you can set its &lt;a href=&quot;qwidget#contextMenuPolicy-prop&quot;&gt;contextMenuPolicy&lt;/a&gt; to &lt;a href=&quot;qt#ContextMenuPolicy-enum&quot;&gt;Qt::NoContextMenu&lt;/a&gt;. If you want to customize the context menu, reimplement this function. If you want to extend the standard context menu, reimplement this function, call &lt;a href=&quot;qlineedit#createStandardContextMenu&quot;&gt;createStandardContextMenu&lt;/a&gt;() and extend the menu returned.</source>
          <target state="translated">行編集にコンテキストメニューを持たせたくない場合は、その&lt;a href=&quot;qwidget#contextMenuPolicy-prop&quot;&gt;contextMenuPolicy&lt;/a&gt;を&lt;a href=&quot;qt#ContextMenuPolicy-enum&quot;&gt;Qt :: NoContextMenuに&lt;/a&gt;設定できます。コンテキストメニューをカスタマイズする場合は、この関数を再実装してください。標準のコンテキストメニューを拡張する場合は、この関数を再実装し、&lt;a href=&quot;qlineedit#createStandardContextMenu&quot;&gt;createStandardContextMenu&lt;/a&gt;（）を呼び出して、返されたメニューを拡張します。</target>
        </trans-unit>
        <trans-unit id="fc81d4dd3f76f07754477505ca4dd2bf14711219" translate="yes" xml:space="preserve">
          <source>If you do not want the text edit to have a context menu, you can set its &lt;a href=&quot;qwidget#contextMenuPolicy-prop&quot;&gt;contextMenuPolicy&lt;/a&gt; to &lt;a href=&quot;qt#ContextMenuPolicy-enum&quot;&gt;Qt::NoContextMenu&lt;/a&gt;. If you want to customize the context menu, reimplement this function. If you want to extend the standard context menu, reimplement this function, call &lt;a href=&quot;qplaintextedit#createStandardContextMenu&quot;&gt;createStandardContextMenu&lt;/a&gt;() and extend the menu returned.</source>
          <target state="translated">テキスト編集にコンテキストメニューを持たせたくない場合は、その&lt;a href=&quot;qwidget#contextMenuPolicy-prop&quot;&gt;contextMenuPolicy&lt;/a&gt;を&lt;a href=&quot;qt#ContextMenuPolicy-enum&quot;&gt;Qt :: NoContextMenuに&lt;/a&gt;設定できます。コンテキストメニューをカスタマイズする場合は、この関数を再実装してください。標準のコンテキストメニューを拡張する場合は、この関数を再実装し、&lt;a href=&quot;qplaintextedit#createStandardContextMenu&quot;&gt;createStandardContextMenu&lt;/a&gt;（）を呼び出して、返されたメニューを拡張します。</target>
        </trans-unit>
        <trans-unit id="264b0fb3179ab096c73c0b90036579cf8921a2f4" translate="yes" xml:space="preserve">
          <source>If you do not want the text edit to have a context menu, you can set its &lt;a href=&quot;qwidget#contextMenuPolicy-prop&quot;&gt;contextMenuPolicy&lt;/a&gt; to &lt;a href=&quot;qt#ContextMenuPolicy-enum&quot;&gt;Qt::NoContextMenu&lt;/a&gt;. If you want to customize the context menu, reimplement this function. If you want to extend the standard context menu, reimplement this function, call &lt;a href=&quot;qtextedit#createStandardContextMenu&quot;&gt;createStandardContextMenu&lt;/a&gt;() and extend the menu returned.</source>
          <target state="translated">テキスト編集にコンテキストメニューを持たせたくない場合は、その&lt;a href=&quot;qwidget#contextMenuPolicy-prop&quot;&gt;contextMenuPolicy&lt;/a&gt;を&lt;a href=&quot;qt#ContextMenuPolicy-enum&quot;&gt;Qt :: NoContextMenuに&lt;/a&gt;設定できます。コンテキストメニューをカスタマイズする場合は、この関数を再実装してください。標準のコンテキストメニューを拡張する場合は、この関数を再実装し、&lt;a href=&quot;qtextedit#createStandardContextMenu&quot;&gt;createStandardContextMenu&lt;/a&gt;（）を呼び出して、返されたメニューを拡張します。</target>
        </trans-unit>
        <trans-unit id="414a4b42e3e1fdf1f4fbba5afc1d7f27ca70c7d1" translate="yes" xml:space="preserve">
          <source>If you do not want to include all data contained in the model, or the autogenerated rows and columns are not ordered as you wish, you can specify which rows and columns should be included and in which order by defining an explicit list of categories for either or both of rows and columns.</source>
          <target state="translated">モデルに含まれるすべてのデータを含めたくない場合や、自動生成された行と列が希望通りの順序でない場合は、行と列のどちらかまたは両方にカテゴリの明示的なリストを定義することで、どの行と列をどの順序で含めるかを指定することができます。</target>
        </trans-unit>
        <trans-unit id="057684615c560d24fa3d7850ba2b1690d752365f" translate="yes" xml:space="preserve">
          <source>If you do not want to provide plugins for your accessibility interfaces, you can use an interface factory (&lt;a href=&quot;qaccessible#InterfaceFactory-typedef&quot;&gt;QAccessible::InterfaceFactory&lt;/a&gt;), which is the recommended way to provide accessible interfaces in a statically-linked application.</source>
          <target state="translated">ユーザー&lt;a href=&quot;qaccessible#InterfaceFactory-typedef&quot;&gt;補助&lt;/a&gt;インターフェースにプラグインを提供したくない場合は、静的にリンクされたアプリケーションでユーザー補助インターフェースを提供するために推奨される方法であるインターフェースファクトリー（QAccessible :: InterfaceFactory）を使用できます。</target>
        </trans-unit>
        <trans-unit id="40d74a535b955d54f4d75584d27c82f8baeb3109" translate="yes" xml:space="preserve">
          <source>If you do not want to use the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; library included with Qt, you can pass &lt;code&gt;-system-sqlite&lt;/code&gt; to the configure script to use the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; libraries of the operating system. This is recommended whenever possible, as it reduces the installation size and removes one component for which you need to track security advisories.</source>
          <target state="translated">Qtに含まれている&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt;ライブラリを使用したくない場合は、 &lt;code&gt;-system-sqlite&lt;/code&gt; をconfigureスクリプトに渡して、オペレーティングシステムの&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt;ライブラリを使用できます。これは、インストールサイズを縮小し、セキュリティアドバイザリを追跡する必要がある1つのコンポーネントを削除するため、可能な限り推奨されます。</target>
        </trans-unit>
        <trans-unit id="343aa26528918bf8eae80d3edfbc84e50deb8988" translate="yes" xml:space="preserve">
          <source>If you do not wish to store the address of the reading you may use the &lt;a href=&quot;qsensorbackend#reading&quot;&gt;reading&lt;/a&gt;() method to get it again later.</source>
          <target state="translated">リーディングのアドレスを保存したくない場合は、&lt;a href=&quot;qsensorbackend#reading&quot;&gt;reading&lt;/a&gt;（）メソッドを使用して後で再度取得できます。</target>
        </trans-unit>
        <trans-unit id="59343985f92053a6f90ac9774ec6c299a593e440" translate="yes" xml:space="preserve">
          <source>If you do reimplement this function,</source>
          <target state="translated">この関数を再実装する場合</target>
        </trans-unit>
        <trans-unit id="7459f1c7db2abb955632f345eb9bcbc56a6e2474" translate="yes" xml:space="preserve">
          <source>If you do reimplement this function, you should call the base class implementation.</source>
          <target state="translated">この関数を再実装する場合は、ベースクラスの実装を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="47d6e81d9e44e07739dfe3bc8280ba53c8a5bed7" translate="yes" xml:space="preserve">
          <source>If you don't care about overflow, or you know that overflow cannot occur, you can ignore the &lt;code&gt;overflow()&lt;/code&gt; signal, i.e. don't connect it to any slot.</source>
          <target state="translated">オーバーフローを気にしない場合、またはオーバーフローが発生しないことがわかっている場合は、 &lt;code&gt;overflow()&lt;/code&gt; シグナルを無視できます。つまり、どのスロットにも接続しないでください。</target>
        </trans-unit>
        <trans-unit id="c3f8db5f627a6412eb185b92c3a869ae90aabc98" translate="yes" xml:space="preserve">
          <source>If you don't include the function name with the &lt;b&gt;\overload&lt;/b&gt; command, then instead of the &quot;This function overloads...&quot; line with the link to the documentation for the primary version, you get the old standard line:</source>
          <target state="translated">&lt;b&gt;\ overload&lt;/b&gt;コマンドに関数名を含めない場合、プライマリバージョンのドキュメントへのリンクを含む &quot;This function overloads ...&quot;行の代わりに、古い標準行を取得します。</target>
        </trans-unit>
        <trans-unit id="f4b13e746ac6ed5f37e7487d2823fe3bfc4ac180" translate="yes" xml:space="preserve">
          <source>If you don't need C++11 noexcept semantics, e.g. because your function can't possibly throw, don't use this macro, use &lt;a href=&quot;qtglobal#Q_DECL_NOTHROW&quot;&gt;Q_DECL_NOTHROW&lt;/a&gt; instead.</source>
          <target state="translated">セマンティクス以外のC ++ 11が必要ない場合、たとえば、関数がスローできない可能性があるため、このマクロを使用しないでください。代わりに&lt;a href=&quot;qtglobal#Q_DECL_NOTHROW&quot;&gt;Q_DECL_NOTHROW&lt;/a&gt;を使用してください。</target>
        </trans-unit>
        <trans-unit id="f4aac5a2cb5b5ba20fa581bac2ac4ecdfa698a32" translate="yes" xml:space="preserve">
          <source>If you don't set at least the content and error handlers, the parser will fall back on its default behavior---and will do nothing.</source>
          <target state="translated">少なくともコンテンツとエラーハンドラを設定しないと、パーサはデフォルトの動作に戻ってしまい、何もしません。</target>
        </trans-unit>
        <trans-unit id="5041c0834c26c12411e9d4b9de6cf518e963de2e" translate="yes" xml:space="preserve">
          <source>If you don't use the return value, &lt;a href=&quot;qcontiguouscache#removeFirst&quot;&gt;removeFirst&lt;/a&gt;() is more efficient.</source>
          <target state="translated">戻り値を使用しない場合、&lt;a href=&quot;qcontiguouscache#removeFirst&quot;&gt;removeFirst&lt;/a&gt;（）の方が効率的です。</target>
        </trans-unit>
        <trans-unit id="6f0b3ec2e3f2240b0c9bd99bec86af00d556f943" translate="yes" xml:space="preserve">
          <source>If you don't use the return value, &lt;a href=&quot;qcontiguouscache#removeLast&quot;&gt;removeLast&lt;/a&gt;() is more efficient.</source>
          <target state="translated">戻り値を使用しない場合は、&lt;a href=&quot;qcontiguouscache#removeLast&quot;&gt;removeLast&lt;/a&gt;（）の方が効率的です。</target>
        </trans-unit>
        <trans-unit id="c3eda638d5401c3d46365a3d5398cb614bb77093" translate="yes" xml:space="preserve">
          <source>If you don't use the return value, &lt;a href=&quot;qhash#remove&quot;&gt;remove&lt;/a&gt;() is more efficient.</source>
          <target state="translated">戻り値を使用しない場合は、&lt;a href=&quot;qhash#remove&quot;&gt;remove&lt;/a&gt;（）の方が効率的です。</target>
        </trans-unit>
        <trans-unit id="6238b630b08739411aeb3e4860079290f1daeb6a" translate="yes" xml:space="preserve">
          <source>If you don't use the return value, &lt;a href=&quot;qjsonarray#removeAt&quot;&gt;removeAt&lt;/a&gt;() is more efficient.</source>
          <target state="translated">戻り値を使用しない場合は、&lt;a href=&quot;qjsonarray#removeAt&quot;&gt;removeAt&lt;/a&gt;（）の方が効率的です。</target>
        </trans-unit>
        <trans-unit id="16389cdcb2d83186dca00f19daf34b971a56ae6c" translate="yes" xml:space="preserve">
          <source>If you don't use the return value, &lt;a href=&quot;qlinkedlist#removeFirst&quot;&gt;removeFirst&lt;/a&gt;() is more efficient.</source>
          <target state="translated">戻り値を使用しない場合、&lt;a href=&quot;qlinkedlist#removeFirst&quot;&gt;removeFirst&lt;/a&gt;（）の方が効率的です。</target>
        </trans-unit>
        <trans-unit id="e532d96c70aba46349957efbde0774df9e51d4ff" translate="yes" xml:space="preserve">
          <source>If you don't use the return value, &lt;a href=&quot;qlinkedlist#removeLast&quot;&gt;removeLast&lt;/a&gt;() is more efficient.</source>
          <target state="translated">戻り値を使用しない場合は、&lt;a href=&quot;qlinkedlist#removeLast&quot;&gt;removeLast&lt;/a&gt;（）の方が効率的です。</target>
        </trans-unit>
        <trans-unit id="2c512ded4975686b35f1fb701d84a9b7cd1d15e6" translate="yes" xml:space="preserve">
          <source>If you don't use the return value, &lt;a href=&quot;qlist#removeAt&quot;&gt;removeAt&lt;/a&gt;() is more efficient.</source>
          <target state="translated">戻り値を使用しない場合は、&lt;a href=&quot;qlist#removeAt&quot;&gt;removeAt&lt;/a&gt;（）の方が効率的です。</target>
        </trans-unit>
        <trans-unit id="3580c79a00255579ecf1dc06e86b78e8a44314f1" translate="yes" xml:space="preserve">
          <source>If you don't use the return value, &lt;a href=&quot;qlist#removeFirst&quot;&gt;removeFirst&lt;/a&gt;() is more efficient.</source>
          <target state="translated">戻り値を使用しない場合、&lt;a href=&quot;qlist#removeFirst&quot;&gt;removeFirst&lt;/a&gt;（）の方が効率的です。</target>
        </trans-unit>
        <trans-unit id="9e0c4f65190d8ec00e741c79f6a58ec29cd4558a" translate="yes" xml:space="preserve">
          <source>If you don't use the return value, &lt;a href=&quot;qlist#removeLast&quot;&gt;removeLast&lt;/a&gt;() is more efficient.</source>
          <target state="translated">戻り値を使用しない場合は、&lt;a href=&quot;qlist#removeLast&quot;&gt;removeLast&lt;/a&gt;（）の方が効率的です。</target>
        </trans-unit>
        <trans-unit id="7b89e12bb904cadd6f68a456bf8a4d218049020f" translate="yes" xml:space="preserve">
          <source>If you don't use the return value, &lt;a href=&quot;qmap#remove&quot;&gt;remove&lt;/a&gt;() is more efficient.</source>
          <target state="translated">戻り値を使用しない場合は、&lt;a href=&quot;qmap#remove&quot;&gt;remove&lt;/a&gt;（）の方が効率的です。</target>
        </trans-unit>
        <trans-unit id="8b4317833de468d14b7193cf24bfa578254f1bac" translate="yes" xml:space="preserve">
          <source>If you don't use the return value, &lt;a href=&quot;qvector#removeLast&quot;&gt;removeLast&lt;/a&gt;() is more efficient.</source>
          <target state="translated">戻り値を使用しない場合は、&lt;a href=&quot;qvector#removeLast&quot;&gt;removeLast&lt;/a&gt;（）の方が効率的です。</target>
        </trans-unit>
        <trans-unit id="98a6cadcb257cc7405bae4f90b3e1e2945c7348f" translate="yes" xml:space="preserve">
          <source>If you don't want to reuse items or if the &lt;a href=&quot;qml-qtquick-tableview#delegate-prop&quot;&gt;delegate&lt;/a&gt; cannot support it, you can set the &lt;a href=&quot;qml-qtquick-tableview#reuseItems-prop&quot;&gt;reuseItems&lt;/a&gt; property to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">アイテムを再利用したくない場合、または&lt;a href=&quot;qml-qtquick-tableview#delegate-prop&quot;&gt;デリゲート&lt;/a&gt;がそれをサポートできない場合は、&lt;a href=&quot;qml-qtquick-tableview#reuseItems-prop&quot;&gt;reuseItems&lt;/a&gt;プロパティを &lt;code&gt;false&lt;/code&gt; に設定できます。</target>
        </trans-unit>
        <trans-unit id="838b97a9339f2b2d2c2a71a001cc2517e1ae6341" translate="yes" xml:space="preserve">
          <source>If you don't want to use frameworks, simply configure Qt with &lt;code&gt;-no-framework&lt;/code&gt;.</source>
          <target state="translated">フレームワークを使用したくない場合は、Qtを &lt;code&gt;-no-framework&lt;/code&gt; で設定するだけです。</target>
        </trans-unit>
        <trans-unit id="0a836131e0f2704bfd556204956a2e5fd4bc8cef" translate="yes" xml:space="preserve">
          <source>If you draw any graphics items on top of a chart containing an accelerated series, the accelerated series is drawn over those items.</source>
          <target state="translated">加速系列を含むチャートの上にグラフィックアイテムを描画すると、その上に加速系列が描画されます。</target>
        </trans-unit>
        <trans-unit id="70073c2e33637d94e0f741698ec0d2592dfc1ea1" translate="yes" xml:space="preserve">
          <source>If you enable a focus policy (i.e., not &lt;a href=&quot;qt#FocusPolicy-enum&quot;&gt;Qt::NoFocus&lt;/a&gt;), &lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt; will automatically enable the &lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;ItemIsFocusable&lt;/a&gt; flag. Setting &lt;a href=&quot;qt#FocusPolicy-enum&quot;&gt;Qt::NoFocus&lt;/a&gt; on a widget will clear the &lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;ItemIsFocusable&lt;/a&gt; flag. If the widget currently has keyboard focus, the widget will automatically lose focus.</source>
          <target state="translated">フォーカスポリシーを有効にすると（つまり、&lt;a href=&quot;qt#FocusPolicy-enum&quot;&gt;Qt :: NoFocus&lt;/a&gt;ではない場合）、&lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt;は自動的に&lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;ItemIsFocusable&lt;/a&gt;フラグを有効にします。ウィジェットに&lt;a href=&quot;qt#FocusPolicy-enum&quot;&gt;Qt :: NoFocus&lt;/a&gt;を設定すると、&lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;ItemIsFocusable&lt;/a&gt;フラグがクリアされます。ウィジェットに現在キーボードフォーカスがある場合、ウィジェットは自動的にフォーカスを失います。</target>
        </trans-unit>
        <trans-unit id="41dc335fec90b30b3454b0f635c1e50125bda194" translate="yes" xml:space="preserve">
          <source>If you enable this option, a rubber band control is used to represent the subwindow's outline, and the user moves this instead of the subwindow itself. As a result, the subwindow remains in its original position until the move operation has completed, at which time a &lt;a href=&quot;qmoveevent&quot;&gt;QMoveEvent&lt;/a&gt; is sent to the window. By default, this option is disabled.</source>
          <target state="translated">このオプションを有効にすると、サブウィンドウのアウトラインを表すためにラバーバンドコントロールが使用され、ユーザーはサブウィンドウ自体ではなくこれを移動します。その結果、サブウィンドウは移動操作が完了するまで元の位置に留まり、移動操作が完了すると&lt;a href=&quot;qmoveevent&quot;&gt;QMoveEvent&lt;/a&gt;がウィンドウに送信されます。デフォルトでは、このオプションは無効になっています。</target>
        </trans-unit>
        <trans-unit id="33f5358221b7caed93fe5c10ea0c248f1b41a5c2" translate="yes" xml:space="preserve">
          <source>If you enable this option, a rubber band control is used to represent the subwindow's outline, and the user resizes this instead of the subwindow itself. As a result, the subwindow maintains its original position and size until the resize operation has been completed, at which time it will receive a single &lt;a href=&quot;qresizeevent&quot;&gt;QResizeEvent&lt;/a&gt;. By default, this option is disabled.</source>
          <target state="translated">このオプションを有効にすると、サブウィンドウのアウトラインを表すためにラバーバンドコントロールが使用され、ユーザーはサブウィンドウ自体ではなく、これをサイズ変更します。その結果、サブウィンドウは、サイズ変更操作が完了するまで元の位置とサイズを維持し、その時点で1つの&lt;a href=&quot;qresizeevent&quot;&gt;QResizeEventを受け取り&lt;/a&gt;ます。デフォルトでは、このオプションは無効になっています。</target>
        </trans-unit>
        <trans-unit id="ee9e15e9e7e88dd472e71c94c981951ef20f8571" translate="yes" xml:space="preserve">
          <source>If you enable this option, the widget's &lt;a href=&quot;qwidget#mask&quot;&gt;QWidget::mask&lt;/a&gt;() is ignored when rendering into the target. By default, this option is disabled.</source>
          <target state="translated">このオプションを有効にすると、ターゲットにレンダリングするときにウィジェットの&lt;a href=&quot;qwidget#mask&quot;&gt;QWidget :: mask&lt;/a&gt;（）が無視されます。デフォルトでは、このオプションは無効になっています。</target>
        </trans-unit>
        <trans-unit id="29baace13a9463b22a74a74a22cd35d6e24e59e4" translate="yes" xml:space="preserve">
          <source>If you enable this option, the widget's background is rendered into the target even if &lt;a href=&quot;qwidget#autoFillBackground-prop&quot;&gt;autoFillBackground&lt;/a&gt; is not set. By default, this option is enabled.</source>
          <target state="translated">このオプションを有効にすると、&lt;a href=&quot;qwidget#autoFillBackground-prop&quot;&gt;autoFillBackground&lt;/a&gt;が設定されていなくても、ウィジェットの背景がターゲットにレンダリングされます。デフォルトでは、このオプションは有効になっています。</target>
        </trans-unit>
        <trans-unit id="7ca699664ee5b0a2558f5e46c84fccb5c7a7c628" translate="yes" xml:space="preserve">
          <source>If you enable this option, the widget's children are rendered recursively into the target. By default, this option is enabled.</source>
          <target state="translated">このオプションを有効にすると、ウィジェットの子はターゲットに再帰的にレンダリングされます。デフォルトでは、このオプションは有効になっています。</target>
        </trans-unit>
        <trans-unit id="2a44f4aa208acbf490ca3cc98609e0f8457532a5" translate="yes" xml:space="preserve">
          <source>If you encounter issues, always set the &lt;code&gt;QSG_INFO&lt;/code&gt; and &lt;code&gt;QT_D3D_DEBUG&lt;/code&gt; environment variables to &lt;code&gt;1&lt;/code&gt;, to get debug and warning messages printed on the debug output. &lt;code&gt;QT_D3D_DEBUG&lt;/code&gt; enables the Direct3D debug layer.</source>
          <target state="translated">問題が発生した場合は、常に &lt;code&gt;QSG_INFO&lt;/code&gt; および &lt;code&gt;QT_D3D_DEBUG&lt;/code&gt; 環境変数を &lt;code&gt;1&lt;/code&gt; に設定して、デバッグおよび警告メッセージがデバッグ出力に出力されるようにしてください。 &lt;code&gt;QT_D3D_DEBUG&lt;/code&gt; は、Direct3Dデバッグレイヤーを有効にします。</target>
        </trans-unit>
        <trans-unit id="ad40d497502697850fda1deea9f60068b4a3ecc3" translate="yes" xml:space="preserve">
          <source>If you exclusively use function objects then you will get compile time errors if you attempt to use a function not included in that version and profile. This is obviously a lot easier to debug than undefined behavior at run time.</source>
          <target state="translated">関数オブジェクトのみを使用している場合、そのバージョンやプロファイルに含まれていない関数を使用しようとすると、コンパイル時にエラーが発生します。これは明らかに、実行時の未定義の動作よりもデバッグがはるかに簡単です。</target>
        </trans-unit>
        <trans-unit id="ec4c5fc223f0c10dcc5beafaa6caffa95226dcd5" translate="yes" xml:space="preserve">
          <source>If you experience very slow access of the ODBC datasource, make sure that ODBC call tracing is turned off in the ODBC datasource manager.</source>
          <target state="translated">ODBCデータソースへのアクセスが非常に遅い場合は、ODBCデータソースマネージャでODBCコールトレースがオフになっていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="28e8c8e90363713071c08bffc584af58a728c846" translate="yes" xml:space="preserve">
          <source>If you get linkage errors in the final building phase of your program, saying that &lt;code&gt;YourClass::className()&lt;/code&gt; is undefined or that &lt;code&gt;YourClass&lt;/code&gt; lacks a vtable, something has been done wrong. Most often, you have forgotten to compile or &lt;code&gt;#include&lt;/code&gt; the moc-generated C++ code, or (in the former case) include that object file in the link command. If you use &lt;code&gt;qmake&lt;/code&gt;, try rerunning it to update your makefile. This should do the trick.</source>
          <target state="translated">&lt;code&gt;YourClass::className()&lt;/code&gt; が定義されていない、または &lt;code&gt;YourClass&lt;/code&gt; に vtable がないという、プログラムの最終ビルドフェーズでリンケージエラーが発生した場合は、何らかの問題が発生しています。ほとんどの場合、mocで生成されたC ++コードをコンパイルまたは &lt;code&gt;#include&lt;/code&gt; するのを忘れているか、（前者の場合）linkコマンドにそのオブジェクトファイルを含めています。 &lt;code&gt;qmake&lt;/code&gt; を使用する場合は、再実行してmakefileを更新してください。これでうまくいくはずです。</target>
        </trans-unit>
        <trans-unit id="eb19136b2ee8f51e016ddebdf8cf1cafd00b88de" translate="yes" xml:space="preserve">
          <source>If you had both an Adobe and a Cronyx Helvetica, you might get either.</source>
          <target state="translated">AdobeとCronyx Helveticaの両方を持っていたら、どちらかを手に入れることができるかもしれません。</target>
        </trans-unit>
        <trans-unit id="093501ca07e1b048873f519ee54bbe9affd78b82" translate="yes" xml:space="preserve">
          <source>If you have XML like this:</source>
          <target state="translated">このようなXMLがあれば</target>
        </trans-unit>
        <trans-unit id="0f3028a3f541466286a12cfacbcb9811b5158360" translate="yes" xml:space="preserve">
          <source>If you have a CPU with multiple cores, a multi-process system can help distribute the load evenly across different cores, making more efficient use of your CPU.</source>
          <target state="translated">複数のコアを持つCPUを使用している場合、マルチプロセスシステムを使用することで、異なるコア間で負荷を均等に分散させることができ、CPUをより効率的に使用することができます。</target>
        </trans-unit>
        <trans-unit id="a513986a1bf7e1220dab5eefa567b76a52bcd6b8" translate="yes" xml:space="preserve">
          <source>If you have a complex UI, then multi-process is useful because if one part of the UI crashes, it doesn't affect the entire system. Similarly, the display won't freeze, even when one client freezes.</source>
          <target state="translated">複雑なUIを持っている場合は、UIの一部がクラッシュしてもシステム全体には影響しないので、マルチプロセスが便利です。同様に、1つのクライアントがフリーズしても表示がフリーズすることはありません。</target>
        </trans-unit>
        <trans-unit id="d37de89818a0a93f6cd07292f522f47de7107ae7" translate="yes" xml:space="preserve">
          <source>If you have a custom component or an application that embeds</source>
          <target state="translated">カスタムコンポーネントやアプリケーションに</target>
        </trans-unit>
        <trans-unit id="b7117b76ff8d814f10a4596a6862b2d44fee9406" translate="yes" xml:space="preserve">
          <source>If you have a font which matches on family, even if none of the other attributes match, this font will be chosen in preference to a font which doesn't match on family but which does match on the other attributes. This is because font family is the dominant search criteria.</source>
          <target state="translated">他の属性がどれも一致しなくても、ファミリで一致するフォントがある場合は、ファミリでは一致しないが他の属性では一致するフォントよりも、そのフォントが優先的に選択されます。これは、フォントファミリが検索基準の大半を占めているからです。</target>
        </trans-unit>
        <trans-unit id="edb8fa84e65c82236eb5f0f616d31d8b82c3f7b8" translate="yes" xml:space="preserve">
          <source>If you have a loop where you do some processing, but only the final result of the processing is important, it is often better to update a temporary accumulator which you afterwards assign to the property you need to update, rather than incrementally updating the property itself, in order to avoid triggering re-evaluation of binding expressions during the intermediate stages of accumulation.</source>
          <target state="translated">何らかの処理を行うが、処理の最終結果だけが重要なループがある場合、蓄積の中間段階でバインディング式の再評価をトリガーするのを避けるために、プロパティ自体をインクリメンタルに更新するのではなく、後から更新する必要のあるプロパティに割り当てる一時的なアキュムレータを更新した方が良いことが多いです。</target>
        </trans-unit>
        <trans-unit id="7833a0e9686bea974ea7046d997ccb46fe3b0afd" translate="yes" xml:space="preserve">
          <source>If you have a new style class called &lt;code&gt;MyStyle&lt;/code&gt; that you want to make available as a plugin, the class needs to be defined as follows (&lt;code&gt;mystyleplugin.h&lt;/code&gt;):</source>
          <target state="translated">プラグインとして使用できるようにする &lt;code&gt;MyStyle&lt;/code&gt; という新しいスタイルクラスがある場合、クラスを次のように定義する必要があります（ &lt;code&gt;mystyleplugin.h&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="3f4d5741fec7d17ca29f8c5099a118c8c010c66e" translate="yes" xml:space="preserve">
          <source>If you have a pointer to an object, you can use &lt;a href=&quot;qobject#metaObject&quot;&gt;metaObject&lt;/a&gt;() to retrieve the meta-object associated with that object.</source>
          <target state="translated">オブジェクトへのポインタがある場合、&lt;a href=&quot;qobject#metaObject&quot;&gt;metaObject&lt;/a&gt;（）を使用して、そのオブジェクトに関連付けられているメタオブジェクトを取得できます。</target>
        </trans-unit>
        <trans-unit id="fc4c2bd6a20a583368114747bf95813ca0ed13d2" translate="yes" xml:space="preserve">
          <source>If you have code that looks like this:</source>
          <target state="translated">こんな感じのコードがあれば</target>
        </trans-unit>
        <trans-unit id="1d42bdafc68ae936bd171e32c366e91c134b7e92" translate="yes" xml:space="preserve">
          <source>If you have elements which are totally covered by other (opaque) elements, it is best to set their &quot;visible&quot; property to &lt;code&gt;false&lt;/code&gt; or they will be drawn needlessly.</source>
          <target state="translated">他の（不透明な）要素で完全に覆われている要素がある場合、それらの &quot;visible&quot;プロパティを &lt;code&gt;false&lt;/code&gt; に設定することをお勧めします。そうしないと、要素が不必要に描画されます。</target>
        </trans-unit>
        <trans-unit id="dfc4e0f8c2bf7525a3a838de728f9d8bd61c812d" translate="yes" xml:space="preserve">
          <source>If you have large forms that do not fit in the Qt Creator &lt;b&gt;Design&lt;/b&gt; mode, you can open them in the stand-alone</source>
          <target state="translated">Qt Creator &lt;b&gt;デザイン&lt;/b&gt;モードに収まらない大きなフォームがある場合は、スタンドアロンで開くことができます</target>
        </trans-unit>
        <trans-unit id="4b0b4fe41787d4b4f7c373135e22dcffa7954df8" translate="yes" xml:space="preserve">
          <source>If you have many occurrences of a certain set of keys, you can use arrays to make your life easier. For example, let's suppose that you want to save a variable-length list of user names and passwords. You could then write:</source>
          <target state="translated">特定のキーのセットの出現回数が多い場合は、配列を使用すると楽になります。例えば、ユーザ名とパスワードの可変長リストを保存したいとします。この場合、次のように書きます。</target>
        </trans-unit>
        <trans-unit id="593656e2cbae068866581c1bb67f541d54a1eec4" translate="yes" xml:space="preserve">
          <source>If you have no pointer to an actual object instance but still want to access the meta-object of a class, you can use &lt;a href=&quot;qobject#staticMetaObject-var&quot;&gt;staticMetaObject&lt;/a&gt;.</source>
          <target state="translated">実際のオブジェクトインスタンスへのポインターがなくても、クラスのメタオブジェクトにアクセスしたい場合は、&lt;a href=&quot;qobject#staticMetaObject-var&quot;&gt;staticMetaObject&lt;/a&gt;を使用できます。</target>
        </trans-unit>
        <trans-unit id="073ec092d3e6402042ace4ab5ccf8f01d19d871b" translate="yes" xml:space="preserve">
          <source>If you have only one single custom widget then you can set it as default widget using &lt;a href=&quot;qwidgetaction#setDefaultWidget&quot;&gt;setDefaultWidget&lt;/a&gt;(). That widget will then be used if the action is added to a &lt;a href=&quot;qtoolbar&quot;&gt;QToolBar&lt;/a&gt;, or in general to an action container that supports &lt;a href=&quot;qwidgetaction&quot;&gt;QWidgetAction&lt;/a&gt;. If a &lt;a href=&quot;qwidgetaction&quot;&gt;QWidgetAction&lt;/a&gt; with only a default widget is added to two toolbars at the same time then the default widget is shown only in the first toolbar the action was added to. &lt;a href=&quot;qwidgetaction&quot;&gt;QWidgetAction&lt;/a&gt; takes over ownership of the default widget.</source>
          <target state="translated">カスタムウィジェットが1つしかない場合は、&lt;a href=&quot;qwidgetaction#setDefaultWidget&quot;&gt;setDefaultWidget&lt;/a&gt;（）を使用してそれをデフォルトウィジェットとして設定できます。アクションが&lt;a href=&quot;qtoolbar&quot;&gt;QToolBar&lt;/a&gt;に追加された場合、または一般的に&lt;a href=&quot;qwidgetaction&quot;&gt;QWidgetAction&lt;/a&gt;をサポートするアクションコンテナに追加された場合、そのウィジェットが使用されます。もし&lt;a href=&quot;qwidgetaction&quot;&gt;QWidgetAction&lt;/a&gt;唯一のアクションが追加された最初のツールバーに示されているウィジェットのデフォルト同時に2つのツールバーに追加されたウィジェットのみデフォルトで。&lt;a href=&quot;qwidgetaction&quot;&gt;QWidgetAction&lt;/a&gt;はデフォルトウィジェットの所有権を引き継ぎます。</target>
        </trans-unit>
        <trans-unit id="b044cf74f2358671783da692819f13ac65606c4d" translate="yes" xml:space="preserve">
          <source>If you have problems installing open source versions of Qt provided by your Linux distribution, for example, from RPM or APT repositories, please consult the maintainers of the distribution.</source>
          <target state="translated">Linux ディストリビューションで提供されているオープンソース版の Qt を RPM や APT リポジトリなどからインストールする際に問題がある場合は、ディストリビューションのメンテナに相談してください。</target>
        </trans-unit>
        <trans-unit id="43e0f84948bbeba6b3511f8f03e7121e68df5cf7" translate="yes" xml:space="preserve">
          <source>If you have programatically created the arguments, as opposed to getting them from the arguments in &lt;code&gt;main()&lt;/code&gt;, it is likely of interest to use QTest::qExec(&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *, const &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; &amp;amp;) since it is Unicode safe.</source>
          <target state="translated">&lt;code&gt;main()&lt;/code&gt; の引数から取得するのではなく、プログラムで引数を作成した場合は、Unicodeセーフであるため、QTest :: qExec（&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *、const &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt;＆）を使用することは重要です。</target>
        </trans-unit>
        <trans-unit id="67532b014024b48dccc7bd6b4f01cf6849669d04" translate="yes" xml:space="preserve">
          <source>If you have reimplemented &lt;a href=&quot;qtimeline#valueForTime&quot;&gt;valueForTime&lt;/a&gt;(), this value is ignored.</source>
          <target state="translated">&lt;a href=&quot;qtimeline#valueForTime&quot;&gt;valueForTime&lt;/a&gt;（）を再実装した場合、この値は無視されます。</target>
        </trans-unit>
        <trans-unit id="3c4f5edd184fd000c128f5048b97d4d92bf3821e" translate="yes" xml:space="preserve">
          <source>If you have resources in a library, you need to force initialization of your resources by calling &lt;a href=&quot;qdir#Q_INIT_RESOURCE&quot;&gt;Q_INIT_RESOURCE&lt;/a&gt;() with the base name of the &lt;code&gt;.qrc&lt;/code&gt; file. For example:</source>
          <target state="translated">ライブラリにリソースがある場合は、 &lt;code&gt;.qrc&lt;/code&gt; ファイルのベース名を指定して&lt;a href=&quot;qdir#Q_INIT_RESOURCE&quot;&gt;Q_INIT_RESOURCE&lt;/a&gt;（）を呼び出し、リソースを強制的に初期化する必要があります。例えば：</target>
        </trans-unit>
        <trans-unit id="4efcb21d844a9a9269c0619eb7765d115b79b762" translate="yes" xml:space="preserve">
          <source>If you have seen regexps described elsewhere, they may have looked different from the ones shown here. This is because some sets of characters and some quantifiers are so common that they have been given special symbols to represent them. &lt;b&gt;[0-9]&lt;/b&gt; can be replaced with the symbol &lt;b&gt;\d&lt;/b&gt;. The quantifier to match exactly one occurrence, &lt;b&gt;{1,1}&lt;/b&gt;, can be replaced with the expression itself, i.e. &lt;b&gt;x{1,1}&lt;/b&gt; is the same as &lt;b&gt;x&lt;/b&gt;. So our 0 to 99 matcher could be written as &lt;b&gt;^\d{1,2}$&lt;/b&gt;. It can also be written &lt;b&gt;^\d\d{0,1}$&lt;/b&gt;, i.e.</source>
          <target state="translated">他の場所で説明されている正規表現を見た場合、それらはここに示されているものとは異なって見える可能性があります。これは、一部の文字セットと一部の数量詞が非常に一般的であるため、それらを表す特別な記号が与えられているためです。&lt;b&gt;[0-9]&lt;/b&gt;は記号&lt;b&gt;\ dで&lt;/b&gt;置き換えることができます。1つの出現に正確に一致する数量詞&lt;b&gt;{1,1}&lt;/b&gt;は、式自体で置き換えることができます。つまり、&lt;b&gt;x {1,1}&lt;/b&gt;は&lt;b&gt;x&lt;/b&gt;と同じです。したがって、0から99のマッチャーは&lt;b&gt;^ \ d {1,2} $&lt;/b&gt;と書くことができます。また、書き込むことができます&lt;b&gt;^ \ D \ D {0,1} $&lt;/b&gt;、すなわち</target>
        </trans-unit>
        <trans-unit id="99eb71782f95aa9f75d79617643a560c36139759" translate="yes" xml:space="preserve">
          <source>If you hide a parent item, all its children will also be hidden. If you show a parent item, all children will be shown, unless they have been explicitly hidden (i.e., if you call setVisible(false) on a child, it will not be reshown even if its parent is hidden, and then shown again).</source>
          <target state="translated">親アイテムを非表示にすると、その子アイテムもすべて非表示になります。親項目を表示すると、明示的に非表示にしていない限り、すべての子項目が表示されます (つまり、子項目で setVisible(false)を呼び出すと、親項目が非表示になっていても再表示されず、再度表示されます)。</target>
        </trans-unit>
        <trans-unit id="3e76e7caf35eee52604b222848022d14ae7e690c" translate="yes" xml:space="preserve">
          <source>If you ignore the event (i.e., by calling &lt;a href=&quot;qevent#ignore&quot;&gt;QEvent::ignore&lt;/a&gt;()),</source>
          <target state="translated">イベントを無視する場合（つまり、&lt;a href=&quot;qevent#ignore&quot;&gt;QEvent :: ignore&lt;/a&gt;（）を呼び出すことにより）、</target>
        </trans-unit>
        <trans-unit id="b5be8bce7d84f21c1008d75c236bbe2fd2fa45a8" translate="yes" xml:space="preserve">
          <source>If you ignore the event, (i.e., by calling &lt;a href=&quot;qevent#ignore&quot;&gt;QEvent::ignore&lt;/a&gt;(),) it will propagate to any item beneath this item. If no items accept the event, it will be ignored by the scene, and propagate to the view (e.g., the view's vertical scroll bar).</source>
          <target state="translated">イベントを無視する場合（つまり、&lt;a href=&quot;qevent#ignore&quot;&gt;QEvent :: ignore&lt;/a&gt;（）を呼び出すことにより）、イベントはこのアイテムの下のすべてのアイテムに伝播します。イベントを受け入れるアイテムがない場合、そのイベントはシーンによって無視され、ビュー（ビューの垂直スクロールバーなど）に伝達されます。</target>
        </trans-unit>
        <trans-unit id="d0b5138a89d332131f26aa61549d834762616824" translate="yes" xml:space="preserve">
          <source>If you implement &lt;a href=&quot;qabstractscrollarea#scrollContentsBy&quot;&gt;scrollContentsBy&lt;/a&gt;() in a subclass of &lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt;, call this function before you call &lt;a href=&quot;qwidget#scroll&quot;&gt;QWidget::scroll&lt;/a&gt;() on the viewport. Alternatively, just call &lt;a href=&quot;qabstractitemview#update&quot;&gt;update&lt;/a&gt;().</source>
          <target state="translated">あなたが実装する場合&lt;a href=&quot;qabstractscrollarea#scrollContentsBy&quot;&gt;scrollContentsByを&lt;/a&gt;のサブクラスに（）&lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt;を呼び出す前に、この関数を呼び出し&lt;a href=&quot;qwidget#scroll&quot;&gt;たQWidget ::スクロール&lt;/a&gt;ビューポート上で（）。あるいは、単に&lt;a href=&quot;qabstractitemview#update&quot;&gt;update&lt;/a&gt;（）を呼び出します。</target>
        </trans-unit>
        <trans-unit id="4125209b6ce63aa8c8f3650e5c6a37c6c7ff1328" translate="yes" xml:space="preserve">
          <source>If you implement your own model, you can reimplement this function if you want to support insertions. Alternatively, you can provide your own API for altering the data.</source>
          <target state="translated">独自のモデルを実装する場合、挿入をサポートしたい場合はこの関数を再実装することができます。あるいは、データを変更するための独自のAPIを提供することもできます。</target>
        </trans-unit>
        <trans-unit id="d331f2f6a611d244753300f85e1e74aca09e6fe4" translate="yes" xml:space="preserve">
          <source>If you implement your own model, you can reimplement this function if you want to support insertions. Alternatively, you can provide your own API for altering the data. In either case, you will need to call &lt;a href=&quot;qabstractitemmodel#beginInsertRows&quot;&gt;beginInsertRows&lt;/a&gt;() and &lt;a href=&quot;qabstractitemmodel#endInsertRows&quot;&gt;endInsertRows&lt;/a&gt;() to notify other components that the model has changed.</source>
          <target state="translated">独自のモデルを実装する場合、挿入をサポートする場合は、この関数を再実装できます。または、データを変更するための独自のAPIを提供できます。どちらの場合も、&lt;a href=&quot;qabstractitemmodel#beginInsertRows&quot;&gt;beginInsertRows&lt;/a&gt;（）および&lt;a href=&quot;qabstractitemmodel#endInsertRows&quot;&gt;endInsertRows&lt;/a&gt;（）を呼び出して、モデルが変更されたことを他のコンポーネントに通知する必要があります。</target>
        </trans-unit>
        <trans-unit id="106510d50377a8cd03188b6d7c0fd7c458fa892f" translate="yes" xml:space="preserve">
          <source>If you implement your own model, you can reimplement this function if you want to support moving. Alternatively, you can provide your own API for altering the data.</source>
          <target state="translated">独自のモデルを実装する場合、移動をサポートしたい場合はこの関数を再実装することができます。あるいは、データを変更するための独自のAPIを提供することもできます。</target>
        </trans-unit>
        <trans-unit id="2edbb20a834141e84df6cf15ba7e897a962af7bb" translate="yes" xml:space="preserve">
          <source>If you implement your own model, you can reimplement this function if you want to support removing. Alternatively, you can provide your own API for altering the data.</source>
          <target state="translated">独自のモデルを実装する場合、削除をサポートしたい場合はこの関数を再実装することができます。あるいは、データを変更するための独自のAPIを提供することもできます。</target>
        </trans-unit>
        <trans-unit id="ab60b25c79bdcda285d18c592f7167e340feb06a" translate="yes" xml:space="preserve">
          <source>If you include &amp;lt;QtDebug&amp;gt;, a more convenient syntax is also available:</source>
          <target state="translated">&amp;lt;QtDebug&amp;gt;を含めると、より便利な構文も利用できます。</target>
        </trans-unit>
        <trans-unit id="207679727f9b11ffb1852492267dde99e64deb5b" translate="yes" xml:space="preserve">
          <source>If you include &lt;code&gt;&amp;lt;QtDebug&amp;gt;&lt;/code&gt;, a more convenient syntax is also available:</source>
          <target state="translated">&lt;code&gt;&amp;lt;QtDebug&amp;gt;&lt;/code&gt; を含めると、より便利な構文も使用できます。</target>
        </trans-unit>
        <trans-unit id="1c4832ad82817ce9ca13b654baaa7923c3c0c260" translate="yes" xml:space="preserve">
          <source>If you include the &amp;lt;QtDebug&amp;gt; header file, the &lt;code&gt;qDebug()&lt;/code&gt; macro can also be used as an output stream. For example:</source>
          <target state="translated">&amp;lt;QtDebug&amp;gt;ヘッダーファイルを含める場合、 &lt;code&gt;qDebug()&lt;/code&gt; マクロを出力ストリームとして使用することもできます。例えば：</target>
        </trans-unit>
        <trans-unit id="3ae64c01642f09e9b36108cb089b8bf5e640b581" translate="yes" xml:space="preserve">
          <source>If you include the &lt;code&gt;%L&lt;/code&gt; modifier when you specify a parameter, the number is localized according to the current regional settings. For example, in the following code snippet, &lt;code&gt;%L1&lt;/code&gt; means to format the first parameters according to the number formatting conventions of the currently selected locale (geographical region):</source>
          <target state="translated">パラメータを指定するときに &lt;code&gt;%L&lt;/code&gt; 修飾子を含めると、現在の地域設定に従って数値がローカライズされます。たとえば、次のコードスニペットでは、 &lt;code&gt;%L1&lt;/code&gt; は、現在選択されているロケール（地理的領域）の数値フォーマット規則に従って最初のパラメーターをフォーマットすることを意味します。</target>
        </trans-unit>
        <trans-unit id="c35fec5071466912f6e977d5b38d0d1971590123" translate="yes" xml:space="preserve">
          <source>If you include the above in your qdocconf file for qtbase, there will be no class documentation generated for &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;.</source>
          <target state="translated">qtbaseのqdocconfファイルに上記を含めると、&lt;a href=&quot;qwidget&quot;&gt;QWidgetの&lt;/a&gt;クラスドキュメントは生成されません。</target>
        </trans-unit>
        <trans-unit id="ea209d0aa612b39eaf83772d3fa5d10a5ac7f4e1" translate="yes" xml:space="preserve">
          <source>If you intend to use Qt Charts C++ classes in your application, use the following include and using directives:</source>
          <target state="translated">アプリケーションで Qt Charts C++クラスを使用する場合は、以下のインクルードと使用ディレクティブを使用してください。</target>
        </trans-unit>
        <trans-unit id="013cb061ad1d682c520847a81164689a638779b9" translate="yes" xml:space="preserve">
          <source>If you intend to use Qt Data Visualization C++ classes in your application, use the following include and using directives:</source>
          <target state="translated">Qt Data Visualization C++クラスをアプリケーションで使用する場合は、以下のインクルードと使用ディレクティブを使用してください。</target>
        </trans-unit>
        <trans-unit id="87e83a7a4a4b2cc04ff93e0ccddd6d0ea6f1b471" translate="yes" xml:space="preserve">
          <source>If you intend to use the C++ classes in your application, include the C++ definitions using the following directive:</source>
          <target state="translated">アプリケーションでC++クラスを使用する場合は、以下のディレクティブを使用してC++の定義をインクルードしてください。</target>
        </trans-unit>
        <trans-unit id="1c306d26aba22c480b4cb5c9819286c146a14567" translate="yes" xml:space="preserve">
          <source>If you invoke the &lt;a href=&quot;qwidget#show&quot;&gt;show()&lt;/a&gt; function after hiding a dialog, the dialog will be displayed in its original position. This is because the window manager decides the position for windows that have not been explicitly placed by the programmer. To preserve the position of a dialog that has been moved by the user, save its position in your &lt;a href=&quot;qwidget#closeEvent&quot;&gt;closeEvent()&lt;/a&gt; handler and then move the dialog to that position, before showing it again.</source>
          <target state="translated">ダイアログを非表示にしてから&lt;a href=&quot;qwidget#show&quot;&gt;show（）&lt;/a&gt;関数を呼び出すと、ダイアログは元の位置に表示されます。これは、ウィンドウマネージャーが、プログラマーによって明示的に配置されていないウィンドウの位置を決定するためです。ユーザーが移動したダイアログの位置を保持するには、その位置を&lt;a href=&quot;qwidget#closeEvent&quot;&gt;closeEvent（）&lt;/a&gt;ハンドラーに保存してから、ダイアログをその位置に移動してから、再度表示します。</target>
        </trans-unit>
        <trans-unit id="0f804f726a66c4e54a56a123b766c3508c288994" translate="yes" xml:space="preserve">
          <source>If you just need to display a small piece of rich text use &lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt;.</source>
          <target state="translated">小さなリッチテキストを表示するだけの場合は、&lt;a href=&quot;qlabel&quot;&gt;QLabelを&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="671426a4ddfca9ca8181c499337c24b4302d8c51" translate="yes" xml:space="preserve">
          <source>If you just want to iterate over all the items in a container in order, you can use Qt's &lt;code&gt;foreach&lt;/code&gt; keyword. The keyword is a Qt-specific addition to the C++ language, and is implemented using the preprocessor.</source>
          <target state="translated">コンテナー内のすべてのアイテムを順番に繰り返し処理する場合は、Qtの &lt;code&gt;foreach&lt;/code&gt; キーワードを使用できます。キーワードは、C ++言語へのQt固有の追加であり、プリプロセッサを使用して実装されます。</target>
        </trans-unit>
        <trans-unit id="5d1a6fde8942f05249887dbeaacee61a0c4df298" translate="yes" xml:space="preserve">
          <source>If you just want to serialize your XML in a human-readable format, use &lt;a href=&quot;qxmlformatter&quot;&gt;QXmlFormatter&lt;/a&gt; as it is. The default indentation level is 4 spaces, but you can set your own indentation value &lt;a href=&quot;qxmlformatter#setIndentationDepth&quot;&gt;setIndentationDepth&lt;/a&gt;().</source>
          <target state="translated">人間が読める形式でXMLをシリアル化するだけの場合は、&lt;a href=&quot;qxmlformatter&quot;&gt;QXmlFormatter&lt;/a&gt;をそのまま使用します。デフォルトのインデントレベルは4スペースですが、独自のインデント値&lt;a href=&quot;qxmlformatter#setIndentationDepth&quot;&gt;setIndentationDepth&lt;/a&gt;（）を設定できます。</target>
        </trans-unit>
        <trans-unit id="46e56bf216eac5daf92da5b89455b45f437042ff" translate="yes" xml:space="preserve">
          <source>If you just want to store a single text block (i.e., a &quot;comment&quot; or just a description), you can either pass an empty key, or use a generic key like &quot;Description&quot;.</source>
          <target state="translated">単一のテキストブロック(例えば &quot;comment &quot;や単なる説明)を保存したいだけなら、空のキーを渡すか、&quot;Description &quot;のような一般的なキーを使うことができます。</target>
        </trans-unit>
        <trans-unit id="2b0f8112d0bacf60286bec0b9fdae8d2d17d85e7" translate="yes" xml:space="preserve">
          <source>If you know approximately how many items you will store in a container, you can start by calling &lt;a href=&quot;qstring#reserve&quot;&gt;reserve()&lt;/a&gt;, and when you are done populating the container, you can call &lt;a href=&quot;qstring#squeeze&quot;&gt;squeeze()&lt;/a&gt; to release the extra preallocated memory.</source>
          <target state="translated">コンテナーに格納するアイテムのおおよその数がわかっている場合は、&lt;a href=&quot;qstring#reserve&quot;&gt;reserve（）を&lt;/a&gt;呼び出して開始できます。コンテナーへの入力が完了したら、&lt;a href=&quot;qstring#squeeze&quot;&gt;squeeze（）&lt;/a&gt;を呼び出して、事前に割り当てられた追加のメモリを解放できます。</target>
        </trans-unit>
        <trans-unit id="e506536703fb7f20a6bdf79b9f8f4456e55d8b44" translate="yes" xml:space="preserve">
          <source>If you know in advance approximately how many items the &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; will contain, you can call &lt;a href=&quot;qvector#reserve&quot;&gt;reserve&lt;/a&gt;(), asking &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; to preallocate a certain amount of memory. You can also call &lt;a href=&quot;qvector#capacity&quot;&gt;capacity&lt;/a&gt;() to find out how much memory &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; actually allocated.</source>
          <target state="translated">&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;に含まれるアイテムのおおよその数が事前にわかっている場合は、&lt;a href=&quot;qvector#reserve&quot;&gt;reserve&lt;/a&gt;（）を呼び出して、&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;に特定の量のメモリを事前に割り当てるように要求できます。また、&lt;a href=&quot;qvector#capacity&quot;&gt;capacity&lt;/a&gt;（）を呼び出して、&lt;a href=&quot;qvector&quot;&gt;QVectorが&lt;/a&gt;実際に割り当てたメモリ量を調べることもできます。</target>
        </trans-unit>
        <trans-unit id="25543a785b45632b691af66aeb9dcf2a862fd0af" translate="yes" xml:space="preserve">
          <source>If you know up front what the height of the table will be, assign a value to &lt;code&gt;contentHeight&lt;/code&gt; explicitly, to avoid unnecessary calculations and updates to the &lt;a href=&quot;qml-qtquick-tableview&quot;&gt;TableView&lt;/a&gt;.</source>
          <target state="translated">テーブルの高さを&lt;a href=&quot;qml-qtquick-tableview&quot;&gt;事前に&lt;/a&gt;知っている場合は、明示的に &lt;code&gt;contentHeight&lt;/code&gt; に値を割り当てて、不要な計算やTableViewの更新を回避します。</target>
        </trans-unit>
        <trans-unit id="76ecbbf6e35548252c0274214fd7812d5146cce6" translate="yes" xml:space="preserve">
          <source>If you know up front what the width of the table will be, assign a value to &lt;code&gt;contentWidth&lt;/code&gt; explicitly, to avoid unnecessary calculations and updates to the &lt;a href=&quot;qml-qtquick-tableview&quot;&gt;TableView&lt;/a&gt;.</source>
          <target state="translated">あなたがテーブルの幅がどうなるかを前もって知っている場合は、値を割り当てる &lt;code&gt;contentWidth&lt;/code&gt; に不必要な計算と更新を避けるために、明示的に&lt;a href=&quot;qml-qtquick-tableview&quot;&gt;テーブルビュー&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9f92abc2a00b2f80db551ba62e402726d7c10657" translate="yes" xml:space="preserve">
          <source>If you later on convert the returned html string into a byte array for transmission over a network or when saving to disk you should specify the encoding you're going to use for the conversion to a byte array here.</source>
          <target state="translated">後でネットワーク経由での転送やディスクへの保存のために、返されたhtml文字列をバイト配列に変換する場合は、ここでバイト配列への変換に使用するエンコーディングを指定しなければなりません。</target>
        </trans-unit>
        <trans-unit id="e7c0048e898893a6e5d1c8cb46448f039b953244" translate="yes" xml:space="preserve">
          <source>If you lazy load components, or create objects dynamically during a JavaScript expression, it is often better to &lt;code&gt;destroy()&lt;/code&gt; them manually rather than wait for automatic garbage collection to do so. See the prior section on &lt;a href=&quot;#controlling-element-lifetime&quot;&gt;Controlling Element Lifetime&lt;/a&gt; for more information.</source>
          <target state="translated">コンポーネントを遅延ロードしたり、JavaScript式の間にオブジェクトを動的に作成したりする場合は、自動ガベージコレクションが実行するのを待つよりも、コンポーネントを手動で &lt;code&gt;destroy()&lt;/code&gt; する方が適切です。詳細については、&lt;a href=&quot;#controlling-element-lifetime&quot;&gt;要素の有効&lt;/a&gt;期間の制御に関する前のセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="f1b6e142a71a05aa00ba5bae3b0b5f2ae89756c9" translate="yes" xml:space="preserve">
          <source>If you leave out</source>
          <target state="translated">を省いた場合</target>
        </trans-unit>
        <trans-unit id="2db783b80ff1020ccaceac55ba2023405ff45002" translate="yes" xml:space="preserve">
          <source>If you make a mistake, simply double click outside of any number or choose &lt;b&gt;Restart&lt;/b&gt; from the form's context menu to start again. If you have many widgets on your form and would like to change the tab order in the middle or at the end of the tab order chain, you can edit it at any position. Press &lt;b&gt;Ctrl&lt;/b&gt; and click the number from which you want to start. Alternatively, choose &lt;b&gt;Start from Here&lt;/b&gt; in the context menu.</source>
          <target state="translated">間違えた場合は、番号の外側をダブルクリックするか、フォームのコンテキストメニューから&lt;b&gt;[再起動]&lt;/b&gt;を選択して、最初からやり直してください。フォームに多数のウィジェットがあり、タブオーダーチェーンの途中または最後にあるタブオーダーを変更したい場合は、任意の位置で編集できます。押して&lt;b&gt;Ctrlキー&lt;/b&gt;と作業を開始したいから番号をクリックしてください。または、コンテキストメニューの&lt;b&gt;[ここから開始]を&lt;/b&gt;選択します。</target>
        </trans-unit>
        <trans-unit id="d6243f8fa37fa62c4ab8dc9f019c9d4a49cb12c4" translate="yes" xml:space="preserve">
          <source>If you modify a primary key, the record might slip through your fingers while you are trying to populate it.</source>
          <target state="translated">主キーを変更すると、レコードを入力しようとしている間に指をすり抜けてしまう可能性があります。</target>
        </trans-unit>
        <trans-unit id="fee78d1a8d6e37dec838fcf815b60c25dd57ea2e" translate="yes" xml:space="preserve">
          <source>If you move the widget as a result of the mouse event, use the global position returned by &lt;a href=&quot;qmouseevent#globalPos&quot;&gt;globalPos&lt;/a&gt;() to avoid a shaking motion.</source>
          <target state="translated">マウスイベントの結果としてウィジェットを移動する場合は、&lt;a href=&quot;qmouseevent#globalPos&quot;&gt;globalPos&lt;/a&gt;（）によって返されるグローバル位置を使用して、揺れの動きを回避します。</target>
        </trans-unit>
        <trans-unit id="48836d76f845406462aa8231c83942c16a308fb1" translate="yes" xml:space="preserve">
          <source>If you move the widget as a result of the mouse event, use the screen position returned by &lt;a href=&quot;qmouseevent#screenPos&quot;&gt;screenPos&lt;/a&gt;() to avoid a shaking motion.</source>
          <target state="translated">マウスイベントの結果としてウィジェットを移動する場合は、&lt;a href=&quot;qmouseevent#screenPos&quot;&gt;screenPos&lt;/a&gt;（）によって返された画面位置を使用して、揺れ動きを避けます。</target>
        </trans-unit>
        <trans-unit id="a94049d4fb9f710d3ac1e5672cbaf20893df6f70" translate="yes" xml:space="preserve">
          <source>If you move widgets around in response to mouse events, use &lt;a href=&quot;qtabletevent#globalPos&quot;&gt;globalPos&lt;/a&gt;() instead of this function.</source>
          <target state="translated">マウスイベントに応答してウィジェットを移動する場合は、この関数の代わりに&lt;a href=&quot;qtabletevent#globalPos&quot;&gt;globalPos&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="1cb7bd27fb2afab61fc9d90a41c1cc5333493ec1" translate="yes" xml:space="preserve">
          <source>If you move widgets around in response to mouse events, use &lt;a href=&quot;qtabletevent#globalPosF&quot;&gt;globalPosF&lt;/a&gt;() instead of this function.</source>
          <target state="translated">マウスイベントに応答してウィジェットを移動する場合は、この関数の代わりに&lt;a href=&quot;qtabletevent#globalPosF&quot;&gt;globalPosF&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="bc1189230837866bd16163177bf8f8b92b690b0f" translate="yes" xml:space="preserve">
          <source>If you move your widgets around in response to mouse events, use &lt;a href=&quot;qwheelevent#globalPos&quot;&gt;globalPos&lt;/a&gt;() instead of this function.</source>
          <target state="translated">マウスイベントに応答してウィジェットを移動する場合は、この関数の代わりに&lt;a href=&quot;qwheelevent#globalPos&quot;&gt;globalPos&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="69ef74d3f62546691122624c9d6b9996fde5f307" translate="yes" xml:space="preserve">
          <source>If you move your widgets around in response to mouse events, use &lt;a href=&quot;qwheelevent#globalPosF&quot;&gt;globalPosF&lt;/a&gt;() instead of this function.</source>
          <target state="translated">マウスイベントに応答してウィジェットを移動する場合は、この関数の代わりに&lt;a href=&quot;qwheelevent#globalPosF&quot;&gt;globalPosF&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="98398f110a351968fea2d7f0aafa7392066d7e46" translate="yes" xml:space="preserve">
          <source>If you must expose a &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; to QML, use a &quot;var&quot; property rather than a &quot;variant&quot; property. In general, &quot;property var&quot; should be considered to be superior to &quot;property variant&quot; for every use-case from &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;QtQuick&lt;/a&gt; 2.0 and newer (note that &quot;property variant&quot; is marked as obsolete), as it allows a true JavaScript reference to be stored (which can reduce the number of conversions required in certain expressions).</source>
          <target state="translated">&lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt;をQMLに公開する必要がある場合は、「バリアント」プロパティではなく「var」プロパティを使用してください。一般に、「プロパティ&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;変数&lt;/a&gt;」は、QtQuick 2.0以降のすべてのユースケースで「プロパティバリアント」よりも優れていると見なされます（「プロパティバリアント」は廃止としてマークされていることに注意してください）。保存されます（特定の式で必要な変換の数を減らすことができます）。</target>
        </trans-unit>
        <trans-unit id="c2d2d4d5382a8845849da6e1184539b78f29d016" translate="yes" xml:space="preserve">
          <source>If you navigate within a result set, and use next() and seek() only for browsing forward, you can call &lt;a href=&quot;qsqlquery#setForwardOnly&quot;&gt;QSqlQuery::setForwardOnly&lt;/a&gt;(true) before calling exec(). This is an easy optimization that will speed up the query significantly when operating on large result sets.</source>
          <target state="translated">結果セット内をナビゲートし、前方参照のみにnext（）およびseek（）を使用する場合、exec（）を呼び出す前に&lt;a href=&quot;qsqlquery#setForwardOnly&quot;&gt;QSqlQuery :: setForwardOnly&lt;/a&gt;（true）を呼び出すことができます。これは簡単な最適化であり、大きな結果セットを操作するときにクエリを大幅に高速化します。</target>
        </trans-unit>
        <trans-unit id="f0be1ad7bf98429079625ea60af0aa6a3256b39e" translate="yes" xml:space="preserve">
          <source>If you need C++11 noexcept semantics, don't use this macro, use &lt;a href=&quot;qtglobal#Q_DECL_NOEXCEPT&quot;&gt;Q_DECL_NOEXCEPT&lt;/a&gt;/&lt;a href=&quot;qtglobal#Q_DECL_NOEXCEPT_EXPR&quot;&gt;Q_DECL_NOEXCEPT_EXPR&lt;/a&gt; instead.</source>
          <target state="translated">C ++ 11 noexceptセマンティクスが必要な場合は、このマクロを使用せず、代わりに&lt;a href=&quot;qtglobal#Q_DECL_NOEXCEPT&quot;&gt;Q_DECL_NOEXCEPT&lt;/a&gt; / &lt;a href=&quot;qtglobal#Q_DECL_NOEXCEPT_EXPR&quot;&gt;Q_DECL_NOEXCEPT_EXPRを&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="5ead8b6ac852866dc1489d0e461e4bf87214a911" translate="yes" xml:space="preserve">
          <source>If you need a custom label, you can replace the label item.</source>
          <target state="translated">カスタムラベルが必要な場合は、ラベルの項目を置き換えることができます。</target>
        </trans-unit>
        <trans-unit id="1cf280db22d6d52488b60a0e249b954f6baf900f" translate="yes" xml:space="preserve">
          <source>If you need a model to use with an item view such as QML's List View element or the C++ widgets &lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt; or &lt;a href=&quot;qtableview&quot;&gt;QTableView&lt;/a&gt;, you should consider subclassing &lt;a href=&quot;qabstractlistmodel&quot;&gt;QAbstractListModel&lt;/a&gt; or &lt;a href=&quot;qabstracttablemodel&quot;&gt;QAbstractTableModel&lt;/a&gt; instead of this class.</source>
          <target state="translated">QMLのリストビュー要素やC ++ウィジェット&lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt;や&lt;a href=&quot;qtableview&quot;&gt;QTableView&lt;/a&gt;などのアイテムビューで使用するモデルが必要な場合は、このクラスの代わりに&lt;a href=&quot;qabstractlistmodel&quot;&gt;QAbstractListModel&lt;/a&gt;または&lt;a href=&quot;qabstracttablemodel&quot;&gt;QAbstractTableModelを&lt;/a&gt;サブクラス化することを検討してください。</target>
        </trans-unit>
        <trans-unit id="bb7be3fd0c46756019cfdb4476764790df813f72" translate="yes" xml:space="preserve">
          <source>If you need a more specific run-time error to describe an exception, you can use the &lt;a href=&quot;qjsengine#throwError-1&quot;&gt;throwError(QJSValue::ErrorType errorType, const QString &amp;amp;message)&lt;/a&gt; overload.</source>
          <target state="translated">例外を記述するためにより具体的なランタイムエラーが必要な場合は、&lt;a href=&quot;qjsengine#throwError-1&quot;&gt;throwError（QJSValue :: ErrorType errorType、const QString＆message）&lt;/a&gt;オーバーロードを使用できます。</target>
        </trans-unit>
        <trans-unit id="c5ab13ffd4dd0d04293eb4de3600e7136f20fb6d" translate="yes" xml:space="preserve">
          <source>If you need a real linked list, which guarantees &lt;a href=&quot;containers#algorithmic-complexity&quot;&gt;constant time&lt;/a&gt; insertions mid-list and uses iterators to items rather than indexes, use &lt;a href=&quot;qlinkedlist&quot;&gt;QLinkedList&lt;/a&gt;.</source>
          <target state="translated">実際のリンクリストが必要な場合は、ミッドリストの&lt;a href=&quot;containers#algorithmic-complexity&quot;&gt;一定時間の&lt;/a&gt;挿入が保証され、インデックスではなくアイテムへのイテレーターが使用されます&lt;a href=&quot;qlinkedlist&quot;&gt;。QLinkedListを&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="82835375128e32f063444bcf40d34143273bf20c" translate="yes" xml:space="preserve">
          <source>If you need a real linked list, with guarantees of &lt;a href=&quot;containers#constant-time&quot;&gt;constant time&lt;/a&gt; insertions in the middle of the list and iterators to items rather than indexes, use &lt;a href=&quot;qlinkedlist&quot;&gt;QLinkedList&lt;/a&gt;.</source>
          <target state="translated">リストの真ん中に&lt;a href=&quot;containers#constant-time&quot;&gt;一定の時間の&lt;/a&gt;挿入が保証され、インデックスではなくアイテムへのイテレータがある実際のリンクリストが必要な場合は、&lt;a href=&quot;qlinkedlist&quot;&gt;QLinkedListを&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="2ff7766b8126fa8cbc1466fed1f0e58190dcb2a0" translate="yes" xml:space="preserve">
          <source>If you need only to find out if the service is registered or unregistered only, without being notified that the ownership changed, consider using the specific modes for those operations. This class is more efficient if you use the more specific modes.</source>
          <target state="translated">所有者が変更されたことを通知されることなく、サービスが登録されているか、登録されていないかだけを知る必要がある場合は、それらの操作のために特定のモードを使用することを検討してください。このクラスは、より具体的なモードを使用した方が効率的です。</target>
        </trans-unit>
        <trans-unit id="ccbe8ac683ad87263216c93c889911927b43a223" translate="yes" xml:space="preserve">
          <source>If you need the always-true version of C++11 noexcept, use &lt;a href=&quot;qtglobal#Q_DECL_NOEXCEPT&quot;&gt;Q_DECL_NOEXCEPT&lt;/a&gt;.</source>
          <target state="translated">常に真のバージョンのC ++ 11 noexceptが必要な場合は、Q_DECL_NOEXCEPTを使用して&lt;a href=&quot;qtglobal#Q_DECL_NOEXCEPT&quot;&gt;ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cba64fb8058145d48a493bb7b0fd35b6484109d5" translate="yes" xml:space="preserve">
          <source>If you need the operator version of C++11 noexcept, use &lt;a href=&quot;qtglobal#Q_DECL_NOEXCEPT_EXPR&quot;&gt;Q_DECL_NOEXCEPT_EXPR&lt;/a&gt;(x).</source>
          <target state="translated">C ++ 11 noexceptのオペレーターバージョンが必要な場合は、&lt;a href=&quot;qtglobal#Q_DECL_NOEXCEPT_EXPR&quot;&gt;Q_DECL_NOEXCEPT_EXPR&lt;/a&gt;（x）を使用してください。</target>
        </trans-unit>
        <trans-unit id="9ee8c3221c99146b0e5e11193014fd65ae082d49" translate="yes" xml:space="preserve">
          <source>If you need the same transformations over and over, you can also use &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt; objects and the &lt;a href=&quot;qpainter#worldTransform&quot;&gt;QPainter::worldTransform&lt;/a&gt;() and &lt;a href=&quot;qpainter#setWorldTransform&quot;&gt;QPainter::setWorldTransform&lt;/a&gt;() functions. You can at any time save the &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;'s transformation matrix by calling the &lt;a href=&quot;qpainter#save&quot;&gt;QPainter::save&lt;/a&gt;() function which saves the matrix on an internal stack. The &lt;a href=&quot;qpainter#restore&quot;&gt;QPainter::restore&lt;/a&gt;() function pops it back.</source>
          <target state="translated">同じ変換が何度も必要な場合は、&lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt;オブジェクト、&lt;a href=&quot;qpainter#worldTransform&quot;&gt;QPainter :: worldTransform&lt;/a&gt;（）および&lt;a href=&quot;qpainter#setWorldTransform&quot;&gt;QPainter :: setWorldTransform&lt;/a&gt;（）関数を使用することもできます。&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;の変換マトリックスは、内部スタックにマトリックスを&lt;a href=&quot;qpainter#save&quot;&gt;保存&lt;/a&gt;するQPainter :: save（）関数を呼び出すことでいつでも保存できます。&lt;a href=&quot;qpainter#restore&quot;&gt;QPainterの::復元&lt;/a&gt;（）関数が戻ってそれをポップ。</target>
        </trans-unit>
        <trans-unit id="957945d5b8560d51a2336561d3b078926428d4e6" translate="yes" xml:space="preserve">
          <source>If you need to access properties or pass parameters of unsupported datatypes you must access the COM object directly through its &lt;code&gt;IDispatch&lt;/code&gt; implementation or other interfaces. Those interfaces can be retrieved through &lt;a href=&quot;qaxbase#queryInterface&quot;&gt;queryInterface&lt;/a&gt;().</source>
          <target state="translated">プロパティにアクセスするか、サポートされていないデータ型のパラメーターを渡す必要がある場合は、 &lt;code&gt;IDispatch&lt;/code&gt; 実装またはその他のインターフェイスを介してCOMオブジェクトに直接アクセスする必要があります。これらのインターフェースは、&lt;a href=&quot;qaxbase#queryInterface&quot;&gt;queryInterface&lt;/a&gt;（）を介して取得できます。</target>
        </trans-unit>
        <trans-unit id="0f5b04a0753b7c48a75e79fc700b949642ace0fd" translate="yes" xml:space="preserve">
          <source>If you need to change some settings when a widget is polished, reimplement &lt;a href=&quot;qwidget#event&quot;&gt;event&lt;/a&gt;() and handle the &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::Polish&lt;/a&gt; event type.</source>
          <target state="translated">ウィジェットが洗練されているときに一部の設定を変更する必要がある場合は、&lt;a href=&quot;qwidget#event&quot;&gt;イベント&lt;/a&gt;（）を再実装し、&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: Polish&lt;/a&gt;イベントタイプを処理します。</target>
        </trans-unit>
        <trans-unit id="a69bdfba6ff23a4b4157931795226cafaa943e60" translate="yes" xml:space="preserve">
          <source>If you need to determine whether an object is an instance of a particular class for the purpose of casting it, consider using &lt;a href=&quot;qobject#qobject_cast&quot;&gt;qobject_cast&lt;/a&gt;&amp;lt;Type *&amp;gt;(object) instead.</source>
          <target state="translated">オブジェクトをキャストする目的で特定のクラスのインスタンスであるかどうかを判断する必要がある場合は、代わりに&lt;a href=&quot;qobject#qobject_cast&quot;&gt;qobject_cast&lt;/a&gt; &amp;lt;Type *&amp;gt;（object）の使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="7189bef7b3a3389b6825b2a88460691d1aa98363" translate="yes" xml:space="preserve">
          <source>If you need to draw a complex shape, especially if you need to do so repeatedly, consider creating a &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; and drawing it using &lt;a href=&quot;qpainter#drawPath&quot;&gt;drawPath&lt;/a&gt;().</source>
          <target state="translated">あなたが作成することを検討し、これを繰り返し行う必要がある場合は特に、複雑な形状を描画する必要がある場合&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPathを&lt;/a&gt;して使用して、それを描く&lt;a href=&quot;qpainter#drawPath&quot;&gt;drawPathを&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="3fc46b15e20a06df652aee6a62607471919cf5fb" translate="yes" xml:space="preserve">
          <source>If you need to ensure that the subdirectories are built in the order in which they are specified, update the &lt;a href=&quot;#config&quot;&gt;CONFIG&lt;/a&gt; variable to include the &lt;code&gt;ordered&lt;/code&gt; option:</source>
          <target state="translated">サブディレクトリが指定された順序でビルドされるようにする必要がある場合は、&lt;a href=&quot;#config&quot;&gt;CONFIG&lt;/a&gt;変数を更新して、 &lt;code&gt;ordered&lt;/code&gt; オプションを含めます。</target>
        </trans-unit>
        <trans-unit id="519adfd81a5373cd725dc77ba69d6aa56719cd7c" translate="yes" xml:space="preserve">
          <source>If you need to expose data to QML components, you need to make them available to the context of the current QML engine. See &lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt; for more information.</source>
          <target state="translated">QMLコンポーネントにデータを公開する必要がある場合は、現在のQMLエンジンのコンテキストでそれらを利用できるようにする必要があります。詳細については、&lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="d9b7d0be063a4569fd31f202dedd7cca3cd9a550" translate="yes" xml:space="preserve">
          <source>If you need to handle incoming TCP connections (e.g., in a server application), use the &lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt; class. Call &lt;a href=&quot;qtcpserver#listen&quot;&gt;QTcpServer::listen&lt;/a&gt;() to set up the server, and connect to the &lt;a href=&quot;qtcpserver#newConnection&quot;&gt;QTcpServer::newConnection&lt;/a&gt;() signal, which is emitted once for every client that connects. In your slot, call &lt;a href=&quot;qtcpserver#nextPendingConnection&quot;&gt;QTcpServer::nextPendingConnection&lt;/a&gt;() to accept the connection and use the returned &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt; to communicate with the client.</source>
          <target state="translated">サーバーアプリケーションなどで着信TCP接続を処理する必要がある場合は、&lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt;クラスを使用します。&lt;a href=&quot;qtcpserver#listen&quot;&gt;QTcpServer :: listen&lt;/a&gt;（）を呼び出してサーバーを設定し、&lt;a href=&quot;qtcpserver#newConnection&quot;&gt;QTcpServer :: newConnection&lt;/a&gt;（）シグナルに接続します。このシグナルは、接続するクライアントごとに1回発行されます。スロットで、&lt;a href=&quot;qtcpserver#nextPendingConnection&quot;&gt;QTcpServer :: nextPendingConnection&lt;/a&gt;（）を呼び出して接続を受け入れ、返された&lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;を使用してクライアントと通信します。</target>
        </trans-unit>
        <trans-unit id="9c2072c17e040860f444f8edd85f0a7ccd07039b" translate="yes" xml:space="preserve">
          <source>If you need to have translatable text completely outside a function, there are two macros to help: &lt;a href=&quot;#QT_TR_NOOP&quot;&gt;QT_TR_NOOP&lt;/a&gt;() and &lt;a href=&quot;#QT_TRANSLATE_NOOP&quot;&gt;QT_TRANSLATE_NOOP&lt;/a&gt;(). They merely mark the text for extraction by the &lt;code&gt;lupdate&lt;/code&gt; tool. The macros expand to just the text (without the context).</source>
          <target state="translated">翻訳可能なテキストを完全に関数の外側に置く必要がある場合、&lt;a href=&quot;#QT_TR_NOOP&quot;&gt;QT_TR_NOOP&lt;/a&gt;（）と&lt;a href=&quot;#QT_TRANSLATE_NOOP&quot;&gt;QT_TRANSLATE_NOOP&lt;/a&gt;（）の2つのマクロが役立ちます。 &lt;code&gt;lupdate&lt;/code&gt; ツールで抽出するテキストをマークするだけです。マクロはテキストのみに展開されます（コンテキストなし）。</target>
        </trans-unit>
        <trans-unit id="aab2531b447cc12880786ec55864c21278ccbf87" translate="yes" xml:space="preserve">
          <source>If you need to have two different strings for &lt;a href=&quot;qundocommand#text&quot;&gt;text&lt;/a&gt;() and &lt;a href=&quot;qundocommand#actionText&quot;&gt;actionText&lt;/a&gt;(), separate them with &quot;\n&quot; and pass into this function. Even if you do not use this feature for English strings during development, you can still let translators use two different strings in order to match specific languages' needs. The described feature and the function &lt;a href=&quot;qundocommand#actionText&quot;&gt;actionText&lt;/a&gt;() are available since Qt 4.8.</source>
          <target state="translated">&lt;a href=&quot;qundocommand#text&quot;&gt;text&lt;/a&gt;（）と&lt;a href=&quot;qundocommand#actionText&quot;&gt;actionText&lt;/a&gt;（）に2つの異なる文字列が必要な場合は、「\ n」で区切り、この関数に渡します。開発中にこの機能を英語の文字列に使用しない場合でも、特定の言語のニーズに合わせるために、翻訳者に2つの異なる文字列を使用させることができます。説明されている機能と関数&lt;a href=&quot;qundocommand#actionText&quot;&gt;actionText&lt;/a&gt;（）は、Qt 4.8以降で使用できます。</target>
        </trans-unit>
        <trans-unit id="1a9a2adacfff0b2777d2e32710905d3d4b9316e0" translate="yes" xml:space="preserve">
          <source>If you need to hide the implementation details, you can use the &amp;lt;Type&amp;gt;Source class instead, which is the 2nd class declared in the header file. This class definition does not provide data members, and makes the getter/setter functions pure virtual as well. You have more flexibility in how you implement the class, although you need to write more code.</source>
          <target state="translated">実装の詳細を非表示にする必要がある場合は、代わりに&amp;lt;Type&amp;gt; Sourceクラスを使用できます。これは、ヘッダーファイルで宣言されている2番目のクラスです。このクラス定義はデータメンバーを提供せず、getter / setter関数も純粋に仮想化します。より多くのコードを記述する必要がありますが、クラスを実装する方法に柔軟性があります。</target>
        </trans-unit>
        <trans-unit id="d9cdef74aa4c95ffef75289e890aed596df23b78" translate="yes" xml:space="preserve">
          <source>If you need to identify specific objects, your application should provide UI for registering objects and mapping them to functionality: allow the user to select a meaning, virtual tool, or action, prompt the user to bring the object into proximity, and store a mapping from uniqueId to its purpose, for example in &lt;a href=&quot;qml-qt-labs-settings-settings&quot;&gt;Settings&lt;/a&gt;.</source>
          <target state="translated">特定のオブジェクトを識別する必要がある場合、アプリケーションは、オブジェクトを登録して機能にマッピングするためのUIを提供する必要があります。ユーザーが意味、仮想ツール、またはアクションを選択できるようにし、オブジェクトを近接させるようにユーザーに促し、マッピングを保存します。 uniqueIdから目的まで、たとえば&lt;a href=&quot;qml-qt-labs-settings-settings&quot;&gt;Settingsで&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="424e57500c05caf36ad3723c09a844bed95cd8be" translate="yes" xml:space="preserve">
          <source>If you need to insert a new item into the list at a particular position, then it should be constructed without a parent widget. The &lt;a href=&quot;qlistwidget#insertItem&quot;&gt;insertItem&lt;/a&gt;() function should then be used to place it within the list. The list widget will take ownership of the item.</source>
          <target state="translated">リストの特定の位置に新しいアイテムを挿入する必要がある場合は、親ウィジェットなしで構築する必要があります。次に、&lt;a href=&quot;qlistwidget#insertItem&quot;&gt;insertItem&lt;/a&gt;（）関数を使用して、リスト内に配置する必要があります。リストウィジェットはアイテムの所有権を取得します。</target>
        </trans-unit>
        <trans-unit id="91a7a709a86a27efd33ac820b90801a38fa581ba" translate="yes" xml:space="preserve">
          <source>If you need to interpolate other variant types, including custom types, you have to implement interpolation for these yourself. To do this, you can register an interpolator function for a given type. This function takes 3 parameters: the start value, the end value, and the current progress.</source>
          <target state="translated">カスタム型を含む他のバリアント型を補間する必要がある場合は、これらの型の補間を自分で実装する必要があります。これを行うには、指定されたタイプの補間関数を登録します。この関数は、開始値、終了値、現在の進行状況の3つのパラメータを取ります。</target>
        </trans-unit>
        <trans-unit id="bd38e2abcc058e1e2d4291dfaf58e15f21d80da9" translate="yes" xml:space="preserve">
          <source>If you need to programatically insert translations into a &lt;a href=&quot;qtranslator&quot;&gt;QTranslator&lt;/a&gt;, this function can be reimplemented.</source>
          <target state="translated">プログラム的に翻訳を&lt;a href=&quot;qtranslator&quot;&gt;QTranslatorに&lt;/a&gt;挿入する必要がある場合、この関数を再実装できます。</target>
        </trans-unit>
        <trans-unit id="abdd8296c8ec5fc28dfa79ecfbd861b121d7e2a6" translate="yes" xml:space="preserve">
          <source>If you need to provide a scrolling view onto another widget, it may be more convenient to use the &lt;a href=&quot;qscrollarea&quot;&gt;QScrollArea&lt;/a&gt; class because this provides a viewport widget and scroll bars. &lt;a href=&quot;qscrollbar&quot;&gt;QScrollBar&lt;/a&gt; is useful if you need to implement similar functionality for specialized widgets using &lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea&lt;/a&gt;; for example, if you decide to subclass &lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt;. For most other situations where a slider control is used to obtain a value within a given range, the &lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt; class may be more appropriate for your needs.</source>
          <target state="translated">別のウィジェットにスクロールビューを提供する必要がある場合、ビューポートウィジェットとスクロールバーを提供するため、&lt;a href=&quot;qscrollarea&quot;&gt;QScrollArea&lt;/a&gt;クラスを使用する方が便利な場合があります。&lt;a href=&quot;qscrollbar&quot;&gt;QScrollBarは、&lt;/a&gt;あなたが使用して特殊なウィジェットのための同様の機能を実装する必要がある場合に便利です&lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollAreaを&lt;/a&gt;。たとえば、&lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt;をサブクラス化することにした場合などです。スライダーコントロールを使用して特定の範囲内の値を取得する他のほとんどの状況では、&lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt;クラスの方がニーズに適している場合があります。</target>
        </trans-unit>
        <trans-unit id="aee0d7e82a69b338949c0fd649b848c1c596b557" translate="yes" xml:space="preserve">
          <source>If you need to react to events that pass parameters of unsupported datatypes you can use the generic signal that delivers the event data as provided by the COM event.</source>
          <target state="translated">サポートされていないデータ型のパラメータを渡すイベントに反応する必要がある場合は、COM イベントで提供されるイベントデータを配信するジェネリックシグナルを使用することができます。</target>
        </trans-unit>
        <trans-unit id="6fbe9cee9a63dbb8da30a1f9d07d90fe350cd2da" translate="yes" xml:space="preserve">
          <source>If you need to register a C++ class to use from QML, you can call &lt;a href=&quot;qqmlengine#qmlRegisterType-1&quot;&gt;qmlRegisterType&lt;/a&gt;() before declaring your &lt;a href=&quot;qqmlapplicationengine&quot;&gt;QQmlApplicationEngine&lt;/a&gt;. See &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtqml-cppintegration-overview.html#defining-qml-types-from-c&quot;&gt;Defining QML Types from C++&lt;/a&gt; for more information.</source>
          <target state="translated">QMLから使用するC ++クラスを登録する必要がある場合は、&lt;a href=&quot;qqmlapplicationengine&quot;&gt;QQmlApplicationEngineを&lt;/a&gt;宣言する前に&lt;a href=&quot;qqmlengine#qmlRegisterType-1&quot;&gt;qmlRegisterType&lt;/a&gt;（）を呼び出すことができます。詳しくは&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtqml-cppintegration-overview.html#defining-qml-types-from-c&quot;&gt;、C ++からのQMLタイプの定義を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="070df41811e4cfcb443c483f838b46b263327697" translate="yes" xml:space="preserve">
          <source>If you need to save the cookies to disk, you have to derive from &lt;a href=&quot;qnetworkcookiejar&quot;&gt;QNetworkCookieJar&lt;/a&gt; and save the cookies to disk yourself.</source>
          <target state="translated">Cookieをディスクに保存する必要がある場合は、&lt;a href=&quot;qnetworkcookiejar&quot;&gt;QNetworkCookieJar&lt;/a&gt;から派生させ、Cookieを自分でディスクに保存する必要があります。</target>
        </trans-unit>
        <trans-unit id="11677a07f59fd2e9a0986a72e6b84c2aa0ffc7b2" translate="yes" xml:space="preserve">
          <source>If you need to set the height of a given row to a fixed value, call &lt;a href=&quot;qheaderview#resizeSection&quot;&gt;QHeaderView::resizeSection&lt;/a&gt;() on the table's vertical header.</source>
          <target state="translated">特定の行の高さを固定値に設定する必要がある場合は、テーブルの垂直ヘッダーで&lt;a href=&quot;qheaderview#resizeSection&quot;&gt;QHeaderView :: resizeSection&lt;/a&gt;（）を呼び出します。</target>
        </trans-unit>
        <trans-unit id="06aa884764c4854a13cd94643e4c1dc676f0acf2" translate="yes" xml:space="preserve">
          <source>If you need to set the width of a given column to a fixed value, call &lt;a href=&quot;qheaderview#resizeSection&quot;&gt;QHeaderView::resizeSection&lt;/a&gt;() on the table's horizontal header.</source>
          <target state="translated">特定の列の幅を固定値に設定する必要がある場合は、テーブルの水平ヘッダーで&lt;a href=&quot;qheaderview#resizeSection&quot;&gt;QHeaderView :: resizeSection&lt;/a&gt;（）を呼び出します。</target>
        </trans-unit>
        <trans-unit id="8d8ffa11866f62c1262dc9debe5cf831cc949b36" translate="yes" xml:space="preserve">
          <source>If you need to set the width of a given column to a fixed value, call &lt;a href=&quot;qheaderview#resizeSection&quot;&gt;QHeaderView::resizeSection&lt;/a&gt;() on the view's header.</source>
          <target state="translated">特定の列の幅を固定値に設定する必要がある場合は、ビューのヘッダーで&lt;a href=&quot;qheaderview#resizeSection&quot;&gt;QHeaderView :: resizeSection&lt;/a&gt;（）を呼び出します。</target>
        </trans-unit>
        <trans-unit id="37c115c6486d5e86ef8fcd9338eb375846af8d7b" translate="yes" xml:space="preserve">
          <source>If you need to trigger a repaint from places other than &lt;a href=&quot;qopenglwidget#paintGL&quot;&gt;paintGL&lt;/a&gt;() (a typical example is when using &lt;a href=&quot;qtimer&quot;&gt;timers&lt;/a&gt; to animate scenes), you should call the widget's &lt;a href=&quot;qwidget#update&quot;&gt;update&lt;/a&gt;() function to schedule an update.</source>
          <target state="translated">&lt;a href=&quot;qopenglwidget#paintGL&quot;&gt;paintGL&lt;/a&gt;（）以外の場所から再描画をトリガーする必要がある場合（典型的な例は、&lt;a href=&quot;qtimer&quot;&gt;タイマー&lt;/a&gt;を使用してシーンをアニメーション化する場合）、ウィジェットの&lt;a href=&quot;qwidget#update&quot;&gt;update&lt;/a&gt;（）関数を呼び出して更新をスケジュールする必要があります。</target>
        </trans-unit>
        <trans-unit id="a9d06232d9c3dd95a5b84067a80c515158f99fb4" translate="yes" xml:space="preserve">
          <source>If you need to use the &lt;code&gt;widget&lt;/code&gt; argument to obtain additional information, be careful to ensure that it isn't 0 and that it is of the correct type before using it. For example:</source>
          <target state="translated">追加の情報を取得するために &lt;code&gt;widget&lt;/code&gt; 引数を使用する必要がある場合は、それが0ではないことと、それを使用する前に正しいタイプであることを確認してください。例えば：</target>
        </trans-unit>
        <trans-unit id="342e5e2c96f1b7735f5d0c43329a1275eddb3a9f" translate="yes" xml:space="preserve">
          <source>If you need toggle behavior (see &lt;a href=&quot;qabstractbutton#checkable-prop&quot;&gt;setCheckable&lt;/a&gt;()) or a button that auto-repeats the activation signal when being pushed down like the arrows in a scroll bar (see &lt;a href=&quot;qabstractbutton#autoRepeat-prop&quot;&gt;setAutoRepeat&lt;/a&gt;()), a command button is probably not what you want. When in doubt, use a tool button.</source>
          <target state="translated">あなたがトグル動作（参照が必要な場合&lt;a href=&quot;qabstractbutton#checkable-prop&quot;&gt;setCheckableを&lt;/a&gt;（（）参照）や、スクロールバーの矢印のように押し下げされた起動信号を自動的に繰り返されることをボタンを&lt;a href=&quot;qabstractbutton#autoRepeat-prop&quot;&gt;setAutoRepeatを&lt;/a&gt;（））、コマンドボタンが何をしたい、おそらくではありません。疑問がある場合は、ツールボタンを使用してください。</target>
        </trans-unit>
        <trans-unit id="595944df693a930933ce18bd6f32394d05a05c6f" translate="yes" xml:space="preserve">
          <source>If you only need to extract the values from a hash (not the keys), you can also use &lt;a href=&quot;containers#foreach&quot;&gt;foreach&lt;/a&gt;:</source>
          <target state="translated">キーではなくハッシュから値を抽出するだけの場合は、&lt;a href=&quot;containers#foreach&quot;&gt;foreachを&lt;/a&gt;使用することもできます。</target>
        </trans-unit>
        <trans-unit id="cb290be20faaadde003e66d6e10ca093fb9aec1a" translate="yes" xml:space="preserve">
          <source>If you only need to extract the values from a map (not the keys), you can also use &lt;a href=&quot;containers#foreach&quot;&gt;foreach&lt;/a&gt;:</source>
          <target state="translated">（キーではなく）マップから値を抽出するだけの場合は、&lt;a href=&quot;containers#foreach&quot;&gt;foreachを&lt;/a&gt;使用することもできます。</target>
        </trans-unit>
        <trans-unit id="af9902078a527e4b41418e71e29f173b97546a06" translate="yes" xml:space="preserve">
          <source>If you only need to show plain text in an item, consider using &lt;a href=&quot;qgraphicssimpletextitem&quot;&gt;QGraphicsSimpleTextItem&lt;/a&gt; instead.</source>
          <target state="translated">アイテムにプレーンテキストのみを表示する必要がある場合は、代わりに&lt;a href=&quot;qgraphicssimpletextitem&quot;&gt;QGraphicsSimpleTextItemの&lt;/a&gt;使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="8d9a6fad5ee10addfae06f1d28f7009954de1b27" translate="yes" xml:space="preserve">
          <source>If you only want to remove the entries in the current &lt;a href=&quot;qsettings#group&quot;&gt;group&lt;/a&gt;(), use remove(&quot;&quot;) instead.</source>
          <target state="translated">現在の&lt;a href=&quot;qsettings#group&quot;&gt;グループ&lt;/a&gt;（）のエントリのみを削除する場合は、代わりにremove（ &quot;&quot;）を使用します。</target>
        </trans-unit>
        <trans-unit id="1981b65c0e1afa08eff47ad52174318a614d9ae7" translate="yes" xml:space="preserve">
          <source>If you open the buffer in write-only mode or read-write mode and write something into the &lt;a href=&quot;qbuffer&quot;&gt;QBuffer&lt;/a&gt;,</source>
          <target state="translated">バッファを書き込み専用モードまたは読み書きモードで開いて、何かを&lt;a href=&quot;qbuffer&quot;&gt;QBufferに&lt;/a&gt;書き込んだ場合、</target>
        </trans-unit>
        <trans-unit id="b1432aef431beb90fd8a3836144deeea09dc4ba0" translate="yes" xml:space="preserve">
          <source>If you parse XML data that does not utilize namespaces according to the XML specification or doesn't use namespaces at all, you can use the element's &lt;a href=&quot;qxmlstreamreader#qualifiedName&quot;&gt;qualifiedName&lt;/a&gt;() instead. A qualified name is the element's &lt;a href=&quot;qxmlstreamreader#prefix&quot;&gt;prefix&lt;/a&gt;() followed by colon followed by the element's local &lt;a href=&quot;qxmlstreamreader#name&quot;&gt;name&lt;/a&gt;() - exactly like the element appears in the raw XML data. Since the mapping &lt;a href=&quot;qxmlstreamreader#namespaceUri&quot;&gt;namespaceUri&lt;/a&gt; to prefix is neither unique nor universal, &lt;a href=&quot;qxmlstreamreader#qualifiedName&quot;&gt;qualifiedName&lt;/a&gt;() should be avoided for namespace-compliant XML data.</source>
          <target state="translated">XML仕様に従って名前空間を使用しない、または名前空間をまったく使用しないXMLデータを解析する場合は、代わりに要素の&lt;a href=&quot;qxmlstreamreader#qualifiedName&quot;&gt;qualifiedName&lt;/a&gt;（）を使用できます。修飾名は、要素の&lt;a href=&quot;qxmlstreamreader#prefix&quot;&gt;プレフィックス&lt;/a&gt;（）、コロン、要素のローカル&lt;a href=&quot;qxmlstreamreader#name&quot;&gt;名&lt;/a&gt;（）の順になったものです。要素が生のXMLデータに表示されるのとまったく同じです。接頭辞&lt;a href=&quot;qxmlstreamreader#namespaceUri&quot;&gt;namespaceUri&lt;/a&gt;から接頭辞へのマッピングは一意でも普遍的でもないため、名前空間に準拠したXMLデータの場合、&lt;a href=&quot;qxmlstreamreader#qualifiedName&quot;&gt;qualifiedName&lt;/a&gt;（）は使用しないでください。</target>
        </trans-unit>
        <trans-unit id="a9cadaec13e38df68e5abb156e901760e7c27372" translate="yes" xml:space="preserve">
          <source>If you pass &lt;code&gt;stsvar&lt;/code&gt;, the command's exit status will be stored in that variable. If the command crashes, the status will be -1, otherwise a non-negative exit code of the command's choosing. Usually, comparing the status with zero (success) is sufficient.</source>
          <target state="translated">&lt;code&gt;stsvar&lt;/code&gt; を渡すと、コマンドの終了ステータスがその変数に格納されます。コマンドがクラッシュした場合、ステータスは-1になり、それ以外の場合は、コマンドが選択した非負の終了コードになります。通常、ステータスをゼロ（成功）と比較するだけで十分です。</target>
        </trans-unit>
        <trans-unit id="2468029b6202e79cf90eedbcc8b9f8bac7c82f7e" translate="yes" xml:space="preserve">
          <source>If you pass a directory or file, the &lt;a href=&quot;qstorageinfo&quot;&gt;QStorageInfo&lt;/a&gt; object will refer to the volume where this directory or file is located. You can check if the created object is correct using the &lt;a href=&quot;qstorageinfo#isValid&quot;&gt;isValid&lt;/a&gt;() method.</source>
          <target state="translated">ディレクトリまたはファイルを渡す場合、&lt;a href=&quot;qstorageinfo&quot;&gt;QStorageInfo&lt;/a&gt;オブジェクトは、このディレクトリまたはファイルが配置されているボリュームを参照します。&lt;a href=&quot;qstorageinfo#isValid&quot;&gt;isValid&lt;/a&gt;（）メソッドを使用して、作成したオブジェクトが正しいかどうかを確認できます。</target>
        </trans-unit>
        <trans-unit id="095eb0d3621325e3be7f0f3c9d8de12134c82c50" translate="yes" xml:space="preserve">
          <source>If you pass a literal IP address to</source>
          <target state="translated">リテラル IP アドレスを</target>
        </trans-unit>
        <trans-unit id="c440b0ccf58e2711892efe6e2daa75e11c2eb77f" translate="yes" xml:space="preserve">
          <source>If you pass a parent to &lt;a href=&quot;qrubberband&quot;&gt;QRubberBand&lt;/a&gt;'s constructor, the rubber band will display only inside its parent, but stays on top of other child widgets. If no parent is passed, &lt;a href=&quot;qrubberband&quot;&gt;QRubberBand&lt;/a&gt; will act as a top-level widget.</source>
          <target state="translated">親を&lt;a href=&quot;qrubberband&quot;&gt;QRubberBand&lt;/a&gt;のコンストラクターに渡すと、ラバーバンドはその親の内側にのみ表示され、他の子ウィジェットの上にとどまります。親が渡されない場合、&lt;a href=&quot;qrubberband&quot;&gt;QRubberBand&lt;/a&gt;はトップレベルのウィジェットとして機能します。</target>
        </trans-unit>
        <trans-unit id="58ac130298ee38b7431712a4fcde652ae17a3c46" translate="yes" xml:space="preserve">
          <source>If you pass the SubPath option, this introspection has to include all child nodes. Otherwise &lt;a href=&quot;qdbus&quot;&gt;QDBus&lt;/a&gt; handles the introspection of the child nodes.</source>
          <target state="translated">SubPathオプションを渡す場合、このイントロスペクションにはすべての子ノードを含める必要があります。それ以外の場合、&lt;a href=&quot;qdbus&quot;&gt;QDBus&lt;/a&gt;は子ノードのイントロスペクションを処理します。</target>
        </trans-unit>
        <trans-unit id="62cbd3dd55a6c3dd22dd756d6bec35f6568c6d0e" translate="yes" xml:space="preserve">
          <source>If you pass the function a format string and a list of arguments, it works in similar way to the C printf() function. The format should be a Latin-1 string.</source>
          <target state="translated">この関数にフォーマット文字列と引数のリストを渡すと、C の printf()関数と似たように動作します。フォーマットは Latin-1 文字列でなければなりません。</target>
        </trans-unit>
        <trans-unit id="42f31dacf417f05e127400fc88bee63ad97c25aa" translate="yes" xml:space="preserve">
          <source>If you prefer the STL-style iterators, you can call &lt;a href=&quot;qmultimap#find&quot;&gt;find&lt;/a&gt;() to get the iterator for the first item with a key and iterate from there:</source>
          <target state="translated">STLスタイルのイテレーターを使用する場合は、&lt;a href=&quot;qmultimap#find&quot;&gt;find&lt;/a&gt;（）を呼び出して、キーを持つ最初の項目のイテレーターを取得し、そこから反復できます。</target>
        </trans-unit>
        <trans-unit id="bfe35a94f18877c56725758571c2d1f2bbda275e" translate="yes" xml:space="preserve">
          <source>If you provide 'A' as an argument to the \list command, the bullets are replaced with characters in alphabetical order:</source>
          <target state="translated">A'を引数に与えると、箇条書きはアルファベット順の文字に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="ae37e01cf5eb2864e6b40947b465f94efbf33c9a" translate="yes" xml:space="preserve">
          <source>If you provide 'i' as the argument, the bullets are replaced with roman numerals:</source>
          <target state="translated">引数に 'i' を与えると、箇条書きはローマ数字に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="731970c1d1538198d94cf0457f2b4f3e4be894b3" translate="yes" xml:space="preserve">
          <source>If you re-implement this method in a subclass, be sure to call</source>
          <target state="translated">このメソッドをサブクラスで再実装する場合は、必ず</target>
        </trans-unit>
        <trans-unit id="c345887566efa1bc25ea77a4606f6a41c7e58022" translate="yes" xml:space="preserve">
          <source>If you reimplement &lt;a href=&quot;qwizardpage#isComplete&quot;&gt;isComplete&lt;/a&gt;(), make sure to emit completeChanged() whenever the value of &lt;a href=&quot;qwizardpage#isComplete&quot;&gt;isComplete&lt;/a&gt;() changes, to ensure that &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; updates the enabled or disabled state of its buttons.</source>
          <target state="translated">&lt;a href=&quot;qwizardpage#isComplete&quot;&gt;isComplete&lt;/a&gt;（）を再実装する場合は、&lt;a href=&quot;qwizardpage#isComplete&quot;&gt;isComplete&lt;/a&gt;（）の値が変更されるたびにcompleteChanged（）を&lt;a href=&quot;qwizard&quot;&gt;発行&lt;/a&gt;して、QWizardがボタンの有効または無効の状態を確実に更新するようにしてください。</target>
        </trans-unit>
        <trans-unit id="914843405683e7c66dc5a8782b04dd8c9a8dd7df" translate="yes" xml:space="preserve">
          <source>If you reimplement this function in a subclass, note that the value you return is only used when &lt;a href=&quot;qtableview#resizeRowToContents&quot;&gt;resizeRowToContents&lt;/a&gt;() is called. In that case, if a larger row height is required by either the vertical header or the item delegate, that width will be used instead.</source>
          <target state="translated">この関数をサブクラスで再実装する場合、返される値は&lt;a href=&quot;qtableview#resizeRowToContents&quot;&gt;resizeRowToContents&lt;/a&gt;（）が呼び出されたときにのみ使用されることに注意してください。その場合、垂直ヘッダーまたはアイテムデリゲートのいずれかでより大きな行の高さが必要な場合は、代わりにその幅が使用されます。</target>
        </trans-unit>
        <trans-unit id="dc4cc9b4c334f4a25945c6d6e420725dabce950f" translate="yes" xml:space="preserve">
          <source>If you reimplement this function in a subclass, note that the value you return is only used when &lt;a href=&quot;qtreeview#resizeColumnToContents&quot;&gt;resizeColumnToContents&lt;/a&gt;() is called. In that case, if a larger column width is required by either the view's header or the item delegate, that width will be used instead.</source>
          <target state="translated">この関数をサブクラスで再実装する場合、返される値は&lt;a href=&quot;qtreeview#resizeColumnToContents&quot;&gt;resizeColumnToContents&lt;/a&gt;（）が呼び出されたときにのみ使用されることに注意してください。その場合、ビューのヘッダーまたはアイテムのデリゲートでより大きな列幅が必要な場合は、代わりにその幅が使用されます。</target>
        </trans-unit>
        <trans-unit id="80faad784ed683b7ebe81a65a067e804edbd5ae4" translate="yes" xml:space="preserve">
          <source>If you reimplement this function in a subclass, note that the value you return will be used when &lt;a href=&quot;qtableview#resizeColumnToContents&quot;&gt;resizeColumnToContents&lt;/a&gt;() or &lt;a href=&quot;qheaderview#resizeSections-1&quot;&gt;QHeaderView::resizeSections&lt;/a&gt;() is called. If a larger column width is required by either the horizontal header or the item delegate, the larger width will be used instead.</source>
          <target state="translated">この関数をサブクラスで再実装する場合、返される値は&lt;a href=&quot;qtableview#resizeColumnToContents&quot;&gt;resizeColumnToContents&lt;/a&gt;（）または&lt;a href=&quot;qheaderview#resizeSections-1&quot;&gt;QHeaderView :: resizeSections&lt;/a&gt;（）が呼び出されたときに使用されることに注意してください。水平ヘッダーまたはアイテムデリゲートのいずれかでより大きな列幅が必要な場合は、代わりにより大きな幅が使用されます。</target>
        </trans-unit>
        <trans-unit id="14bf8a36129c68c52297b33af2104f3a3e57519f" translate="yes" xml:space="preserve">
          <source>If you reimplement this function in your custom model, you must also reimplement the member functions that call it: &lt;a href=&quot;qabstractitemmodel#mimeData&quot;&gt;mimeData&lt;/a&gt;() and &lt;a href=&quot;qabstractitemmodel#dropMimeData&quot;&gt;dropMimeData&lt;/a&gt;().</source>
          <target state="translated">この関数をカスタムモデルで再実装する場合は、それを呼び出すメンバー関数である&lt;a href=&quot;qabstractitemmodel#mimeData&quot;&gt;mimeData&lt;/a&gt;（）および&lt;a href=&quot;qabstractitemmodel#dropMimeData&quot;&gt;dropMimeData&lt;/a&gt;（）も再実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="241523b4fecf200ea38f75fde41e25bf784b4fb7" translate="yes" xml:space="preserve">
          <source>If you reimplement this function to show a custom pop-up, make sure you call &lt;a href=&quot;qcombobox#hidePopup&quot;&gt;hidePopup&lt;/a&gt;() to reset the internal state.</source>
          <target state="translated">この関数を再実装してカスタムポップアップを表示する場合は、必ず&lt;a href=&quot;qcombobox#hidePopup&quot;&gt;hidePopup&lt;/a&gt;（）を呼び出して内部状態をリセットしてください。</target>
        </trans-unit>
        <trans-unit id="317cef53e92834b58f8db232e0262505d2f0d722" translate="yes" xml:space="preserve">
          <source>If you reimplement this function you also have to implement &lt;a href=&quot;qaxbindable#readData&quot;&gt;readData&lt;/a&gt;(). The default implementation does nothing and returns false.</source>
          <target state="translated">この関数を再実装する場合は、&lt;a href=&quot;qaxbindable#readData&quot;&gt;readData&lt;/a&gt;（）も実装する必要があります。デフォルトの実装は何もせず、falseを返します。</target>
        </trans-unit>
        <trans-unit id="a5f6f0fc3652bfa4cdf346a95036c06abc5448ad" translate="yes" xml:space="preserve">
          <source>If you reimplement this function you also have to implement &lt;a href=&quot;qaxbindable#writeData&quot;&gt;writeData&lt;/a&gt;(). The default implementation does nothing and returns false.</source>
          <target state="translated">この関数を再実装する場合は、&lt;a href=&quot;qaxbindable#writeData&quot;&gt;writeData&lt;/a&gt;（）も実装する必要があります。デフォルトの実装は何もせず、falseを返します。</target>
        </trans-unit>
        <trans-unit id="59c499ef805f5adda87a6e828740b95fa5da9b9c" translate="yes" xml:space="preserve">
          <source>If you reimplement this function you must also reimplement &lt;a href=&quot;qaxfactory#unregisterClass&quot;&gt;unregisterClass&lt;/a&gt;() to remove the additional registry values.</source>
          <target state="translated">この関数を再実装する場合は、&lt;a href=&quot;qaxfactory#unregisterClass&quot;&gt;unregisterClass&lt;/a&gt;（）も再実装して、追加のレジストリ値を削除する必要があります。</target>
        </trans-unit>
        <trans-unit id="5dafa3e034af5fad97569d1e5e7ef17dc7603299" translate="yes" xml:space="preserve">
          <source>If you reimplement this function you must also reimplement the destructor to call clear(), and call this implementation at the end of your clear() function.</source>
          <target state="translated">この関数を再実装する場合は、clear()を呼び出すデストラクタも再実装し、clear()関数の最後にこの実装を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="ba7b5a834b411685e0a6145d25de991fe9466f7e" translate="yes" xml:space="preserve">
          <source>If you reimplement this function, be careful to return the correct value: it should return the number of bytes read in this line, including the terminating newline, or 0 if there is no line to be read at this point. If an error occurs, it should return -1 if and only if no bytes were read. Reading past EOF is considered an error.</source>
          <target state="translated">この関数を再実装する場合は、正しい値を返すように注意してください:終端の改行を含むこの行で読み込まれたバイト数を返すか、この時点で読み込まれる行がない場合は 0 を返すべきです。エラーが発生した場合は、読み込まれたバイト数がゼロの場合のみ-1を返します。EOFを超えて読み込んだ場合はエラーとみなされます。</target>
        </trans-unit>
        <trans-unit id="7f0f811b2dee4e47f7f67e785a39ee8b1336e278" translate="yes" xml:space="preserve">
          <source>If you reimplement this function, make sure to emit &lt;a href=&quot;qwizardpage#completeChanged&quot;&gt;completeChanged&lt;/a&gt;(), from the rest of your implementation, whenever the value of isComplete() changes. This ensures that &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; updates the enabled or disabled state of its buttons. An example of the reimplementation is available &lt;a href=&quot;http://doc.qt.io/archives/qq/qq22-qwizard.html#validatebeforeitstoolate&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">この関数を再実装する場合は、isComplete（）の値が変更されるたびに、残りの実装から&lt;a href=&quot;qwizardpage#completeChanged&quot;&gt;completeChanged&lt;/a&gt;（）を発行してください。これにより、&lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt;はボタンの有効または無効の状態を確実に更新します。再実装の例は&lt;a href=&quot;http://doc.qt.io/archives/qq/qq22-qwizard.html#validatebeforeitstoolate&quot;&gt;ここに&lt;/a&gt;あります。</target>
        </trans-unit>
        <trans-unit id="6121aea8e26ace6bd5c7785a32c8007ecd435fbe" translate="yes" xml:space="preserve">
          <source>If you reimplement this function, note that the ownership of the returned &lt;a href=&quot;qmimedata&quot;&gt;QMimeData&lt;/a&gt; object is passed to the caller. The selection can be retrieved by using the &lt;a href=&quot;qplaintextedit#textCursor&quot;&gt;textCursor&lt;/a&gt;() function.</source>
          <target state="translated">この関数を再実装する場合は、返された&lt;a href=&quot;qmimedata&quot;&gt;QMimeData&lt;/a&gt;オブジェクトの所有権が呼び出し元に渡されることに注意してください。選択範囲は、&lt;a href=&quot;qplaintextedit#textCursor&quot;&gt;textCursor&lt;/a&gt;（）関数を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="019f7bf1d1d734e24dd917dd0cee3eadc03d7fdb" translate="yes" xml:space="preserve">
          <source>If you reimplement this function, note that the ownership of the returned &lt;a href=&quot;qmimedata&quot;&gt;QMimeData&lt;/a&gt; object is passed to the caller. The selection can be retrieved by using the &lt;a href=&quot;qtextedit#textCursor&quot;&gt;textCursor&lt;/a&gt;() function.</source>
          <target state="translated">この関数を再実装する場合は、返された&lt;a href=&quot;qmimedata&quot;&gt;QMimeData&lt;/a&gt;オブジェクトの所有権が呼び出し元に渡されることに注意してください。選択範囲は、&lt;a href=&quot;qtextedit#textCursor&quot;&gt;textCursor&lt;/a&gt;（）関数を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="48ee44b9472494640a1a02db7be151a05fbbfe6f" translate="yes" xml:space="preserve">
          <source>If you reimplement this function, you can return other &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; types. The table below shows which variant types are supported depending on the resource type:</source>
          <target state="translated">この関数を再実装すると、他の&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;型を返すことができます。次の表は、リソースタイプに応じてサポートされるバリアントタイプを示しています。</target>
        </trans-unit>
        <trans-unit id="19a862905403389a4b02d238d2699e0e0553cbaf" translate="yes" xml:space="preserve">
          <source>If you reimplement this handler, it is very important that you &lt;a href=&quot;qevent&quot;&gt;ignore()&lt;/a&gt; the event if you do not handle it, so that the widget's parent can interpret it.</source>
          <target state="translated">このハンドラーを再実装する場合は、イベントを処理しない場合はイベントを&lt;a href=&quot;qevent&quot;&gt;ignore（）&lt;/a&gt;して、ウィジェットの親がイベントを解釈できるようにすることが非常に重要です。</target>
        </trans-unit>
        <trans-unit id="bd6881e41238ecfdfdf2717ee493442d7a4ad036" translate="yes" xml:space="preserve">
          <source>If you reimplement this handler, it is very important that you call the base class implementation if you do not act upon the key.</source>
          <target state="translated">このハンドラを再実装する場合、キーに基づいて行動しない場合はベースクラスの実装を呼び出すことが非常に重要です。</target>
        </trans-unit>
        <trans-unit id="7e8e223786b37a873a7278ae8baeb7e9b6b9e63c" translate="yes" xml:space="preserve">
          <source>If you reimplement this you must also reimplement &lt;a href=&quot;qabstractitemdelegate#paint&quot;&gt;paint&lt;/a&gt;().</source>
          <target state="translated">これを再実装する場合は、&lt;a href=&quot;qabstractitemdelegate#paint&quot;&gt;paint&lt;/a&gt;（）も再実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="637e7ac5550b4557cb47b73ba483c57837079309" translate="yes" xml:space="preserve">
          <source>If you reimplement this you must also reimplement &lt;a href=&quot;qabstractitemdelegate#sizeHint&quot;&gt;sizeHint&lt;/a&gt;().</source>
          <target state="translated">これを再実装する場合は、&lt;a href=&quot;qabstractitemdelegate#sizeHint&quot;&gt;sizeHint&lt;/a&gt;（）も再実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="ce640650d17e4498675375a04b2eb5b8a0016844" translate="yes" xml:space="preserve">
          <source>If you reimplement this, you may also need to reimplement &lt;a href=&quot;qdatetimeedit#validate&quot;&gt;validate&lt;/a&gt;().</source>
          <target state="translated">これを再実装する場合は、&lt;a href=&quot;qdatetimeedit#validate&quot;&gt;validate&lt;/a&gt;（）も再実装する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="a33c3d76f7cfc8a3320bef2d8f1e863c93b633cd" translate="yes" xml:space="preserve">
          <source>If you reimplement this, you may also need to reimplement &lt;a href=&quot;qdoublespinbox#valueFromText&quot;&gt;valueFromText&lt;/a&gt;().</source>
          <target state="translated">これを再実装する場合は、&lt;a href=&quot;qdoublespinbox#valueFromText&quot;&gt;valueFromText&lt;/a&gt;（）も再実装する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="7e6e004075e74e9581fdc0b4adde39e723bceee2" translate="yes" xml:space="preserve">
          <source>If you reimplement this, you may also need to reimplement &lt;a href=&quot;qspinbox#valueFromText&quot;&gt;valueFromText&lt;/a&gt;() and &lt;a href=&quot;qspinbox#validate&quot;&gt;validate&lt;/a&gt;()</source>
          <target state="translated">これを再実装する場合、&lt;a href=&quot;qspinbox#valueFromText&quot;&gt;valueFromText&lt;/a&gt;（）と&lt;a href=&quot;qspinbox#validate&quot;&gt;validate&lt;/a&gt;（）も再実装する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="037eabcdd3665a989ed4b2e44de2d118c2dd4856" translate="yes" xml:space="preserve">
          <source>If you remove the menu bar, a new one can be created by selecting the &lt;b&gt;Create Menu Bar&lt;/b&gt; option from the context menu, obtained by right-clicking within the main window form.</source>
          <target state="translated">メニューバーを削除すると、メインウィンドウフォーム内で右クリックして表示されるコンテキストメニューから&lt;b&gt;[メニューバー&lt;/b&gt;の&lt;b&gt;作成]&lt;/b&gt;オプションを選択して、新しい&lt;b&gt;メニューバーを作成&lt;/b&gt;できます。</target>
        </trans-unit>
        <trans-unit id="ccfdab642e1e2bbb6355170fc5b98e2173313427" translate="yes" xml:space="preserve">
          <source>If you replace 'A' with '1', the list items are numbered in ascending order:</source>
          <target state="translated">A」を「1」に置き換えると、リストの項目は昇順に番号が付けられます。</target>
        </trans-unit>
        <trans-unit id="d82384c56b8b47dd8ba0f28c64d195e5e8098152" translate="yes" xml:space="preserve">
          <source>If you require finer control over playing sounds, consider the &lt;a href=&quot;qsoundeffect&quot;&gt;QSoundEffect&lt;/a&gt; or &lt;a href=&quot;qaudiooutput&quot;&gt;QAudioOutput&lt;/a&gt; classes.</source>
          <target state="translated">サウンドの再生をより細かく制御する必要がある場合は、&lt;a href=&quot;qaudiooutput&quot;&gt;QSoundEffect&lt;/a&gt;クラスまたはQAudioOutputクラスを検討して&lt;a href=&quot;qsoundeffect&quot;&gt;ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="70a2df5240d20ed12120f0888cff3009256a2d06" translate="yes" xml:space="preserve">
          <source>If you restore the Z value, the item's insertion order will decide its stacking order.</source>
          <target state="translated">Zの値を元に戻すと、アイテムの挿入順で積み上げ順が決まります。</target>
        </trans-unit>
        <trans-unit id="2c7ed57b46833bd7c963562211c28f66948481e5" translate="yes" xml:space="preserve">
          <source>If you set &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;'s &lt;a href=&quot;qpainter#RenderHint-enum&quot;&gt;anti-aliasing&lt;/a&gt; render hint, the pixels will be rendered symetrically on both sides of the mathematically defined points:</source>
          <target state="translated">あなたが設定されている場合は&lt;a href=&quot;qpainter&quot;&gt;QPainterの&lt;/a&gt;の&lt;a href=&quot;qpainter#RenderHint-enum&quot;&gt;アンチエイリアシング&lt;/a&gt;レンダリングヒントを、ピクセルは、数学的に定義されたポイントの両側に対称的にレンダリングされます。</target>
        </trans-unit>
        <trans-unit id="403ac36c3dc11f4321381173d9b10dd0fa897d5e" translate="yes" xml:space="preserve">
          <source>If you set &lt;code&gt;QML_IMPORT_TRACE=1&lt;/code&gt; before running the &lt;a href=&quot;qtquick-qmlscene#&quot;&gt;QML Scene&lt;/a&gt; or your QML C++ application, you will see output similar to:</source>
          <target state="translated">&lt;a href=&quot;qtquick-qmlscene#&quot;&gt;QMLシーン&lt;/a&gt;またはQML C ++アプリケーションを実行する前に &lt;code&gt;QML_IMPORT_TRACE=1&lt;/code&gt; を設定すると、次のような出力が表示されます。</target>
        </trans-unit>
        <trans-unit id="1bef83b959da9c78ca1c919563bd96a50bdf2db6" translate="yes" xml:space="preserve">
          <source>If you set a cursorDelegate for a &lt;a href=&quot;qml-qtquick-textedit&quot;&gt;TextEdit&lt;/a&gt;, this delegate will be used for drawing the cursor instead of the standard cursor. An instance of the delegate will be created and managed by the text edit when a cursor is needed, and the x and y properties of delegate instance will be set so as to be one pixel before the top left of the current character.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-textedit&quot;&gt;TextEdit&lt;/a&gt;にcursorDelegateを設定した場合、このデリゲートは標準カーソルの代わりにカーソルを描画するために使用されます。デリゲートのインスタンスは、カーソルが必要なときにテキスト編集によって作成および管理され、デリゲートインスタンスのxプロパティとyプロパティは、現在の文字の左上に1ピクセル前になるように設定されます。</target>
        </trans-unit>
        <trans-unit id="bbd4f27ee17216328f29625eaca8cfb2ff7dc6c3" translate="yes" xml:space="preserve">
          <source>If you set a cursorDelegate for a &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt;, this delegate will be used for drawing the cursor instead of the standard cursor. An instance of the delegate will be created and managed by the &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt; when a cursor is needed, and the x property of the delegate instance will be set so as to be one pixel before the top left of the current character.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt;にcursorDelegateを設定した場合、このデリゲートは標準カーソルの代わりにカーソルを描画するために使用されます。デリゲートのインスタンスは、カーソルが必要なときに&lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt;によって作成および管理され、デリゲートインスタンスのxプロパティは、現在の文字の左上の1ピクセルになるように設定されます。</target>
        </trans-unit>
        <trans-unit id="047958af1c10584793fadf46dfff954803186cf9" translate="yes" xml:space="preserve">
          <source>If you set a drop action that is not one of the possible actions, the drag and drop operation will default to a copy operation.</source>
          <target state="translated">可能なアクションの1つではないドロップアクションを設定した場合、ドラッグ&amp;ドロップ操作はデフォルトでコピー操作になります。</target>
        </trans-unit>
        <trans-unit id="a5a96eb99713196f9a09efc6f3f1749958e02b44" translate="yes" xml:space="preserve">
          <source>If you set a font that isn't available, Qt finds a close match. &lt;a href=&quot;qpainter#font&quot;&gt;font&lt;/a&gt;() will return what you set using setFont() and &lt;a href=&quot;qpainter#fontInfo&quot;&gt;fontInfo&lt;/a&gt;() returns the font actually being used (which may be the same).</source>
          <target state="translated">利用できないフォントを設定した場合、Qtは近いものを見つけます。&lt;a href=&quot;qpainter#font&quot;&gt;font&lt;/a&gt;（）はsetFont（）を使用して設定したものを返し、&lt;a href=&quot;qpainter#fontInfo&quot;&gt;fontInfo&lt;/a&gt;（）は実際に使用されているフォントを返します（同じ場合もあります）。</target>
        </trans-unit>
        <trans-unit id="004043069d8a07628c90c4b4958ae006433f2857" translate="yes" xml:space="preserve">
          <source>If you set a list of point types as values, the x-coordinate of the point specifies its zero-based index in the bar set. The size of the bar set is the highest x-coordinate value + 1. If a point is missing for any x-coordinate between zero and the highest value, it gets the value zero.</source>
          <target state="translated">点の種類のリストを値として設定した場合、その点のx座標は、バーセット内のその点のゼロベースのインデックスを指定します。バーセットのサイズは、最高のx座標値+1となります。点がゼロと最高値の間の任意のx座標で欠落している場合、その点は値ゼロを取得します。</target>
        </trans-unit>
        <trans-unit id="fdc9233830c1d652cc4418de75ef220f3d6bf0d6" translate="yes" xml:space="preserve">
          <source>If you set a list of real types as values, they directly define the bar set values.</source>
          <target state="translated">実数型のリストを値として設定すると、それらが直接バーセットの値を定義します。</target>
        </trans-unit>
        <trans-unit id="d026b32ff4e11356bacbf6f7cec5aac64d62b2ec" translate="yes" xml:space="preserve">
          <source>If you set a proxy factory with this function, any application level proxies set with &lt;a href=&quot;qnetworkproxy#setApplicationProxy&quot;&gt;QNetworkProxy::setApplicationProxy&lt;/a&gt; will be overridden, and &lt;a href=&quot;qnetworkproxyfactory#usesSystemConfiguration&quot;&gt;usesSystemConfiguration&lt;/a&gt;() will return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">この関数でプロキシファクトリを設定すると、&lt;a href=&quot;qnetworkproxy#setApplicationProxy&quot;&gt;QNetworkProxy :: setApplicationProxyで&lt;/a&gt;設定されたアプリケーションレベルのプロキシはすべてオーバーライドされ、&lt;a href=&quot;qnetworkproxyfactory#usesSystemConfiguration&quot;&gt;usesSystemConfiguration&lt;/a&gt;（）は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b13a093dc2ce286f0c9ccccb7cc994fb7903b344" translate="yes" xml:space="preserve">
          <source>If you set a text width on the &lt;a href=&quot;qstatictext&quot;&gt;QStaticText&lt;/a&gt; object, this will bound the text. The text will be formatted so that no line exceeds the given width. The text width set for &lt;a href=&quot;qstatictext&quot;&gt;QStaticText&lt;/a&gt; will not automatically be used for clipping. To achieve clipping in addition to line breaks, use &lt;a href=&quot;qpainter#setClipRect&quot;&gt;QPainter::setClipRect&lt;/a&gt;(). The position of the text is decided by the argument passed to &lt;a href=&quot;qpainter#drawStaticText&quot;&gt;QPainter::drawStaticText&lt;/a&gt;() and can change from call to call with a minimal impact on performance.</source>
          <target state="translated">&lt;a href=&quot;qstatictext&quot;&gt;QStaticText&lt;/a&gt;オブジェクトにテキスト幅を設定すると、これによりテキストがバインドされます。テキストは、指定された幅を超える行がないようにフォーマットされます。&lt;a href=&quot;qstatictext&quot;&gt;QStaticTextに&lt;/a&gt;設定されたテキスト幅は、クリッピングに自動的には使用されません。改行に加えてクリッピングを実現するには、&lt;a href=&quot;qpainter#setClipRect&quot;&gt;QPainter :: setClipRect&lt;/a&gt;（）を使用します。テキストの位置は&lt;a href=&quot;qpainter#drawStaticText&quot;&gt;QPainter :: drawStaticText&lt;/a&gt;（）に渡される引数によって決定され、パフォーマンスへの影響を最小限に抑えて呼び出しごとに変更できます。</target>
        </trans-unit>
        <trans-unit id="f5118897b753fa9be9a7cd2e59ff122df27064a9" translate="yes" xml:space="preserve">
          <source>If you set handleWidth to 1 or 0, the actual grab area will grow to overlap a few pixels of its respective widgets.</source>
          <target state="translated">handleWidthを1または0に設定すると、実際のグラブ領域は、それぞれのウィジェットの数ピクセルの重なり合うように成長します。</target>
        </trans-unit>
        <trans-unit id="d0ec48d57a2e4338f862d2ee757f449cd9f198c0" translate="yes" xml:space="preserve">
          <source>If you set the rectangle to a null rectangle (for example, &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;(0, 0, 0, 0)), then the resulting frame rectangle is equivalent to the &lt;a href=&quot;qwidget#rect-prop&quot;&gt;widget rectangle&lt;/a&gt;.</source>
          <target state="translated">四角形をnull四角形（たとえば、&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;（0、0、0、0））に設定すると、結果のフレーム四角形は&lt;a href=&quot;qwidget#rect-prop&quot;&gt;ウィジェット四角形&lt;/a&gt;と同等になります。</target>
        </trans-unit>
        <trans-unit id="431602cc3b53aaddb31c020ccf0ff4c5479bf5ad" translate="yes" xml:space="preserve">
          <source>If you set this property to &lt;code&gt;false&lt;/code&gt;, ensure the application provides a way to remove the file once it is no longer needed, including passing the responsibility on to another process. Always use the &lt;a href=&quot;qtemporaryfile#fileName&quot;&gt;fileName&lt;/a&gt;() function to obtain the name and never try to guess the name that &lt;a href=&quot;qtemporaryfile&quot;&gt;QTemporaryFile&lt;/a&gt; has generated.</source>
          <target state="translated">このプロパティを &lt;code&gt;false&lt;/code&gt; に設定する場合は、アプリケーションが、不要になったファイルを削除する方法（責任を別のプロセスに渡すなど）を提供していることを確認してください。名前を取得するには常に&lt;a href=&quot;qtemporaryfile#fileName&quot;&gt;fileName&lt;/a&gt;（）関数を使用し、&lt;a href=&quot;qtemporaryfile&quot;&gt;QTemporaryFile&lt;/a&gt;が生成した名前を推測しようとしないでください。</target>
        </trans-unit>
        <trans-unit id="643778f0fba3e1dca37f5ecfec036f6d4506a847" translate="yes" xml:space="preserve">
          <source>If you simply want to check whether a &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; contains a particular character or substring, use &lt;a href=&quot;qbytearray#contains&quot;&gt;contains&lt;/a&gt;(). If you want to find out how many times a particular character or substring occurs in the byte array, use &lt;a href=&quot;qbytearray#count-3&quot;&gt;count&lt;/a&gt;(). If you want to replace all occurrences of a particular value with another, use one of the two-parameter &lt;a href=&quot;qbytearray#replace&quot;&gt;replace&lt;/a&gt;() overloads.</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;に特定の文字または部分文字列が含まれているかどうかを確認するだけの場合は、&lt;a href=&quot;qbytearray#contains&quot;&gt;contains&lt;/a&gt;（）を使用します。バイト配列で特定の文字または部分文字列が発生する回数を知りたい場合は、&lt;a href=&quot;qbytearray#count-3&quot;&gt;count&lt;/a&gt;（）を使用します。特定の値のすべての出現箇所を別の値に置き換える場合は、2つのパラメーターの&lt;a href=&quot;qbytearray#replace&quot;&gt;replace&lt;/a&gt;（）オーバーロードの1つを使用します。</target>
        </trans-unit>
        <trans-unit id="24518665c949173b5a4db723c29cc8031141b05a" translate="yes" xml:space="preserve">
          <source>If you simply want to check whether a list contains a particular value, use &lt;a href=&quot;qlist#contains&quot;&gt;contains&lt;/a&gt;(). If you want to find out how many times a particular value occurs in the list, use &lt;a href=&quot;qlist#count-1&quot;&gt;count&lt;/a&gt;(). If you want to replace all occurrences of a particular value with another, use &lt;a href=&quot;qlist#replace&quot;&gt;replace&lt;/a&gt;().</source>
          <target state="translated">リストに特定の値が含まれているかどうかを確認するだけの場合は、&lt;a href=&quot;qlist#contains&quot;&gt;contains&lt;/a&gt;（）を使用します。リスト内で特定の値が発生する回数を知りたい場合は、&lt;a href=&quot;qlist#count-1&quot;&gt;count&lt;/a&gt;（）を使用します。特定の値のすべての出現箇所を別の値に置き換える場合は、&lt;a href=&quot;qlist#replace&quot;&gt;replace&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="ad6e5b02153501b6bb6236aff4d1862201610206" translate="yes" xml:space="preserve">
          <source>If you simply want to check whether a vector contains a particular value, use &lt;a href=&quot;qvector#contains&quot;&gt;contains&lt;/a&gt;(). If you want to find out how many times a particular value occurs in the vector, use &lt;a href=&quot;qvector#count-1&quot;&gt;count&lt;/a&gt;().</source>
          <target state="translated">ベクトルに特定の値が含まれているかどうかを確認するだけの場合は、&lt;a href=&quot;qvector#contains&quot;&gt;contains&lt;/a&gt;（）を使用します。ベクトルで特定の値が発生する回数を確認する場合は、&lt;a href=&quot;qvector#count-1&quot;&gt;count&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="2e296f249be4339e6509618575b567b889bbaad2" translate="yes" xml:space="preserve">
          <source>If you specify a deployment target value lower than what Qt requires, the application will almost certainly crash somewhere in the Qt libraries when run on an older version than Qt supports. Therefore, make sure that the actual build system code reflects the minimum OS version that is actually required.</source>
          <target state="translated">Qt が必要とする値よりも低いデプロイ目標値を指定した場合、Qt がサポートしているバージョンよりも古いバージョンで実行すると、ほぼ確実に Qt ライブラリのどこかでアプリケーションがクラッシュしてしまいます。そのため、実際のビルドシステムのコードには、実際に必要とされる最小の OS バージョンが反映されていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="7bcb3f27d98dc21bbbbdb2fca0feff41e2a96fee" translate="yes" xml:space="preserve">
          <source>If you specify a non-empty rect the tip will be hidden as soon as you move your cursor out of this area.</source>
          <target state="translated">空ではない矩形を指定すると、カーソルをこの領域の外に移動させるとすぐにチップが隠されます。</target>
        </trans-unit>
        <trans-unit id="5c568e1672c79d12d4f2fa5377fd0caa16da352f" translate="yes" xml:space="preserve">
          <source>If you specify a size of 0, the widget will be invisible. The size policies of the widgets are preserved. That is, a value smaller than the minimal size hint of the respective widget will be replaced by the value of the hint.</source>
          <target state="translated">サイズを0に指定すると、ウィジェットは非表示になります。ウィジェットのサイズポリシーは保持されます。つまり、それぞれのウィジェットの最小サイズのヒントよりも小さい値は、ヒントの値で置き換えられます。</target>
        </trans-unit>
        <trans-unit id="c3fd839eb46fe8c9d85d7a5a8a27da4e517f92a1" translate="yes" xml:space="preserve">
          <source>If you specify an invalid format the format will not be set.</source>
          <target state="translated">無効なフォーマットを指定した場合、フォーマットは設定されません。</target>
        </trans-unit>
        <trans-unit id="fbc28d16ade9336d7264eba8457e21db3442a949" translate="yes" xml:space="preserve">
          <source>If you specify both DirsFirst and Reversed, directories are still put first, but in reverse order; the files will be listed after the directories, again in reverse order.</source>
          <target state="translated">DirsFirst と Reversed の両方を指定した場合、ディレクトリは最初に配置されますが、逆順に配置されます。</target>
        </trans-unit>
        <trans-unit id="231c42a287b5db792543b45ee495ed920b2f5439" translate="yes" xml:space="preserve">
          <source>If you store types that &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; can't convert to &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; (e.g., &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;, &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;, and &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;), Qt uses an &lt;code&gt;@&lt;/code&gt;-based syntax to encode the type. For example:</source>
          <target state="translated">&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;が&lt;a href=&quot;qstring&quot;&gt;QStringに&lt;/a&gt;変換できないタイプ（たとえば、&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;、&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;、および&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;）を格納する場合、Qtは &lt;code&gt;@&lt;/code&gt; ベースの構文を使用してタイプをエンコードします。例えば：</target>
        </trans-unit>
        <trans-unit id="c87ff348d61b82364184c96386b64b0cf54c3a7d" translate="yes" xml:space="preserve">
          <source>If you subclass &lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt; you will need to reimplement this function.</source>
          <target state="translated">&lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt;をサブクラス化する場合は、この関数を再実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="ae78e35466488b5b971a806f36b2c10e455e5af7" translate="yes" xml:space="preserve">
          <source>If you subclass &lt;a href=&quot;qstandarditem&quot;&gt;QStandardItem&lt;/a&gt; and reimplement this function, your reimplementation should call &lt;a href=&quot;qstandarditem#emitDataChanged&quot;&gt;emitDataChanged&lt;/a&gt;() if you do not call the base implementation of setData(). This will ensure that e.g. views using the model are notified of the changes.</source>
          <target state="translated">&lt;a href=&quot;qstandarditem&quot;&gt;QStandardItem&lt;/a&gt;をサブクラス化し、この関数を再実装する場合、&lt;a href=&quot;qstandarditem#emitDataChanged&quot;&gt;setData&lt;/a&gt;（）の基本実装を呼び出さない場合、再実装では、emitDataChanged（）を呼び出す必要があります。これにより、たとえばモデルを使用するビューに変更が通知されます。</target>
        </trans-unit>
        <trans-unit id="fc0b440d0989d912bb6682da839ae855b265651a" translate="yes" xml:space="preserve">
          <source>If you subclass &lt;code&gt;QAbstractSpinBox&lt;/code&gt; you must reimplement this function. Note that this function is called even if the resulting value will be outside the bounds of minimum and maximum. It's this function's job to handle these situations.</source>
          <target state="translated">&lt;code&gt;QAbstractSpinBox&lt;/code&gt; をサブクラス化する場合は、この関数を再実装する必要があります。この関数は、結果の値が最小値と最大値の範囲外であっても呼び出されることに注意してください。これらの状況を処理するのは、この関数の仕事です。</target>
        </trans-unit>
        <trans-unit id="9353c85818adf16a4bc1a52e583895bd302ea2de" translate="yes" xml:space="preserve">
          <source>If you subclass from &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;, you need to provide a paintEvent for your custom &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; as below:</source>
          <target state="translated">&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;からサブクラス化する場合、以下のようにカスタム&lt;a href=&quot;qwidget&quot;&gt;QWidgetに&lt;/a&gt; paintEventを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="ece176f56b7b3a3ec40536468261faa29b795910" translate="yes" xml:space="preserve">
          <source>If you support drag and drop in your application, and want to start a drag and drop operation after the user has held down a mouse button for a certain amount of time, you should use this property's value as the delay.</source>
          <target state="translated">アプリケーションでドラッグ&amp;ドロップをサポートしていて、ユーザーがマウスボタンを一定時間押し続けた後にドラッグ&amp;ドロップ操作を開始したい場合は、このプロパティの値を遅延として使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="8f148dd579171b7166c03213ee0d96a67bc0cade" translate="yes" xml:space="preserve">
          <source>If you support drag and drop in your application, and want to start a drag and drop operation after the user has moved the cursor a certain distance with a button held down, you should use this property's value as the minimum distance required.</source>
          <target state="translated">アプリケーションでドラッグ&amp;ドロップをサポートしていて、ユーザーがボタンを押したままカーソルを一定距離移動させた後にドラッグ&amp;ドロップ操作を開始したい場合は、このプロパティの値を必要最小限の距離として使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="8085f25bc7d3665287233d8b17e5b0d757de1c83" translate="yes" xml:space="preserve">
          <source>If you then set the goal state to the</source>
          <target state="translated">その後、ゴールの状態を</target>
        </trans-unit>
        <trans-unit id="a1ca8967666264a51f7b4a705a3ff46be5298235" translate="yes" xml:space="preserve">
          <source>If you throw an exception that is not a subclass of &lt;a href=&quot;qexception&quot;&gt;QException&lt;/a&gt;, the Qt functions will throw a &lt;a href=&quot;qunhandledexception&quot;&gt;QUnhandledException&lt;/a&gt; in the receiver thread.</source>
          <target state="translated">&lt;a href=&quot;qexception&quot;&gt;QExceptionの&lt;/a&gt;サブクラスではない例外をスローすると、Qt関数はレシーバースレッドで&lt;a href=&quot;qunhandledexception&quot;&gt;QUnhandledException&lt;/a&gt;をスローします。</target>
        </trans-unit>
        <trans-unit id="027dcf6fa70f50b1e0fcca67f8e009d8475a3f1a" translate="yes" xml:space="preserve">
          <source>If you try to clear the error stack, make sure not just keep going until GL_NO_ERROR is returned but also break on GL_CONTEXT_LOST as that error value will keep repeating.</source>
          <target state="translated">エラースタックをクリアしようとする場合は、GL_NO_ERRORが返されるまで続けるのではなく、 GL_CONTEXT_LOSTでブレークするようにしてください。</target>
        </trans-unit>
        <trans-unit id="66d8fb540e390350ceab15ad11cb2d14cbfa76b0" translate="yes" xml:space="preserve">
          <source>If you try to pass a value from another enum or just a plain integer other than 0, the compiler will report an error. If you need to cast integer values to flags in a untyped fashion, you can use the explicit &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt; constructor as cast operator.</source>
          <target state="translated">別の列挙型または0以外の単純な整数から値を渡そうとすると、コンパイラーはエラーを報告します。型なしの方法で整数値をフラグにキャストする必要がある場合は、明示的な&lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt;コンストラクターをキャスト演算子として使用できます。</target>
        </trans-unit>
        <trans-unit id="bb489276c3a79691beb36d8c22727f950ccbce1a" translate="yes" xml:space="preserve">
          <source>If you use &lt;a href=&quot;qabstractitemview#scrollDirtyRegion&quot;&gt;scrollDirtyRegion&lt;/a&gt;() and implement a &lt;a href=&quot;qabstractscrollarea#paintEvent&quot;&gt;paintEvent&lt;/a&gt;() in a subclass of &lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt;, you should translate the area given by the paint event with the offset returned from this function.</source>
          <target state="translated">あなたが使用している場合は&lt;a href=&quot;qabstractitemview#scrollDirtyRegion&quot;&gt;scrollDirtyRegionを&lt;/a&gt;（）し、実装&lt;a href=&quot;qabstractscrollarea#paintEvent&quot;&gt;paintEvent&lt;/a&gt;のサブクラスで（）&lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemViewを&lt;/a&gt;、あなたはこのオフセット関数から返されると、ペイントイベントによって与えられた領域を変換する必要があります。</target>
        </trans-unit>
        <trans-unit id="e6aba7ba4a932684c2acb8eec62838cbcb85b7d7" translate="yes" xml:space="preserve">
          <source>If you use &lt;a href=&quot;qmake-manual&quot;&gt;qmake&lt;/a&gt; to build your projects, Qt GUI is included by default. To disable Qt GUI, add the following line to your &lt;code&gt;.pro&lt;/code&gt; file:</source>
          <target state="translated">&lt;a href=&quot;qmake-manual&quot;&gt;qmake&lt;/a&gt;を使用してプロジェクトをビルドする場合、Qt GUIがデフォルトで含まれています。Qt GUIを無効にするには、 &lt;code&gt;.pro&lt;/code&gt; ファイルに次の行を追加します。</target>
        </trans-unit>
        <trans-unit id="38adad0e80433ce5374cc3c78d3eeea7fbd65411" translate="yes" xml:space="preserve">
          <source>If you use &lt;a href=&quot;qmake-manual&quot;&gt;qmake&lt;/a&gt; to build your projects, Qt5Core is linked by default.</source>
          <target state="translated">&lt;a href=&quot;qmake-manual&quot;&gt;qmake&lt;/a&gt;を使用してプロジェクトをビルドする場合、デフォルトではQt5Coreがリンクされます。</target>
        </trans-unit>
        <trans-unit id="5075d8a58cbccf2b19a18fc8f3d40ecfa88c3b3e" translate="yes" xml:space="preserve">
          <source>If you use &lt;a href=&quot;qmake-manual&quot;&gt;qmake&lt;/a&gt; to create your makefiles, build rules will be included that call the moc when required, so you will not need to use the moc directly. For more background information on &lt;code&gt;moc&lt;/code&gt;, see &lt;a href=&quot;why-moc#&quot;&gt;Why Does Qt Use Moc for Signals and Slots?&lt;/a&gt;</source>
          <target state="translated">あなたが使用している場合は&lt;a href=&quot;qmake-manual&quot;&gt;qmakeのを&lt;/a&gt;、あなたのメイクファイルを作成するためにあなたが直接MOCを使用する必要はありませんので、ビルドルールは、コールMOCが必要な時ということも含まれます。 &lt;code&gt;moc&lt;/code&gt; の背景情報について&lt;a href=&quot;why-moc#&quot;&gt;は、Qtが信号とスロットにMocを使用する理由を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b813a975620cedd1d63c1f6520825459dbde2ad0" translate="yes" xml:space="preserve">
          <source>If you use &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; from many places in your application, you might want to specify the organization name and the application name using &lt;a href=&quot;qcoreapplication#organizationName-prop&quot;&gt;QCoreApplication::setOrganizationName&lt;/a&gt;() and &lt;a href=&quot;qcoreapplication#applicationName-prop&quot;&gt;QCoreApplication::setApplicationName&lt;/a&gt;(), and then use the default &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; constructor:</source>
          <target state="translated">アプリケーションの多くの場所から&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;を使用する場合、&lt;a href=&quot;qcoreapplication#organizationName-prop&quot;&gt;QCoreApplication :: setOrganizationName&lt;/a&gt;（）および&lt;a href=&quot;qcoreapplication#applicationName-prop&quot;&gt;QCoreApplication :: setApplicationName&lt;/a&gt;（）を使用して組織名とアプリケーション名を指定し、次にデフォルトの&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;コンストラクターを使用することができます。</target>
        </trans-unit>
        <trans-unit id="add980e843a7ddc5f181f430dafc7f2dc6cb6c8e" translate="yes" xml:space="preserve">
          <source>If you use &lt;code&gt;qmake&lt;/code&gt; and Makefiles, use the &lt;code&gt;QMAKE_LFLAGS_SONAME&lt;/code&gt; setting:</source>
          <target state="translated">あなたが使用している場合は &lt;code&gt;qmake&lt;/code&gt; のとのMakefileを使用し &lt;code&gt;QMAKE_LFLAGS_SONAME&lt;/code&gt; の設定を：</target>
        </trans-unit>
        <trans-unit id="5ca554fbe42cc1b563f4e294b48a29dc639174dd" translate="yes" xml:space="preserve">
          <source>If you use &lt;code&gt;qmake&lt;/code&gt;, &lt;code&gt;uic&lt;/code&gt; will be invoked automatically for header files.</source>
          <target state="translated">あなたが使用している場合は &lt;code&gt;qmake&lt;/code&gt; のを、 &lt;code&gt;uic&lt;/code&gt; ヘッダファイルを自動的に起動されます。</target>
        </trans-unit>
        <trans-unit id="8046036d7c642b36de61fa7d4f65213dd3c58f67" translate="yes" xml:space="preserve">
          <source>If you use a brush with a &lt;a href=&quot;qgradient&quot;&gt;QGradient&lt;/a&gt;, the gradient is relative to the item's coordinate system.</source>
          <target state="translated">&lt;a href=&quot;qgradient&quot;&gt;QGradient&lt;/a&gt;でブラシを使用する場合、グラデーションはアイテムの座標系を基準にします。</target>
        </trans-unit>
        <trans-unit id="c0c7225d70c96d951d167a22fe91ba16e501ed52" translate="yes" xml:space="preserve">
          <source>If you use a read-write &lt;a href=&quot;qsqlrelationaltablemodel&quot;&gt;QSqlRelationalTableModel&lt;/a&gt;, you probably want to use &lt;a href=&quot;qsqlrelationaldelegate&quot;&gt;QSqlRelationalDelegate&lt;/a&gt; on the view. Unlike the default delegate, &lt;a href=&quot;qsqlrelationaldelegate&quot;&gt;QSqlRelationalDelegate&lt;/a&gt; provides a combobox for fields that are foreign keys into other tables. To use the class, simply call &lt;a href=&quot;qabstractitemview#setItemDelegate&quot;&gt;QAbstractItemView::setItemDelegate&lt;/a&gt;() on the view with an instance of &lt;a href=&quot;qsqlrelationaldelegate&quot;&gt;QSqlRelationalDelegate&lt;/a&gt;:</source>
          <target state="translated">読み取り/書き込み&lt;a href=&quot;qsqlrelationaltablemodel&quot;&gt;QSqlRelationalTableModel&lt;/a&gt;を使用する場合、ビューで&lt;a href=&quot;qsqlrelationaldelegate&quot;&gt;QSqlRelationalDelegate&lt;/a&gt;を使用することをお勧めします。デフォルトのデリゲートとは異なり、&lt;a href=&quot;qsqlrelationaldelegate&quot;&gt;QSqlRelationalDelegate&lt;/a&gt;は、他のテーブルへの外部キーであるフィールドにコンボボックスを提供します。クラスを使用するには、&lt;a href=&quot;qsqlrelationaldelegate&quot;&gt;QSqlRelationalDelegateの&lt;/a&gt;インスタンスを使用して、ビューで&lt;a href=&quot;qabstractitemview#setItemDelegate&quot;&gt;QAbstractItemView :: setItemDelegate&lt;/a&gt;（）を呼び出すだけです。</target>
        </trans-unit>
        <trans-unit id="c025e0f62d5d506b03891dcc3eaa3313b1ceb63f" translate="yes" xml:space="preserve">
          <source>If you use another build system, you can pass the following defines to the compiler:</source>
          <target state="translated">他のビルドシステムを使用している場合は、以下の定義をコンパイラに渡すことができます。</target>
        </trans-unit>
        <trans-unit id="90bf696ac5affef197c98e800663b6802cd8d7c8" translate="yes" xml:space="preserve">
          <source>If you use the &lt;a href=&quot;qwidget#windowModified-prop&quot;&gt;windowModified&lt;/a&gt; mechanism, the window title must contain a &quot;[*]&quot; placeholder, which indicates where the '*' should appear. Normally, it should appear right after the file name (e.g., &quot;document1.txt[*] - Text Editor&quot;). If the &lt;a href=&quot;qwidget#windowModified-prop&quot;&gt;windowModified&lt;/a&gt; property is &lt;code&gt;false&lt;/code&gt; (the default), the placeholder is simply removed.</source>
          <target state="translated">&lt;a href=&quot;qwidget#windowModified-prop&quot;&gt;windowModified&lt;/a&gt;メカニズムを使用する場合、ウィンドウタイトルには「[*]」プレースホルダーを含める必要があります。これは、「*」が表示される場所を示します。通常、ファイル名の直後に表示されます（例：「document1.txt [*]-Text Editor」）。場合&lt;a href=&quot;qwidget#windowModified-prop&quot;&gt;windowModified&lt;/a&gt;プロパティがある &lt;code&gt;false&lt;/code&gt; （デフォルト）、プレースホルダは、単純に削除されます。</target>
        </trans-unit>
        <trans-unit id="c104e6782e776da7461bb5c1aab379d1fa1f4f8b" translate="yes" xml:space="preserve">
          <source>If you use the &lt;code&gt;Q_CLASSINFO()&lt;/code&gt; macro to provide the unique identifiers or other attributes for your class you can use the &lt;code&gt;QAXFACTORY_BEGIN()&lt;/code&gt;, &lt;code&gt;QAXCLASS()&lt;/code&gt; and &lt;code&gt;QAXFACTORY_END()&lt;/code&gt; macros to expose one or more classes as COM objects.</source>
          <target state="translated">あなたが使用している場合は &lt;code&gt;Q_CLASSINFO()&lt;/code&gt; クラスの一意の識別子または他の属性を提供するために、マクロをあなたが使用することができます &lt;code&gt;QAXFACTORY_BEGIN()&lt;/code&gt; 、 &lt;code&gt;QAXCLASS()&lt;/code&gt; と &lt;code&gt;QAXFACTORY_END()&lt;/code&gt; COMオブジェクトとして1つ以上のクラスを公開するためにマクロを。</target>
        </trans-unit>
        <trans-unit id="164b8c02eec01fef31a24f7930bbb2f55c2f7660" translate="yes" xml:space="preserve">
          <source>If you use the glBindFramebuffer() in &lt;a href=&quot;https://doc.qt.io/qt-5.13/qopenglfunctions.html&quot;&gt;QOpenGLFunctions&lt;/a&gt; you do not have to worry about this, as it automatically binds the current context's defaultFramebufferObject() when 0 is passed.</source>
          <target state="translated">あなたがglBindFramebuffer（）を使用している場合&lt;a href=&quot;https://doc.qt.io/qt-5.13/qopenglfunctions.html&quot;&gt;QOpenGLFunctions&lt;/a&gt;あなたは0が渡されたとき、それは自動的に現在のコンテキストのdefaultFramebufferObjectを（）と結合すると、この心配する必要はありません。</target>
        </trans-unit>
        <trans-unit id="465dd22453cd823b86d8a7cec428c5c9a97d2db7" translate="yes" xml:space="preserve">
          <source>If you want a blocking lookup, use the &lt;a href=&quot;qhostinfo#fromName&quot;&gt;QHostInfo::fromName&lt;/a&gt;() function:</source>
          <target state="translated">ブロッキングルックアップが必要な場合は、&lt;a href=&quot;qhostinfo#fromName&quot;&gt;QHostInfo :: fromName&lt;/a&gt;（）関数を使用します。</target>
        </trans-unit>
        <trans-unit id="78ed224dea9cfd5f1b0963e7c161808ef5c73770" translate="yes" xml:space="preserve">
          <source>If you want a specific button to be default you need to call &lt;a href=&quot;qpushbutton#default-prop&quot;&gt;QPushButton::setDefault&lt;/a&gt;() on it yourself. However, if there is no default button set and to preserve which button is the default button across platforms when using the &lt;a href=&quot;qpushbutton#autoDefault-prop&quot;&gt;QPushButton::autoDefault&lt;/a&gt; property, the first push button with the accept role is made the default button when the &lt;a href=&quot;qdialogbuttonbox&quot;&gt;QDialogButtonBox&lt;/a&gt; is shown,</source>
          <target state="translated">特定のボタンをデフォルトにしたい場合は、自分で&lt;a href=&quot;qpushbutton#default-prop&quot;&gt;QPushButton :: setDefault&lt;/a&gt;（）を呼び出す必要があります。ただし、デフォルトボタンセットがなく、&lt;a href=&quot;qpushbutton#autoDefault-prop&quot;&gt;QPushButton :: autoDefault&lt;/a&gt;プロパティを使用するときにプラットフォーム間でどのボタンがデフォルトボタンであるかを保持する場合、&lt;a href=&quot;qdialogbuttonbox&quot;&gt;QDialogBu​​ttonBox&lt;/a&gt;が表示されるときに、acceptロールを持つ最初のプッシュボタンがデフォルトボタンになります。</target>
        </trans-unit>
        <trans-unit id="d0ee116c48b7a25f03a5fdc1279c7c88d799aac8" translate="yes" xml:space="preserve">
          <source>If you want a table that uses your own data model you should use &lt;a href=&quot;qtableview&quot;&gt;QTableView&lt;/a&gt; rather than this class.</source>
          <target state="translated">独自のデータモデルを使用するテーブルが必要な場合は、このクラスではなく&lt;a href=&quot;qtableview&quot;&gt;QTableView&lt;/a&gt;を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="4066f30b49e877beb77fbbb1b03dbbd2aab03b4a" translate="yes" xml:space="preserve">
          <source>If you want all windows in a Mac application to share one menu bar, don't use this function to create it, because the menu bar created here will have this &lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow&lt;/a&gt; as its parent. Instead, you must create a menu bar that does not have a parent, which you can then share among all the Mac windows. Create a parent-less menu bar this way:</source>
          <target state="translated">Macアプリケーションのすべてのウィンドウで1つのメニューバーを共有する場合は、この関数を使用して作成しないでください。ここで作成されたメニューバーは、この&lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow&lt;/a&gt;を親として持つためです。代わりに、親を持たないメニューバーを作成する必要があります。親は、すべてのMacウィンドウ間で共有できます。次のようにして、親のないメニューバーを作成します。</target>
        </trans-unit>
        <trans-unit id="31b95d83456383d9523b22a6f580deb4b0c226d2" translate="yes" xml:space="preserve">
          <source>If you want all windows in a Mac application to share one menu bar, you must create a menu bar that does not have a parent. Create a parent-less menu bar this way:</source>
          <target state="translated">Mac アプリケーションのすべてのウィンドウで 1 つのメニューバーを共有したい場合は、親を持たないメニューバーを作成する必要があります。このようにして、親のないメニューバーを作成します。</target>
        </trans-unit>
        <trans-unit id="8ea9eff46c8438d5355c7754f5d314f0d0331659" translate="yes" xml:space="preserve">
          <source>If you want different graphics or audio for different geographical regions, you can use Qt.&lt;a href=&quot;technical-guide#locale&quot;&gt;locale&lt;/a&gt;() to get the current locale. Then you choose appropriate graphics or audio for that locale.</source>
          <target state="translated">地域ごとに異なるグラフィックやオーディオが必要な場合は、Qtを使用できます。&lt;a href=&quot;technical-guide#locale&quot;&gt;locale&lt;/a&gt;（）は、現在のロケールを取得します。次に、そのロケールに適したグラフィックスまたはオーディオを選択します。</target>
        </trans-unit>
        <trans-unit id="446f88c9cddd8c4474604644640db651614e76a6" translate="yes" xml:space="preserve">
          <source>If you want neither the default, nor the minimal QPA plugin to be linked automatically, use:</source>
          <target state="translated">デフォルトの QPA プラグインも最小の QPA プラグインも自動的にリンクさせたくない場合は、以下のようにしてください。</target>
        </trans-unit>
        <trans-unit id="0b89c527347aa3766219b2a3bded0796f0992a5d" translate="yes" xml:space="preserve">
          <source>If you want the items to occupy adjacent memory positions, use &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;.</source>
          <target state="translated">アイテムが隣接するメモリ位置を占めるようにするには、&lt;a href=&quot;qvector&quot;&gt;QVectorを&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="9fdd7c36b6c3979f02bf13657853e90c75d56a84" translate="yes" xml:space="preserve">
          <source>If you want the plugin to be loadable then one approach is to create a subdirectory under the application, and place the plugin in that directory. If you distribute any of the plugins that come with Qt (the ones located in the &lt;code&gt;plugins&lt;/code&gt; directory), you must copy the subdirectory under &lt;code&gt;plugins&lt;/code&gt; where the plugin is located to your applications root folder (i.e., do not include the &lt;code&gt;plugins&lt;/code&gt; directory).</source>
          <target state="translated">プラグインをロード可能にしたい場合、1つのアプローチは、アプリケーションの下にサブディレクトリを作成し、そのディレクトリにプラグインを配置することです。あなたはQtの（ものはに位置して来るのプラグインのいずれかを配布する場合 &lt;code&gt;plugins&lt;/code&gt; ディレクトリ）、あなたは下のサブディレクトリをコピーする必要があります &lt;code&gt;plugins&lt;/code&gt; プラグインは、アプリケーションのルートフォルダに配置されている（すなわち、含まれていない &lt;code&gt;plugins&lt;/code&gt; ディレクトリ）。</target>
        </trans-unit>
        <trans-unit id="1547dbbe53958db51bfc0636fe2d9a75dcedc772" translate="yes" xml:space="preserve">
          <source>If you want the rest of the URL to be case insensitive, you will have to take care of that yourself inside your image provider.</source>
          <target state="translated">URL の残りの部分を大文字小文字を区別しないようにしたい場合は、画像プロバイダの中で自分で処理する必要があります。</target>
        </trans-unit>
        <trans-unit id="b2ceee3ac5c8d581ed65d658427fc7dba2f3ab94" translate="yes" xml:space="preserve">
          <source>If you want the widget to be deleted when it is closed, create it with the &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt::WA_DeleteOnClose&lt;/a&gt; flag. This is very useful for independent top-level windows in a multi-window application.</source>
          <target state="translated">ウィジェットを閉じるときに削除する場合は、&lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt :: WA_DeleteOnClose&lt;/a&gt;フラグを使用してウィジェットを作成します。これは、マルチウィンドウアプリケーションの独立したトップレベルウィンドウに非常に役立ちます。</target>
        </trans-unit>
        <trans-unit id="f616738a391d1d34bf98d9064907be46ceb77ccb" translate="yes" xml:space="preserve">
          <source>If you want to abort the print job, &lt;a href=&quot;qprinter#abort&quot;&gt;abort&lt;/a&gt;() will try its best to stop printing. It may cancel the entire job or just part of it.</source>
          <target state="translated">印刷ジョブを中止したい場合、&lt;a href=&quot;qprinter#abort&quot;&gt;abort&lt;/a&gt;（）は最善の方法で印刷を中止します。ジョブ全体または一部のみがキャンセルされる場合があります。</target>
        </trans-unit>
        <trans-unit id="072f5ce0b0ae384f54c36e755b7c3114bd8b4caa" translate="yes" xml:space="preserve">
          <source>If you want to access the text of a node use &lt;a href=&quot;qdomelement#text&quot;&gt;text&lt;/a&gt;(), e.g.</source>
          <target state="translated">ノードのテキストにアクセスする場合は、&lt;a href=&quot;qdomelement#text&quot;&gt;text&lt;/a&gt;（）を使用します。たとえば、</target>
        </trans-unit>
        <trans-unit id="af270e6549ee7a5853d9d59523cdb19eafa6e734" translate="yes" xml:space="preserve">
          <source>If you want to append a certain number of identical characters to the string, use the &lt;a href=&quot;qstring#resize-1&quot;&gt;resize&lt;/a&gt;(int, &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;) overload.</source>
          <target state="translated">文字列に特定の数の同じ文字を追加する場合は、&lt;a href=&quot;qstring#resize-1&quot;&gt;サイズ変更&lt;/a&gt;（int、&lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;）オーバーロードを使用します。</target>
        </trans-unit>
        <trans-unit id="74615ef5923d5f6bd1ef246221c633d243a15754" translate="yes" xml:space="preserve">
          <source>If you want to be notified when a state machine sends out an event, you can connect to the corresponding signal. For example, for a media player state machine which indicates that playback has stopped by sending an event, you can write:</source>
          <target state="translated">ステートマシンがイベントを送信したときに通知を受けたい場合は、対応する信号に接続することができます。例えば、イベントを送信して再生が停止したことを示すメディアプレーヤーのステートマシンの場合は、以下のように書きます。</target>
        </trans-unit>
        <trans-unit id="829cc87afe3eb42cae7ecff016f3497ad8d384a4" translate="yes" xml:space="preserve">
          <source>If you want to be sure not to lose any debug message, you must use real-time logging instead of calling this function. However, debug messages might still be generated in the timespan between context creation and activation of real-time logging (or, in general, when the real-time logging is disabled).</source>
          <target state="translated">デバッグメッセージを失わないようにしたい場合は、この関数を呼び出す代わりにリアルタイムロギングを使用しなければなりません。しかし、コンテキストが作成されてからリアルタイムロギングが有効になるまでの間 (または、一般的にはリアルタイムロギングが無効になっている場合)にもデバッグメッセージが生成されるかもしれません。</target>
        </trans-unit>
        <trans-unit id="edd46e63010e9398a3500347fb1d6ed771b6b5b7" translate="yes" xml:space="preserve">
          <source>If you want to build a new dynamic library combining the Qt 4 dynamic libraries, you need to introduce the &lt;code&gt;ld -r&lt;/code&gt; flag. Then relocation information is stored in the output file, so that this file could be the subject of another &lt;code&gt;ld&lt;/code&gt; run. This is done by setting the &lt;code&gt;-r&lt;/code&gt; flag in the &lt;code&gt;.pro&lt;/code&gt; file, and the &lt;code&gt;LFLAGS&lt;/code&gt; settings.</source>
          <target state="translated">Qt 4ダイナミックライブラリを組み合わせて新しいダイナミックライブラリを構築する場合は、 &lt;code&gt;ld -r&lt;/code&gt; フラグを導入する必要があります。次に、再配置情報が出力ファイルに格納されるため、このファイルは別の &lt;code&gt;ld&lt;/code&gt; 実行の対象になる可能性があります。これは、 &lt;code&gt;.pro&lt;/code&gt; ファイルの &lt;code&gt;-r&lt;/code&gt; フラグと &lt;code&gt;LFLAGS&lt;/code&gt; 設定を設定することによって行われます。</target>
        </trans-unit>
        <trans-unit id="843fe25910ba44929f16216b7ddc23cd36be1a71" translate="yes" xml:space="preserve">
          <source>If you want to build a project</source>
          <target state="translated">プロジェクトを構築する場合</target>
        </trans-unit>
        <trans-unit id="b52f7beae447ca8d6352804a7b7084b76da5b4fb" translate="yes" xml:space="preserve">
          <source>If you want to change the item's bounding rectangle, you must first call &lt;a href=&quot;qgraphicsitem#prepareGeometryChange&quot;&gt;prepareGeometryChange&lt;/a&gt;(). This notifies the scene of the imminent change, so that it can update its item geometry index; otherwise, the scene will be unaware of the item's new geometry, and the results are undefined (typically, rendering artifacts are left within the view).</source>
          <target state="translated">アイテムのバウンディング四角形を変更する場合は、最初に&lt;a href=&quot;qgraphicsitem#prepareGeometryChange&quot;&gt;prepareGeometryChange&lt;/a&gt;（）を呼び出す必要があります。これにより、差し迫った変更がシーンに通知され、アイテムのジオメトリインデックスを更新できるようになります。そうしないと、シーンはアイテムの新しいジオメトリを認識せず、結果は定義されません（通常、レンダリングアーティファクトはビュー内に残ります）。</target>
        </trans-unit>
        <trans-unit id="29b647f4eb645fd0ecb89a84fc729ec79f1f0b4a" translate="yes" xml:space="preserve">
          <source>If you want to check the peer's complete chain of certificates, use &lt;a href=&quot;qsslconfiguration#peerCertificateChain&quot;&gt;peerCertificateChain&lt;/a&gt;() to get them all at once.</source>
          <target state="translated">ピアの完全な証明書チェーンを確認する場合は、&lt;a href=&quot;qsslconfiguration#peerCertificateChain&quot;&gt;peerCertificateChain&lt;/a&gt;（）を使用して、それらをすべて一度に取得します。</target>
        </trans-unit>
        <trans-unit id="0a9b450069a96b0a6e8a58b97599d28425e77362" translate="yes" xml:space="preserve">
          <source>If you want to check the peer's complete chain of certificates, use &lt;a href=&quot;qsslsocket#peerCertificateChain&quot;&gt;peerCertificateChain&lt;/a&gt;() to get them all at once.</source>
          <target state="translated">ピアの完全な証明書チェーンを確認する場合は、&lt;a href=&quot;qsslsocket#peerCertificateChain&quot;&gt;peerCertificateChain&lt;/a&gt;（）を使用して、それらをすべて一度に取得します。</target>
        </trans-unit>
        <trans-unit id="c1930bdafa7c0b87829238cba843e2649235ef5e" translate="yes" xml:space="preserve">
          <source>If you want to check whether the hash contains a particular key, use &lt;a href=&quot;qhash#contains&quot;&gt;contains&lt;/a&gt;():</source>
          <target state="translated">ハッシュに特定のキーが含まれているかどうかを確認する場合は、&lt;a href=&quot;qhash#contains&quot;&gt;contains&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="23d935961b3f68a99328d654a216f4d3c0e893da" translate="yes" xml:space="preserve">
          <source>If you want to check whether the map contains a certain key, use &lt;a href=&quot;qmap#contains&quot;&gt;contains&lt;/a&gt;():</source>
          <target state="translated">マップに特定のキーが含まれているかどうかを確認するには、&lt;a href=&quot;qmap#contains&quot;&gt;contains&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="fdb3c94f4828e2e69eb0db0933e5d9bb481bdfda" translate="yes" xml:space="preserve">
          <source>If you want to compare</source>
          <target state="translated">比較するなら</target>
        </trans-unit>
        <trans-unit id="e82e2ac2e85f322df34660e42809cbc06868df5b" translate="yes" xml:space="preserve">
          <source>If you want to continue connecting despite the errors that have occurred, you must call &lt;a href=&quot;qdtls#ignoreVerificationErrors&quot;&gt;ignoreVerificationErrors&lt;/a&gt;().</source>
          <target state="translated">エラーが発生しても接続を継続する場合は、&lt;a href=&quot;qdtls#ignoreVerificationErrors&quot;&gt;ignoreVerificationErrors&lt;/a&gt;（）を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="593b23d3289a4ff04c05a350d8fd85bdefb223cc" translate="yes" xml:space="preserve">
          <source>If you want to continue connecting despite the errors that have occurred, you must call &lt;a href=&quot;qsslsocket#ignoreSslErrors&quot;&gt;QSslSocket::ignoreSslErrors&lt;/a&gt;() from inside a slot connected to this signal. If you need to access the error list at a later point, you can call &lt;a href=&quot;qsslsocket#sslErrors&quot;&gt;sslErrors&lt;/a&gt;() (without arguments).</source>
          <target state="translated">エラーが発生しても接続を継続したい場合は、このシグナルに接続されたスロット内から&lt;a href=&quot;qsslsocket#ignoreSslErrors&quot;&gt;QSslSocket :: ignoreSslErrors&lt;/a&gt;（）を呼び出す必要があります。後でエラーリストにアクセスする必要がある場合は、&lt;a href=&quot;qsslsocket#sslErrors&quot;&gt;sslErrors&lt;/a&gt;（）を（引数なしで）呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="7e824420bc3b83685fc893bd934a9bc6683d5906" translate="yes" xml:space="preserve">
          <source>If you want to control a tooltip's behavior, you can intercept the &lt;a href=&quot;qwidget#event&quot;&gt;event&lt;/a&gt;() function and catch the &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::ToolTip&lt;/a&gt; event (e.g., if you want to customize the area for which the tooltip should be shown).</source>
          <target state="translated">ツールチップの動作を制御したい場合は、&lt;a href=&quot;qwidget#event&quot;&gt;イベント&lt;/a&gt;（）関数をインターセプトして&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: ToolTip&lt;/a&gt;イベントをキャッチできます（たとえば、ツールチップを表示する領域をカスタマイズしたい場合）。</target>
        </trans-unit>
        <trans-unit id="c2d5bf02509f579dcb98946a92761ca94da3aae3" translate="yes" xml:space="preserve">
          <source>If you want to control the &quot;What's This?&quot; behavior of a widget manually see &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt::WA_CustomWhatsThis&lt;/a&gt;.</source>
          <target state="translated">「これは何？」を制御したい場合 ウィジェットの動作は手動で&lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt :: WA_CustomWhatsThisを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ed9d7672cfabd9a5697756d2b93c54e6a0ba7c97" translate="yes" xml:space="preserve">
          <source>If you want to create a &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; on the server side of a connection, you should instead call &lt;a href=&quot;qsslsocket#startServerEncryption&quot;&gt;startServerEncryption&lt;/a&gt;() upon receiving the incoming connection through &lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt;.</source>
          <target state="translated">接続のサーバー側で&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;を作成する場合は、代わりに&lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt;を介して着信接続を受信したときに&lt;a href=&quot;qsslsocket#startServerEncryption&quot;&gt;startServerEncryption&lt;/a&gt;（）を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="6364a818a1ea0ef1877be04ba18d5b6f66a20bba" translate="yes" xml:space="preserve">
          <source>If you want to create a cursor with your own bitmap, either use the &lt;a href=&quot;qcursor&quot;&gt;QCursor&lt;/a&gt; constructor which takes a bitmap and a mask or the constructor which takes a pixmap as arguments.</source>
          <target state="translated">独自のビットマップでカーソルを作成する場合は、ビットマップとマスクを&lt;a href=&quot;qcursor&quot;&gt;取得&lt;/a&gt;するQCursorコンストラクター、または引数としてpixmapを取得するコンストラクターを使用します。</target>
        </trans-unit>
        <trans-unit id="130b75aa02ccf684bfd7c5f0b345cba58a662fc5" translate="yes" xml:space="preserve">
          <source>If you want to create a custom popup menu, reimplement this function and return a newly-created popup menu. Ownership of the popup menu is transferred to the caller.</source>
          <target state="translated">カスタムのポップアップ・メニューを作成したい場合は、この関数を再実装して、新しく作成したポップアップ・メニューを返します。ポップアップメニューの所有権は発信者に譲渡されます。</target>
        </trans-unit>
        <trans-unit id="5ff7d1d9131c0f8103df914e4a7059bb6a8f90da" translate="yes" xml:space="preserve">
          <source>If you want to create your makefiles yourself, here are some tips on how to include moc handling.</source>
          <target state="translated">自分でmakefileを作成したい場合は、mocの扱い方のヒントをご紹介します。</target>
        </trans-unit>
        <trans-unit id="a707b4cc84c90bce7334604418a837b327eb07ee" translate="yes" xml:space="preserve">
          <source>If you want to create your own SQL drivers, you can subclass this class and reimplement its pure virtual functions and those virtual functions that you need. See &lt;a href=&quot;sql-driver#how-to-write-your-own-database-driver&quot;&gt;How to Write Your Own Database Driver&lt;/a&gt; for more information.</source>
          <target state="translated">独自のSQLドライバーを作成する場合は、このクラスをサブクラス化して、その純粋な仮想関数と必要な仮想関数を再実装できます。詳細については、&lt;a href=&quot;sql-driver#how-to-write-your-own-database-driver&quot;&gt;独自のデータベースドライバーを作成する方法を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4cd00e1cb4ef832c6d6c10ccd947e0dc976d42f2" translate="yes" xml:space="preserve">
          <source>If you want to create your own configurable transformation, you can create a subclass of &lt;a href=&quot;qgraphicstransform&quot;&gt;QGraphicsTransform&lt;/a&gt; (or any or the existing subclasses), and reimplement the pure virtual &lt;a href=&quot;qgraphicstransform#applyTo&quot;&gt;applyTo&lt;/a&gt;() function, which takes a pointer to a &lt;a href=&quot;qmatrix4x4&quot;&gt;QMatrix4x4&lt;/a&gt;. Each operation you would like to apply should be exposed as properties (e.g., customTransform-&amp;gt;setVerticalShear(2.5)). Inside you reimplementation of &lt;a href=&quot;qgraphicstransform#applyTo&quot;&gt;applyTo&lt;/a&gt;(), you can modify the provided transform respectively.</source>
          <target state="translated">独自の構成可能な変換を作成する場合は、&lt;a href=&quot;qgraphicstransform&quot;&gt;QGraphicsTransform&lt;/a&gt;（または任意のまたは既存のサブクラス）のサブクラスを作成し、&lt;a href=&quot;qmatrix4x4&quot;&gt;QMatrix4x4&lt;/a&gt;へのポインターを&lt;a href=&quot;qgraphicstransform#applyTo&quot;&gt;受け取る&lt;/a&gt;純粋な仮想applyTo（）関数を再実装できます。適用する各操作は、プロパティとして公開する必要があります（例：customTransform-&amp;gt; setVerticalShear（2.5））。&lt;a href=&quot;qgraphicstransform#applyTo&quot;&gt;applyTo&lt;/a&gt;（）の再実装の中で、提供された変換をそれぞれ変更できます。</target>
        </trans-unit>
        <trans-unit id="892e584524cab25e78f87f3d6a40b0ffd8130114" translate="yes" xml:space="preserve">
          <source>If you want to define code for specific versions of macOS, use the availability macros defined in</source>
          <target state="translated">特定のバージョンの macOS 用のコードを定義したい場合には、以下で定義されているアベイラビリティマクロを使用します。</target>
        </trans-unit>
        <trans-unit id="45df5b12dbd5aa838901a53b2069cb521cd37d58" translate="yes" xml:space="preserve">
          <source>If you want to define your own contentItem, use either a &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-pathview&quot;&gt;PathView&lt;/a&gt; as the root item. For a wrapping Tumbler, use &lt;a href=&quot;qml-qtquick-pathview&quot;&gt;PathView&lt;/a&gt;:</source>
          <target state="translated">独自のcontentItemを定義する場合は、ルートアイテムとして&lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;または&lt;a href=&quot;qml-qtquick-pathview&quot;&gt;PathView&lt;/a&gt;を使用します。ラッピングタンブラーの場合は、&lt;a href=&quot;qml-qtquick-pathview&quot;&gt;PathViewを&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="3dd1a5bc4c7a4320ada8bf718a2be1299c978da2" translate="yes" xml:space="preserve">
          <source>If you want to display each label above its associated field (instead of next to it), set this property to &lt;a href=&quot;qformlayout#RowWrapPolicy-enum&quot;&gt;WrapAllRows&lt;/a&gt;.</source>
          <target state="translated">（ラベルの横ではなく）関連するフィールドの上に各ラベルを表示する場合は、このプロパティを&lt;a href=&quot;qformlayout#RowWrapPolicy-enum&quot;&gt;WrapAllRowsに&lt;/a&gt;設定します。</target>
        </trans-unit>
        <trans-unit id="98c56457474602455ea9e72ba790cac4f00decf0" translate="yes" xml:space="preserve">
          <source>If you want to display potentially long text in a limited space, you probably want to use &lt;code&gt;elide&lt;/code&gt; instead.</source>
          <target state="translated">限られたスペースに長いテキストを表示する場合は、代わりに &lt;code&gt;elide&lt;/code&gt; を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="f618c1040caac6ca9177c4bb9135805b3dc92b79" translate="yes" xml:space="preserve">
          <source>If you want to do complex tree operations it is useful to have a lightweight class to store nodes and their relations. &lt;a href=&quot;qdomdocumentfragment&quot;&gt;QDomDocumentFragment&lt;/a&gt; stores a subtree of a document which does not necessarily represent a well-formed XML document.</source>
          <target state="translated">複雑なツリー操作を実行したい場合は、ノードとその関係を格納する軽量クラスがあると便利です。&lt;a href=&quot;qdomdocumentfragment&quot;&gt;QDomDocumentFragment&lt;/a&gt;は、整形式のXMLドキュメントを必ずしも表すとは限らないドキュメントのサブツリーを格納します。</target>
        </trans-unit>
        <trans-unit id="9e6b9d0f74edcf13c88c150acd668db3566c2fe1" translate="yes" xml:space="preserve">
          <source>If you want to enable sorting in your table widget, do so after you have populated it with items, otherwise sorting may interfere with the insertion order (see &lt;a href=&quot;qtablewidget#setItem&quot;&gt;setItem&lt;/a&gt;() for details).</source>
          <target state="translated">テーブルウィジェットで並べ替えを有効にする場合は、アイテムを入力した後で有効にします。そうしないと、並べ替えによって挿入順序が妨げられる可能性があります（詳細は&lt;a href=&quot;qtablewidget#setItem&quot;&gt;setItem&lt;/a&gt;（）を参照）。</target>
        </trans-unit>
        <trans-unit id="6514036df6c7d55763ed7bf89f4062e33ae06d27" translate="yes" xml:space="preserve">
          <source>If you want to expand the string so that it reaches a certain width and fill the new positions with a particular character, use the &lt;a href=&quot;qstring#leftJustified&quot;&gt;leftJustified&lt;/a&gt;() function:</source>
          <target state="translated">文字列を特定の幅に拡張し、新しい位置を特定の文字で埋めるには、&lt;a href=&quot;qstring#leftJustified&quot;&gt;leftJustified&lt;/a&gt;（）関数を使用します。</target>
        </trans-unit>
        <trans-unit id="87bc52b74dde73e1fdb370694004887ba136ffa6" translate="yes" xml:space="preserve">
          <source>If you want to find all occurrences of a particular character or substring in a &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;, use &lt;a href=&quot;qbytearray#indexOf&quot;&gt;indexOf&lt;/a&gt;() or &lt;a href=&quot;qbytearray#lastIndexOf&quot;&gt;lastIndexOf&lt;/a&gt;(). The former searches forward starting from a given index position, the latter searches backward. Both return the index position of the character or substring if they find it; otherwise, they return -1. For example, here's a typical loop that finds all occurrences of a particular substring:</source>
          <target state="translated">あなたが特定の文字またはサブストリングのすべての出現検索したい場合は&lt;a href=&quot;qbytearray&quot;&gt;QByteArrayを&lt;/a&gt;、使用&lt;a href=&quot;qbytearray#indexOf&quot;&gt;のindexOf&lt;/a&gt;（）または&lt;a href=&quot;qbytearray#lastIndexOf&quot;&gt;のlastIndexOf&lt;/a&gt;（）を。前者は特定のインデックス位置から前方に検索し、後者は後方に検索します。どちらも、文字または部分文字列が見つかった場合、そのインデックス位置を返します。それ以外の場合は、-1を返します。たとえば、特定の部分文字列のすべての出現を見つける典型的なループは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="039ee666228be87bbc3c0658e63f25230c55feb4" translate="yes" xml:space="preserve">
          <source>If you want to find all occurrences of a particular character or substring in a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, use the &lt;a href=&quot;qstring#indexOf&quot;&gt;indexOf&lt;/a&gt;() or &lt;a href=&quot;qstring#lastIndexOf&quot;&gt;lastIndexOf&lt;/a&gt;() functions. The former searches forward starting from a given index position, the latter searches backward. Both return the index position of the character or substring if they find it; otherwise, they return -1. For example, here is a typical loop that finds all occurrences of a particular substring:</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;内の特定の文字または部分文字列のすべての出現を検索する場合は、&lt;a href=&quot;qstring#indexOf&quot;&gt;indexOf&lt;/a&gt;（）または&lt;a href=&quot;qstring#lastIndexOf&quot;&gt;lastIndexOf&lt;/a&gt;（）関数を使用します。前者は特定のインデックス位置から前方に検索し、後者は後方に検索します。どちらも、文字または部分文字列が見つかった場合、そのインデックス位置を返します。それ以外の場合は、-1を返します。たとえば、次は、特定の部分文字列のすべての出現を見つける典型的なループです。</target>
        </trans-unit>
        <trans-unit id="27bdeff94521d79ebae9498359259da99a578304" translate="yes" xml:space="preserve">
          <source>If you want to find all occurrences of a particular value in a list, use &lt;a href=&quot;qlist#indexOf&quot;&gt;indexOf&lt;/a&gt;() or &lt;a href=&quot;qlist#lastIndexOf&quot;&gt;lastIndexOf&lt;/a&gt;(). The former searches forward starting from a given index position, the latter searches backward. Both return the index of a matching item if they find it; otherwise, they return -1. For example:</source>
          <target state="translated">リスト内の特定の値のすべての出現を検索する場合は、&lt;a href=&quot;qlist#indexOf&quot;&gt;indexOf&lt;/a&gt;（）または&lt;a href=&quot;qlist#lastIndexOf&quot;&gt;lastIndexOf&lt;/a&gt;（）を使用します。前者は特定のインデックス位置から前方に検索し、後者は後方に検索します。どちらも一致するアイテムが見つかった場合、そのインデックスを返します。それ以外の場合は、-1を返します。例えば：</target>
        </trans-unit>
        <trans-unit id="4fd1fe40bbf0af92b8be371546623b59516fd074" translate="yes" xml:space="preserve">
          <source>If you want to find all occurrences of a particular value in a vector, use &lt;a href=&quot;qvector#indexOf&quot;&gt;indexOf&lt;/a&gt;() or &lt;a href=&quot;qvector#lastIndexOf&quot;&gt;lastIndexOf&lt;/a&gt;(). The former searches forward starting from a given index position, the latter searches backward. Both return the index of the matching item if they found one; otherwise, they return -1. For example:</source>
          <target state="translated">ベクトル内の特定の値のすべての出現を検索する場合は、&lt;a href=&quot;qvector#indexOf&quot;&gt;indexOf&lt;/a&gt;（）または&lt;a href=&quot;qvector#lastIndexOf&quot;&gt;lastIndexOf&lt;/a&gt;（）を使用します。前者は特定のインデックス位置から前方に検索し、後者は後方に検索します。どちらも、一致するアイテムが見つかった場合、そのインデックスを返します。それ以外の場合は、-1を返します。例えば：</target>
        </trans-unit>
        <trans-unit id="a4c3e9969fbbaff4bfc63ca9b9594928ad5c07e3" translate="yes" xml:space="preserve">
          <source>If you want to find all occurrences of a particular value, use &lt;a href=&quot;qfutureiterator#findNext&quot;&gt;findNext&lt;/a&gt;() or &lt;a href=&quot;qfutureiterator#findPrevious&quot;&gt;findPrevious&lt;/a&gt;() in a loop.</source>
          <target state="translated">特定の値のすべての出現を検索する場合は、ループで&lt;a href=&quot;qfutureiterator#findNext&quot;&gt;findNext&lt;/a&gt;（）または&lt;a href=&quot;qfutureiterator#findPrevious&quot;&gt;findPrevious&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="898951fabb2a0eafcd00294a33ae1f37a06ebddf" translate="yes" xml:space="preserve">
          <source>If you want to find all occurrences of a particular value, use &lt;a href=&quot;qhashiterator#findNext&quot;&gt;findNext&lt;/a&gt;() or &lt;a href=&quot;qhashiterator#findPrevious&quot;&gt;findPrevious&lt;/a&gt;() in a loop. For example:</source>
          <target state="translated">特定の値のすべての出現を検索する場合は、ループで&lt;a href=&quot;qhashiterator#findNext&quot;&gt;findNext&lt;/a&gt;（）または&lt;a href=&quot;qhashiterator#findPrevious&quot;&gt;findPrevious&lt;/a&gt;（）を使用します。例えば：</target>
        </trans-unit>
        <trans-unit id="4b82cd87403265c3fee60ae6331015acbbe690bd" translate="yes" xml:space="preserve">
          <source>If you want to find all occurrences of a particular value, use &lt;a href=&quot;qlinkedlistiterator#findNext&quot;&gt;findNext&lt;/a&gt;() or &lt;a href=&quot;qlinkedlistiterator#findPrevious&quot;&gt;findPrevious&lt;/a&gt;() in a loop.</source>
          <target state="translated">特定の値のすべての出現を検索する場合は、ループで&lt;a href=&quot;qlinkedlistiterator#findNext&quot;&gt;findNext&lt;/a&gt;（）または&lt;a href=&quot;qlinkedlistiterator#findPrevious&quot;&gt;findPrevious&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="3e2537f0565774525da7ed64dac47ab4a40e2305" translate="yes" xml:space="preserve">
          <source>If you want to find all occurrences of a particular value, use &lt;a href=&quot;qlistiterator#findNext&quot;&gt;findNext&lt;/a&gt;() or &lt;a href=&quot;qlistiterator#findPrevious&quot;&gt;findPrevious&lt;/a&gt;() in a loop.</source>
          <target state="translated">特定の値のすべての出現を検索する場合は、ループで&lt;a href=&quot;qlistiterator#findNext&quot;&gt;findNext&lt;/a&gt;（）または&lt;a href=&quot;qlistiterator#findPrevious&quot;&gt;findPrevious&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="092c0df4a0b9fa279f43249c5212612d6ef96a38" translate="yes" xml:space="preserve">
          <source>If you want to find all occurrences of a particular value, use &lt;a href=&quot;qmapiterator#findNext&quot;&gt;findNext&lt;/a&gt;() or &lt;a href=&quot;qmapiterator#findPrevious&quot;&gt;findPrevious&lt;/a&gt;() in a loop. For example:</source>
          <target state="translated">特定の値のすべての出現を検索する場合は、ループで&lt;a href=&quot;qmapiterator#findNext&quot;&gt;findNext&lt;/a&gt;（）または&lt;a href=&quot;qmapiterator#findPrevious&quot;&gt;findPrevious&lt;/a&gt;（）を使用します。例えば：</target>
        </trans-unit>
        <trans-unit id="b7c55e1a6cb9f3947aa66f6df9204c79725e274f" translate="yes" xml:space="preserve">
          <source>If you want to find all occurrences of a particular value, use &lt;a href=&quot;qmutablehashiterator#findNext&quot;&gt;findNext&lt;/a&gt;() or &lt;a href=&quot;qmutablehashiterator#findPrevious&quot;&gt;findPrevious&lt;/a&gt;() in a loop. For example:</source>
          <target state="translated">特定の値のすべての出現を検索する場合は、ループで&lt;a href=&quot;qmutablehashiterator#findNext&quot;&gt;findNext&lt;/a&gt;（）または&lt;a href=&quot;qmutablehashiterator#findPrevious&quot;&gt;findPrevious&lt;/a&gt;（）を使用します。例えば：</target>
        </trans-unit>
        <trans-unit id="3f7a8dd0427879e3fd8e9577c8dfaa12e390a3ad" translate="yes" xml:space="preserve">
          <source>If you want to find all occurrences of a particular value, use &lt;a href=&quot;qmutablelinkedlistiterator#findNext&quot;&gt;findNext&lt;/a&gt;() or &lt;a href=&quot;qmutablelinkedlistiterator#findPrevious&quot;&gt;findPrevious&lt;/a&gt;() in a loop.</source>
          <target state="translated">特定の値のすべての出現を検索する場合は、ループで&lt;a href=&quot;qmutablelinkedlistiterator#findNext&quot;&gt;findNext&lt;/a&gt;（）または&lt;a href=&quot;qmutablelinkedlistiterator#findPrevious&quot;&gt;findPrevious&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="d2c2d1220486fde408994dbb3f861d6a131310dd" translate="yes" xml:space="preserve">
          <source>If you want to find all occurrences of a particular value, use &lt;a href=&quot;qmutablelistiterator#findNext&quot;&gt;findNext&lt;/a&gt;() or &lt;a href=&quot;qmutablelistiterator#findPrevious&quot;&gt;findPrevious&lt;/a&gt;() in a loop.</source>
          <target state="translated">特定の値のすべての出現を検索する場合は、ループで&lt;a href=&quot;qmutablelistiterator#findNext&quot;&gt;findNext&lt;/a&gt;（）または&lt;a href=&quot;qmutablelistiterator#findPrevious&quot;&gt;findPrevious&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="6c4574f8d03dabcd80250d9ff8bc30c171345919" translate="yes" xml:space="preserve">
          <source>If you want to find all occurrences of a particular value, use &lt;a href=&quot;qmutablemapiterator#findNext&quot;&gt;findNext&lt;/a&gt;() or &lt;a href=&quot;qmutablemapiterator#findPrevious&quot;&gt;findPrevious&lt;/a&gt;() in a loop. For example:</source>
          <target state="translated">特定の値のすべての出現を検索する場合は、ループで&lt;a href=&quot;qmutablemapiterator#findNext&quot;&gt;findNext&lt;/a&gt;（）または&lt;a href=&quot;qmutablemapiterator#findPrevious&quot;&gt;findPrevious&lt;/a&gt;（）を使用します。例えば：</target>
        </trans-unit>
        <trans-unit id="215948c402f89b1d0e279407c4317a276aa1d8e1" translate="yes" xml:space="preserve">
          <source>If you want to find all occurrences of a particular value, use &lt;a href=&quot;qmutablevectoriterator#findNext&quot;&gt;findNext&lt;/a&gt;() or &lt;a href=&quot;qmutablevectoriterator#findPrevious&quot;&gt;findPrevious&lt;/a&gt;() in a loop.</source>
          <target state="translated">特定の値のすべての出現を検索する場合は、ループで&lt;a href=&quot;qmutablevectoriterator#findNext&quot;&gt;findNext&lt;/a&gt;（）または&lt;a href=&quot;qmutablevectoriterator#findPrevious&quot;&gt;findPrevious&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="2a53799d90a3f80407eb44d3086cc5e422647bd7" translate="yes" xml:space="preserve">
          <source>If you want to find all occurrences of a particular value, use &lt;a href=&quot;qsetiterator#findNext&quot;&gt;findNext&lt;/a&gt;() or &lt;a href=&quot;qsetiterator#findPrevious&quot;&gt;findPrevious&lt;/a&gt;() in a loop.</source>
          <target state="translated">特定の値のすべての出現を検索する場合は、ループで&lt;a href=&quot;qsetiterator#findNext&quot;&gt;findNext&lt;/a&gt;（）または&lt;a href=&quot;qsetiterator#findPrevious&quot;&gt;findPrevious&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="24f67f821a227bf0a8d722bc4e53136270262bf1" translate="yes" xml:space="preserve">
          <source>If you want to find all occurrences of a particular value, use &lt;a href=&quot;qvectoriterator#findNext&quot;&gt;findNext&lt;/a&gt;() or &lt;a href=&quot;qvectoriterator#findPrevious&quot;&gt;findPrevious&lt;/a&gt;() in a loop.</source>
          <target state="translated">特定の値のすべての出現を検索する場合は、ループで&lt;a href=&quot;qvectoriterator#findNext&quot;&gt;findNext&lt;/a&gt;（）または&lt;a href=&quot;qvectoriterator#findPrevious&quot;&gt;findPrevious&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="ec7b23d25e51deabb1188265f05be9abd0cb9659" translate="yes" xml:space="preserve">
          <source>If you want to find the directory containing the application's executable, see &lt;a href=&quot;qcoreapplication#applicationDirPath&quot;&gt;QCoreApplication::applicationDirPath&lt;/a&gt;().</source>
          <target state="translated">アプリケーションの実行可能ファイルを含むディレクトリを検索する場合は、&lt;a href=&quot;qcoreapplication#applicationDirPath&quot;&gt;QCoreApplication :: applicationDirPath&lt;/a&gt;（）を参照してください。</target>
        </trans-unit>
        <trans-unit id="555f6e4ee413aca7be22902a76f9c68413d21a0b" translate="yes" xml:space="preserve">
          <source>If you want to get only the peer's immediate certificate, use &lt;a href=&quot;qsslconfiguration#peerCertificate&quot;&gt;peerCertificate&lt;/a&gt;().</source>
          <target state="translated">ピアの直接の証明書のみを取得する場合は、&lt;a href=&quot;qsslconfiguration#peerCertificate&quot;&gt;peerCertificate&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="5f588095f3464b16d49f361f0c4bfe90fc18f4b0" translate="yes" xml:space="preserve">
          <source>If you want to get only the peer's immediate certificate, use &lt;a href=&quot;qsslsocket#peerCertificate&quot;&gt;peerCertificate&lt;/a&gt;().</source>
          <target state="translated">ピアの直接の証明書のみを取得する場合は、&lt;a href=&quot;qsslsocket#peerCertificate&quot;&gt;peerCertificate&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="259fa74d33ed5c4b05c0e2870301509985e1ba3f" translate="yes" xml:space="preserve">
          <source>If you want to get the first or last item in a linked list, use &lt;a href=&quot;qlinkedlist#first&quot;&gt;first&lt;/a&gt;() or &lt;a href=&quot;qlinkedlist#last&quot;&gt;last&lt;/a&gt;(). If you want to remove an item from either end of the list, use &lt;a href=&quot;qlinkedlist#removeFirst&quot;&gt;removeFirst&lt;/a&gt;() or &lt;a href=&quot;qlinkedlist#removeLast&quot;&gt;removeLast&lt;/a&gt;(). If you want to remove all occurrences of a given value in the list, use &lt;a href=&quot;qlinkedlist#removeAll&quot;&gt;removeAll&lt;/a&gt;().</source>
          <target state="translated">リンクリストの最初または最後のアイテムを取得する場合は、&lt;a href=&quot;qlinkedlist#first&quot;&gt;first&lt;/a&gt;（）または&lt;a href=&quot;qlinkedlist#last&quot;&gt;last&lt;/a&gt;（）を使用します。リストのいずれかの端からアイテムを削除する場合は、&lt;a href=&quot;qlinkedlist#removeFirst&quot;&gt;removeFirst&lt;/a&gt;（）または&lt;a href=&quot;qlinkedlist#removeLast&quot;&gt;removeLast&lt;/a&gt;（）を使用します。リスト内の特定の値をすべて削除する場合は、&lt;a href=&quot;qlinkedlist#removeAll&quot;&gt;removeAll&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="2230d8498d7120ad007e4bbdd51b64b890af4f49" translate="yes" xml:space="preserve">
          <source>If you want to give your users maximum freedom in what strings they can pass to your function, accompany the &lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt; overload with overloads for</source>
          <target state="translated">ユーザーが関数に渡すことができる文字列を最大限に自由にしたい場合は、&lt;a href=&quot;qstringview&quot;&gt;QStringViewの&lt;/a&gt;オーバーロードにオーバーロードを追加します。</target>
        </trans-unit>
        <trans-unit id="4246d6b83ef0b1afdc8b1a9f53698034957eb38a" translate="yes" xml:space="preserve">
          <source>If you want to insert many records at the same time, it is often more efficient to separate the query from the actual values being inserted. This can be done using placeholders. Qt supports two placeholder syntaxes: named binding and positional binding. Here's an example of named binding:</source>
          <target state="translated">多くのレコードを同時に挿入したい場合は、クエリと実際に挿入される値を分離した方が効率的な場合が多いです。これはプレースホルダを使って行うことができます。Qt では、名前付きバインディングと位置指定バインディングの 2 つのプレースホルダ構文をサポートしています。ここでは名前付きバインディングの例を示します。</target>
        </trans-unit>
        <trans-unit id="8320992c150ec7f0ac1d4db708fa844d42e7033e" translate="yes" xml:space="preserve">
          <source>If you want to insert, modify, or remove items in the middle of the list, you must use an iterator. &lt;a href=&quot;qlinkedlist&quot;&gt;QLinkedList&lt;/a&gt; provides both &lt;a href=&quot;containers#java-style-iterators&quot;&gt;Java-style iterators&lt;/a&gt; (&lt;a href=&quot;qlinkedlistiterator&quot;&gt;QLinkedListIterator&lt;/a&gt; and &lt;a href=&quot;qmutablelinkedlistiterator&quot;&gt;QMutableLinkedListIterator&lt;/a&gt;) and &lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL-style iterators&lt;/a&gt; (&lt;a href=&quot;qlinkedlist-const-iterator&quot;&gt;QLinkedList::const_iterator&lt;/a&gt; and &lt;a href=&quot;qlinkedlist-iterator&quot;&gt;QLinkedList::iterator&lt;/a&gt;). See the documentation for these classes for details.</source>
          <target state="translated">リストの途中でアイテムを挿入、変更、または削除する場合は、イテレータを使用する必要があります。&lt;a href=&quot;qlinkedlist&quot;&gt;QLinkedList&lt;/a&gt;は、&lt;a href=&quot;containers#java-style-iterators&quot;&gt;Javaスタイルのイテレーター&lt;/a&gt;（&lt;a href=&quot;qlinkedlistiterator&quot;&gt;QLinkedListIterator&lt;/a&gt;および&lt;a href=&quot;qmutablelinkedlistiterator&quot;&gt;QMutableLinkedListIterator&lt;/a&gt;）と&lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STLスタイルのイテレーター&lt;/a&gt;（&lt;a href=&quot;qlinkedlist-const-iterator&quot;&gt;QLinkedList :: const_iterator&lt;/a&gt;および&lt;a href=&quot;qlinkedlist-iterator&quot;&gt;QLinkedList :: iterator&lt;/a&gt;）の両方を提供します。詳細については、これらのクラスのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="a3b3e33d661d3a733b124525ba2561b6b52910a0" translate="yes" xml:space="preserve">
          <source>If you want to iterate over the list, you can use the &lt;a href=&quot;containers#foreach&quot;&gt;foreach&lt;/a&gt; pseudo-keyword:</source>
          <target state="translated">リストを反復処理する場合は、&lt;a href=&quot;containers#foreach&quot;&gt;foreach&lt;/a&gt;疑似キーワードを使用できます。</target>
        </trans-unit>
        <trans-unit id="c92b86b63ccc1777115a271d645ee3bf2b6e9eee" translate="yes" xml:space="preserve">
          <source>If you want to iterate over the properties of a script object, use the &lt;a href=&quot;qjsvalueiterator&quot;&gt;QJSValueIterator&lt;/a&gt; class.</source>
          <target state="translated">スクリプトオブジェクトのプロパティを反復処理する場合は、&lt;a href=&quot;qjsvalueiterator&quot;&gt;QJSValueIterator&lt;/a&gt;クラスを使用します。</target>
        </trans-unit>
        <trans-unit id="18af9e9094d839882658054a3f98e2243ae331c7" translate="yes" xml:space="preserve">
          <source>If you want to know about changes to items see the &lt;a href=&quot;qabstractitemview#dataChanged&quot;&gt;dataChanged&lt;/a&gt;() signal.</source>
          <target state="translated">アイテムの変更について知りたい場合は、&lt;a href=&quot;qabstractitemview#dataChanged&quot;&gt;dataChanged&lt;/a&gt;（）シグナルを参照してください。</target>
        </trans-unit>
        <trans-unit id="1c3819c472a114c60cfcc0efb6c8e2b33d8f4dc2" translate="yes" xml:space="preserve">
          <source>If you want to know the advance width of the string (to lay out a set of strings next to each other), use &lt;a href=&quot;qfontmetrics#horizontalAdvance&quot;&gt;horizontalAdvance&lt;/a&gt;() instead.</source>
          <target state="translated">文字列の有効幅を知りたい場合（一連の文字列を&lt;a href=&quot;qfontmetrics#horizontalAdvance&quot;&gt;並べて配置&lt;/a&gt;する場合）は、代わりにhorizo​​ntalAdvance（）を使用してください。</target>
        </trans-unit>
        <trans-unit id="840aa119e2ce11cd80a3be1fcbcd6761cdfcfc1a" translate="yes" xml:space="preserve">
          <source>If you want to know the advance width of the string (to lay out a set of strings next to each other), use &lt;a href=&quot;qfontmetricsf#horizontalAdvance&quot;&gt;horizontalAdvance&lt;/a&gt;() instead.</source>
          <target state="translated">文字列の有効幅を知りたい場合（一連の文字列を&lt;a href=&quot;qfontmetricsf#horizontalAdvance&quot;&gt;並べて配置&lt;/a&gt;する場合）は、代わりにhorizo​​ntalAdvance（）を使用してください。</target>
        </trans-unit>
        <trans-unit id="2eea2b62960c148390b6813c85f9525893b2d799" translate="yes" xml:space="preserve">
          <source>If you want to limit the total number of paragraphs in a &lt;a href=&quot;qplaintextedit&quot;&gt;QPlainTextEdit&lt;/a&gt;, as it is for example useful in a log viewer, then you can use the &lt;a href=&quot;qplaintextedit#maximumBlockCount-prop&quot;&gt;maximumBlockCount&lt;/a&gt; property. The combination of &lt;a href=&quot;qplaintextedit#maximumBlockCount-prop&quot;&gt;setMaximumBlockCount&lt;/a&gt;() and &lt;a href=&quot;qplaintextedit#appendPlainText&quot;&gt;appendPlainText&lt;/a&gt;() turns &lt;a href=&quot;qplaintextedit&quot;&gt;QPlainTextEdit&lt;/a&gt; into an efficient viewer for log text. The scrolling can be reduced with the &lt;a href=&quot;qplaintextedit#centerOnScroll-prop&quot;&gt;centerOnScroll&lt;/a&gt;() property, making the log viewer even faster. Text can be formatted in a limited way, either using a syntax highlighter (see below), or by appending html-formatted text with &lt;a href=&quot;qplaintextedit#appendHtml&quot;&gt;appendHtml&lt;/a&gt;(). While &lt;a href=&quot;qplaintextedit&quot;&gt;QPlainTextEdit&lt;/a&gt; does not support complex rich text rendering with tables and floats, it does support limited paragraph-based formatting that you may need in a log viewer.</source>
          <target state="translated">&lt;a href=&quot;qplaintextedit&quot;&gt;QPlainTextEdit&lt;/a&gt;の段落の総数を制限したい場合、たとえばログビューアで役立つ場合は、&lt;a href=&quot;qplaintextedit#maximumBlockCount-prop&quot;&gt;maximumBlockCount&lt;/a&gt;プロパティを使用できます。組み合わせ&lt;a href=&quot;qplaintextedit#maximumBlockCount-prop&quot;&gt;setMaximumBlockCount&lt;/a&gt;（）と&lt;a href=&quot;qplaintextedit#appendPlainText&quot;&gt;appendPlainText&lt;/a&gt;（）が点灯し&lt;a href=&quot;qplaintextedit&quot;&gt;QPlainTextEditを&lt;/a&gt;ログテキストのための効率的なビューアに。スクロールは、&lt;a href=&quot;qplaintextedit#centerOnScroll-prop&quot;&gt;centerOnScroll&lt;/a&gt;（）プロパティで減らすことができ、ログビューアをさらに高速化できます。テキストは、構文ハイ&lt;a href=&quot;qplaintextedit#appendHtml&quot;&gt;ライター&lt;/a&gt;（以下を参照）を使用するか、html形式のテキストをappendHtml（）で追加することにより、限られた方法でフォーマットできます。しばらく&lt;a href=&quot;qplaintextedit&quot;&gt;QPlainTextEdit&lt;/a&gt; は、テーブルとフロートを使用した複雑なリッチテキストレンダリングをサポートしていません。ログビューアで必要になる可能性のある、段落ベースの限定的なフォーマットをサポートしています。</target>
        </trans-unit>
        <trans-unit id="c03b0d91f766b2476164685df4428c8b2781851d" translate="yes" xml:space="preserve">
          <source>If you want to limit the total number of paragraphs in a &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt;, as for example it is often useful in a log viewer, then you can use &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt;'s maximumBlockCount property for that.</source>
          <target state="translated">&lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt;のパラグラフの総数を制限したい場合、たとえば、ログビューアで便利な場合は、&lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt;のmaximumBlockCountプロパティを使用できます。</target>
        </trans-unit>
        <trans-unit id="958b74a332153748fcd377612a5ab6c6f94575c2" translate="yes" xml:space="preserve">
          <source>If you want to load documents stored in the Qt resource system use &lt;code&gt;qrc&lt;/code&gt; as the scheme in the URL to load. For example, for the document resource path &lt;code&gt;:/docs/index.html&lt;/code&gt; use &lt;code&gt;qrc:/docs/index.html&lt;/code&gt; as the URL with &lt;a href=&quot;qtextbrowser#source-prop&quot;&gt;setSource&lt;/a&gt;().</source>
          <target state="translated">Qtリソースシステムに保存されているドキュメントをロードする場合は、ロードするURLのスキームとして &lt;code&gt;qrc&lt;/code&gt; を使用します。たとえば、ドキュメントリソースパス &lt;code&gt;:/docs/index.html&lt;/code&gt; の場合、&lt;a href=&quot;qtextbrowser#source-prop&quot;&gt;setSource&lt;/a&gt;（）を使用してURLとして &lt;code&gt;qrc:/docs/index.html&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="b12879b76a2aa0ce099bef336488f9360fde4a65" translate="yes" xml:space="preserve">
          <source>If you want to make a &lt;a href=&quot;qml-qtquick-controls2-textarea&quot;&gt;TextArea&lt;/a&gt; scrollable, for example, when it covers an entire application page, it can be placed inside a &lt;a href=&quot;qml-qtquick-controls2-scrollview&quot;&gt;ScrollView&lt;/a&gt;.</source>
          <target state="translated">あなたがしたい場合&lt;a href=&quot;qml-qtquick-controls2-textarea&quot;&gt;のTextArea&lt;/a&gt;スクロールを、それはアプリケーション全体のページをカバーする場合、例えば、それは内側に配置することができ&lt;a href=&quot;qml-qtquick-controls2-scrollview&quot;&gt;ScrollView&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0420de4f97c6bd0d0460b7ae76d840ae331c84f5" translate="yes" xml:space="preserve">
          <source>If you want to modify a sequence in-place, use QtConcurrent::filter():</source>
          <target state="translated">シーケンスをその場で修正したい場合は、QtConcurrent::filter()を使用します。</target>
        </trans-unit>
        <trans-unit id="6dde1ff3076b0db9615214ba9185f8123aff9335" translate="yes" xml:space="preserve">
          <source>If you want to modify a sequence in-place, use QtConcurrent::map(). The map function must then be of the form:</source>
          <target state="translated">シーケンスをその場で変更したい場合は、QtConcurrent::map()を使用します。この場合、map 関数は次のような形式でなければなりません。</target>
        </trans-unit>
        <trans-unit id="d8adeaac6d9eeb2f3e405e34bb22896e1c0e4730" translate="yes" xml:space="preserve">
          <source>If you want to navigate through all the (key, value) pairs stored in a &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;, you can use an iterator. &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; provides both &lt;a href=&quot;containers#java-style-iterators&quot;&gt;Java-style iterators&lt;/a&gt; (&lt;a href=&quot;qhashiterator&quot;&gt;QHashIterator&lt;/a&gt; and &lt;a href=&quot;qmutablehashiterator&quot;&gt;QMutableHashIterator&lt;/a&gt;) and &lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL-style iterators&lt;/a&gt; (&lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash::const_iterator&lt;/a&gt; and &lt;a href=&quot;qhash-iterator&quot;&gt;QHash::iterator&lt;/a&gt;). Here's how to iterate over a &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;&amp;lt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, int&amp;gt; using a Java-style iterator:</source>
          <target state="translated">&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;に保存されているすべての（キー、値）ペアをナビゲートする場合は、イテレータを使用できます。&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;は、&lt;a href=&quot;containers#java-style-iterators&quot;&gt;Javaスタイルのイテレーター&lt;/a&gt;（&lt;a href=&quot;qhashiterator&quot;&gt;QHashIterator&lt;/a&gt;および&lt;a href=&quot;qmutablehashiterator&quot;&gt;QMutableHashIterator&lt;/a&gt;）と&lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STLスタイルのイテレーター&lt;/a&gt;（&lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash :: const_iterator&lt;/a&gt;および&lt;a href=&quot;qhash-iterator&quot;&gt;QHash :: iterator&lt;/a&gt;）の両方を提供します。Javaスタイルのイテレータを使用して&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; &amp;lt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;、int&amp;gt;を反復する方法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="ebc60af08240e3c0d4572b58b54204bd9cae77c9" translate="yes" xml:space="preserve">
          <source>If you want to navigate through all the (key, value) pairs stored in a &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;, you can use an iterator. &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; provides both &lt;a href=&quot;containers#java-style-iterators&quot;&gt;Java-style iterators&lt;/a&gt; (&lt;a href=&quot;qmapiterator&quot;&gt;QMapIterator&lt;/a&gt; and &lt;a href=&quot;qmutablemapiterator&quot;&gt;QMutableMapIterator&lt;/a&gt;) and &lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL-style iterators&lt;/a&gt; (&lt;a href=&quot;qmap-const-iterator&quot;&gt;QMap::const_iterator&lt;/a&gt; and &lt;a href=&quot;qmap-iterator&quot;&gt;QMap::iterator&lt;/a&gt;). Here's how to iterate over a &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;&amp;lt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, int&amp;gt; using a Java-style iterator:</source>
          <target state="translated">&lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;に保存されているすべての（キー、値）ペアをナビゲートする場合は、イテレータを使用できます。&lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;は、&lt;a href=&quot;containers#java-style-iterators&quot;&gt;Javaスタイルのイテレーター&lt;/a&gt;（&lt;a href=&quot;qmapiterator&quot;&gt;QMapIterator&lt;/a&gt;および&lt;a href=&quot;qmutablemapiterator&quot;&gt;QMutableMapIterator&lt;/a&gt;）と&lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STLスタイルのイテレーター&lt;/a&gt;（&lt;a href=&quot;qmap-const-iterator&quot;&gt;QMap :: const_iterator&lt;/a&gt;および&lt;a href=&quot;qmap-iterator&quot;&gt;QMap :: iterator&lt;/a&gt;）の両方を提供します。Javaスタイルのイテレーターを使用して&lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; &amp;lt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;、int&amp;gt;を反復する方法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="b20716bbd0aa09befd167b9400ee62464348694e" translate="yes" xml:space="preserve">
          <source>If you want to navigate through all the values stored in a &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;, you can use an iterator. &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; supports both &lt;a href=&quot;containers#java-style-iterators&quot;&gt;Java-style iterators&lt;/a&gt; (&lt;a href=&quot;qsetiterator&quot;&gt;QSetIterator&lt;/a&gt; and &lt;a href=&quot;qmutablesetiterator&quot;&gt;QMutableSetIterator&lt;/a&gt;) and &lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL-style iterators&lt;/a&gt; (&lt;a href=&quot;qset-iterator&quot;&gt;QSet::iterator&lt;/a&gt; and &lt;a href=&quot;qset-const-iterator&quot;&gt;QSet::const_iterator&lt;/a&gt;). Here's how to iterate over a &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *&amp;gt; using a Java-style iterator:</source>
          <target state="translated">&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;に保存されているすべての値をナビゲートする場合は、イテレータを使用できます。&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;は、&lt;a href=&quot;containers#java-style-iterators&quot;&gt;Javaスタイルのイテレーター&lt;/a&gt;（&lt;a href=&quot;qsetiterator&quot;&gt;QSetIterator&lt;/a&gt;および&lt;a href=&quot;qmutablesetiterator&quot;&gt;QMutableSetIterator&lt;/a&gt;）と&lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STLスタイルのイテレーター&lt;/a&gt;（&lt;a href=&quot;qset-iterator&quot;&gt;QSet :: iterator&lt;/a&gt;および&lt;a href=&quot;qset-const-iterator&quot;&gt;QSet :: const_iterator&lt;/a&gt;）の両方をサポートしています。Javaスタイルのイテレータを使用して&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; &amp;lt; &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *&amp;gt;を反復する方法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="fd6a6b3eb89e36681847d3a753e1b94077fbd42c" translate="yes" xml:space="preserve">
          <source>If you want to obtain the length of the data up to and excluding the first '\0' character, call &lt;a href=&quot;qbytearray#qstrlen&quot;&gt;qstrlen&lt;/a&gt;() on the byte array.</source>
          <target state="translated">最初の '\ 0'文字までのデータの長さを取得する場合は、バイト配列に対して&lt;a href=&quot;qbytearray#qstrlen&quot;&gt;qstrlen&lt;/a&gt;（）を呼び出します。</target>
        </trans-unit>
        <trans-unit id="9dfae933ac79cc33edd3dbc61fb58a87498e4218" translate="yes" xml:space="preserve">
          <source>If you want to provide a guaranteed fallback for platforms that do not support theme icons, you can use the second argument:</source>
          <target state="translated">テーマアイコンをサポートしていないプラットフォームに保証されたフォールバックを提供したい場合は、第2引数を使用することができます。</target>
        </trans-unit>
        <trans-unit id="1db9564dfa61dd28433eb70fca5b8e74b0cfc6e1" translate="yes" xml:space="preserve">
          <source>If you want to provide plugins for use with Qt Designer, see the Qt Designer module documentation.</source>
          <target state="translated">Qt Designer で使用するプラグインを提供したい場合は、Qt Designer モジュールのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="d752ee6abc56ad70cc035e97e08c8c1a5bb8ed99" translate="yes" xml:space="preserve">
          <source>If you want to provide support for web sites that allow the user to open new windows, such as pop-up windows, you can subclass &lt;a href=&quot;qwebengineview&quot;&gt;QWebEngineView&lt;/a&gt; and reimplement the &lt;a href=&quot;qwebengineview#createWindow&quot;&gt;createWindow&lt;/a&gt;() function.</source>
          <target state="translated">ユーザーがポップアップウィンドウなどの新しいウィンドウを開くことができるWebサイトのサポートを提供する場合は、&lt;a href=&quot;qwebengineview#createWindow&quot;&gt;QWebEngineViewを&lt;/a&gt;サブクラス&lt;a href=&quot;qwebengineview&quot;&gt;化&lt;/a&gt;して、createWindow（）関数を再実装できます。</target>
        </trans-unit>
        <trans-unit id="1bfc523424c8243bdf30d15255ee2b9ba5b0b3c7" translate="yes" xml:space="preserve">
          <source>If you want to provide your users with an editable rich text editor, use &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt;. If you want a text browser without hypertext navigation use &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt;, and use &lt;a href=&quot;qtextedit#readOnly-prop&quot;&gt;QTextEdit::setReadOnly&lt;/a&gt;() to disable editing. If you just need to display a small piece of rich text use &lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt;.</source>
          <target state="translated">ユーザーに編集可能なリッチテキストエディターを提供する場合は、&lt;a href=&quot;qtextedit&quot;&gt;QTextEditを&lt;/a&gt;使用します。ハイパーテキストナビゲーションのないテキストブラウザが必要な場合は、&lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt;を使用し、&lt;a href=&quot;qtextedit#readOnly-prop&quot;&gt;QTextEdit :: setReadOnly&lt;/a&gt;（）を使用して編集を無効にします。小さなリッチテキストを表示するだけの場合は、&lt;a href=&quot;qlabel&quot;&gt;QLabelを&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="3ee969597a0600019ade75416316647fc0e6d9d0" translate="yes" xml:space="preserve">
          <source>If you want to remove an object from the cache for a particular key, call &lt;a href=&quot;qcache#remove&quot;&gt;remove&lt;/a&gt;(). This will also delete the object. If you want to remove an object from the cache without the &lt;a href=&quot;qcache&quot;&gt;QCache&lt;/a&gt; deleting it, use &lt;a href=&quot;qcache#take&quot;&gt;take&lt;/a&gt;().</source>
          <target state="translated">特定のキーのオブジェクトをキャッシュから削除する場合は、&lt;a href=&quot;qcache#remove&quot;&gt;remove&lt;/a&gt;（）を呼び出します。これにより、オブジェクトも削除されます。&lt;a href=&quot;qcache&quot;&gt;QCacheを&lt;/a&gt;削除せずにオブジェクトをキャッシュから削除する場合は、&lt;a href=&quot;qcache#take&quot;&gt;take&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="de95e27c0ba8453eb485155237ef997413f9832c" translate="yes" xml:space="preserve">
          <source>If you want to remove characters from the</source>
          <target state="translated">の文字を削除したい場合は</target>
        </trans-unit>
        <trans-unit id="ef371b9382f4cd607dccd67bf00e4dbc96b7c58a" translate="yes" xml:space="preserve">
          <source>If you want to remove items as you iterate over the hash, use &lt;a href=&quot;qmutablehashiterator#remove&quot;&gt;remove&lt;/a&gt;(). If you want to modify the value of an item, use &lt;a href=&quot;qmutablehashiterator#setValue&quot;&gt;setValue&lt;/a&gt;().</source>
          <target state="translated">ハッシュを反復処理するときにアイテムを削除する場合は、&lt;a href=&quot;qmutablehashiterator#remove&quot;&gt;remove&lt;/a&gt;（）を使用します。アイテムの値を変更する場合は、&lt;a href=&quot;qmutablehashiterator#setValue&quot;&gt;setValue&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="b8309cc38c8ce729c85673e89ad866ebb77ca098" translate="yes" xml:space="preserve">
          <source>If you want to remove items as you iterate over the list, use &lt;a href=&quot;qmutablelinkedlistiterator#remove&quot;&gt;remove&lt;/a&gt;(). If you want to modify the value of an item, use &lt;a href=&quot;qmutablelinkedlistiterator#setValue&quot;&gt;setValue&lt;/a&gt;(). If you want to insert a new item in the list, use &lt;a href=&quot;qmutablelinkedlistiterator#insert&quot;&gt;insert&lt;/a&gt;().</source>
          <target state="translated">リストを反復処理するときにアイテムを削除する場合は、&lt;a href=&quot;qmutablelinkedlistiterator#remove&quot;&gt;remove&lt;/a&gt;（）を使用します。アイテムの値を変更する場合は、&lt;a href=&quot;qmutablelinkedlistiterator#setValue&quot;&gt;setValue&lt;/a&gt;（）を使用します。リストに新しいアイテムを挿入する場合は、&lt;a href=&quot;qmutablelinkedlistiterator#insert&quot;&gt;insert&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="10376d50da4d07a2e0e13c459ae06c0f3bdf15f1" translate="yes" xml:space="preserve">
          <source>If you want to remove items as you iterate over the list, use &lt;a href=&quot;qmutablelistiterator#remove&quot;&gt;remove&lt;/a&gt;(). If you want to modify the value of an item, use &lt;a href=&quot;qmutablelistiterator#setValue&quot;&gt;setValue&lt;/a&gt;(). If you want to insert a new item in the list, use &lt;a href=&quot;qmutablelistiterator#insert&quot;&gt;insert&lt;/a&gt;().</source>
          <target state="translated">リストを反復処理するときにアイテムを削除する場合は、&lt;a href=&quot;qmutablelistiterator#remove&quot;&gt;remove&lt;/a&gt;（）を使用します。アイテムの値を変更する場合は、&lt;a href=&quot;qmutablelistiterator#setValue&quot;&gt;setValue&lt;/a&gt;（）を使用します。リストに新しいアイテムを挿入する場合は、&lt;a href=&quot;qmutablelistiterator#insert&quot;&gt;insert&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="e79b00991d7411d8730611af60e4448d620be40f" translate="yes" xml:space="preserve">
          <source>If you want to remove items as you iterate over the map, use &lt;a href=&quot;qmutablemapiterator#remove&quot;&gt;remove&lt;/a&gt;(). If you want to modify the value of an item, use &lt;a href=&quot;qmutablemapiterator#setValue&quot;&gt;setValue&lt;/a&gt;().</source>
          <target state="translated">マップを反復するときにアイテムを削除する場合は、&lt;a href=&quot;qmutablemapiterator#remove&quot;&gt;remove&lt;/a&gt;（）を使用します。アイテムの値を変更する場合は、&lt;a href=&quot;qmutablemapiterator#setValue&quot;&gt;setValue&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="e3544fda3dbbc15c7c70a6df904991bf6f723fcf" translate="yes" xml:space="preserve">
          <source>If you want to remove items as you iterate over the set, use &lt;a href=&quot;qmutablesetiterator#remove&quot;&gt;remove&lt;/a&gt;().</source>
          <target state="translated">セットを反復処理するときにアイテムを削除する場合は、&lt;a href=&quot;qmutablesetiterator#remove&quot;&gt;remove&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="52adc96426aaf31b367417826338bf9e429eaab0" translate="yes" xml:space="preserve">
          <source>If you want to remove items as you iterate over the vector, use &lt;a href=&quot;qmutablevectoriterator#remove&quot;&gt;remove&lt;/a&gt;(). If you want to modify the value of an item, use &lt;a href=&quot;qmutablevectoriterator#setValue&quot;&gt;setValue&lt;/a&gt;(). If you want to insert a new item in the vector, use &lt;a href=&quot;qmutablevectoriterator#insert&quot;&gt;insert&lt;/a&gt;().</source>
          <target state="translated">ベクトルを反復処理するときにアイテムを削除する場合は、&lt;a href=&quot;qmutablevectoriterator#remove&quot;&gt;remove&lt;/a&gt;（）を使用します。アイテムの値を変更する場合は、&lt;a href=&quot;qmutablevectoriterator#setValue&quot;&gt;setValue&lt;/a&gt;（）を使用します。ベクターに新しいアイテムを挿入する場合は、&lt;a href=&quot;qmutablevectoriterator#insert&quot;&gt;insert&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="6fda9fdf9261a6245582f8837e5859eea092ed4b" translate="yes" xml:space="preserve">
          <source>If you want to remove the row from the form layout and delete the inserted layout, use &lt;a href=&quot;qformlayout#removeRow&quot;&gt;removeRow&lt;/a&gt;() instead.</source>
          <target state="translated">フォームレイアウトから行を削除し、挿入されたレイアウトを削除する場合は、代わりに&lt;a href=&quot;qformlayout#removeRow&quot;&gt;removeRow&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="5b5de4c69911fc30f9b82bfa504e693900ea36ee" translate="yes" xml:space="preserve">
          <source>If you want to remove the row from the form layout without deleting the inserted layout, use &lt;a href=&quot;qformlayout#takeRow&quot;&gt;takeRow&lt;/a&gt;() instead.</source>
          <target state="translated">挿入されたレイアウトを削除せずにフォームレイアウトから行を削除する場合は、代わりに&lt;a href=&quot;qformlayout#takeRow&quot;&gt;takeRow&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="fa1ce005f8df0dab7960ecac023bfee749fbe509" translate="yes" xml:space="preserve">
          <source>If you want to remove the row from the layout and delete the widgets, use &lt;a href=&quot;qformlayout#removeRow&quot;&gt;removeRow&lt;/a&gt;() instead.</source>
          <target state="translated">レイアウトから行を削除してウィジェットを削除する場合は、代わりに&lt;a href=&quot;qformlayout#removeRow&quot;&gt;removeRow&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="a3f3d65e85e892eceb0bc7744f0008ea7233fffd" translate="yes" xml:space="preserve">
          <source>If you want to remove the row from the layout without deleting the widgets, use &lt;a href=&quot;qformlayout#takeRow&quot;&gt;takeRow&lt;/a&gt;() instead.</source>
          <target state="translated">ウィジェットを削除せずにレイアウトから行を削除する場合は、代わりに&lt;a href=&quot;qformlayout#takeRow&quot;&gt;takeRow&lt;/a&gt;（）を使用してください。</target>
        </trans-unit>
        <trans-unit id="64cdda339bec7f812dc4dd44c78a96f48277db67" translate="yes" xml:space="preserve">
          <source>If you want to replace the base class's function, you must implement everything yourself. However, if you only want to extend the base class's functionality, then you implement what you want and call the base class to obtain the default behavior for any cases you do not want to handle.</source>
          <target state="translated">基底クラスの機能を置き換えたい場合は、すべて自分で実装しなければなりません。しかし、基底クラスの機能を拡張したいだけならば、必要なものを実装し、基底クラスを呼び出して、扱いたくない場合のデフォルトの振る舞いを取得します。</target>
        </trans-unit>
        <trans-unit id="c7aa4540624b95acabdbadb09c58519aa35fef4c" translate="yes" xml:space="preserve">
          <source>If you want to retrieve all the values for a single key, you can use values(const Key &amp;amp;key), which returns a &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;T&amp;gt;:</source>
          <target state="translated">単一のキーのすべての値を取得する場合は、&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt;T&amp;gt; を返すvalues（const Key＆key）を使用できます。</target>
        </trans-unit>
        <trans-unit id="e89eb3afeb225e87d907879175af3afcf126c9a5" translate="yes" xml:space="preserve">
          <source>If you want to save or restore many settings with the same prefix, you can specify the prefix using &lt;a href=&quot;qsettings#beginGroup&quot;&gt;beginGroup&lt;/a&gt;() and call &lt;a href=&quot;qsettings#endGroup&quot;&gt;endGroup&lt;/a&gt;() at the end. Here's the same example again, but this time using the group mechanism:</source>
          <target state="translated">あなたは同じ接頭辞を持つ多くの設定を保存または復元する場合は、使用して接頭辞を指定することができ&lt;a href=&quot;qsettings#beginGroup&quot;&gt;beginGroupを&lt;/a&gt;（）を呼び出すと&lt;a href=&quot;qsettings#endGroup&quot;&gt;末端基を&lt;/a&gt;最後に）（。これも同じ例ですが、今回はグループメカニズムを使用しています。</target>
        </trans-unit>
        <trans-unit id="a75869a744ee8993dcf20ae9c6b9a50d513b38ca" translate="yes" xml:space="preserve">
          <source>If you want to save your changes, and at the same time preserve the original contents, you can use the &lt;a href=&quot;qdesignerwidgetboxinterface#save&quot;&gt;save&lt;/a&gt;() function combined with the &lt;a href=&quot;qdesignerwidgetboxinterface#setFileName&quot;&gt;setFileName&lt;/a&gt;() function to save your changes into another file. Remember to store the name of the original file first:</source>
          <target state="translated">変更を保存し、同時に元の内容を保持する場合は、&lt;a href=&quot;qdesignerwidgetboxinterface#save&quot;&gt;save&lt;/a&gt;（）関数を&lt;a href=&quot;qdesignerwidgetboxinterface#setFileName&quot;&gt;setFileName&lt;/a&gt;（）関数と組み合わせて使用して、変更を別のファイルに保存できます。最初に元のファイルの名前を保存してください。</target>
        </trans-unit>
        <trans-unit id="c0905b1777f0fd800c421f7d245b1e5b746013b1" translate="yes" xml:space="preserve">
          <source>If you want to see if a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; starts or ends with a particular substring use &lt;a href=&quot;qstring#startsWith&quot;&gt;startsWith&lt;/a&gt;() or &lt;a href=&quot;qstring#endsWith&quot;&gt;endsWith&lt;/a&gt;(). If you simply want to check whether a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; contains a particular character or substring, use the &lt;a href=&quot;qstring#contains&quot;&gt;contains&lt;/a&gt;() function. If you want to find out how many times a particular character or substring occurs in the string, use &lt;a href=&quot;qstring#count-1&quot;&gt;count&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;が特定の部分文字列で開始または終了するかどうかを確認する場合は、&lt;a href=&quot;qstring#startsWith&quot;&gt;startsWith&lt;/a&gt;（）または&lt;a href=&quot;qstring#endsWith&quot;&gt;endsWith&lt;/a&gt;（）を使用します。&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;に特定の文字またはサブストリングが含まれているかどうかを確認するだけの場合は、&lt;a href=&quot;qstring#contains&quot;&gt;contains&lt;/a&gt;（）関数を使用します。文字列内に特定の文字または部分文字列が出現する回数を知りたい場合は、&lt;a href=&quot;qstring#count-1&quot;&gt;count&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="9a8f9333a015252bd2352bd9fc0af4626df206b9" translate="yes" xml:space="preserve">
          <source>If you want to set several items of a particular row (say, by calling setItem() in a loop), you may want to turn off sorting before doing so, and turn it back on afterwards; this will allow you to use the same</source>
          <target state="translated">特定の行の複数の項目を設定したい場合 (例えば、ループ内で setItem()を呼び出すことで)、その前にソートをオフにしておき、その後にソートをオンにしておくとよいでしょう。</target>
        </trans-unit>
        <trans-unit id="bbca6a7d342806310527b218a8084ddfb4bd37d3" translate="yes" xml:space="preserve">
          <source>If you want to show a tooltip immediately, while the mouse is moving (e.g., to get the mouse coordinates with &lt;a href=&quot;qmouseevent#pos&quot;&gt;QMouseEvent::pos&lt;/a&gt;() and show them as a tooltip), you must first enable mouse tracking as described above. Then, to ensure that the tooltip is updated immediately, you must call &lt;a href=&quot;qtooltip#showText&quot;&gt;QToolTip::showText&lt;/a&gt;() instead of &lt;a href=&quot;qwidget#toolTip-prop&quot;&gt;setToolTip&lt;/a&gt;() in your implementation of mouseMoveEvent().</source>
          <target state="translated">マウスの移動中にツールチップをすぐに表示したい場合（たとえば、&lt;a href=&quot;qmouseevent#pos&quot;&gt;QMouseEvent :: pos&lt;/a&gt;（）でマウスの座標を取得し、ツールチップとして表示するには）、上記のように最初にマウストラッキングを有効にする必要があります。次に、ツールチップが直ちに更新されることを保証するために、あなたが呼び出す必要があり&lt;a href=&quot;qtooltip#showText&quot;&gt;QToolTip :: showTextを&lt;/a&gt;代わりに）（&lt;a href=&quot;qwidget#toolTip-prop&quot;&gt;setToolTip&lt;/a&gt;）（mouseMoveEventの実装に（）。</target>
        </trans-unit>
        <trans-unit id="cfa70650fd011d8c6b69c7e7e3eebd7b65431d31" translate="yes" xml:space="preserve">
          <source>If you want to sort your strings in an arbitrary order, consider using the &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; class. For example, you could use a &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;&amp;lt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;&amp;gt; to create a case-insensitive ordering (e.g. with the keys being lower-case versions of the strings, and the values being the strings), or a &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;&amp;lt;int, &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;&amp;gt; to sort the strings by some integer index.</source>
          <target state="translated">文字列を任意の順序でソートしたい場合は、&lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;クラスの使用を検討してください。たとえば、&lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; &amp;lt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;、&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;gt;を使用して、大文字と小文字を区別しない順序を作成できます（たとえば、キーは文字列の小文字バージョンであり、値は文字列です）、または&lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; &amp;lt;int、&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;gt;文字列を整数インデックスでソートします。</target>
        </trans-unit>
        <trans-unit id="f76a13f9a50f1cd7cbab92e1e2b73729d9143b78" translate="yes" xml:space="preserve">
          <source>If you want to specify the widget's size hint for a given width or height, you can provide the fixed dimension in</source>
          <target state="translated">ウィジェットのサイズヒントを指定した幅や高さに合わせて指定したい場合は、固定ディメンションを</target>
        </trans-unit>
        <trans-unit id="d0ee609e91b445855383ec2c6155845fa3a8bd55" translate="yes" xml:space="preserve">
          <source>If you want to store a single block of data (e.g., a comment), you can pass an empty key, or use a generic key like &quot;Description&quot;.</source>
          <target state="translated">単一のデータブロック(コメントなど)を保存したい場合は、空のキーを渡すか、&quot;Description &quot;のような汎用キーを使用することができます。</target>
        </trans-unit>
        <trans-unit id="2f81b7d8db42ec507d0dba034e10ab727008ab07" translate="yes" xml:space="preserve">
          <source>If you want to support several different architectures in your application, the recommendation is to build separate APKs for each architecture, so that each APK only contains the binaries required for the targeted architecture. For more information about this, see the Android documentation about &lt;a href=&quot;http://developer.android.com/google/play/publishing/multiple-apks.html&quot;&gt;Multiple APK Support&lt;/a&gt;.</source>
          <target state="translated">アプリケーションで複数の異なるアーキテクチャをサポートする場合は、各アーキテクチャに個別のAPKをビルドして、各APKにターゲットアーキテクチャに必要なバイナリのみが含まれるようにすることをお勧めします。これについて詳しくは、&lt;a href=&quot;http://developer.android.com/google/play/publishing/multiple-apks.html&quot;&gt;マルチAPKサポート&lt;/a&gt;に関するAndroidのドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="72c5fa334893fab33e3b0b02a2877a1c1100827d" translate="yes" xml:space="preserve">
          <source>If you want to use &lt;a href=&quot;qflags&quot;&gt;QFlags&lt;/a&gt; for your own enum types, use the &lt;a href=&quot;qflags#Q_DECLARE_FLAGS&quot;&gt;Q_DECLARE_FLAGS&lt;/a&gt;() and &lt;a href=&quot;qflags#Q_DECLARE_OPERATORS_FOR_FLAGS&quot;&gt;Q_DECLARE_OPERATORS_FOR_FLAGS&lt;/a&gt;().</source>
          <target state="translated">あなたが使用したい場合は&lt;a href=&quot;qflags&quot;&gt;QFlagsを&lt;/a&gt;使用し、独自の列挙型のため&lt;a href=&quot;qflags#Q_DECLARE_FLAGS&quot;&gt;Q_DECLARE_FLAGSを&lt;/a&gt;（）と&lt;a href=&quot;qflags#Q_DECLARE_OPERATORS_FOR_FLAGS&quot;&gt;Q_DECLARE_OPERATORS_FOR_FLAGS&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="6b463fe5232536dbaebee4ffdb67aea9757aa428" translate="yes" xml:space="preserve">
          <source>If you want to use INI files on all platforms instead of the native API, you can pass &lt;a href=&quot;qsettings#Format-enum&quot;&gt;QSettings::IniFormat&lt;/a&gt; as the first argument to the &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; constructor, followed by the scope, the organization name, and the application name:</source>
          <target state="translated">ネイティブAPIの代わりにすべてのプラットフォームでINIファイルを使用する場合は、&lt;a href=&quot;qsettings#Format-enum&quot;&gt;QSettings :: IniFormat&lt;/a&gt;を最初の引数として&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;コンストラクターに渡し、その後にスコープ、組織名、アプリケーション名を続けます。</target>
        </trans-unit>
        <trans-unit id="503c6e60564c4b89c106e617da9c3ec82fdf48b5" translate="yes" xml:space="preserve">
          <source>If you want to use Q_DECLARE_INTERFACE with interface classes declared in a namespace then you have to make sure the Q_DECLARE_INTERFACE is not inside a namespace though. For example:</source>
          <target state="translated">名前空間で宣言されたインターフェイスクラスで Q_DECLARE_INTERFACE を使用したい場合は、Q_DECLARE_INTERFACE が名前空間の中にないことを確認しなければなりません。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="b35675b93a592dae0c6fee364af226250b2a5072" translate="yes" xml:space="preserve">
          <source>If you want to use a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; to hold child widgets you will usually want to add a layout to the parent &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;. See &lt;a href=&quot;layout#&quot;&gt;Layout Management&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;を使用して子ウィジェットを保持する場合は、通常、レイアウトを親&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;に追加します。詳細については、&lt;a href=&quot;layout#&quot;&gt;レイアウト管理&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a75288387750d6649bbe76b48200a4459bccf73d" translate="yes" xml:space="preserve">
          <source>If you want to use a filter function takes more than one argument, you can use a lambda function or &lt;code&gt;std::bind()&lt;/code&gt; to transform it onto a function that takes one argument.</source>
          <target state="translated">フィルター関数を使用して複数の引数を &lt;code&gt;std::bind()&lt;/code&gt; する場合は、ラムダ関数またはstd :: bind（）を使用して、1つの引数を取得する関数に変換できます。</target>
        </trans-unit>
        <trans-unit id="3a895ee318b395fc5d95d98cb1fb6d4a4bd0d6d1" translate="yes" xml:space="preserve">
          <source>If you want to use a framebuffer object with multisampling enabled as a texture, you first need to copy from it to a regular framebuffer object using QOpenGLContext::blitFramebuffer().</source>
          <target state="translated">マルチサンプリングを有効にしたフレームバッファオブジェクトをテクスチャとして使いたい場合は、まず、QOpenGLContext::blitFramebuffer()を使って通常のフレームバッファオブジェクトにコピーする必要があります。</target>
        </trans-unit>
        <trans-unit id="75c598917b455b9d08c43e1b09257e52ee5de965" translate="yes" xml:space="preserve">
          <source>If you want to use a map function that takes more than one argument you can use a lambda function or &lt;code&gt;std::bind()&lt;/code&gt; to transform it onto a function that takes one argument.</source>
          <target state="translated">複数の引数を取るマップ関数を使用したい場合は、ラムダ関数または &lt;code&gt;std::bind()&lt;/code&gt; を使用して、1つの引数を取る関数に変換できます。</target>
        </trans-unit>
        <trans-unit id="cf14b20ed394796f34b2a1defe39edffcae66ee0" translate="yes" xml:space="preserve">
          <source>If you want to use controls in your server in web-pages you need to make the server available to the browser used to view your page, and you need to specify the location of the server package in your page.</source>
          <target state="translated">ウェブページでサーバー内のコントロールを使用したい場合は、ページを表示するために使用するブラウザでサーバーを利用できるようにする必要があり、ページ内のサーバーパッケージの場所を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="0b59a35e51c3e470c7228aef4894f32e97ca9378" translate="yes" xml:space="preserve">
          <source>If you want to use multiple filters, separate each one with</source>
          <target state="translated">複数のフィルタを使用したい場合は、それぞれのフィルタを</target>
        </trans-unit>
        <trans-unit id="67acd904a6cfb20bf5d4ec9de62718a79958a636" translate="yes" xml:space="preserve">
          <source>If you want to use other QDoc commands within an argument that contains spaces, you always need to enclose the argument in braces. But QDoc is smart enough to count parentheses [3], so you don't need braces in cases like this:</source>
          <target state="translated">スペースを含む引数の中で他のQDocコマンドを使いたい場合は、常に引数を中括弧で囲む必要があります。しかし、QDocは括弧[3]を数えるほど賢いので、このような場合には中括弧は必要ありません。</target>
        </trans-unit>
        <trans-unit id="e304f4d162cdd6b91149941db5a4861ae2782588" translate="yes" xml:space="preserve">
          <source>If you want to use other types as the key, make sure that you provide operator==() and a &lt;a href=&quot;qhash#qHashx&quot;&gt;qHash&lt;/a&gt;() implementation.</source>
          <target state="translated">他のタイプをキーとして使用する場合は、operator ==（）および&lt;a href=&quot;qhash#qHashx&quot;&gt;qHash&lt;/a&gt;（）実装を必ず指定してください。</target>
        </trans-unit>
        <trans-unit id="3f6c5acd529fc7e81ee3f63f1eabc430a55977a4" translate="yes" xml:space="preserve">
          <source>If you want to use some dynamic libraries in the macOS application bundle (the application directory), create a subdirectory named</source>
          <target state="translated">macOSアプリケーションバンドル(アプリケーションディレクトリ)でダイナミックライブラリを使いたい場合は、サブディレクトリに</target>
        </trans-unit>
        <trans-unit id="5e38a66accf5331c873d39eb454d16cdef463f6e" translate="yes" xml:space="preserve">
          <source>If you want to wake up a specific thread, the solution is typically to use different wait conditions and have different threads wait on different conditions.</source>
          <target state="translated">特定のスレッドをウェイクアップしたい場合、解決策は通常、異なる待ち条件を使用し、異なるスレッドに異なる条件で待機させることです。</target>
        </trans-unit>
        <trans-unit id="e9846382b615d7c2d8abab6b96cbfaebf6b28668" translate="yes" xml:space="preserve">
          <source>If you want to write portably, you can use individual rules of the following form:</source>
          <target state="translated">移植的に書きたい場合は、以下のような形式の個別ルールを使用することができます。</target>
        </trans-unit>
        <trans-unit id="1067ba1a8e8e88de78541f6de042b3358633a518" translate="yes" xml:space="preserve">
          <source>If you want your application to report errors to the user or to perform customized error handling, you should subclass this class.</source>
          <target state="translated">アプリケーションでエラーをユーザに報告したり、カスタマイズされたエラー処理を実行したりしたい場合は、このクラスをサブクラス化する必要があります。</target>
        </trans-unit>
        <trans-unit id="4b269b734135e0af61e1e0e9f959a070ded81c32" translate="yes" xml:space="preserve">
          <source>If you wish to build the OCI plugin manually with this method, the procedure looks like this:</source>
          <target state="translated">この方法でOCIプラグインを手動でビルドしたい場合、手順は以下のようになります。</target>
        </trans-unit>
        <trans-unit id="a81b48ae699cf322716c07ff38971ce61e6d019e" translate="yes" xml:space="preserve">
          <source>If you wish to change any of the bounding rectangles calculated by the style or the painting of check box indicators, you can subclass &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;. Note, however, that the size of the items can also be affected by reimplementing &lt;a href=&quot;qstyleditemdelegate#sizeHint&quot;&gt;sizeHint&lt;/a&gt;().</source>
          <target state="translated">スタイルまたはチェックボックスインジケーターの描画によって計算された外接する四角形のいずれかを変更する場合は、&lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;をサブクラス化できます。ただし、アイテムのサイズは、&lt;a href=&quot;qstyleditemdelegate#sizeHint&quot;&gt;sizeHint&lt;/a&gt;（）の再実装によっても影響を受ける可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="243c44ef42200392a025ddde85473dedd9e40e54" translate="yes" xml:space="preserve">
          <source>If you wish to create an object without setting a parent, specify &lt;code&gt;null&lt;/code&gt; for the</source>
          <target state="translated">あなたが親を設定せずにオブジェクトを作成したい場合は、指定した &lt;code&gt;null&lt;/code&gt; のために</target>
        </trans-unit>
        <trans-unit id="7fb97e146e5862a6a33947d92bf8771517ccdc13" translate="yes" xml:space="preserve">
          <source>If you wish to customize the painting of item views, you should implement a custom style. Please see the &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; class documentation for details.</source>
          <target state="translated">アイテムビューの描画をカスタマイズする場合は、カスタムスタイルを実装する必要があります。詳細については、&lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;クラスのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="0a69ca08ab96c13641a6508b794546aec257c0fa" translate="yes" xml:space="preserve">
          <source>If you wish to declare a property to store a list of values which are not necessarily QML object-type values, you should declare a &lt;a href=&quot;qml-var&quot;&gt;var&lt;/a&gt; property instead.</source>
          <target state="translated">必ずしもQMLオブジェクトタイプの値ではない値のリストを格納するプロパティを宣言する場合は、代わりに&lt;a href=&quot;qml-var&quot;&gt;var&lt;/a&gt;プロパティを宣言する必要があります。</target>
        </trans-unit>
        <trans-unit id="a29175bb9c1cb3bbb036059c5f8bb1434c22ddb9" translate="yes" xml:space="preserve">
          <source>If you wish to have a command-line tool that does not use the GUI for example, &lt;code&gt;moc&lt;/code&gt;, &lt;code&gt;uic&lt;/code&gt; or &lt;code&gt;ls&lt;/code&gt;, you can tell qmake to disable bundle creation from the &lt;code&gt;CONFIG&lt;/code&gt; variable in the project file:</source>
          <target state="translated">GUIを使用しないコマンドラインツール（ &lt;code&gt;moc&lt;/code&gt; 、 &lt;code&gt;uic&lt;/code&gt; 、 &lt;code&gt;ls&lt;/code&gt; など）が必要な場合は、qmakeにプロジェクトファイルの &lt;code&gt;CONFIG&lt;/code&gt; 変数からのバンドル作成を無効にするように指示できます。</target>
        </trans-unit>
        <trans-unit id="e0b38ff477d19d2ca774b839b6974e90def6b73c" translate="yes" xml:space="preserve">
          <source>If you wish to introduce a delay between animations in a &lt;a href=&quot;qsequentialanimationgroup&quot;&gt;QSequentialAnimationGroup&lt;/a&gt;, you can insert a &lt;a href=&quot;qpauseanimation&quot;&gt;QPauseAnimation&lt;/a&gt;. This class does not animate anything, but does not &lt;a href=&quot;qabstractanimation#finished&quot;&gt;finish&lt;/a&gt; before a specified number of milliseconds have elapsed from when it was started. You specify the duration of the pause in the constructor. It can also be set directly with &lt;a href=&quot;qpauseanimation#duration-prop&quot;&gt;setDuration&lt;/a&gt;().</source>
          <target state="translated">あなたがアニメーション間の遅延を導入したい場合&lt;a href=&quot;qsequentialanimationgroup&quot;&gt;QSequentialAnimationGroup&lt;/a&gt;、あなたは挿入でき&lt;a href=&quot;qpauseanimation&quot;&gt;QPauseAnimationを&lt;/a&gt;。このクラスは何もアニメーション化しませんが、開始されてから指定されたミリ秒数が経過する前に&lt;a href=&quot;qabstractanimation#finished&quot;&gt;終了&lt;/a&gt;しません。一時停止の期間はコンストラクターで指定します。&lt;a href=&quot;qpauseanimation#duration-prop&quot;&gt;setDuration&lt;/a&gt;（）で直接設定することもできます。</target>
        </trans-unit>
        <trans-unit id="159d5838bcccb58b7af4b96b38caaf465a1b9c5d" translate="yes" xml:space="preserve">
          <source>If you wish to load an entire scene made of several objects, you should rather use the &lt;a href=&quot;qt3drender-qsceneloader&quot;&gt;Qt3DRender::QSceneLoader&lt;/a&gt; instead.</source>
          <target state="translated">複数のオブジェクトで構成されるシーン全体をロードする場合は、代わりに&lt;a href=&quot;qt3drender-qsceneloader&quot;&gt;Qt3DRender :: QSceneLoaderを&lt;/a&gt;使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="f84b7b6c5d543e62d3e7e0f79484d8066e3531f3" translate="yes" xml:space="preserve">
          <source>If you wish to make the context current in order to do clean-up, make sure to only connect to the signal using a direct connection.</source>
          <target state="translated">クリーンアップを行うためにコンテキストを電流にしたい場合は、必ずダイレクト接続でのみ信号に接続するようにしてください。</target>
        </trans-unit>
        <trans-unit id="e21582ab084164eddf1b291820920631b9959c06" translate="yes" xml:space="preserve">
          <source>If you wish to remove elements from a sequence rather than simply replace them with default constructed values, do not use the indexed delete operator (&quot;delete sequence[i]&quot;) but instead use the &lt;code&gt;splice&lt;/code&gt; function (&quot;sequence.splice(startIndex, deleteCount)&quot;).</source>
          <target state="translated">要素をデフォルトの構成値で単に置き換えるのではなく、シーケンスから要素を削除する場合は、インデックス付き削除演算子（ &quot;delete sequence [i]&quot;）を使用せずに、 &lt;code&gt;splice&lt;/code&gt; 関数（ &quot;sequence.splice（startIndex、deleteCount ） &quot;）。</target>
        </trans-unit>
        <trans-unit id="0b4e499bc4c5986671c6ef5dbd86bfbbc1b58f7e" translate="yes" xml:space="preserve">
          <source>If you wish to reset the decoded format to that of the original audio file, you can specify an invalid</source>
          <target state="translated">デコードされたフォーマットを元のオーディオファイルのフォーマットにリセットしたい場合は、無効な</target>
        </trans-unit>
        <trans-unit id="815e2bd5cf4e2b9061fda121d653346b3e929a30" translate="yes" xml:space="preserve">
          <source>If you wish to take advantage of the features provided by the model/view approach while still using an item-based interface, consider using view classes, such as &lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt;, &lt;a href=&quot;qtableview&quot;&gt;QTableView&lt;/a&gt;, and &lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt; with &lt;a href=&quot;qstandarditemmodel&quot;&gt;QStandardItemModel&lt;/a&gt;.</source>
          <target state="translated">あなたはまだアイテムベースのインタフェースを使用しながら、モデル/ビューアプローチによって提供される機能を利用したい場合など、ビュークラス、使用することを検討して&lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt;、&lt;a href=&quot;qtableview&quot;&gt;QTableView&lt;/a&gt;、および&lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt;と&lt;a href=&quot;qstandarditemmodel&quot;&gt;QStandardItemModelを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8e1f06dfa8cd5f427a710f53d1541f65623bd15f" translate="yes" xml:space="preserve">
          <source>If you would like the application's contents to stay where they are when the drawer is opened, don't apply a translation.</source>
          <target state="translated">引き出しを開いたときにアプリの内容がそのままの場所にとどまっていてほしい場合は、翻訳を適用しないでください。</target>
        </trans-unit>
        <trans-unit id="d913c5bfa651c86cfe9561db0fdfbd7bd0d1157f" translate="yes" xml:space="preserve">
          <source>If you would like to draw your own window decoration, you can set your own frame margins to override the default margins.</source>
          <target state="translated">自分でウィンドウ装飾を描きたい場合は、フレームの余白を設定してデフォルトの余白を上書きすることができます。</target>
        </trans-unit>
        <trans-unit id="d1e57f6a403b9d00ba20ede07640d663f94d9bb2" translate="yes" xml:space="preserve">
          <source>If you would prefer that the font and palette propagate to child widgets, you can set the &lt;a href=&quot;qt#ApplicationAttribute-enum&quot;&gt;Qt::AA_UseStyleSheetPropagationInWidgetStyles&lt;/a&gt; flag, like this:</source>
          <target state="translated">フォントとパレットを子ウィジェットに&lt;a href=&quot;qt#ApplicationAttribute-enum&quot;&gt;反映&lt;/a&gt;させる場合は、次のようにQt :: AA_UseStyleSheetPropagationInWidgetStylesフラグを設定できます。</target>
        </trans-unit>
        <trans-unit id="972ddea2508fd6833d6df718ba7d1b3bad696c8f" translate="yes" xml:space="preserve">
          <source>If you write your own widgets that have an option to set a small pixmap, consider allowing a &lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; to be set for that pixmap. The Qt class &lt;a href=&quot;qtoolbutton&quot;&gt;QToolButton&lt;/a&gt; is an example of such a widget.</source>
          <target state="translated">小さなピックスマップを設定するオプションがある独自のウィジェットを作成する場合は、そのピックスマップに&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt;を設定できるようにすることを検討してください。Qtクラス&lt;a href=&quot;qtoolbutton&quot;&gt;QToolButton&lt;/a&gt;はそのようなウィジェットの例です。</target>
        </trans-unit>
        <trans-unit id="daabc7cf04dec890de4a59eed0e93f81b14b18c1" translate="yes" xml:space="preserve">
          <source>If you're developing on a 64-bit Linux machine, you must install the following dependencies in order to run 32-bit executables like &lt;code&gt;adb&lt;/code&gt;, which allows Qt Creator to find devices to deploy to:</source>
          <target state="translated">64ビットのLinuxマシンで開発している場合、 &lt;code&gt;adb&lt;/code&gt; ような32ビットの実行可能ファイルを実行するには、Qt Creatorが展開先のデバイスを見つけられるように、次の依存関係をインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="7291b8f5e7b74175825eec8a86f93115af0aa7c0" translate="yes" xml:space="preserve">
          <source>If you're using the same application (.so file) for activity and also for service, you need to use &lt;code&gt;android.app.arguments&lt;/code&gt;&lt;code&gt;meta-data&lt;/code&gt; to pass some arguments to your &lt;code&gt;main&lt;/code&gt; function in order to know which one is which.</source>
          <target state="translated">アクティビティとサービスの両方に同じアプリケーション（.soファイル）を使用している場合は、 &lt;code&gt;android.app.arguments&lt;/code&gt; &lt;code&gt;meta-data&lt;/code&gt; を使用して、 &lt;code&gt;main&lt;/code&gt; 関数に引数を渡し、どれがどれかを知る必要があります。</target>
        </trans-unit>
        <trans-unit id="eb4e00a828abcf6435bc775c3c853cc29a3dfb89" translate="yes" xml:space="preserve">
          <source>If you're worried about namespace pollution, you can disable these macros by adding the following line to your &lt;code&gt;.pro&lt;/code&gt; file:</source>
          <target state="translated">名前空間の汚染が心配な場合は、 &lt;code&gt;.pro&lt;/code&gt; ファイルに次の行を追加して、これらのマクロを無効にできます。</target>
        </trans-unit>
        <trans-unit id="6f24a1eec5e9c1e1ce83961a3e75273b1d21ddc2" translate="yes" xml:space="preserve">
          <source>If you're worried about namespace pollution, you can disable this macro by adding the following line to your &lt;code&gt;.pro&lt;/code&gt; file:</source>
          <target state="translated">名前空間の汚染が心配な場合は、 &lt;code&gt;.pro&lt;/code&gt; ファイルに次の行を追加して、このマクロを無効にできます。</target>
        </trans-unit>
        <trans-unit id="d0b10c56ece24e57b4de992cfac85be3d5c33c4a" translate="yes" xml:space="preserve">
          <source>If your &lt;code&gt;Info.plist&lt;/code&gt; file contains an entry for &lt;code&gt;NSPhotoLibraryUsageDescription&lt;/code&gt;, qmake will automatically include an extra plugin which enables access to the native image picker. If the directory in your &lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog&lt;/a&gt; is set to:</source>
          <target state="translated">&lt;code&gt;Info.plist&lt;/code&gt; ファイルに &lt;code&gt;NSPhotoLibraryUsageDescription&lt;/code&gt; のエントリが含まれている場合、qmakeは、ネイティブイメージピッカーへのアクセスを可能にする追加のプラグインを自動的に含めます。&lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog&lt;/a&gt;のディレクトリが次のように設定されている場合：</target>
        </trans-unit>
        <trans-unit id="612fb54a1db4926e1242c0e5627f6593e80562a3" translate="yes" xml:space="preserve">
          <source>If your Item uses the &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt; type to define animations for property changes, you should always use either &lt;a href=&quot;qobject#setProperty&quot;&gt;QObject::setProperty&lt;/a&gt;(), QQmlProperty(), or &lt;a href=&quot;qmetaproperty#write&quot;&gt;QMetaProperty::write&lt;/a&gt;() when you need to modify those properties from C++. This ensures that the QML engine knows about the property change. Otherwise, the engine won't be able to carry out your requested animation. Note that these functions incur a slight performance penalty. For more details, see &lt;a href=&quot;qtqml-cppintegration-interactqmlfromcpp#accessing-members-of-a-qml-object-type-from-c&quot;&gt;Accessing Members of a QML Object Type from C++&lt;/a&gt;.</source>
          <target state="translated">Itemが&lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt;タイプを使用してプロパティ変更のアニメーションを定義する場合、C ++からこれらのプロパティを変更する必要があるときは、常に&lt;a href=&quot;qobject#setProperty&quot;&gt;QObject :: setProperty&lt;/a&gt;（）、QQmlProperty（）、または&lt;a href=&quot;qmetaproperty#write&quot;&gt;QMetaProperty :: write&lt;/a&gt;（）のいずれかを使用する必要があります。これにより、QMLエンジンがプロパティの変更を認識できるようになります。そうしないと、エンジンは要求されたアニメーションを実行できません。これらの関数は、パフォーマンスをわずかに低下させることに注意してください。詳細については、「&lt;a href=&quot;qtqml-cppintegration-interactqmlfromcpp#accessing-members-of-a-qml-object-type-from-c&quot;&gt;C ++からのQMLオブジェクト型のメンバーへのアクセス&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="de85f7adb720be31015d2f53bdbdc47e962a6d98" translate="yes" xml:space="preserve">
          <source>If your OpenGL implementation supports the GL_EXT_texture_filter_anisotropic extension this function sets the maximum anisotropy level to</source>
          <target state="translated">OpenGLの実装がGL_EXT_texture_filter_anisotropic拡張をサポートしている場合、この関数は最大の異方性レベルを</target>
        </trans-unit>
        <trans-unit id="e2646f4e473d40bdf4424a95af63654825817e99" translate="yes" xml:space="preserve">
          <source>If your QML type is defined in a</source>
          <target state="translated">QML の型が</target>
        </trans-unit>
        <trans-unit id="f689dbad9e71c2662095aa7b027ce2241d810411" translate="yes" xml:space="preserve">
          <source>If your XQuery can return atomic value items of type &lt;code&gt;xs:QName&lt;/code&gt;, they will appear in your &lt;a href=&quot;qxmlresultitems&quot;&gt;QXmlResultItems&lt;/a&gt; as instances of &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt;. Since the &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; class does not support the &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; class directly, extracting them from &lt;a href=&quot;qxmlresultitems&quot;&gt;QXmlResultItems&lt;/a&gt; requires a bit of slight-of-hand using the &lt;a href=&quot;qmetatype&quot;&gt;Qt metatype system&lt;/a&gt;. We must modify our example to use a couple of template functions, a friend of &lt;a href=&quot;qmetatype&quot;&gt;QMetaType&lt;/a&gt; (&lt;a href=&quot;qmetatype#qMetaTypeId&quot;&gt;qMetaTypeId&lt;/a&gt;&amp;lt;T&amp;gt;()) and a friend of &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; (&lt;a href=&quot;qvariant#qvariant_cast&quot;&gt;qvariant_cast&lt;/a&gt;&amp;lt;T&amp;gt;()):</source>
          <target state="translated">あなたのXQueryは型の原子値の項目を返すことができる場合 &lt;code&gt;xs:QName&lt;/code&gt; 、彼らはあなたに表示されます&lt;a href=&quot;qxmlresultitems&quot;&gt;QXmlResultItems&lt;/a&gt;のインスタンスとして&lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt;。以来&lt;a href=&quot;qvariant&quot;&gt;QVariantの&lt;/a&gt;クラスがサポートされていない&lt;a href=&quot;qxmlname&quot;&gt;QXmlNameの&lt;/a&gt;クラスを直接、からそれらを抽出&lt;a href=&quot;qxmlresultitems&quot;&gt;QXmlResultItemsは&lt;/a&gt;使用わずか-の手のビットを必要とする&lt;a href=&quot;qmetatype&quot;&gt;Qtのメタタイプシステム&lt;/a&gt;。私たちは、テンプレート関数のカップル、友人の使用するために私たちの例を変更する必要があり&lt;a href=&quot;qmetatype&quot;&gt;QMetaTypeを&lt;/a&gt;（&lt;a href=&quot;qmetatype#qMetaTypeId&quot;&gt;qMetaTypeId&lt;/a&gt; &amp;lt;T&amp;gt;（））との友人&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;（&lt;a href=&quot;qvariant#qvariant_cast&quot;&gt;qvariant_cast&lt;/a&gt; &amp;lt;T&amp;gt;（））：</target>
        </trans-unit>
        <trans-unit id="c33b6b405c4832e4a47175cade4878c811a12def" translate="yes" xml:space="preserve">
          <source>If your application consists of multiple views (for example, multiple tabs) but only one is required at any one time, you can use lazy instantiation to minimize the amount of memory you need to have allocated at any given time. See the prior section on &lt;a href=&quot;#lazy-initialization&quot;&gt;Lazy Initialization&lt;/a&gt; for more information.</source>
          <target state="translated">アプリケーションが複数のビュー（たとえば、複数のタブ）で構成されているが、一度に1つしか必要ない場合は、遅延インスタンス化を使用して、常に割り当てる必要のあるメモリの量を最小限に抑えることができます。詳細については、&lt;a href=&quot;#lazy-initialization&quot;&gt;遅延初期化&lt;/a&gt;に関する前のセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="f6f5700ed93aaf0ac491f9cb45ab94a73d11e831" translate="yes" xml:space="preserve">
          <source>If your application has unlockable products, and does not store the purchase states of these products in a way which makes it possible to restore them when the user reinstalls the application, you should provide a way for the user to restore the purchases manually.</source>
          <target state="translated">アプリケーションにアンロック可能な製品があり、ユーザーがアプリケーションを再インストールしたときに復元できるような方法でこれらの製品の購入状態を保存していない場合は、ユーザーが手動で購入を復元できるような方法を提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="d0175517087d7f87f877b49ec96ed43e9993e54b" translate="yes" xml:space="preserve">
          <source>If your application is very simple, it may be possible to store the entire application state in additional command line options. This is usually a very bad idea because command lines are often limited to a few hundred bytes. Instead, use &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;, temporary files, or a database for this purpose. By marking the data with the unique &lt;a href=&quot;qsessionmanager#sessionId&quot;&gt;sessionId&lt;/a&gt;(), you will be able to restore the application in a future session.</source>
          <target state="translated">アプリケーションが非常に単純な場合は、アプリケーションの状態全体を追加のコマンドラインオプションに格納できる可能性があります。コマンドラインはしばしば数百バイトに制限されるため、これは通常非常に悪い考えです。代わりに、この目的のために&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;、一時ファイル、またはデータベースを使用してください。一意の&lt;a href=&quot;qsessionmanager#sessionId&quot;&gt;sessionId&lt;/a&gt;（）でデータをマークすることにより、将来のセッションでアプリケーションを復元できます。</target>
        </trans-unit>
        <trans-unit id="00f996db434fbd4148cd3d64abf4c29be1ff38af" translate="yes" xml:space="preserve">
          <source>If your application loads a large image but displays it in a small-sized element, set the &quot;sourceSize&quot; property to the size of the element being rendered to ensure that the smaller-scaled version of the image is kept in memory, rather than the large one.</source>
          <target state="translated">アプリケーションが大きな画像をロードして、それを小さなサイズの要素に表示する場合、&quot;sourceSize&quot; プロパティをレンダリングされる要素のサイズに設定して、大きな画像ではなく小さなサイズの画像がメモリに保持されるようにしてください。</target>
        </trans-unit>
        <trans-unit id="86f9b3e44da0ce922b11cc124e5a293028e87f8f" translate="yes" xml:space="preserve">
          <source>If your backend has already allocated a reading you should pass the address of this to the function. Otherwise you should pass 0 and the function will return the address of the reading your backend should use when it wants to notify the sensor API of new readings.</source>
          <target state="translated">バックエンドが既に読み値を確保している場合は、そのアドレスを関数に渡す必要があります。そうでない場合は 0 を渡す必要があり、この関数はバックエンドが新しい読み取り値をセンサAPIに通知する際に使用する読み取り値のアドレスを返します。</target>
        </trans-unit>
        <trans-unit id="8dad3ce2a056ce4e9de595ce577839ebdd7b32d3" translate="yes" xml:space="preserve">
          <source>If your compiler supports the C++11 standard, the three &lt;a href=&quot;qcommandlineparser#addOption&quot;&gt;addOption&lt;/a&gt;() calls in the above example can be simplified:</source>
          <target state="translated">コンパイラがC ++ 11標準をサポートしている場合は、上記の例の3つの&lt;a href=&quot;qcommandlineparser#addOption&quot;&gt;addOption&lt;/a&gt;（）呼び出しを簡略化できます。</target>
        </trans-unit>
        <trans-unit id="c66f3be6bd529839255d9695af3e672dce04dbbb" translate="yes" xml:space="preserve">
          <source>If your effect changes, use &lt;a href=&quot;qgraphicseffect#update&quot;&gt;update&lt;/a&gt;() to request for a redraw. If your custom effect changes the bounding rectangle of the source, e.g., a radial glow effect may need to apply an extra margin, you can reimplement the virtual &lt;a href=&quot;qgraphicseffect#boundingRectFor&quot;&gt;boundingRectFor&lt;/a&gt;() function, and call &lt;a href=&quot;qgraphicseffect#updateBoundingRect&quot;&gt;updateBoundingRect&lt;/a&gt;() to notify the framework whenever this rectangle changes. The virtual &lt;a href=&quot;qgraphicseffect#sourceChanged&quot;&gt;sourceChanged&lt;/a&gt;() function is called to notify the effects that the source has changed in some way - e.g., if the source is a &lt;a href=&quot;qgraphicsrectitem&quot;&gt;QGraphicsRectItem&lt;/a&gt; and its rectangle parameters have changed.</source>
          <target state="translated">効果が変わった場合は、&lt;a href=&quot;qgraphicseffect#update&quot;&gt;update&lt;/a&gt;（）を使用して再描画を要求します。カスタム効果がソースの境界の四角形を変更する場合、たとえば、放射状グロー効果が追加のマージンを適用する必要がある場合、仮想の&lt;a href=&quot;qgraphicseffect#boundingRectFor&quot;&gt;boundingRectFor&lt;/a&gt;（）関数を再実装し、この四角形が変更されるたびに&lt;a href=&quot;qgraphicseffect#updateBoundingRect&quot;&gt;updateBoundingRect&lt;/a&gt;（）を呼び出してフレームワークに通知できます。仮想&lt;a href=&quot;qgraphicseffect#sourceChanged&quot;&gt;sourceChanged&lt;/a&gt;（）関数が呼び出されて、ソースが何らかの方法で変更されたことを通知します。たとえば、ソースが&lt;a href=&quot;qgraphicsrectitem&quot;&gt;QGraphicsRectItemで&lt;/a&gt;あり、その矩形パラメーターが変更された場合などです。</target>
        </trans-unit>
        <trans-unit id="8e482e3ad7cd2848c95b1c63b9a6a5f87d71a074" translate="yes" xml:space="preserve">
          <source>If your goal is orthogonal surveillance of eventpoints, an older alternative was &lt;a href=&quot;qobject#installEventFilter&quot;&gt;QObject::installEventFilter()&lt;/a&gt;, but that has never been a built-in &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt; feature: it requires some C++ code, such as a &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; subclass. &lt;a href=&quot;qml-qtquick-pointhandler&quot;&gt;PointHandler&lt;/a&gt; is more efficient than that, because only pointer events will be delivered to it, during the course of normal event delivery in &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;; whereas an event filter needs to filter all QEvents of all types, and thus sets itself up as a potential event delivery bottleneck.</source>
          <target state="translated">イベントポイントの直交監視が目標である場合、古い代替手段は&lt;a href=&quot;qobject#installEventFilter&quot;&gt;QObject :: installEventFilter（）&lt;/a&gt;でしたが、これは組み込みの&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt;機能ではありませんでした&lt;a href=&quot;qquickitem&quot;&gt;。QQuickItem&lt;/a&gt;サブクラスなどのC ++コードが必要です。&lt;a href=&quot;qml-qtquick-pointhandler&quot;&gt;PointHandler&lt;/a&gt;は、&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;での通常のイベント配信の過程でポインターイベントのみが配信されるため、それよりも効率的です。一方、イベントフィルターはすべてのタイプのすべてのQEventsをフィルターする必要があるため、イベント配信のボトルネックになる可能性があります。</target>
        </trans-unit>
        <trans-unit id="b6f54b2f4fa96edac6ea810d92d44a2ecacd96aa" translate="yes" xml:space="preserve">
          <source>If your item is displayed in several areas then visualRect should return the primary area that contains index and not the complete area that index might encompasses, touch or cause drawing.</source>
          <target state="translated">アイテムが複数の領域に表示されている場合、visualRect はインデックスを含む主要な領域を返し、インデックスが包含したり、タッチしたり、描画の原因となる可能性のある領域全体ではなく、インデックスを含む主要な領域を返すべきです。</target>
        </trans-unit>
        <trans-unit id="72c337b2451ed3b8885c5abc8d5400ec57e41dc3" translate="yes" xml:space="preserve">
          <source>If your model is sortable, i.e, if it reimplements the &lt;a href=&quot;qabstractitemmodel#sort&quot;&gt;QAbstractItemModel::sort&lt;/a&gt;() function, both &lt;a href=&quot;qtableview&quot;&gt;QTableView&lt;/a&gt; and &lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt; provide an API that allows you to sort your model data programmatically. In addition, you can enable interactive sorting (i.e. allowing the users to sort the data by clicking the view's headers), by connecting the &lt;a href=&quot;qheaderview#sortIndicatorChanged&quot;&gt;QHeaderView::sortIndicatorChanged&lt;/a&gt;() signal to the &lt;a href=&quot;qtableview#sortByColumn&quot;&gt;QTableView::sortByColumn&lt;/a&gt;() slot or the &lt;a href=&quot;qtreeview#sortByColumn&quot;&gt;QTreeView::sortByColumn&lt;/a&gt;() slot, respectively.</source>
          <target state="translated">モデルがソート可能な場合、つまり&lt;a href=&quot;qabstractitemmodel#sort&quot;&gt;QAbstractItemModel :: sort&lt;/a&gt;（）関数を再実装する場合、&lt;a href=&quot;qtableview&quot;&gt;QTableView&lt;/a&gt;と&lt;a href=&quot;qtreeview&quot;&gt;QTreeViewの&lt;/a&gt;両方が、モデルデータをプログラムでソートできるAPIを提供します。さらに、&lt;a href=&quot;qheaderview#sortIndicatorChanged&quot;&gt;QHeaderView :: sortIndicatorChanged&lt;/a&gt;（）シグナルを&lt;a href=&quot;qtableview#sortByColumn&quot;&gt;QTableView :: sortByColumn&lt;/a&gt;（）スロットまたは&lt;a href=&quot;qtreeview#sortByColumn&quot;&gt;QTreeView :: sortByColumn&lt;/a&gt;（に接続することにより、ユーザーがビューのヘッダーをクリックしてデータをソートできるようにする）インタラクティブなソートを有効にすることができます。）それぞれスロット。</target>
        </trans-unit>
        <trans-unit id="6f98e8b5d221b3e2e8a7a394a8d830a40068ddc9" translate="yes" xml:space="preserve">
          <source>If your model is used within QML and requires roles other than the default ones provided by the &lt;a href=&quot;qabstractitemmodel#roleNames&quot;&gt;roleNames&lt;/a&gt;() function, you must override it.</source>
          <target state="translated">モデルがQML内で使用され、&lt;a href=&quot;qabstractitemmodel#roleNames&quot;&gt;roleNames&lt;/a&gt;（）関数によって提供されるデフォルト以外のロールが必要な場合は、オーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="c32e9f4943a6c23b62d891ccf355dae1b1293bb3" translate="yes" xml:space="preserve">
          <source>If your project has custom CMake build configurations, it may be necessary to set a mapping from your custom configuration to either the debug or release Qt configuration.</source>
          <target state="translated">プロジェクトにカスタム CMake ビルド設定がある場合、カスタム設定からデバッグまたはリリースの Qt 設定へのマッピングを設定する必要があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="a412b7fbd30159b9499635e4236b0aa30262e5ff" translate="yes" xml:space="preserve">
          <source>If your project is a</source>
          <target state="translated">あなたのプロジェクトが</target>
        </trans-unit>
        <trans-unit id="45ce7ce9273e622183118d4a8028a97f4b77a7d5" translate="yes" xml:space="preserve">
          <source>If your reimplementation of &lt;a href=&quot;qabstractitemmodel#fetchMore&quot;&gt;fetchMore()&lt;/a&gt; adds rows to the model, you need to call &lt;a href=&quot;qabstractitemmodel#beginInsertRows&quot;&gt;beginInsertRows()&lt;/a&gt; and &lt;a href=&quot;qabstractitemmodel#endInsertRows&quot;&gt;endInsertRows()&lt;/a&gt;. Also, both &lt;a href=&quot;qabstractitemmodel#canFetchMore&quot;&gt;canFetchMore()&lt;/a&gt; and &lt;a href=&quot;qabstractitemmodel#fetchMore&quot;&gt;fetchMore()&lt;/a&gt; must be reimplemented as their default implementation returns false and does nothing.</source>
          <target state="translated">&lt;a href=&quot;qabstractitemmodel#fetchMore&quot;&gt;fetchMore（）を&lt;/a&gt;再実装してモデルに行を追加する場合は、&lt;a href=&quot;qabstractitemmodel#beginInsertRows&quot;&gt;beginInsertRows（）&lt;/a&gt;および&lt;a href=&quot;qabstractitemmodel#endInsertRows&quot;&gt;endInsertRows（）&lt;/a&gt;を呼び出す必要があります。また、&lt;a href=&quot;qabstractitemmodel#canFetchMore&quot;&gt;canFetchMore（）&lt;/a&gt;と&lt;a href=&quot;qabstractitemmodel#fetchMore&quot;&gt;fetchMore（）&lt;/a&gt;はどちらも、デフォルトの実装がfalseを返し、何もしないため、再実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="6058b6b4398293fb98ebb9b0df37b61e7de26d54" translate="yes" xml:space="preserve">
          <source>If your test case needs QML imports, then you can add them as &lt;code&gt;-import&lt;/code&gt; options to the test program command-line.</source>
          <target state="translated">テストケースでQMLインポートが必要な場合は、それらを &lt;code&gt;-import&lt;/code&gt; オプションとしてテストプログラムのコマンドラインに追加できます。</target>
        </trans-unit>
        <trans-unit id="47af96af8e00c193855c890bc0707a860e54d143" translate="yes" xml:space="preserve">
          <source>If your widget only contains child widgets, you probably do not need to implement any event handlers. If you want to detect a mouse click in a child widget call the child's &lt;a href=&quot;qwidget#underMouse&quot;&gt;underMouse&lt;/a&gt;() function inside the widget's &lt;a href=&quot;qwidget#mousePressEvent&quot;&gt;mousePressEvent&lt;/a&gt;().</source>
          <target state="translated">ウィジェットに子ウィジェットのみが含まれている場合、おそらくイベントハンドラーを実装する必要はありません。子ウィジェットでのマウスクリックを検出する場合は、ウィジェットの&lt;a href=&quot;qwidget#mousePressEvent&quot;&gt;mousePressEvent&lt;/a&gt;（）内で子の&lt;a href=&quot;qwidget#underMouse&quot;&gt;underMouse&lt;/a&gt;（）関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="efb98d3c8757c13c00568dad7341a60498040025" translate="yes" xml:space="preserve">
          <source>If, at a later time, the replica's node gets notified that the requested source is available from a connected node, it will at that point request the source and start the initialization process.</source>
          <target state="translated">後日、レプリカのノードが接続されたノードから要求されたソースが利用可能であることを通知された場合、レプリカのノードはその時点でソースを要求し、初期化処理を開始します。</target>
        </trans-unit>
        <trans-unit id="fe7b1ce59b4e0aa5b6b2c140336559a9b5893b11" translate="yes" xml:space="preserve">
          <source>If, for example, the OpenGL polygon mode is changed by the user inside a beginNativePaint()/&lt;a href=&quot;qpainter#endNativePainting&quot;&gt;endNativePainting&lt;/a&gt;() block, it will not be reset to the default state by &lt;a href=&quot;qpainter#endNativePainting&quot;&gt;endNativePainting&lt;/a&gt;(). Here is an example that shows intermixing of painter commands and raw OpenGL commands:</source>
          <target state="translated">例えば、OpenGLのポリゴンモードbeginNativePaint（）/内部ユーザによって変更される、場合&lt;a href=&quot;qpainter#endNativePainting&quot;&gt;endNativePainting&lt;/a&gt;（）ブロック、それによってデフォルト状態にリセットされないであろう&lt;a href=&quot;qpainter#endNativePainting&quot;&gt;endNativePainting&lt;/a&gt;（）。ペインターコマンドと生のOpenGLコマンドの混在を示す例を次に示します。</target>
        </trans-unit>
        <trans-unit id="f4b93ae87fadd21a13fe26a4b1b7229793967d06" translate="yes" xml:space="preserve">
          <source>If, for instance, you want to connect to a server that uses a self-signed certificate, consider the following snippet:</source>
          <target state="translated">例えば、自己署名証明書を使用しているサーバに接続したい場合、次のようなスニペットを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="a21a10cc6baa8fc7709ded12402fb06e21bc2e8d" translate="yes" xml:space="preserve">
          <source>If, within the document's directory, there is a &lt;code&gt;dummydata&lt;/code&gt; directory which contains a &lt;code&gt;lottoNumbers.qml&lt;/code&gt; file like this:</source>
          <target state="translated">ドキュメントのディレクトリ内に、 &lt;code&gt;lottoNumbers.qml&lt;/code&gt; ようなlottoNumbers.qmlファイルを含む &lt;code&gt;dummydata&lt;/code&gt; ディレクトリがある場合：</target>
        </trans-unit>
        <trans-unit id="deb76489f9b5200ca7f43df75295b472c27ddb2f" translate="yes" xml:space="preserve">
          <source>Ignore any Unicode byte-order mark and don't generate any.</source>
          <target state="translated">Unicode のバイト順マークは無視して、何も生成しません。</target>
        </trans-unit>
        <trans-unit id="8b89e0c0fc34677d43ff0d0ac2650038d7cee304" translate="yes" xml:space="preserve">
          <source>Ignore any implicit or explicit &lt;code&gt;-nograb&lt;/code&gt;. &lt;code&gt;-dograb&lt;/code&gt; wins over &lt;code&gt;-nograb&lt;/code&gt; even when &lt;code&gt;-nograb&lt;/code&gt; is last on the command line.</source>
          <target state="translated">暗黙的または明示的な &lt;code&gt;-nograb&lt;/code&gt; を無視します。 &lt;code&gt;-dograb&lt;/code&gt; がコマンドラインで最後に指定されている場合でも、 &lt;code&gt;-nograb&lt;/code&gt; は &lt;code&gt;-nograb&lt;/code&gt; より優先されます。</target>
        </trans-unit>
        <trans-unit id="a2ff2565c03de3852a8466f2d4f2afb8bf1ceb3d" translate="yes" xml:space="preserve">
          <source>Ignore the action (do nothing with the data).</source>
          <target state="translated">アクションを無視する(データには何もしない)。</target>
        </trans-unit>
        <trans-unit id="f8d389bf9f10dd7ee0995def4b935f1728b59794" translate="yes" xml:space="preserve">
          <source>Ignore the layout item rect from the style when laying out this widget with &lt;a href=&quot;qlayout&quot;&gt;QLayout&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qlayout&quot;&gt;QLayoutを使用&lt;/a&gt;してこのウィジェットをレイアウトする場合、スタイルから正しいレイアウトアイテムを無視します。</target>
        </trans-unit>
        <trans-unit id="d6dc167c9331f258371c27b269795d215b36d8f6" translate="yes" xml:space="preserve">
          <source>Ignores a navigation request.</source>
          <target state="translated">ナビゲーションのリクエストを無視します。</target>
        </trans-unit>
        <trans-unit id="3b5991af665588b7019909a6819ff7f96fea5b14" translate="yes" xml:space="preserve">
          <source>Ignores messages created by &lt;a href=&quot;#qDebug&quot;&gt;qDebug&lt;/a&gt;(), &lt;a href=&quot;#qInfo&quot;&gt;qInfo&lt;/a&gt;() or &lt;a href=&quot;#qWarning&quot;&gt;qWarning&lt;/a&gt;(). If the</source>
          <target state="translated">&lt;a href=&quot;#qDebug&quot;&gt;qDebug&lt;/a&gt;（）、&lt;a href=&quot;#qInfo&quot;&gt;qInfo&lt;/a&gt;（）、または&lt;a href=&quot;#qWarning&quot;&gt;qWarning&lt;/a&gt;（）によって作成されたメッセージを無視します。もし</target>
        </trans-unit>
        <trans-unit id="9a4ab3fd8e773e1c5a4c036f3e06e781ad87d7e7" translate="yes" xml:space="preserve">
          <source>Ignores messages created by &lt;a href=&quot;#qDebug&quot;&gt;qDebug&lt;/a&gt;(), &lt;a href=&quot;#qInfo&quot;&gt;qInfo&lt;/a&gt;() or &lt;a href=&quot;#qWarning&quot;&gt;qWarning&lt;/a&gt;(). If the message matching</source>
          <target state="translated">&lt;a href=&quot;#qDebug&quot;&gt;qDebug&lt;/a&gt;（）、&lt;a href=&quot;#qInfo&quot;&gt;qInfo&lt;/a&gt;（）、または&lt;a href=&quot;#qWarning&quot;&gt;qWarning&lt;/a&gt;（）によって作成されたメッセージを無視します。メッセージが一致した場合</target>
        </trans-unit>
        <trans-unit id="c7b42c5e8793c4e11f5b0d98e83629eed9b662e4" translate="yes" xml:space="preserve">
          <source>Illegal</source>
          <target state="translated">Illegal</target>
        </trans-unit>
        <trans-unit id="1ae48c552e312029e7dd471fc7df5778829c9500" translate="yes" xml:space="preserve">
          <source>Illustrator</source>
          <target state="translated">Illustrator</target>
        </trans-unit>
        <trans-unit id="50e19fda0d5b4b74a4a1a1d584e56578693a4ea4" translate="yes" xml:space="preserve">
          <source>Image</source>
          <target state="translated">Image</target>
        </trans-unit>
        <trans-unit id="694a7d34908dab879c97aaa1a20efc15273c8f9a" translate="yes" xml:space="preserve">
          <source>Image (QML type)</source>
          <target state="translated">画像(QML型</target>
        </trans-unit>
        <trans-unit id="79437dd7e3b6791d059634682f61cbf70ef60de0" translate="yes" xml:space="preserve">
          <source>Image Caching</source>
          <target state="translated">イメージキャッシング</target>
        </trans-unit>
        <trans-unit id="435ed9e69df99cb4a2651c265421f92dd8dbdb74" translate="yes" xml:space="preserve">
          <source>Image Composition Example</source>
          <target state="translated">画像合成例</target>
        </trans-unit>
        <trans-unit id="9c804e7e28cc6e5f7931d50ba6b994cd4bb2c59f" translate="yes" xml:space="preserve">
          <source>Image Elements</source>
          <target state="translated">イメージ要素</target>
        </trans-unit>
        <trans-unit id="c8f6654a5156a1080fb81d03686a08b3810bb836" translate="yes" xml:space="preserve">
          <source>Image Formats</source>
          <target state="translated">イメージフォーマット</target>
        </trans-unit>
        <trans-unit id="020c26033d73e6845fa697166de8d81a0273c034" translate="yes" xml:space="preserve">
          <source>Image Information</source>
          <target state="translated">画像情報</target>
        </trans-unit>
        <trans-unit id="095667f1fcd46b132e81c4336dd2b0f23e1bc404" translate="yes" xml:space="preserve">
          <source>Image Loading</source>
          <target state="translated">画像の読み込み</target>
        </trans-unit>
        <trans-unit id="887e15fde467a33abf575d3973eec9f31b0f6acb" translate="yes" xml:space="preserve">
          <source>Image QML Type</source>
          <target state="translated">画像 QML 型</target>
        </trans-unit>
        <trans-unit id="3e3c60bcc53ebc1195757e000b7e24211c1032cb" translate="yes" xml:space="preserve">
          <source>Image Transformations</source>
          <target state="translated">画像変換</target>
        </trans-unit>
        <trans-unit id="c93acc3a97633745105d6cc43cef0f3052324c7f" translate="yes" xml:space="preserve">
          <source>Image and video attributes</source>
          <target state="translated">画像と動画の属性</target>
        </trans-unit>
        <trans-unit id="25ec2cd54333ae10dd0843f128a4c45de34a9e42" translate="yes" xml:space="preserve">
          <source>Image brightness adjustment.</source>
          <target state="translated">画像の明るさを調整します。</target>
        </trans-unit>
        <trans-unit id="95492d385542f3f54bea997ef816e6a4e12be9bd" translate="yes" xml:space="preserve">
          <source>Image brightness adjustment. Valid brightness adjustment values range between -1.0 and 1.0, with a default of 0.</source>
          <target state="translated">画像の明るさ調整。有効な明るさ調整値の範囲は-1.0~1.0で、デフォルトは0です。</target>
        </trans-unit>
        <trans-unit id="91707570630a91e9bff1ec54c38a0d9ec324c4f3" translate="yes" xml:space="preserve">
          <source>Image brightness.</source>
          <target state="translated">画像の明るさ。</target>
        </trans-unit>
        <trans-unit id="6ddeef6f06f0a2b4b7ad6dfce532c37fc3e01e43" translate="yes" xml:space="preserve">
          <source>Image can handle any image format supported by Qt, loaded from any URL scheme supported by Qt.</source>
          <target state="translated">ImageはQtでサポートされている任意の画像フォーマットを扱うことができ、Qtでサポートされている任意のURLスキームから読み込まれます。</target>
        </trans-unit>
        <trans-unit id="a4208d4bbe29c2555b678741b5e94f5d75dc6684" translate="yes" xml:space="preserve">
          <source>Image contrast adjustment.</source>
          <target state="translated">画像のコントラストを調整します。</target>
        </trans-unit>
        <trans-unit id="73ac3b48d87bc88c249b538d2fac1bc8580d9661" translate="yes" xml:space="preserve">
          <source>Image contrast adjustment. Valid contrast adjustment values range between -1.0 and 1.0, with a default of 0.</source>
          <target state="translated">画像のコントラスト調整。有効なコントラスト調整値の範囲は-1.0~1.0で、デフォルトは0です。</target>
        </trans-unit>
        <trans-unit id="ac31afc4738a10181084968969c4aef9c2fd6306" translate="yes" xml:space="preserve">
          <source>Image contrast.</source>
          <target state="translated">コントラスト画像。</target>
        </trans-unit>
        <trans-unit id="69570f5a7752afa94ff2d8813e24aef45221acbd" translate="yes" xml:space="preserve">
          <source>Image elements with the &quot;asynchronous&quot; property set to &lt;code&gt;true&lt;/code&gt; will load images in a low-priority worker thread.</source>
          <target state="translated">「非同期」プロパティが &lt;code&gt;true&lt;/code&gt; に設定された画像要素は、優先度の低いワーカースレッドで画像を読み込みます。</target>
        </trans-unit>
        <trans-unit id="9877178fec8f6b4da1432c696f45a4f0e551354a" translate="yes" xml:space="preserve">
          <source>Image encoder settings are changed, including resolution.</source>
          <target state="translated">解像度を含む画像エンコーダの設定を変更します。</target>
        </trans-unit>
        <trans-unit id="f3186d67ab09b9326a4f6f94f91614f075fb8d75" translate="yes" xml:space="preserve">
          <source>Image file for the &lt;code&gt;iconic&lt;/code&gt; tile template icon. Default provided by the mkspec.</source>
          <target state="translated">&lt;code&gt;iconic&lt;/code&gt; タイルテンプレートアイコンの画像ファイル。mkspecによって提供されるデフォルト。</target>
        </trans-unit>
        <trans-unit id="275322b6c0dd9dbb459aac968ddec77ea63c6f97" translate="yes" xml:space="preserve">
          <source>Image file for the small &lt;code&gt;iconic&lt;/code&gt; tile template logo. Default provided by the mkspec.</source>
          <target state="translated">小さな &lt;code&gt;iconic&lt;/code&gt; タイルテンプレートロゴの画像ファイル。mkspecによって提供されるデフォルト。</target>
        </trans-unit>
        <trans-unit id="8b1b3e79d8e6deef1a97d6db9e0d8cf8a4856822" translate="yes" xml:space="preserve">
          <source>Image filter applied. Since 5.5</source>
          <target state="translated">画像フィルタを適用しました。5.5以降</target>
        </trans-unit>
        <trans-unit id="9bfe13d3bb7d52f768d03527bc5e63b414117605" translate="yes" xml:space="preserve">
          <source>Image formats that support animation return true for this value in &lt;a href=&quot;qimageiohandler#supportsOption&quot;&gt;supportsOption&lt;/a&gt;(); otherwise, false is returned.</source>
          <target state="translated">アニメーションをサポートする画像フォーマットは、&lt;a href=&quot;qimageiohandler#supportsOption&quot;&gt;supportsOption&lt;/a&gt;（）でこの値に対してtrueを返します。それ以外の場合は、falseが返されます。</target>
        </trans-unit>
        <trans-unit id="e962ce20336f0d46a9be4c9caaed139b713a25df" translate="yes" xml:space="preserve">
          <source>Image formats that support different saving variants should return a list of supported variant names (&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;&amp;gt;) in this option.</source>
          <target state="translated">さまざまな保存バリアントをサポートする画像形式は、このオプションでサポートされているバリアント名のリスト（&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;gt;）を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="6e8f891038fc55e95d7ba0adc5e0d8152f2b87dd" translate="yes" xml:space="preserve">
          <source>Image plugins are queried first, based on either the optional format string, or the file name suffix (if the source device is a file). No content detection is done at this stage. &lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt; will choose the first plugin that supports reading for this format.</source>
          <target state="translated">オプションのフォーマット文字列またはファイル名のサフィックス（ソースデバイスがファイルの場合）に基づいて、画像プラグインが最初に照会されます。この段階ではコンテンツの検出は行われません。&lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt;は、このフォーマットの読み取りをサポートする最初のプラグインを選択します。</target>
        </trans-unit>
        <trans-unit id="237651054978b2d4b607041a12a5a4d8fcf34177" translate="yes" xml:space="preserve">
          <source>Image properties</source>
          <target state="translated">画像のプロパティ</target>
        </trans-unit>
        <trans-unit id="fb6c2609830118b9111385555fc0bbdd0e3256c4" translate="yes" xml:space="preserve">
          <source>Image providers enable support for pixmap and threaded image requests. See the &lt;a href=&quot;qquickimageprovider&quot;&gt;QQuickImageProvider&lt;/a&gt; documentation for details on implementing and using image providers.</source>
          <target state="translated">画像プロバイダーは、pixmapおよびスレッド化された画像リクエストのサポートを有効にします。画像プロバイダーの実装と使用の詳細については、&lt;a href=&quot;qquickimageprovider&quot;&gt;QQuickImageProviderの&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="29d0591bf7c64915c032bdc01a04093207a8c33e" translate="yes" xml:space="preserve">
          <source>Image providers must be registered with the QML engine. The only information the QML engine knows about image providers is the type of image data they provide. To use an image provider to acquire image data, you must cast the &lt;a href=&quot;qqmlimageproviderbase&quot;&gt;QQmlImageProviderBase&lt;/a&gt; pointer to a &lt;a href=&quot;qquickimageprovider&quot;&gt;QQuickImageProvider&lt;/a&gt; pointer.</source>
          <target state="translated">画像プロバイダーはQMLエンジンに登録する必要があります。QMLエンジンが画像プロバイダーについて知っている唯一の情報は、提供する画像データのタイプです。取得された画像データに画像プロバイダを使用するには、キャストする必要があり&lt;a href=&quot;qqmlimageproviderbase&quot;&gt;QQmlImageProviderBaseの&lt;/a&gt;にポインタを&lt;a href=&quot;qquickimageprovider&quot;&gt;QQuickImageProviderの&lt;/a&gt;ポインタ。</target>
        </trans-unit>
        <trans-unit id="e6f8d7e518013a08d011ed13bfea81eaebdb6afc" translate="yes" xml:space="preserve">
          <source>Image providers that support &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; or Texture loading automatically include support for asychronous loading of images. To enable asynchronous loading for an image source, set the &lt;code&gt;asynchronous&lt;/code&gt; property to &lt;code&gt;true&lt;/code&gt; for the relevant &lt;a href=&quot;qqmlimageproviderbase#ImageType-enum&quot;&gt;Image&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-borderimage&quot;&gt;BorderImage&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-animatedimage&quot;&gt;AnimatedImage&lt;/a&gt; object. When this is enabled, the image request to the provider is run in a low priority thread, allowing image loading to be executed in the background, and reducing the performance impact on the user interface.</source>
          <target state="translated">&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;またはTextureの読み込みをサポートする画像プロバイダーは、画像の非同期読み込みのサポートを自動的に含みます。画像ソースの非同期読み込みを有効にするには、関連する&lt;a href=&quot;qqmlimageproviderbase#ImageType-enum&quot;&gt;Image&lt;/a&gt;オブジェクト、&lt;a href=&quot;qml-qtquick-borderimage&quot;&gt;BorderImage&lt;/a&gt;オブジェクト、または&lt;a href=&quot;qml-qtquick-animatedimage&quot;&gt;AnimatedImage&lt;/a&gt;オブジェクトの &lt;code&gt;asynchronous&lt;/code&gt; プロパティを &lt;code&gt;true&lt;/code&gt; に設定します。これが有効になっている場合、プロバイダーへの画像要求は優先度の低いスレッドで実行され、画像の読み込みをバックグラウンドで実行できるようになり、ユーザーインターフェイスのパフォーマンスへの影響が軽減されます。</target>
        </trans-unit>
        <trans-unit id="3af7ea35d9fde4a078ea166b03f499ec47abe29b" translate="yes" xml:space="preserve">
          <source>Image saturation adjustment.</source>
          <target state="translated">画像の彩度を調整します。</target>
        </trans-unit>
        <trans-unit id="3e65e85a090fb6e7477d5a3b1e7a2855a1326e06" translate="yes" xml:space="preserve">
          <source>Image saturation adjustment. Valid saturation adjustment values range between -1.0 and 1.0, the default is 0.</source>
          <target state="translated">画像の彩度調整。有効な彩度調整値の範囲は-1.0~1.0で、デフォルトは0です。</target>
        </trans-unit>
        <trans-unit id="bca26e88da3a7eee962836f0c298ce3b8db42011" translate="yes" xml:space="preserve">
          <source>Image saturation.</source>
          <target state="translated">画像の彩度。</target>
        </trans-unit>
        <trans-unit id="928b6c38c5c6ad5bc05175c8228da1b877e6d347" translate="yes" xml:space="preserve">
          <source>Image.Error - an error occurred while loading the image</source>
          <target state="translated">Image.Error-画像の読み込み中にエラーが発生しました。</target>
        </trans-unit>
        <trans-unit id="fdd798ed25fabe589c67ede96b0e7a5218283256" translate="yes" xml:space="preserve">
          <source>Image.Loading - the image is currently being loaded</source>
          <target state="translated">Image.Loading-現在画像が読み込まれています。</target>
        </trans-unit>
        <trans-unit id="3ec8d7682cb58d6c6e548c37d5ae72911a9f4210" translate="yes" xml:space="preserve">
          <source>Image.Null - no image has been set</source>
          <target state="translated">Image.Null-画像が設定されていません。</target>
        </trans-unit>
        <trans-unit id="dcd8cd6d001a04bf784a8b8dc1c97305a40b6b39" translate="yes" xml:space="preserve">
          <source>Image.Pad - the image is not transformed</source>
          <target state="translated">Image.Pad-画像が変換されません。</target>
        </trans-unit>
        <trans-unit id="996dcd45b334e04253024ca0f51f128ebb8843f1" translate="yes" xml:space="preserve">
          <source>Image.PreserveAspectCrop - the image is scaled uniformly to fill, cropping if necessary</source>
          <target state="translated">Image.PreserveAspectCrop-必要に応じて画像をトリミングし、塗りつぶしに合わせて均一にスケーリングされます。</target>
        </trans-unit>
        <trans-unit id="456737d85a7affa731fda32cfd5344db5ea6b05c" translate="yes" xml:space="preserve">
          <source>Image.PreserveAspectFit - the image is scaled uniformly to fit without cropping</source>
          <target state="translated">Image.PreserveAspectFit-画像をトリミングせずに均一にスケーリングします.</target>
        </trans-unit>
        <trans-unit id="d5a9b4d7ee83a91af7204802450523ae3c12e4f6" translate="yes" xml:space="preserve">
          <source>Image.Ready - the image has been loaded</source>
          <target state="translated">Image.Ready-画像が読み込まれました。</target>
        </trans-unit>
        <trans-unit id="3aebc538730d04d2a802dd11d430b80029a039ef" translate="yes" xml:space="preserve">
          <source>Image.Stretch - the image is scaled to fit</source>
          <target state="translated">Image.Stretch-画像がフィットするように拡大縮小されます。</target>
        </trans-unit>
        <trans-unit id="5866c887415282ccbe6ecdb3c5e22dad6029cf00" translate="yes" xml:space="preserve">
          <source>Image.Tile - the image is duplicated horizontally and vertically</source>
          <target state="translated">Image.Tile-画像は水平方向と垂直方向に複製されます。</target>
        </trans-unit>
        <trans-unit id="6f9e2edb98f895ab18ccc4111c4efe4e41867eda" translate="yes" xml:space="preserve">
          <source>Image.TileHorizontally - the image is stretched vertically and tiled horizontally</source>
          <target state="translated">Image.TileHorizontally-画像が垂直方向に引き伸ばされ、水平方向にタイル化されます。</target>
        </trans-unit>
        <trans-unit id="391b47aa3cd271a9daddeda34eaf2b6aa3d626c1" translate="yes" xml:space="preserve">
          <source>Image.TileVertically - the image is stretched horizontally and tiled vertically</source>
          <target state="translated">Image.TileVertically-画像が水平方向に引き伸ばされ、垂直方向にタイル状になります。</target>
        </trans-unit>
        <trans-unit id="d6c38eebab4996faca39a61387f11734014ed745" translate="yes" xml:space="preserve">
          <source>Image.asynchronous</source>
          <target state="translated">Image.asynchronous</target>
        </trans-unit>
        <trans-unit id="ee13e88cc2d8429bd0e84569058745f8aaeb1a93" translate="yes" xml:space="preserve">
          <source>Image.autoTransform</source>
          <target state="translated">Image.autoTransform</target>
        </trans-unit>
        <trans-unit id="b0377717d7941893302faaf81814ed98ea2d7622" translate="yes" xml:space="preserve">
          <source>Image.cache</source>
          <target state="translated">Image.cache</target>
        </trans-unit>
        <trans-unit id="ab1255ca30a91f3cd25ab0e57ec660b4f5ecfeb4" translate="yes" xml:space="preserve">
          <source>Image.fillMode</source>
          <target state="translated">Image.fillMode</target>
        </trans-unit>
        <trans-unit id="ad573f968adee6878ec85a4abdaedccb5d6fa928" translate="yes" xml:space="preserve">
          <source>Image.horizontalAlignment</source>
          <target state="translated">Image.horizontalAlignment</target>
        </trans-unit>
        <trans-unit id="1facf1f35ca5349ae3b9ea70dd19c2ea04ac9b44" translate="yes" xml:space="preserve">
          <source>Image.mipmap</source>
          <target state="translated">Image.mipmap</target>
        </trans-unit>
        <trans-unit id="0e8cc6db33bc3c4ab271c7b726e57fb977391405" translate="yes" xml:space="preserve">
          <source>Image.mirror</source>
          <target state="translated">Image.mirror</target>
        </trans-unit>
        <trans-unit id="3b25ae29fc4d55eec7943b7ec5a498c62dcd74ff" translate="yes" xml:space="preserve">
          <source>Image.paintedWidth</source>
          <target state="translated">Image.paintedWidth</target>
        </trans-unit>
        <trans-unit id="de87aa3185b24ad1493103a100803dbb270c22b3" translate="yes" xml:space="preserve">
          <source>Image.progress</source>
          <target state="translated">Image.progress</target>
        </trans-unit>
        <trans-unit id="688db74617785d8792fd6dac0163d86491e68bf3" translate="yes" xml:space="preserve">
          <source>Image.smooth</source>
          <target state="translated">Image.smooth</target>
        </trans-unit>
        <trans-unit id="74321de2400f60219e4a107097684edb50af5a62" translate="yes" xml:space="preserve">
          <source>Image.source</source>
          <target state="translated">Image.source</target>
        </trans-unit>
        <trans-unit id="22ec86da187637e16793239f1f24227b28641cfd" translate="yes" xml:space="preserve">
          <source>Image.sourceSize</source>
          <target state="translated">Image.sourceSize</target>
        </trans-unit>
        <trans-unit id="3f0569c61b23bcc39889a1c5b87594abd2006728" translate="yes" xml:space="preserve">
          <source>Image.status</source>
          <target state="translated">Image.status</target>
        </trans-unit>
        <trans-unit id="c85483e061fb2550c5c3fa4c24fe316d19f82a74" translate="yes" xml:space="preserve">
          <source>ImageModel</source>
          <target state="translated">ImageModel</target>
        </trans-unit>
        <trans-unit id="c4bf499ce91167a244a40e33b3c5af2789d5fb0e" translate="yes" xml:space="preserve">
          <source>ImageModel (QML type)</source>
          <target state="translated">イメージモデル(QML 型</target>
        </trans-unit>
        <trans-unit id="59950b3e811ed99a9c914e2377bb67082275677f" translate="yes" xml:space="preserve">
          <source>ImageModel QML Type</source>
          <target state="translated">ImageModel QML 型</target>
        </trans-unit>
        <trans-unit id="aa559d902bbdfc074fc54e03683a47d9a68b0824" translate="yes" xml:space="preserve">
          <source>ImageModel.batchSize</source>
          <target state="translated">ImageModel.batchSize</target>
        </trans-unit>
        <trans-unit id="525461577fa14892f5e57d06e765998397832861" translate="yes" xml:space="preserve">
          <source>ImageModel.place</source>
          <target state="translated">ImageModel.place</target>
        </trans-unit>
        <trans-unit id="5019ba7443c773767aa6c273471e05caaea7efc1" translate="yes" xml:space="preserve">
          <source>ImageModel.totalCount</source>
          <target state="translated">ImageModel.totalCount</target>
        </trans-unit>
        <trans-unit id="c65cc34f2b07c05b2eed7123e24715503cca6a44" translate="yes" xml:space="preserve">
          <source>ImageParticle (QML type)</source>
          <target state="translated">画像粒子(QML型</target>
        </trans-unit>
        <trans-unit id="22edc8f820fa657012f9afa99e3a0b8cafda3b91" translate="yes" xml:space="preserve">
          <source>ImageParticle QML Type</source>
          <target state="translated">ImageParticle QML型</target>
        </trans-unit>
        <trans-unit id="2917331d3411d102098484d743240448fd34b97c" translate="yes" xml:space="preserve">
          <source>ImageParticle.alpha</source>
          <target state="translated">ImageParticle.alpha</target>
        </trans-unit>
        <trans-unit id="6cee5f1d50f09fc8f54ebd7a9367d1fd37b32cb1" translate="yes" xml:space="preserve">
          <source>ImageParticle.alphaVariation</source>
          <target state="translated">ImageParticle.alphaVariation</target>
        </trans-unit>
        <trans-unit id="a4e470c1f71bc70e2279d8b3b598887935f5683c" translate="yes" xml:space="preserve">
          <source>ImageParticle.autoRotation</source>
          <target state="translated">ImageParticle.autoRotation</target>
        </trans-unit>
        <trans-unit id="a94096d1c04919e35ed6abae4e9b770db2929035" translate="yes" xml:space="preserve">
          <source>ImageParticle.blueVariation</source>
          <target state="translated">ImageParticle.blueVariation</target>
        </trans-unit>
        <trans-unit id="99face9f1d2ee034dc7db9ff5d893245bc80bc8a" translate="yes" xml:space="preserve">
          <source>ImageParticle.color</source>
          <target state="translated">ImageParticle.color</target>
        </trans-unit>
        <trans-unit id="5ac102a43502def25e562873808fff18c7dce6f6" translate="yes" xml:space="preserve">
          <source>ImageParticle.colorTable</source>
          <target state="translated">ImageParticle.colorTable</target>
        </trans-unit>
        <trans-unit id="de229a30611ee4126745b75c2f4c677fb5b5847f" translate="yes" xml:space="preserve">
          <source>ImageParticle.colorVariation</source>
          <target state="translated">ImageParticle.colorVariation</target>
        </trans-unit>
        <trans-unit id="32a1d00b0c127f972c64016e56f284b4b6586bab" translate="yes" xml:space="preserve">
          <source>ImageParticle.entryEffect</source>
          <target state="translated">ImageParticle.entryEffect</target>
        </trans-unit>
        <trans-unit id="8ef54b955256c3e37fd5e3248ea107e1d234a749" translate="yes" xml:space="preserve">
          <source>ImageParticle.greenVariation</source>
          <target state="translated">ImageParticle.greenVariation</target>
        </trans-unit>
        <trans-unit id="660663b76e8f0edd070c8dc402599cba2603fa02" translate="yes" xml:space="preserve">
          <source>ImageParticle.opacityTable</source>
          <target state="translated">ImageParticle.opacityTable</target>
        </trans-unit>
        <trans-unit id="46db9a819d23ee76024933e7e57aa8ad2b527073" translate="yes" xml:space="preserve">
          <source>ImageParticle.redVariation</source>
          <target state="translated">ImageParticle.redVariation</target>
        </trans-unit>
        <trans-unit id="6633a6167fdf4a9062ef69bef27baf23a07249b3" translate="yes" xml:space="preserve">
          <source>ImageParticle.rotation</source>
          <target state="translated">ImageParticle.rotation</target>
        </trans-unit>
        <trans-unit id="668326488a064a3831192c97955baf88fd5cad18" translate="yes" xml:space="preserve">
          <source>ImageParticle.rotationVariation</source>
          <target state="translated">ImageParticle.rotationVariation</target>
        </trans-unit>
        <trans-unit id="13761192c94b70a0be32d6de5f07bb97c31d881d" translate="yes" xml:space="preserve">
          <source>ImageParticle.rotationVelocity</source>
          <target state="translated">ImageParticle.rotationVelocity</target>
        </trans-unit>
        <trans-unit id="26cf47b403b85871d3581bd5b23a297a0792e037" translate="yes" xml:space="preserve">
          <source>ImageParticle.rotationVelocityVariation</source>
          <target state="translated">ImageParticle.rotationVelocityVariation</target>
        </trans-unit>
        <trans-unit id="aa323ab2f7070ad7aaae17d04dacc88506528698" translate="yes" xml:space="preserve">
          <source>ImageParticle.sizeTable</source>
          <target state="translated">ImageParticle.sizeTable</target>
        </trans-unit>
        <trans-unit id="6352315790977a0a3e8476798ad5523a06670dfd" translate="yes" xml:space="preserve">
          <source>ImageParticle.source</source>
          <target state="translated">ImageParticle.source</target>
        </trans-unit>
        <trans-unit id="e53ab5f234349a98cd73f3443109ae3e9daf3710" translate="yes" xml:space="preserve">
          <source>ImageParticle.sprites</source>
          <target state="translated">ImageParticle.sprites</target>
        </trans-unit>
        <trans-unit id="33111124e4f659aafd87ca47db056e4060fd0cdf" translate="yes" xml:space="preserve">
          <source>ImageParticle.spritesInterpolate</source>
          <target state="translated">ImageParticle.spritesInterpolate</target>
        </trans-unit>
        <trans-unit id="95ef25e59a5efd4f664decc85ebb47b4ea273947" translate="yes" xml:space="preserve">
          <source>ImageParticle.status</source>
          <target state="translated">ImageParticle.status</target>
        </trans-unit>
        <trans-unit id="ce1f3bf01950470667d3b7925b9cfbdcf6f4b67d" translate="yes" xml:space="preserve">
          <source>ImageParticle.xVector</source>
          <target state="translated">ImageParticle.xVector</target>
        </trans-unit>
        <trans-unit id="ed72047b8155e46dc8f331b19b6568184e79c36a" translate="yes" xml:space="preserve">
          <source>ImageParticle.yVector</source>
          <target state="translated">ImageParticle.yVector</target>
        </trans-unit>
        <trans-unit id="acc969ec26a9fa09a95ee15e89ed5069dcd1f620" translate="yes" xml:space="preserve">
          <source>ImageParticles implictly share data on particles if multiple ImageParticles are painting the same logical particle group. This is broken down along the four capabilities listed above. So if one &lt;a href=&quot;qml-qtquick-particles-imageparticle&quot;&gt;ImageParticle&lt;/a&gt; defines data for rendering the particles in one of those capabilities, and the other does not, then both will draw the particles the same in that aspect automatically. This is primarily useful when there is some random variation on the particle which is supposed to stay with it when switching painters. If both ImageParticles define how they should appear for that aspect, they diverge and each appears as it is defined.</source>
          <target state="translated">複数のImageParticleが同じ論理パーティクルグループをペイントしている場合、ImageParticleは暗黙的にパーティクルのデータを共有します。これは、上記の4つの機能に沿って分類されます。したがって、一方の&lt;a href=&quot;qml-qtquick-particles-imageparticle&quot;&gt;ImageParticle&lt;/a&gt;がこれらの機能のいずれかでパーティクルをレンダリングするためのデータを定義し、もう一方が定義しない場合、両方がそのアスペクトで自動的に同じようにパーティクルを描画します。これは主に、ペインタを切り替えるときにパーティクルに留まるはずのランダムなバリエーションがある場合に役立ちます。両方のImageParticleがそのアスペクトに対してどのように表示されるかを定義する場合、それらは分岐し、それぞれが定義されたとおりに表示されます。</target>
        </trans-unit>
        <trans-unit id="09e871c98fef3b901a775def173e4126aaf73b42" translate="yes" xml:space="preserve">
          <source>Images</source>
          <target state="translated">Images</target>
        </trans-unit>
        <trans-unit id="9bba00ba7cfbf846512e4b84315d6e44095836f5" translate="yes" xml:space="preserve">
          <source>Images are a vital part of any user interface. Unfortunately, they are also a big source of problems due to the time it takes to load them, the amount of memory they consume, and the way in which they are used.</source>
          <target state="translated">画像はどんなユーザーインターフェースにも欠かせないものです。残念ながら、読み込みにかかる時間、消費するメモリの量、使用方法などが問題の大きな原因となっています。</target>
        </trans-unit>
        <trans-unit id="a734ad37e2d1f31fec162317151529307cd631ea" translate="yes" xml:space="preserve">
          <source>Images are cached and shared internally, so if several Image items have the same &lt;a href=&quot;qml-qtquick-image#source-prop&quot;&gt;source&lt;/a&gt;, only one copy of the image will be loaded.</source>
          <target state="translated">画像はキャッシュされ、内部で共有されるため、複数の画像アイテムが同じ&lt;a href=&quot;qml-qtquick-image#source-prop&quot;&gt;ソースを&lt;/a&gt;持っている場合、画像の1つのコピーのみが読み込まれます。</target>
        </trans-unit>
        <trans-unit id="1c5c0421bf41e3a0987ed37803b634b987e386ef" translate="yes" xml:space="preserve">
          <source>Images are often quite large, and so it is wise to ensure that loading an image doesn't block the UI thread. Set the &quot;asynchronous&quot; property of the QML Image element to &lt;code&gt;true&lt;/code&gt; to enable asynchronous loading of images from the local file system (remote images are always loaded asynchronously) where this would not result in a negative impact upon the aesthetics of the user interface.</source>
          <target state="translated">画像は非常に大きいことが多いため、画像の読み込みによってUIスレッドがブロックされないようにすることをお勧めします。QML Image要素の &quot;asynchronous&quot;プロパティを &lt;code&gt;true&lt;/code&gt; に設定して、ローカルファイルシステムからの画像の非同期読み込みを有効にします（リモート画像は常に非同期で読み込まれます）。これにより、ユーザーインターフェイスの美観に悪影響を与えません。</target>
        </trans-unit>
        <trans-unit id="f09ebb2d58c3eafe46a2586752de4caa7ca959c5" translate="yes" xml:space="preserve">
          <source>Images can be supplied in any format for which Qt has an image reader, so SVG drawings can be included alongside PNG, TIFF and other bitmap formats.</source>
          <target state="translated">画像はQtが画像リーダーを持っている任意のフォーマットで提供できるので、PNGやTIFF、その他のビットマップフォーマットと一緒にSVG描画を含めることができます。</target>
        </trans-unit>
        <trans-unit id="bd391d8013e9e2002aff23680c469ff1379c7172" translate="yes" xml:space="preserve">
          <source>Images in &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; are represented by text fragments that reference external images via the resource mechanism. Images are created using the cursor interface, and can be modified later by changing the character format of the image's text fragment:</source>
          <target state="translated">画像&lt;a href=&quot;qtextdocument&quot;&gt;QTextDocumentは&lt;/a&gt;リソース機構を介して外部の画像を参照するテキスト断片によって表されます。画像はカーソルインターフェイスを使用して作成され、後で画像のテキストフラグメントの文字形式を変更することで変更できます。</target>
        </trans-unit>
        <trans-unit id="1403bc6b73053c035d7035ed1d07b43737448bbc" translate="yes" xml:space="preserve">
          <source>Images returned by a &lt;a href=&quot;qquickimageprovider&quot;&gt;QQuickImageProvider&lt;/a&gt; are automatically cached, similar to any image loaded by the QML engine. When an image with a &quot;image://&quot; prefix is loaded from cache, &lt;a href=&quot;qquickimageprovider#requestImage&quot;&gt;requestImage&lt;/a&gt;() and &lt;a href=&quot;qquickimageprovider#requestPixmap&quot;&gt;requestPixmap&lt;/a&gt;() will not be called for the relevant image provider. If an image should always be fetched from the image provider, and should not be cached at all, set the &lt;code&gt;cache&lt;/code&gt; property to &lt;code&gt;false&lt;/code&gt; for the relevant &lt;a href=&quot;qqmlimageproviderbase#ImageType-enum&quot;&gt;Image&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-borderimage&quot;&gt;BorderImage&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-animatedimage&quot;&gt;AnimatedImage&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;qquickimageprovider&quot;&gt;QQuickImageProvider&lt;/a&gt;によって返された画像は、QMLエンジンによって読み込まれた画像と同様に、自動的にキャッシュされます。 「image：//」という接頭辞が付いた画像がキャッシュから読み込まれると、関連する画像プロバイダーに対して&lt;a href=&quot;qquickimageprovider#requestImage&quot;&gt;requestImage&lt;/a&gt;（）および&lt;a href=&quot;qquickimageprovider#requestPixmap&quot;&gt;requestPixmap&lt;/a&gt;（）が呼び出されません。画像を常に画像プロバイダーからフェッチする必要があり、まったくキャッシュしない場合は、関連する&lt;a href=&quot;qqmlimageproviderbase#ImageType-enum&quot;&gt;Image&lt;/a&gt;、&lt;a href=&quot;qml-qtquick-borderimage&quot;&gt;BorderImage&lt;/a&gt;または&lt;a href=&quot;qml-qtquick-animatedimage&quot;&gt;AnimatedImage&lt;/a&gt;オブジェクトの &lt;code&gt;cache&lt;/code&gt; プロパティを &lt;code&gt;false&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="98054ab5470e957311b5d94c8723f2b9b9cb8aec" translate="yes" xml:space="preserve">
          <source>Imagine Section</source>
          <target state="translated">セクションを想像してみてください。</target>
        </trans-unit>
        <trans-unit id="dad00638754ac36048fbd57bbed553cd6109f1e7" translate="yes" xml:space="preserve">
          <source>Imagine Style</source>
          <target state="translated">イマジンスタイル</target>
        </trans-unit>
        <trans-unit id="f3f1ce65c7d662de103f9b182bf637fc9badc9d7" translate="yes" xml:space="preserve">
          <source>Imagine Style.Imagine.path</source>
          <target state="translated">イマジンスタイル.イマジンパス</target>
        </trans-unit>
        <trans-unit id="38e93318fb9a14392730f2d9e9abd6cc6b7227a1" translate="yes" xml:space="preserve">
          <source>Imagine that we wanted to add an &quot;interrupt&quot; mechanism to the example discussed in the previous section; the user should be able to click a button to have the state machine perform some non-related task, after which the state machine should resume whatever it was doing before (i.e. return to the old state, which is one of &lt;code&gt;s11&lt;/code&gt;, &lt;code&gt;s12&lt;/code&gt; and &lt;code&gt;s13&lt;/code&gt; in this case).</source>
          <target state="translated">前のセクションで説明した例に「割り込み」メカニズムを追加したいと想像してください。ユーザーはボタンをクリックして状態マシンに関連しないタスクを実行させ、その後状態マシンは以前に行っていた処理を再開する必要があります（つまり、古い状態に戻ります。これは &lt;code&gt;s11&lt;/code&gt; 、 &lt;code&gt;s12&lt;/code&gt; 、 &lt;code&gt;s13&lt;/code&gt; のいずれかです)この場合）。</target>
        </trans-unit>
        <trans-unit id="d46bf7f0635f256bb62b8e6e4435cce21887a239" translate="yes" xml:space="preserve">
          <source>Imagine that we wanted to add an &quot;interrupt&quot; mechanism to the example discussed in the previous section; the user should be able to click a button to have the state machine perform some non-related task, after which the state machine should resume whatever it was doing before (i.e. return to the old state, which is one of the three states in this case).</source>
          <target state="translated">前のセクションで説明した例に「割り込み」メカニズムを追加することを想像してみてください。</target>
        </trans-unit>
        <trans-unit id="9cace0481141bb12622f97fa076722e410411c47" translate="yes" xml:space="preserve">
          <source>Imagine.path : string</source>
          <target state="translated">Imagine.path:文字列</target>
        </trans-unit>
        <trans-unit id="868930280894191b54d63d2127ac6fdebf557223" translate="yes" xml:space="preserve">
          <source>Immediate</source>
          <target state="translated">Immediate</target>
        </trans-unit>
        <trans-unit id="4cc0fc1bb9145c589383805a2b9e7642df617e2d" translate="yes" xml:space="preserve">
          <source>Immediate Alert UUID (service). The service exposes a control point to allow a peer device to cause the device to immediately alert.</source>
          <target state="translated">Immediate Alert UUID (サービス)。サービスは、ピアデバイスがデバイスに即時アラートを発生させることを可能にするためのコントロールポイントを公開します。</target>
        </trans-unit>
        <trans-unit id="8f74d40b0ddca001d8ec191cbc118ef0fc66bc1c" translate="yes" xml:space="preserve">
          <source>Immediate Property Changes in Transitions</source>
          <target state="translated">トランジションでの即時物件変更</target>
        </trans-unit>
        <trans-unit id="68339c6c58f9820acd9d75108c7f0576ba2cad11" translate="yes" xml:space="preserve">
          <source>Immediately completes any ongoing transition. /sa Animation.complete</source>
          <target state="translated">進行中の移行を即座に完了させます。/sa Animation.complete</target>
        </trans-unit>
        <trans-unit id="c5601651de7fcae66afe4aba0873b88413dde4f1" translate="yes" xml:space="preserve">
          <source>Immediately dispatches all events which have been previously queued with &lt;a href=&quot;qcoreapplication#postEvent&quot;&gt;QCoreApplication::postEvent&lt;/a&gt;() and which are for the object</source>
          <target state="translated">以前&lt;a href=&quot;qcoreapplication#postEvent&quot;&gt;QCoreApplication :: postEvent&lt;/a&gt;（）でキューに入れられていた、オブジェクトに関するすべてのイベントを即座にディスパッチします</target>
        </trans-unit>
        <trans-unit id="bda227a1a554a0d13546ebf5fcba2f685ff2cbe8" translate="yes" xml:space="preserve">
          <source>Immediately sets &lt;code&gt;isFullScreen&lt;/code&gt; property to &lt;code&gt;false&lt;/code&gt;. It can be used to notify the browser engine when the windowing system forces the application to leave fullscreen mode.</source>
          <target state="translated">&lt;code&gt;isFullScreen&lt;/code&gt; プロパティをすぐに &lt;code&gt;false&lt;/code&gt; に設定します。これは、ウィンドウシステムがアプリケーションにフルスクリーンモードを強制的に終了したときにブラウザエンジンに通知するために使用できます。</target>
        </trans-unit>
        <trans-unit id="d88a43ea93f14a1fa3a0d0d58d578a933a0f86b9" translate="yes" xml:space="preserve">
          <source>Imperative Value Assignment</source>
          <target state="translated">命令的な値の割り当て</target>
        </trans-unit>
        <trans-unit id="7dffd111dffd7824c6ed8202c2f8de8f2971d5ad" translate="yes" xml:space="preserve">
          <source>Implement a new rendering technique without having to modify Qt 3D's internals</source>
          <target state="translated">Qt 3D の内部を変更することなく、新しいレンダリング技術を実装します。</target>
        </trans-unit>
        <trans-unit id="7e7520350429491e18c887be4f965b5bdd1d0d48" translate="yes" xml:space="preserve">
          <source>Implement an &lt;code&gt;onStatusChanged&lt;/code&gt; signal handler:</source>
          <target state="translated">&lt;code&gt;onStatusChanged&lt;/code&gt; シグナルハンドラーを実装します。</target>
        </trans-unit>
        <trans-unit id="e346f9fffc6ceccab78a2154371197615995d409" translate="yes" xml:space="preserve">
          <source>Implement new geoservices and positioning plugins.</source>
          <target state="translated">新しいジオサービスとポジショニングプラグインを実装します。</target>
        </trans-unit>
        <trans-unit id="bd323a55150b6fa8d2b20d8db4165a3936d48610" translate="yes" xml:space="preserve">
          <source>Implement the &lt;a href=&quot;qtextobjectinterface&quot;&gt;QTextObjectInterface&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;qtextobjectinterface&quot;&gt;QTextObjectInterface&lt;/a&gt;クラスを実装します。</target>
        </trans-unit>
        <trans-unit id="824c61e83f5938134d2ccf320782b112d83564ae" translate="yes" xml:space="preserve">
          <source>Implement the method to compare this texture data generator to</source>
          <target state="translated">このテクスチャデータ生成装置と比較するための方法を実装する</target>
        </trans-unit>
        <trans-unit id="77704c55abe49f13d980c280e8b0fc7c85fcb538" translate="yes" xml:space="preserve">
          <source>Implement the method to return the texture image data.</source>
          <target state="translated">テクスチャ画像データを返すメソッドを実装する。</target>
        </trans-unit>
        <trans-unit id="a355b7b38f031aa2b039a06b19988649aa6d14f6" translate="yes" xml:space="preserve">
          <source>Implement the methods of the COM interfaces, and use &lt;a href=&quot;qaxaggregated#object&quot;&gt;QAxAggregated::object&lt;/a&gt;() if you need to make calls to the &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclass implementing the control.</source>
          <target state="translated">COMインターフェイスのメソッドを実装し、コントロールを実装する&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;サブクラスを呼び出す必要がある場合は、&lt;a href=&quot;qaxaggregated#object&quot;&gt;QAxAggregated :: object&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="406f172389da11abc4e5a7989bb113ad823f5e4d" translate="yes" xml:space="preserve">
          <source>Implement this factory once in your COM server to provide information about the components the server can create. Subclass &lt;a href=&quot;qaxfactory&quot;&gt;QAxFactory&lt;/a&gt; and implement the pure virtual functions in any implementation file (e.g. main.cpp), and export the factory using the &lt;code&gt;QAXFACTORY_EXPORT()&lt;/code&gt; macro.</source>
          <target state="translated">このファクトリをCOMサーバーに実装して、サーバーが作成できるコンポーネントに関する情報を提供します。&lt;a href=&quot;qaxfactory&quot;&gt;QAxFactory&lt;/a&gt;をサブクラス化し、純粋な仮想関数を実装ファイル（main.cppなど）に実装し、 &lt;code&gt;QAXFACTORY_EXPORT()&lt;/code&gt; マクロを使用してファクトリをエクスポートします。</target>
        </trans-unit>
        <trans-unit id="5f23feaf099c6971edc686af99d77cf8503cddd5" translate="yes" xml:space="preserve">
          <source>Implement this function to create a driver matching the type specified by the given</source>
          <target state="translated">で指定された型にマッチするドライバを作成するために、この関数を実装します。</target>
        </trans-unit>
        <trans-unit id="4c14c2fe30be49d5c733a53729dcc63f006d7a5e" translate="yes" xml:space="preserve">
          <source>Implement this method to return the QTextureImageDataGeneratorPtr, which will provide the data for the texture image.</source>
          <target state="translated">このメソッドを実装し、テクスチャ画像のデータを提供する QTextureImageDataGeneratorPtr を返すようにします。</target>
        </trans-unit>
        <trans-unit id="3e089de4af7d9ddc1e6da0131bcd834096b8d142" translate="yes" xml:space="preserve">
          <source>Implement this method to return the image type supported by this image provider.</source>
          <target state="translated">この画像プロバイダがサポートする画像タイプを返すメソッドを実装する。</target>
        </trans-unit>
        <trans-unit id="2d352d18dc68af4a8806f9abd203677132d57e4c" translate="yes" xml:space="preserve">
          <source>Implement this method to return the image with</source>
          <target state="translated">このメソッドを実装して</target>
        </trans-unit>
        <trans-unit id="041a244fbd31fdc4f744aa3a7078f19300173476" translate="yes" xml:space="preserve">
          <source>Implement this method to return the job that will provide the texture with</source>
          <target state="translated">このメソッドを実装して、テクスチャを提供するジョブを返します。</target>
        </trans-unit>
        <trans-unit id="6d0a303aa84f1afcec28a14303ec4efacff0ca6c" translate="yes" xml:space="preserve">
          <source>Implement this method to return the pixmap with</source>
          <target state="translated">このメソッドを実装して、pixmapを返すようにします。</target>
        </trans-unit>
        <trans-unit id="69d72131ccbaa4ec47b90c0870e016e31fcbae0f" translate="yes" xml:space="preserve">
          <source>Implement this method to return the texture with</source>
          <target state="translated">このメソッドを実装して、テクスチャを</target>
        </trans-unit>
        <trans-unit id="e64cc5bcea5fe36b7f04f0ed3588d5c7d3924f08" translate="yes" xml:space="preserve">
          <source>Implement this pure virtual function in your subclass.</source>
          <target state="translated">この純粋な仮想関数をサブクラスに実装します。</target>
        </trans-unit>
        <trans-unit id="ade43a8b3b00e99ac666e4cb294e52b6d22f6e46" translate="yes" xml:space="preserve">
          <source>Implement this to return the properties of this image provider.</source>
          <target state="translated">この画像プロバイダのプロパティを返すために実装します。</target>
        </trans-unit>
        <trans-unit id="8781d615fd77be9578225c40ac67b9471394cced" translate="yes" xml:space="preserve">
          <source>Implementation</source>
          <target state="translated">Implementation</target>
        </trans-unit>
        <trans-unit id="7a5b3d65c8b1ef6dfcd4d330d512a64c7e307980" translate="yes" xml:space="preserve">
          <source>Implementation &lt;a href=&quot;qtexttospeech#setLocale&quot;&gt;QTextToSpeech::setLocale&lt;/a&gt;(</source>
          <target state="translated">実装&lt;a href=&quot;qtexttospeech#setLocale&quot;&gt;QTextToSpeech :: setLocale&lt;/a&gt;（</target>
        </trans-unit>
        <trans-unit id="768eca589194c251ad5053258cf35e3750aed13d" translate="yes" xml:space="preserve">
          <source>Implementation Issues</source>
          <target state="translated">実装上の問題点</target>
        </trans-unit>
        <trans-unit id="bac8c2f94d12883bc12d802245b943cdfe608152" translate="yes" xml:space="preserve">
          <source>Implementation of &lt;a href=&quot;qtexttospeech#availableLocales&quot;&gt;QTextToSpeech::availableLocales&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qtexttospeech#availableLocales&quot;&gt;QTextToSpeech :: availableLocales&lt;/a&gt;（）の実装。</target>
        </trans-unit>
        <trans-unit id="252365b05ef1276e15ece6c3868d4b4d1312185c" translate="yes" xml:space="preserve">
          <source>Implementation of &lt;a href=&quot;qtexttospeech#availableVoices&quot;&gt;QTextToSpeech::availableVoices&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qtexttospeech#availableVoices&quot;&gt;QTextToSpeech :: availableVoices&lt;/a&gt;（）の実装。</target>
        </trans-unit>
        <trans-unit id="8915b9793a0c76b65653decd9f3391b5b718cc01" translate="yes" xml:space="preserve">
          <source>Implementation of &lt;a href=&quot;qtexttospeech#locale-prop&quot;&gt;QTextToSpeech::locale&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qtexttospeech#locale-prop&quot;&gt;QTextToSpeech :: locale&lt;/a&gt;（）の実装。</target>
        </trans-unit>
        <trans-unit id="6f3142270e620ef5d5695917fd099c3e16e4d4f7" translate="yes" xml:space="preserve">
          <source>Implementation of &lt;a href=&quot;qtexttospeech#pause&quot;&gt;QTextToSpeech::pause&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qtexttospeech#pause&quot;&gt;QTextToSpeech :: pause&lt;/a&gt;（）の実装。</target>
        </trans-unit>
        <trans-unit id="5183464314eeea0721641bc39fe137ddb971f6a8" translate="yes" xml:space="preserve">
          <source>Implementation of &lt;a href=&quot;qtexttospeech#pitch-prop&quot;&gt;QTextToSpeech::pitch&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qtexttospeech#pitch-prop&quot;&gt;QTextToSpeech :: pitch&lt;/a&gt;（）の実装。</target>
        </trans-unit>
        <trans-unit id="65270c60c0c4cc1a3b051c8c55c1da9a1ee2403c" translate="yes" xml:space="preserve">
          <source>Implementation of &lt;a href=&quot;qtexttospeech#pitch-prop&quot;&gt;QTextToSpeech::setPitch&lt;/a&gt;(</source>
          <target state="translated">実装&lt;a href=&quot;qtexttospeech#pitch-prop&quot;&gt;QTextToSpeech :: setPitch&lt;/a&gt;（</target>
        </trans-unit>
        <trans-unit id="732cb6eaf2b5223b253b4065c81c85598c5188db" translate="yes" xml:space="preserve">
          <source>Implementation of &lt;a href=&quot;qtexttospeech#rate-prop&quot;&gt;QTextToSpeech::rate&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qtexttospeech#rate-prop&quot;&gt;QTextToSpeech :: rate&lt;/a&gt;（）の実装。</target>
        </trans-unit>
        <trans-unit id="683a708a3cbf5e893a3adac0630fc2ed3d390a48" translate="yes" xml:space="preserve">
          <source>Implementation of &lt;a href=&quot;qtexttospeech#rate-prop&quot;&gt;QTextToSpeech::setRate&lt;/a&gt;(</source>
          <target state="translated">実装&lt;a href=&quot;qtexttospeech#rate-prop&quot;&gt;QTextToSpeech :: setRate&lt;/a&gt;（</target>
        </trans-unit>
        <trans-unit id="6c81f536d52969f0a1f6daadfe044b4f1679c8d4" translate="yes" xml:space="preserve">
          <source>Implementation of &lt;a href=&quot;qtexttospeech#resume&quot;&gt;QTextToSpeech::resume&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qtexttospeech#resume&quot;&gt;QTextToSpeech :: resume&lt;/a&gt;（）の実装。</target>
        </trans-unit>
        <trans-unit id="d34333cb782ffdfedde949f5263cc3e9f3223d1b" translate="yes" xml:space="preserve">
          <source>Implementation of &lt;a href=&quot;qtexttospeech#say&quot;&gt;QTextToSpeech::say&lt;/a&gt;(</source>
          <target state="translated">実装&lt;a href=&quot;qtexttospeech#say&quot;&gt;QTextToSpeech ::言います&lt;/a&gt;（</target>
        </trans-unit>
        <trans-unit id="0c04b71feeddae254af4e863df6c0a64a030f1b2" translate="yes" xml:space="preserve">
          <source>Implementation of &lt;a href=&quot;qtexttospeech#setVoice&quot;&gt;QTextToSpeech::setVoice&lt;/a&gt;(</source>
          <target state="translated">実装&lt;a href=&quot;qtexttospeech#setVoice&quot;&gt;QTextToSpeech :: setVoice&lt;/a&gt;（</target>
        </trans-unit>
        <trans-unit id="813cdd156d3a421694a5df93ffe85f18088d4859" translate="yes" xml:space="preserve">
          <source>Implementation of &lt;a href=&quot;qtexttospeech#state-prop&quot;&gt;QTextToSpeech::state&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qtexttospeech#state-prop&quot;&gt;QTextToSpeech :: state&lt;/a&gt;（）の実装。</target>
        </trans-unit>
        <trans-unit id="58f6ecbddb418e3cc37e34f885c16afa614ed155" translate="yes" xml:space="preserve">
          <source>Implementation of &lt;a href=&quot;qtexttospeech#stop&quot;&gt;QTextToSpeech::stop&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qtexttospeech#stop&quot;&gt;QTextToSpeech :: stop&lt;/a&gt;（）の実装。</target>
        </trans-unit>
        <trans-unit id="e9b90b10d7c8933fad8a80cbf878e2f12d1fe6b3" translate="yes" xml:space="preserve">
          <source>Implementation of &lt;a href=&quot;qtexttospeech#voice-prop&quot;&gt;QTextToSpeech::voice&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qtexttospeech#voice-prop&quot;&gt;QTextToSpeech :: voice&lt;/a&gt;（）の実装。</target>
        </trans-unit>
        <trans-unit id="742124903e5f6679c84652579896852bd1d161d5" translate="yes" xml:space="preserve">
          <source>Implementation of &lt;a href=&quot;qtexttospeech#volume-prop&quot;&gt;QTextToSpeech::setVolume&lt;/a&gt;(</source>
          <target state="translated">実装&lt;a href=&quot;qtexttospeech#volume-prop&quot;&gt;QTextToSpeech :: setVolume&lt;/a&gt;（</target>
        </trans-unit>
        <trans-unit id="6f8bbfa959122fc74c77cd0e797f2e308faaefc2" translate="yes" xml:space="preserve">
          <source>Implementation of &lt;a href=&quot;qtexttospeech#volume-prop&quot;&gt;QTextToSpeech::volume&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qtexttospeech#volume-prop&quot;&gt;QTextToSpeech :: volume&lt;/a&gt;（）の実装。</target>
        </trans-unit>
        <trans-unit id="f50927869456efd939126c6c4217e180c662927b" translate="yes" xml:space="preserve">
          <source>Implementation of a simple XML parser</source>
          <target state="translated">シンプルなXMLパーサーの実装</target>
        </trans-unit>
        <trans-unit id="52a6aa695ff12612c420aa2b2acd3323473ecae0" translate="yes" xml:space="preserve">
          <source>Implementations of &lt;a href=&quot;qaccessibleinterface#statex&quot;&gt;QAccessibleInterface::state&lt;/a&gt;() return a combination of these flags.</source>
          <target state="translated">&lt;a href=&quot;qaccessibleinterface#statex&quot;&gt;QAccessibleInterface :: state&lt;/a&gt;（）の実装はこれらのフラグの組み合わせを返します。</target>
        </trans-unit>
        <trans-unit id="62322beaafd8ec9a39b5baa61167ebb3ad7e6a17" translate="yes" xml:space="preserve">
          <source>Implementations of relations() return a combination of these flags. Some values are mutually exclusive.</source>
          <target state="translated">relations()の実装は、これらのフラグの組み合わせを返します。値の中には、相互に排他的なものもあります。</target>
        </trans-unit>
        <trans-unit id="9b40982de342c9aa065e55edd172558d53cd6bcf" translate="yes" xml:space="preserve">
          <source>Implementations of this function are recommended to return the same instance for multiple calls to limit memory usage.</source>
          <target state="translated">この関数の実装では、メモリ使用量を制限するために、複数回の呼び出しに対して同じインスタンスを返すことを推奨します。</target>
        </trans-unit>
        <trans-unit id="b949b5c89a7c002626b5129900e736b4b67b517b" translate="yes" xml:space="preserve">
          <source>Implementations that do not modify the video frame can simply return</source>
          <target state="translated">ビデオフレームを変更しない実装は、単に</target>
        </trans-unit>
        <trans-unit id="7ce635db6989f56f270c4c9da77887cc9ddbabbf" translate="yes" xml:space="preserve">
          <source>Implementations that store graphics resources outside the node tree, such as an item implementing &lt;a href=&quot;qquickitem#textureProvider&quot;&gt;QQuickItem::textureProvider&lt;/a&gt;(), will need to take care in cleaning it up correctly depending on how the item is used in QML. The situations to handle are:</source>
          <target state="translated">&lt;a href=&quot;qquickitem#textureProvider&quot;&gt;QQuickItem :: textureProvider&lt;/a&gt;（）を実装するアイテムなど、ノードツリーの外部にグラフィックリソースを格納する実装では、QMLでのアイテムの使用方法に応じて、正しくクリーンアップする必要があります。処理する状況は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="45917572504116cc9d3aa541f552d3b9c98c9711" translate="yes" xml:space="preserve">
          <source>Implemented Categories</source>
          <target state="translated">実装されているカテゴリ</target>
        </trans-unit>
        <trans-unit id="79e4fc5d855be3f3ef0e736af8f6d4efedb9d969" translate="yes" xml:space="preserve">
          <source>Implemented in subclasses to add an</source>
          <target state="translated">を追加するためにサブクラスで実装されています。</target>
        </trans-unit>
        <trans-unit id="f0be64a6f2f844bf8edb3d02f82270333257e4ac" translate="yes" xml:space="preserve">
          <source>Implemented in subclasses to return the maximum size of this item.</source>
          <target state="translated">この項目の最大サイズを返すためにサブクラスで実装されています。</target>
        </trans-unit>
        <trans-unit id="99a9442344617bb0f8b2765b1c9268a73d0b2f75" translate="yes" xml:space="preserve">
          <source>Implemented in subclasses to return the minimum size of this item.</source>
          <target state="translated">この項目の最小サイズを返すためにサブクラスで実装されています。</target>
        </trans-unit>
        <trans-unit id="c3a89331232f593071f453b5cf4851f994ffbc17" translate="yes" xml:space="preserve">
          <source>Implemented in subclasses to return the preferred size of this item.</source>
          <target state="translated">このアイテムの優先されるサイズを返すためにサブクラスで実装されています。</target>
        </trans-unit>
        <trans-unit id="48a71464c037110bac9ac7e4e37c746810204c17" translate="yes" xml:space="preserve">
          <source>Implemented in subclasses to return whether this item is empty, i.e. whether it contains any widgets.</source>
          <target state="translated">このアイテムが空かどうか、つまりウィジェットが含まれているかどうかを返すためにサブクラスで実装されています。</target>
        </trans-unit>
        <trans-unit id="80f4138d0dc744a4ebbac34c57270cb9e3e0b348" translate="yes" xml:space="preserve">
          <source>Implemented in subclasses to set this item's geometry to</source>
          <target state="translated">サブクラスで実装されており、このアイテムのジオメトリを</target>
        </trans-unit>
        <trans-unit id="a13de6052d7908b65e5da5504abdf7a6b611fa94" translate="yes" xml:space="preserve">
          <source>Implemented using an FTP proxy, it is useful only in the context of FTP requests (see &lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt;)</source>
          <target state="translated">FTPプロキシを使用して実装され、FTPリクエストのコンテキストでのみ役立ちます（&lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManagerを&lt;/a&gt;参照）</target>
        </trans-unit>
        <trans-unit id="6f51578ba32a5f1095c7802cc7ac37ae56fabad4" translate="yes" xml:space="preserve">
          <source>Implemented using normal HTTP commands, it is useful only in the context of HTTP requests (see &lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt;)</source>
          <target state="translated">通常のHTTPコマンドを使用して実装され、HTTPリクエストのコンテキストでのみ役立ちます（&lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManagerを&lt;/a&gt;参照）</target>
        </trans-unit>
        <trans-unit id="37eaa6052778fa54b8c36b894ab76b71c291e275" translate="yes" xml:space="preserve">
          <source>Implemented using the &quot;CONNECT&quot; command, supports only outgoing TCP connections; supports authentication.</source>
          <target state="translated">CONNECT&quot; コマンドを使用して実装されており、送信 TCP 接続のみをサポートします。</target>
        </trans-unit>
        <trans-unit id="c36f0570f5d32e2cbf0d6f246f67f04c076cc4ca" translate="yes" xml:space="preserve">
          <source>Implementers must provide a unique combination of providerName() and providerVersion() per plugin.</source>
          <target state="translated">実装者は、プラグインごとに providerName()と providerVersion()のユニークな組み合わせを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="89c6516a41c7f89456772eefae5063a8a95198cb" translate="yes" xml:space="preserve">
          <source>Implementing Accessibility</source>
          <target state="translated">アクセシビリティの導入</target>
        </trans-unit>
        <trans-unit id="37055ff4688db34b01056929097bdf4e9a1647a9" translate="yes" xml:space="preserve">
          <source>Implementing Accessible Plugins</source>
          <target state="translated">アクセシブルなプラグインの実装</target>
        </trans-unit>
        <trans-unit id="62db8de0d5a43bd04c2e49c138c595d8be9bf39a" translate="yes" xml:space="preserve">
          <source>Implementing Attached Objects: An Example</source>
          <target state="translated">アタッチドオブジェクトの実装。例</target>
        </trans-unit>
        <trans-unit id="1284919614dda5c4849a9d835fdf6246b454a23f" translate="yes" xml:space="preserve">
          <source>Implementing Containers</source>
          <target state="translated">コンテナの実装</target>
        </trans-unit>
        <trans-unit id="88757e72266ba18e73a64b75a68b2a454adbda62" translate="yes" xml:space="preserve">
          <source>Implementing Controls</source>
          <target state="translated">コントロールの実装</target>
        </trans-unit>
        <trans-unit id="da3c580339754281809a3e83b0ad26e13dd93a1a" translate="yes" xml:space="preserve">
          <source>Implementing Interface Factories</source>
          <target state="translated">インターフェース工場の実装</target>
        </trans-unit>
        <trans-unit id="93a7e62b8b482382a12442f268a928d84247e783" translate="yes" xml:space="preserve">
          <source>Implementing New Back-Ends and Porting</source>
          <target state="translated">新しいバックエンドの実装と移植</target>
        </trans-unit>
        <trans-unit id="a697df395e011b66cb0286f725767f5fb97c05d5" translate="yes" xml:space="preserve">
          <source>Implementing Plugins</source>
          <target state="translated">プラグインの実装</target>
        </trans-unit>
        <trans-unit id="105d092e17fec216e8d6c23e821004c74a0ffe87" translate="yes" xml:space="preserve">
          <source>Implementing a Custom CAN Plugin</source>
          <target state="translated">カスタムCANプラグインの実装</target>
        </trans-unit>
        <trans-unit id="3ac815e3336452c287cb246a2566818a76c57da8" translate="yes" xml:space="preserve">
          <source>Implementing a Custom Input Method</source>
          <target state="translated">カスタム入力メソッドの実装</target>
        </trans-unit>
        <trans-unit id="c3cad3660d34c8c4eb4fd640e52d906820ac9980" translate="yes" xml:space="preserve">
          <source>Implementing a Custom Style</source>
          <target state="translated">カスタム スタイルの実装</target>
        </trans-unit>
        <trans-unit id="2f1e6e2499a481cc5e8da70677aff24ce7688e68" translate="yes" xml:space="preserve">
          <source>Implementing a subclass of QAbstractVideoSurface</source>
          <target state="translated">QAbstractVideoSurfaceのサブクラスの実装</target>
        </trans-unit>
        <trans-unit id="9a8faa504839bd228eefcc80f99ef25836ebf8fb" translate="yes" xml:space="preserve">
          <source>Implementing the &lt;a href=&quot;qwebengineurlrequestinterceptor&quot;&gt;QWebEngineUrlRequestInterceptor&lt;/a&gt; interface and installing the interceptor on the profile enables intercepting, blocking, and modifying URL requests before they reach the networking stack of Chromium.</source>
          <target state="translated">&lt;a href=&quot;qwebengineurlrequestinterceptor&quot;&gt;QWebEngineUrlRequestInterceptor&lt;/a&gt;インターフェースを実装し、プロファイルにインターセプターをインストールすると、Chromiumのネットワークスタックに到達する前に、URLリクエストをインターセプト、ブロック、および変更できます。</target>
        </trans-unit>
        <trans-unit id="4dd1cd2566050206f34018201521db4e116a53c7" translate="yes" xml:space="preserve">
          <source>Implementing the &lt;a href=&quot;qwebengineurlrequestinterceptor&quot;&gt;QWebEngineUrlRequestInterceptor&lt;/a&gt; interface and registering the interceptor on a profile by setRequestInterceptor() enables intercepting, blocking, and modifying URL requests (&lt;a href=&quot;qwebengineurlrequestinfo&quot;&gt;QWebEngineUrlRequestInfo&lt;/a&gt;) before they reach the networking stack of Chromium.</source>
          <target state="translated">&lt;a href=&quot;qwebengineurlrequestinterceptor&quot;&gt;QWebEngineUrlRequestInterceptor&lt;/a&gt;インターフェースを実装し、setRequestInterceptor（）でプロファイルにインターセプターを登録すると、Chromiumのネットワーキングスタックに到達する前に、URLリクエスト（&lt;a href=&quot;qwebengineurlrequestinfo&quot;&gt;QWebEngineUrlRequestInfo&lt;/a&gt;）をインターセプト、ブロック、および変更できます。</target>
        </trans-unit>
        <trans-unit id="2310b9fe383f075595e60e4e1744ab91d940d24f" translate="yes" xml:space="preserve">
          <source>Implementing the two constructors for class &lt;code&gt;Employee&lt;/code&gt; is also straightforward. Both create a new instance of &lt;code&gt;EmployeeData&lt;/code&gt; and assign it to the</source>
          <target state="translated">クラス &lt;code&gt;Employee&lt;/code&gt; の 2つのコンストラクターの実装も簡単です。どちらも &lt;code&gt;EmployeeData&lt;/code&gt; の新しいインスタンスを作成し、それを</target>
        </trans-unit>
        <trans-unit id="8fedd5f9af10dcc2065402dce17c1a81d202eaa7" translate="yes" xml:space="preserve">
          <source>Implementing this is currently not feasible, because the Xcode concept of Active Build Configurations is conceptually different from the qmake idea of build targets.</source>
          <target state="translated">アクティブビルドコンフィグレーションのXcodeの概念は、ビルドターゲットのqmakeの概念とは概念的に異なるため、これを実装することは現在のところ不可能です。</target>
        </trans-unit>
        <trans-unit id="a1d579b66264b8b69e731bda1e199f60583ec640" translate="yes" xml:space="preserve">
          <source>Implementing/Inheriting Reply Objects</source>
          <target state="translated">返信オブジェクトの実装/継承</target>
        </trans-unit>
        <trans-unit id="a2c9281ebd86d2e5784c7a81af42b5a91f637f7d" translate="yes" xml:space="preserve">
          <source>Implementors should stop the sensors.</source>
          <target state="translated">実装者はセンサーを止めるべきです。</target>
        </trans-unit>
        <trans-unit id="44b4324428af79c0b75bfdc681f936837b39bf38" translate="yes" xml:space="preserve">
          <source>Implementors would use this to instantiate QSensors and connect signals.</source>
          <target state="translated">実装者はこれを使用して QSensors のインスタンスを作成し、信号を接続します。</target>
        </trans-unit>
        <trans-unit id="7ae338d79a5230e4b43efdab06001e96e0e0f071" translate="yes" xml:space="preserve">
          <source>Implements OAuth 1 signature methods. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">OAuth 1署名メソッドを実装します。&lt;a href=&quot;#details&quot;&gt;もっと...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9dbab7cc5aaaa4d4e4728f3d8a25dde8406f8f83" translate="yes" xml:space="preserve">
          <source>Implements a TCP socket that talks the WebSocket protocol. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">WebSocketプロトコルと通信するTCPソケットを実装します。&lt;a href=&quot;#details&quot;&gt;もっと...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="07ce00efe44e974c973ad1854fbe7895987692e8" translate="yes" xml:space="preserve">
          <source>Implements a WebSocket-based server. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">WebSocketベースのサーバーを実装します。&lt;a href=&quot;#details&quot;&gt;もっと...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4bc4316bd595db94a09151c95ec09e3615ceda18" translate="yes" xml:space="preserve">
          <source>Implements a main() function that executes all tests in</source>
          <target state="translated">のすべてのテストを実行する main()関数をインプリメントします。</target>
        </trans-unit>
        <trans-unit id="11e5db6cf1adf659b0180252b6472dcbb09db170" translate="yes" xml:space="preserve">
          <source>Implements a main() function that instantiates a &lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt; object and the</source>
          <target state="translated">&lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt;オブジェクトをインスタンス化するmain（）関数と</target>
        </trans-unit>
        <trans-unit id="769582a411ec116dae3da4fce76e27f46a1e28f4" translate="yes" xml:space="preserve">
          <source>Implements a main() function that instantiates an application object and the</source>
          <target state="translated">アプリケーションオブジェクトのインスタンスを作成するmain()関数と</target>
        </trans-unit>
        <trans-unit id="58df4016dcc0a1e6f025cd9c6e4efb4b5e74814c" translate="yes" xml:space="preserve">
          <source>Implements a plain text layout for QTextDocument</source>
          <target state="translated">QTextDocument 用のプレーンテキストレイアウトをインプリメントします。</target>
        </trans-unit>
        <trans-unit id="817d2e38832dc5e530d8da9e24d5f4c39ecc59c7" translate="yes" xml:space="preserve">
          <source>Implements a splitter widget</source>
          <target state="translated">スプリッターウィジェットを実装する</target>
        </trans-unit>
        <trans-unit id="ed071f20bf56590f18c4cef7b3c7c4ffb71a5d5d" translate="yes" xml:space="preserve">
          <source>Implements the clipping functionality in the scene graph</source>
          <target state="translated">シーングラフのクリッピング機能を実装します。</target>
        </trans-unit>
        <trans-unit id="360dfa2ecac7b96dfbfcd613fe35c133883f2811" translate="yes" xml:space="preserve">
          <source>Implements transformations in the scene graph</source>
          <target state="translated">シーングラフに変換を実装</target>
        </trans-unit>
        <trans-unit id="4a4e5714e68750a6616682cf4332ca27085f7c07" translate="yes" xml:space="preserve">
          <source>Implications for Application Security</source>
          <target state="translated">アプリケーションセキュリティへの影響</target>
        </trans-unit>
        <trans-unit id="d1b0c2da64929c52614a0ea37031fc3f08a659ba" translate="yes" xml:space="preserve">
          <source>Implications of Garbage Collection</source>
          <target state="translated">ごみ収集の意味合い</target>
        </trans-unit>
        <trans-unit id="37cafc62e0335cc769516aaf21c4deb5286f0977" translate="yes" xml:space="preserve">
          <source>Implicit Sharing</source>
          <target state="translated">暗黙の共有</target>
        </trans-unit>
        <trans-unit id="008b49b9ffac23b845fdc5aceab2e0cf4741c4da" translate="yes" xml:space="preserve">
          <source>Implicit Sharing in Detail</source>
          <target state="translated">暗黙の共有の詳細</target>
        </trans-unit>
        <trans-unit id="00704da9b767c062d791dbf94a3d54d1682ec9a5" translate="yes" xml:space="preserve">
          <source>Implicit conversions cannot be done between signals and slots.</source>
          <target state="translated">信号とスロットの間では暗黙の変換はできません。</target>
        </trans-unit>
        <trans-unit id="6c30cd01ca170437484abc595c9d9485ad31782e" translate="yes" xml:space="preserve">
          <source>Implicit sharing automatically detaches the object from a shared block if the object is about to change and the reference count is greater than one. (This is often called</source>
          <target state="translated">暗黙の共有は、オブジェクトが変更されようとしている場合に、参照カウントが1よりも大きい場合に、共有ブロックから自動的にオブジェクトを切り離します。(これはしばしば</target>
        </trans-unit>
        <trans-unit id="af5545c5727bf3de7176b7b17f4242870d3a2817" translate="yes" xml:space="preserve">
          <source>Implicit sharing iterator problem</source>
          <target state="translated">暗黙の共有イテレータ問題</target>
        </trans-unit>
        <trans-unit id="601f1ceaa652300a5d75c64915d5edfc352c8ebb" translate="yes" xml:space="preserve">
          <source>Implicit sharing might not be right for the &lt;code&gt;Employee&lt;/code&gt; class. Consider a simple example that creates two instances of the implicitly shared &lt;code&gt;Employee&lt;/code&gt; class.</source>
          <target state="translated">暗黙的な共有は、 &lt;code&gt;Employee&lt;/code&gt; クラスには適切でない場合があります。暗黙的に共有される &lt;code&gt;Employee&lt;/code&gt; クラスの2つのインスタンスを作成する簡単な例を考えます。</target>
        </trans-unit>
        <trans-unit id="c9c4834109dffe1f19ab4a49e9550da5ca048239" translate="yes" xml:space="preserve">
          <source>Implicit sharing mostly takes place behind the scenes; the programmer rarely needs to worry about it. However, Qt's container iterators have different behavior than those from the STL. Read &lt;a href=&quot;containers#implicit-sharing-iterator-problem&quot;&gt;Implicit sharing iterator problem&lt;/a&gt;.</source>
          <target state="translated">暗黙的な共有は、ほとんどの場合裏で行われます。プログラマがめったに心配する必要はありません。ただし、Qtのコンテナーイテレーターの動作は、STLのものとは異なります。&lt;a href=&quot;containers#implicit-sharing-iterator-problem&quot;&gt;暗黙の共有反復子の問題&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="01f8daedd3b6c5e9250fa35409773860241f5ac3" translate="yes" xml:space="preserve">
          <source>Implicit vs Explicit Sharing</source>
          <target state="translated">暗黙的な共有と明示的な共有</target>
        </trans-unit>
        <trans-unit id="573dd3b4ab30316ae01dc2ccdd4c4c8c99b02418" translate="yes" xml:space="preserve">
          <source>Implicitly Shared Classes</source>
          <target state="translated">暗黙的に共有されるクラス</target>
        </trans-unit>
        <trans-unit id="0170645197d080aa6d0d99799c0d55e8e2b3f7b3" translate="yes" xml:space="preserve">
          <source>Import Statement:</source>
          <target state="translated">インポートステートメント。</target>
        </trans-unit>
        <trans-unit id="c84abb908c7f215124958ecd568ac8e0169e3de4" translate="yes" xml:space="preserve">
          <source>Import Statements</source>
          <target state="translated">インポート ステートメント</target>
        </trans-unit>
        <trans-unit id="cc9d210a6de060e7aa82158f000d6783d2ce29b2" translate="yes" xml:space="preserve">
          <source>Import Types</source>
          <target state="translated">インポートタイプ</target>
        </trans-unit>
        <trans-unit id="0c7e14afb3fc6058836716fb5b5da1b28b34671f" translate="yes" xml:space="preserve">
          <source>Import and Export Restrictions</source>
          <target state="translated">輸出入規制</target>
        </trans-unit>
        <trans-unit id="dd3e917e0a6dfc3dfd19158b36b1be97ca89b8c0" translate="yes" xml:space="preserve">
          <source>Import the types using the the following statement:</source>
          <target state="translated">以下のステートメントを使用して型をインポートします。</target>
        </trans-unit>
        <trans-unit id="5121b999d9c7ec346a3f31830e3f222e9d03a8b1" translate="yes" xml:space="preserve">
          <source>Important C++ Classes Provided By The Qt QML Module</source>
          <target state="translated">Qt QML モジュールが提供する重要な C++クラス</target>
        </trans-unit>
        <trans-unit id="e62a4997192c1e818765bef08838d899ef08c24f" translate="yes" xml:space="preserve">
          <source>Important Classes</source>
          <target state="translated">重要なクラス</target>
        </trans-unit>
        <trans-unit id="61e87e57acb875ed2bbb75fd5ef43644845fe655" translate="yes" xml:space="preserve">
          <source>Important Concepts in Qt Quick</source>
          <target state="translated">Qtクイックの重要な概念</target>
        </trans-unit>
        <trans-unit id="38bb3266d02c231b329affcd4d6c0cb05bb6549a" translate="yes" xml:space="preserve">
          <source>Important inherited functions: &lt;a href=&quot;qabstractbutton#text-prop&quot;&gt;text&lt;/a&gt;(), &lt;a href=&quot;qabstractbutton#text-prop&quot;&gt;setText&lt;/a&gt;(), &lt;a href=&quot;qabstractbutton#text-prop&quot;&gt;text&lt;/a&gt;(), pixmap(), setPixmap(), accel(), setAccel(), isToggleButton(), &lt;a href=&quot;qabstractbutton#down-prop&quot;&gt;setDown&lt;/a&gt;(), &lt;a href=&quot;qabstractbutton#down-prop&quot;&gt;isDown&lt;/a&gt;(), isOn(), &lt;a href=&quot;qcheckbox#checkState&quot;&gt;checkState&lt;/a&gt;(), &lt;a href=&quot;qabstractbutton#autoRepeat-prop&quot;&gt;autoRepeat&lt;/a&gt;(), isExclusiveToggle(), &lt;a href=&quot;qabstractbutton#group&quot;&gt;group&lt;/a&gt;(), &lt;a href=&quot;qabstractbutton#autoRepeat-prop&quot;&gt;setAutoRepeat&lt;/a&gt;(), &lt;a href=&quot;qabstractbutton#toggle&quot;&gt;toggle&lt;/a&gt;(), &lt;a href=&quot;qabstractbutton#pressed&quot;&gt;pressed&lt;/a&gt;(), &lt;a href=&quot;qabstractbutton#released&quot;&gt;released&lt;/a&gt;(), &lt;a href=&quot;qabstractbutton#clicked&quot;&gt;clicked&lt;/a&gt;(), &lt;a href=&quot;qabstractbutton#toggled&quot;&gt;toggled&lt;/a&gt;(), &lt;a href=&quot;qcheckbox#checkState&quot;&gt;checkState&lt;/a&gt;(), and &lt;a href=&quot;qcheckbox#stateChanged&quot;&gt;stateChanged&lt;/a&gt;().</source>
          <target state="translated">重要な継承された関数：&lt;a href=&quot;qabstractbutton#text-prop&quot;&gt;text&lt;/a&gt;（）、&lt;a href=&quot;qabstractbutton#text-prop&quot;&gt;setText&lt;/a&gt;（）、&lt;a href=&quot;qabstractbutton#text-prop&quot;&gt;text&lt;/a&gt;（）、pixmap（）、setPixmap（）、accel（）、setAccel（）、isToggleButton（）、&lt;a href=&quot;qabstractbutton#down-prop&quot;&gt;setDown&lt;/a&gt;（）、&lt;a href=&quot;qabstractbutton#down-prop&quot;&gt;isDown&lt;/a&gt;（）、isOn（）、&lt;a href=&quot;qcheckbox#checkState&quot;&gt;checkState&lt;/a&gt;（ ）、&lt;a href=&quot;qabstractbutton#autoRepeat-prop&quot;&gt;オートリピート&lt;/a&gt;（）、isExclusiveToggle（）、&lt;a href=&quot;qabstractbutton#group&quot;&gt;基&lt;/a&gt;（）、&lt;a href=&quot;qabstractbutton#autoRepeat-prop&quot;&gt;setAutoRepeat&lt;/a&gt;（）、&lt;a href=&quot;qabstractbutton#toggle&quot;&gt;トグル&lt;/a&gt;（）、&lt;a href=&quot;qabstractbutton#pressed&quot;&gt;押下&lt;/a&gt;（）、&lt;a href=&quot;qabstractbutton#released&quot;&gt;解放&lt;/a&gt;（）、&lt;a href=&quot;qabstractbutton#clicked&quot;&gt;クリック&lt;/a&gt;（）、&lt;a href=&quot;qabstractbutton#toggled&quot;&gt;トグル&lt;/a&gt;（）&lt;a href=&quot;qcheckbox#checkState&quot;&gt;にcheckState&lt;/a&gt;（）、及び&lt;a href=&quot;qcheckbox#stateChanged&quot;&gt;のstateChanged&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="e834ab849cfcf5fcf233f800c32a7947a1ab8d02" translate="yes" xml:space="preserve">
          <source>Important inherited members: &lt;a href=&quot;qabstractbutton#text-prop&quot;&gt;text&lt;/a&gt;(), &lt;a href=&quot;qabstractbutton#text-prop&quot;&gt;setText&lt;/a&gt;(), &lt;a href=&quot;qabstractbutton#text-prop&quot;&gt;text&lt;/a&gt;(), &lt;a href=&quot;qabstractbutton#down-prop&quot;&gt;setDown&lt;/a&gt;(), &lt;a href=&quot;qabstractbutton#down-prop&quot;&gt;isDown&lt;/a&gt;(), &lt;a href=&quot;qabstractbutton#autoRepeat-prop&quot;&gt;autoRepeat&lt;/a&gt;(), &lt;a href=&quot;qabstractbutton#group&quot;&gt;group&lt;/a&gt;(), &lt;a href=&quot;qabstractbutton#autoRepeat-prop&quot;&gt;setAutoRepeat&lt;/a&gt;(), &lt;a href=&quot;qabstractbutton#toggle&quot;&gt;toggle&lt;/a&gt;(), &lt;a href=&quot;qabstractbutton#pressed&quot;&gt;pressed&lt;/a&gt;(), &lt;a href=&quot;qabstractbutton#released&quot;&gt;released&lt;/a&gt;(), &lt;a href=&quot;qabstractbutton#clicked&quot;&gt;clicked&lt;/a&gt;(), and &lt;a href=&quot;qabstractbutton#toggled&quot;&gt;toggled&lt;/a&gt;().</source>
          <target state="translated">重要継承されたメンバー：&lt;a href=&quot;qabstractbutton#text-prop&quot;&gt;テキスト&lt;/a&gt;（）、&lt;a href=&quot;qabstractbutton#text-prop&quot;&gt;のsetText&lt;/a&gt;（）、&lt;a href=&quot;qabstractbutton#text-prop&quot;&gt;テキスト&lt;/a&gt;（）、&lt;a href=&quot;qabstractbutton#down-prop&quot;&gt;セットダウン&lt;/a&gt;（）、&lt;a href=&quot;qabstractbutton#down-prop&quot;&gt;isDown&lt;/a&gt;（）、&lt;a href=&quot;qabstractbutton#autoRepeat-prop&quot;&gt;オートリピート&lt;/a&gt;（）、&lt;a href=&quot;qabstractbutton#group&quot;&gt;グループ&lt;/a&gt;（）、&lt;a href=&quot;qabstractbutton#autoRepeat-prop&quot;&gt;setAutoRepeat&lt;/a&gt;（）、&lt;a href=&quot;qabstractbutton#toggle&quot;&gt;トグル&lt;/a&gt;（）、&lt;a href=&quot;qabstractbutton#pressed&quot;&gt;押された&lt;/a&gt;（）、&lt;a href=&quot;qabstractbutton#released&quot;&gt;解放&lt;/a&gt;（）、&lt;a href=&quot;qabstractbutton#clicked&quot;&gt;クリックされました&lt;/a&gt;（ ）、&lt;a href=&quot;qabstractbutton#toggled&quot;&gt;トグル&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="037371a95f20d05f36a578d9da5d0b9b47ba7da4" translate="yes" xml:space="preserve">
          <source>Important: please note that this proxy only supports dragging a single row. It will assert if called with indexes from multiple rows, because dragging rows that might come from different source models cannot be implemented generically by this proxy model. Each piece of data in the &lt;a href=&quot;qmimedata&quot;&gt;QMimeData&lt;/a&gt; needs to be merged, which is data-type-specific. Reimplement this method in a subclass if you want to support dragging multiple rows.</source>
          <target state="translated">重要：このプロキシは単一行のドラッグのみをサポートすることに注意してください。複数の行からのインデックスを使用して呼び出された場合は、このプロキシモデルでは一般的に異なるソースモデルからの行のドラッグを実装できないため、アサートされます。&lt;a href=&quot;qmimedata&quot;&gt;QMimeDataの&lt;/a&gt;各データはマージする必要があります。これはデータタイプ固有です。複数行のドラッグをサポートする場合は、サブクラスでこのメソッドを再実装してください。</target>
        </trans-unit>
        <trans-unit id="d8596abf671da0c3ab4421f86863a266d9d9052b" translate="yes" xml:space="preserve">
          <source>Important: the</source>
          <target state="translated">重要なこと</target>
        </trans-unit>
        <trans-unit id="421387e5ef6af9880ac182b025362e5f7a797ecf" translate="yes" xml:space="preserve">
          <source>Imported JavaScript resources are always qualified using the &quot;as&quot; keyword. The qualifier for JavaScript resources must start with an uppercase letter, and must be unique, so there is always a one-to-one mapping between qualifiers and JavaScript files. (This also means qualifiers cannot be named the same as built-in JavaScript objects such as &lt;code&gt;Date&lt;/code&gt; and &lt;code&gt;Math&lt;/code&gt;).</source>
          <target state="translated">インポートされたJavaScriptリソースは常に「as」キーワードを使用して修飾されます。JavaScriptリソースの修飾子は大文字で始まり、一意である必要があるため、修飾子とJavaScriptファイルの間には常に1対1のマッピングがあります。（これは、修飾子を &lt;code&gt;Date&lt;/code&gt; や &lt;code&gt;Math&lt;/code&gt; などの組み込みのJavaScriptオブジェクトと同じ名前にできないことも意味します）。</target>
        </trans-unit>
        <trans-unit id="99d044d9c559cc35a01b48d24159e07faf855129" translate="yes" xml:space="preserve">
          <source>Imported targets</source>
          <target state="translated">輸入されたターゲット</target>
        </trans-unit>
        <trans-unit id="11dafcf83eb318084b653400651f7c58f6eef584" translate="yes" xml:space="preserve">
          <source>Imported targets are created for each Qt module. Imported target names should be preferred instead of using a variable like Qt5&amp;lt;Module&amp;gt;&lt;a href=&quot;windows-requirements#libraries&quot;&gt;_LIBRARIES&lt;/a&gt; in CMake commands such as &lt;code&gt;target_link_libraries&lt;/code&gt;. The actual path to the library can be obtained using the &lt;a href=&quot;https://cmake.org/cmake/help/latest/prop_tgt/LOCATION.html#&quot;&gt;LOCATION property&lt;/a&gt;:</source>
          <target state="translated">インポートされたターゲットは、Qtモジュールごとに作成されます。インポートされたターゲット名が代わりQt5 &amp;lt;モジュール&amp;gt;のような変数を使用するのが好ましいことべき&lt;a href=&quot;windows-requirements#libraries&quot;&gt;_LIBRARIES&lt;/a&gt; CMakeの中のようなコマンド &lt;code&gt;target_link_libraries&lt;/code&gt; 。ライブラリへの実際のパスは、&lt;a href=&quot;https://cmake.org/cmake/help/latest/prop_tgt/LOCATION.html#&quot;&gt;LOCATIONプロパティ&lt;/a&gt;を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="607d7e9258bfe0eecc003608448f1db24d5ec4d3" translate="yes" xml:space="preserve">
          <source>Imported targets are created with the configurations Qt was configured with. That is, if Qt was configured with the -debug switch, an imported target with the configuration DEBUG will be created. If Qt was configured with the -release switch an imported target with the configuration RELEASE will be created. If Qt was configured with the -debug-and-release switch (the default on windows), then imported targets will be created with both RELEASE and DEBUG configurations.</source>
          <target state="translated">インポートされたターゲットは、Qtが設定された設定で作成されます。つまり、Qt が -debug スイッチで設定されている場合、設定 DEBUG でインポートされたターゲットが作成されます。Qt が -release スイッチで設定されている場合、RELEASE 設定のインポートされたターゲットが作成されます。Qt が -debug-and-release スイッチ(Windows のデフォルト)で設定されている場合、RELEASE と DEBUG の両方の設定でインポートされたターゲットが作成されます。</target>
        </trans-unit>
        <trans-unit id="2b572b92b7abf6a1404a9607ac9225599106712c" translate="yes" xml:space="preserve">
          <source>Importing JavaScript Resources In QML</source>
          <target state="translated">QML での JavaScript リソースのインポート</target>
        </trans-unit>
        <trans-unit id="a07d3b9984c3a9bb2a032c822da70a93c7d5a86f" translate="yes" xml:space="preserve">
          <source>Importing JavaScript Resources in QML</source>
          <target state="translated">QML での JavaScript リソースのインポート</target>
        </trans-unit>
        <trans-unit id="74f90fa59d49413174a28e0868f3b476bbe060db" translate="yes" xml:space="preserve">
          <source>Importing QML Document Directories</source>
          <target state="translated">QML文書ディレクトリのインポート</target>
        </trans-unit>
        <trans-unit id="e614479e838d142f1dc08e45e6aa8226fbf00096" translate="yes" xml:space="preserve">
          <source>Importing Qt Widgets</source>
          <target state="translated">Qt ウィジェットのインポート</target>
        </trans-unit>
        <trans-unit id="d2dd5e07565ac8d8ed0199fb178fb1a5b42ff516" translate="yes" xml:space="preserve">
          <source>Importing Types Defined Outside the Current Directory</source>
          <target state="translated">現在のディレクトリ以外で定義されたタイプをインポートする</target>
        </trans-unit>
        <trans-unit id="6436b24c8b5937824d5797f0351890daff53b895" translate="yes" xml:space="preserve">
          <source>Importing a JavaScript Resource from Another JavaScript Resource</source>
          <target state="translated">別のJavaScriptリソースからJavaScriptリソースをインポートする</target>
        </trans-unit>
        <trans-unit id="c8de67a37292988e83a4969d75ac4ef4efa0ba8a" translate="yes" xml:space="preserve">
          <source>Importing a JavaScript Resource from a QML Document</source>
          <target state="translated">QML ドキュメントから JavaScript リソースをインポートする</target>
        </trans-unit>
        <trans-unit id="2278e17098d88be8c7b169c057329a0036bb6869" translate="yes" xml:space="preserve">
          <source>Importing a QML Module from a JavaScript Resource</source>
          <target state="translated">JavaScript リソースから QML モジュールをインポートする</target>
        </trans-unit>
        <trans-unit id="6bba5262454eb84a52bf916ea0754dee9d03ca43" translate="yes" xml:space="preserve">
          <source>Importing and Using the QtQuick Module</source>
          <target state="translated">QtQuick モジュールのインポートと使用</target>
        </trans-unit>
        <trans-unit id="715536e90c655a21594c2ca6c3c6c79f182e85fc" translate="yes" xml:space="preserve">
          <source>Importing into a Qualified Local Namespace</source>
          <target state="translated">適格ローカル名前空間へのインポート</target>
        </trans-unit>
        <trans-unit id="e42328ac01cd03a47978f064c93b392caf3861f0" translate="yes" xml:space="preserve">
          <source>Imports</source>
          <target state="translated">Imports</target>
        </trans-unit>
        <trans-unit id="206133b58740639c059f5c141eb877a2e5a78b92" translate="yes" xml:space="preserve">
          <source>Imports Within JavaScript Resources</source>
          <target state="translated">JavaScript リソース内でのインポート</target>
        </trans-unit>
        <trans-unit id="20d1724dc0065a29a73e7b81b2e4c1ad97a8259e" translate="yes" xml:space="preserve">
          <source>Imports a PKCS#12 (pfx) file from the specified</source>
          <target state="translated">PKCS#12 (pfx)ファイルを指定された</target>
        </trans-unit>
        <trans-unit id="6ec64477d61ce39f7adb564802340feafc5c3403" translate="yes" xml:space="preserve">
          <source>Imports the module located at</source>
          <target state="translated">にあるモジュールをインポートします。</target>
        </trans-unit>
        <trans-unit id="a609773be3db299eb3ee92dbb63b3af44ab307f6" translate="yes" xml:space="preserve">
          <source>Imports the node</source>
          <target state="translated">ノードをインポートします。</target>
        </trans-unit>
        <trans-unit id="c63b46833cf99c262fb11d741881043c6481c791" translate="yes" xml:space="preserve">
          <source>Imports the plugin named</source>
          <target state="translated">という名前のプラグインをインポートします。</target>
        </trans-unit>
        <trans-unit id="47ee6ecf0c2b2b386e6e8d2bd53dba4baea22e01" translate="yes" xml:space="preserve">
          <source>Improving Performance</source>
          <target state="translated">パフォーマンスの向上</target>
        </trans-unit>
        <trans-unit id="aef36502d67b0520654deb764dd055a7e905cfdd" translate="yes" xml:space="preserve">
          <source>In</source>
          <target state="translated">In</target>
        </trans-unit>
        <trans-unit id="ef7a9eb24298b4d4021043721623ae7468909079" translate="yes" xml:space="preserve">
          <source>In 4.6, an internal template class &lt;code&gt;QStringBuilder&lt;/code&gt; has been added along with a few helper functions. This class is marked internal and does not appear in the documentation, because you aren't meant to instantiate it in your code. Its use will be automatic, as described below. The class is found in &lt;code&gt;src/corelib/tools/qstringbuilder.cpp&lt;/code&gt; if you want to have a look at it.</source>
          <target state="translated">4.6では、内部テンプレートクラス &lt;code&gt;QStringBuilder&lt;/code&gt; がいくつかのヘルパー関数と共に追加されました。このクラスは内部としてマークされており、ドキュメントに表示されません。これは、コード内でインスタンス化するためのものではないためです。以下で説明するように、その使用は自動的に行われます。 &lt;code&gt;src/corelib/tools/qstringbuilder.cpp&lt;/code&gt; なりたい場合、クラスはsrc / corelib / tools / qstringbuilder.cppにあります。</target>
        </trans-unit>
        <trans-unit id="326df58c22c2f4d956b599d5c76613f97da612d3" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;21-2-qtgui-qdocconf#&quot;&gt;qtgui.qdocconf&lt;/a&gt;:</source>
          <target state="translated">では&lt;a href=&quot;21-2-qtgui-qdocconf#&quot;&gt;qtgui.qdocconf&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="fc97e869e1ad7c93a414a67faa3bae4ef8434220" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;designer-buddy-mode#&quot;&gt;Buddy Editing Mode&lt;/a&gt;, buddy widgets can be assigned to label widgets to help them handle keyboard focus correctly.</source>
          <target state="translated">で&lt;a href=&quot;designer-buddy-mode#&quot;&gt;バディ編集モード&lt;/a&gt;、バディウィジェットは正しくハンドルキーボードフォーカスを支援するためにラベルウィジェットに割り当てることができます。</target>
        </trans-unit>
        <trans-unit id="f6dd39d6827fd65d615b8a4204e31b579aead189" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;designer-connection-mode#&quot;&gt;Signals and Slots&lt;/a&gt; mode, we can connect widgets together using Qt's signals and slots mechanism. To switch to this mode, press &lt;b&gt;F4&lt;/b&gt;.</source>
          <target state="translated">で&lt;a href=&quot;designer-connection-mode#&quot;&gt;シグナルとスロットの&lt;/a&gt;モード、私たちは一緒にQtのシグナルとスロットメカニズムを使用してウィジェットを接続することができます。このモードに切り替えるには、&lt;b&gt;F4を&lt;/b&gt;押します。</target>
        </trans-unit>
        <trans-unit id="befa89ac4b712f09deabc1ee7047cb13c4cc7064" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;designer-tab-order#&quot;&gt;Tab Order Editing Mode&lt;/a&gt;, we can set the order in which widgets receive the keyboard focus.</source>
          <target state="translated">で&lt;a href=&quot;designer-tab-order#&quot;&gt;タブ順序編集モード&lt;/a&gt;、我々は、ウィジェットがキーボードフォーカスを受け取る順序を設定することができます。</target>
        </trans-unit>
        <trans-unit id="324244d6ee5e1a69e36c3fcbca02a16a7a7da391" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;designer-widget-mode#&quot;&gt;Edit&lt;/a&gt; mode, we can change the appearance of the form, add layouts, and edit the properties of each widget. To switch to this mode, press &lt;b&gt;F3&lt;/b&gt;. This is</source>
          <target state="translated">で&lt;a href=&quot;designer-widget-mode#&quot;&gt;、編集&lt;/a&gt;モードで、我々は、フォームの外観、追加のレイアウト、および編集各ウィジェットのプロパティを変更することができます。このモードに切り替えるには、&lt;b&gt;F3を&lt;/b&gt;押します。これは</target>
        </trans-unit>
        <trans-unit id="9c2a2a6f0f93bfb60fe81fe8c040ede3a3427534" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; any column, with the exception of an INTEGER PRIMARY KEY column, may be used to store any type of value. For instance, a column declared as INTEGER may contain an integer value in one row and a text value in the next. This is due to &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; associating the type of a value with the value itself rather than with the column it is stored in. A consequence of this is that the type returned by &lt;a href=&quot;qsqlfield#type&quot;&gt;QSqlField::type&lt;/a&gt;() only indicates the field's recommended type. No assumption of the actual type should be made from this and the type of the individual values should be checked.</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLiteの&lt;/a&gt;任意の列、INTEGER PRIMARY KEY列を除いて、値の任意の種類を格納するために使用することができます。たとえば、INTEGERとして宣言された列には、1つの行に整数値が含まれ、次の行にテキスト値が含まれる場合があります。これは、&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt;が値の型を、それが格納されている列ではなく値自体に関連付けるためです。この結果、&lt;a href=&quot;qsqlfield#type&quot;&gt;QSqlField :: type&lt;/a&gt;（）によって返される型は、フィールドの推奨される型のみを示します。これから実際のタイプを推測してはならず、個々の値のタイプを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="1050c82e66e2ca15d3f9f7d14444d78564000618" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;q3dbars&quot;&gt;Q3DBars&lt;/a&gt; from CameraPresetFrontBelow onward these only work for graphs including negative values. They act as Preset...Low for positive-only values.</source>
          <target state="translated">で&lt;a href=&quot;q3dbars&quot;&gt;Q3DBars&lt;/a&gt;負の値を含むグラフのこれらだけ作業以降CameraPresetFrontBelowから。それらは、正のみの値の場合はプリセット...低として機能します。</target>
        </trans-unit>
        <trans-unit id="6b3db1c4c3e1f5b8b9327970bcaa1c06fbddd100" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;, the notion of uppercase and lowercase and of which character is greater than or less than another character is locale dependent. This affects functions that support a case insensitive option or that compare or lowercase or uppercase their arguments. Case insensitive operations and comparisons will be accurate if both strings contain only ASCII characters. (If &lt;code&gt;$LC_CTYPE&lt;/code&gt; is set, most Unix systems do &quot;the right thing&quot;.) Functions that this affects include &lt;a href=&quot;qbytearray#contains&quot;&gt;contains&lt;/a&gt;(), &lt;a href=&quot;qbytearray#indexOf&quot;&gt;indexOf&lt;/a&gt;(), &lt;a href=&quot;qbytearray#lastIndexOf&quot;&gt;lastIndexOf&lt;/a&gt;(), operator&amp;lt;(), operator&amp;lt;=(), operator&amp;gt;(), operator&amp;gt;=(), &lt;a href=&quot;qbytearray#isLower&quot;&gt;isLower&lt;/a&gt;(), &lt;a href=&quot;qbytearray#isUpper&quot;&gt;isUpper&lt;/a&gt;(), &lt;a href=&quot;qbytearray#toLower&quot;&gt;toLower&lt;/a&gt;() and &lt;a href=&quot;qbytearray#toUpper&quot;&gt;toUpper&lt;/a&gt;().</source>
          <target state="translated">では&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;、大文字と小文字の文字が他の文字はロケールに依存するよりもより大きく以下であるという考え方。これは、大文字と小文字を区別しないオプションをサポートする関数、または引数を比較または小文字または大文字にする関数に影響します。両方の文字列にASCII文字のみが含まれている場合、大文字と小文字を区別しない操作と比較は正確になります。 （ &lt;code&gt;$LC_CTYPE&lt;/code&gt; が設定されている場合、ほとんどのUnixシステムは「正しいこと」を行います。）これに影響する関数に&lt;a href=&quot;qbytearray#contains&quot;&gt;は、&lt;/a&gt;（）、&lt;a href=&quot;qbytearray#indexOf&quot;&gt;indexOf&lt;/a&gt;（）、&lt;a href=&quot;qbytearray#lastIndexOf&quot;&gt;lastIndexOf&lt;/a&gt;（）、operator &amp;lt;（）、operator &amp;lt;=（）、operator&amp;gt;（）が含まれます、operator&amp;gt; =（）、&lt;a href=&quot;qbytearray#isLower&quot;&gt;isLower&lt;/a&gt;（）、&lt;a href=&quot;qbytearray#isUpper&quot;&gt;isUpper&lt;/a&gt;（）、&lt;a href=&quot;qbytearray#toLower&quot;&gt;toLower&lt;/a&gt;（）および&lt;a href=&quot;qbytearray#toUpper&quot;&gt;toUpper&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="5bc9e99a66225747d294b3acd8055641ed98310b" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;qml-qtquick-borderimage&quot;&gt;BorderImage&lt;/a&gt;, this property is read-only.</source>
          <target state="translated">で&lt;a href=&quot;qml-qtquick-borderimage&quot;&gt;BorderImage&lt;/a&gt;、このプロパティは読み取り専用です。</target>
        </trans-unit>
        <trans-unit id="f4f7b3d5772d8f9ff07fed8bd3c99db10e91db64" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;qopenglwidget#paintGL&quot;&gt;paintGL&lt;/a&gt;() the current context is always accessible by caling &lt;a href=&quot;qopenglcontext#currentContext&quot;&gt;QOpenGLContext::currentContext&lt;/a&gt;(). From this context an already initialized, ready-to-be-used &lt;a href=&quot;https://doc.qt.io/qt-5.13/qopenglfunctions.html&quot;&gt;QOpenGLFunctions&lt;/a&gt; instance is retrievable by calling &lt;a href=&quot;qopenglcontext#functions&quot;&gt;QOpenGLContext::functions&lt;/a&gt;(). An alternative to prefixing every GL call is to inherit from &lt;a href=&quot;https://doc.qt.io/qt-5.13/qopenglfunctions.html&quot;&gt;QOpenGLFunctions&lt;/a&gt; and call &lt;a href=&quot;https://doc.qt.io/qt-5.13/qopenglfunctions.html#initializeOpenGLFunctions&quot;&gt;QOpenGLFunctions::initializeOpenGLFunctions&lt;/a&gt;() in &lt;a href=&quot;qopenglwidget#initializeGL&quot;&gt;initializeGL&lt;/a&gt;().</source>
          <target state="translated">で&lt;a href=&quot;qopenglwidget#paintGL&quot;&gt;paintGL&lt;/a&gt;（）現在のコンテキストが常にcalingからアクセス可能である&lt;a href=&quot;qopenglcontext#currentContext&quot;&gt;QOpenGLContext :: currentContextを&lt;/a&gt;（）。このコンテキストから、すでに初期化され、すぐに使用できる&lt;a href=&quot;https://doc.qt.io/qt-5.13/qopenglfunctions.html&quot;&gt;QOpenGLFunctions&lt;/a&gt;インスタンスを取得するには、&lt;a href=&quot;qopenglcontext#functions&quot;&gt;QOpenGLContext :: functions&lt;/a&gt;（）を呼び出します。すべてのGLコールを前置する代わりに、継承にある&lt;a href=&quot;https://doc.qt.io/qt-5.13/qopenglfunctions.html&quot;&gt;QOpenGLFunctions&lt;/a&gt;、コール&lt;a href=&quot;https://doc.qt.io/qt-5.13/qopenglfunctions.html#initializeOpenGLFunctions&quot;&gt;QOpenGLFunctions :: initializeOpenGLFunctions&lt;/a&gt;（）に&lt;a href=&quot;qopenglwidget#initializeGL&quot;&gt;initializeGL&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="e22d59b4ac15f2934ae0f539de702d29edbada1a" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;qopenglwidget#paintGL&quot;&gt;paintGL&lt;/a&gt;(), instead of issuing OpenGL commands, construct a &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; object for use on the widget.</source>
          <target state="translated">&lt;a href=&quot;qopenglwidget#paintGL&quot;&gt;paintGL&lt;/a&gt;代わりのOpenGLコマンドを発行する（）、構築&lt;a href=&quot;qpainter&quot;&gt;QPainterのを&lt;/a&gt;ウィジェットで使用するためのオブジェクト。</target>
        </trans-unit>
        <trans-unit id="102f20572c1558e58f97f35a68a42d4742462282" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;qpagelayout#Mode-enum&quot;&gt;FullPageMode&lt;/a&gt; the current margins and minimum margins are not taken into account. The paintable rectangle is the full page rectangle, and the current margins can be set to any values regardless of the minimum margins and page size.</source>
          <target state="translated">では&lt;a href=&quot;qpagelayout#Mode-enum&quot;&gt;FullPageMode&lt;/a&gt;現在の余白と最小マージンは考慮されません。ペイント可能な四角形はページ全体の四角形であり、現在の余白は、最小の余白やページサイズに関係なく、任意の値に設定できます。</target>
        </trans-unit>
        <trans-unit id="4533bb0f381ac4db27f694953828d813df5eb651" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt;, apart from within character classes, &lt;code&gt;^&lt;/code&gt; always signifies the start of the string, so carets must always be escaped unless used for that purpose. In Perl the meaning of caret varies automagically depending on where it occurs so escaping it is rarely necessary. The same applies to &lt;code&gt;$&lt;/code&gt; which in &lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; always signifies the end of the string.</source>
          <target state="translated">で&lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt;、別に文字クラスの中から、 &lt;code&gt;^&lt;/code&gt; 常に文字列の先頭を意味するので、その目的のために使用されない限り、キャレットは常にエスケープする必要があります。Perlでは、キャレットの意味はそれが発生する場所に応じて自動的に変化するため、エスケープする必要はほとんどありません。同じことが &lt;code&gt;$&lt;/code&gt; にも当てはまり、&lt;a href=&quot;qregexp&quot;&gt;QRegExpでは&lt;/a&gt;常に文字列の終わりを意味します。</target>
        </trans-unit>
        <trans-unit id="34c7461c83e0322301f1f0463aacd703e90a1ac4" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt;&lt;b&gt;.&lt;/b&gt; matches any character, therefore all &lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; regexps have the equivalent of Perl's &lt;code&gt;/s&lt;/code&gt; option. &lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; does not have an equivalent to Perl's &lt;code&gt;/m&lt;/code&gt; option, but this can be emulated in various ways for example by splitting the input into lines or by looping with a regexp that searches for newlines.</source>
          <target state="translated">で&lt;a href=&quot;qregexp&quot;&gt;QRegExp &lt;/a&gt;&lt;b&gt;。&lt;/b&gt;任意の文字に一致するため、すべての&lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt;正規表現には、Perlの &lt;code&gt;/s&lt;/code&gt; オプションに相当するものがあります。&lt;a href=&quot;qregexp&quot;&gt;QRegExpに&lt;/a&gt;はPerlの &lt;code&gt;/m&lt;/code&gt; オプションに相当するものはありませんが、これはさまざまな方法でエミュレートできます。たとえば、入力を行に分割したり、改行を検索する正規表現でループしたりできます。</target>
        </trans-unit>
        <trans-unit id="d78103a0bf29f3ac831f14a2cce77ea4ec4d796b" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;qsqltablemodel#EditStrategy-enum&quot;&gt;OnManualSubmit&lt;/a&gt;, on success the model will be repopulated. Any views presenting it will lose their selections.</source>
          <target state="translated">で&lt;a href=&quot;qsqltablemodel#EditStrategy-enum&quot;&gt;OnManualSubmit&lt;/a&gt;、成功したモデルが再作成されます。それを提示するビューは、選択を失います。</target>
        </trans-unit>
        <trans-unit id="0f03eae54f7019c0beb9b13d3a72c5ddc05e8d46" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt;, all expressions evaluate to a sequence of items, where each item is either an XML node or an atomic value. The query in the following snippet evaluates to sequence of five items.</source>
          <target state="translated">で&lt;a href=&quot;xmlprocessing#&quot;&gt;XQueryの&lt;/a&gt;、すべての式は、各項目がXMLノードまたは原子値のいずれかである項目の配列に評価します。次のスニペットのクエリは、5つのアイテムのシーケンスに評価されます。</target>
        </trans-unit>
        <trans-unit id="6782b899ab6ca676331734f74e7c9e743ad57f85" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;Employee&lt;/code&gt;'s</source>
          <target state="translated">では &lt;code&gt;Employee&lt;/code&gt; さん</target>
        </trans-unit>
        <trans-unit id="e0b0f3a86f2a2b1ee87ffd729f3f0a5da1700e61" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;QtQuick 2.0&lt;/code&gt;, support has been added to allow JavaScript resources to import other JavaScript resources and also QML type namespaces using a variation of the standard QML import syntax (where all of the previously described rules and qualifications apply).</source>
          <target state="translated">&lt;code&gt;QtQuick 2.0&lt;/code&gt; 、支持体は、JavaScriptのリソースが（前述のルールや資格の全ての適用あり）標準QMLインポート構文の変化を使用して、他のJavaScriptリソースともQML型名前空間をインポートできるようにするために追加されています。</target>
        </trans-unit>
        <trans-unit id="f002fd20f8e2ac83f670273f937d744bfb5c712d" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;main.cpp&lt;/code&gt;, we use a &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; to hold a replica of the remote object, and then instantiate a replica requestor object:</source>
          <target state="translated">で &lt;code&gt;main.cpp&lt;/code&gt; に、我々は使用&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointerを&lt;/a&gt;リモートオブジェクトの複製を保持し、その後、レプリカリクエスタオブジェクトをインスタンス化します：</target>
        </trans-unit>
        <trans-unit id="7ee66d17b8b208295a43cee0e9053ad98a73d31d" translate="yes" xml:space="preserve">
          <source>In C++ and Java, we write nested &lt;code&gt;for&lt;/code&gt; loops and recursive functions to traverse XML trees in search of elements of interest. In &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt;, we write these iterative and recursive algorithms with</source>
          <target state="translated">C ++およびJavaでは、ネストされた &lt;code&gt;for&lt;/code&gt; ループと再帰関数を記述して、目的の要素を検索してXMLツリーをトラバースします。&lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt;、我々はこれらの反復や再帰的なアルゴリズムを書きます</target>
        </trans-unit>
        <trans-unit id="b8246f73abc937e67247e5ba24850b15f3aaac07" translate="yes" xml:space="preserve">
          <source>In C++, a route query is performed using the &lt;a href=&quot;qgeoroutingmanager#calculateRoute&quot;&gt;calculate()&lt;/a&gt; method of the &lt;a href=&quot;qgeoroutingmanager&quot;&gt;QGeoRoutingManager&lt;/a&gt; class. The returned route reply can contain multiple routes to the same destination.</source>
          <target state="translated">C ++では、ルートクエリは&lt;a href=&quot;qgeoroutingmanager&quot;&gt;QGeoRoutingManager&lt;/a&gt;クラスの&lt;a href=&quot;qgeoroutingmanager#calculateRoute&quot;&gt;calculate（）&lt;/a&gt;メソッドを使用して実行されます。返されたルート応答には、同じ宛先への複数のルートを含めることができます。</target>
        </trans-unit>
        <trans-unit id="7523558bb10e86aa6ac1d9a9f29b12513317cc38" translate="yes" xml:space="preserve">
          <source>In C++, an address-to-coordinate query is performed using the &lt;a href=&quot;qgeocodingmanager#geocode&quot;&gt;geocode()&lt;/a&gt; method of the &lt;a href=&quot;qgeocodingmanager&quot;&gt;QGeoCodingManager&lt;/a&gt; class. For coordinate-to-address queries, the &lt;a href=&quot;qgeocodingmanager#reverseGeocode&quot;&gt;reverseGeocode()&lt;/a&gt; method is available on the same class. Instances of &lt;a href=&quot;qgeocodingmanager&quot;&gt;QGeoCodingManager&lt;/a&gt; are available via &lt;a href=&quot;qgeoserviceprovider&quot;&gt;QGeoServiceProvider&lt;/a&gt;.</source>
          <target state="translated">C ++では、住所から座標へのクエリは、&lt;a href=&quot;qgeocodingmanager&quot;&gt;QGeoCodingManager&lt;/a&gt;クラスの&lt;a href=&quot;qgeocodingmanager#geocode&quot;&gt;geocode（）&lt;/a&gt;メソッドを使用して実行されます。座標からアドレスへのクエリでは、&lt;a href=&quot;qgeocodingmanager#reverseGeocode&quot;&gt;reverseGeocode（）&lt;/a&gt;メソッドを同じクラスで使用できます。インスタンス&lt;a href=&quot;qgeocodingmanager&quot;&gt;QGeoCodingManagerは&lt;/a&gt;経由してご利用いただけます&lt;a href=&quot;qgeoserviceprovider&quot;&gt;QGeoServiceProvider&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9d63ba0bbdb26f139be11b6b67022482e1fc2523" translate="yes" xml:space="preserve">
          <source>In D-Bus, all method calls must generate a reply to the caller, unless the caller explicitly indicates otherwise (see &lt;a href=&quot;qdbusmessage#isReplyRequired&quot;&gt;isReplyRequired&lt;/a&gt;()). &lt;a href=&quot;qtdbus-index#&quot;&gt;QtDBus&lt;/a&gt; automatically generates such replies for any slots being called, but it also allows slots to indicate whether they will take responsibility of sending the reply at a later time, after the function has finished processing.</source>
          <target state="translated">D-Busでは、呼び出し元が明示的に別の指示をしない限り（&lt;a href=&quot;qdbusmessage#isReplyRequired&quot;&gt;isReplyRequired&lt;/a&gt;（）を参照）、すべてのメソッド呼び出しは呼び出し元への応答を生成する必要があります。&lt;a href=&quot;qtdbus-index#&quot;&gt;QtDBus&lt;/a&gt;は、呼び出されているすべてのスロットに対してこのような応答を自動的に生成しますが、関数が処理を完了した後で、スロットが応答の送信を担当するかどうかをスロットに示すこともできます。</target>
        </trans-unit>
        <trans-unit id="0c48781818edf5ae7431830c82f2ce26575af0fa" translate="yes" xml:space="preserve">
          <source>In GUI programming, when we ...</source>
          <target state="translated">GUIプログラミングでは、私たちは...</target>
        </trans-unit>
        <trans-unit id="31787f727b5520489db1141c1a2618ab4880194c" translate="yes" xml:space="preserve">
          <source>In GUI programming, when we change one widget, we often want another widget to be notified. More generally, we want objects of any kind to be able to communicate with one another. For example, if a user clicks a &lt;b&gt;Close&lt;/b&gt; button, we probably want the window's &lt;a href=&quot;qwidget#close&quot;&gt;close()&lt;/a&gt; function to be called.</source>
          <target state="translated">GUIプログラミングでは、あるウィジェットを変更するときに、別のウィジェットに通知することがよくあります。より一般的には、あらゆる種類のオブジェクトが互いに通信できるようにする必要があります。たとえば、ユーザーが&lt;b&gt;[閉じる&lt;/b&gt; ]ボタンをクリックした場合、おそらくウィンドウの&lt;a href=&quot;qwidget#close&quot;&gt;close（）&lt;/a&gt;関数を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="6f84352494b204af5b471d74c1ca517b2a721430" translate="yes" xml:space="preserve">
          <source>In IDE integrations, a list of the project's resource (.qrc) file can be activated, making them available to</source>
          <target state="translated">IDE統合では、プロジェクトのリソース(.qrc)ファイルのリストを有効にすることができます。</target>
        </trans-unit>
        <trans-unit id="62363fbd2cc3e4782808c14ad9017dcf0038e307" translate="yes" xml:space="preserve">
          <source>In INI files, &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; uses the &lt;code&gt;@&lt;/code&gt; character as a metacharacter in some contexts, to encode Qt-specific data types (e.g., &lt;code&gt;@Rect&lt;/code&gt;), and might therefore misinterpret it when it occurs in pure INI files.</source>
          <target state="translated">INIファイルでは、&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;は &lt;code&gt;@&lt;/code&gt; 文字を一部のコンテキストでメタ文字として使用してQt固有のデータ型（ &lt;code&gt;@Rect&lt;/code&gt; など）をエンコードするため、純粋なINIファイルで発生すると誤って解釈される可能性があります。</target>
        </trans-unit>
        <trans-unit id="905f97c6279f4dcfcd08709b37c0645cd9237913" translate="yes" xml:space="preserve">
          <source>In Linux/X11 platforms, Qt provides support for session management. Sessions allow events to be propagated to processes, for example, to notify when a shutdown occurs. The process and applications can then perform any necessary operations such as save open documents.</source>
          <target state="translated">Linux/X11 プラットフォームでは、Qt はセッション管理をサポートしています。セッションによって、例えばシャットダウンが発生したときに通知するなど、イベントをプロセスに伝播させることができます。その後、プロセスやアプリケーションは、開いているドキュメントを保存するなどの必要な操作を行うことができます。</target>
        </trans-unit>
        <trans-unit id="73d12a549b6815a3e8aedfb9e069dc81f7801462" translate="yes" xml:space="preserve">
          <source>In Makefile mode, qmake will generate a Makefile that is used to build the project. Additionally, the following options may be used in this mode to influence the way the project file is generated:</source>
          <target state="translated">Makefile モードでは、qmake はプロジェクトのビルドに使用される Makefile を生成します。さらに、このモードでは以下のオプションを使用して、プロジェクトファイルの生成方法に影響を与えることができます。</target>
        </trans-unit>
        <trans-unit id="2bc0d992d39dfda70e0f80268f798c93a5d51ef0" translate="yes" xml:space="preserve">
          <source>In QML,</source>
          <target state="translated">QMLでは。</target>
        </trans-unit>
        <trans-unit id="fe5505bb833d413930f5af4b4c8cd44370f07e50" translate="yes" xml:space="preserve">
          <source>In QML, a</source>
          <target state="translated">QMLでは</target>
        </trans-unit>
        <trans-unit id="22b722de1b0f5b29d1bf6d421694efa7e9f547a3" translate="yes" xml:space="preserve">
          <source>In QML, component instances connect their component scopes together to form a scope hierarchy. Component instances can directly access the component scopes of their ancestors.</source>
          <target state="translated">QML では、コンポーネント・インスタンスは、そのコンポーネント・スコープを連結してスコープ階層を形成します。コンポーネントインスタンスは、その祖先のコンポーネントスコープに直接アクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="4817b38a259ab07481a7c7925d3e1e9762e26743" translate="yes" xml:space="preserve">
          <source>In QML, property bindings result in a dependency between the properties of different objects.</source>
          <target state="translated">QMLでは、プロパティバインディングとは、異なるオブジェクトのプロパティ間の依存関係を意味します。</target>
        </trans-unit>
        <trans-unit id="d17cf5cce9a4ef8a72686f5c9a62f3434aeff0d5" translate="yes" xml:space="preserve">
          <source>In QML, the global object is constant - existing properties cannot be modified or deleted, and no new properties may be created.</source>
          <target state="translated">QMLでは、グローバルオブジェクトは不変であり、既存のプロパティを変更したり削除したりすることはできず、新規にプロパティを作成することもできません。</target>
        </trans-unit>
        <trans-unit id="45f9c39be1612fa3a972201b91a8e35401843622" translate="yes" xml:space="preserve">
          <source>In QML, we assign a string to the &lt;code&gt;baz&lt;/code&gt; property of &lt;code&gt;bar&lt;/code&gt;:</source>
          <target state="translated">QMLでは、文字列を &lt;code&gt;bar&lt;/code&gt; の &lt;code&gt;baz&lt;/code&gt; プロパティに割り当てます。</target>
        </trans-unit>
        <trans-unit id="75a5a20d18c763c9cbd9f4bc205562f8b91bd585" translate="yes" xml:space="preserve">
          <source>In Qt 4.2 and later, Qt Designer also includes a style sheet syntax highlighter and validator. The validator indicates if the syntax is valid or invalid, at the bottom left of the &lt;b&gt;Edit Style Sheet&lt;/b&gt; dialog.</source>
          <target state="translated">Qt 4.2以降では、Qt Designerにスタイルシート構文の蛍光ペンとバリデーターも含まれています。バリデーターは、&lt;b&gt;「スタイルシート&lt;/b&gt;の&lt;b&gt;編集」&lt;/b&gt;ダイアログの左下に、構文が有効か無効かを示します。</target>
        </trans-unit>
        <trans-unit id="e21f38741bf64f98b29bb902de48f675160b07c2" translate="yes" xml:space="preserve">
          <source>In Qt 4.3 and later, the alignment of the image image's position can be specified using relative or absolute position.</source>
          <target state="translated">Qt 4.3以降では、画像の位置合わせを相対位置と絶対位置で指定できるようになりました。</target>
        </trans-unit>
        <trans-unit id="2da1aaff06f6544e32c55ab157f670096cbb5521" translate="yes" xml:space="preserve">
          <source>In Qt 4.3 and later, the alignment of the image within the rectangle can be specified using &lt;a href=&quot;#image-position-prop&quot;&gt;image-position&lt;/a&gt;.</source>
          <target state="translated">Qt 4.3以降では、長方形内の&lt;a href=&quot;#image-position-prop&quot;&gt;画像の配置&lt;/a&gt;をimage-positionを使用して指定できます。</target>
        </trans-unit>
        <trans-unit id="8f5c9359a5865f79b998c5ec2448f1975acc0223" translate="yes" xml:space="preserve">
          <source>In Qt 4.4 and earlier, this disambiguation parameter was the preferred way to specify comments to translators.</source>
          <target state="translated">Qt 4.4 以前のバージョンでは、この曖昧性解消パラメータは翻訳者へのコメントを指定するための好ましい方法でした。</target>
        </trans-unit>
        <trans-unit id="7bd37077ffde2457133567f5d209d5f0f95ac3ec" translate="yes" xml:space="preserve">
          <source>In Qt 4.4, it was possible to use the static functions to show a sheet on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;. This is no longer supported in Qt 4.5. If you want this functionality, use &lt;a href=&quot;qprintdialog#open&quot;&gt;QPrintDialog::open&lt;/a&gt;().</source>
          <target state="translated">Qt 4.4では、静的関数を使用して&lt;a href=&quot;internationalization#macos&quot;&gt;macOSで&lt;/a&gt;シートを表示することが可能でした。これはQt 4.5ではサポートされなくなりました。この機能が必要な場合は、&lt;a href=&quot;qprintdialog#open&quot;&gt;QPrintDialog :: open&lt;/a&gt;（）を使用してください。</target>
        </trans-unit>
        <trans-unit id="9e1e9437c8cec7fc00d4f9e1a42fca433cba397e" translate="yes" xml:space="preserve">
          <source>In Qt 4.4, the capability was tied to the proxy type, but since Qt 4.5 it is possible to remove the capability of caching from a proxy by calling &lt;a href=&quot;qnetworkproxy#setCapabilities&quot;&gt;setCapabilities&lt;/a&gt;().</source>
          <target state="translated">Qt 4.4では機能がプロキシタイプに関連付けられていましたが、Qt 4.5以降では、&lt;a href=&quot;qnetworkproxy#setCapabilities&quot;&gt;setCapabilities&lt;/a&gt;（）を呼び出すことでプロキシからキャッシュ機能を削除できます。</target>
        </trans-unit>
        <trans-unit id="1301a851a486167f117da749b4b68c3edbaa10b8" translate="yes" xml:space="preserve">
          <source>In Qt 5 all platforms are created using the &lt;a href=&quot;qpa#&quot;&gt;Qt Platform Abstraction&lt;/a&gt; (QPA), which makes it easy to port Qt into a new operating system.</source>
          <target state="translated">Qt 5では、すべてのプラットフォームが&lt;a href=&quot;qpa#&quot;&gt;Qt Platform Abstraction&lt;/a&gt;（QPA）を使用して作成されているため、Qtを新しいオペレーティングシステムに簡単に移植できます。</target>
        </trans-unit>
        <trans-unit id="d1c2da74233eacfd350077f4f5a0ec7d5f2a4f31" translate="yes" xml:space="preserve">
          <source>In Qt 5.10, these handlers were introduced in a separate Qt.labs.handlers module. Now they are included with Qt Quick since 5.12. The pre-existing &lt;a href=&quot;qml-qtquick-keys&quot;&gt;Keys&lt;/a&gt; attached property is similar in concept, so we refer to the pointing-device-oriented handlers plus &lt;code&gt;Keys&lt;/code&gt; together as the set of Input Handlers. We expect to offer more attached-property use cases in future versions of Qt.</source>
          <target state="translated">Qt 5.10では、これらのハンドラーは別のQt.labs.handlersモジュールで導入されました。現在、5.12以降、Qt Quickに含まれています。既存の&lt;a href=&quot;qml-qtquick-keys&quot;&gt;Keys&lt;/a&gt;添付プロパティの概念は似ているため、ポインティングデバイス指向のハンドラーと &lt;code&gt;Keys&lt;/code&gt; まとめて、入力ハンドラーのセットと呼びます。Qtの将来のバージョンでは、より多くの添付プロパティの使用例を提供する予定です。</target>
        </trans-unit>
        <trans-unit id="8ae3434f467261f2c591e28d7ac56fb2359d209d" translate="yes" xml:space="preserve">
          <source>In Qt Creator, tested examples on iOS can be looked up. Use the &lt;code&gt;ios&lt;/code&gt; keyword to search for examples in the Qt Creator Welcome mode. Note that some examples may have limited functionality.</source>
          <target state="translated">Qt Creatorでは、iOSでテストされた例を検索できます。 &lt;code&gt;ios&lt;/code&gt; キーワードを使用して、Qt Creatorウェルカムモードで例を検索します。一部の例では機能が制限されている場合があります。</target>
        </trans-unit>
        <trans-unit id="2f7cb963098912f7677e39836c1fdad9458b8dc8" translate="yes" xml:space="preserve">
          <source>In Qt Quick 2.0, this property has minimal impact on performance.</source>
          <target state="translated">Qt Quick 2.0では、このプロパティはパフォーマンスへの影響を最小限に抑えています。</target>
        </trans-unit>
        <trans-unit id="a8c1d5254603872065c8e6712d0092447f70f7c3" translate="yes" xml:space="preserve">
          <source>In Qt Quick Controls 2, a style is essentially an interchangeable set of QML files within a single directory. There are three requirements for a style to be &lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls-2&quot;&gt;usable&lt;/a&gt;:</source>
          <target state="translated">Qt Quick Controls 2では、スタイルは基本的に1つのディレクトリ内の交換可能なQMLファイルのセットです。スタイルを&lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls-2&quot;&gt;使用&lt;/a&gt;するには、3つの要件があります。</target>
        </trans-unit>
        <trans-unit id="f58b06b0ad0e7908b9c680c9e77f233784db115a" translate="yes" xml:space="preserve">
          <source>In Qt Quick Controls 2, styles no longer provide components that are dynamically instantiated by controls, but controls themselves consist of item delegates that can be replaced. In effect, this means that delegates are Qt Quick items that are instantiated on the spot, as properties of the control, and are simply parented to the control.</source>
          <target state="translated">Qt Quick Controls 2 では、スタイルはコントロールによって動的にインスタンス化されるコンポーネントを提供しなくなりました。つまり、デリゲートは、コントロールのプロパティとしてその場でインスタンス化され、コントロールの親となる Qt Quick アイテムであることを意味します。</target>
        </trans-unit>
        <trans-unit id="e0ddb22c783ba2635ae916d9e01be57f2657a418" translate="yes" xml:space="preserve">
          <source>In Qt there is a often a need to represent the layout of the pixels in a graphics buffer. Internally &lt;a href=&quot;qpixelformat&quot;&gt;QPixelFormat&lt;/a&gt; stores everything in a 64 bit datastructure. This gives performance but also some limitations.</source>
          <target state="translated">Qtでは、グラフィックバッファー内のピクセルのレイアウトを表す必要があることがよくあります。内部的に&lt;a href=&quot;qpixelformat&quot;&gt;QPixelFormat&lt;/a&gt;はすべてを64ビットのデータ構造に格納します。これによりパフォーマンスが向上しますが、いくつかの制限もあります。</target>
        </trans-unit>
        <trans-unit id="63893ce74e6ced89c15bfc878e9d467f7a92faa1" translate="yes" xml:space="preserve">
          <source>In Qt versions before 5.4, this constructor was &lt;code&gt;explicit&lt;/code&gt;. In Qt 5.4 and later, it no longer is and can be used for C++11-style uniform initialization:</source>
          <target state="translated">5.4より前のQtバージョンでは、このコンストラクターは &lt;code&gt;explicit&lt;/code&gt; でした。Qt 5.4以降では、C ++ 11スタイルの統一された初期化には使用できなくなりました。</target>
        </trans-unit>
        <trans-unit id="414ba0c2c428e511ff72f14df0252cd424defcd3" translate="yes" xml:space="preserve">
          <source>In Qt, &lt;a href=&quot;qtabbar&quot;&gt;QTabBar&lt;/a&gt; uses the style to draw its tabs. Tabs exist either in a &lt;a href=&quot;qtabwidget&quot;&gt;QTabWidget&lt;/a&gt;, which contains a &lt;a href=&quot;qtabbar&quot;&gt;QTabBar&lt;/a&gt;, or as a separate bar. If the bar is not part of a tab widget, it draws its own base.</source>
          <target state="translated">Qtでは、&lt;a href=&quot;qtabbar&quot;&gt;QTabBar&lt;/a&gt;はスタイルを使用してタブを描画します。タブは、のいずれかで存在&lt;a href=&quot;qtabwidget&quot;&gt;QTabWidget&lt;/a&gt;含ま、&lt;a href=&quot;qtabbar&quot;&gt;QTabBarに&lt;/a&gt;、または別個のバーとして。バーがタブウィジェットの一部でない場合は、独自のベースを描画します。</target>
        </trans-unit>
        <trans-unit id="53fc45ccf8ff6c2c17d0ddf9b72209c858a2c8b1" translate="yes" xml:space="preserve">
          <source>In Qt, Unicode characters are 16-bit entities without any markup or structure. This class represents such an entity. It is lightweight, so it can be used everywhere. Most compilers treat it like an &lt;code&gt;unsigned short&lt;/code&gt;.</source>
          <target state="translated">Qtでは、Unicode文字はマークアップや構造のない16ビットエンティティです。このクラスはそのようなエンティティを表します。軽量なので、どこでも使えます。ほとんどのコンパイラは、それを &lt;code&gt;unsigned short&lt;/code&gt; のように扱います。</target>
        </trans-unit>
        <trans-unit id="c68161e5025664a0ac293a55a828704a0cbcad3a" translate="yes" xml:space="preserve">
          <source>In Qt, and in most applications that use Qt, most or all user-visible strings are stored using Unicode. Qt provides:</source>
          <target state="translated">Qt では、そして Qt を使用するほとんどのアプリケーションでは、ほとんど、あるいはすべてのユーザが見える文字列は Unicode を使用して格納されています。Qt は提供しています。</target>
        </trans-unit>
        <trans-unit id="eac7144094ff090daf359b45347bdcb9efd80947" translate="yes" xml:space="preserve">
          <source>In Qt, events are objects, derived from the abstract &lt;a href=&quot;qevent&quot;&gt;QEvent&lt;/a&gt; class, that represent things that have happened either within an application or as a result of outside activity that the application needs to know about. Events can be received and handled by any instance of a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclass, but they are especially relevant to widgets. This document describes how events are delivered and handled in a typical application.</source>
          <target state="translated">Qtでは、イベントは抽象&lt;a href=&quot;qevent&quot;&gt;QEvent&lt;/a&gt;クラスから派生したオブジェクトであり、アプリケーション内で、またはアプリケーションが知る必要のある外部アクティビティの結果として発生したことを表します。イベントは&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;サブクラスの任意のインスタンスで受信および処理できますが、特にウィジェットに関連しています。このドキュメントでは、一般的なアプリケーションでイベントが配信および処理される方法について説明します。</target>
        </trans-unit>
        <trans-unit id="849b14dff590398aba602de88700a986333573d3" translate="yes" xml:space="preserve">
          <source>In Qt, only the &lt;a href=&quot;qwidget#focusPolicy-prop&quot;&gt;QWidget::setFocusPolicy&lt;/a&gt;() function affects click-to-focus.</source>
          <target state="translated">Qtでは、&lt;a href=&quot;qwidget#focusPolicy-prop&quot;&gt;QWidget :: setFocusPolicy&lt;/a&gt;（）関数のみがクリックしてフォーカスに影響します。</target>
        </trans-unit>
        <trans-unit id="15fd12f867719ae4a4464c703001a54f55c8e80e" translate="yes" xml:space="preserve">
          <source>In Qt, printers are represented by &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt;, a paint device that provides functionality specific to printing, such as support for multiple pages and double-sided output. As a result, printing involves using a &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; to paint onto a series of pages in the same way that you would paint onto a custom widget or image.</source>
          <target state="translated">Qtでは、プリンターは&lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt;で表されます。QPrinterは、複数のページのサポートや両面出力など、印刷に固有の機能を提供するペイントデバイスです。その結果、印刷​​では、カスタムウィジェットまたはイメージにペイントするのと同じ方法で、&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;を使用して一連のページにペイントします。</target>
        </trans-unit>
        <trans-unit id="6249b7e9079795af469dac88f40752d05817431d" translate="yes" xml:space="preserve">
          <source>In Qt, the &lt;a href=&quot;qabstractbutton&quot;&gt;QAbstractButton&lt;/a&gt; base class provides most of the modes and other API, and &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; provides GUI logic. See &lt;a href=&quot;qabstractbutton&quot;&gt;QAbstractButton&lt;/a&gt; for more information about the API.</source>
          <target state="translated">Qtでは、&lt;a href=&quot;qabstractbutton&quot;&gt;QAbstractButton&lt;/a&gt;基本クラスがほとんどのモードと他のAPIを提供し、&lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt;がGUIロジックを提供します。APIの詳細については、&lt;a href=&quot;qabstractbutton&quot;&gt;QAbstractButton&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="694d95eac501dc5a240807b6c9dd7ba788a59f47" translate="yes" xml:space="preserve">
          <source>In Qt, the &lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; class was documented with the following QDoc comment:</source>
          <target state="translated">Qtでは、&lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt;クラスは次のQDocコメントで文書化されました：</target>
        </trans-unit>
        <trans-unit id="81e7f13c19bd0db5d160904a2301522c68a90150" translate="yes" xml:space="preserve">
          <source>In Qt, we have an alternative to the callback technique: We use signals and slots. A signal is emitted when a particular event occurs. Qt's widgets have many predefined signals, but we can always subclass widgets to add our own signals to them. A slot is a function that is called in response to a particular signal. Qt's widgets have many pre-defined slots, but it is common practice to subclass widgets and add your own slots so that you can handle the signals that you are interested in.</source>
          <target state="translated">Qtでは、コールバック技術に代わるものがあります。シグナルとスロットを使います。シグナルは、特定のイベントが発生したときに発行されます。Qtのウィジェットには多くの定義済みのシグナルがありますが、いつでもウィジェットをサブクラス化して独自のシグナルを追加することができます。スロットは、特定のシグナルに反応して呼び出される関数です。Qtのウィジェットにはあらかじめ定義されたスロットがたくさんありますが、気になるシグナルを扱えるようにウィジェットをサブクラス化して独自のスロットを追加するのが一般的です。</target>
        </trans-unit>
        <trans-unit id="b54bd41df643a393d2a3ca28c846808bdce80dd0" translate="yes" xml:space="preserve">
          <source>In Qt3D 5.9, &lt;a href=&quot;qt3drender-qmesh&quot;&gt;QMesh&lt;/a&gt; supports the following formats:</source>
          <target state="translated">Qt3D 5.9では、&lt;a href=&quot;qt3drender-qmesh&quot;&gt;QMesh&lt;/a&gt;は以下のフォーマットをサポートします：</target>
        </trans-unit>
        <trans-unit id="2126249dd3052dc8ea5cd46acab4c4eb0c44b8fb" translate="yes" xml:space="preserve">
          <source>In Qt3D 5.9, Mesh supports the following formats:</source>
          <target state="translated">Qt3D 5.9では、Meshは以下のフォーマットをサポートしています。</target>
        </trans-unit>
        <trans-unit id="c2523a8f7408dd870d0a1d43a52286838bb0d211" translate="yes" xml:space="preserve">
          <source>In RPC, the client makes a request and waits for the response.</source>
          <target state="translated">RPCでは、クライアントはリクエストを行い、レスポンスを待ちます。</target>
        </trans-unit>
        <trans-unit id="3cbbfe5979b17f206686250eb3f92a1fa75e464a" translate="yes" xml:space="preserve">
          <source>In RPC, the server doesn't push anything to the client unless it's in response to a request.</source>
          <target state="translated">RPCでは、リクエストに応答しない限り、サーバはクライアントに何もプッシュしません。</target>
        </trans-unit>
        <trans-unit id="45d3485287b17067f45fc7f064c5ee0de5a2fcc3" translate="yes" xml:space="preserve">
          <source>In TCP emulation mode, accepted clients use a single continuous byte stream for data transmission, and &lt;a href=&quot;qsctpserver&quot;&gt;QSctpServer&lt;/a&gt; acts like a plain &lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt;. Call &lt;a href=&quot;qtcpserver#nextPendingConnection&quot;&gt;nextPendingConnection&lt;/a&gt;() to accept the pending connection as a connected &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;. The function returns a pointer to a &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt; in &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket::ConnectedState&lt;/a&gt; that you can use for communicating with the client. This mode gives access only to basic SCTP protocol features. The socket transmits SCTP packets over IP at system level and interacts through the &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt; interface with the application.</source>
          <target state="translated">TCPエミュレーションモードでは、受け入れられたクライアントはデータ送信に単一の連続バイトストリームを使用し、&lt;a href=&quot;qsctpserver&quot;&gt;QSctpServer&lt;/a&gt;はプレーンな&lt;a href=&quot;qtcpserver&quot;&gt;QTcpServerの&lt;/a&gt;ように機能します。&lt;a href=&quot;qtcpserver#nextPendingConnection&quot;&gt;nextPendingConnection&lt;/a&gt;（）を呼び出して、保留中の接続を接続された&lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;として受け入れます。この関数はへのポインタを返す&lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;で&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket :: ConnectedState&lt;/a&gt;あなたがクライアントとの通信に使用することができます。このモードでは、基本的なSCTPプロトコル機能にのみアクセスできます。ソケットはIPを介してシステムレベルでSCTPパケットを送信し、&lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;インターフェイスを介してアプリケーションと対話します。</target>
        </trans-unit>
        <trans-unit id="44a49ce007c82f83e07df2ca6d842352ca2d5348" translate="yes" xml:space="preserve">
          <source>In TolerantMode, the parser has the following behaviour:</source>
          <target state="translated">TolerantModeでは、パーサは以下のような動作をします。</target>
        </trans-unit>
        <trans-unit id="9ce703d78bc316e614736f30d7696a28179319d2" translate="yes" xml:space="preserve">
          <source>In Unicode, comparison is not necessarily possible and case conversion is very difficult at best. Unicode, covering the &quot;entire&quot; world, also includes most of the world's case and sorting problems. operator==() and friends will do comparison based purely on the numeric Unicode value (code point) of the characters, and &lt;a href=&quot;qchar#toUpper&quot;&gt;toUpper&lt;/a&gt;() and &lt;a href=&quot;qchar#toLower&quot;&gt;toLower&lt;/a&gt;() will do case changes when the character has a well-defined uppercase/lowercase equivalent. For locale-dependent comparisons, use &lt;a href=&quot;qstring#localeAwareCompare&quot;&gt;QString::localeAwareCompare&lt;/a&gt;().</source>
          <target state="translated">Unicodeでは、比較は必ずしも可能ではなく、大文字と小文字の変換はせいぜい非常に困難です。 「全体」の世界をカバーするUnicodeには、世界のほとんどのケースとソートの問題も含まれています。 operator ==（）とそのフレンドは、文字のUnicode値（コードポイント）のみに基づいて比較を行います&lt;a href=&quot;qchar#toUpper&quot;&gt;。toUpper&lt;/a&gt;（）と&lt;a href=&quot;qchar#toLower&quot;&gt;toLower&lt;/a&gt;（）は、文字に大文字と小文字が明確に定義されている場合、大文字と小文字を変更します。ロケール依存の比較には、&lt;a href=&quot;qstring#localeAwareCompare&quot;&gt;QString :: localeAwareCompare&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="2af810392d2eed210bbaa3693616186a26defb42" translate="yes" xml:space="preserve">
          <source>In Unix, if the</source>
          <target state="translated">Unixでは</target>
        </trans-unit>
        <trans-unit id="494e9f241ce2d3b45a99d226ba6b7caf13fad469" translate="yes" xml:space="preserve">
          <source>In Windows a request for the &quot;Courier&quot; font is automatically changed to &quot;Courier New&quot;, an improved version of Courier that allows for smooth scaling. The older &quot;Courier&quot; bitmap font can be selected by setting the &lt;a href=&quot;qfont#StyleStrategy-enum&quot;&gt;PreferBitmap&lt;/a&gt; style strategy (see &lt;a href=&quot;qfont#setStyleStrategy&quot;&gt;setStyleStrategy&lt;/a&gt;()).</source>
          <target state="translated">Windowsでは、「Courier」フォントの要求が自動的に「Courier New」に変更されます。これは、スムーズなスケーリングを可能にするCourierの改良版です。以前の「Courier」ビットマップフォントは、&lt;a href=&quot;qfont#StyleStrategy-enum&quot;&gt;PreferBitmap&lt;/a&gt;スタイル戦略を設定することで選択できます（&lt;a href=&quot;qfont#setStyleStrategy&quot;&gt;setStyleStrategy&lt;/a&gt;（）を参照）。</target>
        </trans-unit>
        <trans-unit id="6ce2ce9fe5778060c4194ef00f287de9d761cae7" translate="yes" xml:space="preserve">
          <source>In Windows,</source>
          <target state="translated">Windowsでは。</target>
        </trans-unit>
        <trans-unit id="9bf983d41771df979f4153d3847cee83fa0e0748" translate="yes" xml:space="preserve">
          <source>In a &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt;</source>
          <target state="translated">で&lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;推移&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6653e14008f4417e834970c4961ea469d9475daf" translate="yes" xml:space="preserve">
          <source>In a &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; with stickyFocus set to true, focus will remain unchanged when the user clicks into the scene background or on an item that does not accept focus. Otherwise, focus will be cleared.</source>
          <target state="translated">stickyFocusをtrueに設定した&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;では、ユーザーがシーンの背景をクリックするか、フォーカスを受け入れないアイテムをクリックしても、フォーカスは変更されません。それ以外の場合、フォーカスはクリアされます。</target>
        </trans-unit>
        <trans-unit id="f7eb4b68c9bdf8cfec5b4299db1dd99f11fbebbc" translate="yes" xml:space="preserve">
          <source>In a &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt;</source>
          <target state="translated">で&lt;a href=&quot;qml-qtquick-behavior&quot;&gt;動作&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9c4518881d0fae2553c0574fe79a4ce737d3d4d5" translate="yes" xml:space="preserve">
          <source>In a PSK handshake, the client must derive a key, which must match the key set on the server. The exact algorithm of deriving the key depends on the application; however, for this purpose, the server may send an</source>
          <target state="translated">PSK ハンドシェイクでは、クライアントは鍵を導出しなければならず、その鍵はサーバに設定された鍵と一致しなければなりません。鍵を導出する正確なアルゴリズムはアプリケーションに依存しますが、この目的のためにサーバから</target>
        </trans-unit>
        <trans-unit id="6218f8eee9e61e6aa5151636d0b2ccf7e487e310" translate="yes" xml:space="preserve">
          <source>In a Unicode context some positions in the text are not valid cursor positions, because the position is inside a Unicode surrogate or a grapheme cluster.</source>
          <target state="translated">Unicodeコンテキストでは、テキスト内のいくつかの位置は、Unicodeサロゲートや書記素クラスタ内にあるため、有効なカーソル位置ではありません。</target>
        </trans-unit>
        <trans-unit id="5c39f0e8ca68705256be1acacf31347f7302d59a" translate="yes" xml:space="preserve">
          <source>In a Window without a tab bar, toolbar, or URL bar.</source>
          <target state="translated">タブバー、ツールバー、URLバーのないウィンドウで。</target>
        </trans-unit>
        <trans-unit id="f5da8f790fb4231ba27c98ca26644ab6a296d548" translate="yes" xml:space="preserve">
          <source>In a class that uses &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtuitools-module.html&quot;&gt;QtUiTools&lt;/a&gt; to build its user interface at run time, we can locate objects in the form using &lt;a href=&quot;qobject#findChild&quot;&gt;QObject::findChild&lt;/a&gt;(). For example, in the following code, we locate some components based on their object names and widget types:</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtuitools-module.html&quot;&gt;QtUiTools&lt;/a&gt;を使用して実行時にユーザーインターフェイスを構築するクラスでは、&lt;a href=&quot;qobject#findChild&quot;&gt;QObject :: findChild&lt;/a&gt;（）を使用してフォーム内のオブジェクトを見つけることができます。たとえば、次のコードでは、オブジェクト名とウィジェットタイプに基づいていくつかのコンポーネントを検索しています。</target>
        </trans-unit>
        <trans-unit id="5aa355897d713d5ad162616e9f25066da691a1b2" translate="yes" xml:space="preserve">
          <source>In a data-driven test, marks the row associated with</source>
          <target state="translated">データ駆動型テストでは、次の行に関連する行をマークします。</target>
        </trans-unit>
        <trans-unit id="32b02425d9853ce65d20ccf60cd781de0c25f0fa" translate="yes" xml:space="preserve">
          <source>In a dialog, only one push button at a time can be the default button. This button is then displayed with an additional frame (depending on the GUI style).</source>
          <target state="translated">ダイアログでは、一度に1つのプッシュボタンだけをデフォルトボタンにすることができます。このボタンはその後、追加のフレームで表示されます(GUIスタイルによって異なります)。</target>
        </trans-unit>
        <trans-unit id="5840fc04c775cb5eafc17840ec2593d69d5e757d" translate="yes" xml:space="preserve">
          <source>In a dialog, you might create two data entry widgets and a label for each, and set up the geometry layout so each label is just to the left of its data entry widget (its &quot;buddy&quot;), for example:</source>
          <target state="translated">ダイアログでは、2つのデータ入力ウィジェットとラベルを作成し、それぞれのラベルがデータ入力ウィジェットの左側に来るようにジオメトリレイアウトを設定することができます。</target>
        </trans-unit>
        <trans-unit id="0223a182442f7895c0406cf184e3f8f02061a818" translate="yes" xml:space="preserve">
          <source>In a directory listed in the &lt;code&gt;QMAKEFEATURES&lt;/code&gt; environment variable that contains a list of directories delimited by the platform's path list separator (colon for Unix, semicolon for Windows).</source>
          <target state="translated">プラットフォームのパスリスト区切り文字（Unixの場合はコロン、Windowsの場合はセミコロン）で区切られたディレクトリのリストを含む &lt;code&gt;QMAKEFEATURES&lt;/code&gt; 環境変数にリストされているディレクトリ。</target>
        </trans-unit>
        <trans-unit id="65e4400a6f0cc6b23439b153bd0bcdfaa94a1486" translate="yes" xml:space="preserve">
          <source>In a directory listed in the &lt;code&gt;QMAKEFEATURES&lt;/code&gt; property variable that contains a list of directories delimited by the platform's path list separator.</source>
          <target state="translated">プラットフォームのパスリストセパレーターで区切られたディレクトリのリストを含む &lt;code&gt;QMAKEFEATURES&lt;/code&gt; プロパティ変数にリストされているディレクトリ。</target>
        </trans-unit>
        <trans-unit id="3ff5c7a849ff5c8fe8062e09e1d7738485395550" translate="yes" xml:space="preserve">
          <source>In a features directory residing beneath the directory provided by the &lt;a href=&quot;qmake-environment-reference#qmakespec&quot;&gt;QMAKESPEC&lt;/a&gt; environment variable. For example: &lt;code&gt;$QMAKESPEC/&amp;lt;features&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;qmake-environment-reference#qmakespec&quot;&gt;QMAKESPEC&lt;/a&gt;環境変数によって提供されるディレクトリの下にあるfeaturesディレクトリ。例： &lt;code&gt;$QMAKESPEC/&amp;lt;features&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f60fa36c0fdf26b6763bb3e61aff44f2c4143e32" translate="yes" xml:space="preserve">
          <source>In a features directory residing in the &lt;code&gt;data_install/mkspecs&lt;/code&gt; directory. For example: &lt;code&gt;data_install/mkspecs/&amp;lt;features&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">機能ディレクトリでに存在する &lt;code&gt;data_install/mkspecs&lt;/code&gt; のディレクトリ。例： &lt;code&gt;data_install/mkspecs/&amp;lt;features&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="074d7f8495491bc45054ca37812e0a8211941cb7" translate="yes" xml:space="preserve">
          <source>In a features directory residing within a &lt;code&gt;mkspecs&lt;/code&gt; directory. &lt;code&gt;mkspecs&lt;/code&gt; directories can be located beneath any of the directories listed in the &lt;code&gt;QMAKEPATH&lt;/code&gt; environment variable that contains a list of directories delimited by the platform's path list separator. For example: &lt;code&gt;$QMAKEPATH/mkspecs/&amp;lt;features&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;mkspecs&lt;/code&gt; ディレクトリ内にあるfeaturesディレクトリ。 &lt;code&gt;mkspecs&lt;/code&gt; ディレクトリは、プラットフォームのパスリスト区切り文字で区切られたディレクトリのリストを含む &lt;code&gt;QMAKEPATH&lt;/code&gt; 環境変数にリストされているディレクトリの下に配置できます。例： &lt;code&gt;$QMAKEPATH/mkspecs/&amp;lt;features&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="057beeea1f96dcb8cf250e01fe97b0226a7d338e" translate="yes" xml:space="preserve">
          <source>In a features directory that exists as a sibling of the directory specified by the &lt;code&gt;QMAKESPEC&lt;/code&gt; environment variable. For example: &lt;code&gt;$QMAKESPEC/../&amp;lt;features&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;QMAKESPEC&lt;/code&gt; 環境変数で指定されたディレクトリの兄弟として存在するfeaturesディレクトリ。例： &lt;code&gt;$QMAKESPEC/../&amp;lt;features&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5456bb8b747a03034dc4d04d4a515509b5440144" translate="yes" xml:space="preserve">
          <source>In a framework project, this variable contains the name to be used for the framework that is built.</source>
          <target state="translated">フレームワークプロジェクトでは、この変数には構築されるフレームワークに使用される名前が含まれます。</target>
        </trans-unit>
        <trans-unit id="cf0f5be9f92923592abdfcf59ee582bc84bb5458" translate="yes" xml:space="preserve">
          <source>In a future version, some may be marked as deploy-time static and be moved during the deployment step as an optimization. As selectors come with a performance cost, it is recommended to avoid their use in circumstances involving performance-critical code.</source>
          <target state="translated">将来のバージョンでは、いくつかのセレクタはデプロイ時に静的なものとしてマークされ、最適化のためにデプロイステップ中に移動されるかもしれません。セレクタにはパフォーマンス コストがかかるため、パフォーマンスが重要なコードが含まれる状況では、セレクタの使用は避けることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="57f591bcef10c6dbe2444406829777a8fc30da46" translate="yes" xml:space="preserve">
          <source>In a multi-process system, if one client has a memory leak and consumes lots of memory, that memory is recovered when that client exits. In contrast with single-process, the memory leak remains until the entire system restarts.</source>
          <target state="translated">マルチプロセスシステムでは、1 つのクライアントでメモリリークが発生して大量のメモリを消費した場合、そのクライアントが終了したときにそのメモリが回復されます。シングルプロセスとは対照的に、メモリリークはシステム全体が再起動するまで残ります。</target>
        </trans-unit>
        <trans-unit id="b797d3e2bc0d1169f32746140230ecfa781372a8" translate="yes" xml:space="preserve">
          <source>In a non-const member function of &lt;code&gt;Employee&lt;/code&gt;, whenever the</source>
          <target state="translated">&lt;code&gt;Employee&lt;/code&gt; の非constメンバー関数では、いつでも</target>
        </trans-unit>
        <trans-unit id="8af648be3237f594b90af346057fd024db5cd072" translate="yes" xml:space="preserve">
          <source>In a non-exclusive group, checking and unchecking actions does not affect the other actions in the group. Furthermore, the value of the &lt;a href=&quot;qml-qtquick-controls2-actiongroup#checkedAction-prop&quot;&gt;checkedAction&lt;/a&gt; property is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">非排他グループでは、アクションのチェックおよびチェック解除は、グループ内の他のアクションには影響しません。さらに、&lt;a href=&quot;qml-qtquick-controls2-actiongroup#checkedAction-prop&quot;&gt;checkedAction&lt;/a&gt;プロパティの値は &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ecc1085249b660e214f6ce7b1f833baaba59a9dc" translate="yes" xml:space="preserve">
          <source>In a non-exclusive group, checking and unchecking buttons does not affect the other buttons in the group. Furthermore, the value of the &lt;a href=&quot;qml-qtquick-controls2-buttongroup#checkedButton-prop&quot;&gt;checkedButton&lt;/a&gt; property is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">非排他的なグループでは、ボタンをオンまたはオフにしても、グループ内の他のボタンには影響しません。さらに、&lt;a href=&quot;qml-qtquick-controls2-buttongroup#checkedButton-prop&quot;&gt;checkedButton&lt;/a&gt;プロパティの値は &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="47c8a951ead74ffc551cf228f129ac458a517bde" translate="yes" xml:space="preserve">
          <source>In a project file, variables are used to hold lists of strings. In the simplest projects, these variables inform qmake about the configuration options to use, or supply filenames and paths to use in the build process.</source>
          <target state="translated">プロジェクトファイルでは、変数は文字列のリストを保持するために使用されます。最も単純なプロジェクトでは、これらの変数は qmake に使用する設定オプションを知らせたり、ビルドプロセスで使用するファイル名やパスを提供したりします。</target>
        </trans-unit>
        <trans-unit id="c6d745760babbf9ff3b6f363a6bbf25b6fc4996b" translate="yes" xml:space="preserve">
          <source>In a project with multiple sub-projects (for example, Qt modules), each sub-project typically defines its own landing page while the same home page is used across all sub-projects.</source>
          <target state="translated">複数のサブプロジェクト(例えば Qt モジュール)を持つプロジェクトでは、通常、各サブプロジェクトは独自のランディングページを定義しますが、すべてのサブプロジェクトで同じホームページが使用されます。</target>
        </trans-unit>
        <trans-unit id="50a12001eea6b5a938330a3657e270c884c78bb9" translate="yes" xml:space="preserve">
          <source>In a read-only text edit the user can only navigate through the text and select text; modifying the text is not possible.</source>
          <target state="translated">読み取り専用のテキスト編集では、ユーザーはテキストをナビゲートしてテキストを選択することしかできません。</target>
        </trans-unit>
        <trans-unit id="5c9aacdc19410c07bfb1fad74e785fca733026bd" translate="yes" xml:space="preserve">
          <source>In a real world scenario, you do not want to have dependencies of the application making use of the custom widgets to the</source>
          <target state="translated">現実世界のシナリオでは、カスタムウィジェットを利用したアプリケーションの依存関係を</target>
        </trans-unit>
        <trans-unit id="35202bd5c646f9ca02c711f689dea2f022787aa8" translate="yes" xml:space="preserve">
          <source>In a separate Window.</source>
          <target state="translated">別ウィンドウで</target>
        </trans-unit>
        <trans-unit id="e66b37a78da29f7ea0ca0a0b99d6191a01fd3bdc" translate="yes" xml:space="preserve">
          <source>In a signal handler</source>
          <target state="translated">シグナルハンドラでは</target>
        </trans-unit>
        <trans-unit id="f70847208d54651f184f1d885d85b25a4cf196b7" translate="yes" xml:space="preserve">
          <source>In a similar manner only the center of a bounding box is taken into consideration when searching. The boundaries of the box are not honored.</source>
          <target state="translated">同様に、検索時には境界ボックスの中心のみが考慮されます。枠の境界は無視されます。</target>
        </trans-unit>
        <trans-unit id="124eb1a9a370c1e5f9d89da45e2d578d93580351" translate="yes" xml:space="preserve">
          <source>In a similar way, you can later use your customized XML file:</source>
          <target state="translated">同様の方法で、後でカスタマイズしたXMLファイルを使用することができます。</target>
        </trans-unit>
        <trans-unit id="3153a2a6f46323be3744bca7b05701c4ca2608a9" translate="yes" xml:space="preserve">
          <source>In a single-process system, all clients can access each other's memory. For example, there's no isolation for sensitive data transfer; every line of code must be equally trustworthy. This isolation is there, by design, in multi-process systems.</source>
          <target state="translated">シングルプロセスシステムでは、すべてのクライアントがお互いのメモリにアクセスできます。例えば、センシティブなデータ転送のための分離はありません。マルチプロセスシステムでは、このような分離は設計上存在します。</target>
        </trans-unit>
        <trans-unit id="93cfe35695a7f4b787bebce9d4c376b5630c5bff" translate="yes" xml:space="preserve">
          <source>In a single-process system, all parts of the UI run in one, single process. In a multi-process system, all clients run in their own, dedicated process. With Qt, at any point in your development process, you can choose to switch between single-process and multi-process.</source>
          <target state="translated">シングルプロセス システムでは、UI のすべての部分が 1 つの単一プロセスで実行されます。マルチプロセスシステムでは、すべてのクライアントがそれぞれの専用プロセスで実行されます。Qt では、開発プロセスのどの時点でも、シングルプロセスとマルチプロセスを切り替えることができます。</target>
        </trans-unit>
        <trans-unit id="df30b4977c6a16aeadaeda81729eb4d5f6275427" translate="yes" xml:space="preserve">
          <source>In a single-process system, if you're using the same textures, background, or icons in many places, those images are only stored once. In contrast, if you use these images in a multi-process system, then you have to store them multiple times. In this case, one solution is to share graphical resource between clients. Qt already allows sharing image resources in main memory across processes without involving Wayland. Sharing GPU textures across processes, on the other hand, requires more intricate solutions. Such solutions are currently in development for the Qt Wayland Compositor.</source>
          <target state="translated">シングルプロセスシステムでは、同じテクスチャ、背景、アイコンを多くの場所で使用している場合、それらの画像は一度しか保存されません。一方、マルチプロセスシステムでこれらの画像を使用する場合は、複数回保存しなければなりません。この場合、クライアント間で画像リソースを共有することが一つの解決策となります。QtではすでにWaylandを介さずにプロセス間でメインメモリ内の画像リソースを共有することができます。一方、プロセス間でGPUテクスチャを共有するには、より複雑なソリューションが必要です。このようなソリューションは現在、Qt Wayland コンポジターのために開発中です。</target>
        </trans-unit>
        <trans-unit id="0186a5ac830e37b10101828cfdbf3877f56f7125" translate="yes" xml:space="preserve">
          <source>In a situation such as the above, it is still possible to retrieve the actual matrix determinant by setting the RequiresDeterminant flag in the material and calling the &lt;a href=&quot;qsgmaterialshader-renderstate#determinant&quot;&gt;determinant&lt;/a&gt;() accessor.</source>
          <target state="translated">上記のような状況でも、マテリアルにRequiresDeterminantフラグを設定し、&lt;a href=&quot;qsgmaterialshader-renderstate#determinant&quot;&gt;determinant&lt;/a&gt;（）アクセサーを呼び出すことで、実際の行列行列式を取得できます。</target>
        </trans-unit>
        <trans-unit id="74ff351856fd5aa0b4dd6182c28bfc2e05f06733" translate="yes" xml:space="preserve">
          <source>In a tab of the same window, without hiding the currently visible web engine view.</source>
          <target state="translated">同じウィンドウのタブで、現在表示されているウェブエンジンのビューを隠さずに表示します。</target>
        </trans-unit>
        <trans-unit id="ed375bcdf79a7ea9640ff4a86c37b210370ba4a7" translate="yes" xml:space="preserve">
          <source>In a tab of the same window.</source>
          <target state="translated">同じウィンドウのタブで</target>
        </trans-unit>
        <trans-unit id="2d5fcb572360924dfa9646ae46cfedc4060afe15" translate="yes" xml:space="preserve">
          <source>In a typical multi-head configuration, multiple physical monitors are combined in one X11 screen. This means this method returns the same number for each of the physical monitors. In such a setup you are interested in the monitor information as provided by the X11 RandR extension. This is available through QDesktopWidget and QScreen.</source>
          <target state="translated">典型的なマルチヘッド構成では、複数の物理モニタが 1 つの X11 画面にまとめられます。つまり、このメソッドは各物理モニタに対して同じ番号を返します。このような設定では、X11 RandR 拡張機能で提供されるモニター情報に興味があります。これは QDesktopWidget や QScreen で利用できます。</target>
        </trans-unit>
        <trans-unit id="32434ce60c560ceb6a77ff3dda094acfb7645559" translate="yes" xml:space="preserve">
          <source>In a view, there is always a current item and a selected item - two independent states. An item can be the current item and selected at the same time. The view is responsible for ensuring that there is always a current item as keyboard navigation, for example, requires a current item.</source>
          <target state="translated">ビューには、常に現在のアイテムと選択されたアイテムが存在します。アイテムは、現在のアイテムと同時に選択されたアイテムになることができます。キーボードナビゲーションなどではカレントアイテムが必要になるため、ビューは常にカレントアイテムがあることを保証する役割を担っています。</target>
        </trans-unit>
        <trans-unit id="3af86b961f912e442202b68c4f0ceaec0a9a306c" translate="yes" xml:space="preserve">
          <source>In accordance with ISO 8601, weeks start on Monday and the first Thursday of a year is always in week 1 of that year. Most years have 52 weeks, but some have 53.</source>
          <target state="translated">ISO 8601によると、週は月曜日から始まり、その年の第1木曜日は常にその年の第1週目になります。ほとんどの年は52週ですが、中には53週の年もあります。</target>
        </trans-unit>
        <trans-unit id="683d8c3e3a66c0acad5edcd82caa9ee007b84f7c" translate="yes" xml:space="preserve">
          <source>In addition &lt;a href=&quot;qaudiorecorder&quot;&gt;QAudioRecorder&lt;/a&gt; provides functionality for selecting the audio input.</source>
          <target state="translated">さらに、&lt;a href=&quot;qaudiorecorder&quot;&gt;QAudioRecorder&lt;/a&gt;はオーディオ入力を選択する機能を提供します。</target>
        </trans-unit>
        <trans-unit id="c47cb2960d27520cc8cee5127eccd6ebc2460762" translate="yes" xml:space="preserve">
          <source>In addition &lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; provides the &lt;a href=&quot;qpen#color&quot;&gt;color&lt;/a&gt;() and &lt;a href=&quot;qpen#setColor&quot;&gt;setColor&lt;/a&gt;() convenience functions to extract and set the color of the pen's brush, respectively. Pens may also be compared and streamed.</source>
          <target state="translated">さらに、&lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt;は、ペンのブラシの色をそれぞれ抽出および設定するための便利な関数&lt;a href=&quot;qpen#color&quot;&gt;color&lt;/a&gt;（）および&lt;a href=&quot;qpen#setColor&quot;&gt;setColor&lt;/a&gt;（）を提供します。ペンを比較してストリーミングすることもできます。</target>
        </trans-unit>
        <trans-unit id="a0379878d7d72c63efc971f1bdb08e5ede18e4c6" translate="yes" xml:space="preserve">
          <source>In addition the following expressions can be used to specify the time:</source>
          <target state="translated">また、以下のような式で時間を指定することができます。</target>
        </trans-unit>
        <trans-unit id="df9ef188c1cb674d205e023d5ddf6254baaafb97" translate="yes" xml:space="preserve">
          <source>In addition the type's QML file must have pragma Singleton statement among its import statements.</source>
          <target state="translated">また、その型のQMLファイルのインポート文の中には、pragma Singleton文が含まれていなければなりません。</target>
        </trans-unit>
        <trans-unit id="17d38f6932f39d7e48e129266f5198f583c62f19" translate="yes" xml:space="preserve">
          <source>In addition to &lt;a href=&quot;qaccessible&quot;&gt;QAccessible&lt;/a&gt;'s static functions, Qt offers one generic interface, &lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt;, that can be used to wrap all widgets and objects (e.g., &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt;). This single interface provides all the metadata necessary for the assistive technologies. Qt provides implementations of this interface for its built-in widgets as plugins.</source>
          <target state="translated">&lt;a href=&quot;qaccessible&quot;&gt;QAccessible&lt;/a&gt;の静的関数に加えて、Qtはすべてのウィジェットとオブジェクト（&lt;a href=&quot;qpushbutton&quot;&gt;QPushButtonなど&lt;/a&gt;）をラップするために使用できる1つの汎用インターフェース&lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterfaceを&lt;/a&gt;提供します。この単一のインターフェースは、支援技術に必要なすべてのメタデータを提供します。 Qtはプラグインとして組み込みウィジェットにこのインターフェースの実装を提供します。</target>
        </trans-unit>
        <trans-unit id="58764f3dc838568b7a78fe42c0db905846e95ebf" translate="yes" xml:space="preserve">
          <source>In addition to &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;, Qt also provides the &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; class to store string data. For most purposes, &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; is the class you want to use. It stores 16-bit Unicode characters, making it easy to store non-ASCII/non-Latin-1 characters in your application. Furthermore, &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; is used throughout in the Qt API. The two main cases where &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; is appropriate are when you need to store raw binary data, and when memory conservation is critical (e.g., with Qt for Embedded Linux).</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;に加えて、Qtは文字列データを格納するための&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;クラスも提供します。ほとんどの目的で、&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;は使用するクラスです。 16ビットのUnicode文字を格納するため、アプリケーションに非ASCII /非Latin-1文字を簡単に格納できます。さらに、&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;はQt API全体で使用されています。&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;が適切である2つの主なケースは、生のバイナリデータを格納する必要がある場合と、メモリの節約が重要な場合です（たとえば、Qt for Embedded Linuxで）。</target>
        </trans-unit>
        <trans-unit id="1fcc475fabc680f5d514ea0a74271c19204252af" translate="yes" xml:space="preserve">
          <source>In addition to &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt;, Qt offers three higher-level classes for accessing databases. These classes are &lt;a href=&quot;qsqlquerymodel&quot;&gt;QSqlQueryModel&lt;/a&gt;, &lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt;, and &lt;a href=&quot;qsqlrelationaltablemodel&quot;&gt;QSqlRelationalTableModel&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt;に加えて、Qtはデータベースにアクセスするための3つの上位レベルのクラスを提供します。これらのクラスは&lt;a href=&quot;qsqlquerymodel&quot;&gt;QSqlQueryModel&lt;/a&gt;、&lt;a href=&quot;qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt;、および&lt;a href=&quot;qsqlrelationaltablemodel&quot;&gt;QSqlRelationalTableModel&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="bb0f23f32742c7c2e59f50364b2e13280c9d3869" translate="yes" xml:space="preserve">
          <source>In addition to &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, Qt also provides the &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; class to store raw bytes and traditional 8-bit '\0'-terminated strings. For most purposes, &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; is the class you want to use. It is used throughout the Qt API, and the Unicode support ensures that your applications will be easy to translate if you want to expand your application's market at some point. The two main cases where &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; is appropriate are when you need to store raw binary data, and when memory conservation is critical (like in embedded systems).</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;に加えて、Qtは&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;クラスも提供し、生のバイトと従来の8ビットの '\ 0'で終了する文字列を格納します。ほとんどの目的で、&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;は使用するクラスです。これはQt API全体で使用され、Unicodeサポートにより、ある時点でアプリケーションの市場を拡大したい場合に、アプリケーションを簡単に翻訳できるようになります。&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;が適切である主な2つのケースは、生のバイナリデータを格納する必要がある場合と、メモリの節約が重要な場合（組み込みシステムなど）です。</target>
        </trans-unit>
        <trans-unit id="0bb10a136edeed1290e419aec55791d22496b61f" translate="yes" xml:space="preserve">
          <source>In addition to &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;, Qt also provides &lt;a href=&quot;qvarlengtharray&quot;&gt;QVarLengthArray&lt;/a&gt;, a very low-level class with little functionality that is optimized for speed.</source>
          <target state="translated">&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;に加えて、Qtは&lt;a href=&quot;qvarlengtharray&quot;&gt;QVarLengthArray&lt;/a&gt;も提供します。これは、速度のために最適化された機能がほとんどない非常に低レベルのクラスです。</target>
        </trans-unit>
        <trans-unit id="f6dd8027e4df78dd3d3c0fe582211fdaf0b1a0fd" translate="yes" xml:space="preserve">
          <source>In addition to &lt;code&gt;QT_QPA_EGLFS_DEBUG&lt;/code&gt;, &lt;code&gt;eglfs&lt;/code&gt; also supports Qt's modern categorized logging system. The following logging categories are available:</source>
          <target state="translated">&lt;code&gt;QT_QPA_EGLFS_DEBUG&lt;/code&gt; に加えて、 &lt;code&gt;eglfs&lt;/code&gt; はQtの最新の分類されたロギングシステムもサポートしています。次のロギングカテゴリを使用できます。</target>
        </trans-unit>
        <trans-unit id="44b5febe92f9b7dabfe294b1a92afea290dc6cb8" translate="yes" xml:space="preserve">
          <source>In addition to &lt;code&gt;QT_QPA_EGLFS_DEBUG&lt;/code&gt;, eglfs also supports the more modern categorized logging system of Qt. The following logging categories are available:</source>
          <target state="translated">&lt;code&gt;QT_QPA_EGLFS_DEBUG&lt;/code&gt; に加えて、eglfsはQtのより近代的な分類されたロギングシステムもサポートします。次のロギングカテゴリを使用できます。</target>
        </trans-unit>
        <trans-unit id="9bf249f6281c6efae2c6fd1e64ccd58e52b76d3a" translate="yes" xml:space="preserve">
          <source>In addition to &lt;code&gt;foreach&lt;/code&gt;, Qt also provides a &lt;code&gt;forever&lt;/code&gt; pseudo-keyword for infinite loops:</source>
          <target state="translated">&lt;code&gt;foreach&lt;/code&gt; に加えて、Qt は無限ループ用の &lt;code&gt;forever&lt;/code&gt; 疑似キーワードも提供します：</target>
        </trans-unit>
        <trans-unit id="c5cb3a1821f20774222d57b7872a2df90d980b43" translate="yes" xml:space="preserve">
          <source>In addition to OpenGL, the &lt;code&gt;software&lt;/code&gt; backend of Qt Quick also supports &lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget&lt;/a&gt;. Other backends, for example the Direct 3D 12 one, are not compatible however and attempting to construct a &lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget&lt;/a&gt; will lead to problems.</source>
          <target state="translated">OpenGLに加えて、Qt Quickの &lt;code&gt;software&lt;/code&gt; バックエンドは&lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget&lt;/a&gt;もサポートしています。ただし、Direct 3D 12のような他のバックエンドは互換性がなく、&lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget&lt;/a&gt;を構築しようとすると問題が発生します。</target>
        </trans-unit>
        <trans-unit id="325dae532505d0e5d00579590446e30e351abf77" translate="yes" xml:space="preserve">
          <source>In addition to being anchored to the map, the &lt;a href=&quot;qml-qtlocation-mapquickitem&quot;&gt;MapQuickItem&lt;/a&gt; can optionally follow the scale of the map, and change size when the Map is zoomed in or zoomed out. This behaviour is controlled by the &lt;a href=&quot;qml-qtlocation-mapquickitem#zoomLevel-prop&quot;&gt;zoomLevel&lt;/a&gt; property. The default behaviour if &lt;a href=&quot;qml-qtlocation-mapquickitem#zoomLevel-prop&quot;&gt;zoomLevel&lt;/a&gt; is not set is for the item to be drawn &quot;on the screen&quot; rather than &quot;on the map&quot;, so that its size remains the same regardless of the zoom level of the Map.</source>
          <target state="translated">&lt;a href=&quot;qml-qtlocation-mapquickitem&quot;&gt;MapQuickItem&lt;/a&gt;は、地図に固定されるだけでなく、オプションで地図の縮尺を追跡し、地図がズームインまたはズームアウトしたときにサイズを変更できます。この動作は、&lt;a href=&quot;qml-qtlocation-mapquickitem#zoomLevel-prop&quot;&gt;zoomLevel&lt;/a&gt;プロパティによって制御されます。&lt;a href=&quot;qml-qtlocation-mapquickitem#zoomLevel-prop&quot;&gt;zoomLevel&lt;/a&gt;が設定されていない場合のデフォルトの動作は、アイテムが「マップ上」ではなく「画面上」に描画されるため、マップのズームレベルに関係なくアイテムのサイズは同じです。</target>
        </trans-unit>
        <trans-unit id="222025e778efe8b0f64a49aca21af282baff2983" translate="yes" xml:space="preserve">
          <source>In addition to being used with &lt;a href=&quot;qopenglcontext#setNativeHandle&quot;&gt;QOpenGLContext::setNativeHandle&lt;/a&gt;(), this class is used also to retrieve the native context handle, that is, a HGLRC value, from a &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt;. Calling &lt;a href=&quot;qopenglcontext#nativeHandle&quot;&gt;QOpenGLContext::nativeHandle&lt;/a&gt;() returns a &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; which, on Windows with opengl32.dll at least, will contain a &lt;a href=&quot;qwglnativecontext&quot;&gt;QWGLNativeContext&lt;/a&gt;:</source>
          <target state="translated">一緒に使用されることに加えて&lt;a href=&quot;qopenglcontext#setNativeHandle&quot;&gt;QOpenGLContext :: setNativeHandle&lt;/a&gt;（）、このクラスは、からHGLRC値、ネイティブコンテキスト・ハンドル、取得するためにも使用され&lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContextを&lt;/a&gt;。呼び出し&lt;a href=&quot;qopenglcontext#nativeHandle&quot;&gt;QOpenGLContext :: nativeHandleは&lt;/a&gt;（）を返し&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;少なくとも、含まれていますOPENGL32.DLLと、Windows上&lt;a href=&quot;qwglnativecontext&quot;&gt;QWGLNativeContextを&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="8821f95317c861f0b886a746e0a555a4702d6df9" translate="yes" xml:space="preserve">
          <source>In addition to calling the convenience event handlers, this function is responsible for converting mouse move events to hover events for when there is no mouse grabber item. Hover events are delivered directly to items; there is no convenience function for them.</source>
          <target state="translated">この関数は、便利なイベントハンドラの呼び出しに加えて、マウスの移動イベントをマウスグラバーアイテムがない場合のホバーイベントに変換する役割を担っています。ホバーイベントはアイテムに直接配信されます。</target>
        </trans-unit>
        <trans-unit id="11c8e56658b7f7db09b4bc7da36d333b06677626" translate="yes" xml:space="preserve">
          <source>In addition to containing the item, scene, and screen coordinates of the event (as &lt;a href=&quot;qgraphicsscenemouseevent#pos&quot;&gt;pos&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscenemouseevent#scenePos&quot;&gt;scenePos&lt;/a&gt;(), and &lt;a href=&quot;qgraphicsscenemouseevent#screenPos&quot;&gt;screenPos&lt;/a&gt;()), mouse events also contain the coordinates of the previous mouse event received by the view. These can be retrieved with &lt;a href=&quot;qgraphicsscenemouseevent#lastPos&quot;&gt;lastPos&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscenemouseevent#lastScreenPos&quot;&gt;lastScreenPos&lt;/a&gt;(), and &lt;a href=&quot;qgraphicsscenemouseevent#lastScenePos&quot;&gt;lastScenePos&lt;/a&gt;().</source>
          <target state="translated">イベントのアイテム、シーン、および画面座標（&lt;a href=&quot;qgraphicsscenemouseevent#pos&quot;&gt;pos&lt;/a&gt;（）、&lt;a href=&quot;qgraphicsscenemouseevent#scenePos&quot;&gt;scenePos&lt;/a&gt;（）、および&lt;a href=&quot;qgraphicsscenemouseevent#screenPos&quot;&gt;screenPos&lt;/a&gt;（）として）を含むことに加えて、マウスイベントには、ビューが受け取った前のマウスイベントの座標も含まれます。これらを用いて取得することができ&lt;a href=&quot;qgraphicsscenemouseevent#lastPos&quot;&gt;LastPos機能&lt;/a&gt;（）、&lt;a href=&quot;qgraphicsscenemouseevent#lastScreenPos&quot;&gt;lastScreenPos&lt;/a&gt;（）、及び&lt;a href=&quot;qgraphicsscenemouseevent#lastScenePos&quot;&gt;lastScenePos&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="f539b7194ee987de596fca3b232ace808aad2ce7" translate="yes" xml:space="preserve">
          <source>In addition to controlling the management of widgets, you can control the current selection in the form window using the &lt;a href=&quot;qdesignerformwindowinterface#selectWidget&quot;&gt;selectWidget&lt;/a&gt;(), &lt;a href=&quot;qdesignerformwindowinterface#clearSelection&quot;&gt;clearSelection&lt;/a&gt;() and &lt;a href=&quot;qdesignerformwindowinterface#emitSelectionChanged&quot;&gt;emitSelectionChanged&lt;/a&gt;() functions, and the &lt;a href=&quot;qdesignerformwindowinterface#selectionChanged&quot;&gt;selectionChanged&lt;/a&gt;() signal.</source>
          <target state="translated">ウィジェットの管理を制御することに加えて、&lt;a href=&quot;qdesignerformwindowinterface#selectWidget&quot;&gt;selectWidget&lt;/a&gt;（）、&lt;a href=&quot;qdesignerformwindowinterface#clearSelection&quot;&gt;clearSelection&lt;/a&gt;（）、&lt;a href=&quot;qdesignerformwindowinterface#emitSelectionChanged&quot;&gt;emitSelectionChanged&lt;/a&gt;（）関数、および&lt;a href=&quot;qdesignerformwindowinterface#selectionChanged&quot;&gt;selectionChanged&lt;/a&gt;（）シグナルを使用して、フォームウィンドウで現在の選択を制御できます。</target>
        </trans-unit>
        <trans-unit id="2749249d61fcba3d628135453123502aee7c5881" translate="yes" xml:space="preserve">
          <source>In addition to coordinate based data, it is possible to attach an arbitrary data channel for each data point.</source>
          <target state="translated">座標ベースのデータに加えて、データポイント毎に任意のデータチャネルを付加することも可能である。</target>
        </trans-unit>
        <trans-unit id="860442a28b85ce7c77a454c3e2b9c8a9e8a96e88" translate="yes" xml:space="preserve">
          <source>In addition to core XML support, classes for higher level querying and manipulation of XML data are provided by the Qt XML Patterns module. In the Qt SVG module, the QSvgRenderer and QSvgGenerator classes can read and write a subset of SVG, an XML-based file format. Qt also provides helper functions that may be useful to those working with XML and XHTML: see Qt::escape() and Qt::convertFromPlainText().</source>
          <target state="translated">コアとなる XML のサポートに加えて、XML データのより高度な問い合わせや操作のためのクラスが Qt XML Patterns モジュールによって提供されています。Qt SVG モジュールでは、QSvgRenderer クラスと QSvgGenerator クラスは、XML ベースのファイル形式である SVG のサブセットを読み書きすることができます。Qt はまた、XML や XHTML を扱う際に便利なヘルパー関数も提供しています:Qt::escape()や Qt::convertFromPlainText()を参照してください。</target>
        </trans-unit>
        <trans-unit id="96ab0ff9ab1deb68ff7f11842fa6faa44833ae75" translate="yes" xml:space="preserve">
          <source>In addition to data provided by the expression's &lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt;, the scope object's properties are also in scope during the expression's evaluation.</source>
          <target state="translated">式の&lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt;によって提供されるデータに加えて、スコープオブジェクトのプロパティも式の評価中にスコープに含まれます。</target>
        </trans-unit>
        <trans-unit id="30bca362e71a3024326276c40634885f8c55e764" translate="yes" xml:space="preserve">
          <source>In addition to defining which column the data belongs to, the value indicated by the column role is also set as the X-coordinate value of &lt;a href=&quot;qsurfacedataitem&quot;&gt;QSurfaceDataItem&lt;/a&gt; when model data is resolved, unless a separate x position role is also defined.</source>
          <target state="translated">データが属する列を定義することに加えて、列の役割によって示される値は、個別のx位置の役割も定義されていない限り、モデルデータが解決されるときに&lt;a href=&quot;qsurfacedataitem&quot;&gt;QSurfaceDataItemの&lt;/a&gt; X座標値としても設定されます。</target>
        </trans-unit>
        <trans-unit id="3a366a9f9c645932396430dfd059e8111420d987" translate="yes" xml:space="preserve">
          <source>In addition to defining which row the data belongs to, the value indicated by the row role is also set as the Z-coordinate value of &lt;a href=&quot;qsurfacedataitem&quot;&gt;QSurfaceDataItem&lt;/a&gt; when model data is resolved, unless a separate z position role is also defined.</source>
          <target state="translated">データが属する行を定義することに加えて、行の役割によって示される値は、個別のz位置の役割も定義されていない限り、モデルデータが解決されるときに&lt;a href=&quot;qsurfacedataitem&quot;&gt;QSurfaceDataItemの&lt;/a&gt; Z座標値として設定されます。</target>
        </trans-unit>
        <trans-unit id="cf401cf475e46f85bb0131da5516bd0be8251b32" translate="yes" xml:space="preserve">
          <source>In addition to drawing, the style needs to provide the widgets with information on which sub control (if any) a mouse press was made on. For instance, a &lt;a href=&quot;qscrollbar&quot;&gt;QScrollBar&lt;/a&gt; needs to know if the user pressed the slider, the slider groove, or one of the buttons.</source>
          <target state="translated">描画に加えて、スタイルは、マウスプレスが行われたサブコントロール（存在する場合）に関する情報をウィジェットに提供する必要があります。たとえば、&lt;a href=&quot;qscrollbar&quot;&gt;QScrollBar&lt;/a&gt;は、ユーザーがスライダー、スライダーの溝、またはボタンの1つを押したかどうかを知る必要があります。</target>
        </trans-unit>
        <trans-unit id="d9d9c59d69e027e39f0ec4fbe75766e3dadc6e3f" translate="yes" xml:space="preserve">
          <source>In addition to event handling, the &lt;a href=&quot;qvulkanwindow&quot;&gt;QVulkanWindow&lt;/a&gt; subclass is responsible for providing an implementation for &lt;a href=&quot;qvulkanwindow#createRenderer&quot;&gt;QVulkanWindow::createRenderer&lt;/a&gt;() as well. This is where the window and renderer get connected. A typical implementation will simply create a new instance of a subclass of &lt;a href=&quot;qvulkanwindowrenderer&quot;&gt;QVulkanWindowRenderer&lt;/a&gt;.</source>
          <target state="translated">イベント処理に加えて、&lt;a href=&quot;qvulkanwindow&quot;&gt;QVulkanWindow&lt;/a&gt;サブクラスは&lt;a href=&quot;qvulkanwindow#createRenderer&quot;&gt;QVulkanWindow :: createRenderer&lt;/a&gt;（）の実装も提供します。ここでウィンドウとレンダラーが接続されます。典型的な実装は単に&lt;a href=&quot;qvulkanwindowrenderer&quot;&gt;QVulkanWindowRendererの&lt;/a&gt;サブクラスの新しいインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="6193b0f82c7728f2fba62b9bb5e211c3d6071a88" translate="yes" xml:space="preserve">
          <source>In addition to groups, &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; also supports an &quot;array&quot; concept. See &lt;a href=&quot;qsettings#beginReadArray&quot;&gt;beginReadArray&lt;/a&gt;() and &lt;a href=&quot;qsettings#beginWriteArray&quot;&gt;beginWriteArray&lt;/a&gt;() for details.</source>
          <target state="translated">グループに加えて、&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;は「配列」の概念もサポートしています。詳細については、&lt;a href=&quot;qsettings#beginReadArray&quot;&gt;beginReadArray&lt;/a&gt;（）および&lt;a href=&quot;qsettings#beginWriteArray&quot;&gt;beginWriteArray&lt;/a&gt;（）を参照してください。</target>
        </trans-unit>
        <trans-unit id="3868ec7d585a5a461a3c76d6bc8a4bbf85befd24" translate="yes" xml:space="preserve">
          <source>In addition to merging compatible primitives into batches, the default renderer also tries to minimize the amount of data that needs to be sent to the GPU for every frame. The default renderer identifies subtrees which belong together and tries to put these into separate batches. Once batches are identified, they are merged, uploaded and stored in GPU memory, using Vertex Buffer Objects.</source>
          <target state="translated">互換性のあるプリミティブをバッチにマージすることに加えて、デフォルトのレンダラーは、フレームごとに GPU に送信する必要のあるデータ量を最小限に抑えようとします。デフォルトのレンダラーは、一緒に属するサブツリーを識別し、それらを別々のバッチに入れようとします。バッチが識別されると、それらはマージされ、アップロードされ、頂点バッファオブジェクトを使用して GPU メモリに保存されます。</target>
        </trans-unit>
        <trans-unit id="ed5456d2bef1e65628af0ed642141020a0888549" translate="yes" xml:space="preserve">
          <source>In addition to normal file downloads, which consist simply of retrieving some raw bytes from the network and writing them to disk, Qt WebEngine also supports saving complete web pages, which involves parsing the page's HTML, downloading any dependent resources, and potentially packaging everything into a special file format (&lt;a href=&quot;qml-qtwebengine-webenginedownloaditem#savePageFormat-prop&quot;&gt;savePageFormat&lt;/a&gt;). To check if a download is for a file or a web page, use &lt;a href=&quot;qml-qtwebengine-webenginedownloaditem#isSavePageDownload-prop&quot;&gt;isSavePageDownload&lt;/a&gt;.</source>
          <target state="translated">Qt WebEngineは、ネットワークからいくつかの生のバイトを取得してディスクに書き込むだけで構成される通常のファイルダウンロードに加えて、ページのHTMLの解析、依存リソースのダウンロード、すべてのパッケージ化などの完全なWebページの保存もサポートしています。特別なファイル形式（&lt;a href=&quot;qml-qtwebengine-webenginedownloaditem#savePageFormat-prop&quot;&gt;savePageFormat&lt;/a&gt;）。ダウンロードがファイル用かWebページ用かを確認するには、&lt;a href=&quot;qml-qtwebengine-webenginedownloaditem#isSavePageDownload-prop&quot;&gt;isSavePageDownloadを&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="f8483c9f7066fd3ab82bade1bce9da25ae1c8d54" translate="yes" xml:space="preserve">
          <source>In addition to normal file downloads, which consist simply of retrieving some raw bytes from the network and writing them to disk, Qt WebEngine also supports saving complete web pages, which involves parsing the page's HTML, downloading any dependent resources, and potentially packaging everything into a special file format (&lt;a href=&quot;qwebenginedownloaditem#savePageFormat&quot;&gt;savePageFormat&lt;/a&gt;). To check if a download is for a file or a web page, use &lt;a href=&quot;qwebenginedownloaditem#isSavePageDownload&quot;&gt;isSavePageDownload&lt;/a&gt;.</source>
          <target state="translated">Qt WebEngineは、ネットワークからいくつかの生のバイトを取得してディスクに書き込むだけで構成される通常のファイルダウンロードに加えて、ページのHTMLの解析、依存リソースのダウンロード、すべてのパッケージ化などの完全なWebページの保存もサポートしています。特別なファイル形式（&lt;a href=&quot;qwebenginedownloaditem#savePageFormat&quot;&gt;savePageFormat&lt;/a&gt;）。ダウンロードがファイル用かWebページ用かを確認するには、&lt;a href=&quot;qwebenginedownloaditem#isSavePageDownload&quot;&gt;isSavePageDownloadを&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="76f5c232a66c386c0de18bdee8c0604283addb0f" translate="yes" xml:space="preserve">
          <source>In addition to parsing the options (like &lt;a href=&quot;qcommandlineparser#parse&quot;&gt;parse&lt;/a&gt;()), this function also handles the builtin options and handles errors.</source>
          <target state="translated">オプションの&lt;a href=&quot;qcommandlineparser#parse&quot;&gt;解析&lt;/a&gt;（parse（）など）に加えて、この関数は組み込みオプションとエラーも処理します。</target>
        </trans-unit>
        <trans-unit id="4f4a60305692fbef8b1954acf1606abde5b6592e" translate="yes" xml:space="preserve">
          <source>In addition to perspective projection, orthographic projection can be used to create 2D graphs by replacing the default input handler with one that does not allow rotating the graph and setting the camera to view the graph directly from the side or from the top.</source>
          <target state="translated">2Dグラフの作成には、透視投影に加えて、グラフの回転を許可しないデフォルトの入力ハンドラに置き換えて、カメラが直接横からまたは上からグラフを見るように設定することで、オルソグラフィック投影を使用することができます。</target>
        </trans-unit>
        <trans-unit id="1361d6305eba16b69a305d034e7abe8e488775cb" translate="yes" xml:space="preserve">
          <source>In addition to providing the &lt;a href=&quot;signalsandslots#&quot;&gt;signals and slots&lt;/a&gt; mechanism for communication between objects (the main reason for introducing the system), the meta-object code provides the following additional features:</source>
          <target state="translated">メタオブジェクトコードは、オブジェクト間の通信に&lt;a href=&quot;signalsandslots#&quot;&gt;信号とスロットの&lt;/a&gt;メカニズムを提供することに加えて（システムを導入する主な理由）、次の追加機能を提供します。</target>
        </trans-unit>
        <trans-unit id="608863a3b34aea5eafec5a706f8343d6c33db486" translate="yes" xml:space="preserve">
          <source>In addition to setting state flags the &lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt; contains other information about the widget: &lt;code&gt;direction&lt;/code&gt; is the layout direction of the layout, &lt;code&gt;rect&lt;/code&gt; is the bounding rectangle of the widget (the area in which to draw), &lt;code&gt;palette&lt;/code&gt; is the &lt;a href=&quot;qpalette&quot;&gt;QPalette&lt;/a&gt; that should be used for drawing the widget, and &lt;code&gt;fontMetrics&lt;/code&gt; is the metrics of the font that is used by the widget.</source>
          <target state="translated">状態フラグの設定に加えて、&lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt;にはウィジェットに関する他の情報が含まれています： &lt;code&gt;direction&lt;/code&gt; はレイアウトのレイアウト方向、 &lt;code&gt;rect&lt;/code&gt; はウィジェットの境界の長方形（描画する領域）、 &lt;code&gt;palette&lt;/code&gt; は&lt;a href=&quot;qpalette&quot;&gt;QPalette&lt;/a&gt;に使用する必要がありますウィジェットを描画し、 &lt;code&gt;fontMetrics&lt;/code&gt; はウィジェットが使用するフォントのメトリックです。</target>
        </trans-unit>
        <trans-unit id="e97c71f5c8ffe70cd236c7a10dfbb4138631b3c2" translate="yes" xml:space="preserve">
          <source>In addition to sorting, &lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt; can be used to hide items that do not match a certain filter. The filter is specified using a &lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; object and is applied to the &lt;a href=&quot;qsortfilterproxymodel#filterRole-prop&quot;&gt;filterRole&lt;/a&gt;() (&lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;Qt::DisplayRole&lt;/a&gt; by default) of each item, for a given column. The &lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; object can be used to match a regular expression, a wildcard pattern, or a fixed string. For example:</source>
          <target state="translated">並べ替えに加えて、&lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt;を使用して、特定のフィルターに一致しないアイテムを非表示にすることができます。フィルターは&lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt;オブジェクトを使用して指定され、特定の列の各アイテムの&lt;a href=&quot;qsortfilterproxymodel#filterRole-prop&quot;&gt;filterRole&lt;/a&gt;（）（デフォルトでは&lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;Qt :: DisplayRole&lt;/a&gt;）に適用されます。&lt;a href=&quot;qregexp&quot;&gt;QRegExpの&lt;/a&gt;オブジェクトは、正規表現、ワイルドカードパターン、または固定文字列を一致させるために使用することができます。例えば：</target>
        </trans-unit>
        <trans-unit id="5b8eb1ee7525ba77b95e29b40ab1fbfd79676d3b" translate="yes" xml:space="preserve">
          <source>In addition to specifying the attributes in QML, it is also possible to specify them via environment variables or in a configuration file. Attributes specified in QML take precedence over all other methods.</source>
          <target state="translated">属性の指定は、QML での指定の他に、環境変数や設定ファイルでの指定も可能です。QML で指定された属性は、他の全てのメソッドよりも優先されます。</target>
        </trans-unit>
        <trans-unit id="0155e0a679d61241e117c2329f6d0d979bde7477" translate="yes" xml:space="preserve">
          <source>In addition to specifying the path in QML, it is also possible to specify it via an &lt;a href=&quot;#imagine-customization-environment-variable&quot;&gt;environment variable&lt;/a&gt; or in a &lt;a href=&quot;#imagine-customization-configuration-file&quot;&gt;configuration file&lt;/a&gt;. Attributes specified in QML take precedence over all other methods.</source>
          <target state="translated">QMLでパスを指定するだけでなく、&lt;a href=&quot;#imagine-customization-environment-variable&quot;&gt;環境変数&lt;/a&gt;または&lt;a href=&quot;#imagine-customization-configuration-file&quot;&gt;構成ファイルで&lt;/a&gt;パスを指定することもできます。QMLで指定された属性は、他のすべてのメソッドよりも優先されます。</target>
        </trans-unit>
        <trans-unit id="ec764b284bd78c68c070ec70cb6943f8decbe9f1" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;a href=&quot;qsensorgesture#detected&quot;&gt;QSensorGesture::detected&lt;/a&gt;() signal, Sensor Gesture Recognizers can have their own specific signals, and may be discovered through &lt;a href=&quot;qsensorgesture#gestureSignals&quot;&gt;QSensorGesture::gestureSignals&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qsensorgesture#detected&quot;&gt;QSensorGesture :: detected&lt;/a&gt;（）信号に加えて、センサージェスチャーレコ&lt;a href=&quot;qsensorgesture#gestureSignals&quot;&gt;グナイザー&lt;/a&gt;は固有の信号を持つことができ、QSensorGesture :: gestureSignals（）を通じて検出できます。</target>
        </trans-unit>
        <trans-unit id="52c782ad46d1294574253126cd5c9c5f784d753b" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;a href=&quot;qtqml-typesystem-basictypes#&quot;&gt;QML Basic Types&lt;/a&gt;, the module comes with the following QML object types:</source>
          <target state="translated">&lt;a href=&quot;qtqml-typesystem-basictypes#&quot;&gt;QML Basic Typesに&lt;/a&gt;加えて、モジュールには次のQMLオブジェクトタイプが付属しています。</target>
        </trans-unit>
        <trans-unit id="417e8f4aadd4e491d8bdc2da3b8079084ab4beec" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;code&gt;index&lt;/code&gt; property, a list of model data roles are available in the context of each delegate:</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt; プロパティに加えて、モデルデータロールのリストは、各デリゲートのコンテキストで利用できます。</target>
        </trans-unit>
        <trans-unit id="a3ef24a6177217e50cdd9ee78dfc67377f72be66" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;code&gt;win32&lt;/code&gt;, &lt;code&gt;macx&lt;/code&gt;, and &lt;code&gt;unix&lt;/code&gt; values used in many scope conditions, various other built-in platform and compiler-specific values can be tested with scopes. These are based on platform specifications provided in Qt's &lt;code&gt;mkspecs&lt;/code&gt; directory. For example, the following lines from a project file show the current specification in use and test for the &lt;code&gt;linux-g++&lt;/code&gt; specification:</source>
          <target state="translated">多くのスコープ条件で使用される &lt;code&gt;win32&lt;/code&gt; 、 &lt;code&gt;macx&lt;/code&gt; 、および &lt;code&gt;unix&lt;/code&gt; の値に加えて、他のさまざまな組み込みプラットフォームおよびコンパイラ固有の値をスコープでテストできます。これらは、Qtの &lt;code&gt;mkspecs&lt;/code&gt; ディレクトリで提供されるプラットフォーム仕様に基づいています。たとえば、プロジェクトファイルの次の行は、現在使用されている仕様と、 &lt;code&gt;linux-g++&lt;/code&gt; 仕様のテストを示しています。</target>
        </trans-unit>
        <trans-unit id="7af3e3298d92ef46918d809b8a96064abbcc8ca4" translate="yes" xml:space="preserve">
          <source>In addition to the checked and unchecked states, there is a third state: partially checked. The partially checked state can be enabled using the &lt;a href=&quot;qml-qtquick-controls2-checkbox#tristate-prop&quot;&gt;tristate&lt;/a&gt; property. This state indicates that the regular checked/unchecked state can not be determined; generally because of other states that affect the checkbox. This state is useful when several child nodes are selected in a treeview, for example.</source>
          <target state="translated">チェック済みと未チェックの状態に加えて、3番目の状態があります。部分的にチェック済みです。部分的にチェックされた状態は、&lt;a href=&quot;qml-qtquick-controls2-checkbox#tristate-prop&quot;&gt;tristate&lt;/a&gt;プロパティを使用して有効にできます。この状態は、通常のチェック済み/未チェック状態を判別できないことを示しています。通常、チェックボックスに影響を与える他の状態が原因です。この状態は、たとえばツリービューで複数の子ノードが選択されている場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="30fe8d793a4d1dc565113d3ae097c00698b55f22" translate="yes" xml:space="preserve">
          <source>In addition to the checked and unchecked states, there is a third state: partially checked. The partially checked state can be enabled using the &lt;a href=&quot;qml-qtquick-controls2-checkdelegate#tristate-prop&quot;&gt;tristate&lt;/a&gt; property. This state indicates that the regular checked/unchecked state can not be determined; generally because of other states that affect the check delegate. This state is useful when several child nodes are selected in a treeview, for example.</source>
          <target state="translated">チェック済みと未チェックの状態に加えて、3番目の状態があります。部分的にチェック済みです。部分的にチェックされた状態は、&lt;a href=&quot;qml-qtquick-controls2-checkdelegate#tristate-prop&quot;&gt;tristate&lt;/a&gt;プロパティを使用して有効にできます。この状態は、通常のチェック済み/未チェック状態を判別できないことを示しています。通常、チェックデリゲートに影響する他の状態が原因です。この状態は、たとえばツリービューで複数の子ノードが選択されている場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="eab7e7dd6c4505763be2492ac8ad26d746b93263" translate="yes" xml:space="preserve">
          <source>In addition to the checked and unchecked states, there is a third state: partially checked. This state indicates that the regular checked/unchecked state can not be determined; generally because of other states that affect the checkbox. This state is useful when several child nodes are selected in a treeview, for example.</source>
          <target state="translated">チェック済みとチェックされていない状態に加えて、3 番目の状態として、部分的にチェックされている状態があります。この状態は、チェックボックスに影響を与える他の状態があるため、通常のチェック済み/チェックなしの状態を判断することができないことを示します。この状態は、例えばツリービューで複数の子ノードが選択されている場合などに便利です。</target>
        </trans-unit>
        <trans-unit id="6a017e3c2b18cce999dbad22cc20e6564e42134b" translate="yes" xml:space="preserve">
          <source>In addition to the compiled-in</source>
          <target state="translated">コンパイルされた</target>
        </trans-unit>
        <trans-unit id="9eaf3e7f3dcb62f52f067b4b06b4c1eb3965285c" translate="yes" xml:space="preserve">
          <source>In addition to the encoding, &lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; contains other parameters that further specify how the audio sample data is arranged. These are the frequency, the number of channels, the sample size, the sample type, and the byte order. The following table describes these in more detail.</source>
          <target state="translated">エンコードに加えて、&lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormatに&lt;/a&gt;は、オーディオサンプルデータの配置方法をさらに指定する他のパラメーターが含まれています。これらは、周波数、チャネル数、サンプルサイズ、サンプルタイプ、およびバイトオーダーです。次の表で、これらについて詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="01161f1235543028af2e64aca9b51ee52eb5c08f" translate="yes" xml:space="preserve">
          <source>In addition to the functions inherited from &lt;a href=&quot;qgradient&quot;&gt;QGradient&lt;/a&gt;, the &lt;a href=&quot;qconicalgradient&quot;&gt;QConicalGradient&lt;/a&gt; class provides the &lt;a href=&quot;qconicalgradient#angle&quot;&gt;angle&lt;/a&gt;() and &lt;a href=&quot;qconicalgradient#center&quot;&gt;center&lt;/a&gt;() functions returning the start angle and center of the gradient.</source>
          <target state="translated">継承された機能に加えて&lt;a href=&quot;qgradient&quot;&gt;QGradient&lt;/a&gt;、&lt;a href=&quot;qconicalgradient&quot;&gt;QConicalGradientの&lt;/a&gt;クラスが提供&lt;a href=&quot;qconicalgradient#angle&quot;&gt;角度&lt;/a&gt;（）および&lt;a href=&quot;qconicalgradient#center&quot;&gt;中央&lt;/a&gt;（）勾配の開始角度と中心を返す関数です。</target>
        </trans-unit>
        <trans-unit id="877fb9f84fc362bbe3e371e803b3b05e197b5c8f" translate="yes" xml:space="preserve">
          <source>In addition to the functions inherited from &lt;a href=&quot;qgradient&quot;&gt;QGradient&lt;/a&gt;, the &lt;a href=&quot;qlineargradient&quot;&gt;QLinearGradient&lt;/a&gt; class provides the &lt;a href=&quot;qlineargradient#finalStop&quot;&gt;finalStop&lt;/a&gt;() function which returns the final stop point of the gradient, and the &lt;a href=&quot;qlineargradient#start&quot;&gt;start&lt;/a&gt;() function returning the start point of the gradient.</source>
          <target state="translated">継承された機能に加えて&lt;a href=&quot;qgradient&quot;&gt;QGradient&lt;/a&gt;、&lt;a href=&quot;qlineargradient&quot;&gt;QLinearGradientの&lt;/a&gt;クラスが提供&lt;a href=&quot;qlineargradient#finalStop&quot;&gt;finalStop&lt;/a&gt;勾配の最終的な停止点を返す（）関数、及び&lt;a href=&quot;qlineargradient#start&quot;&gt;開始&lt;/a&gt;（）関数は、勾配の開始点を返します。</target>
        </trans-unit>
        <trans-unit id="ac59c2d44b382d3ea1218ff478b5b46bdb551e68" translate="yes" xml:space="preserve">
          <source>In addition to the functions inherited from &lt;a href=&quot;qgradient&quot;&gt;QGradient&lt;/a&gt;, the &lt;a href=&quot;qradialgradient&quot;&gt;QRadialGradient&lt;/a&gt; class provides the &lt;a href=&quot;qradialgradient#center&quot;&gt;center&lt;/a&gt;(), &lt;a href=&quot;qradialgradient#focalPoint&quot;&gt;focalPoint&lt;/a&gt;() and &lt;a href=&quot;qradialgradient#radius&quot;&gt;radius&lt;/a&gt;() functions returning the gradient's center, focal point and radius respectively.</source>
          <target state="translated">継承された機能に加えて&lt;a href=&quot;qgradient&quot;&gt;QGradient&lt;/a&gt;、&lt;a href=&quot;qradialgradient&quot;&gt;QRadialGradientの&lt;/a&gt;クラスが提供する&lt;a href=&quot;qradialgradient#center&quot;&gt;中心を&lt;/a&gt;（）、&lt;a href=&quot;qradialgradient#focalPoint&quot;&gt;FocalPointの&lt;/a&gt;（）と&lt;a href=&quot;qradialgradient#radius&quot;&gt;半径&lt;/a&gt;（）グラデーションの中心を返す関数、焦点及び半径それぞれ。</target>
        </trans-unit>
        <trans-unit id="90cb87a4726b92cf26795c1b0b605c676ee538e3" translate="yes" xml:space="preserve">
          <source>In addition to the functions provided by &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;, &lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; provides some point-specific functions.</source>
          <target state="translated">提供される機能に加えて&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;、&lt;a href=&quot;qpolygon&quot;&gt;QPolygonは&lt;/a&gt;いくつかの点特有の機能を提供します。</target>
        </trans-unit>
        <trans-unit id="0af4b5582ced69e4efe9d71c097c3238d24bc513" translate="yes" xml:space="preserve">
          <source>In addition to the functions provided by &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;, &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; provides the &lt;a href=&quot;qpolygonf#boundingRect&quot;&gt;boundingRect&lt;/a&gt;() and &lt;a href=&quot;qpolygonf#translate&quot;&gt;translate&lt;/a&gt;() functions for geometry operations. Use the &lt;a href=&quot;qmatrix#map&quot;&gt;QMatrix::map&lt;/a&gt;() function for more general transformations of QPolygonFs.</source>
          <target state="translated">提供される機能に加えて&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;、&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonFが&lt;/a&gt;提供&lt;a href=&quot;qpolygonf#boundingRect&quot;&gt;boundingRect&lt;/a&gt;（）と&lt;a href=&quot;qpolygonf#translate&quot;&gt;変換&lt;/a&gt;ジオメトリ操作用（）関数を。&lt;a href=&quot;qmatrix#map&quot;&gt;QPolygonFの&lt;/a&gt;より一般的な変換には、QMatrix :: map（）関数を使用します。</target>
        </trans-unit>
        <trans-unit id="fe5baa5613db9a07f2d362e38916ab845c4f0edf" translate="yes" xml:space="preserve">
          <source>In addition to the locale and collation strategy, several optional flags can be set that influence the result of the collation.</source>
          <target state="translated">ロケールや照合方法に加えて、照合の結果に影響を与えるオプションのフラグをいくつか設定できます。</target>
        </trans-unit>
        <trans-unit id="f8f3f432050e4b246a5ff857a8616045f7e2d660" translate="yes" xml:space="preserve">
          <source>In addition to the more traditional &lt;a href=&quot;qml-qtquick-grid&quot;&gt;Grid&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-row&quot;&gt;Row&lt;/a&gt;, and &lt;a href=&quot;qml-qtquick-column&quot;&gt;Column&lt;/a&gt;, Qt Quick also provides a way to layout items using the concept of</source>
          <target state="translated">従来の&lt;a href=&quot;qml-qtquick-grid&quot;&gt;Grid&lt;/a&gt;、&lt;a href=&quot;qml-qtquick-row&quot;&gt;Row&lt;/a&gt;、および&lt;a href=&quot;qml-qtquick-column&quot;&gt;Columnに加えて&lt;/a&gt;、Qt Quickは、以下の概念を使用してアイテムをレイアウトする方法も提供します</target>
        </trans-unit>
        <trans-unit id="bd1769bbaee36477bcc222f28d1b3f1dc4fdbb46" translate="yes" xml:space="preserve">
          <source>In addition to the normal &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt; type, Label follows the font and color scheme of the system. Use the &lt;code&gt;text&lt;/code&gt; property to assign a text to the label. For other properties check &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt;.</source>
          <target state="translated">通常の&lt;a href=&quot;qml-qtquick-text&quot;&gt;テキスト&lt;/a&gt;タイプに加えて、ラベルはシステムのフォントとカラースキームに従います。 &lt;code&gt;text&lt;/code&gt; プロパティを使用して、ラベルにテキストを割り当てます。その他のプロパティについては、&lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt;を確認してください。</target>
        </trans-unit>
        <trans-unit id="3241102cc7dd4992b6edb728cbe2a9f013091640" translate="yes" xml:space="preserve">
          <source>In addition to the normal key event data, also contains</source>
          <target state="translated">通常のキーイベントデータに加えて</target>
        </trans-unit>
        <trans-unit id="c5488ff097ad45e29b3b27b5e777318782f47ccb" translate="yes" xml:space="preserve">
          <source>In addition to the original behaviour of &lt;a href=&quot;qsslsocket#connectToHostEncrypted&quot;&gt;connectToHostEncrypted&lt;/a&gt;, this overloaded method enables the usage of a different hostname (</source>
          <target state="translated">&lt;a href=&quot;qsslsocket#connectToHostEncrypted&quot;&gt;connectToHostEncrypted&lt;/a&gt;の元の動作に加えて、このオーバーロードされたメソッドにより、別のホスト名（</target>
        </trans-unit>
        <trans-unit id="21fb91fa11606656b3adc5dc6835305200665c5d" translate="yes" xml:space="preserve">
          <source>In addition to the overloaded stream operators documented here, any Qt classes that you might want to serialize to a &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; will have appropriate stream operators declared as non-member of the class:</source>
          <target state="translated">ここに記載されているオーバーロードされたストリーム演算子に加えて、&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;にシリアル化する必要のあるQtクラスには、クラスの非メンバーとして宣言された適切なストリーム演算子があります。</target>
        </trans-unit>
        <trans-unit id="82e5ba02ce74bd7c5fa0fb2e1d15e44165d43fb9" translate="yes" xml:space="preserve">
          <source>In addition to the public API, the scene graph has an adaptation layer which opens up the implementation to do hardware specific adaptations. This is an undocumented, internal and private plugin API, which lets hardware adaptation teams make the most of their hardware. It includes:</source>
          <target state="translated">公開APIに加えて、シーングラフには、ハードウェア固有の適応を行うために実装を開放する適応レイヤーがあります。これは文書化されていない、内部でプライベートなプラグイン API で、ハードウェア適応チームがハードウェアを最大限に活用できるようにします。これには以下が含まれます。</target>
        </trans-unit>
        <trans-unit id="6a6c3ce6d985ea5289aaa8da876be075c128e730" translate="yes" xml:space="preserve">
          <source>In addition to the signals and slots shown above, &lt;code&gt;moc&lt;/code&gt; also implements object properties as in the next example. The &lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt;() macro declares an object property, while &lt;a href=&quot;qobject#Q_ENUM&quot;&gt;Q_ENUM&lt;/a&gt;() declares a list of enumeration types within the class to be usable inside the &lt;a href=&quot;properties&quot;&gt;property system&lt;/a&gt;.</source>
          <target state="translated">上記の信号とスロットに加えて、 &lt;code&gt;moc&lt;/code&gt; は次の例のようにオブジェクトプロパティも実装します。&lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt;ながら（）マクロは、オブジェクトのプロパティを宣言&lt;a href=&quot;qobject#Q_ENUM&quot;&gt;Q_ENUMは、&lt;/a&gt;（）内の利用できるようにクラス内の列挙タイプのリストを宣言する&lt;a href=&quot;properties&quot;&gt;プロパティシステム&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0dc3ccf2ba055573f41ffab03bf5059e4c36e6fe" translate="yes" xml:space="preserve">
          <source>In addition to the standard CMYK model, Qt provides an alpha-channel to feature &lt;a href=&quot;qcolor#alpha-blended-drawing&quot;&gt;alpha-blended drawing&lt;/a&gt;.</source>
          <target state="translated">標準のCMYKモデルに加えて、Qtは&lt;a href=&quot;qcolor#alpha-blended-drawing&quot;&gt;アルファブレンド描画&lt;/a&gt;を特徴とするアルファチャネルを提供します。</target>
        </trans-unit>
        <trans-unit id="0be17f054f12e2fb38a6a1f485ac2bf01fa897ed" translate="yes" xml:space="preserve">
          <source>In addition to the standard HSV model, Qt provides an alpha-channel to feature &lt;a href=&quot;qcolor#alpha-blended-drawing&quot;&gt;alpha-blended drawing&lt;/a&gt;.</source>
          <target state="translated">標準のHSVモデルに加えて、Qtは&lt;a href=&quot;qcolor#alpha-blended-drawing&quot;&gt;アルファブレンド描画&lt;/a&gt;を特徴とするアルファチャネルを提供します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
