<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="numpy">
    <body>
      <group id="numpy">
        <trans-unit id="e9f285095a214517cc70148a152aa9ce3bfb1555" translate="yes" xml:space="preserve">
          <source>Least squares fit of Chebyshev series to data.</source>
          <target state="translated">チェビシェフ級数のデータへの最小二乗適合。</target>
        </trans-unit>
        <trans-unit id="5eede6c92597c6ad1ec14f2a50e868bfa8dbcef5" translate="yes" xml:space="preserve">
          <source>Least squares fit of Hermite series to data.</source>
          <target state="translated">ハーミット級数のデータへの最小二乗適合。</target>
        </trans-unit>
        <trans-unit id="f9834397596bb1c91a60ebd7bed6c56b93f210b5" translate="yes" xml:space="preserve">
          <source>Least squares fit of Laguerre series to data.</source>
          <target state="translated">ラゲール級数のデータへの最小二乗適合。</target>
        </trans-unit>
        <trans-unit id="60abe6780ea6293285c10210c3c968485e58937b" translate="yes" xml:space="preserve">
          <source>Least squares fit of Legendre series to data.</source>
          <target state="translated">レジェンドレ級数のデータへの最小二乗適合。</target>
        </trans-unit>
        <trans-unit id="f70b890f268681837dd642a40e85f47d99c8ef5c" translate="yes" xml:space="preserve">
          <source>Least squares fit to data.</source>
          <target state="translated">データへの最小二乗適合。</target>
        </trans-unit>
        <trans-unit id="82d4ad107d684ab9ad44770f05b7a2542d27bae6" translate="yes" xml:space="preserve">
          <source>Least squares polynomial fit.</source>
          <target state="translated">最小二乗多項式フィット。</target>
        </trans-unit>
        <trans-unit id="66b99a01120f0770d01e2e70f30aa7b3e6d8760b" translate="yes" xml:space="preserve">
          <source>Least-squares fit of a polynomial to data.</source>
          <target state="translated">データへの多項式の最小二乗適合。</target>
        </trans-unit>
        <trans-unit id="004f7153cd5215d911c25b804b9cb64fc053135e" translate="yes" xml:space="preserve">
          <source>Least-squares solution. If &lt;code&gt;b&lt;/code&gt; is two-dimensional, the solutions are in the &lt;code&gt;K&lt;/code&gt; columns of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">最小二乗解。場合 &lt;code&gt;b&lt;/code&gt; 2次元である、ソリューションはにある &lt;code&gt;K&lt;/code&gt; 個の列 &lt;code&gt;x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8e3bf79d3ac96cdf89ed0ca352f8850960c3aecf" translate="yes" xml:space="preserve">
          <source>Leg of the triangle(s). If &lt;code&gt;x1.shape != x2.shape&lt;/code&gt;, they must be broadcastable to a common shape (which becomes the shape of the output).</source>
          <target state="translated">三角形の脚。 &lt;code&gt;x1.shape != x2.shape&lt;/code&gt; 場合、それらは共通の形状にブロードキャスト可能でなければなりません（これが出力の形状になります）。</target>
        </trans-unit>
        <trans-unit id="7a03f0fe89c9579b9b2b236650c98185edc2fe62" translate="yes" xml:space="preserve">
          <source>Legacy Random Generation</source>
          <target state="translated">レガシーランダム世代</target>
        </trans-unit>
        <trans-unit id="47a5d89b5a8a2f363ca5b4a1476eb173fc07ab11" translate="yes" xml:space="preserve">
          <source>Legendre</source>
          <target state="translated">Legendre</target>
        </trans-unit>
        <trans-unit id="4120cea9b471c879abda7b1336aba3d61c52e3bc" translate="yes" xml:space="preserve">
          <source>Legendre Class</source>
          <target state="translated">レジェンドレクラス</target>
        </trans-unit>
        <trans-unit id="b4a47072941f51eec5be92fa7536302b1cd27189" translate="yes" xml:space="preserve">
          <source>Legendre Module (&lt;code&gt;numpy.polynomial.legendre&lt;/code&gt;)</source>
          <target state="translated">ルジャンドルモジュール（ &lt;code&gt;numpy.polynomial.legendre&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="a6b7c39b7f03fb5bf1916b89cb05334bb7660fc8" translate="yes" xml:space="preserve">
          <source>Legendre Module (numpy.polynomial.legendre)</source>
          <target state="translated">凡例モジュール (numpy.polynomial.legendre)</target>
        </trans-unit>
        <trans-unit id="72a4b81826e99e6fe744c1d98416a1d24f591803" translate="yes" xml:space="preserve">
          <source>Legendre coefficients in order of increasing degree, i.e., &lt;code&gt;(1, 2, 3)&lt;/code&gt; gives &lt;code&gt;1*P_0(x) + 2*P_1(x) + 3*P_2(x)&lt;/code&gt;.</source>
          <target state="translated">ルジャンドル係数の次数の昇順、つまり &lt;code&gt;(1, 2, 3)&lt;/code&gt; は &lt;code&gt;1*P_0(x) + 2*P_1(x) + 3*P_2(x)&lt;/code&gt; 与えます。</target>
        </trans-unit>
        <trans-unit id="dd1aecb7d54479faf64417ed750dd54dbc48134e" translate="yes" xml:space="preserve">
          <source>Legendre coefficients ordered from low to high. If &lt;code&gt;y&lt;/code&gt; was 2-D, the coefficients for the data in column k of &lt;code&gt;y&lt;/code&gt; are in column &lt;code&gt;k&lt;/code&gt;. If &lt;code&gt;deg&lt;/code&gt; is specified as a list, coefficients for terms not included in the fit are set equal to zero in the returned &lt;code&gt;coef&lt;/code&gt;.</source>
          <target state="translated">ルジャンドル係数は、低いものから高いものへと並べられています。場合 &lt;code&gt;y&lt;/code&gt; が 2-Dであった、の列kにおけるデータの係数 &lt;code&gt;y&lt;/code&gt; は、列にある &lt;code&gt;k&lt;/code&gt; 。 &lt;code&gt;deg&lt;/code&gt; がリストとして指定されている場合、近似に含まれない項の係数は、返される &lt;code&gt;coef&lt;/code&gt; でゼロに等しく設定されます。</target>
        </trans-unit>
        <trans-unit id="36661c8b6df50f0810e8abcd38c911e37700210a" translate="yes" xml:space="preserve">
          <source>Legendre series</source>
          <target state="translated">レジェンドレシリーズ</target>
        </trans-unit>
        <trans-unit id="cff0f8c14f012c4d84feceb1b721e76e38f2b7e7" translate="yes" xml:space="preserve">
          <source>Legendre series coefficient array of the integral.</source>
          <target state="translated">積分のレジェンドレ級数係数配列。</target>
        </trans-unit>
        <trans-unit id="e423b1233d9fcd2c8894e66b68b4670d1797fcf6" translate="yes" xml:space="preserve">
          <source>Legendre series of power.</source>
          <target state="translated">レジェンドレシリーズのパワー。</target>
        </trans-unit>
        <trans-unit id="cbfaa0f2130ef078276a68c292602bd146355698" translate="yes" xml:space="preserve">
          <source>Legendre series of the derivative.</source>
          <target state="translated">導関数のレジェンドレ級数。</target>
        </trans-unit>
        <trans-unit id="0c94fd4bbecdfa33cfa2085e96aaf27eb258cb91" translate="yes" xml:space="preserve">
          <source>Legendre series whose graph is a straight line.</source>
          <target state="translated">グラフが直線であるレジェンドレ級数。</target>
        </trans-unit>
        <trans-unit id="9c6dd8780cca130b14ebf98dc6a58e0b8fde7f4f" translate="yes" xml:space="preserve">
          <source>Legendre weight function (= 1).</source>
          <target state="translated">レジェンドレの重み関数(=1)。</target>
        </trans-unit>
        <trans-unit id="4086e8682b0af8e09d2dfa82cd2fdc76b5bc8f8d" translate="yes" xml:space="preserve">
          <source>Legendre.__call__()</source>
          <target state="translated">Legendre.__call__()</target>
        </trans-unit>
        <trans-unit id="38dffd4eba846de64c001288fae359b48ca7be06" translate="yes" xml:space="preserve">
          <source>Legendre.basis()</source>
          <target state="translated">Legendre.basis()</target>
        </trans-unit>
        <trans-unit id="03d79bdd0c244e4a8685e0cc2ed8f9bba14f2e75" translate="yes" xml:space="preserve">
          <source>Legendre.cast()</source>
          <target state="translated">Legendre.cast()</target>
        </trans-unit>
        <trans-unit id="c3757be303c19145dd4cdc1f1fdbe7778af7a9b8" translate="yes" xml:space="preserve">
          <source>Legendre.convert()</source>
          <target state="translated">Legendre.convert()</target>
        </trans-unit>
        <trans-unit id="30694a9a60e1750eef89dd48cd213d03dc835778" translate="yes" xml:space="preserve">
          <source>Legendre.copy()</source>
          <target state="translated">Legendre.copy()</target>
        </trans-unit>
        <trans-unit id="67fd9bca2a23484298ecfc5a44e6dbe767f8deee" translate="yes" xml:space="preserve">
          <source>Legendre.cutdeg()</source>
          <target state="translated">Legendre.cutdeg()</target>
        </trans-unit>
        <trans-unit id="de6280bafa05de1ba0dc2f4ee315b2f1c3f376c2" translate="yes" xml:space="preserve">
          <source>Legendre.degree()</source>
          <target state="translated">Legendre.degree()</target>
        </trans-unit>
        <trans-unit id="065d87c76a899767772e29e52989a91f8e7a3c94" translate="yes" xml:space="preserve">
          <source>Legendre.deriv()</source>
          <target state="translated">Legendre.deriv()</target>
        </trans-unit>
        <trans-unit id="dc4f96a4666e84f37c719b2fad25d196a612cc45" translate="yes" xml:space="preserve">
          <source>Legendre.domain</source>
          <target state="translated">Legendre.domain</target>
        </trans-unit>
        <trans-unit id="11c2423446ff507ce6eb98675dde94c735489c69" translate="yes" xml:space="preserve">
          <source>Legendre.fit()</source>
          <target state="translated">Legendre.fit()</target>
        </trans-unit>
        <trans-unit id="e21bd7963e9b515a9f4b47a6bcd09e263e8089ee" translate="yes" xml:space="preserve">
          <source>Legendre.fromroots()</source>
          <target state="translated">Legendre.fromroots()</target>
        </trans-unit>
        <trans-unit id="d5d912a486cc7b8f50ccecabe4f025c8e6390336" translate="yes" xml:space="preserve">
          <source>Legendre.has_samecoef()</source>
          <target state="translated">Legendre.has_samecoef()</target>
        </trans-unit>
        <trans-unit id="6666d87ba29b4b8ae40e97a1bf2868d699324607" translate="yes" xml:space="preserve">
          <source>Legendre.has_samedomain()</source>
          <target state="translated">Legendre.has_samedomain()</target>
        </trans-unit>
        <trans-unit id="3760f41cb73e83c63c3b041fb1850faaf75fa051" translate="yes" xml:space="preserve">
          <source>Legendre.has_sametype()</source>
          <target state="translated">Legendre.has_sametype()</target>
        </trans-unit>
        <trans-unit id="776a3387bba3bfaabfedc34f80f56441350be257" translate="yes" xml:space="preserve">
          <source>Legendre.has_samewindow()</source>
          <target state="translated">Legendre.has_samewindow()</target>
        </trans-unit>
        <trans-unit id="d270c39a15f9cf84d450407eca8d04e34120a21a" translate="yes" xml:space="preserve">
          <source>Legendre.identity()</source>
          <target state="translated">Legendre.identity()</target>
        </trans-unit>
        <trans-unit id="a025b9af1289248a2a7d813cd3249b6c59a1b90e" translate="yes" xml:space="preserve">
          <source>Legendre.integ()</source>
          <target state="translated">Legendre.integ()</target>
        </trans-unit>
        <trans-unit id="b1309f9dd6fba8397cba7645c87fd874d753067f" translate="yes" xml:space="preserve">
          <source>Legendre.linspace()</source>
          <target state="translated">Legendre.linspace()</target>
        </trans-unit>
        <trans-unit id="3b41ed00816bbf0ea94cb8ce7b846f9374dce867" translate="yes" xml:space="preserve">
          <source>Legendre.mapparms()</source>
          <target state="translated">Legendre.mapparms()</target>
        </trans-unit>
        <trans-unit id="498206cc30a61e0936daddec7420065e1fb22906" translate="yes" xml:space="preserve">
          <source>Legendre.roots()</source>
          <target state="translated">Legendre.roots()</target>
        </trans-unit>
        <trans-unit id="c917ded9bfb105e1d1214678489c4d2d643e0789" translate="yes" xml:space="preserve">
          <source>Legendre.trim()</source>
          <target state="translated">Legendre.trim()</target>
        </trans-unit>
        <trans-unit id="4b818047b63ac1fb3abbf9ee09b84ccf39af0370" translate="yes" xml:space="preserve">
          <source>Legendre.truncate()</source>
          <target state="translated">Legendre.truncate()</target>
        </trans-unit>
        <trans-unit id="a0ba05a259a8b34022dc6e1b217b0390cf104e0b" translate="yes" xml:space="preserve">
          <source>Length &lt;code&gt;(nin + nout) * ntypes&lt;/code&gt; array of &lt;code&gt;char&lt;/code&gt; encoding the &lt;a href=&quot;generated/numpy.dtype.num#numpy.dtype.num&quot;&gt;&lt;code&gt;numpy.dtype.num&lt;/code&gt;&lt;/a&gt; (built-in only) that the corresponding function in the &lt;code&gt;func&lt;/code&gt; array accepts. For instance, for a comparison ufunc with three &lt;code&gt;ntypes&lt;/code&gt;, two &lt;code&gt;nin&lt;/code&gt; and one &lt;code&gt;nout&lt;/code&gt;, where the first function accepts &lt;code&gt;numpy.int32&lt;/code&gt; and the the second &lt;code&gt;numpy.int64&lt;/code&gt;, with both returning &lt;code&gt;numpy.bool_&lt;/code&gt;, &lt;code&gt;types&lt;/code&gt; would be &lt;code&gt;(char[]) {5, 5, 0, 7, 7, 0}&lt;/code&gt; since &lt;code&gt;NPY_INT32&lt;/code&gt; is 5, &lt;code&gt;NPY_INT64&lt;/code&gt; is 7, and &lt;code&gt;NPY_BOOL&lt;/code&gt; is 0.</source>
          <target state="translated">長さ &lt;code&gt;(nin + nout) * ntypes&lt;/code&gt; の配列 &lt;code&gt;char&lt;/code&gt; コード&lt;a href=&quot;generated/numpy.dtype.num#numpy.dtype.num&quot;&gt; &lt;code&gt;numpy.dtype.num&lt;/code&gt; &lt;/a&gt;に対応する機能は、（内蔵のみ） &lt;code&gt;func&lt;/code&gt; アレイが受け入れるを。例えば、3とufunc比較のため &lt;code&gt;ntypes&lt;/code&gt; 二 &lt;code&gt;nin&lt;/code&gt; 一 &lt;code&gt;nout&lt;/code&gt; 第関数が受け付け、 &lt;code&gt;numpy.int32&lt;/code&gt; 及び第二 &lt;code&gt;numpy.int64&lt;/code&gt; を両方戻すと、 &lt;code&gt;numpy.bool_&lt;/code&gt; 、 &lt;code&gt;types&lt;/code&gt; あろう &lt;code&gt;(char[]) {5, 5, 0, 7, 7, 0}&lt;/code&gt; ため &lt;code&gt;NPY_INT32&lt;/code&gt; が 5である、 &lt;code&gt;NPY_INT64&lt;/code&gt; は 7であり、そして &lt;code&gt;NPY_BOOL&lt;/code&gt; は 0です。</target>
        </trans-unit>
        <trans-unit id="e599dfd0500969f55b8c9d010461f8e1fcc41925" translate="yes" xml:space="preserve">
          <source>Length of each array element, in number of characters. Default is 1.</source>
          <target state="translated">各配列要素の長さを文字数で表します。デフォルトは1です。</target>
        </trans-unit>
        <trans-unit id="6dbef5ea0e7b53958b8a2d75b0863dd2996ea77a" translate="yes" xml:space="preserve">
          <source>Length of one array element in bytes.</source>
          <target state="translated">1つの配列要素の長さをバイト単位で指定します。</target>
        </trans-unit>
        <trans-unit id="ebd0316d087a92fa193507d4dfe490f6483edcaf" translate="yes" xml:space="preserve">
          <source>Length of the inverse FFT, the number of points along transformation axis in the input to use. If &lt;code&gt;n&lt;/code&gt; is smaller than the length of the input, the input is cropped. If it is larger, the input is padded with zeros. If &lt;code&gt;n&lt;/code&gt; is not given, the length of the input along the axis specified by &lt;code&gt;axis&lt;/code&gt; is used.</source>
          <target state="translated">逆FFTの長さ、使用する入力の変換軸に沿ったポイントの数。 &lt;code&gt;n&lt;/code&gt; が入力の長さよりも小さい場合、入力はトリミングされます。大きい場合、入力はゼロで埋められます。 &lt;code&gt;n&lt;/code&gt; が指定されていない場合、axisで指定された &lt;code&gt;axis&lt;/code&gt; 沿った入力の長さが使用されます。</target>
        </trans-unit>
        <trans-unit id="c0386e146b5b66f11c90240baf5f54bbd4a84b7b" translate="yes" xml:space="preserve">
          <source>Length of the transformed axis of the output. For &lt;code&gt;n&lt;/code&gt; output points, &lt;code&gt;n//2 + 1&lt;/code&gt; input points are necessary. If the input is longer than this, it is cropped. If it is shorter than this, it is padded with zeros. If &lt;code&gt;n&lt;/code&gt; is not given, it is determined from the length of the input along the axis specified by &lt;code&gt;axis&lt;/code&gt;.</source>
          <target state="translated">出力の変換された軸の長さ。ための &lt;code&gt;n&lt;/code&gt; 出力点、 &lt;code&gt;n//2 + 1&lt;/code&gt; の入力ポイントが必要です。入力がこれより長い場合は、切り取られます。これより短い場合は、ゼロが埋め込まれます。 &lt;code&gt;n&lt;/code&gt; が指定されていない場合は、axisで指定された &lt;code&gt;axis&lt;/code&gt; 沿った入力の長さから決定されます。</target>
        </trans-unit>
        <trans-unit id="ef669ab3a842002f9a1fb7bac5550ccceaa27247" translate="yes" xml:space="preserve">
          <source>Length of the transformed axis of the output. For &lt;code&gt;n&lt;/code&gt; output points, &lt;code&gt;n//2+1&lt;/code&gt; input points are necessary. If the input is longer than this, it is cropped. If it is shorter than this, it is padded with zeros. If &lt;code&gt;n&lt;/code&gt; is not given, it is determined from the length of the input along the axis specified by &lt;code&gt;axis&lt;/code&gt;.</source>
          <target state="translated">出力の変換された軸の長さ。ための &lt;code&gt;n&lt;/code&gt; 出力点、 &lt;code&gt;n//2+1&lt;/code&gt; の入力ポイントが必要です。入力がこれより長い場合は、切り取られます。これより短い場合は、ゼロが埋め込まれます。 &lt;code&gt;n&lt;/code&gt; が指定されていない場合は、axisで指定された &lt;code&gt;axis&lt;/code&gt; 沿った入力の長さから決定されます。</target>
        </trans-unit>
        <trans-unit id="9649fc48731a6d9a87c71452f8efbcb7f76b78d4" translate="yes" xml:space="preserve">
          <source>Length of the transformed axis of the output. If &lt;code&gt;n&lt;/code&gt; is smaller than the length of the input, the input is cropped. If it is larger, the input is padded with zeros. If &lt;code&gt;n&lt;/code&gt; is not given, the length of the input along the axis specified by &lt;code&gt;axis&lt;/code&gt; is used.</source>
          <target state="translated">出力の変換された軸の長さ。 &lt;code&gt;n&lt;/code&gt; が入力の長さよりも小さい場合、入力はトリミングされます。大きい場合、入力はゼロで埋められます。 &lt;code&gt;n&lt;/code&gt; が指定されていない場合、axisで指定された &lt;code&gt;axis&lt;/code&gt; 沿った入力の長さが使用されます。</target>
        </trans-unit>
        <trans-unit id="838e5e82eb9b3c833687dc387dbd43309bd32602" translate="yes" xml:space="preserve">
          <source>Length of the transformed axis of the output. If &lt;code&gt;n&lt;/code&gt; is smaller than the length of the input, the input is cropped. If it is larger, the input is padded with zeros. If &lt;code&gt;n&lt;/code&gt; is not given, the length of the input along the axis specified by &lt;code&gt;axis&lt;/code&gt; is used. See notes about padding issues.</source>
          <target state="translated">出力の変換された軸の長さ。 &lt;code&gt;n&lt;/code&gt; が入力の長さよりも小さい場合、入力はトリミングされます。大きい場合、入力はゼロで埋められます。 &lt;code&gt;n&lt;/code&gt; が指定されていない場合、axisで指定された &lt;code&gt;axis&lt;/code&gt; 沿った入力の長さが使用されます。パディングの問題に関するメモを参照してください。</target>
        </trans-unit>
        <trans-unit id="20b7b6096b899f364abc1b0ab113ac1d88c95817" translate="yes" xml:space="preserve">
          <source>Lentner, Marvin, &amp;ldquo;Elementary Applied Statistics&amp;rdquo;, Bogden and Quigley, 1972.</source>
          <target state="translated">レントナー、マーヴィン、「エレメンタリーアプライド統計」、ボグデンアンドクィグリー、1972年。</target>
        </trans-unit>
        <trans-unit id="e99e5b627f7ed42d45bd8cf2acdec386f4c6174c" translate="yes" xml:space="preserve">
          <source>Less robust estimator that that takes into account data variability and data size.</source>
          <target state="translated">データのばらつきやデータサイズを考慮したロバスト性の低い推定器。</target>
        </trans-unit>
        <trans-unit id="ef5fe1edf37940bd463fee8eda068dc8d66b0f8a" translate="yes" xml:space="preserve">
          <source>Let</source>
          <target state="translated">Let</target>
        </trans-unit>
        <trans-unit id="a718bc5ba689b0611826e8a00c42db91a4cc33c1" translate="yes" xml:space="preserve">
          <source>Let &lt;code&gt;M = A.ndim&lt;/code&gt;, &lt;code&gt;N = B.ndim&lt;/code&gt;. Then the result, &lt;code&gt;C&lt;/code&gt;, of &lt;code&gt;op.outer(A, B)&lt;/code&gt; is an array of dimension M + N such that:</source>
          <target state="translated">レッツ &lt;code&gt;M = A.ndim&lt;/code&gt; 、 &lt;code&gt;N = B.ndim&lt;/code&gt; 。次に、 &lt;code&gt;op.outer(A, B)&lt;/code&gt; の結果 &lt;code&gt;C&lt;/code&gt; は、次のような次元M + Nの配列になります。</target>
        </trans-unit>
        <trans-unit id="c21492f5c1039f68826ed62d8fddcbe2ecf43d60" translate="yes" xml:space="preserve">
          <source>Let &lt;code&gt;x.shape&lt;/code&gt; be (10,20,30,40,50) and suppose &lt;code&gt;ind_1&lt;/code&gt; and &lt;code&gt;ind_2&lt;/code&gt; can be broadcast to the shape (2,3,4). Then &lt;code&gt;x[:,ind_1,ind_2]&lt;/code&gt; has shape (10,2,3,4,40,50) because the (20,30)-shaped subspace from X has been replaced with the (2,3,4) subspace from the indices. However, &lt;code&gt;x[:,ind_1,:,ind_2]&lt;/code&gt; has shape (2,3,4,10,30,50) because there is no unambiguous place to drop in the indexing subspace, thus it is tacked-on to the beginning. It is always possible to use &lt;a href=&quot;generated/numpy.ndarray.transpose#numpy.ndarray.transpose&quot;&gt;&lt;code&gt;.transpose()&lt;/code&gt;&lt;/a&gt; to move the subspace anywhere desired. Note that this example cannot be replicated using &lt;a href=&quot;generated/numpy.take#numpy.take&quot;&gt;&lt;code&gt;take&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">してみましょう &lt;code&gt;x.shape&lt;/code&gt; が可能（10,20,30,40,50）と仮定 &lt;code&gt;ind_1&lt;/code&gt; と &lt;code&gt;ind_2&lt;/code&gt; は形状（2,3,4）に放送することができます。次に、 &lt;code&gt;x[:,ind_1,ind_2]&lt;/code&gt; 形状は（10,2,3,4,40,50）になります。これは、Xの（20,30）形状の部分空間が、（2,3,4）の部分空間に置き換えられたためです。インデックス。ただし、 &lt;code&gt;x[:,ind_1,:,ind_2]&lt;/code&gt; 形状は（2,3,4,10,30,50）です。これは、インデックス付けサブスペースにドロップするための明確な場所がないため、最初に追加されます。&lt;a href=&quot;generated/numpy.ndarray.transpose#numpy.ndarray.transpose&quot;&gt; &lt;code&gt;.transpose()&lt;/code&gt; &lt;/a&gt;を使用してサブスペースを必要な場所に移動することは常に可能です。この例は、&lt;a href=&quot;generated/numpy.take#numpy.take&quot;&gt; &lt;code&gt;take&lt;/code&gt; &lt;/a&gt;を使用して複製することはできません。</target>
        </trans-unit>
        <trans-unit id="d53ca7c39e959075c64a326e51c71e27bb307d6d" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s consider a list of elements, &lt;code&gt;x&lt;/code&gt;, where values of -9999. represent missing data. We wish to compute the average value of the data and the vector of anomalies (deviations from the average):</source>
          <target state="translated">要素のリスト &lt;code&gt;x&lt;/code&gt; について考えてみましょう。値は-9999です。欠損データを表します。データの平均値と異常のベクトル（平均からの偏差）を計算します。</target>
        </trans-unit>
        <trans-unit id="ab1ea5de1d1447221ec240c0905b303173635736" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s consider an array &lt;code&gt;d&lt;/code&gt; of random floats between 0 and 1. We wish to compute the average of the values of &lt;code&gt;d&lt;/code&gt; while ignoring any data outside the range &lt;code&gt;[0.1, 0.9]&lt;/code&gt;:</source>
          <target state="translated">のが配列考える &lt;code&gt;d&lt;/code&gt; 我々は、の値の平均値を計算したい0と1の間のランダムな浮動小数点のを &lt;code&gt;d&lt;/code&gt; は範囲外のデータを無視して &lt;code&gt;[0.1, 0.9]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="39281dff86138ded282e6212c34eb9cda8834f15" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s do 20,000 trials of the model, and count the number that generate zero positive results.</source>
          <target state="translated">モデルを20,000回試行して、肯定的な結果がゼロになる数を数えます。</target>
        </trans-unit>
        <trans-unit id="538c09161b8497f998404cafc34964ed3a445575" translate="yes" xml:space="preserve">
          <source>Licensed under the 3-clause BSD License.</source>
          <target state="translated">3句BSDライセンスの下でライセンスされています。</target>
        </trans-unit>
        <trans-unit id="b0484b837c9aac64b9b4f0cbb8a409c60f826cd6" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#c.PyArray_DescrConverter&quot;&gt;&lt;code&gt;PyArray_DescrConverter&lt;/code&gt;&lt;/a&gt; except it aligns C-struct-like objects on word-boundaries as the compiler would.</source>
          <target state="translated">同様&lt;a href=&quot;#c.PyArray_DescrConverter&quot;&gt; &lt;code&gt;PyArray_DescrConverter&lt;/code&gt; &lt;/a&gt;コンパイラと同じように、それはC-構造体のようなワード境界上のオブジェクトを整列除いて。</target>
        </trans-unit>
        <trans-unit id="2bf9a983b58a3025088acd0d34cc34c35bed8eba" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#c.PyArray_DescrConverter2&quot;&gt;&lt;code&gt;PyArray_DescrConverter2&lt;/code&gt;&lt;/a&gt; except it aligns C-struct-like objects on word-boundaries as the compiler would.</source>
          <target state="translated">&lt;a href=&quot;#c.PyArray_DescrConverter2&quot;&gt; &lt;code&gt;PyArray_DescrConverter2&lt;/code&gt; &lt;/a&gt;と同様ですが、コンパイラーのようにC構造体のようなオブジェクトをワード境界に配置します。</target>
        </trans-unit>
        <trans-unit id="98e8d5db12d0ec6df75e2b77dc6308321b737245" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;generated/numpy.char.find#numpy.char.find&quot;&gt;&lt;code&gt;find&lt;/code&gt;&lt;/a&gt;, but raises &lt;code&gt;ValueError&lt;/code&gt; when the substring is not found.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.char.find#numpy.char.find&quot;&gt; &lt;code&gt;find&lt;/code&gt; &lt;/a&gt;と似ていますが、部分文字列が見つからない場合は &lt;code&gt;ValueError&lt;/code&gt; を送出します。</target>
        </trans-unit>
        <trans-unit id="8cac4055aba9315ef35a508ccbff6fd2fccbce50" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;generated/numpy.char.rfind#numpy.char.rfind&quot;&gt;&lt;code&gt;rfind&lt;/code&gt;&lt;/a&gt;, but raises &lt;code&gt;ValueError&lt;/code&gt; when the substring &lt;code&gt;sub&lt;/code&gt; is not found.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.char.rfind#numpy.char.rfind&quot;&gt; &lt;code&gt;rfind&lt;/code&gt; &lt;/a&gt;と似ていますが、部分文字列 &lt;code&gt;sub&lt;/code&gt; が見つからない場合は &lt;code&gt;ValueError&lt;/code&gt; を送出します。</target>
        </trans-unit>
        <trans-unit id="bfb637364ad5b206ba50bed21f3142c132fe9341" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/reference/generated/numpy.chararray.find.html#numpy.chararray.find&quot;&gt;&lt;code&gt;find&lt;/code&gt;&lt;/a&gt;, but raises &lt;code&gt;ValueError&lt;/code&gt; when the substring is not found.</source>
          <target state="translated">&lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/reference/generated/numpy.chararray.find.html#numpy.chararray.find&quot;&gt; &lt;code&gt;find&lt;/code&gt; &lt;/a&gt;と似ていますが、部分文字列が見つからない場合は &lt;code&gt;ValueError&lt;/code&gt; を送出します。</target>
        </trans-unit>
        <trans-unit id="6f8c624e10b2f68f4700be90af9ceef9f419abcf" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/reference/generated/numpy.chararray.rfind.html#numpy.chararray.rfind&quot;&gt;&lt;code&gt;rfind&lt;/code&gt;&lt;/a&gt;, but raises &lt;code&gt;ValueError&lt;/code&gt; when the substring &lt;code&gt;sub&lt;/code&gt; is not found.</source>
          <target state="translated">&lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/reference/generated/numpy.chararray.rfind.html#numpy.chararray.rfind&quot;&gt; &lt;code&gt;rfind&lt;/code&gt; &lt;/a&gt;と似ていますが、部分文字列 &lt;code&gt;sub&lt;/code&gt; が見つからない場合は &lt;code&gt;ValueError&lt;/code&gt; を送出します。</target>
        </trans-unit>
        <trans-unit id="74d7df04563822c7d8ad24dbe267870b77fbb351" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;numpy.char.find#numpy.char.find&quot;&gt;&lt;code&gt;find&lt;/code&gt;&lt;/a&gt;, but raises &lt;code&gt;ValueError&lt;/code&gt; when the substring is not found.</source>
          <target state="translated">&lt;a href=&quot;numpy.char.find#numpy.char.find&quot;&gt; &lt;code&gt;find&lt;/code&gt; &lt;/a&gt;と似ていますが、部分文字列が見つからない場合は &lt;code&gt;ValueError&lt;/code&gt; を送出します。</target>
        </trans-unit>
        <trans-unit id="b35ea9f95fe9a083c883dcd6041e1ed2b46d8192" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;numpy.char.rfind#numpy.char.rfind&quot;&gt;&lt;code&gt;rfind&lt;/code&gt;&lt;/a&gt;, but raises &lt;code&gt;ValueError&lt;/code&gt; when the substring &lt;code&gt;sub&lt;/code&gt; is not found.</source>
          <target state="translated">&lt;a href=&quot;numpy.char.rfind#numpy.char.rfind&quot;&gt; &lt;code&gt;rfind&lt;/code&gt; &lt;/a&gt;と似ていますが、部分文字列 &lt;code&gt;sub&lt;/code&gt; が見つからない場合は &lt;code&gt;ValueError&lt;/code&gt; を送出します。</target>
        </trans-unit>
        <trans-unit id="8f6786bbc0e6826ccf967ce3d26832cec08da525" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;catch_warnings&lt;/code&gt; this context manager is not threadsafe.</source>
          <target state="translated">&lt;code&gt;catch_warnings&lt;/code&gt; と同様に、このコンテキストマネージャはスレッドセーフではありません。</target>
        </trans-unit>
        <trans-unit id="b0fa83334e9080fab8905202d2a0b49831c3f225" translate="yes" xml:space="preserve">
          <source>Like for other types, NumPy includes a typedef npy_half for the 16 bit float. Unlike for most of the other types, you cannot use this as a normal type in C, since it is a typedef for npy_uint16. For example, 1.0 looks like 0x3c00 to C, and if you do an equality comparison between the different signed zeros, you will get -0.0 != 0.0 (0x8000 != 0x0000), which is incorrect.</source>
          <target state="translated">他の型と同様に、NumPyには16ビットのfloat用の型定義子npy_halfが含まれています。他のほとんどの型とは異なり、これはnpy_uint16の型定義であるため、C言語では通常の型として使用することはできません。例えば、1.0はC言語では0x3c00のように見えますが、異なる符号付きゼロの間で等値比較を行うと、-0.0 !=0.0 (0x8000 !=0x0000)となり、これは正しくありません。</target>
        </trans-unit>
        <trans-unit id="e112999c2cd378720fa09f5bf6d3cb8761f7e014" translate="yes" xml:space="preserve">
          <source>Like with some other special methods in python, such as &lt;code&gt;__hash__&lt;/code&gt; and &lt;code&gt;__iter__&lt;/code&gt;, it is possible to indicate that your class does &lt;em&gt;not&lt;/em&gt; support ufuncs by setting &lt;code&gt;__array_ufunc__ = None&lt;/code&gt;. Ufuncs always raise &lt;a href=&quot;https://docs.python.org/dev/library/exceptions.html#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; when called on an object that sets &lt;code&gt;__array_ufunc__ = None&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;__hash__&lt;/code&gt; や &lt;code&gt;__iter__&lt;/code&gt; など、Pythonの他のいくつかの特別なメソッドと同様に、 &lt;code&gt;__array_ufunc__ = None&lt;/code&gt; 設定することにより、クラスがufuncをサポートしてい&lt;em&gt;ない&lt;/em&gt;ことを示すことができます。Ufuncs は、 &lt;code&gt;__array_ufunc__ = None&lt;/code&gt; を設定するオブジェクトで呼び出されると、常に&lt;a href=&quot;https://docs.python.org/dev/library/exceptions.html#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; を発生&lt;/a&gt;させます。</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">Limitations</target>
        </trans-unit>
        <trans-unit id="aed0f783a12a4ca0992442cfbd711f6845a91b7b" translate="yes" xml:space="preserve">
          <source>Limpert, E., Stahel, W. A., and Abbt, M., &amp;ldquo;Log-normal Distributions across the Sciences: Keys and Clues,&amp;rdquo; BioScience, Vol. 51, No. 5, May, 2001. &lt;a href=&quot;https://stat.ethz.ch/~stahel/lognormal/bioscience.pdf&quot;&gt;https://stat.ethz.ch/~stahel/lognormal/bioscience.pdf&lt;/a&gt;</source>
          <target state="translated">Limpert、E.、Stahel、WA、およびAbbt、M。、「サイエンス全体の対数正規分布：キーと手がかり」、BioScience、Vol。51、No。5、2001年5月&lt;a href=&quot;https://stat.ethz.ch/~stahel/lognormal/bioscience.pdf&quot;&gt;。https：//stat.ethz.ch/~stahel/lognormal/bioscience.pdf&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fbfdf4025591ea0589baa96d7f54fd5d7f0a5dbd" translate="yes" xml:space="preserve">
          <source>Line breaks are not included in the resulting list unless keepends is given and true.</source>
          <target state="translated">keependsが与えられていてtrueでない限り、改行は結果のリストには含まれません。</target>
        </trans-unit>
        <trans-unit id="06d74260ba46e8ed76ff22dda956f18a7b66203c" translate="yes" xml:space="preserve">
          <source>Linear algebra</source>
          <target state="translated">線形代数</target>
        </trans-unit>
        <trans-unit id="ef4be3efd16d5b211ab89b5efbf030ca1bafba61" translate="yes" xml:space="preserve">
          <source>Linear algebra (&lt;code&gt;numpy.linalg&lt;/code&gt;)</source>
          <target state="translated">線形代数（ &lt;code&gt;numpy.linalg&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="e2be6b18cf91c04a7b6c400bd00876f94a2389cb" translate="yes" xml:space="preserve">
          <source>Linear algebra (numpy.linalg)</source>
          <target state="translated">線形代数 (numpy.linalg)</target>
        </trans-unit>
        <trans-unit id="b624aab78757a9b353883b1449d6df824049976b" translate="yes" xml:space="preserve">
          <source>Linear algebra on several matrices at once</source>
          <target state="translated">一度に複数の行列の線形代数</target>
        </trans-unit>
        <trans-unit id="991cbbcb4b1ecb2172a95ff800353dc3c4b54edd" translate="yes" xml:space="preserve">
          <source>Linear map parameters between domains.</source>
          <target state="translated">ドメイン間の線形マップパラメータ。</target>
        </trans-unit>
        <trans-unit id="26958b7c786c621d84d02830a0b14f77df5b2d9e" translate="yes" xml:space="preserve">
          <source>Linking against the core math library in an extension</source>
          <target state="translated">拡張機能でのコア数学ライブラリとのリンク</target>
        </trans-unit>
        <trans-unit id="d1400c37d080d60eab76dbcb84834f7292aae696" translate="yes" xml:space="preserve">
          <source>Linux timings used Ubuntu 18.04 and GCC 7.4. Windows timings were made on Windows 10 using Microsoft C/C++ Optimizing Compiler Version 19 (Visual Studio 2015). All timings were produced on a i5-3570 processor.</source>
          <target state="translated">LinuxのタイミングはUbuntu 18.04とGCC 7.4を使用しました。Windowsのタイミングは、Microsoft C/C++Optimizing Compiler Version 19 (Visual Studio 2015)を使用してWindows 10で作成しました。すべてのタイミングは、i5-3570プロセッサで作成されました。</target>
        </trans-unit>
        <trans-unit id="decb4e37dac06b0a04b2b5a1ce16d06dbaf9430d" translate="yes" xml:space="preserve">
          <source>List of maximum degrees of the form [x_deg, y_deg, z_deg].</source>
          <target state="translated">x_deg,y_deg,z_deg]という形式の最大次数のリスト。</target>
        </trans-unit>
        <trans-unit id="16b40ddc35115642a1ebd2b343c063499d9e736a" translate="yes" xml:space="preserve">
          <source>List of maximum degrees of the form [x_deg, y_deg].</source>
          <target state="translated">x_deg,y_deg]形式の最大次数のリスト。</target>
        </trans-unit>
        <trans-unit id="3946ce7ee00307be1e56a351d33b3682868445a4" translate="yes" xml:space="preserve">
          <source>List of roots.</source>
          <target state="translated">ルーツの一覧です。</target>
        </trans-unit>
        <trans-unit id="2c7afb1b33d8f0bf102c5fdc5f3bfa27a81be1cb" translate="yes" xml:space="preserve">
          <source>List of the library&amp;rsquo;s source files. See &lt;a href=&quot;#numpy.distutils.misc_util.Configuration.add_library&quot;&gt;&lt;code&gt;add_library&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">ライブラリのソースファイルのリスト。詳細については、&lt;a href=&quot;#numpy.distutils.misc_util.Configuration.add_library&quot;&gt; &lt;code&gt;add_library&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="6519aa721c25f67c763afcfac03293aba9cab8a8" translate="yes" xml:space="preserve">
          <source>List of the sources. The list of sources may contain functions (called source generators) which must take an extension instance and a build directory as inputs and return a source file or list of source files or None. If None is returned then no sources are generated. If the Extension instance has no sources after processing all source generators, then no extension module is built.</source>
          <target state="translated">ソースのリスト。ソースのリストには、拡張子インスタンスとビルドディレクトリを入力として受け取り、ソースファイルまたはソースファイルのリストを返すか、または None を返す関数 (ソースジェネレータと呼ばれる)を含めることができます。None が返された場合、ソースは生成されません。すべてのソース・ジェネレータを処理した後で、Extension インスタンスにソースがない場合、Extension モジュールはビルドされません。</target>
        </trans-unit>
        <trans-unit id="70836ea6cfbd010e5c69675c6ed9768657e90763" translate="yes" xml:space="preserve">
          <source>Literal string representation.</source>
          <target state="translated">リテラル文字列表現。</target>
        </trans-unit>
        <trans-unit id="d75a54184aa53b5be4e832c635455d88f3cdc5e6" translate="yes" xml:space="preserve">
          <source>Load a pickle from the current string.</source>
          <target state="translated">現在の文字列からピクルスを読み込みます。</target>
        </trans-unit>
        <trans-unit id="3a504cdc1122f04029c4d408c355532536995f45" translate="yes" xml:space="preserve">
          <source>Load arrays or pickled objects from &lt;code&gt;.npy&lt;/code&gt;, &lt;code&gt;.npz&lt;/code&gt; or pickled files.</source>
          <target state="translated">&lt;code&gt;.npy&lt;/code&gt; 、 &lt;code&gt;.npz&lt;/code&gt; 、またはピクル化されたファイルから配列またはピクル化されたオブジェクトをロードします。</target>
        </trans-unit>
        <trans-unit id="9d2a30e3c587d0309a2b15e920e2381e52d3b73a" translate="yes" xml:space="preserve">
          <source>Load data from a text file, with missing values handled as specified.</source>
          <target state="translated">テキストファイルからデータをロードします。</target>
        </trans-unit>
        <trans-unit id="671e399a95a295b1b112f2ec88bde3aa682ce01d" translate="yes" xml:space="preserve">
          <source>Load data from a text file.</source>
          <target state="translated">テキストファイルからデータを読み込みます。</target>
        </trans-unit>
        <trans-unit id="ede7696890a000813048b7b45d0ec4e8eaa41ac3" translate="yes" xml:space="preserve">
          <source>Load data with missing values handled as specified.</source>
          <target state="translated">欠損値を指定通りに処理したデータを読み込みます。</target>
        </trans-unit>
        <trans-unit id="0fb4575d68b4fb0f498f6ef6cd58ad29dfef99ec" translate="yes" xml:space="preserve">
          <source>Load the files created by savez_compressed.</source>
          <target state="translated">savez_compressedで作成したファイルを読み込みます。</target>
        </trans-unit>
        <trans-unit id="00e2276e50083512489893c74a3667bfb2f8d261" translate="yes" xml:space="preserve">
          <source>Load the memmap and verify data was stored:</source>
          <target state="translated">memmapをロードして、データが保存されていることを確認します。</target>
        </trans-unit>
        <trans-unit id="4f1b35f9beeb82ff23b55bdd7e4bccbaa09655da" translate="yes" xml:space="preserve">
          <source>Loading files that contain object arrays uses the &lt;code&gt;pickle&lt;/code&gt; module, which is not secure against erroneous or maliciously constructed data. Consider passing &lt;code&gt;allow_pickle=False&lt;/code&gt; to load data that is known not to contain object arrays for the safer handling of untrusted sources.</source>
          <target state="translated">オブジェクト配列を含むファイルの読み込みには &lt;code&gt;pickle&lt;/code&gt; モジュールが使用されますが、これは誤ったデータや悪意を持って作成されたデータに対して安全ではありません。信頼できないソースをより安全に処理するために、オブジェクト配列を含まないことがわかっているデータをロードするには、 &lt;code&gt;allow_pickle=False&lt;/code&gt; を渡すことを検討してください。</target>
        </trans-unit>
        <trans-unit id="dcd21227c7ed1f7628c4569c3c3b1f97f5e4a3e0" translate="yes" xml:space="preserve">
          <source>Local file path or URL to open.</source>
          <target state="translated">開くローカルファイルのパスまたはURL。</target>
        </trans-unit>
        <trans-unit id="399e1ff0ce348a172dad0b088afb4891c55b0357" translate="yes" xml:space="preserve">
          <source>Lock instance that is shared so that the same BitGenerator can be used in multiple Generators without corrupting the state. Code that generates values from a bit generator should hold the bit generator&amp;rsquo;s lock.</source>
          <target state="translated">共有されているインスタンスをロックして、同じBitGeneratorを複数のジェネレーターで状態を壊すことなく使用できるようにします。ビットジェネレーターから値を生成するコードは、ビットジェネレーターのロックを保持する必要があります。</target>
        </trans-unit>
        <trans-unit id="2d415fb960b72005c6491287e9aedba95abd331c" translate="yes" xml:space="preserve">
          <source>Lock instance that is shared so that the same bit git generator can be used in multiple Generators without corrupting the state. Code that generates values from a bit generator should hold the bit generator&amp;rsquo;s lock.</source>
          <target state="translated">共有されるインスタンスをロックして、同じビットgitジェネレーターを複数のジェネレーターで状態を壊さずに使用できるようにします。ビットジェネレーターから値を生成するコードは、ビットジェネレーターのロックを保持する必要があります。</target>
        </trans-unit>
        <trans-unit id="107cbe58cd70b9b9564b7a980ec9a134ba83ff37" translate="yes" xml:space="preserve">
          <source>Log error message:</source>
          <target state="translated">ログのエラーメッセージを表示します。</target>
        </trans-unit>
        <trans-unit id="5b18e27bd081f5e88f5467d9d05245be1522ecbd" translate="yes" xml:space="preserve">
          <source>Logarithm is a multivalued function: for each &lt;code&gt;x&lt;/code&gt; there is an infinite number of &lt;code&gt;z&lt;/code&gt; such that &lt;code&gt;10**z = x&lt;/code&gt;. The convention is to return the &lt;code&gt;z&lt;/code&gt; whose imaginary part lies in &lt;code&gt;[-pi, pi]&lt;/code&gt;.</source>
          <target state="translated">対数は多値関数です。各 &lt;code&gt;x&lt;/code&gt; に対して、 &lt;code&gt;10**z = x&lt;/code&gt; ような &lt;code&gt;z&lt;/code&gt; の無限数があります。規約は、虚数部が &lt;code&gt;[-pi, pi]&lt;/code&gt; ある &lt;code&gt;z&lt;/code&gt; を返すことです。</target>
        </trans-unit>
        <trans-unit id="5a52fe88f1d34f63b32537a63132c16ed59948f4" translate="yes" xml:space="preserve">
          <source>Logarithm is a multivalued function: for each &lt;code&gt;x&lt;/code&gt; there is an infinite number of &lt;code&gt;z&lt;/code&gt; such that &lt;code&gt;2**z = x&lt;/code&gt;. The convention is to return the &lt;code&gt;z&lt;/code&gt; whose imaginary part lies in &lt;code&gt;[-pi, pi]&lt;/code&gt;.</source>
          <target state="translated">対数は多値関数です。各 &lt;code&gt;x&lt;/code&gt; に対して、 &lt;code&gt;2**z = x&lt;/code&gt; ような無限の数の &lt;code&gt;z&lt;/code&gt; があります。規約は、虚数部が &lt;code&gt;[-pi, pi]&lt;/code&gt; ある &lt;code&gt;z&lt;/code&gt; を返すことです。</target>
        </trans-unit>
        <trans-unit id="04517496328a3b4c1d39612790fc59d3b950de57" translate="yes" xml:space="preserve">
          <source>Logarithm is a multivalued function: for each &lt;code&gt;x&lt;/code&gt; there is an infinite number of &lt;code&gt;z&lt;/code&gt; such that &lt;code&gt;exp(z) = 1 + x&lt;/code&gt;. The convention is to return the &lt;code&gt;z&lt;/code&gt; whose imaginary part lies in &lt;code&gt;[-pi, pi]&lt;/code&gt;.</source>
          <target state="translated">対数は多値関数です。各 &lt;code&gt;x&lt;/code&gt; に対して、 &lt;code&gt;exp(z) = 1 + x&lt;/code&gt; ような &lt;code&gt;z&lt;/code&gt; の数は無限です。規約は、虚数部が &lt;code&gt;[-pi, pi]&lt;/code&gt; ある &lt;code&gt;z&lt;/code&gt; を返すことです。</target>
        </trans-unit>
        <trans-unit id="8f044358a356b12f8f04d65ec46fba2c711db9ca" translate="yes" xml:space="preserve">
          <source>Logarithm is a multivalued function: for each &lt;code&gt;x&lt;/code&gt; there is an infinite number of &lt;code&gt;z&lt;/code&gt; such that &lt;code&gt;exp(z) = x&lt;/code&gt;. The convention is to return the &lt;code&gt;z&lt;/code&gt; whose imaginary part lies in &lt;code&gt;[-pi, pi]&lt;/code&gt;.</source>
          <target state="translated">対数は多値関数です。各 &lt;code&gt;x&lt;/code&gt; に対して、 &lt;code&gt;exp(z) = x&lt;/code&gt; ような &lt;code&gt;z&lt;/code&gt; の数は無限です。規約は、虚数部が &lt;code&gt;[-pi, pi]&lt;/code&gt; ある &lt;code&gt;z&lt;/code&gt; を返すことです。</target>
        </trans-unit>
        <trans-unit id="166930005429709b3b373125970bc9f001b57f22" translate="yes" xml:space="preserve">
          <source>Logarithm of &lt;code&gt;exp(x1) + exp(x2)&lt;/code&gt;. This is a scalar if both &lt;code&gt;x1&lt;/code&gt; and &lt;code&gt;x2&lt;/code&gt; are scalars.</source>
          <target state="translated">&lt;code&gt;exp(x1) + exp(x2)&lt;/code&gt; 対数。 &lt;code&gt;x1&lt;/code&gt; と &lt;code&gt;x2&lt;/code&gt; の両方がスカラーの場合、これはスカラーです。</target>
        </trans-unit>
        <trans-unit id="0df50307c119146d5dc714638f54a5eccd592099" translate="yes" xml:space="preserve">
          <source>Logarithm of the sum of exponentiations of inputs in base 2.</source>
          <target state="translated">ベース2の入力の指数の和の対数。</target>
        </trans-unit>
        <trans-unit id="3a29b9b1054fef950824734dd96565e57e322c96" translate="yes" xml:space="preserve">
          <source>Logarithm of the sum of exponentiations of the inputs in base-2.</source>
          <target state="translated">ベース2の入力の指数の和の対数。</target>
        </trans-unit>
        <trans-unit id="273c857a62012f5708232560c688d9c8f7c28ba5" translate="yes" xml:space="preserve">
          <source>Logarithm of the sum of exponentiations of the inputs.</source>
          <target state="translated">入力の指数の和の対数。</target>
        </trans-unit>
        <trans-unit id="e7b8fad3893b278189df782f86ba4d32084ced17" translate="yes" xml:space="preserve">
          <source>Logarithm to base 10 of the Euler constant (</source>
          <target state="translated">オイラー定数の基底10への対数 (</target>
        </trans-unit>
        <trans-unit id="80963c1ddcee26932e512e1ef164c3f919eb6773" translate="yes" xml:space="preserve">
          <source>Logarithm to base 2 of the Euler constant (</source>
          <target state="translated">オイラー定数の基底2への対数 (</target>
        </trans-unit>
        <trans-unit id="dca3308567585813d8c4516ae0b5df7d6382aa24" translate="yes" xml:space="preserve">
          <source>Logic functions</source>
          <target state="translated">ロジック機能</target>
        </trans-unit>
        <trans-unit id="acdcdb17721480a7efeeb33b0138faad218dbf31" translate="yes" xml:space="preserve">
          <source>Logical NOT is applied to the elements of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">論理NOTは &lt;code&gt;x&lt;/code&gt; の要素に適用されます。</target>
        </trans-unit>
        <trans-unit id="98ddc2178009c7731c8ae53ab405983c8f38c802" translate="yes" xml:space="preserve">
          <source>Logical OR is applied to the elements of &lt;code&gt;x1&lt;/code&gt; and &lt;code&gt;x2&lt;/code&gt;. If &lt;code&gt;x1.shape != x2.shape&lt;/code&gt;, they must be broadcastable to a common shape (which becomes the shape of the output).</source>
          <target state="translated">論理ORは、 &lt;code&gt;x1&lt;/code&gt; および &lt;code&gt;x2&lt;/code&gt; の要素に適用されます。 &lt;code&gt;x1.shape != x2.shape&lt;/code&gt; 場合、それらは共通の形状にブロードキャスト可能でなければなりません（これが出力の形状になります）。</target>
        </trans-unit>
        <trans-unit id="f5bd72920a8d92e6480e74978ed9235cd1d3ad95" translate="yes" xml:space="preserve">
          <source>Logical XOR is applied to the elements of &lt;code&gt;x1&lt;/code&gt; and &lt;code&gt;x2&lt;/code&gt;. If &lt;code&gt;x1.shape != x2.shape&lt;/code&gt;, they must be broadcastable to a common shape (which becomes the shape of the output).</source>
          <target state="translated">論理XORは、 &lt;code&gt;x1&lt;/code&gt; および &lt;code&gt;x2&lt;/code&gt; の要素に適用されます。 &lt;code&gt;x1.shape != x2.shape&lt;/code&gt; 場合、それらは共通の形状にブロードキャスト可能でなければなりません（これが出力の形状になります）。</target>
        </trans-unit>
        <trans-unit id="ab411408fbd29ad68b53700b2e7826c03e6703f0" translate="yes" xml:space="preserve">
          <source>Logical operations</source>
          <target state="translated">論理演算</target>
        </trans-unit>
        <trans-unit id="f9360627c5984485d4c34bec86c9dfebc0835bd0" translate="yes" xml:space="preserve">
          <source>Logspace is equivalent to the code</source>
          <target state="translated">ログスペースはコード</target>
        </trans-unit>
        <trans-unit id="cfff3eff895eee45ffb53c164dd9129e264c6241" translate="yes" xml:space="preserve">
          <source>Long arrays can be summarised:</source>
          <target state="translated">長い配列をまとめることができます。</target>
        </trans-unit>
        <trans-unit id="dcabfd17cd19c7e1ebdad9125ee467aec3f27671" translate="yes" xml:space="preserve">
          <source>Low-level floating point manipulation</source>
          <target state="translated">低レベルの浮動小数点操作</target>
        </trans-unit>
        <trans-unit id="20bd4a379661919ac01507844a8735e9e7029b21" translate="yes" xml:space="preserve">
          <source>Low-level function which converts a 16-bit half-precision float into a 32-bit single-precision float, stored as a uint32.</source>
          <target state="translated">16ビットの半精度フロートを32ビットの単精度フロートに変換する低レベル関数で、uint32として格納されます。</target>
        </trans-unit>
        <trans-unit id="e475f5fc68e395b56437c0cdf65cca2d5aa08147" translate="yes" xml:space="preserve">
          <source>Low-level function which converts a 16-bit half-precision float into a 64-bit double-precision float, stored as a uint64.</source>
          <target state="translated">16ビットの半精度フロートを64ビットの倍精度フロートに変換する低レベル関数で、uint64として格納されます。</target>
        </trans-unit>
        <trans-unit id="96bea3d344730e551ebce7080101c44ce0f90690" translate="yes" xml:space="preserve">
          <source>Low-level function which converts a 32-bit single-precision float, stored as a uint32, into a 16-bit half-precision float.</source>
          <target state="translated">uint32として格納された32ビットの単精度フロートを16ビットの半精度フロートに変換する低レベル関数です。</target>
        </trans-unit>
        <trans-unit id="ff645f12bfda22b17ebed86ab48b65f035e74b8d" translate="yes" xml:space="preserve">
          <source>Low-level function which converts a 64-bit double-precision float, stored as a uint64, into a 16-bit half-precision float.</source>
          <target state="translated">uint64として格納された64ビットの倍精度フロートを16ビットの半精度フロートに変換する低レベル関数です。</target>
        </trans-unit>
        <trans-unit id="352aca4d37f9444dfec5d82c349a1052e7d84651" translate="yes" xml:space="preserve">
          <source>Lower boundary of the output interval. All values generated will be greater than or equal to low. The default value is 0.</source>
          <target state="translated">出力間隔の下限。生成されるすべての値は、lowより大きいか、または等しい値になります。デフォルト値は0です。</target>
        </trans-unit>
        <trans-unit id="4bf35d3bbb54e1377461549a2939f7d0b3e69b61" translate="yes" xml:space="preserve">
          <source>Lower limit.</source>
          <target state="translated">下限値。</target>
        </trans-unit>
        <trans-unit id="7de9677832dcede5ad99fb5a80acb920b62eed43" translate="yes" xml:space="preserve">
          <source>Lower triangle of &lt;code&gt;m&lt;/code&gt;, of same shape and data-type as &lt;code&gt;m&lt;/code&gt;.</source>
          <target state="translated">以下の下側の三角形 &lt;code&gt;m&lt;/code&gt; と同じ形状とデータ型の、 &lt;code&gt;m&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2daaaf38d1f5ab90fa4560a3de14f582045a565c" translate="yes" xml:space="preserve">
          <source>Lower triangle of an array.</source>
          <target state="translated">配列の下三角形.</target>
        </trans-unit>
        <trans-unit id="83251c72d4ba0cc804bd754996e879943acb761e" translate="yes" xml:space="preserve">
          <source>Lowest (signed) integer to be drawn from the distribution (unless &lt;code&gt;high=None&lt;/code&gt;, in which case this parameter is the &lt;em&gt;highest&lt;/em&gt; such integer).</source>
          <target state="translated">分布から引き出される最小の（符号付き）整数（ &lt;code&gt;high=None&lt;/code&gt; の場合を除く）。この場合、このパラメーターはそのような整数の&lt;em&gt;最大&lt;/em&gt;値です。</target>
        </trans-unit>
        <trans-unit id="b68fc5877ebf9c93e957bc6591a72c392406bb37" translate="yes" xml:space="preserve">
          <source>Lowest (signed) integers to be drawn from the distribution (unless &lt;code&gt;high=None&lt;/code&gt;, in which case this parameter is 0 and this value is used for &lt;code&gt;high&lt;/code&gt;).</source>
          <target state="translated">分布から抽出される最小の（符号付き）整数（ &lt;code&gt;high=None&lt;/code&gt; の場合を除く。この場合、このパラメーターは0であり、この値は &lt;code&gt;high&lt;/code&gt; に使用されます）。</target>
        </trans-unit>
        <trans-unit id="b948a7f8849519063c3bff20a99bb0099ed30eea" translate="yes" xml:space="preserve">
          <source>Lowest (signed) integers to be drawn from the distribution (unless &lt;code&gt;high=None&lt;/code&gt;, in which case this parameter is one above the &lt;em&gt;highest&lt;/em&gt; such integer).</source>
          <target state="translated">分布から引き出される最小の（符号付き）整数（ &lt;code&gt;high=None&lt;/code&gt; の場合を除く）。この場合、このパラメーターはそのような&lt;em&gt;最大の&lt;/em&gt;整数より1つ大きくなります）。</target>
        </trans-unit>
        <trans-unit id="c63ae6dd4fc9f9dda66970e827d13f7c73fe841c" translate="yes" xml:space="preserve">
          <source>M</source>
          <target state="translated">M</target>
        </trans-unit>
        <trans-unit id="796395a2ce2426bed5b8f2309da7f84c477d5434" translate="yes" xml:space="preserve">
          <source>M. Abramovitz and I. A. Stegun, &amp;ldquo;Handbook of Mathematical Functions with Formulas, Graphs, and Mathematical Tables,&amp;rdquo; Dover, 1964, p. 69, &lt;a href=&quot;http://www.math.sfu.ca/~cbm/aands/page_69.htm&quot;&gt;http://www.math.sfu.ca/~cbm/aands/page_69.htm&lt;/a&gt;</source>
          <target state="translated">M.アブラモビッツとIAステガン、「数式、グラフ、および数学表を使用した数学関数のハンドブック」、Dover、1964年、p。69、&lt;a href=&quot;http://www.math.sfu.ca/~cbm/aands/page_69.htm&quot;&gt;http：//www.math.sfu.ca/~cbm/aands/page_69.htm&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="14d9022ecb1d459d96a2cc474aaed3bd680af3c4" translate="yes" xml:space="preserve">
          <source>M. Abramowitz and I. A. Stegun, &lt;em&gt;Handbook of Mathematical Functions&lt;/em&gt;, 10th printing, New York: Dover, 1964, pp. 379. &lt;a href=&quot;http://www.math.sfu.ca/~cbm/aands/page_379.htm&quot;&gt;http://www.math.sfu.ca/~cbm/aands/page_379.htm&lt;/a&gt;</source>
          <target state="translated">M. AbramowitzとIA Stegun、&lt;em&gt;Handbook of Mathematical Functions&lt;/em&gt;、10th Printing、New York：Dover、1964、pp。379。http &lt;a href=&quot;http://www.math.sfu.ca/~cbm/aands/page_379.htm&quot;&gt;：//www.math.sfu.ca/~cbm/aands/page_379.htm&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0cb7cd22c76edc78df8480ba3d6f4832ff91ded4" translate="yes" xml:space="preserve">
          <source>M. Abramowitz and I. A. Stegun, Handbook of Mathematical Functions. New York, NY: Dover, 1972, pg. 83.</source>
          <target state="translated">M.アブラモウィッツとI.A.ステグン、数学関数のハンドブック.ニューヨーク,NY.ドーバー、1972年、83ページ。</target>
        </trans-unit>
        <trans-unit id="43e43bd133d6863cb7a9de2d689e513b6c81217e" translate="yes" xml:space="preserve">
          <source>M. Abramowitz and I. A. Stegun, Handbook of Mathematical Functions. New York, NY: Dover, 1972, pg. 83. &lt;a href=&quot;http://www.math.sfu.ca/~cbm/aands/&quot;&gt;http://www.math.sfu.ca/~cbm/aands/&lt;/a&gt;</source>
          <target state="translated">M. AbramowitzおよびIA Stegun、Handbook of Mathematical Functions。ニューヨーク、ニューヨーク：ドーバー、1972年、ページ。83. &lt;a href=&quot;http://www.math.sfu.ca/~cbm/aands/&quot;&gt;http://www.math.sfu.ca/~cbm/aands/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="53b1c9c8eb0cf262b57729e4b91b33dc7f1eea81" translate="yes" xml:space="preserve">
          <source>M. Abramowitz and I. A. Stegun, Handbook of Mathematical Functions. New York, NY: Dover, 1972.</source>
          <target state="translated">M.アブラモウィッツとI.A.ステグン、数学関数のハンドブック.ニューヨーク、ニューヨーク。ドーバー、1972年。</target>
        </trans-unit>
        <trans-unit id="ee284bd1edf39da7accb49887b022f2a6880ffff" translate="yes" xml:space="preserve">
          <source>M. Abramowitz and I.A. Stegun, &amp;ldquo;Handbook of Mathematical Functions&amp;rdquo;, 10th printing, 1964, pp. 67. &lt;a href=&quot;http://www.math.sfu.ca/~cbm/aands/&quot;&gt;http://www.math.sfu.ca/~cbm/aands/&lt;/a&gt;</source>
          <target state="translated">M. AbramowitzおよびIA Stegun、「Handbook of Mathematical Functions」、10番目の印刷、1964年、67 &lt;a href=&quot;http://www.math.sfu.ca/~cbm/aands/&quot;&gt;ページ。http：//www.math.sfu.ca/~cbm/aands/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b4d7af77e2474b1e03deb4c841c43fa44b4fa670" translate="yes" xml:space="preserve">
          <source>M. Abramowitz and I.A. Stegun, &amp;ldquo;Handbook of Mathematical Functions&amp;rdquo;, 10th printing, 1964, pp. 79. &lt;a href=&quot;http://www.math.sfu.ca/~cbm/aands/&quot;&gt;http://www.math.sfu.ca/~cbm/aands/&lt;/a&gt;</source>
          <target state="translated">M. AbramowitzとIA Stegun、「Handbook of Mathematical Functions」、10番目の印刷、1964年、79 &lt;a href=&quot;http://www.math.sfu.ca/~cbm/aands/&quot;&gt;ページ。http：//www.math.sfu.ca/~cbm/aands/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1000d3b7bf23c3293db40f1e12e55a155eb71f88" translate="yes" xml:space="preserve">
          <source>M. Abramowitz and I.A. Stegun, &amp;ldquo;Handbook of Mathematical Functions&amp;rdquo;, 10th printing, 1964, pp. 86. &lt;a href=&quot;http://www.math.sfu.ca/~cbm/aands/&quot;&gt;http://www.math.sfu.ca/~cbm/aands/&lt;/a&gt;</source>
          <target state="translated">M. AbramowitzとIA Stegun、「Handbook of Mathematical Functions」、10番目の印刷、1964年、86 &lt;a href=&quot;http://www.math.sfu.ca/~cbm/aands/&quot;&gt;ページ。http：//www.math.sfu.ca/~cbm/aands/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="10401d4904a530878ef500d4c01e13971fc1a5ec" translate="yes" xml:space="preserve">
          <source>M. Matsumoto and T. Nishimura, &amp;ldquo;Mersenne Twister: A 623-dimensionally equidistributed uniform pseudorandom number generator,&amp;rdquo; &lt;em&gt;ACM Trans. on Modeling and Computer Simulation&lt;/em&gt;, Vol. 8, No. 1, pp. 3-30, Jan. 1998.</source>
          <target state="translated">M.松本と西村T.「メルセンヌツイスター：623次元で等分布の均一擬似乱数ジェネレーター」、&lt;em&gt;ACM Trans。モデリングとコンピュータシミュレーション&lt;/em&gt;、Vol。8、No。1、3〜30ページ、1998年1月。</target>
        </trans-unit>
        <trans-unit id="a563fa6014f9030bc1091eda42860c70e53a75fd" translate="yes" xml:space="preserve">
          <source>M. Sullivan and M. Sullivan, III, &amp;ldquo;Algebra and Trignometry, Enhanced With Graphing Utilities,&amp;rdquo; Prentice-Hall, pg. 318, 1996.</source>
          <target state="translated">M.サリバンとM.サリバン、III、「代数と三角法、グラフ作成ユーティリティで強化」、Prentice-Hall、pg。318、1996。</target>
        </trans-unit>
        <trans-unit id="57cfa503fff95bbc068ee0b81926d66666383d31" translate="yes" xml:space="preserve">
          <source>M.S. Bartlett, &amp;ldquo;Periodogram Analysis and Continuous Spectra&amp;rdquo;, Biometrika 37, 1-16, 1950.</source>
          <target state="translated">MSバートレット、「ペリオドグラム分析と連続スペクトル」、Biometrika 37、1-16、1950。</target>
        </trans-unit>
        <trans-unit id="6774190d7f255e538acfbf2555afa1d8c09f5542" translate="yes" xml:space="preserve">
          <source>MATLAB reference documention, &amp;ldquo;Rank&amp;rdquo; &lt;a href=&quot;https://www.mathworks.com/help/techdoc/ref/rank.html&quot;&gt;https://www.mathworks.com/help/techdoc/ref/rank.html&lt;/a&gt;</source>
          <target state="translated">MATLABリファレンスドキュメント、「ランク」&lt;a href=&quot;https://www.mathworks.com/help/techdoc/ref/rank.html&quot;&gt;https://www.mathworks.com/help/techdoc/ref/rank.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9af4fc7b8138d2f8740cae99324e5b71bdbe2bdd" translate="yes" xml:space="preserve">
          <source>MATLAB work-a-like for 1-D and 2-D arrays.</source>
          <target state="translated">1次元配列と2次元配列のためのMATLABワークアライク。</target>
        </trans-unit>
        <trans-unit id="808ffbf65afa62d125344d9b3e8790439801c809" translate="yes" xml:space="preserve">
          <source>MATLAB work-alike for 1-D and 2-D arrays.</source>
          <target state="translated">1次元および2次元配列のためのMATLABワークライク。</target>
        </trans-unit>
        <trans-unit id="e6d7ea525d9c1cb77d6dada4577419a88b5aaac1" translate="yes" xml:space="preserve">
          <source>MT19937</source>
          <target state="translated">MT19937</target>
        </trans-unit>
        <trans-unit id="7bce0d7ca3c21db35ede8db2f12fac05579372a1" translate="yes" xml:space="preserve">
          <source>MT19937 - The standard Python BitGenerator. Adds a &lt;a href=&quot;generated/numpy.random.mt19937.mt19937.jumped#numpy.random.mt19937.MT19937.jumped&quot;&gt;&lt;code&gt;jumped&lt;/code&gt;&lt;/a&gt; function that returns a new generator with state as-if</source>
          <target state="translated">MT19937-標準のPython BitGenerator。as-if状態の新しいジェネレーターを返す&lt;a href=&quot;generated/numpy.random.mt19937.mt19937.jumped#numpy.random.mt19937.MT19937.jumped&quot;&gt; &lt;code&gt;jumped&lt;/code&gt; &lt;/a&gt;関数を追加します</target>
        </trans-unit>
        <trans-unit id="f07c8771fb3a7c7f33effbe38f0f59fb2b7a1664" translate="yes" xml:space="preserve">
          <source>MT19937.cffi</source>
          <target state="translated">MT19937.cffi</target>
        </trans-unit>
        <trans-unit id="4b48a5628ec9fca0df3fd9eaa04078cf1112d33c" translate="yes" xml:space="preserve">
          <source>MT19937.ctypes</source>
          <target state="translated">MT19937.ctypes</target>
        </trans-unit>
        <trans-unit id="d3960fe8caf716caa3faa711048f8eaf2c190c8f" translate="yes" xml:space="preserve">
          <source>MT19937.jumped()</source>
          <target state="translated">MT19937.jumped()</target>
        </trans-unit>
        <trans-unit id="70c54bc2b37814767b0b16267d4e49e0eaa1c1c3" translate="yes" xml:space="preserve">
          <source>MT19937.state</source>
          <target state="translated">MT19937.state</target>
        </trans-unit>
        <trans-unit id="b222baa318eb3fe2118a721645104a17a2e12508" translate="yes" xml:space="preserve">
          <source>Machine epsilon varies from machine to machine and between data types but Python floats on most platforms have a machine epsilon equal to 2.2204460492503131e-16. You can use &amp;lsquo;np.finfo(float).eps&amp;rsquo; to print out the machine epsilon for floats.</source>
          <target state="translated">マシンイプシロンはマシンごとに、またデータ型間で異なりますが、ほとんどのプラットフォームのPythonフロートには2.2204460492503131e-16に等しいマシンイプシロンがあります。'np.finfo（float）.eps'を使用して、フロートのマシンイプシロンを出力できます。</target>
        </trans-unit>
        <trans-unit id="9bdb316446a309b3484ba517636f47e09d947903" translate="yes" xml:space="preserve">
          <source>Machine limits for floating point types.</source>
          <target state="translated">浮動小数点型のマシンリミット</target>
        </trans-unit>
        <trans-unit id="73e3d143745510a6549d96b020546b5898bd3c32" translate="yes" xml:space="preserve">
          <source>Machine limits for integer types.</source>
          <target state="translated">整数型のマシンリミット。</target>
        </trans-unit>
        <trans-unit id="368e3c884a3e6998248ff9097641dc2397f91307" translate="yes" xml:space="preserve">
          <source>Macro form of &lt;a href=&quot;#c.PyArray_Empty&quot;&gt;&lt;code&gt;PyArray_Empty&lt;/code&gt;&lt;/a&gt; which takes a type-number, &lt;em&gt;typenum&lt;/em&gt;, instead of a data-type object.</source>
          <target state="translated">&lt;a href=&quot;#c.PyArray_Empty&quot;&gt; &lt;code&gt;PyArray_Empty&lt;/code&gt; の&lt;/a&gt;マクロ形式で、データ型オブジェクトではなく、&lt;em&gt;型番&lt;/em&gt;号typenumを取ります。</target>
        </trans-unit>
        <trans-unit id="d915b8d6481f66730d8c850695157c13eec17e68" translate="yes" xml:space="preserve">
          <source>Macro form of &lt;a href=&quot;#c.PyArray_Zeros&quot;&gt;&lt;code&gt;PyArray_Zeros&lt;/code&gt;&lt;/a&gt; which takes a type-number instead of a data-type object.</source>
          <target state="translated">&lt;a href=&quot;#c.PyArray_Zeros&quot;&gt; &lt;code&gt;PyArray_Zeros&lt;/code&gt; の&lt;/a&gt;マクロ形式で、データ型オブジェクトの代わりに型番号を受け取ります。</target>
        </trans-unit>
        <trans-unit id="899bd694d29ace1be956ab35177075021977560b" translate="yes" xml:space="preserve">
          <source>Macros</source>
          <target state="translated">Macros</target>
        </trans-unit>
        <trans-unit id="8bebd0ebb56dc9f842a18e7b970fa8970cc84b64" translate="yes" xml:space="preserve">
          <source>Macros to allocate, free, and reallocate dimension and strides memory.</source>
          <target state="translated">ディメンジョンおよびストライド・メモリの割り当て、解放、および再割り当てを行うマクロ。</target>
        </trans-unit>
        <trans-unit id="992eddad2fa60737c0e7d9f0d9c8fd77cb0a2291" translate="yes" xml:space="preserve">
          <source>Macros to allocate, free, and reallocate memory. These macros are used internally to create arrays.</source>
          <target state="translated">メモリの割り当て、解放、再割り当てを行うマクロです。これらのマクロは配列を作成するために内部的に使用されます。</target>
        </trans-unit>
        <trans-unit id="41c3032490e05b7582198a7d382a11e14cafbdbb" translate="yes" xml:space="preserve">
          <source>Main difference between &lt;a href=&quot;#numpy.linalg.eigvals&quot;&gt;&lt;code&gt;eigvals&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;numpy.linalg.eig#numpy.linalg.eig&quot;&gt;&lt;code&gt;eig&lt;/code&gt;&lt;/a&gt;: the eigenvectors aren&amp;rsquo;t returned.</source>
          <target state="translated">&lt;a href=&quot;#numpy.linalg.eigvals&quot;&gt; &lt;code&gt;eigvals&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;numpy.linalg.eig#numpy.linalg.eig&quot;&gt; &lt;code&gt;eig&lt;/code&gt; の&lt;/a&gt;主な違い：固有ベクトルは返されません。</target>
        </trans-unit>
        <trans-unit id="17f0481e62f92478758daba6f45708b9902f91ce" translate="yes" xml:space="preserve">
          <source>Main difference from eigh: the eigenvectors are not computed.</source>
          <target state="translated">eighとの主な違い:固有ベクトルは計算されない。</target>
        </trans-unit>
        <trans-unit id="589abefef4e6719e397197cb478d2737f78ba6e4" translate="yes" xml:space="preserve">
          <source>Mainly for backwards compatibility to the Numeric C-API and for simple casts to non-flexible types. Return a new array object with the elements of &lt;em&gt;arr&lt;/em&gt; cast to the data-type &lt;em&gt;typenum&lt;/em&gt; which must be one of the enumerated types and not a flexible type.</source>
          <target state="translated">主に、Numeric C-APIへの下位互換性と、柔軟性のない型への単純なキャストです。&lt;em&gt;arr&lt;/em&gt;の要素がデータ型&lt;em&gt;typenumに&lt;/em&gt;キャストされた新しい配列オブジェクトを返します。これは、列挙型の1つであり、フレキシブルタイプではない必要があります。</target>
        </trans-unit>
        <trans-unit id="7f52e3105dfcc1e64146f131b70d4ac8a75b94c2" translate="yes" xml:space="preserve">
          <source>Make N-D coordinate arrays for vectorized evaluations of N-D scalar/vector fields over N-D grids, given one-dimensional coordinate arrays x1, x2,&amp;hellip;, xn.</source>
          <target state="translated">1次元座標配列x1、x2、&amp;hellip;、xnを指定して、NDグリッド上のNDスカラー/ベクトルフィールドのベクトル化された評価のためのND座標配列を作成します。</target>
        </trans-unit>
        <trans-unit id="a9929b5560d41717cc4e17b183714853c07910d6" translate="yes" xml:space="preserve">
          <source>Make a (&lt;em&gt;very&lt;/em&gt; coarse) grid for computing a Mandelbrot set:</source>
          <target state="translated">マンデルブロ集合を計算するための（&lt;em&gt;非常に&lt;/em&gt;粗い）グリッドを作成します。</target>
        </trans-unit>
        <trans-unit id="793de80198f3e7d633a262558162ceb1ded1e015" translate="yes" xml:space="preserve">
          <source>Make a new copy of the data-type object. If &lt;code&gt;False&lt;/code&gt;, the result may just be a reference to a built-in data-type object.</source>
          <target state="translated">データ型オブジェクトの新しいコピーを作成します。場合 &lt;code&gt;False&lt;/code&gt; を、結果は単に組み込みデータ型のオブジェクトへの参照であってもよいです。</target>
        </trans-unit>
        <trans-unit id="a831e4a92979555625b23c66a3d09803048cd6ec" translate="yes" xml:space="preserve">
          <source>Make function raise KnownFailureException exception if given condition is true.</source>
          <target state="translated">与えられた条件が真の場合に KnownFailureException 例外を発生させるようにした。</target>
        </trans-unit>
        <trans-unit id="9a732c043a4153afa349bff5ecfd6f57666bdf5e" translate="yes" xml:space="preserve">
          <source>Make function raise SkipTest exception if a given condition is true.</source>
          <target state="translated">与えられた条件が真の場合にSkipTest例外を発生させるようにしました。</target>
        </trans-unit>
        <trans-unit id="6858d151467d19f1cb2875295def91538137e0f5" translate="yes" xml:space="preserve">
          <source>Make sure a copy is made of &lt;em&gt;op&lt;/em&gt;. If this flag is not present, data is not copied if it can be avoided.</source>
          <target state="translated">コピーが&lt;em&gt;op&lt;/em&gt;で作成されていることを確認してください。このフラグが存在しない場合、回避できる場合、データはコピーされません。</target>
        </trans-unit>
        <trans-unit id="fa253a65eff13dcd45a6381940ea3d563851c87f" translate="yes" xml:space="preserve">
          <source>Make sure that &lt;code&gt;actual_type&lt;/code&gt; is compatible with &lt;code&gt;desired_type&lt;/code&gt;. For example, this allows character and byte types, or int and long types, to match. This is now equivalent to &lt;code&gt;PyArray_EquivTypenums()&lt;/code&gt;.</source>
          <target state="translated">ていることを確認してください &lt;code&gt;actual_type&lt;/code&gt; 互換性があり &lt;code&gt;desired_type&lt;/code&gt; 。たとえば、これにより、文字型とバイト型、またはint型とlong型を一致させることができます。これは &lt;code&gt;PyArray_EquivTypenums()&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="9b2a551f742bd2a7cf675451084c5fbd575db246" translate="yes" xml:space="preserve">
          <source>Make sure the result is a base-class ndarray. By default, if &lt;em&gt;op&lt;/em&gt; is an instance of a subclass of ndarray, an instance of that same subclass is returned. If this flag is set, an ndarray object will be returned instead.</source>
          <target state="translated">結果が基本クラスのndarrayであることを確認してください。デフォルトでは、&lt;em&gt;op&lt;/em&gt;がndarrayのサブクラスのインスタンスである場合、同じサブクラスのインスタンスが返されます。このフラグが設定されている場合は、代わりにndarrayオブジェクトが返されます。</target>
        </trans-unit>
        <trans-unit id="a66f646163bc787161e9da29b0a054fbc6624c6d" translate="yes" xml:space="preserve">
          <source>Make sure the resulting array is a copy of the original.</source>
          <target state="translated">結果の配列が元の配列のコピーであることを確認してください。</target>
        </trans-unit>
        <trans-unit id="39d90f5a018cb286b90a3644f5e4eda749a94075" translate="yes" xml:space="preserve">
          <source>Make sure the resulting object is an actual ndarray, and not a sub-class.</source>
          <target state="translated">結果のオブジェクトがサブクラスではなく、実際のndarrayであることを確認してください。</target>
        </trans-unit>
        <trans-unit id="dc2a4442b24ed7738f50875398d3eedbc2d1aafc" translate="yes" xml:space="preserve">
          <source>Make sure the returned array can be written to.</source>
          <target state="translated">返された配列が書き込めることを確認してください。</target>
        </trans-unit>
        <trans-unit id="f2cb8de0de4ac461ccef8b3f6699d7773164c9a7" translate="yes" xml:space="preserve">
          <source>Make sure the returned array has a data-type descriptor that is in machine byte-order, over-riding any specification in the &lt;em&gt;dtype&lt;/em&gt; argument. Normally, the byte-order requirement is determined by the &lt;em&gt;dtype&lt;/em&gt; argument. If this flag is set and the dtype argument does not indicate a machine byte-order descriptor (or is NULL and the object is already an array with a data-type descriptor that is not in machine byte- order), then a new data-type descriptor is created and used with its byte-order field set to native.</source>
          <target state="translated">返された配列に、マシンのバイト順のデータ型記述子があり、&lt;em&gt;dtype&lt;/em&gt;引数の指定を&lt;em&gt;オーバーライド&lt;/em&gt;していることを&lt;em&gt;確認して&lt;/em&gt;ください。通常、バイト順の要件は、&lt;em&gt;dtype&lt;/em&gt;引数によって&lt;em&gt;決まり&lt;/em&gt;ます。このフラグが設定されていて、dtype引数がマシンのバイト順記述子を示さない（またはNULLであり、オブジェクトがすでにマシンのバイト順ではないデータ型記述子を持つ配列である）場合、新しいデータタイプ記述子が作成され、そのバイト順フィールドがネイティブに設定されて使用されます。</target>
        </trans-unit>
        <trans-unit id="cc7b28e40eab8c8cfe24c22e8e90c3868c988c89" translate="yes" xml:space="preserve">
          <source>Make sure the returned array has strides that are multiples of the element size.</source>
          <target state="translated">返される配列のストライドが要素サイズの倍数であることを確認してください。</target>
        </trans-unit>
        <trans-unit id="ff416e45483051472f44c5631669234da57230ad" translate="yes" xml:space="preserve">
          <source>Make sure the returned array is C-style contiguous</source>
          <target state="translated">返される配列が C スタイルで連続していることを確認してください。</target>
        </trans-unit>
        <trans-unit id="76ac22505382624e9142f85a5dd50a913b6940a1" translate="yes" xml:space="preserve">
          <source>Make sure the returned array is Fortran-style contiguous.</source>
          <target state="translated">返された配列がFortranスタイルで連続していることを確認してください。</target>
        </trans-unit>
        <trans-unit id="a3fb7cfe1b008b6ba165b89e7102a19142fa050d" translate="yes" xml:space="preserve">
          <source>Make sure the returned array is aligned on proper boundaries for its data type. An aligned array has the data pointer and every strides factor as a multiple of the alignment factor for the data-type- descriptor.</source>
          <target state="translated">返される配列が,そのデータ型に対して適切な境界線上にアラインメントされていることを確認してください.アラインメントされた配列は,データ型ディスクリプタのアラインメント係数の倍数として,データポインタと各ストライド係数を持ちます.</target>
        </trans-unit>
        <trans-unit id="8243dc037100f878288a764547cbc0e678b232cd" translate="yes" xml:space="preserve">
          <source>Makes a copy of the given iterator. This function is provided primarily to enable multi-threaded iteration of the data.</source>
          <target state="translated">与えられたイテレータのコピーを作成します。この関数は、主にデータのマルチスレッド反復処理を可能にするために提供されます。</target>
        </trans-unit>
        <trans-unit id="9994f58a6845d6543e990f0db03b5691b328bb3d" translate="yes" xml:space="preserve">
          <source>Making changes to the view changes the underlying array</source>
          <target state="translated">ビューに変更を加えると、基礎となる配列が変更されます。</target>
        </trans-unit>
        <trans-unit id="7a8542defa1f2f46558700bed760e59b4ae9473a" translate="yes" xml:space="preserve">
          <source>Making proper sets</source>
          <target state="translated">適切なセットを作る</target>
        </trans-unit>
        <trans-unit id="f072320f52e480cd4cee7848612d896de0342201" translate="yes" xml:space="preserve">
          <source>Manipulating a MaskedArray</source>
          <target state="translated">MaskedArrayの操作</target>
        </trans-unit>
        <trans-unit id="186df05b293e739802129eb3df4baaf8fda61676" translate="yes" xml:space="preserve">
          <source>Manually adding two vectors, using broadcasting:</source>
          <target state="translated">放送を使用して、手動で2つのベクトルを追加します。</target>
        </trans-unit>
        <trans-unit id="7ff15d6fb98077a9b63faafb800abb9fe78fcf46" translate="yes" xml:space="preserve">
          <source>Many of these methods take an argument named &lt;em&gt;axis&lt;/em&gt;. In such cases,</source>
          <target state="translated">これらのメソッドの多くは、&lt;em&gt;axis&lt;/em&gt;という名前の引数を取ります。そのような場合、</target>
        </trans-unit>
        <trans-unit id="9ede0036fbda2644b0badedec4f5663550b9b1ac" translate="yes" xml:space="preserve">
          <source>Many other distributions are also supported.</source>
          <target state="translated">他にも多くのディストリビューションに対応しています。</target>
        </trans-unit>
        <trans-unit id="8e22a4dd259d1679b0a51f9039d6bfdead73e93b" translate="yes" xml:space="preserve">
          <source>Mask an array inside a given interval.</source>
          <target state="translated">指定された間隔内の配列をマスクします。</target>
        </trans-unit>
        <trans-unit id="da9a1c569bf731b67119f643ede378ad4e3f1519" translate="yes" xml:space="preserve">
          <source>Mask an array outside a given interval.</source>
          <target state="translated">指定された間隔外の配列をマスクします。</target>
        </trans-unit>
        <trans-unit id="6cfe071d1d905293fc1a86d3d41da5c8b38fd4a8" translate="yes" xml:space="preserve">
          <source>Mask an array where &lt;code&gt;not&lt;/code&gt; equal to a given value.</source>
          <target state="translated">指定された値と等しく &lt;code&gt;not&lt;/code&gt; 配列をマスクします。</target>
        </trans-unit>
        <trans-unit id="bfd71c8af0182463deeb8b929bb8db010e999aa1" translate="yes" xml:space="preserve">
          <source>Mask an array where a condition is met.</source>
          <target state="translated">条件が満たされた配列をマスクします。</target>
        </trans-unit>
        <trans-unit id="745c1555706e0f77e6ffe2c2813a3fb36374ff35" translate="yes" xml:space="preserve">
          <source>Mask an array where equal to a given value.</source>
          <target state="translated">与えられた値と等しい配列をマスクします。</target>
        </trans-unit>
        <trans-unit id="f9729990c0e40052af76c9e13494e2abd95504a0" translate="yes" xml:space="preserve">
          <source>Mask an array where greater than a given value.</source>
          <target state="translated">指定された値より大きい配列をマスクします。</target>
        </trans-unit>
        <trans-unit id="ec4efca3f5e96d9a3bd62aaca7a5391e583c37d0" translate="yes" xml:space="preserve">
          <source>Mask an array where greater than or equal to a given value.</source>
          <target state="translated">指定された値以上の配列をマスクします。</target>
        </trans-unit>
        <trans-unit id="c0c78b88c4cc26e562d4c01312db539d600c13b8" translate="yes" xml:space="preserve">
          <source>Mask an array where invalid values occur (NaNs or infs).</source>
          <target state="translated">無効な値が発生する配列をマスクします (NaN または infs)。</target>
        </trans-unit>
        <trans-unit id="bafddbcc3a701d825f4b8c81b4a6586eda8f72f6" translate="yes" xml:space="preserve">
          <source>Mask an array where less than a given value.</source>
          <target state="translated">与えられた値よりも小さい値を持つ配列をマスクします。</target>
        </trans-unit>
        <trans-unit id="cf298275c5da246fc15e63b817a590139fdfaf20" translate="yes" xml:space="preserve">
          <source>Mask an array where less than or equal to a given value.</source>
          <target state="translated">指定された値以下の配列をマスクします。</target>
        </trans-unit>
        <trans-unit id="f25a93425a69cec34a64e945a78ff3354d106c87" translate="yes" xml:space="preserve">
          <source>Mask array &lt;code&gt;b&lt;/code&gt; conditional on &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;b&lt;/code&gt; 条件として配列bをマスク &lt;code&gt;a&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="b6351290c3e2bd1325051b50aa84be0096715800" translate="yes" xml:space="preserve">
          <source>Mask cols of a 2D array that contain masked values.</source>
          <target state="translated">マスクされた値を含む2次元配列のマスクコール。</target>
        </trans-unit>
        <trans-unit id="5989c0ba273f4fa26213980d7a2122d0b5463f7a" translate="yes" xml:space="preserve">
          <source>Mask columns of a 2D array that contain masked values.</source>
          <target state="translated">マスクされた値を含む2次元配列のマスク列.</target>
        </trans-unit>
        <trans-unit id="888fa953c6e1c3b95fb32020739a8fb7290b6a16" translate="yes" xml:space="preserve">
          <source>Mask inside a given interval.</source>
          <target state="translated">指定された間隔内のマスク。</target>
        </trans-unit>
        <trans-unit id="8875894bb1277ca00fff30f310af81531740e9e5" translate="yes" xml:space="preserve">
          <source>Mask invalid values (NaNs or infs).</source>
          <target state="translated">無効な値をマスクします(NaN または infs)。</target>
        </trans-unit>
        <trans-unit id="3c5cc469c703297ad73e0cbd2085f332b3c12da4" translate="yes" xml:space="preserve">
          <source>Mask outside a given interval.</source>
          <target state="translated">指定された間隔の外でマスクします。</target>
        </trans-unit>
        <trans-unit id="00af5e48341996dadc0cdb5fdf0842273fe5b864" translate="yes" xml:space="preserve">
          <source>Mask rows and/or columns of a 2D array that contain masked values.</source>
          <target state="translated">マスクされた値を含む2次元配列の行および/または列をマスクします.</target>
        </trans-unit>
        <trans-unit id="036b308dd6f036875453ed63e39c90f458b31d97" translate="yes" xml:space="preserve">
          <source>Mask rows and/or columns of a 2D array.</source>
          <target state="translated">2次元配列の行や列をマスクします.</target>
        </trans-unit>
        <trans-unit id="fa07a97e90fa3a048da5dc5176f7f8f08808a1e7" translate="yes" xml:space="preserve">
          <source>Mask rows of a 2D array that contain masked values.</source>
          <target state="translated">マスクされた値を含む2次元配列のマスク行。</target>
        </trans-unit>
        <trans-unit id="cdcf6bd79fa7623a0f0d4537e494029fd7cec8d6" translate="yes" xml:space="preserve">
          <source>Mask the array &lt;code&gt;x&lt;/code&gt; where the data are exactly equal to value.</source>
          <target state="translated">データが値と正確に等しい配列 &lt;code&gt;x&lt;/code&gt; をマスクします。</target>
        </trans-unit>
        <trans-unit id="6d4dbf0aaf4fae78661a0147024893bc953fbf99" translate="yes" xml:space="preserve">
          <source>Mask using floating point equality.</source>
          <target state="translated">浮動小数点の等価性を利用したマスク。</target>
        </trans-unit>
        <trans-unit id="1a7c6742714332311a709c878556f33860c1ca12" translate="yes" xml:space="preserve">
          <source>Mask where &lt;code&gt;not&lt;/code&gt; equal to a given value.</source>
          <target state="translated">指定された値と等しく &lt;code&gt;not&lt;/code&gt; 場所でマスクします。</target>
        </trans-unit>
        <trans-unit id="6a25717d456c673a4a868df938fb9bd46105d77b" translate="yes" xml:space="preserve">
          <source>Mask where a condition is met.</source>
          <target state="translated">条件を満たすマスク。</target>
        </trans-unit>
        <trans-unit id="2e77dd6d757e07506b660bea8d79d9b375bb9e96" translate="yes" xml:space="preserve">
          <source>Mask where equal to a given value (integers).</source>
          <target state="translated">与えられた値(整数)に等しいマスク。</target>
        </trans-unit>
        <trans-unit id="819bdc07b0b19e7e594b197983e674371983eb93" translate="yes" xml:space="preserve">
          <source>Mask where equal to a given value.</source>
          <target state="translated">与えられた値に等しいマスク。</target>
        </trans-unit>
        <trans-unit id="99e92ea0dacc268463873d122e4916bac3c6166d" translate="yes" xml:space="preserve">
          <source>Mask where greater than a given value.</source>
          <target state="translated">指定された値よりも大きい値のマスク。</target>
        </trans-unit>
        <trans-unit id="377f44d52c44c29b0aa5a55900c31b4b9e499dd4" translate="yes" xml:space="preserve">
          <source>Mask where greater than or equal to a given value.</source>
          <target state="translated">与えられた値以上の値を持つマスク。</target>
        </trans-unit>
        <trans-unit id="f0e79008b6bfb135c14c930dd9b5fa3a89ff7ec3" translate="yes" xml:space="preserve">
          <source>Mask where less than a given value.</source>
          <target state="translated">与えられた値よりも小さい値を持つマスク。</target>
        </trans-unit>
        <trans-unit id="c86db9f027cb5e25560c169de275edc638940064" translate="yes" xml:space="preserve">
          <source>Mask where less than or equal to a given value.</source>
          <target state="translated">与えられた値以下のマスク。</target>
        </trans-unit>
        <trans-unit id="0d15a34ef50017c16ffef8d56380f0190f6e4176" translate="yes" xml:space="preserve">
          <source>Mask whole rows and/or columns of a 2D array that contain masked values. The masking behavior is selected using the &lt;code&gt;axis&lt;/code&gt; parameter.</source>
          <target state="translated">マスクされた値を含む2D配列の行および/または列全体をマスクします。マスキング動作は、 &lt;code&gt;axis&lt;/code&gt; パラメータを使用して選択されます。</target>
        </trans-unit>
        <trans-unit id="fcd2fc9f9e2cbbcb1423bbce02ea7377a87d9394" translate="yes" xml:space="preserve">
          <source>Mask. Must be convertible to an array of booleans with the same shape as &lt;code&gt;data&lt;/code&gt;. True indicates a masked (i.e. invalid) data.</source>
          <target state="translated">マスク。 &lt;code&gt;data&lt;/code&gt; と同じ形状のブール値の配列に変換できる必要があります。Trueは、マスクされた（つまり無効な）データを示します。</target>
        </trans-unit>
        <trans-unit id="77690385e03cf5be1602ed7d25dbb1c74983e23a" translate="yes" xml:space="preserve">
          <source>Masked array interpretation of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">のマスクされた配列の解釈。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2736171df63d3cbe517f0bae324f23b6232dfa60" translate="yes" xml:space="preserve">
          <source>Masked array operations</source>
          <target state="translated">マスクされた配列操作</target>
        </trans-unit>
        <trans-unit id="2d4d75f30e0b052c284673be22985a3e26fd2369" translate="yes" xml:space="preserve">
          <source>Masked arrays</source>
          <target state="translated">マスクされた配列</target>
        </trans-unit>
        <trans-unit id="26652000ec64c331ba43c810f4acf18412b0f68b" translate="yes" xml:space="preserve">
          <source>Masked arrays (&lt;code&gt;numpy.ma&lt;/code&gt;)</source>
          <target state="translated">マスクされた配列（ &lt;code&gt;numpy.ma&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="078e11437b77503c6af41321e9f5a89af35fcaa3" translate="yes" xml:space="preserve">
          <source>Masked arrays (numpy.ma)</source>
          <target state="translated">マスクされた配列 (numpy.ma)</target>
        </trans-unit>
        <trans-unit id="7153e6f35343b699d95430ff8793f79f62547cd2" translate="yes" xml:space="preserve">
          <source>Masked arrays also support standard numpy ufuncs. The output is then a masked array. The result of a unary ufunc is masked wherever the input is masked. The result of a binary ufunc is masked wherever any of the input is masked. If the ufunc also returns the optional context output (a 3-element tuple containing the name of the ufunc, its arguments and its domain), the context is processed and entries of the output masked array are masked wherever the corresponding input fall outside the validity domain:</source>
          <target state="translated">マスクド配列は標準のnumpy ufuncsもサポートしています。そして、出力はマスクされた配列となります。単項演算子の結果は、入力がマスクされている場所であればどこでもマスクされます。バイナリ ufunc の結果は、入力のいずれかがマスクされている場所であればどこでもマスクされます。ufuncがオプションのコンテキスト出力(ufuncの名前、引数、ドメインを含む3要素のタプル)を返す場合、コンテキストは処理され、出力されたマスクされた配列のエントリは、対応する入力が有効領域外にあるところであればどこでもマスクされます。</target>
        </trans-unit>
        <trans-unit id="2feff57b9d5e5a78c57621737acc9551d5fb918f" translate="yes" xml:space="preserve">
          <source>Masked arrays are arrays that may have missing or invalid entries. The &lt;a href=&quot;#module-numpy.ma&quot;&gt;&lt;code&gt;numpy.ma&lt;/code&gt;&lt;/a&gt; module provides a nearly work-alike replacement for numpy that supports data arrays with masks.</source>
          <target state="translated">マスクされた配列は、エントリが欠落しているか無効である可能性がある配列です。&lt;a href=&quot;#module-numpy.ma&quot;&gt; &lt;code&gt;numpy.ma&lt;/code&gt; の&lt;/a&gt;モジュールはマスクでサポートデータアレイそのnumpyのためのほとんどの仕事と同様の置換を提供します。</target>
        </trans-unit>
        <trans-unit id="3f5b01b275571ce9babfb349e3e312bc47fa839e" translate="yes" xml:space="preserve">
          <source>Masked arrays are arrays that may have missing or invalid entries. The &lt;a href=&quot;maskedarray.generic#module-numpy.ma&quot;&gt;&lt;code&gt;numpy.ma&lt;/code&gt;&lt;/a&gt; module provides a nearly work-alike replacement for numpy that supports data arrays with masks.</source>
          <target state="translated">マスクされた配列は、エントリが欠落しているか無効である可能性がある配列です。&lt;a href=&quot;maskedarray.generic#module-numpy.ma&quot;&gt; &lt;code&gt;numpy.ma&lt;/code&gt; の&lt;/a&gt;モジュールはマスクでサポートデータアレイそのnumpyのためのほとんどの仕事と同様の置換を提供します。</target>
        </trans-unit>
        <trans-unit id="0540687eb24d38593064d3dec8d6776ae8362128" translate="yes" xml:space="preserve">
          <source>Masked arrays arithmetics</source>
          <target state="translated">マスクされた配列の演算</target>
        </trans-unit>
        <trans-unit id="2a10f17f192630fac9e2659b01202ca989fcde7d" translate="yes" xml:space="preserve">
          <source>Masked elements are ignored.</source>
          <target state="translated">マスクされた要素は無視されます。</target>
        </trans-unit>
        <trans-unit id="a1ab6894299ae6aae7ef94e3acf9c5526b0895b9" translate="yes" xml:space="preserve">
          <source>Masked elements are set to 0 internally.</source>
          <target state="translated">マスクされた要素は内部的に0に設定されます。</target>
        </trans-unit>
        <trans-unit id="97b5ab568e51a37efa7e81ef1c6b7490d9852f4c" translate="yes" xml:space="preserve">
          <source>Masked elements are set to 1 internally for computation.</source>
          <target state="translated">マスクされた要素は、計算のために内部的に1に設定されます。</target>
        </trans-unit>
        <trans-unit id="f459802409051eaa7a4da3a38b8b3e649cb95c03" translate="yes" xml:space="preserve">
          <source>Masked entries are ignored, and result elements which are not finite will be masked.</source>
          <target state="translated">マスクされたエントリは無視され、有限でない結果要素はマスクされます。</target>
        </trans-unit>
        <trans-unit id="b67c6e592961bc4088100d1e724368d014dd740f" translate="yes" xml:space="preserve">
          <source>Masked entries are ignored.</source>
          <target state="translated">マスクされたエントリは無視されます。</target>
        </trans-unit>
        <trans-unit id="a553f9a17153e944aa3ccf0663ddf7bdd834bdc5" translate="yes" xml:space="preserve">
          <source>Masked values are considered as False during computation.</source>
          <target state="translated">マスクされた値は計算中はFalseとみなされます。</target>
        </trans-unit>
        <trans-unit id="6c8cae7fd974732de54350b0ecabf2b49f4bd07f" translate="yes" xml:space="preserve">
          <source>Masked values are not compared directly.</source>
          <target state="translated">マスクされた値は直接比較されません。</target>
        </trans-unit>
        <trans-unit id="8b7bd1ffbc4df578f27392c4f72e5f827148711a" translate="yes" xml:space="preserve">
          <source>Masked values are replaced by 0.</source>
          <target state="translated">マスクされた値は0に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="594673afbc6460668c76a5b5a60900b4eb69ed4e" translate="yes" xml:space="preserve">
          <source>Masked values are set to 0 internally during the computation. However, their position is saved, and the result will be masked at the same locations.</source>
          <target state="translated">マスクされた値は計算中に内部的に 0 に設定されます。ただし、その位置は保存され、結果は同じ位置でマスクされます。</target>
        </trans-unit>
        <trans-unit id="c62cda838d0dd89db4f7db7a848bed90b8a35029" translate="yes" xml:space="preserve">
          <source>Masked values are set to 1 internally during the computation. However, their position is saved, and the result will be masked at the same locations.</source>
          <target state="translated">マスクされた値は計算中に内部的に1に設定されます。ただし、その位置は保存され、結果は同じ位置でマスクされます。</target>
        </trans-unit>
        <trans-unit id="0d54b7cdcf2aacde324dff6e5bfaee0441c90af7" translate="yes" xml:space="preserve">
          <source>Masked values in the input array result in rows of zeros.</source>
          <target state="translated">入力配列のマスクされた値は0の行になります。</target>
        </trans-unit>
        <trans-unit id="46f85aa5a353da87d3752c17130ba68a2f9115ff" translate="yes" xml:space="preserve">
          <source>Masked values of True exclude the corresponding element from any computation.</source>
          <target state="translated">マスクされたTrueの値は、対応する要素をいかなる計算からも除外します。</target>
        </trans-unit>
        <trans-unit id="e483ca2e474474c0115e70cf1df3652e7e71e77d" translate="yes" xml:space="preserve">
          <source>MaskedArray interpretation of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">のMaskedArrayの解釈。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="20350351979da6675c245e446543b5c06d79da69" translate="yes" xml:space="preserve">
          <source>MaskedArray methods</source>
          <target state="translated">MaskedArray メソッド</target>
        </trans-unit>
        <trans-unit id="36eef88f9e59e296f6ba9abe6367cd57b8fabee2" translate="yes" xml:space="preserve">
          <source>MaskedArray.T</source>
          <target state="translated">MaskedArray.T</target>
        </trans-unit>
        <trans-unit id="e17190e574e1c6de156753c9b065e38a9376c85f" translate="yes" xml:space="preserve">
          <source>MaskedArray.__abs__()</source>
          <target state="translated">MaskedArray.__abs__()</target>
        </trans-unit>
        <trans-unit id="4c5beb6649fcf04681433a7ebdca9956aed5ec6d" translate="yes" xml:space="preserve">
          <source>MaskedArray.__add__()</source>
          <target state="translated">MaskedArray.__add__()</target>
        </trans-unit>
        <trans-unit id="421e10c77680329d49bb9737bb7abc28463207e4" translate="yes" xml:space="preserve">
          <source>MaskedArray.__and__()</source>
          <target state="translated">MaskedArray.__and__()</target>
        </trans-unit>
        <trans-unit id="fada5de9b74bd344d17ff17846c4bd7d09dc8ec5" translate="yes" xml:space="preserve">
          <source>MaskedArray.__array__()</source>
          <target state="translated">MaskedArray.__array__()</target>
        </trans-unit>
        <trans-unit id="090520da30f28f47ff34b0675dc4cfba52313678" translate="yes" xml:space="preserve">
          <source>MaskedArray.__array_priority__</source>
          <target state="translated">MaskedArray.__array_priority__</target>
        </trans-unit>
        <trans-unit id="3850984710cdf39034ba996313c98f23d5b2df9a" translate="yes" xml:space="preserve">
          <source>MaskedArray.__array_wrap__()</source>
          <target state="translated">MaskedArray.__array_wrap__()</target>
        </trans-unit>
        <trans-unit id="777801a9212371f85a428b465acd2c96402cbfb0" translate="yes" xml:space="preserve">
          <source>MaskedArray.__bool__()</source>
          <target state="translated">MaskedArray.__bool__()</target>
        </trans-unit>
        <trans-unit id="efb175793e0186c34683a4fcb1d1cf5491acc106" translate="yes" xml:space="preserve">
          <source>MaskedArray.__contains__()</source>
          <target state="translated">MaskedArray.__contains__()</target>
        </trans-unit>
        <trans-unit id="05bac951e4103953d43b28841001972c2c09a472" translate="yes" xml:space="preserve">
          <source>MaskedArray.__copy__()</source>
          <target state="translated">MaskedArray.__copy__()</target>
        </trans-unit>
        <trans-unit id="48e8b4072b356b5f6fb2ea3cc4a44eb836ce6d39" translate="yes" xml:space="preserve">
          <source>MaskedArray.__deepcopy__()</source>
          <target state="translated">MaskedArray.__deepcopy__()</target>
        </trans-unit>
        <trans-unit id="2e0879e5e2662c5b7bec6d8240c414de65e1878a" translate="yes" xml:space="preserve">
          <source>MaskedArray.__delitem__()</source>
          <target state="translated">MaskedArray.__delitem__()</target>
        </trans-unit>
        <trans-unit id="ab799a52b2b144674a2920b57d6fb16fd77e185f" translate="yes" xml:space="preserve">
          <source>MaskedArray.__div__()</source>
          <target state="translated">MaskedArray.__div__()</target>
        </trans-unit>
        <trans-unit id="c40d7cec7bfe9dd6ab450d46b504989d029ed2f1" translate="yes" xml:space="preserve">
          <source>MaskedArray.__divmod__()</source>
          <target state="translated">MaskedArray.__divmod__()</target>
        </trans-unit>
        <trans-unit id="31b2f1c182adb284ba514a01be32170ad7fca9d8" translate="yes" xml:space="preserve">
          <source>MaskedArray.__eq__()</source>
          <target state="translated">MaskedArray.__eq__()</target>
        </trans-unit>
        <trans-unit id="c0a1ce4250661dd853b1e06f87ab8dac408d08ad" translate="yes" xml:space="preserve">
          <source>MaskedArray.__float__()</source>
          <target state="translated">MaskedArray.__float__()</target>
        </trans-unit>
        <trans-unit id="c760fe1447ecc3aa37cfb9102932a85018b3dafc" translate="yes" xml:space="preserve">
          <source>MaskedArray.__floordiv__()</source>
          <target state="translated">MaskedArray.__floordiv__()</target>
        </trans-unit>
        <trans-unit id="ee7563ffce3b171861962dcda9493c8d6ea3ed49" translate="yes" xml:space="preserve">
          <source>MaskedArray.__ge__()</source>
          <target state="translated">MaskedArray.__ge__()</target>
        </trans-unit>
        <trans-unit id="82fcceeb833f853fcf31878a9b2755ca3b83dad5" translate="yes" xml:space="preserve">
          <source>MaskedArray.__getitem__()</source>
          <target state="translated">MaskedArray.__getitem__()</target>
        </trans-unit>
        <trans-unit id="9ed68261ffa77dc15fd5c9bb460e16946aa3df57" translate="yes" xml:space="preserve">
          <source>MaskedArray.__getstate__()</source>
          <target state="translated">MaskedArray.__getstate__()</target>
        </trans-unit>
        <trans-unit id="5a94e729c8538503cbcb25ba506eda001f10eef6" translate="yes" xml:space="preserve">
          <source>MaskedArray.__gt__()</source>
          <target state="translated">MaskedArray.__gt__()</target>
        </trans-unit>
        <trans-unit id="5bf01a17a65fea68034c80a57ef6ea67f24bf648" translate="yes" xml:space="preserve">
          <source>MaskedArray.__iadd__()</source>
          <target state="translated">MaskedArray.__iadd__()</target>
        </trans-unit>
        <trans-unit id="3f290bfa30bdb27d86e902d735f6bd7a3ebdd997" translate="yes" xml:space="preserve">
          <source>MaskedArray.__iand__()</source>
          <target state="translated">MaskedArray.__iand__()</target>
        </trans-unit>
        <trans-unit id="a013bde0bc2086e80993b2e6453749be7566713a" translate="yes" xml:space="preserve">
          <source>MaskedArray.__idiv__()</source>
          <target state="translated">MaskedArray.__idiv__()</target>
        </trans-unit>
        <trans-unit id="6b16248d7544de200904fad546fc0e0bf49d5d30" translate="yes" xml:space="preserve">
          <source>MaskedArray.__ifloordiv__()</source>
          <target state="translated">MaskedArray.__ifloordiv__()</target>
        </trans-unit>
        <trans-unit id="e867a020a9a28fcaaaeebcd0b9a09276f34baacb" translate="yes" xml:space="preserve">
          <source>MaskedArray.__ilshift__()</source>
          <target state="translated">MaskedArray.__ilshift__()</target>
        </trans-unit>
        <trans-unit id="a6177a6fe00279423505c3d2049817ef902c9f89" translate="yes" xml:space="preserve">
          <source>MaskedArray.__imod__()</source>
          <target state="translated">MaskedArray.__imod__()</target>
        </trans-unit>
        <trans-unit id="b2c2e20491238cbe7365526c778bb2bbeb1a9d92" translate="yes" xml:space="preserve">
          <source>MaskedArray.__imul__()</source>
          <target state="translated">MaskedArray.__imul__()</target>
        </trans-unit>
        <trans-unit id="8a9abb4f5e69b652a91dedbea90a17391081121c" translate="yes" xml:space="preserve">
          <source>MaskedArray.__int__()</source>
          <target state="translated">MaskedArray.__int__()</target>
        </trans-unit>
        <trans-unit id="89500ad2db959507c40e092a4338242970ecf920" translate="yes" xml:space="preserve">
          <source>MaskedArray.__ior__()</source>
          <target state="translated">MaskedArray.__ior__()</target>
        </trans-unit>
        <trans-unit id="f6e0374c35f94019edb4b446250c41ffb2f2fed6" translate="yes" xml:space="preserve">
          <source>MaskedArray.__ipow__()</source>
          <target state="translated">MaskedArray.__ipow__()</target>
        </trans-unit>
        <trans-unit id="464e0df1d1343a8a83ded812b19b8824e3be674f" translate="yes" xml:space="preserve">
          <source>MaskedArray.__irshift__()</source>
          <target state="translated">MaskedArray.__irshift__()</target>
        </trans-unit>
        <trans-unit id="93662970a9f68651b0f13dddd859eee1c0cc852a" translate="yes" xml:space="preserve">
          <source>MaskedArray.__isub__()</source>
          <target state="translated">MaskedArray.__isub__()</target>
        </trans-unit>
        <trans-unit id="97afb01534849ce41926c144adb54602527c52de" translate="yes" xml:space="preserve">
          <source>MaskedArray.__itruediv__()</source>
          <target state="translated">MaskedArray.__itruediv__()</target>
        </trans-unit>
        <trans-unit id="e96f966e7a5dbcf51d23a0d0e3ddedabf690b6a0" translate="yes" xml:space="preserve">
          <source>MaskedArray.__ixor__()</source>
          <target state="translated">MaskedArray.__ixor__()</target>
        </trans-unit>
        <trans-unit id="bfe0157861dd1f9b0a231126eaf62a9189b87c49" translate="yes" xml:space="preserve">
          <source>MaskedArray.__le__()</source>
          <target state="translated">MaskedArray.__le__()</target>
        </trans-unit>
        <trans-unit id="dfcf580e54d121ccd612e4d1a45624b4bf8d1bc1" translate="yes" xml:space="preserve">
          <source>MaskedArray.__len__()</source>
          <target state="translated">MaskedArray.__len__()</target>
        </trans-unit>
        <trans-unit id="7d5ce46d9782038b232fd02c47b999130a7413d8" translate="yes" xml:space="preserve">
          <source>MaskedArray.__long__()</source>
          <target state="translated">MaskedArray.__long__()</target>
        </trans-unit>
        <trans-unit id="663699b5db72d62ee50222aef2e15e6ad8befaa7" translate="yes" xml:space="preserve">
          <source>MaskedArray.__lshift__()</source>
          <target state="translated">MaskedArray.__lshift__()</target>
        </trans-unit>
        <trans-unit id="981e3ec8c47bf66b67cbcfc222695e682740ef5c" translate="yes" xml:space="preserve">
          <source>MaskedArray.__lt__()</source>
          <target state="translated">MaskedArray.__lt__()</target>
        </trans-unit>
        <trans-unit id="e012d6b8cd5b77bcbe0a7677af22fead34c5e6bc" translate="yes" xml:space="preserve">
          <source>MaskedArray.__mod__()</source>
          <target state="translated">MaskedArray.__mod__()</target>
        </trans-unit>
        <trans-unit id="621981dba1b2c2c21d05b7718ab7bc6b94dde4de" translate="yes" xml:space="preserve">
          <source>MaskedArray.__mul__()</source>
          <target state="translated">MaskedArray.__mul__()</target>
        </trans-unit>
        <trans-unit id="451a40eda1d0439b5952565ebd5be0b93178765b" translate="yes" xml:space="preserve">
          <source>MaskedArray.__ne__()</source>
          <target state="translated">MaskedArray.__ne__()</target>
        </trans-unit>
        <trans-unit id="449fa0f7176203d64b7688836d07d289af8aaada" translate="yes" xml:space="preserve">
          <source>MaskedArray.__or__()</source>
          <target state="translated">MaskedArray.__or__()</target>
        </trans-unit>
        <trans-unit id="74a1bdc16196c2ca4cb42e9ddf2dfa11e81379c0" translate="yes" xml:space="preserve">
          <source>MaskedArray.__pow__()</source>
          <target state="translated">MaskedArray.__pow__()</target>
        </trans-unit>
        <trans-unit id="628ddbd485b2a3c762a1acfa9b1ed8ea95f6ae2a" translate="yes" xml:space="preserve">
          <source>MaskedArray.__radd__()</source>
          <target state="translated">MaskedArray.__radd__()</target>
        </trans-unit>
        <trans-unit id="e614928ac12233029fee60e611f9fd93534a1549" translate="yes" xml:space="preserve">
          <source>MaskedArray.__rand__()</source>
          <target state="translated">MaskedArray.__rand__()</target>
        </trans-unit>
        <trans-unit id="60d56dcc3079a28858f7341d86340a9f6456c4ae" translate="yes" xml:space="preserve">
          <source>MaskedArray.__rdivmod__()</source>
          <target state="translated">MaskedArray.__rdivmod__()</target>
        </trans-unit>
        <trans-unit id="58cfbddeeee8f3d20b2cb0a7c8e4b95d69260328" translate="yes" xml:space="preserve">
          <source>MaskedArray.__reduce__()</source>
          <target state="translated">MaskedArray.__reduce__()</target>
        </trans-unit>
        <trans-unit id="22bff568add5c50c81a9b76411f74a0165340bc3" translate="yes" xml:space="preserve">
          <source>MaskedArray.__repr__()</source>
          <target state="translated">MaskedArray.__repr__()</target>
        </trans-unit>
        <trans-unit id="37da21dfefb5612acac5c5b158edd891d71eaa33" translate="yes" xml:space="preserve">
          <source>MaskedArray.__rfloordiv__()</source>
          <target state="translated">MaskedArray.__rfloordiv__()</target>
        </trans-unit>
        <trans-unit id="ba081ab522355f8c737fc96eeefb42e5ff706d35" translate="yes" xml:space="preserve">
          <source>MaskedArray.__rlshift__()</source>
          <target state="translated">MaskedArray.__rlshift__()</target>
        </trans-unit>
        <trans-unit id="556c4be401c91f224ede894f1fd54e9f20d1b10a" translate="yes" xml:space="preserve">
          <source>MaskedArray.__rmod__()</source>
          <target state="translated">MaskedArray.__rmod__()</target>
        </trans-unit>
        <trans-unit id="d258f963823807ebafdac4bd7b4899a4ad5b3d81" translate="yes" xml:space="preserve">
          <source>MaskedArray.__rmul__()</source>
          <target state="translated">MaskedArray.__rmul__()</target>
        </trans-unit>
        <trans-unit id="6c3504184a32bdc300bf50151f75a50cfb6319e8" translate="yes" xml:space="preserve">
          <source>MaskedArray.__ror__()</source>
          <target state="translated">MaskedArray.__ror__()</target>
        </trans-unit>
        <trans-unit id="b16d994e6cc6bacd92021c5be6a1f21c448c82be" translate="yes" xml:space="preserve">
          <source>MaskedArray.__rpow__()</source>
          <target state="translated">MaskedArray.__rpow__()</target>
        </trans-unit>
        <trans-unit id="c263bb6b6626def1b808e0fb37da7db4a0ebdd03" translate="yes" xml:space="preserve">
          <source>MaskedArray.__rrshift__()</source>
          <target state="translated">MaskedArray.__rrshift__()</target>
        </trans-unit>
        <trans-unit id="2024b9cd2546c77971dd14447cc764030b99e828" translate="yes" xml:space="preserve">
          <source>MaskedArray.__rshift__()</source>
          <target state="translated">MaskedArray.__rshift__()</target>
        </trans-unit>
        <trans-unit id="9b18fd997fad99869943ae5ae86581115d42c76a" translate="yes" xml:space="preserve">
          <source>MaskedArray.__rsub__()</source>
          <target state="translated">MaskedArray.__rsub__()</target>
        </trans-unit>
        <trans-unit id="1f99227921386926b66e1c80505362e37c730585" translate="yes" xml:space="preserve">
          <source>MaskedArray.__rtruediv__()</source>
          <target state="translated">MaskedArray.__rtruediv__()</target>
        </trans-unit>
        <trans-unit id="f78ffc8f65b81494cb55cee0002a4b0ada2f7ea9" translate="yes" xml:space="preserve">
          <source>MaskedArray.__rxor__()</source>
          <target state="translated">MaskedArray.__rxor__()</target>
        </trans-unit>
        <trans-unit id="e2418f087c527a32587d4136ae5e11918bd6852f" translate="yes" xml:space="preserve">
          <source>MaskedArray.__setitem__()</source>
          <target state="translated">MaskedArray.__setitem__()</target>
        </trans-unit>
        <trans-unit id="fd4da74423f8b70de86f76a2c1393f4543b02dca" translate="yes" xml:space="preserve">
          <source>MaskedArray.__setmask__()</source>
          <target state="translated">MaskedArray.__setmask__()</target>
        </trans-unit>
        <trans-unit id="3f08573f36e15c86d5119deeed078db9cf2f9c35" translate="yes" xml:space="preserve">
          <source>MaskedArray.__setstate__()</source>
          <target state="translated">MaskedArray.__setstate__()</target>
        </trans-unit>
        <trans-unit id="bf1a7de4e02395cb1d82eb3102a1b212087fb9cc" translate="yes" xml:space="preserve">
          <source>MaskedArray.__str__()</source>
          <target state="translated">MaskedArray.__str__()</target>
        </trans-unit>
        <trans-unit id="36b295d86fb340a017c207e36c8ebf83a6e16a78" translate="yes" xml:space="preserve">
          <source>MaskedArray.__sub__()</source>
          <target state="translated">MaskedArray.__sub__()</target>
        </trans-unit>
        <trans-unit id="a89d7e18e21d53f656570951adaedf72a5d05f92" translate="yes" xml:space="preserve">
          <source>MaskedArray.__truediv__()</source>
          <target state="translated">MaskedArray.__truediv__()</target>
        </trans-unit>
        <trans-unit id="a9754cec53ed0199a3d0e11dd63f20ddf46718a9" translate="yes" xml:space="preserve">
          <source>MaskedArray.__xor__()</source>
          <target state="translated">MaskedArray.__xor__()</target>
        </trans-unit>
        <trans-unit id="e5c6d58a06d7326fe5c3b8675bf582f779908979" translate="yes" xml:space="preserve">
          <source>MaskedArray.all()</source>
          <target state="translated">MaskedArray.all()</target>
        </trans-unit>
        <trans-unit id="8e1c2703f802467d9be6b41fd4750421b30e4e78" translate="yes" xml:space="preserve">
          <source>MaskedArray.anom()</source>
          <target state="translated">MaskedArray.anom()</target>
        </trans-unit>
        <trans-unit id="ceaaae3b924788c52bbc3430b2ea479db323a8fa" translate="yes" xml:space="preserve">
          <source>MaskedArray.any()</source>
          <target state="translated">MaskedArray.any()</target>
        </trans-unit>
        <trans-unit id="b63e7e734845f2e2d00786798d483b6f14625034" translate="yes" xml:space="preserve">
          <source>MaskedArray.argmax()</source>
          <target state="translated">MaskedArray.argmax()</target>
        </trans-unit>
        <trans-unit id="1d5ecf97f71ab691cf38b6c6ce5d2340f025638f" translate="yes" xml:space="preserve">
          <source>MaskedArray.argmin()</source>
          <target state="translated">MaskedArray.argmin()</target>
        </trans-unit>
        <trans-unit id="5f36204da3705060bd71f1d51d51b88f55d27d4b" translate="yes" xml:space="preserve">
          <source>MaskedArray.argsort()</source>
          <target state="translated">MaskedArray.argsort()</target>
        </trans-unit>
        <trans-unit id="553ea17b1dc12eebdf6169924b18d2d2f67e5e36" translate="yes" xml:space="preserve">
          <source>MaskedArray.astype()</source>
          <target state="translated">MaskedArray.astype()</target>
        </trans-unit>
        <trans-unit id="8b903ed2f76d12382ddb4618a18e0d58c21ed045" translate="yes" xml:space="preserve">
          <source>MaskedArray.base</source>
          <target state="translated">MaskedArray.base</target>
        </trans-unit>
        <trans-unit id="a41536928c95f5bbcde8ddd69d27b894c4f41213" translate="yes" xml:space="preserve">
          <source>MaskedArray.baseclass</source>
          <target state="translated">MaskedArray.baseclass</target>
        </trans-unit>
        <trans-unit id="e9f76b44c9ca3946a8973c001ef5105ca5c0a87a" translate="yes" xml:space="preserve">
          <source>MaskedArray.byteswap()</source>
          <target state="translated">MaskedArray.byteswap()</target>
        </trans-unit>
        <trans-unit id="6d6d5940ea9cd2aa53d30efb8451b5d30eb2cde7" translate="yes" xml:space="preserve">
          <source>MaskedArray.choose()</source>
          <target state="translated">MaskedArray.choose()</target>
        </trans-unit>
        <trans-unit id="15f1f394124b62be99d1e91448f88c1ef69b9f14" translate="yes" xml:space="preserve">
          <source>MaskedArray.clip()</source>
          <target state="translated">MaskedArray.clip()</target>
        </trans-unit>
        <trans-unit id="cf476639b180537cbfa338fde8bb6d05c515b926" translate="yes" xml:space="preserve">
          <source>MaskedArray.compress()</source>
          <target state="translated">MaskedArray.compress()</target>
        </trans-unit>
        <trans-unit id="2ee7894999c452973a3887d5a0c1ffb1b8b3389f" translate="yes" xml:space="preserve">
          <source>MaskedArray.compressed()</source>
          <target state="translated">MaskedArray.compressed()</target>
        </trans-unit>
        <trans-unit id="35832e57568e0633c816ac034fbb4ab85736d2c2" translate="yes" xml:space="preserve">
          <source>MaskedArray.conj()</source>
          <target state="translated">MaskedArray.conj()</target>
        </trans-unit>
        <trans-unit id="8161480b13b89c370614b9b7777fdfda08ce6c7d" translate="yes" xml:space="preserve">
          <source>MaskedArray.conjugate()</source>
          <target state="translated">MaskedArray.conjugate()</target>
        </trans-unit>
        <trans-unit id="cb7ea380c906751da3d908d0bc4c7d88be3c4655" translate="yes" xml:space="preserve">
          <source>MaskedArray.copy()</source>
          <target state="translated">MaskedArray.copy()</target>
        </trans-unit>
        <trans-unit id="eac1ac7efd8d1836918e8e816c3820b3155826b4" translate="yes" xml:space="preserve">
          <source>MaskedArray.count()</source>
          <target state="translated">MaskedArray.count()</target>
        </trans-unit>
        <trans-unit id="3144614ff73f87e362e1bacfaafb61802dea0782" translate="yes" xml:space="preserve">
          <source>MaskedArray.ctypes</source>
          <target state="translated">MaskedArray.ctypes</target>
        </trans-unit>
        <trans-unit id="d22189d1da9868a7c7aedc78be065098ff0416a8" translate="yes" xml:space="preserve">
          <source>MaskedArray.cumprod()</source>
          <target state="translated">MaskedArray.cumprod()</target>
        </trans-unit>
        <trans-unit id="5323344bfd65c29d84a1c64f8e69c1669e31d747" translate="yes" xml:space="preserve">
          <source>MaskedArray.cumsum()</source>
          <target state="translated">MaskedArray.cumsum()</target>
        </trans-unit>
        <trans-unit id="1b54195e4a96c4925d78934db276897c666ad669" translate="yes" xml:space="preserve">
          <source>MaskedArray.diagonal()</source>
          <target state="translated">MaskedArray.diagonal()</target>
        </trans-unit>
        <trans-unit id="4e8d0af404b08c3a3152d122be74acd3793116ba" translate="yes" xml:space="preserve">
          <source>MaskedArray.dtype</source>
          <target state="translated">MaskedArray.dtype</target>
        </trans-unit>
        <trans-unit id="88627982cc7c9adcc1bb4a9df2f00ba018e75677" translate="yes" xml:space="preserve">
          <source>MaskedArray.dump()</source>
          <target state="translated">MaskedArray.dump()</target>
        </trans-unit>
        <trans-unit id="c23b1641ee5386a065ac10728a6cce4884c7f67c" translate="yes" xml:space="preserve">
          <source>MaskedArray.dumps()</source>
          <target state="translated">MaskedArray.dumps()</target>
        </trans-unit>
        <trans-unit id="7fbcbdc6bf48542a304589331c558cf1018351f9" translate="yes" xml:space="preserve">
          <source>MaskedArray.fill()</source>
          <target state="translated">MaskedArray.fill()</target>
        </trans-unit>
        <trans-unit id="09ddd16dd4582a56c01d30b2628ebe76693f330b" translate="yes" xml:space="preserve">
          <source>MaskedArray.fill_value</source>
          <target state="translated">MaskedArray.fill_value</target>
        </trans-unit>
        <trans-unit id="e1deb1c4efd17c8372828e46fb5b407cc4b2e560" translate="yes" xml:space="preserve">
          <source>MaskedArray.filled()</source>
          <target state="translated">MaskedArray.filled()</target>
        </trans-unit>
        <trans-unit id="eb23b7e1f28825cf3159c8d72cf7cf6cbb51dd50" translate="yes" xml:space="preserve">
          <source>MaskedArray.flags</source>
          <target state="translated">MaskedArray.flags</target>
        </trans-unit>
        <trans-unit id="bf6011a45fdc5bf282b9d2ac9e76b5bf0e1f7c3c" translate="yes" xml:space="preserve">
          <source>MaskedArray.flat</source>
          <target state="translated">MaskedArray.flat</target>
        </trans-unit>
        <trans-unit id="33a07dd74f9702dedccdd5f96fc5fd2279f599e7" translate="yes" xml:space="preserve">
          <source>MaskedArray.flatten()</source>
          <target state="translated">MaskedArray.flatten()</target>
        </trans-unit>
        <trans-unit id="4be2c990604cbc6d1aaaddaf107bba8d516117ba" translate="yes" xml:space="preserve">
          <source>MaskedArray.get_fill_value()</source>
          <target state="translated">MaskedArray.get_fill_value()</target>
        </trans-unit>
        <trans-unit id="928bdb3c7088feb611a13b7ed937bda6d3220a9f" translate="yes" xml:space="preserve">
          <source>MaskedArray.harden_mask()</source>
          <target state="translated">MaskedArray.harden_mask()</target>
        </trans-unit>
        <trans-unit id="5776b1ede267a30ef16553c04ba5ccdb9eeff035" translate="yes" xml:space="preserve">
          <source>MaskedArray.hardmask</source>
          <target state="translated">MaskedArray.hardmask</target>
        </trans-unit>
        <trans-unit id="668ec5b189835b07e81e62fe1b71655e19e0507d" translate="yes" xml:space="preserve">
          <source>MaskedArray.ids()</source>
          <target state="translated">MaskedArray.ids()</target>
        </trans-unit>
        <trans-unit id="53e1ece9ef7129ef016e75a408bef90f4ad7d6ec" translate="yes" xml:space="preserve">
          <source>MaskedArray.imag</source>
          <target state="translated">MaskedArray.imag</target>
        </trans-unit>
        <trans-unit id="de5139068e5b47613ceaace681bfe53e63d1f61b" translate="yes" xml:space="preserve">
          <source>MaskedArray.iscontiguous()</source>
          <target state="translated">MaskedArray.iscontiguous()</target>
        </trans-unit>
        <trans-unit id="0e176d5d52767b30c459a6e7b13d20b466bf1d48" translate="yes" xml:space="preserve">
          <source>MaskedArray.item()</source>
          <target state="translated">MaskedArray.item()</target>
        </trans-unit>
        <trans-unit id="cfba9a15335c8528880cc19c17d0e647a32068f6" translate="yes" xml:space="preserve">
          <source>MaskedArray.itemsize</source>
          <target state="translated">MaskedArray.itemsize</target>
        </trans-unit>
        <trans-unit id="04fdc3f52df94b1c56e45fc9a1c659f3dce4bb06" translate="yes" xml:space="preserve">
          <source>MaskedArray.mask</source>
          <target state="translated">MaskedArray.mask</target>
        </trans-unit>
        <trans-unit id="f7920c6fc70c30e09826d1b4db0853ba739f0c58" translate="yes" xml:space="preserve">
          <source>MaskedArray.max()</source>
          <target state="translated">MaskedArray.max()</target>
        </trans-unit>
        <trans-unit id="84aef084adaa9295fd7004b2e6df5ba7218f7649" translate="yes" xml:space="preserve">
          <source>MaskedArray.mean()</source>
          <target state="translated">MaskedArray.mean()</target>
        </trans-unit>
        <trans-unit id="e62b69c6c1fbdc0c92dd5be409d3ff75463d7b92" translate="yes" xml:space="preserve">
          <source>MaskedArray.min()</source>
          <target state="translated">MaskedArray.min()</target>
        </trans-unit>
        <trans-unit id="9d50a4ea8c39e75b51c56fc27766681c03605f9d" translate="yes" xml:space="preserve">
          <source>MaskedArray.nbytes</source>
          <target state="translated">MaskedArray.nbytes</target>
        </trans-unit>
        <trans-unit id="d961e99d89d50c2a542202334c0207facc5249e3" translate="yes" xml:space="preserve">
          <source>MaskedArray.ndim</source>
          <target state="translated">MaskedArray.ndim</target>
        </trans-unit>
        <trans-unit id="4633254dc56bab337b80fc955927d8309b0ed52f" translate="yes" xml:space="preserve">
          <source>MaskedArray.nonzero()</source>
          <target state="translated">MaskedArray.nonzero()</target>
        </trans-unit>
        <trans-unit id="54bb93776bf2142f0aa0a828fc6e756123625c29" translate="yes" xml:space="preserve">
          <source>MaskedArray.prod()</source>
          <target state="translated">MaskedArray.prod()</target>
        </trans-unit>
        <trans-unit id="99cae07f34822d1dd041989028d8ee89cccd5389" translate="yes" xml:space="preserve">
          <source>MaskedArray.product()</source>
          <target state="translated">MaskedArray.product()</target>
        </trans-unit>
        <trans-unit id="2e7dc82587dbf756ef0595225d7b1d599cc87ce9" translate="yes" xml:space="preserve">
          <source>MaskedArray.ptp()</source>
          <target state="translated">MaskedArray.ptp()</target>
        </trans-unit>
        <trans-unit id="62a23add4cab019a98b922506c67216415f559e6" translate="yes" xml:space="preserve">
          <source>MaskedArray.put()</source>
          <target state="translated">MaskedArray.put()</target>
        </trans-unit>
        <trans-unit id="3f6efa7f32913b6da0be6764da3a9e63b134cec7" translate="yes" xml:space="preserve">
          <source>MaskedArray.ravel()</source>
          <target state="translated">MaskedArray.ravel()</target>
        </trans-unit>
        <trans-unit id="c4effceac6d7be9d7ab7d937a9db7f7953fa9e79" translate="yes" xml:space="preserve">
          <source>MaskedArray.real</source>
          <target state="translated">MaskedArray.real</target>
        </trans-unit>
        <trans-unit id="7326a995559827a69ede462348e23f83e42d93a6" translate="yes" xml:space="preserve">
          <source>MaskedArray.recordmask</source>
          <target state="translated">MaskedArray.recordmask</target>
        </trans-unit>
        <trans-unit id="267909c329e4c4b017551dc7517cc359a683518c" translate="yes" xml:space="preserve">
          <source>MaskedArray.repeat()</source>
          <target state="translated">MaskedArray.repeat()</target>
        </trans-unit>
        <trans-unit id="a94977c091d0244a0f27092e41c24dcdde9bf364" translate="yes" xml:space="preserve">
          <source>MaskedArray.reshape()</source>
          <target state="translated">MaskedArray.reshape()</target>
        </trans-unit>
        <trans-unit id="cbda91fe973c5af4d1846b187c12f7c07e3d89b5" translate="yes" xml:space="preserve">
          <source>MaskedArray.resize()</source>
          <target state="translated">MaskedArray.resize()</target>
        </trans-unit>
        <trans-unit id="f1abf4fda3fba4d3ce13f3d5cf8da8c643afeed1" translate="yes" xml:space="preserve">
          <source>MaskedArray.round()</source>
          <target state="translated">MaskedArray.round()</target>
        </trans-unit>
        <trans-unit id="2895bb54b7a42e82d551bd6bbf427486346a72fd" translate="yes" xml:space="preserve">
          <source>MaskedArray.searchsorted()</source>
          <target state="translated">MaskedArray.searchsorted()</target>
        </trans-unit>
        <trans-unit id="a055b62e486436524db64f93e8dfc6ce3b327aec" translate="yes" xml:space="preserve">
          <source>MaskedArray.set_fill_value()</source>
          <target state="translated">MaskedArray.set_fill_value()</target>
        </trans-unit>
        <trans-unit id="31782d715c88bcd8daea7ea4af3dfcca778bc8fb" translate="yes" xml:space="preserve">
          <source>MaskedArray.shape</source>
          <target state="translated">MaskedArray.shape</target>
        </trans-unit>
        <trans-unit id="172bb2adad3b1105f040ef0c9a0d2e13374f0f8e" translate="yes" xml:space="preserve">
          <source>MaskedArray.sharedmask</source>
          <target state="translated">MaskedArray.sharedmask</target>
        </trans-unit>
        <trans-unit id="42fa7b56c2ec36f7a2ce85354d7df622368c5b81" translate="yes" xml:space="preserve">
          <source>MaskedArray.shrink_mask()</source>
          <target state="translated">MaskedArray.shrink_mask()</target>
        </trans-unit>
        <trans-unit id="1391bd094b99dc658b9bc0b597891b86fe8ac123" translate="yes" xml:space="preserve">
          <source>MaskedArray.size</source>
          <target state="translated">MaskedArray.size</target>
        </trans-unit>
        <trans-unit id="3e9f77bc727602c7f06ec08f0e0833f8045ca3ce" translate="yes" xml:space="preserve">
          <source>MaskedArray.soften_mask()</source>
          <target state="translated">MaskedArray.soften_mask()</target>
        </trans-unit>
        <trans-unit id="2571e1acb7d9d777b4ec5146329c893d5becacf5" translate="yes" xml:space="preserve">
          <source>MaskedArray.sort()</source>
          <target state="translated">MaskedArray.sort()</target>
        </trans-unit>
        <trans-unit id="7d7f8f1e563fdcf47b4158ec9e719af4e62f25a5" translate="yes" xml:space="preserve">
          <source>MaskedArray.squeeze()</source>
          <target state="translated">MaskedArray.squeeze()</target>
        </trans-unit>
        <trans-unit id="aea8c3834e6535e96618bcf0b7d60c8e60ab0fa7" translate="yes" xml:space="preserve">
          <source>MaskedArray.std()</source>
          <target state="translated">MaskedArray.std()</target>
        </trans-unit>
        <trans-unit id="c3efd00e4ff0921ced2fdd2986e21ca60d6c0b60" translate="yes" xml:space="preserve">
          <source>MaskedArray.strides</source>
          <target state="translated">MaskedArray.strides</target>
        </trans-unit>
        <trans-unit id="0b63a55c529457179aabd0f78400c7c33bfbaa7a" translate="yes" xml:space="preserve">
          <source>MaskedArray.sum()</source>
          <target state="translated">MaskedArray.sum()</target>
        </trans-unit>
        <trans-unit id="dd19aac1ecec927ddad154727c08f83ca8578d79" translate="yes" xml:space="preserve">
          <source>MaskedArray.swapaxes()</source>
          <target state="translated">MaskedArray.swapaxes()</target>
        </trans-unit>
        <trans-unit id="b52a30451c462e14e36823697aa308554aa7fad1" translate="yes" xml:space="preserve">
          <source>MaskedArray.take()</source>
          <target state="translated">MaskedArray.take()</target>
        </trans-unit>
        <trans-unit id="b3c5f3666f109883066c2156500193c3ad4ea580" translate="yes" xml:space="preserve">
          <source>MaskedArray.tobytes()</source>
          <target state="translated">MaskedArray.tobytes()</target>
        </trans-unit>
        <trans-unit id="b73a7f5b23f879fac97ae6f917b3886157a29306" translate="yes" xml:space="preserve">
          <source>MaskedArray.tofile()</source>
          <target state="translated">MaskedArray.tofile()</target>
        </trans-unit>
        <trans-unit id="f187971871a325f15b94fad80ebc2b2b0db2cbfb" translate="yes" xml:space="preserve">
          <source>MaskedArray.toflex()</source>
          <target state="translated">MaskedArray.toflex()</target>
        </trans-unit>
        <trans-unit id="7d0dfcc5b0a713e57ed58e89559617d27b529e95" translate="yes" xml:space="preserve">
          <source>MaskedArray.tolist()</source>
          <target state="translated">MaskedArray.tolist()</target>
        </trans-unit>
        <trans-unit id="5ec3a56e7fb1946bb4c7cc194f8bc3202eb68474" translate="yes" xml:space="preserve">
          <source>MaskedArray.torecords()</source>
          <target state="translated">MaskedArray.torecords()</target>
        </trans-unit>
        <trans-unit id="f8092ae3dee10c77a715b4324e29f9011ae8d44f" translate="yes" xml:space="preserve">
          <source>MaskedArray.tostring()</source>
          <target state="translated">MaskedArray.tostring()</target>
        </trans-unit>
        <trans-unit id="2c5e50518d438a035f54e2c053b853f347501ed6" translate="yes" xml:space="preserve">
          <source>MaskedArray.trace()</source>
          <target state="translated">MaskedArray.trace()</target>
        </trans-unit>
        <trans-unit id="8026a479aff94481ee480cb7aa37c1ee94f8f1e7" translate="yes" xml:space="preserve">
          <source>MaskedArray.transpose()</source>
          <target state="translated">MaskedArray.transpose()</target>
        </trans-unit>
        <trans-unit id="6e03e18e2a096eb3a22fa2cf5f4256ef7024dab0" translate="yes" xml:space="preserve">
          <source>MaskedArray.unshare_mask()</source>
          <target state="translated">MaskedArray.unshare_mask()</target>
        </trans-unit>
        <trans-unit id="b556a190400c66097d79e2b72687a5a08af7fec4" translate="yes" xml:space="preserve">
          <source>MaskedArray.var()</source>
          <target state="translated">MaskedArray.var()</target>
        </trans-unit>
        <trans-unit id="c5f3a708208150cae733763b773c9177d7b2ab71" translate="yes" xml:space="preserve">
          <source>MaskedArray.view()</source>
          <target state="translated">MaskedArray.view()</target>
        </trans-unit>
        <trans-unit id="c35712362d09d1fde6ef51380a1116ff20f33e04" translate="yes" xml:space="preserve">
          <source>Masking an entry</source>
          <target state="translated">エントリーのマスキング</target>
        </trans-unit>
        <trans-unit id="c49fce08321becc4e560fc4e6283b6aee1f9d826" translate="yes" xml:space="preserve">
          <source>Masking condition. When &lt;code&gt;condition&lt;/code&gt; tests floating point values for equality, consider using &lt;code&gt;masked_values&lt;/code&gt; instead.</source>
          <target state="translated">マスキング条件。 &lt;code&gt;condition&lt;/code&gt; が浮動小数点値の等価性をテストする場合は、代わりに &lt;code&gt;masked_values&lt;/code&gt; の使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="1649bfe9af58749e1526df511ef4aba3c9d3b175" translate="yes" xml:space="preserve">
          <source>Masking value.</source>
          <target state="translated">マスキング値。</target>
        </trans-unit>
        <trans-unit id="370101c55e76bb32e62a76c0f757b67a5a083820" translate="yes" xml:space="preserve">
          <source>Math operations</source>
          <target state="translated">数学演算</target>
        </trans-unit>
        <trans-unit id="8edc9ac7baa876487a18001d1e0613039a5fb80e" translate="yes" xml:space="preserve">
          <source>Mathematical functions</source>
          <target state="translated">数理関数</target>
        </trans-unit>
        <trans-unit id="a2411671b4e30b66c4de3508c28669a0a99ca993" translate="yes" xml:space="preserve">
          <source>Mathematical functions with automatic domain (&lt;code&gt;numpy.emath&lt;/code&gt;)</source>
          <target state="translated">自動ドメインを使用した数学関数（ &lt;code&gt;numpy.emath&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="9d9b3dbd8a223e0bba1f3266afe5f1e501d861c7" translate="yes" xml:space="preserve">
          <source>Mathematical functions with automatic domain (numpy.emath)</source>
          <target state="translated">自動領域を持つ数学関数 (numpy.emath)</target>
        </trans-unit>
        <trans-unit id="9c606acb2ce0339f738ed3784d4aa65cd89266e6" translate="yes" xml:space="preserve">
          <source>Matlab&amp;rsquo;s &amp;ldquo;square bracket stacking&amp;rdquo;, &lt;code&gt;[A, B, ...; p, q, ...]&lt;/code&gt;, is equivalent to &lt;code&gt;np.block([[A, B, ...], [p, q, ...]])&lt;/code&gt;.</source>
          <target state="translated">Matlabの「角かっこスタッキング」、 &lt;code&gt;[A, B, ...; p, q, ...]&lt;/code&gt; は &lt;code&gt;np.block([[A, B, ...], [p, q, ...]])&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="3041fb1a9552bc68cf9d768c9ca41302e19b08ee" translate="yes" xml:space="preserve">
          <source>Matrices for which the eigenvalues and right eigenvectors will be computed</source>
          <target state="translated">固有値と右固有ベクトルが計算される行列</target>
        </trans-unit>
        <trans-unit id="bd71c67a3b83eb62de12972765eea9308c3b483b" translate="yes" xml:space="preserve">
          <source>Matrices have special attributes which make calculations easier. These are</source>
          <target state="translated">行列には,計算を容易にする特殊な属性があります.これらの属性は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="bcd75d9e13488f4540b60e5c631a7f37e4815042" translate="yes" xml:space="preserve">
          <source>Matrix Multiplication:</source>
          <target state="translated">行列の乗算。</target>
        </trans-unit>
        <trans-unit id="1c3a96f8aba8970d9d6caf64351791564bceb887" translate="yes" xml:space="preserve">
          <source>Matrix and vector products</source>
          <target state="translated">マトリックスとベクトル製品</target>
        </trans-unit>
        <trans-unit id="5e18783ea85014d84417a3fa00821d04caeba753" translate="yes" xml:space="preserve">
          <source>Matrix eigenvalues</source>
          <target state="translated">自己評価マトリックス</target>
        </trans-unit>
        <trans-unit id="40c589f9f4a5b151749136504a38d2d5530d342f" translate="yes" xml:space="preserve">
          <source>Matrix library</source>
          <target state="translated">マトリックスライブラリ</target>
        </trans-unit>
        <trans-unit id="8b55a6a8a5389ef7ea9f564856c667b255967c7c" translate="yes" xml:space="preserve">
          <source>Matrix library (&lt;code&gt;numpy.matlib&lt;/code&gt;)</source>
          <target state="translated">マトリックスライブラリ（ &lt;code&gt;numpy.matlib&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="429cbbce0f3fceab49855d88d16b0551e9e94f6f" translate="yes" xml:space="preserve">
          <source>Matrix library (numpy.matlib)</source>
          <target state="translated">行列ライブラリ (numpy.matlib)</target>
        </trans-unit>
        <trans-unit id="7534ae125b6c73fbdfeb028dda63ff770c999c03" translate="yes" xml:space="preserve">
          <source>Matrix multiplication and dot product, &lt;a href=&quot;numpy.matmul#numpy.matmul&quot;&gt;&lt;code&gt;numpy.matmul&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;numpy.dot#numpy.dot&quot;&gt;&lt;code&gt;numpy.dot&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">行列の乗算とドット積、&lt;a href=&quot;numpy.matmul#numpy.matmul&quot;&gt; &lt;code&gt;numpy.matmul&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;numpy.dot#numpy.dot&quot;&gt; &lt;code&gt;numpy.dot&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8f772fbaf62a2ba86c269a549f33d02c5640227c" translate="yes" xml:space="preserve">
          <source>Matrix objects</source>
          <target state="translated">マトリックスオブジェクト</target>
        </trans-unit>
        <trans-unit id="1239733584e290e3f1b657d90ad11c24f7e3aa1c" translate="yes" xml:space="preserve">
          <source>Matrix objects are always two-dimensional. This has far-reaching implications, in that m.ravel() is still two-dimensional (with a 1 in the first dimension) and item selection returns two-dimensional objects so that sequence behavior is fundamentally different than arrays.</source>
          <target state="translated">行列オブジェクトは常に2次元です。これは、m.ravel()が2次元であり(1次元目に1を持つ)、項目選択が2次元オブジェクトを返すため、シーケンスの動作が配列とは根本的に異なるという、広範囲に及ぶ意味合いを持っています。</target>
        </trans-unit>
        <trans-unit id="b1258e279551dcc0c0a1d9f474a5e8fa1eb6a3e9" translate="yes" xml:space="preserve">
          <source>Matrix objects can be created using a string notation to allow Matlab-style syntax where spaces separate columns and semicolons (&amp;lsquo;;&amp;rsquo;) separate rows.</source>
          <target state="translated">行列オブジェクトは、文字列表記を使用して作成でき、スペースで列を区切り、セミコロン（ ';'）で行を区切るMatlabスタイルの構文を許可します。</target>
        </trans-unit>
        <trans-unit id="f0659424b6f6e6ba9c750d2d8f06b93eb8a45444" translate="yes" xml:space="preserve">
          <source>Matrix objects over-ride multiplication to be matrix-multiplication. &lt;strong&gt;Make sure you understand this for functions that you may want to receive matrices. Especially in light of the fact that asanyarray(m) returns a matrix when m is a matrix.&lt;/strong&gt;</source>
          <target state="translated">Matrixオブジェクトは乗算をオーバーライドして、行列乗算を行います。&lt;strong&gt;行列を受け取りたい関数の場合は、これを必ず理解してください。特に、mが行列の場合、asanyarray（m）は行列を返すという事実に照らしてみます。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6a78dfd0bffc4abcfc8dc1f8a8a98299d812ea14" translate="yes" xml:space="preserve">
          <source>Matrix objects over-ride multiplication, &amp;lsquo;*&amp;rsquo;, and power, &amp;lsquo;**&amp;rsquo;, to be matrix-multiplication and matrix power, respectively. If your subroutine can accept sub-classes and you do not convert to base- class arrays, then you must use the ufuncs multiply and power to be sure that you are performing the correct operation for all inputs.</source>
          <target state="translated">行列オブジェクトは、乗算 '*'および累乗 '**'をオーバーライドして、それぞれ行列乗算および行列累乗になります。サブルーチンがサブクラスを受け入れることができ、基本クラスの配列に変換しない場合は、ufuncsの乗算と累乗を使用して、すべての入力に対して正しい演算を実行していることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="4d230609d3a6dfa3ab2b48e0b4e688cf8615e043" translate="yes" xml:space="preserve">
          <source>Matrix objects over-ride power to be matrix raised to a power. The same warning about using power inside a function that uses asanyarray(&amp;hellip;) to get an array object holds for this fact.</source>
          <target state="translated">行列オブジェクトは、べき乗された行列になるように力をオーバーライドします。asanyarray（&amp;hellip;）を使用して配列オブジェクトを取得する関数内でパワーを使用することについての同じ警告は、この事実にも当てはまります。</target>
        </trans-unit>
        <trans-unit id="7e58eeff901c3e787a5323e02d9f0b643f9dfd7f" translate="yes" xml:space="preserve">
          <source>Matrix of ones of given shape, dtype, and order.</source>
          <target state="translated">指定された形状、dtype、次数のものの行列.</target>
        </trans-unit>
        <trans-unit id="a67134d0dce9346181b20853a7a58547f1d92b46" translate="yes" xml:space="preserve">
          <source>Matrix of ones.</source>
          <target state="translated">マトリックス・オブ・ワン</target>
        </trans-unit>
        <trans-unit id="7eb8b5b4dc4efa5e2c91b73b66b0be4240f9b0e0" translate="yes" xml:space="preserve">
          <source>Matrix operators &lt;code&gt;@&lt;/code&gt; and &lt;code&gt;@=&lt;/code&gt; were introduced in Python 3.5 following PEP465. NumPy 1.10.0 has a preliminary implementation of &lt;code&gt;@&lt;/code&gt; for testing purposes. Further documentation can be found in the &lt;a href=&quot;generated/numpy.matmul#numpy.matmul&quot;&gt;&lt;code&gt;matmul&lt;/code&gt;&lt;/a&gt; documentation.</source>
          <target state="translated">マトリックス演算子 &lt;code&gt;@&lt;/code&gt; および &lt;code&gt;@=&lt;/code&gt; は、PEP465に続いてPython 3.5で導入されました。 NumPy 1.10.0には、テスト用に &lt;code&gt;@&lt;/code&gt; の予備的な実装があります。詳細なドキュメントは、&lt;a href=&quot;generated/numpy.matmul#numpy.matmul&quot;&gt; &lt;code&gt;matmul&lt;/code&gt; &lt;/a&gt;ドキュメントにあります。</target>
        </trans-unit>
        <trans-unit id="025aa631aa3f7a37fa0212eecb3bfd7f6d680982" translate="yes" xml:space="preserve">
          <source>Matrix or stack of matrices to be pseudo-inverted.</source>
          <target state="translated">擬似的に反転させたい行列または行列のスタック.</target>
        </trans-unit>
        <trans-unit id="d802170b72cd5e4ecc742ea9861e066f1bca4f62" translate="yes" xml:space="preserve">
          <source>Matrix or vector norm.</source>
          <target state="translated">行列またはベクトルノルム。</target>
        </trans-unit>
        <trans-unit id="aab9fc5f608bc90f75464347e5d57824b70c522d" translate="yes" xml:space="preserve">
          <source>Matrix product of two arrays.</source>
          <target state="translated">2つの配列の行列積.</target>
        </trans-unit>
        <trans-unit id="f0cc4d7cb8b9330c48229ac370190f421a972745" translate="yes" xml:space="preserve">
          <source>Matrix to be &amp;ldquo;powered&amp;rdquo;.</source>
          <target state="translated">「パワー」を与えるマトリックス。</target>
        </trans-unit>
        <trans-unit id="882e4155da73104b466babc5f460e0df7d90c7e1" translate="yes" xml:space="preserve">
          <source>Matrix to be factored.</source>
          <target state="translated">因数分解されるマトリックス。</target>
        </trans-unit>
        <trans-unit id="73e056b434063ebe9da3e6c2cb5602ee3dca1475" translate="yes" xml:space="preserve">
          <source>Matrix to be inverted.</source>
          <target state="translated">マトリックスを反転させます。</target>
        </trans-unit>
        <trans-unit id="cb67cd252bd81e4941e754f44eb78480817d31c7" translate="yes" xml:space="preserve">
          <source>Matrix vector multiplication:</source>
          <target state="translated">行列ベクトルの乗算。</target>
        </trans-unit>
        <trans-unit id="2523a7c271ebabcb6c4841289ddc8a8f4279f903" translate="yes" xml:space="preserve">
          <source>Max and min values for integers</source>
          <target state="translated">整数の最大値と最小値</target>
        </trans-unit>
        <trans-unit id="1d91d9f14c54c4e95c5ae6d92b53aa4417546aa3" translate="yes" xml:space="preserve">
          <source>Maximum discontinuity between values, default is &lt;code&gt;pi&lt;/code&gt;.</source>
          <target state="translated">値間の最大の不連続性。デフォルトは &lt;code&gt;pi&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="88274f4f2ee4be5a95a8bcce7f347a366f7a2067" translate="yes" xml:space="preserve">
          <source>Maximum iterations in finding the solution</source>
          <target state="translated">解を求める際の最大反復回数</target>
        </trans-unit>
        <trans-unit id="88320379693a46d01600d183ef332ece54011631" translate="yes" xml:space="preserve">
          <source>Maximum number of digits to print. May be None if &lt;a href=&quot;numpy.unique#numpy.unique&quot;&gt;&lt;code&gt;unique&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt;, but must be an integer if unique is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">印刷する最大桁数。&lt;a href=&quot;numpy.unique#numpy.unique&quot;&gt; &lt;code&gt;unique&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;True&lt;/code&gt; の場合はNoneになりますが、uniqueが &lt;code&gt;False&lt;/code&gt; の場合は整数でなければなりません。</target>
        </trans-unit>
        <trans-unit id="d47a4bb599c600574e447bf7235a1209d164396c" translate="yes" xml:space="preserve">
          <source>Maximum of &lt;code&gt;a&lt;/code&gt;. If &lt;code&gt;axis&lt;/code&gt; is None, the result is a scalar value. If &lt;code&gt;axis&lt;/code&gt; is given, the result is an array of dimension &lt;code&gt;a.ndim - 1&lt;/code&gt;.</source>
          <target state="translated">最大。場合は &lt;code&gt;axis&lt;/code&gt; Noneで、結果はスカラー値です。場合 &lt;code&gt;axis&lt;/code&gt; 与えられ、その結果は、次元のアレイである &lt;code&gt;a.ndim - 1&lt;/code&gt; 。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b132d96a0eadfc30321cda97e2a4c0676845abd4" translate="yes" xml:space="preserve">
          <source>Maximum of the &amp;lsquo;sturges&amp;rsquo; and &amp;lsquo;fd&amp;rsquo; estimators. Provides good all around performance.</source>
          <target state="translated">「sturges」および「fd」推定量の最大値。オールラウンドなパフォーマンスを提供します。</target>
        </trans-unit>
        <trans-unit id="5134dac3ae1321d397cbee74e822d9e38285e887" translate="yes" xml:space="preserve">
          <source>Maximum power allowed. This is mainly to limit growth of the series to unmanageable size. Default is 16</source>
          <target state="translated">許される最大のパワー。これは主にシリーズの成長を手に負えない大きさに制限するためです。デフォルトは16</target>
        </trans-unit>
        <trans-unit id="4f01f894bba16ec08391452f753dbe735aec39d6" translate="yes" xml:space="preserve">
          <source>Maximum value of given dtype.</source>
          <target state="translated">与えられたdtypeの最大値。</target>
        </trans-unit>
        <trans-unit id="979382f5445397232386ff9913eed09e269718c3" translate="yes" xml:space="preserve">
          <source>Maximum value. If &lt;code&gt;None&lt;/code&gt;, clipping is not performed on upper interval edge. Not more than one of &lt;code&gt;a_min&lt;/code&gt; and &lt;code&gt;a_max&lt;/code&gt; may be &lt;code&gt;None&lt;/code&gt;. If &lt;code&gt;a_min&lt;/code&gt; or &lt;code&gt;a_max&lt;/code&gt; are array_like, then the three arrays will be broadcasted to match their shapes.</source>
          <target state="translated">最大値。 &lt;code&gt;None&lt;/code&gt; の場合、間隔の上端でクリッピングは実行されません。 &lt;code&gt;a_min&lt;/code&gt; と &lt;code&gt;a_max&lt;/code&gt; のいずれか1 つのみが &lt;code&gt;None&lt;/code&gt; になることがあります。場合 &lt;code&gt;a_min&lt;/code&gt; または &lt;code&gt;a_max&lt;/code&gt; は array_likeされ、その後、3つの配列は、それらの形状に一致するようにブロードキャストされます。</target>
        </trans-unit>
        <trans-unit id="361e7c515a3286a7f4b81b0a1f913747c47a211e" translate="yes" xml:space="preserve">
          <source>May be &amp;lsquo;no&amp;rsquo;, &amp;lsquo;equiv&amp;rsquo;, &amp;lsquo;safe&amp;rsquo;, &amp;lsquo;same_kind&amp;rsquo;, or &amp;lsquo;unsafe&amp;rsquo;. See &lt;a href=&quot;generated/numpy.can_cast#numpy.can_cast&quot;&gt;&lt;code&gt;can_cast&lt;/code&gt;&lt;/a&gt; for explanations of the parameter values.</source>
          <target state="translated">「no」、「equiv」、「safe」、「same_kind」、または「unsafe」のいずれかです。パラメータ値の説明については、&lt;a href=&quot;generated/numpy.can_cast#numpy.can_cast&quot;&gt; &lt;code&gt;can_cast&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="e80ed9fbae4c9125ec6f6e33ae973e6364d25e9a" translate="yes" xml:space="preserve">
          <source>Mean (&amp;ldquo;centre&amp;rdquo;) of the distribution.</source>
          <target state="translated">分布の平均（「中心」）。</target>
        </trans-unit>
        <trans-unit id="ce5575103897e6dd52c0ab28f5294b03821eb00c" translate="yes" xml:space="preserve">
          <source>Mean of the N-dimensional distribution.</source>
          <target state="translated">N次元分布の平均値。</target>
        </trans-unit>
        <trans-unit id="109c6b97741d24ee1b6e0ace7f40eb2284aad45a" translate="yes" xml:space="preserve">
          <source>Mean value of the underlying normal distribution. Default is 0.</source>
          <target state="translated">基礎となる正規分布の平均値。デフォルトは0です。</target>
        </trans-unit>
        <trans-unit id="19cd7d185cfd95a703e62d43597e9ae28e0646e5" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">Meaning</target>
        </trans-unit>
        <trans-unit id="9f86f77abecf55b9f3cb2d1b470b2c87cd469c3f" translate="yes" xml:space="preserve">
          <source>Means Delta Degrees of Freedom. The divisor used in calculations is &lt;code&gt;N - ddof&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; represents the number of elements. By default &lt;code&gt;ddof&lt;/code&gt; is zero.</source>
          <target state="translated">デルタの自由度を意味します。計算に使用される除数は &lt;code&gt;N - ddof&lt;/code&gt; 。ここで、 &lt;code&gt;N&lt;/code&gt; は要素の数を表します。デフォルトでは、 &lt;code&gt;ddof&lt;/code&gt; はゼロです。</target>
        </trans-unit>
        <trans-unit id="c1d3bb50bd8c49d9b94d835e52cdd8d898555c19" translate="yes" xml:space="preserve">
          <source>Means Delta Degrees of Freedom. The divisor used in calculations is &lt;code&gt;N - ddof&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; represents the number of non-NaN elements. By default &lt;code&gt;ddof&lt;/code&gt; is zero.</source>
          <target state="translated">デルタの自由度を意味します。計算に使用される除数は &lt;code&gt;N - ddof&lt;/code&gt; 。ここで、 &lt;code&gt;N&lt;/code&gt; は非NaN要素の数を表します。デフォルトでは、 &lt;code&gt;ddof&lt;/code&gt; はゼロです。</target>
        </trans-unit>
        <trans-unit id="2ba6e54b38478c48737f09bbe9788dc72a7f2cf2" translate="yes" xml:space="preserve">
          <source>Mem-map the stored array, and then access the second row directly from disk:</source>
          <target state="translated">保存されている配列をメモリマップして、ディスクから2行目に直接アクセスします。</target>
        </trans-unit>
        <trans-unit id="37ca91147588ee518578bc578622d12a42cc579b" translate="yes" xml:space="preserve">
          <source>Memory Alignment</source>
          <target state="translated">メモリアラインメント</target>
        </trans-unit>
        <trans-unit id="94bcb527ae746c0ce270cfdf2c1a98587963a7d6" translate="yes" xml:space="preserve">
          <source>Memory Managed Argout View Arrays</source>
          <target state="translated">メモリ管理されたArgoutビューアレイ</target>
        </trans-unit>
        <trans-unit id="5f056fc3e51653197be30f5d63ce02176b918b10" translate="yes" xml:space="preserve">
          <source>Memory address of the start of the array data. Default is None, in which case a new array is created.</source>
          <target state="translated">配列データの開始位置のメモリアドレス。デフォルトは None で、この場合は新しい配列が作成されます。</target>
        </trans-unit>
        <trans-unit id="62dd13277bc63a2e8a286c15ace431b8a0d94a7c" translate="yes" xml:space="preserve">
          <source>Memory areas of all kinds can be pointed to by an ndarray, necessitating these flags. If you get an arbitrary &lt;code&gt;PyArrayObject&lt;/code&gt; in C-code, you need to be aware of the flags that are set. If you need to guarantee a certain kind of array (like &lt;a href=&quot;#c.NPY_ARRAY_C_CONTIGUOUS&quot;&gt;&lt;code&gt;NPY_ARRAY_C_CONTIGUOUS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#c.NPY_ARRAY_BEHAVED&quot;&gt;&lt;code&gt;NPY_ARRAY_BEHAVED&lt;/code&gt;&lt;/a&gt;), then pass these requirements into the PyArray_FromAny function.</source>
          <target state="translated">これらのフラグを必要とするndarrayによって、あらゆる種類のメモリ領域を指すことができます。Cコードで任意の &lt;code&gt;PyArrayObject&lt;/code&gt; を取得する場合は、設定されているフラグに注意する必要があります。特定の種類の配列（&lt;a href=&quot;#c.NPY_ARRAY_C_CONTIGUOUS&quot;&gt; &lt;code&gt;NPY_ARRAY_C_CONTIGUOUS&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;#c.NPY_ARRAY_BEHAVED&quot;&gt; &lt;code&gt;NPY_ARRAY_BEHAVED&lt;/code&gt; など&lt;/a&gt;）を保証する必要がある場合は、これらの要件をPyArray_FromAny関数に渡します。</target>
        </trans-unit>
        <trans-unit id="475bc2651561a3c3ff5fe7691308be8b459d93e5" translate="yes" xml:space="preserve">
          <source>Memory layout</source>
          <target state="translated">メモリレイアウト</target>
        </trans-unit>
        <trans-unit id="1c5536b98ab016fe61807564b4a34c80211a7613" translate="yes" xml:space="preserve">
          <source>Memory management</source>
          <target state="translated">メモリ管理</target>
        </trans-unit>
        <trans-unit id="e3091004774833453b69799b69324dc3683b2051" translate="yes" xml:space="preserve">
          <source>Memory mapping files</source>
          <target state="translated">メモリマッピングファイル</target>
        </trans-unit>
        <trans-unit id="ab97ff6f2dba5d3f1cd5aeb9b43d517c7ff39baa" translate="yes" xml:space="preserve">
          <source>Memory model</source>
          <target state="translated">メモリモデル</target>
        </trans-unit>
        <trans-unit id="8573ea7625e0b925b466cc05d95be90df5a0e066" translate="yes" xml:space="preserve">
          <source>Memory ranges</source>
          <target state="translated">メモリ範囲</target>
        </trans-unit>
        <trans-unit id="2d53d6fbb3fd00441b1332b5f1d39e80b6ee3e65" translate="yes" xml:space="preserve">
          <source>Memory-mapped file arrays</source>
          <target state="translated">メモリマップされたファイル配列</target>
        </trans-unit>
        <trans-unit id="b1991b8dc93ae60cb920fa83ac2316d4205bbeaa" translate="yes" xml:space="preserve">
          <source>Memory-mapped files are used for accessing small segments of large files on disk, without reading the entire file into memory. NumPy&amp;rsquo;s memmap&amp;rsquo;s are array-like objects. This differs from Python&amp;rsquo;s &lt;code&gt;mmap&lt;/code&gt; module, which uses file-like objects.</source>
          <target state="translated">メモリマップファイルは、ファイル全体をメモリに読み込まずに、ディスク上の大きなファイルの小さなセグメントにアクセスするために使用されます。NumPyのmemmapは配列のようなオブジェクトです。これは、ファイルのようなオブジェクトを使用するPythonの &lt;code&gt;mmap&lt;/code&gt; モジュールとは異なります。</target>
        </trans-unit>
        <trans-unit id="2f23ac794ef2c62dffc8c712d6134826c44e2102" translate="yes" xml:space="preserve">
          <source>Memory-mapped files are useful for reading and/or modifying small segments of a large file with regular layout, without reading the entire file into memory. A simple subclass of the ndarray uses a memory-mapped file for the data buffer of the array. For small files, the over-head of reading the entire file into memory is typically not significant, however for large files using memory mapping can save considerable resources.</source>
          <target state="translated">メモリマップされたファイルは、ファイル全体をメモリに読み込まずに、通常のレイアウトの大きなファイルの小さなセグメントを読み込んだり、変更したりするのに便利です。ndarrayの単純なサブクラスは、配列のデータバッファにメモリマップされたファイルを使用します。小さなファイルの場合、ファイル全体をメモリに読み込んでもオーバーヘッドは通常は大きくありませんが、大きなファイルの場合はメモリマッピングを使うことでかなりのリソースを節約できます。</target>
        </trans-unit>
        <trans-unit id="60b448a9a6c1eaee2ebc55b825c9890107d5f34a" translate="yes" xml:space="preserve">
          <source>Memory-mapped files cannot be larger than 2GB on 32-bit systems.</source>
          <target state="translated">32ビットシステムでは、メモリマップされたファイルを2GB以上にすることはできません。</target>
        </trans-unit>
        <trans-unit id="fd8c18e9db26b53b8952bdbc069e5973922049e1" translate="yes" xml:space="preserve">
          <source>Memory-mapped-file arrays have one additional method (besides those they inherit from the ndarray): &lt;a href=&quot;generated/numpy.memmap.flush#numpy.memmap.flush&quot;&gt;&lt;code&gt;.flush()&lt;/code&gt;&lt;/a&gt; which must be called manually by the user to ensure that any changes to the array actually get written to disk.</source>
          <target state="translated">メモリマップドファイルアレイには、（ndarrayから継承するもの以外に）1つの追加メソッドがあります&lt;a href=&quot;generated/numpy.memmap.flush#numpy.memmap.flush&quot;&gt; &lt;code&gt;.flush()&lt;/code&gt; &lt;/a&gt;は、アレイへの変更が実際にディスクに書き込まれるように、ユーザーが手動で呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="2e44691543bdfbb8d17cee6cc934d0e08a71bf21" translate="yes" xml:space="preserve">
          <source>Mersenne Twister (MT19937)</source>
          <target state="translated">メルセンヌツイスター(MT19937</target>
        </trans-unit>
        <trans-unit id="c7b840ec3d10f8e47e37f43cd8b2b281eacf51cf" translate="yes" xml:space="preserve">
          <source>Message to give on raising a KnownFailureException exception. Default is None.</source>
          <target state="translated">KnownFailureException 例外を発生させる際のメッセージ。デフォルトは None です。</target>
        </trans-unit>
        <trans-unit id="9ecc2017c2757f60f4986ac8f5a3da153f8a8ebc" translate="yes" xml:space="preserve">
          <source>Message to give on raising a SkipTest exception. Default is None.</source>
          <target state="translated">SkipTest 例外を発生させる際に与えるメッセージ。デフォルトは None です。</target>
        </trans-unit>
        <trans-unit id="d087ba0cad85ad307ada79b5244249397f71a150" translate="yes" xml:space="preserve">
          <source>Metadata about this dtype.</source>
          <target state="translated">このdtypeに関するメタデータ。</target>
        </trans-unit>
        <trans-unit id="597abccf59d77873379e7398915aadc0b7e7cbaf" translate="yes" xml:space="preserve">
          <source>Metadata specific to the C implementation of the particular dtype. Added for NumPy 1.7.0.</source>
          <target state="translated">特定のdtypeのC実装に固有のメタデータ。NumPy 1.7.0用に追加。</target>
        </trans-unit>
        <trans-unit id="219ceecaba9b954e275194321283849b23e1c282" translate="yes" xml:space="preserve">
          <source>Method to sort an array in-place.</source>
          <target state="translated">配列をインプレースでソートするメソッド。</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="70f3b0c55696e17549c215369e76598e954b8a84" translate="yes" xml:space="preserve">
          <source>Minimum dimensions 2:</source>
          <target state="translated">最小寸法 2.</target>
        </trans-unit>
        <trans-unit id="53429462ac64f61f4bc78e4b621f6905aa05ea2f" translate="yes" xml:space="preserve">
          <source>Minimum number of characters to be printed. The value is not truncated if it has more characters.</source>
          <target state="translated">印刷される最小文字数。それ以上の文字数がある場合は切り捨てられません。</target>
        </trans-unit>
        <trans-unit id="a5622f8eb32976197ade8b6663c66f69924550b3" translate="yes" xml:space="preserve">
          <source>Minimum number of dimensions. Default is 0.</source>
          <target state="translated">寸法の最小数。デフォルトは0です。</target>
        </trans-unit>
        <trans-unit id="fcfeed1a84a844412b482f150ba740981d93fdd2" translate="yes" xml:space="preserve">
          <source>Minimum of &lt;code&gt;a&lt;/code&gt;. If &lt;code&gt;axis&lt;/code&gt; is None, the result is a scalar value. If &lt;code&gt;axis&lt;/code&gt; is given, the result is an array of dimension &lt;code&gt;a.ndim - 1&lt;/code&gt;.</source>
          <target state="translated">の最小値。場合は &lt;code&gt;axis&lt;/code&gt; Noneで、結果はスカラー値です。場合 &lt;code&gt;axis&lt;/code&gt; 与えられ、その結果は、次元のアレイである &lt;code&gt;a.ndim - 1&lt;/code&gt; 。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f39f922dfb12aa9f84b1b8de412fb85dc86dd89" translate="yes" xml:space="preserve">
          <source>Minimum value of given dtype.</source>
          <target state="translated">与えられたdtypeの最小値。</target>
        </trans-unit>
        <trans-unit id="8471f2fac90600b5054b0fac3d3fbd0d0871370c" translate="yes" xml:space="preserve">
          <source>Minimum value. If &lt;code&gt;None&lt;/code&gt;, clipping is not performed on lower interval edge. Not more than one of &lt;code&gt;a_min&lt;/code&gt; and &lt;code&gt;a_max&lt;/code&gt; may be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">最小値。 &lt;code&gt;None&lt;/code&gt; の場合、クリッピングは低い間隔のエッジで実行されません。 &lt;code&gt;a_min&lt;/code&gt; と &lt;code&gt;a_max&lt;/code&gt; のいずれか1 つのみが &lt;code&gt;None&lt;/code&gt; になることがあります。</target>
        </trans-unit>
        <trans-unit id="e83d383bd0585ef50b8d7aebdacb03ed7fee94f2" translate="yes" xml:space="preserve">
          <source>Minimum/maximum</source>
          <target state="translated">Minimum/maximum</target>
        </trans-unit>
        <trans-unit id="ebd764f3ab249b5419cbd72a1e642543cec1fc34" translate="yes" xml:space="preserve">
          <source>Minuend and subtrahend polynomials, respectively.</source>
          <target state="translated">ミヌエンドとサブトラエンドの多項式をそれぞれ</target>
        </trans-unit>
        <trans-unit id="43ff260c5b4a26e9c40eb9fd48703c498064db8c" translate="yes" xml:space="preserve">
          <source>Mis-aligned or a loop data-type that does not match the input and/or output data-type is handled using buffered code where-in data is copied to a temporary buffer and cast to the correct data-type if necessary prior to calling the underlying 1-D function. The temporary buffers are created in (element) sizes no bigger than the user settable buffer-size value. Thus, the loop must be flexible enough to call the underlying 1-D computational loop enough times to complete the total calculation in chunks no bigger than the buffer-size.</source>
          <target state="translated">入力および/または出力データタイプと一致しないミスアラインメントまたはループデータタイプは、バッファリングコードを使用して処理されます。一時バッファは、ユーザが設定可能なバッファサイズの値よりも大きくない(要素)サイズで作成されます。したがって、ループは、バッファサイズよりも大きくないチャンクで合計計算を完了するのに十分な回数、基礎となる1-D計算ループを呼び出すのに十分な柔軟性を持っていなければなりません。</target>
        </trans-unit>
        <trans-unit id="ed9fcf7ba2565e6d2d0b1e8d961ecfab0762c9e5" translate="yes" xml:space="preserve">
          <source>Miscellanea</source>
          <target state="translated">Miscellanea</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="1c3358e8dc8fd1048b3037dac2fe7d6a0fc0e20b" translate="yes" xml:space="preserve">
          <source>Miscellaneous Macros</source>
          <target state="translated">その他のマクロ</target>
        </trans-unit>
        <trans-unit id="9904bbe0c22c26b81720013677bd2f67f784943b" translate="yes" xml:space="preserve">
          <source>Miscellaneous routines</source>
          <target state="translated">その他のルーチン</target>
        </trans-unit>
        <trans-unit id="a1a06c30c3aa2542d5fc842e51637823128b6cd8" translate="yes" xml:space="preserve">
          <source>Mixed scalar-array operations use a different set of casting rules that ensure that a scalar cannot &amp;ldquo;upcast&amp;rdquo; an array unless the scalar is of a fundamentally different kind of data (&lt;em&gt;i.e.&lt;/em&gt;, under a different hierarchy in the data-type hierarchy) than the array. This rule enables you to use scalar constants in your code (which, as Python types, are interpreted accordingly in ufuncs) without worrying about whether the precision of the scalar constant will cause upcasting on your large (small precision) array.</source>
          <target state="translated">混合スカラー配列演算は、スカラーが基本的に異なる種類のデータ（&lt;em&gt;つまり&lt;/em&gt;、データ型階層の異なる階層の下）でない限り、スカラーが配列を「アップキャスト」できないようにする一連の異なるキャストルールを使用します。アレイ。このルールを使用すると、スカラー定数の精度が大きな（精度の低い）配列のアップキャストを引き起こすかどうかを心配することなく、コードでスカラー定数を使用できます（Pythonの型として、それに応じてufuncsで解釈されます）。</target>
        </trans-unit>
        <trans-unit id="05a7d94e375e28326c8f08f19c2f7a5016861e71" translate="yes" xml:space="preserve">
          <source>Mixin defining all operator special methods using __array_ufunc__.</source>
          <target state="translated">ミックスインは__array_ufunc__を使って全ての演算子の特殊メソッドを定義しています。</target>
        </trans-unit>
        <trans-unit id="04b2a305460e8353ac84a081a6fefdfae948c9ab" translate="yes" xml:space="preserve">
          <source>Mode &amp;lsquo;same&amp;rsquo; returns output of length &lt;code&gt;max(M, N)&lt;/code&gt;. Boundary effects are still visible.</source>
          <target state="translated">モード 'same'は、長さ &lt;code&gt;max(M, N)&lt;/code&gt; 出力を返します。境界効果は引き続き表示されます。</target>
        </trans-unit>
        <trans-unit id="2ad305c29e046a9bbd6419bf2ca2271efbc3459b" translate="yes" xml:space="preserve">
          <source>Mode &amp;lsquo;valid&amp;rsquo; returns output of length &lt;code&gt;max(M, N) - min(M, N) + 1&lt;/code&gt;. The convolution product is only given for points where the signals overlap completely. Values outside the signal boundary have no effect.</source>
          <target state="translated">モード 'valid'は、長さ &lt;code&gt;max(M, N) - min(M, N) + 1&lt;/code&gt; 出力を返します。たたみ込み積は、信号が完全にオーバーラップするポイントに対してのみ与えられます。信号の境界外の値は影響しません。</target>
        </trans-unit>
        <trans-unit id="685ee951078bb491f363a6827a5b49d79e2953c2" translate="yes" xml:space="preserve">
          <source>Mode (&amp;ldquo;center&amp;rdquo;) of the distribution.</source>
          <target state="translated">分布のモード（「中央」）。</target>
        </trans-unit>
        <trans-unit id="43db663d16155e82c37d403ed5edade977d27209" translate="yes" xml:space="preserve">
          <source>Mode to open &lt;code&gt;path&lt;/code&gt;. Mode &amp;lsquo;r&amp;rsquo; for reading, &amp;lsquo;w&amp;rsquo; for writing, &amp;lsquo;a&amp;rsquo; to append. Available modes depend on the type of object specified by &lt;code&gt;path&lt;/code&gt;. Default is &amp;lsquo;r&amp;rsquo;.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; を開くモード。モード「r」は読み取り、「w」は書き込み、「a」は追加します。使用可能なモードは、 &lt;code&gt;path&lt;/code&gt; で指定されたオブジェクトのタイプによって異なります。デフォルトは「r」です。</target>
        </trans-unit>
        <trans-unit id="7e420f6da1cdb113407719794b0d12f455d2b0fa" translate="yes" xml:space="preserve">
          <source>Modified Bessel function of the first kind, order 0.</source>
          <target state="translated">第一種のベッセル関数を修正したもので、次数は0。</target>
        </trans-unit>
        <trans-unit id="7c22361fe160dcfd8fbd8ff992ce4dac6ac826f4" translate="yes" xml:space="preserve">
          <source>Modified internal rate of return</source>
          <target state="translated">修正された内部収益率</target>
        </trans-unit>
        <trans-unit id="3693ae60bdbdb30338d796259119d3333f8877f7" translate="yes" xml:space="preserve">
          <source>Modified internal rate of return.</source>
          <target state="translated">内部収益率を変更しました。</target>
        </trans-unit>
        <trans-unit id="e1234dafd137d090a0b791f4954b8d3ed2717659" translate="yes" xml:space="preserve">
          <source>Modify a sequence in-place by shuffling its contents.</source>
          <target state="translated">シーケンスの内容をシャッフルすることで、その場にあるシーケンスを修正します。</target>
        </trans-unit>
        <trans-unit id="2edff5667f2c4fa3e6c9ded450245aea50fd3821" translate="yes" xml:space="preserve">
          <source>Modifying Array Values</source>
          <target state="translated">配列値の変更</target>
        </trans-unit>
        <trans-unit id="2925323696375432da2bdb20965941b637ed11ee" translate="yes" xml:space="preserve">
          <source>Modifying a mask</source>
          <target state="translated">マスクの修正</target>
        </trans-unit>
        <trans-unit id="45801f46809b869c74f69159a8e07f840af80a26" translate="yes" xml:space="preserve">
          <source>Modifying axes</source>
          <target state="translated">軸の修正</target>
        </trans-unit>
        <trans-unit id="35246c3e63c4f06392e613b4ced2a364bc875864" translate="yes" xml:space="preserve">
          <source>Modifying the mask</source>
          <target state="translated">マスクの修正</target>
        </trans-unit>
        <trans-unit id="a0a7094d11eee2fe15f311c849d1e9b9435359e8" translate="yes" xml:space="preserve">
          <source>Module to filter for. Note that the module (and its file) must match exactly and cannot be a submodule. This may make it unreliable for external modules.</source>
          <target state="translated">フィルタリングするモジュール。モジュール (とそのファイル)は完全に一致しなければならず、 サブモジュールにはできないことに注意しましょう。このため、外部モジュールに対しては信頼性が低くなるかもしれません。</target>
        </trans-unit>
        <trans-unit id="09c66a7bbc720598a898fc4ed190b9b93fc831e7" translate="yes" xml:space="preserve">
          <source>Module with a number of other functions for performing set operations on arrays.</source>
          <target state="translated">配列に対する集合演算を実行するための他の多くの関数を持つモジュール。</target>
        </trans-unit>
        <trans-unit id="86c444a83fb28ad922f7fe61ce50baf91d6575e5" translate="yes" xml:space="preserve">
          <source>Modules in &lt;code&gt;numpy.distutils&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;numpy.distutils&lt;/code&gt; のモジュール</target>
        </trans-unit>
        <trans-unit id="fa6fb2da7ca749ad258209be56fcef14ef89919e" translate="yes" xml:space="preserve">
          <source>Modules in numpy.distutils</source>
          <target state="translated">numpy.distutils のモジュール</target>
        </trans-unit>
        <trans-unit id="ef301966908209badbf2e02bcb1970f7d3596794" translate="yes" xml:space="preserve">
          <source>More flexible way of loading data from a text file.</source>
          <target state="translated">テキストファイルからデータを読み込む方法がより柔軟になりました。</target>
        </trans-unit>
        <trans-unit id="727573d55a0cf704c5c47d6a2b66ec269c23bc7b" translate="yes" xml:space="preserve">
          <source>More general matrix identity function.</source>
          <target state="translated">より一般的な行列同一性関数。</target>
        </trans-unit>
        <trans-unit id="879e8925c737c755cedd54732466895861d298da" translate="yes" xml:space="preserve">
          <source>More generally, if &lt;code&gt;ndim(a) = r &amp;gt; 0&lt;/code&gt; and &lt;code&gt;ndim(b) = s &amp;gt; 0&lt;/code&gt;:</source>
          <target state="translated">より一般的には、 &lt;code&gt;ndim(a) = r &amp;gt; 0&lt;/code&gt; および &lt;code&gt;ndim(b) = s &amp;gt; 0&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="a7a1be23d7c56fdf5bcd983531ad08d86bee5af1" translate="yes" xml:space="preserve">
          <source>More information is available in the C-API section of the manual.</source>
          <target state="translated">詳細については、マニュアルの C-API セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="6f15235e22d1d3b440ae6f6a14bf143806d4cd52" translate="yes" xml:space="preserve">
          <source>More often, we need to group a number of tests together, so we create a test class:</source>
          <target state="translated">多くの場合、いくつかのテストをグループ化する必要があるので、テストクラスを作成します。</target>
        </trans-unit>
        <trans-unit id="f9934d7359558ecd3f9b2af93ffd2c25c423a537" translate="yes" xml:space="preserve">
          <source>More than one dimension:</source>
          <target state="translated">一次元を超えている。</target>
        </trans-unit>
        <trans-unit id="ce96773863949497eac145716fd3c3eb95ba3896" translate="yes" xml:space="preserve">
          <source>Most C libraries used with &lt;a href=&quot;https://docs.python.org/dev/library/distutils.html#module-distutils&quot;&gt;&lt;code&gt;distutils&lt;/code&gt;&lt;/a&gt; are only used to build python extensions, but libraries built through this method will be installed so that they can be reused by third-party packages.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/dev/library/distutils.html#module-distutils&quot;&gt; &lt;code&gt;distutils&lt;/code&gt; で&lt;/a&gt;使用されるほとんどのCライブラリは、Python拡張機能のビルドにのみ使用されますが、この方法でビルドされたライブラリは、サードパーティのパッケージで再利用できるようにインストールされます。</target>
        </trans-unit>
        <trans-unit id="0c459a2c6de76fda6877ab938b7a90ed70498166" translate="yes" xml:space="preserve">
          <source>Most implementations of &lt;code&gt;__array_function__&lt;/code&gt; will start with two checks:</source>
          <target state="translated">&lt;code&gt;__array_function__&lt;/code&gt; のほとんどの実装は、2つのチェックから始まります。</target>
        </trans-unit>
        <trans-unit id="ae16ee52abc8ba5337202bc1d5fb75330847ce41" translate="yes" xml:space="preserve">
          <source>Most likely, no actual prototypes to be wrapped will have the argument names &lt;code&gt;IN_ARRAY1&lt;/code&gt; and &lt;code&gt;DIM1&lt;/code&gt;. We use the &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt;&lt;code&gt;%apply&lt;/code&gt; directive to apply the typemap for one-dimensional input arrays of type &lt;code&gt;double&lt;/code&gt; to the actual prototype used by &lt;code&gt;rms&lt;/code&gt;. Using &lt;code&gt;numpy.i&lt;/code&gt; effectively, therefore, requires knowing what typemaps are available and what they do.</source>
          <target state="translated">おそらく、ラップされる実際のプロトタイプには、引数名 &lt;code&gt;IN_ARRAY1&lt;/code&gt; および &lt;code&gt;DIM1&lt;/code&gt; がありません。&lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG &lt;/a&gt; &lt;code&gt;%apply&lt;/code&gt; ディレクティブを使用して、 &lt;code&gt;double&lt;/code&gt; 型の1次元入力配列のタイプマップを &lt;code&gt;rms&lt;/code&gt; で使用される実際のプロトタイプに適用します。したがって、 &lt;code&gt;numpy.i&lt;/code&gt; を効果的に使用するには、使用可能なタイプマップとその機能を知る必要があります。</target>
        </trans-unit>
        <trans-unit id="bca44742c94530c67354bc48187063296ebe64db" translate="yes" xml:space="preserve">
          <source>Most references to the Bartlett window come from the signal processing literature, where it is used as one of many windowing functions for smoothing values. Note that convolution with this window produces linear interpolation. It is also known as an apodization (which means&amp;rdquo;removing the foot&amp;rdquo;, i.e. smoothing discontinuities at the beginning and end of the sampled signal) or tapering function. The fourier transform of the Bartlett is the product of two sinc functions. Note the excellent discussion in Kanasewich.</source>
          <target state="translated">バートレットウィンドウへのほとんどの参照は、値を平滑化するための多くのウィンドウ関数の1つとして使用される信号処理の文献から来ています。このウィンドウでの畳み込みは線形補間を生成することに注意してください。これは、アポディゼーション（「足を取り除く」、つまり、サンプリングされた信号の最初と最後の不連続性を滑らかにすること）またはテーパ機能としても知られています。バートレットのフーリエ変換は、2つのsinc関数の積です。カナウィッチでの優れた議論に注目してください。</target>
        </trans-unit>
        <trans-unit id="0bf5c6fd2b24422effecd17c8eb75faa78782406" translate="yes" xml:space="preserve">
          <source>Most references to the Blackman window come from the signal processing literature, where it is used as one of many windowing functions for smoothing values. It is also known as an apodization (which means &amp;ldquo;removing the foot&amp;rdquo;, i.e. smoothing discontinuities at the beginning and end of the sampled signal) or tapering function. It is known as a &amp;ldquo;near optimal&amp;rdquo; tapering function, almost as good (by some measures) as the kaiser window.</source>
          <target state="translated">Blackmanウィンドウへのほとんどの参照は、値を平滑化するための多くのウィンドウ関数の1つとして使用される信号処理の文献から来ています。これは、アポディゼーション（「足を取り除く」、つまり、サンプリングされた信号の最初と最後の不連続性を滑らかにすること）またはテーパー機能としても知られています。これは、「ある程度最適」なテーパ関数として知られており、カイザーウィンドウとほぼ同じ（いくつかの方法で）です。</target>
        </trans-unit>
        <trans-unit id="74870920266af5304942919dc9aaa86ec8f10887" translate="yes" xml:space="preserve">
          <source>Most references to the Hanning window come from the signal processing literature, where it is used as one of many windowing functions for smoothing values. It is also known as an apodization (which means &amp;ldquo;removing the foot&amp;rdquo;, i.e. smoothing discontinuities at the beginning and end of the sampled signal) or tapering function.</source>
          <target state="translated">ハニングウィンドウへのほとんどの参照は、信号処理の文献に由来しており、値を平滑化するための多くのウィンドウ関数の1つとして使用されています。これは、アポディゼーション（「足を取り除く」、つまり、サンプリングされた信号の最初と最後の不連続性を滑らかにすること）またはテーパー機能としても知られています。</target>
        </trans-unit>
        <trans-unit id="2ca48b8d5e3e50e78c422e35a691239d38698c97" translate="yes" xml:space="preserve">
          <source>Most references to the Kaiser window come from the signal processing literature, where it is used as one of many windowing functions for smoothing values. It is also known as an apodization (which means &amp;ldquo;removing the foot&amp;rdquo;, i.e. smoothing discontinuities at the beginning and end of the sampled signal) or tapering function.</source>
          <target state="translated">カイザーウィンドウへのほとんどの参照は、値を平滑化するための多くのウィンドウ関数の1つとして使用される信号処理の文献から来ています。これは、アポディゼーション（「足を取り除く」、つまり、サンプリングされた信号の最初と最後の不連続性を滑らかにすること）またはテーパー機能としても知られています。</target>
        </trans-unit>
        <trans-unit id="a2b903e2ec5cbbd5b69be7e0d572c1f12689bc37" translate="yes" xml:space="preserve">
          <source>Move array axes to new positions.</source>
          <target state="translated">配列の軸を新しい位置に移動します。</target>
        </trans-unit>
        <trans-unit id="4bfdf5c628c76924daf3471919cc5173f84a54c2" translate="yes" xml:space="preserve">
          <source>Move axes of an array to new positions.</source>
          <target state="translated">配列の軸を新しい位置に移動します。</target>
        </trans-unit>
        <trans-unit id="b5e6b83cec58a786829011e6cd45b7ec63d837da" translate="yes" xml:space="preserve">
          <source>Move data from the source array, &lt;code&gt;src&lt;/code&gt;, into the destination array, &lt;code&gt;dest&lt;/code&gt;, performing a data-type conversion if necessary. If an error occurs return -1 (otherwise 0). The shape of &lt;code&gt;src&lt;/code&gt; must be broadcastable to the shape of &lt;code&gt;dest&lt;/code&gt;. The data areas of dest and src may overlap.</source>
          <target state="translated">ソース配列 &lt;code&gt;src&lt;/code&gt; から宛先配列 &lt;code&gt;dest&lt;/code&gt; にデータを移動し、必要に応じてデータ型変換を実行します。エラーが発生した場合は-1（それ以外の場合は0）を返します。形状 &lt;code&gt;src&lt;/code&gt; の形状にbroadcastableでなければなりません &lt;code&gt;dest&lt;/code&gt; 。destとsrcのデータ領域が重複する場合があります。</target>
        </trans-unit>
        <trans-unit id="8766a0d057565c5710a3fb9f292facb34ed488b9" translate="yes" xml:space="preserve">
          <source>Multi-dimensional arrays are only shuffled along the first axis:</source>
          <target state="translated">多次元配列は第1軸に沿ってのみシャッフルされます。</target>
        </trans-unit>
        <trans-unit id="0adfe5f38279518c9e2501466e0baf3fc963f67a" translate="yes" xml:space="preserve">
          <source>Multidimensional Array Indexing Order Issues</source>
          <target state="translated">多次元配列の索引付け順序の問題</target>
        </trans-unit>
        <trans-unit id="8f9ce9bf55e0e2d1a6dbb8e6eaa119f06fda7fdb" translate="yes" xml:space="preserve">
          <source>Multidimensional array iterator.</source>
          <target state="translated">多次元配列のイテレータ。</target>
        </trans-unit>
        <trans-unit id="0999eff5bea05407bfec561cbbc69596f3d9c2f0" translate="yes" xml:space="preserve">
          <source>Multidimensional histogram</source>
          <target state="translated">多次元ヒストグラム</target>
        </trans-unit>
        <trans-unit id="5630adba3530142bd257538daf6416bb396d8676" translate="yes" xml:space="preserve">
          <source>Multidimensional index iterator.</source>
          <target state="translated">多次元インデックスイテレータ。</target>
        </trans-unit>
        <trans-unit id="e804db67daf50964d4f43972ecd4ffdaeb11febe" translate="yes" xml:space="preserve">
          <source>Multiple vector cross-products. Note that the direction of the cross product vector is defined by the &lt;code&gt;right-hand rule&lt;/code&gt;.</source>
          <target state="translated">複数のベクトルのクロス積。外積ベクトルの方向は、 &lt;code&gt;right-hand rule&lt;/code&gt; によって定義されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="3e215025477d5285ed30323c89369a0da1e539e7" translate="yes" xml:space="preserve">
          <source>Multiplication by scalars is not allowed, use &lt;code&gt;*&lt;/code&gt; instead.</source>
          <target state="translated">スカラーによる乗算は許可されていません。代わりに &lt;code&gt;*&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="7c31a38c60f561f08e608709b6c083a519126169" translate="yes" xml:space="preserve">
          <source>Multiplication:</source>
          <target state="translated">Multiplication:</target>
        </trans-unit>
        <trans-unit id="3bb19435bde4887352a113d4d5c4dd6a4cc3ffc0" translate="yes" xml:space="preserve">
          <source>Multiply a Chebyshev series by x.</source>
          <target state="translated">チェビシェフ級数にxを乗算します。</target>
        </trans-unit>
        <trans-unit id="e3033368fb120d59889e073494b3e9e0ebd7b593" translate="yes" xml:space="preserve">
          <source>Multiply a Hermite series by x.</source>
          <target state="translated">ハーミット級数に×をかけます。</target>
        </trans-unit>
        <trans-unit id="24f719f09448b7ce6825aca1328f5f145fff8b20" translate="yes" xml:space="preserve">
          <source>Multiply a Laguerre series by x.</source>
          <target state="translated">ラゲール級数に x を乗算します。</target>
        </trans-unit>
        <trans-unit id="baf2f27a56f88e7335f500fda90145ff72efa244" translate="yes" xml:space="preserve">
          <source>Multiply a Legendre series by x.</source>
          <target state="translated">レジェンドレ級数に×をかけます。</target>
        </trans-unit>
        <trans-unit id="5e8268b6df4bd10137e37b8f5a896f6c068f959e" translate="yes" xml:space="preserve">
          <source>Multiply a polynomial by x.</source>
          <target state="translated">多項式にxを乗算します。</target>
        </trans-unit>
        <trans-unit id="52a611c74a7589e64b22e92b37abeb2dc2eb3b37" translate="yes" xml:space="preserve">
          <source>Multiply arguments element-wise.</source>
          <target state="translated">引数を要素ごとに乗算します。</target>
        </trans-unit>
        <trans-unit id="848f745adfbb2d60e00e0ed4647503593b06470a" translate="yes" xml:space="preserve">
          <source>Multiply one Chebyshev series by another.</source>
          <target state="translated">チェビシェフ級数に別の級数を乗算します。</target>
        </trans-unit>
        <trans-unit id="b295cb58378ef903f0a06d1a5b49f15d852e5456" translate="yes" xml:space="preserve">
          <source>Multiply one Hermite series by another.</source>
          <target state="translated">1つのハーミット系列に別の系列を掛け合わせます。</target>
        </trans-unit>
        <trans-unit id="0a2c6b0921da476ffc70f28f3eb03de1b6536451" translate="yes" xml:space="preserve">
          <source>Multiply one Laguerre series by another.</source>
          <target state="translated">1つのラゲール級数にもう1つのラゲール級数を乗算します。</target>
        </trans-unit>
        <trans-unit id="dbe512b4d9d026c2d706a0637ee4f5defdd3451c" translate="yes" xml:space="preserve">
          <source>Multiply one Legendre series by another.</source>
          <target state="translated">レジェンドレシリーズの1つを他のシリーズに掛け合わせます。</target>
        </trans-unit>
        <trans-unit id="4a9b28e444d6e76af59d43a821edb797d9f14967" translate="yes" xml:space="preserve">
          <source>Multiply one polynomial by another.</source>
          <target state="translated">1つの多項式に別の多項式を乗算します。</target>
        </trans-unit>
        <trans-unit id="33de6a055e5cad1fcad737613722274fdd860310" translate="yes" xml:space="preserve">
          <source>Multiply other by self, and return a new masked array.</source>
          <target state="translated">その他をselfで乗算し、新しいマスクされた配列を返します。</target>
        </trans-unit>
        <trans-unit id="aeadd2348bb83d358fe97d0423fad249eebe1cad" translate="yes" xml:space="preserve">
          <source>Multiply self by other in-place.</source>
          <target state="translated">自己を他の場所で乗算します。</target>
        </trans-unit>
        <trans-unit id="0f3371354dc1333f548d1e01b0ebf5624dcc4cc6" translate="yes" xml:space="preserve">
          <source>Multiply self by other, and return a new masked array.</source>
          <target state="translated">selfにotherを掛け合わせ、新しいマスクされた配列を返します。</target>
        </trans-unit>
        <trans-unit id="6a2faaa5d85906b782921993e3864239130f8aeb" translate="yes" xml:space="preserve">
          <source>Multiply the Hermite series &lt;code&gt;c&lt;/code&gt; by x, where x is the independent variable.</source>
          <target state="translated">エルミート系列 &lt;code&gt;c&lt;/code&gt; にxを乗算します。xは独立変数です。</target>
        </trans-unit>
        <trans-unit id="52797661c4288a141efa0e14228dbad81f7a1584" translate="yes" xml:space="preserve">
          <source>Multiply the Laguerre series &lt;code&gt;c&lt;/code&gt; by x, where x is the independent variable.</source>
          <target state="translated">ラゲール級数 &lt;code&gt;c&lt;/code&gt; にxを乗算します。xは独立変数です。</target>
        </trans-unit>
        <trans-unit id="cf31b4718202370fd2fe9ae1066afd857e045164" translate="yes" xml:space="preserve">
          <source>Multiply the Legendre series &lt;code&gt;c&lt;/code&gt; by x, where x is the independent variable.</source>
          <target state="translated">ルジャンドル系列 &lt;code&gt;c&lt;/code&gt; にxを掛けます。xは独立変数です。</target>
        </trans-unit>
        <trans-unit id="f9258a0217a289e319365de2e1098012093c13ce" translate="yes" xml:space="preserve">
          <source>Multiply the polynomial &lt;code&gt;c&lt;/code&gt; by x, where x is the independent variable.</source>
          <target state="translated">多項式 &lt;code&gt;c&lt;/code&gt; にxを掛けます。ここで、xは独立変数です。</target>
        </trans-unit>
        <trans-unit id="9da34bef86bd2d6e0a76a0a32767a72e5685d3fc" translate="yes" xml:space="preserve">
          <source>Multithreaded Generation</source>
          <target state="translated">マルチスレッド生成</target>
        </trans-unit>
        <trans-unit id="d8dbfef1ac41e4d8ef20fc843ce033e5c1b54760" translate="yes" xml:space="preserve">
          <source>Must be called with the same objects and memory locations returned from &lt;a href=&quot;#c.PyArray_AsCArray&quot;&gt;&lt;code&gt;PyArray_AsCArray&lt;/code&gt;&lt;/a&gt; (&amp;hellip;). This function cleans up memory that otherwise would get leaked.</source>
          <target state="translated">&lt;a href=&quot;#c.PyArray_AsCArray&quot;&gt; &lt;code&gt;PyArray_AsCArray&lt;/code&gt; &lt;/a&gt;（&amp;hellip;）から返されたものと同じオブジェクトとメモリ位置で呼び出されなければなりません。この関数は、そうでなければリークされるメモリをクリーンアップします。</target>
        </trans-unit>
        <trans-unit id="c2e38423bb80d5abbde285bcad0d010d91adeaef" translate="yes" xml:space="preserve">
          <source>Must to an array of length &lt;em&gt;ntypes&lt;/em&gt; containing &lt;code&gt;PyUFuncGenericFunction&lt;/code&gt; items. These items are pointers to functions that actually implement the underlying (element-by-element) function</source>
          <target state="translated">長さの配列にしなければならない&lt;em&gt;ntypes&lt;/em&gt;含有 &lt;code&gt;PyUFuncGenericFunction&lt;/code&gt; のアイテムを。これらの項目は、基になる（要素ごとの）関数を実際に実装する関数へのポインターです</target>
        </trans-unit>
        <trans-unit id="782f5114f09ea32f407b005598a924c1ad9a456d" translate="yes" xml:space="preserve">
          <source>N arrays to specify the coordinates of the values along each dimension of F. The length of the array must match the size of the corresponding dimension</source>
          <target state="translated">F の各次元に沿った値の座標を指定するための N 個の配列.</target>
        </trans-unit>
        <trans-unit id="222389e7bc6cacf85da67b078baadcdedb1cffa2" translate="yes" xml:space="preserve">
          <source>N arrays with N dimensions each, with N the number of input sequences. Together these arrays form an open mesh.</source>
          <target state="translated">各々N個の次元を持つN個の配列,Nは入力シーケンスの数です.これらの配列を組み合わせて,オープンメッシュを形成します.</target>
        </trans-unit>
        <trans-unit id="336c6d7bebdc02721941a72169314218610ad9d0" translate="yes" xml:space="preserve">
          <source>N scalars to specify a constant sample distance for each dimension. i.e. &lt;code&gt;dx&lt;/code&gt;, &lt;code&gt;dy&lt;/code&gt;, &lt;code&gt;dz&lt;/code&gt;, &amp;hellip;</source>
          <target state="translated">各次元に対して一定のサンプル距離を指定するNスカラー。つまり、 &lt;code&gt;dx&lt;/code&gt; 、 &lt;code&gt;dy&lt;/code&gt; 、 &lt;code&gt;dz&lt;/code&gt; 、&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="9d5928686902dc9c57ae25af3939959d2e6fe530" translate="yes" xml:space="preserve">
          <source>N-D Iterators</source>
          <target state="translated">N-D イテレータ</target>
        </trans-unit>
        <trans-unit id="257621f4bdcff32a42e107baccfda4b91de38144" translate="yes" xml:space="preserve">
          <source>N-dimensional enumeration</source>
          <target state="translated">N次元列挙</target>
        </trans-unit>
        <trans-unit id="8763f0b10a483985413b51aeced5f782b294a72c" translate="yes" xml:space="preserve">
          <source>ND:</source>
          <target state="translated">ND:</target>
        </trans-unit>
        <trans-unit id="2ab0c0141de9fec63b0edc408e84fd87e7cdae4f" translate="yes" xml:space="preserve">
          <source>NIST &amp;ldquo;Engineering Statistics Handbook&amp;rdquo; &lt;a href=&quot;https://www.itl.nist.gov/div898/handbook/eda/section3/eda3666.htm&quot;&gt;https://www.itl.nist.gov/div898/handbook/eda/section3/eda3666.htm&lt;/a&gt;</source>
          <target state="translated">NIST「エンジニアリング統計ハンドブック」&lt;a href=&quot;https://www.itl.nist.gov/div898/handbook/eda/section3/eda3666.htm&quot;&gt;https://www.itl.nist.gov/div898/handbook/eda/section3/eda3666.htm&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="54f6df602bb65a556fc612644ec60a13b8558479" translate="yes" xml:space="preserve">
          <source>NIST/SEMATECH e-Handbook of Statistical Methods, &amp;ldquo;Cauchy Distribution&amp;rdquo;, &lt;a href=&quot;https://www.itl.nist.gov/div898/handbook/eda/section3/eda3663.htm&quot;&gt;https://www.itl.nist.gov/div898/handbook/eda/section3/eda3663.htm&lt;/a&gt;</source>
          <target state="translated">NIST / SEMATECH e-Handbook of Statistical Methods、&amp;ldquo; Cauchy Distribution&amp;rdquo;、&lt;a href=&quot;https://www.itl.nist.gov/div898/handbook/eda/section3/eda3663.htm&quot;&gt;https://www.itl.nist.gov/div898/handbook/eda/section3/eda3663.htm&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6f9042839ddd6d4539c71814a1002e68b678259c" translate="yes" xml:space="preserve">
          <source>NO_IMPORT_ARRAY</source>
          <target state="translated">NO_IMPORT_ARRAY</target>
        </trans-unit>
        <trans-unit id="f6019c3c564c5205922236a600e26d027f05cb26" translate="yes" xml:space="preserve">
          <source>NO_IMPORT_UFUNC</source>
          <target state="translated">NO_IMPORT_UFUNC</target>
        </trans-unit>
        <trans-unit id="6d05226b8223077fa3cc68b39febc18eca15ef82" translate="yes" xml:space="preserve">
          <source>NPY format</source>
          <target state="translated">NPY形式</target>
        </trans-unit>
        <trans-unit id="337fd9067c6deff8a5ebc9014ebc7d624cf123c1" translate="yes" xml:space="preserve">
          <source>NPY_1_PI</source>
          <target state="translated">NPY_1_PI</target>
        </trans-unit>
        <trans-unit id="a6a2b9e6c0b059bb4b87e001261c7877544a568f" translate="yes" xml:space="preserve">
          <source>NPY_2_PI</source>
          <target state="translated">NPY_2_PI</target>
        </trans-unit>
        <trans-unit id="4fe84e8afdf790cc009ab97f6e1c27654a720490" translate="yes" xml:space="preserve">
          <source>NPY_ALLOW_C_API</source>
          <target state="translated">NPY_ALLOW_C_API</target>
        </trans-unit>
        <trans-unit id="6e63c59b25b2f1ae7c4d3b417f7809aa98c28674" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_ALIGNED</source>
          <target state="translated">NPY_ARRAY_ALIGNED</target>
        </trans-unit>
        <trans-unit id="2ffafaa78d8c4fecd3c0b1d27c9413a4fdee61f3" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_BEHAVED</source>
          <target state="translated">NPY_ARRAY_BEHAVED</target>
        </trans-unit>
        <trans-unit id="7ac6c56ffc307210c7d2b809d4ca0d4d0b6e05ec" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_BEHAVED_NS</source>
          <target state="translated">NPY_ARRAY_BEHAVED_NS</target>
        </trans-unit>
        <trans-unit id="edd4043c4a06868f295a214d83dfed623929d145" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_CARRAY</source>
          <target state="translated">NPY_ARRAY_CARRAY</target>
        </trans-unit>
        <trans-unit id="73253f62835ab8362457a267c502596fd7c60214" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_CARRAY_RO</source>
          <target state="translated">NPY_ARRAY_CARRAY_RO</target>
        </trans-unit>
        <trans-unit id="e2e24b56ba889d26e4ede4b56d61f8a860bd60d9" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_DEFAULT</source>
          <target state="translated">NPY_ARRAY_DEFAULT</target>
        </trans-unit>
        <trans-unit id="53c578dc59241dd86b870d992111776f4c38fd9b" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_ELEMENTSTRIDES</source>
          <target state="translated">NPY_ARRAY_ELEMENTSTRIDES</target>
        </trans-unit>
        <trans-unit id="75b683ce5a4aa35f1bcb6da9b67bb0aeb19a7ce6" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_ENSUREARRAY</source>
          <target state="translated">NPY_ARRAY_ENSUREARRAY</target>
        </trans-unit>
        <trans-unit id="59780ff44a04b8cad6f0b9d531a9862c90277eaa" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_ENSURECOPY</source>
          <target state="translated">NPY_ARRAY_ENSURECOPY</target>
        </trans-unit>
        <trans-unit id="74002bdc560d67dd6901005c0039edcfe7f0cf8d" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_FARRAY</source>
          <target state="translated">NPY_ARRAY_FARRAY</target>
        </trans-unit>
        <trans-unit id="f26364be823be94e78ff7bf31a8a24049f006322" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_FARRAY_RO</source>
          <target state="translated">NPY_ARRAY_FARRAY_RO</target>
        </trans-unit>
        <trans-unit id="e61baa1f9fafe2ca0110808483cbb4dc9984804b" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_FORCECAST</source>
          <target state="translated">NPY_ARRAY_FORCECAST</target>
        </trans-unit>
        <trans-unit id="63b26fcb6a1dac9dcc79df92170ad53ea1f2777d" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_F_CONTIGUOUS</source>
          <target state="translated">NPY_ARRAY_F_CONTIGUOUS</target>
        </trans-unit>
        <trans-unit id="7e35153b4b5b24e8b0690e3988b1e1a6639fc50d" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_INOUT_ARRAY</source>
          <target state="translated">NPY_ARRAY_INOUT_ARRAY</target>
        </trans-unit>
        <trans-unit id="3d4e9de3031cdc7ad722e7dbefa12e177df353a5" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_INOUT_FARRAY</source>
          <target state="translated">NPY_ARRAY_INOUT_FARRAY</target>
        </trans-unit>
        <trans-unit id="99d9325c069d50130d1b3305f23bc92c807e39a1" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_IN_ARRAY</source>
          <target state="translated">NPY_ARRAY_IN_ARRAY</target>
        </trans-unit>
        <trans-unit id="182b1ac7f50dd939c6f5d75eb862767cfb8e9a27" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_IN_FARRAY</source>
          <target state="translated">NPY_ARRAY_IN_FARRAY</target>
        </trans-unit>
        <trans-unit id="9e47a058e68e19235d40014a3f60d7b03cac2fcb" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_NOTSWAPPED</source>
          <target state="translated">NPY_ARRAY_NOTSWAPPED</target>
        </trans-unit>
        <trans-unit id="24483eb67706f344803af485b96a771167286853" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_OUT_ARRAY</source>
          <target state="translated">NPY_ARRAY_OUT_ARRAY</target>
        </trans-unit>
        <trans-unit id="6698df272cecae8523725b3006063086326731aa" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_OUT_FARRAY</source>
          <target state="translated">NPY_ARRAY_OUT_FARRAY</target>
        </trans-unit>
        <trans-unit id="dbfdbd392f27342bf73282e03e6827d8f56bd21a" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_OWNDATA</source>
          <target state="translated">NPY_ARRAY_OWNDATA</target>
        </trans-unit>
        <trans-unit id="350d622f1940a9670e41559d4851271cee66e99f" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_UPDATEIFCOPY</source>
          <target state="translated">NPY_ARRAY_UPDATEIFCOPY</target>
        </trans-unit>
        <trans-unit id="0b12b30bab548f70f03cd258cbf5273a77f8db3a" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_UPDATE_ALL</source>
          <target state="translated">NPY_ARRAY_UPDATE_ALL</target>
        </trans-unit>
        <trans-unit id="2ded6d3612d5b00b36c96078c4d6a67103aae522" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_WRITEABLE</source>
          <target state="translated">NPY_ARRAY_WRITEABLE</target>
        </trans-unit>
        <trans-unit id="d75f518bf650047e6b9a2a697fc67f6a6e995176" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_WRITEBACKIFCOPY</source>
          <target state="translated">NPY_ARRAY_WRITEBACKIFCOPY</target>
        </trans-unit>
        <trans-unit id="8222d0f7cda090bda4a17436864cd5ca14a78555" translate="yes" xml:space="preserve">
          <source>NPY_AUXDATA_CLONE()</source>
          <target state="translated">NPY_AUXDATA_CLONE()</target>
        </trans-unit>
        <trans-unit id="0bb66df47a87cd515a3dfa9fef8e221553af886f" translate="yes" xml:space="preserve">
          <source>NPY_AUXDATA_FREE()</source>
          <target state="translated">NPY_AUXDATA_FREE()</target>
        </trans-unit>
        <trans-unit id="7a7b71de9df8137df0546d4391577ae61abd6d96" translate="yes" xml:space="preserve">
          <source>NPY_BEGIN_THREADS</source>
          <target state="translated">NPY_BEGIN_THREADS</target>
        </trans-unit>
        <trans-unit id="71b0dca69f3e736fcf5ec45d451b735234b3e2af" translate="yes" xml:space="preserve">
          <source>NPY_BEGIN_THREADS_DEF</source>
          <target state="translated">NPY_BEGIN_THREADS_DEF</target>
        </trans-unit>
        <trans-unit id="d45b22dcc5f7b9bb9471e92aca93a7066bf39217" translate="yes" xml:space="preserve">
          <source>NPY_BEGIN_THREADS_DESCR()</source>
          <target state="translated">NPY_BEGIN_THREADS_DESCR()</target>
        </trans-unit>
        <trans-unit id="367f04da908fd209da34871c0e8383b3befb7f7a" translate="yes" xml:space="preserve">
          <source>NPY_BEGIN_THREADS_THRESHOLDED()</source>
          <target state="translated">NPY_BEGIN_THREADS_THRESHOLDED()</target>
        </trans-unit>
        <trans-unit id="27b751a27a0094fe7e11605b1265cd251f2702e0" translate="yes" xml:space="preserve">
          <source>NPY_BIG_ENDIAN</source>
          <target state="translated">NPY_BIG_ENDIAN</target>
        </trans-unit>
        <trans-unit id="a52701a1ff200affb98ff49192eb11a2d5f18966" translate="yes" xml:space="preserve">
          <source>NPY_BOOL</source>
          <target state="translated">NPY_BOOL</target>
        </trans-unit>
        <trans-unit id="7bea837ae2db5f5aeffb0c99c7613a890cf8e861" translate="yes" xml:space="preserve">
          <source>NPY_BYTE</source>
          <target state="translated">NPY_BYTE</target>
        </trans-unit>
        <trans-unit id="2b217d4cdc625fd9e077904e3fcd8b888ab83c20" translate="yes" xml:space="preserve">
          <source>NPY_BYTE_ORDER</source>
          <target state="translated">NPY_BYTE_ORDER</target>
        </trans-unit>
        <trans-unit id="a538db4e62dedc2c4274617e136d413c164ad171" translate="yes" xml:space="preserve">
          <source>NPY_CASTING</source>
          <target state="translated">NPY_CASTING</target>
        </trans-unit>
        <trans-unit id="79a6c9fa05f65a9773bb60198cabab5d6479939c" translate="yes" xml:space="preserve">
          <source>NPY_CDOUBLE</source>
          <target state="translated">NPY_CDOUBLE</target>
        </trans-unit>
        <trans-unit id="dde91f04351cadef9cc0068ae6b9b588e9363dec" translate="yes" xml:space="preserve">
          <source>NPY_CFLOAT</source>
          <target state="translated">NPY_CFLOAT</target>
        </trans-unit>
        <trans-unit id="baee94726684ef2f8056b57374a0f3504a0339ef" translate="yes" xml:space="preserve">
          <source>NPY_CLIP</source>
          <target state="translated">NPY_CLIP</target>
        </trans-unit>
        <trans-unit id="ab5f879fc529bc2acf208e75b18c18bd48302b76" translate="yes" xml:space="preserve">
          <source>NPY_CLIPMODE</source>
          <target state="translated">NPY_CLIPMODE</target>
        </trans-unit>
        <trans-unit id="42d6acd8d6caa79d689d6ca7007f2cd54fabb26e" translate="yes" xml:space="preserve">
          <source>NPY_CLONGDOUBLE</source>
          <target state="translated">NPY_CLONGDOUBLE</target>
        </trans-unit>
        <trans-unit id="fd775fc37497ae110e0cfd44f0b82ed60732f3d0" translate="yes" xml:space="preserve">
          <source>NPY_COMPLEX128</source>
          <target state="translated">NPY_COMPLEX128</target>
        </trans-unit>
        <trans-unit id="b3718a97bfc69ddf4fe83b3cacdd65a2ac68c637" translate="yes" xml:space="preserve">
          <source>NPY_COMPLEX64</source>
          <target state="translated">NPY_COMPLEX64</target>
        </trans-unit>
        <trans-unit id="08ee4bb306297080422d44c63dd100eb4da05629" translate="yes" xml:space="preserve">
          <source>NPY_CORDER</source>
          <target state="translated">NPY_CORDER</target>
        </trans-unit>
        <trans-unit id="445849a5876655e5b0434b67a7d5fb9035a99aff" translate="yes" xml:space="preserve">
          <source>NPY_CPU_AMD64</source>
          <target state="translated">NPY_CPU_AMD64</target>
        </trans-unit>
        <trans-unit id="5e0a4ef72fc219b99800734ef05c9c29ca7b4d45" translate="yes" xml:space="preserve">
          <source>NPY_CPU_IA64</source>
          <target state="translated">NPY_CPU_IA64</target>
        </trans-unit>
        <trans-unit id="576ad8bd965cfd87064b091a02fec5a09f3be12c" translate="yes" xml:space="preserve">
          <source>NPY_CPU_PARISC</source>
          <target state="translated">NPY_CPU_PARISC</target>
        </trans-unit>
        <trans-unit id="b67c2cb06a0034f67047434219521647e35d2a28" translate="yes" xml:space="preserve">
          <source>NPY_CPU_PPC</source>
          <target state="translated">NPY_CPU_PPC</target>
        </trans-unit>
        <trans-unit id="aa3a704be31b1592c2d6772cee782fca604235f5" translate="yes" xml:space="preserve">
          <source>NPY_CPU_PPC64</source>
          <target state="translated">NPY_CPU_PPC64</target>
        </trans-unit>
        <trans-unit id="74fe0a8c2d7ded634be17a89b45434271c572a7d" translate="yes" xml:space="preserve">
          <source>NPY_CPU_S390</source>
          <target state="translated">NPY_CPU_S390</target>
        </trans-unit>
        <trans-unit id="3f1035e080caf74542087c667fe07d694a1c6f02" translate="yes" xml:space="preserve">
          <source>NPY_CPU_SPARC</source>
          <target state="translated">NPY_CPU_SPARC</target>
        </trans-unit>
        <trans-unit id="fda98b87cc8c6926dcda1ba4e17057a0bb9d52e9" translate="yes" xml:space="preserve">
          <source>NPY_CPU_SPARC64</source>
          <target state="translated">NPY_CPU_SPARC64</target>
        </trans-unit>
        <trans-unit id="baa424069bdc2bf5e1bef5d0c1dae4e4d04b6c03" translate="yes" xml:space="preserve">
          <source>NPY_DATETIME</source>
          <target state="translated">NPY_DATETIME</target>
        </trans-unit>
        <trans-unit id="740d421f29beb7d31d82582e894e5398cfd7f53b" translate="yes" xml:space="preserve">
          <source>NPY_DEFAULT_TYPE</source>
          <target state="translated">NPY_DEFAULT_TYPE</target>
        </trans-unit>
        <trans-unit id="0f021557ba9cd03b2412e6a77a1a16fca582c87a" translate="yes" xml:space="preserve">
          <source>NPY_DISABLE_C_API</source>
          <target state="translated">NPY_DISABLE_C_API</target>
        </trans-unit>
        <trans-unit id="5d42a9fafe5d991d8d8ad77c418b751461ec53fb" translate="yes" xml:space="preserve">
          <source>NPY_DOUBLE</source>
          <target state="translated">NPY_DOUBLE</target>
        </trans-unit>
        <trans-unit id="02708bc92f659bb3dcf4a89cb2c3a3dd7bea1a58" translate="yes" xml:space="preserve">
          <source>NPY_END_ALLOW_THREADS</source>
          <target state="translated">NPY_END_ALLOW_THREADS</target>
        </trans-unit>
        <trans-unit id="11e52c9b56bd5928ee6dce1eb2e77bbb2649aac0" translate="yes" xml:space="preserve">
          <source>NPY_END_THREADS</source>
          <target state="translated">NPY_END_THREADS</target>
        </trans-unit>
        <trans-unit id="549ccd89e4d53745c6207ffed6a5e9e3cd4488e4" translate="yes" xml:space="preserve">
          <source>NPY_END_THREADS_DESCR()</source>
          <target state="translated">NPY_END_THREADS_DESCR()</target>
        </trans-unit>
        <trans-unit id="fbd73ba42fddea4ee6ad8d2cb539afb1935641a0" translate="yes" xml:space="preserve">
          <source>NPY_EQUIV_CASTING</source>
          <target state="translated">NPY_EQUIV_CASTING</target>
        </trans-unit>
        <trans-unit id="4c9f408708dd27289647c380e1b64be0385f40bf" translate="yes" xml:space="preserve">
          <source>NPY_EULER</source>
          <target state="translated">NPY_EULER</target>
        </trans-unit>
        <trans-unit id="ca7971018ca35eee1879ede9cf3645f67bfca264" translate="yes" xml:space="preserve">
          <source>NPY_FAIL</source>
          <target state="translated">NPY_FAIL</target>
        </trans-unit>
        <trans-unit id="f875fa3d764fa3bd36a4845d1f91d55e2b4488c0" translate="yes" xml:space="preserve">
          <source>NPY_FALSE</source>
          <target state="translated">NPY_FALSE</target>
        </trans-unit>
        <trans-unit id="358586666002fff54c090fc108ee937e99bbef69" translate="yes" xml:space="preserve">
          <source>NPY_FLOAT</source>
          <target state="translated">NPY_FLOAT</target>
        </trans-unit>
        <trans-unit id="5b1e0e4d5e954afb2341fa83c46e5aa7552f44ea" translate="yes" xml:space="preserve">
          <source>NPY_FLOAT16</source>
          <target state="translated">NPY_FLOAT16</target>
        </trans-unit>
        <trans-unit id="997c282c77aa064788d2c8c41df0afecf628c57f" translate="yes" xml:space="preserve">
          <source>NPY_FLOAT32</source>
          <target state="translated">NPY_FLOAT32</target>
        </trans-unit>
        <trans-unit id="b696f7737e74e8db3905f5fc982b8e44bb22859e" translate="yes" xml:space="preserve">
          <source>NPY_FLOAT64</source>
          <target state="translated">NPY_FLOAT64</target>
        </trans-unit>
        <trans-unit id="52a46bb4be646f04df911f951cf4e88f206777da" translate="yes" xml:space="preserve">
          <source>NPY_FORTRANORDER</source>
          <target state="translated">NPY_FORTRANORDER</target>
        </trans-unit>
        <trans-unit id="9ac5cf7bd324a16ddcce3fc5ec3638c28f29e0cf" translate="yes" xml:space="preserve">
          <source>NPY_FPE_DIVIDEBYZERO</source>
          <target state="translated">NPY_FPE_DIVIDEBYZERO</target>
        </trans-unit>
        <trans-unit id="5811a7400e2dbe58119b24c68c7b33bb0411a322" translate="yes" xml:space="preserve">
          <source>NPY_FPE_INVALID</source>
          <target state="translated">NPY_FPE_INVALID</target>
        </trans-unit>
        <trans-unit id="eb8203e0906d4df4cf041f71832e313f5f274745" translate="yes" xml:space="preserve">
          <source>NPY_FPE_OVERFLOW</source>
          <target state="translated">NPY_FPE_OVERFLOW</target>
        </trans-unit>
        <trans-unit id="4a3503b9dff318bd843caad9bb38ebe365b1d696" translate="yes" xml:space="preserve">
          <source>NPY_FPE_UNDERFLOW</source>
          <target state="translated">NPY_FPE_UNDERFLOW</target>
        </trans-unit>
        <trans-unit id="a970eb729b36e0d4f4cac1e44ee2fe14ba3d2a4a" translate="yes" xml:space="preserve">
          <source>NPY_FROM_FIELDS</source>
          <target state="translated">NPY_FROM_FIELDS</target>
        </trans-unit>
        <trans-unit id="42246608cb8d49ecb7d1d533545e066fe5be1437" translate="yes" xml:space="preserve">
          <source>NPY_HALF</source>
          <target state="translated">NPY_HALF</target>
        </trans-unit>
        <trans-unit id="bc5927dd3c6132804cf4018ecafd356c61f15ffd" translate="yes" xml:space="preserve">
          <source>NPY_HALF_NAN</source>
          <target state="translated">NPY_HALF_NAN</target>
        </trans-unit>
        <trans-unit id="a337d64d8b35e4b7bad6727b05fbaa670dc0d880" translate="yes" xml:space="preserve">
          <source>NPY_HALF_NEGONE</source>
          <target state="translated">NPY_HALF_NEGONE</target>
        </trans-unit>
        <trans-unit id="4ff0abfb1d0e9e88aa028c95d5966418eed41685" translate="yes" xml:space="preserve">
          <source>NPY_HALF_NINF</source>
          <target state="translated">NPY_HALF_NINF</target>
        </trans-unit>
        <trans-unit id="a67fb04bffe1fe80fa81f0392e591468b482491b" translate="yes" xml:space="preserve">
          <source>NPY_HALF_NZERO</source>
          <target state="translated">NPY_HALF_NZERO</target>
        </trans-unit>
        <trans-unit id="9f2f4c584696728b25aef14ce85631e596d3ae87" translate="yes" xml:space="preserve">
          <source>NPY_HALF_ONE</source>
          <target state="translated">NPY_HALF_ONE</target>
        </trans-unit>
        <trans-unit id="3b5b0faeef37df979df28b0679f4491fb2db8c64" translate="yes" xml:space="preserve">
          <source>NPY_HALF_PINF</source>
          <target state="translated">NPY_HALF_PINF</target>
        </trans-unit>
        <trans-unit id="988f6ef015845ed37c403058b93c1e52f22847e7" translate="yes" xml:space="preserve">
          <source>NPY_HALF_PZERO</source>
          <target state="translated">NPY_HALF_PZERO</target>
        </trans-unit>
        <trans-unit id="358a08142b2b4823b0bb3368d0f114d12c1d0542" translate="yes" xml:space="preserve">
          <source>NPY_INFINITY</source>
          <target state="translated">NPY_INFINITY</target>
        </trans-unit>
        <trans-unit id="0ae07a3e9ffc9ecae7b9e9fa5cd26bc60e1f7b1d" translate="yes" xml:space="preserve">
          <source>NPY_INT</source>
          <target state="translated">NPY_INT</target>
        </trans-unit>
        <trans-unit id="535e0ce309f1a8c926c278507180c826f79ab5ee" translate="yes" xml:space="preserve">
          <source>NPY_INT16</source>
          <target state="translated">NPY_INT16</target>
        </trans-unit>
        <trans-unit id="d1f68bc9f8e8da069fc67a0cce95dc24da2de0db" translate="yes" xml:space="preserve">
          <source>NPY_INT32</source>
          <target state="translated">NPY_INT32</target>
        </trans-unit>
        <trans-unit id="13c6656ee10bef572e65aa1f69891a24030d6b2e" translate="yes" xml:space="preserve">
          <source>NPY_INT64</source>
          <target state="translated">NPY_INT64</target>
        </trans-unit>
        <trans-unit id="0421d46f2032ffa9c77f0b5d2c6a9279f4640c8b" translate="yes" xml:space="preserve">
          <source>NPY_INT8</source>
          <target state="translated">NPY_INT8</target>
        </trans-unit>
        <trans-unit id="28fb13870588b31f7e8ef953a5e1fac1e4dcbd72" translate="yes" xml:space="preserve">
          <source>NPY_INTP</source>
          <target state="translated">NPY_INTP</target>
        </trans-unit>
        <trans-unit id="0a3e136541d1b393cd74baa63288f18e1f7d6d0f" translate="yes" xml:space="preserve">
          <source>NPY_ITEM_HASOBJECT</source>
          <target state="translated">NPY_ITEM_HASOBJECT</target>
        </trans-unit>
        <trans-unit id="add14360987a70b070e6ee2cf7d6c1f28db11c8c" translate="yes" xml:space="preserve">
          <source>NPY_ITEM_IS_POINTER</source>
          <target state="translated">NPY_ITEM_IS_POINTER</target>
        </trans-unit>
        <trans-unit id="951b512c573a16b82dbf4d9988144744b36d6aa6" translate="yes" xml:space="preserve">
          <source>NPY_ITER_ALIGNED</source>
          <target state="translated">NPY_ITER_ALIGNED</target>
        </trans-unit>
        <trans-unit id="d503366ef84d1f87d6d64e70e2867df203bb7e9a" translate="yes" xml:space="preserve">
          <source>NPY_ITER_ALLOCATE</source>
          <target state="translated">NPY_ITER_ALLOCATE</target>
        </trans-unit>
        <trans-unit id="3861be794a7c5c6a5b45b50623091414188cac12" translate="yes" xml:space="preserve">
          <source>NPY_ITER_ARRAYMASK</source>
          <target state="translated">NPY_ITER_ARRAYMASK</target>
        </trans-unit>
        <trans-unit id="eb80262ed9f6ec7d9bc9b37ace10951d5fd76283" translate="yes" xml:space="preserve">
          <source>NPY_ITER_BUFFERED</source>
          <target state="translated">NPY_ITER_BUFFERED</target>
        </trans-unit>
        <trans-unit id="75f4f0128425d9bd99d8425d20d43330e01c1450" translate="yes" xml:space="preserve">
          <source>NPY_ITER_COMMON_DTYPE</source>
          <target state="translated">NPY_ITER_COMMON_DTYPE</target>
        </trans-unit>
        <trans-unit id="e3846d90f90dbff1dd021fd9f2ba76d6532ad143" translate="yes" xml:space="preserve">
          <source>NPY_ITER_CONTIG</source>
          <target state="translated">NPY_ITER_CONTIG</target>
        </trans-unit>
        <trans-unit id="1a53187fb36f46479ac1c68c0dd17386f818b95e" translate="yes" xml:space="preserve">
          <source>NPY_ITER_COPY</source>
          <target state="translated">NPY_ITER_COPY</target>
        </trans-unit>
        <trans-unit id="6522a3f5d006b07601c1404c3367bd53f060cf4c" translate="yes" xml:space="preserve">
          <source>NPY_ITER_COPY_IF_OVERLAP</source>
          <target state="translated">NPY_ITER_COPY_IF_OVERLAP</target>
        </trans-unit>
        <trans-unit id="e2a6b5c6108c9390c915d11a0195f7bba6bd2183" translate="yes" xml:space="preserve">
          <source>NPY_ITER_DELAY_BUFALLOC</source>
          <target state="translated">NPY_ITER_DELAY_BUFALLOC</target>
        </trans-unit>
        <trans-unit id="09e15fd792a1f362fe072ea079c0c478f36a7356" translate="yes" xml:space="preserve">
          <source>NPY_ITER_DONT_NEGATE_STRIDES</source>
          <target state="translated">NPY_ITER_DONT_NEGATE_STRIDES</target>
        </trans-unit>
        <trans-unit id="adf6cd7f7db5000b4248853f45fa80e337726503" translate="yes" xml:space="preserve">
          <source>NPY_ITER_EXTERNAL_LOOP</source>
          <target state="translated">NPY_ITER_EXTERNAL_LOOP</target>
        </trans-unit>
        <trans-unit id="0bb09f985af3cb3889f3791933fa590ee14cb356" translate="yes" xml:space="preserve">
          <source>NPY_ITER_F_INDEX</source>
          <target state="translated">NPY_ITER_F_INDEX</target>
        </trans-unit>
        <trans-unit id="555a1e1460c23742cfca9272fe55f7990e5607cf" translate="yes" xml:space="preserve">
          <source>NPY_ITER_GROWINNER</source>
          <target state="translated">NPY_ITER_GROWINNER</target>
        </trans-unit>
        <trans-unit id="07debd32f9c4650079039d4f3bf74b66d3b4e55f" translate="yes" xml:space="preserve">
          <source>NPY_ITER_MULTI_INDEX</source>
          <target state="translated">NPY_ITER_MULTI_INDEX</target>
        </trans-unit>
        <trans-unit id="78d69e1cc1b9a06f3dca137714287863d362f56e" translate="yes" xml:space="preserve">
          <source>NPY_ITER_NBO</source>
          <target state="translated">NPY_ITER_NBO</target>
        </trans-unit>
        <trans-unit id="9399c909ab80667660ef0588d0ad8f850312f1ed" translate="yes" xml:space="preserve">
          <source>NPY_ITER_NO_BROADCAST</source>
          <target state="translated">NPY_ITER_NO_BROADCAST</target>
        </trans-unit>
        <trans-unit id="144e3567d0e3ae560c2a49bae772f841bc966c10" translate="yes" xml:space="preserve">
          <source>NPY_ITER_NO_SUBTYPE</source>
          <target state="translated">NPY_ITER_NO_SUBTYPE</target>
        </trans-unit>
        <trans-unit id="d6c2e133048a41b0ffc16c86dadafe096ccd8393" translate="yes" xml:space="preserve">
          <source>NPY_ITER_OVERLAP_ASSUME_ELEMENTWISE</source>
          <target state="translated">NPY_ITER_OVERLAP_ASSUME_ELEMENTWISE</target>
        </trans-unit>
        <trans-unit id="86af273b1fdd7d4cb865bf64d1f2040354bd327d" translate="yes" xml:space="preserve">
          <source>NPY_ITER_RANGED</source>
          <target state="translated">NPY_ITER_RANGED</target>
        </trans-unit>
        <trans-unit id="7971fb00574c81fb34409364c146473c56dbf8dc" translate="yes" xml:space="preserve">
          <source>NPY_ITER_READONLY</source>
          <target state="translated">NPY_ITER_READONLY</target>
        </trans-unit>
        <trans-unit id="d30f5beecb8739336ec9a52ba0114e55e975198b" translate="yes" xml:space="preserve">
          <source>NPY_ITER_REDUCE_OK</source>
          <target state="translated">NPY_ITER_REDUCE_OK</target>
        </trans-unit>
        <trans-unit id="502b3424abf58dbb3d1ceb433a47e81d8b0e3917" translate="yes" xml:space="preserve">
          <source>NPY_ITER_REFS_OK</source>
          <target state="translated">NPY_ITER_REFS_OK</target>
        </trans-unit>
        <trans-unit id="36638f67e4efec772c894ad29e6156e8d16849e0" translate="yes" xml:space="preserve">
          <source>NPY_ITER_UPDATEIFCOPY</source>
          <target state="translated">NPY_ITER_UPDATEIFCOPY</target>
        </trans-unit>
        <trans-unit id="5d7333bc90727e1291399c10ef4e65cff1a56a77" translate="yes" xml:space="preserve">
          <source>NPY_ITER_WRITEMASKED</source>
          <target state="translated">NPY_ITER_WRITEMASKED</target>
        </trans-unit>
        <trans-unit id="116e43226bff43a6b828a35ce3aa5e4b45c3a521" translate="yes" xml:space="preserve">
          <source>NPY_ITER_WRITEONLY</source>
          <target state="translated">NPY_ITER_WRITEONLY</target>
        </trans-unit>
        <trans-unit id="c59890574c7265c43cf00e61d54cfeca26a23d1d" translate="yes" xml:space="preserve">
          <source>NPY_ITER_ZEROSIZE_OK</source>
          <target state="translated">NPY_ITER_ZEROSIZE_OK</target>
        </trans-unit>
        <trans-unit id="7b539733fdc41a617f0e75bf3fc61058d2ef5dd3" translate="yes" xml:space="preserve">
          <source>NPY_KEEPORDER</source>
          <target state="translated">NPY_KEEPORDER</target>
        </trans-unit>
        <trans-unit id="b930102f97091392950b021dc9057355aaad78a4" translate="yes" xml:space="preserve">
          <source>NPY_LIST_PICKLE</source>
          <target state="translated">NPY_LIST_PICKLE</target>
        </trans-unit>
        <trans-unit id="d82ed442cc074c6da2981d2f67d1b4419d87e14d" translate="yes" xml:space="preserve">
          <source>NPY_LITTLE_ENDIAN</source>
          <target state="translated">NPY_LITTLE_ENDIAN</target>
        </trans-unit>
        <trans-unit id="5b5d7aa2496f5a64eada54a95b44f0474550349b" translate="yes" xml:space="preserve">
          <source>NPY_LOG10E</source>
          <target state="translated">NPY_LOG10E</target>
        </trans-unit>
        <trans-unit id="7aab830d18a0705fa295f7782d2599fb5ad73d56" translate="yes" xml:space="preserve">
          <source>NPY_LOG2E</source>
          <target state="translated">NPY_LOG2E</target>
        </trans-unit>
        <trans-unit id="aa9cf538a1405fe5aea6d8187f8605dc710d0394" translate="yes" xml:space="preserve">
          <source>NPY_LOGE10</source>
          <target state="translated">NPY_LOGE10</target>
        </trans-unit>
        <trans-unit id="17eb50a24cf39c27e3fc6aeea6dd0bd029987cda" translate="yes" xml:space="preserve">
          <source>NPY_LOGE2</source>
          <target state="translated">NPY_LOGE2</target>
        </trans-unit>
        <trans-unit id="f10cccd0bdbf755ac259ccb0fee661b68e74bb3f" translate="yes" xml:space="preserve">
          <source>NPY_LONG</source>
          <target state="translated">NPY_LONG</target>
        </trans-unit>
        <trans-unit id="b99928355baa342b7d18f1ad3e75d2de96afda93" translate="yes" xml:space="preserve">
          <source>NPY_LONGDOUBLE</source>
          <target state="translated">NPY_LONGDOUBLE</target>
        </trans-unit>
        <trans-unit id="b4eca3253d6bc931e09477160aac8f7327b12f46" translate="yes" xml:space="preserve">
          <source>NPY_LONGLONG</source>
          <target state="translated">NPY_LONGLONG</target>
        </trans-unit>
        <trans-unit id="80b08aea8c13730920c447564c89076770dc86c6" translate="yes" xml:space="preserve">
          <source>NPY_LOOP_END_THREADS</source>
          <target state="translated">NPY_LOOP_END_THREADS</target>
        </trans-unit>
        <trans-unit id="0afdd98d0e7a829fca082e217fa673cfc8a2b5ff" translate="yes" xml:space="preserve">
          <source>NPY_MASK</source>
          <target state="translated">NPY_MASK</target>
        </trans-unit>
        <trans-unit id="c90549506655105cbb987e1070987555834fa318" translate="yes" xml:space="preserve">
          <source>NPY_MAXDIMS</source>
          <target state="translated">NPY_MAXDIMS</target>
        </trans-unit>
        <trans-unit id="64982cb8261cfbf5f8f8fa1f5c7f201e509cd37c" translate="yes" xml:space="preserve">
          <source>NPY_MAX_BUFSIZE</source>
          <target state="translated">NPY_MAX_BUFSIZE</target>
        </trans-unit>
        <trans-unit id="b186a355f206e3e61c0a25fd922ff9e771690671" translate="yes" xml:space="preserve">
          <source>NPY_MIN_BUFSIZE</source>
          <target state="translated">NPY_MIN_BUFSIZE</target>
        </trans-unit>
        <trans-unit id="b58f11f26efe8aa1400ef46cdeb45135e04c290d" translate="yes" xml:space="preserve">
          <source>NPY_NAN</source>
          <target state="translated">NPY_NAN</target>
        </trans-unit>
        <trans-unit id="19a2ab6b90aae9b5c684cbf64e4490e85f3790bf" translate="yes" xml:space="preserve">
          <source>NPY_NEEDS_INIT</source>
          <target state="translated">NPY_NEEDS_INIT</target>
        </trans-unit>
        <trans-unit id="765b53035063832be152ddff7841354268e5f2f3" translate="yes" xml:space="preserve">
          <source>NPY_NEEDS_PYAPI</source>
          <target state="translated">NPY_NEEDS_PYAPI</target>
        </trans-unit>
        <trans-unit id="94f34cdc34fe8074494dd904e5f1d723755b2af8" translate="yes" xml:space="preserve">
          <source>NPY_NEIGHBORHOOD_ITER_CIRCULAR_PADDING: circular padding. Outside bounds values will be as if the array was repeated. For example, for the array [1, 2, 3, 4], x[-2] will be 3, x[-2] will be 4, x[4] will be 1, x[5] will be 2, etc&amp;hellip;</source>
          <target state="translated">NPY_NEIGHBORHOOD_ITER_CIRCULAR_PADDING：円形のパディング。境界値の外側は、配列が繰り返されたかのようになります。たとえば、配列[1、2、3、4]の場合、x [-2]は3、x [-2]は4、x [4]は1、x [5]は2になります。等&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="7ec4bbcbebf55d8a260446399663bf95eafa64a8" translate="yes" xml:space="preserve">
          <source>NPY_NEIGHBORHOOD_ITER_CONSTANT_PADDING: constant padding. Outside bounds values will be the same as the first item in fill_value.</source>
          <target state="translated">NPY_NEIGHBORHOOD_ITER_CONSTANT_PADDING:定数パディング。境界外の値はfill_valueの最初の項目と同じになります。</target>
        </trans-unit>
        <trans-unit id="f8df6e0dfd643545d8608a17e2f3ae7fe6a11675" translate="yes" xml:space="preserve">
          <source>NPY_NEIGHBORHOOD_ITER_MIRROR_PADDING: mirror padding. Outside bounds values will be as if the array items were mirrored. For example, for the array [1, 2, 3, 4], x[-2] will be 2, x[-2] will be 1, x[4] will be 4, x[5] will be 1, etc&amp;hellip;</source>
          <target state="translated">NPY_NEIGHBORHOOD_ITER_MIRROR_PADDING：ミラーパディング。境界値の外側は、配列項目がミラーリングされているかのようになります。たとえば、配列[1、2、3、4]の場合、x [-2]は2、x [-2]は1、x [4]は4、x [5]は1になります。等&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="fb1e302bb07ace1a66ce9313a05ad5827a4b01da" translate="yes" xml:space="preserve">
          <source>NPY_NEIGHBORHOOD_ITER_ONE_PADDING: one padding, Outside bounds values will be 1.</source>
          <target state="translated">NPY_NEIGHBORHOOD_ITER_ONE_PADDING:1パディング、境界外の値は1になります。</target>
        </trans-unit>
        <trans-unit id="b645918dbfbe7aa8484c343f033ead3c5f2f26cf" translate="yes" xml:space="preserve">
          <source>NPY_NEIGHBORHOOD_ITER_ZERO_PADDING: zero padding. Outside bounds values will be 0.</source>
          <target state="translated">NPY_NEIGHBORHOOD_ITER_ZERO_PADDING:ゼロパディング。境界外の値は0になります。</target>
        </trans-unit>
        <trans-unit id="be76b1061b6bbc38030d74a5b2eb5c90a04dcf13" translate="yes" xml:space="preserve">
          <source>NPY_NOTYPE</source>
          <target state="translated">NPY_NOTYPE</target>
        </trans-unit>
        <trans-unit id="07dfad5c7de4b84f199211989aae8639dd3f19e1" translate="yes" xml:space="preserve">
          <source>NPY_NTYPES</source>
          <target state="translated">NPY_NTYPES</target>
        </trans-unit>
        <trans-unit id="7ea5ff7e627a17c98946f6d6911efe7293175f3e" translate="yes" xml:space="preserve">
          <source>NPY_NZERO</source>
          <target state="translated">NPY_NZERO</target>
        </trans-unit>
        <trans-unit id="c2140d8d738013bca7a5fa347638b4d089a1c282" translate="yes" xml:space="preserve">
          <source>NPY_OBJECT</source>
          <target state="translated">NPY_OBJECT</target>
        </trans-unit>
        <trans-unit id="61c1f0e02099ee92532122ccd8c5d4e3e7623b37" translate="yes" xml:space="preserve">
          <source>NPY_OBJECT_DTYPE_FLAGS</source>
          <target state="translated">NPY_OBJECT_DTYPE_FLAGS</target>
        </trans-unit>
        <trans-unit id="bee79cf8509d85905ebb9b6892b00ceaaf6bc4b5" translate="yes" xml:space="preserve">
          <source>NPY_ORDER</source>
          <target state="translated">NPY_ORDER</target>
        </trans-unit>
        <trans-unit id="7480b7495bd93607e0adab34e25b5ec2fe3c2a7f" translate="yes" xml:space="preserve">
          <source>NPY_OUT_ARRAY</source>
          <target state="translated">NPY_OUT_ARRAY</target>
        </trans-unit>
        <trans-unit id="4853d086e9afc879a91103aa14a84fcb82f9b6fb" translate="yes" xml:space="preserve">
          <source>NPY_PI</source>
          <target state="translated">NPY_PI</target>
        </trans-unit>
        <trans-unit id="b29387549f8ad8f987d0fb8ec127c377fa756fc0" translate="yes" xml:space="preserve">
          <source>NPY_PI_2</source>
          <target state="translated">NPY_PI_2</target>
        </trans-unit>
        <trans-unit id="c405e8d2836cb8981b4c416dac630f478df64669" translate="yes" xml:space="preserve">
          <source>NPY_PI_4</source>
          <target state="translated">NPY_PI_4</target>
        </trans-unit>
        <trans-unit id="7410e9436af8a54d284e4d5ba6437fec38feb391" translate="yes" xml:space="preserve">
          <source>NPY_PZERO</source>
          <target state="translated">NPY_PZERO</target>
        </trans-unit>
        <trans-unit id="f4f91fa01dd656fb4cc14772d0a8a2f222b13bd9" translate="yes" xml:space="preserve">
          <source>NPY_SAFE_CASTING</source>
          <target state="translated">NPY_SAFE_CASTING</target>
        </trans-unit>
        <trans-unit id="38936f82ec1dc5b02b184e352b57d654b7702bd1" translate="yes" xml:space="preserve">
          <source>NPY_SAME_KIND_CASTING</source>
          <target state="translated">NPY_SAME_KIND_CASTING</target>
        </trans-unit>
        <trans-unit id="723af35795607e2d6c45f53cce80f34e8afcc0ed" translate="yes" xml:space="preserve">
          <source>NPY_SCALARKIND</source>
          <target state="translated">NPY_SCALARKIND</target>
        </trans-unit>
        <trans-unit id="900f6d197e8cae5106f53d1fde0704ea946bccc2" translate="yes" xml:space="preserve">
          <source>NPY_SCALAR_PRIORITY</source>
          <target state="translated">NPY_SCALAR_PRIORITY</target>
        </trans-unit>
        <trans-unit id="dc6e723cf42ed78834dfd3a704cf29bdbcb105cf" translate="yes" xml:space="preserve">
          <source>NPY_SHORT</source>
          <target state="translated">NPY_SHORT</target>
        </trans-unit>
        <trans-unit id="f3c652be009e0b3b7cd600711d5a78b7c3e9762e" translate="yes" xml:space="preserve">
          <source>NPY_SIGINT_OFF</source>
          <target state="translated">NPY_SIGINT_OFF</target>
        </trans-unit>
        <trans-unit id="7f3fd6e320e922cfa24c562187d49e0c0ae53762" translate="yes" xml:space="preserve">
          <source>NPY_SIGINT_ON</source>
          <target state="translated">NPY_SIGINT_ON</target>
        </trans-unit>
        <trans-unit id="9188b69c370334915f72069e382276e674f7fed3" translate="yes" xml:space="preserve">
          <source>NPY_SIGJMP_BUF</source>
          <target state="translated">NPY_SIGJMP_BUF</target>
        </trans-unit>
        <trans-unit id="6132eef50a8b80307588ce1409e897167f80718a" translate="yes" xml:space="preserve">
          <source>NPY_SIGLONGJMP</source>
          <target state="translated">NPY_SIGLONGJMP</target>
        </trans-unit>
        <trans-unit id="717174397106f6d8c4ba8504395e08a468805768" translate="yes" xml:space="preserve">
          <source>NPY_SIGSETJMP</source>
          <target state="translated">NPY_SIGSETJMP</target>
        </trans-unit>
        <trans-unit id="062a534489d75645f7c4a45af01e65d54b1d7fdd" translate="yes" xml:space="preserve">
          <source>NPY_SIZEOF_DOUBLE</source>
          <target state="translated">NPY_SIZEOF_DOUBLE</target>
        </trans-unit>
        <trans-unit id="ddfcfc9b46e434249b7e1692afbc5d15eed6e962" translate="yes" xml:space="preserve">
          <source>NPY_SIZEOF_FLOAT</source>
          <target state="translated">NPY_SIZEOF_FLOAT</target>
        </trans-unit>
        <trans-unit id="9db9e843ae2f790d707d93d52ef66ce770e861a5" translate="yes" xml:space="preserve">
          <source>NPY_SIZEOF_INT</source>
          <target state="translated">NPY_SIZEOF_INT</target>
        </trans-unit>
        <trans-unit id="21119a50243e3b0178c4b00e32e011d04b3c3aa6" translate="yes" xml:space="preserve">
          <source>NPY_SIZEOF_LONG</source>
          <target state="translated">NPY_SIZEOF_LONG</target>
        </trans-unit>
        <trans-unit id="36ee2253a56f84d52aaa1523f491843c16c6e36f" translate="yes" xml:space="preserve">
          <source>NPY_SIZEOF_LONGLONG</source>
          <target state="translated">NPY_SIZEOF_LONGLONG</target>
        </trans-unit>
        <trans-unit id="d1b5e3fc754fe03235a7b81322dc029111227273" translate="yes" xml:space="preserve">
          <source>NPY_SIZEOF_LONG_DOUBLE</source>
          <target state="translated">NPY_SIZEOF_LONG_DOUBLE</target>
        </trans-unit>
        <trans-unit id="b22f6b875740631ef2de70f6ec463aba47de42e8" translate="yes" xml:space="preserve">
          <source>NPY_SIZEOF_PY_INTPTR_T</source>
          <target state="translated">NPY_SIZEOF_PY_INTPTR_T</target>
        </trans-unit>
        <trans-unit id="4fa0c2e5c7bac26ee0f40824e499b2bc6547d2bd" translate="yes" xml:space="preserve">
          <source>NPY_SIZEOF_PY_LONG_LONG</source>
          <target state="translated">NPY_SIZEOF_PY_LONG_LONG</target>
        </trans-unit>
        <trans-unit id="21e23497741a38f3f315f897c5b6fb87f57d9abb" translate="yes" xml:space="preserve">
          <source>NPY_SIZEOF_SHORT</source>
          <target state="translated">NPY_SIZEOF_SHORT</target>
        </trans-unit>
        <trans-unit id="f7be51fd1b23ec24e89af35b5f5b0a318ee6681c" translate="yes" xml:space="preserve">
          <source>NPY_STRING</source>
          <target state="translated">NPY_STRING</target>
        </trans-unit>
        <trans-unit id="c282a1d100ab18644a9b0da0f04342e16fde902d" translate="yes" xml:space="preserve">
          <source>NPY_SUBTYPE_PRIORITY</source>
          <target state="translated">NPY_SUBTYPE_PRIORITY</target>
        </trans-unit>
        <trans-unit id="6b0fa8142e98f763ab8b87fd9dc2e3cd20562691" translate="yes" xml:space="preserve">
          <source>NPY_SUCCEED</source>
          <target state="translated">NPY_SUCCEED</target>
        </trans-unit>
        <trans-unit id="12ee9f7c5d6ef66f1a6c0f34fa26e531ce3ae1b0" translate="yes" xml:space="preserve">
          <source>NPY_TIMEDELTA</source>
          <target state="translated">NPY_TIMEDELTA</target>
        </trans-unit>
        <trans-unit id="7e3c963f739b307f23e4b34bb0ce64349ec685a8" translate="yes" xml:space="preserve">
          <source>NPY_TRUE</source>
          <target state="translated">NPY_TRUE</target>
        </trans-unit>
        <trans-unit id="c1690cbd75cc0ac74fc451f58915cafc47128281" translate="yes" xml:space="preserve">
          <source>NPY_TYPES</source>
          <target state="translated">NPY_TYPES</target>
        </trans-unit>
        <trans-unit id="39615da24848825c5a7392d962b2477f24ec4807" translate="yes" xml:space="preserve">
          <source>NPY_UBYTE</source>
          <target state="translated">NPY_UBYTE</target>
        </trans-unit>
        <trans-unit id="edc0008780e7f23d27809736552c21d91351467a" translate="yes" xml:space="preserve">
          <source>NPY_UINT</source>
          <target state="translated">NPY_UINT</target>
        </trans-unit>
        <trans-unit id="4d8c43477a4514ba8d814ed9658279cbb22d4c9b" translate="yes" xml:space="preserve">
          <source>NPY_UINT16</source>
          <target state="translated">NPY_UINT16</target>
        </trans-unit>
        <trans-unit id="0a7a42a36d93e0aafd38f45b5b2dcebb7ca97378" translate="yes" xml:space="preserve">
          <source>NPY_UINT32</source>
          <target state="translated">NPY_UINT32</target>
        </trans-unit>
        <trans-unit id="41721af31acd9e813df41335a21cddf4dbe68bb9" translate="yes" xml:space="preserve">
          <source>NPY_UINT64</source>
          <target state="translated">NPY_UINT64</target>
        </trans-unit>
        <trans-unit id="9653c22566cfa0445a8f3e893bad4b01b6c19eb8" translate="yes" xml:space="preserve">
          <source>NPY_UINT8</source>
          <target state="translated">NPY_UINT8</target>
        </trans-unit>
        <trans-unit id="fa88c7591052839c4d45a4ca3501f8a47d7c2225" translate="yes" xml:space="preserve">
          <source>NPY_UINTP</source>
          <target state="translated">NPY_UINTP</target>
        </trans-unit>
        <trans-unit id="ddc0072166c50a8e097e0fc66efa8b9b53b1a816" translate="yes" xml:space="preserve">
          <source>NPY_ULONG</source>
          <target state="translated">NPY_ULONG</target>
        </trans-unit>
        <trans-unit id="d404f8c30c6fd0908c3a4cfdbbcadf5aec35a913" translate="yes" xml:space="preserve">
          <source>NPY_ULONGLONG</source>
          <target state="translated">NPY_ULONGLONG</target>
        </trans-unit>
        <trans-unit id="28c42f9583182d87a074f5e857ce5673621c172b" translate="yes" xml:space="preserve">
          <source>NPY_UNICODE</source>
          <target state="translated">NPY_UNICODE</target>
        </trans-unit>
        <trans-unit id="dccde0ebd5101bcbb89de1ce736c02228004420d" translate="yes" xml:space="preserve">
          <source>NPY_UNLIKELY</source>
          <target state="translated">NPY_UNLIKELY</target>
        </trans-unit>
        <trans-unit id="30ea47c9e2fac6de756b8b7230727b9e766c239f" translate="yes" xml:space="preserve">
          <source>NPY_UNSAFE_CASTING</source>
          <target state="translated">NPY_UNSAFE_CASTING</target>
        </trans-unit>
        <trans-unit id="55b4d55e586f9a4a02f3278716cad943a193e998" translate="yes" xml:space="preserve">
          <source>NPY_UNUSED</source>
          <target state="translated">NPY_UNUSED</target>
        </trans-unit>
        <trans-unit id="723ea141fddc3b6b4b02b195ce3665b788983b5e" translate="yes" xml:space="preserve">
          <source>NPY_USERDEF</source>
          <target state="translated">NPY_USERDEF</target>
        </trans-unit>
        <trans-unit id="f5a8b36c7d83a162ab0006d08d8ac0e0f156d23d" translate="yes" xml:space="preserve">
          <source>NPY_USE_GETITEM</source>
          <target state="translated">NPY_USE_GETITEM</target>
        </trans-unit>
        <trans-unit id="b89bd57f4f8e5cc1cba37a891c4c8410316aac6b" translate="yes" xml:space="preserve">
          <source>NPY_USE_SETITEM</source>
          <target state="translated">NPY_USE_SETITEM</target>
        </trans-unit>
        <trans-unit id="cc79e8dd62b2b6a6e7449b9a4d751846101bea34" translate="yes" xml:space="preserve">
          <source>NPY_USHORT</source>
          <target state="translated">NPY_USHORT</target>
        </trans-unit>
        <trans-unit id="098f027d0e504c1dfc633885e430313882c636c7" translate="yes" xml:space="preserve">
          <source>NPY_VERSION</source>
          <target state="translated">NPY_VERSION</target>
        </trans-unit>
        <trans-unit id="c2162e27e826af36c6b4eeaf95829ccccec2d6d3" translate="yes" xml:space="preserve">
          <source>NPY_VOID</source>
          <target state="translated">NPY_VOID</target>
        </trans-unit>
        <trans-unit id="2028b3d403b5722a2b0d0db2d4b911180edb5cb1" translate="yes" xml:space="preserve">
          <source>NPY_WRAP</source>
          <target state="translated">NPY_WRAP</target>
        </trans-unit>
        <trans-unit id="dec97ffbeb62ca7f1d28e38b4bfeb069149244fa" translate="yes" xml:space="preserve">
          <source>NZERO : Defines negative zero.</source>
          <target state="translated">NZERO:負のゼロを定義します。</target>
        </trans-unit>
        <trans-unit id="1a8a27b973da427541744ef5f7eded5c3fdceec5" translate="yes" xml:space="preserve">
          <source>NaN values are propagated, that is if at least one item is NaN, the corresponding max value will be NaN as well. To ignore NaN values (MATLAB behavior), please use nanmax.</source>
          <target state="translated">NaN値は伝播されます。つまり、少なくとも1つの項目がNaNであれば、対応するmax値も同様にNaNになります。NaN値を無視するには(MATLABの動作)、nanmaxを使用してください。</target>
        </trans-unit>
        <trans-unit id="cfe2895510d66df90c24ea144e4bfbca9d1542d3" translate="yes" xml:space="preserve">
          <source>NaN values are propagated, that is if at least one item is NaN, the corresponding min value will be NaN as well. To ignore NaN values (MATLAB behavior), please use nanmin.</source>
          <target state="translated">NaN値は伝播されます、つまり、少なくとも1つの項目がNaNであれば、対応するmin値も同様にNaNになります。NaN値を無視する(MATLABの動作)にはnanminを使用してください。</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="976e203d4327fea36cd374f3eed8964477674242" translate="yes" xml:space="preserve">
          <source>Name of module(s) whose docstrings to go through.</source>
          <target state="translated">ドックストリングを通過させるモジュールの名前を指定します。</target>
        </trans-unit>
        <trans-unit id="40abec161decd95c4a4db2e6e216375078b6b6d2" translate="yes" xml:space="preserve">
          <source>Name of the extension.</source>
          <target state="translated">拡張子の名前。</target>
        </trans-unit>
        <trans-unit id="ea8c2185be76bdf8ef5645d6fdbcb1872d750862" translate="yes" xml:space="preserve">
          <source>Name of the installed library.</source>
          <target state="translated">インストールされているライブラリの名前。</target>
        </trans-unit>
        <trans-unit id="27c0ec46fe2e1efbac60d15fc8a04749563c4cf5" translate="yes" xml:space="preserve">
          <source>Name of the library, which can have &amp;lsquo;lib&amp;rsquo; as a prefix, but without an extension.</source>
          <target state="translated">ライブラリの名前。接頭辞として「lib」を付けることができますが、拡張子は付けません。</target>
        </trans-unit>
        <trans-unit id="42a267dab62000699523424cadc903a6f5a1925d" translate="yes" xml:space="preserve">
          <source>Name of the subpackage to get the configuration. &amp;lsquo;*&amp;rsquo; in subpackage_name is handled as a wildcard.</source>
          <target state="translated">構成を取得するサブパッケージの名前。subpackage_nameの「*」はワイルドカードとして扱われます。</target>
        </trans-unit>
        <trans-unit id="0f1b03c4b6909300a55fd037cae6deb91eda8170" translate="yes" xml:space="preserve">
          <source>Name of this function adheres to Python 3.2+ reference, but should work in all versions down to 2.6.</source>
          <target state="translated">この関数の名前はPython 3.2+のリファレンスに準拠していますが、2.6までのすべてのバージョンで動作するはずです。</target>
        </trans-unit>
        <trans-unit id="3c85ca1037489f94c6ef34b11f180eadfd7275e0" translate="yes" xml:space="preserve">
          <source>Named repeat rule</source>
          <target state="translated">ネームドリピートルール</target>
        </trans-unit>
        <trans-unit id="368b76becbd7e27da0e0624a1460ac594f34c1e3" translate="yes" xml:space="preserve">
          <source>Named tuple containing CFFI wrapper</source>
          <target state="translated">CFFI ラッパーを含む名前付きタプル</target>
        </trans-unit>
        <trans-unit id="916e8359209758e3636cc7629adf25335926e5f1" translate="yes" xml:space="preserve">
          <source>Named tuple containing ctypes wrapper</source>
          <target state="translated">ctypes ラッパーを含む名前付きタプル</target>
        </trans-unit>
        <trans-unit id="13231ecaba15980966dbe90ac1a511d180555212" translate="yes" xml:space="preserve">
          <source>Natural logarithm of 10 (</source>
          <target state="translated">10の自然対数 (</target>
        </trans-unit>
        <trans-unit id="456d7bdd5982d22f33ab5610f1fcaa19a6b255b3" translate="yes" xml:space="preserve">
          <source>Natural logarithm of 2 (</source>
          <target state="translated">2の自然対数 (</target>
        </trans-unit>
        <trans-unit id="f45b16bd2c2e2f912c62883b92010d94f1a0527c" translate="yes" xml:space="preserve">
          <source>Natural logarithm of &lt;code&gt;1 + x&lt;/code&gt;, element-wise. This is a scalar if &lt;code&gt;x&lt;/code&gt; is a scalar.</source>
          <target state="translated">要素ごとの &lt;code&gt;1 + x&lt;/code&gt; 自然対数。 &lt;code&gt;x&lt;/code&gt; がスカラーの場合、これはスカラーです。</target>
        </trans-unit>
        <trans-unit id="56bba5168d2d3a43ac95c113f4be22cece09a199" translate="yes" xml:space="preserve">
          <source>Natural logarithm, element-wise.</source>
          <target state="translated">自然対数、要素別。</target>
        </trans-unit>
        <trans-unit id="24ad64c3269250006e40388ed78cd214c08e4b7e" translate="yes" xml:space="preserve">
          <source>Nditer code: Since this often calls the strided copy code, it must check for &amp;ldquo;uint alignment&amp;rdquo;.</source>
          <target state="translated">Nditerコード：これはしばしばストライドコピーコードを呼び出すため、「uintアライメント」をチェックする必要があります。</target>
        </trans-unit>
        <trans-unit id="0d99cbe950a65be4984296cf302a77132ddb5c11" translate="yes" xml:space="preserve">
          <source>Nearly identical to &lt;a href=&quot;#c.PyArray_FromAny&quot;&gt;&lt;code&gt;PyArray_FromAny&lt;/code&gt;&lt;/a&gt; (&amp;hellip;) except &lt;em&gt;requirements&lt;/em&gt; can contain &lt;a href=&quot;#c.NPY_ARRAY_NOTSWAPPED&quot;&gt;&lt;code&gt;NPY_ARRAY_NOTSWAPPED&lt;/code&gt;&lt;/a&gt; (over-riding the specification in &lt;em&gt;dtype&lt;/em&gt;) and &lt;a href=&quot;#c.NPY_ARRAY_ELEMENTSTRIDES&quot;&gt;&lt;code&gt;NPY_ARRAY_ELEMENTSTRIDES&lt;/code&gt;&lt;/a&gt; which indicates that the array should be aligned in the sense that the strides are multiples of the element size.</source>
          <target state="translated">&lt;em&gt;要件&lt;/em&gt;に&lt;a href=&quot;#c.NPY_ARRAY_NOTSWAPPED&quot;&gt; &lt;code&gt;NPY_ARRAY_NOTSWAPPED&lt;/code&gt; &lt;/a&gt;（dtypeの指定を&lt;em&gt;オーバーライドする&lt;/em&gt;）と&lt;a href=&quot;#c.NPY_ARRAY_ELEMENTSTRIDES&quot;&gt; &lt;code&gt;NPY_ARRAY_ELEMENTSTRIDES&lt;/code&gt; &lt;/a&gt;を含めることができることを除いて、&lt;a href=&quot;#c.PyArray_FromAny&quot;&gt; &lt;code&gt;PyArray_FromAny&lt;/code&gt; &lt;/a&gt;（&amp;hellip;）とほぼ同じです。NPY_ARRAY_ELEMENTSTRIDESは、ストライドが要素サイズの倍数であるという意味で配列を整列する必要があることを示します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3ed35edb6c5b09bfa411d9db049d16fe1142a1fc" translate="yes" xml:space="preserve">
          <source>Negative &lt;em&gt;i&lt;/em&gt; and &lt;em&gt;j&lt;/em&gt; are interpreted as &lt;em&gt;n + i&lt;/em&gt; and &lt;em&gt;n + j&lt;/em&gt; where &lt;em&gt;n&lt;/em&gt; is the number of elements in the corresponding dimension. Negative &lt;em&gt;k&lt;/em&gt; makes stepping go towards smaller indices.</source>
          <target state="translated">負の&lt;em&gt;i&lt;/em&gt;および&lt;em&gt;j&lt;/em&gt;は、&lt;em&gt;n + i&lt;/em&gt;および&lt;em&gt;n + j&lt;/em&gt;として解釈されます。ここで、&lt;em&gt;n&lt;/em&gt;は対応する次元の要素の数です。負の&lt;em&gt;k&lt;/em&gt;は、小さなインデックスに向けてステップを進めます。</target>
        </trans-unit>
        <trans-unit id="cbc6aae97ca20bcb3198671594cdfa7c2443be75" translate="yes" xml:space="preserve">
          <source>Negative, decreasing, and complex inputs are allowed:</source>
          <target state="translated">負の入力、減少の入力、複素数の入力が可能です。</target>
        </trans-unit>
        <trans-unit id="4adacacf6118c3709ed61abc23793abc96c8717d" translate="yes" xml:space="preserve">
          <source>Neighborhood iterator</source>
          <target state="translated">Neighborhoodイテレータ</target>
        </trans-unit>
        <trans-unit id="d8dfca473c116cc811f805f2ae47c35f3fec6321" translate="yes" xml:space="preserve">
          <source>Neighborhood iterators are subclasses of the iterator object, and can be used to iter over a neighborhood of a point. For example, you may want to iterate over every voxel of a 3d image, and for every such voxel, iterate over an hypercube. Neighborhood iterator automatically handle boundaries, thus making this kind of code much easier to write than manual boundaries handling, at the cost of a slight overhead.</source>
          <target state="translated">近傍イテレータは、イテレータオブジェクトのサブクラスであり、点の近傍を反復処理するために使用できます。たとえば、3D 画像のすべてのボクセルを反復処理し、そのようなボクセルごとにハイパーキューブを反復処理したいとします。Neighborhoodイテレータは自動的に境界線を処理するので、この種のコードは手動で境界線を処理するよりもはるかに簡単に書けるようになりますが、わずかなオーバーヘッドを犠牲にします。</target>
        </trans-unit>
        <trans-unit id="616eefe2686c871c01ce4c082e56ab62a97ff62c" translate="yes" xml:space="preserve">
          <source>Neither argument is complex-conjugated:</source>
          <target state="translated">どちらの引数も複素共役化されていません。</target>
        </trans-unit>
        <trans-unit id="58c55490f160a10ce66fb3ba65116eb49f0ec0e5" translate="yes" xml:space="preserve">
          <source>Nesting this context manager will work as expected when the forwarding rule is &amp;ldquo;always&amp;rdquo; (default). Unfiltered and unrecorded warnings will be passed out and be matched by the outer level. On the outmost level they will be printed (or caught by another warnings context). The forwarding rule argument can modify this behaviour.</source>
          <target state="translated">転送ルールが「常に」（デフォルト）の場合、このコンテキストマネージャのネストは期待どおりに機能します。フィルタリングされておらず、記録されていない警告は渡され、外部レベルと一致します。最も外側のレベルでは、それらは出力されます（または別の警告コンテキストによってキャッチされます）。転送ルール引数は、この動作を変更できます。</target>
        </trans-unit>
        <trans-unit id="7985483741a688b60bf8e376856fb34e3a23c470" translate="yes" xml:space="preserve">
          <source>Never declare a non-pointer instance of the struct</source>
          <target state="translated">構造体の非ポインタインスタンスを宣言することはありません。</target>
        </trans-unit>
        <trans-unit id="359bcf616ef070777f6e75a045811fa19d53b5d7" translate="yes" xml:space="preserve">
          <source>Never perform pointer arithmatic</source>
          <target state="translated">ポインタのアリスマ性を絶対に実行しない</target>
        </trans-unit>
        <trans-unit id="7ac2caaec5aa9259816bcfde96f3922ab10fd8ce" translate="yes" xml:space="preserve">
          <source>Never perform pointer arithmetic</source>
          <target state="translated">ポインタ演算は絶対に行わない</target>
        </trans-unit>
        <trans-unit id="a65ce50fd9c1242c2a5073e8363c3709c956a51c" translate="yes" xml:space="preserve">
          <source>Never use &lt;code&gt;sizeof(PyUFuncObject)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;sizeof(PyUFuncObject)&lt;/code&gt; を使用しない</target>
        </trans-unit>
        <trans-unit id="dc40b4325640ebd6d5f9bb5ba4d67ecfa6093e24" translate="yes" xml:space="preserve">
          <source>Never use &lt;code&gt;sizof(PyArray_Descr)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;sizof(PyArray_Descr)&lt;/code&gt; を使用しない</target>
        </trans-unit>
        <trans-unit id="7070214ffce34d23b7afd16ef2b37ef083393284" translate="yes" xml:space="preserve">
          <source>Never use semicolons after the threading support macros.</source>
          <target state="translated">スレッディングサポートマクロの後にセミコロンを使用しないでください。</target>
        </trans-unit>
        <trans-unit id="e32dff4a060dad5a565bcd1b38b35bf2ffa7fb0b" translate="yes" xml:space="preserve">
          <source>New &amp;lsquo;reduced&amp;rsquo;, &amp;lsquo;complete&amp;rsquo;, and &amp;lsquo;raw&amp;rsquo; options for mode were added in NumPy 1.8.0 and the old option &amp;lsquo;full&amp;rsquo; was made an alias of &amp;lsquo;reduced&amp;rsquo;. In addition the options &amp;lsquo;full&amp;rsquo; and &amp;lsquo;economic&amp;rsquo; were deprecated. Because &amp;lsquo;full&amp;rsquo; was the previous default and &amp;lsquo;reduced&amp;rsquo; is the new default, backward compatibility can be maintained by letting &lt;code&gt;mode&lt;/code&gt; default. The &amp;lsquo;raw&amp;rsquo; option was added so that LAPACK routines that can multiply arrays by q using the Householder reflectors can be used. Note that in this case the returned arrays are of type np.double or np.cdouble and the h array is transposed to be FORTRAN compatible. No routines using the &amp;lsquo;raw&amp;rsquo; return are currently exposed by numpy, but some are available in lapack_lite and just await the necessary work.</source>
          <target state="translated">NumPy 1.8.0でモードの新しい「縮小」、「完全」、および「未加工」オプションが追加され、古いオプション「完全」が「縮小」のエイリアスになりました。さらに、オプション 'full'および 'economic'は廃止されました。 'full'は以前のデフォルトであり、 'reduced'は新しいデフォルトであるため、 &lt;code&gt;mode&lt;/code&gt; デフォルトにすることで下位互換性を維持できます。ハウスホルダーリフレクターを使用して配列にqを乗算できるLAPACKルーチンを使用できるように、「raw」オプションが追加されました。この場合、返される配列の型はnp.doubleまたはnp.cdoubleであり、h配列はFORTRAN互換になるように転置されることに注意してください。 「raw」リターンを使用するルーチンは現在numpyによって公開されていませんが、lapack_liteで使用可能なルーチンがあり、必要な作業を待機しています。</target>
        </trans-unit>
        <trans-unit id="1a0e8c6cd3c028bd2e05356bb8359f25dacf1900" translate="yes" xml:space="preserve">
          <source>New &lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; object with the given change to the byte order.</source>
          <target state="translated">バイトオーダーが変更された新しい&lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;オブジェクト。</target>
        </trans-unit>
        <trans-unit id="f287856e3d51c21d5ea4b1fe501ebf681db8e842" translate="yes" xml:space="preserve">
          <source>New Basic RNGs</source>
          <target state="translated">新しい基本のRNG</target>
        </trans-unit>
        <trans-unit id="2c2128005b22176a410cc4633d46460dd191aa7e" translate="yes" xml:space="preserve">
          <source>New Python Types Defined</source>
          <target state="translated">新しい Python の型が定義されました。</target>
        </trans-unit>
        <trans-unit id="7e0f24a840910ce77406e6c3faa2578e0ee8b90e" translate="yes" xml:space="preserve">
          <source>New array holding the result. If &lt;code&gt;out&lt;/code&gt; was specified, &lt;code&gt;out&lt;/code&gt; is returned.</source>
          <target state="translated">結果を保持する新しい配列。 &lt;code&gt;out&lt;/code&gt; が指定された場合、 &lt;code&gt;out&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="38a5ab042919ce6f9d90bed68a738e6b078703dd" translate="yes" xml:space="preserve">
          <source>New array object with the dtype reflecting given change to the byte order.</source>
          <target state="translated">指定されたバイトオーダーの変更を反映した dtype を持つ新しい配列オブジェクトです。</target>
        </trans-unit>
        <trans-unit id="71c51f79a440f52228e3edc751262a54d784d72f" translate="yes" xml:space="preserve">
          <source>New arrays can be constructed using the routines detailed in &lt;a href=&quot;routines.array-creation#routines-array-creation&quot;&gt;Array creation routines&lt;/a&gt;, and also by using the low-level &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt; constructor:</source>
          <target state="translated">新しい配列は、&lt;a href=&quot;routines.array-creation#routines-array-creation&quot;&gt;配列作成ルーチン&lt;/a&gt;で説明されているルーチンを使用して、また低レベルの&lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt;コンストラクターを使用して構築できます。</target>
        </trans-unit>
        <trans-unit id="7d4fac23052b1dcb2b4624f5d9cba16c9e7c228c" translate="yes" xml:space="preserve">
          <source>New data types</source>
          <target state="translated">新しいデータ型</target>
        </trans-unit>
        <trans-unit id="4ba85c7a6d9f8bb8efc5f21139a7cecc28876866" translate="yes" xml:space="preserve">
          <source>New dtype object with the given change to the byte order.</source>
          <target state="translated">バイトオーダーを変更した新しいdtypeオブジェクト。</target>
        </trans-unit>
        <trans-unit id="5de72a4252ab8f9cac47a6df57c940e02e2a54e8" translate="yes" xml:space="preserve">
          <source>New in version 1.10.</source>
          <target state="translated">バージョン1.10の新機能。</target>
        </trans-unit>
        <trans-unit id="ee74779525ce6ea3a8b1fc727a0ddc5193261706" translate="yes" xml:space="preserve">
          <source>New in version 1.10.0.</source>
          <target state="translated">バージョン1.10.0の新機能。</target>
        </trans-unit>
        <trans-unit id="2137c292e37fe9b62a7e56dcac5cca8d87c732c0" translate="yes" xml:space="preserve">
          <source>New in version 1.10.2.</source>
          <target state="translated">バージョン1.10.2の新機能。</target>
        </trans-unit>
        <trans-unit id="b57cc8087c9358677643b8f46aefe5ea6a0ebecf" translate="yes" xml:space="preserve">
          <source>New in version 1.11.0.</source>
          <target state="translated">バージョン1.11.0の新機能。</target>
        </trans-unit>
        <trans-unit id="1f52d8d8231fcffc9a4988e057ca01cae7f187ff" translate="yes" xml:space="preserve">
          <source>New in version 1.12.</source>
          <target state="translated">バージョン1.12の新機能。</target>
        </trans-unit>
        <trans-unit id="2face774ecc2c81a3c162fc20b62b01c5a40600b" translate="yes" xml:space="preserve">
          <source>New in version 1.12.0.</source>
          <target state="translated">バージョン1.12.0の新機能。</target>
        </trans-unit>
        <trans-unit id="32bc036cd949326de853c34209b68daa86ff42a4" translate="yes" xml:space="preserve">
          <source>New in version 1.13.</source>
          <target state="translated">バージョン1.13の新機能。</target>
        </trans-unit>
        <trans-unit id="812239edd4c38dabb4bc944f5a4da690ae31f9fb" translate="yes" xml:space="preserve">
          <source>New in version 1.13.0.</source>
          <target state="translated">バージョン1.13.0の新機能。</target>
        </trans-unit>
        <trans-unit id="a7fcdebd6983bded23b35d285d786921ce208679" translate="yes" xml:space="preserve">
          <source>New in version 1.14.</source>
          <target state="translated">バージョン1.14の新機能。</target>
        </trans-unit>
        <trans-unit id="6b2dcd4a8e241be9f4eae8bcb83efab5457748ea" translate="yes" xml:space="preserve">
          <source>New in version 1.14.0.</source>
          <target state="translated">バージョン1.14.0の新機能。</target>
        </trans-unit>
        <trans-unit id="0c7220d3e19e89998d3991680045d41d18ccc08e" translate="yes" xml:space="preserve">
          <source>New in version 1.15.</source>
          <target state="translated">バージョン1.15の新機能。</target>
        </trans-unit>
        <trans-unit id="09e4bf640113b06a25e56a4fbced8359329ae65c" translate="yes" xml:space="preserve">
          <source>New in version 1.15.0.</source>
          <target state="translated">バージョン1.15.0の新機能。</target>
        </trans-unit>
        <trans-unit id="85339f6ed2b31c74822cb66dd6a2d31bfa788c2c" translate="yes" xml:space="preserve">
          <source>New in version 1.16.</source>
          <target state="translated">バージョン1.16の新機能。</target>
        </trans-unit>
        <trans-unit id="61f4d2a2c8ffd5cf207c22ed59f99b38e13075d9" translate="yes" xml:space="preserve">
          <source>New in version 1.16.0.</source>
          <target state="translated">バージョン1.16.0の新機能。</target>
        </trans-unit>
        <trans-unit id="62d4a9f6a334052c56ff0415a29a69f7c240cf9f" translate="yes" xml:space="preserve">
          <source>New in version 1.16: Now handles ufunc kwargs</source>
          <target state="translated">バージョン 1.16 の新機能:ufunc kwargs を扱うようになりました。</target>
        </trans-unit>
        <trans-unit id="42dfbb15856498938c409aa40c4ada4a73e21225" translate="yes" xml:space="preserve">
          <source>New in version 1.17.</source>
          <target state="translated">バージョン1.17の新機能。</target>
        </trans-unit>
        <trans-unit id="5cea599387052388cbd15216728091ac0d338428" translate="yes" xml:space="preserve">
          <source>New in version 1.17.0.</source>
          <target state="translated">バージョン1.17.0の新機能。</target>
        </trans-unit>
        <trans-unit id="6f0af1a4dfa46010272d778c802279254c6462c9" translate="yes" xml:space="preserve">
          <source>New in version 1.3.0.</source>
          <target state="translated">バージョン1.3.0の新機能。</target>
        </trans-unit>
        <trans-unit id="9527813b2a3a3264011530b12d4eddf3ee7657b0" translate="yes" xml:space="preserve">
          <source>New in version 1.4.0.</source>
          <target state="translated">バージョン1.4.0の新機能。</target>
        </trans-unit>
        <trans-unit id="458a5758c6edd3424a27a61b460f5140fa37df00" translate="yes" xml:space="preserve">
          <source>New in version 1.5.</source>
          <target state="translated">バージョン1.5の新機能。</target>
        </trans-unit>
        <trans-unit id="c49cc9996bfcd59e0da5f20e5bce367a012c5e0f" translate="yes" xml:space="preserve">
          <source>New in version 1.5.0.</source>
          <target state="translated">バージョン1.5.0の新機能。</target>
        </trans-unit>
        <trans-unit id="5d1d2b91339374b014df11afd4f98aa79d1344f9" translate="yes" xml:space="preserve">
          <source>New in version 1.6.</source>
          <target state="translated">バージョン1.6の新機能。</target>
        </trans-unit>
        <trans-unit id="dfdfe03f7110f5405041e6eca339a00633ba49ec" translate="yes" xml:space="preserve">
          <source>New in version 1.6.0.</source>
          <target state="translated">バージョン1.6.0の新機能。</target>
        </trans-unit>
        <trans-unit id="f7f92c6e6757974911ee86348b393509f5bdd7e0" translate="yes" xml:space="preserve">
          <source>New in version 1.7.</source>
          <target state="translated">バージョン1.7の新機能。</target>
        </trans-unit>
        <trans-unit id="3dcb523c8b35ef7bba188a1b72a37583d73585c0" translate="yes" xml:space="preserve">
          <source>New in version 1.7.0.</source>
          <target state="translated">バージョン1.7.0の新機能。</target>
        </trans-unit>
        <trans-unit id="636a6686cd06672fd21e245ea6635b6a844c2465" translate="yes" xml:space="preserve">
          <source>New in version 1.8.0.</source>
          <target state="translated">バージョン1.8.0の新機能。</target>
        </trans-unit>
        <trans-unit id="0fafb453d87efde6f16b32de7b47ff78521304b8" translate="yes" xml:space="preserve">
          <source>New in version 1.9.0.</source>
          <target state="translated">バージョン1.9.0の新機能。</target>
        </trans-unit>
        <trans-unit id="f8cec398c70fd8647fa6846f110c387ca17f4512" translate="yes" xml:space="preserve">
          <source>New in version 1.9.1.</source>
          <target state="translated">バージョン1.9.1の新機能。</target>
        </trans-unit>
        <trans-unit id="b8491900b81de43a6e32f0c78b17bad686513b91" translate="yes" xml:space="preserve">
          <source>New instance of generator jumped iter times</source>
          <target state="translated">ジェネレーターがジャンプしたイタ回数の新しいインスタンス</target>
        </trans-unit>
        <trans-unit id="fc2b6cc9627169b86508e4b8ab48bafeca6f7653" translate="yes" xml:space="preserve">
          <source>New instance of series with reduced degree.</source>
          <target state="translated">次数を減らした級数の新しいインスタンス。</target>
        </trans-unit>
        <trans-unit id="a5da6859165928f5c813a374a7d4b0543322485c" translate="yes" xml:space="preserve">
          <source>New instance of series with truncated coefficients.</source>
          <target state="translated">係数を切り捨てた系列の新しいインスタンス.</target>
        </trans-unit>
        <trans-unit id="b02c9ab716cd5d08c0fc39e2b190c65f62de6f0b" translate="yes" xml:space="preserve">
          <source>New since June 16, 2006:</source>
          <target state="translated">2006年6月16日から新しくなりました。</target>
        </trans-unit>
        <trans-unit id="163a2d38fe73630c6f811cc1ebd4ca50c54bc0cf" translate="yes" xml:space="preserve">
          <source>New view of array with the same data.</source>
          <target state="translated">同じデータを持つ配列の新しいビュー。</target>
        </trans-unit>
        <trans-unit id="8c38aca7649def5a3434c6c996d36271b6eb6ab0" translate="yes" xml:space="preserve">
          <source>New views into arrays mean the object reference counts for the data buffer increase. Simply doing away with the original array object will not remove the data buffer if other views of it still exist.</source>
          <target state="translated">配列への新しいビューは、データバッファのオブジェクト参照カウントが増加することを意味します。元の配列オブジェクトを削除するだけでは、他のビューがまだ存在する場合にはデータバッファは削除されません。</target>
        </trans-unit>
        <trans-unit id="8949ee1ec6ebd06bb3b176ea29d7ed7db2f74765" translate="yes" xml:space="preserve">
          <source>Newline to use when reading text file.</source>
          <target state="translated">テキストファイルを読むときに使用する改行。</target>
        </trans-unit>
        <trans-unit id="50bc63095955b830ba997c7e6236445603ecf3c8" translate="yes" xml:space="preserve">
          <source>Next we create a histogram H with random bin content:</source>
          <target state="translated">次に、ランダムビンの内容を持つヒストグラムHを作成します。</target>
        </trans-unit>
        <trans-unit id="1e57e92090bec2209645d4afb9ffad76205ecb4b" translate="yes" xml:space="preserve">
          <source>Next, an appropriate 1-D loop is selected from the 1-D loops available to the ufunc based on the input array types. This 1-D loop is selected by trying to match the signature of the data-types of the inputs against the available signatures. The signatures corresponding to built-in types are stored in the types member of the ufunc structure. The signatures corresponding to user-defined types are stored in a linked-list of function-information with the head element stored as a &lt;code&gt;CObject&lt;/code&gt; in the userloops dictionary keyed by the data-type number (the first user-defined type in the argument list is used as the key). The signatures are searched until a signature is found to which the input arrays can all be cast safely (ignoring any scalar arguments which are not allowed to determine the type of the result). The implication of this search procedure is that &amp;ldquo;lesser types&amp;rdquo; should be placed below &amp;ldquo;larger types&amp;rdquo; when the signatures are stored. If no 1-D loop is found, then an error is reported. Otherwise, the argument_list is updated with the stored signature &amp;mdash; in case casting is necessary and to fix the output types assumed by the 1-D loop.</source>
          <target state="translated">次に、適切な1-Dループが、入力配列型に基づいてufuncで利用可能な1-Dループから選択されます。この1-Dループは、入力のデータ型のシグネチャを使用可能なシグネチャと照合することによって選択されます。組み込み型に対応する署名は、ufunc構造体の型メンバーに格納されます。ユーザー定義型に対応するシグネチャは、 &lt;code&gt;CObject&lt;/code&gt; として格納されているヘッド要素を持つ関数情報のリンクリストに格納されますデータ型番号をキーとするuserloops辞書内（引数リストの最初のユーザー定義型がキーとして使用されます）。入力配列をすべて安全にキャストできるシグニチャーが見つかるまで、シグニチャーが検索されます（結果のタイプの判別が許可されていないスカラー引数は無視されます）。この検索手順の意味するところは、シグニチャーが保管されるとき、「より少ないタイプ」が「より大きなタイプ」の下に置かれるべきであることです。1次元ループが見つからない場合、エラーが報告されます。それ以外の場合、argument_listは、キャストが必要な場合、および1-Dループで想定される出力タイプを修正するために、格納されているシグネチャで更新されます。</target>
        </trans-unit>
        <trans-unit id="bf186c484ce590fa10a51c09653de8be6d2834d2" translate="yes" xml:space="preserve">
          <source>No &lt;code&gt;__init__&lt;/code&gt; method is needed because the array is fully initialized after the &lt;code&gt;__new__&lt;/code&gt; method.</source>
          <target state="translated">ノー &lt;code&gt;__init__&lt;/code&gt; 配列が完全に後に初期化されるので、この方法が必要とされている &lt;code&gt;__new__&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="9cae83812416c083c256005088174c317c5a449a" translate="yes" xml:space="preserve">
          <source>No copy is performed if the input is already an &lt;code&gt;ndarray&lt;/code&gt;. If &lt;code&gt;a&lt;/code&gt; is a subclass of &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt;&lt;code&gt;MaskedArray&lt;/code&gt;&lt;/a&gt;, a base class &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt;&lt;code&gt;MaskedArray&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">入力がすでに &lt;code&gt;ndarray&lt;/code&gt; である場合、コピーは実行されません。 &lt;code&gt;a&lt;/code&gt; が&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt; &lt;code&gt;MaskedArray&lt;/code&gt; の&lt;/a&gt;サブクラスである場合、基本クラス&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt; &lt;code&gt;MaskedArray&lt;/code&gt; &lt;/a&gt;が返されます。</target>
        </trans-unit>
        <trans-unit id="76323b6da52d7b072aa3d27e6e9d4ecedea40add" translate="yes" xml:space="preserve">
          <source>Non-Fortran files use a separate syntax for defining template blocks that should be repeated using a variable expansion similar to the named repeat rules of the Fortran-specific repeats.</source>
          <target state="translated">非Fortranファイルでは、Fortran固有のリピートの名前付きリピートルールと同様の変数展開を使用してリピートすべきテンプレートブロックを定義するための別の構文を使用しています。</target>
        </trans-unit>
        <trans-unit id="4a8530b9290c7b89c5a133ea25958b92a0343e30" translate="yes" xml:space="preserve">
          <source>Non-centrality parameter, the sum of the squares of the numerator means, must be &amp;gt;= 0.</source>
          <target state="translated">非中心性パラメーター、分子平均の二乗の合計は、&amp;gt; = 0でなければなりません。</target>
        </trans-unit>
        <trans-unit id="9c0b7a927a0015195afa15eb9f2b48afcee390b4" translate="yes" xml:space="preserve">
          <source>Non-centrality, must be non-negative.</source>
          <target state="translated">非中心性、非負でなければならない。</target>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">None</target>
        </trans-unit>
        <trans-unit id="f7041ff08b00120258d466a2faf6be32fb853f32" translate="yes" xml:space="preserve">
          <source>None &amp;ndash; Same as &amp;lsquo;A&amp;rsquo;.</source>
          <target state="translated">なし&amp;ndash;「A」と同じ。</target>
        </trans-unit>
        <trans-unit id="b888371d49cbde0d245f7788f812064eb17c0ad9" translate="yes" xml:space="preserve">
          <source>None of these methods is completely satisfactory if some entries have been marked as invalid. As a general rule, where a representation of the array is required without any masked entries, it is recommended to fill the array with the &lt;a href=&quot;generated/numpy.ma.filled#numpy.ma.filled&quot;&gt;&lt;code&gt;filled&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">一部のエントリが無効としてマークされている場合、これらの方法はどれも完全に満足できるものではありません。原則として、マスクされたエントリなしで配列の表現が必要な場合は、&lt;a href=&quot;generated/numpy.ma.filled#numpy.ma.filled&quot;&gt; &lt;code&gt;filled&lt;/code&gt; &lt;/a&gt;メソッドで配列を埋めることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="d4e8532c794e2fc5caff50dd156382c7720e5446" translate="yes" xml:space="preserve">
          <source>None or no argument: reverses the order of the axes.</source>
          <target state="translated">引数なしまたは引数なし:軸の順序を反転させます。</target>
        </trans-unit>
        <trans-unit id="e47d8eef8570b0e18926c18050534f730ab8e5c8" translate="yes" xml:space="preserve">
          <source>Norm of the matrix or vector(s).</source>
          <target state="translated">行列またはベクトルのノルム.</target>
        </trans-unit>
        <trans-unit id="b8c54e5e1e867a54e9d75697c450f4be835f910e" translate="yes" xml:space="preserve">
          <source>Normalization</source>
          <target state="translated">Normalization</target>
        </trans-unit>
        <trans-unit id="0b0217a85ab435c082afb52e02247358f17b1f00" translate="yes" xml:space="preserve">
          <source>Normalization mode (see &lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt;&lt;code&gt;numpy.fft&lt;/code&gt;&lt;/a&gt;). Default is None.</source>
          <target state="translated">正規化モード（&lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt; &lt;code&gt;numpy.fft&lt;/code&gt; を&lt;/a&gt;参照）。デフォルトはなしです。</target>
        </trans-unit>
        <trans-unit id="d3993a186bf900c9e7069eda8aac128d0fadacaa" translate="yes" xml:space="preserve">
          <source>Normalized covariance matrix</source>
          <target state="translated">正規化共分散行列</target>
        </trans-unit>
        <trans-unit id="dc19d5f7dd31b35abbf5fbcd85986e7c1aaed7a5" translate="yes" xml:space="preserve">
          <source>Normals</source>
          <target state="translated">Normals</target>
        </trans-unit>
        <trans-unit id="0cbceae856b9c0cbd7495596dcc85b9b32547ec4" translate="yes" xml:space="preserve">
          <source>Normals (&lt;a href=&quot;generated/numpy.random.generator.standard_normal#numpy.random.Generator.standard_normal&quot;&gt;&lt;code&gt;standard_normal&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">法線（&lt;a href=&quot;generated/numpy.random.generator.standard_normal#numpy.random.Generator.standard_normal&quot;&gt; &lt;code&gt;standard_normal&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="1f42a8cc1d95dfa1e8aaac37d55ee0fd4cbf72c7" translate="yes" xml:space="preserve">
          <source>Norms and other numbers</source>
          <target state="translated">規範とその他の数字</target>
        </trans-unit>
        <trans-unit id="d624a05adbd192dbe2a67a3ef1a9be0886fcc8bd" translate="yes" xml:space="preserve">
          <source>Not a Number (NaN), positive infinity and negative infinity evaluate to &lt;code&gt;True&lt;/code&gt; because these are not equal to zero.</source>
          <target state="translated">数値（NaN）ではない場合、正の無限大と負の無限大はゼロではないため、 &lt;code&gt;True&lt;/code&gt; と評価されます。</target>
        </trans-unit>
        <trans-unit id="8356fe7ff6e3e49c80008f397fe45e20cb3a2f85" translate="yes" xml:space="preserve">
          <source>Not a Number, positive infinity and negative infinity are considered to be non-finite.</source>
          <target state="translated">数ではなく、正の無限大、負の無限大は非有限とされています。</target>
        </trans-unit>
        <trans-unit id="e52d39123568232ca635480c53e43b0469ba9eab" translate="yes" xml:space="preserve">
          <source>Not a Number, positive infinity and negative infinity.</source>
          <target state="translated">数ではなく、正の無限大と負の無限大。</target>
        </trans-unit>
        <trans-unit id="c846f67ecb1917ec7e71fb5a8684749f42f0bc4f" translate="yes" xml:space="preserve">
          <source>Not implemented (virtual attribute)</source>
          <target state="translated">未実装(仮想属性</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="9afbacf486c94c55e4d034463db7bf2d4c536c67" translate="yes" xml:space="preserve">
          <source>Note : Although tile may be used for broadcasting, it is strongly recommended to use numpy&amp;rsquo;s broadcasting operations and functions.</source>
          <target state="translated">注：タイルはブロードキャストに使用できますが、numpyのブロードキャスト操作と関数を使用することを強くお勧めします。</target>
        </trans-unit>
        <trans-unit id="259d59fbe7f0cc857f345f0e3e7e778ac1aa68e9" translate="yes" xml:space="preserve">
          <source>Note how</source>
          <target state="translated">どのように</target>
        </trans-unit>
        <trans-unit id="af3f83322f07820f94f42dd87d4f38eaa0e197b2" translate="yes" xml:space="preserve">
          <source>Note how in all cases the leading coefficient is always 1.</source>
          <target state="translated">すべての場合において、先行する係数が常に1であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="d26d19110910e4826f9f87789fa949520b0996d8" translate="yes" xml:space="preserve">
          <source>Note how the convolution operator flips the second array before &amp;ldquo;sliding&amp;rdquo; the two across one another:</source>
          <target state="translated">たたみ込み演算子が2つを相互に「スライド」する前に2つ目の配列を反転させる方法に注意してください。</target>
        </trans-unit>
        <trans-unit id="73485c551679de8ea4306656d0c9328c71ffa786" translate="yes" xml:space="preserve">
          <source>Note on string types</source>
          <target state="translated">文字列型に関する注意事項</target>
        </trans-unit>
        <trans-unit id="61b12eb74ee5a29a04ee8a4cf874454eec65e1b8" translate="yes" xml:space="preserve">
          <source>Note that +0 and -0 are distinct floating point numbers, as are +inf and -inf.</source>
          <target state="translated">0と-0は、+infと-infと同様に明確な浮動小数点数であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="413f63febbc514d91f5b20aa1b682b931fd8a13f" translate="yes" xml:space="preserve">
          <source>Note that 3 = 6 / 2!, and that the constants are given in the order of integrations. Constant of the highest-order polynomial term comes first:</source>
          <target state="translated">3=6/2! そして、定数は積分の順に与えられていることに注意してください。最高位の多項式項の定数が最初に来る。</target>
        </trans-unit>
        <trans-unit id="33ed96a05ac01ee77e6588fa7daed4c8d2903c35" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#c.npy_clear_floatstatus_barrier&quot;&gt;&lt;code&gt;npy_clear_floatstatus_barrier&lt;/code&gt;&lt;/a&gt; is preferable as it prevents aggressive compiler optimizations reordering the call relative to the code setting the status, which could lead to incorrect results.</source>
          <target state="translated">注意&lt;a href=&quot;#c.npy_clear_floatstatus_barrier&quot;&gt; &lt;code&gt;npy_clear_floatstatus_barrier&lt;/code&gt; が&lt;/a&gt;、それは誤った結果につながる可能性がある状況を、設定コードに対するコールを並べ替え積極的なコンパイラの最適化を防ぐよう望ましいです。</target>
        </trans-unit>
        <trans-unit id="85b21f1a6771aff0ba6f35f6104e5f5ecceb9fb5" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#c.npy_get_floatstatus_barrier&quot;&gt;&lt;code&gt;npy_get_floatstatus_barrier&lt;/code&gt;&lt;/a&gt; is preferable as it prevents aggressive compiler optimizations reordering the call relative to the code setting the status, which could lead to incorrect results.</source>
          <target state="translated">&lt;a href=&quot;#c.npy_get_floatstatus_barrier&quot;&gt; &lt;code&gt;npy_get_floatstatus_barrier&lt;/code&gt; の方&lt;/a&gt;が、ステータスを設定するコードに関連して呼び出しを並べ替える積極的なコンパイラの最適化を防ぎ、誤った結果につながる可能性があるので、注意してください。</target>
        </trans-unit>
        <trans-unit id="884c974c1824245efec48b1737298664c2d93974" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#numpy.vdot&quot;&gt;&lt;code&gt;vdot&lt;/code&gt;&lt;/a&gt; handles multidimensional arrays differently than &lt;a href=&quot;numpy.dot#numpy.dot&quot;&gt;&lt;code&gt;dot&lt;/code&gt;&lt;/a&gt;: it does &lt;em&gt;not&lt;/em&gt; perform a matrix product, but flattens input arguments to 1-D vectors first. Consequently, it should only be used for vectors.</source>
          <target state="translated">&lt;a href=&quot;#numpy.vdot&quot;&gt; &lt;code&gt;vdot&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;numpy.dot#numpy.dot&quot;&gt; &lt;code&gt;dot&lt;/code&gt; &lt;/a&gt;とは異なる方法で多次元配列を処理することに注意してください。これは行列積を実行しませ&lt;em&gt;ん&lt;/em&gt;が、最初に1次元ベクトルへの入力引数をフラット化します。したがって、これはベクターにのみ使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="43b655e0c3385ff52e0a83639474b14aafde8528" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;generated/numpy.asarray#numpy.asarray&quot;&gt;&lt;code&gt;asarray&lt;/code&gt;&lt;/a&gt; always returns the base-class ndarray. If you are confident that your use of the array object can handle any subclass of an ndarray, then &lt;a href=&quot;generated/numpy.asanyarray#numpy.asanyarray&quot;&gt;&lt;code&gt;asanyarray&lt;/code&gt;&lt;/a&gt; can be used to allow subclasses to propagate more cleanly through your subroutine. In principal a subclass could redefine any aspect of the array and therefore, under strict guidelines, &lt;a href=&quot;generated/numpy.asanyarray#numpy.asanyarray&quot;&gt;&lt;code&gt;asanyarray&lt;/code&gt;&lt;/a&gt; would rarely be useful. However, most subclasses of the array object will not redefine certain aspects of the array object such as the buffer interface, or the attributes of the array. One important example, however, of why your subroutine may not be able to handle an arbitrary subclass of an array is that matrices redefine the &amp;ldquo;*&amp;rdquo; operator to be matrix-multiplication, rather than element-by-element multiplication.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.asarray#numpy.asarray&quot;&gt; &lt;code&gt;asarray&lt;/code&gt; は&lt;/a&gt;常に基本クラスのndarrayを返すことに注意してください。配列オブジェクトを使用してndarrayのすべてのサブクラスを処理できると確信している場合は、&lt;a href=&quot;generated/numpy.asanyarray#numpy.asanyarray&quot;&gt; &lt;code&gt;asanyarray&lt;/code&gt; &lt;/a&gt;を使用して、サブクラスがサブルーチンを通じてよりきれいに伝播できるようにすることができます。原則として、サブクラスは配列のあらゆる側面を再定義できるため、厳密なガイドラインでは、&lt;a href=&quot;generated/numpy.asanyarray#numpy.asanyarray&quot;&gt; &lt;code&gt;asanyarray&lt;/code&gt; &lt;/a&gt;めったに役に立ちません。ただし、配列オブジェクトのほとんどのサブクラスは、バッファーインターフェイスや配列の属性など、配列オブジェクトの特定の側面を再定義しません。ただし、サブルーチンが配列の任意のサブクラスを処理できない理由の1つの重要な例は、行列が「*」演算子を要素ごとの乗算ではなく行列乗算として再定義することです。</target>
        </trans-unit>
        <trans-unit id="2994c8b1000ee96c6bafac35b90d5196f4331cc6" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;numpy.extract#numpy.extract&quot;&gt;&lt;code&gt;extract&lt;/code&gt;&lt;/a&gt; does the exact opposite of &lt;a href=&quot;#numpy.place&quot;&gt;&lt;code&gt;place&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;numpy.extract#numpy.extract&quot;&gt; &lt;code&gt;extract&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;#numpy.place&quot;&gt; &lt;code&gt;place&lt;/code&gt; &lt;/a&gt;正反対を行うことに注意してください。</target>
        </trans-unit>
        <trans-unit id="8afbc898891b0fe68b1eecfbf68a1cf24bd85a7a" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;numpy.place#numpy.place&quot;&gt;&lt;code&gt;place&lt;/code&gt;&lt;/a&gt; does the exact opposite of &lt;a href=&quot;#numpy.extract&quot;&gt;&lt;code&gt;extract&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;numpy.place#numpy.place&quot;&gt; &lt;code&gt;place&lt;/code&gt; &lt;/a&gt;は、&lt;a href=&quot;#numpy.extract&quot;&gt; &lt;code&gt;extract&lt;/code&gt; の&lt;/a&gt;正反対を行うことに注意してください。</target>
        </trans-unit>
        <trans-unit id="4f0cd8ed70085b11cd28942641b9028c9aba83b5" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;config.paths&lt;/code&gt; method is applied to all lists that may contain paths. &lt;code&gt;extra_info&lt;/code&gt; is a dictionary or a list of dictionaries that content will be appended to keyword arguments. The list &lt;code&gt;depends&lt;/code&gt; contains paths to files or directories that the sources of the extension module depend on. If any path in the &lt;code&gt;depends&lt;/code&gt; list is newer than the extension module, then the module will be rebuilt.</source>
          <target state="translated">&lt;code&gt;config.paths&lt;/code&gt; メソッドは、パスを含む可能性のあるすべてのリストに適用されることに注意してください。 &lt;code&gt;extra_info&lt;/code&gt; は、キーワード引数にコンテンツが追加される辞書または辞書のリストです。リスト &lt;code&gt;depends&lt;/code&gt; は、拡張モジュールのソースが依存するファイルまたはディレクトリへのパスが含まれます。 &lt;code&gt;depends&lt;/code&gt; リストのパスが拡張モジュールよりも新しい場合、モジュールは再構築されます。</target>
        </trans-unit>
        <trans-unit id="13ca491ea761bf62a2d2e0b70d53573f8b01deeb" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;mask&lt;/code&gt; is set to &lt;code&gt;nomask&lt;/code&gt; if possible.</source>
          <target state="translated">&lt;code&gt;nomask&lt;/code&gt; 、 &lt;code&gt;mask&lt;/code&gt; はnomaskに設定されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="653a93daba5d03116d06838a5a76a1330934f611" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;str&lt;/code&gt; refers to either null terminated bytes or unicode strings depending on the Python version. In code targeting both Python 2 and 3 &lt;code&gt;np.unicode_&lt;/code&gt; should be used as a dtype for strings. See &lt;a href=&quot;#string-dtype-note&quot;&gt;Note on string types&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;str&lt;/code&gt; は、Pythonのバージョンに応じて、nullで終了するバイトまたはUnicode文字列を指すことに注意してください。両方のPython 2及び3ターゲティングコードで &lt;code&gt;np.unicode_&lt;/code&gt; を文字列のDTYPEとして使用されるべきです。&lt;a href=&quot;#string-dtype-note&quot;&gt;文字列型に関する注意を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="577f40a867da04018fffaab4749ee48c7ab85bee" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;test_&lt;/code&gt; functions or methods should not have a docstring, because that makes it hard to identify the test from the output of running the test suite with &lt;code&gt;verbose=2&lt;/code&gt; (or similar verbosity setting). Use plain comments (&lt;code&gt;#&lt;/code&gt;) if necessary.</source>
          <target state="translated">&lt;code&gt;test_&lt;/code&gt; 関数またはメソッドにはdocstringを含めないでください。verbose &lt;code&gt;verbose=2&lt;/code&gt; （または同様の詳細度設定）でテストスイートを実行した結果からテストを特定することが困難になるためです。必要に応じて、プレーンコメント（ &lt;code&gt;#&lt;/code&gt; ）を使用します。</target>
        </trans-unit>
        <trans-unit id="02e2af0a66e4601c973f5ec5d0ddca41b2da6bef" translate="yes" xml:space="preserve">
          <source>Note that C++ type &lt;code&gt;bool&lt;/code&gt; is not supported in the list in the &lt;a href=&quot;#available-typemaps&quot;&gt;Available Typemaps&lt;/a&gt; section. NumPy bools are a single byte, while the C++ &lt;code&gt;bool&lt;/code&gt; is four bytes (at least on my system). Therefore:</source>
          <target state="translated">C ++の型 &lt;code&gt;bool&lt;/code&gt; は、「&lt;a href=&quot;#available-typemaps&quot;&gt;使用可能なタイプマップ」&lt;/a&gt;セクションのリストではサポートされていないことに注意してください。NumPy &lt;code&gt;bool&lt;/code&gt; は1バイトですが、C ++ ブールは4バイトです（少なくとも私のシステムでは）。したがって：</target>
        </trans-unit>
        <trans-unit id="d6fea2f832bdac55a57e8bcf7203f52e450af3e1" translate="yes" xml:space="preserve">
          <source>Note that NumPy submodules still use a file named &lt;code&gt;info.py&lt;/code&gt; in which the module docstring and &lt;code&gt;__all__&lt;/code&gt; dict are defined. These files will be removed at some point.</source>
          <target state="translated">NumPyサブモジュールは、モジュールdocstringおよび &lt;code&gt;__all__&lt;/code&gt; dictが定義されている &lt;code&gt;info.py&lt;/code&gt; という名前のファイルを引き続き使用することに注意してください。これらのファイルは、ある時点で削除されます。</target>
        </trans-unit>
        <trans-unit id="8d0bc3c9921682280a85d9ad74708f6af3774f00" translate="yes" xml:space="preserve">
          <source>Note that arrays with hard-coded dimensions are not supported. These cannot follow the double pointer signatures of these typemaps.</source>
          <target state="translated">ハードコードされた次元を持つ配列はサポートされていないことに注意してください。これらは,これらの型マップのダブルポインタのシグネチャに従うことはできません.</target>
        </trans-unit>
        <trans-unit id="48706be1cfd595ac0f989289e2a8fb9947cff916" translate="yes" xml:space="preserve">
          <source>Note that as the order of the arguments are reversed, the side must be too. The &lt;a href=&quot;numpy.searchsorted#numpy.searchsorted&quot;&gt;&lt;code&gt;searchsorted&lt;/code&gt;&lt;/a&gt; call is marginally faster, as it does not do any monotonicity checks. Perhaps more importantly, it supports all dtypes.</source>
          <target state="translated">引数の順序が逆になっているため、サイドも逆でなければならないことに注意してください。&lt;a href=&quot;numpy.searchsorted#numpy.searchsorted&quot;&gt; &lt;code&gt;searchsorted&lt;/code&gt; &lt;/a&gt;それはどんな単調性チェックを行いませんのでコールは、わずかに高速です。おそらくもっと重要なことは、すべてのdtypeをサポートすることです。</target>
        </trans-unit>
        <trans-unit id="e4dd030963aaaf3be4bd9f6afb2a54167cbe9671" translate="yes" xml:space="preserve">
          <source>Note that computing a monthly mortgage payment is only one use for this function. For example, pmt returns the periodic deposit one must make to achieve a specified future balance given an initial deposit, a fixed, periodically compounded interest rate, and the total number of periods.</source>
          <target state="translated">毎月の住宅ローンの支払いを計算することは、この関数の用途の一つに過ぎないことに注意してください。例えば pmt は、初回の預金、固定された定期的な複利金利、期間の合計数を指定して、指定した将来の残高を達成するために行わなければならない定期的な預金を返します。</target>
        </trans-unit>
        <trans-unit id="6b262586803e1839adc1dd7ba61528562de1c4dc" translate="yes" xml:space="preserve">
          <source>Note that element</source>
          <target state="translated">要素に注意</target>
        </trans-unit>
        <trans-unit id="3361278c66a9a950ab868f2606daa6d980ba0742" translate="yes" xml:space="preserve">
          <source>Note that fitting polynomial coefficients is inherently badly conditioned when the degree of the polynomial is large or the interval of sample points is badly centered. The quality of the fit should always be checked in these cases. When polynomial fits are not satisfactory, splines may be a good alternative.</source>
          <target state="translated">多項式の次数が大きい場合や、サンプル点の間隔の中心が悪い場合、多項式係数のフィットは本質的に悪い条件付きであることに注意してください。このような場合には、常にフィットの品質をチェックする必要があります。多項式フィットが満足のいくものでない場合は、スプラインがよい代替手段となるかもしれません。</target>
        </trans-unit>
        <trans-unit id="0754d929f5032a758a77b70b619d10e1a6b0a14a" translate="yes" xml:space="preserve">
          <source>Note that for complex numbers, the absolute value is taken before squaring, so that the result is always real and nonnegative.</source>
          <target state="translated">複素数の場合、絶対値は二乗する前に取られるので、結果は常に実数で負ではないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="c532f8402b234b1805dc32ad508ed06d2d992bc4" translate="yes" xml:space="preserve">
          <source>Note that for floating-point input, the mean is computed using the same precision the input has. Depending on the input data, this can cause the results to be inaccurate, especially for &lt;code&gt;float32&lt;/code&gt; (see example below). Specifying a higher-precision accumulator using the &lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; keyword can alleviate this issue.</source>
          <target state="translated">浮動小数点入力の場合、平均は入力と同じ精度を使用して計算されることに注意してください。入力データによっては、特に &lt;code&gt;float32&lt;/code&gt; の場合、結果が不正確になる可能性があります（以下の例を参照）。&lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;キーワードを使用して高精度のアキュムレータを指定すると、この問題を軽減できます。</target>
        </trans-unit>
        <trans-unit id="28ec6b24f09abee0bf153ce2a68e94e6fc60a244" translate="yes" xml:space="preserve">
          <source>Note that for floating-point input, the mean is computed using the same precision the input has. Depending on the input data, this can cause the results to be inaccurate, especially for &lt;code&gt;float32&lt;/code&gt;. Specifying a higher-precision accumulator using the &lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; keyword can alleviate this issue.</source>
          <target state="translated">浮動小数点入力の場合、平均は入力と同じ精度を使用して計算されることに注意してください。入力データによっては、特に &lt;code&gt;float32&lt;/code&gt; の場合、結果が不正確になる可能性があります。&lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;キーワードを使用して高精度のアキュムレータを指定すると、この問題を軽減できます。</target>
        </trans-unit>
        <trans-unit id="9429c3e4d702a779857d710d5ba3d4bb8d91e3db" translate="yes" xml:space="preserve">
          <source>Note that for higher dimensional inserts &lt;code&gt;obj=0&lt;/code&gt; behaves very different from &lt;code&gt;obj=[0]&lt;/code&gt; just like &lt;code&gt;arr[:,0,:] = values&lt;/code&gt; is different from &lt;code&gt;arr[:,[0],:] = values&lt;/code&gt;.</source>
          <target state="translated">より高次元の挿入の場合、 &lt;code&gt;obj=0&lt;/code&gt; は &lt;code&gt;arr[:,0,:] = values&lt;/code&gt; が &lt;code&gt;arr[:,[0],:] = values&lt;/code&gt; :] =値と異なるのと同じように、 &lt;code&gt;obj=[0]&lt;/code&gt; とは非常に異なる動作をすることに注意してください。</target>
        </trans-unit>
        <trans-unit id="64098939d0cc3bd11f1e190ea4842decacbcc08d" translate="yes" xml:space="preserve">
          <source>Note that higher-dimensional arrays are flattened!</source>
          <target state="translated">高次元配列は平坦化されることに注意してください!</target>
        </trans-unit>
        <trans-unit id="18c7921c177ba1f557c86613521ffad6b35f74d0" translate="yes" xml:space="preserve">
          <source>Note that if an operand is given the flag &lt;a href=&quot;#c.NPY_ITER_COPY&quot;&gt;&lt;code&gt;NPY_ITER_COPY&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#c.NPY_ITER_UPDATEIFCOPY&quot;&gt;&lt;code&gt;NPY_ITER_UPDATEIFCOPY&lt;/code&gt;&lt;/a&gt;, a copy will be made in preference to buffering. Buffering will still occur when the array was broadcast so elements need to be duplicated to get a constant stride.</source>
          <target state="translated">オペランドにフラグ&lt;a href=&quot;#c.NPY_ITER_COPY&quot;&gt; &lt;code&gt;NPY_ITER_COPY&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#c.NPY_ITER_UPDATEIFCOPY&quot;&gt; &lt;code&gt;NPY_ITER_UPDATEIFCOPY&lt;/code&gt; &lt;/a&gt;が指定されている場合、バッファリングよりもコピーが作成されることに注意してください。配列がブロードキャストされたときもバッファリングは発生するため、一定のストライドを得るには要素を複製する必要があります。</target>
        </trans-unit>
        <trans-unit id="b29d0e1167132199e264175b7a1e173cb2ad60e1" translate="yes" xml:space="preserve">
          <source>Note that if an uninitialized return array is created, values of False will leave those values &lt;strong&gt;uninitialized&lt;/strong&gt;.</source>
          <target state="translated">初期化されていない戻り配列が作成された場合、値がFalseの場合、それらの値は&lt;strong&gt;初期化さ&lt;/strong&gt;れていないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="e7d909696047578f38bea71bdf411f55070df9d2" translate="yes" xml:space="preserve">
          <source>Note that if the C function signature was in a different order:</source>
          <target state="translated">C関数のシグネチャの順番が違っていた場合に注意してください。</target>
        </trans-unit>
        <trans-unit id="01a168adfe5fe1f5dd6875481bec15e4f9aa1985" translate="yes" xml:space="preserve">
          <source>Note that if you want to do a reduction on an automatically allocated output, you must use &lt;a href=&quot;#c.NpyIter_GetOperandArray&quot;&gt;&lt;code&gt;NpyIter_GetOperandArray&lt;/code&gt;&lt;/a&gt; to get its reference, then set every value to the reduction unit before doing the iteration loop. In the case of a buffered reduction, this means you must also specify the flag &lt;a href=&quot;#c.NPY_ITER_DELAY_BUFALLOC&quot;&gt;&lt;code&gt;NPY_ITER_DELAY_BUFALLOC&lt;/code&gt;&lt;/a&gt;, then reset the iterator after initializing the allocated operand to prepare the buffers.</source>
          <target state="translated">自動的に割り当てられた出力でリダクションを行う場合は、&lt;a href=&quot;#c.NpyIter_GetOperandArray&quot;&gt; &lt;code&gt;NpyIter_GetOperandArray&lt;/code&gt; &lt;/a&gt;を使用してその参照を取得し、反復ループを実行する前にすべての値をリダクションユニットに設定する必要があることに注意してください。バッファリングされたリダクションの場合、これは、フラグ&lt;a href=&quot;#c.NPY_ITER_DELAY_BUFALLOC&quot;&gt; &lt;code&gt;NPY_ITER_DELAY_BUFALLOC&lt;/code&gt; &lt;/a&gt;も指定し、割り当てられたオペランドを初期化した後にイテレータをリセットして、バッファを準備する必要があることを意味します。</target>
        </trans-unit>
        <trans-unit id="2b010bbfdb300bcd389c385bed7ea27b3386f09b" translate="yes" xml:space="preserve">
          <source>Note that in binary 160 = 1010 0000, 64 = 0100 0000, 192 = 1100 0000, and 32 = 0010 0000.</source>
          <target state="translated">バイナリ160=1010 0000、64=0100 0000、192=1100 0000、および32=0010 0000であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="6720060be8821678605a9cb8b96c71daf2200a5d" translate="yes" xml:space="preserve">
          <source>Note that it is not required for &lt;code&gt;__array_function__&lt;/code&gt; implementations to include &lt;em&gt;all&lt;/em&gt; of the corresponding NumPy function&amp;rsquo;s optional arguments (e.g., &lt;code&gt;broadcast_to&lt;/code&gt; above omits the irrelevant &lt;code&gt;subok&lt;/code&gt; argument). Optional arguments are only passed in to &lt;code&gt;__array_function__&lt;/code&gt; if they were explicitly used in the NumPy function call.</source>
          <target state="translated">それはのために必要とされないことを注意 &lt;code&gt;__array_function__&lt;/code&gt; の実装が含まれるように&lt;em&gt;、すべての&lt;/em&gt;対応するnumpyの機能のオプションの引数（例えば、の &lt;code&gt;broadcast_to&lt;/code&gt; 省い上記無関係 &lt;code&gt;subok&lt;/code&gt; の引数）。オプションの引数は、NumPy関数呼び出しで明示的に使用された場合にのみ &lt;code&gt;__array_function__&lt;/code&gt; に渡されます。</target>
        </trans-unit>
        <trans-unit id="401f22bf499be24336e06ca8c727f49552e9ba96" translate="yes" xml:space="preserve">
          <source>Note that it would be more straightforward in the above example to extract the required elements directly with &lt;code&gt;x[:2, :3]&lt;/code&gt;.</source>
          <target state="translated">上記の例では、必要な要素を &lt;code&gt;x[:2, :3]&lt;/code&gt; 直接抽出する方が簡単です。</target>
        </trans-unit>
        <trans-unit id="aaaef84f5e6e416f2f83a03c812a03e6bee63048" translate="yes" xml:space="preserve">
          <source>Note that not all data-type information can be supplied with a type-object: for example, &lt;code&gt;flexible&lt;/code&gt; data-types have a default &lt;em&gt;itemsize&lt;/em&gt; of 0, and require an explicitly given size to be useful.</source>
          <target state="translated">すべてのデータ型情報をtype-objectで提供できるわけではないことに注意してください。たとえば、 &lt;code&gt;flexible&lt;/code&gt; データ型のデフォルトの&lt;em&gt;itemsize&lt;/em&gt;は0であり、有用であるためには明示的に指定されたサイズが必要です。</target>
        </trans-unit>
        <trans-unit id="2e81c263eba620a31c6f05237f30bb45194a05fe" translate="yes" xml:space="preserve">
          <source>Note that once the iterator is closed we can not access &lt;a href=&quot;generated/numpy.nditer.operands#numpy.nditer.operands&quot;&gt;&lt;code&gt;operands&lt;/code&gt;&lt;/a&gt; and must use a reference created inside the context manager.</source>
          <target state="translated">イテレータを閉じると、&lt;a href=&quot;generated/numpy.nditer.operands#numpy.nditer.operands&quot;&gt; &lt;code&gt;operands&lt;/code&gt; &lt;/a&gt;アクセスできなくなり、コンテキストマネージャ内で作成された参照を使用する必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="a0072c6c9282c50699dd3bb094606976a4136251" translate="yes" xml:space="preserve">
          <source>Note that operations on integer scalar types (such as &lt;code&gt;int16&lt;/code&gt;) are handled like floating point, and are affected by these settings.</source>
          <target state="translated">整数スカラー型（ &lt;code&gt;int16&lt;/code&gt; など）の操作は浮動小数点のように処理され、これらの設定の影響を受けることに注意してください。</target>
        </trans-unit>
        <trans-unit id="09f50c6ff377ac0a2ca64d0c66fbaa9d2065ec9a" translate="yes" xml:space="preserve">
          <source>Note that some examples may use &lt;code&gt;None&lt;/code&gt; instead of &lt;code&gt;np.newaxis&lt;/code&gt;. These are the same objects:</source>
          <target state="translated">一部の例では、 &lt;code&gt;np.newaxis&lt;/code&gt; の代わりに &lt;code&gt;None&lt;/code&gt; を使用している場合があることに注意してください。これらは同じオブジェクトです：</target>
        </trans-unit>
        <trans-unit id="ffa9fecdeba09a0f43a75d04eeb01c1da54d7720" translate="yes" xml:space="preserve">
          <source>Note that sorting is first according to the elements of &lt;code&gt;a&lt;/code&gt;. Secondary sorting is according to the elements of &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">ソートは、第一の要素に応じてあることに留意されたいです。二次ソートは &lt;code&gt;b&lt;/code&gt; の要素に従います。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2ab2cbf3d7d05721e26131cbe4f74f5e6c689750" translate="yes" xml:space="preserve">
          <source>Note that the above may not produce exact integers:</source>
          <target state="translated">上記では正確な整数が出てこない場合があるので注意してください。</target>
        </trans-unit>
        <trans-unit id="816b54542ce937e025129bb5a02d396360440696" translate="yes" xml:space="preserve">
          <source>Note that the covariance matrix must be positive semidefinite (a.k.a. nonnegative-definite). Otherwise, the behavior of this method is undefined and backwards compatibility is not guaranteed.</source>
          <target state="translated">共分散行列は,正の半定値(別名,非負定値)でなければならないことに注意してください.そうでない場合,このメソッドの動作は未定義であり,下位互換性は保証されません.</target>
        </trans-unit>
        <trans-unit id="51fdfec7c0c161ff5cf20da12ebf59920f92cef4" translate="yes" xml:space="preserve">
          <source>Note that the order in which the diagonal is filled varies depending on the flip function.</source>
          <target state="translated">対角線を埋める順番はフリップ関数によって異なるので注意が必要です。</target>
        </trans-unit>
        <trans-unit id="724f6e013fa8829f11659c1f81abf24921dbd546" translate="yes" xml:space="preserve">
          <source>Note that the order in which the diagonal is retrieved varies depending on the flip function.</source>
          <target state="translated">対角線の取得順序はフリップ関数によって異なることに注意してください。</target>
        </trans-unit>
        <trans-unit id="a99c18cf39a32483fd943f4224186f409906587f" translate="yes" xml:space="preserve">
          <source>Note that the output of &lt;a href=&quot;generated/numpy.ma.compressed#numpy.ma.compressed&quot;&gt;&lt;code&gt;compressed&lt;/code&gt;&lt;/a&gt; is always 1D.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ma.compressed#numpy.ma.compressed&quot;&gt; &lt;code&gt;compressed&lt;/code&gt; &lt;/a&gt;の出力は常に1D であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="fe6f42e3829661cf63ecd7296a8f95be4fb61504" translate="yes" xml:space="preserve">
          <source>Note that the result of each integration is &lt;em&gt;multiplied&lt;/em&gt; by &lt;code&gt;scl&lt;/code&gt;. Why is this important to note? Say one is making a linear change of variable</source>
          <target state="translated">各積分の結果は &lt;code&gt;scl&lt;/code&gt; で&lt;em&gt;乗算&lt;/em&gt;されることに注意してください。なぜこれが重要なのですか？変数の線形変更を行っているとしましょう</target>
        </trans-unit>
        <trans-unit id="87d64ab0ec81404f96e3a3fd6a0cf4af1b48cd4a" translate="yes" xml:space="preserve">
          <source>Note that the result shape is identical to the (broadcast) indexing array shapes &lt;code&gt;ind_1, ..., ind_N&lt;/code&gt;.</source>
          <target state="translated">結果の形状は（ブロードキャスト）インデックス配列の形状 &lt;code&gt;ind_1, ..., ind_N&lt;/code&gt; と同じであることに注意してください。</target>
        </trans-unit>
        <trans-unit id="970776667a9fe553514eecc1dd1a72278348d24e" translate="yes" xml:space="preserve">
          <source>Note that the scalar types are not &lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; objects, even though they can be used in place of one whenever a data type specification is needed in NumPy.</source>
          <target state="translated">スカラー型は&lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;オブジェクトではないことに注意してください。NumPyでデータ型の指定が必要な場合は、スカラー型をdtypeオブジェクトの代わりに使用できます。</target>
        </trans-unit>
        <trans-unit id="c59a59639135c22037a5377f994f5afdc88bff2a" translate="yes" xml:space="preserve">
          <source>Note that the strided-copy and strided-cast code are deeply intertwined and so any arrays being processed by them must be both uint and true aligned, even though the copy-code only needs uint alignment and the cast code only true alignment. If there is ever a big rewrite of this code it would be good to allow them to use different alignments.</source>
          <target state="translated">strided-copy コードと strided-cast コードは深く絡み合っているので、コピーコードは uint アライメントのみ、キャストコードは true アライメントのみを必要とするにもかかわらず、それらによって処理される配列はすべて uint と true アライメントの両方でなければならないことに注意してください。もしこのコードの大規模な書き換えが行われることがあれば、異なるアラインメントを使用できるようにするのが良いでしょう。</target>
        </trans-unit>
        <trans-unit id="f3272a5f558b3fab42d4539ad3dc738bcb4ce852" translate="yes" xml:space="preserve">
          <source>Note that there are three parts to the long version of the printout. The first is the coefficients, the second is the domain, and the third is the window:</source>
          <target state="translated">長いバージョンのプリントアウトには3つの部分があることに注意してください。1つ目は係数、2つ目はドメイン、3つ目はウィンドウです。</target>
        </trans-unit>
        <trans-unit id="3a9c78ac3abf35e5e3337780f5e62c12c7df494d" translate="yes" xml:space="preserve">
          <source>Note that this distribution is very similar to the binomial distribution, except that in this case, samples are drawn without replacement, whereas in the Binomial case samples are drawn with replacement (or the sample space is infinite). As the sample space becomes large, this distribution approaches the binomial.</source>
          <target state="translated">この分布は,二項分布に非常に似ていることに注意してください.この場合,二項分布の場合は,サンプルが置換されずに描かれるのに対し,二項分布の場合は,サンプルが置換されて描かれる(またはサンプル空間が無限である).標本空間が大きくなるにつれて,この分布は二項分布に近づきます.</target>
        </trans-unit>
        <trans-unit id="207f864735403916ab64725fc35836347eea06c9" translate="yes" xml:space="preserve">
          <source>Note that unlike &lt;code&gt;data_as&lt;/code&gt;, a reference will not be kept to the array: code like &lt;code&gt;ctypes.c_void_p((a + b).ctypes.data)&lt;/code&gt; will result in a pointer to a deallocated array, and should be spelt &lt;code&gt;(a + b).ctypes.data_as(ctypes.c_void_p)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;data_as&lt;/code&gt; とは異なり、配列への参照は保持されないことに注意してください &lt;code&gt;ctypes.c_void_p((a + b).ctypes.data)&lt;/code&gt; ようなコードは、割り当て解除された配列へのポインターとなり、スペルが &lt;code&gt;(a + b).ctypes.data_as(ctypes.c_void_p)&lt;/code&gt; 必要があります。.ctypes.data_as（ctypes.c_void_p）</target>
        </trans-unit>
        <trans-unit id="fa5eae61b870cb56e093988870d6dd9877647aa6" translate="yes" xml:space="preserve">
          <source>Note that unlike &lt;code&gt;numpy.ndarray&lt;/code&gt;, &lt;code&gt;ArrayLike&lt;/code&gt; does not allow operations with arbitrary, unrecognized types. This ensures that interactions with ArrayLike preserve a well-defined casting hierarchy.</source>
          <target state="translated">&lt;code&gt;numpy.ndarray&lt;/code&gt; とは異なり、 &lt;code&gt;ArrayLike&lt;/code&gt; は、認識されない任意の型の操作を許可しないことに注意してください。これにより、ArrayLikeとの対話が明確に定義されたキャスト階層を確実に保持します。</target>
        </trans-unit>
        <trans-unit id="6653eb59198778eef2da729298a76ec147105c9f" translate="yes" xml:space="preserve">
          <source>Note that we picked datetimes that cross a DST boundary. Passing in a &lt;code&gt;pytz&lt;/code&gt; timezone object will print the appropriate offset</source>
          <target state="translated">DSTの境界を越える日時を選択したことに注意してください。 &lt;code&gt;pytz&lt;/code&gt; タイムゾーンオブジェクトを渡すと、適切なオフセットが出力されます</target>
        </trans-unit>
        <trans-unit id="ff6a8871cdaa44abafcf71b9b33d5e54dbc5be42" translate="yes" xml:space="preserve">
          <source>Note that we support &lt;code&gt;DATA_TYPE*&lt;/code&gt; argout typemaps in 1D, but not 2D or 3D. This is because of a quirk with the &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; typemap syntax and cannot be avoided. Note that for these types of 1D typemaps, the Python function will take a single argument representing &lt;code&gt;DIM1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DATA_TYPE*&lt;/code&gt; argoutタイプマップは1Dでサポートされていますが、2Dまたは3Dではサポートされていないことに注意してください。これは、&lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt;タイプマップ構文の癖のためであり、回避できません。これらのタイプの1Dタイプマップの場合、Python関数は &lt;code&gt;DIM1&lt;/code&gt; を表す単一の引数を取ります。</target>
        </trans-unit>
        <trans-unit id="11034ab53fb8599a1310cf4207146288e154fc02" translate="yes" xml:space="preserve">
          <source>Note that when &lt;code&gt;a == 1&lt;/code&gt;, the normalization factor &lt;code&gt;v1 / (v1**2 - ddof * v2)&lt;/code&gt; goes over to &lt;code&gt;1 / (np.sum(f) - ddof)&lt;/code&gt; as it should.</source>
          <target state="translated">そのノート &lt;code&gt;a == 1&lt;/code&gt; 、正規化因子 &lt;code&gt;v1 / (v1**2 - ddof * v2)&lt;/code&gt; にオーバー移行 &lt;code&gt;1 / (np.sum(f) - ddof)&lt;/code&gt; 、それが必要として。</target>
        </trans-unit>
        <trans-unit id="ee0fb9212f997bf3174d26345ac37f18f11183de" translate="yes" xml:space="preserve">
          <source>Note that without the &lt;code&gt;np.ix_&lt;/code&gt; call, only the diagonal elements would be selected, as was used in the previous example. This difference is the most important thing to remember about indexing with multiple advanced indexes.</source>
          <target state="translated">前の例で使用したように、 &lt;code&gt;np.ix_&lt;/code&gt; 呼び出しがないと、対角要素のみが選択されることに注意してください。この違いは、複数の高度なインデックスを使用したインデックス作成について覚えておくべき最も重要なことです。</target>
        </trans-unit>
        <trans-unit id="7b3edd40f42578284bf324094d774023e21eda09" translate="yes" xml:space="preserve">
          <source>Note that you get the time reversed, complex conjugated result when the two input sequences change places, i.e., &lt;code&gt;c_{va}[k] = c^{*}_{av}[-k]&lt;/code&gt;:</source>
          <target state="translated">2つの入力シーケンスが場所を変えると、時間が反転した複素共役の結果が得られることに注意してください。つまり、 &lt;code&gt;c_{va}[k] = c^{*}_{av}[-k]&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ba5c8fb85c6ca6f109e49af951ef9e99c064bb30" translate="yes" xml:space="preserve">
          <source>Note that, for complex numbers, &lt;a href=&quot;#numpy.std&quot;&gt;&lt;code&gt;std&lt;/code&gt;&lt;/a&gt; takes the absolute value before squaring, so that the result is always real and nonnegative.</source>
          <target state="translated">複素数の場合、&lt;a href=&quot;#numpy.std&quot;&gt; &lt;code&gt;std&lt;/code&gt; &lt;/a&gt;は2乗する前に絶対値を取るため、結果は常に実数で非負になることに注意してください。</target>
        </trans-unit>
        <trans-unit id="67ff0ed45eb77e75fcc2a8d19c65a90ea73589bb" translate="yes" xml:space="preserve">
          <source>Note that, for complex numbers, &lt;a href=&quot;numpy.std#numpy.std&quot;&gt;&lt;code&gt;std&lt;/code&gt;&lt;/a&gt; takes the absolute value before squaring, so that the result is always real and nonnegative.</source>
          <target state="translated">複素数の場合、&lt;a href=&quot;numpy.std#numpy.std&quot;&gt; &lt;code&gt;std&lt;/code&gt; &lt;/a&gt;は2乗する前に絶対値を取るため、結果は常に実数で非負になることに注意してください。</target>
        </trans-unit>
        <trans-unit id="65e93cf7b4b44a5b77a394d19e4276d3eaadfbbd" translate="yes" xml:space="preserve">
          <source>Note that, in the old API that was deprecated in version 1.7, this function had the return type &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">バージョン1.7で廃止された古いAPIでは、この関数の戻り値の型は &lt;code&gt;int&lt;/code&gt; であったことに注意してください。</target>
        </trans-unit>
        <trans-unit id="c60913e9a1e7e3a8383e344378c5f7011cb280cd" translate="yes" xml:space="preserve">
          <source>Note that, when we modify x, y changes, but not z:</source>
          <target state="translated">x を修正すると y は変化しますが、z は変化しないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="7868473a32c7a3c40bb3a312d03eac57c7a37527" translate="yes" xml:space="preserve">
          <source>Note the order of the parameters. &lt;a href=&quot;#numpy.arctan2&quot;&gt;&lt;code&gt;arctan2&lt;/code&gt;&lt;/a&gt; is defined also when &lt;code&gt;x2&lt;/code&gt; = 0 and at several other special points, obtaining values in the range &lt;code&gt;[-pi, pi]&lt;/code&gt;:</source>
          <target state="translated">パラメータの順序に注意してください。&lt;a href=&quot;#numpy.arctan2&quot;&gt; &lt;code&gt;arctan2&lt;/code&gt; &lt;/a&gt;は、 &lt;code&gt;x2&lt;/code&gt; = 0で、他のいくつかの特別なポイントでも定義され、 &lt;code&gt;[-pi, pi]&lt;/code&gt; 範囲の値を取得します。</target>
        </trans-unit>
        <trans-unit id="3999859e7edf0b6850997e2b685c81e41f6bf30b" translate="yes" xml:space="preserve">
          <source>Note the unusual interpretation of sample when an array_like:</source>
          <target state="translated">array_likeの時のsampleの異常な解釈に注意してください。</target>
        </trans-unit>
        <trans-unit id="111feaa1cd8151a1eb25cfbf746ea648c6673cdc" translate="yes" xml:space="preserve">
          <source>Note: Prior to NumPy 1.10.0, less strict checks were in place: missing core dimensions were created by prepending 1&amp;rsquo;s to the shape as necessary, core dimensions with the same label were broadcast together, and undetermined dimensions were created with size 1.</source>
          <target state="translated">注：NumPy 1.10.0より前のバージョンでは、厳密なチェックが行われていませんでした。欠けているコア寸法は、必要に応じて形状に1を付加することで作成され、同じラベルのコア寸法は一緒にブロードキャストされ、未決定の寸法はサイズ1で作成されました。</target>
        </trans-unit>
        <trans-unit id="d21079fa664fe20f0bcb604959e5d77d12a5f0cb" translate="yes" xml:space="preserve">
          <source>Note: This function returns an array with at least one-dimension (1-d) so it will not preserve 0-d arrays.</source>
          <target state="translated">注意:この関数は,少なくとも1次元(1次元)の配列を返すので,0次元配列は保存されません.</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="9c3befe7e22c8667bc957541f49b0ee79970b588" translate="yes" xml:space="preserve">
          <source>Notes:</source>
          <target state="translated">Notes:</target>
        </trans-unit>
        <trans-unit id="f57a8f12c91535f8b3bf8808e86d3137e06887d9" translate="yes" xml:space="preserve">
          <source>Nothing happens if &lt;code&gt;a&lt;/code&gt; is not a masked array.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; がマスクされた配列でない場合は何も起こりません。</target>
        </trans-unit>
        <trans-unit id="a10912bd64eec5f116a9c3fe1369faded07c9f4b" translate="yes" xml:space="preserve">
          <source>Nothing returned by this function.</source>
          <target state="translated">この関数が返すものは何もありません。</target>
        </trans-unit>
        <trans-unit id="184b0a59161cac7480934a6869880704e9ffc1c5" translate="yes" xml:space="preserve">
          <source>Notice how the final element of the &lt;a href=&quot;numpy.fft.fft#numpy.fft.fft&quot;&gt;&lt;code&gt;fft&lt;/code&gt;&lt;/a&gt; output is the complex conjugate of the second element, for real input. For &lt;a href=&quot;#numpy.fft.rfft&quot;&gt;&lt;code&gt;rfft&lt;/code&gt;&lt;/a&gt;, this symmetry is exploited to compute only the non-negative frequency terms.</source>
          <target state="translated">実際の入力に対して、&lt;a href=&quot;numpy.fft.fft#numpy.fft.fft&quot;&gt; &lt;code&gt;fft&lt;/code&gt; &lt;/a&gt;出力の最後の要素が2番目の要素の複素共役であることに注意してください。&lt;a href=&quot;#numpy.fft.rfft&quot;&gt; &lt;code&gt;rfft&lt;/code&gt; &lt;/a&gt;、この対称性は、唯一の非負の周波数項を計算するために利用されます。</target>
        </trans-unit>
        <trans-unit id="9d24afb4770f955e79718f663c68d81c2708b5a7" translate="yes" xml:space="preserve">
          <source>Notice how the last term in the input to the ordinary &lt;a href=&quot;numpy.fft.ifft#numpy.fft.ifft&quot;&gt;&lt;code&gt;ifft&lt;/code&gt;&lt;/a&gt; is the complex conjugate of the second term, and the output has zero imaginary part everywhere. When calling &lt;a href=&quot;#numpy.fft.irfft&quot;&gt;&lt;code&gt;irfft&lt;/code&gt;&lt;/a&gt;, the negative frequencies are not specified, and the output array is purely real.</source>
          <target state="translated">通常の&lt;a href=&quot;numpy.fft.ifft#numpy.fft.ifft&quot;&gt; &lt;code&gt;ifft&lt;/code&gt; &lt;/a&gt;への入力の最後の項が2番目の項の複素共役であり、出力のどこにも虚数部がないことに注意してください。&lt;a href=&quot;#numpy.fft.irfft&quot;&gt; &lt;code&gt;irfft&lt;/code&gt; を&lt;/a&gt;呼び出すとき、負の周波数は指定されておらず、出力配列は純粋に実数です。</target>
        </trans-unit>
        <trans-unit id="0cb564d7e3f343c55b0fae22523656706209711d" translate="yes" xml:space="preserve">
          <source>Notice that the above 3 flags are defined so that a new, well- behaved array has these flags defined as true.</source>
          <target state="translated">上の3つのフラグが定義されていることに注目してください.</target>
        </trans-unit>
        <trans-unit id="847535dd495885c3e2ed82b62e1abcb626ece607" translate="yes" xml:space="preserve">
          <source>Notice that the initial value is used as one of the elements for which the maximum is determined, unlike for the default argument Python&amp;rsquo;s max function, which is only used for empty iterables.</source>
          <target state="translated">空の反復可能オブジェクトにのみ使用されるデフォルトの引数Pythonのmax関数とは異なり、初期値は最大値が決定される要素の1つとして使用されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="98ab17cc2cf9317019aeddb2bbabfef19cd3a629" translate="yes" xml:space="preserve">
          <source>Notice that the initial value is used as one of the elements for which the minimum is determined, unlike for the default argument Python&amp;rsquo;s max function, which is only used for empty iterables.</source>
          <target state="translated">空の反復可能オブジェクトにのみ使用されるデフォルトの引数Pythonのmax関数とは異なり、初期値は最小値が決定される要素の1つとして使用されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="8b99552cfe5ebf21e89509d47400467670883a7d" translate="yes" xml:space="preserve">
          <source>Notice that this isn&amp;rsquo;t the same as Python&amp;rsquo;s &lt;code&gt;default&lt;/code&gt; argument.</source>
          <target state="translated">これはPythonの &lt;code&gt;default&lt;/code&gt; 引数と同じではないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="a4854dca388c79f7bb12e14a8a161b7a492c001a" translate="yes" xml:space="preserve">
          <source>Now multiply a diagonal matrix by &lt;code&gt;Q&lt;/code&gt; on one side and by &lt;code&gt;Q.T&lt;/code&gt; on the other:</source>
          <target state="translated">ここで、対角行列に片側の &lt;code&gt;Q&lt;/code&gt; と反対側の &lt;code&gt;Q.T&lt;/code&gt; を乗算します。</target>
        </trans-unit>
        <trans-unit id="653b19d1d4883b62177051122cc7aeebf0172920" translate="yes" xml:space="preserve">
          <source>Now returns an empty list instead of None for a fully masked array</source>
          <target state="translated">完全にマスクされた配列の場合、Noneではなく空のリストを返すようになりました。</target>
        </trans-unit>
        <trans-unit id="1f39ae5d13c5ad14506d67df0c86ac586848a064" translate="yes" xml:space="preserve">
          <source>Now we can iterate over &lt;code&gt;a_itor&lt;/code&gt;, and it will return arrays of size two. Since &lt;code&gt;buf_size&lt;/code&gt; was smaller than any dimension, the first dimension will be iterated over first:</source>
          <target state="translated">これで &lt;code&gt;a_itor&lt;/code&gt; を反復処理でき、サイズ2の配列が返されます。 &lt;code&gt;buf_size&lt;/code&gt; はどの次元よりも小さいため、最初の次元が最初に反復されます。</target>
        </trans-unit>
        <trans-unit id="2ae5aab236f57788a41324d9fac04d9f996796fb" translate="yes" xml:space="preserve">
          <source>Now you can do the following to test your module:</source>
          <target state="translated">これで、以下のようにしてモジュールをテストすることができます。</target>
        </trans-unit>
        <trans-unit id="4103944902505e88c56a448e8658e10eed8eb1b4" translate="yes" xml:space="preserve">
          <source>Now, do one experiment throwing the dice 10 time, and 10 times again, and another throwing the dice 20 times, and 20 times again:</source>
          <target state="translated">さて、サイコロを10回投げて、また10回投げて、また20回投げて、また20回投げて、1つの実験をしてみてください。</target>
        </trans-unit>
        <trans-unit id="8a0435f8dfb75dd633a8592e953b3a61869c66ed" translate="yes" xml:space="preserve">
          <source>Now, throw the dice 20 times, and 20 times again:</source>
          <target state="translated">さて、サイコロを20回投げて、また20回。</target>
        </trans-unit>
        <trans-unit id="53a0393525e01988d9f9cb1a6b35b57bda883e2e" translate="yes" xml:space="preserve">
          <source>Now, we create indices to manipulate a 3-D array:</source>
          <target state="translated">ここでは、3次元配列を操作するためのインデックスを作成します。</target>
        </trans-unit>
        <trans-unit id="34a30eac154cabdf7a90e0db5f0c2478a5065e89" translate="yes" xml:space="preserve">
          <source>NpyAuxData_CloneFunc</source>
          <target state="translated">NpyAuxData_CloneFunc</target>
        </trans-unit>
        <trans-unit id="4c4fef0ec03464a7b11bd65b370680102da32d76" translate="yes" xml:space="preserve">
          <source>NpyAuxData_FreeFunc</source>
          <target state="translated">NpyAuxData_FreeFunc</target>
        </trans-unit>
        <trans-unit id="4e3a83bac5637b7f866d954fa04d5054091c36cc" translate="yes" xml:space="preserve">
          <source>NpyIter</source>
          <target state="translated">NpyIter</target>
        </trans-unit>
        <trans-unit id="8af20c5dee7afb2fdfe083ea49a8e985dcebda12" translate="yes" xml:space="preserve">
          <source>NpyIter_AdvancedNew()</source>
          <target state="translated">NpyIter_AdvancedNew()</target>
        </trans-unit>
        <trans-unit id="b997b8b2b511720cd1069c024299823f83302c9e" translate="yes" xml:space="preserve">
          <source>NpyIter_Copy()</source>
          <target state="translated">NpyIter_Copy()</target>
        </trans-unit>
        <trans-unit id="3fb78c3f62b576c1af874d751640db8eff8c9979" translate="yes" xml:space="preserve">
          <source>NpyIter_CreateCompatibleStrides()</source>
          <target state="translated">NpyIter_CreateCompatibleStrides()</target>
        </trans-unit>
        <trans-unit id="6ad45ab8ae95fe7da10aaac502dcfd57dbf572fa" translate="yes" xml:space="preserve">
          <source>NpyIter_Deallocate()</source>
          <target state="translated">NpyIter_Deallocate()</target>
        </trans-unit>
        <trans-unit id="e39e8d7265758ca02d07e1e363c5debc0123f813" translate="yes" xml:space="preserve">
          <source>NpyIter_EnableExternalLoop()</source>
          <target state="translated">NpyIter_EnableExternalLoop()</target>
        </trans-unit>
        <trans-unit id="bb2c139e38956ebdf5ce855ccf3149ea641f8b05" translate="yes" xml:space="preserve">
          <source>NpyIter_GetAxisStrideArray()</source>
          <target state="translated">NpyIter_GetAxisStrideArray()</target>
        </trans-unit>
        <trans-unit id="1c71d1d0e6fd6d70024c7dd931246be434c73502" translate="yes" xml:space="preserve">
          <source>NpyIter_GetBufferSize()</source>
          <target state="translated">NpyIter_GetBufferSize()</target>
        </trans-unit>
        <trans-unit id="87a85869fc34454e6204a9b83263efd25b3b19a8" translate="yes" xml:space="preserve">
          <source>NpyIter_GetDataPtrArray()</source>
          <target state="translated">NpyIter_GetDataPtrArray()</target>
        </trans-unit>
        <trans-unit id="62cedbb3cbc591b2ae980b3bc6c8c39f71d0c16b" translate="yes" xml:space="preserve">
          <source>NpyIter_GetDescrArray()</source>
          <target state="translated">NpyIter_GetDescrArray()</target>
        </trans-unit>
        <trans-unit id="4d029059dda4dad1438f1bd80a75d454f99834d6" translate="yes" xml:space="preserve">
          <source>NpyIter_GetGetMultiIndex()</source>
          <target state="translated">NpyIter_GetGetMultiIndex()</target>
        </trans-unit>
        <trans-unit id="66611101d6de9d68cce0bd7a8cf2f113e7678aaf" translate="yes" xml:space="preserve">
          <source>NpyIter_GetIndexPtr()</source>
          <target state="translated">NpyIter_GetIndexPtr()</target>
        </trans-unit>
        <trans-unit id="cca4420e7f21331a3412d9afdd62effd1a37e0d5" translate="yes" xml:space="preserve">
          <source>NpyIter_GetInitialDataPtrArray()</source>
          <target state="translated">NpyIter_GetInitialDataPtrArray()</target>
        </trans-unit>
        <trans-unit id="3e2852a223ce3a2b4862d0d75cd1f8c82ebb096d" translate="yes" xml:space="preserve">
          <source>NpyIter_GetInnerFixedStrideArray()</source>
          <target state="translated">NpyIter_GetInnerFixedStrideArray()</target>
        </trans-unit>
        <trans-unit id="a28fb690d09a18949fd479bfd69414cd7025ffd8" translate="yes" xml:space="preserve">
          <source>NpyIter_GetInnerLoopSizePtr()</source>
          <target state="translated">NpyIter_GetInnerLoopSizePtr()</target>
        </trans-unit>
        <trans-unit id="459e9e1f94992501dfb6860694a283afdd8b7cd8" translate="yes" xml:space="preserve">
          <source>NpyIter_GetInnerStrideArray()</source>
          <target state="translated">NpyIter_GetInnerStrideArray()</target>
        </trans-unit>
        <trans-unit id="2b51d4d2bf86336410a4e52bb5d565c6529f946c" translate="yes" xml:space="preserve">
          <source>NpyIter_GetIterIndex()</source>
          <target state="translated">NpyIter_GetIterIndex()</target>
        </trans-unit>
        <trans-unit id="46f9917bbb45a59125169b7d51e52942d1ae839d" translate="yes" xml:space="preserve">
          <source>NpyIter_GetIterIndexRange()</source>
          <target state="translated">NpyIter_GetIterIndexRange()</target>
        </trans-unit>
        <trans-unit id="e7b47088c34a7caf54317e4c555ce5eeee306bf9" translate="yes" xml:space="preserve">
          <source>NpyIter_GetIterSize()</source>
          <target state="translated">NpyIter_GetIterSize()</target>
        </trans-unit>
        <trans-unit id="b37332e2ac83c27d275077f93c1a5465ad79ccdf" translate="yes" xml:space="preserve">
          <source>NpyIter_GetIterView()</source>
          <target state="translated">NpyIter_GetIterView()</target>
        </trans-unit>
        <trans-unit id="260ac3818c138694453f685279c2631308cb9db4" translate="yes" xml:space="preserve">
          <source>NpyIter_GetMultiIndexFunc</source>
          <target state="translated">NpyIter_GetMultiIndexFunc</target>
        </trans-unit>
        <trans-unit id="8e9bba8a229eb928a91402e6ca604c155e3edd64" translate="yes" xml:space="preserve">
          <source>NpyIter_GetNDim()</source>
          <target state="translated">NpyIter_GetNDim()</target>
        </trans-unit>
        <trans-unit id="50db8bb821c577506b545754506219ead592b053" translate="yes" xml:space="preserve">
          <source>NpyIter_GetNOp()</source>
          <target state="translated">NpyIter_GetNOp()</target>
        </trans-unit>
        <trans-unit id="3af90f6f35483cf45c99c7df56d9615992da54dd" translate="yes" xml:space="preserve">
          <source>NpyIter_GetOperandArray()</source>
          <target state="translated">NpyIter_GetOperandArray()</target>
        </trans-unit>
        <trans-unit id="a30bb289b8e86739e36ea60928a2ed64312d2fec" translate="yes" xml:space="preserve">
          <source>NpyIter_GetReadFlags()</source>
          <target state="translated">NpyIter_GetReadFlags()</target>
        </trans-unit>
        <trans-unit id="9c3fe550cadce766e0ebaa92151a7d483873ef4a" translate="yes" xml:space="preserve">
          <source>NpyIter_GetShape()</source>
          <target state="translated">NpyIter_GetShape()</target>
        </trans-unit>
        <trans-unit id="acd9a2ff8ce509672e11ffa76fdbabff9b0c7181" translate="yes" xml:space="preserve">
          <source>NpyIter_GetWriteFlags()</source>
          <target state="translated">NpyIter_GetWriteFlags()</target>
        </trans-unit>
        <trans-unit id="d3120c654191cddf0b70bae47a341b3c86669393" translate="yes" xml:space="preserve">
          <source>NpyIter_GotoIndex()</source>
          <target state="translated">NpyIter_GotoIndex()</target>
        </trans-unit>
        <trans-unit id="4f1654c5ff8fe66cc2194f6b61e83a8e796fe628" translate="yes" xml:space="preserve">
          <source>NpyIter_GotoIterIndex()</source>
          <target state="translated">NpyIter_GotoIterIndex()</target>
        </trans-unit>
        <trans-unit id="d041142525a40cf564e2e7e029c65f6509b0a323" translate="yes" xml:space="preserve">
          <source>NpyIter_GotoMultiIndex()</source>
          <target state="translated">NpyIter_GotoMultiIndex()</target>
        </trans-unit>
        <trans-unit id="ed0864809f09d890d29d15054f92994f033a3f43" translate="yes" xml:space="preserve">
          <source>NpyIter_HasDelayedBufAlloc()</source>
          <target state="translated">NpyIter_HasDelayedBufAlloc()</target>
        </trans-unit>
        <trans-unit id="02c750ba9fcfc1c225387cebcaf21e29ccbc7ab1" translate="yes" xml:space="preserve">
          <source>NpyIter_HasExternalLoop()</source>
          <target state="translated">NpyIter_HasExternalLoop()</target>
        </trans-unit>
        <trans-unit id="1495f8b014a812b7d5168151357e69d6e80056fa" translate="yes" xml:space="preserve">
          <source>NpyIter_HasIndex()</source>
          <target state="translated">NpyIter_HasIndex()</target>
        </trans-unit>
        <trans-unit id="ca93af25bd286e2ffe55a87884c419afcd79bfcd" translate="yes" xml:space="preserve">
          <source>NpyIter_HasMultiIndex()</source>
          <target state="translated">NpyIter_HasMultiIndex()</target>
        </trans-unit>
        <trans-unit id="476b949116e329f3c582aec5e76ce2e141633429" translate="yes" xml:space="preserve">
          <source>NpyIter_IsBuffered()</source>
          <target state="translated">NpyIter_IsBuffered()</target>
        </trans-unit>
        <trans-unit id="0e9bbd57db7393e50498619291fc91b81f37f813" translate="yes" xml:space="preserve">
          <source>NpyIter_IsFirstVisit()</source>
          <target state="translated">NpyIter_IsFirstVisit()</target>
        </trans-unit>
        <trans-unit id="1f0a2dba542604a7f3103127f1353c17a14acca2" translate="yes" xml:space="preserve">
          <source>NpyIter_IsGrowInner()</source>
          <target state="translated">NpyIter_IsGrowInner()</target>
        </trans-unit>
        <trans-unit id="89d075475c669dbbf16b180a78f6a538e870d992" translate="yes" xml:space="preserve">
          <source>NpyIter_IterNextFunc</source>
          <target state="translated">NpyIter_IterNextFunc</target>
        </trans-unit>
        <trans-unit id="959108f7b8a46be14788dcc6f2c656a40adf98c1" translate="yes" xml:space="preserve">
          <source>NpyIter_MultiNew()</source>
          <target state="translated">NpyIter_MultiNew()</target>
        </trans-unit>
        <trans-unit id="1d0fc99dccddcd13dec9ec17ac48fd49dd80c577" translate="yes" xml:space="preserve">
          <source>NpyIter_RemoveMultiIndex()</source>
          <target state="translated">NpyIter_RemoveMultiIndex()</target>
        </trans-unit>
        <trans-unit id="a202ae5802958f468dad8c3e99a4bb5293a4dde8" translate="yes" xml:space="preserve">
          <source>NpyIter_RequiresBuffering()</source>
          <target state="translated">NpyIter_RequiresBuffering()</target>
        </trans-unit>
        <trans-unit id="c109fda112a4bfc0725b7a5833fd46c5602a3173" translate="yes" xml:space="preserve">
          <source>NpyIter_Reset()</source>
          <target state="translated">NpyIter_Reset()</target>
        </trans-unit>
        <trans-unit id="f1294ce3152cab7ceda644b504d717770b89e5c7" translate="yes" xml:space="preserve">
          <source>NpyIter_ResetBasePointers()</source>
          <target state="translated">NpyIter_ResetBasePointers()</target>
        </trans-unit>
        <trans-unit id="7a0acf29df8ba8a7bb014f05220b41b68cf91300" translate="yes" xml:space="preserve">
          <source>NpyIter_ResetToIterIndexRange()</source>
          <target state="translated">NpyIter_ResetToIterIndexRange()</target>
        </trans-unit>
        <trans-unit id="73626c9be0436b0d908d20d700956f6f6ce365b0" translate="yes" xml:space="preserve">
          <source>NpyIter_Type</source>
          <target state="translated">NpyIter_Type</target>
        </trans-unit>
        <trans-unit id="148fb3e1f0f3a0a5a25d7af63d9dc5d6da0841ea" translate="yes" xml:space="preserve">
          <source>NumPy</source>
          <target state="translated">NumPy</target>
        </trans-unit>
        <trans-unit id="a9d2a1b57f4f20938978d4d1c165136857a81954" translate="yes" xml:space="preserve">
          <source>NumPy &amp;mdash; it provides packages like:</source>
          <target state="translated">NumPy &amp;mdash;次のようなパッケージを提供します：</target>
        </trans-unit>
        <trans-unit id="f41afbb931d30bf51df3c5d024df1c8569665b6f" translate="yes" xml:space="preserve">
          <source>NumPy Array Scalars and SWIG</source>
          <target state="translated">NumPyアレイスカラーとSWIG</target>
        </trans-unit>
        <trans-unit id="51ad55a9768d51db51dfc0fe1a4177bdd94eb2e8" translate="yes" xml:space="preserve">
          <source>NumPy C API</source>
          <target state="translated">ヌムピーシーエーピーアイ</target>
        </trans-unit>
        <trans-unit id="3ee0e4047919b43a08c3c67ba0e3fc5e60d9cdaa" translate="yes" xml:space="preserve">
          <source>NumPy C Code Explanations</source>
          <target state="translated">NumPy Cコード説明</target>
        </trans-unit>
        <trans-unit id="b6796af8c026b629052c1b19daa9ac3e40093d9f" translate="yes" xml:space="preserve">
          <source>NumPy C-API</source>
          <target state="translated">ヌムピーシーエーピーアイ</target>
        </trans-unit>
        <trans-unit id="dd9b8569488631e17e9c539e945f4151de6b16a5" translate="yes" xml:space="preserve">
          <source>NumPy Distutils - Users Guide</source>
          <target state="translated">NumPy Distutils-ユーザーガイド</target>
        </trans-unit>
        <trans-unit id="c956147a86ea5dbf2bd113161d5a9a92844fee2c" translate="yes" xml:space="preserve">
          <source>NumPy Distutils preprocesses C source files (extension: &lt;code&gt;.c.src&lt;/code&gt;) written in a custom templating language to generate C code. The &lt;code&gt;@&lt;/code&gt; symbol is used to wrap macro-style variables to empower a string substitution mechanism that might describe (for instance) a set of data types.</source>
          <target state="translated">NumPy Distutils は、カスタムテンプレート言語で記述されたCソースファイル（拡張子： &lt;code&gt;.c.src&lt;/code&gt; ）を前処理して、Cコードを生成します。 &lt;code&gt;@&lt;/code&gt; の記号は（例えば）データ型のセットを記述する可能性がある文字列置換メカニズムに力を与えるために、マクロ形式の変数をラップするために使用されます。</target>
        </trans-unit>
        <trans-unit id="df1797f9e232d63f819933885e2ac94ec0352d11" translate="yes" xml:space="preserve">
          <source>NumPy Reference</source>
          <target state="translated">NumPy リファレンス</target>
        </trans-unit>
        <trans-unit id="23bd4c05c1a40776eacbfc3e62d23e6f2151bb0f" translate="yes" xml:space="preserve">
          <source>NumPy Reference, section &lt;a href=&quot;https://docs.scipy.org/doc/numpy/reference/c-api.generalized-ufuncs.html&quot;&gt;Generalized Universal Function API&lt;/a&gt;.</source>
          <target state="translated">NumPyリファレンス、セクション&lt;a href=&quot;https://docs.scipy.org/doc/numpy/reference/c-api.generalized-ufuncs.html&quot;&gt;Generalized Universal Function API&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="da31cee45cf66b17220997ed18c1c784b896e561" translate="yes" xml:space="preserve">
          <source>NumPy User Guide, section &lt;a href=&quot;https://docs.scipy.org/doc/numpy/user/basics.io.genfromtxt.html&quot;&gt;I/O with NumPy&lt;/a&gt;.</source>
          <target state="translated">numpyのユーザーガイド、セクション&lt;a href=&quot;https://docs.scipy.org/doc/numpy/user/basics.io.genfromtxt.html&quot;&gt;numpyの持つI / O&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dfb797f6ad28f48ccb741b2ddb48976e23e00a3f" translate="yes" xml:space="preserve">
          <source>NumPy allows the subtraction of two Datetime values, an operation which produces a number with a time unit. Because NumPy doesn&amp;rsquo;t have a physical quantities system in its core, the timedelta64 data type was created to complement datetime64.</source>
          <target state="translated">NumPyを使用すると、2つの日時値を減算できます。これは、時間単位の数値を生成する演算です。NumPyのコアには物理量システムがないため、timedelta64データ型は、datetime64を補完するために作成されました。</target>
        </trans-unit>
        <trans-unit id="3681d5d48b000e09eb74bcf9d80a233df272bb0f" translate="yes" xml:space="preserve">
          <source>NumPy and SWIG</source>
          <target state="translated">NumPyとSWIG</target>
        </trans-unit>
        <trans-unit id="c826d8c52c25e4bbad4a786ac8dfdcf96c8f11ac" translate="yes" xml:space="preserve">
          <source>NumPy and Swig</source>
          <target state="translated">NumPyとSwig</target>
        </trans-unit>
        <trans-unit id="45e9cb3043e5f97824505a55cbdfc5294d3ba613" translate="yes" xml:space="preserve">
          <source>NumPy arrays consist of two major components, the raw array data (from now on, referred to as the data buffer), and the information about the raw array data. The data buffer is typically what people think of as arrays in C or Fortran, a contiguous (and fixed) block of memory containing fixed sized data items. NumPy also contains a significant set of data that describes how to interpret the data in the data buffer. This extra information contains (among other things):</source>
          <target state="translated">NumPyの配列は2つの主要なコンポーネントから構成されています。データバッファとは、一般的にCやFortranの配列として考えられているもので、固定サイズのデータ項目を含む連続した(固定された)メモリブロックのことです。NumPyはまた,データバッファ内のデータをどのように解釈するかを説明する重要なデータを含んでいます.この余分な情報には、(他のものの中では)以下のものが含まれています。</target>
        </trans-unit>
        <trans-unit id="acba6e54dd52e6409526789be99f698cf4b66810" translate="yes" xml:space="preserve">
          <source>NumPy binary files (NPY, NPZ)</source>
          <target state="translated">NumPy バイナリファイル (NPY,NPZ)</target>
        </trans-unit>
        <trans-unit id="e9e0392d352bfceb00b69b8aae489d3cfcd35b94" translate="yes" xml:space="preserve">
          <source>NumPy core libraries</source>
          <target state="translated">NumPyコアライブラリ</target>
        </trans-unit>
        <trans-unit id="ccf16bd0788fff6636ddfa05a6cb0f611b1a5988" translate="yes" xml:space="preserve">
          <source>NumPy core math library</source>
          <target state="translated">NumPyコア数学ライブラリ</target>
        </trans-unit>
        <trans-unit id="973c555328d9b9a87fd43d16a1a900328d00f946" translate="yes" xml:space="preserve">
          <source>NumPy data type descriptions are instances of the &lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">NumPyデータ型の説明は、&lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;クラスのインスタンスです。</target>
        </trans-unit>
        <trans-unit id="be9b40e5263a5085939745fd3402fa19fc002ecb" translate="yes" xml:space="preserve">
          <source>NumPy distutils - users guide</source>
          <target state="translated">NumPy distutils-ユーザーガイド</target>
        </trans-unit>
        <trans-unit id="7682241df5064b6dcd3fa7f5b4aadf68c8c520d1" translate="yes" xml:space="preserve">
          <source>NumPy distutils supports automatic conversion of source files named &amp;lt;somefile&amp;gt;.src. This facility can be used to maintain very similar code blocks requiring only simple changes between blocks. During the build phase of setup, if a template file named &amp;lt;somefile&amp;gt;.src is encountered, a new file named &amp;lt;somefile&amp;gt; is constructed from the template and placed in the build directory to be used instead. Two forms of template conversion are supported. The first form occurs for files named &amp;lt;file&amp;gt;.ext.src where ext is a recognized Fortran extension (f, f90, f95, f77, for, ftn, pyf). The second form is used for all other cases.</source>
          <target state="translated">NumPy distutilsは、&amp;lt;somefile&amp;gt; .srcという名前のソースファイルの自動変換をサポートしています。この機能は、ブロック間の単純な変更のみを必要とする非常に類似したコードブロックを維持するために使用できます。セットアップのビルドフェーズ中に、&amp;lt;somefile&amp;gt; .srcという名前のテンプレートファイルが見つかった場合、&amp;lt;somefile&amp;gt;という名前の新しいファイルがテンプレートから作成され、代わりに使用するビルドディレクトリに配置されます。2つの形式のテンプレート変換がサポートされています。最初の形式は、&amp;lt;file&amp;gt; .ext.srcという名前のファイルに対して発生します。extは、認識されたFortran拡張子（f、f90、f95、f77、for、ftn、pyf）です。2番目の形式は、他のすべての場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="52e91b4c51a9db40b4247ecf6771ad0f610935f6" translate="yes" xml:space="preserve">
          <source>NumPy distutils supports automatic conversion of source files named &amp;lt;somefile&amp;gt;.src. This facility can be used to maintain very similar code blocks requiring only simple changes between blocks. During the build phase of setup, if a template file named &amp;lt;somefile&amp;gt;.src is encountered, a new file named &amp;lt;somefile&amp;gt; is constructed from the template and placed in the build directory to be used instead. Two forms of template conversion are supported. The first form occurs for files named &amp;lt;file&amp;gt;.ext.src where ext is a recognized Fortran extension (f, f90, f95, f77, for, ftn, pyf). The second form is used for all other cases. See &lt;a href=&quot;distutils_guide#templating&quot;&gt;Conversion of .src files using Templates&lt;/a&gt;.</source>
          <target state="translated">NumPy distutilsは、&amp;lt;somefile&amp;gt; .srcという名前のソースファイルの自動変換をサポートしています。この機能は、ブロック間の単純な変更のみを必要とする非常に類似したコードブロックを維持するために使用できます。セットアップのビルドフェーズ中に、&amp;lt;somefile&amp;gt; .srcという名前のテンプレートファイルが見つかった場合、&amp;lt;somefile&amp;gt;という名前の新しいファイルがテンプレートから作成され、代わりに使用するビルドディレクトリに配置されます。 2つの形式のテンプレート変換がサポートされています。最初の形式は、&amp;lt;file&amp;gt; .ext.srcという名前のファイルに対して発生します。extは、認識されたFortran拡張子（f、f90、f95、f77、for、ftn、pyf）です。 2番目の形式は、他のすべての場合に使用されます。&lt;a href=&quot;distutils_guide#templating&quot;&gt;テンプレートを使用した.srcファイルの変換を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="99117692035516c5cb720484aff4e4e585660600" translate="yes" xml:space="preserve">
          <source>NumPy has a set of rules for dealing with arrays that have differing shapes which are applied whenever functions take multiple operands which combine element-wise. This is called &lt;a href=&quot;ufuncs#ufuncs-broadcasting&quot;&gt;broadcasting&lt;/a&gt;. The &lt;a href=&quot;generated/numpy.nditer#numpy.nditer&quot;&gt;&lt;code&gt;nditer&lt;/code&gt;&lt;/a&gt; object can apply these rules for you when you need to write such a function.</source>
          <target state="translated">NumPyには、関数が要素ごとに結合する複数のオペランドを取るときに適用される、形状が異なる配列を処理するための一連のルールがあります。これを&lt;a href=&quot;ufuncs#ufuncs-broadcasting&quot;&gt;放送&lt;/a&gt;といいます。&lt;a href=&quot;generated/numpy.nditer#numpy.nditer&quot;&gt; &lt;code&gt;nditer&lt;/code&gt; の&lt;/a&gt;あなたは、このような関数を記述する必要がある場合、オブジェクトはあなたのためにこれらのルールを適用することができます。</target>
        </trans-unit>
        <trans-unit id="60168f40b56e28aca9cf44fb018703394a1b278b" translate="yes" xml:space="preserve">
          <source>NumPy has the following versioning scheme (numbers given are examples; they can be &amp;gt; 9) in principle):</source>
          <target state="translated">NumPyには次のバージョン管理スキームがあります（指定された数値は例です。原則として&amp;gt; 9にすることができます）：</target>
        </trans-unit>
        <trans-unit id="79eee1716a93d0c26d644ba6dc16d49583d1dea3" translate="yes" xml:space="preserve">
          <source>NumPy includes several constants:</source>
          <target state="translated">NumPyにはいくつかの定数が含まれています。</target>
        </trans-unit>
        <trans-unit id="7f95e3acee5a2de64945dfe9e2cae9083154d9ea" translate="yes" xml:space="preserve">
          <source>NumPy internals</source>
          <target state="translated">NumPy の内部</target>
        </trans-unit>
        <trans-unit id="c8046368fea8bda3d4541728b814c2be74d1348d" translate="yes" xml:space="preserve">
          <source>NumPy provides a C-API to enable users to extend the system and get access to the array object for use in other routines. The best way to truly understand the C-API is to read the source code. If you are unfamiliar with (C) source code, however, this can be a daunting experience at first. Be assured that the task becomes easier with practice, and you may be surprised at how simple the C-code can be to understand. Even if you don&amp;rsquo;t think you can write C-code from scratch, it is much easier to understand and modify already-written source code then create it &lt;em&gt;de novo&lt;/em&gt;.</source>
          <target state="translated">NumPyは、ユーザーがシステムを拡張し、他のルーチンで使用する配列オブジェクトにアクセスできるようにするC-APIを提供します。C-APIを本当に理解するための最良の方法は、ソースコードを読むことです。ただし、（C）ソ​​ースコードに慣れていない場合、これは最初は困難な経験になる可能性があります。練習することでタスクが簡単になり、Cコードが理解しやすいことに驚くかもしれません。Cコードを最初から作成できるとは思わない場合でも、すでに作成されているソースコードを理解して変更し、&lt;em&gt;新規に&lt;/em&gt;作成する方がはるかに簡単です。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
