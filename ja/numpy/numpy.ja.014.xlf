<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="numpy">
    <body>
      <group id="numpy">
        <trans-unit id="307209890a37b51bcd317c1d8679c25cf8cf32dc" translate="yes" xml:space="preserve">
          <source>This function creates a new neighborhood iterator from an existing iterator. The neighborhood will be computed relatively to the position currently pointed by &lt;em&gt;iter&lt;/em&gt;, the bounds define the shape of the neighborhood iterator, and the mode argument the boundaries handling mode.</source>
          <target state="translated">この関数は、既存のイテレーターから新しい近隣イテレーターを作成します。近傍は&lt;em&gt;iterが&lt;/em&gt;現在指している位置に対して相対的に計算され、境界は近傍イテレーターの形状を定義し、モード引数は境界処理モードです。</target>
        </trans-unit>
        <trans-unit id="33522609896e19e2c62ce4cc185c0f8e169d65db" translate="yes" xml:space="preserve">
          <source>This function does &lt;em&gt;not&lt;/em&gt; initialize the returned array; to do that use &lt;a href=&quot;numpy.zeros_like#numpy.zeros_like&quot;&gt;&lt;code&gt;zeros_like&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;numpy.ones_like#numpy.ones_like&quot;&gt;&lt;code&gt;ones_like&lt;/code&gt;&lt;/a&gt; instead. It may be marginally faster than the functions that do set the array values.</source>
          <target state="translated">この関数は返された配列を初期化しませ&lt;em&gt;ん&lt;/em&gt;。そのためには、代わりに&lt;a href=&quot;numpy.zeros_like#numpy.zeros_like&quot;&gt; &lt;code&gt;zeros_like&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;numpy.ones_like#numpy.ones_like&quot;&gt; &lt;code&gt;ones_like&lt;/code&gt; &lt;/a&gt;を使用してください。配列の値を設定する関数よりわずかに速いかもしれません。</target>
        </trans-unit>
        <trans-unit id="0decc5010e2e82ceb19b7a45f9d7da5f4f237524" translate="yes" xml:space="preserve">
          <source>This function does &lt;em&gt;not&lt;/em&gt; initialize the returned array; to do that use &lt;code&gt;zeros_like&lt;/code&gt; or &lt;code&gt;ones_like&lt;/code&gt; instead. It may be marginally faster than the functions that do set the array values.</source>
          <target state="translated">この関数は返された配列を初期化しませ&lt;em&gt;ん&lt;/em&gt;。そのためには、代わりに &lt;code&gt;zeros_like&lt;/code&gt; または &lt;code&gt;ones_like&lt;/code&gt; を使用してください。配列の値を設定する関数よりわずかに速いかもしれません。</target>
        </trans-unit>
        <trans-unit id="960581e2e13399cd79a7bf3c883aeb7b8d2e979d" translate="yes" xml:space="preserve">
          <source>This function does not check the contents of the input, only that the type is MaskType. In particular, this function returns False if the mask has a flexible dtype.</source>
          <target state="translated">この関数は、入力内容のチェックは行わず、型がMaskTypeであることのみをチェックします。特に、マスクが柔軟なdtypeを持っている場合はFalseを返します。</target>
        </trans-unit>
        <trans-unit id="0a232150acd8a12e027d94aeed56f5ff4aae9f46" translate="yes" xml:space="preserve">
          <source>This function does not enforce that the blocks lie on a fixed grid. &lt;code&gt;np.block([[a, b], [c, d]])&lt;/code&gt; is not restricted to arrays of the form:</source>
          <target state="translated">この関数は、ブロックが固定グリッド上にあることを強制しません。 &lt;code&gt;np.block([[a, b], [c, d]])&lt;/code&gt; は、次の形式の配列に限定されません。</target>
        </trans-unit>
        <trans-unit id="6dc40074e04bdcad2b344dd285961cdc7ff85df9" translate="yes" xml:space="preserve">
          <source>This function does not losslessly round-trip in either direction.</source>
          <target state="translated">この関数は、どちらの方向にもロスなく往復しません。</target>
        </trans-unit>
        <trans-unit id="b71c712d42350c6a8a0c257c490e077558876dad" translate="yes" xml:space="preserve">
          <source>This function encapsulates the broadcasting rules. The &lt;em&gt;mit&lt;/em&gt; container should already contain iterators for all the arrays that need to be broadcast. On return, these iterators will be adjusted so that iteration over each simultaneously will accomplish the broadcasting. A negative number is returned if an error occurs.</source>
          <target state="translated">この関数は、ブロードキャストルールをカプセル化します。&lt;em&gt;MITの&lt;/em&gt;コンテナは、必要が放送されることをすべてのアレイのためのイテレータをすでに含まれている必要があります。戻ったとき、これらのイテレータは調整され、それぞれの反復が同時にブロードキャストを実行します。エラーが発生した場合は、負の数が返されます。</target>
        </trans-unit>
        <trans-unit id="b02f77dc9fbab1956d3050387654fd71594ea916" translate="yes" xml:space="preserve">
          <source>This function handles NaN comparisons as if NaN was a &amp;ldquo;normal&amp;rdquo; number. That is, no assertion is raised if both objects have NaNs in the same positions. This is in contrast to the IEEE standard on NaNs, which says that NaN compared to anything must return False.</source>
          <target state="translated">この関数は、NaNが「通常の」数値であるかのようにNaN比較を処理します。つまり、両方のオブジェクトのNaNが同じ位置にある場合、アサーションは発生しません。これは、NaNのIEEE標準とは対照的です。これは、NaNは何と比較してもFalseを返す必要があることを示しています。</target>
        </trans-unit>
        <trans-unit id="d5f910d97d6aeb7075f641616a02d523dd4438a4" translate="yes" xml:space="preserve">
          <source>This function has been deprecated. Use randint instead.</source>
          <target state="translated">この関数は非推奨です。代わりに randint を使用してください。</target>
        </trans-unit>
        <trans-unit id="77fe5df00c0c7c8132af4661573c5a4cca000d13" translate="yes" xml:space="preserve">
          <source>This function has to be used with extreme care, see notes.</source>
          <target state="translated">この機能は細心の注意を払って使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="965a01bc9232ab2e9c3c470747ee3c2312761abb" translate="yes" xml:space="preserve">
          <source>This function is a compatibility alias for tobytes.</source>
          <target state="translated">この関数はトバイトの互換性のエイリアスです。</target>
        </trans-unit>
        <trans-unit id="a3014854fc3aff1db547e25e4accc358bdc45e8a" translate="yes" xml:space="preserve">
          <source>This function is a compatibility alias for tobytes. Despite its name it returns bytes not strings.</source>
          <target state="translated">この関数は tobytes の互換性のエイリアスです。その名前にもかかわらず、文字列ではなくバイトを返します。</target>
        </trans-unit>
        <trans-unit id="5bced6280c853e5763696660107e62b1e9050b26" translate="yes" xml:space="preserve">
          <source>This function is a shortcut to &lt;code&gt;mask_rowcols&lt;/code&gt; with &lt;code&gt;axis&lt;/code&gt; equal to 0.</source>
          <target state="translated">この機能はへのショートカットである &lt;code&gt;mask_rowcols&lt;/code&gt; と &lt;code&gt;axis&lt;/code&gt; 0に等しいです。</target>
        </trans-unit>
        <trans-unit id="892aad8c63a29b7082fcd31d81f9eafb9d342e8e" translate="yes" xml:space="preserve">
          <source>This function is a shortcut to &lt;code&gt;mask_rowcols&lt;/code&gt; with &lt;code&gt;axis&lt;/code&gt; equal to 1.</source>
          <target state="translated">この機能はへのショートカットである &lt;code&gt;mask_rowcols&lt;/code&gt; と &lt;code&gt;axis&lt;/code&gt; 1に等しいです。</target>
        </trans-unit>
        <trans-unit id="ebac1dd8653756fd79c832147de01fce0d7f87ae" translate="yes" xml:space="preserve">
          <source>This function is a shortcut to &lt;code&gt;masked_where&lt;/code&gt;, with &lt;code&gt;condition&lt;/code&gt; = (x != value).</source>
          <target state="translated">この機能はするショートカットです &lt;code&gt;masked_where&lt;/code&gt; で、 &lt;code&gt;condition&lt;/code&gt; =（X！=値）。</target>
        </trans-unit>
        <trans-unit id="ab411b054ab6959d52991c7253cba72df24e6757" translate="yes" xml:space="preserve">
          <source>This function is a shortcut to &lt;code&gt;masked_where&lt;/code&gt;, with &lt;code&gt;condition&lt;/code&gt; = (x &amp;gt; value).</source>
          <target state="translated">この機能はするためのショートカットである &lt;code&gt;masked_where&lt;/code&gt; と、 &lt;code&gt;condition&lt;/code&gt; =（X&amp;gt;値）。</target>
        </trans-unit>
        <trans-unit id="bf30dbf11727720fe8d30e29bf375cde077485f8" translate="yes" xml:space="preserve">
          <source>This function is a shortcut to &lt;code&gt;masked_where&lt;/code&gt;, with &lt;code&gt;condition&lt;/code&gt; = (x &amp;gt;= value).</source>
          <target state="translated">この機能はするためのショートカットである &lt;code&gt;masked_where&lt;/code&gt; と、 &lt;code&gt;condition&lt;/code&gt; =（X&amp;gt; =値）。</target>
        </trans-unit>
        <trans-unit id="af1053b8f0ec97d05015f270566c5b82959272a7" translate="yes" xml:space="preserve">
          <source>This function is a shortcut to &lt;code&gt;masked_where&lt;/code&gt;, with &lt;code&gt;condition&lt;/code&gt; = (x &amp;lt; value).</source>
          <target state="translated">この機能はするためのショートカットである &lt;code&gt;masked_where&lt;/code&gt; と、 &lt;code&gt;condition&lt;/code&gt; =（X &amp;lt;値）。</target>
        </trans-unit>
        <trans-unit id="f9189002c6a19182c690d1c6efc00b46a33f7232" translate="yes" xml:space="preserve">
          <source>This function is a shortcut to &lt;code&gt;masked_where&lt;/code&gt;, with &lt;code&gt;condition&lt;/code&gt; = (x &amp;lt;= value).</source>
          <target state="translated">この機能はするためのショートカットである &lt;code&gt;masked_where&lt;/code&gt; と、 &lt;code&gt;condition&lt;/code&gt; =（X &amp;lt;=値）。</target>
        </trans-unit>
        <trans-unit id="f46637928627180e5c802e1527edd637c13a58b6" translate="yes" xml:space="preserve">
          <source>This function is a shortcut to &lt;code&gt;masked_where&lt;/code&gt;, with &lt;code&gt;condition&lt;/code&gt; = (x == value). For floating point arrays, consider using &lt;code&gt;masked_values(x, value)&lt;/code&gt;.</source>
          <target state="translated">この機能はするためのショートカットである &lt;code&gt;masked_where&lt;/code&gt; と、 &lt;code&gt;condition&lt;/code&gt; =（x ==値）。浮動小数点配列の場合は、 &lt;code&gt;masked_values(x, value)&lt;/code&gt; 使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="f4434dee55a64bbfebaafbec40077ada7cc2e4b4" translate="yes" xml:space="preserve">
          <source>This function is a shortcut to &lt;code&gt;masked_where&lt;/code&gt;, with &lt;code&gt;condition&lt;/code&gt; = ~(np.isfinite(a)). Any pre-existing mask is conserved. Only applies to arrays with a dtype where NaNs or infs make sense (i.e. floating point types), but accepts any array_like object.</source>
          <target state="translated">この機能はするショートカットです &lt;code&gt;masked_where&lt;/code&gt; で、 &lt;code&gt;condition&lt;/code&gt; =〜（np.isfinite（））。既存のマスクは保存されます。NaNまたはinfsが意味のあるdtypeを持つ配列（つまり、浮動小数点型）にのみ適用されますが、array_likeオブジェクトはすべて受け入れます。</target>
        </trans-unit>
        <trans-unit id="f28b126f5c6b2ce96d11bc92753f383ad4cd6485" translate="yes" xml:space="preserve">
          <source>This function is able to return one of eight different matrix norms, or one of an infinite number of vector norms (described below), depending on the value of the &lt;code&gt;ord&lt;/code&gt; parameter.</source>
          <target state="translated">この関数は、 &lt;code&gt;ord&lt;/code&gt; パラメーターの値に応じて、8つの異なる行列ノルムのいずれか、または無限数のベクトルノルム（以下で説明）の1つを返すことができます。</target>
        </trans-unit>
        <trans-unit id="c1758140bc8fa9fd28fc8bc131c3f6321c42d5db" translate="yes" xml:space="preserve">
          <source>This function is capable of returning the condition number using one of seven different norms, depending on the value of &lt;code&gt;p&lt;/code&gt; (see Parameters below).</source>
          <target state="translated">この関数は、 &lt;code&gt;p&lt;/code&gt; の値に応じて、7つの異なるノルムのいずれかを使用して条件番号を返すことができます（以下のパラメーターを参照）。</target>
        </trans-unit>
        <trans-unit id="7f257a627b846a11d8d82d4b0986234672c8d024" translate="yes" xml:space="preserve">
          <source>This function is equivalent to &lt;a href=&quot;#numpy.ma.allclose&quot;&gt;&lt;code&gt;allclose&lt;/code&gt;&lt;/a&gt; except that masked values are treated as equal (default) or unequal, depending on the &lt;a href=&quot;numpy.ma.masked_equal#numpy.ma.masked_equal&quot;&gt;&lt;code&gt;masked_equal&lt;/code&gt;&lt;/a&gt; argument.</source>
          <target state="translated">この関数は&lt;a href=&quot;#numpy.ma.allclose&quot;&gt; &lt;code&gt;allclose&lt;/code&gt; &lt;/a&gt;と同等ですが、マスクされた値は、&lt;a href=&quot;numpy.ma.masked_equal#numpy.ma.masked_equal&quot;&gt; &lt;code&gt;masked_equal&lt;/code&gt; &lt;/a&gt;引数に応じて等しい（デフォルト）または等しくないとして扱われます。</target>
        </trans-unit>
        <trans-unit id="a3debc8695bd72584953abb12e719fb90548f7dd" translate="yes" xml:space="preserve">
          <source>This function is equivalent to calling the &amp;ldquo;compressed&amp;rdquo; method of a &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt;&lt;code&gt;MaskedArray&lt;/code&gt;&lt;/a&gt;, see &lt;a href=&quot;numpy.ma.maskedarray.compressed#numpy.ma.MaskedArray.compressed&quot;&gt;&lt;code&gt;MaskedArray.compressed&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">この関数は、の「圧縮」メソッドを呼び出すのと同等です&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt; &lt;code&gt;MaskedArray&lt;/code&gt; を&lt;/a&gt;参照してください&lt;a href=&quot;numpy.ma.maskedarray.compressed#numpy.ma.MaskedArray.compressed&quot;&gt; &lt;code&gt;MaskedArray.compressed&lt;/code&gt; &lt;/a&gt;詳細については。</target>
        </trans-unit>
        <trans-unit id="614f9af44de8bf025b95f7feb6cfbfad93376ecb" translate="yes" xml:space="preserve">
          <source>This function is equivalent to tuple axis arguments to reorderable ufuncs with keepdims=True. Tuple axis arguments to ufuncs have been available since version 1.7.0.</source>
          <target state="translated">この関数は、keepdims=Trueで並べ替え可能なufuncsへのタプル軸引数と同等です。ufuncsへのタプル軸引数はバージョン1.7.0から利用可能です。</target>
        </trans-unit>
        <trans-unit id="3c5d87f95304bba4f22f4f3bc79a0366620caeda" translate="yes" xml:space="preserve">
          <source>This function is exactly equivalent to &lt;a href=&quot;numpy.transpose#numpy.transpose&quot;&gt;&lt;code&gt;numpy.transpose&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この関数は、&lt;a href=&quot;numpy.transpose#numpy.transpose&quot;&gt; &lt;code&gt;numpy.transpose&lt;/code&gt; &lt;/a&gt;とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="0a042d76cb2129f19b61e5085381910d8b99bdbc" translate="yes" xml:space="preserve">
          <source>This function is intended to be used in EXTERNAL_LOOP mode only, and will produce some wrong answers when that mode is not enabled.</source>
          <target state="translated">この関数は、EXTERNAL_LOOPモードでのみ使用することを意図しており、そのモードが有効になっていない場合、いくつかの間違った答えを生成します。</target>
        </trans-unit>
        <trans-unit id="d3aeb8a347cc701a9fec8946ae6c740c1103bc20" translate="yes" xml:space="preserve">
          <source>This function is not defined for complex-valued arguments; for the so-called argument of complex values, use &lt;a href=&quot;numpy.angle#numpy.angle&quot;&gt;&lt;code&gt;angle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この関数は、複素数値の引数に対しては定義されていません。いわゆる複素数値の引数には、&lt;a href=&quot;numpy.angle#numpy.angle&quot;&gt; &lt;code&gt;angle&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="42c780622358a45155401477993b5d9d0b335549" translate="yes" xml:space="preserve">
          <source>This function is not designed to work with integers.</source>
          <target state="translated">この関数は整数では動作しないように設計されています。</target>
        </trans-unit>
        <trans-unit id="ea62cc16ec217ef39d7f7c8e5969148da37fd3a3" translate="yes" xml:space="preserve">
          <source>This function is not implemented yet.</source>
          <target state="translated">この機能はまだ実装されていません。</target>
        </trans-unit>
        <trans-unit id="b2f9356116ad7b6b9ba74a0d07b768457fca53e0" translate="yes" xml:space="preserve">
          <source>This function is obsolete and, because of changes due to relaxed stride checking, its return value for the same array may differ for versions of NumPy &amp;gt;= 1.10.0 and previous versions. If you only want to check if an array is Fortran contiguous use &lt;code&gt;a.flags.f_contiguous&lt;/code&gt; instead.</source>
          <target state="translated">この関数は廃止されており、ストライドチェックの緩和による変更のため、同じ配列の戻り値は、NumPy&amp;gt; = 1.10.0のバージョンと以前のバージョンでは異なる場合があります。配列がFortran連続であるかどうかのみを確認したい場合は、代わりに &lt;code&gt;a.flags.f_contiguous&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="258358cbdd467c9c344ce8e3f9c85d0cd7f428e4" translate="yes" xml:space="preserve">
          <source>This function is similar to &lt;a href=&quot;numpy.ma.masked_values#numpy.ma.masked_values&quot;&gt;&lt;code&gt;masked_values&lt;/code&gt;&lt;/a&gt;, but only suitable for object arrays: for floating point, use &lt;a href=&quot;numpy.ma.masked_values#numpy.ma.masked_values&quot;&gt;&lt;code&gt;masked_values&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">この関数は&lt;a href=&quot;numpy.ma.masked_values#numpy.ma.masked_values&quot;&gt; &lt;code&gt;masked_values&lt;/code&gt; &lt;/a&gt;に似ていますが、オブジェクト配列にのみ適しています。浮動小数点の場合は、代わりに&lt;a href=&quot;numpy.ma.masked_values#numpy.ma.masked_values&quot;&gt; &lt;code&gt;masked_values&lt;/code&gt; &lt;/a&gt;を使用してください。</target>
        </trans-unit>
        <trans-unit id="42e4240c2bc84555a7f741757d674e8c82e565ad" translate="yes" xml:space="preserve">
          <source>This function is superceded by &lt;a href=&quot;#c.PyArray_MinScalarType&quot;&gt;&lt;code&gt;PyArray_MinScalarType&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;#c.PyArray_ResultType&quot;&gt;&lt;code&gt;PyArray_ResultType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この関数は&lt;a href=&quot;#c.PyArray_MinScalarType&quot;&gt; &lt;code&gt;PyArray_MinScalarType&lt;/code&gt; &lt;/a&gt;やPyArray_ResultTypeに取って代わられ&lt;a href=&quot;#c.PyArray_ResultType&quot;&gt; &lt;code&gt;PyArray_ResultType&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f3e20de601f3ca24a5ff2472df08d779de8dd632" translate="yes" xml:space="preserve">
          <source>This function is superceded by &lt;a href=&quot;#c.PyArray_ResultType&quot;&gt;&lt;code&gt;PyArray_ResultType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この関数は&lt;a href=&quot;#c.PyArray_ResultType&quot;&gt; &lt;code&gt;PyArray_ResultType&lt;/code&gt; に&lt;/a&gt;取って代わられました。</target>
        </trans-unit>
        <trans-unit id="5b1ff7898f391050d07732317e1b4b4bc976ee58" translate="yes" xml:space="preserve">
          <source>This function is symmetric, but rarely associative.</source>
          <target state="translated">この関数は対称性がありますが、まれに連想性があります。</target>
        </trans-unit>
        <trans-unit id="fb34e601302a103a0946045a1719e9ad4309bf62" translate="yes" xml:space="preserve">
          <source>This function is the equivalent of &lt;a href=&quot;numpy.diag#numpy.diag&quot;&gt;&lt;code&gt;numpy.diag&lt;/code&gt;&lt;/a&gt; that takes masked values into account, see &lt;a href=&quot;numpy.diag#numpy.diag&quot;&gt;&lt;code&gt;numpy.diag&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">この関数は、マスクされた値を考慮する&lt;a href=&quot;numpy.diag#numpy.diag&quot;&gt; &lt;code&gt;numpy.diag&lt;/code&gt; &lt;/a&gt;と同等です。詳細については、&lt;a href=&quot;numpy.diag#numpy.diag&quot;&gt; &lt;code&gt;numpy.diag&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="762735a831cc238bcd6be4852c06ac0013225a54" translate="yes" xml:space="preserve">
          <source>This function is the equivalent of &lt;a href=&quot;numpy.dot#numpy.dot&quot;&gt;&lt;code&gt;numpy.dot&lt;/code&gt;&lt;/a&gt; that takes masked values into account. Note that &lt;code&gt;strict&lt;/code&gt; and &lt;code&gt;out&lt;/code&gt; are in different position than in the method version. In order to maintain compatibility with the corresponding method, it is recommended that the optional arguments be treated as keyword only. At some point that may be mandatory.</source>
          <target state="translated">この関数は、マスクされた値を考慮に入れる&lt;a href=&quot;numpy.dot#numpy.dot&quot;&gt; &lt;code&gt;numpy.dot&lt;/code&gt; &lt;/a&gt;と同等です。 &lt;code&gt;strict&lt;/code&gt; と &lt;code&gt;out&lt;/code&gt; は、メソッドバージョンとは異なる位置にあることに注意してください。対応するメソッドとの互換性を維持するために、オプションの引数をキーワードとしてのみ扱うことをお勧めします。ある時点でそれは必須であるかもしれません。</target>
        </trans-unit>
        <trans-unit id="b3449fce446ccae1d5ae6c6d55107b82701f20fd" translate="yes" xml:space="preserve">
          <source>This function is the equivalent of &lt;a href=&quot;numpy.ediff1d#numpy.ediff1d&quot;&gt;&lt;code&gt;numpy.ediff1d&lt;/code&gt;&lt;/a&gt; that takes masked values into account, see &lt;a href=&quot;numpy.ediff1d#numpy.ediff1d&quot;&gt;&lt;code&gt;numpy.ediff1d&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">この関数は、マスクされた値を考慮する&lt;a href=&quot;numpy.ediff1d#numpy.ediff1d&quot;&gt; &lt;code&gt;numpy.ediff1d&lt;/code&gt; &lt;/a&gt;と同等です。詳細については、&lt;a href=&quot;numpy.ediff1d#numpy.ediff1d&quot;&gt; &lt;code&gt;numpy.ediff1d&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="48492051f92b9e0c98dfd72175da1464af62c22d" translate="yes" xml:space="preserve">
          <source>This function is useful for calculating a fill value suitable for taking the maximum of an array with a given dtype.</source>
          <target state="translated">この関数は,与えられたdtypeを持つ配列の最大値を取るのに適した塗りつぶし値を計算するのに便利です.</target>
        </trans-unit>
        <trans-unit id="514144ea48299b81c7b15dfcf631d31668bd3186" translate="yes" xml:space="preserve">
          <source>This function is useful for determining a common type that two or more arrays can be converted to. It only works for non-flexible array types as no itemsize information is passed. The &lt;em&gt;mintype&lt;/em&gt; argument represents the minimum type acceptable, and &lt;em&gt;op&lt;/em&gt; represents the object that will be converted to an array. The return value is the enumerated typenumber that represents the data-type that &lt;em&gt;op&lt;/em&gt; should have.</source>
          <target state="translated">この関数は、2つ以上の配列を変換できる共通の型を決定するのに役立ちます。itemsize情報が渡されないため、これは柔軟でない配列型に対してのみ機能します。&lt;em&gt;mintypeの&lt;/em&gt;引数は最小タイプが許容可能であり、&lt;em&gt;OPは&lt;/em&gt;、アレイに変換されるオブジェクトを表します。戻り値は、&lt;em&gt;op&lt;/em&gt;が持つ必要があるデータ型を表す列挙型番号です。</target>
        </trans-unit>
        <trans-unit id="66ea2fa9dfd3553ca39f3787970de46499229028" translate="yes" xml:space="preserve">
          <source>This function is useful to be sure that an array with the correct flags is returned for passing to compiled code (perhaps through ctypes).</source>
          <target state="translated">この関数は、コンパイルされたコードに渡すために正しいフラグを持つ配列が返されることを確認するのに便利です(おそらくctypesを通して)。</target>
        </trans-unit>
        <trans-unit id="8e9b1bcfe6f895f9426e7973caf7f080e53d5b02" translate="yes" xml:space="preserve">
          <source>This function is very similar to &lt;code&gt;PyUFunc_FromFuncAndDataAndSignature&lt;/code&gt; above, but has an extra &lt;em&gt;identity_value&lt;/em&gt; argument, to define an arbitrary identity for the ufunc when &lt;code&gt;identity&lt;/code&gt; is passed as &lt;code&gt;PyUFunc_IdentityValue&lt;/code&gt;.</source>
          <target state="translated">この関数は上記の &lt;code&gt;PyUFunc_FromFuncAndDataAndSignature&lt;/code&gt; と非常に似ていますが、 &lt;code&gt;identity&lt;/code&gt; が &lt;code&gt;PyUFunc_IdentityValue&lt;/code&gt; として渡されるときにufuncの任意のIDを定義するための追加の&lt;em&gt;identity_value&lt;/em&gt;引数があります。</target>
        </trans-unit>
        <trans-unit id="e6ae878f05630a69160b11c652744c88c73b83f7" translate="yes" xml:space="preserve">
          <source>This function is very similar to PyUFunc_FromFuncAndData above, but has an extra &lt;em&gt;signature&lt;/em&gt; argument, to define a &lt;a href=&quot;c-api.generalized-ufuncs#c-api-generalized-ufuncs&quot;&gt;generalized universal functions&lt;/a&gt;. Similarly to how ufuncs are built around an element-by-element operation, gufuncs are around subarray-by-subarray operations, the &lt;a href=&quot;c-api.generalized-ufuncs#details-of-signature&quot;&gt;signature&lt;/a&gt; defining the subarrays to operate on.</source>
          <target state="translated">この関数は上記のPyUFunc_FromFuncAndDataによく似ていますが、&lt;a href=&quot;c-api.generalized-ufuncs#c-api-generalized-ufuncs&quot;&gt;一般化された汎用関数&lt;/a&gt;を定義するための追加の&lt;em&gt;署名&lt;/em&gt;引数があります。要素ごとの操作を中心にufuncsが構築される方法と同様に、gufuncsは、操作するサブ配列を定義する&lt;a href=&quot;c-api.generalized-ufuncs#details-of-signature&quot;&gt;シグネチャである&lt;/a&gt;、サブ配列ごとの操作を中心にしています。</target>
        </trans-unit>
        <trans-unit id="0dc77b4e140ac75bc9ac3e89d41f38fc73185d22" translate="yes" xml:space="preserve">
          <source>This function makes most sense for arrays with up to 3 dimensions. For instance, for pixel-data with a height (first axis), width (second axis), and r/g/b channels (third axis). The functions &lt;a href=&quot;numpy.concatenate#numpy.concatenate&quot;&gt;&lt;code&gt;concatenate&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;numpy.stack#numpy.stack&quot;&gt;&lt;code&gt;stack&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;numpy.block#numpy.block&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; provide more general stacking and concatenation operations.</source>
          <target state="translated">この関数は、3次元までの配列に対して最も意味があります。たとえば、高さ（1番目の軸）、幅（2番目の軸）、およびr / g / bチャネル（3番目の軸）を持つピクセルデータの場合。関数&lt;a href=&quot;numpy.concatenate#numpy.concatenate&quot;&gt; &lt;code&gt;concatenate&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;numpy.stack#numpy.stack&quot;&gt; &lt;code&gt;stack&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;numpy.block#numpy.block&quot;&gt; &lt;code&gt;block&lt;/code&gt; は&lt;/a&gt;、より一般的なスタックおよび連結操作を提供します。</target>
        </trans-unit>
        <trans-unit id="f7b019770de00d4d47b09eabe135d2ae721a995a" translate="yes" xml:space="preserve">
          <source>This function makes most sense for arrays with up to 3 dimensions. For instance, for pixel-data with a height (first axis), width (second axis), and r/g/b channels (third axis). The functions &lt;a href=&quot;numpy.ma.concatenate#numpy.ma.concatenate&quot;&gt;&lt;code&gt;concatenate&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;numpy.ma.stack#numpy.ma.stack&quot;&gt;&lt;code&gt;stack&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;block&lt;/code&gt; provide more general stacking and concatenation operations.</source>
          <target state="translated">この関数は、3次元までの配列に対して最も意味があります。たとえば、高さ（1番目の軸）、幅（2番目の軸）、およびr / g / bチャネル（3番目の軸）を持つピクセルデータの場合。関数&lt;a href=&quot;numpy.ma.concatenate#numpy.ma.concatenate&quot;&gt; &lt;code&gt;concatenate&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;numpy.ma.stack#numpy.ma.stack&quot;&gt; &lt;code&gt;stack&lt;/code&gt; &lt;/a&gt;、および &lt;code&gt;block&lt;/code&gt; は、より一般的なスタックおよび連結操作を提供します。</target>
        </trans-unit>
        <trans-unit id="d585b637d27940cc37d90ebf4940a9aa2e521b5d" translate="yes" xml:space="preserve">
          <source>This function may be safely called without holding the Python GIL.</source>
          <target state="translated">この関数は、PythonのGILを保持していなくても安全に呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="cd200e9dfe3f17be99d159e426b6fa9331db61ec" translate="yes" xml:space="preserve">
          <source>This function may only be called if the iterator is tracking a multi-index and if &lt;a href=&quot;#c.NPY_ITER_DONT_NEGATE_STRIDES&quot;&gt;&lt;code&gt;NPY_ITER_DONT_NEGATE_STRIDES&lt;/code&gt;&lt;/a&gt; was used to prevent an axis from being iterated in reverse order.</source>
          <target state="translated">この関数は、イテレータがマルチインデックスを追跡していて、&lt;a href=&quot;#c.NPY_ITER_DONT_NEGATE_STRIDES&quot;&gt; &lt;code&gt;NPY_ITER_DONT_NEGATE_STRIDES&lt;/code&gt; &lt;/a&gt;を使用して軸が逆順で繰り返されないようにする場合にのみ呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="6ca18036fbf762cae2043baf8ac3fa8494d28495" translate="yes" xml:space="preserve">
          <source>This function must be called in the initialization section of a module that will make use of the C-API. It imports the module where the function-pointer table is stored and points the correct variable to it.</source>
          <target state="translated">この関数は、C-API を使用するモジュールの初期化セクションで呼び出す必要があります。この関数は、関数ポインタテーブルが格納されているモジュールをインポートし、正しい変数を指し示します。</target>
        </trans-unit>
        <trans-unit id="cf5ee49acb54388d21032f90f2de16dca9ddb6c3" translate="yes" xml:space="preserve">
          <source>This function must take two arguments, &lt;code&gt;func(a, axis)&lt;/code&gt;.</source>
          <target state="translated">この関数は、2つの引数 &lt;code&gt;func(a, axis)&lt;/code&gt; 取る必要があります。</target>
        </trans-unit>
        <trans-unit id="dba1259c24481a4a54d81a8fdecff9fadce8f02f" translate="yes" xml:space="preserve">
          <source>This function only shuffles the array along the first axis of a multi-dimensional array. The order of sub-arrays is changed but their contents remains the same.</source>
          <target state="translated">この関数は、多次元配列の第1軸に沿って配列をシャッフルするだけです。サブ配列の順序は変更されますが,その内容は変わりません.</target>
        </trans-unit>
        <trans-unit id="68ca7042b267a7f2923f8a89cc886956d3a640a1" translate="yes" xml:space="preserve">
          <source>This function provides greater precision than &lt;code&gt;exp(x) - 1&lt;/code&gt; for small values of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">この関数は、 &lt;code&gt;x&lt;/code&gt; の値が小さい場合、 &lt;code&gt;exp(x) - 1&lt;/code&gt; より高い精度を提供します。</target>
        </trans-unit>
        <trans-unit id="40a3f0ad0a26c2dcd1667ccf5fd0beae55099939" translate="yes" xml:space="preserve">
          <source>This function reads from the system entropy pool and so samples are not reproducible. In particular, it does &lt;em&gt;NOT&lt;/em&gt; make use of a BitGenerator, and so &lt;code&gt;seed&lt;/code&gt; and setting &lt;code&gt;state&lt;/code&gt; have no effect.</source>
          <target state="translated">この関数はシステムエントロピープールから読み取るため、サンプルは再現できません。特に、BitGeneratorを使用し&lt;em&gt;ない&lt;/em&gt;ため、 &lt;code&gt;seed&lt;/code&gt; と設定 &lt;code&gt;state&lt;/code&gt; は影響しません。</target>
        </trans-unit>
        <trans-unit id="326a3290cbe737031cbcfe2c255c104d77bb6d98" translate="yes" xml:space="preserve">
          <source>This function returns a (C-style) contiguous and behaved function array from any nested sequence or array interface exporting object, &lt;em&gt;op&lt;/em&gt;, of (non-flexible) type given by the enumerated &lt;em&gt;typenum&lt;/em&gt;, of minimum depth &lt;em&gt;min_depth&lt;/em&gt;, and of maximum depth &lt;em&gt;max_depth&lt;/em&gt;. Equivalent to a call to &lt;a href=&quot;#c.PyArray_FromAny&quot;&gt;&lt;code&gt;PyArray_FromAny&lt;/code&gt;&lt;/a&gt; with requirements set to &lt;a href=&quot;#c.NPY_ARRAY_DEFAULT&quot;&gt;&lt;code&gt;NPY_ARRAY_DEFAULT&lt;/code&gt;&lt;/a&gt; and the type_num member of the type argument set to &lt;em&gt;typenum&lt;/em&gt;.</source>
          <target state="translated">この関数は、列挙型&lt;em&gt;typenum&lt;/em&gt;で指定された（非フレキシブル）型で、最小深度が&lt;em&gt;min_depth&lt;/em&gt;、最大深度が&lt;em&gt;max_depthである&lt;/em&gt;、ネストされたシーケンスまたは配列インターフェースエクスポートオブジェクト&lt;em&gt;op&lt;/em&gt;から、（Cスタイルの）連続して動作する関数配列を&lt;em&gt;返し&lt;/em&gt;ます。呼び出しに相当&lt;a href=&quot;#c.PyArray_FromAny&quot;&gt; &lt;code&gt;PyArray_FromAny&lt;/code&gt; &lt;/a&gt;に設定要件と&lt;a href=&quot;#c.NPY_ARRAY_DEFAULT&quot;&gt; &lt;code&gt;NPY_ARRAY_DEFAULT&lt;/code&gt; &lt;/a&gt;とに設定型引数のtype_numメンバー&lt;em&gt;typenum&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cd99a05c88fddf54e9c57ac9cd52857632e3d1f8" translate="yes" xml:space="preserve">
          <source>This function returns a boolean ndarray with all entries False, that can be used in common mask manipulations. If a complex dtype is specified, the type of each field is converted to a boolean type.</source>
          <target state="translated">この関数は、一般的なマスク操作で使用できるように、すべてのエントリがFalseであるブール値のndarrayを返します。複素数のdtypeが指定された場合、各フィールドの型はブール型に変換されます。</target>
        </trans-unit>
        <trans-unit id="d5e7626c8e43009c9d0e23e7f2d941b6cb967b32" translate="yes" xml:space="preserve">
          <source>This function returns the absolute values (positive magnitude) of the data in &lt;code&gt;x&lt;/code&gt;. Complex values are not handled, use &lt;a href=&quot;numpy.absolute#numpy.absolute&quot;&gt;&lt;code&gt;absolute&lt;/code&gt;&lt;/a&gt; to find the absolute values of complex data.</source>
          <target state="translated">この関数は、 &lt;code&gt;x&lt;/code&gt; のデータの絶対値（正の大きさ）を返します。複合値を使用し、処理されない&lt;a href=&quot;numpy.absolute#numpy.absolute&quot;&gt; &lt;code&gt;absolute&lt;/code&gt; &lt;/a&gt;複合データの絶対値を見つけます。</target>
        </trans-unit>
        <trans-unit id="89fee3e999f1c558b74709781bf21911d5dc8fa4" translate="yes" xml:space="preserve">
          <source>This function returns the value</source>
          <target state="translated">この関数は</target>
        </trans-unit>
        <trans-unit id="1cc55e517c256ea42c557b8b54e3efb3b6cafcb6" translate="yes" xml:space="preserve">
          <source>This function returns the values:</source>
          <target state="translated">この関数は値を返します。</target>
        </trans-unit>
        <trans-unit id="a6d07b33b778389f427bd3ca9fc11f04feb25982" translate="yes" xml:space="preserve">
          <source>This function should accept 1-D arrays. It is applied to 1-D slices of &lt;code&gt;arr&lt;/code&gt; along the specified axis.</source>
          <target state="translated">この関数は1次元配列を受け入れます。これは、指定された軸に沿った &lt;code&gt;arr&lt;/code&gt; の 1次元スライスに適用されます。</target>
        </trans-unit>
        <trans-unit id="5cfabdc0232ab8cc8ac575fbc0d4dec6b2dd7bf7" translate="yes" xml:space="preserve">
          <source>This function steals a reference to &lt;em&gt;arr&lt;/em&gt;.</source>
          <target state="translated">この関数は、&lt;em&gt;arr&lt;/em&gt;への参照を盗みます。</target>
        </trans-unit>
        <trans-unit id="3ceff3d1be740072d08fa441617d883813e56f19" translate="yes" xml:space="preserve">
          <source>This function steals a reference to &lt;em&gt;descr&lt;/em&gt; if it is not NULL.</source>
          <target state="translated">この関数は、それがNULLでない場合、&lt;em&gt;descr&lt;/em&gt;への参照を盗みます。</target>
        </trans-unit>
        <trans-unit id="8281b58eb98855581eef0364cfa182f403baf433" translate="yes" xml:space="preserve">
          <source>This function steals a reference to &lt;em&gt;descr&lt;/em&gt;.</source>
          <target state="translated">この関数は、&lt;em&gt;descr&lt;/em&gt;への参照を盗み&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="71bb778b3ae86d2314883f6bdb50a6590499183c" translate="yes" xml:space="preserve">
          <source>This function steals a reference to &lt;em&gt;descr&lt;/em&gt;. The easiest way to get one is using &lt;a href=&quot;#c.PyArray_DescrFromType&quot;&gt;&lt;code&gt;PyArray_DescrFromType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この関数は、&lt;em&gt;descr&lt;/em&gt;への参照を盗み&lt;em&gt;ます&lt;/em&gt;。これを取得する最も簡単な方法は、&lt;a href=&quot;#c.PyArray_DescrFromType&quot;&gt; &lt;code&gt;PyArray_DescrFromType&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="f6d42633714a13d2a78f3f69e93cf9d52e8a857e" translate="yes" xml:space="preserve">
          <source>This function supports both indexing conventions through the indexing keyword argument. Giving the string &amp;lsquo;ij&amp;rsquo; returns a meshgrid with matrix indexing, while &amp;lsquo;xy&amp;rsquo; returns a meshgrid with Cartesian indexing. In the 2-D case with inputs of length M and N, the outputs are of shape (N, M) for &amp;lsquo;xy&amp;rsquo; indexing and (M, N) for &amp;lsquo;ij&amp;rsquo; indexing. In the 3-D case with inputs of length M, N and P, outputs are of shape (N, M, P) for &amp;lsquo;xy&amp;rsquo; indexing and (M, N, P) for &amp;lsquo;ij&amp;rsquo; indexing. The difference is illustrated by the following code snippet:</source>
          <target state="translated">この関数は、インデックスキーワード引数を介して両方のインデックス規則をサポートします。文字列 'ij'を指定すると、マトリックスインデックス付きのメッシュグリッドが返され、 'xy'には、デカルトインデックス付きのメッシュグリッドが返されます。入力が長さMおよびNの2次元の場合、出力は「xy」インデックスの場合は（N、M）、「ij」インデックスの場合は（M、N）の形状になります。入力が長さM、N、およびPの3次元の場合、出力は、「xy」インデックスの場合は（N、M、P）、「ij」インデックスの場合は（M、N、P）の形状になります。違いは、次のコードスニペットに示されています。</target>
        </trans-unit>
        <trans-unit id="e857d76db9c7bac209f1715cec1437cf523540d8" translate="yes" xml:space="preserve">
          <source>This function swaps half-spaces for all axes listed (defaults to all). Note that &lt;code&gt;y[0]&lt;/code&gt; is the Nyquist component only if &lt;code&gt;len(x)&lt;/code&gt; is even.</source>
          <target state="translated">この関数は、リストされているすべての軸の半空間を交換します（デフォルトはすべて）。 &lt;code&gt;len(x)&lt;/code&gt; が偶数の場合にのみ、 &lt;code&gt;y[0]&lt;/code&gt; がナイキストコンポーネントであることに注意してください。</target>
        </trans-unit>
        <trans-unit id="a7870153b27cca4d6c02a86ec8c830b616e4b3c3" translate="yes" xml:space="preserve">
          <source>This function takes N 1-D sequences and returns N outputs with N dimensions each, such that the shape is 1 in all but one dimension and the dimension with the non-unit shape value cycles through all N dimensions.</source>
          <target state="translated">この関数は,N個の1次元シーケンスを受け取り,1次元を除くすべての次元で形状が1であり,非単位形状値を持つ次元がすべてのN次元を循環するように,それぞれN個の次元を持つN個の出力を返します.</target>
        </trans-unit>
        <trans-unit id="b4e43f62f7a361a5fb222fc70fbd3c26bd5104e6" translate="yes" xml:space="preserve">
          <source>This function takes a multi-iterator object that has been previously &amp;ldquo;broadcasted,&amp;rdquo; finds the dimension with the smallest &amp;ldquo;sum of strides&amp;rdquo; in the broadcasted result and adapts all the iterators so as not to iterate over that dimension (by effectively making them of length-1 in that dimension). The corresponding dimension is returned unless &lt;em&gt;mit&lt;/em&gt; -&amp;gt;nd is 0, then -1 is returned. This function is useful for constructing ufunc-like routines that broadcast their inputs correctly and then call a strided 1-d version of the routine as the inner-loop. This 1-d version is usually optimized for speed and for this reason the loop should be performed over the axis that won&amp;rsquo;t require large stride jumps.</source>
          <target state="translated">この関数は、以前に「ブロードキャスト」されたマルチイテレーターオブジェクトを受け取り、ブロードキャスト結果で最小の「ストライドの合計」を持つディメンションを見つけ、そのディメンションを反復しないようにすべてのイテレーターを調整します（効果的にその次元の長さ-1）。&lt;em&gt;mit-&lt;/em&gt; &amp;gt; ndが0でない限り、対応する次元が返され、次に-1が返されます。この関数は、入力を正しくブロードキャストし、ストライドされた1次元バージョンのルーチンを内部ループとして呼び出すufuncのようなルーチンを構築するのに役立ちます。この1-dバージョンは通常速度が最適化されているため、大きなストライドジャンプを必要としない軸上でループを実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="102958a161ae2e87757cf73f96956c3988a66269" translate="yes" xml:space="preserve">
          <source>This function uses the same algorithm as the builtin python &lt;a href=&quot;https://docs.python.org/dev/library/bisect.html#bisect.bisect_left&quot;&gt;&lt;code&gt;bisect.bisect_left&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;side='left'&lt;/code&gt;) and &lt;a href=&quot;https://docs.python.org/dev/library/bisect.html#bisect.bisect_right&quot;&gt;&lt;code&gt;bisect.bisect_right&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;side='right'&lt;/code&gt;) functions, which is also vectorized in the &lt;code&gt;v&lt;/code&gt; argument.</source>
          <target state="translated">この関数は、組み込みのpython &lt;a href=&quot;https://docs.python.org/dev/library/bisect.html#bisect.bisect_left&quot;&gt; &lt;code&gt;bisect.bisect_left&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;side='left'&lt;/code&gt; ）および&lt;a href=&quot;https://docs.python.org/dev/library/bisect.html#bisect.bisect_right&quot;&gt; &lt;code&gt;bisect.bisect_right&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;side='right'&lt;/code&gt; ）関数と同じアルゴリズムを使用します。これも &lt;code&gt;v&lt;/code&gt; 引数でベクトル化されます。</target>
        </trans-unit>
        <trans-unit id="f4a094c15ea96c9120e1bb02da934b3ab9299caa" translate="yes" xml:space="preserve">
          <source>This function will not demote complex to float or anything to boolean, but will demote a signed integer to an unsigned integer when the scalar value is positive.</source>
          <target state="translated">この関数は、複素数をfloatや何かをbooleanに降格させるのではなく、スカラ値が正の場合は符号付き整数を符号なし整数に降格させます。</target>
        </trans-unit>
        <trans-unit id="e431cb683c0bc7c35e7633e888e952e4559756e5" translate="yes" xml:space="preserve">
          <source>This function will not preserve masking of MaskedArray inputs.</source>
          <target state="translated">この関数は、MaskedArray入力のマスキングを保持しません。</target>
        </trans-unit>
        <trans-unit id="2a9b1f287c173d330577d2300449ee4dfd3daa91" translate="yes" xml:space="preserve">
          <source>This function works on subclasses of ndarray like &lt;a href=&quot;numpy.ma.array#numpy.ma.array&quot;&gt;&lt;code&gt;ma.array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この関数は、ma.arrayのような&lt;a href=&quot;numpy.ma.array#numpy.ma.array&quot;&gt; &lt;code&gt;ma.array&lt;/code&gt; &lt;/a&gt;サブクラスで機能します。</target>
        </trans-unit>
        <trans-unit id="b6a52abd835e7532e9891ffc574fd5f4220e58bc" translate="yes" xml:space="preserve">
          <source>This function works similarly to &lt;a href=&quot;#c.PyArray_ObjectType&quot;&gt;&lt;code&gt;PyArray_ObjectType&lt;/code&gt;&lt;/a&gt; (&amp;hellip;) except it handles flexible arrays. The &lt;em&gt;mintype&lt;/em&gt; argument can have an itemsize member and the &lt;em&gt;outtype&lt;/em&gt; argument will have an itemsize member at least as big but perhaps bigger depending on the object &lt;em&gt;op&lt;/em&gt;.</source>
          <target state="translated">この関数は、柔軟な配列を処理することを除いて、&lt;a href=&quot;#c.PyArray_ObjectType&quot;&gt; &lt;code&gt;PyArray_ObjectType&lt;/code&gt; &lt;/a&gt;（&amp;hellip;）と同様に機能します。&lt;em&gt;mintypeの&lt;/em&gt;引数はitemsizeメンバーを持つことができ、&lt;em&gt;OUTTYPEの&lt;/em&gt;引数は、オブジェクトに応じて、大きなおそらく大きなとして少なくともitemsizeメンバーを持つことになります&lt;em&gt;オペアンプ&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="24bfcaf02c26210c6ce475ff904488dd4e86859f" translate="yes" xml:space="preserve">
          <source>This functionality can be obtained via &lt;a href=&quot;numpy.diag_indices#numpy.diag_indices&quot;&gt;&lt;code&gt;diag_indices&lt;/code&gt;&lt;/a&gt;, but internally this version uses a much faster implementation that never constructs the indices and uses simple slicing.</source>
          <target state="translated">この機能は&lt;a href=&quot;numpy.diag_indices#numpy.diag_indices&quot;&gt; &lt;code&gt;diag_indices&lt;/code&gt; &lt;/a&gt;を介して取得できますが、内部的にはこのバージョンでは、インデックスを構築せず、単純なスライスを使用するはるかに高速な実装を使用しています。</target>
        </trans-unit>
        <trans-unit id="8df0c373fc062bf47c7c593de18498c118dd2c34" translate="yes" xml:space="preserve">
          <source>This general purpose 1-d core function assumes that &lt;em&gt;func&lt;/em&gt; is a string representing a method of the input object that takes one argument. The first argument in &lt;em&gt;args&lt;/em&gt; is the method whose function is called, the second argument in &lt;em&gt;args&lt;/em&gt; is the argument passed to the function. The output of the function is stored in the third entry of &lt;em&gt;args&lt;/em&gt;.</source>
          <target state="translated">この汎用1-dコア関数は、&lt;em&gt;func&lt;/em&gt;が、1つの引数を取る入力オブジェクトのメソッドを表す文字列であることを前提としています。最初の引数&lt;em&gt;引数は、&lt;/em&gt;その機能が呼び出されるメソッドであり、第二の引数&lt;em&gt;引数が&lt;/em&gt;関数に渡される引数です。関数の出力は&lt;em&gt;argsの&lt;/em&gt; 3番目のエントリに格納されます。</target>
        </trans-unit>
        <trans-unit id="71fb70d934e71392e5b977e3d5908e6d14ba65f1" translate="yes" xml:space="preserve">
          <source>This general purpose 1-d core function assumes that &lt;em&gt;func&lt;/em&gt; is a string representing a method of the input object. For each iteration of the loop, the Python object is extracted from the array and its &lt;em&gt;func&lt;/em&gt; method is called returning the result to the output array.</source>
          <target state="translated">この汎用1-dコア関数は、&lt;em&gt;func&lt;/em&gt;が入力オブジェクトのメソッドを表す文字列であることを前提としています。ループの反復ごとに、Pythonオブジェクトが配列から抽出され、その&lt;em&gt;func&lt;/em&gt;メソッドが呼び出されて、結果を出力配列に返します。</target>
        </trans-unit>
        <trans-unit id="ebe1403d50c0fdb0002abff6822f498479faa88e" translate="yes" xml:space="preserve">
          <source>This geometrical property can be seen in two dimensions by plotting generated data-points:</source>
          <target state="translated">この幾何学的特性は、生成されたデータ点をプロットすることで、2次元で見ることができます。</target>
        </trans-unit>
        <trans-unit id="e1dc7a565ca8eeac49fa065474eb2fca785df357" translate="yes" xml:space="preserve">
          <source>This gives back a pointer to the &lt;code&gt;nop&lt;/code&gt; data pointers. If &lt;a href=&quot;#c.NPY_ITER_EXTERNAL_LOOP&quot;&gt;&lt;code&gt;NPY_ITER_EXTERNAL_LOOP&lt;/code&gt;&lt;/a&gt; was not specified, each data pointer points to the current data item of the iterator. If no inner iteration was specified, it points to the first data item of the inner loop.</source>
          <target state="translated">これにより、 &lt;code&gt;nop&lt;/code&gt; データポインターへのポインターが返されます。&lt;a href=&quot;#c.NPY_ITER_EXTERNAL_LOOP&quot;&gt; &lt;code&gt;NPY_ITER_EXTERNAL_LOOP&lt;/code&gt; &lt;/a&gt;が指定されていない場合、各データポインターはイテレーターの現在のデータ項目を指します。内部反復が指定されていない場合は、内部ループの最初のデータ項目を指します。</target>
        </trans-unit>
        <trans-unit id="ad9e42c674af93de7c3d00b721f840bb2a3ba388" translate="yes" xml:space="preserve">
          <source>This gives back a pointer to the &lt;code&gt;nop&lt;/code&gt; data type Descrs for the objects being iterated. The result points into &lt;code&gt;iter&lt;/code&gt;, so the caller does not gain any references to the Descrs.</source>
          <target state="translated">これにより、反復されるオブジェクトの &lt;code&gt;nop&lt;/code&gt; データ型Descrs へのポインターが返されます。結果は &lt;code&gt;iter&lt;/code&gt; を指しているため、呼び出し元はDescrsへの参照を取得しません。</target>
        </trans-unit>
        <trans-unit id="04484c93294b17e48ec0072eb06cb15b6ce824d8" translate="yes" xml:space="preserve">
          <source>This gives back a pointer to the &lt;code&gt;nop&lt;/code&gt; operand PyObjects that are being iterated. The result points into &lt;code&gt;iter&lt;/code&gt;, so the caller does not gain any references to the PyObjects.</source>
          <target state="translated">これは、反復されている &lt;code&gt;nop&lt;/code&gt; オペランドPyObjects へのポインターを返します。結果は &lt;code&gt;iter&lt;/code&gt; を指すため、呼び出し元はPyObjectsへの参照を取得しません。</target>
        </trans-unit>
        <trans-unit id="de4914e9685130ac5234ec503748e2bb51b5d569" translate="yes" xml:space="preserve">
          <source>This gives back a pointer to the index being tracked, or NULL if no index is being tracked. It is only useable if one of the flags &lt;a href=&quot;#c.NPY_ITER_C_INDEX&quot;&gt;&lt;code&gt;NPY_ITER_C_INDEX&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#c.NPY_ITER_F_INDEX&quot;&gt;&lt;code&gt;NPY_ITER_F_INDEX&lt;/code&gt;&lt;/a&gt; were specified during construction.</source>
          <target state="translated">これは、追跡されているインデックスへのポインタを返します。追跡されているインデックスがない場合はNULLを返します。構築中にフラグ&lt;a href=&quot;#c.NPY_ITER_C_INDEX&quot;&gt; &lt;code&gt;NPY_ITER_C_INDEX&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#c.NPY_ITER_F_INDEX&quot;&gt; &lt;code&gt;NPY_ITER_F_INDEX&lt;/code&gt; の&lt;/a&gt;いずれかが指定された場合にのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="76e1c3a277ebfaa2cffaf967d76cec0c7e8df194" translate="yes" xml:space="preserve">
          <source>This gives back a reference to a new ndarray view, which is a view into the i-th object in the array &lt;a href=&quot;#c.NpyIter_GetOperandArray&quot;&gt;&lt;code&gt;NpyIter_GetOperandArray&lt;/code&gt;&lt;/a&gt;, whose dimensions and strides match the internal optimized iteration pattern. A C-order iteration of this view is equivalent to the iterator&amp;rsquo;s iteration order.</source>
          <target state="translated">これにより、配列&lt;a href=&quot;#c.NpyIter_GetOperandArray&quot;&gt; &lt;code&gt;NpyIter_GetOperandArray&lt;/code&gt; の&lt;/a&gt; i番目のオブジェクトへのビューである新しいndarrayビューへの参照が返されます。このビューの次元とストライドは、内部の最適化された反復パターンと一致します。このビューのCオーダーの反復は、イテレーターの反復順序と同等です。</target>
        </trans-unit>
        <trans-unit id="5203e44570d99c05fcfa2df4337f300e46c186be" translate="yes" xml:space="preserve">
          <source>This group is used to call code that may take some time but does not use any Python C-API calls. Thus, the GIL should be released during its calculation.</source>
          <target state="translated">このグループは、時間がかかるかもしれないコードを呼び出すために使用されますが、PythonのC-APIコールは一切使用しません。したがって、GILはその計算中に解放されるべきです。</target>
        </trans-unit>
        <trans-unit id="5bcd38e59fd6cf93688e83d10245c536ddb55a3a" translate="yes" xml:space="preserve">
          <source>This group is used to re-acquire the Python GIL after it has been released. For example, suppose the GIL has been released (using the previous calls), and then some path in the code (perhaps in a different subroutine) requires use of the Python C-API, then these macros are useful to acquire the GIL. These macros accomplish essentially a reverse of the previous three (acquire the LOCK saving what state it had) and then re-release it with the saved state.</source>
          <target state="translated">このグループはPythonのGILがリリースされた後に再取得するために使用されます。例えば、GILが(前の呼び出しを使って)リリースされ、コード内のいくつかのパス(おそらく別のサブルーチン内)でPython C-APIの使用を必要としたとします。これらのマクロは基本的に前の3つの逆のことを行います(LOCKが持っていた状態を保存して取得します)。</target>
        </trans-unit>
        <trans-unit id="11fb823e6d137af2611381a853679838cd294872" translate="yes" xml:space="preserve">
          <source>This interface describes homogeneous arrays in the sense that each item of the array has the same &amp;ldquo;type&amp;rdquo;. This type can be very simple or it can be a quite arbitrary and complicated C-like structure.</source>
          <target state="translated">このインターフェースは、配列の各項目が同じ「タイプ」を持つという意味で同種配列を記述します。このタイプは非常に単純な場合もあれば、非常に恣意的で複雑なCのような構造の場合もあります。</target>
        </trans-unit>
        <trans-unit id="669065ebaf0e163f0816c64449775393f24910fd" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;numpy.flatiter#numpy.flatiter&quot;&gt;&lt;code&gt;numpy.flatiter&lt;/code&gt;&lt;/a&gt; instance, which acts similarly to, but is not a subclass of, Python&amp;rsquo;s built-in iterator object.</source>
          <target state="translated">これは&lt;a href=&quot;numpy.flatiter#numpy.flatiter&quot;&gt; &lt;code&gt;numpy.flatiter&lt;/code&gt; &lt;/a&gt;インスタンスであり、Pythonの組み込み反復子オブジェクトと同様に機能しますが、そのサブクラスではありません。</target>
        </trans-unit>
        <trans-unit id="c616752b11f5b5590e848100c7afe1eff6eb31fb" translate="yes" xml:space="preserve">
          <source>This is a convenience function for quick storage of array data. Information on endianness and precision is lost, so this method is not a good choice for files intended to archive data or transport data between machines with different endianness. Some of these problems can be overcome by outputting the data as text files, at the expense of speed and file size.</source>
          <target state="translated">配列データを素早く保存するための便利な機能です。エンディアンと精度に関する情報は失われるので,データをアーカイブすることを目的としたファイルや,エンディアンの異なるマシン間でデータを転送することを目的としたファイルには,この方法は適していません.これらの問題のいくつかは、速度とファイルサイズを犠牲にしても、データをテキストファイルとして出力することで克服することができます。</target>
        </trans-unit>
        <trans-unit id="aebce3c953e4d7a8aa40a69097fcdae621194f4a" translate="yes" xml:space="preserve">
          <source>This is a convenience function for users porting code from Matlab, and wraps &lt;code&gt;numpy.random.random_sample&lt;/code&gt;. That function takes a tuple to specify the size of the output, which is consistent with other NumPy functions like &lt;a href=&quot;../../generated/numpy.zeros#numpy.zeros&quot;&gt;&lt;code&gt;numpy.zeros&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../generated/numpy.ones#numpy.ones&quot;&gt;&lt;code&gt;numpy.ones&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、Matlabからコードを移植するユーザーにとって便利な関数であり、 &lt;code&gt;numpy.random.random_sample&lt;/code&gt; をラップします。この関数は、出力のサイズを指定するためにタプルを取ります。これは、&lt;a href=&quot;../../generated/numpy.zeros#numpy.zeros&quot;&gt; &lt;code&gt;numpy.zeros&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;../../generated/numpy.ones#numpy.ones&quot;&gt; &lt;code&gt;numpy.ones&lt;/code&gt; &lt;/a&gt;などの他のNumPy関数と一致しています。</target>
        </trans-unit>
        <trans-unit id="8a8395276aef2b1c09ac3507c06c6aeae1c56edd" translate="yes" xml:space="preserve">
          <source>This is a convenience function for users porting code from Matlab, and wraps &lt;code&gt;numpy.random.standard_normal&lt;/code&gt;. That function takes a tuple to specify the size of the output, which is consistent with other NumPy functions like &lt;a href=&quot;../../generated/numpy.zeros#numpy.zeros&quot;&gt;&lt;code&gt;numpy.zeros&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../generated/numpy.ones#numpy.ones&quot;&gt;&lt;code&gt;numpy.ones&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、Matlabからコードを移植するユーザーにとって便利な関数であり、 &lt;code&gt;numpy.random.standard_normal&lt;/code&gt; をラップします。この関数は、出力のサイズを指定するためにタプルを取ります。これは、&lt;a href=&quot;../../generated/numpy.zeros#numpy.zeros&quot;&gt; &lt;code&gt;numpy.zeros&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;../../generated/numpy.ones#numpy.ones&quot;&gt; &lt;code&gt;numpy.ones&lt;/code&gt; &lt;/a&gt;などの他のNumPy関数と一致しています。</target>
        </trans-unit>
        <trans-unit id="14bed771c7ecf5fb5c7f3988c3e80ea720b90d56" translate="yes" xml:space="preserve">
          <source>This is a convenience, legacy function.</source>
          <target state="translated">これは便利なレガシー機能です。</target>
        </trans-unit>
        <trans-unit id="8386d98dd4fd3fd3372da264e738d2eec8c472de" translate="yes" xml:space="preserve">
          <source>This is a default converter for output arrays given to functions. If &lt;em&gt;obj&lt;/em&gt; is &lt;a href=&quot;https://docs.python.org/dev/c-api/none.html#c.Py_None&quot;&gt;&lt;code&gt;Py_None&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;NULL&lt;/code&gt;, then &lt;em&gt;*address&lt;/em&gt; will be &lt;code&gt;NULL&lt;/code&gt; but the call will succeed. If &lt;a href=&quot;#c.PyArray_Check&quot;&gt;&lt;code&gt;PyArray_Check&lt;/code&gt;&lt;/a&gt; ( &lt;em&gt;obj&lt;/em&gt;) is TRUE then it is returned in &lt;em&gt;*address&lt;/em&gt; without incrementing its reference count.</source>
          <target state="translated">これは、関数に指定された出力配列のデフォルトのコンバーターです。場合&lt;em&gt;objが&lt;/em&gt;ある&lt;a href=&quot;https://docs.python.org/dev/c-api/none.html#c.Py_None&quot;&gt; &lt;code&gt;Py_None&lt;/code&gt; &lt;/a&gt;または &lt;code&gt;NULL&lt;/code&gt; 、その後、&lt;em&gt;*アドレスは&lt;/em&gt;なり &lt;code&gt;NULL&lt;/code&gt; が、呼び出しが成功します。場合&lt;a href=&quot;#c.PyArray_Check&quot;&gt; &lt;code&gt;PyArray_Check&lt;/code&gt; &lt;/a&gt;（&lt;em&gt;objが&lt;/em&gt;）TRUEであるそれはで返される&lt;em&gt;*アドレス&lt;/em&gt;参照カウントをインクリメントせず。</target>
        </trans-unit>
        <trans-unit id="ebf6bd0b70f0575c64ee3df5fdd00ac441de460d" translate="yes" xml:space="preserve">
          <source>This is a function equivalent to C99 copysign: return x with the same sign as y. Works for any value, including inf and nan. Single and extended precisions are available with suffix f and l.</source>
          <target state="translated">これは,C99 の copysign と同等の関数です:y と同じ符号を持つ x を返します.接尾辞 f と l を指定することで,単一精度と拡張精度が利用できます.</target>
        </trans-unit>
        <trans-unit id="9c5d9b74232b5b43fdac1227d638313277afa572" translate="yes" xml:space="preserve">
          <source>This is a function equivalent to C99 nextafter: return next representable floating point value from x in the direction of y. Single and extended precisions are available with suffix f and l.</source>
          <target state="translated">これは,C99 nextafter と同等の関数です:x から y 方向に次の表現可能な浮動小数点値を返します.</target>
        </trans-unit>
        <trans-unit id="6cef9e65ee084ca1f09a67a21a4b3ef4b9523383" translate="yes" xml:space="preserve">
          <source>This is a function equivalent to Fortran intrinsic. Return distance between x and next representable floating point value from x, e.g. spacing(1) == eps. spacing of nan and +/- inf return nan. Single and extended precisions are available with suffix f and l.</source>
          <target state="translated">これはFortranの内部関数と同等の関数です。x と x からの次の表現可能な浮動小数点値の間の距離を返します。例えば spacing(1)==eps.nan の間隔と +/-inf は nan を返します。接尾辞fとlを指定することで,単一の精度と拡張された精度を得ることができます.</target>
        </trans-unit>
        <trans-unit id="f691a7cca2d5bab9d5322a451f5071b060431b18" translate="yes" xml:space="preserve">
          <source>This is a function pointer for getting the current iterator multi-index, returned by &lt;a href=&quot;#c.NpyIter_GetGetMultiIndex&quot;&gt;&lt;code&gt;NpyIter_GetGetMultiIndex&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;#c.NpyIter_GetGetMultiIndex&quot;&gt; &lt;code&gt;NpyIter_GetGetMultiIndex&lt;/code&gt; &lt;/a&gt;によって返される現在のイテレータマルチインデックスを取得するための関数ポインタです。</target>
        </trans-unit>
        <trans-unit id="afe9f9d9e5612f0c43f0b6f2ab1ddbf98d2077ed" translate="yes" xml:space="preserve">
          <source>This is a function pointer for the iteration loop, returned by &lt;a href=&quot;#c.NpyIter_GetIterNext&quot;&gt;&lt;code&gt;NpyIter_GetIterNext&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;#c.NpyIter_GetIterNext&quot;&gt; &lt;code&gt;NpyIter_GetIterNext&lt;/code&gt; &lt;/a&gt;によって返される、反復ループの関数ポインターです。</target>
        </trans-unit>
        <trans-unit id="682e5efdefc09e15bb711f19c6e22c6512c8e3c9" translate="yes" xml:space="preserve">
          <source>This is a list of flags for each operand. At minimum, one of &lt;code&gt;readonly&lt;/code&gt;, &lt;code&gt;readwrite&lt;/code&gt;, or &lt;code&gt;writeonly&lt;/code&gt; must be specified.</source>
          <target state="translated">これは、各オペランドのフラグのリストです。少なくとも、 &lt;code&gt;readonly&lt;/code&gt; 、 &lt;code&gt;readwrite&lt;/code&gt; 、または &lt;code&gt;writeonly&lt;/code&gt; のいずれかを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="daee1c27087ebe5008ffab37bf86e6cef5520692" translate="yes" xml:space="preserve">
          <source>This is a macro, and is equivalent to C99 isfinite: works for single, double and extended precision, and return a non 0 value is x is neither a NaN nor an infinity.</source>
          <target state="translated">これはマクロで、C99のisfiniteと同等です。単精度、倍精度、拡張精度で動作し、xがNaNでも無限大でもない場合、0ではない値を返します。</target>
        </trans-unit>
        <trans-unit id="80381bd72606c65ade88008349bbceb47f771261" translate="yes" xml:space="preserve">
          <source>This is a macro, and is equivalent to C99 isinf: works for single, double and extended precision, and return a non 0 value is x is infinite (positive and negative).</source>
          <target state="translated">これはマクロで、C99 isinf:と同等です。単精度、倍精度、拡張精度で動作し、0でない値を返します。</target>
        </trans-unit>
        <trans-unit id="0a2766c5fc1ee9982025de76ae4aa9f68ecd22db" translate="yes" xml:space="preserve">
          <source>This is a macro, and is equivalent to C99 isnan: works for single, double and extended precision, and return a non 0 value is x is a NaN.</source>
          <target state="translated">これはマクロであり、C99 isnanと同等です:単精度、倍精度、拡張精度で動作し、0ではない値を返します。</target>
        </trans-unit>
        <trans-unit id="ba072edcddb8314e48393832fd145a168df5e278" translate="yes" xml:space="preserve">
          <source>This is a macro, and is equivalent to C99 signbit: works for single, double and extended precision, and return a non 0 value is x has the signbit set (that is the number is negative).</source>
          <target state="translated">これはマクロであり、C99 signbitと同等です:単精度、倍精度、拡張精度で動作し、0以外の値を返します。</target>
        </trans-unit>
        <trans-unit id="e912c91523a3cdb66f72696d355ab45d0a9a414f" translate="yes" xml:space="preserve">
          <source>This is a relatively robust method to compare two arrays whose amplitude is variable.</source>
          <target state="translated">これは、振幅が可変である2つの配列を比較するための比較的堅牢な方法です。</target>
        </trans-unit>
        <trans-unit id="f9e98f643e268bceb892d520470f87f06bd3ffa1" translate="yes" xml:space="preserve">
          <source>This is a scalar if both &lt;code&gt;x1&lt;/code&gt; and &lt;code&gt;x2&lt;/code&gt; are scalars.</source>
          <target state="translated">&lt;code&gt;x1&lt;/code&gt; と &lt;code&gt;x2&lt;/code&gt; の両方がスカラーの場合、これはスカラーです。</target>
        </trans-unit>
        <trans-unit id="5b6ff4b3ee0d226dd43f100afc9a5e9fc743a95d" translate="yes" xml:space="preserve">
          <source>This is a simple way to build up arrays quickly. There are two use cases.</source>
          <target state="translated">配列を素早く構築するためのシンプルな方法です。2つのユースケースがあります。</target>
        </trans-unit>
        <trans-unit id="5bf246dfc26ef7aa2b64da9e4b03eace45db2857" translate="yes" xml:space="preserve">
          <source>This is a special flag that is set if this array represents a copy made because a user required certain flags in &lt;a href=&quot;#c.PyArray_FromAny&quot;&gt;&lt;code&gt;PyArray_FromAny&lt;/code&gt;&lt;/a&gt; and a copy had to be made of some other array (and the user asked for this flag to be set in such a situation). The base attribute then points to the &amp;ldquo;misbehaved&amp;rdquo; array (which is set read_only). :c:func`PyArray_ResolveWritebackIfCopy` will copy its contents back to the &amp;ldquo;misbehaved&amp;rdquo; array (casting if necessary) and will reset the &amp;ldquo;misbehaved&amp;rdquo; array to &lt;a href=&quot;#c.NPY_ARRAY_WRITEABLE&quot;&gt;&lt;code&gt;NPY_ARRAY_WRITEABLE&lt;/code&gt;&lt;/a&gt;. If the &amp;ldquo;misbehaved&amp;rdquo; array was not &lt;a href=&quot;#c.NPY_ARRAY_WRITEABLE&quot;&gt;&lt;code&gt;NPY_ARRAY_WRITEABLE&lt;/code&gt;&lt;/a&gt; to begin with then &lt;a href=&quot;#c.PyArray_FromAny&quot;&gt;&lt;code&gt;PyArray_FromAny&lt;/code&gt;&lt;/a&gt; would have returned an error because &lt;a href=&quot;#c.NPY_ARRAY_WRITEBACKIFCOPY&quot;&gt;&lt;code&gt;NPY_ARRAY_WRITEBACKIFCOPY&lt;/code&gt;&lt;/a&gt; would not have been possible.</source>
          <target state="translated">これは、ユーザーが&lt;a href=&quot;#c.PyArray_FromAny&quot;&gt; &lt;code&gt;PyArray_FromAny&lt;/code&gt; で&lt;/a&gt;特定のフラグを必要とし、コピーを他の配列で作成する必要があったためにこの配列がコピーを表す場合に設定される特別なフラグです（そして、ユーザーはこのような状況でこのフラグを設定するように要求しました）。 。次に、base属性は「誤動作」配列（read_onlyに設定されている）を指します。 ：c：func`PyArray_ResolveWritebackIfCopy`は、その内容を「誤動作」配列にコピーし（必要に応じてキャスト）、「誤動作」配列を&lt;a href=&quot;#c.NPY_ARRAY_WRITEABLE&quot;&gt; &lt;code&gt;NPY_ARRAY_WRITEABLE&lt;/code&gt; に&lt;/a&gt;リセットします。 「misbehaved」アレイなかった場合&lt;a href=&quot;#c.NPY_ARRAY_WRITEABLE&quot;&gt; &lt;code&gt;NPY_ARRAY_WRITEABLE&lt;/code&gt; &lt;/a&gt;その後、そもそも&lt;a href=&quot;#c.PyArray_FromAny&quot;&gt; &lt;code&gt;PyArray_FromAny&lt;/code&gt; が&lt;/a&gt;あるため、エラーが返されていた&lt;a href=&quot;#c.NPY_ARRAY_WRITEBACKIFCOPY&quot;&gt; &lt;code&gt;NPY_ARRAY_WRITEBACKIFCOPY&lt;/code&gt; は&lt;/a&gt;不可能でした。</target>
        </trans-unit>
        <trans-unit id="d494bbd6ea4e55e23b6320030cf19b92084fb2cb" translate="yes" xml:space="preserve">
          <source>This is a very flexible function; &lt;a href=&quot;numpy.array_repr#numpy.array_repr&quot;&gt;&lt;code&gt;array_repr&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;numpy.array_str#numpy.array_str&quot;&gt;&lt;code&gt;array_str&lt;/code&gt;&lt;/a&gt; are using &lt;a href=&quot;#numpy.array2string&quot;&gt;&lt;code&gt;array2string&lt;/code&gt;&lt;/a&gt; internally so keywords with the same name should work identically in all three functions.</source>
          <target state="translated">これは非常に柔軟な機能です。&lt;a href=&quot;numpy.array_repr#numpy.array_repr&quot;&gt; &lt;code&gt;array_repr&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;numpy.array_str#numpy.array_str&quot;&gt; &lt;code&gt;array_str&lt;/code&gt; &lt;/a&gt;使用している&lt;a href=&quot;#numpy.array2string&quot;&gt; &lt;code&gt;array2string&lt;/code&gt; &lt;/a&gt;ので、キーワードと同じ名前はすべての3つの機能で同じ動作するはずで、内部。</target>
        </trans-unit>
        <trans-unit id="4a20d6c5e13bf5949cf2f01fed00be4a85ee83c8" translate="yes" xml:space="preserve">
          <source>This is a wrapper around &lt;code&gt;cPickle.dump&lt;/code&gt;.</source>
          <target state="translated">これは &lt;code&gt;cPickle.dump&lt;/code&gt; のラッパーです。</target>
        </trans-unit>
        <trans-unit id="72c0baacc027dca1b05db754f60ee813fa6dbfcf" translate="yes" xml:space="preserve">
          <source>This is a wrapper around &lt;code&gt;cPickle.dumps&lt;/code&gt;.</source>
          <target state="translated">これは &lt;code&gt;cPickle.dumps&lt;/code&gt; のラッパーです。</target>
        </trans-unit>
        <trans-unit id="b6ae9c5b7de866ac0dd1b4b58c7a54bd18149043" translate="yes" xml:space="preserve">
          <source>This is almost the same as the result of PyArray_CanCastTypeTo(PyArray_MinScalarType(arr), totype, casting), but it also handles a special case arising because the set of uint values is not a subset of the int values for types with the same number of bits.</source>
          <target state="translated">これは PyArray_CanCastTypeTo(PyArray_MinScalarType(arr),totype,casting)の結果とほぼ同じですが、同じビット数の型に対して uint 値の集合が int 値のサブセットではないために発生する特殊なケースも処理しています。</target>
        </trans-unit>
        <trans-unit id="abef17cd5a41150617b797dd34026cad2a72bcf3" translate="yes" xml:space="preserve">
          <source>This is an example of a func specialized for addition of doubles returning doubles.</source>
          <target state="translated">これは、ダブルスを返すダブルスの加算に特化したFuncの例です。</target>
        </trans-unit>
        <trans-unit id="8d1fbd89490e7598a40d0ab430364ea01d0cff36" translate="yes" xml:space="preserve">
          <source>This is an interface to the LAPACK routines &lt;code&gt;dgeqrf&lt;/code&gt;, &lt;code&gt;zgeqrf&lt;/code&gt;, &lt;code&gt;dorgqr&lt;/code&gt;, and &lt;code&gt;zungqr&lt;/code&gt;.</source>
          <target state="translated">これは、LAPACKルーチン &lt;code&gt;dgeqrf&lt;/code&gt; 、 &lt;code&gt;zgeqrf&lt;/code&gt; 、 &lt;code&gt;dorgqr&lt;/code&gt; 、および &lt;code&gt;zungqr&lt;/code&gt; へのインターフェースです。</target>
        </trans-unit>
        <trans-unit id="944d000b70e8d3d375939368b9ee8662949fdd56" translate="yes" xml:space="preserve">
          <source>This is an iterator object that makes it easy to loop over an N-dimensional array. It is the object returned from the flat attribute of an ndarray. It is also used extensively throughout the implementation internals to loop over an N-dimensional array. The tp_as_mapping interface is implemented so that the iterator object can be indexed (using 1-d indexing), and a few methods are implemented through the tp_methods table. This object implements the next method and can be used anywhere an iterator can be used in Python.</source>
          <target state="translated">N次元配列を簡単にループさせるためのイテレータオブジェクトです。ndarrayのflat属性から返されるオブジェクトです。また,実装内部では,N次元配列をループさせるために広く利用されています.tp_as_mappingインターフェースは、イテレータオブジェクトにインデックスを付けられるように実装されており(1次元インデックスを使用)、いくつかのメソッドがtp_methodsテーブルを通して実装されています。このオブジェクトは次のメソッドを実装しており、Pythonでイテレータが使える場所ならどこでも使えます。</target>
        </trans-unit>
        <trans-unit id="39877197a88959914be74b4d252daeba988b0567" translate="yes" xml:space="preserve">
          <source>This is an iterator object that makes it easy to loop over an N-dimensional neighborhood.</source>
          <target state="translated">これは、N次元の近傍をループすることを容易にするイテレータオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="ed4488f4638f84c1e1e4b827cf0b8579c8c851e4" translate="yes" xml:space="preserve">
          <source>This is an opaque pointer type for the iterator. Access to its contents can only be done through the iterator API.</source>
          <target state="translated">これは、イテレータ用の不透明なポインタ型です。その内容へのアクセスは、イテレータ API を通してのみ可能です。</target>
        </trans-unit>
        <trans-unit id="b4c12ec7da04774c2971488c28da077dd954ab73" translate="yes" xml:space="preserve">
          <source>This is defined for &lt;code&gt;{type}&lt;/code&gt; = &lt;strong&gt;BYTE&lt;/strong&gt;, &lt;strong&gt;SHORT&lt;/strong&gt;, &lt;strong&gt;INT&lt;/strong&gt;, &lt;strong&gt;LONG&lt;/strong&gt;, &lt;strong&gt;LONGLONG&lt;/strong&gt;, &lt;strong&gt;INTP&lt;/strong&gt;</source>
          <target state="translated">これは &lt;code&gt;{type}&lt;/code&gt; = &lt;strong&gt;BYTE&lt;/strong&gt;、&lt;strong&gt;SHORT&lt;/strong&gt;、&lt;strong&gt;INT&lt;/strong&gt;、&lt;strong&gt;LONG&lt;/strong&gt;、&lt;strong&gt;LONGLONG&lt;/strong&gt;、&lt;strong&gt;INTP&lt;/strong&gt;に対して定義されてい&lt;strong&gt;ます&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1cb38ad4a8a5f0f7eaad9358f9b24fff730b48c2" translate="yes" xml:space="preserve">
          <source>This is defined for all defined for &lt;code&gt;{type}&lt;/code&gt; = &lt;strong&gt;BYTE&lt;/strong&gt;, &lt;strong&gt;UBYTE&lt;/strong&gt;, &lt;strong&gt;SHORT&lt;/strong&gt;, &lt;strong&gt;USHORT&lt;/strong&gt;, &lt;strong&gt;INT&lt;/strong&gt;, &lt;strong&gt;UINT&lt;/strong&gt;, &lt;strong&gt;LONG&lt;/strong&gt;, &lt;strong&gt;ULONG&lt;/strong&gt;, &lt;strong&gt;LONGLONG&lt;/strong&gt;, &lt;strong&gt;ULONGLONG&lt;/strong&gt;, &lt;strong&gt;INTP&lt;/strong&gt;, &lt;strong&gt;UINTP&lt;/strong&gt;</source>
          <target state="translated">これは、 &lt;code&gt;{type}&lt;/code&gt; = &lt;strong&gt;BYTE&lt;/strong&gt;、&lt;strong&gt;UBYTE&lt;/strong&gt;、&lt;strong&gt;SHORT&lt;/strong&gt;、&lt;strong&gt;USHORT&lt;/strong&gt;、&lt;strong&gt;INT&lt;/strong&gt;、&lt;strong&gt;UINT&lt;/strong&gt;、&lt;strong&gt;LONG&lt;/strong&gt;、&lt;strong&gt;ULONG&lt;/strong&gt;、&lt;strong&gt;LONGLONG&lt;/strong&gt;、&lt;strong&gt;ULONGLONG&lt;/strong&gt;、&lt;strong&gt;INTP&lt;/strong&gt;、&lt;strong&gt;UINTP&lt;/strong&gt;に対して定義されたすべてに対して定義されます&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3e53b90b8b35ae60046587f59e89f7b60e6df85a" translate="yes" xml:space="preserve">
          <source>This is different from &lt;a href=&quot;numpy.load#numpy.load&quot;&gt;&lt;code&gt;numpy.load&lt;/code&gt;&lt;/a&gt;, which does not use cPickle but loads the NumPy binary .npy format.</source>
          <target state="translated">これは、&lt;a href=&quot;numpy.load#numpy.load&quot;&gt; &lt;code&gt;numpy.load&lt;/code&gt; &lt;/a&gt;使用せずにNumPyバイナリ.npy形式をロードするnumpy.loadとは異なります。</target>
        </trans-unit>
        <trans-unit id="ad4d2eb9b0ee11d28c4e5a349ba480c6768dfc79" translate="yes" xml:space="preserve">
          <source>This is equivalent to (but faster than) the following use of &lt;a href=&quot;numpy.ndindex#numpy.ndindex&quot;&gt;&lt;code&gt;ndindex&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;numpy.s_#numpy.s_&quot;&gt;&lt;code&gt;s_&lt;/code&gt;&lt;/a&gt;, which sets each of &lt;code&gt;ii&lt;/code&gt; and &lt;code&gt;kk&lt;/code&gt; to a tuple of indices:</source>
          <target state="translated">これは、次の&lt;a href=&quot;numpy.ndindex#numpy.ndindex&quot;&gt; &lt;code&gt;ndindex&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;numpy.s_#numpy.s_&quot;&gt; &lt;code&gt;s_&lt;/code&gt; の&lt;/a&gt;使用と同等です（ただし高速です）。これは、 &lt;code&gt;ii&lt;/code&gt; と &lt;code&gt;kk&lt;/code&gt; のそれぞれをインデックスのタプルに設定します。</target>
        </trans-unit>
        <trans-unit id="f5170749efab413ba3776c33568562d9c4634a7d" translate="yes" xml:space="preserve">
          <source>This is equivalent to (but faster than) the following use of &lt;a href=&quot;numpy.ndindex#numpy.ndindex&quot;&gt;&lt;code&gt;ndindex&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;numpy.s_#numpy.s_&quot;&gt;&lt;code&gt;s_&lt;/code&gt;&lt;/a&gt;, which sets each of &lt;code&gt;ii&lt;/code&gt;, &lt;code&gt;jj&lt;/code&gt;, and &lt;code&gt;kk&lt;/code&gt; to a tuple of indices:</source>
          <target state="translated">これは、次の&lt;a href=&quot;numpy.ndindex#numpy.ndindex&quot;&gt; &lt;code&gt;ndindex&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;numpy.s_#numpy.s_&quot;&gt; &lt;code&gt;s_&lt;/code&gt; の&lt;/a&gt;使用と同等です（ただし、それよりも高速です）。これは、 &lt;code&gt;ii&lt;/code&gt; 、 &lt;code&gt;jj&lt;/code&gt; 、および &lt;code&gt;kk&lt;/code&gt; のそれぞれをインデックスのタプルに設定します。</target>
        </trans-unit>
        <trans-unit id="f723a36a0fdceaf5add767f4dfa10dbdef0cf27e" translate="yes" xml:space="preserve">
          <source>This is equivalent to (but faster than) the following use of &lt;code&gt;ndindex&lt;/code&gt; and &lt;code&gt;s_&lt;/code&gt;, which sets each of &lt;code&gt;ii&lt;/code&gt;, &lt;code&gt;jj&lt;/code&gt;, and &lt;code&gt;kk&lt;/code&gt; to a tuple of indices:</source>
          <target state="translated">これは、次の &lt;code&gt;ndindex&lt;/code&gt; および &lt;code&gt;s_&lt;/code&gt; の使用と同等です（ただし、それよりも高速です）。これは、 &lt;code&gt;ii&lt;/code&gt; 、 &lt;code&gt;jj&lt;/code&gt; 、および &lt;code&gt;kk&lt;/code&gt; のそれぞれをインデックスのタプルに設定します。</target>
        </trans-unit>
        <trans-unit id="9623032760a445ce084ed7cad1f49c8e81cbc730" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;code&gt;np.compress(ravel(condition), ravel(arr))&lt;/code&gt;. If &lt;code&gt;condition&lt;/code&gt; is boolean &lt;code&gt;np.extract&lt;/code&gt; is equivalent to &lt;code&gt;arr[condition]&lt;/code&gt;.</source>
          <target state="translated">これは &lt;code&gt;np.compress(ravel(condition), ravel(arr))&lt;/code&gt; と同等です。 &lt;code&gt;condition&lt;/code&gt; がブールの場合、 &lt;code&gt;np.extract&lt;/code&gt; は &lt;code&gt;arr[condition]&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="512416aca8fa4fb317d305f7a3902a8f4f57268d" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;code&gt;np.ma.compress_rowcols(a, 0)&lt;/code&gt;, see &lt;code&gt;extras.compress_rowcols&lt;/code&gt; for details.</source>
          <target state="translated">これは &lt;code&gt;np.ma.compress_rowcols(a, 0)&lt;/code&gt; と同等です。詳細は &lt;code&gt;extras.compress_rowcols&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="1aabefa5df0b67ecae64f8e5a2fb2a4d5dd2e5ee" translate="yes" xml:space="preserve">
          <source>This is equivalent to &lt;code&gt;np.ma.compress_rowcols(a, 1)&lt;/code&gt;, see &lt;code&gt;extras.compress_rowcols&lt;/code&gt; for details.</source>
          <target state="translated">これは &lt;code&gt;np.ma.compress_rowcols(a, 1)&lt;/code&gt; と同等です。詳細は &lt;code&gt;extras.compress_rowcols&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="2e12dd8fc795d33b8f8bcabb847c3e158c738c5e" translate="yes" xml:space="preserve">
          <source>This is equivalent to concatenation along the first axis after 1-D arrays of shape &lt;code&gt;(N,)&lt;/code&gt; have been reshaped to &lt;code&gt;(1,N)&lt;/code&gt;. Rebuilds arrays divided by &lt;a href=&quot;numpy.vsplit#numpy.vsplit&quot;&gt;&lt;code&gt;vsplit&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、形状 &lt;code&gt;(N,)&lt;/code&gt; 1次元配列が &lt;code&gt;(1,N)&lt;/code&gt; 再形成された後の最初の軸に沿った連結に相当します。&lt;a href=&quot;numpy.vsplit#numpy.vsplit&quot;&gt; &lt;code&gt;vsplit&lt;/code&gt; で&lt;/a&gt;分割された配列を再構築します。</target>
        </trans-unit>
        <trans-unit id="8a1612db7b39849ef3a6bd08b64bed8c3240f816" translate="yes" xml:space="preserve">
          <source>This is equivalent to concatenation along the first axis after 1-D arrays of shape &lt;code&gt;(N,)&lt;/code&gt; have been reshaped to &lt;code&gt;(1,N)&lt;/code&gt;. Rebuilds arrays divided by &lt;code&gt;vsplit&lt;/code&gt;.</source>
          <target state="translated">これは、形状 &lt;code&gt;(N,)&lt;/code&gt; 1次元配列が &lt;code&gt;(1,N)&lt;/code&gt; 再形成された後の最初の軸に沿った連結に相当します。 &lt;code&gt;vsplit&lt;/code&gt; で分割された配列を再構築します。</target>
        </trans-unit>
        <trans-unit id="e9676c88264ef3cd76556860f143548d10e94eb6" translate="yes" xml:space="preserve">
          <source>This is equivalent to concatenation along the second axis, except for 1-D arrays where it concatenates along the first axis. Rebuilds arrays divided by &lt;a href=&quot;numpy.hsplit#numpy.hsplit&quot;&gt;&lt;code&gt;hsplit&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、最初の軸に沿って連結する1次元配列を除いて、2番目の軸に沿った連結と同等です。&lt;a href=&quot;numpy.hsplit#numpy.hsplit&quot;&gt; &lt;code&gt;hsplit&lt;/code&gt; で&lt;/a&gt;分割された配列を再構築します。</target>
        </trans-unit>
        <trans-unit id="e6a5b26fca5a2a732affc24a30a8305bc7f4ee4d" translate="yes" xml:space="preserve">
          <source>This is equivalent to concatenation along the second axis, except for 1-D arrays where it concatenates along the first axis. Rebuilds arrays divided by &lt;a href=&quot;numpy.ma.hsplit#numpy.ma.hsplit&quot;&gt;&lt;code&gt;hsplit&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、最初の軸に沿って連結する1次元配列を除いて、2番目の軸に沿った連結と同等です。&lt;a href=&quot;numpy.ma.hsplit#numpy.ma.hsplit&quot;&gt; &lt;code&gt;hsplit&lt;/code&gt; で&lt;/a&gt;分割された配列を再構築します。</target>
        </trans-unit>
        <trans-unit id="5f3f85e2c1a9f572b9f43cddeb78f8794cecabcf" translate="yes" xml:space="preserve">
          <source>This is equivalent to concatenation along the third axis after 2-D arrays of shape &lt;code&gt;(M,N)&lt;/code&gt; have been reshaped to &lt;code&gt;(M,N,1)&lt;/code&gt; and 1-D arrays of shape &lt;code&gt;(N,)&lt;/code&gt; have been reshaped to &lt;code&gt;(1,N,1)&lt;/code&gt;. Rebuilds arrays divided by &lt;a href=&quot;numpy.dsplit#numpy.dsplit&quot;&gt;&lt;code&gt;dsplit&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、形状の2次元配列した後第3の軸に沿って連結と等価である &lt;code&gt;(M,N)&lt;/code&gt; に整形されている &lt;code&gt;(M,N,1)&lt;/code&gt; 及び形状の1-Dアレイ &lt;code&gt;(N,)&lt;/code&gt; に整形されている &lt;code&gt;(1,N,1)&lt;/code&gt; 。&lt;a href=&quot;numpy.dsplit#numpy.dsplit&quot;&gt; &lt;code&gt;dsplit&lt;/code&gt; で&lt;/a&gt;分割された配列を再構築します。</target>
        </trans-unit>
        <trans-unit id="5c6f9c31ab715a660b4d23dc2f49389f45ea5bda" translate="yes" xml:space="preserve">
          <source>This is equivalent to concatenation along the third axis after 2-D arrays of shape &lt;code&gt;(M,N)&lt;/code&gt; have been reshaped to &lt;code&gt;(M,N,1)&lt;/code&gt; and 1-D arrays of shape &lt;code&gt;(N,)&lt;/code&gt; have been reshaped to &lt;code&gt;(1,N,1)&lt;/code&gt;. Rebuilds arrays divided by &lt;code&gt;dsplit&lt;/code&gt;.</source>
          <target state="translated">これは、形状の2次元配列した後第3の軸に沿って連結と等価である &lt;code&gt;(M,N)&lt;/code&gt; に整形されている &lt;code&gt;(M,N,1)&lt;/code&gt; 及び形状の1-Dアレイ &lt;code&gt;(N,)&lt;/code&gt; に整形されている &lt;code&gt;(1,N,1)&lt;/code&gt; 。 &lt;code&gt;dsplit&lt;/code&gt; で分割された配列を再構築します。</target>
        </trans-unit>
        <trans-unit id="d218a0a3e8c4c5860255504a9ba19c22b6fab14a" translate="yes" xml:space="preserve">
          <source>This is equivalent to np.nonzero(np.ravel(a))[0].</source>
          <target state="translated">これは、np.nonzero(np.ravel(a))[0]と等価です。</target>
        </trans-unit>
        <trans-unit id="c1506fb5159fec603ce600935782977e9cc4a640" translate="yes" xml:space="preserve">
          <source>This is equivalent to the &lt;code&gt;density&lt;/code&gt; argument, but produces incorrect results for unequal bin widths. It should not be used.</source>
          <target state="translated">これは、 &lt;code&gt;density&lt;/code&gt; 引数と同等ですが、ビンの幅が等しくない場合、誤った結果が生成されます。使用しないでください。</target>
        </trans-unit>
        <trans-unit id="59cfbae4022883700bb27212977a0aea4a1ca893" translate="yes" xml:space="preserve">
          <source>This is equivalent to the buffer object structure in Python up to the ptr member. On 32-bit platforms (&lt;em&gt;i.e.&lt;/em&gt; if &lt;a href=&quot;c-api.config#c.NPY_SIZEOF_INT&quot;&gt;&lt;code&gt;NPY_SIZEOF_INT&lt;/code&gt;&lt;/a&gt; == &lt;code&gt;NPY_SIZEOF_INTP&lt;/code&gt;), the len member also matches an equivalent member of the buffer object. It is useful to represent a generic single-segment chunk of memory.</source>
          <target state="translated">これは、ptrメンバーまでのPythonのバッファーオブジェクト構造に相当します。32ビットプラットフォームでは（&lt;em&gt;つまり&lt;/em&gt;、&lt;a href=&quot;c-api.config#c.NPY_SIZEOF_INT&quot;&gt; &lt;code&gt;NPY_SIZEOF_INT&lt;/code&gt; &lt;/a&gt; == &lt;code&gt;NPY_SIZEOF_INTP&lt;/code&gt; の場合）、lenメンバーは、バッファーオブジェクトの同等のメンバーとも一致します。一般的な単一セグメントのメモリチャンクを表すと便利です。</target>
        </trans-unit>
        <trans-unit id="0c4a19f41f357e975c7ecf272280bda06a0a7837" translate="yes" xml:space="preserve">
          <source>This is equivalent to:</source>
          <target state="translated">に相当します。</target>
        </trans-unit>
        <trans-unit id="71a0da6263af85d6d95df709a66cce1cab814a13" translate="yes" xml:space="preserve">
          <source>This is for output arrays, and requires that the flag &lt;a href=&quot;#c.NPY_ITER_WRITEONLY&quot;&gt;&lt;code&gt;NPY_ITER_WRITEONLY&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#c.NPY_ITER_READWRITE&quot;&gt;&lt;code&gt;NPY_ITER_READWRITE&lt;/code&gt;&lt;/a&gt; be set. If &lt;code&gt;op[i]&lt;/code&gt; is NULL, creates a new array with the final broadcast dimensions, and a layout matching the iteration order of the iterator.</source>
          <target state="translated">これは出力配列用であり、フラグ&lt;a href=&quot;#c.NPY_ITER_WRITEONLY&quot;&gt; &lt;code&gt;NPY_ITER_WRITEONLY&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#c.NPY_ITER_READWRITE&quot;&gt; &lt;code&gt;NPY_ITER_READWRITE&lt;/code&gt; &lt;/a&gt;を設定する必要があります。 &lt;code&gt;op[i]&lt;/code&gt; がNULLの場合、最終的なブロードキャストの次元と、反復子の反復順序に一致するレイアウトで新しい配列を作成します。</target>
        </trans-unit>
        <trans-unit id="271064c73ce5e7dc4de339611f7b4db1a780a7f2" translate="yes" xml:space="preserve">
          <source>This is implemented using the &lt;code&gt;_geev&lt;/code&gt; LAPACK routines which compute the eigenvalues and eigenvectors of general square arrays.</source>
          <target state="translated">これは、一般的な正方配列の固有値と固有ベクトルを計算する &lt;code&gt;_geev&lt;/code&gt; LAPACKルーチンを使用して実装されます。</target>
        </trans-unit>
        <trans-unit id="caec4ff4a054237a51c7a499531b302398f70bf8" translate="yes" xml:space="preserve">
          <source>This is indicated in the documentation via input parameter specifications such as &lt;code&gt;a : (..., M, M) array_like&lt;/code&gt;. This means that if for instance given an input array &lt;code&gt;a.shape == (N, M, M)&lt;/code&gt;, it is interpreted as a &amp;ldquo;stack&amp;rdquo; of N matrices, each of size M-by-M. Similar specification applies to return values, for instance the determinant has &lt;code&gt;det : (...)&lt;/code&gt; and will in this case return an array of shape &lt;code&gt;det(a).shape == (N,)&lt;/code&gt;. This generalizes to linear algebra operations on higher-dimensional arrays: the last 1 or 2 dimensions of a multidimensional array are interpreted as vectors or matrices, as appropriate for each operation.</source>
          <target state="translated">これは &lt;code&gt;a : (..., M, M) array_like&lt;/code&gt; などの入力パラメーター仕様を介してドキュメントに示されています。これは、たとえば入力配列 &lt;code&gt;a.shape == (N, M, M)&lt;/code&gt; が指定された場合、サイズがM行M列のN個の行列の「スタック」として解釈されることを意味します。同様の仕様が戻り値に適用されます。たとえば、行列式には &lt;code&gt;det : (...)&lt;/code&gt; あり、この場合は形状 &lt;code&gt;det(a).shape == (N,)&lt;/code&gt; 配列を返します。これは、高次元配列の線形代数演算に一般化されます。多次元配列の最後の1または2次元は、各演算に応じて、ベクトルまたは行列として解釈されます。</target>
        </trans-unit>
        <trans-unit id="142401db7b88684f56ec37cbd8f1ca65b6bf6771" translate="yes" xml:space="preserve">
          <source>This is intended for working with source directories that are in an SVN repository.</source>
          <target state="translated">これは、SVN リポジトリ内にあるソースディレクトリを操作するためのものです。</target>
        </trans-unit>
        <trans-unit id="f497c1d2afa9510500c0e5d52cafff444023b2a6" translate="yes" xml:space="preserve">
          <source>This is needed by all Python objects. It consists of (at least) a reference count member ( &lt;code&gt;ob_refcnt&lt;/code&gt; ) and a pointer to the typeobject ( &lt;code&gt;ob_type&lt;/code&gt; ). (Other elements may also be present if Python was compiled with special options see Include/object.h in the Python source tree for more information). The ob_type member points to a Python type object.</source>
          <target state="translated">これはすべてのPythonオブジェクトで必要です。これは、（少なくとも）参照カウントメンバー（ &lt;code&gt;ob_refcnt&lt;/code&gt; ）とtypeobjectへのポインター（ &lt;code&gt;ob_type&lt;/code&gt; ）で構成されます。（Pythonが特別なオプションでコンパイルされた場合、他の要素も存在する可能性があります。詳細については、PythonソースツリーのInclude / object.hを参照してください）。ob_typeメンバーは、Python型オブジェクトを指します。</target>
        </trans-unit>
        <trans-unit id="dd8997d00c105166c9b4b9f773f5d0cdd6fa01f2" translate="yes" xml:space="preserve">
          <source>This is raised when an binary operation is passed Poly objects with different domains.</source>
          <target state="translated">これは、異なるドメインを持つポリオブジェクトにバイナリ演算が渡された場合に発生します。</target>
        </trans-unit>
        <trans-unit id="e57f721854d8f362e4016c48c315f6301f247f80" translate="yes" xml:space="preserve">
          <source>This is really &lt;a href=&quot;numpy.fft.irfftn#numpy.fft.irfftn&quot;&gt;&lt;code&gt;irfftn&lt;/code&gt;&lt;/a&gt; with different defaults. For more details see &lt;a href=&quot;numpy.fft.irfftn#numpy.fft.irfftn&quot;&gt;&lt;code&gt;irfftn&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは本当にある&lt;a href=&quot;numpy.fft.irfftn#numpy.fft.irfftn&quot;&gt; &lt;code&gt;irfftn&lt;/code&gt; &lt;/a&gt;異なるデフォルト値を持ちます。詳細については、&lt;a href=&quot;numpy.fft.irfftn#numpy.fft.irfftn&quot;&gt; &lt;code&gt;irfftn&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ed9f359368f007790ca5657cc8ec4082492a200b" translate="yes" xml:space="preserve">
          <source>This is really just &lt;a href=&quot;numpy.fft.rfftn#numpy.fft.rfftn&quot;&gt;&lt;code&gt;rfftn&lt;/code&gt;&lt;/a&gt; with different default behavior. For more details see &lt;a href=&quot;numpy.fft.rfftn#numpy.fft.rfftn&quot;&gt;&lt;code&gt;rfftn&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは実際には、デフォルトの動作が異なる&lt;a href=&quot;numpy.fft.rfftn#numpy.fft.rfftn&quot;&gt; &lt;code&gt;rfftn&lt;/code&gt; &lt;/a&gt;です。詳細については、&lt;a href=&quot;numpy.fft.rfftn#numpy.fft.rfftn&quot;&gt; &lt;code&gt;rfftn&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5ef26806f6ea74b6485ab483c2778eff715e4572" translate="yes" xml:space="preserve">
          <source>This is short-hand for &lt;code&gt;np.r_['-1,2,0', index expression]&lt;/code&gt;, which is useful because of its common occurrence. In particular, arrays will be stacked along their last axis after being upgraded to at least 2-D with 1&amp;rsquo;s post-pended to the shape (column vectors made out of 1-D arrays).</source>
          <target state="translated">これは &lt;code&gt;np.r_['-1,2,0', index expression]&lt;/code&gt; であり、よく発生するため便利です。特に、配列は、少なくとも2次元にアップグレードされた後、最後の軸に沿ってスタックされ、1が形状にポストされます（1次元配列から作成された列ベクトル）。</target>
        </trans-unit>
        <trans-unit id="1c88394abdc65a1b05a8dd5d8683693375531a89" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;#c.PyArray_NewFromDescr&quot;&gt;&lt;code&gt;PyArray_NewFromDescr&lt;/code&gt;&lt;/a&gt; (&amp;hellip;) except you specify the data-type descriptor with &lt;em&gt;type_num&lt;/em&gt; and &lt;em&gt;itemsize&lt;/em&gt;, where &lt;em&gt;type_num&lt;/em&gt; corresponds to a builtin (or user-defined) type. If the type always has the same number of bytes, then itemsize is ignored. Otherwise, itemsize specifies the particular size of this array.</source>
          <target state="translated">これは&lt;a href=&quot;#c.PyArray_NewFromDescr&quot;&gt; &lt;code&gt;PyArray_NewFromDescr&lt;/code&gt; &lt;/a&gt;（&amp;hellip;）に似ていますが、データ型記述子を&lt;em&gt;type_num&lt;/em&gt;と&lt;em&gt;itemsize&lt;/em&gt;で指定します&lt;em&gt;。type_num&lt;/em&gt;は組み込み（またはユーザー定義）型に対応します。タイプのバイト数が常に同じである場合、itemsizeは無視されます。それ以外の場合、itemsizeはこの配列の特定のサイズを指定します。</target>
        </trans-unit>
        <trans-unit id="ed43500d52b0e3a9d4bae70ddb5bfbe100ff1dd8" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;numpy.logspace#numpy.logspace&quot;&gt;&lt;code&gt;logspace&lt;/code&gt;&lt;/a&gt;, but with endpoints specified directly. Each output sample is a constant multiple of the previous.</source>
          <target state="translated">これは&lt;a href=&quot;numpy.logspace#numpy.logspace&quot;&gt; &lt;code&gt;logspace&lt;/code&gt; &lt;/a&gt;に似ていますが、エンドポイントが直接指定されています。各出力サンプルは、前のサンプルの定数倍です。</target>
        </trans-unit>
        <trans-unit id="852b3e753a1b8cdcb6346c93877a110d2d715f72" translate="yes" xml:space="preserve">
          <source>This is similar to choose or select, except that functions are evaluated on elements of &lt;code&gt;x&lt;/code&gt; that satisfy the corresponding condition from &lt;code&gt;condlist&lt;/code&gt;.</source>
          <target state="translated">これは、関数が &lt;code&gt;condlist&lt;/code&gt; からの対応する条件を満たす &lt;code&gt;x&lt;/code&gt; の要素で評価されることを除いて、chooseまたはselectに似ています。</target>
        </trans-unit>
        <trans-unit id="2c3a50a4a39023a7aa06d7ec91f3ecdac2409160" translate="yes" xml:space="preserve">
          <source>This is the &amp;ldquo;average&amp;rdquo; periodically compounded rate of return that gives a net present value of 0.0; for a more complete explanation, see Notes below.</source>
          <target state="translated">これは、正味現在価値が0.0になる「平均」の定期的に複合した収益率です。より完全な説明については、下記の注を参照してください。</target>
        </trans-unit>
        <trans-unit id="0dbc891d865ae88284f9bfa0a0edbf0c765484c8" translate="yes" xml:space="preserve">
          <source>This is the 1-d core function used by the dynamic ufuncs created by umath.frompyfunc(function, nin, nout). In this case &lt;em&gt;func&lt;/em&gt; is a pointer to a &lt;a href=&quot;#c.PyUFunc_PyFuncData&quot;&gt;&lt;code&gt;PyUFunc_PyFuncData&lt;/code&gt;&lt;/a&gt; structure which has definition</source>
          <target state="translated">これは、umath.frompyfunc（function、nin、nout）によって作成された動的ufuncが使用する1-dコア関数です。この場合、&lt;em&gt;func&lt;/em&gt;は定義を持つ&lt;a href=&quot;#c.PyUFunc_PyFuncData&quot;&gt; &lt;code&gt;PyUFunc_PyFuncData&lt;/code&gt; &lt;/a&gt;構造体へのポインターです</target>
        </trans-unit>
        <trans-unit id="692a8cf195747eb5dfe92c87d684aef132c27f68" translate="yes" xml:space="preserve">
          <source>This is the NumPy implementation of the C library function fmod, the remainder has the same sign as the dividend &lt;code&gt;x1&lt;/code&gt;. It is equivalent to the Matlab(TM) &lt;code&gt;rem&lt;/code&gt; function and should not be confused with the Python modulus operator &lt;code&gt;x1 % x2&lt;/code&gt;.</source>
          <target state="translated">これは、Cライブラリ関数fmodのNumPy実装です。残りは被除数 &lt;code&gt;x1&lt;/code&gt; と同じ符号を持ちます。これはMatlab（TM）の &lt;code&gt;rem&lt;/code&gt; 関数と同等であり、Pythonのモジュラス演算子 &lt;code&gt;x1 % x2&lt;/code&gt; と混同しないでください。</target>
        </trans-unit>
        <trans-unit id="9f70c1d8b15029e4bba377d8eb228f8ad3621041" translate="yes" xml:space="preserve">
          <source>This is the code that handles the situation whenever the input and/or output arrays are either misaligned or of the wrong data-type (including being byte-swapped) from what the underlying 1-D loop expects. The arrays are also assumed to be non-contiguous. The code works very much like the strided-loop except for the inner 1-D loop is modified so that pre-processing is performed on the inputs and post- processing is performed on the outputs in bufsize chunks (where bufsize is a user-settable parameter). The underlying 1-D computational loop is called on data that is copied over (if it needs to be). The setup code and the loop code is considerably more complicated in this case because it has to handle:</source>
          <target state="translated">これは,入力配列や出力配列のアラインメントが間違っていたり,(バイトスワップされている場合も含めて)基礎となる1次元ループが期待するものと異なるデータ型であったりする場合に,その状況を処理するコードです.また,配列は連続していないと仮定されます.このコードはstrided-loopと非常によく似た動作をしますが,内部の1-Dループが変更されており,入力に対して前処理が実行され,出力に対して後処理がbufsizeのチャンク(bufsizeはユーザが設定可能なパラメータ)で実行されるようになっています.基礎となる1次元計算ループは、(必要に応じて)コピーされたデータ上で呼び出されます。この場合,セットアップコードとループコードは,処理しなければならないため,かなり複雑になります.</target>
        </trans-unit>
        <trans-unit id="754ab86dfdc616fd9f3289ae80c9fb161f6f47b6" translate="yes" xml:space="preserve">
          <source>This is the main array creation function. Most new arrays are created with this flexible function.</source>
          <target state="translated">これがメインの配列作成関数です。ほとんどの新しい配列はこの柔軟な関数で作成されます。</target>
        </trans-unit>
        <trans-unit id="ae96a364309b5dfa1ba1a5f179699cc1e3ea0752" translate="yes" xml:space="preserve">
          <source>This is the main function used to obtain an array from any nested sequence, or object that exposes the array interface, &lt;em&gt;op&lt;/em&gt;. The parameters allow specification of the required &lt;em&gt;dtype&lt;/em&gt;, the minimum (&lt;em&gt;min_depth&lt;/em&gt;) and maximum (&lt;em&gt;max_depth&lt;/em&gt;) number of dimensions acceptable, and other &lt;em&gt;requirements&lt;/em&gt; for the array. This function &lt;strong&gt;steals a reference&lt;/strong&gt; to the dtype argument, which needs to be a &lt;a href=&quot;c-api.types-and-structures#c.PyArray_Descr&quot;&gt;&lt;code&gt;PyArray_Descr&lt;/code&gt;&lt;/a&gt; structure indicating the desired data-type (including required byteorder). The &lt;em&gt;dtype&lt;/em&gt; argument may be &lt;code&gt;NULL&lt;/code&gt;, indicating that any data-type (and byteorder) is acceptable. Unless &lt;a href=&quot;#c.NPY_ARRAY_FORCECAST&quot;&gt;&lt;code&gt;NPY_ARRAY_FORCECAST&lt;/code&gt;&lt;/a&gt; is present in &lt;code&gt;flags&lt;/code&gt;, this call will generate an error if the data type cannot be safely obtained from the object. If you want to use &lt;code&gt;NULL&lt;/code&gt; for the &lt;em&gt;dtype&lt;/em&gt; and ensure the array is notswapped then use &lt;a href=&quot;#c.PyArray_CheckFromAny&quot;&gt;&lt;code&gt;PyArray_CheckFromAny&lt;/code&gt;&lt;/a&gt;. A value of 0 for either of the depth parameters causes the parameter to be ignored. Any of the following array flags can be added (&lt;em&gt;e.g.&lt;/em&gt; using |) to get the &lt;em&gt;requirements&lt;/em&gt; argument. If your code can handle general (&lt;em&gt;e.g.&lt;/em&gt; strided, byte-swapped, or unaligned arrays) then &lt;em&gt;requirements&lt;/em&gt; may be 0. Also, if &lt;em&gt;op&lt;/em&gt; is not already an array (or does not expose the array interface), then a new array will be created (and filled from &lt;em&gt;op&lt;/em&gt; using the sequence protocol). The new array will have &lt;a href=&quot;#c.NPY_ARRAY_DEFAULT&quot;&gt;&lt;code&gt;NPY_ARRAY_DEFAULT&lt;/code&gt;&lt;/a&gt; as its flags member. The &lt;em&gt;context&lt;/em&gt; argument is passed to the &lt;a href=&quot;arrays.classes#numpy.class.__array__&quot;&gt;&lt;code&gt;__array__&lt;/code&gt;&lt;/a&gt; method of &lt;em&gt;op&lt;/em&gt; and is only used if the array is constructed that way. Almost always this parameter is &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">これは、入れ子になったシーケンスから配列を取得するために使用される主な関数、または配列インターフェイス&lt;em&gt;op&lt;/em&gt;を公​​開するオブジェクトです。パラメーターを使用すると、必要な&lt;em&gt;dtype&lt;/em&gt;、許容される最小（&lt;em&gt;min_depth&lt;/em&gt;）および最大（&lt;em&gt;max_depth&lt;/em&gt;）の次元数、および配列の他の&lt;em&gt;要件&lt;/em&gt;を指定できます。この関数は、必要なデータ型（必要な&lt;a href=&quot;c-api.types-and-structures#c.PyArray_Descr&quot;&gt; &lt;code&gt;PyArray_Descr&lt;/code&gt; &lt;/a&gt;を含む）を示すPyArray_Descr構造体である必要があるdtype引数への&lt;strong&gt;参照&lt;/strong&gt;を&lt;strong&gt;盗み&lt;/strong&gt;ます。&lt;em&gt;DTYPEの&lt;/em&gt;引数があってもよい &lt;code&gt;NULL&lt;/code&gt; 任意のデータ型（およびBYTEORDER）が許容可能であることを示します。ない限り&lt;a href=&quot;#c.NPY_ARRAY_FORCECAST&quot;&gt; &lt;code&gt;NPY_ARRAY_FORCECAST&lt;/code&gt; &lt;/a&gt;&lt;em&gt;&lt;/em&gt; &lt;code&gt;flags&lt;/code&gt; に存在する場合、オブジェクトからデータ型を安全に取得できない場合、この呼び出しはエラーを生成します。&lt;em&gt;dtypeに&lt;/em&gt; &lt;code&gt;NULL&lt;/code&gt; を使用し、配列がスワップされないようにする場合は、PyArray_CheckFromAnyを使用して&lt;a href=&quot;#c.PyArray_CheckFromAny&quot;&gt; &lt;code&gt;PyArray_CheckFromAny&lt;/code&gt; &lt;/a&gt;。深さパラメーターのいずれかの値が0の場合、パラメーターは無視されます。次の配列フラグのいずれかを追加して（&lt;em&gt;たとえば&lt;/em&gt;、|を使用）、&lt;em&gt;要件&lt;/em&gt;引数を取得できます。あなたのコードは、一般的な処理できる場合（&lt;em&gt;例えば&lt;/em&gt;ストライド、バイトスワップ、または非整列配列）は、その後&lt;em&gt;の要件が&lt;/em&gt;あれば、また0であってもよい&lt;em&gt;オペアンプ&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;はまだ配列ではない（または配列インターフェイスを公開していない）場合、新しい配列が作成されます（シーケンスプロトコルを使用して&lt;em&gt;op&lt;/em&gt;から入力されます）。新しい配列には、フラグメンバーとして&lt;a href=&quot;#c.NPY_ARRAY_DEFAULT&quot;&gt; &lt;code&gt;NPY_ARRAY_DEFAULT&lt;/code&gt; が&lt;/a&gt;あります。&lt;em&gt;コンテキスト&lt;/em&gt;引数が渡される&lt;a href=&quot;arrays.classes#numpy.class.__array__&quot;&gt; &lt;code&gt;__array__&lt;/code&gt; &lt;/a&gt;の方法&lt;em&gt;OP&lt;/em&gt;とアレイがそのように構成されている場合にのみ使用されます。ほとんどの場合、このパラメータは &lt;code&gt;NULL&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5ec8c6b5a6fa5ea604ca73fde0faa7f48e61f60d" translate="yes" xml:space="preserve">
          <source>This is the masked array version of &lt;a href=&quot;numpy.power#numpy.power&quot;&gt;&lt;code&gt;numpy.power&lt;/code&gt;&lt;/a&gt;. For details see &lt;a href=&quot;numpy.power#numpy.power&quot;&gt;&lt;code&gt;numpy.power&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;numpy.power#numpy.power&quot;&gt; &lt;code&gt;numpy.power&lt;/code&gt; の&lt;/a&gt;マスクされた配列バージョンです。詳細については、&lt;a href=&quot;numpy.power#numpy.power&quot;&gt; &lt;code&gt;numpy.power&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c5b5fdafede3bb67234ee18c22a5b997e8095961" translate="yes" xml:space="preserve">
          <source>This is the masked array version of &lt;code&gt;lib.index_tricks.RClass&lt;/code&gt;.</source>
          <target state="translated">これは、 &lt;code&gt;lib.index_tricks.RClass&lt;/code&gt; のマスクされた配列バージョンです。</target>
        </trans-unit>
        <trans-unit id="bf3cf3ae9cebee8b7306a5e44915e23de00facf1" translate="yes" xml:space="preserve">
          <source>This is the masked equivalent of the &lt;a href=&quot;numpy.resize#numpy.resize&quot;&gt;&lt;code&gt;numpy.resize&lt;/code&gt;&lt;/a&gt; function. The new array is filled with repeated copies of &lt;code&gt;x&lt;/code&gt; (in the order that the data are stored in memory). If &lt;code&gt;x&lt;/code&gt; is masked, the new array will be masked, and the new mask will be a repetition of the old one.</source>
          <target state="translated">これは、&lt;a href=&quot;numpy.resize#numpy.resize&quot;&gt; &lt;code&gt;numpy.resize&lt;/code&gt; &lt;/a&gt;関数のマスクされた同等物です。新しい配列は、 &lt;code&gt;x&lt;/code&gt; の繰り返しコピーで埋められます（データがメモリに格納される順序で）。場合は &lt;code&gt;x&lt;/code&gt; がマスクされて、新しい配列はマスクされ、新しいマスクは、古いものの繰り返しとなります。</target>
        </trans-unit>
        <trans-unit id="e638e46153cb5bd9d2b2cfadb202d5a4f7f60071" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;a href=&quot;numpy.ndarray.all#numpy.ndarray.all&quot;&gt;&lt;code&gt;ndarray.all&lt;/code&gt;&lt;/a&gt;, but it returns a &lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt;&lt;code&gt;matrix&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">これは&lt;a href=&quot;numpy.ndarray.all#numpy.ndarray.all&quot;&gt; &lt;code&gt;ndarray.all&lt;/code&gt; &lt;/a&gt;と同じですが、&lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt; &lt;code&gt;matrix&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="b28c44c91a00424416f03ba6b4985acf74627eb2" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;a href=&quot;numpy.ndarray.argmax#numpy.ndarray.argmax&quot;&gt;&lt;code&gt;ndarray.argmax&lt;/code&gt;&lt;/a&gt;, but returns a &lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt;&lt;code&gt;matrix&lt;/code&gt;&lt;/a&gt; object where &lt;a href=&quot;numpy.ndarray.argmax#numpy.ndarray.argmax&quot;&gt;&lt;code&gt;ndarray.argmax&lt;/code&gt;&lt;/a&gt; would return an &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、同じである&lt;a href=&quot;numpy.ndarray.argmax#numpy.ndarray.argmax&quot;&gt; &lt;code&gt;ndarray.argmax&lt;/code&gt; &lt;/a&gt;が、戻り&lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt; &lt;code&gt;matrix&lt;/code&gt; &lt;/a&gt;オブジェクト&lt;a href=&quot;numpy.ndarray.argmax#numpy.ndarray.argmax&quot;&gt; &lt;code&gt;ndarray.argmax&lt;/code&gt; を&lt;/a&gt;返す&lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="22b8e33a3b4d40024b90c85a13a94be90c9158a1" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;a href=&quot;numpy.ndarray.argmin#numpy.ndarray.argmin&quot;&gt;&lt;code&gt;ndarray.argmin&lt;/code&gt;&lt;/a&gt;, but returns a &lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt;&lt;code&gt;matrix&lt;/code&gt;&lt;/a&gt; object where &lt;a href=&quot;numpy.ndarray.argmin#numpy.ndarray.argmin&quot;&gt;&lt;code&gt;ndarray.argmin&lt;/code&gt;&lt;/a&gt; would return an &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、同じである&lt;a href=&quot;numpy.ndarray.argmin#numpy.ndarray.argmin&quot;&gt; &lt;code&gt;ndarray.argmin&lt;/code&gt; &lt;/a&gt;が、戻り&lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt; &lt;code&gt;matrix&lt;/code&gt; &lt;/a&gt;オブジェクト&lt;a href=&quot;numpy.ndarray.argmin#numpy.ndarray.argmin&quot;&gt; &lt;code&gt;ndarray.argmin&lt;/code&gt; を&lt;/a&gt;返す&lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b1090f814c7b352e9c36a05ce2322d963cddbde3" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;a href=&quot;numpy.ndarray.max#numpy.ndarray.max&quot;&gt;&lt;code&gt;ndarray.max&lt;/code&gt;&lt;/a&gt;, but returns a &lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt;&lt;code&gt;matrix&lt;/code&gt;&lt;/a&gt; object where &lt;a href=&quot;numpy.ndarray.max#numpy.ndarray.max&quot;&gt;&lt;code&gt;ndarray.max&lt;/code&gt;&lt;/a&gt; would return an ndarray.</source>
          <target state="translated">これは&lt;a href=&quot;numpy.ndarray.max#numpy.ndarray.max&quot;&gt; &lt;code&gt;ndarray.max&lt;/code&gt; &lt;/a&gt;と同じですが、&lt;a href=&quot;numpy.ndarray.max#numpy.ndarray.max&quot;&gt; &lt;code&gt;ndarray.max&lt;/code&gt; &lt;/a&gt;がndarrayを返す&lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt; &lt;code&gt;matrix&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="74e44d918d1f15516605ec010845ff539cc17530" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;a href=&quot;numpy.ndarray.min#numpy.ndarray.min&quot;&gt;&lt;code&gt;ndarray.min&lt;/code&gt;&lt;/a&gt;, but returns a &lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt;&lt;code&gt;matrix&lt;/code&gt;&lt;/a&gt; object where &lt;a href=&quot;numpy.ndarray.min#numpy.ndarray.min&quot;&gt;&lt;code&gt;ndarray.min&lt;/code&gt;&lt;/a&gt; would return an ndarray.</source>
          <target state="translated">これは&lt;a href=&quot;numpy.ndarray.min#numpy.ndarray.min&quot;&gt; &lt;code&gt;ndarray.min&lt;/code&gt; &lt;/a&gt;と同じですが、&lt;a href=&quot;numpy.ndarray.min#numpy.ndarray.min&quot;&gt; &lt;code&gt;ndarray.min&lt;/code&gt; &lt;/a&gt;がndarrayを返す&lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt; &lt;code&gt;matrix&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="124e720446d4f3612122d427a64991837042df14" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;a href=&quot;numpy.ndarray.std#numpy.ndarray.std&quot;&gt;&lt;code&gt;ndarray.std&lt;/code&gt;&lt;/a&gt;, except that where an &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt; would be returned, a &lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt;&lt;code&gt;matrix&lt;/code&gt;&lt;/a&gt; object is returned instead.</source>
          <target state="translated">これは&lt;a href=&quot;numpy.ndarray.std#numpy.ndarray.std&quot;&gt; &lt;code&gt;ndarray.std&lt;/code&gt; &lt;/a&gt;と同じですが、&lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt;が返される場合は、代わりに&lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt; &lt;code&gt;matrix&lt;/code&gt; &lt;/a&gt;オブジェクトが返されます。</target>
        </trans-unit>
        <trans-unit id="a0acdb03a11a0405720f9b33ec10bd3e67d6e4fa" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;a href=&quot;numpy.ndarray.sum#numpy.ndarray.sum&quot;&gt;&lt;code&gt;ndarray.sum&lt;/code&gt;&lt;/a&gt;, except that where an &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt; would be returned, a &lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt;&lt;code&gt;matrix&lt;/code&gt;&lt;/a&gt; object is returned instead.</source>
          <target state="translated">これは&lt;a href=&quot;numpy.ndarray.sum#numpy.ndarray.sum&quot;&gt; &lt;code&gt;ndarray.sum&lt;/code&gt; &lt;/a&gt;と同じですが、&lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt;が返される場合は、代わりに&lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt; &lt;code&gt;matrix&lt;/code&gt; &lt;/a&gt;オブジェクトが返されます。</target>
        </trans-unit>
        <trans-unit id="1b894bff66f53b91713c65daaeb95b50cb72fdfc" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;a href=&quot;numpy.ndarray.var#numpy.ndarray.var&quot;&gt;&lt;code&gt;ndarray.var&lt;/code&gt;&lt;/a&gt;, except that where an &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt; would be returned, a &lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt;&lt;code&gt;matrix&lt;/code&gt;&lt;/a&gt; object is returned instead.</source>
          <target state="translated">これは&lt;a href=&quot;numpy.ndarray.var#numpy.ndarray.var&quot;&gt; &lt;code&gt;ndarray.var&lt;/code&gt; &lt;/a&gt;と同じですが、&lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt;が返される場合は、代わりに&lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt; &lt;code&gt;matrix&lt;/code&gt; &lt;/a&gt;オブジェクトが返されます。</target>
        </trans-unit>
        <trans-unit id="d6c0a4b3ef29201f690f9b9b88a69b8608d63748" translate="yes" xml:space="preserve">
          <source>This is the same for half-precision float as npy_nextafter and npy_nextafterf described in the low-level floating point section.</source>
          <target state="translated">これは、低レベル浮動小数点の項で説明したnpy_nextafterやnpy_nextafterfと同様に、半精度浮動小数点の場合も同じです。</target>
        </trans-unit>
        <trans-unit id="5a28a11e64cd4476f1fd45344cb04aff7bece602" translate="yes" xml:space="preserve">
          <source>This is the same for half-precision float as npy_spacing and npy_spacingf described in the low-level floating point section.</source>
          <target state="translated">これは、低レベル浮動小数点の項で説明したnpy_spacingやnpy_spacingfと同様に、半精度floatでも同じです。</target>
        </trans-unit>
        <trans-unit id="69592e67862b42a94f582425221058b3b2e662f2" translate="yes" xml:space="preserve">
          <source>This is the same polynomial as obtained by:</source>
          <target state="translated">で得られる多項式と同じです。</target>
        </trans-unit>
        <trans-unit id="8f841f69094513c4d7f4558bcdd113fb62e5f1f7" translate="yes" xml:space="preserve">
          <source>This is the simplest case of all. The ufunc is executed by calling the underlying 1-D loop exactly once. This is possible only when we have aligned data of the correct type (including byte-order) for both input and output and all arrays have uniform strides (either contiguous, 0-D, or 1-D). In this case, the 1-D computational loop is called once to compute the calculation for the entire array. Note that the hardware error flags are only checked after the entire calculation is complete.</source>
          <target state="translated">これが最も単純なケースです。ufuncは,基礎となる1次元ループを1回だけ呼び出すことで実行されます.これは,入力と出力の両方に対して正しい型(バイトオーダーを含む)のデータが整列されていて,すべての配列が一様なストライド(連続,0-D,1-Dのいずれか)を持っている場合にのみ可能です.この場合,配列全体の計算を計算するために1次元計算ループが1回呼び出されます.ハードウェアエラーフラグは,計算全体が完了した後にのみチェックされることに注意してください.</target>
        </trans-unit>
        <trans-unit id="963cd66868f04208a7a1c2183e363716e0ef0cf2" translate="yes" xml:space="preserve">
          <source>This is the type which exposes the iterator to Python. Currently, no API is exposed which provides access to the values of a Python-created iterator. If an iterator is created in Python, it must be used in Python and vice versa. Such an API will likely be created in a future version.</source>
          <target state="translated">これはイテレータをPythonに公開する型です。現在のところ、Pythonで作成されたイテレータの値へのアクセスを提供するAPIは公開されていません。Pythonでイテレータが作成された場合、それはPythonで使用されなければなりませんし、その逆もまた然りです。このようなAPIは将来のバージョンで作成される可能性が高いでしょう。</target>
        </trans-unit>
        <trans-unit id="4b42439256132aabca2f53b261c973f7c679d369" translate="yes" xml:space="preserve">
          <source>This is useful for setting up an accumulation loop, for example. The iterator can first be created with all the dimensions, including the accumulation axis, so that the output gets created correctly. Then, the accumulation axis can be removed, and the calculation done in a nested fashion.</source>
          <target state="translated">これは、例えば、蓄積ループを設定するのに便利です。出力が正しく作成されるように、蓄積軸を含むすべての次元でイテレータを最初に作成することができます。その後、蓄積軸を削除して、入れ子になった方法で計算を行うことができます。</target>
        </trans-unit>
        <trans-unit id="5300cb088270de52a08527e24f73ff59ea30c2bb" translate="yes" xml:space="preserve">
          <source>This is useful in a setup.py script for adding sub-packages to a package.</source>
          <target state="translated">これはsetup.pyスクリプトでサブパッケージをパッケージに追加する際に便利です。</target>
        </trans-unit>
        <trans-unit id="82959a96175cd052449eddf58c5c4610e0b21bd3" translate="yes" xml:space="preserve">
          <source>This iterates over matching 1d slices oriented along the specified axis in the index and data arrays, and uses the former to look up values in the latter. These slices can be different lengths.</source>
          <target state="translated">これは,インデックス配列とデータ配列の指定された軸に沿って配置されたマッチする1次元スライスを繰り返し処理し,前者を使用して後者の値を検索します.これらのスライスは,異なる長さにすることができます.</target>
        </trans-unit>
        <trans-unit id="5c175a7e11a936be20457fa33dc8778b062c8741" translate="yes" xml:space="preserve">
          <source>This iterates over matching 1d slices oriented along the specified axis in the index and data arrays, and uses the former to place values into the latter. These slices can be different lengths.</source>
          <target state="translated">これは,インデックス配列とデータ配列の指定された軸に沿って配置されたマッチする1次元スライスを繰り返し処理し,前者を使用して後者に値を配置します.これらのスライスは,異なる長さにすることができます.</target>
        </trans-unit>
        <trans-unit id="1d9086a3e8f6e523e455adb859a4bc6cbea3019a" translate="yes" xml:space="preserve">
          <source>This iterator returns elements of the array to be iterated over in &lt;a href=&quot;numpy.lib.arrayterator#numpy.lib.Arrayterator&quot;&gt;&lt;code&gt;Arrayterator&lt;/code&gt;&lt;/a&gt; one by one. It is similar to &lt;code&gt;flatiter&lt;/code&gt;.</source>
          <target state="translated">この反復子は、&lt;a href=&quot;numpy.lib.arrayterator#numpy.lib.Arrayterator&quot;&gt; &lt;code&gt;Arrayterator&lt;/code&gt; で&lt;/a&gt; 1つずつ反復される配列の要素を返します。それは &lt;code&gt;flatiter&lt;/code&gt; に似ています。</target>
        </trans-unit>
        <trans-unit id="9621dd1cff206294072ec88c5bdff12776a1ac23" translate="yes" xml:space="preserve">
          <source>This just returns the value &lt;a href=&quot;#c.NPY_VERSION&quot;&gt;&lt;code&gt;NPY_VERSION&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#c.NPY_VERSION&quot;&gt;&lt;code&gt;NPY_VERSION&lt;/code&gt;&lt;/a&gt; changes whenever a backward incompatible change at the ABI level. Because it is in the C-API, however, comparing the output of this function from the value defined in the current header gives a way to test if the C-API has changed thus requiring a re-compilation of extension modules that use the C-API. This is automatically checked in the function &lt;a href=&quot;#c.import_array&quot;&gt;&lt;code&gt;import_array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは単に値&lt;a href=&quot;#c.NPY_VERSION&quot;&gt; &lt;code&gt;NPY_VERSION&lt;/code&gt; を&lt;/a&gt;返します。&lt;a href=&quot;#c.NPY_VERSION&quot;&gt; &lt;code&gt;NPY_VERSION&lt;/code&gt; &lt;/a&gt;は、ABIレベルで下位互換性のない変更が行われるたびに変更されます。ただし、C-APIにあるため、この関数の出力を現在のヘッダーで定義されている値と比較すると、C-APIが変更されたかどうかをテストでき、Cを使用する拡張モジュールの再コンパイルが必要になります。 -API。これは、関数&lt;a href=&quot;#c.import_array&quot;&gt; &lt;code&gt;import_array&lt;/code&gt; &lt;/a&gt;で自動的にチェックされます。</target>
        </trans-unit>
        <trans-unit id="75e16e673218df8f16a0a1029a429a437c420b9d" translate="yes" xml:space="preserve">
          <source>This just returns the value &lt;code&gt;NPY_FEATURE_VERSION&lt;/code&gt;. &lt;code&gt;NPY_FEATURE_VERSION&lt;/code&gt; changes whenever the API changes (e.g. a function is added). A changed value does not always require a recompile.</source>
          <target state="translated">これは単に値 &lt;code&gt;NPY_FEATURE_VERSION&lt;/code&gt; を返します。 &lt;code&gt;NPY_FEATURE_VERSION&lt;/code&gt; は、APIが変更される（関数が追加されるなど）たびに変更されます。変更された値は、常に再コンパイルする必要はありません。</target>
        </trans-unit>
        <trans-unit id="57131d2cbf8754e0c0045e65c405a8ff98703b38" translate="yes" xml:space="preserve">
          <source>This macro is defined to +inf.</source>
          <target state="translated">このマクロは+infに定義されています。</target>
        </trans-unit>
        <trans-unit id="8ca63ad5bc4e1dded64f0ca2a056ab5d5c7f090f" translate="yes" xml:space="preserve">
          <source>This macro is defined to -1.0.</source>
          <target state="translated">このマクロは-1.0に定義されています。</target>
        </trans-unit>
        <trans-unit id="b30ee77ae33429489972a6d1172613ede0e766a9" translate="yes" xml:space="preserve">
          <source>This macro is defined to -inf.</source>
          <target state="translated">このマクロは、-infに定義されています。</target>
        </trans-unit>
        <trans-unit id="b8842c8583817136af82824b8e5fdbb3f9c76f6e" translate="yes" xml:space="preserve">
          <source>This macro is defined to 1.0.</source>
          <target state="translated">このマクロは1.0に定義されています。</target>
        </trans-unit>
        <trans-unit id="bd01732ce89574cb085cbbd769f60ac683ce37ab" translate="yes" xml:space="preserve">
          <source>This macro is defined to a NaN (Not a Number), and is guaranteed to have the signbit unset (&amp;lsquo;positive&amp;rsquo; NaN). The corresponding single and extension precision macro are available with the suffix F and L.</source>
          <target state="translated">このマクロはNaN（非数）に対して定義され、符号ビットが未設定（「正」のNaN）になることが保証されています。対応する単精度および拡張精度マクロは、接尾辞FおよびLで利用できます。</target>
        </trans-unit>
        <trans-unit id="305a7f44534276994ed187e38461a42eaeb6b275" translate="yes" xml:space="preserve">
          <source>This macro is defined to a NaN value, guaranteed to have its sign bit unset.</source>
          <target state="translated">このマクロは NaN 値に対して定義され、その符号ビットがアンセットされることが保証されています。</target>
        </trans-unit>
        <trans-unit id="15a2136199da842d310792facc84af7246036426" translate="yes" xml:space="preserve">
          <source>This macro is defined to a positive inf. The corresponding single and extension precision macro are available with the suffix F and L.</source>
          <target state="translated">このマクロは正の inf に定義されています。対応する単精度マクロと拡張精度マクロは、接尾辞FとLで利用できます。</target>
        </trans-unit>
        <trans-unit id="c5ea17d1f0932fffe7fa9472293549c952ff5b71" translate="yes" xml:space="preserve">
          <source>This macro is defined to negative zero (that is with the sign bit set). The corresponding single and extension precision macro are available with the suffix F and L.</source>
          <target state="translated">こ のマ ク ロ は負のゼロに定義 さ れます (符号ビ ッ ト が設定 さ れています)。対応する単精度マクロと拡張精度マクロは、接尾辞 F と L で利用できます。</target>
        </trans-unit>
        <trans-unit id="28ffbdfd1fb5a238c0e6b132bd7b25e886a8862b" translate="yes" xml:space="preserve">
          <source>This macro is defined to negative zero.</source>
          <target state="translated">このマクロは負のゼロに定義されています。</target>
        </trans-unit>
        <trans-unit id="6499719d1e23e1af1e93848438b61bc7bf9fb167" translate="yes" xml:space="preserve">
          <source>This macro is defined to positive zero.</source>
          <target state="translated">このマクロは正のゼロに定義されています。</target>
        </trans-unit>
        <trans-unit id="c804fcf19685f98f19d42c1dc7c110945817d41e" translate="yes" xml:space="preserve">
          <source>This macro is defined to positive zero. The corresponding single and extension precision macro are available with the suffix F and L.</source>
          <target state="translated">このマクロは正のゼロに定義されています。対応する単精度マクロと拡張精度マクロは、接尾辞FとLで利用できます。</target>
        </trans-unit>
        <trans-unit id="c451240677ff61c1a609e49bd0f07f461a99c611" translate="yes" xml:space="preserve">
          <source>This may be used when you want to match up operand axes in some fashion, then remove them with &lt;code&gt;NpyIter_RemoveAxis&lt;/code&gt; to handle their processing manually. By calling this function before removing the axes, you can get the strides for the manual processing.</source>
          <target state="translated">これは、オペランドの軸を何らかの方法で一致させ、 &lt;code&gt;NpyIter_RemoveAxis&lt;/code&gt; でそれらを削除して、それらの処理を手動で処理する場合に使用できます。軸を削除する前にこの関数を呼び出すことにより、手動処理のストライドを取得できます。</target>
        </trans-unit>
        <trans-unit id="85b5c517a58e8aeec834229928a8cecac10d6dff" translate="yes" xml:space="preserve">
          <source>This member allows array objects to have weak references (using the weakref module).</source>
          <target state="translated">このメンバは、配列オブジェクトが弱い参照を持つことを可能にします (weakref モジュールを使用します)。</target>
        </trans-unit>
        <trans-unit id="ed18bc4ba4db4fad433f89f2b494c6f4723892b5" translate="yes" xml:space="preserve">
          <source>This member is used to hold a pointer to another Python object that is related to this array. There are two use cases:</source>
          <target state="translated">このメンバは、この配列に関連する別の Python オブジェクトへのポインタを保持するために使用されます。2つのユースケースがあります。</target>
        </trans-unit>
        <trans-unit id="9d7f481ab5f8b1d226ed9ed47a9904d6a830df77" translate="yes" xml:space="preserve">
          <source>This member points to an element in the ndarray indicated by the index.</source>
          <target state="translated">このメンバは、インデックスで示される ndarray の要素を指す。</target>
        </trans-unit>
        <trans-unit id="74643da87d06b0da62bc7a9a046a5adf218ab99e" translate="yes" xml:space="preserve">
          <source>This method directly exposes the the raw underlying pseudo-random number generator. All values are returned as unsigned 64-bit values irrespective of the number of bits produced by the PRNG.</source>
          <target state="translated">このメソッドは、基礎となる生の擬似乱数発生器を直接公開します。すべての値は、PRNG によって生成されたビット数に関係なく、符号なしの 64 ビット値として返されます。</target>
        </trans-unit>
        <trans-unit id="d818e6497cca20e6d8e8f1bc817ba9a89c8a342e" translate="yes" xml:space="preserve">
          <source>This method does nothing, except raise a ValueError exception. A masked array does not own its data and therefore cannot safely be resized in place. Use the &lt;a href=&quot;numpy.ma.resize#numpy.ma.resize&quot;&gt;&lt;code&gt;numpy.ma.resize&lt;/code&gt;&lt;/a&gt; function instead.</source>
          <target state="translated">このメソッドは、ValueError例外を発生させる以外は何もしません。マスクされた配列はそのデータを所有していないため、安全に適切なサイズに変更できません。代わりに&lt;a href=&quot;numpy.ma.resize#numpy.ma.resize&quot;&gt; &lt;code&gt;numpy.ma.resize&lt;/code&gt; &lt;/a&gt;関数を使用してください。</target>
        </trans-unit>
        <trans-unit id="f55c9dffed1c2a6b5a2a9bf81f22b788e98f67b4" translate="yes" xml:space="preserve">
          <source>This method is called whenever the system internally allocates a new array from &lt;em&gt;obj&lt;/em&gt;, where &lt;em&gt;obj&lt;/em&gt; is a subclass (subtype) of the &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt;. It can be used to change attributes of &lt;em&gt;self&lt;/em&gt; after construction (so as to ensure a 2-d matrix for example), or to update meta-information from the &amp;ldquo;parent.&amp;rdquo; Subclasses inherit a default implementation of this method that does nothing.</source>
          <target state="translated">システムが内部から新しいアレイ割り当てるたびに、このメソッドが呼び出され&lt;em&gt;OBJ&lt;/em&gt;、&lt;em&gt;objが&lt;/em&gt;のサブクラス（サブタイプ）である&lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; を&lt;/a&gt;。これは、（たとえば、2次元マトリックスを確実にするために）構築後に&lt;em&gt;自己の&lt;/em&gt;属性を変更するため、または「親」からのメタ情報を更新するために使用できます。サブクラスは、何もしないこのメソッドのデフォルト実装を継承します。</target>
        </trans-unit>
        <trans-unit id="5957d72b0ca4a0dc20466e5e727abd34e77443e1" translate="yes" xml:space="preserve">
          <source>This method is difficult to implement safely and may be deprecated in future releases of NumPy.</source>
          <target state="translated">この方法は安全に実装することが難しく、NumPyの将来のリリースでは非推奨となる可能性があります。</target>
        </trans-unit>
        <trans-unit id="7aaa9616f6dcdd0184bee8a152bd13d1e550b310" translate="yes" xml:space="preserve">
          <source>This method is for backward compatibility only: do not use.</source>
          <target state="translated">このメソッドは下位互換性のためだけのものです。</target>
        </trans-unit>
        <trans-unit id="83e657ddca83d2881d8a63d1d77710e25b3d7e94" translate="yes" xml:space="preserve">
          <source>This method scans files named __version__.py, &amp;lt;packagename&amp;gt;_version.py, version.py, and __svn_version__.py for string variables version, __version__, and &amp;lt;packagename&amp;gt;_version, until a version number is found.</source>
          <target state="translated">このメソッドは、バージョン番号が見つかるまで、__ version __。py、&amp;lt;packagename&amp;gt; _version.py、version.py、および__svn_version__.pyという名前のファイルをスキャンして、文字列変数version、__ version__、および&amp;lt;packagename&amp;gt; _versionを探します。</target>
        </trans-unit>
        <trans-unit id="f89805770623a7cfcc87bb87063713e7dd822816" translate="yes" xml:space="preserve">
          <source>This module contains all functions in the &lt;a href=&quot;index#module-numpy&quot;&gt;&lt;code&gt;numpy&lt;/code&gt;&lt;/a&gt; namespace, with the following replacement functions that return &lt;a href=&quot;generated/numpy.matrix#numpy.matrix&quot;&gt;&lt;code&gt;matrices&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarrays&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このモジュールには、&lt;a href=&quot;index#module-numpy&quot;&gt; &lt;code&gt;numpy&lt;/code&gt; &lt;/a&gt;名前空間のすべての関数が含まれています&lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarrays&lt;/code&gt; &lt;/a&gt;代わりに&lt;a href=&quot;generated/numpy.matrix#numpy.matrix&quot;&gt; &lt;code&gt;matrices&lt;/code&gt; &lt;/a&gt;を返す次の置換関数があります。</target>
        </trans-unit>
        <trans-unit id="265d65d83193df044b48a623f0d3f0dda63b008d" translate="yes" xml:space="preserve">
          <source>This module provides a number of objects (mostly functions) useful for dealing with Chebyshev series, including a &lt;a href=&quot;generated/numpy.polynomial.chebyshev.chebyshev#numpy.polynomial.chebyshev.Chebyshev&quot;&gt;&lt;code&gt;Chebyshev&lt;/code&gt;&lt;/a&gt; class that encapsulates the usual arithmetic operations. (General information on how this module represents and works with such polynomials is in the docstring for its &amp;ldquo;parent&amp;rdquo; sub-package, &lt;a href=&quot;routines.polynomials.package#module-numpy.polynomial&quot;&gt;&lt;code&gt;numpy.polynomial&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">このモジュールは、通常の算術演算をカプセル化する&lt;a href=&quot;generated/numpy.polynomial.chebyshev.chebyshev#numpy.polynomial.chebyshev.Chebyshev&quot;&gt; &lt;code&gt;Chebyshev&lt;/code&gt; &lt;/a&gt;クラスを含む、チェビシェフシリーズを処理するのに役立つ多くのオブジェクト（主に関数）を提供します。（このモジュールがこのような多項式をどのように表し、処理するかに関する一般的な情報は、その「親」サブパッケージ&lt;a href=&quot;routines.polynomials.package#module-numpy.polynomial&quot;&gt; &lt;code&gt;numpy.polynomial&lt;/code&gt; &lt;/a&gt;のdocstringにあります）。</target>
        </trans-unit>
        <trans-unit id="e0c12fd4ebad36a4626d24020b78132a2c170962" translate="yes" xml:space="preserve">
          <source>This module provides a number of objects (mostly functions) useful for dealing with Hermite series, including a &lt;a href=&quot;generated/numpy.polynomial.hermite.hermite#numpy.polynomial.hermite.Hermite&quot;&gt;&lt;code&gt;Hermite&lt;/code&gt;&lt;/a&gt; class that encapsulates the usual arithmetic operations. (General information on how this module represents and works with such polynomials is in the docstring for its &amp;ldquo;parent&amp;rdquo; sub-package, &lt;a href=&quot;routines.polynomials.package#module-numpy.polynomial&quot;&gt;&lt;code&gt;numpy.polynomial&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">このモジュールは、通常の算術演算をカプセル化する&lt;a href=&quot;generated/numpy.polynomial.hermite.hermite#numpy.polynomial.hermite.Hermite&quot;&gt; &lt;code&gt;Hermite&lt;/code&gt; &lt;/a&gt;クラスを含む、Hermiteシリーズの処理に役立つ多数のオブジェクト（主に関数）を提供します。（このモジュールがこのような多項式をどのように表し、処理するかに関する一般的な情報は、その「親」サブパッケージ&lt;a href=&quot;routines.polynomials.package#module-numpy.polynomial&quot;&gt; &lt;code&gt;numpy.polynomial&lt;/code&gt; &lt;/a&gt;のdocstringにあります）。</target>
        </trans-unit>
        <trans-unit id="009a1c885b932c48bc61dd45e0e34c3c31b1f286" translate="yes" xml:space="preserve">
          <source>This module provides a number of objects (mostly functions) useful for dealing with HermiteE series, including a &lt;a href=&quot;generated/numpy.polynomial.hermite_e.hermitee#numpy.polynomial.hermite_e.HermiteE&quot;&gt;&lt;code&gt;HermiteE&lt;/code&gt;&lt;/a&gt; class that encapsulates the usual arithmetic operations. (General information on how this module represents and works with such polynomials is in the docstring for its &amp;ldquo;parent&amp;rdquo; sub-package, &lt;a href=&quot;routines.polynomials.package#module-numpy.polynomial&quot;&gt;&lt;code&gt;numpy.polynomial&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">このモジュールは、通常の算術演算をカプセル化する&lt;a href=&quot;generated/numpy.polynomial.hermite_e.hermitee#numpy.polynomial.hermite_e.HermiteE&quot;&gt; &lt;code&gt;HermiteE&lt;/code&gt; &lt;/a&gt;クラスを含む、HermiteEシリーズを処理するのに役立つ多くのオブジェクト（主に関数）を提供します。（このモジュールがこのような多項式をどのように表し、処理するかに関する一般的な情報は、その「親」サブパッケージ&lt;a href=&quot;routines.polynomials.package#module-numpy.polynomial&quot;&gt; &lt;code&gt;numpy.polynomial&lt;/code&gt; &lt;/a&gt;のdocstringにあります）。</target>
        </trans-unit>
        <trans-unit id="0d0299f154387dc04b7a01cfe822909405b30805" translate="yes" xml:space="preserve">
          <source>This module provides a number of objects (mostly functions) useful for dealing with Laguerre series, including a &lt;a href=&quot;generated/numpy.polynomial.laguerre.laguerre#numpy.polynomial.laguerre.Laguerre&quot;&gt;&lt;code&gt;Laguerre&lt;/code&gt;&lt;/a&gt; class that encapsulates the usual arithmetic operations. (General information on how this module represents and works with such polynomials is in the docstring for its &amp;ldquo;parent&amp;rdquo; sub-package, &lt;a href=&quot;routines.polynomials.package#module-numpy.polynomial&quot;&gt;&lt;code&gt;numpy.polynomial&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">このモジュールは、通常の算術演算をカプセル化する&lt;a href=&quot;generated/numpy.polynomial.laguerre.laguerre#numpy.polynomial.laguerre.Laguerre&quot;&gt; &lt;code&gt;Laguerre&lt;/code&gt; &lt;/a&gt;クラスを含む、Laguerreシリーズを処理するのに役立つ多くのオブジェクト（主に関数）を提供します。（このモジュールがこのような多項式をどのように表し、処理するかに関する一般的な情報は、その「親」サブパッケージ&lt;a href=&quot;routines.polynomials.package#module-numpy.polynomial&quot;&gt; &lt;code&gt;numpy.polynomial&lt;/code&gt; &lt;/a&gt;のdocstringにあります）。</target>
        </trans-unit>
        <trans-unit id="97167a7dd7012c05d960d350608d944b8fc4844a" translate="yes" xml:space="preserve">
          <source>This module provides a number of objects (mostly functions) useful for dealing with Legendre series, including a &lt;a href=&quot;generated/numpy.polynomial.legendre.legendre#numpy.polynomial.legendre.Legendre&quot;&gt;&lt;code&gt;Legendre&lt;/code&gt;&lt;/a&gt; class that encapsulates the usual arithmetic operations. (General information on how this module represents and works with such polynomials is in the docstring for its &amp;ldquo;parent&amp;rdquo; sub-package, &lt;a href=&quot;routines.polynomials.package#module-numpy.polynomial&quot;&gt;&lt;code&gt;numpy.polynomial&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">このモジュールは、通常の算術演算をカプセル化する&lt;a href=&quot;generated/numpy.polynomial.legendre.legendre#numpy.polynomial.legendre.Legendre&quot;&gt; &lt;code&gt;Legendre&lt;/code&gt; &lt;/a&gt;クラスを含む、Legendreシリーズの処理に役立つ多数のオブジェクト（主に関数）を提供します。（このモジュールがこのような多項式をどのように表し、処理するかに関する一般的な情報は、その「親」サブパッケージ&lt;a href=&quot;routines.polynomials.package#module-numpy.polynomial&quot;&gt; &lt;code&gt;numpy.polynomial&lt;/code&gt; &lt;/a&gt;のdocstringにあります）。</target>
        </trans-unit>
        <trans-unit id="27218660297bbc1672326aa7fc0091aba0aa4b36" translate="yes" xml:space="preserve">
          <source>This module provides a number of objects (mostly functions) useful for dealing with Polynomial series, including a &lt;a href=&quot;generated/numpy.polynomial.polynomial.polynomial#numpy.polynomial.polynomial.Polynomial&quot;&gt;&lt;code&gt;Polynomial&lt;/code&gt;&lt;/a&gt; class that encapsulates the usual arithmetic operations. (General information on how this module represents and works with such polynomials is in the docstring for its &amp;ldquo;parent&amp;rdquo; sub-package, &lt;a href=&quot;routines.polynomials.package#module-numpy.polynomial&quot;&gt;&lt;code&gt;numpy.polynomial&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">このモジュールは、通常の算術演算をカプセル化する&lt;a href=&quot;generated/numpy.polynomial.polynomial.polynomial#numpy.polynomial.polynomial.Polynomial&quot;&gt; &lt;code&gt;Polynomial&lt;/code&gt; &lt;/a&gt;クラスを含む、Polynomialシリーズの処理に役立つ多数のオブジェクト（主に関数）を提供します。（このモジュールがこのような多項式をどのように表し、処理するかに関する一般的な情報は、その「親」サブパッケージ&lt;a href=&quot;routines.polynomials.package#module-numpy.polynomial&quot;&gt; &lt;code&gt;numpy.polynomial&lt;/code&gt; &lt;/a&gt;のdocstringにあります）。</target>
        </trans-unit>
        <trans-unit id="6505e2a54b4c90d04c624c70346ad867092f98b2" translate="yes" xml:space="preserve">
          <source>This module provides: error and warning objects; a polynomial base class; and some routines used in both the &lt;code&gt;polynomial&lt;/code&gt; and &lt;code&gt;chebyshev&lt;/code&gt; modules.</source>
          <target state="translated">このモジュールは以下を提供します：エラーおよび警告オブジェクト。多項式基本クラス; &lt;code&gt;polynomial&lt;/code&gt; モジュールと &lt;code&gt;chebyshev&lt;/code&gt; モジュールの両方で使用されるいくつかのルーチン。</target>
        </trans-unit>
        <trans-unit id="6f02b8e116f7a7bed4ba561da0ffe80943392202" translate="yes" xml:space="preserve">
          <source>This module&amp;rsquo;s representation of the Chebyshev series for &lt;code&gt;off + scl*x&lt;/code&gt;.</source>
          <target state="translated">このモジュールの &lt;code&gt;off + scl*x&lt;/code&gt; チェビシェフシリーズの表現。</target>
        </trans-unit>
        <trans-unit id="a628eacd0f4bb9dd57ff71e63c578eed78e261b5" translate="yes" xml:space="preserve">
          <source>This module&amp;rsquo;s representation of the Hermite series for &lt;code&gt;off + scl*x&lt;/code&gt;.</source>
          <target state="translated">このモジュールの &lt;code&gt;off + scl*x&lt;/code&gt; Hermiteシリーズの表現。</target>
        </trans-unit>
        <trans-unit id="9ab2b6eda8208cc86132d50e5e53a2cf2e15859d" translate="yes" xml:space="preserve">
          <source>This module&amp;rsquo;s representation of the Laguerre series for &lt;code&gt;off + scl*x&lt;/code&gt;.</source>
          <target state="translated">このモジュールの、 &lt;code&gt;off + scl*x&lt;/code&gt; ラゲールシリーズの表現。</target>
        </trans-unit>
        <trans-unit id="23eb81bc9bb7a5f0cbd08a18f3b739c712c791cf" translate="yes" xml:space="preserve">
          <source>This module&amp;rsquo;s representation of the Legendre series for &lt;code&gt;off + scl*x&lt;/code&gt;.</source>
          <target state="translated">このモジュールは、 &lt;code&gt;off + scl*x&lt;/code&gt; Legendreシリーズを表しています。</target>
        </trans-unit>
        <trans-unit id="d92e37a5c688f24c68244c7cd58f9c4410908a50" translate="yes" xml:space="preserve">
          <source>This module&amp;rsquo;s representation of the linear polynomial &lt;code&gt;off +
scl*x&lt;/code&gt;.</source>
          <target state="translated">このモジュールの線形多項式 &lt;code&gt;off + scl*x&lt;/code&gt; の表現。</target>
        </trans-unit>
        <trans-unit id="eaa2fd8c1567b66e551b17269b1ebbbc61f96243" translate="yes" xml:space="preserve">
          <source>This only affects the iterator when &lt;a href=&quot;c-api.array#c.NPY_KEEPORDER&quot;&gt;&lt;code&gt;NPY_KEEPORDER&lt;/code&gt;&lt;/a&gt; is specified for the order parameter. By default with &lt;a href=&quot;c-api.array#c.NPY_KEEPORDER&quot;&gt;&lt;code&gt;NPY_KEEPORDER&lt;/code&gt;&lt;/a&gt;, the iterator reverses axes which have negative strides, so that memory is traversed in a forward direction. This disables this step. Use this flag if you want to use the underlying memory-ordering of the axes, but don&amp;rsquo;t want an axis reversed. This is the behavior of &lt;code&gt;numpy.ravel(a, order='K')&lt;/code&gt;, for instance.</source>
          <target state="translated">これは、orderパラメーターに&lt;a href=&quot;c-api.array#c.NPY_KEEPORDER&quot;&gt; &lt;code&gt;NPY_KEEPORDER&lt;/code&gt; &lt;/a&gt;が指定されている場合にのみイテレーターに影響します。&lt;a href=&quot;c-api.array#c.NPY_KEEPORDER&quot;&gt; &lt;code&gt;NPY_KEEPORDER&lt;/code&gt; の&lt;/a&gt;デフォルトでは、反復子は負のストライドを持つ軸を反転させるため、メモリは順方向に移動します。これにより、このステップが無効になります。軸の基本的なメモリ順序を使用したいが、軸を逆にしたくない場合は、このフラグを使用します。これは、 &lt;code&gt;numpy.ravel(a, order='K')&lt;/code&gt; の動作です。</target>
        </trans-unit>
        <trans-unit id="ae6b1796953475091b5cdaeb39e4d7e996e315e6" translate="yes" xml:space="preserve">
          <source>This optional parameter specifies the interpolation method to use when the desired percentile lies between two data points &lt;code&gt;i &amp;lt; j&lt;/code&gt;:</source>
          <target state="translated">このオプションのパラメーターは、目的のパーセンタイルが2つのデータポイント &lt;code&gt;i &amp;lt; j&lt;/code&gt; 間にある場合に使用する補間方法を指定します。</target>
        </trans-unit>
        <trans-unit id="002fb17667dbbd628eca51b6e4ff99f2217649e0" translate="yes" xml:space="preserve">
          <source>This optional parameter specifies the interpolation method to use when the desired quantile lies between two data points &lt;code&gt;i &amp;lt; j&lt;/code&gt;:</source>
          <target state="translated">このオプションのパラメーターは、目的の変位値が2つのデータポイント &lt;code&gt;i &amp;lt; j&lt;/code&gt; 間にある場合に使用する補間方法を指定します。</target>
        </trans-unit>
        <trans-unit id="c342edf9966c2e18280c4d355db707b32be4bff5" translate="yes" xml:space="preserve">
          <source>This package was developed independently of NumPy and was integrated in version 1.17.0. The original repo is at &lt;a href=&quot;https://github.com/bashtage/randomgen&quot;&gt;https://github.com/bashtage/randomgen&lt;/a&gt;.</source>
          <target state="translated">このパッケージはNumPyから独立して開発され、バージョン1.17.0に統合されました。元のリポジトリは&lt;a href=&quot;https://github.com/bashtage/randomgen&quot;&gt;https://github.com/bashtage/randomgenにあります&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c427139240278bee81f47cf48768438afbe39755" translate="yes" xml:space="preserve">
          <source>This page describes the numpy-specific API for accessing the contents of a numpy array from other C extensions. &lt;a href=&quot;https://www.python.org/dev/peps/pep-3118&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3118&lt;/strong&gt;&lt;/a&gt; &amp;ndash; &lt;a href=&quot;https://docs.python.org/dev/c-api/buffer.html#c.PyObject_GetBuffer&quot;&gt;&lt;code&gt;The Revised Buffer Protocol&lt;/code&gt;&lt;/a&gt; introduces similar, standardized API to Python 2.6 and 3.0 for any extension module to use. &lt;a href=&quot;http://cython.org/&quot;&gt;Cython&lt;/a&gt;&amp;rsquo;s buffer array support uses the &lt;a href=&quot;https://www.python.org/dev/peps/pep-3118&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 3118&lt;/strong&gt;&lt;/a&gt; API; see the &lt;a href=&quot;https://github.com/cython/cython/wiki/tutorials-numpy&quot;&gt;Cython numpy tutorial&lt;/a&gt;. Cython provides a way to write code that supports the buffer protocol with Python versions older than 2.6 because it has a backward-compatible implementation utilizing the array interface described here.</source>
          <target state="translated">このページでは、他のC拡張からnumpy配列のコンテンツにアクセスするためのnumpy固有のAPIについて説明します。&lt;a href=&quot;https://www.python.org/dev/peps/pep-3118&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;PEP 3118&lt;/strong&gt;&lt;/a&gt; &amp;ndash; &lt;a href=&quot;https://docs.python.org/dev/c-api/buffer.html#c.PyObject_GetBuffer&quot;&gt; &lt;code&gt;The Revised Buffer Protocol&lt;/code&gt; &lt;/a&gt;は、Python 2.6および3.0に類似した標準化されたAPIを導入して、拡張モジュールを使用できるようにします。&lt;a href=&quot;http://cython.org/&quot;&gt;Cython&lt;/a&gt;のバッファアレイサポートは&lt;a href=&quot;https://www.python.org/dev/peps/pep-3118&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 3118&lt;/strong&gt;&lt;/a&gt; APIを使用します。&lt;a href=&quot;https://github.com/cython/cython/wiki/tutorials-numpy&quot;&gt;Cython numpyチュートリアルを&lt;/a&gt;参照してください。Cythonには、ここで説明する配列インターフェースを利用する下位互換性のある実装があるため、2.6より前のバージョンのPythonでバッファプロトコルをサポートするコードを記述する方法が提供されています。</target>
        </trans-unit>
        <trans-unit id="4df30a5dfa3e83d5a58c4b3babfef2e8f4555a00" translate="yes" xml:space="preserve">
          <source>This page documents the API for the iterator. The iterator is named &lt;code&gt;NpyIter&lt;/code&gt; and functions are named &lt;code&gt;NpyIter_*&lt;/code&gt;.</source>
          <target state="translated">このページには、イテレータのAPIが記載されています。イテレータの名前は &lt;code&gt;NpyIter&lt;/code&gt; で、関数の名前は &lt;code&gt;NpyIter_*&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b79e823ebc32815d2b3460b90e34d0a2f9bed7dc" translate="yes" xml:space="preserve">
          <source>This pointer may be cached before the iteration loop, calling &lt;code&gt;iternext&lt;/code&gt; will not change it.</source>
          <target state="translated">このポインターは、反復ループの前にキャッシュされる場合があり、 &lt;code&gt;iternext&lt;/code&gt; を呼び出しても変更されません。</target>
        </trans-unit>
        <trans-unit id="484a465c1e928c7fbd45d4d74c7fee12a21c59d4" translate="yes" xml:space="preserve">
          <source>This pointer may be cached before the iteration loop, calling &lt;code&gt;iternext&lt;/code&gt; will not change it. This function may be safely called without holding the Python GIL.</source>
          <target state="translated">このポインターは、反復ループの前にキャッシュされる場合があり、 &lt;code&gt;iternext&lt;/code&gt; を呼び出しても変更されません。この関数は、Python GILを保持せずに安全に呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="af7b379b2fcb530df7b5c66e85d1051773a408df" translate="yes" xml:space="preserve">
          <source>This property is a view on the imaginary part of this &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt;&lt;code&gt;MaskedArray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このプロパティは、この&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt; &lt;code&gt;MaskedArray&lt;/code&gt; の&lt;/a&gt;虚数部のビューです。</target>
        </trans-unit>
        <trans-unit id="9c2a714f693725c88c94ac2607ed6abee0322d99" translate="yes" xml:space="preserve">
          <source>This property is a view on the real part of this &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt;&lt;code&gt;MaskedArray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このプロパティは、この&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt; &lt;code&gt;MaskedArray&lt;/code&gt; の&lt;/a&gt;実際の部分のビューです。</target>
        </trans-unit>
        <trans-unit id="56ae11e0e5ca2982f115765c5eb4aa5c0c2cf88d" translate="yes" xml:space="preserve">
          <source>This reallocates space for the data area if necessary.</source>
          <target state="translated">これにより、必要に応じてデータ領域のスペースが再確保されます。</target>
        </trans-unit>
        <trans-unit id="3875a2efa104b3c26f06d6992550d8f8f4acd93f" translate="yes" xml:space="preserve">
          <source>This reference manual details functions, modules, and objects included in NumPy, describing what they are and what they do. For learning how to use NumPy, see also &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/user/index.html#user&quot;&gt;NumPy User Guide&lt;/a&gt;.</source>
          <target state="translated">このリファレンスマニュアルでは、NumPyに含まれる関数、モジュール、オブジェクトについて詳しく説明し、それらの機能と機能について説明します。NumPyの使用方法については、&lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/user/index.html#user&quot;&gt;NumPyユーザーガイド&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="49d7d34fc7b59b4f57a8fc699678974df3138f8f" translate="yes" xml:space="preserve">
          <source>This returns a tuple of indices that can be used to access the main diagonal of an array &lt;code&gt;a&lt;/code&gt; with &lt;code&gt;a.ndim &amp;gt;= 2&lt;/code&gt; dimensions and shape (n, n, &amp;hellip;, n). For &lt;code&gt;a.ndim = 2&lt;/code&gt; this is the usual diagonal, for &lt;code&gt;a.ndim &amp;gt; 2&lt;/code&gt; this is the set of indices to access &lt;code&gt;a[i, i, ..., i]&lt;/code&gt; for &lt;code&gt;i = [0..n-1]&lt;/code&gt;.</source>
          <target state="translated">この戻りアクセスするアレイの主対角線に使用することができる指標のタプル &lt;code&gt;a&lt;/code&gt; 用いて &lt;code&gt;a.ndim &amp;gt;= 2&lt;/code&gt; の寸法及び形状（N、N、...、N）。ため &lt;code&gt;a.ndim = 2&lt;/code&gt; これがため、通常の対角線である &lt;code&gt;a.ndim &amp;gt; 2&lt;/code&gt; これはアクセスするインデックスの集合である &lt;code&gt;a[i, i, ..., i]&lt;/code&gt; のために &lt;code&gt;i = [0..n-1]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="445408c5f27be1f1d331536d4e933a74a8f78cb0" translate="yes" xml:space="preserve">
          <source>This returns the base object of the array. In most cases, this means the object which owns the memory the array is pointing at.</source>
          <target state="translated">これは、配列の基底オブジェクトを返します。ほとんどの場合、これは配列が指し示しているメモリを所有するオブジェクトを意味します。</target>
        </trans-unit>
        <trans-unit id="a52ed8eb1e1cedf938d67a58ab208207008af6c7" translate="yes" xml:space="preserve">
          <source>This routine succeeds where ordinary &lt;a href=&quot;numpy.linalg.det#numpy.linalg.det&quot;&gt;&lt;code&gt;det&lt;/code&gt;&lt;/a&gt; does not:</source>
          <target state="translated">このルーチンは、通常の&lt;a href=&quot;numpy.linalg.det#numpy.linalg.det&quot;&gt; &lt;code&gt;det&lt;/code&gt; &lt;/a&gt;が成功しない場合に成功します。</target>
        </trans-unit>
        <trans-unit id="eb7064b0e5d0b37eaed95ef4ac40f47e88476c2d" translate="yes" xml:space="preserve">
          <source>This scheme does require that you avoid reusing stream IDs. This may require coordination between the parallel processes.</source>
          <target state="translated">この方式では、ストリーム ID の再利用を避ける必要があります。これは、並列プロセス間の調整が必要になるかもしれません。</target>
        </trans-unit>
        <trans-unit id="d2295424cf2146c8c588e01472068b4499bd8664" translate="yes" xml:space="preserve">
          <source>This section describes how the basic universal function computation loop is setup and executed for each of the three different kinds of execution. If &lt;code&gt;NPY_ALLOW_THREADS&lt;/code&gt; is defined during compilation, then as long as no object arrays are involved, the Python Global Interpreter Lock (GIL) is released prior to calling the loops. It is re-acquired if necessary to handle error conditions. The hardware error flags are checked only after the 1-D loop is completed.</source>
          <target state="translated">このセクションでは、3つの異なる種類の実行それぞれに対して、基本的なユニバーサル関数計算ループがどのように設定および実行されるかについて説明します。コンパイル中に &lt;code&gt;NPY_ALLOW_THREADS&lt;/code&gt; が定義されている場合、オブジェクト配列が含まれていない限り、ループを呼び出す前にPythonグローバルインタープリターロック（GIL）が解放されます。エラー状態を処理する必要がある場合は、再取得されます。ハードウェアエラーフラグは、1-Dループが完了した後にのみチェックされます。</target>
        </trans-unit>
        <trans-unit id="af85e32a0a54092009ceae627c9327451013292e" translate="yes" xml:space="preserve">
          <source>This should not be confused with:</source>
          <target state="translated">と混同してはいけません。</target>
        </trans-unit>
        <trans-unit id="281bd1fc18f2200e68ef811b640b0f24111b0170" translate="yes" xml:space="preserve">
          <source>This simply has the effect of switching the definitions of &lt;code&gt;arg1&lt;/code&gt; and &lt;code&gt;arg2&lt;/code&gt; in lines 3 and 4 of the generated code above, and their assignments in lines 19 and 20.</source>
          <target state="translated">これは単に、上記の生成されたコードの3行目と4行目の &lt;code&gt;arg1&lt;/code&gt; と &lt;code&gt;arg2&lt;/code&gt; の定義と、19行目と20行目の割り当てを切り替える効果があります。</target>
        </trans-unit>
        <trans-unit id="d5f0ce6428ed7ce9a3f007ac820d6ad83fbe35d9" translate="yes" xml:space="preserve">
          <source>This single module should provide all the common functionality for numpy tests in a single location, so that &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/dev/development_environment.html#development-environment&quot;&gt;test scripts&lt;/a&gt; can just import it and work right away. For background, see the &lt;a href=&quot;testing#testing-guidelines&quot;&gt;Testing Guidelines&lt;/a&gt;</source>
          <target state="translated">この単一のモジュールは、numpyテストのすべての一般的な機能を単一の場所で提供する必要があります。これにより、&lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/dev/development_environment.html#development-environment&quot;&gt;テストスクリプト&lt;/a&gt;は、それをインポートしてすぐに機能します。背景については、&lt;a href=&quot;testing#testing-guidelines&quot;&gt;テストガイドラインを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d96875a0b29939a3e2bb067cb066089a92949861" translate="yes" xml:space="preserve">
          <source>This structure is very useful when shape and/or strides information is supposed to be interpreted. The structure is:</source>
          <target state="translated">この構造は、形状および/またはストライド情報が解釈されることになっている場合に非常に有用である。この構造体は</target>
        </trans-unit>
        <trans-unit id="f5377b9ec1ee34b1b46afca48f12d70eda083569" translate="yes" xml:space="preserve">
          <source>This style allows passing in the &lt;a href=&quot;generated/numpy.dtype.fields#numpy.dtype.fields&quot;&gt;&lt;code&gt;fields&lt;/code&gt;&lt;/a&gt; attribute of a data-type object.</source>
          <target state="translated">このスタイルでは、データ型オブジェクトの&lt;a href=&quot;generated/numpy.dtype.fields#numpy.dtype.fields&quot;&gt; &lt;code&gt;fields&lt;/code&gt; &lt;/a&gt;属性を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="8baa5c3fa91f9d82d5f372676363ca92358b6704" translate="yes" xml:space="preserve">
          <source>This style does not accept &lt;em&gt;align&lt;/em&gt; in the &lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; constructor as it is assumed that all of the memory is accounted for by the array interface description.</source>
          <target state="translated">このスタイルは、すべてのメモリが配列インターフェイスの記述によって占められていると想定されている&lt;em&gt;ため&lt;/em&gt;、&lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;コンストラクターでは&lt;em&gt;align&lt;/em&gt;を受け入れません。</target>
        </trans-unit>
        <trans-unit id="63b067d6a5e8e9587ae90576ba34210d81e53f6b" translate="yes" xml:space="preserve">
          <source>This style has two required and three optional keys. The &lt;em&gt;names&lt;/em&gt; and &lt;em&gt;formats&lt;/em&gt; keys are required. Their respective values are equal-length lists with the field names and the field formats. The field names must be strings and the field formats can be any object accepted by &lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">このスタイルには、2つの必須キーと3つのオプションキーがあります。&lt;em&gt;名前&lt;/em&gt;と&lt;em&gt;形式&lt;/em&gt;のキーが必要とされています。それぞれの値は、フィールド名とフィールド形式を含む長さの等しいリストです。フィールド名は文字列である必要があり、フィールド形式は&lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;コンストラクターが受け入れる任意のオブジェクトにすることができます。</target>
        </trans-unit>
        <trans-unit id="9fd39c592746d75bfe12bf10bab5bf15e715d323" translate="yes" xml:space="preserve">
          <source>This subclass of ndarray has some unpleasant interactions with some operations, because it doesn&amp;rsquo;t quite fit properly as a subclass. An alternative to using this subclass is to create the &lt;code&gt;mmap&lt;/code&gt; object yourself, then create an ndarray with ndarray.__new__ directly, passing the object created in its &amp;lsquo;buffer=&amp;rsquo; parameter.</source>
          <target state="translated">このndarrayのサブクラスは、サブクラスとして適切に適合しないため、いくつかの操作との不愉快な相互作用があります。このサブクラスを使用する代わりに、 &lt;code&gt;mmap&lt;/code&gt; オブジェクトを自分で作成し、ndarray .__ new__を使用してndarrayを直接作成し、作成されたオブジェクトを 'buffer ='パラメーターで渡します。</target>
        </trans-unit>
        <trans-unit id="49e089f7d3412f57a533b95b4289e1725ee616b3" translate="yes" xml:space="preserve">
          <source>This template converter will replicate all &lt;strong&gt;function&lt;/strong&gt; and &lt;strong&gt;subroutine&lt;/strong&gt; blocks in the file with names that contain &amp;lsquo;&amp;lt;&amp;hellip;&amp;gt;&amp;rsquo; according to the rules in &amp;lsquo;&amp;lt;&amp;hellip;&amp;gt;&amp;rsquo;. The number of comma-separated words in &amp;lsquo;&amp;lt;&amp;hellip;&amp;gt;&amp;rsquo; determines the number of times the block is repeated. What these words are indicates what that repeat rule, &amp;lsquo;&amp;lt;&amp;hellip;&amp;gt;&amp;rsquo;, should be replaced with in each block. All of the repeat rules in a block must contain the same number of comma-separated words indicating the number of times that block should be repeated. If the word in the repeat rule needs a comma, leftarrow, or rightarrow, then prepend it with a backslash &amp;lsquo; &amp;lsquo;. If a word in the repeat rule matches &amp;lsquo; \&amp;lt;index&amp;gt;&amp;rsquo; then it will be replaced with the &amp;lt;index&amp;gt;-th word in the same repeat specification. There are two forms for the repeat rule: named and short.</source>
          <target state="translated">このテンプレートコンバーターは、すべての&lt;strong&gt;関数&lt;/strong&gt;と&lt;strong&gt;サブルーチン&lt;/strong&gt;を複製し&lt;strong&gt;ます&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;「&amp;lt;&amp;hellip;&amp;gt;」の規則に従って、「&amp;lt;&amp;hellip;&amp;gt;」を含む名前のファイル内のブロック。 '&amp;lt;&amp;hellip;&amp;gt;'内のコンマ区切りの単語の数により、ブロックが繰り返される回数が決まります。これらの単語が何であるかは、その繰り返しルール「&amp;lt;&amp;hellip;&amp;gt;」を各ブロックで置き換える必要があるものを示しています。ブロック内のすべての繰り返しルールには、同じ数のコンマ区切りの単語を含めて、ブロックを繰り返す回数を示す必要があります。繰り返しルール内の単語にコンマ、左矢印、または右矢印が必要な場合は、その前にバックスラッシュ「」を付けます。繰り返しルール内の単語が「\ &amp;lt;index&amp;gt;」に一致する場合、同じ繰り返し指定の&amp;lt;index&amp;gt;番目の単語に置き換えられます。繰り返しルールには、namedとshortの2つの形式があります。</target>
        </trans-unit>
        <trans-unit id="f3fb6c8e0c4b1a20c93f451ff612ab566979e83c" translate="yes" xml:space="preserve">
          <source>This type provides an iterator that encapsulates the concept of broadcasting. It allows</source>
          <target state="translated">この型は,ブロードキャストの概念をカプセル化したイテレータを提供します.これにより</target>
        </trans-unit>
        <trans-unit id="fedc2274acc4b818673988228fa9cde0f7271aad" translate="yes" xml:space="preserve">
          <source>This usage is discouraged, because it is ambiguous with the other dict-based construction method. If you have a field called &amp;lsquo;names&amp;rsquo; and a field called &amp;lsquo;formats&amp;rsquo; there will be a conflict.</source>
          <target state="translated">他のdictベースの構築方法とはあいまいなので、この使用はお勧めできません。「名前」というフィールドと「フォーマット」というフィールドがある場合、競合が発生します。</target>
        </trans-unit>
        <trans-unit id="57872c5abdb149b7d4963cf4f155c74d4913dff4" translate="yes" xml:space="preserve">
          <source>This version replaces the ASCII string (which in practice was latin1) with a utf8-encoded string, so supports structured types with any unicode field names.</source>
          <target state="translated">このバージョンでは、ASCII 文字列 (実際には latin1)を utf8 エンコードされた文字列に置き換えているので、任意の unicode フィールド名を持つ構造化型をサポートしています。</target>
        </trans-unit>
        <trans-unit id="3b6efd49b695f694142bfb54798d0f3fc1890e14" translate="yes" xml:space="preserve">
          <source>This will be a new view object if possible; otherwise, it will be a copy. Note there is no guarantee of the &lt;em&gt;memory layout&lt;/em&gt; (C- or Fortran- contiguous) of the returned array.</source>
          <target state="translated">これは、可能であれば新しいビューオブジェクトになります。それ以外の場合は、コピーになります。返される配列の&lt;em&gt;メモリレイアウト&lt;/em&gt;（CまたはFortran隣接）の保証はありません。</target>
        </trans-unit>
        <trans-unit id="8933167843c02b6efd0369f05c57b0cadbffbc22" translate="yes" xml:space="preserve">
          <source>This will install the file foo.ini into the directory package_dir/lib, and the foo.ini file will be generated from foo.ini.in, where each &lt;code&gt;@version@&lt;/code&gt; will be replaced by &lt;code&gt;subst_dict['version']&lt;/code&gt;. The dictionary has an additional prefix substitution rule automatically added, which contains the install prefix (since this is not easy to get from setup.py). npy-pkg-config files can also be installed at the same location as used for numpy, using the path returned from &lt;code&gt;get_npy_pkg_dir&lt;/code&gt; function.</source>
          <target state="translated">これにより、ファイルfoo.iniがディレクトリpackage_dir / libにインストールされ、foo.iniファイルはfoo.ini.inから生成されます。各 &lt;code&gt;@version@&lt;/code&gt; は &lt;code&gt;subst_dict['version']&lt;/code&gt; 置き換えられます。ディクショナリには追加のプレフィックス置換ルールが自動的に追加され、これにはインストールプレフィックスが含まれます（これはsetup.pyから簡単に取得できないため）。npy-pkg-configファイルは、 &lt;code&gt;get_npy_pkg_dir&lt;/code&gt; 関数から返されたパスを使用して、numpyと同じ場所にインストールすることもできます。</target>
        </trans-unit>
        <trans-unit id="00582fa3dde2e164fba27e484b480804eaaba584" translate="yes" xml:space="preserve">
          <source>This works for both standard installs and in-place builds, i.e. the &lt;code&gt;@prefix@&lt;/code&gt; refer to the source directory for in-place builds.</source>
          <target state="translated">これは、標準インストールとインプレースビルドの両方で機能します。つまり、 &lt;code&gt;@prefix@&lt;/code&gt; は、インプレースビルドのソースディレクトリを指します。</target>
        </trans-unit>
        <trans-unit id="8dbc0909265236a8e2f517b68e39944b2e4da272" translate="yes" xml:space="preserve">
          <source>Those can be useful for precise floating point comparison.</source>
          <target state="translated">これらは、正確な浮動小数点比較を行うのに便利です。</target>
        </trans-unit>
        <trans-unit id="ae29a3649bad434c98c44c18fb3c7ec696b132a3" translate="yes" xml:space="preserve">
          <source>Those who want really good performance out of their low level operations should strongly consider directly using the iteration API provided in C, but for those who are not comfortable with C or C++, Cython is a good middle ground with reasonable performance tradeoffs. For the &lt;a href=&quot;generated/numpy.nditer#numpy.nditer&quot;&gt;&lt;code&gt;nditer&lt;/code&gt;&lt;/a&gt; object, this means letting the iterator take care of broadcasting, dtype conversion, and buffering, while giving the inner loop to Cython.</source>
          <target state="translated">低レベルの操作で本当に優れたパフォーマンスを望んでいる人は、Cで提供されている反復APIを直接使用することを強く検討する必要がありますが、CまたはC ++に慣れていない人にとっては、Cythonは妥当なパフォーマンストレードオフを備えた良い中間点です。用&lt;a href=&quot;generated/numpy.nditer#numpy.nditer&quot;&gt; &lt;code&gt;nditer&lt;/code&gt; の&lt;/a&gt;オブジェクト、Cythonに内側のループを与えながら、放送、DTYPE変換、バッファリングのイテレータの世話をさせるこの手段。</target>
        </trans-unit>
        <trans-unit id="35e557dff981ec6af1be9c041d1715ad421f55bd" translate="yes" xml:space="preserve">
          <source>Threading support</source>
          <target state="translated">スレッディングサポート</target>
        </trans-unit>
        <trans-unit id="2d3ac6352887bde0f838813d8ea2d7bd7a567c2f" translate="yes" xml:space="preserve">
          <source>Three common use cases are:</source>
          <target state="translated">3つの一般的なユースケースがあります。</target>
        </trans-unit>
        <trans-unit id="987f8885750fc51202cc3964c96525b26400aa8c" translate="yes" xml:space="preserve">
          <source>Three-by-two array of random numbers from [-5, 0):</source>
          <target state="translated">5,0)からの乱数の3×2配列。</target>
        </trans-unit>
        <trans-unit id="648f2b8e04236f9ba0d33739777255491d46f3b0" translate="yes" xml:space="preserve">
          <source>Threshold below which SVD values are considered zero. If &lt;code&gt;tol&lt;/code&gt; is None, and &lt;code&gt;S&lt;/code&gt; is an array with singular values for &lt;code&gt;M&lt;/code&gt;, and &lt;code&gt;eps&lt;/code&gt; is the epsilon value for datatype of &lt;code&gt;S&lt;/code&gt;, then &lt;code&gt;tol&lt;/code&gt; is set to &lt;code&gt;S.max() * max(M.shape) * eps&lt;/code&gt;.</source>
          <target state="translated">SVD値がゼロと見なされるしきい値。場合 &lt;code&gt;tol&lt;/code&gt; Noneです、そして &lt;code&gt;S&lt;/code&gt; は特異の値を持つ配列であり、 &lt;code&gt;M&lt;/code&gt; 、及び &lt;code&gt;eps&lt;/code&gt; のデータ型のイプシロン値であり、 &lt;code&gt;S&lt;/code&gt; は、 &lt;code&gt;tol&lt;/code&gt; に設定されている &lt;code&gt;S.max() * max(M.shape) * eps&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3a18ce980b9b6a0af6ba5335aa5043a3f61a2139" translate="yes" xml:space="preserve">
          <source>Throw a dice 20 times:</source>
          <target state="translated">サイコロを20回投げる。</target>
        </trans-unit>
        <trans-unit id="699ce8b0c5a25495e7df7b31eb754f06f5937265" translate="yes" xml:space="preserve">
          <source>Tile an array.</source>
          <target state="translated">配列をタイル状にします。</target>
        </trans-unit>
        <trans-unit id="9478b387e78ee7ed878f28def0d9d737a40db3cf" translate="yes" xml:space="preserve">
          <source>Tiling arrays</source>
          <target state="translated">タイリング配列</target>
        </trans-unit>
        <trans-unit id="ae9e32a7bf76d858a6643fb3d615f4e6b741df45" translate="yes" xml:space="preserve">
          <source>Time span (absolute)</source>
          <target state="translated">タイムスパン(絶対値)</target>
        </trans-unit>
        <trans-unit id="83a0b67f984af7843f2cd5f9c4c4a4937a96b824" translate="yes" xml:space="preserve">
          <source>Time span (relative)</source>
          <target state="translated">タイムスパン(相対</target>
        </trans-unit>
        <trans-unit id="f427901653e2f16331f232b03616db8d30b0bf3e" translate="yes" xml:space="preserve">
          <source>Timedelta</source>
          <target state="translated">Timedelta</target>
        </trans-unit>
        <trans-unit id="a836f04893b4c22a5902f8a189928c3d93f72795" translate="yes" xml:space="preserve">
          <source>Timezone information to use when displaying the datetime. If &amp;lsquo;UTC&amp;rsquo;, end with a Z to indicate UTC time. If &amp;lsquo;local&amp;rsquo;, convert to the local timezone first, and suffix with a +-#### timezone offset. If a tzinfo object, then do as with &amp;lsquo;local&amp;rsquo;, but use the specified timezone.</source>
          <target state="translated">日時を表示するときに使用するタイムゾーン情報。「UTC」の場合、UTC時間を示すZで終了します。「ローカル」の場合、最初にローカルタイムゾーンに変換し、接尾辞に+-####タイムゾーンオフセットを付けます。tzinfoオブジェクトの場合、 'local'の場合と同じようにしますが、指定されたタイムゾーンを使用します。</target>
        </trans-unit>
        <trans-unit id="661d4063b8ec8980f63428513015c42d7d7a39d4" translate="yes" xml:space="preserve">
          <source>Timings</source>
          <target state="translated">Timings</target>
        </trans-unit>
        <trans-unit id="18696f01e06a1b84af54b40680c306637cf01d64" translate="yes" xml:space="preserve">
          <source>Timsort is added for better performance on already or nearly sorted data. On random data timsort is almost identical to mergesort. It is now used for stable sort while quicksort is still the default sort if none is chosen. For details of timsort, refer to &lt;a href=&quot;https://github.com/python/cpython/blob/3.7/Objects/listsort.txt&quot;&gt;CPython listsort.txt&lt;/a&gt;. &amp;lsquo;mergesort&amp;rsquo; and &amp;lsquo;stable&amp;rsquo; are mapped to radix sort for integer data types. Radix sort is an O(n) sort instead of O(n log n).</source>
          <target state="translated">Timsortが追加され、すでにまたはほぼソートされたデータのパフォーマンスが向上します。ランダムデータでは、timsortはmergesortとほぼ同じです。何も選択されていない場合はクイックソートがデフォルトのソートのままですが、安定したソートに使用されるようになりました。timsortの詳細については、&lt;a href=&quot;https://github.com/python/cpython/blob/3.7/Objects/listsort.txt&quot;&gt;CPython listsort.txtを&lt;/a&gt;参照してください。'mergesort'および 'stable'は、整数データ型の基数ソートにマップされます。基数ソートは、O（n log n）ではなくO（n）ソートです。</target>
        </trans-unit>
        <trans-unit id="d19ceca501465c339e3bcf2bc0d8ff02bb697d6c" translate="yes" xml:space="preserve">
          <source>Tip</source>
          <target state="translated">Tip</target>
        </trans-unit>
        <trans-unit id="e96f3984eaaf637764ee32773288dabcc604bf6b" translate="yes" xml:space="preserve">
          <source>Tips &amp;amp; Tricks</source>
          <target state="translated">ヒントとコツ</target>
        </trans-unit>
        <trans-unit id="caa39d36bfce368de59fb6b06774c2bd179f06cf" translate="yes" xml:space="preserve">
          <source>Title case words start with uppercase characters, all remaining cased characters are lowercase.</source>
          <target state="translated">タイトルの大文字の単語は大文字から始まり、残りの大文字はすべて小文字になります。</target>
        </trans-unit>
        <trans-unit id="45c41172aa1c58d7ba017f081fcd4e2ace4e86f0" translate="yes" xml:space="preserve">
          <source>Title that is printed in the string representation of &lt;a href=&quot;#numpy.MachAr&quot;&gt;&lt;code&gt;MachAr&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#numpy.MachAr&quot;&gt; &lt;code&gt;MachAr&lt;/code&gt; &lt;/a&gt;の文字列表現で出力されるタイトル。</target>
        </trans-unit>
        <trans-unit id="20fb23c1b6aaaab924d80202c9bd41b9e867e2de" translate="yes" xml:space="preserve">
          <source>To Cython-ize this function, we replace the inner loop (y[&amp;hellip;] += x*x) with Cython code that&amp;rsquo;s specialized for the float64 dtype. With the &amp;lsquo;external_loop&amp;rsquo; flag enabled, the arrays provided to the inner loop will always be one-dimensional, so very little checking needs to be done.</source>
          <target state="translated">この関数をCython化するには、内側のループ（y [&amp;hellip;] + = x * x）を、float64 dtypeに特化したCythonコードに置き換えます。'external_loop'フラグを有効にすると、内側のループに提供される配列は常に1次元になるため、実行する必要のあるチェックはほとんどありません。</target>
        </trans-unit>
        <trans-unit id="36e086a6bd3eb648c4aebbd467026f4cd1c91bb0" translate="yes" xml:space="preserve">
          <source>To achieve a behaviour similar to the basic slicing above, broadcasting can be used. The function &lt;a href=&quot;generated/numpy.ix_#numpy.ix_&quot;&gt;&lt;code&gt;ix_&lt;/code&gt;&lt;/a&gt; can help with this broadcasting. This is best understood with an example.</source>
          <target state="translated">上記の基本的なスライスと同様の動作を実現するには、ブロードキャストを使用できます。関数&lt;a href=&quot;generated/numpy.ix_#numpy.ix_&quot;&gt; &lt;code&gt;ix_&lt;/code&gt; &lt;/a&gt;は、このブロードキャストに役立ちます。これは、例で最もよく理解されます。</target>
        </trans-unit>
        <trans-unit id="03c09cbfb1aed4718ffc26452a3968e86a1cd3bc" translate="yes" xml:space="preserve">
          <source>To allow the datetime to be used in contexts where only certain days of the week are valid, NumPy includes a set of &amp;ldquo;busday&amp;rdquo; (business day) functions.</source>
          <target state="translated">特定の曜日のみが有効なコンテキストで日時を使用できるようにするために、NumPyには一連の「busday」（営業日）関数が含まれています。</target>
        </trans-unit>
        <trans-unit id="8941cedf9a3b3622178e2a604f85c6f9966d6beb" translate="yes" xml:space="preserve">
          <source>To create a masked array where all values close to 1.e20 are invalid, we would do:</source>
          <target state="translated">1.e20に近い値がすべて無効なマスク付き配列を作成するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="fdf86d74a7427ac0a22c6f0a9b96d12080099d0c" translate="yes" xml:space="preserve">
          <source>To create an array with the second element invalid, we would do:</source>
          <target state="translated">2 番目の要素が無効な配列を作成するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="97ab86f3d69d58ce3be53a871603ed078f8824cf" translate="yes" xml:space="preserve">
          <source>To describe the type of scalar data, there are several &lt;a href=&quot;arrays.scalars#arrays-scalars-built-in&quot;&gt;built-in scalar types&lt;/a&gt; in NumPy for various precision of integers, floating-point numbers, &lt;em&gt;etc&lt;/em&gt;. An item extracted from an array, &lt;em&gt;e.g.&lt;/em&gt;, by indexing, will be a Python object whose type is the scalar type associated with the data type of the array.</source>
          <target state="translated">スカラーデータのタイプを説明するために、NumPyには、整数や浮動小数点数&lt;em&gt;などの&lt;/em&gt;さまざまな精度の&lt;a href=&quot;arrays.scalars#arrays-scalars-built-in&quot;&gt;組み込みスカラータイプ&lt;/a&gt;がいくつかあります。アレイから抽出された項目は、&lt;em&gt;例えば&lt;/em&gt;、索引付けすることによって、その型配列のデータ型に関連付けられているスカラ型であるPythonオブジェクトあろう。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="42815d30b39c91ade5f76679c62182278601bee8" translate="yes" xml:space="preserve">
          <source>To do buffered reduction requires yet another adjustment during the setup. Normally the iterator construction involves copying the first buffer of data from the readable arrays into the buffer. Any reduction operand is readable, so it may be read into a buffer. Unfortunately, initialization of the operand after this buffering operation is complete will not be reflected in the buffer that the iteration starts with, and garbage results will be produced.</source>
          <target state="translated">バッファ付きリダクションを行うには、セットアップ中にさらに別の調整が必要になります。通常、イテレータの構築では、読み出し可能な配列からバッファにデータの最初のバッファをコピーすることを含みます。任意のリダクションオペランドは可読なので、バッファに読み込まれても構いません。残念ながら、このバッファリング操作が完了した後のオペランドの初期化は、イテレータが開始するバッファに反映されず、ガベージ結果が発生します。</target>
        </trans-unit>
        <trans-unit id="2a3fff7f3035206492b3a95d3cbf852432de0dee" translate="yes" xml:space="preserve">
          <source>To enable and control broadcasting, use an ellipsis. Default NumPy-style broadcasting is done by adding an ellipsis to the left of each term, like &lt;code&gt;np.einsum('...ii-&amp;gt;...i', a)&lt;/code&gt;. To take the trace along the first and last axes, you can do &lt;code&gt;np.einsum('i...i', a)&lt;/code&gt;, or to do a matrix-matrix product with the left-most indices instead of rightmost, one can do &lt;code&gt;np.einsum('ij...,jk...-&amp;gt;ik...', a, b)&lt;/code&gt;.</source>
          <target state="translated">ブロードキャストを有効にして制御するには、省略記号を使用します。デフォルトのNumPyスタイルのブロードキャストは、 &lt;code&gt;np.einsum('...ii-&amp;gt;...i', a)&lt;/code&gt; ように、各用語の左側に省略記号を追加することによって行われます。最初と最後の軸に沿ってトレースを取得するには、 &lt;code&gt;np.einsum('i...i', a)&lt;/code&gt; を実行するか、右端ではなく左端のインデックスを使用して行列-行列積を実行します。 &lt;code&gt;np.einsum('ij...,jk...-&amp;gt;ik...', a, b)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="09fc0ca575462761f878d637a2fecf46e1ccd71c" translate="yes" xml:space="preserve">
          <source>To facilitate this many similar unit tests, some high-level programming techniques are employed, including C and &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; macros, as well as Python inheritance. The purpose of this document is to describe the testing infrastructure employed to verify that the &lt;code&gt;numpy.i&lt;/code&gt; typemaps are working as expected.</source>
          <target state="translated">この多くの同様の単体テストを容易にするために、Pythonの継承だけでなく、Cおよび&lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt;マクロを含むいくつかの高レベルのプログラミング手法が採用されています。このドキュメントの目的は、 &lt;code&gt;numpy.i&lt;/code&gt; タイプマップが期待どおりに機能していることを確認するために採用されているテストインフラストラクチャについて説明することです。</target>
        </trans-unit>
        <trans-unit id="df1248d3a4c3c276bf78a49ecea34ca2333414db" translate="yes" xml:space="preserve">
          <source>To find how many valid days there are in a specified range of datetime64 dates, use &lt;a href=&quot;generated/numpy.busday_count#numpy.busday_count&quot;&gt;&lt;code&gt;busday_count&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">指定されたdatetime64日付の範囲にある有効な日数を見つけるには、&lt;a href=&quot;generated/numpy.busday_count#numpy.busday_count&quot;&gt; &lt;code&gt;busday_count&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="381cf7b173efa6d304977d6f48b6eab1589b8ebf" translate="yes" xml:space="preserve">
          <source>To find the union of more than two arrays, use functools.reduce:</source>
          <target state="translated">2つ以上の配列の和を見つけるには、functools.reduceを使用します。</target>
        </trans-unit>
        <trans-unit id="8cb65420b2ca2983f196bbc9804b56531579abff" translate="yes" xml:space="preserve">
          <source>To group the indices by element, rather than dimension, use &lt;a href=&quot;numpy.argwhere#numpy.argwhere&quot;&gt;&lt;code&gt;argwhere&lt;/code&gt;&lt;/a&gt;, which returns a row for each non-zero element.</source>
          <target state="translated">次元ではなく要素ごとにインデックスをグループ化するには、&lt;a href=&quot;numpy.argwhere#numpy.argwhere&quot;&gt; &lt;code&gt;argwhere&lt;/code&gt; を&lt;/a&gt;使用します。これは、ゼロ以外の各要素の行を返します。</target>
        </trans-unit>
        <trans-unit id="dd77da9e3cc0e1b206296360b148e66d7e5bf3e1" translate="yes" xml:space="preserve">
          <source>To group the indices by element, rather than dimension, use instead:</source>
          <target state="translated">インデックスを次元ではなく要素ごとにグループ化するには、代わりに使用します。</target>
        </trans-unit>
        <trans-unit id="5ceadcdbd2ecba0b0b71d04b040d27f4a8978392" translate="yes" xml:space="preserve">
          <source>To intersect more than two arrays, use functools.reduce:</source>
          <target state="translated">2つ以上の配列を交差させるには、functools.reduceを使用します。</target>
        </trans-unit>
        <trans-unit id="68755700558e4129caf4a1646cfbb8316cee0dd6" translate="yes" xml:space="preserve">
          <source>To make an iterator similar to the old iterator, this should work.</source>
          <target state="translated">古いイテレータに似たようなイテレータを作るには、これがうまくいくはずです。</target>
        </trans-unit>
        <trans-unit id="dcb62bb890eb45640b1d129077fff1a1982947c5" translate="yes" xml:space="preserve">
          <source>To make the necessary build options available to third parties, you could use the &lt;code&gt;npy-pkg-config&lt;/code&gt; mechanism implemented in &lt;a href=&quot;#module-numpy.distutils&quot;&gt;&lt;code&gt;numpy.distutils&lt;/code&gt;&lt;/a&gt;. This mechanism is based on a .ini file which contains all the options. A .ini file is very similar to .pc files as used by the pkg-config unix utility:</source>
          <target state="translated">必要なビルドオプションをサードパーティが利用できるようにするには、&lt;a href=&quot;#module-numpy.distutils&quot;&gt; &lt;code&gt;numpy.distutils&lt;/code&gt; に&lt;/a&gt;実装されている &lt;code&gt;npy-pkg-config&lt;/code&gt; メカニズムを使用できます。このメカニズムは、すべてのオプションを含む.iniファイルに基づいています。.iniファイルは、pkg-config unixユーティリティで使用される.pcファイルとよく似ています。</target>
        </trans-unit>
        <trans-unit id="02d722ee9de32d295a3f1aa488c332a62e29240a" translate="yes" xml:space="preserve">
          <source>To put back the default options, you can use:</source>
          <target state="translated">デフォルトのオプションに戻すには</target>
        </trans-unit>
        <trans-unit id="33f422775354a46e3c9c41ff160bfb3c38d25920" translate="yes" xml:space="preserve">
          <source>To reduce the chance of misinterpretation, even though the following &amp;ldquo;abuse&amp;rdquo; is nominally supported, &lt;code&gt;choices&lt;/code&gt; should neither be, nor be thought of as, a single array, i.e., the outermost sequence-like container should be either a list or a tuple.</source>
          <target state="translated">誤解の可能性を減らすために、次の「乱用」は名目上サポートされていますが、 &lt;code&gt;choices&lt;/code&gt; は単一の配列ではなく、またそのように考えるべきではありません。つまり、最も外側のシーケンスのようなコンテナーはリストまたはタプルでなければなりません。</target>
        </trans-unit>
        <trans-unit id="69f7fdf215ee6723757c121f1000e16153523a1d" translate="yes" xml:space="preserve">
          <source>To retrieve only the valid entries, we can use the inverse of the mask as an index. The inverse of the mask can be calculated with the &lt;a href=&quot;generated/numpy.logical_not#numpy.logical_not&quot;&gt;&lt;code&gt;numpy.logical_not&lt;/code&gt;&lt;/a&gt; function or simply with the &lt;code&gt;~&lt;/code&gt; operator:</source>
          <target state="translated">有効なエントリのみを取得するには、マスクの逆をインデックスとして使用できます。マスクの逆は、&lt;a href=&quot;generated/numpy.logical_not#numpy.logical_not&quot;&gt; &lt;code&gt;numpy.logical_not&lt;/code&gt; &lt;/a&gt;関数または単に &lt;code&gt;~&lt;/code&gt; 演算子を使用して計算できます。</target>
        </trans-unit>
        <trans-unit id="e546770d4089912cdd192abaecf0b1e29a9e2943" translate="yes" xml:space="preserve">
          <source>To return the indices of the values common to the input arrays along with the intersected values:</source>
          <target state="translated">入力配列に共通する値のインデックスを,交差する値とともに返す。</target>
        </trans-unit>
        <trans-unit id="67e6eaca69e6f48eb1845e3b15fc19b5fce3851f" translate="yes" xml:space="preserve">
          <source>To run SciPy&amp;rsquo;s full test suite, use the following:</source>
          <target state="translated">SciPyの完全なテストスイートを実行するには、以下を使用します。</target>
        </trans-unit>
        <trans-unit id="9661928d3b7e0b0f53e4248625106d96b260f714" translate="yes" xml:space="preserve">
          <source>To sample from N evenly spaced floating-point numbers between a and b, use:</source>
          <target state="translated">aとbの間の等間隔のN個の浮動小数点数からサンプリングするには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="a4d884174d72a1ce55f9ee4b7d870c154a7a32b7" translate="yes" xml:space="preserve">
          <source>To skip a test, simply use &lt;code&gt;skipif&lt;/code&gt;:</source>
          <target state="translated">テストをスキップするには、単に &lt;code&gt;skipif&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="673335eebf9011c1628160cca5d99d26576f081d" translate="yes" xml:space="preserve">
          <source>To take the running sum of four successive values:</source>
          <target state="translated">4つの連続した値の総和を取ること。</target>
        </trans-unit>
        <trans-unit id="54587f602166cab38648eb3409cd921150aa4e7e" translate="yes" xml:space="preserve">
          <source>To test a datetime64 value to see if it is a valid day, use &lt;a href=&quot;generated/numpy.is_busday#numpy.is_busday&quot;&gt;&lt;code&gt;is_busday&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">datetime64値をテストして、それが有効な日かどうかを確認するには、&lt;a href=&quot;generated/numpy.is_busday#numpy.is_busday&quot;&gt; &lt;code&gt;is_busday&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="ecbd73988a92874f75c5ca6f8256cc9806ceef6d" translate="yes" xml:space="preserve">
          <source>To unmask all masked entries of a masked array (provided the mask isn&amp;rsquo;t a hard mask), the simplest solution is to assign the constant &lt;a href=&quot;maskedarray.baseclass#numpy.ma.nomask&quot;&gt;&lt;code&gt;nomask&lt;/code&gt;&lt;/a&gt; to the mask:</source>
          <target state="translated">マスクされた配列のすべてのマスクされたエントリのマスクを解除するには（マスクがハードマスクでない場合）、最も簡単な解決策は、定数&lt;a href=&quot;maskedarray.baseclass#numpy.ma.nomask&quot;&gt; &lt;code&gt;nomask&lt;/code&gt; &lt;/a&gt;をマスクに割り当てることです。</target>
        </trans-unit>
        <trans-unit id="573c20b6a49882f7eb74a61c9d6cc94e9816cad4" translate="yes" xml:space="preserve">
          <source>To unmask one or several specific entries, we can just assign one or several new valid values to them:</source>
          <target state="translated">1つまたは複数の特定のエントリのマスクを解除するには、それらのエントリに1つまたは複数の新しい有効な値を代入するだけです。</target>
        </trans-unit>
        <trans-unit id="678a8d94c4368f39ac59f5979ae212033bfc0aa2" translate="yes" xml:space="preserve">
          <source>To use the NPY_NO_DEPRECATED_API mechanism, you need to #define it to the target API version of NumPy before #including any NumPy headers. If you want to confirm that your code is clean against 1.7, use:</source>
          <target state="translated">NPY_NO_DEPRECATED_APIメカニズムを使用するには、#NumPyヘッダーを含む前に、#NumPyのターゲットAPIバージョンに定義する必要があります。1.7に対してコードがクリーンであることを確認したい場合は、以下を使ってください。</target>
        </trans-unit>
        <trans-unit id="a6632c1bd45113f2d4d1587bfeed07e24b0355a1" translate="yes" xml:space="preserve">
          <source>To use the core math library in your own extension, you need to add the npymath compile and link options to your extension in your setup.py:</source>
          <target state="translated">コア数学ライブラリを独自の拡張機能で使用するには、setup.py で npymath のコンパイルとリンクオプションを拡張機能に追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="9b09eedfc76bdeeb31bc979256f245ac870f03de" translate="yes" xml:space="preserve">
          <source>Toggle between low-endian and big-endian data representation by returning a byteswapped array, optionally swapped in-place.</source>
          <target state="translated">バイトスワップされた配列を返すことで、ローエンディアンとビッグエンディアンのデータ表現を切り替えます。</target>
        </trans-unit>
        <trans-unit id="7b37ca94c4e2eda42b84355ca6a25cdc55774133" translate="yes" xml:space="preserve">
          <source>Tolerance in machine epsilons for the complex part of the elements in the array.</source>
          <target state="translated">配列内の要素の複雑な部分のマシンイプシロンでの公差。</target>
        </trans-unit>
        <trans-unit id="eb34b2131d6523965cdff1a43f4d01b982373d17" translate="yes" xml:space="preserve">
          <source>Tolerance parameters passed on to &lt;code&gt;isclose&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;isclose&lt;/code&gt; に渡される許容パラメータ</target>
        </trans-unit>
        <trans-unit id="6670aa4fd96fc23b9c267762a58d3e2634e5e33d" translate="yes" xml:space="preserve">
          <source>Tolerance when checking the singular values in covariance matrix. cov is cast to double before the check.</source>
          <target state="translated">共分散行列の特異値をチェックする際の許容範囲.</target>
        </trans-unit>
        <trans-unit id="62511550774b90e55fa9f4d081340a2b9a412907" translate="yes" xml:space="preserve">
          <source>Total bytes consumed by the elements of the array.</source>
          <target state="translated">配列の要素で消費される総バイト数。</target>
        </trans-unit>
        <trans-unit id="f98da7ab34ca5eed412ebdc84c5c6ee4a001f890" translate="yes" xml:space="preserve">
          <source>Total number of array elements which trigger summarization rather than full repr (default 1000).</source>
          <target state="translated">完全なreprではなくサマリー化を行う配列要素の総数(デフォルトは1000)。</target>
        </trans-unit>
        <trans-unit id="d7665d1d201c9ce2fd429127a2f276d913bba99d" translate="yes" xml:space="preserve">
          <source>Total number of array elements which trigger summarization rather than full repr. Defaults to &lt;code&gt;numpy.get_printoptions()['threshold']&lt;/code&gt;.</source>
          <target state="translated">完全な表現ではなく要約をトリガーする配列要素の総数。デフォルトは &lt;code&gt;numpy.get_printoptions()['threshold']&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7b009fd84652963a9ad5cd24ef82072817ddee41" translate="yes" xml:space="preserve">
          <source>Total size of broadcasted result.</source>
          <target state="translated">放送された結果の合計サイズ。</target>
        </trans-unit>
        <trans-unit id="77cca581150b844f956409245e7a5aa4e911b340" translate="yes" xml:space="preserve">
          <source>Trace of a matrix:</source>
          <target state="translated">行列のトレース。</target>
        </trans-unit>
        <trans-unit id="b67024bc850bfd9a0093e89cd78bf7093386c17c" translate="yes" xml:space="preserve">
          <source>Trace of an array, &lt;a href=&quot;numpy.trace#numpy.trace&quot;&gt;&lt;code&gt;numpy.trace&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">配列のトレース&lt;a href=&quot;numpy.trace#numpy.trace&quot;&gt; &lt;code&gt;numpy.trace&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ed0e339a8e0484e2fd0a0d26f8fea815f7ce8155" translate="yes" xml:space="preserve">
          <source>Tracking an Index or Multi-Index</source>
          <target state="translated">インデックスまたはマルチインデックスのトラッキング</target>
        </trans-unit>
        <trans-unit id="4cf0fc0db43adb86a6609aeef379773c878c22d3" translate="yes" xml:space="preserve">
          <source>Tracking an index or multi-index is incompatible with using an external loop, because it requires a different index value per element. If you try to combine these flags, the &lt;a href=&quot;generated/numpy.nditer#numpy.nditer&quot;&gt;&lt;code&gt;nditer&lt;/code&gt;&lt;/a&gt; object will raise an exception</source>
          <target state="translated">インデックスまたはマルチインデックスの追跡は、要素ごとに異なるインデックス値を必要とするため、外部ループの使用と互換性がありません。これらのフラグを組み合わせようとすると、&lt;a href=&quot;generated/numpy.nditer#numpy.nditer&quot;&gt; &lt;code&gt;nditer&lt;/code&gt; &lt;/a&gt;オブジェクトは例外を発生させます</target>
        </trans-unit>
        <trans-unit id="0de8c9ca9943956fbbe74f36e563016e4ecbb6f6" translate="yes" xml:space="preserve">
          <source>Trailing (i.e., highest order) elements with absolute value less than or equal to &lt;code&gt;tol&lt;/code&gt; (default value is zero) are removed.</source>
          <target state="translated">絶対値が &lt;code&gt;tol&lt;/code&gt; （デフォルト値はゼロ）以下の末尾（つまり、最高次数）の要素は削除されます。</target>
        </trans-unit>
        <trans-unit id="556492d634d78a1f54a40b4fbbb6e6c53716147d" translate="yes" xml:space="preserve">
          <source>Trailing zeros in the coefficients will be used in the evaluation, so they should be avoided if efficiency is a concern.</source>
          <target state="translated">係数の末尾のゼロは評価に使用されるので、効率性を重視する場合は避けるべきです。</target>
        </trans-unit>
        <trans-unit id="745b5ecf9a2d85dc724cf9ddd7a6df396eb1df69" translate="yes" xml:space="preserve">
          <source>Transforms a masked array into a flexible-type array.</source>
          <target state="translated">マスクされた配列をフレキシブル型の配列に変換します.</target>
        </trans-unit>
        <trans-unit id="5335ed0e86bcde3b96f32fd1545910f420f14d2e" translate="yes" xml:space="preserve">
          <source>Transition notice</source>
          <target state="translated">移行のお知らせ</target>
        </trans-unit>
        <trans-unit id="d362208ff2e702ca3538568841ed00ca61c441f9" translate="yes" xml:space="preserve">
          <source>Translate slice objects to concatenation along the first axis.</source>
          <target state="translated">スライスオブジェクトを第1軸に沿って連結するように変換します。</target>
        </trans-unit>
        <trans-unit id="c42fc49440b8d06a906b44be13eb608ca2ffc1dd" translate="yes" xml:space="preserve">
          <source>Translates slice objects to concatenation along the first axis.</source>
          <target state="translated">スライスオブジェクトを第1軸に沿った連結に変換します。</target>
        </trans-unit>
        <trans-unit id="ff7c65a71ec845e39d241d138fd72490df88fa74" translate="yes" xml:space="preserve">
          <source>Translates slice objects to concatenation along the second axis.</source>
          <target state="translated">スライスオブジェクトを第2軸に沿った連結に変換します。</target>
        </trans-unit>
        <trans-unit id="8def3943422e0dc87b7f47772bd3dc4ad8ea550b" translate="yes" xml:space="preserve">
          <source>Transpose-like operations</source>
          <target state="translated">トランスポーズのような操作</target>
        </trans-unit>
        <trans-unit id="1dfdbda20e491607190c97bd4edf114a4a693811" translate="yes" xml:space="preserve">
          <source>Transposing a 1-D array returns an unchanged view of the original array.</source>
          <target state="translated">1次元配列を転置すると,元の配列の変更されていないビューが返されます.</target>
        </trans-unit>
        <trans-unit id="66408bfa15c9ed2902e447a43b1f7abcdee55a60" translate="yes" xml:space="preserve">
          <source>Transpositions and permutations, &lt;a href=&quot;numpy.transpose#numpy.transpose&quot;&gt;&lt;code&gt;numpy.transpose&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">転置と順列、&lt;a href=&quot;numpy.transpose#numpy.transpose&quot;&gt; &lt;code&gt;numpy.transpose&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8cd1d8f1121212090792af3b195766028fb3300b" translate="yes" xml:space="preserve">
          <source>Treatment for division by zero.</source>
          <target state="translated">0で除算した場合の処理。</target>
        </trans-unit>
        <trans-unit id="c576a1cfdbaf816c1398a32382e59edc28900bee" translate="yes" xml:space="preserve">
          <source>Treatment for floating-point overflow.</source>
          <target state="translated">浮動小数点オーバーフローの処理</target>
        </trans-unit>
        <trans-unit id="17721dd3ac43e33f85ad621f2dc25c086c0470c0" translate="yes" xml:space="preserve">
          <source>Treatment for floating-point underflow.</source>
          <target state="translated">浮動小数点アンダーフローの処理。</target>
        </trans-unit>
        <trans-unit id="a13040b51033dafdb26f7572598a0d12e22e4ffe" translate="yes" xml:space="preserve">
          <source>Treatment for invalid floating-point operation.</source>
          <target state="translated">浮動小数点演算が無効な場合の処理</target>
        </trans-unit>
        <trans-unit id="3a49a3516e9535a98c78b0ab59efaa267faaaeac" translate="yes" xml:space="preserve">
          <source>Triggers &lt;a href=&quot;#c.NPY_ITER_COPY&quot;&gt;&lt;code&gt;NPY_ITER_COPY&lt;/code&gt;&lt;/a&gt;, and when an array operand is flagged for writing and is copied, causes the data in a copy to be copied back to &lt;code&gt;op[i]&lt;/code&gt; when &lt;code&gt;NpyIter_Deallocate&lt;/code&gt; is called.</source>
          <target state="translated">&lt;a href=&quot;#c.NPY_ITER_COPY&quot;&gt; &lt;code&gt;NPY_ITER_COPY&lt;/code&gt; を&lt;/a&gt;トリガーし、配列オペランドに書き込みのフラグが付けられてコピーされると、 &lt;code&gt;NpyIter_Deallocate&lt;/code&gt; が呼び出されたときにコピー内のデータが &lt;code&gt;op[i]&lt;/code&gt; にコピーされます。</target>
        </trans-unit>
        <trans-unit id="b9e4c026492c440bf32166e0789393487d03b254" translate="yes" xml:space="preserve">
          <source>Trigonometric functions</source>
          <target state="translated">三角関数</target>
        </trans-unit>
        <trans-unit id="58cf0aee76fad599f97ff1db8c6a47d2270860db" translate="yes" xml:space="preserve">
          <source>Trigonometric inverse cosine, element-wise.</source>
          <target state="translated">三角関数の逆コサイン、要素法。</target>
        </trans-unit>
        <trans-unit id="b0b82a06c2ae28e8fcf146e965d0c41fd4531e3a" translate="yes" xml:space="preserve">
          <source>Trigonometric inverse tangent, element-wise.</source>
          <target state="translated">三角関数の逆正接、要素ごとに。</target>
        </trans-unit>
        <trans-unit id="ce4f3fa4852db4b9b207eedadc12e11135e46d85" translate="yes" xml:space="preserve">
          <source>Trigonometric sine, element-wise.</source>
          <target state="translated">三角関数的な正弦、要素ごとに。</target>
        </trans-unit>
        <trans-unit id="10a283c17897bbd0b4cb4fd810a9eeb88aa8ef58" translate="yes" xml:space="preserve">
          <source>Trim the leading and/or trailing zeros from a 1-D array or sequence.</source>
          <target state="translated">1次元配列またはシーケンスから先頭および/または末尾のゼロをトリミングします。</target>
        </trans-unit>
        <trans-unit id="88b33e4e12f75ac8bf792aebde41f1a090f3a612" translate="yes" xml:space="preserve">
          <source>True</source>
          <target state="translated">True</target>
        </trans-unit>
        <trans-unit id="dec064efe14ed7a73f97fa4832f7dc39f8d37259" translate="yes" xml:space="preserve">
          <source>True divide self by other in-place.</source>
          <target state="translated">真の意味での自己を他の場所で分割する。</target>
        </trans-unit>
        <trans-unit id="39cf2a1ac05eb7ec1f611fa8df3b32f9cff1d558" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;m.dtype.type&lt;/code&gt; is MaskType, False otherwise.</source>
          <target state="translated">&lt;code&gt;m.dtype.type&lt;/code&gt; がMaskTypeの場合はTrue、それ以外の場合はFalse。</target>
        </trans-unit>
        <trans-unit id="c7e5263b6e49f0164ce122995ea161e565df58fa" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;num&lt;/code&gt; is a scalar type, False if it is not.</source>
          <target state="translated">&lt;code&gt;num&lt;/code&gt; がスカラー型の場合はTrue、そうでない場合はFalse。</target>
        </trans-unit>
        <trans-unit id="2655b1728487edfb72db0ecd08ff9ea666177ee0" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;path&lt;/code&gt; exists.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; が存在する場合は真。</target>
        </trans-unit>
        <trans-unit id="0acadbce2849d20449e701a26739adbff1b98e78" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;x&lt;/code&gt; is a MaskedArray with masked values, False otherwise.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; がマスクされた値を持つMaskedArrayである場合はTrue、そうでない場合はFalse。</target>
        </trans-unit>
        <trans-unit id="05ff71445923acdd0c38d736b463809c9ccd39de" translate="yes" xml:space="preserve">
          <source>True if a Fortran 77 compiler is available (because a simple Fortran 77 code was able to be compiled successfully).</source>
          <target state="translated">Fortran 77コンパイラが利用可能な場合は真です(単純なFortran 77コードが正常にコンパイルできたため)。</target>
        </trans-unit>
        <trans-unit id="00cd0fd9fd4e9fcf05a5961ba064f7c5fc57b8ef" translate="yes" xml:space="preserve">
          <source>True if a Fortran 90 compiler is available (because a simple Fortran 90 code was able to be compiled successfully)</source>
          <target state="translated">Fortran 90 コンパイラが利用可能な場合は真(単純な Fortran 90 コードが正常にコンパイルできたため</target>
        </trans-unit>
        <trans-unit id="213506708b75038d86119f896c93fd459688fdaa" translate="yes" xml:space="preserve">
          <source>True if byteorder characters ( &lt;code&gt;NPY_LITTLE&lt;/code&gt;, &lt;code&gt;NPY_BIG&lt;/code&gt;, &lt;code&gt;NPY_NATIVE&lt;/code&gt;, &lt;code&gt;NPY_IGNORE&lt;/code&gt; ) are either equal or equivalent as to their specification of a native byte order. Thus, on a little-endian machine &lt;code&gt;NPY_LITTLE&lt;/code&gt; and &lt;code&gt;NPY_NATIVE&lt;/code&gt; are equivalent where they are not equivalent on a big-endian machine.</source>
          <target state="translated">バイトオーダー文字（ &lt;code&gt;NPY_LITTLE&lt;/code&gt; 、 &lt;code&gt;NPY_BIG&lt;/code&gt; 、 &lt;code&gt;NPY_NATIVE&lt;/code&gt; 、 &lt;code&gt;NPY_IGNORE&lt;/code&gt; ）が、ネイティブのバイトオーダーの指定に関して等しいか同等である場合はtrue。したがって、リトルエンディアンのマシンでは、 &lt;code&gt;NPY_LITTLE&lt;/code&gt; と &lt;code&gt;NPY_NATIVE&lt;/code&gt; は同等ですが、ビッグエンディアンのマシンでは同等ではありません。</target>
        </trans-unit>
        <trans-unit id="ba3294550f0a20e5d9deb7f04a95fb8e4b4d1d46" translate="yes" xml:space="preserve">
          <source>True if cast can occur according to the casting rule.</source>
          <target state="translated">キャストルールに従ってキャストが発生すれば真。</target>
        </trans-unit>
        <trans-unit id="1f63565b32d103f3a4de31640d426343af47dd7d" translate="yes" xml:space="preserve">
          <source>True if equivalent, False otherwise.</source>
          <target state="translated">等価であれば真、そうでなければ偽。</target>
        </trans-unit>
        <trans-unit id="1e741019d05ad4b1c0222d2d53486f99a6732190" translate="yes" xml:space="preserve">
          <source>True if other is same class as self</source>
          <target state="translated">その他が自己と同じクラスであれば真</target>
        </trans-unit>
        <trans-unit id="70fbd415e3863800b42dd70f2afc2d0435498df0" translate="yes" xml:space="preserve">
          <source>True if the coefficients are the same, False otherwise.</source>
          <target state="translated">係数が同じであれば真、そうでなければ偽。</target>
        </trans-unit>
        <trans-unit id="a6afbacb41b3137cec218f989dffb959ca4f44cd" translate="yes" xml:space="preserve">
          <source>True if the domains are the same, False otherwise.</source>
          <target state="translated">ドメインが同じ場合はTrue、そうでない場合はFalse。</target>
        </trans-unit>
        <trans-unit id="4bc2a6d6f70eb24c8def5df03724644edb474780" translate="yes" xml:space="preserve">
          <source>True if the windows are the same, False otherwise.</source>
          <target state="translated">ウィンドウが同じ場合はTrue、そうでない場合はFalse。</target>
        </trans-unit>
        <trans-unit id="24f9df4fb7133abd7e86f4b5f0391c10a93621e7" translate="yes" xml:space="preserve">
          <source>True if two arrays have the same shape and elements, False otherwise.</source>
          <target state="translated">2つの配列が同じ形状と要素を持つ場合はTrue、そうでない場合はFalse。</target>
        </trans-unit>
        <trans-unit id="755e15abf3303ababe3ade30f10af71c607d4530" translate="yes" xml:space="preserve">
          <source>True where &lt;code&gt;x&lt;/code&gt; is NaN, false otherwise. This is a scalar if &lt;code&gt;x&lt;/code&gt; is a scalar.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; がNaNの場合はtrue、それ以外の場合はfalse。 &lt;code&gt;x&lt;/code&gt; がスカラーの場合、これはスカラーです。</target>
        </trans-unit>
        <trans-unit id="dc0b3f0e3c0fa8c731e1bcdadee661ee71b2ddb8" translate="yes" xml:space="preserve">
          <source>True where &lt;code&gt;x&lt;/code&gt; is NaT, false otherwise. This is a scalar if &lt;code&gt;x&lt;/code&gt; is a scalar.</source>
          <target state="translated">真のどこ &lt;code&gt;x&lt;/code&gt; は NAT、それ以外の場合はfalseです。 &lt;code&gt;x&lt;/code&gt; がスカラーの場合、これはスカラーです。</target>
        </trans-unit>
        <trans-unit id="cd270c6be47d5f9045a9640d5cc8ead8711407bc" translate="yes" xml:space="preserve">
          <source>True where &lt;code&gt;x&lt;/code&gt; is not positive infinity, negative infinity, or NaN; false otherwise. This is a scalar if &lt;code&gt;x&lt;/code&gt; is a scalar.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; が正の無限大、負の無限大、またはNaNでない場合は真。それ以外の場合はfalse。 &lt;code&gt;x&lt;/code&gt; がスカラーの場合、これはスカラーです。</target>
        </trans-unit>
        <trans-unit id="3170e8eb3762dd10d0e3ab109761eb5c944e9ac1" translate="yes" xml:space="preserve">
          <source>True where &lt;code&gt;x&lt;/code&gt; is positive or negative infinity, false otherwise. This is a scalar if &lt;code&gt;x&lt;/code&gt; is a scalar.</source>
          <target state="translated">どこ真 &lt;code&gt;x&lt;/code&gt; が正または負の無限大である、そうでない場合はfalse。 &lt;code&gt;x&lt;/code&gt; がスカラーの場合、これはスカラーです。</target>
        </trans-unit>
        <trans-unit id="425b939d0909e079d100ad47521c0febc0bd307a" translate="yes" xml:space="preserve">
          <source>Truncate s values at 50 so plot is interesting:</source>
          <target state="translated">sの値を50で切り捨てているので、プロットが面白いです。</target>
        </trans-unit>
        <trans-unit id="8726579bd5d3f34275a243eb604a9ceb6cbd38eb" translate="yes" xml:space="preserve">
          <source>Truncate series to length &lt;code&gt;size&lt;/code&gt;.</source>
          <target state="translated">シリーズを長さ &lt;code&gt;size&lt;/code&gt; 切り詰めます。</target>
        </trans-unit>
        <trans-unit id="adcf68c15599690309b811decf083d5555853eeb" translate="yes" xml:space="preserve">
          <source>Truncate series to the given degree.</source>
          <target state="translated">級数を与えられた程度に切り捨てます。</target>
        </trans-unit>
        <trans-unit id="d78b8c914ad90242aebfa1ad45be017c8a4ed426" translate="yes" xml:space="preserve">
          <source>Truth value of an array (&lt;code&gt;bool&lt;/code&gt;):</source>
          <target state="translated">配列の真理値（ &lt;code&gt;bool&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="d14d79df6800bf8b855c978794baaad558b55ab7" translate="yes" xml:space="preserve">
          <source>Truth value testing</source>
          <target state="translated">真理値検査</target>
        </trans-unit>
        <trans-unit id="a34d6317df428f3a0882e4fcc17ec8a423d926fc" translate="yes" xml:space="preserve">
          <source>Truth-value testing of an array invokes &lt;a href=&quot;generated/numpy.ndarray.__bool__#numpy.ndarray.__bool__&quot;&gt;&lt;code&gt;ndarray.__bool__&lt;/code&gt;&lt;/a&gt;, which raises an error if the number of elements in the array is larger than 1, because the truth value of such arrays is ambiguous. Use &lt;a href=&quot;generated/numpy.ndarray.any#numpy.ndarray.any&quot;&gt;&lt;code&gt;.any()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/numpy.ndarray.all#numpy.ndarray.all&quot;&gt;&lt;code&gt;.all()&lt;/code&gt;&lt;/a&gt; instead to be clear about what is meant in such cases. (If the number of elements is 0, the array evaluates to &lt;code&gt;False&lt;/code&gt;.)</source>
          <target state="translated">配列の真理値のテストでは&lt;a href=&quot;generated/numpy.ndarray.__bool__#numpy.ndarray.__bool__&quot;&gt; &lt;code&gt;ndarray.__bool__&lt;/code&gt; &lt;/a&gt;が呼び出され、配列の要素の数が1より大きい場合、そのような配列の真理値は不明確であるため、エラーが発生します。使用&lt;a href=&quot;generated/numpy.ndarray.any#numpy.ndarray.any&quot;&gt; &lt;code&gt;.any()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;generated/numpy.ndarray.all#numpy.ndarray.all&quot;&gt; &lt;code&gt;.all()&lt;/code&gt; &lt;/a&gt;の代わりにこのような場合に何を意味するかについて明確にします。（要素の数が0の場合、配列は &lt;code&gt;False&lt;/code&gt; と評価されます。）</target>
        </trans-unit>
        <trans-unit id="2ecf59a43e289ad2b017cf95dec49da40904a53e" translate="yes" xml:space="preserve">
          <source>Try to get version string of a package.</source>
          <target state="translated">パッケージのバージョン文字列を取得してみます。</target>
        </trans-unit>
        <trans-unit id="78b28b6348f61eb4f458af0454cbb48914113f96" translate="yes" xml:space="preserve">
          <source>Tuple &lt;code&gt;(item_dtype, shape)&lt;/code&gt; if this &lt;a href=&quot;#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; describes a sub-array, and None otherwise.</source>
          <target state="translated">この&lt;a href=&quot;#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;がサブ配列を表す場合はタプル &lt;code&gt;(item_dtype, shape)&lt;/code&gt; 、それ以外の場合はNone。</target>
        </trans-unit>
        <trans-unit id="3e6ddb0c1b967dfa42de0aef208f74bd1f3fd6c6" translate="yes" xml:space="preserve">
          <source>Tuple &lt;code&gt;(item_dtype, shape)&lt;/code&gt; if this &lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; describes a sub-array, and None otherwise.</source>
          <target state="translated">この&lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;がサブ配列を表す場合はタプル &lt;code&gt;(item_dtype, shape)&lt;/code&gt; 、それ以外の場合はNone。</target>
        </trans-unit>
        <trans-unit id="f3757a0166a586f2a2125cefab21784843d386d2" translate="yes" xml:space="preserve">
          <source>Tuple &lt;code&gt;(item_dtype, shape)&lt;/code&gt; if this &lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; describes a sub-array, and None otherwise.</source>
          <target state="translated">この&lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;がサブ配列を表す場合はタプル &lt;code&gt;(item_dtype, shape)&lt;/code&gt; 、それ以外の場合はNone。</target>
        </trans-unit>
        <trans-unit id="84be13d7b7fcc75e7ec8441a86e66cf302003bb9" translate="yes" xml:space="preserve">
          <source>Tuple axis arguments to ufuncs are equivalent:</source>
          <target state="translated">ufuncsへのタプル軸の引数は等価です。</target>
        </trans-unit>
        <trans-unit id="288ea08ff10a961743d4d8b925f5d1931f661310" translate="yes" xml:space="preserve">
          <source>Tuple of array dimensions.</source>
          <target state="translated">配列の次元のタプル。</target>
        </trans-unit>
        <trans-unit id="119e92503836c54689c5f8c6dff4e15a28816a46" translate="yes" xml:space="preserve">
          <source>Tuple of bytes to step in each dimension when traversing an array.</source>
          <target state="translated">配列を横断する際に各次元でステップするバイトのタプル。</target>
        </trans-unit>
        <trans-unit id="a39e9bc9ce6796bfca6ebd0c63299d64e075f553" translate="yes" xml:space="preserve">
          <source>Tuple whose elements are the array size in each dimension. Each entry is an integer (a Python int or long). Note that these integers could be larger than the platform &amp;ldquo;int&amp;rdquo; or &amp;ldquo;long&amp;rdquo; could hold (a Python int is a C long). It is up to the code using this attribute to handle this appropriately; either by raising an error when overflow is possible, or by using &lt;code&gt;Py_LONG_LONG&lt;/code&gt; as the C type for the shapes.</source>
          <target state="translated">要素が各次元の配列サイズであるタプル。各エントリは整数（Pythonのintまたはlong）です。これらの整数は、プラットフォームの「int」または「long」が保持できるよりも大きい可能性があることに注意してください（PythonのintはCのlongです）。これを適切に処理するかどうかは、この属性を使用するコード次第です。オーバーフローが発生する可能性がある場合にエラーを発生させるか、シェイプのCタイプとして &lt;code&gt;Py_LONG_LONG&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="eff015ed2b91595519ef0f82b5da310790ed8380" translate="yes" xml:space="preserve">
          <source>Two groups, children of diabetics (25 people) and children from people without diabetes (25 controls). Fasting blood glucose was measured, case group had a mean value of 86.1, controls had a mean value of 82.2. Standard deviations were 2.09 and 2.49 respectively. Are these data consistent with the null hypothesis that the parents diabetic status does not affect their children&amp;rsquo;s blood glucose levels? Calculating the F statistic from the data gives a value of 36.01.</source>
          <target state="translated">2つのグループ、糖尿病の子供（25人）と糖尿病のない人の子供（25人の対照）。空腹時血糖値が測定され、症例群の平均値は86.1、対照群の平均値は82.2でした。標準偏差はそれぞれ2.09と2.49でした。これらのデータは、親の糖尿病状態が子供の血糖値に影響しないという帰無仮説と一致していますか？データからF統計を計算すると、値は36.01になります。</target>
        </trans-unit>
        <trans-unit id="9a29304c220b1dd3134936cc76050af186cb5278" translate="yes" xml:space="preserve">
          <source>Two times the reciprocal of pi (</source>
          <target state="translated">πの逆数の2倍(</target>
        </trans-unit>
        <trans-unit id="c6b3128dd2f1c22ff8a2b286be1379fe8a8fe179" translate="yes" xml:space="preserve">
          <source>Two-by-four array of samples from</source>
          <target state="translated">からのサンプルのツーバイフォー配列</target>
        </trans-unit>
        <trans-unit id="b1f6d6c8746a437f90f0dee674c0b93df2f99381" translate="yes" xml:space="preserve">
          <source>Two-by-four array of samples from N(3, 6.25):</source>
          <target state="translated">N(3,6.25)からのサンプルの2×4配列。</target>
        </trans-unit>
        <trans-unit id="3db221513448342ff7f1391357dc023cdf6dc3dc" translate="yes" xml:space="preserve">
          <source>Two-by-four matrix of samples from</source>
          <target state="translated">からのサンプルの2×4マトリックス</target>
        </trans-unit>
        <trans-unit id="862d5ad68d4b198349fd0cc9c98a5797e23f13c7" translate="yes" xml:space="preserve">
          <source>Two-dimensional array:</source>
          <target state="translated">二次元配列。</target>
        </trans-unit>
        <trans-unit id="4ca814bb64ef6897ea819d313fffbc4815334f0e" translate="yes" xml:space="preserve">
          <source>Two-dimensional arrays are tested in exactly the same manner. The above description applies, but with &lt;code&gt;Matrix&lt;/code&gt; substituted for &lt;code&gt;Vector&lt;/code&gt;. For three-dimensional tests, substitute &lt;code&gt;Tensor&lt;/code&gt; for &lt;code&gt;Vector&lt;/code&gt;. For four-dimensional tests, substitute &lt;code&gt;SuperTensor&lt;/code&gt; for &lt;code&gt;Vector&lt;/code&gt;. For flat in-place array tests, substitute &lt;code&gt;Flat&lt;/code&gt; for &lt;code&gt;Vector&lt;/code&gt;. For the descriptions that follow, we will reference the &lt;code&gt;Vector&lt;/code&gt; tests, but the same information applies to &lt;code&gt;Matrix&lt;/code&gt;, &lt;code&gt;Tensor&lt;/code&gt; and &lt;code&gt;SuperTensor&lt;/code&gt; tests.</source>
          <target state="translated">2次元配列は、まったく同じ方法でテストされます。上記の説明が適用されますが、 &lt;code&gt;Vector&lt;/code&gt; の代わりに &lt;code&gt;Matrix&lt;/code&gt; が使用されます。 3次元のテストでは、代用 &lt;code&gt;Tensor&lt;/code&gt; するために &lt;code&gt;Vector&lt;/code&gt; 。 4次元のテストでは、代用 &lt;code&gt;SuperTensor&lt;/code&gt; をするために &lt;code&gt;Vector&lt;/code&gt; 。フラットインプレース配列のテストでは、代わりに &lt;code&gt;Flat&lt;/code&gt; するために &lt;code&gt;Vector&lt;/code&gt; 。以下の説明では、 &lt;code&gt;Vector&lt;/code&gt; テストを参照しますが、同じ情報が &lt;code&gt;Matrix&lt;/code&gt; テスト、 &lt;code&gt;Tensor&lt;/code&gt; テスト、および &lt;code&gt;SuperTensor&lt;/code&gt; テストにも適用されます。</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="546ef13b4643b6acadc0951eac37d6f468caac3d" translate="yes" xml:space="preserve">
          <source>Type description examples</source>
          <target state="translated">タイプ記述例</target>
        </trans-unit>
        <trans-unit id="966782d7443e2170cf499e59f9a8368a7b7380cd" translate="yes" xml:space="preserve">
          <source>Type has fields associated with it.</source>
          <target state="translated">タイプには、それに関連付けられたフィールドがあります。</target>
        </trans-unit>
        <trans-unit id="ad1651cc08eba91d6dce8f9e7cbe0420ed624c49" translate="yes" xml:space="preserve">
          <source>Type has no size information attached, and can be resized. Should only be called on flexible dtypes. Types that are attached to an array will always be sized, hence the array form of this macro not existing.</source>
          <target state="translated">この型はサイズ情報を持たず、サイズを変更することができます。柔軟性のある dtypes でのみ呼び出されるべきです。配列にアタッチされた型は常にサイズが変更されます。</target>
        </trans-unit>
        <trans-unit id="00fea5456fe9ccd4a61fecaaa45953e334c1c594" translate="yes" xml:space="preserve">
          <source>Type is either flexible or user-defined.</source>
          <target state="translated">タイプは、柔軟性のあるものとユーザー定義のものがあります。</target>
        </trans-unit>
        <trans-unit id="fd89c694ef19c6e785630016c5d715bce35c6076" translate="yes" xml:space="preserve">
          <source>Type is preserved for boolean arrays, so the result will contain &lt;code&gt;False&lt;/code&gt; when consecutive elements are the same and &lt;code&gt;True&lt;/code&gt; when they differ.</source>
          <target state="translated">ブール配列のタイプは保持されるため、連続する要素が同じ場合は結果に &lt;code&gt;False&lt;/code&gt; が含まれ、異なる場合は結果に &lt;code&gt;True&lt;/code&gt; が含まれます。</target>
        </trans-unit>
        <trans-unit id="c36d17e1133f5c5a545edd7db2e2ccd0a71a9cf5" translate="yes" xml:space="preserve">
          <source>Type of the data (integer, float, Python object, etc.)</source>
          <target state="translated">データの型(整数、float、Pythonオブジェクトなど</target>
        </trans-unit>
        <trans-unit id="dd429360d0a73315317719cd2b034bd7849c79e3" translate="yes" xml:space="preserve">
          <source>Type of the returned array and of the accumulator in which the elements are summed. If &lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; is not specified, it defaults to the dtype of &lt;code&gt;a&lt;/code&gt;, unless &lt;code&gt;a&lt;/code&gt; has an integer dtype with a precision less than that of the default platform integer. In that case, the default platform integer is used.</source>
          <target state="translated">返された配列と、要素が合計されるアキュムレータのタイプ。&lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;が指定されていない場合、デフォルトのプラットフォーム整数の精度よりも低い精度の整数dtypeがない限り &lt;code&gt;a&lt;/code&gt; デフォルトで &lt;code&gt;a&lt;/code&gt; のdtype になります。その場合、デフォルトのプラットフォーム整数が使用されます。</target>
        </trans-unit>
        <trans-unit id="07bc03c5a2d510ae05b611f9e4728e3dfbb4d656" translate="yes" xml:space="preserve">
          <source>Type of the returned array, as well as of the accumulator in which the elements are multiplied. If &lt;em&gt;dtype&lt;/em&gt; is not specified, it defaults to the dtype of &lt;code&gt;a&lt;/code&gt;, unless &lt;code&gt;a&lt;/code&gt; has an integer dtype with a precision less than that of the default platform integer. In that case, the default platform integer is used instead.</source>
          <target state="translated">返される配列のタイプと、要素が乗算されるアキュムレータのタイプ。&lt;em&gt;dtype&lt;/em&gt;が指定されていない場合、デフォルトのプラットフォーム整数の精度よりも低い精度の整数dtypeがない限り &lt;code&gt;a&lt;/code&gt; デフォルトで &lt;code&gt;a&lt;/code&gt; のdtype になります。その場合、デフォルトのプラットフォーム整数が代わりに使用されます。</target>
        </trans-unit>
        <trans-unit id="36795fd8406bf11fda0ac3128a88df4463dd2892" translate="yes" xml:space="preserve">
          <source>Type of the returned view, e.g., ndarray or matrix. Again, the default None results in type preservation.</source>
          <target state="translated">返されるビューの型(例:ndarrayやmatrix)。ここでも、デフォルトの None は型を保持します。</target>
        </trans-unit>
        <trans-unit id="9d0b3189219da3d7ba109eef463be8e2071fbe7e" translate="yes" xml:space="preserve">
          <source>Type promotion in NumPy works similarly to the rules in languages like C++, with some slight differences. When both scalars and arrays are used, the array&amp;rsquo;s type takes precedence and the actual value of the scalar is taken into account.</source>
          <target state="translated">NumPyでの型の昇格は、C ++などの言語のルールと同様に機能しますが、若干の違いがあります。スカラーと配列の両方が使用される場合、配列の型が優先され、スカラーの実際の値が考慮されます。</target>
        </trans-unit>
        <trans-unit id="66585ef6b68c044b299bc7220f22788121e21167" translate="yes" xml:space="preserve">
          <source>Type provided:</source>
          <target state="translated">タイプが提供されています。</target>
        </trans-unit>
        <trans-unit id="bc25fc1327a92506da2b55272b3113fcffa65d61" translate="yes" xml:space="preserve">
          <source>Type represents Boolean data type.</source>
          <target state="translated">型はブール値のデータ型を表します。</target>
        </trans-unit>
        <trans-unit id="60db025c166ec63b9a181b61c24b20c5d24b0648" translate="yes" xml:space="preserve">
          <source>Type represents a signed integer.</source>
          <target state="translated">型は符号付き整数を表します。</target>
        </trans-unit>
        <trans-unit id="acb6256437982d272438054c848d82884163b4d8" translate="yes" xml:space="preserve">
          <source>Type represents a string data type.</source>
          <target state="translated">型は文字列データ型を表します。</target>
        </trans-unit>
        <trans-unit id="08f325041fae51a65ee6e08f868548827f3e2b61" translate="yes" xml:space="preserve">
          <source>Type represents a user-defined type.</source>
          <target state="translated">Typeは、ユーザー定義のタイプを表します。</target>
        </trans-unit>
        <trans-unit id="f5f87b05bbeb10ab3c2ec34871c51fb7f3e190f2" translate="yes" xml:space="preserve">
          <source>Type represents an enumerated type corresponding to one of the standard Python scalar (bool, int, float, or complex).</source>
          <target state="translated">Typeは、Pythonの標準スカラ(bool,int,float,complex)のいずれかに対応する列挙型を表します。</target>
        </trans-unit>
        <trans-unit id="6fc847c0dbefe834d836a7b9b36c518b8a349fc4" translate="yes" xml:space="preserve">
          <source>Type represents an unsigned integer.</source>
          <target state="translated">型は符号なし整数を表します。</target>
        </trans-unit>
        <trans-unit id="f8e7a296ef6aceb534615bd823bf7fad61a5043e" translate="yes" xml:space="preserve">
          <source>Type represents any complex floating point number.</source>
          <target state="translated">型は任意の複素浮動小数点数を表します。</target>
        </trans-unit>
        <trans-unit id="28cd3b87be44c11187d7cc10075315e307082083" translate="yes" xml:space="preserve">
          <source>Type represents any floating point number.</source>
          <target state="translated">型は任意の浮動小数点数を表します。</target>
        </trans-unit>
        <trans-unit id="579601ba7e8ea9eb8623a33cadfe20f9eaea6f83" translate="yes" xml:space="preserve">
          <source>Type represents any integer, floating point, or complex floating point number.</source>
          <target state="translated">型は、任意の整数、浮動小数点、または複素浮動小数点数を表します。</target>
        </trans-unit>
        <trans-unit id="051ab06f1a62606ef03aadb95e9e56f705f31488" translate="yes" xml:space="preserve">
          <source>Type represents any integer.</source>
          <target state="translated">型は任意の整数を表します。</target>
        </trans-unit>
        <trans-unit id="a2ba1da5781162c52e0abb1d3993de06d380b834" translate="yes" xml:space="preserve">
          <source>Type represents object data type.</source>
          <target state="translated">Typeはオブジェクトのデータ型を表します。</target>
        </trans-unit>
        <trans-unit id="20eece7c06865b2554e5d1db1375400953d56528" translate="yes" xml:space="preserve">
          <source>Type represents one of the flexible array types ( &lt;a href=&quot;c-api.dtype#c.NPY_STRING&quot;&gt;&lt;code&gt;NPY_STRING&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;c-api.dtype#c.NPY_UNICODE&quot;&gt;&lt;code&gt;NPY_UNICODE&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;c-api.dtype#c.NPY_VOID&quot;&gt;&lt;code&gt;NPY_VOID&lt;/code&gt;&lt;/a&gt; ).</source>
          <target state="translated">Typeは、柔軟な配列タイプ（&lt;a href=&quot;c-api.dtype#c.NPY_STRING&quot;&gt; &lt;code&gt;NPY_STRING&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;c-api.dtype#c.NPY_UNICODE&quot;&gt; &lt;code&gt;NPY_UNICODE&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;c-api.dtype#c.NPY_VOID&quot;&gt; &lt;code&gt;NPY_VOID&lt;/code&gt; &lt;/a&gt;）の1つを表します。</target>
        </trans-unit>
        <trans-unit id="cab551b16a69b24d82e03c4a0d668cc3040d4465" translate="yes" xml:space="preserve">
          <source>Type specific, core 1-d functions for ufuncs where each calculation is obtained by calling a function taking one input argument and returning one output. This function is passed in &lt;code&gt;func&lt;/code&gt;. The letters correspond to dtypechar&amp;rsquo;s of the supported data types ( &lt;code&gt;e&lt;/code&gt; - half, &lt;code&gt;f&lt;/code&gt; - float, &lt;code&gt;d&lt;/code&gt; - double, &lt;code&gt;g&lt;/code&gt; - long double, &lt;code&gt;F&lt;/code&gt; - cfloat, &lt;code&gt;D&lt;/code&gt; - cdouble, &lt;code&gt;G&lt;/code&gt; - clongdouble). The argument &lt;em&gt;func&lt;/em&gt; must support the same signature. The _As_X_X variants assume ndarray&amp;rsquo;s of one data type but cast the values to use an underlying function that takes a different data type. Thus, &lt;a href=&quot;#c.PyUFunc_f_f_As_d_d&quot;&gt;&lt;code&gt;PyUFunc_f_f_As_d_d&lt;/code&gt;&lt;/a&gt; uses ndarrays of data type &lt;a href=&quot;c-api.dtype#c.NPY_FLOAT&quot;&gt;&lt;code&gt;NPY_FLOAT&lt;/code&gt;&lt;/a&gt; but calls out to a C-function that takes double and returns double.</source>
          <target state="translated">ufuncのタイプ固有のコア1-d関数。各計算は、1つの入力引数を取り、1つの出力を返す関数を呼び出すことによって取得されます。この関数は &lt;code&gt;func&lt;/code&gt; で渡されます。文字は、サポートされているデータ型のdtypecharに対応します（ &lt;code&gt;e&lt;/code&gt; -ハーフ、 &lt;code&gt;f&lt;/code&gt; -フロート、 &lt;code&gt;d&lt;/code&gt; -ダブル、 &lt;code&gt;g&lt;/code&gt; -ロングダブル、 &lt;code&gt;F&lt;/code&gt; -cfloat、 &lt;code&gt;D&lt;/code&gt; -cdouble、 &lt;code&gt;G&lt;/code&gt; -clongdouble）。引数&lt;em&gt;func&lt;/em&gt;は同じ署名をサポートする必要があります。 _As_X_Xバリアントは、1つのデータ型のndarrayを想定していますが、値をキャストして、異なるデータ型を取る基礎となる関数を使用します。したがって、&lt;a href=&quot;#c.PyUFunc_f_f_As_d_d&quot;&gt; &lt;code&gt;PyUFunc_f_f_As_d_d&lt;/code&gt; &lt;/a&gt;データ型&lt;a href=&quot;c-api.dtype#c.NPY_FLOAT&quot;&gt; &lt;code&gt;NPY_FLOAT&lt;/code&gt; の&lt;/a&gt; ndarraysを使用しますが、doubleを受け取ってdoubleを返すC関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="2718d921f0c8c7bb73eed2147fee6ea79b6b6859" translate="yes" xml:space="preserve">
          <source>Type specific, core 1-d functions for ufuncs where each calculation is obtained by calling a function taking two input arguments and returning one output. The underlying function to call is passed in as &lt;em&gt;func&lt;/em&gt;. The letters correspond to dtypechar&amp;rsquo;s of the specific data type supported by the general-purpose function. The argument &lt;code&gt;func&lt;/code&gt; must support the corresponding signature. The &lt;code&gt;_As_XX_X&lt;/code&gt; variants assume ndarrays of one data type but cast the values at each iteration of the loop to use the underlying function that takes a different data type.</source>
          <target state="translated">2つの入力引数を取り、1つの出力を返す関数を呼び出すことによって各計算が得られるufuncsのタイプ固有のコア1-d関数。呼び出す基礎となる関数は&lt;em&gt;func&lt;/em&gt;として渡されます。文字は、汎用関数でサポートされている特定のデータ型のdtypecharに対応しています。引数 &lt;code&gt;func&lt;/code&gt; は、対応する署名をサポートする必要があります。 &lt;code&gt;_As_XX_X&lt;/code&gt; の変種は、1つのデータ型のndarraysを前提としたが、異なるデータ型を取る基本的な機能を使用するために、ループの各繰り返しで値をキャスト。</target>
        </trans-unit>
        <trans-unit id="ef2ee12d948765f441a77e0dc116238b4eb26327" translate="yes" xml:space="preserve">
          <source>Type specifier strings are convertible to dtypes and can therefore be used instead of dtypes:</source>
          <target state="translated">型指定文字列はd型に変換可能なので、d型の代わりに使用することができます。</target>
        </trans-unit>
        <trans-unit id="f7df157385540da09117c232afd23b684eee205b" translate="yes" xml:space="preserve">
          <source>Type strings</source>
          <target state="translated">文字列を入力します。</target>
        </trans-unit>
        <trans-unit id="b6e792a3d08a7bd144dac10e42edb461fd3dd2e3" translate="yes" xml:space="preserve">
          <source>Type to use in computing the mean. For integer inputs, the default is &lt;code&gt;float64&lt;/code&gt;; for floating point inputs, it is the same as the input dtype.</source>
          <target state="translated">平均の計算に使用するタイプ。整数入力の場合、デフォルトは &lt;code&gt;float64&lt;/code&gt; です。浮動小数点入力の場合、入力dtypeと同じです。</target>
        </trans-unit>
        <trans-unit id="9f9df4fba8dcd1fb7d56164c04214c5a4ba9ba6b" translate="yes" xml:space="preserve">
          <source>Type to use in computing the mean. For integer inputs, the default is &lt;code&gt;float64&lt;/code&gt;; for inexact inputs, it is the same as the input dtype.</source>
          <target state="translated">平均の計算に使用するタイプ。整数入力の場合、デフォルトは &lt;code&gt;float64&lt;/code&gt; です。不正確な入力の場合は、入力dtypeと同じです。</target>
        </trans-unit>
        <trans-unit id="3131a42adb40886f91b9db8d1e4f4fee7e5c8913" translate="yes" xml:space="preserve">
          <source>Type to use in computing the standard deviation. For arrays of integer type the default is float64, for arrays of float types it is the same as the array type.</source>
          <target state="translated">標準偏差を計算する際に使用する型。整数型の配列のデフォルトは float64 で、float 型の配列の場合は配列の型と同じです。</target>
        </trans-unit>
        <trans-unit id="80e97dffa22c435830b854e8d6fb1c6cb57a1b46" translate="yes" xml:space="preserve">
          <source>Type to use in computing the variance. For arrays of integer type</source>
          <target state="translated">分散の計算に使用する型.整数型の配列の場合</target>
        </trans-unit>
        <trans-unit id="c52f694878c4817d9cf0e30a93a5ac5c826ca338" translate="yes" xml:space="preserve">
          <source>Type to use in computing the variance. For arrays of integer type the default is &lt;code&gt;float32&lt;/code&gt;; for arrays of float types it is the same as the array type.</source>
          <target state="translated">分散の計算に使用するタイプ。整数型の配列の場合、デフォルトは &lt;code&gt;float32&lt;/code&gt; です。float型の配列の場合は、配列型と同じです。</target>
        </trans-unit>
        <trans-unit id="d160c5845a8a77a5befb4851a7053d8bdf35eb94" translate="yes" xml:space="preserve">
          <source>Typecode or data-type to which the array is cast.</source>
          <target state="translated">配列がキャストされる型コードまたはデータ型。</target>
        </trans-unit>
        <trans-unit id="23cf72e69c01c79ece86b50f4bc0e1b659346558" translate="yes" xml:space="preserve">
          <source>Typemap conversions for complex floating-point types is also not supported automatically. This is because Python and NumPy are written in C, which does not have native complex types. Both Python and NumPy implement their own (essentially equivalent) &lt;code&gt;struct&lt;/code&gt; definitions for complex variables:</source>
          <target state="translated">複雑な浮動小数点型のタイプマップ変換も自動的にサポートされません。これは、PythonとNumPyがネイティブの複合型を持たないCで記述されているためです。PythonとNumPyはどちらも、複雑な変数に対して独自の（本質的に同等の） &lt;code&gt;struct&lt;/code&gt; 定義を実装しています。</target>
        </trans-unit>
        <trans-unit id="f2014cb40164abd5b9ac9cf3258c64ef343de062" translate="yes" xml:space="preserve">
          <source>Typemaps are keyed off a list of one or more function arguments, either by type or by type and name. We will refer to such lists as &lt;em&gt;signatures&lt;/em&gt;. One of the many typemaps defined by &lt;code&gt;numpy.i&lt;/code&gt; is used above and has the signature &lt;code&gt;(double* IN_ARRAY1, int DIM1)&lt;/code&gt;. The argument names are intended to suggest that the &lt;code&gt;double*&lt;/code&gt; argument is an input array of one dimension and that the &lt;code&gt;int&lt;/code&gt; represents the size of that dimension. This is precisely the pattern in the &lt;code&gt;rms&lt;/code&gt; prototype.</source>
          <target state="translated">タイプマップは、1つまたは複数の関数引数のリストから、タイプ別またはタイプと名前別にキー付けされます。このようなリストを&lt;em&gt;署名&lt;/em&gt;と呼びます。 &lt;code&gt;numpy.i&lt;/code&gt; で定義されている多くのタイプマップの1つが上記で使用されており、シグネチャ &lt;code&gt;(double* IN_ARRAY1, int DIM1)&lt;/code&gt; ます。引数名は、 &lt;code&gt;double*&lt;/code&gt; 引数が1次元の入力配列であり、 &lt;code&gt;int&lt;/code&gt; がその次元のサイズを表すことを示唆することを目的としています。これはまさに &lt;code&gt;rms&lt;/code&gt; プロトタイプのパターンです。</target>
        </trans-unit>
        <trans-unit id="908f34305dca26ca1d02c401b17bcc9125b1ab5c" translate="yes" xml:space="preserve">
          <source>Types with &lt;code&gt;.dtype&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.dtype&lt;/code&gt; を使用したタイプ</target>
        </trans-unit>
        <trans-unit id="9f433de3a09f2cf5cd13a827c57725457d725e39" translate="yes" xml:space="preserve">
          <source>Typical usage:</source>
          <target state="translated">典型的な使い方。</target>
        </trans-unit>
        <trans-unit id="e390f0c6d81411459ef6be418905b3473133c360" translate="yes" xml:space="preserve">
          <source>Typically a &amp;lsquo;greedy&amp;rsquo; algorithm is applied which empirical tests have shown returns the optimal path in the majority of cases. In some cases &amp;lsquo;optimal&amp;rsquo; will return the superlative path through a more expensive, exhaustive search. For iterative calculations it may be advisable to calculate the optimal path once and reuse that path by supplying it as an argument. An example is given below.</source>
          <target state="translated">通常、「貪欲な」アルゴリズムが適用されます。これは、経験的テストで示されているように、ほとんどの場合に最適なパスを返します。場合によっては、「最適」は、より高価で徹底的な検索を介して最上級のパスを返すことがあります。反復計算の場合は、最適パスを一度計算し、それを引数として指定して再利用することをお勧めします。以下に例を示します。</target>
        </trans-unit>
        <trans-unit id="291bb923a1cf51e55db8c8127cc92200f5117732" translate="yes" xml:space="preserve">
          <source>Typically these new versions of the array metadata but the same data buffer are new &amp;lsquo;views&amp;rsquo; into the data buffer. There is a different ndarray object, but it uses the same data buffer. This is why it is necessary to force copies through use of the .copy() method if one really wants to make a new and independent copy of the data buffer.</source>
          <target state="translated">通常、これらの新しいバージョンの配列メタデータですが、同じデータバッファーは、データバッファーへの新しい「ビュー」です。別のndarrayオブジェクトがありますが、同じデータバッファーを使用しています。これが、データバッファの新しく独立したコピーを本当に作成したい場合に、.copy（）メソッドを使用して強制的にコピーする必要がある理由です。</target>
        </trans-unit>
        <trans-unit id="54a23bec4dd6b17bf03f7139f1786ecb950b41b8" translate="yes" xml:space="preserve">
          <source>Typically this value will be one more than what you might expect because all ufuncs take the optional &amp;ldquo;out&amp;rdquo; argument.</source>
          <target state="translated">通常、この値はすべてのufuncがオプションの「out」引数を取るため、予想よりも1つ大きくなります。</target>
        </trans-unit>
        <trans-unit id="3fadc3f723273062c4d9c5a6483a39eed14f9c66" translate="yes" xml:space="preserve">
          <source>Typically, the size of all core dimensions in an output will be determined by the size of a core dimension with the same label in an input array. This is not a requirement, and it is possible to define a signature where a label comes up for the first time in an output, although some precautions must be taken when calling such a function. An example would be the function &lt;code&gt;euclidean_pdist(a)&lt;/code&gt;, with signature &lt;code&gt;(n,d)-&amp;gt;(p)&lt;/code&gt;, that given an array of &lt;code&gt;n&lt;/code&gt;&lt;code&gt;d&lt;/code&gt;-dimensional vectors, computes all unique pairwise Euclidean distances among them. The output dimension &lt;code&gt;p&lt;/code&gt; must therefore be equal to &lt;code&gt;n * (n - 1) / 2&lt;/code&gt;, but it is the caller&amp;rsquo;s responsibility to pass in an output array of the right size. If the size of a core dimension of an output cannot be determined from a passed in input or output array, an error will be raised.</source>
          <target state="translated">通常、出力のすべてのコア次元のサイズは、入力配列の同じラベルを持つコア次元のサイズによって決定されます。これは要件ではなく、出力でラベルが初めて表示されるシグネチャを定義することは可能ですが、そのような関数を呼び出すときにはいくつかの注意を払う必要があります。例としては、関数 &lt;code&gt;euclidean_pdist(a)&lt;/code&gt; があり、シグネチャが &lt;code&gt;(n,d)-&amp;gt;(p)&lt;/code&gt; 、 &lt;code&gt;n&lt;/code&gt; &lt;code&gt;d&lt;/code&gt; 次元ベクトルの配列が与えられた場合、それらの間のすべての一意のペアワイズユークリッド距離が計算されます。したがって、出力次元 &lt;code&gt;p&lt;/code&gt; は &lt;code&gt;n * (n - 1) / 2&lt;/code&gt; 等しくなければなりません。ですが、正しいサイズの出力配列を渡すのは呼び出し側の責任です。渡された入力配列または出力配列から出力のコアディメンションのサイズを決定できない場合、エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="b2c7c0caa10a0cca5ea7d69e54018ae0c0389dd6" translate="yes" xml:space="preserve">
          <source>U</source>
          <target state="translated">U</target>
        </trans-unit>
        <trans-unit id="054ec2a1c571b996a33a40629d7bbd3a2c7c7a03" translate="yes" xml:space="preserve">
          <source>UFUNC_CHECK_ERROR()</source>
          <target state="translated">UFUNC_CHECK_ERROR()</target>
        </trans-unit>
        <trans-unit id="d2291265ceb8694acf9ebd2a0083ea66791f6665" translate="yes" xml:space="preserve">
          <source>UFUNC_CHECK_STATUS()</source>
          <target state="translated">UFUNC_CHECK_STATUS()</target>
        </trans-unit>
        <trans-unit id="7c45c7778c0f3c31bbfb06962ea0f2b3d024a473" translate="yes" xml:space="preserve">
          <source>UFUNC_ERR_{HANDLER}</source>
          <target state="translated">UFUNC_ERR_{HANDLER}</target>
        </trans-unit>
        <trans-unit id="46518eb931ec8d24ef410f576a7160b8b457bb69" translate="yes" xml:space="preserve">
          <source>UFunc API</source>
          <target state="translated">UFunc API</target>
        </trans-unit>
        <trans-unit id="779cd7c4bcd3367298526e617162cab51fe8f735" translate="yes" xml:space="preserve">
          <source>UPDATEIFCOPY (U) (deprecated), replaced by WRITEBACKIFCOPY;</source>
          <target state="translated">UPDATEIFCOPY (U)(非推奨)を WRITEBACKIFCOPY に置き換えました。</target>
        </trans-unit>
        <trans-unit id="4eab2a5ea17917129ec8fa19b15a7cfda3fe1d46" translate="yes" xml:space="preserve">
          <source>UPDATEIFCOPY / U</source>
          <target state="translated">UPDATEIFCOPY/U</target>
        </trans-unit>
        <trans-unit id="8c955f87125d1d07da79b0f8b10f03f3519e41af" translate="yes" xml:space="preserve">
          <source>UPDATEIFCOPY can only be set &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">UPDATEIFCOPYは &lt;code&gt;False&lt;/code&gt; にのみ設定できます。</target>
        </trans-unit>
        <trans-unit id="7033cb6e00b408f93174a1cb4dc874e5ec8f4436" translate="yes" xml:space="preserve">
          <source>URLs require a scheme string (&lt;code&gt;http://&lt;/code&gt;) to be used, without it they will fail:</source>
          <target state="translated">URLにはスキーム文字列（ &lt;code&gt;http://&lt;/code&gt; ）を使用する必要があります。使用しないと失敗します。</target>
        </trans-unit>
        <trans-unit id="01787e5708f1880517c980a345514f0ac0d4f3a1" translate="yes" xml:space="preserve">
          <source>Ufuncs allow other array-like classes to be passed seamlessly through the interface in that inputs of a particular class will induce the outputs to be of that same class. The mechanism by which this works is the following. If any of the inputs are not ndarrays and define the &lt;a href=&quot;arrays.classes#numpy.class.__array_wrap__&quot;&gt;&lt;code&gt;__array_wrap__&lt;/code&gt;&lt;/a&gt; method, then the class with the largest &lt;a href=&quot;arrays.classes#numpy.class.__array_priority__&quot;&gt;&lt;code&gt;__array_priority__&lt;/code&gt;&lt;/a&gt; attribute determines the type of all the outputs (with the exception of any output arrays passed in). The &lt;a href=&quot;arrays.classes#numpy.class.__array_wrap__&quot;&gt;&lt;code&gt;__array_wrap__&lt;/code&gt;&lt;/a&gt; method of the input array will be called with the ndarray being returned from the ufunc as it&amp;rsquo;s input. There are two calling styles of the &lt;a href=&quot;arrays.classes#numpy.class.__array_wrap__&quot;&gt;&lt;code&gt;__array_wrap__&lt;/code&gt;&lt;/a&gt; function supported. The first takes the ndarray as the first argument and a tuple of &amp;ldquo;context&amp;rdquo; as the second argument. The context is (ufunc, arguments, output argument number). This is the first call tried. If a TypeError occurs, then the function is called with just the ndarray as the first argument.</source>
          <target state="translated">Ufuncsを使用すると、特定のクラスの入力が同じクラスの出力になるように、他の配列のようなクラスをインターフェースを介してシームレスに渡すことができます。これが機能するメカニズムは次のとおりです。入力のいずれかがndarraysではなく、&lt;a href=&quot;arrays.classes#numpy.class.__array_wrap__&quot;&gt; &lt;code&gt;__array_wrap__&lt;/code&gt; &lt;/a&gt;メソッドを定義している場合、最大の&lt;a href=&quot;arrays.classes#numpy.class.__array_priority__&quot;&gt; &lt;code&gt;__array_priority__&lt;/code&gt; &lt;/a&gt;属性を持つクラスがすべての出力のタイプを決定します（渡された出力配列を除く）。入力配列の&lt;a href=&quot;arrays.classes#numpy.class.__array_wrap__&quot;&gt; &lt;code&gt;__array_wrap__&lt;/code&gt; &lt;/a&gt;メソッドは、nduncが入力としてufuncから返されて呼び出されます。&lt;a href=&quot;arrays.classes#numpy.class.__array_wrap__&quot;&gt; &lt;code&gt;__array_wrap__&lt;/code&gt; に&lt;/a&gt;は2つの呼び出しスタイルがあります。サポートされる機能。最初のものは、最初の引数としてndarrayを取り、2番目の引数として「コンテキスト」のタプルを受け取ります。コンテキストは（ufunc、引数、出力引数番号）です。これは最初に試行された呼び出しです。TypeErrorが発生した場合、関数はndarrayだけを最初の引数として呼び出されます。</target>
        </trans-unit>
        <trans-unit id="bb1e7beaee60184f94b2766ad490881fcda15d1a" translate="yes" xml:space="preserve">
          <source>Ufuncs also have a fifth method that allows in place operations to be performed using fancy indexing. No buffering is used on the dimensions where fancy indexing is used, so the fancy index can list an item more than once and the operation will be performed on the result of the previous operation for that item.</source>
          <target state="translated">Ufuncsには、ファンシーインデックスを使用してインプレース操作を行うことができる第5の方法もあります。ファンシーインデックスが使用されるディメンジョンではバッファリングが使用されないので、ファンシーインデックスは複数回項目をリストアップすることができ、その項目に対する前回の操作の結果に対して操作が実行されます。</target>
        </trans-unit>
        <trans-unit id="ebe1370731077d311895107006a4816f68d36e75" translate="yes" xml:space="preserve">
          <source>Ufuncs: If the &lt;code&gt;ALIGNED&lt;/code&gt; flag of an array is False, ufuncs will buffer/cast the array before evaluation. This is needed since ufunc inner loops access raw elements directly, which might fail on some archs if the elements are not true-aligned.</source>
          <target state="translated">Ufuncs：配列の &lt;code&gt;ALIGNED&lt;/code&gt; フラグがFalseの場合、ufuncsは評価前に配列をバッファー/キャストします。ufuncの内部ループは生の要素に直接アクセスするため、これが必要です。要素がtrueに整列されていない場合、一部のアーチでは失敗する可能性があります。</target>
        </trans-unit>
        <trans-unit id="52313eed90dffcad6d336fc2df812a51c07afa3f" translate="yes" xml:space="preserve">
          <source>Un-sized flexible data-type objects do not have this attribute.</source>
          <target state="translated">非サイズの柔軟なデータ型オブジェクトは、この属性を持ちません。</target>
        </trans-unit>
        <trans-unit id="b7fcaea31c03023df34e5b7b17cd0d3a054b94c0" translate="yes" xml:space="preserve">
          <source>Unary operations:</source>
          <target state="translated">単項演算。</target>
        </trans-unit>
        <trans-unit id="56332d95dfcc595c6bea8676636a72713f221f0a" translate="yes" xml:space="preserve">
          <source>Underflow: result so close to zero that some precision was lost.</source>
          <target state="translated">アンダーフロー:結果がゼロに近く、精度が失われました。</target>
        </trans-unit>
        <trans-unit id="de8fa4e24f45bc650b9e48b7af77833b4a2c462a" translate="yes" xml:space="preserve">
          <source>Undoes &lt;a href=&quot;numpy.fft.fftshift#numpy.fft.fftshift&quot;&gt;&lt;code&gt;fftshift&lt;/code&gt;&lt;/a&gt;, shifts zero-frequency terms to beginning of array.</source>
          <target state="translated">取り消しは、&lt;a href=&quot;numpy.fft.fftshift#numpy.fft.fftshift&quot;&gt; &lt;code&gt;fftshift&lt;/code&gt; &lt;/a&gt;アレイの先頭に移行し、ゼロ周波数項を。</target>
        </trans-unit>
        <trans-unit id="9ab0bd9a6126ee4b9d7538d5c6cba7aa587f31ed" translate="yes" xml:space="preserve">
          <source>Unicode</source>
          <target state="translated">Unicode</target>
        </trans-unit>
        <trans-unit id="4fee0b7959c07c12abdb6224e31004ed0e03fe8f" translate="yes" xml:space="preserve">
          <source>Unicode (fixed-length sequence of &lt;a href=&quot;https://docs.python.org/dev/c-api/unicode.html#c.Py_UNICODE&quot;&gt;&lt;code&gt;Py_UNICODE&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">Unicode（&lt;a href=&quot;https://docs.python.org/dev/c-api/unicode.html#c.Py_UNICODE&quot;&gt; &lt;code&gt;Py_UNICODE&lt;/code&gt; の&lt;/a&gt;固定長シーケンス）</target>
        </trans-unit>
        <trans-unit id="1b41da839119c4860ed2bab536f19149822ad0f7" translate="yes" xml:space="preserve">
          <source>Unicode string</source>
          <target state="translated">ユニコード文字列</target>
        </trans-unit>
        <trans-unit id="b817c790c0e1eb2da135f6728ba7e7a734d36d2a" translate="yes" xml:space="preserve">
          <source>Uniforms</source>
          <target state="translated">Uniforms</target>
        </trans-unit>
        <trans-unit id="bd181d4ea0c5f747e6be59067008be3f6a568280" translate="yes" xml:space="preserve">
          <source>Uniforms (&lt;a href=&quot;generated/numpy.random.generator.random#numpy.random.Generator.random&quot;&gt;&lt;code&gt;random&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/numpy.random.generator.integers#numpy.random.Generator.integers&quot;&gt;&lt;code&gt;integers&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">制服（&lt;a href=&quot;generated/numpy.random.generator.random#numpy.random.Generator.random&quot;&gt; &lt;code&gt;random&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;generated/numpy.random.generator.integers#numpy.random.Generator.integers&quot;&gt; &lt;code&gt;integers&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="7d19a005048195442e1a0367112ec40ef36c8dd2" translate="yes" xml:space="preserve">
          <source>Unique, sorted union of the input arrays.</source>
          <target state="translated">入力配列の一意でソートされた連合.</target>
        </trans-unit>
        <trans-unit id="76a96316e226896e4f1438a10bfe2c7d74733b0a" translate="yes" xml:space="preserve">
          <source>Unit Conversion</source>
          <target state="translated">単位変換</target>
        </trans-unit>
        <trans-unit id="2b379c9399e276f2dc8f9383decfb02923fa06dd" translate="yes" xml:space="preserve">
          <source>Unitary array(s). The first &lt;code&gt;a.ndim - 2&lt;/code&gt; dimensions have the same size as those of the input &lt;code&gt;a&lt;/code&gt;. The size of the last two dimensions depends on the value of &lt;code&gt;full_matrices&lt;/code&gt;. Only returned when &lt;code&gt;compute_uv&lt;/code&gt; is True.</source>
          <target state="translated">ユニタリー配列。最初の &lt;code&gt;a.ndim - 2&lt;/code&gt; 次元は、入力 &lt;code&gt;a&lt;/code&gt; と同じサイズです。最後の2つの次元のサイズは、 &lt;code&gt;full_matrices&lt;/code&gt; の値によって異なります。 &lt;code&gt;compute_uv&lt;/code&gt; がTrueの場合にのみ返されます。</target>
        </trans-unit>
        <trans-unit id="89952e170b7f249d54c02c56dc948ea92d581887" translate="yes" xml:space="preserve">
          <source>Universal Functions</source>
          <target state="translated">ユニバーサル機能</target>
        </trans-unit>
        <trans-unit id="c4ed03ac8db5e6ac9dfa92939a06553bcbad44ab" translate="yes" xml:space="preserve">
          <source>Universal functions</source>
          <target state="translated">ユニバーサル機能</target>
        </trans-unit>
        <trans-unit id="e3950ded82824788c1d59c1dc67f67776133fd02" translate="yes" xml:space="preserve">
          <source>Universal functions (&lt;code&gt;ufunc&lt;/code&gt;)</source>
          <target state="translated">ユニバーサル関数（ &lt;code&gt;ufunc&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="825ac503579fb05389d22b5b4afa49b44dc3e914" translate="yes" xml:space="preserve">
          <source>Universal functions (ufunc)</source>
          <target state="translated">ユニバーサル関数 (ufunc)</target>
        </trans-unit>
        <trans-unit id="1c8ff35a75bf6e5497766666bbe2a77eb53892e4" translate="yes" xml:space="preserve">
          <source>Universal functions are callable objects that take</source>
          <target state="translated">ユニバーサル関数は</target>
        </trans-unit>
        <trans-unit id="14ef4c614fdbba7fe91a08e7e1d79eb5845cd489" translate="yes" xml:space="preserve">
          <source>Universal functions can trip special floating-point status registers in your hardware (such as divide-by-zero). If available on your platform, these registers will be regularly checked during calculation. Error handling is controlled on a per-thread basis, and can be configured using the functions</source>
          <target state="translated">ユニバーサル関数は、ハードウェア内の特殊な浮動小数点ステータスレジスタをトリップさせることができます(ゼロ除算など)。ご使用のプラットフォームで利用可能な場合、これらのレジスタは計算中に定期的にチェックされます。エラー処理はスレッドごとに制御され、以下の関数を使用して構成できます。</target>
        </trans-unit>
        <trans-unit id="f2a6f922fe59febd69c7ec0550beca70f253abf6" translate="yes" xml:space="preserve">
          <source>Universal functions in NumPy are flexible enough to have mixed type signatures. Thus, for example, a universal function could be defined that works with floating-point and integer values. See &lt;a href=&quot;generated/numpy.ldexp#numpy.ldexp&quot;&gt;&lt;code&gt;ldexp&lt;/code&gt;&lt;/a&gt; for an example.</source>
          <target state="translated">NumPyのユニバーサル関数は、型シグネチャが混在するほど柔軟です。したがって、たとえば、浮動小数点値と整数値を処理する汎用関数を定義できます。例については、&lt;a href=&quot;generated/numpy.ldexp#numpy.ldexp&quot;&gt; &lt;code&gt;ldexp&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="dc2928ef9066faa49b65eacee08cc9ff5b8df03a" translate="yes" xml:space="preserve">
          <source>Unlabeled tests like the ones above are run in the default &lt;code&gt;scipy.test()&lt;/code&gt; run. If you want to label your test as slow - and therefore reserved for a full &lt;code&gt;scipy.test(label='full')&lt;/code&gt; run, you can label it with a decorator:</source>
          <target state="translated">上記のような &lt;code&gt;scipy.test()&lt;/code&gt; のないテストは、デフォルトのscipy.test（）実行で実行されます。テストに低速のラベルを付けたいので、フル &lt;code&gt;scipy.test(label='full')&lt;/code&gt; の実行用に予約されている場合は、デコレータでラベルを付けることができます。</target>
        </trans-unit>
        <trans-unit id="f80a919f246626907387dd0726bbe89b8b51b4df" translate="yes" xml:space="preserve">
          <source>Unless &lt;a href=&quot;numpy.char.chararray.copy#numpy.char.chararray.copy&quot;&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/a&gt; is False and the other conditions for returning the input array are satisfied (see description for &lt;a href=&quot;numpy.char.chararray.copy#numpy.char.chararray.copy&quot;&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/a&gt; input parameter), &lt;code&gt;arr_t&lt;/code&gt; is a new array of the same shape as the input array, with dtype, order given by &lt;a href=&quot;numpy.char.chararray.dtype#numpy.char.chararray.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;order&lt;/code&gt;.</source>
          <target state="translated">ない限り&lt;a href=&quot;numpy.char.chararray.copy#numpy.char.chararray.copy&quot;&gt; &lt;code&gt;copy&lt;/code&gt; &lt;/a&gt;（の説明を参照Falseで、入力配列を返すための他の条件が満たされている&lt;a href=&quot;numpy.char.chararray.copy#numpy.char.chararray.copy&quot;&gt; &lt;code&gt;copy&lt;/code&gt; &lt;/a&gt;の入力パラメータ）、 &lt;code&gt;arr_t&lt;/code&gt; DTYPE、によって与えられた順序で入力配列と同じ形状の新しい配列である&lt;a href=&quot;numpy.char.chararray.dtype#numpy.char.chararray.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;order&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ef7dd27d4664eeedf99baaa7e0c49db6deaa478b" translate="yes" xml:space="preserve">
          <source>Unless &lt;a href=&quot;numpy.copy#numpy.copy&quot;&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/a&gt; is False and the other conditions for returning the input array are satisfied (see description for &lt;a href=&quot;numpy.copy#numpy.copy&quot;&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/a&gt; input parameter), &lt;code&gt;arr_t&lt;/code&gt; is a new array of the same shape as the input array, with dtype, order given by &lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;order&lt;/code&gt;.</source>
          <target state="translated">ない限り&lt;a href=&quot;numpy.copy#numpy.copy&quot;&gt; &lt;code&gt;copy&lt;/code&gt; &lt;/a&gt;（の説明を参照Falseで、入力配列を返すための他の条件が満たされている&lt;a href=&quot;numpy.copy#numpy.copy&quot;&gt; &lt;code&gt;copy&lt;/code&gt; &lt;/a&gt;の入力パラメータ）、 &lt;code&gt;arr_t&lt;/code&gt; DTYPE、によって与えられた順序で入力配列と同じ形状の新しい配列である&lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;order&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dd72f00597798516e6971a2dbcb92a29bbbdaed9" translate="yes" xml:space="preserve">
          <source>Unless &lt;a href=&quot;numpy.ma.copy#numpy.ma.copy&quot;&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/a&gt; is False and the other conditions for returning the input array are satisfied (see description for &lt;a href=&quot;numpy.ma.copy#numpy.ma.copy&quot;&gt;&lt;code&gt;copy&lt;/code&gt;&lt;/a&gt; input parameter), &lt;code&gt;arr_t&lt;/code&gt; is a new array of the same shape as the input array, with dtype, order given by &lt;a href=&quot;numpy.ma.maskedarray.dtype#numpy.ma.MaskedArray.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;order&lt;/code&gt;.</source>
          <target state="translated">ない限り&lt;a href=&quot;numpy.ma.copy#numpy.ma.copy&quot;&gt; &lt;code&gt;copy&lt;/code&gt; &lt;/a&gt;（の説明を参照Falseで、入力配列を返すための他の条件が満たされている&lt;a href=&quot;numpy.ma.copy#numpy.ma.copy&quot;&gt; &lt;code&gt;copy&lt;/code&gt; &lt;/a&gt;の入力パラメータ）、 &lt;code&gt;arr_t&lt;/code&gt; DTYPE、によって与えられた順序で入力配列と同じ形状の新しい配列である&lt;a href=&quot;numpy.ma.maskedarray.dtype#numpy.ma.MaskedArray.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;order&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6e2517e50c2cd18f9fa374a65d4b11b6882475bf" translate="yes" xml:space="preserve">
          <source>Unless &lt;code&gt;refcheck&lt;/code&gt; is False:</source>
          <target state="translated">&lt;code&gt;refcheck&lt;/code&gt; がFalseでない限り：</target>
        </trans-unit>
        <trans-unit id="b12a052540dd37bc0bf5e60cc41fc32cdcbd4cfa" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;numpy.equal#numpy.equal&quot;&gt;&lt;code&gt;numpy.equal&lt;/code&gt;&lt;/a&gt;, this comparison is performed by first stripping whitespace characters from the end of the string. This behavior is provided for backward-compatibility with numarray.</source>
          <target state="translated">&lt;a href=&quot;numpy.equal#numpy.equal&quot;&gt; &lt;code&gt;numpy.equal&lt;/code&gt; &lt;/a&gt;とは異なり、この比較は最初に文字列の末尾から空白文字を削除することによって実行されます。この動作は、numarrayとの下位互換性のために提供されています。</target>
        </trans-unit>
        <trans-unit id="6b2b2c64bbd5177dd4a58ffb6ba3be3f39244e9c" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;numpy.fft.fftfreq#numpy.fft.fftfreq&quot;&gt;&lt;code&gt;fftfreq&lt;/code&gt;&lt;/a&gt; (but like &lt;a href=&quot;https://docs.scipy.org/doc/scipy/reference/generated/scipy.fftpack.rfftfreq.html#scipy.fftpack.rfftfreq&quot;&gt;&lt;code&gt;scipy.fftpack.rfftfreq&lt;/code&gt;&lt;/a&gt;) the Nyquist frequency component is considered to be positive.</source>
          <target state="translated">&lt;a href=&quot;numpy.fft.fftfreq#numpy.fft.fftfreq&quot;&gt; &lt;code&gt;fftfreq&lt;/code&gt; &lt;/a&gt;（ただし&lt;a href=&quot;https://docs.scipy.org/doc/scipy/reference/generated/scipy.fftpack.rfftfreq.html#scipy.fftpack.rfftfreq&quot;&gt; &lt;code&gt;scipy.fftpack.rfftfreq&lt;/code&gt; の&lt;/a&gt;ような）とは異なり、ナイキスト周波数成分は正であると見なされます。</target>
        </trans-unit>
        <trans-unit id="5f3a2cd1365b2531abc2f011c55c5607d024f719" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;numpy.greater#numpy.greater&quot;&gt;&lt;code&gt;numpy.greater&lt;/code&gt;&lt;/a&gt;, this comparison is performed by first stripping whitespace characters from the end of the string. This behavior is provided for backward-compatibility with numarray.</source>
          <target state="translated">&lt;a href=&quot;numpy.greater#numpy.greater&quot;&gt; &lt;code&gt;numpy.greater&lt;/code&gt; &lt;/a&gt;とは異なり、この比較は最初に文字列の末尾から空白文字を削除することによって実行されます。この動作は、numarrayとの下位互換性のために提供されています。</target>
        </trans-unit>
        <trans-unit id="8db96ae1e185ea43483bbcf2e2a064fdf5d5ac53" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;numpy.greater_equal#numpy.greater_equal&quot;&gt;&lt;code&gt;numpy.greater_equal&lt;/code&gt;&lt;/a&gt;, this comparison is performed by first stripping whitespace characters from the end of the string. This behavior is provided for backward-compatibility with numarray.</source>
          <target state="translated">&lt;a href=&quot;numpy.greater_equal#numpy.greater_equal&quot;&gt; &lt;code&gt;numpy.greater_equal&lt;/code&gt; &lt;/a&gt;とは異なり、この比較は文字列の末尾から最初に空白文字を削除することによって実行されます。この動作は、numarrayとの下位互換性のために提供されています。</target>
        </trans-unit>
        <trans-unit id="cc98934fa39c9d5a378edf27cd9d3fdf09aca64f" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;numpy.less_equal#numpy.less_equal&quot;&gt;&lt;code&gt;numpy.less_equal&lt;/code&gt;&lt;/a&gt;, this comparison is performed by first stripping whitespace characters from the end of the string. This behavior is provided for backward-compatibility with numarray.</source>
          <target state="translated">&lt;a href=&quot;numpy.less_equal#numpy.less_equal&quot;&gt; &lt;code&gt;numpy.less_equal&lt;/code&gt; &lt;/a&gt;とは異なり、この比較は最初に文字列の末尾から空白文字を取り除くことによって実行されます。この動作は、numarrayとの下位互換性のために提供されています。</target>
        </trans-unit>
        <trans-unit id="13463cefef0c63fb378a22fb3869ee59d3559110" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt;&lt;code&gt;matrix&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#numpy.asmatrix&quot;&gt;&lt;code&gt;asmatrix&lt;/code&gt;&lt;/a&gt; does not make a copy if the input is already a matrix or an ndarray. Equivalent to &lt;code&gt;matrix(data, copy=False)&lt;/code&gt;.</source>
          <target state="translated">異なり&lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt; &lt;code&gt;matrix&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#numpy.asmatrix&quot;&gt; &lt;code&gt;asmatrix&lt;/code&gt; は、&lt;/a&gt;入力が既に行列またはndarrayであればコピーを作成しません。 &lt;code&gt;matrix(data, copy=False)&lt;/code&gt; 同等です。</target>
        </trans-unit>
        <trans-unit id="c0d5bc239c5d20908848ae252443d0a4e4413dd3" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt;&lt;code&gt;matrix&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;numpy.asmatrix#numpy.asmatrix&quot;&gt;&lt;code&gt;asmatrix&lt;/code&gt;&lt;/a&gt; does not make a copy if the input is already a matrix or an ndarray. Equivalent to &lt;code&gt;matrix(data, copy=False)&lt;/code&gt;.</source>
          <target state="translated">異なり&lt;a href=&quot;numpy.matrix#numpy.matrix&quot;&gt; &lt;code&gt;matrix&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;numpy.asmatrix#numpy.asmatrix&quot;&gt; &lt;code&gt;asmatrix&lt;/code&gt; は、&lt;/a&gt;入力が既に行列またはndarrayであればコピーを作成しません。 &lt;code&gt;matrix(data, copy=False)&lt;/code&gt; 同等です。</target>
        </trans-unit>
        <trans-unit id="a5b1299452ddecaa69fc7626dc84ab62f7aec6df" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;numpy.not_equal#numpy.not_equal&quot;&gt;&lt;code&gt;numpy.not_equal&lt;/code&gt;&lt;/a&gt;, this comparison is performed by first stripping whitespace characters from the end of the string. This behavior is provided for backward-compatibility with numarray.</source>
          <target state="translated">&lt;a href=&quot;numpy.not_equal#numpy.not_equal&quot;&gt; &lt;code&gt;numpy.not_equal&lt;/code&gt; &lt;/a&gt;とは異なり、この比較は最初に文字列の末尾から空白文字を削除することによって実行されます。この動作は、numarrayとの下位互換性のために提供されています。</target>
        </trans-unit>
        <trans-unit id="70d4d959a48f1152d15702553262318c5fb98806" translate="yes" xml:space="preserve">
          <source>Unlike multiplication, division, etc., the difference of two Chebyshev series is a Chebyshev series (without having to &amp;ldquo;reproject&amp;rdquo; the result onto the basis set) so subtraction, just like that of &amp;ldquo;standard&amp;rdquo; polynomials, is simply &amp;ldquo;component-wise.&amp;rdquo;</source>
          <target state="translated">乗算、除算などとは異なり、2つのチェビシェフシリーズの違いはチェビシェフシリーズであり（結果を基底セットに「再投影」する必要はありません）、減算は、「標準」多項式の場合と同様に、単純に「コンポーネントごと」になります。 。」</target>
        </trans-unit>
        <trans-unit id="e46cc304c2f214fabbfe81dd6c99872edb6df227" translate="yes" xml:space="preserve">
          <source>Unlike multiplication, division, etc., the difference of two Hermite series is a Hermite series (without having to &amp;ldquo;reproject&amp;rdquo; the result onto the basis set) so subtraction, just like that of &amp;ldquo;standard&amp;rdquo; polynomials, is simply &amp;ldquo;component-wise.&amp;rdquo;</source>
          <target state="translated">乗算、除算などとは異なり、2つのエルミートシリーズの違いはエルミートシリーズ（結果を基底セットに「再投影」する必要がない）であるため、「標準」多項式の場合と同様に、減算は単に「コンポーネントごと」になります。 。」</target>
        </trans-unit>
        <trans-unit id="0beee9ca9d008b84130a4966827a4791db0f0fc1" translate="yes" xml:space="preserve">
          <source>Unlike multiplication, division, etc., the difference of two Laguerre series is a Laguerre series (without having to &amp;ldquo;reproject&amp;rdquo; the result onto the basis set) so subtraction, just like that of &amp;ldquo;standard&amp;rdquo; polynomials, is simply &amp;ldquo;component-wise.&amp;rdquo;</source>
          <target state="translated">乗算、除算などとは異なり、2つのラゲール級数の違いはラゲール級数であり（結果を基底セットに「再投影」する必要はありません）、減算は、「標準」多項式と同様に、単純に「コンポーネントごと」になります。」</target>
        </trans-unit>
        <trans-unit id="853913b39ae1eac706caf9dd0fbf8022480e5898" translate="yes" xml:space="preserve">
          <source>Unlike multiplication, division, etc., the difference of two Legendre series is a Legendre series (without having to &amp;ldquo;reproject&amp;rdquo; the result onto the basis set) so subtraction, just like that of &amp;ldquo;standard&amp;rdquo; polynomials, is simply &amp;ldquo;component-wise.&amp;rdquo;</source>
          <target state="translated">乗算、除算などとは異なり、2つのルジャンドルシリーズの違いはルジャンドルシリーズ（結果を基底セットに「再投影」する必要がない）であるため、「標準」多項式の場合と同様に、減算は単に「コンポーネントごと」です。」</target>
        </trans-unit>
        <trans-unit id="817c653b37e40c515ff2966447fe5fceb6d50c2b" translate="yes" xml:space="preserve">
          <source>Unlike multiplication, division, etc., the sum of two Chebyshev series is a Chebyshev series (without having to &amp;ldquo;reproject&amp;rdquo; the result onto the basis set) so addition, just like that of &amp;ldquo;standard&amp;rdquo; polynomials, is simply &amp;ldquo;component-wise.&amp;rdquo;</source>
          <target state="translated">乗算、除算などとは異なり、2つのチェビシェフシリーズの合計はチェビシェフシリーズ（結果を基底セットに「再投影」する必要がない）であるため、「標準」多項式と同様に、加算は単に「コンポーネントごと」になります。 。」</target>
        </trans-unit>
        <trans-unit id="96e94bebc99e72aa93e0ba2b3e9d976f9a242788" translate="yes" xml:space="preserve">
          <source>Unlike multiplication, division, etc., the sum of two Hermite series is a Hermite series (without having to &amp;ldquo;reproject&amp;rdquo; the result onto the basis set) so addition, just like that of &amp;ldquo;standard&amp;rdquo; polynomials, is simply &amp;ldquo;component-wise.&amp;rdquo;</source>
          <target state="translated">乗算、除算などとは異なり、2つのHermiteシリーズの合計はHermiteシリーズであり（結果を基底セットに「再投影」する必要はありません）、「標準」多項式と同様に、加算は単に「コンポーネントごと」になります。」</target>
        </trans-unit>
        <trans-unit id="a1bfae60ca127fe23c05d0fcb5e3af8c025e808e" translate="yes" xml:space="preserve">
          <source>Unlike multiplication, division, etc., the sum of two Laguerre series is a Laguerre series (without having to &amp;ldquo;reproject&amp;rdquo; the result onto the basis set) so addition, just like that of &amp;ldquo;standard&amp;rdquo; polynomials, is simply &amp;ldquo;component-wise.&amp;rdquo;</source>
          <target state="translated">乗算、除算などとは異なり、2つのラゲール級数の合計はラゲール級数であるため（結果を基底セットに「再投影」する必要はありません）、「標準」多項式と同様に、加算は単に「コンポーネントごと」になります。」</target>
        </trans-unit>
        <trans-unit id="479fccdc37cae736330d681081d02fd22d2b4c05" translate="yes" xml:space="preserve">
          <source>Unlike multiplication, division, etc., the sum of two Legendre series is a Legendre series (without having to &amp;ldquo;reproject&amp;rdquo; the result onto the basis set) so addition, just like that of &amp;ldquo;standard&amp;rdquo; polynomials, is simply &amp;ldquo;component-wise.&amp;rdquo;</source>
          <target state="translated">乗算、除算などとは異なり、2つのルジャンドル級数の合計はルジャンドル級数であるため（結果を基底セットに「再投影」する必要はありません）、「標準」多項式と同様に、加算は単に「コンポーネントごと」になります。」</target>
        </trans-unit>
        <trans-unit id="6138c52b3d14f1f06df9ad9cd32f8b7c13aad36f" translate="yes" xml:space="preserve">
          <source>Unlike the built-in &lt;a href=&quot;https://docs.python.org/dev/library/math.html#math.isclose&quot;&gt;&lt;code&gt;math.isclose&lt;/code&gt;&lt;/a&gt;, the above equation is not symmetric in &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; &amp;ndash; it assumes &lt;code&gt;b&lt;/code&gt; is the reference value &amp;ndash; so that &lt;code&gt;isclose(a, b)&lt;/code&gt; might be different from &lt;code&gt;isclose(b, a)&lt;/code&gt;. Furthermore, the default value of atol is not zero, and is used to determine what small values should be considered close to zero. The default value is appropriate for expected values of order unity: if the expected values are significantly smaller than one, it can result in false positives. &lt;code&gt;atol&lt;/code&gt; should be carefully selected for the use case at hand. A zero value for &lt;code&gt;atol&lt;/code&gt; will result in &lt;code&gt;False&lt;/code&gt; if either &lt;code&gt;a&lt;/code&gt; or &lt;code&gt;b&lt;/code&gt; is zero.</source>
          <target state="translated">組み込みの&lt;a href=&quot;https://docs.python.org/dev/library/math.html#math.isclose&quot;&gt; &lt;code&gt;math.isclose&lt;/code&gt; &lt;/a&gt;とは異なり、上記の方程式は &lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; で対称ではありません。これは &lt;code&gt;b&lt;/code&gt; が参照値であると想定しているため、 &lt;code&gt;isclose(a, b)&lt;/code&gt; が &lt;code&gt;isclose(b, a)&lt;/code&gt; a）と異なる場合があるためです。さらに、atolのデフォルト値はゼロではなく、ゼロに近いと見なすべき小さな値を決定するために使用されます。デフォルト値は、次数が1の期待値に適しています。期待値が1を大幅に下回ると、誤検知が発生する可能性があります。 &lt;code&gt;atol&lt;/code&gt; は、目前のユースケースに合わせて慎重に選択する必要があります。 &lt;code&gt;atol&lt;/code&gt; のゼロ値は、次のいずれか &lt;code&gt;a&lt;/code&gt; 場合に &lt;code&gt;False&lt;/code&gt; になります。または &lt;code&gt;b&lt;/code&gt; はゼロです。</target>
        </trans-unit>
        <trans-unit id="b9b43bc2298a20c8156a6023d94ab148e7869ea1" translate="yes" xml:space="preserve">
          <source>Unlike the free function &lt;a href=&quot;numpy.reshape#numpy.reshape&quot;&gt;&lt;code&gt;numpy.reshape&lt;/code&gt;&lt;/a&gt;, this method on &lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt; allows the elements of the shape parameter to be passed in as separate arguments. For example, &lt;code&gt;a.reshape(10, 11)&lt;/code&gt; is equivalent to &lt;code&gt;a.reshape((10, 11))&lt;/code&gt;.</source>
          <target state="translated">フリー機能とは異なり&lt;a href=&quot;numpy.reshape#numpy.reshape&quot;&gt; &lt;code&gt;numpy.reshape&lt;/code&gt; &lt;/a&gt;、上でこの方法&lt;a href=&quot;numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; は、&lt;/a&gt;形状パラメータの要素が別の引数として渡されることを可能にします。たとえば、 &lt;code&gt;a.reshape(10, 11)&lt;/code&gt; は &lt;code&gt;a.reshape((10, 11))&lt;/code&gt; ））と同等です。</target>
        </trans-unit>
        <trans-unit id="c055ec1da31f5b3a36529d3d52329cd0cef8c5de" translate="yes" xml:space="preserve">
          <source>Unlike the free function &lt;a href=&quot;numpy.reshape#numpy.reshape&quot;&gt;&lt;code&gt;numpy.reshape&lt;/code&gt;&lt;/a&gt;, this method on &lt;code&gt;ndarray&lt;/code&gt; allows the elements of the shape parameter to be passed in as separate arguments. For example, &lt;code&gt;a.reshape(10, 11)&lt;/code&gt; is equivalent to &lt;code&gt;a.reshape((10, 11))&lt;/code&gt;.</source>
          <target state="translated">フリー機能とは異なり&lt;a href=&quot;numpy.reshape#numpy.reshape&quot;&gt; &lt;code&gt;numpy.reshape&lt;/code&gt; &lt;/a&gt;、上でこの方法 &lt;code&gt;ndarray&lt;/code&gt; は、形状パラメータの要素が別の引数として渡されることを可能にします。たとえば、 &lt;code&gt;a.reshape(10, 11)&lt;/code&gt; は &lt;code&gt;a.reshape((10, 11))&lt;/code&gt; ））と同等です。</target>
        </trans-unit>
        <trans-unit id="0206a9a6a08e980ce9de3768f0db78bc718405ea" translate="yes" xml:space="preserve">
          <source>Unlike the standard numpy comparison operators, the ones in the &lt;code&gt;char&lt;/code&gt; module strip trailing whitespace characters before performing the comparison.</source>
          <target state="translated">標準のnumpy比較演算子とは異なり、 &lt;code&gt;char&lt;/code&gt; モジュールの演算子は、比較を実行する前に末尾の空白文字を削除します。</target>
        </trans-unit>
        <trans-unit id="7fbacb4b6a81b741ccf818cdd058fa9d9f52d43b" translate="yes" xml:space="preserve">
          <source>Unmasking an entry</source>
          <target state="translated">エントリのマスク解除</target>
        </trans-unit>
        <trans-unit id="c37a5ee094534c733a693e498e6b83c12096d6e0" translate="yes" xml:space="preserve">
          <source>Unmasking an entry by direct assignment will silently fail if the masked array has a &lt;em&gt;hard&lt;/em&gt; mask, as shown by the &lt;code&gt;hardmask&lt;/code&gt; attribute. This feature was introduced to prevent overwriting the mask. To force the unmasking of an entry where the array has a hard mask, the mask must first to be softened using the &lt;a href=&quot;generated/numpy.ma.soften_mask#numpy.ma.soften_mask&quot;&gt;&lt;code&gt;soften_mask&lt;/code&gt;&lt;/a&gt; method before the allocation. It can be re-hardened with &lt;a href=&quot;generated/numpy.ma.harden_mask#numpy.ma.harden_mask&quot;&gt;&lt;code&gt;harden_mask&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">hardmask 属性で示されるように、 &lt;code&gt;hardmask&lt;/code&gt; された配列に&lt;em&gt;ハード&lt;/em&gt;マスクがある場合、直接割り当てによってエントリのマスクを解除すると、警告なしに失敗します。この機能は、マスクの上書きを防ぐために導入されました。配列にハードマスクがあるエントリのマスクを&lt;a href=&quot;generated/numpy.ma.soften_mask#numpy.ma.soften_mask&quot;&gt; &lt;code&gt;soften_mask&lt;/code&gt; &lt;/a&gt;的に解除するには、割り当ての前に、まずsoften_maskメソッドを使用してマスクをソフトにする必要があります。&lt;a href=&quot;generated/numpy.ma.harden_mask#numpy.ma.harden_mask&quot;&gt; &lt;code&gt;harden_mask&lt;/code&gt; を使用して&lt;/a&gt;再硬化できます。</target>
        </trans-unit>
        <trans-unit id="5724dd60c593622fc16f28573a8be39237c1817b" translate="yes" xml:space="preserve">
          <source>Unmodified core dimensions that share the same name must have the same size. Each dimension name typically corresponds to one level of looping in the elementary function&amp;rsquo;s implementation.</source>
          <target state="translated">同じ名前を共有する未修正のコア寸法は、同じサイズでなければなりません。通常、各ディメンション名は、基本関数の実装における1レベルのループに対応しています。</target>
        </trans-unit>
        <trans-unit id="0c8c8df9f7c1cb71b2c99863e55f28b2342c49c8" translate="yes" xml:space="preserve">
          <source>Unpacks elements of a uint8 array into a binary-valued output array.</source>
          <target state="translated">uint8 配列の要素をバイナリ値の出力配列に展開します。</target>
        </trans-unit>
        <trans-unit id="9b27e09825b38c1619e31484868bfeb48e96d8d2" translate="yes" xml:space="preserve">
          <source>Unsigned integer</source>
          <target state="translated">符号なし整数</target>
        </trans-unit>
        <trans-unit id="432373371510943ee2651ebf21148b86384d0a29" translate="yes" xml:space="preserve">
          <source>Unsigned integers:</source>
          <target state="translated">符号なし整数。</target>
        </trans-unit>
        <trans-unit id="c824dd22d12bde4feee6277b067eb0b05fa4fdf1" translate="yes" xml:space="preserve">
          <source>Unsigned versions of the integers can be defined by pre-pending a &amp;lsquo;u&amp;rsquo; to the front of the integer name.</source>
          <target state="translated">整数の符号なしバージョンは、整数名の前に「u」を付加することで定義できます。</target>
        </trans-unit>
        <trans-unit id="91aa49f62879d325c6707e96a59652eaa942e8ca" translate="yes" xml:space="preserve">
          <source>Until the 1.15 release, NumPy used the &lt;a href=&quot;https://nose.readthedocs.io/en/latest/&quot;&gt;nose&lt;/a&gt; testing framework, it now uses the &lt;a href=&quot;https://pytest.readthedocs.io&quot;&gt;pytest&lt;/a&gt; framework. The older framework is still maintained in order to support downstream projects that use the old numpy framework, but all tests for NumPy should use pytest.</source>
          <target state="translated">1.15リリースまでは、NumPyは&lt;a href=&quot;https://nose.readthedocs.io/en/latest/&quot;&gt;ノーズ&lt;/a&gt;テストフレームワークを使用していましたが、現在は&lt;a href=&quot;https://pytest.readthedocs.io&quot;&gt;pytest&lt;/a&gt;フレームワークを使用しています。古いnumpyフレームワークを使用するダウンストリームプロジェクトをサポートするために、古いフレームワークは引き続き維持されますが、NumPyのすべてのテストではpytestを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="f13be7738e1389f72c0f88aa84d17719f746bf4a" translate="yes" xml:space="preserve">
          <source>Unused.</source>
          <target state="translated">Unused.</target>
        </trans-unit>
        <trans-unit id="91235b6cec5e2bdecb806fae5c6f1c673c46dd54" translate="yes" xml:space="preserve">
          <source>Unwrap by changing deltas between values to 2*pi complement.</source>
          <target state="translated">値間のデルタを2*pi補数に変更してアンラップします。</target>
        </trans-unit>
        <trans-unit id="cba2ade8e0d37d0f36a249f716f7633b555a4616" translate="yes" xml:space="preserve">
          <source>Unwrap radian phase &lt;code&gt;p&lt;/code&gt; by changing absolute jumps greater than &lt;code&gt;discont&lt;/code&gt; to their 2*pi complement along the given axis.</source>
          <target state="translated">与えられた軸に沿って、 &lt;code&gt;discont&lt;/code&gt; より大きい絶対ジャンプを2 * pi補数に変更することにより、ラジアン位相 &lt;code&gt;p&lt;/code&gt; をアンラップします。</target>
        </trans-unit>
        <trans-unit id="31f87bfbdb61e41f06f9d6ba5c2c33b85dec73cd" translate="yes" xml:space="preserve">
          <source>Upcasting:</source>
          <target state="translated">Upcasting:</target>
        </trans-unit>
        <trans-unit id="777088119e41bc0469a64ccb283496abe08bc95e" translate="yes" xml:space="preserve">
          <source>Updated version of PyArray_Correlate, which uses the usual definition of correlation for 1d arrays. The correlation is computed at each output point by multiplying &lt;em&gt;op1&lt;/em&gt; by a shifted version of &lt;em&gt;op2&lt;/em&gt; and summing the result. As a result of the shift, needed values outside of the defined range of &lt;em&gt;op1&lt;/em&gt; and &lt;em&gt;op2&lt;/em&gt; are interpreted as zero. The mode determines how many shifts to return: 0 - return only shifts that did not need to assume zero- values; 1 - return an object that is the same size as &lt;em&gt;op1&lt;/em&gt;, 2 - return all possible shifts (any overlap at all is accepted).</source>
          <target state="translated">1次元配列の相関の通常の定義を使用するPyArray_Correlateの更新バージョン。相関は、&lt;em&gt;op1&lt;/em&gt;にシフトされたバージョンの&lt;em&gt;op2&lt;/em&gt;を乗算し、その結果を合計することにより、各出力ポイントで計算されます。シフトの結果、&lt;em&gt;op1&lt;/em&gt;と&lt;em&gt;op2の&lt;/em&gt;定義された範囲外の必要な値はゼロとして解釈されます。モードは、返すシフトの数を決定します。0-ゼロ値を想定する必要のないシフトのみを返します。1- &lt;em&gt;op1&lt;/em&gt;と同じサイズのオブジェクトを返します&lt;em&gt;。2-&lt;/em&gt;すべての可能なシフトを返します（オーバーラップはすべて受け入れられます）。</target>
        </trans-unit>
        <trans-unit id="80d1841e63317d86d0b2bbae07f2e08dc59ff7f9" translate="yes" xml:space="preserve">
          <source>Upper boundary of the output interval. All values generated will be less than high. The default value is 1.0.</source>
          <target state="translated">出力間隔の上限。生成される値はすべて高値以下になります。デフォルト値は1.0です。</target>
        </trans-unit>
        <trans-unit id="52be5864b9af229753de85f916fa14a1fa97d3a1" translate="yes" xml:space="preserve">
          <source>Upper limit, must be larger than &lt;code&gt;left&lt;/code&gt;.</source>
          <target state="translated">上限。 &lt;code&gt;left&lt;/code&gt; より大きくする必要があります。</target>
        </trans-unit>
        <trans-unit id="528933f6438e2665073f1a6a0a370889bd9e0bae" translate="yes" xml:space="preserve">
          <source>Upper or lower-triangular Cholesky factor of &lt;code&gt;a&lt;/code&gt;. Returns a matrix object if &lt;code&gt;a&lt;/code&gt; is a matrix object.</source>
          <target state="translated">上側または下三角コレスキー因子。場合は行列オブジェクトを返しマトリックスオブジェクトです。 &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="57bb98258946012ee6623d2627640ef4f5f0bbc8" translate="yes" xml:space="preserve">
          <source>Upper triangle of an array.</source>
          <target state="translated">配列の上三角形。</target>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="a15df8cc43a52230464924d2366701940520ece7" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;#numpy.inf&quot;&gt;&lt;code&gt;inf&lt;/code&gt;&lt;/a&gt; because &lt;a href=&quot;#numpy.Inf&quot;&gt;&lt;code&gt;Inf&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#numpy.Infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#numpy.PINF&quot;&gt;&lt;code&gt;PINF&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#numpy.infty&quot;&gt;&lt;code&gt;infty&lt;/code&gt;&lt;/a&gt; are aliases for &lt;a href=&quot;#numpy.inf&quot;&gt;&lt;code&gt;inf&lt;/code&gt;&lt;/a&gt;. For more details, see &lt;a href=&quot;#numpy.inf&quot;&gt;&lt;code&gt;inf&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;#numpy.inf&quot;&gt; &lt;code&gt;inf&lt;/code&gt; &lt;/a&gt;ので&lt;a href=&quot;#numpy.Inf&quot;&gt; &lt;code&gt;Inf&lt;/code&gt; を&lt;/a&gt;、&lt;a href=&quot;#numpy.Infinity&quot;&gt; &lt;code&gt;Infinity&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#numpy.PINF&quot;&gt; &lt;code&gt;PINF&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#numpy.infty&quot;&gt; &lt;code&gt;infty&lt;/code&gt; のは&lt;/a&gt;の別名です&lt;a href=&quot;#numpy.inf&quot;&gt; &lt;code&gt;inf&lt;/code&gt; ファイル&lt;/a&gt;。詳細については、&lt;a href=&quot;#numpy.inf&quot;&gt; &lt;code&gt;inf&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="315e845b90149a11b36b35f1bf0bf7c4eadadf53" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence.spawn#numpy.random.SeedSequence.spawn&quot;&gt;&lt;code&gt;spawn&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence.spawn#numpy.random.SeedSequence.spawn&quot;&gt; &lt;code&gt;spawn&lt;/code&gt; &lt;/a&gt;使用</target>
        </trans-unit>
        <trans-unit id="f81e110951d1c31f755b7eda89bda400f45185fe" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;numpy.testing.assert_allclose#numpy.testing.assert_allclose&quot;&gt;&lt;code&gt;assert_allclose&lt;/code&gt;&lt;/a&gt; or one of the nulp (number of floating point values) functions for these cases instead:</source>
          <target state="translated">使用&lt;a href=&quot;numpy.testing.assert_allclose#numpy.testing.assert_allclose&quot;&gt; &lt;code&gt;assert_allclose&lt;/code&gt; &lt;/a&gt;又はnulpの（浮動小数点値の数）の代わりにこれらのケースのための機能：</target>
        </trans-unit>
        <trans-unit id="279c8e9cb261d8451ee87221b2c4c3c0acff77e2" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;atleast1d&lt;/code&gt; explicitly if this behavior is deliberate.</source>
          <target state="translated">この動作が意図的なものである場合は、明示的に &lt;code&gt;atleast1d&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="c8f354d8129891e4371211f7e2b02c3e86182e68" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;np.rec.fromrecords&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;np.rec.fromrecords&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="7b891c3328df6ed66c13f42757acead75f849207" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;transpose(a, argsort(axes))&lt;/code&gt; to invert the transposition of tensors when using the &lt;code&gt;axes&lt;/code&gt; keyword argument.</source>
          <target state="translated">使用 &lt;code&gt;transpose(a, argsort(axes))&lt;/code&gt; 使用している場合テンソルの転置を反転させる &lt;code&gt;axes&lt;/code&gt; キーワード引数を。</target>
        </trans-unit>
        <trans-unit id="e79cdecbdf930a5fc02d963ddb3cee0b341e1836" translate="yes" xml:space="preserve">
          <source>Use an index array to construct a new array from a set of choices.</source>
          <target state="translated">インデックス配列を使用して、選択肢の集合から新しい配列を構築します。</target>
        </trans-unit>
        <trans-unit id="b449716c39e8e2ad1701598e0a781904fd930dad" translate="yes" xml:space="preserve">
          <source>Use boolean indexing to select all rows adding up to an even number. At the same time columns 0 and 2 should be selected with an advanced integer index. Using the &lt;a href=&quot;generated/numpy.ix_#numpy.ix_&quot;&gt;&lt;code&gt;ix_&lt;/code&gt;&lt;/a&gt; function this can be done with:</source>
          <target state="translated">ブールインデックスを使用して、合計が偶数になるすべての行を選択します。同時に、列0および2は、拡張整数インデックスで選択する必要があります。&lt;a href=&quot;generated/numpy.ix_#numpy.ix_&quot;&gt; &lt;code&gt;ix_&lt;/code&gt; &lt;/a&gt;関数を使用すると、次のようにできます。</target>
        </trans-unit>
        <trans-unit id="8f82174ebfd083d8637822ce00a0c4c91588113b" translate="yes" xml:space="preserve">
          <source>Use frompyfunc to add broadcasting to the Python function &lt;code&gt;oct&lt;/code&gt;:</source>
          <target state="translated">frompyfuncを使用して、Python関数 &lt;code&gt;oct&lt;/code&gt; にブロードキャストを追加します。</target>
        </trans-unit>
        <trans-unit id="1985c7d495449d5cb406d70622b9f8f51933acf4" translate="yes" xml:space="preserve">
          <source>Use integers()</source>
          <target state="translated">integers()を使用します。</target>
        </trans-unit>
        <trans-unit id="dc8e632ae2c46f77a697535ec370bf0774d7d3a3" translate="yes" xml:space="preserve">
          <source>Use it inside source generating function to ensure that setup distribution instance has been initialized.</source>
          <target state="translated">ソース生成関数の内部で使用し、セットアップ配布インスタンスが初期化されていることを確認します。</target>
        </trans-unit>
        <trans-unit id="71894ec37f432f11f7de9a5b9b593a7cdf8ac0f3" translate="yes" xml:space="preserve">
          <source>Use of internal buffers</source>
          <target state="translated">内部バッファの使用</target>
        </trans-unit>
        <trans-unit id="375ee90511f8800725237c9c32010dd6bfc434d9" translate="yes" xml:space="preserve">
          <source>Use one of the two predefined instances &lt;code&gt;index_exp&lt;/code&gt; or &lt;a href=&quot;#numpy.s_&quot;&gt;&lt;code&gt;s_&lt;/code&gt;&lt;/a&gt; rather than directly using &lt;code&gt;IndexExpression&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;IndexExpression&lt;/code&gt; を直接使用するのではなく、2つの定義済みインスタンス &lt;code&gt;index_exp&lt;/code&gt; または&lt;a href=&quot;#numpy.s_&quot;&gt; &lt;code&gt;s_&lt;/code&gt; のいずれ&lt;/a&gt;かを使用します。</target>
        </trans-unit>
        <trans-unit id="563d6ccf41351782f370e56a915df0b3956e26f4" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;buf&lt;/code&gt; keyword.</source>
          <target state="translated">&lt;code&gt;buf&lt;/code&gt; キーワードを使用します。</target>
        </trans-unit>
        <trans-unit id="6e0dab0efbd30d7f80d43f09e327292cfe0afdb8" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;endpoint&lt;/code&gt; kwarg to adjust the inclusion or exclution of the &lt;code&gt;high&lt;/code&gt; interval endpoint</source>
          <target state="translated">&lt;code&gt;endpoint&lt;/code&gt; クワーグを使用して、 &lt;code&gt;high&lt;/code&gt; 間隔エンドポイントの包含または除外を調整します</target>
        </trans-unit>
        <trans-unit id="1a4a01452f45e746c6cb102d0e1fd6cdbe229239" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;order&lt;/code&gt; keyword to specify a field to use when sorting a structured array:</source>
          <target state="translated">&lt;code&gt;order&lt;/code&gt; キーワードを使用して、構造化配列をソートするときに使用するフィールドを指定します。</target>
        </trans-unit>
        <trans-unit id="25cbadfbabe4aec8c49a2fe4ad5d41f89ab2957d" translate="yes" xml:space="preserve">
          <source>Use the indices of the non-zero elements as an index array to extract these elements:</source>
          <target state="translated">ゼロではない要素のインデックスをインデックス配列として使用して、これらの要素を抽出します。</target>
        </trans-unit>
        <trans-unit id="fd6f1513bb6f3e4a98050539792c7f3cbaf760a6" translate="yes" xml:space="preserve">
          <source>Used as-is.</source>
          <target state="translated">そのまま使用しています。</target>
        </trans-unit>
        <trans-unit id="86d25879dd6e8e65f51cfd2c9e310da0aa3fb93c" translate="yes" xml:space="preserve">
          <source>Used for an array, &lt;em&gt;op&lt;/em&gt;, that contains any Python objects. It decrements the reference count of every object in the array according to the data-type of &lt;em&gt;op&lt;/em&gt;. Normal return value is 0. A -1 is returned if an error occurs.</source>
          <target state="translated">Pythonオブジェクトを含む配列&lt;em&gt;opに&lt;/em&gt;使用されます。&lt;em&gt;opの&lt;/em&gt;データ型に従って、配列内のすべてのオブジェクトの参照カウントを減らします。通常の戻り値は0です。エラーが発生した場合は-1が返されます。</target>
        </trans-unit>
        <trans-unit id="12676328e0f8258da10db691bf737e9cd286a726" translate="yes" xml:space="preserve">
          <source>Used for an array, &lt;em&gt;op&lt;/em&gt;, that contains any Python objects. It increments the reference count of every object in the array according to the data-type of &lt;em&gt;op&lt;/em&gt;. A -1 is returned if an error occurs, otherwise 0 is returned.</source>
          <target state="translated">Pythonオブジェクトを含む配列&lt;em&gt;opに&lt;/em&gt;使用されます。&lt;em&gt;opの&lt;/em&gt;データ型に従って、配列内のすべてのオブジェクトの参照カウントをインクリメントします。エラーが発生した場合は-1が返され、それ以外の場合は0が返されます。</target>
        </trans-unit>
        <trans-unit id="2a13b41ea5661dcbc4d05b7183bc9d474dd67bb8" translate="yes" xml:space="preserve">
          <source>Used if &lt;a href=&quot;https://docs.python.org/dev/library/copy.html#copy.copy&quot;&gt;&lt;code&gt;copy.copy&lt;/code&gt;&lt;/a&gt; is called on an array.</source>
          <target state="translated">配列で&lt;a href=&quot;https://docs.python.org/dev/library/copy.html#copy.copy&quot;&gt; &lt;code&gt;copy.copy&lt;/code&gt; &lt;/a&gt;が呼び出された場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="b1500692edf9e6d67bd590cb2e6428fecab9820c" translate="yes" xml:space="preserve">
          <source>Used if &lt;a href=&quot;https://docs.python.org/dev/library/copy.html#copy.copy&quot;&gt;&lt;code&gt;copy.copy&lt;/code&gt;&lt;/a&gt; is called on an array. Returns a copy of the array.</source>
          <target state="translated">配列で&lt;a href=&quot;https://docs.python.org/dev/library/copy.html#copy.copy&quot;&gt; &lt;code&gt;copy.copy&lt;/code&gt; &lt;/a&gt;が呼び出された場合に使用されます。配列のコピーを返します。</target>
        </trans-unit>
        <trans-unit id="054ce70cbf81d2356ba6ae20aa8fb864ef13bf9e" translate="yes" xml:space="preserve">
          <source>Used if &lt;a href=&quot;https://docs.python.org/dev/library/copy.html#copy.deepcopy&quot;&gt;&lt;code&gt;copy.deepcopy&lt;/code&gt;&lt;/a&gt; is called on an array.</source>
          <target state="translated">配列で&lt;a href=&quot;https://docs.python.org/dev/library/copy.html#copy.deepcopy&quot;&gt; &lt;code&gt;copy.deepcopy&lt;/code&gt; &lt;/a&gt;が呼び出された場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="df1278433c263cdbbd69170e679d3f52bb78e816" translate="yes" xml:space="preserve">
          <source>Used in &amp;lsquo;constant&amp;rsquo;. The values to set the padded values for each axis.</source>
          <target state="translated">「定数」で使用されます。各軸のパディングされた値を設定する値。</target>
        </trans-unit>
        <trans-unit id="465b8fcd19cd5e2ed77adff74f2ff5a3fc18db79" translate="yes" xml:space="preserve">
          <source>Used in &amp;lsquo;linear_ramp&amp;rsquo;. The values used for the ending value of the linear_ramp and that will form the edge of the padded array.</source>
          <target state="translated">'linear_ramp'で使用されます。linear_rampの終了値に使用され、パディングされた配列のエッジを形成する値。</target>
        </trans-unit>
        <trans-unit id="d71d6f65b16e9b35cb9fcf9b7569838936b2caa2" translate="yes" xml:space="preserve">
          <source>Used in &amp;lsquo;maximum&amp;rsquo;, &amp;lsquo;mean&amp;rsquo;, &amp;lsquo;median&amp;rsquo;, and &amp;lsquo;minimum&amp;rsquo;. Number of values at edge of each axis used to calculate the statistic value.</source>
          <target state="translated">「最大」、「平均」、「中央値」、および「最小」で使用されます。統計値の計算に使用される各軸の端にある値の数。</target>
        </trans-unit>
        <trans-unit id="4325f42e7e418215aac0a73c897c39904b4d0a1e" translate="yes" xml:space="preserve">
          <source>Used in &amp;lsquo;reflect&amp;rsquo;, and &amp;lsquo;symmetric&amp;rsquo;. The &amp;lsquo;even&amp;rsquo; style is the default with an unaltered reflection around the edge value. For the &amp;lsquo;odd&amp;rsquo; style, the extended part of the array is created by subtracting the reflected values from two times the edge value.</source>
          <target state="translated">「反映」および「対称」で使用されます。'even'スタイルがデフォルトであり、エッジ値の周りの反射は変更されません。「奇数」スタイルの場合、配列の拡張部分は、エッジ値の2倍から反射値を減算することによって作成されます。</target>
        </trans-unit>
        <trans-unit id="1b7f1793a4a4b44dd1933f922f757d629d3be5a3" translate="yes" xml:space="preserve">
          <source>Used in universal function code to only release the Python GIL if loop-&amp;gt;obj is not true (&lt;em&gt;i.e.&lt;/em&gt; this is not an OBJECT array loop). Requires use of &lt;a href=&quot;c-api.array#c.NPY_BEGIN_THREADS_DEF&quot;&gt;&lt;code&gt;NPY_BEGIN_THREADS_DEF&lt;/code&gt;&lt;/a&gt; in variable declaration area.</source>
          <target state="translated">loop-&amp;gt; objがtrueでない（&lt;em&gt;つまり、&lt;/em&gt;これがOBJECT配列ループではない）場合にのみPython GILを解放するために、ユニバーサル関数コードで使用されます。変数宣言領域で&lt;a href=&quot;c-api.array#c.NPY_BEGIN_THREADS_DEF&quot;&gt; &lt;code&gt;NPY_BEGIN_THREADS_DEF&lt;/code&gt; &lt;/a&gt;を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="10031fc1a49c2cbba6bbb424956b8667cda6fefa" translate="yes" xml:space="preserve">
          <source>Used in universal function code to re-acquire the Python GIL if it was released (because loop-&amp;gt;obj was not true).</source>
          <target state="translated">Python GILがリリースされた場合にそれを再取得するためにユニバーサル関数コードで使用されます（loop-&amp;gt; objがtrueでないため）。</target>
        </trans-unit>
        <trans-unit id="c23b41a6c14497a2fa2fb894918e5ebdff35b118" translate="yes" xml:space="preserve">
          <source>Used to construct the convolution operator.</source>
          <target state="translated">畳み込み演算子を構築するために使用します。</target>
        </trans-unit>
        <trans-unit id="c5c64c33615821368bc9743122d8a6c96ff848fe" translate="yes" xml:space="preserve">
          <source>Used to fill the array with data.</source>
          <target state="translated">配列をデータで埋めるために使用します。</target>
        </trans-unit>
        <trans-unit id="4b06029f962bdaa60d205631cac84f36f3e29d6f" translate="yes" xml:space="preserve">
          <source>Useful functions in &lt;code&gt;numpy.distutils.misc_util&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;numpy.distutils.misc_util&lt;/code&gt; の便利な関数</target>
        </trans-unit>
        <trans-unit id="7dc863346a17f843606dc78b7fd5eaa70c18759a" translate="yes" xml:space="preserve">
          <source>Useful math constants</source>
          <target state="translated">便利な数学定数</target>
        </trans-unit>
        <trans-unit id="d7e7cae700d3c37685c439282d2378cb79df959c" translate="yes" xml:space="preserve">
          <source>Useful to regain the GIL in situations where it was released using the BEGIN form of this macro.</source>
          <target state="translated">このマクロのBEGINフォームを使用して解放された状況でGILを取り戻すのに便利です。</target>
        </trans-unit>
        <trans-unit id="d580b2c9b4825f08cb2691c40cd94404df444f3e" translate="yes" xml:space="preserve">
          <source>Useful to release the GIL only if &lt;em&gt;dtype&lt;/em&gt; does not contain arbitrary Python objects which may need the Python interpreter during execution of the loop. Equivalent to</source>
          <target state="translated">ループの実行中にPythonインタープリターを必要とする可能性のある任意のPythonオブジェクトが&lt;em&gt;dtypeに&lt;/em&gt;含まれていない場合にのみ、GILを解放するのに役立ちます。に相当</target>
        </trans-unit>
        <trans-unit id="2978535fda1f10395442e618746112da0bb87d3a" translate="yes" xml:space="preserve">
          <source>Useful to release the GIL only if &lt;em&gt;loop_size&lt;/em&gt; exceeds a minimum threshold, currently set to 500. Should be matched with a &lt;a href=&quot;#c.NPY_END_THREADS&quot;&gt;&lt;code&gt;NPY_END_THREADS&lt;/code&gt;&lt;/a&gt; to regain the GIL.</source>
          <target state="translated">&lt;em&gt;loop_size&lt;/em&gt;が最小しきい値（現在は500に設定）を超えている場合にのみGILを解放するのに役立ちます&lt;a href=&quot;#c.NPY_END_THREADS&quot;&gt; &lt;code&gt;NPY_END_THREADS&lt;/code&gt; &lt;/a&gt;を回復するには、NPY_END_THREADSと一致させる必要があります。</target>
        </trans-unit>
        <trans-unit id="2637443926c71ce03a091c2e95bf9b5610348992" translate="yes" xml:space="preserve">
          <source>Using &amp;lsquo;r&amp;rsquo; or &amp;lsquo;c&amp;rsquo; as a first string argument creates a matrix.</source>
          <target state="translated">最初の文字列引数として「r」または「c」を使用すると、行列が作成されます。</target>
        </trans-unit>
        <trans-unit id="65fcf8542af4dfa98c8e336c7ebb663b2e96f530" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;#numpy.ix_&quot;&gt;&lt;code&gt;ix_&lt;/code&gt;&lt;/a&gt; one can quickly construct index arrays that will index the cross product. &lt;code&gt;a[np.ix_([1,3],[2,5])]&lt;/code&gt; returns the array &lt;code&gt;[[a[1,2] a[1,5]], [a[3,2] a[3,5]]]&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#numpy.ix_&quot;&gt; &lt;code&gt;ix_&lt;/code&gt; &lt;/a&gt;を使用すると、クロス積にインデックスを付けるインデックス配列をすばやく構築できます。 &lt;code&gt;a[np.ix_([1,3],[2,5])]&lt;/code&gt; は配列 &lt;code&gt;[[a[1,2] a[1,5]], [a[3,2] a[3,5]]]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="32ece8fbb6c1ed850bf1c3c8fb0f4d5a7300c2c0" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;#numpy.savez&quot;&gt;&lt;code&gt;savez&lt;/code&gt;&lt;/a&gt; with **kwds, the arrays are saved with the keyword names.</source>
          <target state="translated">** kwdsで&lt;a href=&quot;#numpy.savez&quot;&gt; &lt;code&gt;savez&lt;/code&gt; &lt;/a&gt;を使用すると、配列はキーワード名で保存されます。</target>
        </trans-unit>
        <trans-unit id="8c36d4099fe15bc91bbfe91acb74cd64e75d6b3f" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;#numpy.savez&quot;&gt;&lt;code&gt;savez&lt;/code&gt;&lt;/a&gt; with *args, the arrays are saved with default names.</source>
          <target state="translated">* argsで&lt;a href=&quot;#numpy.savez&quot;&gt; &lt;code&gt;savez&lt;/code&gt; &lt;/a&gt;を使用すると、配列はデフォルト名で保存されます。</target>
        </trans-unit>
        <trans-unit id="d4ecb91f09183edc4f23a5cc314556ac8c1af3c8" translate="yes" xml:space="preserve">
          <source>Using a flexible &lt;code&gt;dtype&lt;/code&gt;.</source>
          <target state="translated">柔軟な &lt;code&gt;dtype&lt;/code&gt; を使用する。</target>
        </trans-unit>
        <trans-unit id="cfac66afdbdc20a411f9f9f200f87cdcbe870cdd" translate="yes" xml:space="preserve">
          <source>Using a view to convert an array to a recarray:</source>
          <target state="translated">ビューを使用して配列を再配列に変換します。</target>
        </trans-unit>
        <trans-unit id="a4fb72e0c5f0602466b0b452237f4e23496663cc" translate="yes" xml:space="preserve">
          <source>Using an External Loop</source>
          <target state="translated">外部ループの使用</target>
        </trans-unit>
        <trans-unit id="f210f428b873c49c7b2b57aa15cfa3164fde53af" translate="yes" xml:space="preserve">
          <source>Using an instance of &lt;a href=&quot;#numpy.errstate&quot;&gt;&lt;code&gt;errstate&lt;/code&gt;&lt;/a&gt; as a context manager allows statements in that context to execute with a known error handling behavior. Upon entering the context the error handling is set with &lt;a href=&quot;numpy.seterr#numpy.seterr&quot;&gt;&lt;code&gt;seterr&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;numpy.seterrcall#numpy.seterrcall&quot;&gt;&lt;code&gt;seterrcall&lt;/code&gt;&lt;/a&gt;, and upon exiting it is reset to what it was before.</source>
          <target state="translated">&lt;a href=&quot;#numpy.errstate&quot;&gt; &lt;code&gt;errstate&lt;/code&gt; &lt;/a&gt;のインスタンスをコンテキストマネージャーとして使用すると、そのコンテキスト内のステートメントを既知のエラー処理動作で実行できます。コンテキストに入ると、エラー処理は&lt;a href=&quot;numpy.seterr#numpy.seterr&quot;&gt; &lt;code&gt;seterr&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;numpy.seterrcall#numpy.seterrcall&quot;&gt; &lt;code&gt;seterrcall&lt;/code&gt; &lt;/a&gt;で設定され、終了すると、以前の状態にリセットされます。</target>
        </trans-unit>
        <trans-unit id="7af0c7a348040b3b4ff1744a0608d17163c9138e" translate="yes" xml:space="preserve">
          <source>Using array-protocol type strings:</source>
          <target state="translated">配列プロトコル型の文字列を使用しています。</target>
        </trans-unit>
        <trans-unit id="fd7054fa064ad2611d4b7d00df8240d7735e3c37" translate="yes" xml:space="preserve">
          <source>Using array-scalar type:</source>
          <target state="translated">配列スカラ型を使用しています。</target>
        </trans-unit>
        <trans-unit id="03a2b430abf28e746816ea1cff1b193db00a94c9" translate="yes" xml:space="preserve">
          <source>Using comma-separated field formats. The shape is (2,3):</source>
          <target state="translated">カンマで区切られたフィールド形式を使用して 形は(2,3)です。</target>
        </trans-unit>
        <trans-unit id="e282c417933d97d3a53a56d481d1f405a74c7c0d" translate="yes" xml:space="preserve">
          <source>Using complex sequences:</source>
          <target state="translated">複雑なシーケンスを使用しています。</target>
        </trans-unit>
        <trans-unit id="26e522c98bd807e94f2ab9fc3a1975ce203f287e" translate="yes" xml:space="preserve">
          <source>Using dictionaries. Two fields named &amp;lsquo;gender&amp;rsquo; and &amp;lsquo;age&amp;rsquo;:</source>
          <target state="translated">辞書を使用する。「gender」と「age」という2つのフィールド：</target>
        </trans-unit>
        <trans-unit id="af330b02f13d207e5fac3c22b8c9bdbaab36afee" translate="yes" xml:space="preserve">
          <source>Using dtype = None</source>
          <target state="translated">dtype=Noneを使用する</target>
        </trans-unit>
        <trans-unit id="8d2131672fafcfdf449f29b29350743e40c17d69" translate="yes" xml:space="preserve">
          <source>Using months for the unit:</source>
          <target state="translated">単位に月を使う</target>
        </trans-unit>
        <trans-unit id="2f696379652fe6905a66fc5fd2b9273fa2471296" translate="yes" xml:space="preserve">
          <source>Using numpy.i</source>
          <target state="translated">numpy.iを使う</target>
        </trans-unit>
        <trans-unit id="e8111da9fdc8286f7fa1decedd3c62fdfaa40d28" translate="yes" xml:space="preserve">
          <source>Using numpy.ma</source>
          <target state="translated">numpy.maを使う</target>
        </trans-unit>
        <trans-unit id="03252764a2ca129ee8f53a1ebcd3c94ffd3382b7" translate="yes" xml:space="preserve">
          <source>Using poly1d objects:</source>
          <target state="translated">poly1dオブジェクトを使用しています。</target>
        </trans-unit>
        <trans-unit id="79eb3bbcb08c7d6704be86d77b0727b917270b3d" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;axis&lt;/code&gt; argument to compute matrix norms:</source>
          <target state="translated">使用する &lt;code&gt;axis&lt;/code&gt; 計算行列ノルムに引数を：</target>
        </trans-unit>
        <trans-unit id="9e684f49459c0d5aba4c5f2579aeb17add74610d" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;axis&lt;/code&gt; argument to compute vector norms:</source>
          <target state="translated">使用する &lt;code&gt;axis&lt;/code&gt; 計算ベクトルの規範に引数を：</target>
        </trans-unit>
        <trans-unit id="b9ba36c2f053a06ac3abc3a930f4a1d05aada052" translate="yes" xml:space="preserve">
          <source>Using the Convenience Classes</source>
          <target state="translated">便利教室の使い方</target>
        </trans-unit>
        <trans-unit id="1bd2966f639ab87086919a9a710a3ff850eadf79" translate="yes" xml:space="preserve">
          <source>Using the Einstein summation convention, many common multi-dimensional, linear algebraic array operations can be represented in a simple fashion. In &lt;em&gt;implicit&lt;/em&gt; mode &lt;a href=&quot;#numpy.einsum&quot;&gt;&lt;code&gt;einsum&lt;/code&gt;&lt;/a&gt; computes these values.</source>
          <target state="translated">Einstein総和規則を使用すると、多くの一般的な多次元線形代数配列演算を簡単な方法で表すことができます。では&lt;em&gt;、暗黙の&lt;/em&gt;モード&lt;a href=&quot;#numpy.einsum&quot;&gt; &lt;code&gt;einsum&lt;/code&gt; は&lt;/a&gt;、これらの値を計算します。</target>
        </trans-unit>
        <trans-unit id="75da2a462c666654f41a122b8cf7201ccca6f453" translate="yes" xml:space="preserve">
          <source>Using the casting rules</source>
          <target state="translated">キャスティングルールを使って</target>
        </trans-unit>
        <trans-unit id="0e2a18ad6df592872579dd4bbee44818b7034db3" translate="yes" xml:space="preserve">
          <source>Using these #defines you can use the C-API in multiple files for a single extension module. In each file you must define &lt;a href=&quot;#c.PY_ARRAY_UNIQUE_SYMBOL&quot;&gt;&lt;code&gt;PY_ARRAY_UNIQUE_SYMBOL&lt;/code&gt;&lt;/a&gt; to some name that will hold the C-API (&lt;em&gt;e.g.&lt;/em&gt; myextension_ARRAY_API). This must be done &lt;strong&gt;before&lt;/strong&gt; including the numpy/arrayobject.h file. In the module initialization routine you call &lt;a href=&quot;#c.import_array&quot;&gt;&lt;code&gt;import_array&lt;/code&gt;&lt;/a&gt;. In addition, in the files that do not have the module initialization sub_routine define &lt;a href=&quot;#c.NO_IMPORT_ARRAY&quot;&gt;&lt;code&gt;NO_IMPORT_ARRAY&lt;/code&gt;&lt;/a&gt; prior to including numpy/arrayobject.h.</source>
          <target state="translated">これらの#definesを使用すると、単一の拡張モジュールの複数のファイルでC-APIを使用できます。各ファイルでは定義する必要があり&lt;a href=&quot;#c.PY_ARRAY_UNIQUE_SYMBOL&quot;&gt; &lt;code&gt;PY_ARRAY_UNIQUE_SYMBOL&lt;/code&gt; を&lt;/a&gt; C-APIを保持するいくつかの名前（に&lt;em&gt;例えば&lt;/em&gt; myextension_ARRAY_API）。これは、numpy / arrayobject.hファイルをインクルードする&lt;strong&gt;前&lt;/strong&gt;に行う必要があります。モジュール初期化ルーチンでは、&lt;a href=&quot;#c.import_array&quot;&gt; &lt;code&gt;import_array&lt;/code&gt; &lt;/a&gt;を呼び出します。また、モジュールの初期化sub_routineを持っていないファイルで定義&lt;a href=&quot;#c.NO_IMPORT_ARRAY&quot;&gt; &lt;code&gt;NO_IMPORT_ARRAY&lt;/code&gt; &lt;/a&gt; numpyの/ arrayobject.h含めて前に。</target>
        </trans-unit>
        <trans-unit id="315900bdae1d95768693f5caf49a459c0e9247e8" translate="yes" xml:space="preserve">
          <source>Using this result to index &lt;code&gt;a&lt;/code&gt; is equivalent to using the mask directly:</source>
          <target state="translated">この結果を使用して &lt;code&gt;a&lt;/code&gt; にインデックスを付けることは、マスクを直接使用することと同じです。</target>
        </trans-unit>
        <trans-unit id="f1e207983fdf75c13618b12af3dac2cc9b09a86a" translate="yes" xml:space="preserve">
          <source>Using this scheme, an upper bound on the probability of a collision can be estimated if one knows the number of streams that you derive. &lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt;&lt;code&gt;SeedSequence&lt;/code&gt;&lt;/a&gt; hashes its inputs, both the seed and the spawn-tree-path, down to a 128-bit pool by default. The probability that there is a collision in that pool, pessimistically-estimated (&lt;a href=&quot;#id3&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;), will be about</source>
          <target state="translated">このスキームを使用すると、導出するストリームの数がわかっている場合、衝突の確率の上限を推定できます。&lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt; &lt;code&gt;SeedSequence&lt;/code&gt; &lt;/a&gt;は、シードとspawn-tree-pathの両方の入力を、デフォルトで128ビットプールにハッシュします。そのプールに衝突がある確率は、悲観的に見積もられ（&lt;a href=&quot;#id3&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;）、およそ</target>
        </trans-unit>
        <trans-unit id="81f2b8dfbfc71c96c12b186f5770d7cbd6cb20f2" translate="yes" xml:space="preserve">
          <source>Using tuples. &lt;code&gt;int&lt;/code&gt; is a fixed type, 3 the field&amp;rsquo;s shape. &lt;code&gt;void&lt;/code&gt; is a flexible type, here of size 10:</source>
          <target state="translated">タプルの使用。 &lt;code&gt;int&lt;/code&gt; は固定型で、フィールドの形状です。 &lt;code&gt;void&lt;/code&gt; は、ここではサイズ10のフレキシブルタイプです。</target>
        </trans-unit>
        <trans-unit id="ef8b4345a7cc12338d15d1fb67d9e4a4feb23426" translate="yes" xml:space="preserve">
          <source>Usually denoted</source>
          <target state="translated">通常は</target>
        </trans-unit>
        <trans-unit id="a5abc30aa6f2b926c1472fe22071db5adb16a0bc" translate="yes" xml:space="preserve">
          <source>Usually, however, adding the &lt;code&gt;tests/&lt;/code&gt; directory to the python path isn&amp;rsquo;t desirable. Instead it would better to invoke the test straight from the module &lt;code&gt;xxx&lt;/code&gt;. To this end, simply place the following lines at the end of your package&amp;rsquo;s &lt;code&gt;__init__.py&lt;/code&gt; file:</source>
          <target state="translated">ただし、通常、 &lt;code&gt;tests/&lt;/code&gt; ディレクトリをpythonパスに追加することは望ましくありません。代わりに、モジュール &lt;code&gt;xxx&lt;/code&gt; から直接テストを呼び出すほうがよいでしょう。そのためには、パッケージの &lt;code&gt;__init__.py&lt;/code&gt; ファイルの最後に次の行を追加するだけです。</target>
        </trans-unit>
        <trans-unit id="6be23322b56766a1db9b8621387497e594f16d2d" translate="yes" xml:space="preserve">
          <source>Utility classes and functions for the polynomial modules.</source>
          <target state="translated">多項式モジュールのためのユーティリティクラスと関数</target>
        </trans-unit>
        <trans-unit id="c9ee5681d3c59f7541c27a38b67edf46259e187b" translate="yes" xml:space="preserve">
          <source>V</source>
          <target state="translated">V</target>
        </trans-unit>
        <trans-unit id="3522db33c6e586ed6f52f3af3bea08c2509cdaed" translate="yes" xml:space="preserve">
          <source>Value indicating that a masked array has no invalid entry. &lt;a href=&quot;#numpy.ma.nomask&quot;&gt;&lt;code&gt;nomask&lt;/code&gt;&lt;/a&gt; is used internally to speed up computations when the mask is not needed.</source>
          <target state="translated">マスクされた配列に無効なエントリがないことを示す値。&lt;a href=&quot;#numpy.ma.nomask&quot;&gt; &lt;code&gt;nomask&lt;/code&gt; &lt;/a&gt;は、マスクが不要な場合に計算を高速化するために内部的に使用されます。</target>
        </trans-unit>
        <trans-unit id="0b9ec234c1eee91fedfeaba35509216217fe21cd" translate="yes" xml:space="preserve">
          <source>Value of &lt;code&gt;operands&lt;/code&gt; at current iteration. Normally, this is a tuple of array scalars, but if the flag &lt;code&gt;external_loop&lt;/code&gt; is used, it is a tuple of one dimensional arrays.</source>
          <target state="translated">現在の反復での &lt;code&gt;operands&lt;/code&gt; 値。通常、これは配列スカラーのタプルですが、 &lt;code&gt;external_loop&lt;/code&gt; フラグが使用されている場合、これは1次元配列のタプルです。</target>
        </trans-unit>
        <trans-unit id="d866e0938fcfdf12b88042317593d4295facb33c" translate="yes" xml:space="preserve">
          <source>Value to be placed in field.</source>
          <target state="translated">フィールドに配置する値。</target>
        </trans-unit>
        <trans-unit id="4ba37300f6a7d1d653bfd085d1c3e62828c53205" translate="yes" xml:space="preserve">
          <source>Value to be used to fill NaN values. If no value is passed then NaN values will be replaced with 0.0.</source>
          <target state="translated">NaN値を埋めるために使用する値。値が渡されなかった場合、NaNの値は0.0に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="73822c64a61d90da64aca29978cabf65524aa150" translate="yes" xml:space="preserve">
          <source>Value to be used to fill negative infinity values. If no value is passed then negative infinity values will be replaced with a very small (or negative) number.</source>
          <target state="translated">負の無限大値を埋めるために使用される値。値を渡さなかった場合は、負の無限大値は非常に小さな (または負の)数値に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="f4796b06e4cb3d07bcdfe89591ec37b878b0609f" translate="yes" xml:space="preserve">
          <source>Value to be used to fill positive infinity values. If no value is passed then positive infinity values will be replaced with a very large number.</source>
          <target state="translated">正の無限大値を埋めるために使用される値。値を渡さなかった場合、正の無限大の値は非常に大きな数に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="f7cccdf775f458dbd65351fa14dd9eb110134681" translate="yes" xml:space="preserve">
          <source>Value to be written on the diagonal, its type must be compatible with that of the array a.</source>
          <target state="translated">対角線上に書き込まれる値は,その型が配列aの型と互換性がなければなりません.</target>
        </trans-unit>
        <trans-unit id="715dcdd8f6ff522d4658e491027e9aae31a8b5e6" translate="yes" xml:space="preserve">
          <source>Value to format.</source>
          <target state="translated">フォーマットへの値。</target>
        </trans-unit>
        <trans-unit id="3d3e32ccc4b0ab4e1f0dc806d286fb59b6c443d6" translate="yes" xml:space="preserve">
          <source>Value to return for &lt;code&gt;x &amp;gt; xp[-1]&lt;/code&gt;, default is &lt;code&gt;fp[-1]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x &amp;gt; xp[-1]&lt;/code&gt; に対して返す値。デフォルトは &lt;code&gt;fp[-1]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="26d4865cbe90216e1386cb06fe27a2a8a2fdea6f" translate="yes" xml:space="preserve">
          <source>Value to return for &lt;code&gt;x &amp;lt; xp[0]&lt;/code&gt;, default is &lt;code&gt;fp[0]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x &amp;lt; xp[0]&lt;/code&gt; に対して返す値。デフォルトは &lt;code&gt;fp[0]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d7a5e0e3824dade99c632ba9171e408c2ecc5e00" translate="yes" xml:space="preserve">
          <source>Value used for fixing invalid data. Default is None, in which case the &lt;code&gt;a.fill_value&lt;/code&gt; is used.</source>
          <target state="translated">無効なデータを修正するために使用される値。デフォルトはNone です。この場合、 &lt;code&gt;a.fill_value&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="69ddc9b73f581b3343b0affbf7e4377d672439b1" translate="yes" xml:space="preserve">
          <source>Value used internally for the masked values. If &lt;code&gt;fill_value&lt;/code&gt; is not None, it supersedes &lt;code&gt;endwith&lt;/code&gt;.</source>
          <target state="translated">マスクされた値に内部的に使用される値。 &lt;code&gt;fill_value&lt;/code&gt; がNoneでない場合、それは &lt;code&gt;endwith&lt;/code&gt; に取って代わります。</target>
        </trans-unit>
        <trans-unit id="328663db0b3aba67f0d82903937cd9193c3e207c" translate="yes" xml:space="preserve">
          <source>Value used to fill in the masked values when necessary. If None, a default based on the data-type is used.</source>
          <target state="translated">必要に応じてマスクされた値を埋めるために使用される値。Noneの場合、データタイプに基づくデフォルトが使用されます。</target>
        </trans-unit>
        <trans-unit id="ac07a9705ce80720af8585478b1d81e8b7b8b456" translate="yes" xml:space="preserve">
          <source>Value used to fill in the masked values.</source>
          <target state="translated">マスクされた値を埋めるために使用される値。</target>
        </trans-unit>
        <trans-unit id="86e71cf73f1d7bc170999262699205370f1f93e4" translate="yes" xml:space="preserve">
          <source>Value used to fill in the masked values. Default is None, in which case &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.fill_value&quot;&gt;&lt;code&gt;MaskedArray.fill_value&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="translated">マスクされた値を埋めるために使用される値。デフォルトはNone です。この場合、&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.fill_value&quot;&gt; &lt;code&gt;MaskedArray.fill_value&lt;/code&gt; &lt;/a&gt;が使用されます。</target>
        </trans-unit>
        <trans-unit id="19866b65a013a0eb3c733fc479da8433fc02a5f3" translate="yes" xml:space="preserve">
          <source>Value used to fill in the masked values. If None, the output of maximum_fill_value(self._data) is used instead.</source>
          <target state="translated">マスクされた値を塗りつぶすのに使われる値。Noneの場合は、maximum_fill_value(self._data)の出力が代わりに使用されます。</target>
        </trans-unit>
        <trans-unit id="5c0a58c6eeb18776376a78bc0a9866ce44b1ad27" translate="yes" xml:space="preserve">
          <source>Value used to fill in the masked values. If None, the output of minimum_fill_value(self._data) is used instead.</source>
          <target state="translated">マスクされた値を塗りつぶすのに使われる値。Noneの場合は、代わりにminimum_fill_value(self._data)の出力が使用されます。</target>
        </trans-unit>
        <trans-unit id="752e711d9ae184609f9efa220ffeb98e2623ff23" translate="yes" xml:space="preserve">
          <source>Value used to fill in the masked values. If None, use the output of &lt;code&gt;minimum_fill_value&lt;/code&gt;.</source>
          <target state="translated">マスクされた値を埋めるために使用される値。Noneの場合、 &lt;code&gt;minimum_fill_value&lt;/code&gt; の出力を使用します。</target>
        </trans-unit>
        <trans-unit id="94b3fde97e6b1196d461cd6d1087f12e6dea54b2" translate="yes" xml:space="preserve">
          <source>Value used to fill in the masked values. If None, use the output of maximum_fill_value().</source>
          <target state="translated">マスクされた値を塗りつぶすのに使われる値。None の場合は、maximum_fill_value()の出力を使用します。</target>
        </trans-unit>
        <trans-unit id="eddd55b4550fcb347a1d6bf73a696e1497719104" translate="yes" xml:space="preserve">
          <source>Values are appended to a copy of this array.</source>
          <target state="translated">値はこの配列のコピーに追加されます。</target>
        </trans-unit>
        <trans-unit id="24421420351a973d79bcca3d2ef0e453017e616f" translate="yes" xml:space="preserve">
          <source>Values are generated within the half-open interval &lt;code&gt;[start, stop)&lt;/code&gt; (in other words, the interval including &lt;code&gt;start&lt;/code&gt; but excluding &lt;code&gt;stop&lt;/code&gt;). For integer arguments the function is equivalent to the Python built-in &lt;code&gt;range&lt;/code&gt; function, but returns an ndarray rather than a list.</source>
          <target state="translated">値は、ハーフオープンインターバル &lt;code&gt;[start, stop)&lt;/code&gt; （つまり、 &lt;code&gt;start&lt;/code&gt; を含み、 &lt;code&gt;stop&lt;/code&gt; を除外したインターバル）内で生成されます。整数引数の場合、この関数はPythonの組み込み &lt;code&gt;range&lt;/code&gt; 関数と同等ですが、リストではなくndarrayを返します。</target>
        </trans-unit>
        <trans-unit id="38b38aff8e14ce007107a5b62d7837a43399e916" translate="yes" xml:space="preserve">
          <source>Values at which the weight function will be computed.</source>
          <target state="translated">重み関数が計算される値。</target>
        </trans-unit>
        <trans-unit id="8afc1edfb8d26a9a4bac7610a9a2ed43bc17c240" translate="yes" xml:space="preserve">
          <source>Values from which to choose. &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt; and &lt;code&gt;condition&lt;/code&gt; need to be broadcastable to some shape.</source>
          <target state="translated">選択する値。 &lt;code&gt;x&lt;/code&gt; 、 &lt;code&gt;y&lt;/code&gt; 、および &lt;code&gt;condition&lt;/code&gt; は、何らかの形でブロードキャストできる必要があります。</target>
        </trans-unit>
        <trans-unit id="55fd9fa348e62e91b8d05086f74314a1ab640581" translate="yes" xml:space="preserve">
          <source>Values in &lt;code&gt;i&lt;/code&gt; of less than 0 are treated as 0 (which yields an empty string).</source>
          <target state="translated">0未満の &lt;code&gt;i&lt;/code&gt; の値は0として扱われます（空の文字列が生成されます）。</target>
        </trans-unit>
        <trans-unit id="c0da0f066601a2a9367e697b89519e6b0c50e33e" translate="yes" xml:space="preserve">
          <source>Values to change the sign of.</source>
          <target state="translated">符号を変更する値。</target>
        </trans-unit>
        <trans-unit id="4158750ed1844d81234e02100fb4f6a0ce246137" translate="yes" xml:space="preserve">
          <source>Values to find the next representable value of.</source>
          <target state="translated">次の表現可能な値を見つけるための値。</target>
        </trans-unit>
        <trans-unit id="beb9a9be5bcba10dec2aa7359c7898f16a9d7ca8" translate="yes" xml:space="preserve">
          <source>Values to find the spacing of.</source>
          <target state="translated">の間隔を見つけるための値。</target>
        </trans-unit>
        <trans-unit id="3b61fff151ba4cdc5d10abd1dbdd04d94f432686" translate="yes" xml:space="preserve">
          <source>Values to insert into &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">値がに挿入します。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="19b54e21994fdcbd2ab01d7104b74c970245cfe1" translate="yes" xml:space="preserve">
          <source>Values to insert into &lt;code&gt;arr&lt;/code&gt;. If the type of &lt;code&gt;values&lt;/code&gt; is different from that of &lt;code&gt;arr&lt;/code&gt;, &lt;code&gt;values&lt;/code&gt; is converted to the type of &lt;code&gt;arr&lt;/code&gt;. &lt;code&gt;values&lt;/code&gt; should be shaped so that &lt;code&gt;arr[...,obj,...] = values&lt;/code&gt; is legal.</source>
          <target state="translated">&lt;code&gt;arr&lt;/code&gt; に挿入する値。タイプ場合 &lt;code&gt;values&lt;/code&gt; と異なる &lt;code&gt;arr&lt;/code&gt; 、 &lt;code&gt;values&lt;/code&gt; の型に変換され &lt;code&gt;arr&lt;/code&gt; 。 &lt;code&gt;values&lt;/code&gt; は、 &lt;code&gt;arr[...,obj,...] = values&lt;/code&gt; が正当となるように整形する必要があります。</target>
        </trans-unit>
        <trans-unit id="817bf23706b268004f4bf56ee98317c1ad7d150d" translate="yes" xml:space="preserve">
          <source>Values to place in &lt;code&gt;a&lt;/code&gt; at target indices. If &lt;code&gt;v&lt;/code&gt; is shorter than &lt;code&gt;ind&lt;/code&gt; it will be repeated as necessary.</source>
          <target state="translated">値がに配置し、目標指標で。 &lt;code&gt;v&lt;/code&gt; が &lt;code&gt;ind&lt;/code&gt; より短い場合、必要に応じて繰り返されます。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a9be9f0fa346eb48800661efe4c9cdccf0a4d68a" translate="yes" xml:space="preserve">
          <source>Values to place in self._data copy at target indices.</source>
          <target state="translated">self._dataのコピーにターゲットのインデックスに配置する値。</target>
        </trans-unit>
        <trans-unit id="81f73f98efd45554f2765f8a372cd020b7023051" translate="yes" xml:space="preserve">
          <source>Values to prepend or append to &amp;ldquo;a&amp;rdquo; along axis prior to performing the difference. Scalar values are expanded to arrays with length 1 in the direction of axis and the shape of the input array in along all other axes. Otherwise the dimension and shape must match &amp;ldquo;a&amp;rdquo; except along axis.</source>
          <target state="translated">差分を実行する前に、軸に沿って「a」に追加または付加する値。スカラー値は、軸方向に長さが1の配列に拡張され、他のすべての軸に沿って入力配列の形状が拡張されます。それ以外の場合は、軸に沿った場合を除いて、寸法と形状が「a」と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="462c5daaa1bebf27712ab1f9e6dff7991b7d4f2b" translate="yes" xml:space="preserve">
          <source>Values to put into &lt;code&gt;a&lt;/code&gt; where &lt;code&gt;mask&lt;/code&gt; is True. If &lt;code&gt;values&lt;/code&gt; is smaller than &lt;code&gt;a&lt;/code&gt; it will be repeated.</source>
          <target state="translated">入れるべき値 &lt;code&gt;a&lt;/code&gt; &lt;code&gt;mask&lt;/code&gt; 真です。 &lt;code&gt;values&lt;/code&gt; が &lt;code&gt;a&lt;/code&gt; より小さい場合は繰り返されます。</target>
        </trans-unit>
        <trans-unit id="25e7a819f368d39546137552cf420f108ade4ace" translate="yes" xml:space="preserve">
          <source>Values to put into &lt;code&gt;a&lt;/code&gt;. Only the first N elements are used, where N is the number of True values in &lt;code&gt;mask&lt;/code&gt;. If &lt;code&gt;vals&lt;/code&gt; is smaller than N, it will be repeated, and if elements of &lt;code&gt;a&lt;/code&gt; are to be masked, this sequence must be non-empty.</source>
          <target state="translated">入れて値 &lt;code&gt;a&lt;/code&gt; 。最初のN個の要素のみが使用されます。Nは &lt;code&gt;mask&lt;/code&gt; のTrue値の数です。場合 &lt;code&gt;vals&lt;/code&gt; Nよりも小さい場合、それが繰り返されることになる、との構成要素場合はマスクするかを、この配列は、非空である必要があります。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="60bd6b681e5d46e176fd602e7f740408a4b90a97" translate="yes" xml:space="preserve">
          <source>Vandermonde matrix for powers.</source>
          <target state="translated">力のためのヴァンデルモンデ行列。</target>
        </trans-unit>
        <trans-unit id="6401e380553d40526975bfbedfb18608ca5c00ad" translate="yes" xml:space="preserve">
          <source>Vandermonde matrix of Chebyshev series.</source>
          <target state="translated">チェビシェフ級数のヴァンダーモンド行列。</target>
        </trans-unit>
        <trans-unit id="ae6e82d94a52ea695163be06dc24993156d990a5" translate="yes" xml:space="preserve">
          <source>Vandermonde matrix of Hermite series.</source>
          <target state="translated">Hermiteシリーズのヴァンダーモンド行列。</target>
        </trans-unit>
        <trans-unit id="a2d6130252c264087c83a0456898053f5cce8c9b" translate="yes" xml:space="preserve">
          <source>Vandermonde matrix of Legendre series.</source>
          <target state="translated">ヴァンダーモンデの行列やレジェンドールシリーズ。</target>
        </trans-unit>
        <trans-unit id="5d2bf93649140d94c435a78c84579d541c1303f5" translate="yes" xml:space="preserve">
          <source>Vandermonde matrix of given degree.</source>
          <target state="translated">与えられた次数のヴァンダーモンデ行列。</target>
        </trans-unit>
        <trans-unit id="315c420145ba2a2de3ef508e657b666b667d7db9" translate="yes" xml:space="preserve">
          <source>Vandermonde matrix. If &lt;code&gt;increasing&lt;/code&gt; is False, the first column is &lt;code&gt;x^(N-1)&lt;/code&gt;, the second &lt;code&gt;x^(N-2)&lt;/code&gt; and so forth. If &lt;code&gt;increasing&lt;/code&gt; is True, the columns are &lt;code&gt;x^0, x^1, ..., x^(N-1)&lt;/code&gt;.</source>
          <target state="translated">ヴァンダーモンド行列。場合 &lt;code&gt;increasing&lt;/code&gt; Falseで、最初の列は、 &lt;code&gt;x^(N-1)&lt;/code&gt; 、第 &lt;code&gt;x^(N-2)&lt;/code&gt; 等が挙げられます。場合は &lt;code&gt;increasing&lt;/code&gt; Trueで、カラムがある &lt;code&gt;x^0, x^1, ..., x^(N-1)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ef7476851367ab64af3bc4c81c52e5e1e6857c25" translate="yes" xml:space="preserve">
          <source>Variables in Numpy which control and describe alignment</source>
          <target state="translated">アラインメントを制御・記述するNumpyの変数</target>
        </trans-unit>
        <trans-unit id="2a1f6fba473be39ef3c80a51eed0db143c77f764" translate="yes" xml:space="preserve">
          <source>Variance while not ignoring NaNs</source>
          <target state="translated">NaNを無視した場合の分散</target>
        </trans-unit>
        <trans-unit id="407b9055a29b3862ad6596884f933fb2e3b90801" translate="yes" xml:space="preserve">
          <source>Various windows</source>
          <target state="translated">様々な窓</target>
        </trans-unit>
        <trans-unit id="690a0d6330a132cb4527e3e44d7a2347c9a06b3a" translate="yes" xml:space="preserve">
          <source>Vector cross product(s).</source>
          <target state="translated">ベクトルクロス積(複数可)。</target>
        </trans-unit>
        <trans-unit id="28cb052426ac62f08e613cbe9ac7789542c3593f" translate="yes" xml:space="preserve">
          <source>Vector cross-product.</source>
          <target state="translated">ベクトル交差生成物。</target>
        </trans-unit>
        <trans-unit id="0fe94b620577959abe98d342c3396c44b95bc9ac" translate="yes" xml:space="preserve">
          <source>Vector inner and outer products, &lt;a href=&quot;numpy.inner#numpy.inner&quot;&gt;&lt;code&gt;numpy.inner&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;numpy.outer#numpy.outer&quot;&gt;&lt;code&gt;numpy.outer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ベクターの内積と外積&lt;a href=&quot;numpy.inner#numpy.inner&quot;&gt; &lt;code&gt;numpy.inner&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;numpy.outer#numpy.outer&quot;&gt; &lt;code&gt;numpy.outer&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fc155524d5d2ad1522cc08f2291c52dc38dcecf1" translate="yes" xml:space="preserve">
          <source>Vector inner products:</source>
          <target state="translated">ベクトルの内側の製品。</target>
        </trans-unit>
        <trans-unit id="7b8a7176d65340f9da0fa7937d046de8633e6685" translate="yes" xml:space="preserve">
          <source>Vector outer product:</source>
          <target state="translated">ベクトル外積。</target>
        </trans-unit>
        <trans-unit id="acae4c791d04e4455a560ff6e41306cbb57dcf51" translate="yes" xml:space="preserve">
          <source>Vector(s) with the singular values, within each vector sorted in descending order. The first &lt;code&gt;a.ndim - 2&lt;/code&gt; dimensions have the same size as those of the input &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">降順でソートされた各ベクトル内の特異値を含むベクトル。最初の &lt;code&gt;a.ndim - 2&lt;/code&gt; 次元は、入力 &lt;code&gt;a&lt;/code&gt; と同じサイズです。</target>
        </trans-unit>
        <trans-unit id="2a5acfbe842fd0541792480526462188b04dde53" translate="yes" xml:space="preserve">
          <source>Vector, vector returns the scalar inner product, but neither argument is complex-conjugated:</source>
          <target state="translated">Vector,vectorはスカラーの内積を返しますが、どちらの引数も複素共役化されていません。</target>
        </trans-unit>
        <trans-unit id="c6ec9d2e3c00c48eca40b4ca66a3c4d474b90630" translate="yes" xml:space="preserve">
          <source>Vectorized function.</source>
          <target state="translated">ベクトル化された関数。</target>
        </trans-unit>
        <trans-unit id="7bfe5238ce1d36e9bfcb089f4f57728d117a113e" translate="yes" xml:space="preserve">
          <source>Verify the mean and the variance:</source>
          <target state="translated">平均と分散を検証します。</target>
        </trans-unit>
        <trans-unit id="01e4cae31c98991a3d53edad9d5a04ca08ed4f3b" translate="yes" xml:space="preserve">
          <source>Version numbering</source>
          <target state="translated">バージョン・ナンバリング</target>
        </trans-unit>
        <trans-unit id="51eea7cbb443c92981917f3f8bfdb384f15a6153" translate="yes" xml:space="preserve">
          <source>Version of this function that preserves the shape of ar1.</source>
          <target state="translated">ar1の形状を保持するこの関数のバージョン.</target>
        </trans-unit>
        <trans-unit id="224aeb6086ba7022d83156756ac873c6ff737642" translate="yes" xml:space="preserve">
          <source>Versus a regular NumPy array of type &lt;a href=&quot;https://docs.python.org/dev/library/stdtypes.html#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;unicode&lt;/code&gt;, this class adds the following functionality:</source>
          <target state="translated">タイプ&lt;a href=&quot;https://docs.python.org/dev/library/stdtypes.html#str&quot;&gt; &lt;code&gt;str&lt;/code&gt; &lt;/a&gt;または &lt;code&gt;unicode&lt;/code&gt; の通常のNumPy配列と比較して、このクラスは次の機能を追加します。</target>
        </trans-unit>
        <trans-unit id="a21f850c092874207e85425f1992b2d1d4a0daef" translate="yes" xml:space="preserve">
          <source>Versus a regular NumPy array of type &lt;code&gt;str&lt;/code&gt; or &lt;code&gt;unicode&lt;/code&gt;, this class adds the following functionality:</source>
          <target state="translated">タイプ &lt;code&gt;str&lt;/code&gt; または &lt;code&gt;unicode&lt;/code&gt; の通常のNumPy配列と比較して、このクラスは次の機能を追加します。</target>
        </trans-unit>
        <trans-unit id="ba00ebd75f3175e23b4f09615b45ef3560ac5818" translate="yes" xml:space="preserve">
          <source>View based and advanced indexing is mixed. In this case the view based indexing defines a collection of subarrays that are combined by the advanced indexing. For example, &lt;code&gt;arr[[1, 2, 3], :]&lt;/code&gt; is created by vertically stacking the subarrays &lt;code&gt;arr[1, :]&lt;/code&gt;, &lt;code&gt;arr[2,:]&lt;/code&gt;, and &lt;code&gt;arr[3, :]&lt;/code&gt;.</source>
          <target state="translated">ビューベースのインデックスと高度なインデックスが混在しています。この場合、ビューベースのインデックスは、高度なインデックスによって結合されるサブ配列のコレクションを定義します。たとえば、 &lt;code&gt;arr[[1, 2, 3], :]&lt;/code&gt; &lt;code&gt;arr[2,:]&lt;/code&gt; は、サブアレイ &lt;code&gt;arr[1, :]&lt;/code&gt; 、arr [2 ,:]、および &lt;code&gt;arr[3, :]&lt;/code&gt; 、：]を垂直に積み重ねることによって作成されます。</target>
        </trans-unit>
        <trans-unit id="b2ca30abe686b95f053f55957fa5266ab07dca0a" translate="yes" xml:space="preserve">
          <source>View inputs as arrays with at least three dimensions.</source>
          <target state="translated">入力を少なくとも3次元の配列として表示します。</target>
        </trans-unit>
        <trans-unit id="45fb889525ea027b940786067638d779d675de17" translate="yes" xml:space="preserve">
          <source>View inputs as arrays with at least two dimensions.</source>
          <target state="translated">入力を少なくとも2次元の配列として表示します。</target>
        </trans-unit>
        <trans-unit id="6e4fbf98b4a2f11308bf6ec449635485ea8cdb89" translate="yes" xml:space="preserve">
          <source>View of &lt;code&gt;a&lt;/code&gt; with the number of dimensions increased by one.</source>
          <target state="translated">次元数が1増加した &lt;code&gt;a&lt;/code&gt; のビュー。</target>
        </trans-unit>
        <trans-unit id="cbf2e6fd5608dfcde8e1d428501030442d53386c" translate="yes" xml:space="preserve">
          <source>View of &lt;code&gt;a&lt;/code&gt;, with axes suitably permuted.</source>
          <target state="translated">軸を適切に並べ替え &lt;code&gt;a&lt;/code&gt; ビュー。</target>
        </trans-unit>
        <trans-unit id="690413363bd8aafde5497bc7e1d13a4d8e5f2372" translate="yes" xml:space="preserve">
          <source>View the array as a record array:</source>
          <target state="translated">配列をレコード配列として表示します。</target>
        </trans-unit>
        <trans-unit id="81d42abd80c44b454ac926e28ee7856a84a169a3" translate="yes" xml:space="preserve">
          <source>Viewing array data using a different type and dtype:</source>
          <target state="translated">配列データを別の型とdtypeで表示します。</target>
        </trans-unit>
        <trans-unit id="59879f373c87da4a2c95c0412230c3555cfc240e" translate="yes" xml:space="preserve">
          <source>Views returned from einsum are now writeable whenever the input array is writeable. For example, &lt;code&gt;np.einsum('ijk...-&amp;gt;kji...', a)&lt;/code&gt; will now have the same effect as &lt;a href=&quot;numpy.swapaxes#numpy.swapaxes&quot;&gt;&lt;code&gt;np.swapaxes(a, 0, 2)&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;np.einsum('ii-&amp;gt;i', a)&lt;/code&gt; will return a writeable view of the diagonal of a 2D array.</source>
          <target state="translated">einsumから返されたビューは、入力配列が書き込み可能であるときはいつでも書き込み可能になりました。たとえば、 &lt;code&gt;np.einsum('ijk...-&amp;gt;kji...', a)&lt;/code&gt; は&lt;a href=&quot;numpy.swapaxes#numpy.swapaxes&quot;&gt; &lt;code&gt;np.swapaxes(a, 0, 2)&lt;/code&gt; &lt;/a&gt;および &lt;code&gt;np.einsum('ii-&amp;gt;i', a)&lt;/code&gt; と同じ効果を持つようになります。、a）は、2D配列の対角線の書き込み可能なビューを返します。</target>
        </trans-unit>
        <trans-unit id="212733d972db48c77aaab9351402436eae4fd2ff" translate="yes" xml:space="preserve">
          <source>Views share data:</source>
          <target state="translated">ビューはデータを共有します。</target>
        </trans-unit>
        <trans-unit id="c9d8f3fc365bae8c1e0312cb68b7341a485aec6e" translate="yes" xml:space="preserve">
          <source>Views that change the dtype size (bytes per entry) should normally be avoided on arrays defined by slices, transposes, fortran-ordering, etc.:</source>
          <target state="translated">dtypeのサイズ(エントリあたりのバイト数)を変更するビューは,スライス,トランスポーズ,フォルトラン順序付けなどで定義された配列では,通常は避けた方がよいでしょう.</target>
        </trans-unit>
        <trans-unit id="e2415cb7f63df0c9de23362326ad3c37a9adfc96" translate="yes" xml:space="preserve">
          <source>W</source>
          <target state="translated">W</target>
        </trans-unit>
        <trans-unit id="3cd2f9e2b1f25c2f5e7b93f7ce911077d7d964a4" translate="yes" xml:space="preserve">
          <source>W. H. Press, S. A. Teukolsky, W. T. Vetterling and B. P. Flannery, &amp;ldquo;Numerical Recipes (3rd edition)&amp;rdquo;, Cambridge University Press, 2007, page 795.</source>
          <target state="translated">WH Press、SA Teukolsky、WT Vetterling、およびBP Flannery、「Numerical Recipes（3rd edition）」、Cambridge University Press、2007年、795ページ。</target>
        </trans-unit>
        <trans-unit id="e9c669c28770b602c0d3307e40af975f3d6ab286" translate="yes" xml:space="preserve">
          <source>W.H. Press, B.P. Flannery, S.A. Teukolsky, and W.T. Vetterling, &amp;ldquo;Numerical Recipes&amp;rdquo;, Cambridge University Press, 1986, page 425.</source>
          <target state="translated">WH Press、BP Flannery、SA Teukolsky、およびWT Vetterling、「Numerical Recipes」、Cambridge University Press、1986年、425ページ。</target>
        </trans-unit>
        <trans-unit id="dbd0b2fdf754a4d650097a931842e3ce01d68c23" translate="yes" xml:space="preserve">
          <source>W.H. Press, B.P. Flannery, S.A. Teukolsky, and W.T. Vetterling, &amp;ldquo;Numerical Recipes&amp;rdquo;, Cambridge University Press, 1986, page 429.</source>
          <target state="translated">WH Press、BP Flannery、SA Teukolsky、およびWT Vetterling、「Numerical Recipes」、Cambridge University Press、1986年、429ページ。</target>
        </trans-unit>
        <trans-unit id="4d8b44b86ac9762795ccf1eb37bf4871143a380a" translate="yes" xml:space="preserve">
          <source>WRITEABLE (W) the data area can be written to;</source>
          <target state="translated">WRITEABLE (W)データ領域に書き込むことができます。</target>
        </trans-unit>
        <trans-unit id="a6dcab075be566e2b98d550a936f8cae5ce9422f" translate="yes" xml:space="preserve">
          <source>WRITEABLE / W</source>
          <target state="translated">ライタブル/W</target>
        </trans-unit>
        <trans-unit id="73fb58e7589a9ff67f327a9e1cfb0abcae369bb5" translate="yes" xml:space="preserve">
          <source>WRITEABLE can only be set &lt;code&gt;True&lt;/code&gt; if the array owns its own memory or the ultimate owner of the memory exposes a writeable buffer interface or is a string.</source>
          <target state="translated">配列が独自のメモリを所有している場合、またはメモリの最終的な所有者が書き込み可能なバッファインターフェイスを公開している場合、または文字列である場合にのみ、WRITEABLEを &lt;code&gt;True&lt;/code&gt; に設定できます。</target>
        </trans-unit>
        <trans-unit id="5ca2fe3e818dba5a5804a5bb3a831dd89c500d7a" translate="yes" xml:space="preserve">
          <source>WRITEBACKIFCOPY (X) this array is a copy of some other array (referenced by .base). When the C-API function PyArray_ResolveWritebackIfCopy is called, the base array will be updated with the contents of this array.</source>
          <target state="translated">WRITEBACKIFCOPY (X)この配列は他の配列(.baseで参照される)のコピーです。C-API 関数 PyArray_ResolveWritebackIfCopy が呼び出されると、ベース配列はこの配列の内容で更新されます。</target>
        </trans-unit>
        <trans-unit id="3b243b9b37eb143e3a1ec8091e9c80e424b7cb17" translate="yes" xml:space="preserve">
          <source>WRITEBACKIFCOPY / X</source>
          <target state="translated">WRITEBACKIFCOPY/X</target>
        </trans-unit>
        <trans-unit id="09fcb82609179c1f7885c137f520c527fdcb1905" translate="yes" xml:space="preserve">
          <source>WRITEBACKIFCOPY can only be set &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">WRITEBACKIFCOPYは &lt;code&gt;False&lt;/code&gt; にのみ設定できます。</target>
        </trans-unit>
        <trans-unit id="6fd7081253d772e7a32e41421d2cdf6a9cabced2" translate="yes" xml:space="preserve">
          <source>Waloddi Weibull, &amp;ldquo;A Statistical Distribution Function of Wide Applicability&amp;rdquo;, Journal Of Applied Mechanics ASME Paper 1951.</source>
          <target state="translated">Waloddi Weibull、「幅広い適用性の統計的分布関数」、Journal of Applied Mechanics ASME Paper 1951。</target>
        </trans-unit>
        <trans-unit id="db8ff1d3b42b8d1fe40e88e8148de81cccee175c" translate="yes" xml:space="preserve">
          <source>Waloddi Weibull, Royal Technical University, Stockholm, 1939 &amp;ldquo;A Statistical Theory Of The Strength Of Materials&amp;rdquo;, Ingeniorsvetenskapsakademiens Handlingar Nr 151, 1939, Generalstabens Litografiska Anstalts Forlag, Stockholm.</source>
          <target state="translated">Waloddi Weibull、王立工科大学、ストックホルム、1939年、「材料の強度の統計理論」、Ingeniorsvetenskapsakademiens Handlear Nr 151、1939年、Generalstabens Litografiska Anstalts Forlag、ストックホルム。</target>
        </trans-unit>
        <trans-unit id="e9c45563358e813f157ba81b33143542165ba84e" translate="yes" xml:space="preserve">
          <source>Warning</source>
          <target state="translated">Warning</target>
        </trans-unit>
        <trans-unit id="4754f4fe525f9c37d19fda1322550a0b26e13158" translate="yes" xml:space="preserve">
          <source>Warning class to filter</source>
          <target state="translated">フィルタリングする警告クラス</target>
        </trans-unit>
        <trans-unit id="f88a191846138392ad4758d4ff77a36f017f6d00" translate="yes" xml:space="preserve">
          <source>Warning objects</source>
          <target state="translated">警告オブジェクト</target>
        </trans-unit>
        <trans-unit id="37361059464af82221d16eb1a2018e9694f9cd57" translate="yes" xml:space="preserve">
          <source>Warning: This attribute exists specifically for &lt;code&gt;__array_interface__&lt;/code&gt;, and is not a datatype description compatible with &lt;code&gt;np.dtype&lt;/code&gt;.</source>
          <target state="translated">警告：この属性は、専用に存在 &lt;code&gt;__array_interface__&lt;/code&gt; 、と互換性データ型説明ない &lt;code&gt;np.dtype&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="67f63aaa6eb093a2b8631aeb7aa1f1f56dd3fc86" translate="yes" xml:space="preserve">
          <source>Warning: This functionality does &lt;strong&gt;not&lt;/strong&gt; consider axes separately, i.e. it does not apply interpolation/extrapolation. It fills the return array with the required number of elements, taken from &lt;code&gt;a&lt;/code&gt; as they are laid out in memory, disregarding strides and axes. (This is in case the new shape is smaller. For larger, see above.) This functionality is therefore not suitable to resize images, or data where each axis represents a separate and distinct entity.</source>
          <target state="translated">警告：この機能はない&lt;strong&gt;ではない&lt;/strong&gt;個別の軸を考え、すなわちそれは、補間/外挿は適用されません。ストライドと軸を無視して、メモリに配置された &lt;code&gt;a&lt;/code&gt; から取得した必要な数の要素で戻り配列を埋めます。 （これは、新しい形状が小さい場合に当てはまります。大きい場合は、上記を参照してください。）したがって、この機能は、画像や各軸が個別のエンティティを表すデータのサイズを変更するのには適していません。</target>
        </trans-unit>
        <trans-unit id="1430f976c596795274458abcfbc4f280cbfcebac" translate="yes" xml:space="preserve">
          <source>Warnings</source>
          <target state="translated">Warnings</target>
        </trans-unit>
        <trans-unit id="6fcbb55cbf3a317fd9e559a46404d4ffc0901e5d" translate="yes" xml:space="preserve">
          <source>Warns:</source>
          <target state="translated">Warns:</target>
        </trans-unit>
        <trans-unit id="2877e71e929aa29b0e79a512d385261189d70371" translate="yes" xml:space="preserve">
          <source>Wave heights tend to follow a Rayleigh distribution. If the mean wave height is 1 meter, what fraction of waves are likely to be larger than 3 meters?</source>
          <target state="translated">波高はレイリー分布に従う傾向がある。平均波高が1mだとすると、3mよりも大きい波の割合はどのくらいでしょうか?</target>
        </trans-unit>
        <trans-unit id="d199611fe572f9a604421aeb87fed868192644af" translate="yes" xml:space="preserve">
          <source>We can begin with a chain dot example. In this case, it is optimal to contract the &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt; tensors first as represented by the first element of the path &lt;code&gt;(1, 2)&lt;/code&gt;. The resulting tensor is added to the end of the contraction and the remaining contraction &lt;code&gt;(0, 1)&lt;/code&gt; is then completed.</source>
          <target state="translated">チェーンドットの例から始めることができます。この場合、パス &lt;code&gt;(1, 2)&lt;/code&gt; の最初の要素で表されるように、最初に &lt;code&gt;b&lt;/code&gt; および &lt;code&gt;c&lt;/code&gt; テンソルを縮小するのが最適です。結果のテンソルが収縮の最後に追加され、残りの収縮 &lt;code&gt;(0, 1)&lt;/code&gt; が完了します。</target>
        </trans-unit>
        <trans-unit id="66a6a3c1aa8ab5615ae93578f83c6c2bc137c427" translate="yes" xml:space="preserve">
          <source>We can now compute the mean of the dataset, without taking the invalid data into account:</source>
          <target state="translated">無効なデータを考慮に入れずに、データセットの平均を計算できるようになりました。</target>
        </trans-unit>
        <trans-unit id="07dfd0de116a4118d2e8d7ab1e0ba4c4055ce110" translate="yes" xml:space="preserve">
          <source>We can replace the maximum values with:</source>
          <target state="translated">最大値に置き換えることができます。</target>
        </trans-unit>
        <trans-unit id="e6a512625d0cb7e17ddcfbaaf190c6f0c94959ed" translate="yes" xml:space="preserve">
          <source>We can reset the function to the default:</source>
          <target state="translated">機能をデフォルトに戻すことができます。</target>
        </trans-unit>
        <trans-unit id="b52b8758d686451191a4e1193e567d392d717d53" translate="yes" xml:space="preserve">
          <source>We can rewrite the line equation as &lt;code&gt;y = Ap&lt;/code&gt;, where &lt;code&gt;A = [[x 1]]&lt;/code&gt; and &lt;code&gt;p = [[m], [c]]&lt;/code&gt;. Now use &lt;a href=&quot;#numpy.linalg.lstsq&quot;&gt;&lt;code&gt;lstsq&lt;/code&gt;&lt;/a&gt; to solve for &lt;code&gt;p&lt;/code&gt;:</source>
          <target state="translated">行の方程式を &lt;code&gt;y = Ap&lt;/code&gt; として書き直すことができます。ここで、 &lt;code&gt;A = [[x 1]]&lt;/code&gt; および &lt;code&gt;p = [[m], [c]]&lt;/code&gt; です。ここで&lt;a href=&quot;#numpy.linalg.lstsq&quot;&gt; &lt;code&gt;lstsq&lt;/code&gt; &lt;/a&gt;を使用して &lt;code&gt;p&lt;/code&gt; を解きます：</target>
        </trans-unit>
        <trans-unit id="bcf794d24d8964269b87153ebb1affba96ff631d" translate="yes" xml:space="preserve">
          <source>We can sort either by using sort directly, or argsort and this function</source>
          <target state="translated">ソートを直接使用するか、argsort とこの関数を使用してソートすることができます。</target>
        </trans-unit>
        <trans-unit id="23502bd41157dbb482cc4d93fe154b6f35759b68" translate="yes" xml:space="preserve">
          <source>We can verify this, approximating the derivative with &lt;code&gt;(f(x + h) - f(x))/h&lt;/code&gt;:</source>
          <target state="translated">これを検証し、 &lt;code&gt;(f(x + h) - f(x))/h&lt;/code&gt; 導関数を近似します。</target>
        </trans-unit>
        <trans-unit id="1edbc1babc558648a370766b66d6bf09ff4d2327" translate="yes" xml:space="preserve">
          <source>We chose our default threshold because it is in wide use. Other thresholds are possible. For example, elsewhere in the 2007 edition of &lt;em&gt;Numerical recipes&lt;/em&gt; there is an alternative threshold of &lt;code&gt;S.max() *
np.finfo(M.dtype).eps / 2. * np.sqrt(m + n + 1.)&lt;/code&gt;. The authors describe this threshold as being based on &amp;ldquo;expected roundoff error&amp;rdquo; (p 71).</source>
          <target state="translated">広く使用されているため、デフォルトのしきい値を選択しました。他のしきい値も可能です。たとえば、&lt;em&gt;数値レシピの&lt;/em&gt; 2007年版の他の場所には、 &lt;code&gt;S.max() * np.finfo(M.dtype).eps / 2. * np.sqrt(m + n + 1.)&lt;/code&gt; 代替しきい値があります。* np.sqrt（m + n + 1.）。著者は、このしきい値を「予想される丸め誤差」（p 71）に基づいていると説明しています。</target>
        </trans-unit>
        <trans-unit id="d8ba993fff071da05f22748cefa6f6b8ad24e53b" translate="yes" xml:space="preserve">
          <source>We could have implemented:</source>
          <target state="translated">実装できたのに</target>
        </trans-unit>
        <trans-unit id="59bec2d1c76c534a2fc4afd9318e87ce91e937b9" translate="yes" xml:space="preserve">
          <source>We default to using a 128-bit integer using entropy gathered from the OS. This is a good amount of entropy to initialize all of the generators that we have in numpy. We do not recommend using small seeds below 32 bits for general use. Using just a small set of seeds to instantiate larger state spaces means that there are some initial states that are impossible to reach. This creates some biases if everyone uses such values.</source>
          <target state="translated">デフォルトでは、OSから集めたエントロピーを使って128ビットの整数を使用しています。これは、numpyにあるすべてのジェネレータを初期化するのに十分なエントロピー量です。一般的な使用のために32ビット以下の小さなシードを使うことはお勧めしません。より大きな状態空間をインスタンス化するために小さなシードのセットを使うということは、到達できない初期状態が存在することを意味します。これは、すべての人がそのような値を使うと、いくつかのバイアスが発生します。</target>
        </trans-unit>
        <trans-unit id="6c39690106b67e736bf72e53ea7082db75a8ca14" translate="yes" xml:space="preserve">
          <source>We expect the arccos of 1 to be 0, and of -1 to be pi:</source>
          <target state="translated">1のアルコは0、-1のアルコはπと予想します。</target>
        </trans-unit>
        <trans-unit id="44f2a9cfd92075d83d3f564752917c6115d7836b" translate="yes" xml:space="preserve">
          <source>We expect the arctan of 0 to be 0, and of 1 to be pi/4:</source>
          <target state="translated">0のアルクタンを0、1のアルクタンをπ/4と予想しています。</target>
        </trans-unit>
        <trans-unit id="60136b35f0997a97a43dcb76040b0f18f3536c81" translate="yes" xml:space="preserve">
          <source>We have 10 degrees of freedom, so is the sample mean within 95% of the recommended value?</source>
          <target state="translated">10自由度があるので、標本平均は推奨値の95%以内に収まっていますか?</target>
        </trans-unit>
        <trans-unit id="3e23f0ad561893af23edd41efd72f4bd368c5b95" translate="yes" xml:space="preserve">
          <source>We intend to re-implement numpy functions as (generalized) Ufunc, in which case it will become possible for them to be overridden by the &lt;code&gt;__array_ufunc__&lt;/code&gt; method. A prime candidate is &lt;a href=&quot;generated/numpy.matmul#numpy.matmul&quot;&gt;&lt;code&gt;matmul&lt;/code&gt;&lt;/a&gt;, which currently is not a Ufunc, but could be relatively easily be rewritten as a (set of) generalized Ufuncs. The same may happen with functions such as &lt;a href=&quot;generated/numpy.median#numpy.median&quot;&gt;&lt;code&gt;median&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;min&lt;/code&gt;, and &lt;a href=&quot;generated/numpy.argsort#numpy.argsort&quot;&gt;&lt;code&gt;argsort&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">numpy関数を（一般化された）Ufuncとして再実装する予定です。その場合、 &lt;code&gt;__array_ufunc__&lt;/code&gt; メソッドによってそれらをオーバーライドすることが可能になります。主要な候補は&lt;a href=&quot;generated/numpy.matmul#numpy.matmul&quot;&gt; &lt;code&gt;matmul&lt;/code&gt; です&lt;/a&gt;。これは現在Ufuncではありませんが、比較的簡単に（一般化された）Ufuncのセットとして書き直すことができます。&lt;a href=&quot;generated/numpy.median#numpy.median&quot;&gt; &lt;code&gt;median&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;min&lt;/code&gt; 、&lt;a href=&quot;generated/numpy.argsort#numpy.argsort&quot;&gt; &lt;code&gt;argsort&lt;/code&gt; &lt;/a&gt;などの関数でも同じことが起こります。</target>
        </trans-unit>
        <trans-unit id="b3cf3455d01dd7db3c5c070359dd30cf5e39de43" translate="yes" xml:space="preserve">
          <source>We need to stress that this behavior may not be systematic, that masked data may be affected by the operation in some cases and therefore users should not rely on this data remaining unchanged.</source>
          <target state="translated">この動作は系統的ではない可能性があること、マスクされたデータは場合によっては操作の影響を受ける可能性があること、したがって、ユーザーはこのデータが変化せずに残っていることに頼るべきではないことを強調する必要があります。</target>
        </trans-unit>
        <trans-unit id="58ff07099c06b392c411860c04ae360c63b97582" translate="yes" xml:space="preserve">
          <source>We only show a few blocks for clarity:</source>
          <target state="translated">わかりやすくするために、いくつかのブロックだけを表示しています。</target>
        </trans-unit>
        <trans-unit id="673c3f49f8ee0b4069fb17ea81837a33f48d70f3" translate="yes" xml:space="preserve">
          <source>We recommend using &lt;a href=&quot;numpy.isin#numpy.isin&quot;&gt;&lt;code&gt;isin&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#numpy.in1d&quot;&gt;&lt;code&gt;in1d&lt;/code&gt;&lt;/a&gt; for new code.</source>
          <target state="translated">新しいコードには、&lt;a href=&quot;#numpy.in1d&quot;&gt; &lt;code&gt;in1d&lt;/code&gt; &lt;/a&gt;ではなく&lt;a href=&quot;numpy.isin#numpy.isin&quot;&gt; &lt;code&gt;isin&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="7ca33c6b93a76db017c3cdc61675ace9bc2b416c" translate="yes" xml:space="preserve">
          <source>We recommend using the &lt;code&gt;.npy&lt;/code&gt; and &lt;code&gt;.npz&lt;/code&gt; extensions for files saved in this format. This is by no means a requirement; applications may wish to use these file formats but use an extension specific to the application. In the absence of an obvious alternative, however, we suggest using &lt;code&gt;.npy&lt;/code&gt; and &lt;code&gt;.npz&lt;/code&gt;.</source>
          <target state="translated">この形式で保存されたファイルには、拡張子 &lt;code&gt;.npy&lt;/code&gt; および &lt;code&gt;.npz&lt;/code&gt; を使用することをお勧めします。これは決して要件ではありません。アプリケーションはこれらのファイル形式を使用したいが、アプリケーションに固有の拡張子を使用する場合があります。ただし、明確な代替手段がない場合は、 &lt;code&gt;.npy&lt;/code&gt; および &lt;code&gt;.npz&lt;/code&gt; を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="33c0514953dd33becf83ed3bc37cb8f06826d505" translate="yes" xml:space="preserve">
          <source>We then define a new test case class for each supported data type with a short definition such as:</source>
          <target state="translated">次に、サポートされているデータ型ごとに新しいテストケースクラスを定義します。</target>
        </trans-unit>
        <trans-unit id="ad180c1380373588b422b6f9367e1dfa995335a7" translate="yes" xml:space="preserve">
          <source>We use the algorithm published by Clenshaw &lt;a href=&quot;#rfd38a370b188-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; and referenced by Abramowitz and Stegun &lt;a href=&quot;#rfd38a370b188-2&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt;, for which the function domain is partitioned into the two intervals [0,8] and (8,inf), and Chebyshev polynomial expansions are employed in each interval. Relative error on the domain [0,30] using IEEE arithmetic is documented &lt;a href=&quot;#rfd38a370b188-3&quot; id=&quot;id3&quot;&gt;[3]&lt;/a&gt; as having a peak of 5.8e-16 with an rms of 1.4e-16 (n = 30000).</source>
          <target state="translated">Clenshaw &lt;a href=&quot;#rfd38a370b188-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;によって公開され、AbramowitzとStegun &lt;a href=&quot;#rfd38a370b188-2&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt;によって参照されているアルゴリズムを使用します。関数ドメインは2つの区間[0,8]と（8、inf）に分割され、チェビシェフ多項式展開では各間隔。IEEE演算を使用したドメイン[0,30]の相対誤差は、RMSが1.4e-16（n = 30000）でピークが5.8e-16であると文書化&lt;a href=&quot;#rfd38a370b188-3&quot; id=&quot;id3&quot;&gt;[3]さ&lt;/a&gt;れています。</target>
        </trans-unit>
        <trans-unit id="c9afbb264decb0b7e5bd769fa476b27d49621056" translate="yes" xml:space="preserve">
          <source>We will deal with the domain and window when we get to fitting, for the moment we ignore them and run through the basic algebraic and arithmetic operations.</source>
          <target state="translated">領域と窓については、フィッティングに入ってから扱いますが、当面はそれらを無視して、基本的な代数演算と算術演算を実行します。</target>
        </trans-unit>
        <trans-unit id="82a72786c4fe5d6bfb5f753a25b0cbc3ef629d6d" translate="yes" xml:space="preserve">
          <source>We wish to mark the fourth entry as invalid. The easiest is to create a masked array:</source>
          <target state="translated">4 番目のエントリを無効なものとしてマークしたいと思います。最も簡単なのは、マスクされた配列を作成することです。</target>
        </trans-unit>
        <trans-unit id="2678a6cb2f01328bc5e5792424e05e77b5265e7c" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ll do a simple outer product, placing the dimensions of the first operand before the dimensions of the second operand. The &lt;code&gt;op_axes&lt;/code&gt; parameter needs one list of axes for each operand, and provides a mapping from the iterator&amp;rsquo;s axes to the axes of the operand.</source>
          <target state="translated">最初のオペランドの次元を2番目のオペランドの次元の前に配置して、単純な外積を行います。 &lt;code&gt;op_axes&lt;/code&gt; のパラメータは、各オペランドのための軸の1つのリストを必要とし、オペランドの軸にイテレータの軸からのマッピングを提供します。</target>
        </trans-unit>
        <trans-unit id="ced2186a63444cfbd458cebaed4de6214b500394" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ll show how this works by creating a function &lt;a href=&quot;generated/numpy.square#numpy.square&quot;&gt;&lt;code&gt;square&lt;/code&gt;&lt;/a&gt; which squares its input. Let&amp;rsquo;s start with a minimal function definition excluding &amp;lsquo;out&amp;rsquo; parameter support.</source>
          <target state="translated">入力を二乗する関数&lt;a href=&quot;generated/numpy.square#numpy.square&quot;&gt; &lt;code&gt;square&lt;/code&gt; &lt;/a&gt;を作成することにより、これがどのように機能するかを示します。'out'パラメータのサポートを除いた最小限の関数定義から始めましょう。</target>
        </trans-unit>
        <trans-unit id="0d014927573cadb3b0b374c9809c25adaa8d709f" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve seen that 13 is represented by &lt;code&gt;00001101&lt;/code&gt;. The invert or bit-wise NOT of 13 is then:</source>
          <target state="translated">13は &lt;code&gt;00001101&lt;/code&gt; で表されることがわかりました。13の反転またはビット単位のNOTは次のようになります。</target>
        </trans-unit>
        <trans-unit id="9f5117721c82b02552e432ea3720cde40d7059ad" translate="yes" xml:space="preserve">
          <source>Weight function of the Hermite polynomials.</source>
          <target state="translated">エルミート多項式の重み関数。</target>
        </trans-unit>
        <trans-unit id="95800a204e1bbd4903f4870d8343853257206077" translate="yes" xml:space="preserve">
          <source>Weight function of the Hermite_e polynomials.</source>
          <target state="translated">Hermite_e多項式の重み関数。</target>
        </trans-unit>
        <trans-unit id="5f860b19432a865263496fdce430b1e33571bfe5" translate="yes" xml:space="preserve">
          <source>Weight function of the Laguerre polynomials.</source>
          <target state="translated">ラゲール多項式の重み関数。</target>
        </trans-unit>
        <trans-unit id="79be08f88c623301ce3bc873b7c9affda9625a90" translate="yes" xml:space="preserve">
          <source>Weight function of the Legendre polynomials.</source>
          <target state="translated">レジェンドレ多項式の重み関数。</target>
        </trans-unit>
        <trans-unit id="c74e4e7c5caf95682fb65872b5814741f06c7fac" translate="yes" xml:space="preserve">
          <source>Weighted average</source>
          <target state="translated">加重平均</target>
        </trans-unit>
        <trans-unit id="d8f6b85e664320ad22c47352d13059c9a94e57ff" translate="yes" xml:space="preserve">
          <source>Weighted average.</source>
          <target state="translated">加重平均。</target>
        </trans-unit>
        <trans-unit id="50616113e0953b16858a840423f52798108ba636" translate="yes" xml:space="preserve">
          <source>Weights to apply to the y-coordinates of the sample points. For gaussian uncertainties, use 1/sigma (not 1/sigma**2).</source>
          <target state="translated">サンプル点のy座標に適用される重み.ガウシアン不確かさの場合は,1/sigma(1/sigma**2ではなく)を使用する.</target>
        </trans-unit>
        <trans-unit id="5a7070233023bbad210855f921220f6a37969ec7" translate="yes" xml:space="preserve">
          <source>Weights, array of the same shape as &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">重み、 &lt;code&gt;x&lt;/code&gt; と同じ形状の配列。</target>
        </trans-unit>
        <trans-unit id="946476c654c11a5e92f8b55850bb98a1263ad96b" translate="yes" xml:space="preserve">
          <source>Weights. If not None the contribution of each point &lt;code&gt;(x[i],y[i])&lt;/code&gt; to the fit is weighted by &lt;code&gt;w[i]&lt;/code&gt;. Ideally the weights are chosen so that the errors of the products &lt;code&gt;w[i]*y[i]&lt;/code&gt; all have the same variance. The default value is None.</source>
          <target state="translated">重み。Noneでない場合、フィットへの各ポイント &lt;code&gt;(x[i],y[i])&lt;/code&gt; の寄与は &lt;code&gt;w[i]&lt;/code&gt; によって重み付けされます。理想的には、積 &lt;code&gt;w[i]*y[i]&lt;/code&gt; の誤差がすべて同じ分散を持つように重みが選択されます。デフォルト値はNoneです。</target>
        </trans-unit>
        <trans-unit id="1c25ee55e973a0ac3876804d2f28cc0929f53254" translate="yes" xml:space="preserve">
          <source>Weights. If not None, the contribution of each point &lt;code&gt;(x[i],y[i])&lt;/code&gt; to the fit is weighted by &lt;code&gt;w[i]&lt;/code&gt;. Ideally the weights are chosen so that the errors of the products &lt;code&gt;w[i]*y[i]&lt;/code&gt; all have the same variance. The default value is None.</source>
          <target state="translated">重み。Noneでない場合、フィットに対する各ポイント &lt;code&gt;(x[i],y[i])&lt;/code&gt; の寄与は &lt;code&gt;w[i]&lt;/code&gt; によって重み付けされます。理想的には、積 &lt;code&gt;w[i]*y[i]&lt;/code&gt; の誤差がすべて同じ分散を持つように重みが選択されます。デフォルト値はNoneです。</target>
        </trans-unit>
        <trans-unit id="890907bf4b6e9a3c2721945116f4521c292ba997" translate="yes" xml:space="preserve">
          <source>Weisstein, Eric W. &amp;ldquo;Binomial Distribution.&amp;rdquo; From MathWorld&amp;ndash;A Wolfram Web Resource. &lt;a href=&quot;http://mathworld.wolfram.com/BinomialDistribution.html&quot;&gt;http://mathworld.wolfram.com/BinomialDistribution.html&lt;/a&gt;</source>
          <target state="translated">Weisstein、Eric W.「二項分布」。MathWorldから&amp;ndash; Wolfram Webリソース。&lt;a href=&quot;http://mathworld.wolfram.com/BinomialDistribution.html&quot;&gt;http://mathworld.wolfram.com/BinomialDistribution.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="44532eacfd8a477fb8d811692e1a730faf373cda" translate="yes" xml:space="preserve">
          <source>Weisstein, Eric W. &amp;ldquo;Cauchy Distribution.&amp;rdquo; From MathWorld&amp;ndash;A Wolfram Web Resource. &lt;a href=&quot;http://mathworld.wolfram.com/CauchyDistribution.html&quot;&gt;http://mathworld.wolfram.com/CauchyDistribution.html&lt;/a&gt;</source>
          <target state="translated">Weisstein、Eric W.「コーシー分布」。MathWorldから&amp;ndash; Wolfram Webリソース。&lt;a href=&quot;http://mathworld.wolfram.com/CauchyDistribution.html&quot;&gt;http://mathworld.wolfram.com/CauchyDistribution.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ce6b4d0490f5c6c29f7bd660e93014a010601e88" translate="yes" xml:space="preserve">
          <source>Weisstein, Eric W. &amp;ldquo;Gamma Distribution.&amp;rdquo; From MathWorld&amp;ndash;A Wolfram Web Resource. &lt;a href=&quot;http://mathworld.wolfram.com/GammaDistribution.html&quot;&gt;http://mathworld.wolfram.com/GammaDistribution.html&lt;/a&gt;</source>
          <target state="translated">Weisstein、Eric W.「ガンマ分布」。MathWorldから&amp;ndash; Wolfram Webリソース。&lt;a href=&quot;http://mathworld.wolfram.com/GammaDistribution.html&quot;&gt;http://mathworld.wolfram.com/GammaDistribution.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="250b4512032938435df06c099254026086b0b46d" translate="yes" xml:space="preserve">
          <source>Weisstein, Eric W. &amp;ldquo;Hypergeometric Distribution.&amp;rdquo; From MathWorld&amp;ndash;A Wolfram Web Resource. &lt;a href=&quot;http://mathworld.wolfram.com/HypergeometricDistribution.html&quot;&gt;http://mathworld.wolfram.com/HypergeometricDistribution.html&lt;/a&gt;</source>
          <target state="translated">Weisstein、Eric W.「超幾何分布」。MathWorldから&amp;ndash; Wolfram Webリソース。&lt;a href=&quot;http://mathworld.wolfram.com/HypergeometricDistribution.html&quot;&gt;http://mathworld.wolfram.com/HypergeometricDistribution.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="403ee22c6c9f5dfb6128b5015952af83dc7fe1f5" translate="yes" xml:space="preserve">
          <source>Weisstein, Eric W. &amp;ldquo;Laplace Distribution.&amp;rdquo; From MathWorld&amp;ndash;A Wolfram Web Resource. &lt;a href=&quot;http://mathworld.wolfram.com/LaplaceDistribution.html&quot;&gt;http://mathworld.wolfram.com/LaplaceDistribution.html&lt;/a&gt;</source>
          <target state="translated">Weisstein、Eric W.「Laplace Distribution」。MathWorldから&amp;ndash; Wolfram Webリソース。&lt;a href=&quot;http://mathworld.wolfram.com/LaplaceDistribution.html&quot;&gt;http://mathworld.wolfram.com/LaplaceDistribution.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c85ee5175b40c6661962e1c4dcdc7232b8e5568a" translate="yes" xml:space="preserve">
          <source>Weisstein, Eric W. &amp;ldquo;Logistic Distribution.&amp;rdquo; From MathWorld&amp;ndash;A Wolfram Web Resource. &lt;a href=&quot;http://mathworld.wolfram.com/LogisticDistribution.html&quot;&gt;http://mathworld.wolfram.com/LogisticDistribution.html&lt;/a&gt;</source>
          <target state="translated">Weisstein、Eric W.「ロジスティック分布」MathWorldから&amp;ndash; Wolfram Webリソース。&lt;a href=&quot;http://mathworld.wolfram.com/LogisticDistribution.html&quot;&gt;http://mathworld.wolfram.com/LogisticDistribution.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d1938577c4f79d7fadb65a22f0b9b9cba0e6904e" translate="yes" xml:space="preserve">
          <source>Weisstein, Eric W. &amp;ldquo;Negative Binomial Distribution.&amp;rdquo; From MathWorld&amp;ndash;A Wolfram Web Resource. &lt;a href=&quot;http://mathworld.wolfram.com/NegativeBinomialDistribution.html&quot;&gt;http://mathworld.wolfram.com/NegativeBinomialDistribution.html&lt;/a&gt;</source>
          <target state="translated">Weisstein、Eric W.「負の二項分布」MathWorldから&amp;ndash; Wolfram Webリソース。&lt;a href=&quot;http://mathworld.wolfram.com/NegativeBinomialDistribution.html&quot;&gt;http://mathworld.wolfram.com/NegativeBinomialDistribution.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ed9cdcffdd5a34db501b8269560f163da34bcfda" translate="yes" xml:space="preserve">
          <source>Weisstein, Eric W. &amp;ldquo;Noncentral F-Distribution.&amp;rdquo; From MathWorld&amp;ndash;A Wolfram Web Resource. &lt;a href=&quot;http://mathworld.wolfram.com/NoncentralF-Distribution.html&quot;&gt;http://mathworld.wolfram.com/NoncentralF-Distribution.html&lt;/a&gt;</source>
          <target state="translated">Weisstein、Eric W.「非中心F分布」。MathWorldから&amp;ndash; Wolfram Webリソース。&lt;a href=&quot;http://mathworld.wolfram.com/NoncentralF-Distribution.html&quot;&gt;http://mathworld.wolfram.com/NoncentralF-Distribution.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6786c23a16b57cae22a2a2fe8c5eef583bfac0cc" translate="yes" xml:space="preserve">
          <source>Weisstein, Eric W. &amp;ldquo;Poisson Distribution.&amp;rdquo; From MathWorld&amp;ndash;A Wolfram Web Resource. &lt;a href=&quot;http://mathworld.wolfram.com/PoissonDistribution.html&quot;&gt;http://mathworld.wolfram.com/PoissonDistribution.html&lt;/a&gt;</source>
          <target state="translated">Weisstein、Eric W.「ポアソン分布」MathWorldから&amp;ndash; Wolfram Webリソース。&lt;a href=&quot;http://mathworld.wolfram.com/PoissonDistribution.html&quot;&gt;http://mathworld.wolfram.com/PoissonDistribution.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="87ff1415ce102e6420c0e0f61ef322d348a5f507" translate="yes" xml:space="preserve">
          <source>Weisstein, Eric W. &amp;ldquo;Sinc Function.&amp;rdquo; From MathWorld&amp;ndash;A Wolfram Web Resource. &lt;a href=&quot;http://mathworld.wolfram.com/SincFunction.html&quot;&gt;http://mathworld.wolfram.com/SincFunction.html&lt;/a&gt;</source>
          <target state="translated">Weisstein、Eric W.「シンク関数」。MathWorldから&amp;ndash; Wolfram Webリソース。&lt;a href=&quot;http://mathworld.wolfram.com/SincFunction.html&quot;&gt;http://mathworld.wolfram.com/SincFunction.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3fef717821661f9806ec19067704e1d37a6e1a47" translate="yes" xml:space="preserve">
          <source>What are the least-squares-best &lt;code&gt;m&lt;/code&gt; and &lt;code&gt;y0&lt;/code&gt; in &lt;code&gt;y = y0 + mx&lt;/code&gt; for the following data: {(0,1), (1,0), (1,2), (2,1)}. (Graph the points and you&amp;rsquo;ll see that it should be y0 = 0, m = 1.) The answer is provided by solving the over-determined matrix equation &lt;code&gt;Ax = b&lt;/code&gt;, where:</source>
          <target state="translated">次のデータの &lt;code&gt;y = y0 + mx&lt;/code&gt; 最小二乗最適 &lt;code&gt;m&lt;/code&gt; および &lt;code&gt;y0&lt;/code&gt; は何ですか：{（0,1）、（1,0）、（1,2）、（2,1）}。（点をグラフ化すると、y0 = 0、m = 1になるはずです。）解は、過剰決定された行列方程式 &lt;code&gt;Ax = b&lt;/code&gt; 解くことによって得られます。ここで、</target>
        </trans-unit>
        <trans-unit id="3e9b892da0c44e54a5a3d94ba212b74404ec1950" translate="yes" xml:space="preserve">
          <source>What can be converted to a data-type object is described below:</source>
          <target state="translated">データ型オブジェクトに変換できるものは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="7f1eadc1a60d1383bbd27a5874b7f7b346ec84b4" translate="yes" xml:space="preserve">
          <source>What encoding to use when reading Python 2 strings. Only useful when loading Python 2 generated pickled files in Python 3, which includes npy/npz files containing object arrays. Values other than &amp;lsquo;latin1&amp;rsquo;, &amp;lsquo;ASCII&amp;rsquo;, and &amp;lsquo;bytes&amp;rsquo; are not allowed, as they can corrupt numerical data. Default: &amp;lsquo;ASCII&amp;rsquo;</source>
          <target state="translated">Python 2文字列を読み取るときに使用するエンコーディング。オブジェクト配列を含むnpy / npzファイルを含む、Python 2で生成された漬物ファイルをPython 3にロードする場合にのみ役立ちます。「latin1」、「ASCII」、および「バイト」以外の値は、数値データを破壊する可能性があるため許可されません。デフォルト： 'ASCII'</target>
        </trans-unit>
        <trans-unit id="1e1fa581e9e916507b4446a529a092d8e86437db" translate="yes" xml:space="preserve">
          <source>What is a masked array?</source>
          <target state="translated">マスクされた配列とは何ですか?</target>
        </trans-unit>
        <trans-unit id="437c59796bebb67cae1bb453196d12e5dabd418f" translate="yes" xml:space="preserve">
          <source>What is compared are values, not types. So an int (1) and an array of length one can evaluate as True:</source>
          <target state="translated">比較されるのは値であって型ではありません。つまり、int (1)と長さ 1 の配列は True と評価できます。</target>
        </trans-unit>
        <trans-unit id="ed5c56f4637ad63b06ae7f91c4fda9c76b610d6b" translate="yes" xml:space="preserve">
          <source>What is tested is whether the input has a non-zero imaginary part, not if the input type is complex.</source>
          <target state="translated">テストされるのは、入力がゼロではない虚部を持つかどうかであって、入力タイプが複素数であるかどうかではありません。</target>
        </trans-unit>
        <trans-unit id="010a5d0834f679e03164332d6d50425424fc97f8" translate="yes" xml:space="preserve">
          <source>What is the amortization schedule for a 1 year loan of $2500 at 8.24% interest per year compounded monthly?</source>
          <target state="translated">2500 ドルの 1 年間のローンの償却スケジュールは何ですか?</target>
        </trans-unit>
        <trans-unit id="59aacf2a72313a7cde0de3da40cb764e30627fa7" translate="yes" xml:space="preserve">
          <source>What is the future value after 10 years of saving $100 now, with an additional monthly savings of $100. Assume the interest rate is 5% (annually) compounded monthly?</source>
          <target state="translated">今100ドルを貯金して、毎月100ドルを追加で貯めた場合の10年後の将来価値はいくらになるでしょうか。金利は5%(年率)で毎月複利だとしますか?</target>
        </trans-unit>
        <trans-unit id="68f86a620521000717f405763a7c2c87aeacd919" translate="yes" xml:space="preserve">
          <source>What is the monthly payment needed to pay off a $200,000 loan in 15 years at an annual interest rate of 7.5%?</source>
          <target state="translated">年利7.5%で20万ドルのローンを15年で完済するのに必要な月々の支払い額は?</target>
        </trans-unit>
        <trans-unit id="bd55b3638089456ad2fcd33f8ddb002a9ff2afef" translate="yes" xml:space="preserve">
          <source>What is the present value (e.g., the initial investment) of an investment that needs to total $15692.93 after 10 years of saving $100 every month? Assume the interest rate is 5% (annually) compounded monthly.</source>
          <target state="translated">毎月100ドルを貯金して10年後に合計15692.93ドルになる必要がある投資の現在価値(初期投資など)はどれくらいでしょうか?金利を5%(年1回)毎月複利で計算したとします。</target>
        </trans-unit>
        <trans-unit id="80bbcabaec75450b003887ef27bbf523c85b5a9f" translate="yes" xml:space="preserve">
          <source>What is the right way to index multi-dimensional arrays? Before you jump to conclusions about the one and true way to index multi-dimensional arrays, it pays to understand why this is a confusing issue. This section will try to explain in detail how numpy indexing works and why we adopt the convention we do for images, and when it may be appropriate to adopt other conventions.</source>
          <target state="translated">多次元配列をインデックス化する正しい方法とは?多次元配列のインデックスを作成する方法について結論を急ぐ前に、なぜこれが混乱を招く問題なのかを理解しておく必要があります。この節では、numpy のインデックス付けがどのように動作するのか、また、なぜ画像に対してこのような規則を採用しているのか、また、他の規則を採用することが適切な場合にはどのような場合があるのかを詳細に説明します。</target>
        </trans-unit>
        <trans-unit id="0bd771107f7afe976fc592b463f0e0c3505ed432" translate="yes" xml:space="preserve">
          <source>What&amp;rsquo;s New or Different</source>
          <target state="translated">新機能または相違点</target>
        </trans-unit>
        <trans-unit id="9f2949fbd884fd2e87977bc6442d7541c249e9bc" translate="yes" xml:space="preserve">
          <source>What’s New or Different</source>
          <target state="translated">何が新しいのか、それとも違うのか</target>
        </trans-unit>
        <trans-unit id="7c1df74199c25c42832661082d6ca6ac9e56b175" translate="yes" xml:space="preserve">
          <source>Wheeler, D. A., E. Rathke, and R. Weir (Eds.) (2009, May). Open Document Format for Office Applications (OpenDocument)v1.2, Part 2: Recalculated Formula (OpenFormula) Format - Annotated Version, Pre-Draft 12. Organization for the Advancement of Structured Information Standards (OASIS). Billerica, MA, USA. [ODT Document]. Available: &lt;a href=&quot;http://www.oasis-open.org/committees/documents.php&quot;&gt;http://www.oasis-open.org/committees/documents.php&lt;/a&gt; ?wg_abbrev=office-formulaOpenDocument-formula-20090508.odt</source>
          <target state="translated">Wheeler、DA、E。Rathke、およびR. Weir（編）（2009年5月）。 Officeアプリケーション用のオープンドキュメント形式（OpenDocument）v1.2、パート2：再計算された式（OpenFormula）形式-注釈付きバージョン、ドラフト前12。構造化情報標準（OASIS）の進歩のための組織。ビレリカ、マサチューセッツ、米国。 [ODTドキュメント]。利用可能：&lt;a href=&quot;http://www.oasis-open.org/committees/documents.php&quot;&gt;http&lt;/a&gt; : //www.oasis-open.org/committees/documents.php？wg_abbrev = office-formulaOpenDocument-formula-20090508.odt</target>
        </trans-unit>
        <trans-unit id="030c83d2119f52206dbf3733046b420a1749a0e1" translate="yes" xml:space="preserve">
          <source>Wheeler, D. A., E. Rathke, and R. Weir (Eds.) (2009, May). Open Document Format for Office Applications (OpenDocument)v1.2, Part 2: Recalculated Formula (OpenFormula) Format - Annotated Version, Pre-Draft 12. Organization for the Advancement of Structured Information Standards (OASIS). Billerica, MA, USA. [ODT Document]. Available: &lt;a href=&quot;http://www.oasis-open.org/committees/documents.php?wg_abbrev=office-formula&quot;&gt;http://www.oasis-open.org/committees/documents.php?wg_abbrev=office-formula&lt;/a&gt; OpenDocument-formula-20090508.odt</source>
          <target state="translated">Wheeler、DA、E。Rathke、およびR. Weir（編）（2009年5月）。Officeアプリケーション用のオープンドキュメント形式（OpenDocument）v1.2、パート2：再計算された式（OpenFormula）形式-注釈付きバージョン、ドラフト前12。構造化情報標準（OASIS）の進歩のための組織。ビレリカ、マサチューセッツ、米国。[ODTドキュメント]。利用可能：&lt;a href=&quot;http://www.oasis-open.org/committees/documents.php?wg_abbrev=office-formula&quot;&gt;http&lt;/a&gt; : //www.oasis-open.org/committees/documents.php? wg_abbrev=office-formula OpenDocument-formula-20090508.odt</target>
        </trans-unit>
        <trans-unit id="28b30ef805c7fb044e119b47e7ac08078b5b70cf" translate="yes" xml:space="preserve">
          <source>When &amp;lsquo;decimals&amp;rsquo; is negative, it specifies the number of positions to the left of the decimal point. The real and imaginary parts of complex numbers are rounded separately. Nothing is done if the array is not of float type and &amp;lsquo;decimals&amp;rsquo; is greater than or equal to 0.</source>
          <target state="translated">'decimals'が負の場合は、小数点の左側の桁数を指定します。複素数の実数部と虚数部は別々に丸められます。配列がfloat型ではなく、 'decimals'が0以上の場合、何も行われません。</target>
        </trans-unit>
        <trans-unit id="f209cff1399437b00b7cd0ee8730d177efc65293" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;#c.NPY_ITER_EXTERNAL_LOOP&quot;&gt;&lt;code&gt;NPY_ITER_EXTERNAL_LOOP&lt;/code&gt;&lt;/a&gt; is specified, the typical inner loop construct is as follows.</source>
          <target state="translated">場合&lt;a href=&quot;#c.NPY_ITER_EXTERNAL_LOOP&quot;&gt; &lt;code&gt;NPY_ITER_EXTERNAL_LOOP&lt;/code&gt; が&lt;/a&gt;指定され、以下のように、典型的なインナーループ構造です。</target>
        </trans-unit>
        <trans-unit id="e3bd2b595c2ff9c9cbf3b48defe560bc708bb864" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;#numpy.ma.MaskedArray.tofile&quot;&gt;&lt;code&gt;tofile&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="translated">&lt;a href=&quot;#numpy.ma.MaskedArray.tofile&quot;&gt; &lt;code&gt;tofile&lt;/code&gt; &lt;/a&gt;が呼び出されたとき。</target>
        </trans-unit>
        <trans-unit id="0d17005044d622bf07127624dd5d1775dbe22cd5" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; is not a valid dtype for a structured array.</source>
          <target state="translated">&lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;が構造化配列の有効なdtypeではない場合。</target>
        </trans-unit>
        <trans-unit id="105e60976ea8fbfb90203db8ab4a0a320369170d" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;A = rfft(a)&lt;/code&gt; and fs is the sampling frequency, &lt;code&gt;A[0]&lt;/code&gt; contains the zero-frequency term 0*fs, which is real due to Hermitian symmetry.</source>
          <target state="translated">場合 &lt;code&gt;A = rfft(a)&lt;/code&gt; とfsはサンプリング周波数であり、 &lt;code&gt;A[0]&lt;/code&gt; エルミート対称性に起因実数であり、ゼロ周波数項0 * FSを含んでいます。</target>
        </trans-unit>
        <trans-unit id="fb065328be54e2c3569cb5f58bbc8287bcb1fb7d" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;PyArray_ResolveWritebackIfCopy&lt;/code&gt; is called, the array pointed to by base will be updated with the contents of this array.</source>
          <target state="translated">とき &lt;code&gt;PyArray_ResolveWritebackIfCopy&lt;/code&gt; が呼ばれ、ベースによって指される配列は、この配列の内容で更新されます。</target>
        </trans-unit>
        <trans-unit id="6087c2287fac970fe48c994c66e9668908c28aae" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;a = 1&lt;/code&gt;, the Weibull distribution reduces to the exponential distribution.</source>
          <target state="translated">場合 &lt;code&gt;a = 1&lt;/code&gt; 、ワイブル分布は指数分布に帰着します。</target>
        </trans-unit>
        <trans-unit id="3234eec63d682a68b39f821bda537d5249018389" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;a&lt;/code&gt; is a 2D array, it is factorized as &lt;code&gt;u @ np.diag(s) @ vh
= (u * s) @ vh&lt;/code&gt;, where &lt;code&gt;u&lt;/code&gt; and &lt;code&gt;vh&lt;/code&gt; are 2D unitary arrays and &lt;code&gt;s&lt;/code&gt; is a 1D array of &lt;code&gt;a&lt;/code&gt;&amp;rsquo;s singular values. When &lt;code&gt;a&lt;/code&gt; is higher-dimensional, SVD is applied in stacked mode as explained below.</source>
          <target state="translated">場合2次元アレイである、それは次のように因数分解された &lt;code&gt;u @ np.diag(s) @ vh = (u * s) @ vh&lt;/code&gt; 、ここで &lt;code&gt;u&lt;/code&gt; および &lt;code&gt;vh&lt;/code&gt; 2D一体配列であり、 &lt;code&gt;s&lt;/code&gt; はの1Dアレイでの特異値。ときに、より高い次元で以下に説明するように、SVDを積層モードで適用されます。 &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="40bcbe29998f385e3a1059191be0f61338a8c763" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;a&lt;/code&gt; is a structured array, this argument specifies which fields to compare first, second, and so on. This list does not need to include all of the fields.</source>
          <target state="translated">構造アレイであり、この引数は、第一比較するフィールドを指定し、第二、など。このリストには、すべてのフィールドを含める必要はありません。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c171b92b4bddf9c8ebd2e75ee317f0b5fe3e94eb" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;a&lt;/code&gt; is an array with fields defined, this argument specifies which fields to compare first, second, etc. A single field can be specified as a string, and not all fields need be specified, but unspecified fields will still be used, in the order in which they come up in the dtype, to break ties.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; がフィールドが定義された配列の場合、この引数は最初に比較するフィールド、2番目に比較するフィールドなどを指定します。単一のフィールドを文字列として指定でき、すべてのフィールドを指定する必要はありませんが、未指定のフィールドは引き続き使用されます。関係を断つために、dtypeに現れる順序。</target>
        </trans-unit>
        <trans-unit id="78f75090c501ced3a2b9ede8c30345a037a7c202" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;a&lt;/code&gt; is an array with fields defined, this argument specifies which fields to compare first, second, etc. A single field can be specified as a string, and not all fields need to be specified, but unspecified fields will still be used, in the order in which they come up in the dtype, to break ties.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; がフィールドを定義した配列の場合、この引数は最初に比較するフィールド、2番目に比較するフィールドなどを指定します。単一のフィールドを文字列として指定できます。すべてのフィールドを指定する必要はありませんが、未指定のフィールドは引き続き使用されます。関係を断つために、dtypeに現れる順序。</target>
        </trans-unit>
        <trans-unit id="2cd3e98c67109375f859806b9beef061a4ef694a" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;a&lt;/code&gt; is an array with fields defined, this argument specifies which fields to compare first, second, etc. A single field can be specified as a string. Not all fields need be specified, but unspecified fields will still be used, in the order in which they come up in the dtype, to break ties.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; がフィールドが定義された配列の場合、この引数は最初に比較するフィールド、2番目に比較するフィールドなどを指定します。単一のフィールドを文字列として指定できます。すべてのフィールドを指定する必要はありませんが、未指定のフィールドは、dtypeに出現する順序で引き続き使用され、結合を解除します。</target>
        </trans-unit>
        <trans-unit id="b2ce72a40e12e2d7dda3e8c60930788493a39d27" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;a&lt;/code&gt; is an array with fields defined, this argument specifies which fields to compare first, second, etc. Not all fields need be specified.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; がフィールドが定義された配列の場合、この引数は最初に比較するフィールド、2番目に比較するフィールドなどを指定します。すべてのフィールドを指定する必要はありません。</target>
        </trans-unit>
        <trans-unit id="d9212747ec3985b5dbc30be906a85b9cd4a58814" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;axes&lt;/code&gt; is integer_like, the sequence for evaluation will be: first the -Nth axis in &lt;code&gt;a&lt;/code&gt; and 0th axis in &lt;code&gt;b&lt;/code&gt;, and the -1th axis in &lt;code&gt;a&lt;/code&gt; and Nth axis in &lt;code&gt;b&lt;/code&gt; last.</source>
          <target state="translated">ときに &lt;code&gt;axes&lt;/code&gt; 最初に-Nth軸：integer_likeで、評価のための配列は、あろうとで第0軸 &lt;code&gt;b&lt;/code&gt; とで-1th軸と第Nのを軸 &lt;code&gt;b&lt;/code&gt; 最後。 &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a0e5c01c245527cc066079729775f892bf5a93e0" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;axis&lt;/code&gt; is specified, &lt;code&gt;values&lt;/code&gt; must have the correct shape.</source>
          <target state="translated">&lt;code&gt;axis&lt;/code&gt; を指定する場合、 &lt;code&gt;values&lt;/code&gt; は正しい形状でなければなりません。</target>
        </trans-unit>
        <trans-unit id="3a3f207a74aef7083c1eb02bef5c64216a30b6fc" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;condition&lt;/code&gt; or &lt;code&gt;a&lt;/code&gt; contain masked values.</source>
          <target state="translated">とき &lt;code&gt;condition&lt;/code&gt; やマスクされた値が含まれています。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f3581744e88f263225956bbed713e5c867c6bf74" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;copy=False&lt;/code&gt; and a copy is made for other reasons, the result is the same as if &lt;code&gt;copy=True&lt;/code&gt;, with some exceptions for &lt;code&gt;A&lt;/code&gt;, see the Notes section. The default order is &amp;lsquo;K&amp;rsquo;.</source>
          <target state="translated">ときに &lt;code&gt;copy=False&lt;/code&gt; とコピーが他の理由のために作られているかのように、結果は同じである &lt;code&gt;copy=True&lt;/code&gt; 、のためにいくつかの例外を除いて &lt;code&gt;A&lt;/code&gt; 、ノートのセクションを参照してください。デフォルトの順序は「K」です。</target>
        </trans-unit>
        <trans-unit id="2e1ae66e35c85b2fe34abaa8efd6e58beb3b3355" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;df&lt;/code&gt; &amp;lt;= 0 or when an inappropriate &lt;code&gt;size&lt;/code&gt; (e.g. &lt;code&gt;size=-1&lt;/code&gt;) is given.</source>
          <target state="translated">場合 &lt;code&gt;df&lt;/code&gt; &amp;lt;= 0の場合、または不適切な &lt;code&gt;size&lt;/code&gt; （例えば &lt;code&gt;size=-1&lt;/code&gt; ）が与えられます。</target>
        </trans-unit>
        <trans-unit id="6647686e555ae4abe6c033723e872acfb1bd3153" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;df&lt;/code&gt; independent random variables, each with standard normal distributions (mean 0, variance 1), are squared and summed, the resulting distribution is chi-square (see Notes). This distribution is often used in hypothesis testing.</source>
          <target state="translated">場合 &lt;code&gt;df&lt;/code&gt; を独立確率変数、標準正規分布（平均0、分散1）とそれぞれ、二乗と合計され、得られた分布は（注を参照）カイ二乗です。この分布は、仮説検定でよく使用されます。</target>
        </trans-unit>
        <trans-unit id="ffb0cfba1c0d31cbfd6e3e6d57d32a4b67d07be0" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;high&lt;/code&gt; == &lt;code&gt;low&lt;/code&gt;, values of &lt;code&gt;low&lt;/code&gt; will be returned. If &lt;code&gt;high&lt;/code&gt; &amp;lt; &lt;code&gt;low&lt;/code&gt;, the results are officially undefined and may eventually raise an error, i.e. do not rely on this function to behave when passed arguments satisfying that inequality condition.</source>
          <target state="translated">&lt;code&gt;high&lt;/code&gt; ==の &lt;code&gt;low&lt;/code&gt; 、の値は &lt;code&gt;low&lt;/code&gt; 返されます。場合は &lt;code&gt;high&lt;/code&gt; &amp;lt; &lt;code&gt;low&lt;/code&gt; 、結果が公式に未定義され、最終的にエラーを発生させること、つまりは渡された引数は、その不等式条件を満たしたときに動作するために、この機能に依存していません。</target>
        </trans-unit>
        <trans-unit id="f9aa8b45107567c376fa7741eff97cb12f0255ea" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;normed&lt;/code&gt; is True, then the returned histogram is the sample density, defined such that the sum over bins of the product &lt;code&gt;bin_value * bin_area&lt;/code&gt; is 1.</source>
          <target state="translated">とき &lt;code&gt;normed&lt;/code&gt; Trueの場合、返されたヒストグラムはサンプルの密度である、そのような製品のビンにわたる和と定義 &lt;code&gt;bin_value * bin_area&lt;/code&gt; 1です。</target>
        </trans-unit>
        <trans-unit id="d3c1a253c347320a48abee4b8144700cbe11dedb" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;op[i]&lt;/code&gt; is NULL, the requested data type &lt;code&gt;op_dtypes[i]&lt;/code&gt; may be NULL as well, in which case it is automatically generated from the dtypes of the arrays which are flagged as readable. The rules for generating the dtype are the same is for UFuncs. Of special note is handling of byte order in the selected dtype. If there is exactly one input, the input&amp;rsquo;s dtype is used as is. Otherwise, if more than one input dtypes are combined together, the output will be in native byte order.</source>
          <target state="translated">場合 &lt;code&gt;op[i]&lt;/code&gt; NULL、要求されたデータ型である &lt;code&gt;op_dtypes[i]&lt;/code&gt; それが自動的に読み取り可能としてフラグが設定されている配列のdtypesから生成された場合には、同様にNULLであってもよいです。dtypeの生成規則はUFuncの場合と同じです。特筆すべきは、選択したdtypeでのバイト順の処理です。入力が1つだけの場合、入力のdtypeがそのまま使用されます。それ以外の場合、複数の入力dtypeが組み合わされると、出力はネイティブのバイト順になります。</target>
        </trans-unit>
        <trans-unit id="8b2b29bdbe08a7c3e8ddf1683de5150728b2dbef" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;order&lt;/code&gt; is &amp;lsquo;A&amp;rsquo;, it will preserve the array&amp;rsquo;s &amp;lsquo;C&amp;rsquo; or &amp;lsquo;F&amp;rsquo; ordering:</source>
          <target state="translated">&lt;code&gt;order&lt;/code&gt; が「A」の場合、配列の「C」または「F」の順序が保持されます。</target>
        </trans-unit>
        <trans-unit id="6b8f346f1161f4e387f8b7fce9c3c4eab735e268" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;order&lt;/code&gt; is &amp;lsquo;K&amp;rsquo;, it will preserve orderings that are neither &amp;lsquo;C&amp;rsquo; nor &amp;lsquo;F&amp;rsquo;, but won&amp;rsquo;t reverse axes:</source>
          <target state="translated">とき &lt;code&gt;order&lt;/code&gt; 「K」で、それは「C」や「F」でもない順序付けを保存するが、逆の軸ではないでしょうします。</target>
        </trans-unit>
        <trans-unit id="08a648e9a0d7c320ff7a951bdd5b53abf89293b1" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;p&lt;/code&gt; cannot be converted to a rank-1 array.</source>
          <target state="translated">&lt;code&gt;p&lt;/code&gt; がランク1の配列に変換できない場合。</target>
        </trans-unit>
        <trans-unit id="e45ca1a69513367d482121e776e438a0bc2c1c76" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;path&lt;/code&gt; is an URL, &lt;a href=&quot;#numpy.DataSource.exists&quot;&gt;&lt;code&gt;exists&lt;/code&gt;&lt;/a&gt; will return True if it&amp;rsquo;s either stored locally in the &lt;a href=&quot;numpy.datasource#numpy.DataSource&quot;&gt;&lt;code&gt;DataSource&lt;/code&gt;&lt;/a&gt; directory, or is a valid remote URL. &lt;a href=&quot;numpy.datasource#numpy.DataSource&quot;&gt;&lt;code&gt;DataSource&lt;/code&gt;&lt;/a&gt; does not discriminate between the two, the file is accessible if it exists in either location.</source>
          <target state="translated">ときに &lt;code&gt;path&lt;/code&gt; URLで、&lt;a href=&quot;#numpy.DataSource.exists&quot;&gt; &lt;code&gt;exists&lt;/code&gt; &lt;/a&gt;、それはどちらかにローカルに保存されている場合にTrueを返します。&lt;a href=&quot;numpy.datasource#numpy.DataSource&quot;&gt; &lt;code&gt;DataSource&lt;/code&gt; &lt;/a&gt;ディレクトリ、または有効なリモートURLです。&lt;a href=&quot;numpy.datasource#numpy.DataSource&quot;&gt; &lt;code&gt;DataSource&lt;/code&gt; &lt;/a&gt;は2つを区別しません。ファイルがいずれかの場所に存在する場合、ファイルにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="25d6d2d2a499c808880c721a0e1b19db64d43932" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;seed&lt;/code&gt; is omitted or &lt;code&gt;None&lt;/code&gt;, a new &lt;code&gt;BitGenerator&lt;/code&gt; and &lt;a href=&quot;#numpy.random.Generator&quot;&gt;&lt;code&gt;Generator&lt;/code&gt;&lt;/a&gt; will be instantiated each time. This function does not manage a default global instance.</source>
          <target state="translated">とき &lt;code&gt;seed&lt;/code&gt; 省略していないか、され &lt;code&gt;None&lt;/code&gt; 、新しい &lt;code&gt;BitGenerator&lt;/code&gt; と&lt;a href=&quot;#numpy.random.Generator&quot;&gt; &lt;code&gt;Generator&lt;/code&gt; &lt;/a&gt;、それぞれの時間をインスタンス化されます。この関数は、デフォルトのグローバルインスタンスを管理しません。</target>
        </trans-unit>
        <trans-unit id="548ec80d9148e8694deef2af35ec844cd9f8fe80" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;writemasked&lt;/code&gt; flag is used, and this operand is buffered, this changes how data is copied from the buffer into the array. A masked copying routine is used, which only copies the elements in the buffer for which &lt;code&gt;writemasked&lt;/code&gt; returns true from the corresponding element in the ARRAYMASK operand.</source>
          <target state="translated">場合 &lt;code&gt;writemasked&lt;/code&gt; フラグが使用され、このオペランドは、データがアレイにバッファからコピーされるどのようにこの変更をバッファリングされます。マスクされたコピールーチンが使用されます。これは、ARRAYMASKオペランドの対応する要素から、 &lt;code&gt;writemasked&lt;/code&gt; がtrueを返すバッファの要素のみをコピーします。</target>
        </trans-unit>
        <trans-unit id="e06542a52ac6a1f85d560afb9efd573db44bd48f" translate="yes" xml:space="preserve">
          <source>When &lt;em&gt;order&lt;/em&gt; is &lt;a href=&quot;#c.NPY_ANYORDER&quot;&gt;&lt;code&gt;NPY_ANYORDER&lt;/code&gt;&lt;/a&gt;, the result order is &lt;a href=&quot;#c.NPY_FORTRANORDER&quot;&gt;&lt;code&gt;NPY_FORTRANORDER&lt;/code&gt;&lt;/a&gt; if &lt;em&gt;prototype&lt;/em&gt; is a fortran array, &lt;a href=&quot;#c.NPY_CORDER&quot;&gt;&lt;code&gt;NPY_CORDER&lt;/code&gt;&lt;/a&gt; otherwise. When &lt;em&gt;order&lt;/em&gt; is &lt;a href=&quot;#c.NPY_KEEPORDER&quot;&gt;&lt;code&gt;NPY_KEEPORDER&lt;/code&gt;&lt;/a&gt;, the result order matches that of &lt;em&gt;prototype&lt;/em&gt;, even when the axes of &lt;em&gt;prototype&lt;/em&gt; aren&amp;rsquo;t in C or Fortran order.</source>
          <target state="translated">場合&lt;em&gt;順序が&lt;/em&gt;ある&lt;a href=&quot;#c.NPY_ANYORDER&quot;&gt; &lt;code&gt;NPY_ANYORDER&lt;/code&gt; &lt;/a&gt;、結果順序は&lt;a href=&quot;#c.NPY_FORTRANORDER&quot;&gt; &lt;code&gt;NPY_FORTRANORDER&lt;/code&gt; &lt;/a&gt;場合&lt;em&gt;プロトタイプは&lt;/em&gt; FORTRAN配列、ある&lt;a href=&quot;#c.NPY_CORDER&quot;&gt; &lt;code&gt;NPY_CORDER&lt;/code&gt; &lt;/a&gt;さもなければ。場合&lt;em&gt;順序が&lt;/em&gt;ある&lt;a href=&quot;#c.NPY_KEEPORDER&quot;&gt; &lt;code&gt;NPY_KEEPORDER&lt;/code&gt; &lt;/a&gt;、その結果の順序が一致&lt;em&gt;プロトタイプ&lt;/em&gt;の軸も、&lt;em&gt;プロトタイプは、&lt;/em&gt; CまたはFortranの順序ではありません。</target>
        </trans-unit>
        <trans-unit id="ad9397f3e6e3e4c72dcb47695405ed9d0b6444eb" translate="yes" xml:space="preserve">
          <source>When NumPy is built, information about system configuration is recorded, and is made available for extension modules using NumPy&amp;rsquo;s C API. These are mostly defined in &lt;code&gt;numpyconfig.h&lt;/code&gt; (included in &lt;code&gt;ndarrayobject.h&lt;/code&gt;). The public symbols are prefixed by &lt;code&gt;NPY_*&lt;/code&gt;. NumPy also offers some functions for querying information about the platform in use.</source>
          <target state="translated">NumPyがビルドされると、システム構成に関する情報が記録され、NumPyのC APIを使用して拡張モジュールで使用できるようになります。これらは主に &lt;code&gt;numpyconfig.h&lt;/code&gt; で定義されています（ndarrayobject.hに含まれてい &lt;code&gt;ndarrayobject.h&lt;/code&gt; ）。パブリックシンボルの前には &lt;code&gt;NPY_*&lt;/code&gt; が付きます。NumPyは、使用中のプラットフォームに関する情報を照会するための関数もいくつか提供しています。</target>
        </trans-unit>
        <trans-unit id="f9eebd0d248f1a6803fb5b3cabe894035e7a712b" translate="yes" xml:space="preserve">
          <source>When True, trailing zeros are removed from the inputs. When False, the inputs are passed through intact.</source>
          <target state="translated">True の場合、末尾のゼロは入力から削除されます。Falseの場合、入力はそのまま通過します。</target>
        </trans-unit>
        <trans-unit id="97a14729b31bf94d828802c225db2f870571e19a" translate="yes" xml:space="preserve">
          <source>When a &lt;em&gt;casting&lt;/em&gt; error occurs during assignment (for example updating a numerical array using a sequence of strings), the array being assigned to may end up in an unpredictable partially updated state. However, if any other error (such as an out of bounds index) occurs, the array will remain unchanged.</source>
          <target state="translated">場合&lt;em&gt;キャスティング&lt;/em&gt;エラーが（文字列の配列を用いた数値アレイを更新するなど）割り当て中に発生する、に割り当てられるアレイは、予測できない、部分的に更新された状態で終わることができます。ただし、他のエラー（範囲外のインデックスなど）が発生した場合、配列は変更されません。</target>
        </trans-unit>
        <trans-unit id="0d0060f5095733a108d2028d216426111947fd92" translate="yes" xml:space="preserve">
          <source>When a broadcasting error occurs, the iterator raises an exception which includes the input shapes to help diagnose the problem.</source>
          <target state="translated">ブロードキャストエラーが発生した場合、イテレータは入力形状を含む例外を発生させ、問題を診断するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="bb6f21e3a640b767ac7aa4f3739c198a4f93da24" translate="yes" xml:space="preserve">
          <source>When a memmap causes a file to be created or extended beyond its current size in the filesystem, the contents of the new part are unspecified. On systems with POSIX filesystem semantics, the extended part will be filled with zero bytes.</source>
          <target state="translated">memmapによってファイルが作成されたり、ファイルシステムの現在のサイズを超えて拡張されたりした場合、新しい部分の内容は不特定である。POSIXファイルシステムセマンティクスを持つシステムでは、拡張された部分はゼロバイトで埋められます。</target>
        </trans-unit>
        <trans-unit id="9b87e186d194de6f9d4cd9e098a815eab1dbc5b7" translate="yes" xml:space="preserve">
          <source>When a recording filter is added, matching warnings are stored in the &lt;code&gt;log&lt;/code&gt; attribute as well as in the list returned by &lt;code&gt;record&lt;/code&gt;.</source>
          <target state="translated">記録フィルターが追加されると、一致する警告が &lt;code&gt;log&lt;/code&gt; 属性と、 &lt;code&gt;record&lt;/code&gt; によって返されるリストに格納されます。</target>
        </trans-unit>
        <trans-unit id="ba1de10f5ac1f9d67feabe34568ca76340334549" translate="yes" xml:space="preserve">
          <source>When a ufunc is called, many things must be done. The information collected from these setup operations is stored in a loop-object. This loop object is a C-structure (that could become a Python object but is not initialized as such because it is only used internally). This loop object has the layout needed to be used with PyArray_Broadcast so that the broadcasting can be handled in the same way as it is handled in other sections of code.</source>
          <target state="translated">ufuncが呼ばれると、多くのことが行われなければなりません。これらの設定操作から収集された情報はループオブジェクトに格納されます。このループオブジェクトはC構造体である(Pythonオブジェクトになる可能性があるが、内部でのみ使用されるため初期化されていない)。このループオブジェクトは、PyArray_Broadcast で使用するために必要なレイアウトを持っており、他のコードのセクションと同じようにブロードキャストを扱うことができます。</target>
        </trans-unit>
        <trans-unit id="bed1032321553c178be0f4aa76322e048587c74c" translate="yes" xml:space="preserve">
          <source>When a view is desired in as many cases as possible, &lt;code&gt;arr.reshape(-1)&lt;/code&gt; may be preferable.</source>
          <target state="translated">できるだけ多くの場合にビューが必要な場合は、 &lt;code&gt;arr.reshape(-1)&lt;/code&gt; が適しています。</target>
        </trans-unit>
        <trans-unit id="3d973a2064387ee8231885f5fb66b3c4832468fa" translate="yes" xml:space="preserve">
          <source>When accessing a single entry of a masked array with no named fields, the output is either a scalar (if the corresponding entry of the mask is &lt;code&gt;False&lt;/code&gt;) or the special value &lt;a href=&quot;maskedarray.baseclass#numpy.ma.masked&quot;&gt;&lt;code&gt;masked&lt;/code&gt;&lt;/a&gt; (if the corresponding entry of the mask is &lt;code&gt;True&lt;/code&gt;):</source>
          <target state="translated">名前付きフィールドのないマスクされた配列の単一のエントリにアクセスする場合、出力はスカラー（マスクの対応するエントリが &lt;code&gt;False&lt;/code&gt; の場合）または&lt;a href=&quot;maskedarray.baseclass#numpy.ma.masked&quot;&gt; &lt;code&gt;masked&lt;/code&gt; &lt;/a&gt;た特別な値（マスクの対応するエントリが &lt;code&gt;True&lt;/code&gt; の場合）です。</target>
        </trans-unit>
        <trans-unit id="06a15d5053f26aa57bf4b46b8d10d7192f9bc439" translate="yes" xml:space="preserve">
          <source>When accessing a slice, the output is a masked array whose &lt;a href=&quot;maskedarray.baseclass#numpy.ma.MaskedArray.data&quot;&gt;&lt;code&gt;data&lt;/code&gt;&lt;/a&gt; attribute is a view of the original data, and whose mask is either &lt;a href=&quot;maskedarray.baseclass#numpy.ma.nomask&quot;&gt;&lt;code&gt;nomask&lt;/code&gt;&lt;/a&gt; (if there was no invalid entries in the original array) or a view of the corresponding slice of the original mask. The view is required to ensure propagation of any modification of the mask to the original.</source>
          <target state="translated">スライスにアクセスすると、出力はマスクされた配列になり、その&lt;a href=&quot;maskedarray.baseclass#numpy.ma.MaskedArray.data&quot;&gt; &lt;code&gt;data&lt;/code&gt; &lt;/a&gt;属性は元のデータのビューであり、そのマスクは&lt;a href=&quot;maskedarray.baseclass#numpy.ma.nomask&quot;&gt; &lt;code&gt;nomask&lt;/code&gt; &lt;/a&gt;（元の配列に無効なエントリがなかった場合）または元の対応するスライスのビューのいずれかです。マスク。ビューは、マスクの変更を元に確実に伝播するために必要です。</target>
        </trans-unit>
        <trans-unit id="4d92b7829e88a948fb9eb65ffcf73c11643904a9" translate="yes" xml:space="preserve">
          <source>When added within a context, filters are only added inside the context and will be forgotten when the context is exited.</source>
          <target state="translated">コンテキスト内に追加された場合、フィルタはコンテキスト内でのみ追加され、コンテキストが終了すると忘れられます。</target>
        </trans-unit>
        <trans-unit id="9541e02340938d50efa6e54249172d0ce37841bb" translate="yes" xml:space="preserve">
          <source>When adding the &amp;lsquo;out&amp;rsquo; parameter, we have to explicitly provide those flags, because if someone passes in an array as &amp;lsquo;out&amp;rsquo;, the iterator will default to &amp;lsquo;readonly&amp;rsquo;, and our inner loop would fail. The reason &amp;lsquo;readonly&amp;rsquo; is the default for input arrays is to prevent confusion about unintentionally triggering a reduction operation. If the default were &amp;lsquo;readwrite&amp;rsquo;, any broadcasting operation would also trigger a reduction, a topic which is covered later in this document.</source>
          <target state="translated">「out」パラメーターを追加するときは、これらのフラグを明示的に指定する必要があります。これは、誰かが「out」として配列を渡すと、イテレーターがデフォルトで「readonly」になり、内部ループが失敗するためです。'readonly'が入力配列のデフォルトである理由は、意図せずにリダクション操作をトリガーすることについての混乱を防ぐためです。デフォルトが「readwrite」の場合、ブロードキャスト操作によって削減もトリガーされます。このトピックについては、このドキュメントで後述します。</target>
        </trans-unit>
        <trans-unit id="4db060a24fc0c2ce0739cc8fe613a0f3bd607af5" translate="yes" xml:space="preserve">
          <source>When advanced indices are next to each other transposing may be necessary. All necessary transposing is handled by &lt;code&gt;PyArray_MapIterSwapAxes&lt;/code&gt; and has to be handled by the caller unless &lt;code&gt;PyArray_MapIterNew&lt;/code&gt; is asked to allocate the result.</source>
          <target state="translated">高度なインデックスが隣接している場合、転置が必要になる場合があります。必要なすべての転置は &lt;code&gt;PyArray_MapIterSwapAxes&lt;/code&gt; によって処理され、 &lt;code&gt;PyArray_MapIterNew&lt;/code&gt; が結果の割り当てを要求されない限り、呼び出し元によって処理される必要があります。</target>
        </trans-unit>
        <trans-unit id="d51d0efd85b1005294bf85e6a8973d000ac30965" translate="yes" xml:space="preserve">
          <source>When all weights along axis are zero. See &lt;a href=&quot;numpy.ma.average#numpy.ma.average&quot;&gt;&lt;code&gt;numpy.ma.average&lt;/code&gt;&lt;/a&gt; for a version robust to this type of error.</source>
          <target state="translated">軸に沿ったすべての重みがゼロの場合。このタイプのエラーに強いバージョンについては、&lt;a href=&quot;numpy.ma.average#numpy.ma.average&quot;&gt; &lt;code&gt;numpy.ma.average&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c8f93d8039436724f69d84838e7be89d226d23fc" translate="yes" xml:space="preserve">
          <source>When an array, each row is a coordinate in a D-dimensional space - such as &lt;code&gt;histogramgramdd(np.array([p1, p2, p3]))&lt;/code&gt;.</source>
          <target state="translated">配列の場合、各行は、 &lt;code&gt;histogramgramdd(np.array([p1, p2, p3]))&lt;/code&gt; などのD次元空間の座標です。</target>
        </trans-unit>
        <trans-unit id="82d8732b0393645ea59279b9ddb8a309ed548c77" translate="yes" xml:space="preserve">
          <source>When an array_like, each element is the list of values for single coordinate - such as &lt;code&gt;histogramgramdd((X, Y, Z))&lt;/code&gt;.</source>
          <target state="translated">array_likeの場合、各要素は、 &lt;code&gt;histogramgramdd((X, Y, Z))&lt;/code&gt; などの単一座標の値のリストです。</target>
        </trans-unit>
        <trans-unit id="355be91097240a30b4454a31696bf68a0b258227" translate="yes" xml:space="preserve">
          <source>When an axis is specified the subarrays indexed by the axis are sorted. This is done by making the specified axis the first dimension of the array and then flattening the subarrays in C order. The flattened subarrays are then viewed as a structured type with each element given a label, with the effect that we end up with a 1-D array of structured types that can be treated in the same way as any other 1-D array. The result is that the flattened subarrays are sorted in lexicographic order starting with the first element.</source>
          <target state="translated">軸が指定されると、その軸によってインデックス付けされたサブ配列がソートされます。これは、指定された軸を配列の1次元目にして、Cの順序でサブアレイを平坦化することで行われます。扁平化されたサブアレイは、各要素にラベルが与えられた構造化型として表示され、他の1次元配列と同じように扱うことができる構造化型の1次元配列となります。その結果、平坦化されたサブアレイは、最初の要素から始まる辞書順にソートされます。</target>
        </trans-unit>
        <trans-unit id="6b69f1e4103645c38ed661fd82fe69ef3f4b8546" translate="yes" xml:space="preserve">
          <source>When an ellipsis (&lt;code&gt;...&lt;/code&gt;) is present but has no size (i.e. replaces zero &lt;code&gt;:&lt;/code&gt;) the result will still always be an array. A view if no advanced index is present, otherwise a copy.</source>
          <target state="translated">省略記号（とき &lt;code&gt;...&lt;/code&gt; は）存在しているが、何の大きさを持っていない（すなわちゼロを置き換える &lt;code&gt;:&lt;/code&gt; ）結果はまだ常に配列になります。詳細インデックスが存在しない場合はビュー、それ以外の場合はコピー。</target>
        </trans-unit>
        <trans-unit id="3d4c4fe16d2ce5d90f03758ae48eb086b0f73e4f" translate="yes" xml:space="preserve">
          <source>When an input date falls on the weekend or a holiday, &lt;a href=&quot;generated/numpy.busday_offset#numpy.busday_offset&quot;&gt;&lt;code&gt;busday_offset&lt;/code&gt;&lt;/a&gt; first applies a rule to roll the date to a valid business day, then applies the offset. The default rule is &amp;lsquo;raise&amp;rsquo;, which simply raises an exception. The rules most typically used are &amp;lsquo;forward&amp;rsquo; and &amp;lsquo;backward&amp;rsquo;.</source>
          <target state="translated">入力日付が週末または休日に該当する場合、&lt;a href=&quot;generated/numpy.busday_offset#numpy.busday_offset&quot;&gt; &lt;code&gt;busday_offset&lt;/code&gt; は&lt;/a&gt;最初に日付を有効な営業日にロールするルールを適用し、次にオフセットを適用します。デフォルトのルールは 'raise'で、これは単に例外を発生させます。最も一般的に使用されるルールは「フォワード」と「バックワード」です。</target>
        </trans-unit>
        <trans-unit id="64e5ff0649d57b71884c5f5309f3367e78576ca8" translate="yes" xml:space="preserve">
          <source>When applied to masked arrays, this function drops the mask information if the &lt;code&gt;to_begin&lt;/code&gt; and/or &lt;code&gt;to_end&lt;/code&gt; parameters are used.</source>
          <target state="translated">マスクされた配列に適用されると、 &lt;code&gt;to_begin&lt;/code&gt; または &lt;code&gt;to_end&lt;/code&gt; パラメータ、あるいはその両方が使用されている場合、この関数はマスク情報を削除します。</target>
        </trans-unit>
        <trans-unit id="f9f55c2f275cd5eebce400c5d632f8721b4b827a" translate="yes" xml:space="preserve">
          <source>When axis is not None, this function does the same thing as &amp;ldquo;fancy&amp;rdquo; indexing (indexing arrays using arrays); however, it can be easier to use if you need elements along a given axis. A call such as &lt;code&gt;np.take(arr, indices, axis=3)&lt;/code&gt; is equivalent to &lt;code&gt;arr[:,:,:,indices,...]&lt;/code&gt;.</source>
          <target state="translated">axisがNoneでない場合、この関数は「ファンシー」なインデックス付け（配列を使用した配列のインデックス付け）と同じことを行います。ただし、特定の軸に沿った要素が必要な場合は、より簡単に使用できます。 &lt;code&gt;np.take(arr, indices, axis=3)&lt;/code&gt; などの呼び出しは、 &lt;code&gt;arr[:,:,:,indices,...]&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="98c8d4285d8be1f6c2247d830229aff2863b6c70" translate="yes" xml:space="preserve">
          <source>When buffering is enabled, controls the size of the temporary buffers. Set to 0 for the default value.</source>
          <target state="translated">バッファリングが有効な場合、一時的なバッファのサイズを制御します。デフォルト値は 0 に設定されています。</target>
        </trans-unit>
        <trans-unit id="16e4f331a390aab5d5358796f242e2ca6c555d93" translate="yes" xml:space="preserve">
          <source>When buffering is enabled, this allows the size of the inner loop to grow when buffering isn&amp;rsquo;t necessary. This option is best used if you&amp;rsquo;re doing a straight pass through all the data, rather than anything with small cache-friendly arrays of temporary values for each inner loop.</source>
          <target state="translated">バッファリングが有効な場合、これにより、バッファリングが不要なときに内部ループのサイズが大きくなります。このオプションは、内部ループごとに一時的な値のキャッシュに適した小さな配列ではなく、すべてのデータを直接通過させる場合に最適です。</target>
        </trans-unit>
        <trans-unit id="b51f6738b373830fc8b3cc055c675ac17c018d38" translate="yes" xml:space="preserve">
          <source>When buffering is enabled, this also switches to a special buffering mode which reduces the loop length as necessary to not trample on values being reduced.</source>
          <target state="translated">バッファリングが有効になっている場合、これは特別なバッファリングモードにも切り替わり、ループの長さを必要に応じて減らしている値を踏みにじらないようにします。</target>
        </trans-unit>
        <trans-unit id="41819020a24f8ece45999c2f5c36e5cb1be0993f" translate="yes" xml:space="preserve">
          <source>When buffering is enabled, this delays allocation of the buffers until &lt;a href=&quot;#c.NpyIter_Reset&quot;&gt;&lt;code&gt;NpyIter_Reset&lt;/code&gt;&lt;/a&gt; or another reset function is called. This flag exists to avoid wasteful copying of buffer data when making multiple copies of a buffered iterator for multi-threaded iteration.</source>
          <target state="translated">バッファリングが有効になっていると、&lt;a href=&quot;#c.NpyIter_Reset&quot;&gt; &lt;code&gt;NpyIter_Reset&lt;/code&gt; &lt;/a&gt;または別のリセット関数が呼び出されるまで、バッファの割り当てが遅延します。このフラグは、マルチスレッド反復のためにバッファー付きイテレーターの複数のコピーを作成するときに、バッファーデータの無駄なコピーを回避するために存在します。</target>
        </trans-unit>
        <trans-unit id="230c13e7258bcd1f717539097a4dd43ccf64c97d" translate="yes" xml:space="preserve">
          <source>When calculating the power of an experiment (power = probability of rejecting the null hypothesis when a specific alternative is true) the non-central F statistic becomes important. When the null hypothesis is true, the F statistic follows a central F distribution. When the null hypothesis is not true, then it follows a non-central F statistic.</source>
          <target state="translated">実験の検出力(検出力=特定の代替案が真であるときに帰無仮説を棄却する確率)を計算するとき、非中心F統計量が重要になる。帰無仮説が真の場合、F統計量は中心F分布に従う。帰無仮説が真でないときは、非中心F統計量に従う。</target>
        </trans-unit>
        <trans-unit id="67a93e8e91305afaf6fc0532016e5191c667e052" translate="yes" xml:space="preserve">
          <source>When called on a zero-d array or scalar, &lt;code&gt;nonzero(a)&lt;/code&gt; is treated as &lt;code&gt;nonzero(atleast1d(a))&lt;/code&gt;.</source>
          <target state="translated">ゼロ次元配列またはスカラー、上で呼び出されたときに &lt;code&gt;nonzero(a)&lt;/code&gt; として扱われ &lt;code&gt;nonzero(atleast1d(a))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="05271cb09f7d75c6bfb61cf24594f89c89131399" translate="yes" xml:space="preserve">
          <source>When called with only scalars, &lt;code&gt;np.block&lt;/code&gt; is equivalent to an ndarray call. So &lt;code&gt;np.block([[1, 2], [3, 4]])&lt;/code&gt; is equivalent to &lt;code&gt;np.array([[1, 2], [3, 4]])&lt;/code&gt;.</source>
          <target state="translated">スカラーのみで呼び出される場合、 &lt;code&gt;np.block&lt;/code&gt; はndarray呼び出しと同等です。そう &lt;code&gt;np.block([[1, 2], [3, 4]])&lt;/code&gt; に相当する &lt;code&gt;np.array([[1, 2], [3, 4]])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb3fc5492e5904c93f3605a33709fbb0c2bb0c5b" translate="yes" xml:space="preserve">
          <source>When casting from complex to float or int. To avoid this, one should use &lt;code&gt;a.real.astype(t)&lt;/code&gt;.</source>
          <target state="translated">複素数から浮動小数点または整数にキャストする場合。これを回避するには、 &lt;code&gt;a.real.astype(t)&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="3afb0a37a10edd1baec0a1dc8d2095269323f16d" translate="yes" xml:space="preserve">
          <source>When creating a 0-d array from an array scalar use &lt;code&gt;f-&amp;gt;setitem&lt;/code&gt; instead of the standard copy from an array scalar. Must use if you don&amp;rsquo;t define an array scalar to go along with the data-type.</source>
          <target state="translated">配列スカラーから0-d配列を作成するときは、配列スカラーからの標準のコピーの代わりに &lt;code&gt;f-&amp;gt;setitem&lt;/code&gt; を使用してください。データ型に合わせて配列スカラーを定義しない場合に使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="8887c1561ce70af56f037b9ba953356547c232a4" translate="yes" xml:space="preserve">
          <source>When creating a new masked array with a simple, non-structured datatype, the mask is initially set to the special value &lt;a href=&quot;maskedarray.baseclass#numpy.ma.nomask&quot;&gt;&lt;code&gt;nomask&lt;/code&gt;&lt;/a&gt;, that corresponds roughly to the boolean &lt;code&gt;False&lt;/code&gt;. Trying to set an element of &lt;a href=&quot;maskedarray.baseclass#numpy.ma.nomask&quot;&gt;&lt;code&gt;nomask&lt;/code&gt;&lt;/a&gt; will fail with a &lt;a href=&quot;https://docs.python.org/dev/library/exceptions.html#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; exception, as a boolean does not support item assignment.</source>
          <target state="translated">単純な非構造化データ型で新しいマスクされた配列を作成する場合、マスクは最初、ブール値 &lt;code&gt;False&lt;/code&gt; にほぼ対応する特別な値&lt;a href=&quot;maskedarray.baseclass#numpy.ma.nomask&quot;&gt; &lt;code&gt;nomask&lt;/code&gt; に&lt;/a&gt;設定されます。ブール値はアイテムの割り当てをサポートしていないため、&lt;a href=&quot;maskedarray.baseclass#numpy.ma.nomask&quot;&gt; &lt;code&gt;nomask&lt;/code&gt; の&lt;/a&gt;要素を設定しようとすると、&lt;a href=&quot;https://docs.python.org/dev/library/exceptions.html#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;例外で失敗します。</target>
        </trans-unit>
        <trans-unit id="4e6d2af630e30f862a489ba6df45674126eb3cd4" translate="yes" xml:space="preserve">
          <source>When creating an array of datetimes from a string, it is still possible to automatically select the unit from the inputs, by using the datetime type with generic units.</source>
          <target state="translated">文字列からdatetimeの配列を作成する場合でも、一般的な単位を持つdatetime型を使用することで、入力から自動的に単位を選択することができます。</target>
        </trans-unit>
        <trans-unit id="36a5c7d333e9c484967d9590699c121ae8287b5d" translate="yes" xml:space="preserve">
          <source>When either of the elements is masked, the result is masked as well, but the underlying boolean data are still set, with self and other considered equal if both are masked, and unequal otherwise.</source>
          <target state="translated">どちらかの要素がマスクされている場合、結果もマスクされますが、基礎となるブーリアンデータはまだ設定されており、selfとotherが両方マスクされている場合は等しく、そうでない場合は不等しくなります。</target>
        </trans-unit>
        <trans-unit id="2c15c829ea1146c460c63d87fff55a43784eaa99" translate="yes" xml:space="preserve">
          <source>When estimating the standard error of a proportion in a population by using a random sample, the normal distribution works well unless the product p*n &amp;lt;=5, where p = population proportion estimate, and n = number of samples, in which case the binomial distribution is used instead. For example, a sample of 15 people shows 4 who are left handed, and 11 who are right handed. Then p = 4/15 = 27%. 0.27*15 = 4, so the binomial distribution should be used in this case.</source>
          <target state="translated">ランダムサンプルを使用して母集団の比率の標準誤差を推定する場合、積p * n &amp;lt;= 5でない限り、正規分布はうまく機能します。代わりに二項分布が使用されます。たとえば、15人のサンプルは、左利きの4人と右利きの11人を示しています。次に、p = 4/15 = 27％です。0.27 * 15 = 4なので、この場合は二項分布を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="b79bfc37b770b9a9d472063cecf571e647616c67" translate="yes" xml:space="preserve">
          <source>When fid is a file object, array contents are directly written to the file, bypassing the file object&amp;rsquo;s &lt;code&gt;write&lt;/code&gt; method. As a result, tofile cannot be used with files objects supporting compression (e.g., GzipFile) or file-like objects that do not support &lt;code&gt;fileno()&lt;/code&gt; (e.g., BytesIO).</source>
          <target state="translated">fidがファイルオブジェクトの場合、配列の内容はファイルオブジェクトの &lt;code&gt;write&lt;/code&gt; メソッドをバイパスして、直接ファイルに書き込まれます。その結果、tofileは、圧縮をサポートするファイルオブジェクト（GzipFileなど）または &lt;code&gt;fileno()&lt;/code&gt; をサポートしないファイル類似オブジェクト（BytesIOなど）では使用できません。</target>
        </trans-unit>
        <trans-unit id="b8650f4614cacd7afc4a45f34e856756be0c8acc" translate="yes" xml:space="preserve">
          <source>When forcing an iteration order, we observed that the external loop option may provide the elements in smaller chunks because the elements can&amp;rsquo;t be visited in the appropriate order with a constant stride. When writing C code, this is generally fine, however in pure Python code this can cause a significant reduction in performance.</source>
          <target state="translated">反復順序を強制すると、要素が一定のストライドで適切な順序でアクセスできないため、外部ループオプションが要素を小さなチャンクで提供する可能性があることがわかりました。Cコードを作成する場合、これは通常は問題ありませんが、純粋なPythonコードでは、パフォーマンスが大幅に低下する可能性があります。</target>
        </trans-unit>
        <trans-unit id="63eda21eb7811aeacc325fcf56f657d21ccc05f4" translate="yes" xml:space="preserve">
          <source>When one or more of the arrays to be concatenated is a MaskedArray, this function will return a MaskedArray object instead of an ndarray, but the input masks are &lt;em&gt;not&lt;/em&gt; preserved. In cases where a MaskedArray is expected as input, use the ma.concatenate function from the masked array module instead.</source>
          <target state="translated">連結される1つ以上の配列がMaskedArrayである場合、この関数はndarrayではなくMaskedArrayオブジェクトを返しますが、入力マスクは保持され&lt;em&gt;ません&lt;/em&gt;。MaskedArrayが入力として予期される場合は、代わりに、マスクされた配列モジュールのma.concatenate関数を使用してください。</target>
        </trans-unit>
        <trans-unit id="eccfc4e1a7be21e04b2017257495e340f746e64f" translate="yes" xml:space="preserve">
          <source>When only &lt;code&gt;condition&lt;/code&gt; is provided, this function is a shorthand for &lt;code&gt;np.asarray(condition).nonzero()&lt;/code&gt;. Using &lt;a href=&quot;numpy.nonzero#numpy.nonzero&quot;&gt;&lt;code&gt;nonzero&lt;/code&gt;&lt;/a&gt; directly should be preferred, as it behaves correctly for subclasses. The rest of this documentation covers only the case where all three arguments are provided.</source>
          <target state="translated">&lt;code&gt;condition&lt;/code&gt; のみが指定されている場合、この関数は &lt;code&gt;np.asarray(condition).nonzero()&lt;/code&gt; の省略形です。サブクラスに対して正しく動作するため、&lt;a href=&quot;numpy.nonzero#numpy.nonzero&quot;&gt; &lt;code&gt;nonzero&lt;/code&gt; &lt;/a&gt;直接使用することをお勧めします。このドキュメントの残りの部分では、3つすべての引数が指定されている場合のみを扱います。</target>
        </trans-unit>
        <trans-unit id="b8419db09cea322048fba5bff5f136770a8b6713" translate="yes" xml:space="preserve">
          <source>When only &lt;code&gt;condition&lt;/code&gt; is provided, this function is identical to &lt;a href=&quot;numpy.ma.nonzero#numpy.ma.nonzero&quot;&gt;&lt;code&gt;nonzero&lt;/code&gt;&lt;/a&gt;. The rest of this documentation covers only the case where all three arguments are provided.</source>
          <target state="translated">&lt;code&gt;condition&lt;/code&gt; のみが指定されている場合、この関数は&lt;a href=&quot;numpy.ma.nonzero#numpy.ma.nonzero&quot;&gt; &lt;code&gt;nonzero&lt;/code&gt; &lt;/a&gt;と同じです。このドキュメントの残りの部分では、3つすべての引数が指定されている場合のみを扱います。</target>
        </trans-unit>
        <trans-unit id="a83dea336fc44b86e10fe7d04631005f6869d53b" translate="yes" xml:space="preserve">
          <source>When opening the saved &lt;code&gt;.npz&lt;/code&gt; file with &lt;a href=&quot;numpy.load#numpy.load&quot;&gt;&lt;code&gt;load&lt;/code&gt;&lt;/a&gt; a &lt;code&gt;NpzFile&lt;/code&gt; object is returned. This is a dictionary-like object which can be queried for its list of arrays (with the &lt;code&gt;.files&lt;/code&gt; attribute), and for the arrays themselves.</source>
          <target state="translated">保存された &lt;code&gt;.npz&lt;/code&gt; ファイルを&lt;a href=&quot;numpy.load#numpy.load&quot;&gt; &lt;code&gt;load&lt;/code&gt; &lt;/a&gt;で &lt;code&gt;NpzFile&lt;/code&gt; と、NpzFileオブジェクトが返されます。これは辞書のようなオブジェクトで、配列のリスト（ &lt;code&gt;.files&lt;/code&gt; 属性を使用）と配列自体を照会できます。</target>
        </trans-unit>
        <trans-unit id="26e6b9fa52377f35e02d57b8c33d212f74b50ae3" translate="yes" xml:space="preserve">
          <source>When order is &amp;lsquo;A&amp;rsquo; and &lt;a href=&quot;https://docs.python.org/dev/library/functions.html#object&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt; is an array in neither &amp;lsquo;C&amp;rsquo; nor &amp;lsquo;F&amp;rsquo; order, and a copy is forced by a change in dtype, then the order of the result is not necessarily &amp;lsquo;C&amp;rsquo; as expected. This is likely a bug.</source>
          <target state="translated">順序が 'A'で&lt;a href=&quot;https://docs.python.org/dev/library/functions.html#object&quot;&gt; &lt;code&gt;object&lt;/code&gt; &lt;/a&gt;が 'C'でも 'F'でもない配列で、dtypeの変更によってコピーが強制される場合、結果の順序は必ずしも期待どおり 'C'ではありません。これはおそらくバグです。</target>
        </trans-unit>
        <trans-unit id="5be535caa0bb6516144fc1de604b8372d3c9991d" translate="yes" xml:space="preserve">
          <source>When payments are due (&amp;lsquo;begin&amp;rsquo; (1) or &amp;lsquo;end&amp;rsquo; (0))</source>
          <target state="translated">支払い期限（ 'begin'（1）または 'end'（0））</target>
        </trans-unit>
        <trans-unit id="9149bcf3649f5259f262c786b3a7a6478a7a8e0f" translate="yes" xml:space="preserve">
          <source>When payments are due (&amp;lsquo;begin&amp;rsquo; (1) or &amp;lsquo;end&amp;rsquo; (0)). Defaults to {&amp;lsquo;end&amp;rsquo;, 0}.</source>
          <target state="translated">支払い期限（「開始」（1）または「終了」（0））。デフォルトは{'end'、0}です。</target>
        </trans-unit>
        <trans-unit id="6642df63420a359718ac20ea567420cbe3b18377" translate="yes" xml:space="preserve">
          <source>When performance is important for manipulating many business dates with one particular choice of weekmask and holidays, there is an object &lt;a href=&quot;generated/numpy.busdaycalendar#numpy.busdaycalendar&quot;&gt;&lt;code&gt;busdaycalendar&lt;/code&gt;&lt;/a&gt; which stores the data necessary in an optimized form.</source>
          <target state="translated">週マスクと休日の特定の1つの選択で多くのビジネス日付を操作するためにパフォーマンスが重要な場合、最適化された形式で必要なデータを格納するオブジェクト&lt;a href=&quot;generated/numpy.busdaycalendar#numpy.busdaycalendar&quot;&gt; &lt;code&gt;busdaycalendar&lt;/code&gt; &lt;/a&gt;があります。</target>
        </trans-unit>
        <trans-unit id="fd00b76d3636aeca15fb36d92b84ae47d7409ff3" translate="yes" xml:space="preserve">
          <source>When positive infinity and negative infinity are present:</source>
          <target state="translated">正の無限大と負の無限大がある場合</target>
        </trans-unit>
        <trans-unit id="57212127eb9536990cda5db105b01bdf8367e735" translate="yes" xml:space="preserve">
          <source>When spaces are used as delimiters, or when no delimiter has been given as input, there should not be any missing data between two fields.</source>
          <target state="translated">スペースがデリミタとして使用されている場合、または入力としてデリミタが与えられていない場合、2つのフィールド間にデータの欠落があってはならない。</target>
        </trans-unit>
        <trans-unit id="2c6d6090a315dc06167791d55632ca0e61a0eb7f" translate="yes" xml:space="preserve">
          <source>When studying hypothesis tests that assume normality, seeing how the tests perform on data from a Cauchy distribution is a good indicator of their sensitivity to a heavy-tailed distribution, since the Cauchy looks very much like a Gaussian distribution, but with heavier tails.</source>
          <target state="translated">正規性を仮定した仮説検定を研究するとき、コーキー分布からのデータで検定がどのように実行されるかを見ることは、コーキーがガウス分布に非常に似ているが、より重い尾を持つので、重い尾を持つ分布に対する感度の良い指標となります。</target>
        </trans-unit>
        <trans-unit id="83471109ed39b7eca8654b0b5b56f710df2f0ed6" translate="yes" xml:space="preserve">
          <source>When success (0 return value) is returned, either out_arr is filled with a non-NULL PyArrayObject and the rest of the parameters are untouched, or out_arr is filled with NULL, and the rest of the parameters are filled.</source>
          <target state="translated">成功(戻り値0)が返されると、out_arrはNULLではないPyArrayObjectで埋められ、残りのパラメータはそのままになるか、out_arrはNULLで埋められ、残りのパラメータは埋められるかのどちらかになります。</target>
        </trans-unit>
        <trans-unit id="c5848cbfcc751d6fb624a1cce409c076b5cc5302" translate="yes" xml:space="preserve">
          <source>When the &amp;ldquo;external_loop&amp;rdquo; was not used during construction, but is desired, this modifies the iterator to behave as if the flag was specified.</source>
          <target state="translated">「external_loop」が構築中に使用されなかったが望ましい場合、これにより、フラグが指定されているかのように動作するようにイテレーターが変更されます。</target>
        </trans-unit>
        <trans-unit id="a1da80e9817b29febb418ac2727dd8feb1e9ca57" translate="yes" xml:space="preserve">
          <source>When the &amp;ldquo;multi_index&amp;rdquo; flag was specified, this removes it, allowing the internal iteration structure to be optimized further.</source>
          <target state="translated">「multi_index」フラグが指定された場合、これによりフラグが削除され、内部反復構造をさらに最適化できるようになります。</target>
        </trans-unit>
        <trans-unit id="ea45d329df78eba717c22414db760106850fd424" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;axis&lt;/code&gt; keyword is specified an array of appropriate size is returned.</source>
          <target state="translated">ときに &lt;code&gt;axis&lt;/code&gt; キーワードが指定された適切なサイズの配列が返されます。</target>
        </trans-unit>
        <trans-unit id="3fdd0f5189c6dc8a23dfca9586f442b975510baf" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;axis&lt;/code&gt; keyword is used an array is returned.</source>
          <target state="translated">ときに &lt;code&gt;axis&lt;/code&gt; キーワードが使用されている配列が返されます。</target>
        </trans-unit>
        <trans-unit id="53c50ce51f38684cf2835cdea8b4002b8bbf92a8" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;c_index&lt;/code&gt; or &lt;code&gt;f_index&lt;/code&gt; flag was used, this property provides access to the index. Raises a ValueError if accessed and &lt;code&gt;has_index&lt;/code&gt; is False.</source>
          <target state="translated">場合 &lt;code&gt;c_index&lt;/code&gt; 又は &lt;code&gt;f_index&lt;/code&gt; フラグを使用し、このプロパティは、インデックスへのアクセスを提供します。アクセスされ、 &lt;code&gt;has_index&lt;/code&gt; がFalseの場合、ValueErrorを発生させます。</target>
        </trans-unit>
        <trans-unit id="76706b5098ca6b382b941c090b506c3f0587d432" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;multi_index&lt;/code&gt; flag was used, this property provides access to the index. Raises a ValueError if accessed accessed and &lt;code&gt;has_multi_index&lt;/code&gt; is False.</source>
          <target state="translated">とき &lt;code&gt;multi_index&lt;/code&gt; フラグが使用された、このプロパティは、インデックスへのアクセスを提供します。アクセスがアクセスされ、 &lt;code&gt;has_multi_index&lt;/code&gt; がFalseの場合、ValueErrorを送出します。</target>
        </trans-unit>
        <trans-unit id="ac5d59cc3a2303eaecb29429bf707b0c3c3bedde" translate="yes" xml:space="preserve">
          <source>When the DFT is computed for purely real input, the output is Hermitian-symmetric, i.e. the negative frequency terms are just the complex conjugates of the corresponding positive-frequency terms, and the negative-frequency terms are therefore redundant. This function does not compute the negative frequency terms, and the length of the transformed axis of the output is therefore &lt;code&gt;n//2 + 1&lt;/code&gt;.</source>
          <target state="translated">DFTが純粋な実数入力に対して計算される場合、出力はエルミート対称です。つまり、負の周波数項は対応する正の周波数項の複素共役にすぎず、したがって負の周波数項は冗長です。この関数は負の周波数項を計算しないため、出力の変換された軸の長さは &lt;code&gt;n//2 + 1&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d3d4a45bb9288ccb26e83539df4a7489dddcf142" translate="yes" xml:space="preserve">
          <source>When the data type of &lt;code&gt;a&lt;/code&gt; is longdouble or clongdouble, item() returns a scalar array object because there is no available Python scalar that would not lose information. Void arrays return a buffer object for item(), unless fields are defined, in which case a tuple is returned.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; のデータ型がlongdoubleまたはclongdoubleの場合、情報を失わない利用可能なPythonスカラーがないため、item（）はスカラー配列オブジェクトを返します。Void配列は、フィールドが定義されていない限り、item（）のバッファーオブジェクトを返します。その場合、タプルが返されます。</target>
        </trans-unit>
        <trans-unit id="6d7c5ae7d2e5fed7aeaee002bc1ee17b1c24ba0a" translate="yes" xml:space="preserve">
          <source>When the dimension of the vector(s) in &lt;code&gt;a&lt;/code&gt; and/or &lt;code&gt;b&lt;/code&gt; does not equal 2 or 3.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; および/または &lt;code&gt;b&lt;/code&gt; のベクトルの次元が2または3に等しくない場合。</target>
        </trans-unit>
        <trans-unit id="dd1fba0c6bb426cf1f952081182426781d82c79b" translate="yes" xml:space="preserve">
          <source>When the error handling for a floating-point error (one of &amp;ldquo;divide&amp;rdquo;, &amp;ldquo;over&amp;rdquo;, &amp;ldquo;under&amp;rdquo;, or &amp;ldquo;invalid&amp;rdquo;) is set to &amp;lsquo;call&amp;rsquo; or &amp;lsquo;log&amp;rsquo;, the function that is called or the log instance that is written to is returned by &lt;a href=&quot;#numpy.geterrcall&quot;&gt;&lt;code&gt;geterrcall&lt;/code&gt;&lt;/a&gt;. This function or log instance has been set with &lt;a href=&quot;numpy.seterrcall#numpy.seterrcall&quot;&gt;&lt;code&gt;seterrcall&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">浮動小数点エラー（「divide」、「over」、「under」、または「invalid」のいずれか）のエラー処理が「call」または「log」に設定されている場合、呼び出される関数またはログインスタンス書き込まれたものは&lt;a href=&quot;#numpy.geterrcall&quot;&gt; &lt;code&gt;geterrcall&lt;/code&gt; &lt;/a&gt;によって返されます。この関数またはログイン&lt;a href=&quot;numpy.seterrcall#numpy.seterrcall&quot;&gt; &lt;code&gt;seterrcall&lt;/code&gt; &lt;/a&gt;、seterrcallで設定されています。</target>
        </trans-unit>
        <trans-unit id="3a105e739e37e79639871fe00f74a7608f41e18f" translate="yes" xml:space="preserve">
          <source>When the flag &lt;a href=&quot;#c.NPY_ITER_EXTERNAL_LOOP&quot;&gt;&lt;code&gt;NPY_ITER_EXTERNAL_LOOP&lt;/code&gt;&lt;/a&gt; is used, the code needs to know the parameters for doing the inner loop. These functions provide that information.</source>
          <target state="translated">フラグ&lt;a href=&quot;#c.NPY_ITER_EXTERNAL_LOOP&quot;&gt; &lt;code&gt;NPY_ITER_EXTERNAL_LOOP&lt;/code&gt; &lt;/a&gt;を使用する場合、コードは内部ループを実行するためのパラメーターを知る必要があります。これらの関数はその情報を提供します。</target>
        </trans-unit>
        <trans-unit id="a3b33dbd60831369f7fef62a2b038dc2ad278fa8" translate="yes" xml:space="preserve">
          <source>When the flags attribute is retrieved from Python, a special builtin object of this type is constructed. This special type makes it easier to work with the different flags by accessing them as attributes or by accessing them as if the object were a dictionary with the flag names as entries.</source>
          <target state="translated">flags属性がPythonから取得されると、この型の特別な組み込みオブジェクトが構築されます。この特別な型は、属性としてアクセスしたり、オブジェクトがフラグ名をエントリとして持つ辞書であるかのようにアクセスしたりすることで、さまざまなフラグの操作をより簡単にします。</target>
        </trans-unit>
        <trans-unit id="6997b127e257f2d9de0f0028a03e8903521c7172" translate="yes" xml:space="preserve">
          <source>When the index consists of as many integer arrays as the array being indexed has dimensions, the indexing is straight forward, but different from slicing.</source>
          <target state="translated">インデックスを作成する配列が次元を持つ整数配列の数だけインデックスが構成されている場合、インデックス作成は簡単ですが、スライスとは異なります。</target>
        </trans-unit>
        <trans-unit id="e3539c51a85d030896869c59fab4a3546a18e92e" translate="yes" xml:space="preserve">
          <source>When the input &lt;code&gt;a&lt;/code&gt; is a time-domain signal and &lt;code&gt;A = fft(a)&lt;/code&gt;, &lt;code&gt;np.abs(A)&lt;/code&gt; is its amplitude spectrum and &lt;code&gt;np.abs(A)**2&lt;/code&gt; is its power spectrum. The phase spectrum is obtained by &lt;code&gt;np.angle(A)&lt;/code&gt;.</source>
          <target state="translated">入力 &lt;code&gt;a&lt;/code&gt; が時間領域信号で &lt;code&gt;A = fft(a)&lt;/code&gt; 場合、 &lt;code&gt;np.abs(A)&lt;/code&gt; はその振幅スペクトルで、 &lt;code&gt;np.abs(A)**2&lt;/code&gt; はそのパワースペクトルです。位相スペクトルは &lt;code&gt;np.angle(A)&lt;/code&gt; によって取得されます。</target>
        </trans-unit>
        <trans-unit id="1367f160bbb5fedd65e0cbb76f7f60e11a8156e2" translate="yes" xml:space="preserve">
          <source>When the input and output arrays are aligned and of the correct type, but the striding is not uniform (non-contiguous and 2-D or larger), then a second looping structure is employed for the calculation. This approach converts all of the iterators for the input and output arguments to iterate over all but the largest dimension. The inner loop is then handled by the underlying 1-D computational loop. The outer loop is a standard iterator loop on the converted iterators. The hardware error flags are checked after each 1-D loop is completed.</source>
          <target state="translated">入力配列と出力配列が正しい型に整列されているが,ストライドが一様ではない場合(非連続で2次元以上),2番目のループ構造が計算に採用されます.このアプローチでは,入力と出力の引数に対するすべてのイテレータを変換して,最大次元を除くすべての次元を反復処理します.内側のループは、基礎となる1次元計算ループによって処理されます。外側のループは、変換されたイテレータ上の標準的なイテレータループです。ハードウェアエラーフラグは、各1次元ループが完了した後にチェックされます。</target>
        </trans-unit>
        <trans-unit id="34e3c1c18b6a533eb7d5554f7595a67b84951780" translate="yes" xml:space="preserve">
          <source>When the input is purely real, its transform is Hermitian, i.e., the component at frequency</source>
          <target state="translated">入力が純粋に実数である場合,その変換はエルミトス式であり,すなわち,周波数</target>
        </trans-unit>
        <trans-unit id="52b34b95d5e176ad47f62260446b195804a6cada" translate="yes" xml:space="preserve">
          <source>When the length of 1D &lt;code&gt;weights&lt;/code&gt; is not the same as the shape of &lt;code&gt;a&lt;/code&gt; along axis.</source>
          <target state="translated">場合1次元の長さ &lt;code&gt;weights&lt;/code&gt; の形状と同じではないに沿って軸。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af1eaf8889fe184a62b6fd5a964889299281ae31" translate="yes" xml:space="preserve">
          <source>When the nested list is two levels deep, this allows block matrices to be constructed from their components.</source>
          <target state="translated">入れ子になったリストが2レベル深い場合、これにより、ブロック行列をその構成要素から構築することができます。</target>
        </trans-unit>
        <trans-unit id="e5f5bbbcfb6705ce5d9a02195d69308545da2c5f" translate="yes" xml:space="preserve">
          <source>When the optional keys &lt;em&gt;offsets&lt;/em&gt; and &lt;em&gt;titles&lt;/em&gt; are provided, their values must each be lists of the same length as the &lt;em&gt;names&lt;/em&gt; and &lt;em&gt;formats&lt;/em&gt; lists. The &lt;em&gt;offsets&lt;/em&gt; value is a list of byte offsets (limited to &lt;a href=&quot;https://docs.python.org/dev/library/ctypes.html#ctypes.c_int&quot;&gt;&lt;code&gt;ctypes.c_int&lt;/code&gt;&lt;/a&gt;) for each field, while the &lt;em&gt;titles&lt;/em&gt; value is a list of titles for each field (&lt;code&gt;None&lt;/code&gt; can be used if no title is desired for that field). The &lt;em&gt;titles&lt;/em&gt; can be any &lt;code&gt;string&lt;/code&gt; or &lt;code&gt;unicode&lt;/code&gt; object and will add another entry to the fields dictionary keyed by the title and referencing the same field tuple which will contain the title as an additional tuple member.</source>
          <target state="translated">オプションのキーの&lt;em&gt;オフセット&lt;/em&gt;と&lt;em&gt;タイトルを指定&lt;/em&gt;する場合、それらの値はそれぞれ、&lt;em&gt;名前&lt;/em&gt;と&lt;em&gt;フォーマットの&lt;/em&gt;リストと同じ長さのリストでなければなりません。&lt;em&gt;オフセット&lt;/em&gt;値はバイトオフセット（これらに限定されのリストである&lt;a href=&quot;https://docs.python.org/dev/library/ctypes.html#ctypes.c_int&quot;&gt; &lt;code&gt;ctypes.c_int&lt;/code&gt; &lt;/a&gt;ながら、各フィールドの）&lt;em&gt;タイトル&lt;/em&gt;値が各フィールドのタイトルのリスト（ある &lt;code&gt;None&lt;/code&gt; ないタイトルがそのフィールドのために所望されていない場合に使用できません）。&lt;em&gt;タイトルの&lt;/em&gt;いずれかであることができる &lt;code&gt;string&lt;/code&gt; または &lt;code&gt;unicode&lt;/code&gt; オブジェクトおよびフィールドに別のエントリを追加するには、タイトルをキーと追加のタプル部材としてタイトルを含むであろう同じフィールドタプルを参照する辞書。</target>
        </trans-unit>
        <trans-unit id="0c89441828aa0daf46fb0989feeaa96e8f46c4c3" translate="yes" xml:space="preserve">
          <source>When the result of an advanced indexing operation has no elements but an individual index is out of bounds, whether or not an &lt;code&gt;IndexError&lt;/code&gt; is raised is undefined (e.g. &lt;code&gt;x[[], [123]]&lt;/code&gt; with &lt;code&gt;123&lt;/code&gt; being out of bounds).</source>
          <target state="translated">高度なインデックス作成操作の結果に要素がなく、個々のインデックスが範囲外である場合、 &lt;code&gt;IndexError&lt;/code&gt; が発生するかどうかは定義されていません（たとえば、 &lt;code&gt;x[[], [123]]&lt;/code&gt; 、 &lt;code&gt;123&lt;/code&gt; は範囲外）。</target>
        </trans-unit>
        <trans-unit id="cb9d5c54f477f497096e6733fd299984beb835c4" translate="yes" xml:space="preserve">
          <source>When the variables are named (either by a flexible dtype or with &lt;code&gt;names&lt;/code&gt;, there must not be any header in the file (else a ValueError exception is raised).</source>
          <target state="translated">変数に名前が付けられている場合（柔軟なdtypeまたは &lt;code&gt;names&lt;/code&gt; のいずれかで）、ファイルにヘッダーがあってはなりません（それ以外の場合は、ValueError例外が発生します）。</target>
        </trans-unit>
        <trans-unit id="1ce6824829e37ca585156c8e8abdeb7e7047b4a6" translate="yes" xml:space="preserve">
          <source>When there is at least one slice (&lt;code&gt;:&lt;/code&gt;), ellipsis (&lt;code&gt;...&lt;/code&gt;) or &lt;a href=&quot;constants#numpy.newaxis&quot;&gt;&lt;code&gt;newaxis&lt;/code&gt;&lt;/a&gt; in the index (or the array has more dimensions than there are advanced indexes), then the behaviour can be more complicated. It is like concatenating the indexing result for each advanced index element</source>
          <target state="translated">（そこに少なくとも一つのスライスである場合 &lt;code&gt;:&lt;/code&gt; ）、省略記号（ &lt;code&gt;...&lt;/code&gt; ）または&lt;a href=&quot;constants#numpy.newaxis&quot;&gt; &lt;code&gt;newaxis&lt;/code&gt; &lt;/a&gt;インデックスに（又はアレイは、高度なインデックスよりも多くの寸法を有する）、次いで、動作はより複雑にすることができます。高度なインデックス要素ごとにインデックス結果を連結するようなものです</target>
        </trans-unit>
        <trans-unit id="7fc05435c156ef19015ca040276948a66576f250" translate="yes" xml:space="preserve">
          <source>When there is more than one axis to sum over - and they are not the last (first) axes of &lt;code&gt;a&lt;/code&gt; (&lt;code&gt;b&lt;/code&gt;) - the argument &lt;code&gt;axes&lt;/code&gt; should consist of two sequences of the same length, with the first axis to sum over given first in both sequences, the second axis second, and so forth.</source>
          <target state="translated">合計する複数の軸があり、それらが &lt;code&gt;a&lt;/code&gt; （ &lt;code&gt;b&lt;/code&gt; ）の最後の（最初の）軸ではない場合、引数の &lt;code&gt;axes&lt;/code&gt; は同じ長さの2つのシーケンスで構成され、最初に合計する最初の軸が最初に与えられます。両方のシーケンス、2番目の軸が2番目、というように続きます。</target>
        </trans-unit>
        <trans-unit id="aca72761c1059e14a576d5243f55b005214eb5e7" translate="yes" xml:space="preserve">
          <source>When there is only one operand, no axes are summed, and no output parameter is provided, a view into the operand is returned instead of a new array. Thus, taking the diagonal as &lt;code&gt;np.einsum('ii-&amp;gt;i', a)&lt;/code&gt; produces a view (changed in version 1.10.0).</source>
          <target state="translated">オペランドが1つしかない場合、軸は合計されず、出力パラメーターも提供されない場合、新しい配列の代わりにオペランドのビューが返されます。したがって、対角線を &lt;code&gt;np.einsum('ii-&amp;gt;i', a)&lt;/code&gt; すると、ビューが生成されます（バージョン1.10.0で変更）。</target>
        </trans-unit>
        <trans-unit id="d6560fa9a8a1164ba82db1ff6a46fb84089bde5d" translate="yes" xml:space="preserve">
          <source>When true, the resulting &lt;a href=&quot;numpy.char.chararray#numpy.char.chararray&quot;&gt;&lt;code&gt;chararray&lt;/code&gt;&lt;/a&gt; can contain Unicode characters, when false only 8-bit characters. If unicode is &lt;code&gt;None&lt;/code&gt; and &lt;code&gt;obj&lt;/code&gt; is one of the following:</source>
          <target state="translated">trueの場合、結果の&lt;a href=&quot;numpy.char.chararray#numpy.char.chararray&quot;&gt; &lt;code&gt;chararray&lt;/code&gt; に&lt;/a&gt;はUnicode文字を含めることができます。falseの場合、8ビット文字のみを含めることができます。unicodeが &lt;code&gt;None&lt;/code&gt; で、 &lt;code&gt;obj&lt;/code&gt; が次のいずれかである場合：</target>
        </trans-unit>
        <trans-unit id="a283e044d3ebfd4430bd993011e5610365921585" translate="yes" xml:space="preserve">
          <source>When true, the resulting &lt;code&gt;chararray&lt;/code&gt; can contain Unicode characters, when false only 8-bit characters. If unicode is &lt;code&gt;None&lt;/code&gt; and &lt;code&gt;obj&lt;/code&gt; is one of the following:</source>
          <target state="translated">trueの場合、結果の &lt;code&gt;chararray&lt;/code&gt; にはUnicode文字を含めることができます。falseの場合、8ビット文字のみを含めることができます。unicodeが &lt;code&gt;None&lt;/code&gt; で、 &lt;code&gt;obj&lt;/code&gt; が次のいずれかである場合：</target>
        </trans-unit>
        <trans-unit id="436bc3d73aa6565d86aefabb54c9292e559b97a5" translate="yes" xml:space="preserve">
          <source>When used interactively with an object, &lt;code&gt;np.info(obj)&lt;/code&gt; is equivalent to &lt;code&gt;help(obj)&lt;/code&gt; on the Python prompt or &lt;code&gt;obj?&lt;/code&gt; on the IPython prompt.</source>
          <target state="translated">オブジェクトとインタラクティブに使用される場合、 &lt;code&gt;np.info(obj)&lt;/code&gt; はPythonプロンプトまたは &lt;code&gt;obj?&lt;/code&gt; の &lt;code&gt;help(obj)&lt;/code&gt; と同等です。IPythonプロンプトで。</target>
        </trans-unit>
        <trans-unit id="a8bcdc54785df618c23c01dc97dc1468fe9c49c4" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;jumped&lt;/code&gt;, one does have to take care not to jump to a stream that was already used. In the above example, one could not later use &lt;code&gt;blocked_rng[0].jumped()&lt;/code&gt; as it would overlap with &lt;code&gt;blocked_rng[1]&lt;/code&gt;. Like with the independent streams, if the main process here wants to split off 10 more streams by jumping, then it needs to start with &lt;code&gt;range(10, 20)&lt;/code&gt;, otherwise it would recreate the same streams. On the other hand, if you carefully construct the streams, then you are guaranteed to have streams that do not overlap.</source>
          <target state="translated">&lt;code&gt;jumped&lt;/code&gt; を使用する場合、すでに使用されているストリームにジャンプしないように注意する必要があります。上記の例では、 &lt;code&gt;blocked_rng[1]&lt;/code&gt; と重複するため、後で &lt;code&gt;blocked_rng[0].jumped()&lt;/code&gt; を使用することはできません。独立したストリームと同様に、ここでメインプロセスがジャンプによって10個以上のストリームを分割する場合は、 &lt;code&gt;range(10, 20)&lt;/code&gt; から開始する必要があります。そうでない場合は、同じストリームを再作成します。一方、ストリームを注意深く作成すると、ストリームがオーバーラップしないことが保証されます。</target>
        </trans-unit>
        <trans-unit id="724bc629cdbfec6a4e5af9a220d38930424c297d" translate="yes" xml:space="preserve">
          <source>When using a non-integer step, such as 0.1, the results will often not be consistent. It is better to use &lt;a href=&quot;numpy.linspace#numpy.linspace&quot;&gt;&lt;code&gt;numpy.linspace&lt;/code&gt;&lt;/a&gt; for these cases.</source>
          <target state="translated">0.1などの整数以外のステップを使用すると、結果に一貫性がなくなることがよくあります。このような場合は、&lt;a href=&quot;numpy.linspace#numpy.linspace&quot;&gt; &lt;code&gt;numpy.linspace&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="27718ed960a95a721b47ff1931021ed4073bbe48" translate="yes" xml:space="preserve">
          <source>When using a string for &lt;a href=&quot;https://docs.python.org/dev/library/functions.html#object&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt; it is possible to get multiple results.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/dev/library/functions.html#object&quot;&gt; &lt;code&gt;object&lt;/code&gt; &lt;/a&gt;に文字列を使用すると、複数の結果が得られる可能性があります。</target>
        </trans-unit>
        <trans-unit id="4483d4c2e345ca8073aa1a9817270cc3cdb40e82" translate="yes" xml:space="preserve">
          <source>When using a subclass (especially one which manipulates its shape), the default &lt;code&gt;ndarray.__setitem__&lt;/code&gt; behaviour will call &lt;code&gt;__getitem__&lt;/code&gt; for &lt;em&gt;basic&lt;/em&gt; indexing but not for &lt;em&gt;advanced&lt;/em&gt; indexing. For such a subclass it may be preferable to call &lt;code&gt;ndarray.__setitem__&lt;/code&gt; with a &lt;em&gt;base class&lt;/em&gt; ndarray view on the data. This &lt;em&gt;must&lt;/em&gt; be done if the subclasses &lt;code&gt;__getitem__&lt;/code&gt; does not return views.</source>
          <target state="translated">サブクラス（特にその形状を操作するクラス）を使用する場合、デフォルトの &lt;code&gt;ndarray.__setitem__&lt;/code&gt; 動作は、&lt;em&gt;基本的な&lt;/em&gt;インデックス付けでは &lt;code&gt;__getitem__&lt;/code&gt; を呼び出しますが、&lt;em&gt;高度&lt;/em&gt;&lt;em&gt;な&lt;/em&gt;インデックス付けでは呼び出しません。そのようなサブクラスのために呼び出すことが好ましいかもしれない &lt;code&gt;ndarray.__setitem__&lt;/code&gt; と&lt;em&gt;ベースクラス&lt;/em&gt;データにndarray図。これ&lt;em&gt;は&lt;/em&gt;、サブクラス &lt;code&gt;__getitem__&lt;/code&gt; がビューを返さない場合に実行する&lt;em&gt;必要&lt;/em&gt;が&lt;em&gt;あり&lt;/em&gt;ます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bc311b69f41b3e0c41508f3b081d2280ad7970ec" translate="yes" xml:space="preserve">
          <source>When using broadcasting with uint64 dtypes, the maximum value (2**64) cannot be represented as a standard integer type. The high array (or low if high is None) must have object dtype, e.g., array([2**64]).</source>
          <target state="translated">uint64のdtypeを持つブロードキャストを使用する場合、最大値(2**64)を標準の整数型として表現することはできません。high配列(highがNoneの場合はlow)は、array([2**64])などのオブジェクトdtypeを持たなければなりません。</target>
        </trans-unit>
        <trans-unit id="c04978427f46ec116ad24550bbf1c67bfbb16f61" translate="yes" xml:space="preserve">
          <source>When using signed integer types the result is the two&amp;rsquo;s complement of the result for the unsigned type:</source>
          <target state="translated">符号付き整数型を使用する場合、結果は符号なし型の結果の2の補数になります。</target>
        </trans-unit>
        <trans-unit id="fefd781e401a9acf4994aa658770a54631a31aac" translate="yes" xml:space="preserve">
          <source>When using the iterator in multi-threaded code or in code not holding the Python GIL, care must be taken to only call functions which are safe in that context. &lt;a href=&quot;#c.NpyIter_Copy&quot;&gt;&lt;code&gt;NpyIter_Copy&lt;/code&gt;&lt;/a&gt; cannot be safely called without the Python GIL, because it increments Python references. The &lt;code&gt;Reset*&lt;/code&gt; and some other functions may be safely called by passing in the &lt;code&gt;errmsg&lt;/code&gt; parameter as non-NULL, so that the functions will pass back errors through it instead of setting a Python exception.</source>
          <target state="translated">マルチスレッドコードまたはPython GILを保持しないコードでイテレーターを使用する場合、そのコンテキストで安全な関数のみを呼び出すように注意する必要があります。&lt;a href=&quot;#c.NpyIter_Copy&quot;&gt; &lt;code&gt;NpyIter_Copy&lt;/code&gt; &lt;/a&gt;は、Python参照をインクリメントするため、Python GILなしでは安全に呼び出すことができません。 &lt;code&gt;Reset*&lt;/code&gt; および他のいくつかの機能を安全に通過させることによって呼び出すことができる &lt;code&gt;errmsg&lt;/code&gt; 機能は、Pythonの例外を設定するのではなく、それを介してエラーをバック通過するように、非NULLとしてパラメータ。</target>
        </trans-unit>
        <trans-unit id="e0e93c50be29a8db34812f3b063181378aab17d0" translate="yes" xml:space="preserve">
          <source>When working along a given axis, a slice along that axis is returned in &lt;code&gt;output&lt;/code&gt; for each index where &lt;code&gt;condition&lt;/code&gt; evaluates to True. When working on a 1-D array, &lt;a href=&quot;#numpy.compress&quot;&gt;&lt;code&gt;compress&lt;/code&gt;&lt;/a&gt; is equivalent to &lt;a href=&quot;numpy.extract#numpy.extract&quot;&gt;&lt;code&gt;extract&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">特定の軸に沿って作業すると、その軸に沿ったスライスが、 &lt;code&gt;condition&lt;/code&gt; がTrueに評価される各インデックスの &lt;code&gt;output&lt;/code&gt; に返されます。1次元配列で作業する場合、&lt;a href=&quot;#numpy.compress&quot;&gt; &lt;code&gt;compress&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;numpy.extract#numpy.extract&quot;&gt; &lt;code&gt;extract&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="7d7c565731670a0f048fc0a67ffb9fb36e062b00" translate="yes" xml:space="preserve">
          <source>When working with more complex dtypes which are composed of other dtypes, such as the struct dtype, creating inner loops that manipulate the dtypes requires carrying along additional data. NumPy supports this idea through a struct &lt;a href=&quot;#c.NpyAuxData&quot;&gt;&lt;code&gt;NpyAuxData&lt;/code&gt;&lt;/a&gt;, mandating a few conventions so that it is possible to do this.</source>
          <target state="translated">struct dtypeなどの他のdtypeで構成されるより複雑なdtypeを操作する場合、dtypeを操作する内部ループを作成するには、追加のデータを運ぶ必要があります。 NumPyは&lt;a href=&quot;#c.NpyAuxData&quot;&gt; &lt;code&gt;NpyAuxData&lt;/code&gt; &lt;/a&gt;構造体を通じてこのアイデアをサポートし、これを可能にするためにいくつかの規則を義務付けています。</target>
        </trans-unit>
        <trans-unit id="aaa9ed3a1aa18ac3b534d99cdc2037422344dc84" translate="yes" xml:space="preserve">
          <source>When you use the &lt;code&gt;%apply&lt;/code&gt; directive, as is usually necessary to use &lt;code&gt;numpy.i&lt;/code&gt;, it will remain in effect until you tell &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; that it shouldn&amp;rsquo;t be. If the arguments to the functions or methods that you are wrapping have common names, such as &lt;code&gt;length&lt;/code&gt; or &lt;code&gt;vector&lt;/code&gt;, these typemaps may get applied in situations you do not expect or want. Therefore, it is always a good idea to add a &lt;code&gt;%clear&lt;/code&gt; directive after you are done with a specific typemap:</source>
          <target state="translated">&lt;code&gt;%apply&lt;/code&gt; ディレクティブを使用する場合、通常 &lt;code&gt;numpy.i&lt;/code&gt; を使用する必要があるので、&lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt;にそれを実行してはならないことを指示するまで、それは有効なままです。ラップしている関数またはメソッドへの引数に、 &lt;code&gt;length&lt;/code&gt; や &lt;code&gt;vector&lt;/code&gt; などの共通の名前がある場合、これらのタイプマップは、予期しないまたは望まない状況で適用される可能性があります。したがって、特定のタイプマップを使用した後は、 &lt;code&gt;%clear&lt;/code&gt; ディレクティブを追加することを常にお勧めします。</target>
        </trans-unit>
        <trans-unit id="89f82c7a5bbe0891c1df2aa46cbdf990d1794aa1" translate="yes" xml:space="preserve">
          <source>Whenever &lt;a href=&quot;#c.NPY_VERSION&quot;&gt;&lt;code&gt;NPY_VERSION&lt;/code&gt;&lt;/a&gt; != PyArray_GetNDArrayCVersion, the extension has to be recompiled (ABI incompatibility).</source>
          <target state="translated">&lt;a href=&quot;#c.NPY_VERSION&quot;&gt; &lt;code&gt;NPY_VERSION&lt;/code&gt; &lt;/a&gt;！= PyArray_GetNDArrayCVersionである場合は常に、拡張機能を再コンパイルする必要があります（ABIの非互換性）。</target>
        </trans-unit>
        <trans-unit id="3e2b99bc93c54f0bc24f4acf841fece1023b07a0" translate="yes" xml:space="preserve">
          <source>Whenever &lt;a href=&quot;#c.PY_ARRAY_UNIQUE_SYMBOL&quot;&gt;&lt;code&gt;PY_ARRAY_UNIQUE_SYMBOL&lt;/code&gt;&lt;/a&gt; is #defined, it also changes the name of the variable holding the C-API, which defaults to &lt;code&gt;PyArray_API&lt;/code&gt;, to whatever the macro is #defined to.</source>
          <target state="translated">&lt;a href=&quot;#c.PY_ARRAY_UNIQUE_SYMBOL&quot;&gt; &lt;code&gt;PY_ARRAY_UNIQUE_SYMBOL&lt;/code&gt; &lt;/a&gt;が#definedである場合は常に、C-APIを保持する変数の名前も変更されます。デフォルトでは &lt;code&gt;PyArray_API&lt;/code&gt; になり、マクロが定義されているものに変更されます。</target>
        </trans-unit>
        <trans-unit id="934b37ef17a0c4c0c83c595fef5a62578238ee15" translate="yes" xml:space="preserve">
          <source>Whenever a data-type is required in a NumPy function or method, either a &lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; object or something that can be converted to one can be supplied. Such conversions are done by the &lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; constructor:</source>
          <target state="translated">NumPy関数またはメソッドでデータ型が必要な場合はいつでも、&lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;オブジェクトか、1つに変換できるものを指定できます。このような変換は、&lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt;コンストラクターによって行われます。</target>
        </trans-unit>
        <trans-unit id="80254bc9efba4102e15f18db7d8295d8697a0360" translate="yes" xml:space="preserve">
          <source>Whenever a writeable operand has fewer elements than the full iteration space, that operand is undergoing a reduction. The &lt;a href=&quot;generated/numpy.nditer#numpy.nditer&quot;&gt;&lt;code&gt;nditer&lt;/code&gt;&lt;/a&gt; object requires that any reduction operand be flagged as read-write, and only allows reductions when &amp;lsquo;reduce_ok&amp;rsquo; is provided as an iterator flag.</source>
          <target state="translated">書き込み可能なオペランドの要素が反復空間全体よりも少ない場合、そのオペランドは削減されます。&lt;a href=&quot;generated/numpy.nditer#numpy.nditer&quot;&gt; &lt;code&gt;nditer&lt;/code&gt; の&lt;/a&gt;オブジェクトは「reduce_ok」がイテレータフラグとして提供される場合、任意の還元オペランドのみ読み書き可能としてフラグを立て、そしてすることが削減を可能にすることを必要とします。</target>
        </trans-unit>
        <trans-unit id="090346f0957607fc5beeda4f38e177d1918c4444" translate="yes" xml:space="preserve">
          <source>Where True, yield &lt;code&gt;x&lt;/code&gt;, otherwise yield &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">Trueの場合、 &lt;code&gt;x&lt;/code&gt; を生成し、それ以外の場合は &lt;code&gt;y&lt;/code&gt; を生成します。</target>
        </trans-unit>
        <trans-unit id="b58703967453c474e94cf57585adb3b2a50448ed" translate="yes" xml:space="preserve">
          <source>Where the library can be found.</source>
          <target state="translated">図書館がある場所</target>
        </trans-unit>
        <trans-unit id="54df46f7307aa74c464486f1ea35cde9a77febe6" translate="yes" xml:space="preserve">
          <source>Where to install the npy-pkg config file, relatively to the current package path.</source>
          <target state="translated">npy-pkgの設定ファイルをインストールする場所は、現在のパッケージのパスを基準にしています。</target>
        </trans-unit>
        <trans-unit id="93d30f1df70c77ec829a136f4d8b2ef0c3b96d94" translate="yes" xml:space="preserve">
          <source>Whether &lt;code&gt;arg1&lt;/code&gt; is a subclass of &lt;code&gt;arg2&lt;/code&gt; or not.</source>
          <target state="translated">&lt;code&gt;arg1&lt;/code&gt; が &lt;code&gt;arg2&lt;/code&gt; のサブクラスかどうか。</target>
        </trans-unit>
        <trans-unit id="7ded38313492e3b9340e10eb5e7bd8c5c0bea96c" translate="yes" xml:space="preserve">
          <source>Whether iteration requires access to the Python API, for example if one of the operands is an object array.</source>
          <target state="translated">イテレーションがPython APIへのアクセスを必要とするかどうか、例えばオペランドの1つがオブジェクトの配列である場合など。</target>
        </trans-unit>
        <trans-unit id="08ba3ba6d86470ddcf5c7c987a831ffff108d8b4" translate="yes" xml:space="preserve">
          <source>Whether masked data are propagated (True) or set to 0 (False) for the computation. Default is False. Propagating the mask means that if a masked value appears in a row or column, the whole row or column is considered masked.</source>
          <target state="translated">計算のためにマスクされたデータをプロパゲーションするか(True)、0に設定するか(False)。デフォルトはFalseです。マスクを伝搬するとは、マスクされた値が行または列に現れた場合、行または列全体がマスクされているとみなされることを意味します。</target>
        </trans-unit>
        <trans-unit id="8637ce438fa1d406f7ec1653600c39aad46d9db8" translate="yes" xml:space="preserve">
          <source>Whether masked values in &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are considered equal (True) or not (False). They are considered equal by default.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; のマスクされた値が等しいと見なされるか（True）、等しくないと見なされるか（False）。デフォルトでは等しいと見なされます。</target>
        </trans-unit>
        <trans-unit id="6867499c63cb6abaeab85ff30463c9432618d2ee" translate="yes" xml:space="preserve">
          <source>Whether masked values in a or b are considered equal (True) or not (False).</source>
          <target state="translated">aまたはbのマスクされた値が等しいとみなされるかどうか(True)、またはそうでないとみなされるかどうか(False)。</target>
        </trans-unit>
        <trans-unit id="288daa4940dd3020af5ede621755e8ef6fcd2c3a" translate="yes" xml:space="preserve">
          <source>Whether missing values (if any) should be treated as the largest values (True) or the smallest values (False) When the array contains unmasked values at the same extremes of the datatype, the ordering of these values and the masked values is undefined.</source>
          <target state="translated">欠落している値(もしあれば)を最大値(True)として扱うか、最小値(False)として扱うか。 配列にデータ型の同じ極端にマスクされていない値が含まれている場合、これらの値とマスクされている値の順序は未定義です。</target>
        </trans-unit>
        <trans-unit id="7da3b2e79fc5148bb637715841cccf76fc788e07" translate="yes" xml:space="preserve">
          <source>Whether missing values (if any) should be treated as the largest values (True) or the smallest values (False) When the array contains unmasked values sorting at the same extremes of the datatype, the ordering of these values and the masked values is undefined.</source>
          <target state="translated">欠落している値(もしあれば)を最大値(True)として扱うか、最小値(False)として扱うかを指定します。</target>
        </trans-unit>
        <trans-unit id="ec0eb17948661387af03eedbd16c0982b256d2ca" translate="yes" xml:space="preserve">
          <source>Whether or not there are iterations left.</source>
          <target state="translated">イテレーションが残っているかどうか。</target>
        </trans-unit>
        <trans-unit id="6c6ce4cbc91d3e04017743bd327936e59b4be559" translate="yes" xml:space="preserve">
          <source>Whether or not to compute &lt;code&gt;u&lt;/code&gt; and &lt;code&gt;vh&lt;/code&gt; in addition to &lt;code&gt;s&lt;/code&gt;. True by default.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; に加えて &lt;code&gt;u&lt;/code&gt; と &lt;code&gt;vh&lt;/code&gt; を計算するかどうか。デフォルトではtrue。</target>
        </trans-unit>
        <trans-unit id="34608785e0c8e6698e050294c20a41fc581a7a43" translate="yes" xml:space="preserve">
          <source>Whether the array data is Fortran-contiguous or not. Since Fortran-contiguous arrays are a common form of non-C-contiguity, we allow them to be written directly to disk for efficiency.</source>
          <target state="translated">配列データがFortran-contiguousであるかどうか。Fortran-連続性のあるアレイは非C-連続性の一般的な形式であるため、効率化のために直接ディスクに書き込めるようにしています。</target>
        </trans-unit>
        <trans-unit id="a7b87db28e0b29fd77663f2df3cc4a859b46d1b1" translate="yes" xml:space="preserve">
          <source>Whether the array is to interpreted as C-order or Fortran-order.</source>
          <target state="translated">配列をC順に解釈するかFortran順に解釈するか。</target>
        </trans-unit>
        <trans-unit id="944c20a06f71d4591f2972a6198b951c5988e169" translate="yes" xml:space="preserve">
          <source>Whether the buffer is read-only</source>
          <target state="translated">バッファが読み取り専用かどうか</target>
        </trans-unit>
        <trans-unit id="4f5043b4a62f84c7d0a89c1a7427fe7e0a42c45d" translate="yes" xml:space="preserve">
          <source>Whether the iteration over the operands is finished or not.</source>
          <target state="translated">オペランドに対する反復処理が終了したかどうか。</target>
        </trans-unit>
        <trans-unit id="13a09493df9f77aae557913a37ecafb9bbcd240e" translate="yes" xml:space="preserve">
          <source>Whether the mask is shared between masked arrays can be seen from the &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.sharedmask&quot;&gt;&lt;code&gt;sharedmask&lt;/code&gt;&lt;/a&gt; property. &lt;a href=&quot;#numpy.ma.MaskedArray.unshare_mask&quot;&gt;&lt;code&gt;unshare_mask&lt;/code&gt;&lt;/a&gt; ensures the mask is not shared. A copy of the mask is only made if it was shared.</source>
          <target state="translated">マスクされた配列間でマスクが共有されているかどうかは、&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.sharedmask&quot;&gt; &lt;code&gt;sharedmask&lt;/code&gt; &lt;/a&gt;プロパティで確認できます。&lt;a href=&quot;#numpy.ma.MaskedArray.unshare_mask&quot;&gt; &lt;code&gt;unshare_mask&lt;/code&gt; &lt;/a&gt;は、マスクが共有されないようにします。マスクのコピーは、共有されている場合にのみ作成されます。</target>
        </trans-unit>
        <trans-unit id="db7611d744e4dcdca549d1fbd74911098f577c62" translate="yes" xml:space="preserve">
          <source>Whether the mask of a masked array is hard or soft is determined by its &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt;&lt;code&gt;hardmask&lt;/code&gt;&lt;/a&gt; property. &lt;a href=&quot;numpy.ma.harden_mask#numpy.ma.harden_mask&quot;&gt;&lt;code&gt;harden_mask&lt;/code&gt;&lt;/a&gt; sets &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt;&lt;code&gt;hardmask&lt;/code&gt;&lt;/a&gt; to True.</source>
          <target state="translated">マスクされた配列のマスクがハードかソフトかは、その&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt; &lt;code&gt;hardmask&lt;/code&gt; &lt;/a&gt;プロパティによって決まります。&lt;a href=&quot;numpy.ma.harden_mask#numpy.ma.harden_mask&quot;&gt; &lt;code&gt;harden_mask&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt; &lt;code&gt;hardmask&lt;/code&gt; &lt;/a&gt;をTrueに設定します。</target>
        </trans-unit>
        <trans-unit id="b8f17f77435a0793df30f7927fd68842a3c16557" translate="yes" xml:space="preserve">
          <source>Whether the mask of a masked array is hard or soft is determined by its &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt;&lt;code&gt;hardmask&lt;/code&gt;&lt;/a&gt; property. &lt;a href=&quot;numpy.ma.soften_mask#numpy.ma.soften_mask&quot;&gt;&lt;code&gt;soften_mask&lt;/code&gt;&lt;/a&gt; sets &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt;&lt;code&gt;hardmask&lt;/code&gt;&lt;/a&gt; to False.</source>
          <target state="translated">マスクされた配列のマスクがハードかソフトかは、その&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt; &lt;code&gt;hardmask&lt;/code&gt; &lt;/a&gt;プロパティによって決まります。&lt;a href=&quot;numpy.ma.soften_mask#numpy.ma.soften_mask&quot;&gt; &lt;code&gt;soften_mask&lt;/code&gt; &lt;/a&gt;は、&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray.hardmask&quot;&gt; &lt;code&gt;hardmask&lt;/code&gt; &lt;/a&gt;をFalseに設定します。</target>
        </trans-unit>
        <trans-unit id="7f3e122a9b529992b197b46b09923f9ca3bd360b" translate="yes" xml:space="preserve">
          <source>Whether the mask of a masked array is hard or soft is determined by its &lt;code&gt;hardmask&lt;/code&gt; property. &lt;a href=&quot;#numpy.ma.harden_mask&quot;&gt;&lt;code&gt;harden_mask&lt;/code&gt;&lt;/a&gt; sets &lt;code&gt;hardmask&lt;/code&gt; to True.</source>
          <target state="translated">マスクされた配列のマスクがハードかソフトかは、その &lt;code&gt;hardmask&lt;/code&gt; プロパティによって決まります。&lt;a href=&quot;#numpy.ma.harden_mask&quot;&gt; &lt;code&gt;harden_mask&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;hardmask&lt;/code&gt; をTrueに設定します。</target>
        </trans-unit>
        <trans-unit id="01426ffe48ebece03a2678d8f2d6adc220725bf0" translate="yes" xml:space="preserve">
          <source>Whether the mask of a masked array is hard or soft is determined by its &lt;code&gt;hardmask&lt;/code&gt; property. &lt;a href=&quot;#numpy.ma.soften_mask&quot;&gt;&lt;code&gt;soften_mask&lt;/code&gt;&lt;/a&gt; sets &lt;code&gt;hardmask&lt;/code&gt; to False.</source>
          <target state="translated">マスクされた配列のマスクがハードかソフトかは、その &lt;code&gt;hardmask&lt;/code&gt; プロパティによって決まります。&lt;a href=&quot;#numpy.ma.soften_mask&quot;&gt; &lt;code&gt;soften_mask&lt;/code&gt; &lt;/a&gt;は、 &lt;code&gt;hardmask&lt;/code&gt; をFalseに設定します。</target>
        </trans-unit>
        <trans-unit id="ee9da79319e6c0e3169d3748cede2f00813142ab" translate="yes" xml:space="preserve">
          <source>Whether the output should be stored in row-major (C-style) or column-major (Fortran-style) order in memory.</source>
          <target state="translated">出力をメモリ内で行・長(Cスタイル)または列・長(Fortranスタイル)のどちらの順序で格納するか。</target>
        </trans-unit>
        <trans-unit id="92d233bcb4830096541e589ec9f4a1ebacbac55b" translate="yes" xml:space="preserve">
          <source>Whether the sample is shuffled when sampling without replacement. Default is True, False provides a speedup.</source>
          <target state="translated">置換せずにサンプリングするときにサンプルをシャッフルするかどうか。デフォルトはTrueで、Falseの場合は高速化されます。</target>
        </trans-unit>
        <trans-unit id="da175c30578215af592bdb3c0536af196e7c720a" translate="yes" xml:space="preserve">
          <source>Whether the sample is with or without replacement</source>
          <target state="translated">サンプルの交換の有無</target>
        </trans-unit>
        <trans-unit id="f7a933f70353e3ad1ecdef0da587770caa9c5376" translate="yes" xml:space="preserve">
          <source>Whether to automatically strip white spaces from the variables.</source>
          <target state="translated">変数から自動的にホワイトスペースを取り除くかどうか。</target>
        </trans-unit>
        <trans-unit id="442a6c8414200886a8391269e4fbd9de7abf0966" translate="yes" xml:space="preserve">
          <source>Whether to collapse a mask full of False to &lt;code&gt;nomask&lt;/code&gt;.</source>
          <target state="translated">Falseでいっぱいのマスクを &lt;code&gt;nomask&lt;/code&gt; に縮小するかどうか。</target>
        </trans-unit>
        <trans-unit id="4050a74967f8f69856c2fbd0e3e619300a40e0f0" translate="yes" xml:space="preserve">
          <source>Whether to collapse a mask full of False to nomask</source>
          <target state="translated">ノマスクにフォルスでいっぱいのマスクを崩すかどうか</target>
        </trans-unit>
        <trans-unit id="c052f30967f49a9b943b88084eb17b8a3c940aea" translate="yes" xml:space="preserve">
          <source>Whether to combine &lt;code&gt;mask&lt;/code&gt; with the mask of the input data, if any (True), or to use only &lt;code&gt;mask&lt;/code&gt; for the output (False). Default is True.</source>
          <target state="translated">マスクを入力データの &lt;code&gt;mask&lt;/code&gt; と組み合わせるかどうか（ある場合）（True）、または出力に &lt;code&gt;mask&lt;/code&gt; のみを使用するか（False）。デフォルトはTrueです。</target>
        </trans-unit>
        <trans-unit id="eddff56e50fafc8cb9b530fe24b021eae68e3c92" translate="yes" xml:space="preserve">
          <source>Whether to compare NaN&amp;rsquo;s as equal. If True, NaN&amp;rsquo;s in &lt;code&gt;a&lt;/code&gt; will be considered equal to NaN&amp;rsquo;s in &lt;code&gt;b&lt;/code&gt; in the output array.</source>
          <target state="translated">NaNを等しいと比較するかどうか。Trueの場合は、NaNの中でのNaNのと同等とみなされる &lt;code&gt;b&lt;/code&gt; 出力配列インチ &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="10fe679c9d66f1cf6761f7d27d834a6040161f28" translate="yes" xml:space="preserve">
          <source>Whether to copy the input data (True), or to use a reference instead. Default is False.</source>
          <target state="translated">入力データをコピーするか(True)、代わりに参照を使用するか。デフォルトはFalseです。</target>
        </trans-unit>
        <trans-unit id="5fe509663979cfcace796559b2e65ed21543a41a" translate="yes" xml:space="preserve">
          <source>Whether to create a copy of &lt;code&gt;x&lt;/code&gt; (True) or to replace values in-place (False). The in-place operation only occurs if casting to an array does not require a copy. Default is True.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; のコピーを作成するか（True）、値をインプレースで置換するか（False）。インプレース操作は、配列へのキャストにコピーが必要ない場合にのみ発生します。デフォルトはTrueです。</target>
        </trans-unit>
        <trans-unit id="cb3a38e23cd94158d3fb92938c528fabce71a1cc" translate="yes" xml:space="preserve">
          <source>Whether to force compression of an empty mask. Default is True.</source>
          <target state="translated">空のマスクを強制的に圧縮するかどうか。デフォルトはTrueです。</target>
        </trans-unit>
        <trans-unit id="954b794bdd577e9151cce4c13b30b4547a80cce1" translate="yes" xml:space="preserve">
          <source>Whether to force the output to be a &lt;code&gt;pure&lt;/code&gt; ndarray (False) or to return a subclass of ndarray if appropriate (True, default).</source>
          <target state="translated">出力を強制的に &lt;code&gt;pure&lt;/code&gt; ndarray（False）にするか、必要に応じてndarrayのサブクラスを返すか（True、デフォルト）。</target>
        </trans-unit>
        <trans-unit id="e3b6a28cf1ae69fa2745e3bf0096fffb2681b0f4" translate="yes" xml:space="preserve">
          <source>Whether to import sub-modules in packages. Default is True.</source>
          <target state="translated">パッケージのサブモジュールをインポートするかどうか。デフォルトはTrueです。</target>
        </trans-unit>
        <trans-unit id="560758d583a48f61c5f8c924a74ada989d313f2e" translate="yes" xml:space="preserve">
          <source>Whether to raise an AssertionError when a doctest fails. Default is True.</source>
          <target state="translated">doctest が失敗したときに AssertionError を発生させるかどうか。デフォルトはTrueです。</target>
        </trans-unit>
        <trans-unit id="9da66ee12a4e35260c8d865d944cf7e0c6ffd0fb" translate="yes" xml:space="preserve">
          <source>Whether to re-generate the docstring cache. Default is False.</source>
          <target state="translated">docstringキャッシュを再生成するかどうか。デフォルトは False です。</target>
        </trans-unit>
        <trans-unit id="fe2c4419241a17141e2305c4b8dcba97409a61c9" translate="yes" xml:space="preserve">
          <source>Whether to return a copy of &lt;code&gt;m&lt;/code&gt; (True) or &lt;code&gt;m&lt;/code&gt; itself (False).</source>
          <target state="translated">&lt;code&gt;m&lt;/code&gt; （True）または &lt;code&gt;m&lt;/code&gt; 自体（False）のコピーを返すかどうか。</target>
        </trans-unit>
        <trans-unit id="d8e552974363003f8c300f894365cd71e993d9cb" translate="yes" xml:space="preserve">
          <source>Whether to return a copy of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; のコピーを返すかどうか。</target>
        </trans-unit>
        <trans-unit id="037c91325bbf0eb3057c152573c6cd848efe298f" translate="yes" xml:space="preserve">
          <source>Whether to return a subclass of &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt;&lt;code&gt;MaskedArray&lt;/code&gt;&lt;/a&gt; if possible (True) or a plain &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt;&lt;code&gt;MaskedArray&lt;/code&gt;&lt;/a&gt;. Default is True.</source>
          <target state="translated">&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt; &lt;code&gt;MaskedArray&lt;/code&gt; &lt;/a&gt;サブクラスを返すか（True）、プレーンな&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt; &lt;code&gt;MaskedArray&lt;/code&gt; か&lt;/a&gt;。デフォルトはTrueです。</target>
        </trans-unit>
        <trans-unit id="0ae760f9c4f41fa0fbb26a77403a1c22ab55b573" translate="yes" xml:space="preserve">
          <source>Whether to show the sign for positive values.</source>
          <target state="translated">正の値の場合は符号を表示するかどうか。</target>
        </trans-unit>
        <trans-unit id="1b8be26bfc8b0e89327240212310466b2cf75c4c" translate="yes" xml:space="preserve">
          <source>Whether to shrink &lt;code&gt;m&lt;/code&gt; to &lt;code&gt;nomask&lt;/code&gt; if all its values are False.</source>
          <target state="translated">すべての値がFalseの場合、 &lt;code&gt;m&lt;/code&gt; を &lt;code&gt;nomask&lt;/code&gt; に縮小するかどうか。</target>
        </trans-unit>
        <trans-unit id="3178cfeee0adef6924aedc74760260f82717be37" translate="yes" xml:space="preserve">
          <source>Whether to shrink the output to &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.nomask&quot;&gt;&lt;code&gt;nomask&lt;/code&gt;&lt;/a&gt; if all its values are False. Defaults to True.</source>
          <target state="translated">すべての値がFalseの場合に出力を&lt;a href=&quot;../maskedarray.baseclass#numpy.ma.nomask&quot;&gt; &lt;code&gt;nomask&lt;/code&gt; &lt;/a&gt;に縮小するかどうか。デフォルトはTrueです。</target>
        </trans-unit>
        <trans-unit id="d9db91db6f9220d3637c22a670ce2fece1ba8892" translate="yes" xml:space="preserve">
          <source>Whether to store matrix in C- or Fortran-contiguous order, default is &amp;lsquo;C&amp;rsquo;.</source>
          <target state="translated">行列をCまたはFortranの連続した順序で格納するかどうか、デフォルトは 'C'です。</target>
        </trans-unit>
        <trans-unit id="f47e8ef32095f56286465eeec2aded155a972a62" translate="yes" xml:space="preserve">
          <source>Whether to store multi-dimensional data in row-major (C-style) or column-major (Fortran-style) order in memory.</source>
          <target state="translated">多次元データを行・長(Cスタイル)または列・長(Fortranスタイル)の順序でメモリに格納するかどうか。</target>
        </trans-unit>
        <trans-unit id="91845ffd71912999afe1ae31aecba568b6c77126" translate="yes" xml:space="preserve">
          <source>Whether to store multidimensional data in C- or Fortran-contiguous (row- or column-wise) order in memory.</source>
          <target state="translated">多次元データをC言語またはFortranで連続した順序(行順または列順)でメモリに格納するかどうか。</target>
        </trans-unit>
        <trans-unit id="dab7c3794a646540de7acd62a59e0fb24a52ca93" translate="yes" xml:space="preserve">
          <source>Whether to store the result in C- or Fortran-contiguous order, default is &amp;lsquo;C&amp;rsquo;.</source>
          <target state="translated">結果をCまたはFortranの連続した順序で格納するかどうか、デフォルトは 'C'です。</target>
        </trans-unit>
        <trans-unit id="bfc4130ee9478e47e13d28dd5c7bbedd301de36f" translate="yes" xml:space="preserve">
          <source>Whether to use a copy of &lt;code&gt;a&lt;/code&gt; (True) or to fix &lt;code&gt;a&lt;/code&gt; in place (False). Default is True.</source>
          <target state="translated">かどうかは、のコピーを使用するには（真の）または修正する場所（偽）で。デフォルトはTrueです。 &lt;code&gt;a&lt;/code&gt; &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aebefd02adf3850b379921c027ca5f73a9e89812" translate="yes" xml:space="preserve">
          <source>Whether to use a hard mask or not. With a hard mask, masked values cannot be unmasked. Default is False.</source>
          <target state="translated">ハードマスクを使用するかどうか。ハードマスクを使用すると、マスクされた値はマスク解除できません。デフォルトは False です。</target>
        </trans-unit>
        <trans-unit id="5e961f550eaad97e3dafff75ba96d8df26719652" translate="yes" xml:space="preserve">
          <source>Whether to use row-major (&amp;lsquo;C&amp;rsquo;) or column-major (&amp;lsquo;FORTRAN&amp;rsquo;) memory representation. Default is &amp;lsquo;C&amp;rsquo;.</source>
          <target state="translated">行優先（ 'C'）または列優先（ 'FORTRAN'）のメモリ表現を使用するかどうか。デフォルトは「C」です。</target>
        </trans-unit>
        <trans-unit id="cc497678cbe7ddcd1c3ae01eed475a06c838ec4e" translate="yes" xml:space="preserve">
          <source>Whether to use row-major (C-style) or column-major (Fortran-style) memory representation. Defaults to &amp;lsquo;C&amp;rsquo;.</source>
          <target state="translated">行優先（Cスタイル）または列優先（Fortranスタイル）のメモリ表現を使用するかどうか。デフォルトは「C」です。</target>
        </trans-unit>
        <trans-unit id="25195d8226c7af7ee557736e882797435cd7c507" translate="yes" xml:space="preserve">
          <source>Which columns to read, with 0 being the first. For example, &lt;code&gt;usecols = (1, 4, 5)&lt;/code&gt; will extract the 2nd, 5th and 6th columns.</source>
          <target state="translated">読み取る列。最初は0です。たとえば、 &lt;code&gt;usecols = (1, 4, 5)&lt;/code&gt; は2番目、5番目、6番目の列を抽出します。</target>
        </trans-unit>
        <trans-unit id="ef9e92c2b540fbcf01177bb037dde03eb96de271" translate="yes" xml:space="preserve">
          <source>Which columns to read, with 0 being the first. For example, &lt;code&gt;usecols = (1,4,5)&lt;/code&gt; will extract the 2nd, 5th and 6th columns. The default, None, results in all columns being read.</source>
          <target state="translated">読み取る列。最初は0です。たとえば、 &lt;code&gt;usecols = (1,4,5)&lt;/code&gt; は、2番目、5番目、6番目の列を抽出します。デフォルトのNoneでは、すべての列が読み取られます。</target>
        </trans-unit>
        <trans-unit id="13f9686c4e3a41f3f30b2ea464209b867b694965" translate="yes" xml:space="preserve">
          <source>Which gives more easily comparable results than using separate bins for each histogram:</source>
          <target state="translated">これは、ヒストグラムごとに別々のビンを使用するよりも、より簡単に比較可能な結果を提供します。</target>
        </trans-unit>
        <trans-unit id="a1a80f0fc41db0ca1b3afb508f48229204eeb48b" translate="yes" xml:space="preserve">
          <source>Which gives the polynomial &lt;code&gt;p&lt;/code&gt; in Chebyshev form. This works because</source>
          <target state="translated">これは、チェビシェフ形式で多項式 &lt;code&gt;p&lt;/code&gt; を与えます。これは機能します</target>
        </trans-unit>
        <trans-unit id="559b97a21645e20b96438fa99ddc59b3a9a0af7c" translate="yes" xml:space="preserve">
          <source>While a C-style and Fortran-style contiguous array, which has the corresponding flags set, can be addressed with the above strides, the actual strides may be different. This can happen in two cases:</source>
          <target state="translated">対応するフラグが設定されているCスタイルとFortranスタイルの連続配列は、上記のストライドでアドレスを指定することができますが、実際のストライドは異なる場合があります。これは次の2つのケースで起こり得ます。</target>
        </trans-unit>
        <trans-unit id="d1df1b5a0658c69d8a413e038e320119a5eacba2" translate="yes" xml:space="preserve">
          <source>While the nonzero values can be obtained with &lt;code&gt;a[nonzero(a)]&lt;/code&gt;, it is recommended to use &lt;code&gt;x[x.astype(bool)]&lt;/code&gt; or &lt;code&gt;x[x != 0]&lt;/code&gt; instead, which will correctly handle 0-d arrays.</source>
          <target state="translated">非ゼロ値は &lt;code&gt;x[x.astype(bool)]&lt;/code&gt; &lt;code&gt;a[nonzero(a)]&lt;/code&gt; で取得できますが、代わりにx [x.astype（bool）]または &lt;code&gt;x[x != 0]&lt;/code&gt; を使用することをお勧めします。これにより、0-d配列が正しく処理されます。</target>
        </trans-unit>
        <trans-unit id="95abe15b68efd387eb8c7edc6a4c57dd87ccf623" translate="yes" xml:space="preserve">
          <source>While we&amp;rsquo;re at it, let&amp;rsquo;s also introduce the &amp;lsquo;no_broadcast&amp;rsquo; flag, which will prevent the output from being broadcast. This is important, because we only want one input value for each output. Aggregating more than one input value is a reduction operation which requires special handling. It would already raise an error because reductions must be explicitly enabled in an iterator flag, but the error message that results from disabling broadcasting is much more understandable for end-users. To see how to generalize the square function to a reduction, look at the sum of squares function in the section about Cython.</source>
          <target state="translated">ここでは、出力がブロードキャストされないようにする 'no_broadcast'フラグも導入しましょう。各出力に必要な入力値は1つだけなので、これは重要です。複数の入力値を集約することは、特別な処理を必要とするリダクション操作です。削減はイテレータフラグで明示的に有効にする必要があるため、既にエラーが発生しますが、ブロードキャストを無効にしたことによるエラーメッセージは、エンドユーザーにとってよりわかりやすくなっています。二乗関数を縮約に一般化する方法を確認するには、Cythonに関するセクションの二乗和関数を参照してください。</target>
        </trans-unit>
        <trans-unit id="fdf453fd16b5200319b11da91be27d0c70481271" translate="yes" xml:space="preserve">
          <source>White spaces are ignored.</source>
          <target state="translated">ホワイトスペースは無視されます。</target>
        </trans-unit>
        <trans-unit id="7da3ad366450168b425d91b2ecc5364e5b9f6133" translate="yes" xml:space="preserve">
          <source>Why is There a Second File?</source>
          <target state="translated">なぜ2つ目のファイルがあるのか?</target>
        </trans-unit>
        <trans-unit id="a5faa59dd442eb9f9b067a10198b95685727452a" translate="yes" xml:space="preserve">
          <source>Width of string to left-fill elements in &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">左フィル要素に文字列の幅。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a87a9df3bc292d00475af99a19cfb5bace676377" translate="yes" xml:space="preserve">
          <source>Wikipedia page: &lt;a href=&quot;https://en.wikipedia.org/wiki/Trapezoidal_rule&quot;&gt;https://en.wikipedia.org/wiki/Trapezoidal_rule&lt;/a&gt;</source>
          <target state="translated">ウィキペディアのページ：&lt;a href=&quot;https://en.wikipedia.org/wiki/Trapezoidal_rule&quot;&gt;https&lt;/a&gt; : //en.wikipedia.org/wiki/Trapezoidal_rule</target>
        </trans-unit>
        <trans-unit id="f57f881086e09b1ae09664bdf831c36a611c6436" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Binomial distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Binomial_distribution&quot;&gt;https://en.wikipedia.org/wiki/Binomial_distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「二項分布」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Binomial_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Binomial_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="06cf28156832f9d8c24f1184dfe95f4c17b24eb4" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Cauchy distribution&amp;rdquo; &lt;a href=&quot;https://en.wikipedia.org/wiki/Cauchy_distribution&quot;&gt;https://en.wikipedia.org/wiki/Cauchy_distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「Cauchyディストリビューション」&lt;a href=&quot;https://en.wikipedia.org/wiki/Cauchy_distribution&quot;&gt;https://en.wikipedia.org/wiki/Cauchy_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5f4dafaf375cb5ca788c45f1e6be90dcf059029c" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Convolution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Convolution&quot;&gt;https://en.wikipedia.org/wiki/Convolution&lt;/a&gt;</source>
          <target state="translated">Wikipedia、「Convolution」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Convolution&quot;&gt;https：//en.wikipedia.org/wiki/Convolution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aefec7a4eb1a5aecabb180014fe85015da54a986" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Curve fitting&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Curve_fitting&quot;&gt;https://en.wikipedia.org/wiki/Curve_fitting&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「曲線フィッティング」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Curve_fitting&quot;&gt;https：//en.wikipedia.org/wiki/Curve_fitting&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ceebe5e149c9b6f7b481dab32a8b80c5a5e67177" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Dirichlet distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Dirichlet_distribution&quot;&gt;https://en.wikipedia.org/wiki/Dirichlet_distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「ディリクレ分布」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Dirichlet_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Dirichlet_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c274fb3e94d194d553ba10a5c9ba49ab92ab9ab3" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Exponential distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Exponential_distribution&quot;&gt;https://en.wikipedia.org/wiki/Exponential_distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「指数分布」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Exponential_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Exponential_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e0748ca7a20f6367685397b634c58b22d1101a55" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Exponential function&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Exponential_function&quot;&gt;https://en.wikipedia.org/wiki/Exponential_function&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「指数関数」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Exponential_function&quot;&gt;https：//en.wikipedia.org/wiki/Exponential_function&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="450a7618a7ae64b3deba48000f4698be90e329a4" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;F-distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/F-distribution&quot;&gt;https://en.wikipedia.org/wiki/F-distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「F-distribution」、&lt;a href=&quot;https://en.wikipedia.org/wiki/F-distribution&quot;&gt;https：//en.wikipedia.org/wiki/F-distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="17b148f03642613eb714110e8ca6f8c433f95ee5" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Gamma distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Gamma_distribution&quot;&gt;https://en.wikipedia.org/wiki/Gamma_distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「ガンマ分布」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Gamma_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Gamma_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="607958a0e56c238af4c16a4ba8a36ed9dd6aae60" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Hyperbolic function&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Hyperbolic_function&quot;&gt;https://en.wikipedia.org/wiki/Hyperbolic_function&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「双曲線関数」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Hyperbolic_function&quot;&gt;https：//en.wikipedia.org/wiki/Hyperbolic_function&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b2ed497979708d30048971b5f912f3a976a07c07" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Hypergeometric distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Hypergeometric_distribution&quot;&gt;https://en.wikipedia.org/wiki/Hypergeometric_distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「超幾何分布」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Hypergeometric_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Hypergeometric_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6c41ede2dc056083c46b6379a06aec4ce640792" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Inverse Gaussian distribution&amp;rdquo; &lt;a href=&quot;https://en.wikipedia.org/wiki/Inverse_Gaussian_distribution&quot;&gt;https://en.wikipedia.org/wiki/Inverse_Gaussian_distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「逆ガウス分布」&lt;a href=&quot;https://en.wikipedia.org/wiki/Inverse_Gaussian_distribution&quot;&gt;https://en.wikipedia.org/wiki/Inverse_Gaussian_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c81f68efd7be19a13fb16b9d3ede8e0916b2b3ba" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Inverse hyperbolic function&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Arccosh&quot;&gt;https://en.wikipedia.org/wiki/Arccosh&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「逆双曲線関数」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Arccosh&quot;&gt;https：//en.wikipedia.org/wiki/Arccosh&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="788ea2b2b4739c5aba7340cb8614d021cf776477" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Inverse hyperbolic function&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Arcsinh&quot;&gt;https://en.wikipedia.org/wiki/Arcsinh&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「逆双曲線関数」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Arcsinh&quot;&gt;https：//en.wikipedia.org/wiki/Arcsinh&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7afed20bd82634dc688b205c679d736b6a3ca9fd" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Inverse hyperbolic function&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Arctanh&quot;&gt;https://en.wikipedia.org/wiki/Arctanh&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「逆双曲線関数」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Arctanh&quot;&gt;https：//en.wikipedia.org/wiki/Arctanh&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8cbf65d4c8a1edb6485c9090716aa502b1cad498" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Laplace distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Laplace_distribution&quot;&gt;https://en.wikipedia.org/wiki/Laplace_distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「ラプラス分布」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Laplace_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Laplace_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a5dafa467113c3ca3efc06f2332310e05c7a2741" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Logarithm&amp;rdquo;. &lt;a href=&quot;https://en.wikipedia.org/wiki/Logarithm&quot;&gt;https://en.wikipedia.org/wiki/Logarithm&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「対数」。&lt;a href=&quot;https://en.wikipedia.org/wiki/Logarithm&quot;&gt;https://en.wikipedia.org/wiki/Logarithm&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c49c2d4eec5ab9e21b7777f19f27c237fceb82c5" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Logarithmic distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Logarithmic_distribution&quot;&gt;https://en.wikipedia.org/wiki/Logarithmic_distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「対数分布」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Logarithmic_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Logarithmic_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="78ccdc5f379af6bc4c7ea04cc13613370465bc4d" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Logistic-distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Logistic_distribution&quot;&gt;https://en.wikipedia.org/wiki/Logistic_distribution&lt;/a&gt;</source>
          <target state="translated">Wikipedia、「Logistic-distribution」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Logistic_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Logistic_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4c3fd20f148f2b77555334569014216015267361" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Negative binomial distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Negative_binomial_distribution&quot;&gt;https://en.wikipedia.org/wiki/Negative_binomial_distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「負の二項分布」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Negative_binomial_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Negative_binomial_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="785913c64c1118d2e5699ad155c8010ddb5608e2" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Noncentral F-distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Noncentral_F-distribution&quot;&gt;https://en.wikipedia.org/wiki/Noncentral_F-distribution&lt;/a&gt;</source>
          <target state="translated">Wikipedia、「Noncentral F-distribution」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Noncentral_F-distribution&quot;&gt;https：//en.wikipedia.org/wiki/Noncentral_F-distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="290d1f296088408d1c3d2c95c7a7428e7d2c6df3" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Noncentral chi-squared distribution&amp;rdquo; &lt;a href=&quot;https://en.wikipedia.org/wiki/Noncentral_chi-squared_distribution&quot;&gt;https://en.wikipedia.org/wiki/Noncentral_chi-squared_distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「非中央カイ二乗分布」&lt;a href=&quot;https://en.wikipedia.org/wiki/Noncentral_chi-squared_distribution&quot;&gt;https://en.wikipedia.org/wiki/Noncentral_chi-squared_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f54672c52ce6e2a5669a3fc7c140d35832003af5" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Normal distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Normal_distribution&quot;&gt;https://en.wikipedia.org/wiki/Normal_distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「通常の配布」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Normal_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Normal_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="47b80170417ddd59eaf50cda77d4edfc322816d8" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Pareto distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Pareto_distribution&quot;&gt;https://en.wikipedia.org/wiki/Pareto_distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「パレート分布」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Pareto_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Pareto_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d689426c6cd7a9b7cf6ef5d58b51175bf540f33b" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Poisson distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Poisson_distribution&quot;&gt;https://en.wikipedia.org/wiki/Poisson_distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「ポアソン分布」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Poisson_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Poisson_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8adc5c562751b6b393b3aa2c35d2e2c7be11d14b" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Poisson process&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Poisson_process&quot;&gt;https://en.wikipedia.org/wiki/Poisson_process&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「ポアソンプロセス」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Poisson_process&quot;&gt;https：//en.wikipedia.org/wiki/Poisson_process&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5ca57768f5ed62a15abd4e259a3842bfc684623e" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Polynomial interpolation&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Polynomial_interpolation&quot;&gt;https://en.wikipedia.org/wiki/Polynomial_interpolation&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「多項式補間」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Polynomial_interpolation&quot;&gt;https：//en.wikipedia.org/wiki/Polynomial_interpolation&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ca489fd77451dbec195b0cb37e2326fd572ee535" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Rayleigh distribution&amp;rdquo; &lt;a href=&quot;https://en.wikipedia.org/wiki/Rayleigh_distribution&quot;&gt;https://en.wikipedia.org/wiki/Rayleigh_distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「レイリー配布」&lt;a href=&quot;https://en.wikipedia.org/wiki/Rayleigh_distribution&quot;&gt;https://en.wikipedia.org/wiki/Rayleigh_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="56ead22f9041996687e49f69c8aa068b4de6264b" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Sinc function&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Sinc_function&quot;&gt;https://en.wikipedia.org/wiki/Sinc_function&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「Sinc関数」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Sinc_function&quot;&gt;https：//en.wikipedia.org/wiki/Sinc_function&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bdeeaa545061fb4a54e4c2ef8adfce392d92d540" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Student&amp;rsquo;s t-distribution&amp;rdquo; &lt;a href=&quot;https://en.wikipedia.org/wiki/Student's_t-distribution&quot;&gt;https://en.wikipedia.org/wiki/Student&amp;rsquo;s_t-distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「Student's t-distribution」&lt;a href=&quot;https://en.wikipedia.org/wiki/Student's_t-distribution&quot;&gt;https://en.wikipedia.org/wiki/Student's_t-distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="890688a22e8725c7cf1acbafe1abacdd0f27f3f0" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Triangular distribution&amp;rdquo; &lt;a href=&quot;https://en.wikipedia.org/wiki/Triangular_distribution&quot;&gt;https://en.wikipedia.org/wiki/Triangular_distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「三角分布」&lt;a href=&quot;https://en.wikipedia.org/wiki/Triangular_distribution&quot;&gt;https://en.wikipedia.org/wiki/Triangular_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3d2b813725fc8f5761f54e225edc22f4a2afa8f7" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Two&amp;rsquo;s complement&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Two's_complement&quot;&gt;https://en.wikipedia.org/wiki/Two&amp;rsquo;s_complement&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「2の補数」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Two's_complement&quot;&gt;https：//en.wikipedia.org/wiki/Two's_complement&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ecbb6d74623f82d0937cf4a5246298d1b6f5e329" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Weibull distribution&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Weibull_distribution&quot;&gt;https://en.wikipedia.org/wiki/Weibull_distribution&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「ワイブル分布」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Weibull_distribution&quot;&gt;https：//en.wikipedia.org/wiki/Weibull_distribution&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="98885a7cf6a7f9d6ba5424eda905db3584405b75" translate="yes" xml:space="preserve">
          <source>Wikipedia, &amp;ldquo;Window function&amp;rdquo;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Window_function&quot;&gt;https://en.wikipedia.org/wiki/Window_function&lt;/a&gt;</source>
          <target state="translated">ウィキペディア、「ウィンドウ関数」、&lt;a href=&quot;https://en.wikipedia.org/wiki/Window_function&quot;&gt;https：//en.wikipedia.org/wiki/Window_function&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="49c2c96ddc19c930b5486ff7f81f0ce35e375ba2" translate="yes" xml:space="preserve">
          <source>Will install data-files to the locations:</source>
          <target state="translated">データファイルをその場所にインストールします。</target>
        </trans-unit>
        <trans-unit id="0c6212fef9bffd0b18c4eb2da8c005e9e5030130" translate="yes" xml:space="preserve">
          <source>Will need to add this in Python exposure</source>
          <target state="translated">Pythonの露出でこれを追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="77b99d58f8024a3322642cff8a7f3229ae7fe238" translate="yes" xml:space="preserve">
          <source>Window for the returned series. If None the class window is used. The default is None.</source>
          <target state="translated">返された系列のウィンドウ。Noneの場合はクラス・ウィンドウが使用されます。デフォルトは None です。</target>
        </trans-unit>
        <trans-unit id="cec65d78532248828b5443e4752a3df7fc4931aa" translate="yes" xml:space="preserve">
          <source>Window functions</source>
          <target state="translated">ウィンドウ機能</target>
        </trans-unit>
        <trans-unit id="e640f561d38642c76bd680b6e8d0ccf0fad3f32d" translate="yes" xml:space="preserve">
          <source>Window length.</source>
          <target state="translated">窓の長さ</target>
        </trans-unit>
        <trans-unit id="42e8204afc5c4121e8aabab0c8c2df383aac93dd" translate="yes" xml:space="preserve">
          <source>Window shape</source>
          <target state="translated">窓の形状</target>
        </trans-unit>
        <trans-unit id="ef32d19ad6db1a011986e848a81515a21a4878bf" translate="yes" xml:space="preserve">
          <source>Window to use for the returned series. The default value is the default class domain</source>
          <target state="translated">返された系列に使用するウィンドウ。デフォルト値はデフォルトのクラスドメイン</target>
        </trans-unit>
        <trans-unit id="092e83dcd0b17c063ad8bac69729a61bcd90390f" translate="yes" xml:space="preserve">
          <source>Window, see &lt;a href=&quot;numpy.polynomial.chebyshev.chebyshev.domain#numpy.polynomial.chebyshev.Chebyshev.domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt; for its use. The default value is [-1, 1].</source>
          <target state="translated">ウィンドウ、その使用については&lt;a href=&quot;numpy.polynomial.chebyshev.chebyshev.domain#numpy.polynomial.chebyshev.Chebyshev.domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt;を参照してください。デフォルト値は[-1、1]です。</target>
        </trans-unit>
        <trans-unit id="26cbe48bc40af2be9b95617385514366c179f8c5" translate="yes" xml:space="preserve">
          <source>Window, see &lt;a href=&quot;numpy.polynomial.hermite.hermite.domain#numpy.polynomial.hermite.Hermite.domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt; for its use. The default value is [-1, 1].</source>
          <target state="translated">ウィンドウ、その使用については&lt;a href=&quot;numpy.polynomial.hermite.hermite.domain#numpy.polynomial.hermite.Hermite.domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt;を参照してください。デフォルト値は[-1、1]です。</target>
        </trans-unit>
        <trans-unit id="e22365565e3904f47ab3840e3c565f4c9730ed9d" translate="yes" xml:space="preserve">
          <source>Window, see &lt;a href=&quot;numpy.polynomial.hermite_e.hermitee.domain#numpy.polynomial.hermite_e.HermiteE.domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt; for its use. The default value is [-1, 1].</source>
          <target state="translated">ウィンドウ、その使用については&lt;a href=&quot;numpy.polynomial.hermite_e.hermitee.domain#numpy.polynomial.hermite_e.HermiteE.domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt;を参照してください。デフォルト値は[-1、1]です。</target>
        </trans-unit>
        <trans-unit id="9ae30d11df20bd6d7701709f6c7a07d9a4c0c35b" translate="yes" xml:space="preserve">
          <source>Window, see &lt;a href=&quot;numpy.polynomial.laguerre.laguerre.domain#numpy.polynomial.laguerre.Laguerre.domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt; for its use. The default value is [0, 1].</source>
          <target state="translated">ウィンドウ、その使用については&lt;a href=&quot;numpy.polynomial.laguerre.laguerre.domain#numpy.polynomial.laguerre.Laguerre.domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt;を参照してください。デフォルト値は[0、1]です。</target>
        </trans-unit>
        <trans-unit id="f003de753cd9362865426af3e4947b5f99fe6dc8" translate="yes" xml:space="preserve">
          <source>Window, see &lt;a href=&quot;numpy.polynomial.legendre.legendre.domain#numpy.polynomial.legendre.Legendre.domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt; for its use. The default value is [-1, 1].</source>
          <target state="translated">ウィンドウ、その使用については&lt;a href=&quot;numpy.polynomial.legendre.legendre.domain#numpy.polynomial.legendre.Legendre.domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt;を参照してください。デフォルト値は[-1、1]です。</target>
        </trans-unit>
        <trans-unit id="88febbc72ccac8a306fb0efe81d8a0b92e99d8f9" translate="yes" xml:space="preserve">
          <source>Window, see &lt;a href=&quot;numpy.polynomial.polynomial.polynomial.domain#numpy.polynomial.polynomial.Polynomial.domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt; for its use. The default value is [-1, 1].</source>
          <target state="translated">ウィンドウ、その使用については&lt;a href=&quot;numpy.polynomial.polynomial.polynomial.domain#numpy.polynomial.polynomial.Polynomial.domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt;を参照してください。デフォルト値は[-1、1]です。</target>
        </trans-unit>
        <trans-unit id="3a11c9632c71bf466541bc0b135a1a92817671b6" translate="yes" xml:space="preserve">
          <source>Windows 98, Python 2.1.1. Idle 0.8</source>
          <target state="translated">Windows 98、Python 2.1.1.1、Idle 0.8</target>
        </trans-unit>
        <trans-unit id="838d226af82740a98f0145b002fc6c84c21c7131" translate="yes" xml:space="preserve">
          <source>Windows Me Python 2.3(EE), Idle 1.0, PyCrust 0.7.2 Python 2.1.1 Idle 0.8</source>
          <target state="translated">Windows Me Python 2.3(EE),Idle 1.0,PyCrust 0.7.2 Python 2.1.1 Idle 0.8</target>
        </trans-unit>
        <trans-unit id="2d2f4a4fca6daeabadddf9bee05651305943de5c" translate="yes" xml:space="preserve">
          <source>Windows XP, Python 2.3.3</source>
          <target state="translated">Windows XP、Python 2.3.3</target>
        </trans-unit>
        <trans-unit id="32efd2d58393af190f568a67689ea6a3e549d28a" translate="yes" xml:space="preserve">
          <source>With a context manager:</source>
          <target state="translated">コンテキストマネージャーを使って</target>
        </trans-unit>
        <trans-unit id="f3558ac1d15b5a57abf53ea4474761a5d8cd7257" translate="yes" xml:space="preserve">
          <source>With a higher dimensional array the split is still along the first axis.</source>
          <target state="translated">高次元の配列では、分割は第1軸に沿って行われます。</target>
        </trans-unit>
        <trans-unit id="ee544b31e6fafc07fbb87de84c67e07d54295002" translate="yes" xml:space="preserve">
          <source>With a higher dimensional array the split is still along the second axis.</source>
          <target state="translated">高次元の配列では、分割は第2軸に沿って行われます。</target>
        </trans-unit>
        <trans-unit id="ab0ad2552c2290da0b4beaf3ab8b39ed880b7892" translate="yes" xml:space="preserve">
          <source>With a list of depth 1, &lt;a href=&quot;#numpy.block&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; can be used as &lt;a href=&quot;numpy.hstack#numpy.hstack&quot;&gt;&lt;code&gt;hstack&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">深さ1のリストでは、&lt;a href=&quot;#numpy.block&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;numpy.hstack#numpy.hstack&quot;&gt; &lt;code&gt;hstack&lt;/code&gt; &lt;/a&gt;として使用できます</target>
        </trans-unit>
        <trans-unit id="4a6ca14b02d06fe44564f452a8db5dc0b8887f51" translate="yes" xml:space="preserve">
          <source>With a list of depth 2, &lt;a href=&quot;#numpy.block&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; can be used in place of &lt;a href=&quot;numpy.vstack#numpy.vstack&quot;&gt;&lt;code&gt;vstack&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">深さ2のリストを使用すると、&lt;a href=&quot;numpy.vstack#numpy.vstack&quot;&gt; &lt;code&gt;vstack&lt;/code&gt; の&lt;/a&gt;代わりに&lt;a href=&quot;#numpy.block&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt;を使用できます。</target>
        </trans-unit>
        <trans-unit id="5f9ff7e20abf4e4beec43f72205b5efc96b3cabc" translate="yes" xml:space="preserve">
          <source>With a similar procedure the forward/backward approximations used for boundaries can be derived.</source>
          <target state="translated">同様の手順で、境界線に使用される前方/後方の近似を導出することができます。</target>
        </trans-unit>
        <trans-unit id="07af3a8001dd5a2cff9dc94ccf6ded3daafa9ec6" translate="yes" xml:space="preserve">
          <source>With instances:</source>
          <target state="translated">インスタンスで</target>
        </trans-unit>
        <trans-unit id="98601db3737fbbb6544e879545b48b394db52bb5" translate="yes" xml:space="preserve">
          <source>With optional &lt;code&gt;start&lt;/code&gt;, test beginning at that position. With optional &lt;code&gt;end&lt;/code&gt;, stop comparing at that position.</source>
          <target state="translated">オプションの &lt;code&gt;start&lt;/code&gt; では、その位置からテストを開始します。オプションの &lt;code&gt;end&lt;/code&gt; を使用すると、その位置で比較を停止します。</target>
        </trans-unit>
        <trans-unit id="c2d93c630b90cc0cf1d738f44caa66baf4d85928" translate="yes" xml:space="preserve">
          <source>With types:</source>
          <target state="translated">タイプがあります。</target>
        </trans-unit>
        <trans-unit id="5297c5a4978350f9e16a1aab9a51984e592036fa" translate="yes" xml:space="preserve">
          <source>Within a compiled Python module, &lt;code&gt;import_array()&lt;/code&gt; should only get called once. This could be in a C/C++ file that you have written and is linked to the module. If this is the case, then none of your interface files should &lt;code&gt;#define SWIG_FILE_WITH_INIT&lt;/code&gt; or call &lt;code&gt;import_array()&lt;/code&gt;. Or, this initialization call could be in a wrapper file generated by &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; from an interface file that has the &lt;code&gt;%init&lt;/code&gt; block as above. If this is the case, and you have more than one &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; interface file, then only one interface file should &lt;code&gt;#define SWIG_FILE_WITH_INIT&lt;/code&gt; and call &lt;code&gt;import_array()&lt;/code&gt;.</source>
          <target state="translated">コンパイルされたPythonモジュール内では、 &lt;code&gt;import_array()&lt;/code&gt; は一度だけ呼び出されます。これは、作成したC / C ++ファイル内にあり、モジュールにリンクされている可能性があります。この場合、どのインターフェースファイルも &lt;code&gt;#define SWIG_FILE_WITH_INIT&lt;/code&gt; を#defineしたり、 &lt;code&gt;import_array()&lt;/code&gt; を呼び出したりしてはなりません。または、この初期化呼び出しは、上記の &lt;code&gt;%init&lt;/code&gt; ブロックを持つインターフェースファイルから&lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt;によって生成されたラッパーファイル内にある可能性があります。これが &lt;code&gt;#define SWIG_FILE_WITH_INIT&lt;/code&gt; 、複数の&lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt;インターフェースファイルがある場合は、1つのインターフェースファイルだけが#define SWIG_FILE_WITH_INITを呼び出して &lt;code&gt;import_array()&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="42a24f4738db07788648f7de55bbb8493bc76610" translate="yes" xml:space="preserve">
          <source>Within these test methods, &lt;code&gt;assert_()&lt;/code&gt; and related functions are used to test whether a certain assumption is valid. If the assertion fails, the test fails. Note that the Python builtin &lt;code&gt;assert&lt;/code&gt; should not be used, because it is stripped during compilation with &lt;code&gt;-O&lt;/code&gt;.</source>
          <target state="translated">これらのテストメソッド内では、 &lt;code&gt;assert_()&lt;/code&gt; および関連する関数を使用して、特定の仮定が有効かどうかをテストします。アサーションが失敗すると、テストは失敗します。Python組み込み &lt;code&gt;assert&lt;/code&gt; は、 &lt;code&gt;-O&lt;/code&gt; を使用したコンパイル時に削除されるため、使用しないでください。</target>
        </trans-unit>
        <trans-unit id="2729aa84fd8dbce5d8f5065881c86da559d3b68c" translate="yes" xml:space="preserve">
          <source>Without the &lt;code&gt;np.ix_&lt;/code&gt; call or only the diagonal elements would be selected.</source>
          <target state="translated">なし &lt;code&gt;np.ix_&lt;/code&gt; コールまたは対角要素のみが選択されることになります。</target>
        </trans-unit>
        <trans-unit id="eb6d460982da286faa01241fe0e8688fe713d131" translate="yes" xml:space="preserve">
          <source>Working on the flattened array does not return slices along an axis but selects elements.</source>
          <target state="translated">平坦化された配列での作業は、軸に沿ったスライスを返すのではなく、要素を選択します。</target>
        </trans-unit>
        <trans-unit id="20669d5d64b568db66a362c01f09d0be2912bdf7" translate="yes" xml:space="preserve">
          <source>Works only with 2-D arrays at the moment.</source>
          <target state="translated">現時点では2次元アレイのみで動作します。</target>
        </trans-unit>
        <trans-unit id="10b18b3520a07a5cef88cf768f74798c3a76c969" translate="yes" xml:space="preserve">
          <source>Wrapper around &lt;code&gt;cPickle.load&lt;/code&gt; which accepts either a file-like object or a filename.</source>
          <target state="translated">ファイルのようなオブジェクトまたはファイル名のいずれかを受け入れる &lt;code&gt;cPickle.load&lt;/code&gt; のラッパー。</target>
        </trans-unit>
        <trans-unit id="9462c7fa9fecb835eb7e04e6564736baefd4da76" translate="yes" xml:space="preserve">
          <source>Wrapper functions to more user-friendly calling of certain math functions whose output data-type is different than the input data-type in certain domains of the input.</source>
          <target state="translated">出力データ型が入力の特定の領域で入力データ型と異なる出力データ型を持つ特定の数学関数の呼び出しをより使いやすくするためのラッパー関数。</target>
        </trans-unit>
        <trans-unit id="4a3455d09d842fa89e3426820a565b99b12203bd" translate="yes" xml:space="preserve">
          <source>Wraps an index to the valid range if it is out of bounds.</source>
          <target state="translated">インデックスが範囲外の場合は、有効な範囲にラップします。</target>
        </trans-unit>
        <trans-unit id="7a347606df979a4d48c841a72544818a00c72b80" translate="yes" xml:space="preserve">
          <source>Wraps the numpy array and sets the mask according to context.</source>
          <target state="translated">numpy配列をラップし、コンテキストに応じてマスクを設定します。</target>
        </trans-unit>
        <trans-unit id="e18273e50d37416e99772f5cab31d35dc76b18b6" translate="yes" xml:space="preserve">
          <source>Write any changes in the array to the file on disk.</source>
          <target state="translated">配列の変更をディスク上のファイルに書き込みます。</target>
        </trans-unit>
        <trans-unit id="17ca7c9b94fb6b9ea51995accba9353b9d7605ae" translate="yes" xml:space="preserve">
          <source>Write array to a file as text or binary (default).</source>
          <target state="translated">配列をテキストまたはバイナリとしてファイルに書き込みます(デフォルト)。</target>
        </trans-unit>
        <trans-unit id="b0ef5a1f165fa86b8ee546df97daa724c33481fa" translate="yes" xml:space="preserve">
          <source>Write data to memmap array:</source>
          <target state="translated">memmap配列にデータを書き込む。</target>
        </trans-unit>
        <trans-unit id="39de007639c1cf0174274b49579ea3af01d9afca" translate="yes" xml:space="preserve">
          <source>Write the contents of &lt;em&gt;self&lt;/em&gt; to the file pointer &lt;em&gt;fp&lt;/em&gt; in C-style contiguous fashion. Write the data as binary bytes if &lt;em&gt;sep&lt;/em&gt; is the string &amp;ldquo;&amp;rdquo;or &lt;code&gt;NULL&lt;/code&gt;. Otherwise, write the contents of &lt;em&gt;self&lt;/em&gt; as text using the &lt;em&gt;sep&lt;/em&gt; string as the item separator. Each item will be printed to the file. If the &lt;em&gt;format&lt;/em&gt; string is not &lt;code&gt;NULL&lt;/code&gt; or &amp;ldquo;&amp;rdquo;, then it is a Python print statement format string showing how the items are to be written.</source>
          <target state="translated">&lt;em&gt;self&lt;/em&gt;の内容をCスタイルの連続した方法でファイルポインター&lt;em&gt;fp&lt;/em&gt;に書き込みます。&lt;em&gt;sep&lt;/em&gt;が文字列&amp;ldquo;&amp;rdquo;または &lt;code&gt;NULL&lt;/code&gt; の場合、データをバイナリバイトとして書き込みます。それ以外の場合は、&lt;em&gt;sep&lt;/em&gt;文字列をアイテムの区切り文字として使用して、&lt;em&gt;self&lt;/em&gt;の内容をテキストとして書き込みます。各アイテムはファイルに出力されます。&lt;em&gt;フォーマット&lt;/em&gt;文字列が &lt;code&gt;NULL&lt;/code&gt; でも&amp;ldquo;&amp;rdquo;でもない場合、それはアイテムがどのように書き込まれるかを示すPython印刷ステートメントフォーマット文字列です。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7d00c80b2825b910b28f217d40888491f74cea96" translate="yes" xml:space="preserve">
          <source>Writeable returned arrays (since version 1.10.0):</source>
          <target state="translated">書き込み可能な戻り値の配列(バージョン 1.10.0 以降)。</target>
        </trans-unit>
        <trans-unit id="6ebe08ad44f2f2a207e761b2763be6cc2be06253" translate="yes" xml:space="preserve">
          <source>Writing tests for the &lt;code&gt;numpy.i&lt;/code&gt;&lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; interface file is a combinatorial headache. At present, 12 different data types are supported, each with 74 different argument signatures, for a total of 888 typemaps supported &amp;ldquo;out of the box&amp;rdquo;. Each of these typemaps, in turn, might require several unit tests in order to verify expected behavior for both proper and improper inputs. Currently, this results in more than 1,000 individual unit tests executed when &lt;code&gt;make test&lt;/code&gt; is run in the &lt;code&gt;numpy/tools/swig&lt;/code&gt; subdirectory.</source>
          <target state="translated">&lt;code&gt;numpy.i&lt;/code&gt; &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt;インターフェースファイルのテストを記述することは、組み合わせの頭痛の種です。現在、12の異なるデータ型がサポートされており、それぞれに74の異なる引数シグネチャがあり、合計888個のタイプマップが「そのまま」サポートされます。これらの各タイプマップは、適切な入力と不適切な入力の両方で予想される動作を検証するために、いくつかの単体テストを必要とする場合があります。現在、 &lt;code&gt;numpy/tools/swig&lt;/code&gt; サブディレクトリで &lt;code&gt;make test&lt;/code&gt; を実行すると、1,000以上の個別のユニットテストが実行されます。</target>
        </trans-unit>
        <trans-unit id="aecfd6c8b6bdc8850ec5e6c24472a391088658d3" translate="yes" xml:space="preserve">
          <source>Writing typemaps can be a bit nonintuitive. If you have specific questions about writing &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; typemaps for NumPy, the developers of &lt;code&gt;numpy.i&lt;/code&gt; do monitor the &lt;a href=&quot;mailto:Numpy-discussion%40python.org&quot;&gt;Numpy-discussion&lt;/a&gt; and &lt;a href=&quot;mailto:Swig-user%40lists.sourceforge.net&quot;&gt;Swig-user&lt;/a&gt; mail lists.</source>
          <target state="translated">タイプマップの記述は少し直感的ではない場合があります。NumPyの&lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt;タイプマップの記述について具体的な質問がある場合、 &lt;code&gt;numpy.i&lt;/code&gt; の開発者は&lt;a href=&quot;mailto:Numpy-discussion%40python.org&quot;&gt;Numpy-discussion&lt;/a&gt;およびSwig &lt;a href=&quot;mailto:Swig-user%40lists.sourceforge.net&quot;&gt;-user&lt;/a&gt;メールリストを監視します。</target>
        </trans-unit>
        <trans-unit id="67b3075df8e687d02e42240f00e9c97b2d568182" translate="yes" xml:space="preserve">
          <source>Writing your own tests</source>
          <target state="translated">自分のテストを書く</target>
        </trans-unit>
        <trans-unit id="23eb4d3f4155395a74e9d534f97ff4c1908f5aac" translate="yes" xml:space="preserve">
          <source>Y</source>
          <target state="translated">Y</target>
        </trans-unit>
        <trans-unit id="3e44498549b3ccfc159cdee6bdb9318868914b00" translate="yes" xml:space="preserve">
          <source>Yet another possibility is to use any of the following functions:</source>
          <target state="translated">さらに別の可能性として、以下の関数のいずれかを使用することができます。</target>
        </trans-unit>
        <trans-unit id="d4a5fe8b97704af411fc68344f43f8175b5a17c2" translate="yes" xml:space="preserve">
          <source>You can also put the common two last lines into an extension-local header file as long as you make sure that NO_IMPORT_ARRAY is #defined before #including that file.</source>
          <target state="translated">また、共通の最後の2行を拡張子ローカルヘッダファイルに入れることもできます。</target>
        </trans-unit>
        <trans-unit id="bd5bdd1d6f2605746dfa5444603a80a8e39ed12e" translate="yes" xml:space="preserve">
          <source>You can also start the product with a value other than one:</source>
          <target state="translated">また、1つ以外の価値観でスタートさせることも可能です。</target>
        </trans-unit>
        <trans-unit id="9238d7ca5ba3e22758c44fc16cfa76bade93b524" translate="yes" xml:space="preserve">
          <source>You can also start the sum with a value other than zero:</source>
          <target state="translated">また、ゼロ以外の値で和を開始することもできます。</target>
        </trans-unit>
        <trans-unit id="dbae01da7fe0ab4f2d4dfea82533b37281dc1510" translate="yes" xml:space="preserve">
          <source>You can check whether this option was enabled when your NumPy was built by looking at the value of &lt;code&gt;np.ones((10,1),
order='C').flags.f_contiguous&lt;/code&gt;. If this is &lt;code&gt;True&lt;/code&gt;, then your NumPy has relaxed strides checking enabled.</source>
          <target state="translated">&lt;code&gt;np.ones((10,1), order='C').flags.f_contiguous&lt;/code&gt; の値を調べることにより、NumPyが構築されたときにこのオプションが有効になっていたかどうかを確認できます。これが &lt;code&gt;True&lt;/code&gt; の場合、NumPyはストライドチェックの緩和を有効にしています。</target>
        </trans-unit>
        <trans-unit id="9f727d609d02021feb25c56ec5c7d4115e505da2" translate="yes" xml:space="preserve">
          <source>You can do all this with &lt;code&gt;slice()&lt;/code&gt; plus a few special objects, but there&amp;rsquo;s a lot to remember and this version is simpler because it uses the standard array indexing syntax.</source>
          <target state="translated">これはすべて、 &lt;code&gt;slice()&lt;/code&gt; といくつかの特別なオブジェクトで実行できますが、覚えておきたいことがたくさんあります。このバージョンでは、標準の配列インデックス構文を使用しているため、より単純です。</target>
        </trans-unit>
        <trans-unit id="8032e81ac40a6f0f1a73b54a1b7839b994061479" translate="yes" xml:space="preserve">
          <source>You can think of reshaping as first raveling the array (using the given index order), then inserting the elements from the raveled array into the new array using the same kind of index ordering as was used for the raveling.</source>
          <target state="translated">リシェーピングとは、最初に(与えられたインデックス順を使って)配列をラベリングし、ラベリングに使われたのと同じ種類のインデックス順を使って、ラベリングされた配列の要素を新しい配列に挿入することだと考えることができます。</target>
        </trans-unit>
        <trans-unit id="6a1a526e2dfcefc7502bbfe7d5198a1cfd393800" translate="yes" xml:space="preserve">
          <source>You can use an initial value to compute the maximum of an empty slice, or to initialize it to a different value:</source>
          <target state="translated">初期値を使用して空のスライスの最大値を計算したり、別の値に初期化したりすることができます。</target>
        </trans-unit>
        <trans-unit id="7d0bef869069e40769f21f1de600d0fc6d747dfa" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;initial&lt;/code&gt; keyword argument to initialize the reduction with a different value, and &lt;code&gt;where&lt;/code&gt; to select specific elements to include:</source>
          <target state="translated">&lt;code&gt;initial&lt;/code&gt; キーワード引数を使用して、別の値で削減を初期化し、含める特定の要素を選択する &lt;code&gt;where&lt;/code&gt; を指定できます。</target>
        </trans-unit>
        <trans-unit id="91fa0d476f571316eb9194c7c7392edcc2d88959" translate="yes" xml:space="preserve">
          <source>You can use the code in &lt;code&gt;numpy.i&lt;/code&gt; to write your own typemaps. For example, if you had a five-dimensional array as a function argument, you could cut-and-paste the appropriate four-dimensional typemaps into your interface file. The modifications for the fourth dimension would be trivial.</source>
          <target state="translated">&lt;code&gt;numpy.i&lt;/code&gt; のコードを使用して、独自のタイプマップを作成できます。たとえば、関数の引数として5次元の配列がある場合、適切な4次元のタイプマップをインターフェイスファイルにカットアンドペーストできます。4次元の修正は簡単です。</target>
        </trans-unit>
        <trans-unit id="98e9f88bd4a89aebe54d98a979717885fd9d0412" translate="yes" xml:space="preserve">
          <source>You may use slicing to set values in the array, but (unlike lists) you can never grow the array. The size of the value to be set in &lt;code&gt;x[obj] = value&lt;/code&gt; must be (broadcastable) to the same shape as &lt;code&gt;x[obj]&lt;/code&gt;.</source>
          <target state="translated">配列に値を設定するためにスライスを使用できますが、（リストとは異なり）配列を大きくすることはできません。値のサイズは、に設定する &lt;code&gt;x[obj] = value&lt;/code&gt; と同じ形状に（broadcastable）でなければならない &lt;code&gt;x[obj]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f3568ae4f766e37d7c5effd4c8f672ee7bd5f8ce" translate="yes" xml:space="preserve">
          <source>You should note that, while included in the table for completeness, the &amp;lsquo;S&amp;rsquo;, &amp;lsquo;U&amp;rsquo;, and &amp;lsquo;V&amp;rsquo; types cannot be operated on by ufuncs. Also, note that on a 32-bit system the integer types may have different sizes, resulting in a slightly altered table.</source>
          <target state="translated">完全を期すために表に含まれていますが、「S」、「U」、および「V」タイプはufuncsでは操作できないことに注意してください。また、32ビットシステムでは、整数型のサイズが異なる場合があるため、テーブルが若干変更される場合があります。</target>
        </trans-unit>
        <trans-unit id="f357b2fe6ddb759961311e43e7970103d0b441f0" translate="yes" xml:space="preserve">
          <source>You will also need to add the tests directory in the configuration section of your setup.py:</source>
          <target state="translated">また、setup.py の設定セクションに tests ディレクトリを追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="1e16810e3242991af56a001ed6a884d632c200f8" translate="yes" xml:space="preserve">
          <source>Zero matrix of given shape, dtype, and order.</source>
          <target state="translated">指定された形状,dtype,次数のゼロ行列.</target>
        </trans-unit>
        <trans-unit id="e45e696eb3d4f02d39791369c3d3958a76ab90d1" translate="yes" xml:space="preserve">
          <source>Zero matrix.</source>
          <target state="translated">ゼロの行列。</target>
        </trans-unit>
        <trans-unit id="dc9379a72db3a8937472e62bd1e9326e04e14e35" translate="yes" xml:space="preserve">
          <source>Zero-padding, analogously with &lt;a href=&quot;numpy.fft.ifft#numpy.fft.ifft&quot;&gt;&lt;code&gt;ifft&lt;/code&gt;&lt;/a&gt;, is performed by appending zeros to the input along the specified dimension. Although this is the common approach, it might lead to surprising results. If another form of zero padding is desired, it must be performed before &lt;a href=&quot;#numpy.fft.ifft2&quot;&gt;&lt;code&gt;ifft2&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="translated">&lt;a href=&quot;numpy.fft.ifft#numpy.fft.ifft&quot;&gt; &lt;code&gt;ifft&lt;/code&gt; &lt;/a&gt;と同様にゼロパディングは、指定された次元に沿って入力にゼロを追加することによって実行されます。これは一般的なアプローチですが、驚くべき結果につながる可能性があります。別の形式のゼロパディングが必要な場合は、&lt;a href=&quot;#numpy.fft.ifft2&quot;&gt; &lt;code&gt;ifft2&lt;/code&gt; &lt;/a&gt;が呼び出される前に実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="64a64c98f6885c75110c036526d556b9a4c44be0" translate="yes" xml:space="preserve">
          <source>Zero-padding, analogously with &lt;a href=&quot;numpy.fft.ifft#numpy.fft.ifft&quot;&gt;&lt;code&gt;ifft&lt;/code&gt;&lt;/a&gt;, is performed by appending zeros to the input along the specified dimension. Although this is the common approach, it might lead to surprising results. If another form of zero padding is desired, it must be performed before &lt;a href=&quot;#numpy.fft.ifftn&quot;&gt;&lt;code&gt;ifftn&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="translated">&lt;a href=&quot;numpy.fft.ifft#numpy.fft.ifft&quot;&gt; &lt;code&gt;ifft&lt;/code&gt; &lt;/a&gt;と同様にゼロパディングは、指定された次元に沿って入力にゼロを追加することによって実行されます。これは一般的なアプローチですが、驚くべき結果につながる可能性があります。別の形式のゼロパディングが必要な場合は、&lt;a href=&quot;#numpy.fft.ifftn&quot;&gt; &lt;code&gt;ifftn&lt;/code&gt; &lt;/a&gt;を呼び出す前に実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="517f56a81e423e64373bd116eb0759a041c8ad2f" translate="yes" xml:space="preserve">
          <source>Zeros are returned for slices that are all-NaN or empty.</source>
          <target state="translated">All-NaNまたは空のスライスにはゼロが返されます。</target>
        </trans-unit>
        <trans-unit id="acacd887197bd2babb7be61e73a56d1f99561e0f" translate="yes" xml:space="preserve">
          <source>Zipf, G. K., &amp;ldquo;Selected Studies of the Principle of Relative Frequency in Language,&amp;rdquo; Cambridge, MA: Harvard Univ. Press, 1932.</source>
          <target state="translated">Zipf、GK、「言語における相対頻度の原理の選択された研究」、ケンブリッジ、マサチューセッツ：ハーバード大学 プレス、1932年。</target>
        </trans-unit>
        <trans-unit id="ed86773f64d57f9b3c7ee4020ed0f191241f3769" translate="yes" xml:space="preserve">
          <source>[ 1678 AD, 2262 AD]</source>
          <target state="translated">[西暦1678年,西暦2262年]</target>
        </trans-unit>
        <trans-unit id="402b4dc5670a23bc318ab3cb00cdc7fa9f64de7f" translate="yes" xml:space="preserve">
          <source>[ 1969 AD, 1970 AD]</source>
          <target state="translated">[西暦1969年,西暦1970年]</target>
        </trans-unit>
        <trans-unit id="bd183430653087be5ae12502c45fc000d3da0d92" translate="yes" xml:space="preserve">
          <source>[ 2.9e8 BC, 2.9e8 AD]</source>
          <target state="translated">[紀元前2.9e8年,紀元後2.9e8年]</target>
        </trans-unit>
        <trans-unit id="dc7f3e791b46510c11bbde8e0bb893651cf79bee" translate="yes" xml:space="preserve">
          <source>[1.0e15 BC, 1.0e15 AD]</source>
          <target state="translated">[紀元前1.0e15年、紀元後1.0e15年]</target>
        </trans-unit>
        <trans-unit id="06a7557ae8ce0cfbe48cae36c42a5043941673e5" translate="yes" xml:space="preserve">
          <source>[1.7e13 BC, 1.7e13 AD]</source>
          <target state="translated">[紀元前1.7e13年、紀元後1.7e13年]</target>
        </trans-unit>
        <trans-unit id="d122eae6bae0b58d08b1fd88854423fb5b4631e6" translate="yes" xml:space="preserve">
          <source>[1.7e17 BC, 1.7e17 AD]</source>
          <target state="translated">[紀元前1.7e17、紀元後1.7e17]</target>
        </trans-unit>
        <trans-unit id="af9678a88e0692bf413856f430540a50579b7921" translate="yes" xml:space="preserve">
          <source>[2.5e16 BC, 2.5e16 AD]</source>
          <target state="translated">[紀元前2.5e16年、紀元後2.5e16年]</target>
        </trans-unit>
        <trans-unit id="fb54cef9abe0ffb09a025ee28bfe888680b86ee0" translate="yes" xml:space="preserve">
          <source>[2.9e11 BC, 2.9e11 AD]</source>
          <target state="translated">[紀元前2.9e11、紀元後2.9e11]</target>
        </trans-unit>
        <trans-unit id="9b1e4a9e31badd5faa858bd32af6c4bab33690b0" translate="yes" xml:space="preserve">
          <source>[290301 BC, 294241 AD]</source>
          <target state="translated">紀元前290301年、紀元後294241年]</target>
        </trans-unit>
        <trans-unit id="2212219fa92d0d55a2e83f844d81d7dc4a36dd7d" translate="yes" xml:space="preserve">
          <source>[7.6e17 BC, 7.6e17 AD]</source>
          <target state="translated">[紀元前7.6e17、紀元後7.6e17]</target>
        </trans-unit>
        <trans-unit id="7855213bc11a8db7fc6daa3f131f06c9977a3960" translate="yes" xml:space="preserve">
          <source>[9.2e18 BC, 9.2e18 AD]</source>
          <target state="translated">[紀元前9.2e18年、紀元後9.2e18年]</target>
        </trans-unit>
        <trans-unit id="faf24ac10ab74f225b601311df4355d76763fa97" translate="yes" xml:space="preserve">
          <source>[CT]</source>
          <target state="translated">[CT]</target>
        </trans-unit>
        <trans-unit id="7d2f4bdb1926f2cbbdd65bcf6b74603f5acdf8c8" translate="yes" xml:space="preserve">
          <source>[G]</source>
          <target state="translated">[G]</target>
        </trans-unit>
        <trans-unit id="3d6c6c6111149819e43b6089c9a7b9c8a2431938" translate="yes" xml:space="preserve">
          <source>[NR]</source>
          <target state="translated">[NR]</target>
        </trans-unit>
        <trans-unit id="1b8941d3b1d081473898f4b2e4a8ff850cc6de82" translate="yes" xml:space="preserve">
          <source>[R5cc1f1f25381-1]</source>
          <target state="translated">[R5cc1f1f25381-1]</target>
        </trans-unit>
        <trans-unit id="0c4d5826769047e816879e0f7216ecf388ea499b" translate="yes" xml:space="preserve">
          <source>[Re860718f5533-1]</source>
          <target state="translated">[Re860718f5533-1]</target>
        </trans-unit>
        <trans-unit id="6b6f9491cb308db36a45d25a8dcf1db55932e083" translate="yes" xml:space="preserve">
          <source>[WRW]</source>
          <target state="translated">[WRW]</target>
        </trans-unit>
        <trans-unit id="3897c72013a6887de9a1de9869c3e948fd9696d2" translate="yes" xml:space="preserve">
          <source>__array_data__</source>
          <target state="translated">__array_data__</target>
        </trans-unit>
        <trans-unit id="81f5d0f249cae6e54a5453d7972fcd0943accd0e" translate="yes" xml:space="preserve">
          <source>__array_descr__</source>
          <target state="translated">__array_descr__</target>
        </trans-unit>
        <trans-unit id="c0a201183273449f8bd82be2d062468aa25df323" translate="yes" xml:space="preserve">
          <source>__array_interface__</source>
          <target state="translated">__array_interface__</target>
        </trans-unit>
        <trans-unit id="0a9ff3eb9a1e79e8a4cdf02304244a5327adcb47" translate="yes" xml:space="preserve">
          <source>__array_mask__</source>
          <target state="translated">__array_mask__</target>
        </trans-unit>
        <trans-unit id="ac7e7fcdcffb075d0e09e72d92d910d4b9351cdb" translate="yes" xml:space="preserve">
          <source>__array_offset__</source>
          <target state="translated">__array_offset__</target>
        </trans-unit>
        <trans-unit id="238f299c155456fe6a848580f0ef9d3e6bb2a8de" translate="yes" xml:space="preserve">
          <source>__array_shape__</source>
          <target state="translated">__array_shape__</target>
        </trans-unit>
        <trans-unit id="2f3678a5595fd628d8dfae6d631c1ae1fb6ef8da" translate="yes" xml:space="preserve">
          <source>__array_strides__</source>
          <target state="translated">__array_strides__</target>
        </trans-unit>
        <trans-unit id="aa0ad955aed8601e1764fbffe3d43f4a00fe14f0" translate="yes" xml:space="preserve">
          <source>__array_typestr__</source>
          <target state="translated">__array_typestr__</target>
        </trans-unit>
        <trans-unit id="96401488135b817c2f1747197a83525ae296049e" translate="yes" xml:space="preserve">
          <source>a (fixed) payment, &lt;a href=&quot;numpy.pmt#numpy.pmt&quot;&gt;&lt;code&gt;pmt&lt;/code&gt;&lt;/a&gt;, paid either</source>
          <target state="translated">（固定）支払い、&lt;a href=&quot;numpy.pmt#numpy.pmt&quot;&gt; &lt;code&gt;pmt&lt;/code&gt; &lt;/a&gt;、いずれかを支払い</target>
        </trans-unit>
        <trans-unit id="d5166cddbf23a08b5074c2edc9aec3c68a5f3663" translate="yes" xml:space="preserve">
          <source>a 1-D array of 624 unsigned integer keys.</source>
          <target state="translated">624個の符号なし整数キーの1次元配列。</target>
        </trans-unit>
        <trans-unit id="e95c05fdf3a7626457c027e91f7b377539d00b22" translate="yes" xml:space="preserve">
          <source>a 1-D array of 624 unsigned integers &lt;code&gt;keys&lt;/code&gt;.</source>
          <target state="translated">624個の符号なし整数 &lt;code&gt;keys&lt;/code&gt; 1次元配列。</target>
        </trans-unit>
        <trans-unit id="72fdfe6550961319f36cdd5e343cde12faf15445" translate="yes" xml:space="preserve">
          <source>a 1-d view of scalar</source>
          <target state="translated">スカラーの1次元ビュー</target>
        </trans-unit>
        <trans-unit id="74f70982e8ed106bd95f08838212248bb41b2355" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;numpy.char.chararray#numpy.char.chararray&quot;&gt;&lt;code&gt;chararray&lt;/code&gt;&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;numpy.char.chararray#numpy.char.chararray&quot;&gt; &lt;code&gt;chararray&lt;/code&gt; &lt;/a&gt;、</target>
        </trans-unit>
        <trans-unit id="8f21ea65027d34d0f525219a53334dc35cb5bbea" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;chararray&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;chararray&lt;/code&gt; 、</target>
        </trans-unit>
        <trans-unit id="cb4065b0f0de4de8cc6afb691ce3365727df08a4" translate="yes" xml:space="preserve">
          <source>a Python str or unicode object,</source>
          <target state="translated">Python の str または unicode オブジェクト。</target>
        </trans-unit>
        <trans-unit id="753cc1b7cdb86a0a582f834f17fe8e4f8e20365f" translate="yes" xml:space="preserve">
          <source>a binary string for the data</source>
          <target state="translated">データのバイナリ文字列</target>
        </trans-unit>
        <trans-unit id="7be660f83fa27f597e95280a8283a2c0611d9749" translate="yes" xml:space="preserve">
          <source>a binary string for the mask.</source>
          <target state="translated">マスクのバイナリ文字列。</target>
        </trans-unit>
        <trans-unit id="da3d248ac1b46ab9b40ccba358d7b76cb5f95a1a" translate="yes" xml:space="preserve">
          <source>a binary string with the data (or a list if &amp;lsquo;a&amp;rsquo; is an object array)</source>
          <target state="translated">データを含むバイナリ文字列（または 'a'がオブジェクト配列の場合はリスト）</target>
        </trans-unit>
        <trans-unit id="165258a094d59f96169a00b9e5b85c293cfac672" translate="yes" xml:space="preserve">
          <source>a flat iterator on the array.</source>
          <target state="translated">配列の平坦なイテレータ.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
