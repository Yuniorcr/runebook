<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="laravel">
    <body>
      <group id="laravel">
        <trans-unit id="94be3589a07b26452083745d697da2a4cf67c084" translate="yes" xml:space="preserve">
          <source>The output handler callback.</source>
          <target state="translated">出力ハンドラのコールバック。</target>
        </trans-unit>
        <trans-unit id="1592218a62638fe8ddbe41a6ffe64a302dc3c079" translate="yes" xml:space="preserve">
          <source>The output interface implementation.</source>
          <target state="translated">出力インターフェースの実装です。</target>
        </trans-unit>
        <trans-unit id="efef637298017b96c00db29f6fbb04f51dea6a63" translate="yes" xml:space="preserve">
          <source>The paginator implementation.</source>
          <target state="translated">paginatorの実装です。</target>
        </trans-unit>
        <trans-unit id="ac5a21d50bbeee8cd105d3f06e77d65b3f449d1a" translate="yes" xml:space="preserve">
          <source>The panel component renders the given block of text in a panel that has a slightly different background color than the rest of the message. This allows you to draw attention to a given block of text:</source>
          <target state="translated">パネルコンポーネントは、指定されたテキストブロックを、メッセージの残りの部分とはわずかに異なる背景色を持つパネルにレンダリングします。これにより、指定されたテキストブロックに注目を集めることができます。</target>
        </trans-unit>
        <trans-unit id="e93b51d43e7cb513d86c518478cd839282f2231f" translate="yes" xml:space="preserve">
          <source>The panel component renders the given block of text in a panel that has a slightly different background color than the rest of the notification. This allows you to draw attention to a given block of text:</source>
          <target state="translated">パネルコンポーネントは、与えられたテキストブロックを、通知の残りの部分とは少し異なる背景色を持つパネルにレンダリングします。これにより、与えられたテキストブロックに注目を集めることができます。</target>
        </trans-unit>
        <trans-unit id="b5f58475cf813553f8558bb5f62dde1c4eeb2334" translate="yes" xml:space="preserve">
          <source>The parameter names for the route.</source>
          <target state="translated">ルートのパラメータ名です。</target>
        </trans-unit>
        <trans-unit id="ee43f2aac1dddb44c5ce00a1e90083ee8a374d7d" translate="yes" xml:space="preserve">
          <source>The parameter override stack.</source>
          <target state="translated">パラメータのオーバーライドスタックです。</target>
        </trans-unit>
        <trans-unit id="e4766db45f665e17e55fa192e169308d5c2cb7b2" translate="yes" xml:space="preserve">
          <source>The parameters set for this resource instance.</source>
          <target state="translated">このリソースインスタンスに設定されているパラメータ。</target>
        </trans-unit>
        <trans-unit id="7282c6d7c50ee64fe886677d37c2a61bd9c866f9" translate="yes" xml:space="preserve">
          <source>The parameters to pass to the command.</source>
          <target state="translated">コマンドに渡すパラメータ。</target>
        </trans-unit>
        <trans-unit id="902c331440e6a8019042c2868d8cf1991c3b0ad1" translate="yes" xml:space="preserve">
          <source>The parameters to pass to the method.</source>
          <target state="translated">メソッドに渡すパラメータ。</target>
        </trans-unit>
        <trans-unit id="8836bb158d112ff7068e1e120206a763d7673269" translate="yes" xml:space="preserve">
          <source>The parent model instance.</source>
          <target state="translated">親モデルのインスタンス。</target>
        </trans-unit>
        <trans-unit id="a43200c593618940b314d78b25a9683fbe867ddf" translate="yes" xml:space="preserve">
          <source>The parent model of the relationship.</source>
          <target state="translated">関係性の親モデル。</target>
        </trans-unit>
        <trans-unit id="42ec5036ce81e5c38f017303e70c4596b4478a11" translate="yes" xml:space="preserve">
          <source>The parent placeholder for the request.</source>
          <target state="translated">リクエストの親のプレースホルダ。</target>
        </trans-unit>
        <trans-unit id="f3a36f3c1bd0a8184ab4a287ddc8e69705df7b61" translate="yes" xml:space="preserve">
          <source>The password reset token.</source>
          <target state="translated">パスワードリセットトークンです。</target>
        </trans-unit>
        <trans-unit id="b53f647f4d451b23820c56e1589709aa1a3c92d1" translate="yes" xml:space="preserve">
          <source>The password token repository.</source>
          <target state="translated">パスワードトークンのリポジトリ。</target>
        </trans-unit>
        <trans-unit id="c0a14434a92eaa0f8e4a8f4af13ef54ebf2eb75a" translate="yes" xml:space="preserve">
          <source>The path resource or null on failure.</source>
          <target state="translated">パスリソース、または失敗した場合はnull。</target>
        </trans-unit>
        <trans-unit id="7e8bdfc1d1507fa4bd04ea87a5760cf7e62cf892" translate="yes" xml:space="preserve">
          <source>The path the client should be redirected to.</source>
          <target state="translated">クライアントがリダイレクトするパス。</target>
        </trans-unit>
        <trans-unit id="7b7820185ffd5d7ec8d2f633f034237b7bd8fb57" translate="yes" xml:space="preserve">
          <source>The path the user should be redirected to.</source>
          <target state="translated">ユーザーがリダイレクトするパス。</target>
        </trans-unit>
        <trans-unit id="9e27ef61662e43c88e72c2eee7996b29b12ffeb9" translate="yes" xml:space="preserve">
          <source>The path to the manifest file.</source>
          <target state="translated">マニフェスト ファイルへのパスです。</target>
        </trans-unit>
        <trans-unit id="add09e0cc8a57734ee01c90eac0ba6175f978a27" translate="yes" xml:space="preserve">
          <source>The path to the view file.</source>
          <target state="translated">ビューファイルへのパスです。</target>
        </trans-unit>
        <trans-unit id="5565f02a538d3706e36f4b7f26090d42dbd6ad9a" translate="yes" xml:space="preserve">
          <source>The path where sessions should be stored.</source>
          <target state="translated">セッションが保存されるパス。</target>
        </trans-unit>
        <trans-unit id="b0213bfbcc42800df8dd2a5938b0bfbd0e4e1f00" translate="yes" xml:space="preserve">
          <source>The paths that should be published by group.</source>
          <target state="translated">グループごとに公開すべきパス。</target>
        </trans-unit>
        <trans-unit id="d11b7aa3cd9a7dcedcefcbc9eb709c9a04d3cdfd" translate="yes" xml:space="preserve">
          <source>The paths that should be published.</source>
          <target state="translated">公開すべきパス。</target>
        </trans-unit>
        <trans-unit id="b0b8fd52944cfe758ddc216bf307a8431ba07d9d" translate="yes" xml:space="preserve">
          <source>The paths to all of the migration files.</source>
          <target state="translated">すべての移行ファイルのパス。</target>
        </trans-unit>
        <trans-unit id="d24aad41128f2e7bb10ce0967a69013ddb6ede07" translate="yes" xml:space="preserve">
          <source>The person the message is from.</source>
          <target state="translated">メッセージの相手は</target>
        </trans-unit>
        <trans-unit id="bfef9e48f15949bd41a84c3faab39c974797e6ca" translate="yes" xml:space="preserve">
          <source>The phone number notifications should be sent from.</source>
          <target state="translated">電話番号の通知は、電話番号から送信するようにしてください。</target>
        </trans-unit>
        <trans-unit id="0e98ca2d23c07036c9363987590e8028cf913c2a" translate="yes" xml:space="preserve">
          <source>The phone number the message should be sent from.</source>
          <target state="translated">メッセージを送信する電話番号です。</target>
        </trans-unit>
        <trans-unit id="dc620da65b7fc93a01bb325161eb357150060b37" translate="yes" xml:space="preserve">
          <source>The pipeline instance for the bus.</source>
          <target state="translated">バスのパイプラインインスタンス。</target>
        </trans-unit>
        <trans-unit id="f0f4eb636554a4a6c4812d67a352786093ae4d49" translate="yes" xml:space="preserve">
          <source>The pipes to send commands through before dispatching.</source>
          <target state="translated">ディスパッチ前にコマンドを送信するためのパイプです。</target>
        </trans-unit>
        <trans-unit id="2db08da63e33c232061b617ac848e94dac12da18" translate="yes" xml:space="preserve">
          <source>The pivot table columns to retrieve.</source>
          <target state="translated">取得するピボットテーブルの列。</target>
        </trans-unit>
        <trans-unit id="c0c920060f899f778786960e4dcadd050e7ecef6" translate="yes" xml:space="preserve">
          <source>The plain text view to use for the message.</source>
          <target state="translated">メッセージに使用するプレーンテキスト表示。</target>
        </trans-unit>
        <trans-unit id="9387956fd1a68c29b28cfd48bf1cae7c0d6e2cf2" translate="yes" xml:space="preserve">
          <source>The plug-ins registered with the transport.</source>
          <target state="translated">トランスポートに登録されているプラグイン。</target>
        </trans-unit>
        <trans-unit id="8494185e12456cfb943f79032e45853adae481d9" translate="yes" xml:space="preserve">
          <source>The plural rules are derived from code of the Zend Framework (2010-09-25), which is subject to the new BSD license (http://framework.zend.com/license/new-bsd) Copyright (c) 2005-2010 - Zend Technologies USA Inc. (http://www.zend.com)</source>
          <target state="translated">複数の規則は Zend Framework (2010-09-25)のコードから派生したもので、新しい BSD ライセンス (http://framework.zend.com/license/new-bsd)に準拠しています。(http://www.zend.com)</target>
        </trans-unit>
        <trans-unit id="5e96ed07e7f2bc957d119c34510dec2c79157892" translate="yes" xml:space="preserve">
          <source>The policy mappings for the application.</source>
          <target state="translated">アプリケーションのポリシーマッピング。</target>
        </trans-unit>
        <trans-unit id="0025ea8fe17d7750364b5c1207ecf3ccba7379dc" translate="yes" xml:space="preserve">
          <source>The possible column modifiers.</source>
          <target state="translated">可能な列修飾子。</target>
        </trans-unit>
        <trans-unit id="366dd2fd160dd0d6a6eb478f54ae2b04954b51e1" translate="yes" xml:space="preserve">
          <source>The possible column serials.</source>
          <target state="translated">可能な列の連番。</target>
        </trans-unit>
        <trans-unit id="609e7048910da4cc45affa2dd59942ede34f8b94" translate="yes" xml:space="preserve">
          <source>The prefix of the table.</source>
          <target state="translated">テーブルの接頭辞。</target>
        </trans-unit>
        <trans-unit id="3c4236448d5f55af1bd56351f4f7111fe092aa19" translate="yes" xml:space="preserve">
          <source>The primary key for the model.</source>
          <target state="translated">モデルの主なキーとなる</target>
        </trans-unit>
        <trans-unit id="001b18b67380189d8314bdc4f69188b4186b95a5" translate="yes" xml:space="preserve">
          <source>The priority-sorted list of middleware.</source>
          <target state="translated">ミドルウェアの優先順位がソートされたリスト。</target>
        </trans-unit>
        <trans-unit id="bc2f39cab13defd205f6e8092263c494f5ceffbb" translate="yes" xml:space="preserve">
          <source>The protected &lt;code&gt;sendResetLinkResponse&lt;/code&gt; method of the &lt;code&gt;SendsPasswordResetEmails&lt;/code&gt; trait now accepts the incoming &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; as its first argument. If you are overriding this method, you should update your method's signature:</source>
          <target state="translated">&lt;code&gt;SendsPasswordResetEmails&lt;/code&gt; トレイトの保護された &lt;code&gt;sendResetLinkResponse&lt;/code&gt; メソッドは、最初の引数として着信 &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; を受け入れるようになりました。このメソッドをオーバーライドする場合は、メソッドの署名を更新する必要があります。</target>
        </trans-unit>
        <trans-unit id="8148dffec1ace6dbbd3a172bdb7429da13d96a93" translate="yes" xml:space="preserve">
          <source>The protected &lt;code&gt;sendResetResponse&lt;/code&gt; method of the &lt;code&gt;ResetsPasswords&lt;/code&gt; trait now accepts the incoming &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; as its first argument. If you are overriding this method, you should update your method's signature:</source>
          <target state="translated">&lt;code&gt;ResetsPasswords&lt;/code&gt; トレイトの保護された &lt;code&gt;sendResetResponse&lt;/code&gt; メソッドは、最初の引数として着信 &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; を受け入れるようになりました。このメソッドをオーバーライドする場合は、メソッドの署名を更新する必要があります。</target>
        </trans-unit>
        <trans-unit id="761134f7975522e4a73337958ecbd9c5c6302007" translate="yes" xml:space="preserve">
          <source>The provider class names.</source>
          <target state="translated">プロバイダクラスの名前です。</target>
        </trans-unit>
        <trans-unit id="efff598d2ac852eaaf4231191ec70c6bad0a4277" translate="yes" xml:space="preserve">
          <source>The provider to publish.</source>
          <target state="translated">公表するプロバイダ。</target>
        </trans-unit>
        <trans-unit id="0f9d970794e236a1ea851682597121e45bb730cb" translate="yes" xml:space="preserve">
          <source>The published components will be placed in your &lt;code&gt;resources/js/components&lt;/code&gt; directory. Once the components have been published, you should register them in your &lt;code&gt;resources/js/app.js&lt;/code&gt; file:</source>
          <target state="translated">公開されたコンポーネントは、 &lt;code&gt;resources/js/components&lt;/code&gt; ディレクトリに配置されます。コンポーネントが公開されたら、それらを &lt;code&gt;resources/js/app.js&lt;/code&gt; ファイルに登録する必要があります。</target>
        </trans-unit>
        <trans-unit id="362d9f3883e1e03c1cdad16aa4a99b8ecb8a8ef1" translate="yes" xml:space="preserve">
          <source>The query above will produce the following SQL:</source>
          <target state="translated">上記のクエリを実行すると、以下のようなSQLが生成されます。</target>
        </trans-unit>
        <trans-unit id="44cb5a6276e5382ddb901d8206b16b6d3a2551ba" translate="yes" xml:space="preserve">
          <source>The query builder also includes a few functions to help you do &quot;pessimistic locking&quot; on your &lt;code&gt;select&lt;/code&gt; statements. To run the statement with a &quot;shared lock&quot;, you may use the &lt;code&gt;sharedLock&lt;/code&gt; method on a query. A shared lock prevents the selected rows from being modified until your transaction commits:</source>
          <target state="translated">クエリビルダーには、 &lt;code&gt;select&lt;/code&gt; ステートメントで「悲観的ロック」を行うのに役立ついくつかの関数も含まれています。「共有ロック」でステートメントを実行するには、クエリで &lt;code&gt;sharedLock&lt;/code&gt; メソッドを使用できます。共有ロックは、トランザクションがコミットされるまで、選択された行が変更されるのを防ぎます。</target>
        </trans-unit>
        <trans-unit id="9c272a61d4a7bd24c8447c8b82ec8b370b55f411" translate="yes" xml:space="preserve">
          <source>The query builder also provides a quick way to &quot;union&quot; two queries together. For example, you may create an initial query and use the &lt;code&gt;union&lt;/code&gt; method to union it with a second query:</source>
          <target state="translated">クエリビルダーは、2つのクエリを簡単に &quot;結合&quot;する方法も提供します。たとえば、最初のクエリを作成し、 &lt;code&gt;union&lt;/code&gt; メソッドを使用して2番目のクエリと結合することができます。</target>
        </trans-unit>
        <trans-unit id="98ba14c8c1556a3a72125410b708b4a2f1e00fbc" translate="yes" xml:space="preserve">
          <source>The query builder also provides a variety of aggregate methods such as &lt;code&gt;count&lt;/code&gt;, &lt;code&gt;max&lt;/code&gt;, &lt;code&gt;min&lt;/code&gt;, &lt;code&gt;avg&lt;/code&gt;, and &lt;code&gt;sum&lt;/code&gt;. You may call any of these methods after constructing your query:</source>
          <target state="translated">クエリビルダーは、 &lt;code&gt;count&lt;/code&gt; 、 &lt;code&gt;max&lt;/code&gt; 、 &lt;code&gt;min&lt;/code&gt; 、 &lt;code&gt;avg&lt;/code&gt; 、 &lt;code&gt;sum&lt;/code&gt; などのさまざまな集計メソッドも提供します。クエリを作成した後、これらのメソッドのいずれかを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="0b60ecf12cc627cc468fefe0d3fbcfe9eaf4c317" translate="yes" xml:space="preserve">
          <source>The query builder also provides an &lt;code&gt;insert&lt;/code&gt; method for inserting records into the database table. The &lt;code&gt;insert&lt;/code&gt; method accepts an array of column names and values:</source>
          <target state="translated">クエリビルダーは、データベーステーブルにレコードを &lt;code&gt;insert&lt;/code&gt; するための挿入メソッドも提供します。 &lt;code&gt;insert&lt;/code&gt; 方法は、カラム名と値の配列を受け付けます。</target>
        </trans-unit>
        <trans-unit id="60b628cfc040a806a32ab4d5df96d0e35a8cc9ba" translate="yes" xml:space="preserve">
          <source>The query builder also provides convenient methods for incrementing or decrementing the value of a given column. This is a shortcut, providing a more expressive and terse interface compared to manually writing the &lt;code&gt;update&lt;/code&gt; statement.</source>
          <target state="translated">クエリビルダーは、特定の列の値をインクリメントまたはデクリメントするための便利なメソッドも提供します。これはショートカットであり、 &lt;code&gt;update&lt;/code&gt; ステートメントを手動で作成するよりも表現力豊かで簡潔なインターフェイスを提供します。</target>
        </trans-unit>
        <trans-unit id="e5673be9809243bcffb70dd972a60c508469ca05" translate="yes" xml:space="preserve">
          <source>The query builder may also be used to delete records from the table via the &lt;code&gt;delete&lt;/code&gt; method. You may constrain &lt;code&gt;delete&lt;/code&gt; statements by adding &lt;code&gt;where&lt;/code&gt; clauses before calling the &lt;code&gt;delete&lt;/code&gt; method:</source>
          <target state="translated">クエリビルダーを使用して、 &lt;code&gt;delete&lt;/code&gt; メソッドを介してテーブルからレコードを削除することもできます。 &lt;code&gt;delete&lt;/code&gt; メソッドを呼び出す前に &lt;code&gt;where&lt;/code&gt; 句を追加することで、 &lt;code&gt;delete&lt;/code&gt; ステートメントを制約できます。</target>
        </trans-unit>
        <trans-unit id="b860f116e9363b689e9e99cad6734fd060e09999" translate="yes" xml:space="preserve">
          <source>The query builder may also be used to write join statements. To perform a basic &quot;inner join&quot;, you may use the &lt;code&gt;join&lt;/code&gt; method on a query builder instance. The first argument passed to the &lt;code&gt;join&lt;/code&gt; method is the name of the table you need to join to, while the remaining arguments specify the column constraints for the join. Of course, as you can see, you can join to multiple tables in a single query:</source>
          <target state="translated">クエリビルダーは、結合ステートメントの記述にも使用できます。基本的な「内部結合」を実行するには、クエリビルダーインスタンスで &lt;code&gt;join&lt;/code&gt; メソッドを使用できます。 &lt;code&gt;join&lt;/code&gt; メソッドに渡される最初の引数は、結合する必要があるテーブルの名前です。残りの引数は、結合の列制約を指定します。もちろん、ご覧のとおり、1つのクエリで複数のテーブルに結合できます。</target>
        </trans-unit>
        <trans-unit id="3b75c6409200e4302f40387da75028b27ddc3c7d" translate="yes" xml:space="preserve">
          <source>The query grammar implementation.</source>
          <target state="translated">クエリ文法の実装。</target>
        </trans-unit>
        <trans-unit id="3903eb8353a382e2211e9c94b26faca4828d11e8" translate="yes" xml:space="preserve">
          <source>The query parameters to add to all URLs.</source>
          <target state="translated">すべてのURLに追加するクエリパラメータ。</target>
        </trans-unit>
        <trans-unit id="7897df1c5d66a8deaf393edee2a496eb0065c6c9" translate="yes" xml:space="preserve">
          <source>The query post processor implementation.</source>
          <target state="translated">クエリーポストプロセッサの実施形態。</target>
        </trans-unit>
        <trans-unit id="596c396a4eeff80c8cb80d06886473b2e62a48e9" translate="yes" xml:space="preserve">
          <source>The query string variable used to store the page.</source>
          <target state="translated">ページを格納するために使用されるクエリ文字列変数。</target>
        </trans-unit>
        <trans-unit id="ade94f6695e0c79d24f37cf20e44ae98d3025022" translate="yes" xml:space="preserve">
          <source>The query union statements.</source>
          <target state="translated">クエリユニオン文です。</target>
        </trans-unit>
        <trans-unit id="7a595d4308adfb8d55aab5690e470aa0815de055" translate="yes" xml:space="preserve">
          <source>The queue URL prefix.</source>
          <target state="translated">キューの URL のプレフィックス。</target>
        </trans-unit>
        <trans-unit id="251de1a5309840eedd548c43e7d2105a547998a6" translate="yes" xml:space="preserve">
          <source>The queue configuration file is stored in &lt;code&gt;config/queue.php&lt;/code&gt;. In this file you will find connection configurations for each of the queue drivers that are included with the framework, which includes a database, &lt;a href=&quot;https://kr.github.io/beanstalkd/&quot;&gt;Beanstalkd&lt;/a&gt;, &lt;a href=&quot;https://aws.amazon.com/sqs/&quot;&gt;Amazon SQS&lt;/a&gt;, &lt;a href=&quot;https://redis.io&quot;&gt;Redis&lt;/a&gt;, and a synchronous driver that will execute jobs immediately (for local use). A &lt;code&gt;null&lt;/code&gt; queue driver is also included which discards queued jobs.</source>
          <target state="translated">キュー設定ファイルは &lt;code&gt;config/queue.php&lt;/code&gt; に保存されています。このファイルには、データベース、&lt;a href=&quot;https://kr.github.io/beanstalkd/&quot;&gt;Beanstalkd&lt;/a&gt;、&lt;a href=&quot;https://aws.amazon.com/sqs/&quot;&gt;Amazon SQS&lt;/a&gt;、&lt;a href=&quot;https://redis.io&quot;&gt;Redis&lt;/a&gt;、およびジョブをすぐに実行する同期ドライバー（ローカルで使用するため）を含む、フレームワークに含まれている各キュードライバーの接続構成が含まれています。 &lt;code&gt;null&lt;/code&gt; キュードライバは、ジョブをキューに入れられた破棄含まれています。</target>
        </trans-unit>
        <trans-unit id="20efc614107e1046236f81717131c099fa600e7b" translate="yes" xml:space="preserve">
          <source>The queue implementation.</source>
          <target state="translated">キューの実装です。</target>
        </trans-unit>
        <trans-unit id="9dcb7b9053dcdd289bb23463f94284a70ee68b08" translate="yes" xml:space="preserve">
          <source>The queue listener instance.</source>
          <target state="translated">キューリスナーのインスタンス。</target>
        </trans-unit>
        <trans-unit id="6abc329182160980328a1e76f7f56b484da95049" translate="yes" xml:space="preserve">
          <source>The queue manager instance.</source>
          <target state="translated">キューマネージャのインスタンス。</target>
        </trans-unit>
        <trans-unit id="e757ccabdb84d34d5d4beb9aa51f8fc63eeb2c31" translate="yes" xml:space="preserve">
          <source>The queue message data.</source>
          <target state="translated">キューのメッセージデータです。</target>
        </trans-unit>
        <trans-unit id="08a4eaea09c51e96856c6d0f4ffbb55f8e3c0988" translate="yes" xml:space="preserve">
          <source>The queue name.</source>
          <target state="translated">キュー名です。</target>
        </trans-unit>
        <trans-unit id="f757eae1008e6c3b3f3aedba01be35065a8f2896" translate="yes" xml:space="preserve">
          <source>The queue resolver callback.</source>
          <target state="translated">キューリゾルバのコールバック。</target>
        </trans-unit>
        <trans-unit id="1f0bb54188344db6d24ee49c0064a8bd1ab7b5fb" translate="yes" xml:space="preserve">
          <source>The queue resolver instance.</source>
          <target state="translated">キューリゾルバのインスタンス。</target>
        </trans-unit>
        <trans-unit id="99a10f1bc4202008531860cbe5957ace38b01cc6" translate="yes" xml:space="preserve">
          <source>The queue uses the &lt;a href=&quot;cache&quot;&gt;cache&lt;/a&gt; to store restart signals, so you should verify a cache driver is properly configured for your application before using this feature.</source>
          <target state="translated">キューは再起動信号を格納するために&lt;a href=&quot;cache&quot;&gt;キャッシュ&lt;/a&gt;を使用するため、この機能を使用する前に、キャッシュドライバーがアプリケーションに対して適切に構成されていることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="5a2cb5843f79c9d9f87ea929dc8e4ab226ee2ee6" translate="yes" xml:space="preserve">
          <source>The queue worker command line.</source>
          <target state="translated">キューワーカーのコマンドライン。</target>
        </trans-unit>
        <trans-unit id="a9d19bafe1650cadd34fe56f7b2a32e1d51e0415" translate="yes" xml:space="preserve">
          <source>The queue worker instance.</source>
          <target state="translated">キューワーカーのインスタンス。</target>
        </trans-unit>
        <trans-unit id="02db72366d16c6c14ebe7595a3e32269f47ae41e" translate="yes" xml:space="preserve">
          <source>The rate limiter instance.</source>
          <target state="translated">レートリミッターのインスタンス。</target>
        </trans-unit>
        <trans-unit id="f89e151cfbb32960099f93afd6cdd6673952dd6c" translate="yes" xml:space="preserve">
          <source>The raw attachments for the message.</source>
          <target state="translated">メッセージの生の添付ファイル。</target>
        </trans-unit>
        <trans-unit id="70441c97dad9e48320e44350b32b7f46ecd2ba83" translate="yes" xml:space="preserve">
          <source>The recommended response to send to the client.</source>
          <target state="translated">クライアントに送るべきおすすめの回答</target>
        </trans-unit>
        <trans-unit id="4a1eb40248ef873ce553ce9eadac2d57d14dc10b" translate="yes" xml:space="preserve">
          <source>The reconnector instance for the connection.</source>
          <target state="translated">接続のリコネクタのインスタンス。</target>
        </trans-unit>
        <trans-unit id="2f8c4fb4fc46b3fe0087b0ade046c694803d3d5d" translate="yes" xml:space="preserve">
          <source>The redirector instance.</source>
          <target state="translated">リダイレクタのインスタンス。</target>
        </trans-unit>
        <trans-unit id="0aa28db9c9b23594984c138c26867439741ea8dd" translate="yes" xml:space="preserve">
          <source>The registered after creating callbacks.</source>
          <target state="translated">コールバック作成後に登録された</target>
        </trans-unit>
        <trans-unit id="609972ce5c8714c07b32df2d2c883a13c19ae775" translate="yes" xml:space="preserve">
          <source>The registered after making callbacks.</source>
          <target state="translated">コールバックを行った後に登録されたもの。</target>
        </trans-unit>
        <trans-unit id="98cf3b7ca0029a15047bb64f7d9657e7f47d36be" translate="yes" xml:space="preserve">
          <source>The registered aliases keyed by the abstract name.</source>
          <target state="translated">登録されているエイリアスは、抽象名がキーになっています。</target>
        </trans-unit>
        <trans-unit id="f9e436b2cfbb51b6a5dac896bb616cc4c422b710" translate="yes" xml:space="preserve">
          <source>The registered channel authenticators.</source>
          <target state="translated">登録されているチャンネル認証者。</target>
        </trans-unit>
        <trans-unit id="9a2197b3b9bf3e17ff17ca1d340c4e9f5070355c" translate="yes" xml:space="preserve">
          <source>The registered component paths.</source>
          <target state="translated">登録されているコンポーネントのパスです。</target>
        </trans-unit>
        <trans-unit id="c11789175d838051d947155acafe1079d4e33227" translate="yes" xml:space="preserve">
          <source>The registered custom driver creators.</source>
          <target state="translated">登録されているカスタムドライバーの作成者です。</target>
        </trans-unit>
        <trans-unit id="a5427beac44b1a01dd2a8c283d3d690adfabe633" translate="yes" xml:space="preserve">
          <source>The registered custom provider creators.</source>
          <target state="translated">登録されているカスタムプロバイダーの作成者です。</target>
        </trans-unit>
        <trans-unit id="4a6bd0e9fd703ab21d8e46d49e4ca9d5046e3462" translate="yes" xml:space="preserve">
          <source>The registered event listeners.</source>
          <target state="translated">登録されているイベントリスナー。</target>
        </trans-unit>
        <trans-unit id="044f8eb9a6674a4fbe18a213d45a4f8b1b69c84d" translate="yes" xml:space="preserve">
          <source>The registered model states.</source>
          <target state="translated">登録されているモデルの状態</target>
        </trans-unit>
        <trans-unit id="bb8cabee1bba7044d317c148c0dd33b1a0b78941" translate="yes" xml:space="preserve">
          <source>The registered post create hooks.</source>
          <target state="translated">登録されているポストの作成フック。</target>
        </trans-unit>
        <trans-unit id="60d081e3edf6cb3091d7c0e9ba5bb65f98896345" translate="yes" xml:space="preserve">
          <source>The registered route value binders.</source>
          <target state="translated">登録されている経路値バインダーです。</target>
        </trans-unit>
        <trans-unit id="00a6d22c8493b09dacd0b1e9ab9ffdd2cf823538" translate="yes" xml:space="preserve">
          <source>The registered string macros.</source>
          <target state="translated">登録されている文字列マクロです。</target>
        </trans-unit>
        <trans-unit id="b4d12c41dfa51c810e441bd098f2e1fb9b281683" translate="yes" xml:space="preserve">
          <source>The registered type aliases.</source>
          <target state="translated">登録されているタイプのエイリアスです。</target>
        </trans-unit>
        <trans-unit id="c638d1b9ea8c2ac338c8b6abdb53bbd79029039b" translate="yes" xml:space="preserve">
          <source>The regular expression requirements.</source>
          <target state="translated">正規表現の要件。</target>
        </trans-unit>
        <trans-unit id="9ffb5bae50a57b0c2a20edc53067010eaab3ed9e" translate="yes" xml:space="preserve">
          <source>The related model instance.</source>
          <target state="translated">関連するモデルのインスタンス。</target>
        </trans-unit>
        <trans-unit id="db6c7e8e552443aa2d0da70d751330354d867bfa" translate="yes" xml:space="preserve">
          <source>The relations to eager load on every query.</source>
          <target state="translated">すべてのクエリの負荷を熱望する関係。</target>
        </trans-unit>
        <trans-unit id="7314a154a25cacabcd3a7c9a9665ab32c9d57374" translate="yes" xml:space="preserve">
          <source>The relationship counts that should be eager loaded on every query.</source>
          <target state="translated">すべてのクエリで熱心にロードされるべきリレーションシップのカウント。</target>
        </trans-unit>
        <trans-unit id="e7d25ed3c6f0210d3f6f56e56debdef06a81cab8" translate="yes" xml:space="preserve">
          <source>The relationships loaded on the model.</source>
          <target state="translated">モデルにロードされた関係性。</target>
        </trans-unit>
        <trans-unit id="fb7d96639bd22d3f1dd60ed2855cc72cece4d17d" translate="yes" xml:space="preserve">
          <source>The relationships that should be eager loaded.</source>
          <target state="translated">熱心にロードされるべき関係性。</target>
        </trans-unit>
        <trans-unit id="f43d3cfedbfc7e31ebcdbcaa31d8367219432736" translate="yes" xml:space="preserve">
          <source>The relationships that should be touched on save.</source>
          <target state="translated">セーブで触れるべき人間関係。</target>
        </trans-unit>
        <trans-unit id="f48f20dc9a99fe46d638995db9051021a18ffb50" translate="yes" xml:space="preserve">
          <source>The repository instance.</source>
          <target state="translated">リポジトリのインスタンス。</target>
        </trans-unit>
        <trans-unit id="0290628eed4cf9f05965d03a3f63b5e7ba5e01e6" translate="yes" xml:space="preserve">
          <source>The request currently being dispatched.</source>
          <target state="translated">現在派遣中のリクエスト。</target>
        </trans-unit>
        <trans-unit id="16cd0e6127f2b2c0da38cdb38d99f4298234d1b5" translate="yes" xml:space="preserve">
          <source>The request instance.</source>
          <target state="translated">リクエストのインスタンス。</target>
        </trans-unit>
        <trans-unit id="0e508174b4aa5a5bf0fb940197fd16418290c373" translate="yes" xml:space="preserve">
          <source>The resolved engine instances.</source>
          <target state="translated">解決されたエンジンインスタンス。</target>
        </trans-unit>
        <trans-unit id="263b880247bac8bda5d3639243ef18b5cb7ed7eb" translate="yes" xml:space="preserve">
          <source>The resolved object instances.</source>
          <target state="translated">解決されたオブジェクトのインスタンス。</target>
        </trans-unit>
        <trans-unit id="b7ca514d8a4692cad4731417b0756ecf1275ab12" translate="yes" xml:space="preserve">
          <source>The resource controller.</source>
          <target state="translated">リソースコントローラです。</target>
        </trans-unit>
        <trans-unit id="56f60d2d0ee2d9172ad28e8b6e094f5b7caace53" translate="yes" xml:space="preserve">
          <source>The resource instance.</source>
          <target state="translated">リソースのインスタンス。</target>
        </trans-unit>
        <trans-unit id="a95d6132a19bf75b0b6aaff23867371d166e5e24" translate="yes" xml:space="preserve">
          <source>The resource name.</source>
          <target state="translated">リソース名です。</target>
        </trans-unit>
        <trans-unit id="bf011891c2177b36703816d90e75f2d2072e3b87" translate="yes" xml:space="preserve">
          <source>The resource options.</source>
          <target state="translated">リソースのオプション。</target>
        </trans-unit>
        <trans-unit id="ecdd5344f0d0bc88ac377e9afed6b88830188429" translate="yes" xml:space="preserve">
          <source>The resource registrar.</source>
          <target state="translated">リソースレジストラ。</target>
        </trans-unit>
        <trans-unit id="18f7638073d9c9c042d64634548cc9e1ae8943ce" translate="yes" xml:space="preserve">
          <source>The resource that this resource collects.</source>
          <target state="translated">このリソースが収集しているリソース。</target>
        </trans-unit>
        <trans-unit id="368a409de12958befa5dce1336f79e9c9e53a178" translate="yes" xml:space="preserve">
          <source>The resource's registration status.</source>
          <target state="translated">リソースの登録状況です。</target>
        </trans-unit>
        <trans-unit id="fc8405290cd1dbfe9984bcdfaa8040afc301a7be" translate="yes" xml:space="preserve">
          <source>The response instance.</source>
          <target state="translated">レスポンスのインスタンス。</target>
        </trans-unit>
        <trans-unit id="601ecb069cd20113a2fbfbc01aa7d5c00f4a2465" translate="yes" xml:space="preserve">
          <source>The response message.</source>
          <target state="translated">レスポンスメッセージです。</target>
        </trans-unit>
        <trans-unit id="164352520448d04206d3c52f17e7f82e87ac15dc" translate="yes" xml:space="preserve">
          <source>The response to delegate to.</source>
          <target state="translated">委任への対応。</target>
        </trans-unit>
        <trans-unit id="c46e5c096c954839dae212913abf0e66c72ea5f5" translate="yes" xml:space="preserve">
          <source>The results of &lt;a href=&quot;eloquent&quot;&gt;Eloquent&lt;/a&gt; queries are always returned as &lt;code&gt;Collection&lt;/code&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;eloquent&quot;&gt;Eloquent&lt;/a&gt;クエリの結果は常に &lt;code&gt;Collection&lt;/code&gt; インスタンスとして返されます。</target>
        </trans-unit>
        <trans-unit id="e89ccf76734c773e099357ff32d1ed203045589b" translate="yes" xml:space="preserve">
          <source>The returned slice will preserve keys by default. If you do not wish to preserve the original keys, you can use the &lt;a href=&quot;#method-values&quot;&gt;&lt;code&gt;values&lt;/code&gt;&lt;/a&gt; method to reindex them.</source>
          <target state="translated">返されるスライスは、デフォルトでキーを保持します。元のキーを保持したくない場合は、&lt;a href=&quot;#method-values&quot;&gt; &lt;code&gt;values&lt;/code&gt; &lt;/a&gt;メソッドを使用してインデックスを再作成できます。</target>
        </trans-unit>
        <trans-unit id="a14154883b57e0c7b912f901032bff78f7e71482" translate="yes" xml:space="preserve">
          <source>The root namespace being applied to controller actions.</source>
          <target state="translated">コントローラアクションに適用されるルートネームスペース。</target>
        </trans-unit>
        <trans-unit id="12d7248b5b63b0f50370c1fe342dfff1893a4bf8" translate="yes" xml:space="preserve">
          <source>The route URL generator instance.</source>
          <target state="translated">ルートURLジェネレーターのインスタンス。</target>
        </trans-unit>
        <trans-unit id="e4314c17af324483d9457a5618d6c73f931972f2" translate="yes" xml:space="preserve">
          <source>The route action array.</source>
          <target state="translated">ルートアクションの配列。</target>
        </trans-unit>
        <trans-unit id="43594284ed9c99e26403f8c7bf94fbf14a35d0ac" translate="yes" xml:space="preserve">
          <source>The route collection instance.</source>
          <target state="translated">ルートコレクションのインスタンス。</target>
        </trans-unit>
        <trans-unit id="6c4d429aef6dcb0a75a4c587813e6400e8929041" translate="yes" xml:space="preserve">
          <source>The route collection.</source>
          <target state="translated">ルート集です。</target>
        </trans-unit>
        <trans-unit id="d12a8e106ea4940f34cc43c9258574f57ae31dc0" translate="yes" xml:space="preserve">
          <source>The route group attribute stack.</source>
          <target state="translated">ルートグループ属性スタック。</target>
        </trans-unit>
        <trans-unit id="a455aa3aa2749300af7a2f9fa84acd6a95434ca0" translate="yes" xml:space="preserve">
          <source>The route instance.</source>
          <target state="translated">ルートのインスタンスです。</target>
        </trans-unit>
        <trans-unit id="df66c11304009f1b54e125f8792abe4b667f8351" translate="yes" xml:space="preserve">
          <source>The route resolver callback.</source>
          <target state="translated">ルートリゾルバのコールバック。</target>
        </trans-unit>
        <trans-unit id="3906436aa7329cdc1ee66acc6218655c856ea8b9" translate="yes" xml:space="preserve">
          <source>The route to redirect to if validation fails.</source>
          <target state="translated">検証に失敗した場合にリダイレクトするルート。</target>
        </trans-unit>
        <trans-unit id="d24dce3024d5f1af716ce11fe35be7264b0f321f" translate="yes" xml:space="preserve">
          <source>The router allows you to register routes that respond to any HTTP verb:</source>
          <target state="translated">ルータでは、任意のHTTP動詞に応答するルートを登録することができます。</target>
        </trans-unit>
        <trans-unit id="0465864a655c463a577b3c77df0b72b06e830975" translate="yes" xml:space="preserve">
          <source>The router instance used by the route.</source>
          <target state="translated">ルートが使用するルータのインスタンス。</target>
        </trans-unit>
        <trans-unit id="faa4bc3d702668e81503a764428cce9b603c0348" translate="yes" xml:space="preserve">
          <source>The router instance.</source>
          <target state="translated">ルータのインスタンスです。</target>
        </trans-unit>
        <trans-unit id="6cc811c5e9481003ccadc11cd22103afb0283867" translate="yes" xml:space="preserve">
          <source>The rules to be applied to the data.</source>
          <target state="translated">データに適用されるルール。</target>
        </trans-unit>
        <trans-unit id="570a23552f38197d69e2a011de8ecb76ae5677a4" translate="yes" xml:space="preserve">
          <source>The schedule instance.</source>
          <target state="translated">スケジュールのインスタンスです。</target>
        </trans-unit>
        <trans-unit id="81b99f1fe8e457d4b8064a35b17a4be3d2224ad4" translate="yes" xml:space="preserve">
          <source>The scheduling mutex implementation.</source>
          <target state="translated">スケジューリングミューテックスの実装です。</target>
        </trans-unit>
        <trans-unit id="7058245333e873938ae018da8b2f68e3cc3534dd" translate="yes" xml:space="preserve">
          <source>The schema builder supports several types of indexes. First, let's look at an example that specifies a column's values should be unique. To create the index, we can chain the &lt;code&gt;unique&lt;/code&gt; method onto the column definition:</source>
          <target state="translated">スキーマビルダーは、いくつかのタイプのインデックスをサポートしています。まず、列の値が一意であることを指定する例を見てみましょう。インデックスを作成するには、 &lt;code&gt;unique&lt;/code&gt; メソッドを列定義にチェーンします。</target>
        </trans-unit>
        <trans-unit id="a386f666e32958882381582f86a3d21257541764" translate="yes" xml:space="preserve">
          <source>The schema grammar implementation.</source>
          <target state="translated">スキーマ文法の実装です。</target>
        </trans-unit>
        <trans-unit id="f2a64cc6787dc789508b1e20276bb56a934a25b3" translate="yes" xml:space="preserve">
          <source>The schema grammar instance.</source>
          <target state="translated">スキーマ文法のインスタンス。</target>
        </trans-unit>
        <trans-unit id="c67ab5019d90e90447a8fcbbdbb1bd654737438b" translate="yes" xml:space="preserve">
          <source>The schema table builder's &lt;code&gt;softDeletesTz&lt;/code&gt; method now accepts the column name as its first argument, while the &lt;code&gt;$precision&lt;/code&gt; has been moved to the second argument position:</source>
          <target state="translated">スキーマテーブルビルダーの &lt;code&gt;softDeletesTz&lt;/code&gt; メソッドは、最初の引数として列名を受け入れるようになりましたが、 &lt;code&gt;$precision&lt;/code&gt; は2番目の引数の位置に移動されました。</target>
        </trans-unit>
        <trans-unit id="a5daa9bae128676a36465ea436362153e47cd1d1" translate="yes" xml:space="preserve">
          <source>The search is done using a &quot;loose&quot; comparison, meaning a string with an integer value will be considered equal to an integer of the same value. To use &quot;strict&quot; comparison, pass &lt;code&gt;true&lt;/code&gt; as the second argument to the method:</source>
          <target state="translated">検索は「緩い」比較を使用して行われます。つまり、整数値を持つ文字列は、同じ値の整数と等しいと見なされます。「厳密な」比較を使用するには、メソッドの2番目の引数として &lt;code&gt;true&lt;/code&gt; を渡します。</target>
        </trans-unit>
        <trans-unit id="ce0905e4abdb850343d56e2f176dcfd9eb788b69" translate="yes" xml:space="preserve">
          <source>The second value passed to the &lt;code&gt;env&lt;/code&gt; function is the &quot;default value&quot;. This value will be used if no environment variable exists for the given key.</source>
          <target state="translated">&lt;code&gt;env&lt;/code&gt; 関数に渡される2番目の値は「デフォルト値」です。この値は、指定されたキーの環境変数が存在しない場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="1bd05754b6ce6bfca0f28b161ee7ff587267b074" translate="yes" xml:space="preserve">
          <source>The serializable Closure instance.</source>
          <target state="translated">シリアライズ可能なClosureインスタンス。</target>
        </trans-unit>
        <trans-unit id="abad29def428c274e9e432458e6b092003d55332" translate="yes" xml:space="preserve">
          <source>The service container fires an event each time it resolves an object. You may listen to this event using the &lt;code&gt;resolving&lt;/code&gt; method:</source>
          <target state="translated">サービスコンテナは、オブジェクトを解決するたびにイベントを発生させます。 &lt;code&gt;resolving&lt;/code&gt; メソッドを使用してこのイベントをリッスンできます：</target>
        </trans-unit>
        <trans-unit id="04d8c9727f91f339f25c94ff55f2ad1a99b4c713" translate="yes" xml:space="preserve">
          <source>The session &lt;code&gt;driver&lt;/code&gt; configuration option defines where session data will be stored for each request. Laravel ships with several great drivers out of the box:</source>
          <target state="translated">セッション &lt;code&gt;driver&lt;/code&gt; 構成オプションは、各要求のセッションデータが格納される場所を定義します。Laravelには、すぐに使える優れたドライバーがいくつか付属しています。</target>
        </trans-unit>
        <trans-unit id="0294783c646bb296c15b37388845bf0ad918ad81" translate="yes" xml:space="preserve">
          <source>The session ID.</source>
          <target state="translated">セッションIDです。</target>
        </trans-unit>
        <trans-unit id="86b6ac08faffa1def8fbf6e2d869a7286b5809d1" translate="yes" xml:space="preserve">
          <source>The session attributes.</source>
          <target state="translated">セッションの属性です。</target>
        </trans-unit>
        <trans-unit id="57161d1200f661bda65ef38b3db791a65474da62" translate="yes" xml:space="preserve">
          <source>The session configuration file is stored at &lt;code&gt;config/session.php&lt;/code&gt;. Be sure to review the options available to you in this file. By default, Laravel is configured to use the &lt;code&gt;file&lt;/code&gt; session driver, which will work well for many applications. In production applications, you may consider using the &lt;code&gt;memcached&lt;/code&gt; or &lt;code&gt;redis&lt;/code&gt; drivers for even faster session performance.</source>
          <target state="translated">セッション設定ファイルは &lt;code&gt;config/session.php&lt;/code&gt; に保存されています。このファイルで使用可能なオプションを確認してください。デフォルトでは、Laravelは &lt;code&gt;file&lt;/code&gt; セッションドライバーを使用するように構成されており、多くのアプリケーションで適切に機能します。本番アプリケーションでは、セッションパフォーマンスをさらに高速化するために、 &lt;code&gt;memcached&lt;/code&gt; または &lt;code&gt;redis&lt;/code&gt; ドライバーの使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="91e236fb26b51e7fe36eb0d22aad3aa86c4437bd" translate="yes" xml:space="preserve">
          <source>The session handler implementation.</source>
          <target state="translated">セッションハンドラの実装です。</target>
        </trans-unit>
        <trans-unit id="d7e638c00c25a4feef58c4fd0f743467b64e59c4" translate="yes" xml:space="preserve">
          <source>The session manager.</source>
          <target state="translated">セッションマネージャーです。</target>
        </trans-unit>
        <trans-unit id="884f1740f402897a2f164554c12b7dd3c84282c9" translate="yes" xml:space="preserve">
          <source>The session name.</source>
          <target state="translated">セッション名です。</target>
        </trans-unit>
        <trans-unit id="adcd7b939db251de80585036622f87e72dd2279b" translate="yes" xml:space="preserve">
          <source>The session resolver callable.</source>
          <target state="translated">呼び出し可能なセッションリゾルバ。</target>
        </trans-unit>
        <trans-unit id="ecc519636990ae2e0954fb3e16f4559d1c199dac" translate="yes" xml:space="preserve">
          <source>The session store instance.</source>
          <target state="translated">セッションストアのインスタンス。</target>
        </trans-unit>
        <trans-unit id="c92af64a0fcb75ffc669012ff68d72ab5a2702bf" translate="yes" xml:space="preserve">
          <source>The session store will be returned if no value is passed to the function:</source>
          <target state="translated">関数に値が渡されなかった場合、セッションストアが返されます。</target>
        </trans-unit>
        <trans-unit id="2e929d5585d7e896e78b2c57df639b8515474223" translate="yes" xml:space="preserve">
          <source>The session used by the guard.</source>
          <target state="translated">ガードが使用したセッション。</target>
        </trans-unit>
        <trans-unit id="6a3b4eb0dd200d18724aa6b891c02d73281760af" translate="yes" xml:space="preserve">
          <source>The signatures of the &lt;code&gt;make&lt;/code&gt; and &lt;code&gt;forever&lt;/code&gt; methods of the &lt;code&gt;Illuminate\Contracts\Cookie\Factory&lt;/code&gt; interface &lt;a href=&quot;https://github.com/laravel/framework/pull/23200&quot;&gt;have been changed&lt;/a&gt;. If you are implementing this interface, you should update these methods in your implementation.</source>
          <target state="translated">&lt;code&gt;Illuminate\Contracts\Cookie\Factory&lt;/code&gt; インターフェースの &lt;code&gt;make&lt;/code&gt; および &lt;code&gt;forever&lt;/code&gt; メソッドのシグネチャ&lt;a href=&quot;https://github.com/laravel/framework/pull/23200&quot;&gt;が変更されました&lt;/a&gt;。このインターフェースを実装する場合は、実装でこれらのメソッドを更新する必要があります。</target>
        </trans-unit>
        <trans-unit id="d59c8151600595473a9e55c3b69f4c14dc2e4029" translate="yes" xml:space="preserve">
          <source>The simplest way to create a client is using the &lt;code&gt;passport:client&lt;/code&gt; Artisan command. This command may be used to create your own clients for testing your OAuth2 functionality. When you run the &lt;code&gt;client&lt;/code&gt; command, Passport will prompt you for more information about your client and will provide you with a client ID and secret:</source>
          <target state="translated">クライアントを作成する最も簡単な方法は、 &lt;code&gt;passport:client&lt;/code&gt; Artisanコマンドを使用することです。このコマンドを使用して、OAuth2機能をテストするための独自のクライアントを作成できます。 &lt;code&gt;client&lt;/code&gt; コマンドを実行すると、Passportはクライアントに関する詳細情報の入力を求め、クライアントIDとシークレットを提供します。</target>
        </trans-unit>
        <trans-unit id="ea90c701f257c730f923f4d607874a7d268ef754" translate="yes" xml:space="preserve">
          <source>The simplest way to implement a custom, HTTP request based authentication system is by using the &lt;code&gt;Auth::viaRequest&lt;/code&gt; method. This method allows you to quickly define your authentication process using a single Closure.</source>
          <target state="translated">カスタムのHTTPリクエストベースの認証システムを実装する最も簡単な方法は、 &lt;code&gt;Auth::viaRequest&lt;/code&gt; メソッドを使用することです。この方法では、単一のクロージャを使用して認証プロセスをすばやく定義できます。</target>
        </trans-unit>
        <trans-unit id="79d700d475ad702f4044cb1bebf2b4ebc8a52645" translate="yes" xml:space="preserve">
          <source>The singleton instance of the loader.</source>
          <target state="translated">ローダのシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="fab8ddb58e362e0f813cce9ab58891bd9732bf56" translate="yes" xml:space="preserve">
          <source>The size related validation rules.</source>
          <target state="translated">サイズに関連する検証ルール。</target>
        </trans-unit>
        <trans-unit id="605630b9691153511785ccc54cb7a21860c87180" translate="yes" xml:space="preserve">
          <source>The slot contents for the component.</source>
          <target state="translated">コンポーネントのスロットの内容です。</target>
        </trans-unit>
        <trans-unit id="2d1871832d6b1b3bc8339dca6aafb59eaa2a1b5d" translate="yes" xml:space="preserve">
          <source>The socket ID for the user that raised the event.</source>
          <target state="translated">イベントを発生させたユーザのソケットID。</target>
        </trans-unit>
        <trans-unit id="8fc290930ccdc8a7b287fe1315bd018e78efddd1" translate="yes" xml:space="preserve">
          <source>The stack of concretions currently being built.</source>
          <target state="translated">現在建設中のコンクリの山積み。</target>
        </trans-unit>
        <trans-unit id="4b92f0bf1d8b4ec4237a0cbc2344c976b13a204e" translate="yes" xml:space="preserve">
          <source>The stack of in-progress loops.</source>
          <target state="translated">進行中のループのスタック。</target>
        </trans-unit>
        <trans-unit id="8038d0433773bf60b25f8b2e7ca2294f6745e69f" translate="yes" xml:space="preserve">
          <source>The stack of in-progress push sections.</source>
          <target state="translated">進行中のプッシュセクションのスタック。</target>
        </trans-unit>
        <trans-unit id="d39bd07a9c764bbdc84fd825c9f7bd336a38618d" translate="yes" xml:space="preserve">
          <source>The stack of in-progress sections.</source>
          <target state="translated">進行中のセクションのスタック。</target>
        </trans-unit>
        <trans-unit id="ebd9c42853a29668af47d49aad93db273d858e71" translate="yes" xml:space="preserve">
          <source>The states to apply.</source>
          <target state="translated">申請する州。</target>
        </trans-unit>
        <trans-unit id="c207e8c763ad759dd13455d9527eb1762978a1b5" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;macro&lt;/code&gt; method allows you to add methods to the &lt;code&gt;Collection&lt;/code&gt; class at run time. Refer to the documentation on &lt;a href=&quot;#extending-collections&quot;&gt;extending collections&lt;/a&gt; for more information.</source>
          <target state="translated">静的 &lt;code&gt;macro&lt;/code&gt; メソッドを使用すると、実行時に &lt;code&gt;Collection&lt;/code&gt; クラスにメソッドを追加できます。詳細については、&lt;a href=&quot;#extending-collections&quot;&gt;コレクションの拡張&lt;/a&gt;に関するドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="9ea08eec7738c3c976ac9e2159f5771903109ba9" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;make&lt;/code&gt; method creates a new collection instance. See the &lt;a href=&quot;#creating-collections&quot;&gt;Creating Collections&lt;/a&gt; section.</source>
          <target state="translated">静的な &lt;code&gt;make&lt;/code&gt; メソッドは、新しいコレクションインスタンスを作成します。&lt;a href=&quot;#creating-collections&quot;&gt;コレクション&lt;/a&gt;の作成のセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="000b939d44ff6405366f72b958c90793e21826a4" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;times&lt;/code&gt; method creates a new collection by invoking the callback a given amount of times:</source>
          <target state="translated">static &lt;code&gt;times&lt;/code&gt; メソッドは、指定された回数のコールバックを呼び出すことにより、新しいコレクションを作成します。</target>
        </trans-unit>
        <trans-unit id="9469ee9100967bd5e14ce083001fc58b16e2b4f4" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;unwrap&lt;/code&gt; method returns the collection's underlying items from the given value when applicable:</source>
          <target state="translated">静的な &lt;code&gt;unwrap&lt;/code&gt; メソッドは、該当する場合、指定された値からコレクションの基になるアイテムを返します。</target>
        </trans-unit>
        <trans-unit id="351963f9964f48652441cde6fbab1a66f4ae4866" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;wrap&lt;/code&gt; method wraps the given value in a collection when applicable:</source>
          <target state="translated">静的 &lt;code&gt;wrap&lt;/code&gt; メソッドは、該当する場合、指定された値をコレクションにラップします。</target>
        </trans-unit>
        <trans-unit id="3e1bb0172b2343d1e22fc96a472fede0f2a29f44" translate="yes" xml:space="preserve">
          <source>The status code to use for the response.</source>
          <target state="translated">応答に使用するステータスコード。</target>
        </trans-unit>
        <trans-unit id="ab516660be008eab1ea7722ad92001711b12c0c7" translate="yes" xml:space="preserve">
          <source>The storage engine that should be used for the table.</source>
          <target state="translated">テーブルに使うべきストレージエンジン。</target>
        </trans-unit>
        <trans-unit id="a74693e7d566223803fcb4ac643b0d5a409e1f5a" translate="yes" xml:space="preserve">
          <source>The storage format of the model's date columns.</source>
          <target state="translated">モデルの日付列の格納形式。</target>
        </trans-unit>
        <trans-unit id="58d00d23ebef7e4b18f49156da48b1f9044dd2f3" translate="yes" xml:space="preserve">
          <source>The streamed content of the response.</source>
          <target state="translated">レスポンスのストリーム内容。</target>
        </trans-unit>
        <trans-unit id="92f5b66fce4d57ca46c4301a2f56e395878b52bb" translate="yes" xml:space="preserve">
          <source>The string under validation.</source>
          <target state="translated">検証中の文字列。</target>
        </trans-unit>
        <trans-unit id="07fca087272bfb1228ca05e1b9c6b2e880ee0a46" translate="yes" xml:space="preserve">
          <source>The subject of the message.</source>
          <target state="translated">メッセージのお題です。</target>
        </trans-unit>
        <trans-unit id="2dfe9b67a6294019a5ca9507a49ba9c03554e6f1" translate="yes" xml:space="preserve">
          <source>The subject of the notification.</source>
          <target state="translated">通知の対象となる。</target>
        </trans-unit>
        <trans-unit id="5aedf455f4444ff3e0d1252119d24d7f36685ac9" translate="yes" xml:space="preserve">
          <source>The subscriber classes to register.</source>
          <target state="translated">登録する加入者クラス。</target>
        </trans-unit>
        <trans-unit id="72efd8976f8b653257fb21c090272816e5b7870f" translate="yes" xml:space="preserve">
          <source>The table associated with the model.</source>
          <target state="translated">モデルに関連付けられたテーブル。</target>
        </trans-unit>
        <trans-unit id="b6636efce945f5b844f6606ce5e3b686d0f1a55c" translate="yes" xml:space="preserve">
          <source>The table component allows you to transform a Markdown table into an HTML table. The component accepts the Markdown table as its content. Table column alignment is supported using the default Markdown table alignment syntax:</source>
          <target state="translated">table コンポーネントを使用すると、Markdown テーブルを HTML テーブルに変換することができます。コンポーネントはコンテンツとしてMarkdownテーブルを受け入れます。テーブルの列の整列は、デフォルトのMarkdownテーブル整列構文を使用してサポートされています。</target>
        </trans-unit>
        <trans-unit id="ac480daa8961851dade10b123fa7553c8828f61c" translate="yes" xml:space="preserve">
          <source>The table containing the users.</source>
          <target state="translated">ユーザーを含むテーブル。</target>
        </trans-unit>
        <trans-unit id="70671f05af37162c8d962e5cfc1ddad2830aa79a" translate="yes" xml:space="preserve">
          <source>The table headers for the command.</source>
          <target state="translated">コマンドのテーブルヘッダ。</target>
        </trans-unit>
        <trans-unit id="a647d0ac66871217262d0eda401391f559a35c64" translate="yes" xml:space="preserve">
          <source>The table joins for the query.</source>
          <target state="translated">クエリのテーブル結合。</target>
        </trans-unit>
        <trans-unit id="9010826d40f8e19e4307e63c14b94fb45c8924cd" translate="yes" xml:space="preserve">
          <source>The table prefix for the connection.</source>
          <target state="translated">接続のテーブルの接頭辞。</target>
        </trans-unit>
        <trans-unit id="ff34db9a5246ad70031dc50f2490a2cb456c32e4" translate="yes" xml:space="preserve">
          <source>The table the blueprint describes.</source>
          <target state="translated">設計図に記載されているテーブル。</target>
        </trans-unit>
        <trans-unit id="28229fa2f11ef37fd72a1ea3db398999cfd869c6" translate="yes" xml:space="preserve">
          <source>The table the join clause is joining to.</source>
          <target state="translated">結合句が結合しているテーブル。</target>
        </trans-unit>
        <trans-unit id="a1c808e39a1d0802e86ea84272bab211b871a5ea" translate="yes" xml:space="preserve">
          <source>The table to run the query against.</source>
          <target state="translated">クエリを実行するテーブル。</target>
        </trans-unit>
        <trans-unit id="0f597a9d03181cb363c716a58101aa481ce2e583" translate="yes" xml:space="preserve">
          <source>The table which the query is targeting.</source>
          <target state="translated">クエリが対象としているテーブル。</target>
        </trans-unit>
        <trans-unit id="f9f57e81a603df6cc58d93c504709a35203899ae" translate="yes" xml:space="preserve">
          <source>The tag names.</source>
          <target state="translated">タグ名です。</target>
        </trans-unit>
        <trans-unit id="f7ac75ddb7d42cf1ed0db2229a0d46c47fac2a21" translate="yes" xml:space="preserve">
          <source>The tag set instance.</source>
          <target state="translated">タグセットのインスタンス。</target>
        </trans-unit>
        <trans-unit id="e6e30172d78007afa1d8eb6f5f7a70701907efb7" translate="yes" xml:space="preserve">
          <source>The tags that were assigned to the key.</source>
          <target state="translated">鍵に割り当てられたタグ。</target>
        </trans-unit>
        <trans-unit id="8c8ec9420a8341e205092121dace68183dc6ae22" translate="yes" xml:space="preserve">
          <source>The tags to publish.</source>
          <target state="translated">公開するタグです。</target>
        </trans-unit>
        <trans-unit id="21426025f08b38e4c8e99f9fd019ee83a46f06f4" translate="yes" xml:space="preserve">
          <source>The target being tapped.</source>
          <target state="translated">タップされているターゲット。</target>
        </trans-unit>
        <trans-unit id="d4da7a593b36855a0518d6f27745a74332d8fede" translate="yes" xml:space="preserve">
          <source>The temporary file resource.</source>
          <target state="translated">一時ファイルリソース。</target>
        </trans-unit>
        <trans-unit id="d29ff031bedf05275f0039e818893f2ce1dab694" translate="yes" xml:space="preserve">
          <source>The test being run.</source>
          <target state="translated">実行されているテスト。</target>
        </trans-unit>
        <trans-unit id="7f7d94ab637f05b8821fafe07a855f689ebe8ce4" translate="yes" xml:space="preserve">
          <source>The text / label for the action.</source>
          <target state="translated">アクションのテキスト/ラベル。</target>
        </trans-unit>
        <trans-unit id="dc176e2faba262f9929bdb0253df0827fa4ff8fe" translate="yes" xml:space="preserve">
          <source>The text content of the message.</source>
          <target state="translated">メッセージのテキスト内容。</target>
        </trans-unit>
        <trans-unit id="78ecec34dc389b6cf3b91762e1fcc609e2741a7a" translate="yes" xml:space="preserve">
          <source>The throttled request.</source>
          <target state="translated">スロットル化されたリクエスト。</target>
        </trans-unit>
        <trans-unit id="ff925b4ac5b682308ad51747d9142199b714e9f1" translate="yes" xml:space="preserve">
          <source>The timestamp indicating when the job should timeout.</source>
          <target state="translated">ジョブがタイムアウトするタイミングを示すタイムスタンプ。</target>
        </trans-unit>
        <trans-unit id="b31512cbd68c54dad88a9e89b51425ebb5a34758" translate="yes" xml:space="preserve">
          <source>The timestamp of the end of the current duration.</source>
          <target state="translated">現在の継続時間の終了タイムスタンプ。</target>
        </trans-unit>
        <trans-unit id="b92f0a4703fc19402ceb9c0cbb466e700c82d8e0" translate="yes" xml:space="preserve">
          <source>The timezone the date should be evaluated on.</source>
          <target state="translated">日付が評価されるべきタイムゾーン。</target>
        </trans-unit>
        <trans-unit id="4822bc10088131f2e2ada0734ad38e425aada932" translate="yes" xml:space="preserve">
          <source>The title field of the attachment field.</source>
          <target state="translated">添付ファイルのタイトル欄です。</target>
        </trans-unit>
        <trans-unit id="1d4072edcdf635d0ee832538ca8012af02ce09fc" translate="yes" xml:space="preserve">
          <source>The token database table.</source>
          <target state="translated">トークンデータベーステーブル。</target>
        </trans-unit>
        <trans-unit id="ce4a944aaa46dea95371afcc79aa0c58c866b85f" translate="yes" xml:space="preserve">
          <source>The total number of items before slicing.</source>
          <target state="translated">スライスする前の合計数です。</target>
        </trans-unit>
        <trans-unit id="a5f4249eec9da9470e388c3cd7f2bf76586dd5a7" translate="yes" xml:space="preserve">
          <source>The total number of items in the array being iterated.</source>
          <target state="translated">反復される配列内の項目の総数。</target>
        </trans-unit>
        <trans-unit id="49bbb67f8dc2f8d1fa0512778dd06bee98082949" translate="yes" xml:space="preserve">
          <source>The translation replacements for the translation being rendered.</source>
          <target state="translated">レンダリングされている翻訳の置き換えです。</target>
        </trans-unit>
        <trans-unit id="ee8e29d48de7dc939a36b7d4f9d8f93a595d543a" translate="yes" xml:space="preserve">
          <source>The type of class being generated.</source>
          <target state="translated">生成されるクラスのタイプ。</target>
        </trans-unit>
        <trans-unit id="2d24cc5fcb0f5b7079e14d397702c0120c738448" translate="yes" xml:space="preserve">
          <source>The type of join being performed.</source>
          <target state="translated">実行される結合のタイプ。</target>
        </trans-unit>
        <trans-unit id="5dd6bca065f5d4ecd689d277be205f971b1146a1" translate="yes" xml:space="preserve">
          <source>The type of the polymorphic relation.</source>
          <target state="translated">多相関係のタイプ。</target>
        </trans-unit>
        <trans-unit id="e837d173527d3e77cbb6b1090734ad39a2225065" translate="yes" xml:space="preserve">
          <source>The underlying container instance.</source>
          <target state="translated">その下にあるコンテナのインスタンス。</target>
        </trans-unit>
        <trans-unit id="9ad916de6e07699a45d35acdb5612d7cad70d299" translate="yes" xml:space="preserve">
          <source>The underlying job record.</source>
          <target state="translated">その下の職歴。</target>
        </trans-unit>
        <trans-unit id="8ab3a9e0a6b67e9e6e335efc87f28772701d2a28" translate="yes" xml:space="preserve">
          <source>The underlying logger implementation.</source>
          <target state="translated">基礎となるロガーの実装。</target>
        </trans-unit>
        <trans-unit id="b0c437bd2beab584bc144487c106f633dfeab59d" translate="yes" xml:space="preserve">
          <source>The underlying object.</source>
          <target state="translated">基礎となるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="f301c22722a1a8356b09a117c658be20c34d02f4" translate="yes" xml:space="preserve">
          <source>The underlying queue job instance.</source>
          <target state="translated">基底にあるキュー・ジョブのインスタンス。</target>
        </trans-unit>
        <trans-unit id="b988f2134cf971ad4817b031091500f179c52985" translate="yes" xml:space="preserve">
          <source>The underlying resource.</source>
          <target state="translated">根底にある資源。</target>
        </trans-unit>
        <trans-unit id="17e75b55666e5d5ae74cb918d824095115af2efe" translate="yes" xml:space="preserve">
          <source>The underlying response instance.</source>
          <target state="translated">基礎となるレスポンスのインスタンス。</target>
        </trans-unit>
        <trans-unit id="f1dfb580510acd5c8f3435e1ab8bb2e5ea04f3aa" translate="yes" xml:space="preserve">
          <source>The unique identifier for the notification.</source>
          <target state="translated">通知の一意の識別子。</target>
        </trans-unit>
        <trans-unit id="e5752ae046b5fbc7351f998c7f29237a2ed74ca7" translate="yes" xml:space="preserve">
          <source>The unique identifier of the model.</source>
          <target state="translated">モデルの一意の識別子。</target>
        </trans-unit>
        <trans-unit id="9531c600853530f8b4223dbfd5769ad70e0d84ae" translate="yes" xml:space="preserve">
          <source>The unused &lt;code&gt;options&lt;/code&gt; argument of the &lt;code&gt;Illuminate\Foundation\Application&lt;/code&gt; class' &lt;code&gt;register&lt;/code&gt; method has been removed. If you are overriding this method, you should update your method's signature:</source>
          <target state="translated">&lt;code&gt;Illuminate\Foundation\Application&lt;/code&gt; クラスの &lt;code&gt;register&lt;/code&gt; メソッドの未使用の &lt;code&gt;options&lt;/code&gt; 引数は削除されました。このメソッドをオーバーライドする場合は、メソッドの署名を更新する必要があります。</target>
        </trans-unit>
        <trans-unit id="76bbb754bf9cab4e9ebcc97d9224c60b8790d4d1" translate="yes" xml:space="preserve">
          <source>The user emoji icon for the message.</source>
          <target state="translated">メッセージのユーザー絵文字アイコンです。</target>
        </trans-unit>
        <trans-unit id="6d86f1ff2c7e67cba710d84c1174313c189623a4" translate="yes" xml:space="preserve">
          <source>The user has been authenticated.</source>
          <target state="translated">ユーザーが認証されました。</target>
        </trans-unit>
        <trans-unit id="6f334a7b748574a902e38177597fba429d30f87f" translate="yes" xml:space="preserve">
          <source>The user has been registered.</source>
          <target state="translated">ユーザーが登録されています。</target>
        </trans-unit>
        <trans-unit id="03c3f3fd14d96d990f6ceb432de3b6e717cd57c5" translate="yes" xml:space="preserve">
          <source>The user has logged out of the application.</source>
          <target state="translated">ユーザーがアプリケーションからログアウトしました。</target>
        </trans-unit>
        <trans-unit id="478709e557cf90ed3bbe37741eec388ead3ca14e" translate="yes" xml:space="preserve">
          <source>The user image icon for the message.</source>
          <target state="translated">メッセージのユーザーイメージアイコンです。</target>
        </trans-unit>
        <trans-unit id="0959d1e85098f21adafb87770cc296a926901dfa" translate="yes" xml:space="preserve">
          <source>The user provider implementation.</source>
          <target state="translated">ユーザープロバイダの実装です。</target>
        </trans-unit>
        <trans-unit id="abcfedd81fa68455cfb0ec897c75b5cc0995d3a9" translate="yes" xml:space="preserve">
          <source>The user resolver callable.</source>
          <target state="translated">呼び出し可能なユーザリゾルバです。</target>
        </trans-unit>
        <trans-unit id="f2785046c757357d117b5a8c8e29e47c0d9096d8" translate="yes" xml:space="preserve">
          <source>The user resolver callback.</source>
          <target state="translated">ユーザーリゾルバのコールバック。</target>
        </trans-unit>
        <trans-unit id="7f3e851e6d656f66917aa4f25b66c027b5829d91" translate="yes" xml:space="preserve">
          <source>The user resolver shared by various services.</source>
          <target state="translated">各種サービスで共有されているユーザーリゾルバ。</target>
        </trans-unit>
        <trans-unit id="b03b1819d6ab78080d4c4b1cd7eac731ae6209c7" translate="yes" xml:space="preserve">
          <source>The user the attempter was trying to authenticate as.</source>
          <target state="translated">認証試行者が認証しようとしていたユーザー。</target>
        </trans-unit>
        <trans-unit id="991c31171fd879bb8b9501eac26c1d9cd7555318" translate="yes" xml:space="preserve">
          <source>The user the command should run as.</source>
          <target state="translated">コマンドを実行するユーザーを指定します。</target>
        </trans-unit>
        <trans-unit id="33e7f66129d63caf8084a77ba47aaceb084ec7f8" translate="yes" xml:space="preserve">
          <source>The user we last attempted to retrieve.</source>
          <target state="translated">最後に取得しようとしたユーザーです。</target>
        </trans-unit>
        <trans-unit id="eb011f8f964fbc3f1d8226e0def127773755ba07" translate="yes" xml:space="preserve">
          <source>The user.</source>
          <target state="translated">ユーザーが</target>
        </trans-unit>
        <trans-unit id="a7509c52848002be31db1d30395a03ffa3e89d15" translate="yes" xml:space="preserve">
          <source>The username to send the message from.</source>
          <target state="translated">メッセージを送信するユーザー名です。</target>
        </trans-unit>
        <trans-unit id="17c65b2c84ac03320eef6cb97e212a61a13cc57d" translate="yes" xml:space="preserve">
          <source>The validation error message.</source>
          <target state="translated">バリデーションのエラーメッセージが表示されます。</target>
        </trans-unit>
        <trans-unit id="04ec0b5ea4de5f500778e64fb8042731a4ffbeee" translate="yes" xml:space="preserve">
          <source>The validation rules that imply the field is required.</source>
          <target state="translated">フィールドが必須であることを暗示するバリデーションルール。</target>
        </trans-unit>
        <trans-unit id="52cea3c083bf0077073af1e40ab30369af7010a1" translate="yes" xml:space="preserve">
          <source>The validation rules that may be applied to files.</source>
          <target state="translated">ファイルに適用される可能性のある検証ルール。</target>
        </trans-unit>
        <trans-unit id="a214dccaffafc13138095ef01bde1dade3d8b141" translate="yes" xml:space="preserve">
          <source>The validation rules which depend on other fields as parameters.</source>
          <target state="translated">他のフィールドにパラメータとして依存する検証ルール。</target>
        </trans-unit>
        <trans-unit id="e79792af26bb12e0110123aa3c13fa12cf55e007" translate="yes" xml:space="preserve">
          <source>The validator also allows you to attach callbacks to be run after validation is completed. This allows you to easily perform further validation and even add more error messages to the message collection. To get started, use the &lt;code&gt;after&lt;/code&gt; method on a validator instance:</source>
          <target state="translated">バリデータを使用すると、検証の完了後に実行されるコールバックを添付することもできます。これにより、さらに検証を簡単に実行でき、さらにメッセージコレクションにエラーメッセージを追加できます。開始するには、バリデーターインスタンスで &lt;code&gt;after&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="1efad989d3ba7a320ef01cb90a05a29f0b4171c1" translate="yes" xml:space="preserve">
          <source>The validator instance.</source>
          <target state="translated">バリデータのインスタンス。</target>
        </trans-unit>
        <trans-unit id="17910fd1025c8285b31c86579bf160394803ed67" translate="yes" xml:space="preserve">
          <source>The validators used by the routes.</source>
          <target state="translated">ルートが使用するバリデータ。</target>
        </trans-unit>
        <trans-unit id="6daf4a5f6df348781c1d439c71c7c374f3d314ec" translate="yes" xml:space="preserve">
          <source>The value for &lt;code&gt;$carry&lt;/code&gt; on the first iteration is &lt;code&gt;null&lt;/code&gt;; however, you may specify its initial value by passing a second argument to &lt;code&gt;reduce&lt;/code&gt;:</source>
          <target state="translated">最初の反復の &lt;code&gt;$carry&lt;/code&gt; の値は &lt;code&gt;null&lt;/code&gt; です。ただし、 &lt;code&gt;reduce&lt;/code&gt; に 2番目の引数を渡すことで初期値を指定できます。</target>
        </trans-unit>
        <trans-unit id="e9048ea9673d1ad8bdccecb637db42ea4310c7eb" translate="yes" xml:space="preserve">
          <source>The value is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">値は &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="157d1e8a08dca776dd2e01cb74459d2b6b870275" translate="yes" xml:space="preserve">
          <source>The value is an empty array or empty &lt;code&gt;Countable&lt;/code&gt; object.</source>
          <target state="translated">値は空の配列または空の &lt;code&gt;Countable&lt;/code&gt; オブジェクトです。</target>
        </trans-unit>
        <trans-unit id="061868d471368e7000b71c52038b35dccf93e542" translate="yes" xml:space="preserve">
          <source>The value is an empty string.</source>
          <target state="translated">値は空の文字列です。</target>
        </trans-unit>
        <trans-unit id="0d7e7d59ae6444a87afbe50c77ba904921dc2e88" translate="yes" xml:space="preserve">
          <source>The value is an integer where 1 is the highest priority and 5 is the lowest.</source>
          <target state="translated">値は、1が最も優先度が高く、5が最も低い整数です。</target>
        </trans-unit>
        <trans-unit id="711cb6f84f883c1ae7df775cf9aed799b759099b" translate="yes" xml:space="preserve">
          <source>The value is an uploaded file with no path.</source>
          <target state="translated">値は、パスのないアップロードされたファイルです。</target>
        </trans-unit>
        <trans-unit id="6888c5949df1c7a77a3be83f0305f656b8d817ad" translate="yes" xml:space="preserve">
          <source>The value of the expression.</source>
          <target state="translated">式の値。</target>
        </trans-unit>
        <trans-unit id="38800f33ee4efa9ac81c649d15abdb07a7fce567" translate="yes" xml:space="preserve">
          <source>The value of the polymorphic relation.</source>
          <target state="translated">多相関係の値。</target>
        </trans-unit>
        <trans-unit id="1601801c27c07c18ca583c7a2415e03c7ebcb18c" translate="yes" xml:space="preserve">
          <source>The value that was retrieved.</source>
          <target state="translated">取得した値。</target>
        </trans-unit>
        <trans-unit id="9e81d39ebe7a2b1327a1239a7373073d3bc53cdd" translate="yes" xml:space="preserve">
          <source>The value that was written.</source>
          <target state="translated">書かれていた値。</target>
        </trans-unit>
        <trans-unit id="39ff959a4cb1cc7c2f334da6aa7539edae71cf71" translate="yes" xml:space="preserve">
          <source>The vendor path.</source>
          <target state="translated">ベンダーパスです。</target>
        </trans-unit>
        <trans-unit id="707b34c0cbc7dc0182476c83bbde4465a1706f60" translate="yes" xml:space="preserve">
          <source>The verbs used in the resource URIs.</source>
          <target state="translated">リソースURIで使用される動詞。</target>
        </trans-unit>
        <trans-unit id="9caa59f20b33fc4532537e76434a837cf7ac16c0" translate="yes" xml:space="preserve">
          <source>The verified user.</source>
          <target state="translated">検証済みのユーザー。</target>
        </trans-unit>
        <trans-unit id="fef9b7ec0888871040e13ad692f156c04a37a7c5" translate="yes" xml:space="preserve">
          <source>The view composer events.</source>
          <target state="translated">コンポーザーのイベントを表示します。</target>
        </trans-unit>
        <trans-unit id="1b4f34f5b9982381fb6984f4ee1e48098080e706" translate="yes" xml:space="preserve">
          <source>The view data for the message.</source>
          <target state="translated">メッセージのビューデータです。</target>
        </trans-unit>
        <trans-unit id="6104c14e27801982d3214fa3e60787f0f87ecddb" translate="yes" xml:space="preserve">
          <source>The view factory implementation.</source>
          <target state="translated">ビューファクトリーの実装です。</target>
        </trans-unit>
        <trans-unit id="ad8822413f8c1b262c11320d8f4aad7a7388d6c6" translate="yes" xml:space="preserve">
          <source>The view factory instance.</source>
          <target state="translated">ビューファクトリのインスタンス。</target>
        </trans-unit>
        <trans-unit id="bb00fcd493cdb0b4f8520e12316f3dc732a8a332" translate="yes" xml:space="preserve">
          <source>The view factory resolver callback.</source>
          <target state="translated">ビューファクトリリゾルバのコールバック。</target>
        </trans-unit>
        <trans-unit id="50a56ee78bc61de00eb3c7710dcc642c7046c946" translate="yes" xml:space="preserve">
          <source>The view finder implementation.</source>
          <target state="translated">ビューファインダーの実装です。</target>
        </trans-unit>
        <trans-unit id="c3cb48db5dc1a414221a9fa624829dc51ab42ca2" translate="yes" xml:space="preserve">
          <source>The view that was last to be rendered.</source>
          <target state="translated">最後にレンダリングされた景色。</target>
        </trans-unit>
        <trans-unit id="17be7bff4f0b2ea81b770722336aa0165c31c70d" translate="yes" xml:space="preserve">
          <source>The view to be rendered.</source>
          <target state="translated">レンダリングされるビュー。</target>
        </trans-unit>
        <trans-unit id="ec784a65f31d480cb11e3f916c7f1125f1dadfc8" translate="yes" xml:space="preserve">
          <source>The view to use for the message.</source>
          <target state="translated">メッセージに使用するビュー。</target>
        </trans-unit>
        <trans-unit id="fa951d6479d905db5220de2c424926ef0ae15958" translate="yes" xml:space="preserve">
          <source>The views that need to be exported.</source>
          <target state="translated">エクスポートする必要があるビュー。</target>
        </trans-unit>
        <trans-unit id="e824bb682736e368dc8df6013d8007d1019fbfbf" translate="yes" xml:space="preserve">
          <source>The where constraints for the query.</source>
          <target state="translated">クエリのwhere制約。</target>
        </trans-unit>
        <trans-unit id="86305091cca3d9a38fa0c3ec56065049f12fb99f" translate="yes" xml:space="preserve">
          <source>The wildcard listeners.</source>
          <target state="translated">ワイルドカードのリスナー</target>
        </trans-unit>
        <trans-unit id="ddfa44fe69f849ba9e7115ea619e94b5d521199d" translate="yes" xml:space="preserve">
          <source>The working path to regenerate from.</source>
          <target state="translated">から再生するためのワーキングパス。</target>
        </trans-unit>
        <trans-unit id="161310574c5a47f885cd6467b63a3e77674cee01" translate="yes" xml:space="preserve">
          <source>Then attach this middleware to a route:</source>
          <target state="translated">そして、このミドルウェアをルートにアタッチします。</target>
        </trans-unit>
        <trans-unit id="39c210aeb4928d0d9a2d41f1886b73cb2abc2349" translate="yes" xml:space="preserve">
          <source>Then you should add the following Braintree SDK calls to your &lt;code&gt;AppServiceProvider&lt;/code&gt; service provider's &lt;code&gt;boot&lt;/code&gt; method:</source>
          <target state="translated">次に、次のBraintree SDK呼び出しを &lt;code&gt;AppServiceProvider&lt;/code&gt; サービスプロバイダーの &lt;code&gt;boot&lt;/code&gt; メソッドに追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="b131abe2615203f387c2a03a60226568c1e3edf6" translate="yes" xml:space="preserve">
          <source>Then, once you have created the &lt;code&gt;meta&lt;/code&gt; tag, you can instruct a library like jQuery to automatically add the token to all request headers. This provides simple, convenient CSRF protection for your AJAX based applications:</source>
          <target state="translated">次に、 &lt;code&gt;meta&lt;/code&gt; を作成したら、jQueryなどのライブラリに、すべてのリクエストヘッダーにトークンを自動的に追加するように指示できます。これにより、AJAXベースのアプリケーションにシンプルで便利なCSRF保護が提供されます。</target>
        </trans-unit>
        <trans-unit id="d8834ae3158eab3458ec6a4b61cecb4d659d5abf" translate="yes" xml:space="preserve">
          <source>Then, update any reference to the old directories in your &lt;code&gt;webpack.mix.js&lt;/code&gt; file:</source>
          <target state="translated">次に、 &lt;code&gt;webpack.mix.js&lt;/code&gt; ファイルの古いディレクトリへの参照を更新します。</target>
        </trans-unit>
        <trans-unit id="f46ab02d9a619a36b2686f2513a4b155775a6713" translate="yes" xml:space="preserve">
          <source>Then, when configuring the mailable within its &lt;code&gt;build&lt;/code&gt; method, call the &lt;code&gt;markdown&lt;/code&gt; method instead of the &lt;code&gt;view&lt;/code&gt; method. The &lt;code&gt;markdown&lt;/code&gt; methods accepts the name of the Markdown template and an optional array of data to make available to the template:</source>
          <target state="translated">その内mailableを設定するときに、 &lt;code&gt;build&lt;/code&gt; 方法、呼び出し &lt;code&gt;markdown&lt;/code&gt; 方式の代わりに &lt;code&gt;view&lt;/code&gt; 方法を。 &lt;code&gt;markdown&lt;/code&gt; メソッドテンプレートに利用できるようにMarkdownをテンプレートとデータのオプションの配列の名前を受け付けます。</target>
        </trans-unit>
        <trans-unit id="2b5f8400f8cf2eecc92b3cdd65e0feedb0a826a6" translate="yes" xml:space="preserve">
          <source>Then, when running your &lt;a href=&quot;#running-the-queue-worker&quot;&gt;queue worker&lt;/a&gt;, you should specify the maximum number of times a job should be attempted using the &lt;code&gt;--tries&lt;/code&gt; switch on the &lt;code&gt;queue:work&lt;/code&gt; command. If you do not specify a value for the &lt;code&gt;--tries&lt;/code&gt; option, jobs will be attempted indefinitely:</source>
          <target state="translated">次に、&lt;a href=&quot;#running-the-queue-worker&quot;&gt;キューワーカーを&lt;/a&gt;実行するときに、 &lt;code&gt;queue:work&lt;/code&gt; コマンドの &lt;code&gt;--tries&lt;/code&gt; スイッチを使用してジョブを試行する最大回数を指定する必要があります。 &lt;code&gt;--tries&lt;/code&gt; オプションの値を指定しない場合、ジョブは無期限に試行されます。</target>
        </trans-unit>
        <trans-unit id="4d6b7bdb0dde82bf20180d4ff9db3d841472c5af" translate="yes" xml:space="preserve">
          <source>Then, you may use the &lt;code&gt;logoutOtherDevices&lt;/code&gt; method on the &lt;code&gt;Auth&lt;/code&gt; facade. This method requires the user to provide their current password, which your application should accept through an input form:</source>
          <target state="translated">次に、 &lt;code&gt;Auth&lt;/code&gt; ファサードの &lt;code&gt;logoutOtherDevices&lt;/code&gt; メソッドを使用できます。この方法では、ユーザーが現在のパスワードを入力する必要があります。このパスワードは、アプリケーションが入力フォームから受け入れる必要があります。</target>
        </trans-unit>
        <trans-unit id="7ac63e128e20270751d97b64ab3ad08a646ce00a" translate="yes" xml:space="preserve">
          <source>Then, you only need to &lt;a href=&quot;events&quot;&gt;fire the event&lt;/a&gt; as you normally would. Once the event has been fired, a &lt;a href=&quot;queues&quot;&gt;queued job&lt;/a&gt; will automatically broadcast the event over your specified broadcast driver.</source>
          <target state="translated">次に、通常どおりに&lt;a href=&quot;events&quot;&gt;イベント&lt;/a&gt;を発生させるだけです。イベントが発生すると、&lt;a href=&quot;queues&quot;&gt;キューに入れられたジョブ&lt;/a&gt;が、指定されたブロードキャストドライバーを介してイベントを自動的にブロードキャストします。</target>
        </trans-unit>
        <trans-unit id="c697e48a5bcfe4e8d4e6273e500fc78caf2a7e25" translate="yes" xml:space="preserve">
          <source>There are a few important things to note about the &lt;code&gt;putFile&lt;/code&gt; method. Note that we only specified a directory name, not a file name. By default, the &lt;code&gt;putFile&lt;/code&gt; method will generate a unique ID to serve as the file name. The file's extension will be determined by examining the file's MIME type. The path to the file will be returned by the &lt;code&gt;putFile&lt;/code&gt; method so you can store the path, including the generated file name, in your database.</source>
          <target state="translated">&lt;code&gt;putFile&lt;/code&gt; メソッドについて注意すべき重要な点がいくつかあります。ファイル名ではなくディレクトリ名のみを指定したことに注意してください。デフォルトでは、 &lt;code&gt;putFile&lt;/code&gt; メソッドはファイル名として機能する一意のIDを生成します。ファイルの拡張子は、ファイルのMIMEタイプを調べることによって決定されます。ファイルへのパスは &lt;code&gt;putFile&lt;/code&gt; メソッドによって返されるため、生成されたファイル名を含むパスをデータベースに保存できます。</target>
        </trans-unit>
        <trans-unit id="bd26868f4a5feb2a2ca0bb1bca97358048ace6d0" translate="yes" xml:space="preserve">
          <source>There are a few important things to note about this example. Note that we only specified a directory name, not a file name. By default, the &lt;code&gt;store&lt;/code&gt; method will generate a unique ID to serve as the file name. The file's extension will be determined by examining the file's MIME type. The path to the file will be returned by the &lt;code&gt;store&lt;/code&gt; method so you can store the path, including the generated file name, in your database.</source>
          <target state="translated">この例について注意すべき重要な点がいくつかあります。ファイル名ではなくディレクトリ名のみを指定したことに注意してください。デフォルトでは、 &lt;code&gt;store&lt;/code&gt; メソッドはファイル名として機能する一意のIDを生成します。ファイルの拡張子は、ファイルのMIMEタイプを調べることによって決定されます。ファイルへのパスは、生成されたファイル名を含むパスをデータベースに格納できるように、 &lt;code&gt;store&lt;/code&gt; メソッドによって返されます。</target>
        </trans-unit>
        <trans-unit id="c944c16dba1c6549f839b502058b6671f8e5d523" translate="yes" xml:space="preserve">
          <source>There are a variety of other methods available on &lt;code&gt;UploadedFile&lt;/code&gt; instances. Check out the &lt;a href=&quot;http://api.symfony.com/3.0/Symfony/Component/HttpFoundation/File/UploadedFile.html&quot;&gt;API documentation for the class&lt;/a&gt; for more information regarding these methods.</source>
          <target state="translated">&lt;code&gt;UploadedFile&lt;/code&gt; インスタンスで使用できる他のさまざまなメソッドがあります。これらのメソッドの詳細について&lt;a href=&quot;http://api.symfony.com/3.0/Symfony/Component/HttpFoundation/File/UploadedFile.html&quot;&gt;は、クラスのAPIドキュメントを&lt;/a&gt;確認してください。</target>
        </trans-unit>
        <trans-unit id="b24f30ff99c6e9a7d884dd787e0f9706a391c5dd" translate="yes" xml:space="preserve">
          <source>There are several middleware included in the Laravel framework, including middleware for authentication and CSRF protection. All of these middleware are located in the &lt;code&gt;app/Http/Middleware&lt;/code&gt; directory.</source>
          <target state="translated">Laravelフレームワークには、認証やCSRF保護用のミドルウェアなど、いくつかのミドルウェアが含まれています。これらのミドルウェアはすべて &lt;code&gt;app/Http/Middleware&lt;/code&gt; ディレクトリにあります。</target>
        </trans-unit>
        <trans-unit id="17ee2130be0c3d6048b43a8d1fd42decf0e20d1d" translate="yes" xml:space="preserve">
          <source>There are several ways to paginate items. The simplest is by using the &lt;code&gt;paginate&lt;/code&gt; method on the &lt;a href=&quot;queries&quot;&gt;query builder&lt;/a&gt; or an &lt;a href=&quot;eloquent&quot;&gt;Eloquent query&lt;/a&gt;. The &lt;code&gt;paginate&lt;/code&gt; method automatically takes care of setting the proper limit and offset based on the current page being viewed by the user. By default, the current page is detected by the value of the &lt;code&gt;page&lt;/code&gt; query string argument on the HTTP request. Of course, this value is automatically detected by Laravel, and is also automatically inserted into links generated by the paginator.</source>
          <target state="translated">アイテムにページ番号を付ける方法はいくつかあります。最も簡単な方法は、&lt;a href=&quot;queries&quot;&gt;クエリビルダー&lt;/a&gt;または&lt;a href=&quot;eloquent&quot;&gt;Eloquentクエリで&lt;/a&gt; &lt;code&gt;paginate&lt;/code&gt; メソッドを使用することです。 &lt;code&gt;paginate&lt;/code&gt; メソッドは、自動的に適切な制限を設定するの面倒を見ると、現在のページがユーザーによって閲覧されているに基づいてオフセット。デフォルトでは、現在のページはHTTPリクエストの &lt;code&gt;page&lt;/code&gt; クエリ文字列引数の値によって検出されます。もちろん、この値はLaravelによって自動的に検出され、ページネーションによって生成されたリンクにも自動的に挿入されます。</target>
        </trans-unit>
        <trans-unit id="6323966b53cb3ad38229f144aecaacda02daa8df" translate="yes" xml:space="preserve">
          <source>There are two other methods you may use to create models by mass assigning attributes: &lt;code&gt;firstOrCreate&lt;/code&gt; and &lt;code&gt;firstOrNew&lt;/code&gt;. The &lt;code&gt;firstOrCreate&lt;/code&gt; method will attempt to locate a database record using the given column / value pairs. If the model can not be found in the database, a record will be inserted with the attributes from the first parameter, along with those in the optional second parameter.</source>
          <target state="translated">属性を一括して割り当てることによりモデルを作成するために使用できる他の2つの方法があります &lt;code&gt;firstOrCreate&lt;/code&gt; と &lt;code&gt;firstOrNew&lt;/code&gt; です。 &lt;code&gt;firstOrCreate&lt;/code&gt; の方法は、特定の列/値のペアを使用してデータベースレコードを検索しようとします。モデルがデータベースで見つからない場合、オプションの2番目のパラメーターの属性とともに、最初のパラメーターの属性を持つレコードが挿入されます。</target>
        </trans-unit>
        <trans-unit id="da338e7212619951f3694d471235cdd9d2a14563" translate="yes" xml:space="preserve">
          <source>There are two primary ways of working with session data in Laravel: the global &lt;code&gt;session&lt;/code&gt; helper and via a &lt;code&gt;Request&lt;/code&gt; instance. First, let's look at accessing the session via a &lt;code&gt;Request&lt;/code&gt; instance, which can be type-hinted on a controller method. Remember, controller method dependencies are automatically injected via the Laravel &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;:</source>
          <target state="translated">Laravelでセッションデータを操作するには、グローバル &lt;code&gt;session&lt;/code&gt; ヘルパーと &lt;code&gt;Request&lt;/code&gt; インスタンスを介した2つの主要な方法があります。最初に、 &lt;code&gt;Request&lt;/code&gt; インスタンスを介してセッションにアクセスする方法を見てみましょう。リクエストのインスタンスは、コントローラメソッドで型ヒントを付けることができます。コントローラーメソッドの依存関係は、Laravel &lt;a href=&quot;container&quot;&gt;サービスコンテナーを&lt;/a&gt;介して自動的に挿入されます。</target>
        </trans-unit>
        <trans-unit id="39ecbdfabb951c3295b24d81d63f4f9b2deed6db" translate="yes" xml:space="preserve">
          <source>There is absolutely no practical difference between facades and helper functions. When using helper functions, you may still test them exactly as you would the corresponding facade. For example, given the following route:</source>
          <target state="translated">ファサードとヘルパー関数の間には、実用的な違いは全くありません。ヘルパー関数を使う場合でも、対応するファサードと同じようにテストすることができます。例えば、以下のようなルートがあるとします。</target>
        </trans-unit>
        <trans-unit id="63715cb4916f857a2c435be121299f0936ac9504" translate="yes" xml:space="preserve">
          <source>There is little practical difference between using the session via an HTTP request instance versus using the global &lt;code&gt;session&lt;/code&gt; helper. Both methods are &lt;a href=&quot;testing&quot;&gt;testable&lt;/a&gt; via the &lt;code&gt;assertSessionHas&lt;/code&gt; method which is available in all of your test cases.</source>
          <target state="translated">HTTPリクエストインスタンスを介したセッションの使用とグローバル &lt;code&gt;session&lt;/code&gt; ヘルパーの使用には、実際的な違いはほとんどありません。どちらのメソッドも、すべてのテストケースで使用できる &lt;code&gt;assertSessionHas&lt;/code&gt; メソッドを介して&lt;a href=&quot;testing&quot;&gt;テスト&lt;/a&gt;できます。</target>
        </trans-unit>
        <trans-unit id="c0dd6c9e694c8daf8cc02aec5be71416d616c604" translate="yes" xml:space="preserve">
          <source>There is no need to bind classes into the container if they do not depend on any interfaces. The container does not need to be instructed on how to build these objects, since it can automatically resolve these objects using reflection.</source>
          <target state="translated">インターフェースに依存しないクラスは、コンテナにバインドする必要はありません。コンテナはリフレクションを使ってこれらのオブジェクトを自動的に解決することができるので、これらのオブジェクトを構築する方法を指示する必要はありません。</target>
        </trans-unit>
        <trans-unit id="f357a9b2727c54260ac2cfbec57ab0eddd7762a2" translate="yes" xml:space="preserve">
          <source>These Closures also receive the evaluated attribute array of the factory that defines them:</source>
          <target state="translated">これらのクロージャは、それらを定義するファクトリの評価された属性配列も受け取ります。</target>
        </trans-unit>
        <trans-unit id="250feee64bf8f1fc01fc0c9d5f2f791159d942fe" translate="yes" xml:space="preserve">
          <source>These directives are convenient shortcuts for writing &lt;code&gt;@if&lt;/code&gt; and &lt;code&gt;@unless&lt;/code&gt; statements. The &lt;code&gt;@can&lt;/code&gt; and &lt;code&gt;@cannot&lt;/code&gt; statements above respectively translate to the following statements:</source>
          <target state="translated">これらのディレクティブは、 &lt;code&gt;@unless&lt;/code&gt; &lt;code&gt;@if&lt;/code&gt; および@unlessステートメントを記述するための便利なショートカットです。上記の &lt;code&gt;@can&lt;/code&gt; および &lt;code&gt;@cannot&lt;/code&gt; ステートメントは、それぞれ次のステートメントに変換されます。</target>
        </trans-unit>
        <trans-unit id="4575e37225c4dc15363ee57a03ca574eca74d8bb" translate="yes" xml:space="preserve">
          <source>These events will be mocked, so that handlers will not actually be executed.</source>
          <target state="translated">これらのイベントはモックされるので、ハンドラが実際に実行されることはありません。</target>
        </trans-unit>
        <trans-unit id="e9daa907c7c37be0a8e01bc035701d4e4f537dc4" translate="yes" xml:space="preserve">
          <source>These jobs will be mocked, so that handlers will not actually be executed.</source>
          <target state="translated">これらのジョブはモックされるので、ハンドラーが実際に実行されることはありません。</target>
        </trans-unit>
        <trans-unit id="d75a8a6de391de46892a4774b5d857d47282cb18" translate="yes" xml:space="preserve">
          <source>These methods are typically the same across all guards.</source>
          <target state="translated">これらの方法は、一般的にすべてのガードに共通しています。</target>
        </trans-unit>
        <trans-unit id="0e498c5be0710d3a168ef2eeb0f56a471d736364" translate="yes" xml:space="preserve">
          <source>These methods may be combined with additional constraints to create even more finely tuned schedules that only run on certain days of the week. For example, to schedule a command to run weekly on Monday:</source>
          <target state="translated">これらの方法は、特定の曜日にのみ実行するような、より細かく調整されたスケジュールを作成するために、追加の制約と組み合わせることができます。例えば、毎週月曜日に実行するコマンドをスケジュールするには、以下のようにします。</target>
        </trans-unit>
        <trans-unit id="22bbe46bbf7c15b3c13ed34bd36a06a777c6a44d" translate="yes" xml:space="preserve">
          <source>Think of gates and policies like routes and controllers. Gates provide a simple, Closure based approach to authorization while policies, like controllers, group their logic around a particular model or resource. We'll explore gates first and then examine policies.</source>
          <target state="translated">ゲートとポリシーは、ルートとコントローラのようなものと考えてください。ゲートはシンプルなClosureベースの認証アプローチを提供し、ポリシーはコントローラのように特定のモデルやリソースを中心にロジックをグループ化します。最初にゲートを調べ、次にポリシーを調べます。</target>
        </trans-unit>
        <trans-unit id="0f8f50c4ce100dc010e8f792f6e565bb1e1f9df5" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;/oauth/token&lt;/code&gt; route will return a JSON response containing &lt;code&gt;access_token&lt;/code&gt;, &lt;code&gt;refresh_token&lt;/code&gt;, and &lt;code&gt;expires_in&lt;/code&gt; attributes. The &lt;code&gt;expires_in&lt;/code&gt; attribute contains the number of seconds until the access token expires.</source>
          <target state="translated">この &lt;code&gt;/oauth/token&lt;/code&gt; ルートが含むJSONレスポンスを返します &lt;code&gt;access_token&lt;/code&gt; は、 &lt;code&gt;refresh_token&lt;/code&gt; 、および &lt;code&gt;expires_in&lt;/code&gt; 属性を。 &lt;code&gt;expires_in&lt;/code&gt; のアクセストークンの有効期限が切れるまでの属性は、秒数が含まれています。</target>
        </trans-unit>
        <trans-unit id="42e93dd14ff73457ccf8641a6271e7be337937bd" translate="yes" xml:space="preserve">
          <source>This Cron will call the Laravel command scheduler every minute. When the &lt;code&gt;schedule:run&lt;/code&gt; command is executed, Laravel will evaluate your scheduled tasks and runs the tasks that are due.</source>
          <target state="translated">このCronは、毎分Laravelコマンドスケジューラを呼び出します。とき &lt;code&gt;schedule:run&lt;/code&gt; コマンドが実行され、Laravelはあなたのスケジュールされたタスクを評価し、起因しているタスクを実行します。</target>
        </trans-unit>
        <trans-unit id="11f00a1b51fc2579cd093f89f38a6b1cd1bef1b3" translate="yes" xml:space="preserve">
          <source>This Passport middleware will attach a &lt;code&gt;laravel_token&lt;/code&gt; cookie to your outgoing responses. This cookie contains an encrypted JWT that Passport will use to authenticate API requests from your JavaScript application. Now, you may make requests to your application's API without explicitly passing an access token:</source>
          <target state="translated">このPassportミドルウェアは、送信応答に &lt;code&gt;laravel_token&lt;/code&gt; Cookieを添付します。このCookieには、PassportがJavaScriptアプリケーションからのAPIリクエストを認証するために使用する暗号化されたJWTが含まれています。これで、明示的にアクセストークンを渡さなくても、アプリケーションのAPIにリクエストを行うことができます。</target>
        </trans-unit>
        <trans-unit id="44c0f6d33fb99ac3bcc826e6ae638a622a48b01e" translate="yes" xml:space="preserve">
          <source>This class was originally copied from Symfony 3.</source>
          <target state="translated">このクラスは元々はSymfony 3からコピーされたものです。</target>
        </trans-unit>
        <trans-unit id="2605038c92b9562230cbbd281a885f1969f7953e" translate="yes" xml:space="preserve">
          <source>This command reduces all of your route registrations into a single method call within a cached file, improving the performance of route registration when registering hundreds of routes.</source>
          <target state="translated">このコマンドは、すべてのルート登録をキャッシュファイル内の単一のメソッド呼び出しに削減し、何百ものルートを登録する場合のルート登録のパフォーマンスを向上させます。</target>
        </trans-unit>
        <trans-unit id="6e30a34e3d6cf851681fc758f864ee0d21f53e16" translate="yes" xml:space="preserve">
          <source>This command should be used on fresh applications and will install a layout view, registration and login views, as well as routes for all authentication end-points. A &lt;code&gt;HomeController&lt;/code&gt; will also be generated to handle post-login requests to your application's dashboard.</source>
          <target state="translated">このコマンドは新しいアプリケーションで使用する必要があり、レイアウトビュー、登録ビュー、ログインビュー、およびすべての認証エンドポイントのルートをインストールします。A &lt;code&gt;HomeController&lt;/code&gt; また、アプリケーションのダッシュボードにポストログイン要求を処理するために生成されます。</target>
        </trans-unit>
        <trans-unit id="bae645acef1a1f785b158e0876106a364f60ca14" translate="yes" xml:space="preserve">
          <source>This command will combine all of Laravel's configuration files into a single, cached file, which greatly reduces the number of trips the framework must make to the filesystem when loading your configuration values.</source>
          <target state="translated">このコマンドはLaravelのすべての設定ファイルを1つのキャッシュファイルにまとめ、設定値をロードする際にフレームワークがファイルシステムに移動する回数を大幅に減らします。</target>
        </trans-unit>
        <trans-unit id="17b6d891838ca9931ea868ff424af174dc8854df" translate="yes" xml:space="preserve">
          <source>This command will generate a controller at &lt;code&gt;app/Http/Controllers/PhotoController.php&lt;/code&gt;. The controller will contain a method for each of the available resource operations.</source>
          <target state="translated">このコマンドは &lt;code&gt;app/Http/Controllers/PhotoController.php&lt;/code&gt; にコントローラーを生成します。コントローラには、利用可能な各リソース操作のメソッドが含まれます。</target>
        </trans-unit>
        <trans-unit id="5fd442a4e9d1218cbac79ea95d06bcdf66a49ec4" translate="yes" xml:space="preserve">
          <source>This command will instruct all queue workers to gracefully &quot;die&quot; after they finish processing their current job so that no existing jobs are lost. Since the queue workers will die when the &lt;code&gt;queue:restart&lt;/code&gt; command is executed, you should be running a process manager such as &lt;a href=&quot;#supervisor-configuration&quot;&gt;Supervisor&lt;/a&gt; to automatically restart the queue workers.</source>
          <target state="translated">このコマンドは、既存のジョブが失われないように、現在のジョブの処理が終了した後、すべてのキューワーカーに適切に「死ぬ」ように指示します。キューワーカーは &lt;code&gt;queue:restart&lt;/code&gt; コマンドが実行されると&lt;a href=&quot;#supervisor-configuration&quot;&gt;停止&lt;/a&gt;するため、スーパーバイザーなどのプロセスマネージャーを実行して、キューワーカーを自動的に再起動する必要があります。</target>
        </trans-unit>
        <trans-unit id="399fc357ac467cd96f7b88876f70626d907c2949" translate="yes" xml:space="preserve">
          <source>This command will place a fresh notification class in your &lt;code&gt;app/Notifications&lt;/code&gt; directory. Each notification class contains a &lt;code&gt;via&lt;/code&gt; method and a variable number of message building methods (such as &lt;code&gt;toMail&lt;/code&gt; or &lt;code&gt;toDatabase&lt;/code&gt;) that convert the notification to a message optimized for that particular channel.</source>
          <target state="translated">このコマンドは、 &lt;code&gt;app/Notifications&lt;/code&gt; ディレクトリに新しい通知クラスを配置します。各通知クラスには、 &lt;code&gt;via&lt;/code&gt; メソッドと、通知を特定のチャネル用に最適化されたメッセージに変換する可変数のメッセージ作成メソッド（ &lt;code&gt;toMail&lt;/code&gt; や &lt;code&gt;toDatabase&lt;/code&gt; など）が含まれています。</target>
        </trans-unit>
        <trans-unit id="2a280714c39404156fde1cf8944d1f26897feed0" translate="yes" xml:space="preserve">
          <source>This command will place a new &lt;code&gt;CheckAge&lt;/code&gt; class within your &lt;code&gt;app/Http/Middleware&lt;/code&gt; directory. In this middleware, we will only allow access to the route if the supplied &lt;code&gt;age&lt;/code&gt; is greater than 200. Otherwise, we will redirect the users back to the &lt;code&gt;home&lt;/code&gt; URI:</source>
          <target state="translated">このコマンドは、新しい &lt;code&gt;CheckAge&lt;/code&gt; クラスを &lt;code&gt;app/Http/Middleware&lt;/code&gt; ディレクトリ内に配置します。このミドルウェアでは、我々は提供されている場合、ルートへのアクセスを許可する &lt;code&gt;age&lt;/code&gt; それ以外の場合は200よりも大きい場合、我々は戻ってにユーザーをリダイレクトする &lt;code&gt;home&lt;/code&gt; URI：</target>
        </trans-unit>
        <trans-unit id="c94fe969d324cb1fd9735ad5b2ff1069cfdd3c82" translate="yes" xml:space="preserve">
          <source>This command will place the new observer in your &lt;code&gt;App/Observers&lt;/code&gt; directory. If this directory does not exist, Artisan will create it for you. Your fresh observer will look like the following:</source>
          <target state="translated">このコマンドは、新しいオブザーバーを &lt;code&gt;App/Observers&lt;/code&gt; ディレクトリに配置します。このディレクトリが存在しない場合、Artisanが作成します。新しいオブザーバーは次のようになります。</target>
        </trans-unit>
        <trans-unit id="c3a7c35b52b03c40f6623187cda6c218fcc2f407" translate="yes" xml:space="preserve">
          <source>This command will place the views in the &lt;code&gt;resources/views/vendor/pagination&lt;/code&gt; directory. The &lt;code&gt;bootstrap-4.blade.php&lt;/code&gt; file within this directory corresponds to the default pagination view. You may edit this file to modify the pagination HTML.</source>
          <target state="translated">このコマンドは、ビューを &lt;code&gt;resources/views/vendor/pagination&lt;/code&gt; ディレクトリーに配置します。このディレクトリ内の &lt;code&gt;bootstrap-4.blade.php&lt;/code&gt; ファイルは、デフォルトのページネーションビューに対応しています。このファイルを編集して、ページネーションHTMLを変更できます。</target>
        </trans-unit>
        <trans-unit id="6d49325eb85019289a231adda896cf575cc43e10" translate="yes" xml:space="preserve">
          <source>This command will publish the Markdown mail components to the &lt;code&gt;resources/views/vendor/mail&lt;/code&gt; directory. The &lt;code&gt;mail&lt;/code&gt; directory will contain a &lt;code&gt;html&lt;/code&gt; and a &lt;code&gt;markdown&lt;/code&gt; directory, each containing their respective representations of every available component. The components in the &lt;code&gt;html&lt;/code&gt; directory are used to generate the HTML version of your email, and their counterparts in the &lt;code&gt;markdown&lt;/code&gt; directory are used to generate the plain-text version. You are free to customize these components however you like.</source>
          <target state="translated">このコマンドは、Markdownメールコンポーネントを &lt;code&gt;resources/views/vendor/mail&lt;/code&gt; ディレクトリに公開します。 &lt;code&gt;mail&lt;/code&gt; ディレクトリが含まれます &lt;code&gt;html&lt;/code&gt; や &lt;code&gt;markdown&lt;/code&gt; それぞれが使用可能なすべてのコンポーネントのそれぞれの表現を含む、ディレクトリを。内のコンポーネント &lt;code&gt;html&lt;/code&gt; ディレクトリは、電子メールのHTMLバージョンを生成するために使用されており、中の対応 &lt;code&gt;markdown&lt;/code&gt; ディレクトリがプレーンテキストバージョンを生成するために使用されています。これらのコンポーネントは自由にカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="0fefe0a639196a834119577f76342429668c91dd" translate="yes" xml:space="preserve">
          <source>This command will publish the Markdown mail components to the &lt;code&gt;resources/views/vendor/mail&lt;/code&gt; directory. The &lt;code&gt;mail&lt;/code&gt; directory will contain a &lt;code&gt;html&lt;/code&gt; and a &lt;code&gt;markdown&lt;/code&gt; directory, each containing their respective representations of every available component. You are free to customize these components however you like.</source>
          <target state="translated">このコマンドは、Markdownメールコンポーネントを &lt;code&gt;resources/views/vendor/mail&lt;/code&gt; ディレクトリに公開します。 &lt;code&gt;mail&lt;/code&gt; ディレクトリが含まれます &lt;code&gt;html&lt;/code&gt; や &lt;code&gt;markdown&lt;/code&gt; それぞれが使用可能なすべてのコンポーネントのそれぞれの表現を含む、ディレクトリを。これらのコンポーネントは自由にカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="29977df36ae228df57a75baa1fb7ff9f9662bb32" translate="yes" xml:space="preserve">
          <source>This cookie is primarily sent as a convenience since some JavaScript frameworks and libraries, like Angular and Axios, automatically place its value in the &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; header.</source>
          <target state="translated">AngularやAxiosなどの一部のJavaScriptフレームワークおよびライブラリは自動的にその値を &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; ヘッダーに配置するため、このCookieは主に便宜上送信されます。</target>
        </trans-unit>
        <trans-unit id="6217d3635e9925429b5fd9f8d6232961b0604be8" translate="yes" xml:space="preserve">
          <source>This directory does not exist by default, but will be created for you by the &lt;code&gt;event:generate&lt;/code&gt; and &lt;code&gt;make:event&lt;/code&gt; Artisan commands. The &lt;code&gt;Events&lt;/code&gt; directory, as you might expect, houses &lt;a href=&quot;events&quot;&gt;event classes&lt;/a&gt;. Events may be used to alert other parts of your application that a given action has occurred, providing a great deal of flexibility and decoupling.</source>
          <target state="translated">このディレクトリはデフォルトでは存在しませんが、 &lt;code&gt;event:generate&lt;/code&gt; および &lt;code&gt;make:event&lt;/code&gt; Artisanコマンドによって作成されます。 &lt;code&gt;Events&lt;/code&gt; ディレクトリには、ご想像のとおり、収容する&lt;a href=&quot;events&quot;&gt;イベントクラスを&lt;/a&gt;。イベントは、特定のアクションが発生したことをアプリケーションの他の部分に警告するために使用され、非常に柔軟性と分離を提供します。</target>
        </trans-unit>
        <trans-unit id="c40ea5a925783298fa24288dabdcf73b4f6a0b03" translate="yes" xml:space="preserve">
          <source>This directory does not exist by default, but will be created for you if you execute the &lt;code&gt;event:generate&lt;/code&gt; or &lt;code&gt;make:listener&lt;/code&gt; Artisan commands. The &lt;code&gt;Listeners&lt;/code&gt; directory contains the classes that handle your &lt;a href=&quot;events&quot;&gt;events&lt;/a&gt;. Event listeners receive an event instance and perform logic in response to the event being fired. For example, a &lt;code&gt;UserRegistered&lt;/code&gt; event might be handled by a &lt;code&gt;SendWelcomeEmail&lt;/code&gt; listener.</source>
          <target state="translated">このディレクトリはデフォルトでは存在しませんが、 &lt;code&gt;event:generate&lt;/code&gt; または &lt;code&gt;make:listener&lt;/code&gt; Artisanコマンドを実行すると作成されます。 &lt;code&gt;Listeners&lt;/code&gt; ディレクトリは、あなたの扱うクラス含まれてい&lt;a href=&quot;events&quot;&gt;たイベントを&lt;/a&gt;。イベントリスナーはイベントインスタンスを受け取り、発生したイベントに応じてロジックを実行します。たとえば、 &lt;code&gt;UserRegistered&lt;/code&gt; イベントは、 &lt;code&gt;SendWelcomeEmail&lt;/code&gt; リスナーによって処理される場合があります。</target>
        </trans-unit>
        <trans-unit id="b87df831d1202301ade256d97c5e976abfe4fe4e" translate="yes" xml:space="preserve">
          <source>This directory does not exist by default, but will be created for you if you execute the &lt;code&gt;make:job&lt;/code&gt; Artisan command. The &lt;code&gt;Jobs&lt;/code&gt; directory houses the &lt;a href=&quot;queues&quot;&gt;queueable jobs&lt;/a&gt; for your application. Jobs may be queued by your application or run synchronously within the current request lifecycle. Jobs that run synchronously during the current request are sometimes referred to as &quot;commands&quot; since they are an implementation of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Command_pattern&quot;&gt;command pattern&lt;/a&gt;.</source>
          <target state="translated">このディレクトリはデフォルトでは存在しませんが、 &lt;code&gt;make:job&lt;/code&gt; Artisanコマンドを実行すると作成されます。 &lt;code&gt;Jobs&lt;/code&gt; ディレクトリには、収容&lt;a href=&quot;queues&quot;&gt;QUEUEABLE仕事を&lt;/a&gt;あなたのアプリケーションのために。ジョブはアプリケーションによってキューに入れられるか、現在のリクエストライフサイクル内で同期的に実行されます。現在のリクエスト中に同期的に実行されるジョブは、&lt;a href=&quot;https://en.wikipedia.org/wiki/Command_pattern&quot;&gt;コマンドパターンの&lt;/a&gt;実装であるため、「コマンド」と呼ばれることもあります。</target>
        </trans-unit>
        <trans-unit id="832e55e9b0ee24f6bf2179dbf163c9f1530a16d2" translate="yes" xml:space="preserve">
          <source>This directory does not exist by default, but will be created for you if you execute the &lt;code&gt;make:mail&lt;/code&gt; Artisan command. The &lt;code&gt;Mail&lt;/code&gt; directory contains all of your classes that represent emails sent by your application. Mail objects allow you to encapsulate all of the logic of building an email in a single, simple class that may be sent using the &lt;code&gt;Mail::send&lt;/code&gt; method.</source>
          <target state="translated">このディレクトリはデフォルトでは存在しませんが、 &lt;code&gt;make:mail&lt;/code&gt; Artisanコマンドを実行すると作成されます。 &lt;code&gt;Mail&lt;/code&gt; ディレクトリは、アプリケーションによって送信されたメールを表し、あなたのクラスのすべてが含まれています。 Mailオブジェクトを使用すると、 &lt;code&gt;Mail::send&lt;/code&gt; メソッドを使用して送信できる単一の単純なクラスに電子メールを構築するすべてのロジックをカプセル化できます。</target>
        </trans-unit>
        <trans-unit id="2f5b6abb3a7fc9dafe172078105b3f0c5f45eef3" translate="yes" xml:space="preserve">
          <source>This directory does not exist by default, but will be created for you if you execute the &lt;code&gt;make:notification&lt;/code&gt; Artisan command. The &lt;code&gt;Notifications&lt;/code&gt; directory contains all of the &quot;transactional&quot; notifications that are sent by your application, such as simple notifications about events that happen within your application. Laravel's notification features abstracts sending notifications over a variety of drivers such as email, Slack, SMS, or stored in a database.</source>
          <target state="translated">このディレクトリはデフォルトでは存在しませんが、 &lt;code&gt;make:notification&lt;/code&gt; Artisanコマンドを実行すると作成されます。 &lt;code&gt;Notifications&lt;/code&gt; ディレクトリには、アプリケーション内で発生したイベントについての簡単な通知として、アプリケーションによって送信された「トランザクション」の通知がすべて含まれています。 Laravelの通知機能は、電子メール、Slack、SMSなどのさまざまなドライバーを介した通知の送信を抽象化するか、データベースに保存します。</target>
        </trans-unit>
        <trans-unit id="57d2ad1572f71be0bbe7362f058f8f6e67b576e2" translate="yes" xml:space="preserve">
          <source>This directory does not exist by default, but will be created for you if you execute the &lt;code&gt;make:policy&lt;/code&gt; Artisan command. The &lt;code&gt;Policies&lt;/code&gt; directory contains the authorization policy classes for your application. Policies are used to determine if a user can perform a given action against a resource. For more information, check out the &lt;a href=&quot;authorization&quot;&gt;authorization documentation&lt;/a&gt;.</source>
          <target state="translated">このディレクトリはデフォルトでは存在しませんが、 &lt;code&gt;make:policy&lt;/code&gt; Artisanコマンドを実行すると作成されます。 &lt;code&gt;Policies&lt;/code&gt; ディレクトリは、アプリケーションの承認ポリシーのクラスが含まれています。ポリシーは、ユーザーがリソースに対して特定のアクションを実行できるかどうかを決定するために使用されます。詳細については、&lt;a href=&quot;authorization&quot;&gt;承認に関するドキュメントを&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="9bd3470038eaf834011d343ac2bd40e52d779c7f" translate="yes" xml:space="preserve">
          <source>This directory does not exist by default, but will be created for you if you execute the &lt;code&gt;make:rule&lt;/code&gt; Artisan command. The &lt;code&gt;Rules&lt;/code&gt; directory contains the custom validation rule objects for your application. Rules are used to encapsulate complicated validation logic in a simple object. For more information, check out the &lt;a href=&quot;validation&quot;&gt;validation documentation&lt;/a&gt;.</source>
          <target state="translated">このディレクトリはデフォルトでは存在しませんが、 &lt;code&gt;make:rule&lt;/code&gt; Artisanコマンドを実行すると作成されます。 &lt;code&gt;Rules&lt;/code&gt; ディレクトリは、アプリケーションのカスタム検証ルールオブジェクトが含まれています。ルールは、複雑な検証ロジックを単純なオブジェクトにカプセル化するために使用されます。詳細については、&lt;a href=&quot;validation&quot;&gt;検証ドキュメントを&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="0f4a6992b53e0d095931623cf73e13581b5be2bf" translate="yes" xml:space="preserve">
          <source>This documentation assumes you are already familiar with OAuth2. If you do not know anything about OAuth2, consider familiarizing yourself with the general terminology and features of OAuth2 before continuing.</source>
          <target state="translated">このドキュメントでは、OAuth2 に精通していることを前提としています。OAuth2 について何も知らない場合は、先に進む前に OAuth2 の一般的な用語と機能について理解しておくことを検討してください。</target>
        </trans-unit>
        <trans-unit id="617efbc260fee123d38f1617f82ed61f6c049047" translate="yes" xml:space="preserve">
          <source>This extended pipeline catches any exceptions that occur during each slice.</source>
          <target state="translated">この拡張パイプラインは、各スライス中に発生する例外をキャッチします。</target>
        </trans-unit>
        <trans-unit id="2979a64c24aac70e0d65868e264cef5f974553d6" translate="yes" xml:space="preserve">
          <source>This feature requires that your application can interact with a &lt;a href=&quot;redis&quot;&gt;Redis server&lt;/a&gt;.</source>
          <target state="translated">この機能では、アプリケーションが&lt;a href=&quot;redis&quot;&gt;Redisサーバー&lt;/a&gt;と対話できる必要があります。</target>
        </trans-unit>
        <trans-unit id="1a8f93d3536354b2662cc1d8b44a43577e105067" translate="yes" xml:space="preserve">
          <source>This function also accepts asterisks as wildcards and will fill the target accordingly:</source>
          <target state="translated">この関数は、アスタリスクをワイルドカードとして受け入れ、それに応じてターゲットを埋めます。</target>
        </trans-unit>
        <trans-unit id="75b74a49a2c92c3b66f1caa8eeef739090ff2afe" translate="yes" xml:space="preserve">
          <source>This function also accepts wildcards and will set values on the target accordingly:</source>
          <target state="translated">この関数はワイルドカードも受け付け、それに応じてターゲットに値を設定します。</target>
        </trans-unit>
        <trans-unit id="078c08d0f6382e1d401e2124496083d863db5358" translate="yes" xml:space="preserve">
          <source>This interface is simple. The &lt;code&gt;getAuthIdentifierName&lt;/code&gt; method should return the name of the &quot;primary key&quot; field of the user and the &lt;code&gt;getAuthIdentifier&lt;/code&gt; method should return the &quot;primary key&quot; of the user. In a MySQL back-end, again, this would be the auto-incrementing primary key. The &lt;code&gt;getAuthPassword&lt;/code&gt; should return the user's hashed password. This interface allows the authentication system to work with any User class, regardless of what ORM or storage abstraction layer you are using. By default, Laravel includes a &lt;code&gt;User&lt;/code&gt; class in the &lt;code&gt;app&lt;/code&gt; directory which implements this interface, so you may consult this class for an implementation example.</source>
          <target state="translated">このインターフェースはシンプルです。 &lt;code&gt;getAuthIdentifierName&lt;/code&gt; の方法は、ユーザーの「主キー」フィールドの名前を返す必要がありますし、 &lt;code&gt;getAuthIdentifier&lt;/code&gt; の方法は、ユーザーの「主キー」を返す必要があります。 MySQLバックエンドでも、これは自動インクリメントの主キーになります。 &lt;code&gt;getAuthPassword&lt;/code&gt; は、ユーザーのハッシュされたパスワードを返す必要があります。このインターフェイスを使用すると、使用しているORMまたはストレージアブストラクションレイヤーに関係なく、認証システムは任意のUserクラスと連携できます。デフォルトでは、Laravelはこのインターフェースを実装する &lt;code&gt;app&lt;/code&gt; クラスに &lt;code&gt;User&lt;/code&gt; クラスを含んでいるため、実装例についてはこのクラスを調べることができます。</target>
        </trans-unit>
        <trans-unit id="240280de5b0b7ac5729715d855a5fab8809b451b" translate="yes" xml:space="preserve">
          <source>This is a high-level overview of resources and resource collections. You are highly encouraged to read the other sections of this documentation to gain a deeper understanding of the customization and power offered to you by resources.</source>
          <target state="translated">これは、リソースとリソースコレクションのハイレベルな概要です。このドキュメントの他のセクションを読んで、リソースによって提供されるカスタマイズとパワーをより深く理解することを強くお勧めします。</target>
        </trans-unit>
        <trans-unit id="45224e730d201b1ddab3df4212506770369c8ffb" translate="yes" xml:space="preserve">
          <source>This is done in case any actions are overwritten with new controllers.</source>
          <target state="translated">これは、いずれかのアクションが新しいコントローラで上書きされる場合に備えて行われます。</target>
        </trans-unit>
        <trans-unit id="46031c381dbe3d4f81bdcbce704886df43ac0b05" translate="yes" xml:space="preserve">
          <source>This is done in case any names are fluently defined or if routes are overwritten.</source>
          <target state="translated">これは、いずれかの名前が流暢に定義されている場合や、ルートが上書きされている場合に行われます。</target>
        </trans-unit>
        <trans-unit id="75261c07aaea9fd7aa4785d7b7f5456c35ce1e49" translate="yes" xml:space="preserve">
          <source>This is identical to manually defining the following Gate definitions:</source>
          <target state="translated">これは、以下のゲート定義を手動で定義するのと同じです。</target>
        </trans-unit>
        <trans-unit id="5a47866abe16c6f137216e7fcd2394afb8cf72bc" translate="yes" xml:space="preserve">
          <source>This is more efficient on larger data-sets, etc.</source>
          <target state="translated">より大きなデータセットなどではより効率的です。</target>
        </trans-unit>
        <trans-unit id="b7cbcba7a746724f5c9abbfc73abe33c15e4081d" translate="yes" xml:space="preserve">
          <source>This is to avoid possible database type comparison errors.</source>
          <target state="translated">これは、データベースの型の比較エラーの可能性を避けるためです。</target>
        </trans-unit>
        <trans-unit id="822111267832779ec07dca95506a0159fa80c5c7" translate="yes" xml:space="preserve">
          <source>This is used to add the --env option to every available command.</source>
          <target state="translated">これは、利用可能なすべてのコマンドに --env オプションを追加するために使用されます。</target>
        </trans-unit>
        <trans-unit id="b32fe2084ebe4bba91e86e54f21bf2db446d0395" translate="yes" xml:space="preserve">
          <source>This loop will execute 1 query to retrieve all of the books on the table, then another query for each book to retrieve the author. So, if we have 25 books, this loop would run 26 queries: 1 for the original book, and 25 additional queries to retrieve the author of each book.</source>
          <target state="translated">このループは、テーブル上のすべての書籍を取得するために1つのクエリを実行し、その後、各書籍について著者を取得するために別のクエリを実行します。つまり、25冊の本がある場合、このループは26個のクエリを実行します。1つはオリジナルの書籍に対して1つ、もう1つは各書籍の著者を取得するために25個のクエリを実行します。</target>
        </trans-unit>
        <trans-unit id="b3fbeefb4eb14c1e3b0de0b0abbb18570769ff54" translate="yes" xml:space="preserve">
          <source>This method belongs to Symfony HttpFoundation and is not usually needed when using Laravel.</source>
          <target state="translated">このメソッドはSymfonyのHttpFoundationに属しており、Laravelを利用する場合には通常必要ありません。</target>
        </trans-unit>
        <trans-unit id="9d7a25f7a03f67dd46f2a58cb98e125132498b92" translate="yes" xml:space="preserve">
          <source>This method can be useful when combined with factories to create &lt;a href=&quot;eloquent&quot;&gt;Eloquent&lt;/a&gt; models:</source>
          <target state="translated">この方法は、ファクトリーと組み合わせて&lt;a href=&quot;eloquent&quot;&gt;Eloquent&lt;/a&gt;モデルを作成するときに役立ちます。</target>
        </trans-unit>
        <trans-unit id="e722018c41ca9d685c89714e1e4445ef8f5f2f83" translate="yes" xml:space="preserve">
          <source>This method didn't match rest of framework's &quot;onQueue&quot; phrasing. Added &quot;onQueue&quot;.</source>
          <target state="translated">このメソッドは他のフレームワークの &quot;onQueue&quot; のフレーズと一致しませんでした。onQueue &quot;を追加しました。</target>
        </trans-unit>
        <trans-unit id="4805f89b0c71744ef267df9921f72b794abe1052" translate="yes" xml:space="preserve">
          <source>This method has the same signature as the &lt;a href=&quot;#method-contains&quot;&gt;&lt;code&gt;contains&lt;/code&gt;&lt;/a&gt; method; however, all values are compared using &quot;strict&quot; comparisons.</source>
          <target state="translated">このメソッドの署名は&lt;a href=&quot;#method-contains&quot;&gt; &lt;code&gt;contains&lt;/code&gt; &lt;/a&gt;メソッドと同じです。ただし、すべての値は「厳密な」比較を使用して比較されます。</target>
        </trans-unit>
        <trans-unit id="a748223dffaf28d04e4c3f533874d1d8d0567d07" translate="yes" xml:space="preserve">
          <source>This method has the same signature as the &lt;a href=&quot;#method-sortby&quot;&gt;&lt;code&gt;sortBy&lt;/code&gt;&lt;/a&gt; method, but will sort the collection in the opposite order.</source>
          <target state="translated">このメソッドの署名は&lt;a href=&quot;#method-sortby&quot;&gt; &lt;code&gt;sortBy&lt;/code&gt; &lt;/a&gt;メソッドと同じですが、コレクションを逆の順序で並べ替えます。</target>
        </trans-unit>
        <trans-unit id="ac595c9f3afbba78dc79d4cb17bed5b2b1e13061" translate="yes" xml:space="preserve">
          <source>This method has the same signature as the &lt;a href=&quot;#method-sortkeys&quot;&gt;&lt;code&gt;sortKeys&lt;/code&gt;&lt;/a&gt; method, but will sort the collection in the opposite order.</source>
          <target state="translated">このメソッドの署名は&lt;a href=&quot;#method-sortkeys&quot;&gt; &lt;code&gt;sortKeys&lt;/code&gt; &lt;/a&gt;メソッドと同じですが、コレクションを逆の順序で並べ替えます。</target>
        </trans-unit>
        <trans-unit id="345c075118a537d69d258eba7743c22572cd9461" translate="yes" xml:space="preserve">
          <source>This method has the same signature as the &lt;a href=&quot;#method-unique&quot;&gt;&lt;code&gt;unique&lt;/code&gt;&lt;/a&gt; method; however, all values are compared using &quot;strict&quot; comparisons.</source>
          <target state="translated">このメソッドには、&lt;a href=&quot;#method-unique&quot;&gt; &lt;code&gt;unique&lt;/code&gt; &lt;/a&gt;メソッドと同じシグネチャがあります。ただし、すべての値は「厳密な」比較を使用して比較されます。</target>
        </trans-unit>
        <trans-unit id="ace3aa553b0b55fe3069de24f139a0faca58a0b9" translate="yes" xml:space="preserve">
          <source>This method has the same signature as the &lt;a href=&quot;#method-where&quot;&gt;&lt;code&gt;where&lt;/code&gt;&lt;/a&gt; method; however, all values are compared using &quot;strict&quot; comparisons.</source>
          <target state="translated">このメソッドの署名は&lt;a href=&quot;#method-where&quot;&gt; &lt;code&gt;where&lt;/code&gt; &lt;/a&gt;メソッドと同じです。ただし、すべての値は「厳密な」比較を使用して比較されます。</target>
        </trans-unit>
        <trans-unit id="ebc30d5ce54bec8362f0d5f58f619a036c016639" translate="yes" xml:space="preserve">
          <source>This method has the same signature as the &lt;a href=&quot;#method-wherein&quot;&gt;&lt;code&gt;whereIn&lt;/code&gt;&lt;/a&gt; method; however, all values are compared using &quot;strict&quot; comparisons.</source>
          <target state="translated">このメソッドの署名は&lt;a href=&quot;#method-wherein&quot;&gt; &lt;code&gt;whereIn&lt;/code&gt; &lt;/a&gt;メソッドと同じです。ただし、すべての値は「厳密な」比較を使用して比較されます。</target>
        </trans-unit>
        <trans-unit id="895ad2b89b5447f1bba9fd1b0c500f32657aabda" translate="yes" xml:space="preserve">
          <source>This method has the same signature as the &lt;a href=&quot;#method-wherenotin&quot;&gt;&lt;code&gt;whereNotIn&lt;/code&gt;&lt;/a&gt; method; however, all values are compared using &quot;strict&quot; comparisons.</source>
          <target state="translated">このメソッドの署名は&lt;a href=&quot;#method-wherenotin&quot;&gt; &lt;code&gt;whereNotIn&lt;/code&gt; &lt;/a&gt;メソッドと同じです。ただし、すべての値は「厳密な」比較を使用して比較されます。</target>
        </trans-unit>
        <trans-unit id="4bc69f2e4baba01cd2f99618c0d480b5e42e25d0" translate="yes" xml:space="preserve">
          <source>This method interacts with jQuery. If jQuery is not available on the page, Dusk will automatically inject it into the page so it is available for the test's duration.</source>
          <target state="translated">このメソッドはjQueryと対話します。ページに jQuery が利用できない場合、Dusk は自動的にページに jQuery を注入して、テスト期間中に利用できるようにします。</target>
        </trans-unit>
        <trans-unit id="ece61a641fe6b4632db3697e236185f29590eb3e" translate="yes" xml:space="preserve">
          <source>This method is especially useful in &lt;a href=&quot;views&quot;&gt;views&lt;/a&gt; when working with a grid system such as &lt;a href=&quot;https://getbootstrap.com/css/#grid&quot;&gt;Bootstrap&lt;/a&gt;. Imagine you have a collection of &lt;a href=&quot;eloquent&quot;&gt;Eloquent&lt;/a&gt; models you want to display in a grid:</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;https://getbootstrap.com/css/#grid&quot;&gt;Bootstrap&lt;/a&gt;などのグリッドシステムを操作するときに&lt;a href=&quot;views&quot;&gt;ビューで&lt;/a&gt;特に役立ちます。グリッドに表示する&lt;a href=&quot;eloquent&quot;&gt;Eloquent&lt;/a&gt;モデルのコレクションがあるとします。</target>
        </trans-unit>
        <trans-unit id="0c495dc2bcdd5f864c3fcb57106509ef9e4f3b5b" translate="yes" xml:space="preserve">
          <source>This method is used for all request verbs (GET, POST, PUT, and DELETE)</source>
          <target state="translated">このメソッドは、すべてのリクエスト動詞 (GET、POST、PUT、および DELETE)に使用されます。</target>
        </trans-unit>
        <trans-unit id="845e64260c91a9ee49e1c3a107b3048b623d18da" translate="yes" xml:space="preserve">
          <source>This method only asks for confirmation in production.</source>
          <target state="translated">この方法は本番での確認のみを求めます。</target>
        </trans-unit>
        <trans-unit id="f66fc2b4a9ceecc33ca886b8cf01f6ef4580a8c1" translate="yes" xml:space="preserve">
          <source>This method only merges the first level of the configuration array. If your users partially define a multi-dimensional configuration array, the missing options will not be merged.</source>
          <target state="translated">このメソッドは、設定配列の最初のレベルのみをマージします。ユーザが多次元の設定配列を部分的に定義している場合、足りないオプションはマージされません。</target>
        </trans-unit>
        <trans-unit id="2c5abb963129485669c93a34535df47207f24f00" translate="yes" xml:space="preserve">
          <source>This method protects developers from running forceDelete when trait is missing.</source>
          <target state="translated">このメソッドは、 trait がない場合に forceDelete を実行することから開発者を保護します。</target>
        </trans-unit>
        <trans-unit id="50e0c18702f8f8bd9fc8b98cae8d464e3a6b7d96" translate="yes" xml:space="preserve">
          <source>This method will automatically take care of pushing a job onto the queue so the message is sent in the background. Of course, you will need to &lt;a href=&quot;queues&quot;&gt;configure your queues&lt;/a&gt; before using this feature.</source>
          <target state="translated">このメソッドは自動的にジョブをキューにプッシュするので、メッセージはバックグラウンドで送信されます。もちろん、この機能を使用する前に&lt;a href=&quot;queues&quot;&gt;キュー&lt;/a&gt;を構成する必要があります。</target>
        </trans-unit>
        <trans-unit id="ce868ef0515637d9c9679f9cdbe395316b925290" translate="yes" xml:space="preserve">
          <source>This method will set the trial period ending date on the subscription record within the database, as well as instruct Stripe / Braintree to not begin billing the customer until after this date.</source>
          <target state="translated">このメソッドは、データベース内のサブスクリプションレコードに試用期間の終了日を設定し、この日を過ぎるまで顧客への請求を開始しないようにStripe/Braintreeに指示します。</target>
        </trans-unit>
        <trans-unit id="af9313f4ae8b779b619ece9671a08eb3a7d54d42" translate="yes" xml:space="preserve">
          <source>This option is particularly useful for legacy projects where you don't require Webpack compilation for your JavaScript.</source>
          <target state="translated">このオプションは、JavaScriptのコンパイルにWebpackを必要としないレガシープロジェクトに特に便利です。</target>
        </trans-unit>
        <trans-unit id="7f74c496aa99b9ddac41234790217ccd880b66dc" translate="yes" xml:space="preserve">
          <source>This route creates new personal access tokens. It requires two pieces of data: the token's &lt;code&gt;name&lt;/code&gt; and the &lt;code&gt;scopes&lt;/code&gt; that should be assigned to the token:</source>
          <target state="translated">このルートは、新しい個人用アクセストークンを作成します。これには、トークンの &lt;code&gt;name&lt;/code&gt; とトークンに割り当てられる &lt;code&gt;scopes&lt;/code&gt; の2つのデータが必要です。</target>
        </trans-unit>
        <trans-unit id="faefcfb73caacdb47ac8d1c66ba3faca0dae2450" translate="yes" xml:space="preserve">
          <source>This route is used to create new clients. It requires two pieces of data: the client's &lt;code&gt;name&lt;/code&gt; and a &lt;code&gt;redirect&lt;/code&gt; URL. The &lt;code&gt;redirect&lt;/code&gt; URL is where the user will be redirected after approving or denying a request for authorization.</source>
          <target state="translated">このルートは、新しいクライアントを作成するために使用されます。これには、クライアントの &lt;code&gt;name&lt;/code&gt; と &lt;code&gt;redirect&lt;/code&gt; URLの2つのデータが必要です。 &lt;code&gt;redirect&lt;/code&gt; URLは、ユーザーが承認または許可の要求を拒否した後にリダイレクトされる場所です。</target>
        </trans-unit>
        <trans-unit id="93f37d01f9fec2dff79671cd224fd0cefb6f2d21" translate="yes" xml:space="preserve">
          <source>This route is used to delete clients:</source>
          <target state="translated">このルートは、クライアントを削除するために使用します。</target>
        </trans-unit>
        <trans-unit id="9b984230f1bf503efe2a6bcf7be796bad3123716" translate="yes" xml:space="preserve">
          <source>This route is used to update clients. It requires two pieces of data: the client's &lt;code&gt;name&lt;/code&gt; and a &lt;code&gt;redirect&lt;/code&gt; URL. The &lt;code&gt;redirect&lt;/code&gt; URL is where the user will be redirected after approving or denying a request for authorization. The route will return the updated client instance:</source>
          <target state="translated">このルートは、クライアントの更新に使用されます。これには、クライアントの &lt;code&gt;name&lt;/code&gt; と &lt;code&gt;redirect&lt;/code&gt; URLの2つのデータが必要です。 &lt;code&gt;redirect&lt;/code&gt; URLは、ユーザーが承認または許可の要求を拒否した後にリダイレクトされる場所です。ルートは更新されたクライアントインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="f3728d6210d969608be203aa88862ae05335c710" translate="yes" xml:space="preserve">
          <source>This route may be used to delete personal access tokens:</source>
          <target state="translated">このルートを使用して、個人のアクセストークンを削除することができます。</target>
        </trans-unit>
        <trans-unit id="7072d20b9450b9cbc74f4c5bc52c2ddce1a6e6cd" translate="yes" xml:space="preserve">
          <source>This route returns all of the &lt;a href=&quot;#token-scopes&quot;&gt;scopes&lt;/a&gt; defined for your application. You may use this route to list the scopes a user may assign to a personal access token:</source>
          <target state="translated">このルートは、アプリケーションに定義されたすべての&lt;a href=&quot;#token-scopes&quot;&gt;スコープを&lt;/a&gt;返します。このルートを使用して、ユーザーが個人用アクセストークンに割り当てることができるスコープを一覧表示できます。</target>
        </trans-unit>
        <trans-unit id="64490007fda2fb38f740f72a07bc298db2f6a7d5" translate="yes" xml:space="preserve">
          <source>This route returns all of the clients for the authenticated user. This is primarily useful for listing all of the user's clients so that they may edit or delete them:</source>
          <target state="translated">このルートは、認証済みユーザーのすべてのクライアントを返します。これは主に、ユーザのクライアントをすべてリストアップして編集や削除ができるようにするのに便利です。</target>
        </trans-unit>
        <trans-unit id="d84a8473857720f14e29821baa13eaf466a2afa6" translate="yes" xml:space="preserve">
          <source>This route returns all of the personal access tokens that the authenticated user has created. This is primarily useful for listing all of the user's tokens so that they may edit or delete them:</source>
          <target state="translated">このルートは、認証済みユーザーが作成したすべての個人アクセストークンを返します。これは主に、ユーザが編集や削除できるようにユーザのトークンをすべてリストアップするのに便利です。</target>
        </trans-unit>
        <trans-unit id="941bbafd793b5297ecf3d481e402e2a10c822eac" translate="yes" xml:space="preserve">
          <source>This service provider only defines a &lt;code&gt;register&lt;/code&gt; method, and uses that method to define an implementation of &lt;code&gt;Riak\Connection&lt;/code&gt; in the service container. If you don't understand how the service container works, check out &lt;a href=&quot;container&quot;&gt;its documentation&lt;/a&gt;.</source>
          <target state="translated">このサービスプロバイダーは、 &lt;code&gt;register&lt;/code&gt; メソッドのみを定義し、そのメソッドを使用して、サービスコンテナー内の &lt;code&gt;Riak\Connection&lt;/code&gt; 実装を定義します。サービスコンテナの仕組みがわからない場合は&lt;a href=&quot;container&quot;&gt;、ドキュメントを&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="a448f422797405b6f5867321cec7436e5ea04ab9" translate="yes" xml:space="preserve">
          <source>This single command will remove the Vue scaffolding and replace it with React scaffolding, including an example component.</source>
          <target state="translated">この1つのコマンドでVueの足場を削除し、サンプルコンポーネントを含むReactの足場に置き換えます。</target>
        </trans-unit>
        <trans-unit id="323c1aaa34fae011bd2eb28a8bd8f01712af0f26" translate="yes" xml:space="preserve">
          <source>This single route declaration creates multiple routes to handle a variety of actions on the resource. The generated controller will already have methods stubbed for each of these actions, including notes informing you of the HTTP verbs and URIs they handle.</source>
          <target state="translated">この単一のルート宣言は、リソース上のさまざまなアクションを処理するための複数のルートを作成します。生成されたコントローラは、それぞれのアクションに対してスタブされたメソッドをすでに持っています。</target>
        </trans-unit>
        <trans-unit id="888c89bf3d2b560e251249db6fca8c336eb28819" translate="yes" xml:space="preserve">
          <source>This statement tells the container that it should inject the &lt;code&gt;RedisEventPusher&lt;/code&gt; when a class needs an implementation of &lt;code&gt;EventPusher&lt;/code&gt;. Now we can type-hint the &lt;code&gt;EventPusher&lt;/code&gt; interface in a constructor, or any other location where dependencies are injected by the service container:</source>
          <target state="translated">このステートメントは、クラスが &lt;code&gt;EventPusher&lt;/code&gt; の実装を必要とするときに &lt;code&gt;RedisEventPusher&lt;/code&gt; を挿入する必要があることをコンテナーに通知します。これで、コンストラクタ、またはサービスコンテナによって依存関係が注入されるその他の場所で、 &lt;code&gt;EventPusher&lt;/code&gt; インターフェイスのタイプヒントを入力できます。</target>
        </trans-unit>
        <trans-unit id="ede46c8983c76aff69d19d4255e927f562a6d5ff" translate="yes" xml:space="preserve">
          <source>This table provides a quick reference to all of the Laravel contracts and their equivalent facades:</source>
          <target state="translated">この表は、すべてのLaravel契約とそれに相当するファサードを簡単に参照することができます。</target>
        </trans-unit>
        <trans-unit id="7d49fdcb2be752536b073e37f3d371601c5bd08b" translate="yes" xml:space="preserve">
          <source>This test can be used to test the login screen generated by the &lt;code&gt;make:auth&lt;/code&gt; Artisan command.</source>
          <target state="translated">このテストは、 &lt;code&gt;make:auth&lt;/code&gt; Artisanコマンドによって生成されたログイン画面をテストするために使用できます。</target>
        </trans-unit>
        <trans-unit id="81e14ad267234094f56871810d9af02e61cd24ee" translate="yes" xml:space="preserve">
          <source>This trait is utilized by the default &lt;code&gt;App\User&lt;/code&gt; model and contains one method that may be used to send notifications: &lt;code&gt;notify&lt;/code&gt;. The &lt;code&gt;notify&lt;/code&gt; method expects to receive a notification instance:</source>
          <target state="translated">このトレイトはデフォルトの &lt;code&gt;App\User&lt;/code&gt; モデルで利用され、通知の送信に使用できるメソッドが1つあります： &lt;code&gt;notify&lt;/code&gt; 。 &lt;code&gt;notify&lt;/code&gt; 通知インスタンスを受信する方法を期待します。</target>
        </trans-unit>
        <trans-unit id="9d08c03725a8c04b48e266e756fa55f442041709" translate="yes" xml:space="preserve">
          <source>This validation rule implies the attribute is &quot;required&quot;.</source>
          <target state="translated">この検証ルールは、属性が &quot;必須 &quot;であることを暗示しています。</target>
        </trans-unit>
        <trans-unit id="09e1356d9f303cc2587bf4a5dbae44d0efa9bbea" translate="yes" xml:space="preserve">
          <source>This will give you an instance of the default Redis server. You may also pass the connection or cluster name to the &lt;code&gt;connection&lt;/code&gt; method to get a specific server or cluster as defined in your Redis configuration:</source>
          <target state="translated">これにより、デフォルトのRedisサーバーのインスタンスが提供されます。接続またはクラスター名を &lt;code&gt;connection&lt;/code&gt; メソッドに渡して、Redis構成で定義されている特定のサーバーまたはクラスターを取得することもできます。</target>
        </trans-unit>
        <trans-unit id="80aa677152aa6202197a36527101a8e2a2cbadc2" translate="yes" xml:space="preserve">
          <source>This will likely be because the job previously exceeded a timeout.</source>
          <target state="translated">これは、ジョブがタイムアウトを超えたことが原因である可能性が高いです。</target>
        </trans-unit>
        <trans-unit id="9d94d697d47d3f6a1649d50872e28e1ddfc59c7f" translate="yes" xml:space="preserve">
          <source>This will prevent errors in daemon queue situations.</source>
          <target state="translated">これにより、デーモンキューの状況でのエラーを防ぐことができます。</target>
        </trans-unit>
        <trans-unit id="dffddf2f855ed7cbfa3f356855f60b8fd27a10d7" translate="yes" xml:space="preserve">
          <source>Though &lt;code&gt;posts&lt;/code&gt; does not contain a &lt;code&gt;country_id&lt;/code&gt; column, the &lt;code&gt;hasManyThrough&lt;/code&gt; relation provides access to a country's posts via &lt;code&gt;$country-&amp;gt;posts&lt;/code&gt;. To perform this query, Eloquent inspects the &lt;code&gt;country_id&lt;/code&gt; on the intermediate &lt;code&gt;users&lt;/code&gt; table. After finding the matching user IDs, they are used to query the &lt;code&gt;posts&lt;/code&gt; table.</source>
          <target state="translated">けれども &lt;code&gt;posts&lt;/code&gt; 含まれていません &lt;code&gt;country_id&lt;/code&gt; 列を、 &lt;code&gt;hasManyThrough&lt;/code&gt; の関係は、経由国のポストへのアクセスを提供します &lt;code&gt;$country-&amp;gt;posts&lt;/code&gt; 。このクエリを実行するために、Eloquent は中間 &lt;code&gt;users&lt;/code&gt; テーブルの &lt;code&gt;country_id&lt;/code&gt; を検査します。一致するユーザーIDを見つけた後、それらを使用して、 &lt;code&gt;posts&lt;/code&gt; テーブルを照会します。</target>
        </trans-unit>
        <trans-unit id="35a840e4613e1b8d30d5f33e57592df1865d0387" translate="yes" xml:space="preserve">
          <source>Though disabled by default, source maps may be activated by calling the &lt;code&gt;mix.sourceMaps()&lt;/code&gt; method in your &lt;code&gt;webpack.mix.js&lt;/code&gt; file. Though it comes with a compile/performance cost, this will provide extra debugging information to your browser's developer tools when using compiled assets.</source>
          <target state="translated">デフォルトでは無効になっていますが、 &lt;code&gt;webpack.mix.js&lt;/code&gt; ファイルの &lt;code&gt;mix.sourceMaps()&lt;/code&gt; メソッドを呼び出すことでソースマップをアクティブにすることができます。コンパイル/パフォーマンスコストがかかりますが、コンパイルされたアセットを使用する場合、これはブラウザーの開発者ツールに追加のデバッグ情報を提供します。</target>
        </trans-unit>
        <trans-unit id="4c41b959c498347341317d938d26abe7ecbdc549" translate="yes" xml:space="preserve">
          <source>Throttle a callback for a maximum number of executions over a given duration.</source>
          <target state="translated">指定された期間の最大実行回数分のコールバックをスロットル化します。</target>
        </trans-unit>
        <trans-unit id="76acdde12af8bcae84914197d5f22e76aa7a0f8f" translate="yes" xml:space="preserve">
          <source>ThrottleRequests</source>
          <target state="translated">ThrottleRequests</target>
        </trans-unit>
        <trans-unit id="f616160a633337cbd19460f2042edbb49746d094" translate="yes" xml:space="preserve">
          <source>ThrottleRequests (Routing\Middleware)</source>
          <target state="translated">ThrottleRequests (RoutingMiddleware)</target>
        </trans-unit>
        <trans-unit id="41140a570c8ea4a67d22b31444f319e479cee7a0" translate="yes" xml:space="preserve">
          <source>ThrottleRequests::__construct()</source>
          <target state="translated">ThrottleRequests::__construct()</target>
        </trans-unit>
        <trans-unit id="d2ea5dffca0d7dc390b2ba09f53e8ed1b6f37eb1" translate="yes" xml:space="preserve">
          <source>ThrottleRequests::addHeaders()</source>
          <target state="translated">ThrottleRequests::addHeaders()</target>
        </trans-unit>
        <trans-unit id="92f562a3120490d6ebcbad3688b991e531d463ac" translate="yes" xml:space="preserve">
          <source>ThrottleRequests::buildException()</source>
          <target state="translated">ThrottleRequests::buildException()</target>
        </trans-unit>
        <trans-unit id="e0ea9eb291663c7a991681941f7fa8c7a29f5471" translate="yes" xml:space="preserve">
          <source>ThrottleRequests::calculateRemainingAttempts()</source>
          <target state="translated">ThrottleRequests::calculateRemainingAttempts()</target>
        </trans-unit>
        <trans-unit id="4a2ddac04f830ca177ee5cd1701a8065d252d529" translate="yes" xml:space="preserve">
          <source>ThrottleRequests::getHeaders()</source>
          <target state="translated">ThrottleRequests::getHeaders()</target>
        </trans-unit>
        <trans-unit id="9706589098c4f01c2e641ee9318fcc9f5e406abf" translate="yes" xml:space="preserve">
          <source>ThrottleRequests::getTimeUntilNextRetry()</source>
          <target state="translated">ThrottleRequests::getTimeUntilNextRetry()</target>
        </trans-unit>
        <trans-unit id="c90e5ab43f2d080509bb3584659362943dd05c75" translate="yes" xml:space="preserve">
          <source>ThrottleRequests::handle()</source>
          <target state="translated">ThrottleRequests::handle()</target>
        </trans-unit>
        <trans-unit id="1812bd1714ef7cc25ea2654bd64a7d9befdccf44" translate="yes" xml:space="preserve">
          <source>ThrottleRequests::resolveMaxAttempts()</source>
          <target state="translated">ThrottleRequests::resolveMaxAttempts()</target>
        </trans-unit>
        <trans-unit id="5607ffbf70d208488bfb3d57a3d53ab7c2edd99e" translate="yes" xml:space="preserve">
          <source>ThrottleRequests::resolveRequestSignature()</source>
          <target state="translated">ThrottleRequests::resolveRequestSignature()</target>
        </trans-unit>
        <trans-unit id="f45ecaaf6aa70c35f23a5c9000c3707fb5978c04" translate="yes" xml:space="preserve">
          <source>ThrottleRequestsException</source>
          <target state="translated">ThrottleRequestsException</target>
        </trans-unit>
        <trans-unit id="026e4e7a81d60717429d648c0101fc27c1248652" translate="yes" xml:space="preserve">
          <source>ThrottleRequestsException (Http\Exceptions)</source>
          <target state="translated">ThrottleRequestsException (HttpExceptions)</target>
        </trans-unit>
        <trans-unit id="f3bc7caaa76536474d0dfefef999450de1e83da8" translate="yes" xml:space="preserve">
          <source>ThrottleRequestsException::__construct()</source>
          <target state="translated">ThrottleRequestsException::__construct()</target>
        </trans-unit>
        <trans-unit id="2d3b4df5ced5519de91850c430e6857094a6c021" translate="yes" xml:space="preserve">
          <source>ThrottleRequestsWithRedis</source>
          <target state="translated">ThrottleRequestsWithRedis</target>
        </trans-unit>
        <trans-unit id="118b9685f1ac44e59b9294fcb5e4d0612efdd5d7" translate="yes" xml:space="preserve">
          <source>ThrottleRequestsWithRedis (Routing\Middleware)</source>
          <target state="translated">ThrottleRequestsWithRedis (RoutingMiddleware)</target>
        </trans-unit>
        <trans-unit id="d07e49fee75631d1b6da9143e95cbb6fd3ccd5b7" translate="yes" xml:space="preserve">
          <source>ThrottleRequestsWithRedis::__construct()</source>
          <target state="translated">ThrottleRequestsWithRedis::__construct()</target>
        </trans-unit>
        <trans-unit id="fe2d82353422a137a9b1022693166898be23737d" translate="yes" xml:space="preserve">
          <source>ThrottleRequestsWithRedis::calculateRemainingAttempts()</source>
          <target state="translated">ThrottleRequestsWithRedis::calculateRemainingAttempts()</target>
        </trans-unit>
        <trans-unit id="1dacf6d923c06960a722081ceb507bd905ce852b" translate="yes" xml:space="preserve">
          <source>ThrottleRequestsWithRedis::getTimeUntilNextRetry()</source>
          <target state="translated">ThrottleRequestsWithRedis::getTimeUntilNextRetry()</target>
        </trans-unit>
        <trans-unit id="1408fbb1b635315a8d66b3df139aca99f98283c8" translate="yes" xml:space="preserve">
          <source>ThrottleRequestsWithRedis::handle()</source>
          <target state="translated">ThrottleRequestsWithRedis::handle()</target>
        </trans-unit>
        <trans-unit id="fde3553d5a6afb19488b42f8c36c953d96daee16" translate="yes" xml:space="preserve">
          <source>ThrottleRequestsWithRedis::tooManyAttempts()</source>
          <target state="translated">ThrottleRequestsWithRedis::tooManyAttempts()</target>
        </trans-unit>
        <trans-unit id="f56f467e70eb907e626934d36ab338370d8124b2" translate="yes" xml:space="preserve">
          <source>ThrottlesLogins</source>
          <target state="translated">ThrottlesLogins</target>
        </trans-unit>
        <trans-unit id="f61763828aea717b53856f4c1f255f21a62b794d" translate="yes" xml:space="preserve">
          <source>ThrottlesLogins (Foundation\Auth)</source>
          <target state="translated">ThrottlesLogins (FoundationAuth)</target>
        </trans-unit>
        <trans-unit id="51b7d4973b269c2d30d76c8d57d7f0c5ff6c7807" translate="yes" xml:space="preserve">
          <source>ThrottlesLogins::clearLoginAttempts()</source>
          <target state="translated">ThrottlesLogins::clearLoginAttempts()</target>
        </trans-unit>
        <trans-unit id="730575ab7a25acec7edad3b74f1ae766d89565d3" translate="yes" xml:space="preserve">
          <source>ThrottlesLogins::decayMinutes()</source>
          <target state="translated">ThrottlesLogins::decayMinutes()</target>
        </trans-unit>
        <trans-unit id="feab3084cff7eca1a6beca648158f23b5ab96b53" translate="yes" xml:space="preserve">
          <source>ThrottlesLogins::fireLockoutEvent()</source>
          <target state="translated">ThrottlesLogins::fireLockoutEvent()</target>
        </trans-unit>
        <trans-unit id="6ce9524a2fc792888e38d1dd38da31866cc83308" translate="yes" xml:space="preserve">
          <source>ThrottlesLogins::hasTooManyLoginAttempts()</source>
          <target state="translated">ThrottlesLogins::hasTooManyLoginAttempts()</target>
        </trans-unit>
        <trans-unit id="94a1090d99d5baaf4f7811f3833fc68bf1da73c7" translate="yes" xml:space="preserve">
          <source>ThrottlesLogins::incrementLoginAttempts()</source>
          <target state="translated">ThrottlesLogins::incrementLoginAttempts()</target>
        </trans-unit>
        <trans-unit id="cb4e59b867991b940d0f92cbf5010d761b6fc770" translate="yes" xml:space="preserve">
          <source>ThrottlesLogins::limiter()</source>
          <target state="translated">ThrottlesLogins::limiter()</target>
        </trans-unit>
        <trans-unit id="d4dae703f5fad666353be343b5404681237b840d" translate="yes" xml:space="preserve">
          <source>ThrottlesLogins::maxAttempts()</source>
          <target state="translated">ThrottlesLogins::maxAttempts()</target>
        </trans-unit>
        <trans-unit id="2d533f286e0081ac3e92f17257b97f36f0d0f7cf" translate="yes" xml:space="preserve">
          <source>ThrottlesLogins::sendLockoutResponse()</source>
          <target state="translated">ThrottlesLogins::sendLockoutResponse()</target>
        </trans-unit>
        <trans-unit id="669aec4fda568056bc4fe05d901b3f2494cfc945" translate="yes" xml:space="preserve">
          <source>ThrottlesLogins::throttleKey()</source>
          <target state="translated">ThrottlesLogins::throttleKey()</target>
        </trans-unit>
        <trans-unit id="40cb586c144e3fec6f7fae2ec8174c2c0bf42ac8" translate="yes" xml:space="preserve">
          <source>Throughout the Laravel documentation, many of the examples will use facades to demonstrate various features of the framework.</source>
          <target state="translated">Laravelのドキュメントを通して、多くの例はフレームワークの様々な機能を示すためにファサードを使用します。</target>
        </trans-unit>
        <trans-unit id="ec59aa675d34e1ceb86b8aa1cf4849f340395c20" translate="yes" xml:space="preserve">
          <source>Throw a bad method call exception for the given method.</source>
          <target state="translated">指定されたメソッドに対して不正なメソッドコール例外をスローします。</target>
        </trans-unit>
        <trans-unit id="25010b383a119206e9eae5b1d911d488b7e9dc97" translate="yes" xml:space="preserve">
          <source>Throw a method not allowed HTTP exception.</source>
          <target state="translated">許可されていないHTTP例外をスローします。</target>
        </trans-unit>
        <trans-unit id="553949a80aac37e0af8a8a707fc147468587ad06" translate="yes" xml:space="preserve">
          <source>Throw an HttpException with the given data.</source>
          <target state="translated">指定されたデータで HttpException をスローします。</target>
        </trans-unit>
        <trans-unit id="89f750f1fb24776f394c764e13938122d08235f6" translate="yes" xml:space="preserve">
          <source>Throw an exception for an unresolvable primitive.</source>
          <target state="translated">解決不可能なプリミティブに対して例外をスローします。</target>
        </trans-unit>
        <trans-unit id="9808cf2e27f60d4a45fdadaba8485e55745c21b1" translate="yes" xml:space="preserve">
          <source>Throw an exception if the query doesn't have an orderBy clause.</source>
          <target state="translated">クエリに orderBy 節がない場合は例外をスローします。</target>
        </trans-unit>
        <trans-unit id="14ca209e5c20fc387bad3a95f33fdc97d914d85a" translate="yes" xml:space="preserve">
          <source>Throw an exception that the concrete is not instantiable.</source>
          <target state="translated">コンクリートがインスタンス化できない例外をスローします。</target>
        </trans-unit>
        <trans-unit id="8abf11297f412ee4fff55514bb434f634e293565" translate="yes" xml:space="preserve">
          <source>Throwable</source>
          <target state="translated">Throwable</target>
        </trans-unit>
        <trans-unit id="16a23412d0d2d6862fc6c9091c7546c8441ee1f2" translate="yes" xml:space="preserve">
          <source>Throws an unauthorized exception.</source>
          <target state="translated">許可されていない例外をスローします。</target>
        </trans-unit>
        <trans-unit id="5e6e803af098086761b526b070d4b16f1ceb9420" translate="yes" xml:space="preserve">
          <source>Throws the response in a HttpResponseException instance.</source>
          <target state="translated">HttpResponseException インスタンス内のレスポンスをスローします。</target>
        </trans-unit>
        <trans-unit id="a72b6d93881fddd0bce9b4508e6dcc9da26e4838" translate="yes" xml:space="preserve">
          <source>Time Based Attempts</source>
          <target state="translated">タイムベースの試み</target>
        </trans-unit>
        <trans-unit id="d4c45de0fe64ac43c72a798c67faaadadfaa1b90" translate="yes" xml:space="preserve">
          <source>Timeout</source>
          <target state="translated">Timeout</target>
        </trans-unit>
        <trans-unit id="c04ed1238a14de2b02d7fd14a7e9605bb1b10b96" translate="yes" xml:space="preserve">
          <source>Timestamps</source>
          <target state="translated">Timestamps</target>
        </trans-unit>
        <trans-unit id="791214dda21a45673e6a00a407416e403372c00e" translate="yes" xml:space="preserve">
          <source>Timezones</source>
          <target state="translated">Timezones</target>
        </trans-unit>
        <trans-unit id="656428c6aa8b5394307f88bf7b20104a86fe51c1" translate="yes" xml:space="preserve">
          <source>To &quot;check&quot; a checkbox field, you may use the &lt;code&gt;check&lt;/code&gt; method. Like many other input related methods, a full CSS selector is not required. If an exact selector match can't be found, Dusk will search for a checkbox with a matching &lt;code&gt;name&lt;/code&gt; attribute:</source>
          <target state="translated">チェックボックスフィールドを「チェック」するには、 &lt;code&gt;check&lt;/code&gt; メソッドを使用できます。他の多くの入力関連メソッドと同様に、完全なCSSセレクターは必要ありません。セレクタの完全一致が見つからない場合、Duskは一致する &lt;code&gt;name&lt;/code&gt; 属性を持つチェックボックスを検索します。</target>
        </trans-unit>
        <trans-unit id="94f6880a88183c5573661364fd7eaee097a6fc5c" translate="yes" xml:space="preserve">
          <source>To &quot;select&quot; a radio button option, you may use the &lt;code&gt;radio&lt;/code&gt; method. Like many other input related methods, a full CSS selector is not required. If an exact selector match can't be found, Dusk will search for a radio with matching &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; attributes:</source>
          <target state="translated">ラジオボタンオプションを「選択」するには、 &lt;code&gt;radio&lt;/code&gt; 方式を使用できます。他の多くの入力関連メソッドと同様に、完全なCSSセレクターは必要ありません。完全に一致するセレクタが見つからない場合、Duskは一致する &lt;code&gt;name&lt;/code&gt; と &lt;code&gt;value&lt;/code&gt; 属性を持つラジオを検索します。</target>
        </trans-unit>
        <trans-unit id="6578fd04c01214fc32eaa159f087a800c50b19e9" translate="yes" xml:space="preserve">
          <source>To &quot;unsecure&quot; a site and revert back to serving its traffic over plain HTTP, use the &lt;code&gt;unsecure&lt;/code&gt; command. Like the &lt;code&gt;secure&lt;/code&gt; command, this command accepts the host name that you wish to unsecure:</source>
          <target state="translated">サイトのセキュリティを解除し、プレーンHTTP経由でのトラフィックの提供に戻すには、 &lt;code&gt;unsecure&lt;/code&gt; コマンドを使用します。 &lt;code&gt;secure&lt;/code&gt; コマンドと同様に、このコマンドは、保護を解除するホスト名を受け入れます。</target>
        </trans-unit>
        <trans-unit id="97798142c88085858c10b19aa386f1e1b0eabc0b" translate="yes" xml:space="preserve">
          <source>To access your notifications from your JavaScript client, you should define a notification controller for your application which returns the notifications for a notifiable entity, such as the current user. You may then make an HTTP request to that controller's URI from your JavaScript client.</source>
          <target state="translated">JavaScript クライアントから通知にアクセスするには、現在のユーザーのような通知可能なエンティティの通知を返す、アプリケーション用の通知コントローラを定義する必要があります。そして、JavaScript クライアントからそのコントローラの URI に HTTP リクエストを行うことができます。</target>
        </trans-unit>
        <trans-unit id="3da5298222350e85a51b24499f97e373d28a03e4" translate="yes" xml:space="preserve">
          <source>To accomplish this, the &lt;code&gt;Illuminate\Mail\Mailable&lt;/code&gt; class offers a &lt;code&gt;locale&lt;/code&gt; method to set the desired language. The application will change into this locale when the mailable is being formatted and then revert back to the previous locale when formatting is complete:</source>
          <target state="translated">これを実現するために、 &lt;code&gt;Illuminate\Mail\Mailable&lt;/code&gt; クラスは、目的の言語を設定するための &lt;code&gt;locale&lt;/code&gt; メソッドを提供します。 mailableがフォーマットされると、アプリケーションはこのロケールに変更され、フォーマットが完了すると、以前のロケールに戻ります。</target>
        </trans-unit>
        <trans-unit id="2f3a1648875a8c8d735796c8f8b8c5b9c3eafaad" translate="yes" xml:space="preserve">
          <source>To accomplish this, the &lt;code&gt;Illuminate\Notifications\Notification&lt;/code&gt; class now offers a &lt;code&gt;locale&lt;/code&gt; method to set the desired language. The application will change into this locale when the notification is being formatted and then revert back to the previous locale when formatting is complete:</source>
          <target state="translated">これを実現するために、 &lt;code&gt;Illuminate\Notifications\Notification&lt;/code&gt; クラスは、希望する言語を設定するための &lt;code&gt;locale&lt;/code&gt; メソッドを提供するようになりました。通知のフォーマット中にアプリケーションはこのロケールに変更され、フォーマットが完了すると以前のロケールに戻ります。</target>
        </trans-unit>
        <trans-unit id="b4d7de6fd697cde275fd7490bd9f4303d78636a1" translate="yes" xml:space="preserve">
          <source>To accomplish this, the &lt;code&gt;Illuminate\Notifications\Notification&lt;/code&gt; class offers a &lt;code&gt;locale&lt;/code&gt; method to set the desired language. The application will change into this locale when the notification is being formatted and then revert back to the previous locale when formatting is complete:</source>
          <target state="translated">これを実現するために、 &lt;code&gt;Illuminate\Notifications\Notification&lt;/code&gt; クラスは、目的の言語を設定するための &lt;code&gt;locale&lt;/code&gt; メソッドを提供します。通知のフォーマット中にアプリケーションはこのロケールに変更され、フォーマットが完了すると以前のロケールに戻ります。</target>
        </trans-unit>
        <trans-unit id="ed9beddc50d32c93c766ce8fc447b633a222d026" translate="yes" xml:space="preserve">
          <source>To add attachments to an email, use the &lt;code&gt;attach&lt;/code&gt; method within the mailable class' &lt;code&gt;build&lt;/code&gt; method. The &lt;code&gt;attach&lt;/code&gt; method accepts the full path to the file as its first argument:</source>
          <target state="translated">電子メールに添付ファイルを追加するには、メール可能クラスの &lt;code&gt;build&lt;/code&gt; メソッド内で &lt;code&gt;attach&lt;/code&gt; メソッドを使用します。 &lt;code&gt;attach&lt;/code&gt; 方法は、最初の引数としてファイルへのフルパスを受け付けます。</target>
        </trans-unit>
        <trans-unit id="e290d86f324f73e9b35bbb4d6fd573949739a3f7" translate="yes" xml:space="preserve">
          <source>To append text to a field without clearing its content, you may use the &lt;code&gt;append&lt;/code&gt; method:</source>
          <target state="translated">内容をクリアせずにフィールドにテキストを追加するには、 &lt;code&gt;append&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="642d1755c83988cefb1048a5b2250cdd8e77384d" translate="yes" xml:space="preserve">
          <source>To assign a global scope to a model, you should override a given model's &lt;code&gt;boot&lt;/code&gt; method and use the &lt;code&gt;addGlobalScope&lt;/code&gt; method:</source>
          <target state="translated">モデルにグローバルスコープを割り当てるには、特定のモデルの &lt;code&gt;boot&lt;/code&gt; メソッドをオーバーライドし、 &lt;code&gt;addGlobalScope&lt;/code&gt; メソッドを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="adc3a915381fd9a9bdfad652556224e28fa76c5d" translate="yes" xml:space="preserve">
          <source>To assign a shortcut when defining an option, you may specify it before the option name and use a | delimiter to separate the shortcut from the full option name:</source>
          <target state="translated">オプションを定義する際にショートカットを割り当てるには、オプション名の前にそれを指定し、ショートカットを完全なオプション名から切り離すために | 区切り文字を使用することができます。</target>
        </trans-unit>
        <trans-unit id="018ce81ebde7e612ef90ecec77bbcdd7f437d270" translate="yes" xml:space="preserve">
          <source>To assign middleware to all routes within a group, you may use the &lt;code&gt;middleware&lt;/code&gt; method before defining the group. Middleware are executed in the order they are listed in the array:</source>
          <target state="translated">グループ内のすべてのルートにミドルウェアを割り当てるには、グループを定義する前に &lt;code&gt;middleware&lt;/code&gt; 方法を使用できます。ミドルウェアは、配列にリストされている順序で実行されます。</target>
        </trans-unit>
        <trans-unit id="c449725d68d126d9e6a108bd4f1b3265fb7f414c" translate="yes" xml:space="preserve">
          <source>To assist you in building these types of applications, Laravel makes it easy to &quot;broadcast&quot; your &lt;a href=&quot;events&quot;&gt;events&lt;/a&gt; over a WebSocket connection. Broadcasting your Laravel events allows you to share the same event names between your server-side code and your client-side JavaScript application.</source>
          <target state="translated">これらのタイプのアプリケーションの作成を支援するために、LaravelはWebSocket接続を介して&lt;a href=&quot;events&quot;&gt;イベント&lt;/a&gt;を簡単に「ブロードキャスト」できるようにします。Laravelイベントをブロードキャストすると、サーバー側のコードとクライアント側のJavaScriptアプリケーションの間で同じイベント名を共有できます。</target>
        </trans-unit>
        <trans-unit id="eed0e6aeed2737f67a652f8d654b9b3794efb68d" translate="yes" xml:space="preserve">
          <source>To authorize an action using gates, you should use the &lt;code&gt;allows&lt;/code&gt; or &lt;code&gt;denies&lt;/code&gt; methods. Note that you are not required to pass the currently authenticated user to these methods. Laravel will automatically take care of passing the user into the gate Closure:</source>
          <target state="translated">ゲートを使用してアクションを承認するに &lt;code&gt;allows&lt;/code&gt; 、 &lt;code&gt;denies&lt;/code&gt; メソッドまたはdenyメソッドを使用する必要があります。現在認証されているユーザーをこれらのメソッドに渡す必要はないことに注意してください。Laravelは自動的にユーザーをゲートクロージャに渡します。</target>
        </trans-unit>
        <trans-unit id="0689015a7b6df90ea58f4b3adb517a9d814723ff" translate="yes" xml:space="preserve">
          <source>To avoid JavaScript errors, be sure to load these files in the proper order:</source>
          <target state="translated">JavaScriptのエラーを回避するために、これらのファイルを適切な順序で読み込むようにしてください。</target>
        </trans-unit>
        <trans-unit id="a93fc5240b81e394f5e95c88315edc2667627593" translate="yes" xml:space="preserve">
          <source>To better understand when you may want to use the &lt;code&gt;toOthers&lt;/code&gt; method, let's imagine a task list application where a user may create a new task by entering a task name. To create a task, your application might make a request to a &lt;code&gt;/task&lt;/code&gt; end-point which broadcasts the task's creation and returns a JSON representation of the new task. When your JavaScript application receives the response from the end-point, it might directly insert the new task into its task list like so:</source>
          <target state="translated">&lt;code&gt;toOthers&lt;/code&gt; メソッドをいつ使用したいかをよく理解するために、ユーザーがタスク名を入力して新しいタスクを作成できるタスクリストアプリケーションを想像してみましょう。タスクを作成するために、アプリケーションは &lt;code&gt;/task&lt;/code&gt; エンドポイントにリクエストを作成し、タスクの作成をブロードキャストして新しいタスクのJSON表現を返す場合があります。JavaScriptアプリケーションがエンドポイントから応答を受信すると、次のように新しいタスクをタスクリストに直接挿入する場合があります。</target>
        </trans-unit>
        <trans-unit id="50632dcd79f4e73b87365472ad938a8b37dc2baa" translate="yes" xml:space="preserve">
          <source>To broadcast client events, you may use Echo's &lt;code&gt;whisper&lt;/code&gt; method:</source>
          <target state="translated">クライアントイベントをブロードキャストするには、Echoの &lt;code&gt;whisper&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="27d60647284f4a8bc8b3173375b8f4057737a46d" translate="yes" xml:space="preserve">
          <source>To cancel a subscription, call the &lt;code&gt;cancel&lt;/code&gt; method on the user's subscription:</source>
          <target state="translated">サブスクリプションをキャンセルするには、ユーザーのサブスクリプションの &lt;code&gt;cancel&lt;/code&gt; メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="7d6a347b8ddc8138873e6d6c2ee411999feffd4b" translate="yes" xml:space="preserve">
          <source>To click a link, you may use the &lt;code&gt;clickLink&lt;/code&gt; method on the browser instance. The &lt;code&gt;clickLink&lt;/code&gt; method will click the link that has the given display text:</source>
          <target state="translated">リンクをクリックするには、ブラウザインスタンスで &lt;code&gt;clickLink&lt;/code&gt; メソッドを使用できます。 &lt;code&gt;clickLink&lt;/code&gt; のメソッドは、指定された表示テキストを持っているリンクをクリックします。</target>
        </trans-unit>
        <trans-unit id="9c1ea582af298fa254ddc8096f67ad108df83a09" translate="yes" xml:space="preserve">
          <source>To connect to your MySQL or PostgreSQL database from your host machine's database client, you should connect to &lt;code&gt;127.0.0.1&lt;/code&gt; and port &lt;code&gt;33060&lt;/code&gt; (MySQL) or &lt;code&gt;54320&lt;/code&gt; (PostgreSQL). The username and password for both databases is &lt;code&gt;homestead&lt;/code&gt; / &lt;code&gt;secret&lt;/code&gt;.</source>
          <target state="translated">ホストマシンのデータベースクライアントからMySQLまたはPostgreSQLデータベースに接続するには、 &lt;code&gt;127.0.0.1&lt;/code&gt; およびポート &lt;code&gt;33060&lt;/code&gt; （MySQL）または &lt;code&gt;54320&lt;/code&gt; （PostgreSQL）に接続する必要があります。両方のデータベースのユーザー名とパスワードは &lt;code&gt;homestead&lt;/code&gt; / &lt;code&gt;secret&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0780f765ae74c760a8da467968a8781cd3b1c301" translate="yes" xml:space="preserve">
          <source>To convert a model and its loaded &lt;a href=&quot;eloquent-relationships&quot;&gt;relationships&lt;/a&gt; to an array, you should use the &lt;code&gt;toArray&lt;/code&gt; method. This method is recursive, so all attributes and all relations (including the relations of relations) will be converted to arrays:</source>
          <target state="translated">モデルとそのロードされた&lt;a href=&quot;eloquent-relationships&quot;&gt;関係&lt;/a&gt;を配列に変換するには、 &lt;code&gt;toArray&lt;/code&gt; メソッドを使用する必要があります。このメソッドは再帰的であるため、すべての属性とすべての関係（関係の関係を含む）は配列に変換されます。</target>
        </trans-unit>
        <trans-unit id="fd8281b1ce280c8c1d7f0bd5d7626429904416ea" translate="yes" xml:space="preserve">
          <source>To convert a model to JSON, you should use the &lt;code&gt;toJson&lt;/code&gt; method. Like &lt;code&gt;toArray&lt;/code&gt;, the &lt;code&gt;toJson&lt;/code&gt; method is recursive, so all attributes and relations will be converted to JSON. You may also specify JSON encoding options &lt;a href=&quot;http://php.net/manual/en/function.json-encode.php&quot;&gt;supported by PHP&lt;/a&gt;:</source>
          <target state="translated">モデルをJSONに変換するには、 &lt;code&gt;toJson&lt;/code&gt; メソッドを使用する必要があります。 &lt;code&gt;toArray&lt;/code&gt; と同様に、 &lt;code&gt;toJson&lt;/code&gt; メソッドは再帰的であるため、すべての属性と関係はJSONに変換されます。&lt;a href=&quot;http://php.net/manual/en/function.json-encode.php&quot;&gt;PHPでサポートされている&lt;/a&gt; JSONエンコーディングオプションを指定することもできます。</target>
        </trans-unit>
        <trans-unit id="c276d4f58b07e55bc2eca27ccedf15f8818d830f" translate="yes" xml:space="preserve">
          <source>To create a factory, use the &lt;code&gt;make:factory&lt;/code&gt;&lt;a href=&quot;artisan&quot;&gt;Artisan command&lt;/a&gt;:</source>
          <target state="translated">ファクトリを作成するには、 &lt;code&gt;make:factory&lt;/code&gt; &lt;a href=&quot;artisan&quot;&gt;Artisanコマンドを&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="e454cbabf938eb5a1a35f1cccbe08022c0303d66" translate="yes" xml:space="preserve">
          <source>To create a migration, use the &lt;code&gt;make:migration&lt;/code&gt;&lt;a href=&quot;artisan&quot;&gt;Artisan command&lt;/a&gt;:</source>
          <target state="translated">マイグレーションを作成するには、 &lt;code&gt;make:migration&lt;/code&gt; &lt;a href=&quot;artisan&quot;&gt;Artisanコマンドを&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="4b98ad379d32eff8129efa8aa080c203cd377fda" translate="yes" xml:space="preserve">
          <source>To create a new command, use the &lt;code&gt;make:command&lt;/code&gt; Artisan command. This command will create a new command class in the &lt;code&gt;app/Console/Commands&lt;/code&gt; directory. Don't worry if this directory does not exist in your application, since it will be created the first time you run the &lt;code&gt;make:command&lt;/code&gt; Artisan command. The generated command will include the default set of properties and methods that are present on all commands:</source>
          <target state="translated">新しいコマンドを作成するには、 &lt;code&gt;make:command&lt;/code&gt; Artisanコマンドを使用します。このコマンドは、 &lt;code&gt;app/Console/Commands&lt;/code&gt; ディレクトリに新しいコマンドクラスを作成します。 &lt;code&gt;make:command&lt;/code&gt; Artisanコマンドを初めて実行するときに作成されるため、アプリケーションにこのディレクトリが存在しなくても心配する必要はありません。生成されたコマンドには、すべてのコマンドに存在するプロパティとメソッドのデフォルトセットが含まれます。</target>
        </trans-unit>
        <trans-unit id="27f9180a9f165de9178905be1082c2f8867a21de" translate="yes" xml:space="preserve">
          <source>To create a new database table, use the &lt;code&gt;create&lt;/code&gt; method on the &lt;code&gt;Schema&lt;/code&gt; facade. The &lt;code&gt;create&lt;/code&gt; method accepts two arguments. The first is the name of the table, while the second is a &lt;code&gt;Closure&lt;/code&gt; which receives a &lt;code&gt;Blueprint&lt;/code&gt; object that may be used to define the new table:</source>
          <target state="translated">新しいデータベーステーブルを &lt;code&gt;create&lt;/code&gt; するには、 &lt;code&gt;Schema&lt;/code&gt; ファサードでcreateメソッドを使用します。 &lt;code&gt;create&lt;/code&gt; 方法は2つの引数を受け入れます。1つ目はテーブルの名前で、2つ目は新しいテーブルの定義に使用できる &lt;code&gt;Blueprint&lt;/code&gt; オブジェクトを受け取る &lt;code&gt;Closure&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="dd3405917a5907aa118a063f37845dd6bb347245" translate="yes" xml:space="preserve">
          <source>To create a new middleware, use the &lt;code&gt;make:middleware&lt;/code&gt; Artisan command:</source>
          <target state="translated">新しいミドルウェアを作成するには、 &lt;code&gt;make:middleware&lt;/code&gt; Artisanコマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="46eb4e41a80a19b082150f2e05aea66132ebf059" translate="yes" xml:space="preserve">
          <source>To create a new record in the database, create a new model instance, set attributes on the model, then call the &lt;code&gt;save&lt;/code&gt; method:</source>
          <target state="translated">データベースに新しいレコードを作成するには、新しいモデルインスタンスを作成し、モデルに属性を設定してから、 &lt;code&gt;save&lt;/code&gt; メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="200221820a7a3bc86e704c6ed09e32fda100fb03" translate="yes" xml:space="preserve">
          <source>To create a new test case, use the &lt;code&gt;make:test&lt;/code&gt; Artisan command:</source>
          <target state="translated">新しいテストケースを作成するには、 &lt;code&gt;make:test&lt;/code&gt; Artisanコマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="ba01eb43778a2ec8e66967bcc2206ca77b374e4d" translate="yes" xml:space="preserve">
          <source>To create a resource collection, you should use the &lt;code&gt;--collection&lt;/code&gt; flag when creating the resource. Or, including the word &lt;code&gt;Collection&lt;/code&gt; in the resource name will indicate to Laravel that it should create a collection resource. Collection resources extend the &lt;code&gt;Illuminate\Http\Resources\Json\ResourceCollection&lt;/code&gt; class:</source>
          <target state="translated">リソースコレクションを作成するには、リソースの作成時に &lt;code&gt;--collection&lt;/code&gt; フラグを使用する必要があります。または、リソース名に &lt;code&gt;Collection&lt;/code&gt; という単語を含めると、Laravelはコレクションリソースを作成する必要があることを示します。コレクションリソースは、 &lt;code&gt;Illuminate\Http\Resources\Json\ResourceCollection&lt;/code&gt; クラスを拡張します。</target>
        </trans-unit>
        <trans-unit id="4266e3d7358b3618595153450c5007305495db27" translate="yes" xml:space="preserve">
          <source>To create a subscription, first retrieve an instance of your billable model, which typically will be an instance of &lt;code&gt;App\User&lt;/code&gt;. Once you have retrieved the model instance, you may use the &lt;code&gt;newSubscription&lt;/code&gt; method to create the model's subscription:</source>
          <target state="translated">サブスクリプションを作成するには、まず請求可能なモデルのインスタンスを取得します。これは通常 &lt;code&gt;App\User&lt;/code&gt; インスタンスになります。モデルインスタンスを取得したら、 &lt;code&gt;newSubscription&lt;/code&gt; メソッドを使用してモデルのサブスクリプションを作成できます。</target>
        </trans-unit>
        <trans-unit id="17bedd4172a6374fb3925828ca9b40af8d37610a" translate="yes" xml:space="preserve">
          <source>To create our custom cache driver, we first need to implement the &lt;code&gt;Illuminate\Contracts\Cache\Store&lt;/code&gt;&lt;a href=&quot;contracts&quot;&gt;contract&lt;/a&gt;. So, a MongoDB cache implementation would look something like this:</source>
          <target state="translated">当社独自のキャッシュドライバを作成するには、実装するために私たち最初の必要性 &lt;code&gt;Illuminate\Contracts\Cache\Store&lt;/code&gt; &lt;a href=&quot;contracts&quot;&gt;契約を&lt;/a&gt;。したがって、MongoDBキャッシュ実装は次のようになります。</target>
        </trans-unit>
        <trans-unit id="e007816e53d2968cc1b3fcf843626c4f0de37df4" translate="yes" xml:space="preserve">
          <source>To create the symbolic link, you may use the &lt;code&gt;storage:link&lt;/code&gt; Artisan command:</source>
          <target state="translated">シンボリックリンクを作成するには、 &lt;code&gt;storage:link&lt;/code&gt; Artisanコマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="23d1975a5b78c8f4e9d30d199953f519d9d98c0b" translate="yes" xml:space="preserve">
          <source>To defer the loading of a provider, set the &lt;code&gt;defer&lt;/code&gt; property to &lt;code&gt;true&lt;/code&gt; and define a &lt;code&gt;provides&lt;/code&gt; method. The &lt;code&gt;provides&lt;/code&gt; method should return the service container bindings registered by the provider:</source>
          <target state="translated">プロバイダーのロードを延期するには、 &lt;code&gt;defer&lt;/code&gt; プロパティを &lt;code&gt;true&lt;/code&gt; に設定し、providesメソッドを定義し &lt;code&gt;provides&lt;/code&gt; 。 &lt;code&gt;provides&lt;/code&gt; 方法は、プロバイダによって登録サービスコンテナのバインディングを返す必要があります：</target>
        </trans-unit>
        <trans-unit id="025cf5854a5a54aaa6da2f4a1f338a32a1f84c1b" translate="yes" xml:space="preserve">
          <source>To define a mutator, define a &lt;code&gt;setFooAttribute&lt;/code&gt; method on your model where &lt;code&gt;Foo&lt;/code&gt; is the &quot;studly&quot; cased name of the column you wish to access. So, again, let's define a mutator for the &lt;code&gt;first_name&lt;/code&gt; attribute. This mutator will be automatically called when we attempt to set the value of the &lt;code&gt;first_name&lt;/code&gt; attribute on the model:</source>
          <target state="translated">ミューテータを定義するには、定義 &lt;code&gt;setFooAttribute&lt;/code&gt; のモデルにメソッド &lt;code&gt;Foo&lt;/code&gt; アクセスしたい列の「studly」同棲名前です。それでは、もう一度、 &lt;code&gt;first_name&lt;/code&gt; 属性のミューテーターを定義しましょう。モデルに &lt;code&gt;first_name&lt;/code&gt; 属性の値を設定しようとすると、このミューテーターが自動的に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="2e7bc1582ba8c38dffdd177244df948cb7e19357" translate="yes" xml:space="preserve">
          <source>To define an accessor, create a &lt;code&gt;getFooAttribute&lt;/code&gt; method on your model where &lt;code&gt;Foo&lt;/code&gt; is the &quot;studly&quot; cased name of the column you wish to access. In this example, we'll define an accessor for the &lt;code&gt;first_name&lt;/code&gt; attribute. The accessor will automatically be called by Eloquent when attempting to retrieve the value of the &lt;code&gt;first_name&lt;/code&gt; attribute:</source>
          <target state="translated">アクセサを定義するには、作成 &lt;code&gt;getFooAttribute&lt;/code&gt; のモデルにメソッド &lt;code&gt;Foo&lt;/code&gt; アクセスしたい列の「studly」同棲名前です。この例では、 &lt;code&gt;first_name&lt;/code&gt; 属性のアクセサーを定義します。アクセサーは、 &lt;code&gt;first_name&lt;/code&gt; 属性の値を取得しようとするときにEloquentによって自動的に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="55b13a3b12edfe3fea0d0ff9a74cffab4b073ac3" translate="yes" xml:space="preserve">
          <source>To define the inverse of a many-to-many relationship, you place another call to &lt;code&gt;belongsToMany&lt;/code&gt; on your related model. To continue our user roles example, let's define the &lt;code&gt;users&lt;/code&gt; method on the &lt;code&gt;Role&lt;/code&gt; model:</source>
          <target state="translated">多対多の関係の逆を定義するには、関連するモデルに &lt;code&gt;belongsToMany&lt;/code&gt; をもう一度呼び出します。ユーザーロールの例を続けるために、 &lt;code&gt;Role&lt;/code&gt; モデルで &lt;code&gt;users&lt;/code&gt; メソッドを定義しましょう。</target>
        </trans-unit>
        <trans-unit id="b3879940e7d2392ed0079f614270582b3f48eddc" translate="yes" xml:space="preserve">
          <source>To delete a model, call the &lt;code&gt;delete&lt;/code&gt; method on a model instance:</source>
          <target state="translated">モデルを削除するには、モデルインスタンスで &lt;code&gt;delete&lt;/code&gt; メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="640a752181c4d8662649dc869f1b8fb2f9f5e74c" translate="yes" xml:space="preserve">
          <source>To delete all of your failed jobs, you may use the &lt;code&gt;queue:flush&lt;/code&gt; command:</source>
          <target state="translated">失敗したジョブをすべて削除するには、 &lt;code&gt;queue:flush&lt;/code&gt; コマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="8aa87cca3d9517a523f1914db6abeb5137f95017" translate="yes" xml:space="preserve">
          <source>To destroy the machine, you may use the &lt;code&gt;vagrant destroy --force&lt;/code&gt; command.</source>
          <target state="translated">マシンを破壊するには、 &lt;code&gt;vagrant destroy --force&lt;/code&gt; コマンドを使用できます。</target>
        </trans-unit>
        <trans-unit id="80ca6568023ea2fbb83d7cf030058a8213b8212d" translate="yes" xml:space="preserve">
          <source>To determine if a given model instance has been soft deleted, use the &lt;code&gt;trashed&lt;/code&gt; method:</source>
          <target state="translated">特定のモデルインスタンスがソフト削除されているかどうかを確認するには、 &lt;code&gt;trashed&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="a484dd5d5f72a97ea2036062f66a53c27e95dec9" translate="yes" xml:space="preserve">
          <source>To determine if an item is present in the session, even if its value is &lt;code&gt;null&lt;/code&gt;, you may use the &lt;code&gt;exists&lt;/code&gt; method. The &lt;code&gt;exists&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt; if the item is present:</source>
          <target state="translated">アイテムがセッションに存在するかどうかを確認するには、その値が &lt;code&gt;null&lt;/code&gt; であっても、 &lt;code&gt;exists&lt;/code&gt; メソッドを使用できます。 &lt;code&gt;exists&lt;/code&gt; 方法を返す &lt;code&gt;true&lt;/code&gt; アイテムが存在する場合。</target>
        </trans-unit>
        <trans-unit id="c7d78952af8eb61da2a9365dce7d44c15d9ff846" translate="yes" xml:space="preserve">
          <source>To determine if an item is present in the session, you may use the &lt;code&gt;has&lt;/code&gt; method. The &lt;code&gt;has&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt; if the item is present and is not &lt;code&gt;null&lt;/code&gt;:</source>
          <target state="translated">アイテムがセッションに存在するかどうかを確認するには、 &lt;code&gt;has&lt;/code&gt; メソッドを使用できます。 &lt;code&gt;has&lt;/code&gt; メソッドの戻りを &lt;code&gt;true&lt;/code&gt; 項目が存在しない場合 &lt;code&gt;null&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="d4d1fbe92117c822265748960ce0e0f1a34bc239" translate="yes" xml:space="preserve">
          <source>To determine if the user is already logged into your application, you may use the &lt;code&gt;check&lt;/code&gt; method on the &lt;code&gt;Auth&lt;/code&gt; facade, which will return &lt;code&gt;true&lt;/code&gt; if the user is authenticated:</source>
          <target state="translated">ユーザーがすでにアプリケーションにログインしている &lt;code&gt;check&lt;/code&gt; するには、 &lt;code&gt;Auth&lt;/code&gt; ファサードのcheckメソッドを使用できます。これは、ユーザーが認証された場合に &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="05203652b90dcb31ffddd95179b907c4fca692bf" translate="yes" xml:space="preserve">
          <source>To determine if the user was once an active subscriber, but has cancelled their subscription, you may use the &lt;code&gt;cancelled&lt;/code&gt; method:</source>
          <target state="translated">ユーザーがアクティブなサブスクライバーであったが、サブスクリプションをキャンセルしたかどうかを確認するには、 &lt;code&gt;cancelled&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="b964d5d3297017551f58fc75b21be06bd06383a4" translate="yes" xml:space="preserve">
          <source>To determine the MIME type of the uploaded file, the file's contents will be read and the framework will attempt to guess the MIME type, which may be different from the client provided MIME type.</source>
          <target state="translated">アップロードされたファイルの MIME タイプを決定するために、ファイルの内容が読み込まれ、フレームワークはクライアントが提供する MIME タイプとは異なる MIME タイプを推測しようとします。</target>
        </trans-unit>
        <trans-unit id="a0c90cbe3bd8849e26c68a6f8ab971ff2e0e5257" translate="yes" xml:space="preserve">
          <source>To disable maintenance mode, use the &lt;code&gt;up&lt;/code&gt; command:</source>
          <target state="translated">メンテナンスモードを無効にするには、 &lt;code&gt;up&lt;/code&gt; コマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="eb50348ad8ea04e9c8739d6497ab1cb0fee8e4c4" translate="yes" xml:space="preserve">
          <source>To dispatch an event, you may pass an instance of the event to the &lt;code&gt;event&lt;/code&gt; helper. The helper will dispatch the event to all of its registered listeners. Since the &lt;code&gt;event&lt;/code&gt; helper is globally available, you may call it from anywhere in your application:</source>
          <target state="translated">イベントをディスパッチするには、イベントのインスタンスを &lt;code&gt;event&lt;/code&gt; ヘルパーに渡します。ヘルパーは、登録されているすべてのリスナーにイベントをディスパッチします。 &lt;code&gt;event&lt;/code&gt; ヘルパーはグローバルに利用できるため、アプリケーションのどこからでも呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="e76ad782b950b60e8101b5663a9681ba6cf011d4" translate="yes" xml:space="preserve">
          <source>To display an error message, use the &lt;code&gt;error&lt;/code&gt; method. Error message text is typically displayed in red:</source>
          <target state="translated">エラーメッセージを表示するには、 &lt;code&gt;error&lt;/code&gt; メソッドを使用します。エラーメッセージのテキストは通常​​、赤で表示されます。</target>
        </trans-unit>
        <trans-unit id="16c4eaae1cfd816050fa069d3a7dc64bd54ff8a3" translate="yes" xml:space="preserve">
          <source>To drop a column, use the &lt;code&gt;dropColumn&lt;/code&gt; method on the Schema builder. Before dropping columns from a SQLite database, you will need to add the &lt;code&gt;doctrine/dbal&lt;/code&gt; dependency to your &lt;code&gt;composer.json&lt;/code&gt; file and run the &lt;code&gt;composer update&lt;/code&gt; command in your terminal to install the library:</source>
          <target state="translated">列をドロップするには、スキーマビルダーで &lt;code&gt;dropColumn&lt;/code&gt; メソッドを使用します。SQLiteデータベースから列を削除する前に、 &lt;code&gt;doctrine/dbal&lt;/code&gt; 依存関係を &lt;code&gt;composer.json&lt;/code&gt; ファイルに追加し、ターミナルで &lt;code&gt;composer update&lt;/code&gt; コマンドを実行してライブラリをインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="62c143139b5bc24433b9f742f4cc48b3b3be35ba" translate="yes" xml:space="preserve">
          <source>To drop a foreign key, you may use the &lt;code&gt;dropForeign&lt;/code&gt; method. Foreign key constraints use the same naming convention as indexes. So, we will concatenate the table name and the columns in the constraint then suffix the name with &quot;_foreign&quot;:</source>
          <target state="translated">外部キーを削除するには、 &lt;code&gt;dropForeign&lt;/code&gt; メソッドを使用できます。外部キー制約は、インデックスと同じ命名規則を使用します。したがって、テーブル名と制約内の列を連結してから、名前の末尾に「_foreign」を付けます。</target>
        </trans-unit>
        <trans-unit id="ecd1bb2b51ccb4eb92f9dd03fbcf7628b504e896" translate="yes" xml:space="preserve">
          <source>To drop an existing table, you may use the &lt;code&gt;drop&lt;/code&gt; or &lt;code&gt;dropIfExists&lt;/code&gt; methods:</source>
          <target state="translated">既存のテーブルを削除するには、 &lt;code&gt;drop&lt;/code&gt; または &lt;code&gt;dropIfExists&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="3b0c41426bb5ac1987bd00fef84247b9de8f3179" translate="yes" xml:space="preserve">
          <source>To drop an index, you must specify the index's name. By default, Laravel automatically assigns a reasonable name to the indexes. Concatenate the table name, the name of the indexed column, and the index type. Here are some examples:</source>
          <target state="translated">インデックスをドロップするには、インデックスの名前を指定する必要があります。デフォルトでは、Laravelは自動的に適切な名前をインデックスに割り当てます。テーブル名、インデックスされている列の名前、インデックスの種類を連結します。以下にいくつかの例を示します。</target>
        </trans-unit>
        <trans-unit id="7648a4da11a3205cf5f7cc755060a72d6269bb5d" translate="yes" xml:space="preserve">
          <source>To eager load nested relationships, you may use &quot;dot&quot; syntax. For example, let's eager load all of the book's authors and all of the author's personal contacts in one Eloquent statement:</source>
          <target state="translated">入れ子になった関係を熱心に読み込むには、&quot;ドット &quot;構文を使用することができます。例えば、本の著者と著者の個人的な連絡先のすべてを1つのEloquent文で熱心にロードしてみましょう。</target>
        </trans-unit>
        <trans-unit id="68200e67247da28b6a333a25c1201d31f4b3c77a" translate="yes" xml:space="preserve">
          <source>To enable &lt;a href=&quot;https://www.vagrantup.com/docs/networking/public_network.html&quot;&gt;DHCP&lt;/a&gt;, just remove the &lt;code&gt;ip&lt;/code&gt; option from your configuration:</source>
          <target state="translated">有効にするには&lt;a href=&quot;https://www.vagrantup.com/docs/networking/public_network.html&quot;&gt;DHCPを&lt;/a&gt;、単に削除 &lt;code&gt;ip&lt;/code&gt; 設定からオプションを：</target>
        </trans-unit>
        <trans-unit id="3ca1ec99a3d3c64894270306c9432b3044815718" translate="yes" xml:space="preserve">
          <source>To enable &lt;a href=&quot;https://www.vagrantup.com/docs/synced-folders/nfs.html&quot;&gt;NFS&lt;/a&gt;, you only need to add a simple flag to your synced folder configuration:</source>
          <target state="translated">&lt;a href=&quot;https://www.vagrantup.com/docs/synced-folders/nfs.html&quot;&gt;NFS&lt;/a&gt;を有効にするには、同期フォルダー構成に単純なフラグを追加するだけです。</target>
        </trans-unit>
        <trans-unit id="b9e7ab967470b89bb4d66771ecab394d3975b8cd" translate="yes" xml:space="preserve">
          <source>To enable a &lt;a href=&quot;https://www.vagrantup.com/docs/networking/public_network.html&quot;&gt;bridged&lt;/a&gt; interface, configure a &lt;code&gt;bridge&lt;/code&gt; setting and change the network type to &lt;code&gt;public_network&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://www.vagrantup.com/docs/networking/public_network.html&quot;&gt;ブリッジ&lt;/a&gt;インターフェイスを有効にするには、 &lt;code&gt;bridge&lt;/code&gt; 設定を構成し、ネットワークタイプを &lt;code&gt;public_network&lt;/code&gt; に変更します。</target>
        </trans-unit>
        <trans-unit id="5e1daa9ded7298f8e7ef8a4ee4e35f9120d3894c" translate="yes" xml:space="preserve">
          <source>To enable caching for a given disk, you may add a &lt;code&gt;cache&lt;/code&gt; directive to the disk's configuration options. The &lt;code&gt;cache&lt;/code&gt; option should be an array of caching options containing the &lt;code&gt;disk&lt;/code&gt; name, the &lt;code&gt;expire&lt;/code&gt; time in seconds, and the cache &lt;code&gt;prefix&lt;/code&gt;:</source>
          <target state="translated">特定のディスクのキャッシュを有効にするには、ディスクの構成オプションに &lt;code&gt;cache&lt;/code&gt; ディレクティブを追加します。 &lt;code&gt;cache&lt;/code&gt; オプションが含まキャッシュオプションの配列でなければなりません &lt;code&gt;disk&lt;/code&gt; 名を、 &lt;code&gt;expire&lt;/code&gt; 時間を秒単位で、キャッシュ &lt;code&gt;prefix&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="17888f61404ccc06db6999aaba544db89e287285" translate="yes" xml:space="preserve">
          <source>To enable maintenance mode, execute the &lt;code&gt;down&lt;/code&gt; Artisan command:</source>
          <target state="translated">メンテナンスモードを有効にするには、 &lt;code&gt;down&lt;/code&gt; Artisanコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="bb23dfcf84012efe9e2d8eada854b760c00c5c5b" translate="yes" xml:space="preserve">
          <source>To encourage active collaboration, Laravel strongly encourages pull requests, not just bug reports. &quot;Bug reports&quot; may also be sent in the form of a pull request containing a failing test.</source>
          <target state="translated">積極的なコラボレーションを促進するために、Laravelではバグレポートだけでなくプルリクエストを強く推奨しています。&quot;バグレポート &quot;は、失敗したテストを含むプルリクエストの形で送られることもあります。</target>
        </trans-unit>
        <trans-unit id="9d7920019f41c00505bcf84078f4cc19f972dfe6" translate="yes" xml:space="preserve">
          <source>To execute an &lt;code&gt;insert&lt;/code&gt; statement, you may use the &lt;code&gt;insert&lt;/code&gt; method on the &lt;code&gt;DB&lt;/code&gt; facade. Like &lt;code&gt;select&lt;/code&gt;, this method takes the raw SQL query as its first argument and bindings as its second argument:</source>
          <target state="translated">&lt;code&gt;insert&lt;/code&gt; ステートメントを実行するには、 &lt;code&gt;DB&lt;/code&gt; ファサードで &lt;code&gt;insert&lt;/code&gt; メソッドを使用できます。 &lt;code&gt;select&lt;/code&gt; と同様に、このメソッドは生のSQLクエリを最初の引数として受け取り、バインディングを2番目の引数として受け取ります。</target>
        </trans-unit>
        <trans-unit id="1615e51d6f1d51a93f2c2e64de563e9dccb845e1" translate="yes" xml:space="preserve">
          <source>To execute code on every cache operation, you may listen for the &lt;a href=&quot;events&quot;&gt;events&lt;/a&gt; fired by the cache. Typically, you should place these event listeners within your &lt;code&gt;EventServiceProvider&lt;/code&gt;:</source>
          <target state="translated">すべてのキャッシュ操作でコードを実行するには、キャッシュによって&lt;a href=&quot;events&quot;&gt;発生&lt;/a&gt;したイベントをリッスンします。通常、これらのイベントリスナーは &lt;code&gt;EventServiceProvider&lt;/code&gt; 内に配置する必要があります。</target>
        </trans-unit>
        <trans-unit id="80acd04bf9f8b9010bd15f7fd8fe94dbbe47d1d9" translate="yes" xml:space="preserve">
          <source>To force Dusk to use its own environment file when running tests, create a &lt;code&gt;.env.dusk.{environment}&lt;/code&gt; file in the root of your project. For example, if you will be initiating the &lt;code&gt;dusk&lt;/code&gt; command from your &lt;code&gt;local&lt;/code&gt; environment, you should create a &lt;code&gt;.env.dusk.local&lt;/code&gt; file.</source>
          <target state="translated">Duskがテストの実行時に独自の環境ファイルを使用するように強制するには、プロジェクトのルートに &lt;code&gt;.env.dusk.{environment}&lt;/code&gt; ファイルを作成します。たとえば、 &lt;code&gt;local&lt;/code&gt; 環境から &lt;code&gt;dusk&lt;/code&gt; コマンドを開始する場合は、 &lt;code&gt;.env.dusk.local&lt;/code&gt; ファイルを作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="c25061f0ae2b45bc330626ad6733fee1d425f151" translate="yes" xml:space="preserve">
          <source>To generate a Dusk test, use the &lt;code&gt;dusk:make&lt;/code&gt; Artisan command. The generated test will be placed in the &lt;code&gt;tests/Browser&lt;/code&gt; directory:</source>
          <target state="translated">Duskテストを生成するには、 &lt;code&gt;dusk:make&lt;/code&gt; Artisanコマンドを使用します。生成された &lt;code&gt;tests/Browser&lt;/code&gt; は、tests / Browserディレクトリに配置されます。</target>
        </trans-unit>
        <trans-unit id="092d809168c1f4a00d68b7ef8703a826bb6289a0" translate="yes" xml:space="preserve">
          <source>To generate a URL to this route, you may use the &lt;code&gt;route&lt;/code&gt; helper like so:</source>
          <target state="translated">このルートへのURLを生成するには、次のように &lt;code&gt;route&lt;/code&gt; ヘルパーを使用できます。</target>
        </trans-unit>
        <trans-unit id="13cb6400553114e750389676b28e1e7ca2c01cb9" translate="yes" xml:space="preserve">
          <source>To generate a component, use the &lt;code&gt;dusk:component&lt;/code&gt; Artisan command. New components are placed in the &lt;code&gt;test/Browser/Components&lt;/code&gt; directory:</source>
          <target state="translated">コンポーネントを生成するには、 &lt;code&gt;dusk:component&lt;/code&gt; Artisanコマンドを使用します。新しいコンポーネントは &lt;code&gt;test/Browser/Components&lt;/code&gt; ディレクトリに配置されます。</target>
        </trans-unit>
        <trans-unit id="452c8d10570f0b622337b98b84370622da84b07d" translate="yes" xml:space="preserve">
          <source>To generate a mailable with a corresponding Markdown template, you may use the &lt;code&gt;--markdown&lt;/code&gt; option of the &lt;code&gt;make:mail&lt;/code&gt; Artisan command:</source>
          <target state="translated">対応するMarkdownテンプレートを使用して &lt;code&gt;--markdown&lt;/code&gt; 可能オブジェクトを生成するには、 &lt;code&gt;make:mail&lt;/code&gt; Artisanコマンドの--markdownオプションを使用できます。</target>
        </trans-unit>
        <trans-unit id="34a98adeb579a10208e80c5246da9559f0ef6b3e" translate="yes" xml:space="preserve">
          <source>To generate a notification with a corresponding Markdown template, you may use the &lt;code&gt;--markdown&lt;/code&gt; option of the &lt;code&gt;make:notification&lt;/code&gt; Artisan command:</source>
          <target state="translated">対応するMarkdownテンプレートを使用して通知を生成するには、 &lt;code&gt;make:notification&lt;/code&gt; Artisanコマンドの &lt;code&gt;--markdown&lt;/code&gt; オプションを使用できます。</target>
        </trans-unit>
        <trans-unit id="429591bde77bf79a891645e842682c78259b0316" translate="yes" xml:space="preserve">
          <source>To generate a page object, use the &lt;code&gt;dusk:page&lt;/code&gt; Artisan command. All page objects will be placed in the &lt;code&gt;tests/Browser/Pages&lt;/code&gt; directory:</source>
          <target state="translated">ページオブジェクトを生成するには、 &lt;code&gt;dusk:page&lt;/code&gt; Artisanコマンドを使用します。すべてのページオブジェクトは、 &lt;code&gt;tests/Browser/Pages&lt;/code&gt; ディレクトリに配置されます。</target>
        </trans-unit>
        <trans-unit id="bccfdfb4fe344f863bf8aa13fb33cbaeb4136ccd" translate="yes" xml:space="preserve">
          <source>To generate a resource class, you may use the &lt;code&gt;make:resource&lt;/code&gt; Artisan command. By default, resources will be placed in the &lt;code&gt;app/Http/Resources&lt;/code&gt; directory of your application. Resources extend the &lt;code&gt;Illuminate\Http\Resources\Json\JsonResource&lt;/code&gt; class:</source>
          <target state="translated">リソースクラスを生成するには、 &lt;code&gt;make:resource&lt;/code&gt; Artisanコマンドを使用できます。デフォルトでは、リソースは &lt;code&gt;app/Http/Resources&lt;/code&gt; ディレクトリに配置されます。リソースは &lt;code&gt;Illuminate\Http\Resources\Json\JsonResource&lt;/code&gt; クラスを拡張します。</target>
        </trans-unit>
        <trans-unit id="d9b2df8b2395a903bf2ec9612844cb7857c9c9f3" translate="yes" xml:space="preserve">
          <source>To generate a seeder, execute the &lt;code&gt;make:seeder&lt;/code&gt;&lt;a href=&quot;artisan&quot;&gt;Artisan command&lt;/a&gt;. All seeders generated by the framework will be placed in the &lt;code&gt;database/seeds&lt;/code&gt; directory:</source>
          <target state="translated">シーダーを生成するには、 &lt;code&gt;make:seeder&lt;/code&gt; &lt;a href=&quot;artisan&quot;&gt;Artisanコマンドを&lt;/a&gt;実行します。フレームワークによって生成されたすべてのシーダーは、 &lt;code&gt;database/seeds&lt;/code&gt; ディレクトリに配置されます。</target>
        </trans-unit>
        <trans-unit id="6942811e41a653d165d71494ef1dd4ba5657e149" translate="yes" xml:space="preserve">
          <source>To get a better understanding of the &lt;code&gt;validate&lt;/code&gt; method, let's jump back into the &lt;code&gt;store&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;validate&lt;/code&gt; メソッドの理解を深めるために、 &lt;code&gt;store&lt;/code&gt; メソッドに戻りましょう。</target>
        </trans-unit>
        <trans-unit id="5a6de9ae7cd647f820978dffecb864f2890b54a0" translate="yes" xml:space="preserve">
          <source>To get started with Socialite, use Composer to add the package to your project's dependencies:</source>
          <target state="translated">Socialite を使い始めるには、 Composer を使用して、プロジェクトの依存関係にパッケージを追加します。</target>
        </trans-unit>
        <trans-unit id="50ff081e326cb293f0e1b51b255bb5d006a1a060" translate="yes" xml:space="preserve">
          <source>To get started, call the &lt;code&gt;Auth::viaRequest&lt;/code&gt; method within the &lt;code&gt;boot&lt;/code&gt; method of your &lt;code&gt;AuthServiceProvider&lt;/code&gt;. The &lt;code&gt;viaRequest&lt;/code&gt; method accepts a guard name as its first argument. This name can be any string that describes your custom guard. The second argument passed to the method should be a Closure that receives the incoming HTTP request and returns a user instance or, if authentication fails, &lt;code&gt;null&lt;/code&gt;:</source>
          <target state="translated">開始するには、呼び出し &lt;code&gt;Auth::viaRequest&lt;/code&gt; 中にメソッドを &lt;code&gt;boot&lt;/code&gt; あなたの方法 &lt;code&gt;AuthServiceProvider&lt;/code&gt; 。 &lt;code&gt;viaRequest&lt;/code&gt; の方法は、最初の引数として、ガード名を受け入れます。この名前には、カスタムガードを説明する任意の文字列を使用できます。メソッドに渡される2番目の引数は、着信HTTPリクエストを受信して​​ユーザーインスタンスを返す、または認証が失敗した場合は &lt;code&gt;null&lt;/code&gt; であるクロージャーである必要があります。</target>
        </trans-unit>
        <trans-unit id="272cdafb972d36cbc538bc182cc95009c88307df" translate="yes" xml:space="preserve">
          <source>To get started, define a &lt;code&gt;$dispatchesEvents&lt;/code&gt; property on your Eloquent model that maps various points of the Eloquent model's lifecycle to your own &lt;a href=&quot;events&quot;&gt;event classes&lt;/a&gt;:</source>
          <target state="translated">開始するには、Eloquentモデルのライフサイクルのさまざまなポイントを独自の&lt;a href=&quot;events&quot;&gt;イベントクラスに&lt;/a&gt;マップする &lt;code&gt;$dispatchesEvents&lt;/code&gt; プロパティをEloquentモデルに定義します。</target>
        </trans-unit>
        <trans-unit id="2ffe243da1e0a49bf8d06d82ec7edbd4894bf96f" translate="yes" xml:space="preserve">
          <source>To get started, define a &lt;code&gt;tap&lt;/code&gt; array on the channel's configuration. The &lt;code&gt;tap&lt;/code&gt; array should contain a list of classes that should have an opportunity to customize (or &quot;tap&quot; into) the Monolog instance after it is created:</source>
          <target state="translated">はじめに、チャネルの構成で &lt;code&gt;tap&lt;/code&gt; 配列を定義します。 &lt;code&gt;tap&lt;/code&gt; 配列は、それが作成された後モノローグインスタンス（へ、または「タップ」）をカスタマイズする機会を持つべきであるクラスのリストが含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="685f06bcf06ac345e7c42f5b5a23436202a57d40" translate="yes" xml:space="preserve">
          <source>To get started, install Passport via the Composer package manager:</source>
          <target state="translated">開始するには、Composer パッケージマネージャーから Passport をインストールします。</target>
        </trans-unit>
        <trans-unit id="270a3d727636f144351377351bd90bad8b861411" translate="yes" xml:space="preserve">
          <source>To get started, let's create an Eloquent model. Models typically live in the &lt;code&gt;app&lt;/code&gt; directory, but you are free to place them anywhere that can be auto-loaded according to your &lt;code&gt;composer.json&lt;/code&gt; file. All Eloquent models extend &lt;code&gt;Illuminate\Database\Eloquent\Model&lt;/code&gt; class.</source>
          <target state="translated">まず、Eloquentモデルを作成しましょう。モデルは通常 &lt;code&gt;app&lt;/code&gt; ディレクトリにありますが、 &lt;code&gt;composer.json&lt;/code&gt; ファイルに従って自動ロードできる場所ならどこにでも自由に配置できます。すべてのEloquentモデルは、 &lt;code&gt;Illuminate\Database\Eloquent\Model&lt;/code&gt; クラスを拡張します。</target>
        </trans-unit>
        <trans-unit id="c430b941b76735c598394d0ed6c5b9496335e97d" translate="yes" xml:space="preserve">
          <source>To get started, let's write a test that verifies we can log into our application. After generating a test, we can modify it to navigate to the login page, enter some credentials, and click the &quot;Login&quot; button. To create a browser instance, call the &lt;code&gt;browse&lt;/code&gt; method:</source>
          <target state="translated">はじめに、アプリケーションにログインできることを確認するテストを作成しましょう。テストを生成した後、ログインページに移動して資格情報を入力し、[ログイン]ボタンをクリックするようにテストを変更できます。ブラウザインスタンスを作成するには、 &lt;code&gt;browse&lt;/code&gt; メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="5378dfa2aad04e9a3c0de61652a64d04eb153296" translate="yes" xml:space="preserve">
          <source>To get started, open your &lt;code&gt;tests/DuskTestCase.php&lt;/code&gt; file, which is the base Dusk test case for your application. Within this file, you can remove the call to the &lt;code&gt;startChromeDriver&lt;/code&gt; method. This will stop Dusk from automatically starting the ChromeDriver:</source>
          <target state="translated">はじめに、 &lt;code&gt;tests/DuskTestCase.php&lt;/code&gt; ファイルを開きます。これは、アプリケーションのベースDuskテストケースです。このファイル内で、 &lt;code&gt;startChromeDriver&lt;/code&gt; メソッドの呼び出しを削除できます。これにより、DuskはChromeDriverを自動的に起動しなくなります。</target>
        </trans-unit>
        <trans-unit id="1aae117fc636492e242f74e761e598a233989ec3" translate="yes" xml:space="preserve">
          <source>To get started, verify that your &lt;code&gt;App\User&lt;/code&gt; model implements the &lt;code&gt;Illuminate\Contracts\Auth\CanResetPassword&lt;/code&gt; contract. Of course, the &lt;code&gt;App\User&lt;/code&gt; model included with the framework already implements this interface, and uses the &lt;code&gt;Illuminate\Auth\Passwords\CanResetPassword&lt;/code&gt; trait to include the methods needed to implement the interface.</source>
          <target state="translated">開始するには、 &lt;code&gt;App\User&lt;/code&gt; モデルが &lt;code&gt;Illuminate\Contracts\Auth\CanResetPassword&lt;/code&gt; 実装していることを確認してください。もちろん、フレームワークに含まれている &lt;code&gt;App\User&lt;/code&gt; モデルはすでにこのインターフェイスを実装しており、 &lt;code&gt;Illuminate\Auth\Passwords\CanResetPassword&lt;/code&gt; トレイトを使用して、インターフェイスの実装に必要なメソッドを含めています。</target>
        </trans-unit>
        <trans-unit id="c92f9465707f57511e9f939e082ad681aec17c8a" translate="yes" xml:space="preserve">
          <source>To get started, verify that your &lt;code&gt;App\User&lt;/code&gt; model implements the &lt;code&gt;Illuminate\Contracts\Auth\MustVerifyEmail&lt;/code&gt; contract:</source>
          <target state="translated">開始するには、 &lt;code&gt;App\User&lt;/code&gt; モデルが &lt;code&gt;Illuminate\Contracts\Auth\MustVerifyEmail&lt;/code&gt; 実装していることを確認します。</target>
        </trans-unit>
        <trans-unit id="8c14f3657e19be9e1fc064be8988f32821dc65de" translate="yes" xml:space="preserve">
          <source>To get started, you should add the &lt;code&gt;laravel/dusk&lt;/code&gt; Composer dependency to your project:</source>
          <target state="translated">開始するには、 &lt;code&gt;laravel/dusk&lt;/code&gt; Composer依存関係をプロジェクトに追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="a2b02071162da4e35b6fdedcaa2b56bc006f6158" translate="yes" xml:space="preserve">
          <source>To give your application a speed boost, you should cache all of your configuration files into a single file using the &lt;code&gt;config:cache&lt;/code&gt; Artisan command. This will combine all of the configuration options for your application into a single file which will be loaded quickly by the framework.</source>
          <target state="translated">アプリケーションの速度を向上させるには、 &lt;code&gt;config:cache&lt;/code&gt; Artisanコマンドを使用して、すべての構成ファイルを1つのファイルにキャッシュする必要があります。これにより、アプリケーションのすべての構成オプションが1つのファイルに結合され、フレームワークによってすばやくロードされます。</target>
        </trans-unit>
        <trans-unit id="543c1c3914baae9abc2579b86041852f19d145d5" translate="yes" xml:space="preserve">
          <source>To help you learn more about what's happening within your application, Laravel provides robust logging services that allow you to log messages to files, the system error log, and even to Slack to notify your entire team.</source>
          <target state="translated">アプリケーション内で何が起こっているかをより詳しく知るために、Laravelは堅牢なロギングサービスを提供しており、メッセージをファイルやシステムのエラーログに記録したり、チーム全体に通知するためにSlackにまでメッセージを記録することができます。</target>
        </trans-unit>
        <trans-unit id="13bff7c8def6a38cc2ffabc55e389b8bca742e78" translate="yes" xml:space="preserve">
          <source>To include the first view that exists from a given array of views, you may use the &lt;code&gt;includeFirst&lt;/code&gt; directive:</source>
          <target state="translated">特定のビューの配列から存在する最初のビューを含めるには、 &lt;code&gt;includeFirst&lt;/code&gt; ディレクティブを使用できます。</target>
        </trans-unit>
        <trans-unit id="2e3bc5cd8f098f799a7d24fdeccec1ff055a95e0" translate="yes" xml:space="preserve">
          <source>To indicate that the task should run on only one server, use the &lt;code&gt;onOneServer&lt;/code&gt; method when defining the scheduled task. The first server to obtain the task will secure an atomic lock on the job to prevent other servers from running the same task at the same time:</source>
          <target state="translated">タスクを1つのサーバーでのみ実行する必要があることを示すには、スケジュールされたタスクを定義するときに &lt;code&gt;onOneServer&lt;/code&gt; メソッドを使用します。タスクを取得する最初のサーバーは、他のサーバーが同じタスクを同時に実行しないように、ジョブのアトミックロックを保護します。</target>
        </trans-unit>
        <trans-unit id="1cf3ee9fd8f52403ed09690a3207e42b229d8822" translate="yes" xml:space="preserve">
          <source>To inform Laravel that a given event should be broadcast, implement the &lt;code&gt;Illuminate\Contracts\Broadcasting\ShouldBroadcast&lt;/code&gt; interface on the event class. This interface is already imported into all event classes generated by the framework so you may easily add it to any of your events.</source>
          <target state="translated">特定のイベントをブロードキャストする必要があることをLaravelに通知するには、イベントクラスに &lt;code&gt;Illuminate\Contracts\Broadcasting\ShouldBroadcast&lt;/code&gt; インターフェイスを実装します。このインターフェイスは、フレームワークによって生成されたすべてのイベントクラスにすでにインポートされているため、任意のイベントに簡単に追加できます。</target>
        </trans-unit>
        <trans-unit id="2052c488c890f65e0e479e9ffc60b190e98f15c1" translate="yes" xml:space="preserve">
          <source>To install Elasticsearch, add the &lt;code&gt;elasticsearch&lt;/code&gt; option to your &lt;code&gt;Homestead.yaml&lt;/code&gt; file and specify a supported version, which may be a major version or an exact version number (major.minor.patch). The default installation will create a cluster named 'homestead'. You should never give Elasticsearch more than half of the operating system's memory, so make sure your Homestead machine has at least twice the Elasticsearch allocation:</source>
          <target state="translated">Elasticsearchをインストールするには、追加 &lt;code&gt;elasticsearch&lt;/code&gt; のあなたにオプションを &lt;code&gt;Homestead.yaml&lt;/code&gt; のファイルとメジャーバージョンまたは正確なバージョン番号（major.minor.patch）とすることができるサポートされているバージョンを指定します。デフォルトのインストールでは、「homestead」という名前のクラスターが作成されます。Elasticsearchにオペレーティングシステムのメモリの半分以上を割り当てないでください。そのため、Homesteadマシンに少なくとも2倍のElasticsearch割り当てがあることを確認してください。</target>
        </trans-unit>
        <trans-unit id="b988d4840316c5d966e5c189df68a0adde5b26f5" translate="yes" xml:space="preserve">
          <source>To install Homestead directly into your project, require it using Composer:</source>
          <target state="translated">Homestead をプロジェクトに直接インストールするには、Composer を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="e5572ad7908b4b0cc0eddfa5d382712b52133237" translate="yes" xml:space="preserve">
          <source>To install MongoDB Community Edition, update your &lt;code&gt;Homestead.yaml&lt;/code&gt; file with the following configuration option:</source>
          <target state="translated">MongoDB Community Editionをインストールするには、 &lt;code&gt;Homestead.yaml&lt;/code&gt; ファイルを次の構成オプションで更新します。</target>
        </trans-unit>
        <trans-unit id="0e293c50b18b2626e75c344eed36e197aeade7d8" translate="yes" xml:space="preserve">
          <source>To instruct the validator to ignore the user's ID, we'll use the &lt;code&gt;Rule&lt;/code&gt; class to fluently define the rule. In this example, we'll also specify the validation rules as an array instead of using the &lt;code&gt;|&lt;/code&gt; character to delimit the rules:</source>
          <target state="translated">バリデーターにユーザーのIDを無視するように指示するには、 &lt;code&gt;Rule&lt;/code&gt; クラスを使用してルールを流暢に定義します。この例では、 &lt;code&gt;|&lt;/code&gt; を使用する代わりに、検証ルールを配列として指定します。ルールを区切る文字：</target>
        </trans-unit>
        <trans-unit id="0f5b3ba7a06a0003ff749cb0167a671213d82dc3" translate="yes" xml:space="preserve">
          <source>To join a presence channel, you may use Echo's &lt;code&gt;join&lt;/code&gt; method. The &lt;code&gt;join&lt;/code&gt; method will return a &lt;code&gt;PresenceChannel&lt;/code&gt; implementation which, along with exposing the &lt;code&gt;listen&lt;/code&gt; method, allows you to subscribe to the &lt;code&gt;here&lt;/code&gt;, &lt;code&gt;joining&lt;/code&gt;, and &lt;code&gt;leaving&lt;/code&gt; events.</source>
          <target state="translated">プレゼンスチャネルに参加するには、Echoの &lt;code&gt;join&lt;/code&gt; メソッドを使用できます。 &lt;code&gt;join&lt;/code&gt; 方法は戻ります &lt;code&gt;PresenceChannel&lt;/code&gt; を暴露するとともに、実装 &lt;code&gt;listen&lt;/code&gt; 、あなたが購読できるようにする方法を &lt;code&gt;here&lt;/code&gt; 、 &lt;code&gt;joining&lt;/code&gt; 、と &lt;code&gt;leaving&lt;/code&gt; イベントを。</target>
        </trans-unit>
        <trans-unit id="bcc77c77d05fdd7ea30c76cdad2efbd139d55e21" translate="yes" xml:space="preserve">
          <source>To keep the &lt;code&gt;queue:work&lt;/code&gt; process running permanently in the background, you should use a process monitor such as &lt;a href=&quot;#supervisor-configuration&quot;&gt;Supervisor&lt;/a&gt; to ensure that the queue worker does not stop running.</source>
          <target state="translated">&lt;code&gt;queue:work&lt;/code&gt; プロセスをバックグラウンドで永続的に実行し続けるには、&lt;a href=&quot;#supervisor-configuration&quot;&gt;スーパーバイザー&lt;/a&gt;などのプロセスモニターを使用して、キューワーカーが実行を停止しないようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="bfa358575ba19a7dab080df6fb5301f2b3f7c17c" translate="yes" xml:space="preserve">
          <source>To learn about Laravel's powerful validation features, let's look at a complete example of validating a form and displaying the error messages back to the user.</source>
          <target state="translated">Laravelの強力なバリデーション機能について学ぶために、フォームをバリデーションしてエラーメッセージをユーザーに表示する完全な例を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="0cc31a3f61b4daf485409efb9173393c95070265" translate="yes" xml:space="preserve">
          <source>To learn more about Laravel Nova, check out the &lt;a href=&quot;https://nova.laravel.com&quot;&gt;Nova website&lt;/a&gt;.</source>
          <target state="translated">Laravel Novaの詳細については、&lt;a href=&quot;https://nova.laravel.com&quot;&gt;Novaのウェブサイトをご覧ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a7828286d9227e4c39b614e60f2e2cbec9673d82" translate="yes" xml:space="preserve">
          <source>To learn more about email verification, check out the &lt;a href=&quot;verification&quot;&gt;complete documentation&lt;/a&gt;.</source>
          <target state="translated">メールの確認について詳しくは、&lt;a href=&quot;verification&quot;&gt;完全なドキュメント&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="0b70ff9d8212ccd283ce2b36b3901b4586f7d0c5" translate="yes" xml:space="preserve">
          <source>To learn more about the additional fields supported by Stripe or Braintree, check out Stripe's &lt;a href=&quot;https://stripe.com/docs/api#create_customer&quot;&gt;documentation on customer creation&lt;/a&gt; or the corresponding &lt;a href=&quot;https://developers.braintreepayments.com/reference/request/customer/create/php&quot;&gt;Braintree documentation&lt;/a&gt;.</source>
          <target state="translated">StripeまたはBraintreeでサポートされている追加フィールドの詳細については、&lt;a href=&quot;https://stripe.com/docs/api#create_customer&quot;&gt;顧客の作成に関する&lt;/a&gt; Stripeのドキュメントまたは対応する&lt;a href=&quot;https://developers.braintreepayments.com/reference/request/customer/create/php&quot;&gt;Braintreeのドキュメント&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="f76a2ac2a112b3d048b0260774d1cf5713a19536" translate="yes" xml:space="preserve">
          <source>To leave a channel, you may call the &lt;code&gt;leave&lt;/code&gt; method on your Echo instance:</source>
          <target state="translated">チャンネルを離れるには、Echoインスタンスで &lt;code&gt;leave&lt;/code&gt; メソッドを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="c37d53972e07bbb7ec8cd5d8372fe8de80442d7e" translate="yes" xml:space="preserve">
          <source>To limit the number of results returned from the query, or to skip a given number of results in the query, you may use the &lt;code&gt;skip&lt;/code&gt; and &lt;code&gt;take&lt;/code&gt; methods:</source>
          <target state="translated">クエリから返される結果の数を制限したり、クエリで指定された数の結果を &lt;code&gt;skip&lt;/code&gt; たりするには、skipメソッドと &lt;code&gt;take&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="b3286189a5268807974bcf1577d15a0014734d68" translate="yes" xml:space="preserve">
          <source>To listen for client events, you may use the &lt;code&gt;listenForWhisper&lt;/code&gt; method:</source>
          <target state="translated">クライアントイベントをリッスンするには、 &lt;code&gt;listenForWhisper&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="1ceab1d7ff97eaba9ae2f4d7db52057025ddf646" translate="yes" xml:space="preserve">
          <source>To load a relationship only when it has not already been loaded, use the &lt;code&gt;loadMissing&lt;/code&gt; method:</source>
          <target state="translated">まだロードされていない場合にのみ関係をロードするには、 &lt;code&gt;loadMissing&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="5a0bfd48505fcbac7c32453f93682f5b70057cd8" translate="yes" xml:space="preserve">
          <source>To log a user into the application by their ID, you may use the &lt;code&gt;loginUsingId&lt;/code&gt; method. This method accepts the primary key of the user you wish to authenticate:</source>
          <target state="translated">IDでユーザーをアプリケーションにログインするには、 &lt;code&gt;loginUsingId&lt;/code&gt; メソッドを使用できます。このメソッドは、認証するユーザーの主キーを受け入れます。</target>
        </trans-unit>
        <trans-unit id="f1af86d8c7d4145814422e4d86195204d874f142" translate="yes" xml:space="preserve">
          <source>To log users out of your application, you may use the &lt;code&gt;logout&lt;/code&gt; method on the &lt;code&gt;Auth&lt;/code&gt; facade. This will clear the authentication information in the user's session:</source>
          <target state="translated">アプリケーションからユーザーを &lt;code&gt;logout&lt;/code&gt; するには、 &lt;code&gt;Auth&lt;/code&gt; ファサードのlogoutメソッドを使用できます。これにより、ユーザーのセッションの認証情報がクリアされます。</target>
        </trans-unit>
        <trans-unit id="43c753e15897941a6e9096a80d24fe4a0c004d36" translate="yes" xml:space="preserve">
          <source>To make this a cinch, Laravel utilizes the &lt;a href=&quot;https://github.com/vlucas/phpdotenv&quot;&gt;DotEnv&lt;/a&gt; PHP library by Vance Lucas. In a fresh Laravel installation, the root directory of your application will contain a &lt;code&gt;.env.example&lt;/code&gt; file. If you install Laravel via Composer, this file will automatically be renamed to &lt;code&gt;.env&lt;/code&gt;. Otherwise, you should rename the file manually.</source>
          <target state="translated">これを&lt;a href=&quot;https://github.com/vlucas/phpdotenv&quot;&gt;簡単に&lt;/a&gt;するために、LaravelはVance LucasによるDotEnv PHPライブラリを利用します。 Laravelの新規インストールでは、アプリケーションのルートディレクトリに &lt;code&gt;.env.example&lt;/code&gt; ファイルが含まれます。 Composer経由でLaravelをインストールすると、このファイルの名前は自動的に &lt;code&gt;.env&lt;/code&gt; に変更されます。それ以外の場合は、ファイルの名前を手動で変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="6a1c306de784b0403b163c053d8dcee292005093" translate="yes" xml:space="preserve">
          <source>To manually log users out of your application, you may use the &lt;code&gt;logout&lt;/code&gt; method on the &lt;code&gt;Auth&lt;/code&gt; facade. This will clear the authentication information in the user's session:</source>
          <target state="translated">アプリケーションからユーザーを手動で &lt;code&gt;logout&lt;/code&gt; するには、 &lt;code&gt;Auth&lt;/code&gt; ファサードのlogoutメソッドを使用できます。これにより、ユーザーのセッションの認証情報がクリアされます。</target>
        </trans-unit>
        <trans-unit id="b177887edd63645e620c90eb6c58dbdb25dc401e" translate="yes" xml:space="preserve">
          <source>To modify the form fields that are required when a new user registers with your application, or to customize how new users are stored into your database, you may modify the &lt;code&gt;RegisterController&lt;/code&gt; class. This class is responsible for validating and creating new users of your application.</source>
          <target state="translated">新しいユーザーがアプリケーションに登録するときに必要なフォームフィールドを変更したり、新しいユーザーをデータベースに格納する方法をカスタマイズしたりするには、 &lt;code&gt;RegisterController&lt;/code&gt; クラスを変更します。このクラスは、アプリケーションの新しいユーザーの検証と作成を担当します。</target>
        </trans-unit>
        <trans-unit id="5a68ca117926f87761095293b212ce54709c931a" translate="yes" xml:space="preserve">
          <source>To obtain an instance of the current HTTP request via dependency injection, you should type-hint the &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; class on your controller method. The incoming request instance will automatically be injected by the &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;:</source>
          <target state="translated">依存関係注入を介して現在のHTTPリクエストのインスタンスを取得するには、コントローラーメソッドで &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; クラスをタイプヒントする必要があります。受信リクエストインスタンスは、&lt;a href=&quot;container&quot;&gt;サービスコンテナ&lt;/a&gt;によって自動的に挿入されます。</target>
        </trans-unit>
        <trans-unit id="84c24ecb9267dce66aaab63f0506714133e19e32" translate="yes" xml:space="preserve">
          <source>To pad to the left, you should specify a negative size. No padding will take place if the absolute value of the given size is less than or equal to the length of the array:</source>
          <target state="translated">左にパディングするには、負のサイズを指定する必要があります。指定したサイズの絶対値が配列の長さ以下の場合、パディングは行われません。</target>
        </trans-unit>
        <trans-unit id="d9e8b2d12ca581fc9be15172e53119f7c0a2c370" translate="yes" xml:space="preserve">
          <source>To perform a &quot;cross join&quot; use the &lt;code&gt;crossJoin&lt;/code&gt; method with the name of the table you wish to cross join to. Cross joins generate a cartesian product between the first table and the joined table:</source>
          <target state="translated">「クロス結合」を実行するには、クロス結合したいテーブルの名前を指定して &lt;code&gt;crossJoin&lt;/code&gt; メソッドを使用します。クロス結合は、最初のテーブルと結合されたテーブルの間にデカルト積を生成します。</target>
        </trans-unit>
        <trans-unit id="dd2928639fa94e8fdaa5af0de378f61ae57bf42a" translate="yes" xml:space="preserve">
          <source>To populate the default model with attributes, you may pass an array or Closure to the &lt;code&gt;withDefault&lt;/code&gt; method:</source>
          <target state="translated">デフォルトのモデルに属性を設定するには、配列またはクロージャーを &lt;code&gt;withDefault&lt;/code&gt; メソッドに渡します。</target>
        </trans-unit>
        <trans-unit id="e112d842952bb50d6632ab8139a4db3aa9543ddf" translate="yes" xml:space="preserve">
          <source>To prompt newly registered users to verify their email, the &lt;code&gt;User&lt;/code&gt; model should be marked with the &lt;code&gt;MustVerifyEmail&lt;/code&gt; interface:</source>
          <target state="translated">新しく登録したユーザーにメールの確認を促すには、 &lt;code&gt;User&lt;/code&gt; モデルに &lt;code&gt;MustVerifyEmail&lt;/code&gt; インターフェイスを設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="a658cec1777fdaf2a72ee2c0f61899058838b748" translate="yes" xml:space="preserve">
          <source>To provision buckets, add a &lt;code&gt;buckets&lt;/code&gt; directive to your Homestead configuration file:</source>
          <target state="translated">バケットをプロビジョニングするには、Homestead構成ファイルに &lt;code&gt;buckets&lt;/code&gt; ディレクティブを追加します。</target>
        </trans-unit>
        <trans-unit id="ecd3aff0cabb741203c8b37c746b84dd56d22f03" translate="yes" xml:space="preserve">
          <source>To publish the Passport Vue components, use the &lt;code&gt;vendor:publish&lt;/code&gt; Artisan command:</source>
          <target state="translated">Passport Vueコンポーネントを公開するには、 &lt;code&gt;vendor:publish&lt;/code&gt; Artisanコマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="4f625d39c7ae40b9b2ebecc6fd225f97e8e4926a" translate="yes" xml:space="preserve">
          <source>To quickly generate an API resource controller that does not include the &lt;code&gt;create&lt;/code&gt; or &lt;code&gt;edit&lt;/code&gt; methods, use the &lt;code&gt;--api&lt;/code&gt; switch when executing the &lt;code&gt;make:controller&lt;/code&gt; command:</source>
          <target state="translated">&lt;code&gt;create&lt;/code&gt; または &lt;code&gt;edit&lt;/code&gt; メソッドを含まないAPIリソースコントローラーをすばやく生成するには、 &lt;code&gt;make:controller&lt;/code&gt; コマンドを実行するときに &lt;code&gt;--api&lt;/code&gt; スイッチを使用します。</target>
        </trans-unit>
        <trans-unit id="f681e9527d46804e62ce3d973bc602db6addde03" translate="yes" xml:space="preserve">
          <source>To register an explicit binding, use the router's &lt;code&gt;model&lt;/code&gt; method to specify the class for a given parameter. You should define your explicit model bindings in the &lt;code&gt;boot&lt;/code&gt; method of the &lt;code&gt;RouteServiceProvider&lt;/code&gt; class:</source>
          <target state="translated">明示的なバインディングを登録するには、ルーターの &lt;code&gt;model&lt;/code&gt; メソッドを使用して、特定のパラメーターのクラスを指定します。 &lt;code&gt;RouteServiceProvider&lt;/code&gt; クラスの &lt;code&gt;boot&lt;/code&gt; メソッドで明示的なモデルバインディングを定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="63c2f2640fa276e69b0847e383151b11e1e1493e" translate="yes" xml:space="preserve">
          <source>To register an observer, use the &lt;code&gt;observe&lt;/code&gt; method on the model you wish to observe. You may register observers in the &lt;code&gt;boot&lt;/code&gt; method of one of your service providers. In this example, we'll register the observer in the &lt;code&gt;AppServiceProvider&lt;/code&gt;:</source>
          <target state="translated">オブザーバーを登録するには、監視するモデルで &lt;code&gt;observe&lt;/code&gt; メソッドを使用します。サービスプロバイダーの &lt;code&gt;boot&lt;/code&gt; メソッドにオブザーバーを登録できます。この例では、 &lt;code&gt;AppServiceProvider&lt;/code&gt; にオブザーバーを登録します。</target>
        </trans-unit>
        <trans-unit id="1f64294a151b76e0743fad6ffa0391496aa35a36" translate="yes" xml:space="preserve">
          <source>To register the custom cache driver with Laravel, we will use the &lt;code&gt;extend&lt;/code&gt; method on the &lt;code&gt;Cache&lt;/code&gt; facade. The call to &lt;code&gt;Cache::extend&lt;/code&gt; could be done in the &lt;code&gt;boot&lt;/code&gt; method of the default &lt;code&gt;App\Providers\AppServiceProvider&lt;/code&gt; that ships with fresh Laravel applications, or you may create your own service provider to house the extension - just don't forget to register the provider in the &lt;code&gt;config/app.php&lt;/code&gt; provider array:</source>
          <target state="translated">カスタムキャッシュドライバーをLaravelに登録するには、 &lt;code&gt;Cache&lt;/code&gt; ファサードで &lt;code&gt;extend&lt;/code&gt; メソッドを使用します。 &lt;code&gt;Cache::extend&lt;/code&gt; の呼び出しは、新しいLaravelアプリケーションに &lt;code&gt;App\Providers\AppServiceProvider&lt;/code&gt; ているデフォルトのApp \ Providers \ AppServiceProviderの &lt;code&gt;boot&lt;/code&gt; メソッドで実行できます。または、独自のサービスプロバイダーを作成して拡張機能を格納することもできます-登録することを忘れないでくださいで、プロバイダ &lt;code&gt;config/app.php&lt;/code&gt; プロバイダの配列：</target>
        </trans-unit>
        <trans-unit id="4955bfe3d9802b5b5aebdf773b4b30168960f60e" translate="yes" xml:space="preserve">
          <source>To register your package's &lt;a href=&quot;views&quot;&gt;views&lt;/a&gt; with Laravel, you need to tell Laravel where the views are located. You may do this using the service provider's &lt;code&gt;loadViewsFrom&lt;/code&gt; method. The &lt;code&gt;loadViewsFrom&lt;/code&gt; method accepts two arguments: the path to your view templates and your package's name. For example, if your package's name is &lt;code&gt;courier&lt;/code&gt;, you would add the following to your service provider's &lt;code&gt;boot&lt;/code&gt; method:</source>
          <target state="translated">パッケージの&lt;a href=&quot;views&quot;&gt;ビュー&lt;/a&gt;をLaravelに登録するには、ビューの場所をLaravelに通知する必要があります。これは、サービスプロバイダーの &lt;code&gt;loadViewsFrom&lt;/code&gt; メソッドを使用して行うことができます。 &lt;code&gt;loadViewsFrom&lt;/code&gt; のビューテンプレートへのパスとあなたのパッケージの名前：メソッドは2つの引数を受け入れます。たとえば、パッケージの名前が &lt;code&gt;courier&lt;/code&gt; の場合、サービスプロバイダーの &lt;code&gt;boot&lt;/code&gt; メソッドに次を追加します。</target>
        </trans-unit>
        <trans-unit id="4e804e0cd1e82bc695ca7bfc167f4379e182ff7e" translate="yes" xml:space="preserve">
          <source>To register your package's Artisan commands with Laravel, you may use the &lt;code&gt;commands&lt;/code&gt; method. This method expects an array of command class names. Once the commands have been registered, you may execute them using the &lt;a href=&quot;artisan&quot;&gt;Artisan CLI&lt;/a&gt;:</source>
          <target state="translated">パッケージのArtisanコマンドをLaravelに登録するには、 &lt;code&gt;commands&lt;/code&gt; メソッドを使用できます。このメソッドは、コマンドクラス名の配列を想定しています。コマンドが登録されたら、&lt;a href=&quot;artisan&quot;&gt;Artisan CLI&lt;/a&gt;を使用してコマンドを実行できます。</target>
        </trans-unit>
        <trans-unit id="d886e9674dd87f6dfbc0393b2cfc1f6af17e668b" translate="yes" xml:space="preserve">
          <source>To register your provider, add it to the array:</source>
          <target state="translated">プロバイダを登録するには、配列に追加します。</target>
        </trans-unit>
        <trans-unit id="7cf16f5dd77ed8590484b4aa1b36589e1289c4e9" translate="yes" xml:space="preserve">
          <source>To remove a record from your index, &lt;code&gt;delete&lt;/code&gt; the model from the database. This form of removal is even compatible with &lt;a href=&quot;eloquent#soft-deleting&quot;&gt;soft deleted&lt;/a&gt; models:</source>
          <target state="translated">インデックスからレコードを削除するには、データベースからモデルを &lt;code&gt;delete&lt;/code&gt; します。この削除方法は、&lt;a href=&quot;eloquent#soft-deleting&quot;&gt;ソフト削除された&lt;/a&gt;モデルと互換性があります。</target>
        </trans-unit>
        <trans-unit id="2ea0dbb203616b2c33b4c78fac5b0ebb474e6ee9" translate="yes" xml:space="preserve">
          <source>To rename a column, you may use the &lt;code&gt;renameColumn&lt;/code&gt; method on the Schema builder. Before renaming a column, be sure to add the &lt;code&gt;doctrine/dbal&lt;/code&gt; dependency to your &lt;code&gt;composer.json&lt;/code&gt; file:</source>
          <target state="translated">列の名前を変更するには、Schemaビルダーの &lt;code&gt;renameColumn&lt;/code&gt; メソッドを使用できます。列の名前を変更する前に、必ず &lt;code&gt;doctrine/dbal&lt;/code&gt; 依存関係を &lt;code&gt;composer.json&lt;/code&gt; ファイルに追加してください。</target>
        </trans-unit>
        <trans-unit id="091919443422939bcf786c9d5a36172e7d3ea5fb" translate="yes" xml:space="preserve">
          <source>To rename an existing database table, use the &lt;code&gt;rename&lt;/code&gt; method:</source>
          <target state="translated">既存のデータベーステーブルの名前を変更するには、 &lt;code&gt;rename&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="b7d86e81fb51dc803f08b538ef0729760adf01f2" translate="yes" xml:space="preserve">
          <source>To rename an index, you may use the &lt;code&gt;renameIndex&lt;/code&gt; method. This method accepts the current index name as its first argument and the desired name as its second argument:</source>
          <target state="translated">インデックスの名前を変更するには、 &lt;code&gt;renameIndex&lt;/code&gt; メソッドを使用できます。このメソッドは、現在のインデックス名を最初の引数として受け入れ、目的の名前を2番目の引数として受け入れます。</target>
        </trans-unit>
        <trans-unit id="22e9111b7229a39c7b002797027f32b6aa4b375f" translate="yes" xml:space="preserve">
          <source>To replace the place-holders when retrieving a translation string, pass an array of replacements as the second argument to the &lt;code&gt;__&lt;/code&gt; function:</source>
          <target state="translated">翻訳文字列を取得するときにプレースホルダーを置き換えるには、置換の配列を2番目の引数として &lt;code&gt;__&lt;/code&gt; 関数に渡します。</target>
        </trans-unit>
        <trans-unit id="852ec9ce100b766e1dabc067c6e4803b98d9951a" translate="yes" xml:space="preserve">
          <source>To retrieve a tagged cache item, pass the same ordered list of tags to the &lt;code&gt;tags&lt;/code&gt; method and then call the &lt;code&gt;get&lt;/code&gt; method with the key you wish to retrieve:</source>
          <target state="translated">タグ付きキャッシュアイテムを取得するには、同じ順序付けされた &lt;code&gt;tags&lt;/code&gt; リストをtagsメソッドに渡してから、取得するキーを指定して &lt;code&gt;get&lt;/code&gt; メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="a1b0a43f7c2a176192bf75db791d4ce93ca401b7" translate="yes" xml:space="preserve">
          <source>To retrieve a token, make a request to the &lt;code&gt;oauth/token&lt;/code&gt; endpoint:</source>
          <target state="translated">トークンを取得するには、 &lt;code&gt;oauth/token&lt;/code&gt; エンドポイントにリクエストを送信します。</target>
        </trans-unit>
        <trans-unit id="0d2350f50b7b6016e94fef9225160e2e9b1cf897" translate="yes" xml:space="preserve">
          <source>To retrieve an array of all messages for all fields, use the &lt;code&gt;all&lt;/code&gt; method:</source>
          <target state="translated">すべてのフィールドのすべてのメッセージの配列を取得するには、 &lt;code&gt;all&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="5b2f4f59b930b73e675a934af295a04a5dc4d6b2" translate="yes" xml:space="preserve">
          <source>To retrieve flashed input from the previous request, use the &lt;code&gt;old&lt;/code&gt; method on the &lt;code&gt;Request&lt;/code&gt; instance. The &lt;code&gt;old&lt;/code&gt; method will pull the previously flashed input data from the &lt;a href=&quot;session&quot;&gt;session&lt;/a&gt;:</source>
          <target state="translated">以前のリクエストからフラッシュされた入力を取得するには、 &lt;code&gt;Request&lt;/code&gt; インスタンスで &lt;code&gt;old&lt;/code&gt; メソッドを使用します。 &lt;code&gt;old&lt;/code&gt; 方法は以前から光った入力データを引っ張ってくる&lt;a href=&quot;session&quot;&gt;セッション&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="e57c65e4f2bd72a03408ba0dc409a66e477818a7" translate="yes" xml:space="preserve">
          <source>To retrieve the first error message for a given field, use the &lt;code&gt;first&lt;/code&gt; method:</source>
          <target state="translated">特定のフィールドの最初のエラーメッセージを取得するには、 &lt;code&gt;first&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="06261d6366d424e8f7f49293ca349c2da4fa2354" translate="yes" xml:space="preserve">
          <source>To retrieve the full URL for the incoming request you may use the &lt;code&gt;url&lt;/code&gt; or &lt;code&gt;fullUrl&lt;/code&gt; methods. The &lt;code&gt;url&lt;/code&gt; method will return the URL without the query string, while the &lt;code&gt;fullUrl&lt;/code&gt; method includes the query string:</source>
          <target state="translated">着信リクエストの完全なURLを取得するには、 &lt;code&gt;url&lt;/code&gt; または &lt;code&gt;fullUrl&lt;/code&gt; メソッドを使用できます。 &lt;code&gt;url&lt;/code&gt; 間、方法は、クエリ文字列なしでURLを返します &lt;code&gt;fullUrl&lt;/code&gt; 方法は、クエリ文字列が含まれています。</target>
        </trans-unit>
        <trans-unit id="98febc282d99e6f5006bbb2dab6f8dca54755f03" translate="yes" xml:space="preserve">
          <source>To retry all of your failed jobs, execute the &lt;code&gt;queue:retry&lt;/code&gt; command and pass &lt;code&gt;all&lt;/code&gt; as the ID:</source>
          <target state="translated">失敗したすべてのジョブを再試行するには、 &lt;code&gt;queue:retry&lt;/code&gt; コマンドを実行し、IDとして &lt;code&gt;all&lt;/code&gt; を渡します。</target>
        </trans-unit>
        <trans-unit id="a19cf952b23d5c0dfe2cca1b6d286a18bd777fab" translate="yes" xml:space="preserve">
          <source>To rollback the latest migration operation, you may use the &lt;code&gt;rollback&lt;/code&gt; command. This command rolls back the last &quot;batch&quot; of migrations, which may include multiple migration files:</source>
          <target state="translated">最新の移行操作をロールバックするには、 &lt;code&gt;rollback&lt;/code&gt; コマンドを使用できます。このコマンドは、マイグレーションの最後の「バッチ」をロールバックします。これには、複数のマイグレーションファイルが含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="0b0b251fd25668f03a5a58fb1024ecc9911bd153" translate="yes" xml:space="preserve">
          <source>To route Slack notifications to the proper location, define a &lt;code&gt;routeNotificationForSlack&lt;/code&gt; method on your notifiable entity. This should return the webhook URL to which the notification should be delivered. Webhook URLs may be generated by adding an &quot;Incoming Webhook&quot; service to your Slack team:</source>
          <target state="translated">Slack通知を適切な場所に &lt;code&gt;routeNotificationForSlack&lt;/code&gt; するには、通知可能なエンティティでrouteNotificationForSlackメソッドを定義します。これにより、通知の配信先のWebhook URLが返されます。Webhook URLは、Slackチームに「Incoming Webhook」サービスを追加することで生成できます。</target>
        </trans-unit>
        <trans-unit id="0eee248e98f8dc83ec47097acb8f1532dbf0e472" translate="yes" xml:space="preserve">
          <source>To run Dusk tests on &lt;a href=&quot;https://codeship.com&quot;&gt;Codeship&lt;/a&gt;, add the following commands to your Codeship project. Of course, these commands are a starting point and you are free to add additional commands as needed:</source>
          <target state="translated">&lt;a href=&quot;https://codeship.com&quot;&gt;Codeship&lt;/a&gt;でDuskテストを実行するには、次のコマンドをCodeshipプロジェクトに追加します。もちろん、これらのコマンドは開始点であり、必要に応じて追加のコマンドを自由に追加できます。</target>
        </trans-unit>
        <trans-unit id="d31cc4db2640b1cf27703620baca1d30eb79dfec" translate="yes" xml:space="preserve">
          <source>To run Dusk tests on &lt;a href=&quot;https://www.heroku.com/continuous-integration&quot;&gt;Heroku CI&lt;/a&gt;, add the following Google Chrome buildpack and scripts to your Heroku &lt;code&gt;app.json&lt;/code&gt; file:</source>
          <target state="translated">&lt;a href=&quot;https://www.heroku.com/continuous-integration&quot;&gt;Heroku CI&lt;/a&gt;でDuskテストを実行するには、次のGoogle ChromeビルドパックとスクリプトをHeroku &lt;code&gt;app.json&lt;/code&gt; ファイルに追加します。</target>
        </trans-unit>
        <trans-unit id="5c5f3c001f9531ebe7ea39f41e92bd9fefd3c64a" translate="yes" xml:space="preserve">
          <source>To run a basic query, you may use the &lt;code&gt;select&lt;/code&gt; method on the &lt;code&gt;DB&lt;/code&gt; facade:</source>
          <target state="translated">基本的なクエリを実行するには、 &lt;code&gt;DB&lt;/code&gt; ファサードで &lt;code&gt;select&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="dfd619aec69135f0f0ee0aa42d7f4da5478081db" translate="yes" xml:space="preserve">
          <source>To run a task or story that is defined in your &lt;code&gt;Envoy.blade.php&lt;/code&gt; file, execute Envoy's &lt;code&gt;run&lt;/code&gt; command, passing the name of the task or story you would like to execute. Envoy will run the task and display the output from the servers as the task is running:</source>
          <target state="translated">&lt;code&gt;Envoy.blade.php&lt;/code&gt; ファイルで定義されているタスクまたはストーリーを実行するには、Envoyの &lt;code&gt;run&lt;/code&gt; コマンドを実行して、実行するタスクまたはストーリーの名前を渡します。Envoyはタスクを実行し、タスクの実行中にサーバーからの出力を表示します。</target>
        </trans-unit>
        <trans-unit id="2bc24ae026ce6c07654f3e6d619b2b95c45df201" translate="yes" xml:space="preserve">
          <source>To run all of your outstanding migrations, execute the &lt;code&gt;migrate&lt;/code&gt; Artisan command:</source>
          <target state="translated">未解決の移行をすべて実行するには、 &lt;code&gt;migrate&lt;/code&gt; Artisanコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="70c9b37913abdec2921f6addabed896467532ba3" translate="yes" xml:space="preserve">
          <source>To run your Dusk tests on Travis CI, we will need to use the &quot;sudo-enabled&quot; Ubuntu 14.04 (Trusty) environment. Since Travis CI is not a graphical environment, we will need to take some extra steps in order to launch a Chrome browser. In addition, we will use &lt;code&gt;php artisan serve&lt;/code&gt; to launch PHP's built-in web server:</source>
          <target state="translated">Travis CIでDuskテストを実行するには、「sudo対応」のUbuntu 14.04（Trusty）環境を使用する必要があります。Travis CIはグラフィカル環境ではないため、Chromeブラウザを起動するために追加の手順を実行する必要があります。さらに、 &lt;code&gt;php artisan serve&lt;/code&gt; を使用して、PHPの組み込みWebサーバーを起動します。</target>
        </trans-unit>
        <trans-unit id="274640fc6653319ed63a7271c53791fd1de95950" translate="yes" xml:space="preserve">
          <source>To run your browser tests, use the &lt;code&gt;dusk&lt;/code&gt; Artisan command:</source>
          <target state="translated">ブラウザテストを実行するには、 &lt;code&gt;dusk&lt;/code&gt; Artisanコマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="0164429e41cfb9815e08a799b49fadb43f1086c9" translate="yes" xml:space="preserve">
          <source>To run your tests, use the &lt;code&gt;dusk&lt;/code&gt; Artisan command. The &lt;code&gt;dusk&lt;/code&gt; command accepts any argument that is also accepted by the &lt;code&gt;phpunit&lt;/code&gt; command:</source>
          <target state="translated">テストを実行するには、 &lt;code&gt;dusk&lt;/code&gt; Artisanコマンドを使用します。 &lt;code&gt;dusk&lt;/code&gt; コマンドによっても受け入れられている任意の引数受け入れ &lt;code&gt;phpunit&lt;/code&gt; コマンドを：</target>
        </trans-unit>
        <trans-unit id="50e719da114a389fd0cfd15cad6929e14e53000c" translate="yes" xml:space="preserve">
          <source>To see a listing of all of your linked directories, run the &lt;code&gt;valet links&lt;/code&gt; command. You may use &lt;code&gt;valet unlink app-name&lt;/code&gt; to destroy the symbolic link.</source>
          <target state="translated">リンクされているすべてのディレクトリのリストを表示するには、 &lt;code&gt;valet links&lt;/code&gt; コマンドを実行します。 &lt;code&gt;valet unlink app-name&lt;/code&gt; を使用して、シンボリックリンクを破棄できます。</target>
        </trans-unit>
        <trans-unit id="e74b65d829df09348616f1e34fd27f32303591c8" translate="yes" xml:space="preserve">
          <source>To see how read / write connections should be configured, let's look at this example:</source>
          <target state="translated">読み取り/書き込み接続がどのように設定されるべきかを見るために、この例を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="c752cb6564d9dd8476b9d1d2f5b0bab4bf401e07" translate="yes" xml:space="preserve">
          <source>To select a value in a dropdown selection box, you may use the &lt;code&gt;select&lt;/code&gt; method. Like the &lt;code&gt;type&lt;/code&gt; method, the &lt;code&gt;select&lt;/code&gt; method does not require a full CSS selector. When passing a value to the &lt;code&gt;select&lt;/code&gt; method, you should pass the underlying option value instead of the display text:</source>
          <target state="translated">ドロップダウン選択ボックスで値を選択するには、 &lt;code&gt;select&lt;/code&gt; メソッドを使用できます。 &lt;code&gt;type&lt;/code&gt; メソッドと同様に、 &lt;code&gt;select&lt;/code&gt; メソッドは完全なCSSセレクターを必要としません。 &lt;code&gt;select&lt;/code&gt; メソッドに値を渡すときは、表示テキストではなく、基になるオプション値を渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="33024ce9a7a13a8292fae73a16aa2c7aeaa9614b" translate="yes" xml:space="preserve">
          <source>To send a message, use the &lt;code&gt;to&lt;/code&gt; method on the &lt;code&gt;Mail&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt;. The &lt;code&gt;to&lt;/code&gt; method accepts an email address, a user instance, or a collection of users. If you pass an object or collection of objects, the mailer will automatically use their &lt;code&gt;email&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; properties when setting the email recipients, so make sure these attributes are available on your objects. Once you have specified your recipients, you may pass an instance of your mailable class to the &lt;code&gt;send&lt;/code&gt; method:</source>
          <target state="translated">メッセージを送信するには、 &lt;code&gt;Mail&lt;/code&gt; &lt;a href=&quot;facades&quot;&gt;ファサードの&lt;/a&gt; &lt;code&gt;to&lt;/code&gt; メソッドを使用します。方法は、電子メールアドレス、ユーザーインスタンス、またはユーザーのコレクションを受け入れます。オブジェクトまたはオブジェクトのコレクションを渡すと、メーラーは電子メールの受信者を設定するときに自動的にそれらの &lt;code&gt;email&lt;/code&gt; と &lt;code&gt;name&lt;/code&gt; プロパティを使用するため、これらの属性がオブジェクトで使用できることを確認してください。受信者を指定したら、メール可能なクラスのインスタンスを &lt;code&gt;send&lt;/code&gt; メソッドに渡すことができます。 &lt;code&gt;to&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e911bd07326bc5e0b2797563b265082bbbcbd131" translate="yes" xml:space="preserve">
          <source>To send output to the console, use the &lt;code&gt;line&lt;/code&gt;, &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;comment&lt;/code&gt;, &lt;code&gt;question&lt;/code&gt; and &lt;code&gt;error&lt;/code&gt; methods. Each of these methods will use appropriate ANSI colors for their purpose. For example, let's display some general information to the user. Typically, the &lt;code&gt;info&lt;/code&gt; method will display in the console as green text:</source>
          <target state="translated">出力をコンソールに送信するには、 &lt;code&gt;line&lt;/code&gt; 、 &lt;code&gt;info&lt;/code&gt; 、 &lt;code&gt;comment&lt;/code&gt; 、 &lt;code&gt;question&lt;/code&gt; 、および &lt;code&gt;error&lt;/code&gt; メソッドを使用します。これらの方法はそれぞれ、目的に応じて適切なANSI色を使用します。たとえば、一般的な情報をユーザーに表示してみましょう。通常、 &lt;code&gt;info&lt;/code&gt; メソッドはコンソールに緑色のテキストとして表示されます。</target>
        </trans-unit>
        <trans-unit id="b4c4eac2b9a0b17f7abb9dabb449f62f5ef72c94" translate="yes" xml:space="preserve">
          <source>To send the notification to a channel: &lt;code&gt;#channel&lt;/code&gt;</source>
          <target state="translated">チャネルに通知を送信するには： &lt;code&gt;#channel&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="012f6d29c8a89afe305855925b2f868b4abe3260" translate="yes" xml:space="preserve">
          <source>To send the notification to a user: &lt;code&gt;@user&lt;/code&gt;</source>
          <target state="translated">通知をユーザーに送信するには： &lt;code&gt;@user&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f565fb954039d44527ee2e09a8a477f33a2e7d3" translate="yes" xml:space="preserve">
          <source>To set configuration values at runtime, pass an array to the &lt;code&gt;config&lt;/code&gt; helper:</source>
          <target state="translated">実行時に設定した設定値に、に配列を渡す &lt;code&gt;config&lt;/code&gt; ヘルパー：</target>
        </trans-unit>
        <trans-unit id="72bd3612beb87bc532614cc809ca66cf02d4768d" translate="yes" xml:space="preserve">
          <source>To share a site, navigate to the site's directory in your terminal and run the &lt;code&gt;valet share&lt;/code&gt; command. A publicly accessible URL will be inserted into your clipboard and is ready to paste directly into your browser. That's it.</source>
          <target state="translated">サイトを共有するには、ターミナルでサイトのディレクトリに移動し、 &lt;code&gt;valet share&lt;/code&gt; コマンドを実行します。パブリックにアクセス可能なURLがクリップボードに挿入され、ブラウザーに直接貼り付ける準備が整います。それでおしまい。</target>
        </trans-unit>
        <trans-unit id="408d422a25f98e3f349a02f74e197ec6e23a7609" translate="yes" xml:space="preserve">
          <source>To solve this problem, Homestead includes its own &lt;code&gt;share&lt;/code&gt; command. To get started, SSH into your Homestead machine via &lt;code&gt;vagrant ssh&lt;/code&gt; and run &lt;code&gt;share homestead.test&lt;/code&gt;. This will share the &lt;code&gt;homestead.test&lt;/code&gt; site from your &lt;code&gt;Homestead.yaml&lt;/code&gt; configuration file. Of course, you may substitute any of your other configured sites for &lt;code&gt;homestead.test&lt;/code&gt;:</source>
          <target state="translated">この問題を解決するために、ホームステッドには独自の &lt;code&gt;share&lt;/code&gt; コマンドが含まれています。開始するには、 &lt;code&gt;vagrant ssh&lt;/code&gt; 経由でHomesteadマシンにSSHで接続し、 &lt;code&gt;share homestead.test&lt;/code&gt; を実行します。これにより、 &lt;code&gt;Homestead.yaml&lt;/code&gt; 設定ファイルの &lt;code&gt;homestead.test&lt;/code&gt; サイトが共有されます。もちろん、 &lt;code&gt;homestead.test&lt;/code&gt; を他の構成済みサイトに置き換えることもできます。</target>
        </trans-unit>
        <trans-unit id="5003241dc2806635639ac36df2f7638a8707f658" translate="yes" xml:space="preserve">
          <source>To solve this, you may use the &lt;code&gt;App\Http\Middleware\TrustProxies&lt;/code&gt; middleware that is included in your Laravel application, which allows you to quickly customize the load balancers or proxies that should be trusted by your application. Your trusted proxies should be listed as an array on the &lt;code&gt;$proxies&lt;/code&gt; property of this middleware. In addition to configuring the trusted proxies, you may configure the proxy &lt;code&gt;$headers&lt;/code&gt; that should be trusted:</source>
          <target state="translated">これを解決するには、Laravelアプリケーションに含まれている &lt;code&gt;App\Http\Middleware\TrustProxies&lt;/code&gt; ミドルウェアを使用できます。これにより、アプリケーションで信頼する必要のあるロードバランサーまたはプロキシをすばやくカスタマイズできます。信頼できるプロキシは、このミドルウェアの &lt;code&gt;$proxies&lt;/code&gt; プロパティの配列としてリストされているはずです。信頼できるプロキシの設定に加えて、信頼すべきプロキシ &lt;code&gt;$headers&lt;/code&gt; を設定できます：</target>
        </trans-unit>
        <trans-unit id="de37e9d3f52c9080ca391c0a59874bc0987e413c" translate="yes" xml:space="preserve">
          <source>To specify that a listener should be queued, add the &lt;code&gt;ShouldQueue&lt;/code&gt; interface to the listener class. Listeners generated by the &lt;code&gt;event:generate&lt;/code&gt; Artisan command already have this interface imported into the current namespace, so you can use it immediately:</source>
          <target state="translated">リスナーをキューに入れるように指定するには、 &lt;code&gt;ShouldQueue&lt;/code&gt; インターフェースをリスナークラスに追加します。 &lt;code&gt;event:generate&lt;/code&gt; Artisanコマンドによって生成されたリスナーには、すでにこのインターフェースが現在のネームスペースにインポートされているため、すぐに使用できます。</target>
        </trans-unit>
        <trans-unit id="c5160d2f61f2d57dd3eab6df4d0eecf9dbaab8f7" translate="yes" xml:space="preserve">
          <source>To specify the tax percentage a user pays on a subscription, implement the &lt;code&gt;taxPercentage&lt;/code&gt; method on your billable model, and return a numeric value between 0 and 100, with no more than 2 decimal places.</source>
          <target state="translated">ユーザーがサブスクリプションに対して支払う税率を指定するには、 &lt;code&gt;taxPercentage&lt;/code&gt; モデルにtaxPercentageメソッドを実装し、小数点以下2桁以下の0〜100の数値を返します。</target>
        </trans-unit>
        <trans-unit id="03022980f93ad930997c926628f2cc392341ecb4" translate="yes" xml:space="preserve">
          <source>To start a worker that verifies that all of the &lt;code&gt;high&lt;/code&gt; queue jobs are processed before continuing to any jobs on the &lt;code&gt;low&lt;/code&gt; queue, pass a comma-delimited list of queue names to the &lt;code&gt;work&lt;/code&gt; command:</source>
          <target state="translated">&lt;code&gt;low&lt;/code&gt; キューのジョブを続行する前に、 &lt;code&gt;high&lt;/code&gt; キューのすべてのジョブが処理されたことを確認するワーカーを開始するには、 &lt;code&gt;work&lt;/code&gt; コマンドにキュー名のコンマ区切りリストを渡します。</target>
        </trans-unit>
        <trans-unit id="1fb3cd9803c7024ebe63c024226492f11eff5663" translate="yes" xml:space="preserve">
          <source>To stop sharing your site, hit &lt;code&gt;Control + C&lt;/code&gt; to cancel the process.</source>
          <target state="translated">サイトの共有を停止するには、 &lt;code&gt;Control + C&lt;/code&gt; を押してプロセスをキャンセルします。</target>
        </trans-unit>
        <trans-unit id="5d0d2fb5c813ce7dad4bfb3f46c9bb677e53678f" translate="yes" xml:space="preserve">
          <source>To store an uploaded file, you will typically use one of your configured &lt;a href=&quot;filesystem&quot;&gt;filesystems&lt;/a&gt;. The &lt;code&gt;UploadedFile&lt;/code&gt; class has a &lt;code&gt;store&lt;/code&gt; method which will move an uploaded file to one of your disks, which may be a location on your local filesystem or even a cloud storage location like Amazon S3.</source>
          <target state="translated">アップロードしたファイルを保存するには、通常、構成済みの&lt;a href=&quot;filesystem&quot;&gt;ファイルシステムの&lt;/a&gt; 1つを使用します。 &lt;code&gt;UploadedFile&lt;/code&gt; のクラスがあり &lt;code&gt;store&lt;/code&gt; 、ローカルファイルシステム上の場所やAmazon S3のようにもクラウドストレージの場所かもしれあなたのディスクの1つにアップロードされたファイルを移動する方法を。</target>
        </trans-unit>
        <trans-unit id="6d699ccecc16ce70fe4a3a3bf58dff3ebbd9674f" translate="yes" xml:space="preserve">
          <source>To store data in the session, you will typically use the &lt;code&gt;put&lt;/code&gt; method or the &lt;code&gt;session&lt;/code&gt; helper:</source>
          <target state="translated">セッションにデータを保存するには、通常、 &lt;code&gt;put&lt;/code&gt; メソッドまたは &lt;code&gt;session&lt;/code&gt; ヘルパーを使用します。</target>
        </trans-unit>
        <trans-unit id="ebb9055994a5e15c542c8811d58de296afc3c9fd" translate="yes" xml:space="preserve">
          <source>To update a searchable model, you only need to update the model instance's properties and &lt;code&gt;save&lt;/code&gt; the model to your database. Scout will automatically persist the changes to your search index:</source>
          <target state="translated">検索可能なモデルを更新するには、モデルインスタンスのプロパティを更新し、モデルをデータベースに &lt;code&gt;save&lt;/code&gt; するだけです。Scoutは自動的に変更を検索インデックスに永続化します。</target>
        </trans-unit>
        <trans-unit id="d18b35ed671e2ef1c1cabd5fc2c3895389243826" translate="yes" xml:space="preserve">
          <source>To use the Amazon SES driver you must first install the Amazon AWS SDK for PHP. You may install this library by adding the following line to your &lt;code&gt;composer.json&lt;/code&gt; file's &lt;code&gt;require&lt;/code&gt; section and running the &lt;code&gt;composer update&lt;/code&gt; command:</source>
          <target state="translated">Amazon SESドライバーを使用するには、最初にAmazon AWS SDK for PHPをインストールする必要があります。このライブラリをインストールするには、 &lt;code&gt;composer.json&lt;/code&gt; ファイルの &lt;code&gt;require&lt;/code&gt; セクションに次の行を追加して、 &lt;code&gt;composer update&lt;/code&gt; コマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="1a4680d48e665e82f308c6e0e49cf767d02ec0db" translate="yes" xml:space="preserve">
          <source>To use the Mailgun driver, first install Guzzle, then set the &lt;code&gt;driver&lt;/code&gt; option in your &lt;code&gt;config/mail.php&lt;/code&gt; configuration file to &lt;code&gt;mailgun&lt;/code&gt;. Next, verify that your &lt;code&gt;config/services.php&lt;/code&gt; configuration file contains the following options:</source>
          <target state="translated">Mailgunドライバを使用するには、最初にがつがつ食うをインストールし、設定する &lt;code&gt;driver&lt;/code&gt; あなたの中にオプション &lt;code&gt;config/mail.php&lt;/code&gt; に設定ファイル &lt;code&gt;mailgun&lt;/code&gt; を。次に、 &lt;code&gt;config/services.php&lt;/code&gt; 構成ファイルに次のオプションが含まれていることを確認します。</target>
        </trans-unit>
        <trans-unit id="5456ec815d98a4f0478a171a3b5c15982bf1b522" translate="yes" xml:space="preserve">
          <source>To use the Parallels provider, you will need to install &lt;a href=&quot;https://github.com/Parallels/vagrant-parallels&quot;&gt;Parallels Vagrant plug-in&lt;/a&gt;. It is free of charge.</source>
          <target state="translated">Parallelsプロバイダーを使用するには、Parallels &lt;a href=&quot;https://github.com/Parallels/vagrant-parallels&quot;&gt;Vagrantプラグイン&lt;/a&gt;をインストールする必要があります。無料です。</target>
        </trans-unit>
        <trans-unit id="37b80d826cf8e98e029e071484ac960d39fec3f1" translate="yes" xml:space="preserve">
          <source>To use the SparkPost driver, first install Guzzle, then set the &lt;code&gt;driver&lt;/code&gt; option in your &lt;code&gt;config/mail.php&lt;/code&gt; configuration file to &lt;code&gt;sparkpost&lt;/code&gt;. Next, verify that your &lt;code&gt;config/services.php&lt;/code&gt; configuration file contains the following options:</source>
          <target state="translated">SparkPostドライバを使用するには、最初にがつがつ食うをインストールし、設定する &lt;code&gt;driver&lt;/code&gt; あなたの中にオプション &lt;code&gt;config/mail.php&lt;/code&gt; に設定ファイル &lt;code&gt;sparkpost&lt;/code&gt; を。次に、 &lt;code&gt;config/services.php&lt;/code&gt; 構成ファイルに次のオプションが含まれていることを確認します。</target>
        </trans-unit>
        <trans-unit id="dc2e7402bf828827a6371d7d30851e598725ca53" translate="yes" xml:space="preserve">
          <source>To use the VMware provider, you will need to purchase both VMware Fusion / Workstation and the &lt;a href=&quot;https://www.vagrantup.com/vmware&quot;&gt;VMware Vagrant plug-in&lt;/a&gt;. Though it is not free, VMware can provide faster shared folder performance out of the box.</source>
          <target state="translated">VMwareプロバイダーを使用するには、VMware Fusion / Workstationと&lt;a href=&quot;https://www.vagrantup.com/vmware&quot;&gt;VMware Vagrantプラグインの&lt;/a&gt;両方を購入する必要があります。無料ではありませんが、VMwareはすぐに共有フォルダのパフォーマンスを高速化できます。</target>
        </trans-unit>
        <trans-unit id="bdaf40746f822e29cd470ac01215f4bf3192ff4b" translate="yes" xml:space="preserve">
          <source>To use the command, navigate to one of your projects and run &lt;code&gt;valet link app-name&lt;/code&gt; in your terminal. Valet will create a symbolic link in &lt;code&gt;~/.config/valet/Sites&lt;/code&gt; which points to your current working directory.</source>
          <target state="translated">コマンドを使用するには、プロジェクトの1つに移動し、ターミナルで &lt;code&gt;valet link app-name&lt;/code&gt; を実行します。Valetは、現在の作業ディレクトリを指すシンボリックリンクを &lt;code&gt;~/.config/valet/Sites&lt;/code&gt; 作成します。</target>
        </trans-unit>
        <trans-unit id="be252639f123264102fa20868380715d248036e4" translate="yes" xml:space="preserve">
          <source>To use the component in your application, you may drop it into one of your HTML templates. For example, after running the &lt;code&gt;make:auth&lt;/code&gt; Artisan command to scaffold your application's authentication and registration screens, you could drop the component into the &lt;code&gt;home.blade.php&lt;/code&gt; Blade template:</source>
          <target state="translated">アプリケーションでコンポーネントを使用するには、コンポーネントをHTMLテンプレートの1つにドロップできます。たとえば、 &lt;code&gt;make:auth&lt;/code&gt; Artisanコマンドを実行してアプリケーションの認証画面と登録画面を足場した &lt;code&gt;home.blade.php&lt;/code&gt; 、home.blade.phpブレードテンプレートにコンポーネントをドロップできます。</target>
        </trans-unit>
        <trans-unit id="c94ea6183f85438b68072f066dc504634440a67a" translate="yes" xml:space="preserve">
          <source>To utilize the PhpRedis extension, you should change the &lt;code&gt;client&lt;/code&gt; option of your Redis configuration to &lt;code&gt;phpredis&lt;/code&gt;. This option is found in your &lt;code&gt;config/database.php&lt;/code&gt; configuration file:</source>
          <target state="translated">PhpRedis拡張機能を利用するには、Redis構成の &lt;code&gt;client&lt;/code&gt; オプションを &lt;code&gt;phpredis&lt;/code&gt; に変更する必要があります。このオプションは &lt;code&gt;config/database.php&lt;/code&gt; 設定ファイルにあります：</target>
        </trans-unit>
        <trans-unit id="6ff342e54e4dfe7e4bff2ec6db5f8a7164354dc7" translate="yes" xml:space="preserve">
          <source>To utilize this feature, your application must be using the &lt;code&gt;memcached&lt;/code&gt; or &lt;code&gt;redis&lt;/code&gt; cache driver as your application's default cache driver. In addition, all servers must be communicating with the same central cache server.</source>
          <target state="translated">この機能を利用するには、アプリケーションで &lt;code&gt;memcached&lt;/code&gt; または &lt;code&gt;redis&lt;/code&gt; キャッシュドライバーをアプリケーションのデフォルトキャッシュドライバーとして使用する必要があります。さらに、すべてのサーバーが同じ中央キャッシュサーバーと通信している必要があります。</target>
        </trans-unit>
        <trans-unit id="60fd09be655e90ac7cca0abc9d4c7425c94abffc" translate="yes" xml:space="preserve">
          <source>To verify that an incoming request has a valid signature, you should call the &lt;code&gt;hasValidSignature&lt;/code&gt; method on the incoming &lt;code&gt;Request&lt;/code&gt;:</source>
          <target state="translated">着信要求は、有効な署名を持っていることを確認するには、呼び出す必要があり &lt;code&gt;hasValidSignature&lt;/code&gt; の入ってくる上のメソッド &lt;code&gt;Request&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="61a47584d8a0ca2dae5114b003e8ac7a2b82a89a" translate="yes" xml:space="preserve">
          <source>To view all of your failed jobs that have been inserted into your &lt;code&gt;failed_jobs&lt;/code&gt; database table, you may use the &lt;code&gt;queue:failed&lt;/code&gt; Artisan command:</source>
          <target state="translated">&lt;code&gt;failed_jobs&lt;/code&gt; データベーステーブルに挿入されているすべての失敗したジョブを表示するには、 &lt;code&gt;queue:failed&lt;/code&gt; Artisanコマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="142c9559c12bc88a498471d2875a6e5b576e2c3c" translate="yes" xml:space="preserve">
          <source>Toggles a model (or models) from the parent.</source>
          <target state="translated">モデル(またはモデル)を親からトグルします。</target>
        </trans-unit>
        <trans-unit id="ee2c1396902d1faccb1000191f15eada0b7cead5" translate="yes" xml:space="preserve">
          <source>Toggling Associations</source>
          <target state="translated">関連付けのトグル</target>
        </trans-unit>
        <trans-unit id="8d14891c995d2727a52d38ab9fa25843708c9757" translate="yes" xml:space="preserve">
          <source>Token Lifetimes</source>
          <target state="translated">トークンの寿命</target>
        </trans-unit>
        <trans-unit id="84e5bcc2ff3dea8e9ea28f1827069745d1dde3eb" translate="yes" xml:space="preserve">
          <source>Token Scopes</source>
          <target state="translated">トークンスコープ</target>
        </trans-unit>
        <trans-unit id="bf235e0182bbd24fc2b791146dbfdf86334dd481" translate="yes" xml:space="preserve">
          <source>TokenGuard</source>
          <target state="translated">TokenGuard</target>
        </trans-unit>
        <trans-unit id="f30e15f1fa9c1a5837f0d74d5fdb64898ac7ee3a" translate="yes" xml:space="preserve">
          <source>TokenGuard (Auth)</source>
          <target state="translated">トークンガード (Auth)</target>
        </trans-unit>
        <trans-unit id="0fc0a9bffac4e4ac2a6d1e45fbefcf153089bada" translate="yes" xml:space="preserve">
          <source>TokenGuard::__construct()</source>
          <target state="translated">TokenGuard::__construct()</target>
        </trans-unit>
        <trans-unit id="693775f5f6bc5cb2d4663583beb20258a25b49db" translate="yes" xml:space="preserve">
          <source>TokenGuard::getTokenForRequest()</source>
          <target state="translated">TokenGuard::getTokenForRequest()</target>
        </trans-unit>
        <trans-unit id="3f1238fd1d435050b35d1e13f16c2dfcc5935fd2" translate="yes" xml:space="preserve">
          <source>TokenGuard::setRequest()</source>
          <target state="translated">TokenGuard::setRequest()</target>
        </trans-unit>
        <trans-unit id="60361033b9a7112c72880d3d4ea25fc7bf09eaf2" translate="yes" xml:space="preserve">
          <source>TokenGuard::user()</source>
          <target state="translated">TokenGuard::user()</target>
        </trans-unit>
        <trans-unit id="aac0dfb9633188bc0874c81a88c5b0ddbf84d2de" translate="yes" xml:space="preserve">
          <source>TokenGuard::validate()</source>
          <target state="translated">TokenGuard::validate()</target>
        </trans-unit>
        <trans-unit id="908161a439bc03926da251ac31a2db7435b8cec7" translate="yes" xml:space="preserve">
          <source>TokenMismatchException</source>
          <target state="translated">TokenMismatchException</target>
        </trans-unit>
        <trans-unit id="a32521282ec075ccd27b1bc8699f4dc2df3bba01" translate="yes" xml:space="preserve">
          <source>TokenMismatchException (Session)</source>
          <target state="translated">TokenMismatchException (Session)</target>
        </trans-unit>
        <trans-unit id="ebea413aec80f97277983277db2b060232fcd712" translate="yes" xml:space="preserve">
          <source>TokenRepositoryInterface</source>
          <target state="translated">TokenRepositoryInterface</target>
        </trans-unit>
        <trans-unit id="983e37abb7af88e275399dbc99365f08cef32051" translate="yes" xml:space="preserve">
          <source>TokenRepositoryInterface (Auth\Passwords)</source>
          <target state="translated">TokenRepositoryInterface (Auth\Passwords)</target>
        </trans-unit>
        <trans-unit id="1c642a02e26200dcf5bcbadc6683344bbe2add69" translate="yes" xml:space="preserve">
          <source>TokenRepositoryInterface::create()</source>
          <target state="translated">TokenRepositoryInterface::create()</target>
        </trans-unit>
        <trans-unit id="4561ceedb81c4d444a0001024c84b704d6a3a9e8" translate="yes" xml:space="preserve">
          <source>TokenRepositoryInterface::delete()</source>
          <target state="translated">TokenRepositoryInterface::delete()</target>
        </trans-unit>
        <trans-unit id="2a3fdbfff361ed69fe9642fd3c48bec16bf2c203" translate="yes" xml:space="preserve">
          <source>TokenRepositoryInterface::deleteExpired()</source>
          <target state="translated">TokenRepositoryInterface::deleteExpired()</target>
        </trans-unit>
        <trans-unit id="2d8b212bf5a8c438b1c31d8eca4002f15839ab48" translate="yes" xml:space="preserve">
          <source>TokenRepositoryInterface::exists()</source>
          <target state="translated">TokenRepositoryInterface::exists()</target>
        </trans-unit>
        <trans-unit id="6133bf55a4cbf57f5e103520a84d7ead14df13c6" translate="yes" xml:space="preserve">
          <source>Tokenizer PHP Extension</source>
          <target state="translated">Tokenizer PHP 拡張機能</target>
        </trans-unit>
        <trans-unit id="3f552db8e66c5a451cc8a623fff824ec72c31ca4" translate="yes" xml:space="preserve">
          <source>Top Level Meta Data</source>
          <target state="translated">トップレベルのメタデータ</target>
        </trans-unit>
        <trans-unit id="3983cc8a2992b1d4a225bd7f7f25e794d2d2473d" translate="yes" xml:space="preserve">
          <source>Touch all of the related models for the relationship.</source>
          <target state="translated">関連するモデルをすべてタッチして関係性を確認します。</target>
        </trans-unit>
        <trans-unit id="e8839e6d532510bd74417c5e8840972a0969c96e" translate="yes" xml:space="preserve">
          <source>Touch the owning relations of the model.</source>
          <target state="translated">モデルの所有関係に触れる。</target>
        </trans-unit>
        <trans-unit id="0f5b54507e68fc572bd10613f006a543f5471cf5" translate="yes" xml:space="preserve">
          <source>Touching Parent Timestamps</source>
          <target state="translated">親のタイムスタンプに触れる</target>
        </trans-unit>
        <trans-unit id="d1a616085a1a99a58e14bafaa350abc6783a3160" translate="yes" xml:space="preserve">
          <source>Traits</source>
          <target state="translated">Traits</target>
        </trans-unit>
        <trans-unit id="8dfe0518202854295bdaef3a304bdb0527048e30" translate="yes" xml:space="preserve">
          <source>TransactionBeginning</source>
          <target state="translated">TransactionBeginning</target>
        </trans-unit>
        <trans-unit id="948b0e5da336f07d6c4b6bd3c587812881797c95" translate="yes" xml:space="preserve">
          <source>TransactionBeginning (Database\Events)</source>
          <target state="translated">TransactionBeginning (DatabaseEvents)</target>
        </trans-unit>
        <trans-unit id="7a702855cbe75e18b011ba230077fa47dd021f60" translate="yes" xml:space="preserve">
          <source>TransactionCommitted</source>
          <target state="translated">TransactionCommitted</target>
        </trans-unit>
        <trans-unit id="958e4e566c24961dc635533a70d51579307d0a2c" translate="yes" xml:space="preserve">
          <source>TransactionCommitted (Database\Events)</source>
          <target state="translated">TransactionCommitted (DatabaseEvents)</target>
        </trans-unit>
        <trans-unit id="b465884757971fffe7310b98cda554b8c64e365d" translate="yes" xml:space="preserve">
          <source>TransactionRolledBack</source>
          <target state="translated">TransactionRolledBack</target>
        </trans-unit>
        <trans-unit id="952c0d09b11628c8783f68ddc7ccfea96222d62f" translate="yes" xml:space="preserve">
          <source>TransactionRolledBack (Database\Events)</source>
          <target state="translated">TransactionRolledBack (Database)</target>
        </trans-unit>
        <trans-unit id="15108eb0cf869073104791753d6f6c249da3c412" translate="yes" xml:space="preserve">
          <source>Transform an array of attributes to their displayable form.</source>
          <target state="translated">属性の配列を表示可能な形式に変換します。</target>
        </trans-unit>
        <trans-unit id="a176fa9cf30f846b0f6b2ab728e47610cabf1aab" translate="yes" xml:space="preserve">
          <source>Transform each item in the collection using a callback.</source>
          <target state="translated">コールバックを使ってコレクション内の各項目を変換します。</target>
        </trans-unit>
        <trans-unit id="44e7099521c5a6413c38f633fcddaa97bb34b6c0" translate="yes" xml:space="preserve">
          <source>Transform the given value if it is present.</source>
          <target state="translated">与えられた値が存在する場合に変換します。</target>
        </trans-unit>
        <trans-unit id="d7f291ff11311edb3962c96eef070674aa65c1d6" translate="yes" xml:space="preserve">
          <source>Transform the given value.</source>
          <target state="translated">与えられた値を変換します。</target>
        </trans-unit>
        <trans-unit id="63c21a595a215720e2fe8d9a1021b5217023eff5" translate="yes" xml:space="preserve">
          <source>Transform the resource into a JSON array.</source>
          <target state="translated">リソースをJSON配列に変換します。</target>
        </trans-unit>
        <trans-unit id="7ffc15a9d1c7de7e27d42d519c77cfbc794b8b53" translate="yes" xml:space="preserve">
          <source>Transform the resource into an HTTP response.</source>
          <target state="translated">リソースをHTTPレスポンスに変換します。</target>
        </trans-unit>
        <trans-unit id="4421731ff5e6f6ca8c55643a26beb613c6ab28ef" translate="yes" xml:space="preserve">
          <source>Transform the resource into an array.</source>
          <target state="translated">リソースを配列に変換します。</target>
        </trans-unit>
        <trans-unit id="8155ddfb1d9c3f2785e625776c5fd22e1cf7e7df" translate="yes" xml:space="preserve">
          <source>Transform the use variables before serialization.</source>
          <target state="translated">シリアライズ前の使用変数を変換します。</target>
        </trans-unit>
        <trans-unit id="d42ea4ed7bef62d5764b1a19580e9803b3ae674c" translate="yes" xml:space="preserve">
          <source>TransformsRequest</source>
          <target state="translated">TransformsRequest</target>
        </trans-unit>
        <trans-unit id="8dcae2f3fbf8c0930bb2f7ed759e0c40483040fb" translate="yes" xml:space="preserve">
          <source>TransformsRequest (Foundation\Http)</source>
          <target state="translated">TransformsRequest (FoundationHttp)</target>
        </trans-unit>
        <trans-unit id="7abd2c3cc0054fc5bf02f82b6621f73a413150b9" translate="yes" xml:space="preserve">
          <source>TransformsRequest::clean()</source>
          <target state="translated">TransformsRequest::clean()</target>
        </trans-unit>
        <trans-unit id="47e9091aa2aa427da8472cffa5ca380dc9bd1b71" translate="yes" xml:space="preserve">
          <source>TransformsRequest::cleanArray()</source>
          <target state="translated">TransformsRequest::cleanArray()</target>
        </trans-unit>
        <trans-unit id="0c250e7838d1ee0670115defd328c74424e8a05d" translate="yes" xml:space="preserve">
          <source>TransformsRequest::cleanParameterBag()</source>
          <target state="translated">TransformsRequest::cleanParameterBag()</target>
        </trans-unit>
        <trans-unit id="507ee192353316b293fde9ecf2c737df5aef78ff" translate="yes" xml:space="preserve">
          <source>TransformsRequest::cleanValue()</source>
          <target state="translated">TransformsRequest::cleanValue()</target>
        </trans-unit>
        <trans-unit id="d266a8d4c9d6a1516f4a7ddc7d9c733a27ad2782" translate="yes" xml:space="preserve">
          <source>TransformsRequest::handle()</source>
          <target state="translated">TransformsRequest::handle()</target>
        </trans-unit>
        <trans-unit id="3f0bf4e714a26debdc3a85c164ef4b9506507f83" translate="yes" xml:space="preserve">
          <source>TransformsRequest::transform()</source>
          <target state="translated">TransformsRequest::transform()</target>
        </trans-unit>
        <trans-unit id="02bfc7ccea233eab48efd808b43684a21112aa5c" translate="yes" xml:space="preserve">
          <source>Translate the given value into the appropriate JSON binding parameter.</source>
          <target state="translated">与えられた値を適切な JSON バインディングパラメータに変換します。</target>
        </trans-unit>
        <trans-unit id="ac26a7a94ea2e66490f932b6415a09ef6f2a913c" translate="yes" xml:space="preserve">
          <source>Translation</source>
          <target state="translated">Translation</target>
        </trans-unit>
        <trans-unit id="892b80554120122958b64e52444d816ef98e6774" translate="yes" xml:space="preserve">
          <source>Translation files that use translation strings as keys are stored as JSON files in the &lt;code&gt;resources/lang&lt;/code&gt; directory. For example, if your application has a Spanish translation, you should create a &lt;code&gt;resources/lang/es.json&lt;/code&gt; file:</source>
          <target state="translated">キーとして翻訳文字列を使用する翻訳ファイルは、 &lt;code&gt;resources/lang&lt;/code&gt; ディレクトリにJSONファイルとして保存されます。たとえば、アプリケーションにスペイン語の翻訳がある場合は、 &lt;code&gt;resources/lang/es.json&lt;/code&gt; ファイルを作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="2eba37e5175d817df5561b3605f81efc47befef9" translate="yes" xml:space="preserve">
          <source>TranslationServiceProvider</source>
          <target state="translated">TranslationServiceProvider</target>
        </trans-unit>
        <trans-unit id="8ad8302d110b05d7e02330dac58628134fdcff02" translate="yes" xml:space="preserve">
          <source>Translations</source>
          <target state="translated">Translations</target>
        </trans-unit>
        <trans-unit id="1fafc51374f712ba586dcd4ca179bb592b7dbf3b" translate="yes" xml:space="preserve">
          <source>Translator</source>
          <target state="translated">Translator</target>
        </trans-unit>
        <trans-unit id="78af8bcd052d2610b390898713f436f04f393f09" translate="yes" xml:space="preserve">
          <source>Translator (Contracts)</source>
          <target state="translated">翻訳者(契約</target>
        </trans-unit>
        <trans-unit id="d87d36448de5f3592a1324c51a29009327711e04" translate="yes" xml:space="preserve">
          <source>Translator (Translation)</source>
          <target state="translated">翻訳者(翻訳</target>
        </trans-unit>
        <trans-unit id="b0c903b57c57694404a98032e87667af6a150337" translate="yes" xml:space="preserve">
          <source>Translator::__construct()</source>
          <target state="translated">Translator::__construct()</target>
        </trans-unit>
        <trans-unit id="a2a9cbf23641623bf97c512141704543792c70de" translate="yes" xml:space="preserve">
          <source>Translator::addJsonPath()</source>
          <target state="translated">Translator::addJsonPath()</target>
        </trans-unit>
        <trans-unit id="545ae36902e47122a0acbe9c6888710568b00eea" translate="yes" xml:space="preserve">
          <source>Translator::addLines()</source>
          <target state="translated">Translator::addLines()</target>
        </trans-unit>
        <trans-unit id="1044080afa69ce558c7b0305acb0903ea414e0ec" translate="yes" xml:space="preserve">
          <source>Translator::addNamespace()</source>
          <target state="translated">Translator::addNamespace()</target>
        </trans-unit>
        <trans-unit id="2faad4a06100fdae1b2ab28cbb2ec56064aad732" translate="yes" xml:space="preserve">
          <source>Translator::choice()</source>
          <target state="translated">Translator::choice()</target>
        </trans-unit>
        <trans-unit id="f8e658ad7e4209ee3d6e0770b8659af7aed4fea5" translate="yes" xml:space="preserve">
          <source>Translator::get()</source>
          <target state="translated">Translator::get()</target>
        </trans-unit>
        <trans-unit id="8c7fbf04718b74c0f44222a961cb8ca68a34ab4b" translate="yes" xml:space="preserve">
          <source>Translator::getFallback()</source>
          <target state="translated">Translator::getFallback()</target>
        </trans-unit>
        <trans-unit id="06a629824ce40e421a645d74a8bd983635a907b7" translate="yes" xml:space="preserve">
          <source>Translator::getFromJson()</source>
          <target state="translated">Translator::getFromJson()</target>
        </trans-unit>
        <trans-unit id="fb535d2484004ad584c5bb5fc197aa3c51b44747" translate="yes" xml:space="preserve">
          <source>Translator::getLine()</source>
          <target state="translated">Translator::getLine()</target>
        </trans-unit>
        <trans-unit id="f767f4cbfcb0184ac9e6a73006265cb7c44fbf2e" translate="yes" xml:space="preserve">
          <source>Translator::getLoader()</source>
          <target state="translated">Translator::getLoader()</target>
        </trans-unit>
        <trans-unit id="f327547672c3398305b145971f1faeca39244438" translate="yes" xml:space="preserve">
          <source>Translator::getLocale()</source>
          <target state="translated">Translator::getLocale()</target>
        </trans-unit>
        <trans-unit id="c7768ffce3a502eccbcf461ce8bd917ea04e91de" translate="yes" xml:space="preserve">
          <source>Translator::getSelector()</source>
          <target state="translated">Translator::getSelector()</target>
        </trans-unit>
        <trans-unit id="3bb68bdafe205112070cf111c5cbe4218922d2c2" translate="yes" xml:space="preserve">
          <source>Translator::has()</source>
          <target state="translated">Translator::has()</target>
        </trans-unit>
        <trans-unit id="9b4885166d31817e5b3dad6d0e5438eb136cd778" translate="yes" xml:space="preserve">
          <source>Translator::hasForLocale()</source>
          <target state="translated">Translator::hasForLocale()</target>
        </trans-unit>
        <trans-unit id="a17cacdba92342c2551e4a172b97a9731ed216ec" translate="yes" xml:space="preserve">
          <source>Translator::isLoaded()</source>
          <target state="translated">Translator::isLoaded()</target>
        </trans-unit>
        <trans-unit id="27e5b0eeb401cf522b1fd772e940d0c5e7df0ab6" translate="yes" xml:space="preserve">
          <source>Translator::load()</source>
          <target state="translated">Translator::load()</target>
        </trans-unit>
        <trans-unit id="b727c6f7295c3d729584db1e6557ea6afbafd62e" translate="yes" xml:space="preserve">
          <source>Translator::locale()</source>
          <target state="translated">Translator::locale()</target>
        </trans-unit>
        <trans-unit id="0b51cbd93f60d59e5718114fbb8e3c8d98387939" translate="yes" xml:space="preserve">
          <source>Translator::localeArray()</source>
          <target state="translated">Translator::localeArray()</target>
        </trans-unit>
        <trans-unit id="8c43abd6b8f0e4cc58939727230088294dbb2a08" translate="yes" xml:space="preserve">
          <source>Translator::localeForChoice()</source>
          <target state="translated">Translator::localeForChoice()</target>
        </trans-unit>
        <trans-unit id="b18888f6f7d9104580c012f25b3490cf2f5d5825" translate="yes" xml:space="preserve">
          <source>Translator::makeReplacements()</source>
          <target state="translated">Translator::makeReplacements()</target>
        </trans-unit>
        <trans-unit id="d49af2575400a22295295eee299723b75e79bedb" translate="yes" xml:space="preserve">
          <source>Translator::parseKey()</source>
          <target state="translated">Translator::parseKey()</target>
        </trans-unit>
        <trans-unit id="e5d800a9579cbfe0fcc3b560e3f2bca0d0b2b278" translate="yes" xml:space="preserve">
          <source>Translator::setFallback()</source>
          <target state="translated">Translator::setFallback()</target>
        </trans-unit>
        <trans-unit id="4a14a700b6df4acfb5af974e1bb9ffafd1dca897" translate="yes" xml:space="preserve">
          <source>Translator::setLoaded()</source>
          <target state="translated">Translator::setLoaded()</target>
        </trans-unit>
        <trans-unit id="d6ef8a1d39c70924a81590b8669a3b7a2be2c9d4" translate="yes" xml:space="preserve">
          <source>Translator::setLocale()</source>
          <target state="translated">Translator::setLocale()</target>
        </trans-unit>
        <trans-unit id="c98ab96c6f41345239df135e251ac6ad5466442b" translate="yes" xml:space="preserve">
          <source>Translator::setSelector()</source>
          <target state="translated">Translator::setSelector()</target>
        </trans-unit>
        <trans-unit id="ed6f1ddb75f2026a0be6733aff9dec00469140b6" translate="yes" xml:space="preserve">
          <source>Translator::sortReplacements()</source>
          <target state="translated">Translator::sortReplacements()</target>
        </trans-unit>
        <trans-unit id="00ce90b9111e13ed3aab1ed1e226774721df6711" translate="yes" xml:space="preserve">
          <source>Translator::trans()</source>
          <target state="translated">Translator::trans()</target>
        </trans-unit>
        <trans-unit id="fe8ba7e23f2342ea1473a2450612fcd2306c7de2" translate="yes" xml:space="preserve">
          <source>Translator::transChoice()</source>
          <target state="translated">Translator::transChoice()</target>
        </trans-unit>
        <trans-unit id="e3078aebb63eb83c8a0fd5f112dfed61652115de" translate="yes" xml:space="preserve">
          <source>Transliterate a UTF-8 value to ASCII.</source>
          <target state="translated">UTF-8の値をASCIIに変換します。</target>
        </trans-unit>
        <trans-unit id="c10d76c9a4b81c39c13a3bbf7cdb7a157dfb1551" translate="yes" xml:space="preserve">
          <source>Transport</source>
          <target state="translated">Transport</target>
        </trans-unit>
        <trans-unit id="53fd1f3608c7dc4629d34c3aaa250a1eef267a0e" translate="yes" xml:space="preserve">
          <source>Transport (Mail\Transport)</source>
          <target state="translated">Transport (MailTransport)</target>
        </trans-unit>
        <trans-unit id="9a3698c4407de5652f2a2491d48ea5481470081c" translate="yes" xml:space="preserve">
          <source>Transport::beforeSendPerformed()</source>
          <target state="translated">Transport::beforeSendPerformed()</target>
        </trans-unit>
        <trans-unit id="0896a8a08e25054ed2b272dbaab125fd2fc4481d" translate="yes" xml:space="preserve">
          <source>Transport::isStarted()</source>
          <target state="translated">Transport::isStarted()</target>
        </trans-unit>
        <trans-unit id="574e31444bdd763058be79605a172d2bdc60c506" translate="yes" xml:space="preserve">
          <source>Transport::numberOfRecipients()</source>
          <target state="translated">Transport::numberOfRecipients()</target>
        </trans-unit>
        <trans-unit id="39340f42e3ded3448d708767dab39504de6a68e4" translate="yes" xml:space="preserve">
          <source>Transport::ping()</source>
          <target state="translated">Transport::ping()</target>
        </trans-unit>
        <trans-unit id="1cb14cd242558e4358abec9ad4016b510bf7e7b9" translate="yes" xml:space="preserve">
          <source>Transport::registerPlugin()</source>
          <target state="translated">Transport::registerPlugin()</target>
        </trans-unit>
        <trans-unit id="f8b9fb8246ce25f938740256db9d1c75662299d3" translate="yes" xml:space="preserve">
          <source>Transport::sendPerformed()</source>
          <target state="translated">Transport::sendPerformed()</target>
        </trans-unit>
        <trans-unit id="c82a76172f865d5951ddacb98bef5d2dc08b2b3f" translate="yes" xml:space="preserve">
          <source>Transport::start()</source>
          <target state="translated">Transport::start()</target>
        </trans-unit>
        <trans-unit id="dff5f8bf527727eb9e5e42a4e247da56db0b1abd" translate="yes" xml:space="preserve">
          <source>Transport::stop()</source>
          <target state="translated">Transport::stop()</target>
        </trans-unit>
        <trans-unit id="348527f5c76c34673a5590763d2840949bfc15a3" translate="yes" xml:space="preserve">
          <source>TransportManager</source>
          <target state="translated">TransportManager</target>
        </trans-unit>
        <trans-unit id="4ab1542be2b820af1ebc031871c0aeec1e1bd395" translate="yes" xml:space="preserve">
          <source>TransportManager (Mail)</source>
          <target state="translated">トランスポートマネージャ(メール</target>
        </trans-unit>
        <trans-unit id="d454752176a3136381888d895311e8f629b5a9d8" translate="yes" xml:space="preserve">
          <source>TransportManager::addSesCredentials()</source>
          <target state="translated">TransportManager::addSesCredentials()</target>
        </trans-unit>
        <trans-unit id="137d60740276ca9d26588a9d77205536c05b93d9" translate="yes" xml:space="preserve">
          <source>TransportManager::createArrayDriver()</source>
          <target state="translated">TransportManager::createArrayDriver()</target>
        </trans-unit>
        <trans-unit id="9fdfaf571e8160dd2e36aa8c1dce1e8c3113852a" translate="yes" xml:space="preserve">
          <source>TransportManager::createLogDriver()</source>
          <target state="translated">TransportManager::createLogDriver()</target>
        </trans-unit>
        <trans-unit id="5c70e3e581c1512df21febf4d22b6274566cebb9" translate="yes" xml:space="preserve">
          <source>TransportManager::createMailDriver()</source>
          <target state="translated">TransportManager::createMailDriver()</target>
        </trans-unit>
        <trans-unit id="907a9925dc69e1c4df03578fab4b518eee4a4c46" translate="yes" xml:space="preserve">
          <source>TransportManager::createMailgunDriver()</source>
          <target state="translated">TransportManager::createMailgunDriver()</target>
        </trans-unit>
        <trans-unit id="45347adbe9508de06da89a9ddbadccff860b0f60" translate="yes" xml:space="preserve">
          <source>TransportManager::createMandrillDriver()</source>
          <target state="translated">TransportManager::createMandrillDriver()</target>
        </trans-unit>
        <trans-unit id="07d756976790ffe2ac599b36e34047a89b023cf9" translate="yes" xml:space="preserve">
          <source>TransportManager::createSendmailDriver()</source>
          <target state="translated">TransportManager::createSendmailDriver()</target>
        </trans-unit>
        <trans-unit id="119249c4b9f5744cacabbb2dc96109263980cf9c" translate="yes" xml:space="preserve">
          <source>TransportManager::createSesDriver()</source>
          <target state="translated">TransportManager::createSesDriver()</target>
        </trans-unit>
        <trans-unit id="5f0a74e828ba32a0c503d0ecef6a33e8d7f94dc4" translate="yes" xml:space="preserve">
          <source>TransportManager::createSmtpDriver()</source>
          <target state="translated">TransportManager::createSmtpDriver()</target>
        </trans-unit>
        <trans-unit id="338c8692ea6cf03061ab91763132bea1ad2a2842" translate="yes" xml:space="preserve">
          <source>TransportManager::createSparkPostDriver()</source>
          <target state="translated">TransportManager::createSparkPostDriver()</target>
        </trans-unit>
        <trans-unit id="b5c19bee2b486433a6281aadb2bbd5609bbf249b" translate="yes" xml:space="preserve">
          <source>TransportManager::getDefaultDriver()</source>
          <target state="translated">TransportManager::getDefaultDriver()</target>
        </trans-unit>
        <trans-unit id="0c4b7372dccdede8bbd6247a7fe5bb08e4e3db19" translate="yes" xml:space="preserve">
          <source>TransportManager::guzzle()</source>
          <target state="translated">TransportManager::guzzle()</target>
        </trans-unit>
        <trans-unit id="3a58000114cdf9df0dcb03b1763523a0c0a9c449" translate="yes" xml:space="preserve">
          <source>TransportManager::setDefaultDriver()</source>
          <target state="translated">TransportManager::setDefaultDriver()</target>
        </trans-unit>
        <trans-unit id="89e581f1b56f0e9ddaa6c57b46dc7d03c4f48a4d" translate="yes" xml:space="preserve">
          <source>Travis CI</source>
          <target state="translated">トラビスCI</target>
        </trans-unit>
        <trans-unit id="42c3405d1604503a7c71a50d39464993257565f7" translate="yes" xml:space="preserve">
          <source>TrimStrings</source>
          <target state="translated">TrimStrings</target>
        </trans-unit>
        <trans-unit id="f13249d2492a1d94e2aaea76b44b60b1d8fdf32c" translate="yes" xml:space="preserve">
          <source>TrimStrings (Foundation\Http)</source>
          <target state="translated">TrimStrings (FoundationHttp)</target>
        </trans-unit>
        <trans-unit id="ffb61cfa7c211442685b765ba5fbe6a6c0de65b6" translate="yes" xml:space="preserve">
          <source>TrimStrings::transform()</source>
          <target state="translated">TrimStrings::transform()</target>
        </trans-unit>
        <trans-unit id="c492359c9644362a44d310c80aeaa60ad9983f68" translate="yes" xml:space="preserve">
          <source>Trusting All Proxies</source>
          <target state="translated">すべてのプロキシを信頼する</target>
        </trans-unit>
        <trans-unit id="783d8ac11c0b42c21fde826c688d61117460f3c0" translate="yes" xml:space="preserve">
          <source>Truth Test Constraints</source>
          <target state="translated">真理テストの制約</target>
        </trans-unit>
        <trans-unit id="f4928c2c8acd69985bbd8af6b576c35718f54b65" translate="yes" xml:space="preserve">
          <source>Two important columns to note are the &lt;code&gt;commentable_id&lt;/code&gt; and &lt;code&gt;commentable_type&lt;/code&gt; columns on the &lt;code&gt;comments&lt;/code&gt; table. The &lt;code&gt;commentable_id&lt;/code&gt; column will contain the ID value of the post or video, while the &lt;code&gt;commentable_type&lt;/code&gt; column will contain the class name of the owning model. The &lt;code&gt;commentable_type&lt;/code&gt; column is how the ORM determines which &quot;type&quot; of owning model to return when accessing the &lt;code&gt;commentable&lt;/code&gt; relation.</source>
          <target state="translated">ノートには2つの重要な列は &lt;code&gt;commentable_id&lt;/code&gt; と &lt;code&gt;commentable_type&lt;/code&gt; のカラム &lt;code&gt;comments&lt;/code&gt; テーブル。 &lt;code&gt;commentable_id&lt;/code&gt; ながら列には、ポストやビデオのID値が含まれます &lt;code&gt;commentable_type&lt;/code&gt; の列が所有しているモデルのクラス名が含まれています。 &lt;code&gt;commentable_type&lt;/code&gt; の列には、ORMがアクセスしたときに返すためにモデルを所有しているのどの「タイプ」を決定する方法である &lt;code&gt;commentable&lt;/code&gt; 関係を。</target>
        </trans-unit>
        <trans-unit id="467a662930545928b625fc9eb71668342fa78a98" translate="yes" xml:space="preserve">
          <source>Two of the primary benefits of using Blade are &lt;em&gt;template inheritance&lt;/em&gt; and &lt;em&gt;sections&lt;/em&gt;. To get started, let's take a look at a simple example. First, we will examine a &quot;master&quot; page layout. Since most web applications maintain the same general layout across various pages, it's convenient to define this layout as a single Blade view:</source>
          <target state="translated">ブレードを使用する主な利点の2つは、&lt;em&gt;テンプレートの継承&lt;/em&gt;と&lt;em&gt;セクションです&lt;/em&gt;。はじめに、簡単な例を見てみましょう。最初に、「マスター」ページのレイアウトを調べます。ほとんどのWebアプリケーションはさまざまなページで同じ一般的なレイアウトを維持するため、このレイアウトを単一のブレードビューとして定義すると便利です。</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="fc0cab06a1bd741742fdd6b8b63b561aea8d7477" translate="yes" xml:space="preserve">
          <source>Type-Hinting Dependencies</source>
          <target state="translated">タイプヒントの依存関係</target>
        </trans-unit>
        <trans-unit id="a94e652ac375c1a94078c9bb4d7c4a8be4293a21" translate="yes" xml:space="preserve">
          <source>Typical Eloquent foreign key conventions will be used when performing the relationship's queries. If you would like to customize the keys of the relationship, you may pass them as the third and fourth arguments to the &lt;code&gt;hasManyThrough&lt;/code&gt; method. The third argument is the name of the foreign key on the intermediate model. The fourth argument is the name of the foreign key on the final model. The fifth argument is the local key, while the sixth argument is the local key of the intermediate model:</source>
          <target state="translated">リレーションシップのクエリを実行するときは、典型的なEloquent外部キーの規則が使用されます。リレーションシップのキーをカスタマイズしたい場合は、それらを3番目と4番目の引数として &lt;code&gt;hasManyThrough&lt;/code&gt; メソッドに渡すことができます。3番目の引数は、中間モデルの外部キーの名前です。4番目の引数は、最終モデルの外部キーの名前です。5番目の引数はローカルキーですが、6番目の引数は中間モデルのローカルキーです。</target>
        </trans-unit>
        <trans-unit id="c8332f2b01cadebb5b2480bc3f6c55203b172aea" translate="yes" xml:space="preserve">
          <source>Typically, events should be registered via the &lt;code&gt;EventServiceProvider&lt;/code&gt;&lt;code&gt;$listen&lt;/code&gt; array; however, you may also register Closure based events manually in the &lt;code&gt;boot&lt;/code&gt; method of your &lt;code&gt;EventServiceProvider&lt;/code&gt;:</source>
          <target state="translated">通常、イベントは &lt;code&gt;EventServiceProvider&lt;/code&gt; &lt;code&gt;$listen&lt;/code&gt; 配列を介して登録する必要があります。ただし、 &lt;code&gt;EventServiceProvider&lt;/code&gt; の &lt;code&gt;boot&lt;/code&gt; メソッドでClosureベースのイベントを手動で登録することもできます。</target>
        </trans-unit>
        <trans-unit id="0b40f7c14f2637e6f42618d3e4b0f83d978858ac" translate="yes" xml:space="preserve">
          <source>Typically, if you want to consume your API from your JavaScript application, you would need to manually send an access token to the application and pass it with each request to your application. However, Passport includes a middleware that can handle this for you. All you need to do is add the &lt;code&gt;CreateFreshApiToken&lt;/code&gt; middleware to your &lt;code&gt;web&lt;/code&gt; middleware group in your &lt;code&gt;app/Http/Kernel.php&lt;/code&gt; file:</source>
          <target state="translated">通常、JavaScriptアプリケーションからAPIを使用する場合は、アクセストークンを手動でアプリケーションに送信し、アプリケーションへのリクエストごとにそれを渡す必要があります。ただし、Passportには、これを処理できるミドルウェアが含まれています。必要なことは、 &lt;code&gt;CreateFreshApiToken&lt;/code&gt; ミドルウェアを &lt;code&gt;app/Http/Kernel.php&lt;/code&gt; ファイルの &lt;code&gt;web&lt;/code&gt; ミドルウェアグループに追加することだけです。</target>
        </trans-unit>
        <trans-unit id="05b5eaabeb508e3a6aeaeda163163369c747d9d9" translate="yes" xml:space="preserve">
          <source>Typically, it would not be possible to mock or stub a truly static class method. However, since facades use dynamic methods to proxy method calls to objects resolved from the service container, we actually can test facades just as we would test an injected class instance. For example, given the following route:</source>
          <target state="translated">通常、本当に静的なクラスメソッドをモックしたりスタブしたりすることはできません。しかし、ファサードはサービスコンテナから解決されたオブジェクトへのメソッド呼び出しをプロキシするために動的メソッドを使用するので、実際には注入されたクラスインスタンスをテストするのと同じようにファサードをテストすることができます。例えば、以下のようなルートが与えられたとします。</target>
        </trans-unit>
        <trans-unit id="d4f519996ec88fd36cfd12ff886a1080eb9e52ec" translate="yes" xml:space="preserve">
          <source>Typically, notifications should be short, informational messages that notify users of something that occurred in your application. For example, if you are writing a billing application, you might send an &quot;Invoice Paid&quot; notification to your users via the email and SMS channels.</source>
          <target state="translated">一般的に、通知はアプリケーションで何かが起こったことをユーザに通知する短い情報メッセージでなければなりません。例えば、課金アプリケーションを書いている場合、&quot;Invoice Paid&quot; 通知をメールや SMS チャンネルを介してユーザに送信することができます。</target>
        </trans-unit>
        <trans-unit id="296917a2a8be921a07ccbcdb2a3fbd08e01122d5" translate="yes" xml:space="preserve">
          <source>Typically, the &lt;code&gt;$this-&amp;gt;collection&lt;/code&gt; property of a resource collection is automatically populated with the result of mapping each item of the collection to its singular resource class. The singular resource class is assumed to be the collection's class name without the trailing &lt;code&gt;Collection&lt;/code&gt; string.</source>
          <target state="translated">通常、リソースコレクションの &lt;code&gt;$this-&amp;gt;collection&lt;/code&gt; プロパティには、コレクションの各アイテムを単一のリソースクラスにマッピングした結果が自動的に入力されます。単一のリソースクラスは、末尾の &lt;code&gt;Collection&lt;/code&gt; 文字列のないコレクションのクラス名であると想定されます。</target>
        </trans-unit>
        <trans-unit id="735ee9ac75dd65d29fb3a80c4a907d9f53b9b052" translate="yes" xml:space="preserve">
          <source>Typically, this string should be 32 characters long. The key can be set in the &lt;code&gt;.env&lt;/code&gt; environment file. If you have not renamed the &lt;code&gt;.env.example&lt;/code&gt; file to &lt;code&gt;.env&lt;/code&gt;, you should do that now. &lt;strong&gt;If the application key is not set, your user sessions and other encrypted data will not be secure!&lt;/strong&gt;</source>
          <target state="translated">通常、この文字列は32文字の長さにする必要があります。キーは &lt;code&gt;.env&lt;/code&gt; 環境ファイルで設定できます。あなたが名前を変更していない場合は &lt;code&gt;.env.example&lt;/code&gt; にファイルを &lt;code&gt;.env&lt;/code&gt; 、あなたは今それを行う必要があります。&lt;strong&gt;アプリケーションキーが設定されていない場合、ユーザーセッションやその他の暗号化されたデータは保護されません。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6c94b132adaaf3d9eae912c7a7fce8bd770e3743" translate="yes" xml:space="preserve">
          <source>Typically, translation strings are stored in files within the &lt;code&gt;resources/lang&lt;/code&gt; directory. Within this directory there should be a subdirectory for each language supported by the application:</source>
          <target state="translated">通常、翻訳文字列は、 &lt;code&gt;resources/lang&lt;/code&gt; ディレクトリ内のファイルに保存されます。このディレクトリ内には、アプリケーションでサポートされている各言語のサブディレクトリがあります。</target>
        </trans-unit>
        <trans-unit id="d4c18c8a9600dbd0fd2eecd227ca5ed7663b9dad" translate="yes" xml:space="preserve">
          <source>Typically, you should declare collection macros in a &lt;a href=&quot;providers&quot;&gt;service provider&lt;/a&gt;.</source>
          <target state="translated">通常、コレクションマクロは&lt;a href=&quot;providers&quot;&gt;サービスプロバイダー&lt;/a&gt;で宣言する必要があります。</target>
        </trans-unit>
        <trans-unit id="535ba5a71485075e9f1036212466b10b75ed9d72" translate="yes" xml:space="preserve">
          <source>Typically, you should place these kinds of routes outside of the &lt;code&gt;web&lt;/code&gt; middleware group that the &lt;code&gt;RouteServiceProvider&lt;/code&gt; applies to all routes in the &lt;code&gt;routes/web.php&lt;/code&gt; file. However, you may also exclude the routes by adding their URIs to the &lt;code&gt;$except&lt;/code&gt; property of the &lt;code&gt;VerifyCsrfToken&lt;/code&gt; middleware:</source>
          <target state="translated">通常、これらの種類のルートは、 &lt;code&gt;RouteServiceProvider&lt;/code&gt; が &lt;code&gt;routes/web.php&lt;/code&gt; ファイル内のすべてのルートに適用される &lt;code&gt;web&lt;/code&gt; ミドルウェアグループの外部に配置する必要があります。ただし、URIを &lt;code&gt;VerifyCsrfToken&lt;/code&gt; ミドルウェアの &lt;code&gt;$except&lt;/code&gt; プロパティに追加して、ルートを除外することもできます。</target>
        </trans-unit>
        <trans-unit id="0ffe02392ca72c0ffb3ef8571a10ff56e42aaf06" translate="yes" xml:space="preserve">
          <source>Typically, you will need to publish your package's configuration file to the application's own &lt;code&gt;config&lt;/code&gt; directory. This will allow users of your package to easily override your default configuration options. To allow your configuration files to be published, call the &lt;code&gt;publishes&lt;/code&gt; method from the &lt;code&gt;boot&lt;/code&gt; method of your service provider:</source>
          <target state="translated">通常は、アプリケーションの独自にあなたのパッケージの設定ファイルを公開する必要があります &lt;code&gt;config&lt;/code&gt; ディレクトリ。これにより、パッケージのユーザーはデフォルトの構成オプションを簡単に上書きできます。構成ファイルを公開できるようにするには、サービスプロバイダーの &lt;code&gt;boot&lt;/code&gt; メソッドから &lt;code&gt;publishes&lt;/code&gt; メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="3cfb59d46bbe01f5debf7f30e1599f2180076b53" translate="yes" xml:space="preserve">
          <source>Typically, you will want to mark a notification as &quot;read&quot; when a user views it. The &lt;code&gt;Illuminate\Notifications\Notifiable&lt;/code&gt; trait provides a &lt;code&gt;markAsRead&lt;/code&gt; method, which updates the &lt;code&gt;read_at&lt;/code&gt; column on the notification's database record:</source>
          <target state="translated">通常、ユーザーが通知を表示したときに、通知を「既読」としてマークします。 &lt;code&gt;Illuminate\Notifications\Notifiable&lt;/code&gt; トレイト提供 &lt;code&gt;markAsRead&lt;/code&gt; の更新方法、 &lt;code&gt;read_at&lt;/code&gt; 通知のデータベース・レコードの列を：</target>
        </trans-unit>
        <trans-unit id="44afa892e3c4cc5b03a8bac17155555f26b5da6b" translate="yes" xml:space="preserve">
          <source>Typically, you will want to pass some data to your view that you can utilize when rendering the email's HTML. There are two ways you may make data available to your view. First, any public property defined on your mailable class will automatically be made available to the view. So, for example, you may pass data into your mailable class' constructor and set that data to public properties defined on the class:</source>
          <target state="translated">通常、メールの HTML をレンダリングする際に利用できるデータをビューに渡す必要があります。データをビューで利用できるようにするには、2つの方法があります。まず、メール可能クラスで定義されているパブリックプロパティは、自動的にビューで利用可能になります。例えば、メーラブルクラスのコンストラクタにデータを渡し、そのデータをクラスに定義されたパブリックプロパティに設定することができます。</target>
        </trans-unit>
        <trans-unit id="04d5402187271595cbeac2d262033e3372090d34" translate="yes" xml:space="preserve">
          <source>Typically, you won't just be returning simple strings or arrays from your route actions. Instead, you will be returning full &lt;code&gt;Illuminate\Http\Response&lt;/code&gt; instances or &lt;a href=&quot;views&quot;&gt;views&lt;/a&gt;.</source>
          <target state="translated">通常、ルートアクションから単純な文字列や配列を返すだけではありません。代わりに、完全な &lt;code&gt;Illuminate\Http\Response&lt;/code&gt; インスタンスまたは&lt;a href=&quot;views&quot;&gt;ビューを&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="4a61fe5e239019d1661a709c3259c8559061fec9" translate="yes" xml:space="preserve">
          <source>Typing Values</source>
          <target state="translated">タイピング値</target>
        </trans-unit>
        <trans-unit id="5bda711f43a583c45406bf46c954a905f2ba7ce7" translate="yes" xml:space="preserve">
          <source>UNSIGNED BIGINT equivalent column.</source>
          <target state="translated">UNSIGNED BIGINT相当の列。</target>
        </trans-unit>
        <trans-unit id="e03eee26fc7887b9056288f86e3bdf804ef59546" translate="yes" xml:space="preserve">
          <source>UNSIGNED DECIMAL equivalent column with a precision (total digits) and scale (decimal digits).</source>
          <target state="translated">精度(総桁数)と目盛(10進数)を持つUNSIGNED DECIMAL相当の列。</target>
        </trans-unit>
        <trans-unit id="c3dd5a319fde30a675b0b4b68b7cc36dd2ce7442" translate="yes" xml:space="preserve">
          <source>UNSIGNED INTEGER equivalent column.</source>
          <target state="translated">UNSIGNED INTEGER相当の列です。</target>
        </trans-unit>
        <trans-unit id="19e0dd9a64224d3ecf365ffb19a1abb152cdf288" translate="yes" xml:space="preserve">
          <source>UNSIGNED MEDIUMINT equivalent column.</source>
          <target state="translated">UNSIGNED MEDIUMINT相当の列。</target>
        </trans-unit>
        <trans-unit id="ee44c22a63696c24a9e3971e0ef29cd69d50e62f" translate="yes" xml:space="preserve">
          <source>UNSIGNED SMALLINT equivalent column.</source>
          <target state="translated">UNSIGNED SMALLINT相当の列。</target>
        </trans-unit>
        <trans-unit id="ff003a2e20467103dc95ab390476fd279d19adc1" translate="yes" xml:space="preserve">
          <source>UNSIGNED TINYINT equivalent column.</source>
          <target state="translated">UNSIGNED TINYINTに相当する列。</target>
        </trans-unit>
        <trans-unit id="969889215d3804c32a99c97486cf4c2be8200d66" translate="yes" xml:space="preserve">
          <source>UPDATED_AT</source>
          <target state="translated">UPDATED_AT</target>
        </trans-unit>
        <trans-unit id="cb371c93c5aa0e62198efd303ae2c17474416d1a" translate="yes" xml:space="preserve">
          <source>URI</source>
          <target state="translated">URI</target>
        </trans-unit>
        <trans-unit id="0e2d9b0777a485c1276de0803c12a7d76fbc5c39" translate="yes" xml:space="preserve">
          <source>URL</source>
          <target state="translated">URL</target>
        </trans-unit>
        <trans-unit id="a2ff1b89306266fdfb7dd3cf39c2b7aae264eb1b" translate="yes" xml:space="preserve">
          <source>URL (Support\Facades)</source>
          <target state="translated">URL (SupportFacades)</target>
        </trans-unit>
        <trans-unit id="99626f5a4c900275b7580bbbb16c9ce11a67c90a" translate="yes" xml:space="preserve">
          <source>URL Generation</source>
          <target state="translated">生成URL</target>
        </trans-unit>
        <trans-unit id="27d83fd095a3b51079fa9ae8ae8171abb85ef82e" translate="yes" xml:space="preserve">
          <source>URL Generator &amp;amp; Callable Syntax</source>
          <target state="translated">URLジェネレーターと呼び出し可能な構文</target>
        </trans-unit>
        <trans-unit id="6250a4626287c0bcd6af545e309c6a117d332ba3" translate="yes" xml:space="preserve">
          <source>URL Processing</source>
          <target state="translated">URL処理</target>
        </trans-unit>
        <trans-unit id="b863134024e3bf201723778dc23ae884c4298f10" translate="yes" xml:space="preserve">
          <source>URL::getFacadeAccessor()</source>
          <target state="translated">URL::getFacadeAccessor()</target>
        </trans-unit>
        <trans-unit id="01f03837323aab32409bb99c50d6c475179c49df" translate="yes" xml:space="preserve">
          <source>URLs</source>
          <target state="translated">URLs</target>
        </trans-unit>
        <trans-unit id="32940a1c4f5724ee6d9d18524938fce491d078ce" translate="yes" xml:space="preserve">
          <source>URLs For Controller Actions</source>
          <target state="translated">コントローラアクションのURL</target>
        </trans-unit>
        <trans-unit id="c9861bfde4322bd47b9bcc5fbe6e9b031d7be01e" translate="yes" xml:space="preserve">
          <source>URLs For Named Routes</source>
          <target state="translated">指定されたルートのURL</target>
        </trans-unit>
        <trans-unit id="e7817261c2a27fb49cb7da1109db45cd0b897251" translate="yes" xml:space="preserve">
          <source>UUID equivalent column.</source>
          <target state="translated">UUIDに相当する列。</target>
        </trans-unit>
        <trans-unit id="cd195acce4959407bbecd28a63a95b159a75424d" translate="yes" xml:space="preserve">
          <source>Ubuntu 18.04</source>
          <target state="translated">Ubuntu 18.04</target>
        </trans-unit>
        <trans-unit id="07869ad9b7845828aeca7f1485ba710b2dc5535e" translate="yes" xml:space="preserve">
          <source>Ultimately, this makes it easier to avoid &quot;N+1&quot; query problems within your resources. The &lt;code&gt;whenLoaded&lt;/code&gt; method may be used to conditionally load a relationship. In order to avoid unnecessarily loading relationships, this method accepts the name of the relationship instead of the relationship itself:</source>
          <target state="translated">最終的に、これにより、リソース内の「N + 1」クエリの問題を簡単に回避できます。 &lt;code&gt;whenLoaded&lt;/code&gt; 方法は、条件付きの関係をロードするために使用されてもよいです。関係を不必要にロードすることを避けるために、このメソッドは関係自体の代わりに関係の名前を受け入れます。</target>
        </trans-unit>
        <trans-unit id="d0b6cea0c96c89e4e4c2e88b35054671c085ffd9" translate="yes" xml:space="preserve">
          <source>UnauthorizedException</source>
          <target state="translated">UnauthorizedException</target>
        </trans-unit>
        <trans-unit id="35998d02e20191f89b93e5327fd111e82dcf5a93" translate="yes" xml:space="preserve">
          <source>UnauthorizedException (Validation)</source>
          <target state="translated">UnauthorizedException (Validation)</target>
        </trans-unit>
        <trans-unit id="5e88dc1eddd83be73576dd3417e0313df0fdfb4f" translate="yes" xml:space="preserve">
          <source>UnauthorizedHttpException</source>
          <target state="translated">UnauthorizedHttpException</target>
        </trans-unit>
        <trans-unit id="869b9de9f915a255d9939e696b2bc052f345da58" translate="yes" xml:space="preserve">
          <source>Uncountable word forms.</source>
          <target state="translated">数えられない単語の形。</target>
        </trans-unit>
        <trans-unit id="abb763f9dea77985f6c5124d9ac058ea2db81530" translate="yes" xml:space="preserve">
          <source>Under the hood, Laravel utilizes the &lt;a href=&quot;https://github.com/Seldaek/monolog&quot;&gt;Monolog&lt;/a&gt; library, which provides support for a variety of powerful log handlers. Laravel makes it a cinch to configure these handlers, allowing you to mix and match them to customize your application's log handling.</source>
          <target state="translated">内部的には、Laravelは&lt;a href=&quot;https://github.com/Seldaek/monolog&quot;&gt;Monolog&lt;/a&gt;ライブラリを利用しており、さまざまな強力なログハンドラをサポートしています。Laravelは、これらのハンドラーを構成するのを簡単にし、それらを混合して一致させて、アプリケーションのログ処理をカスタマイズできるようにします。</target>
        </trans-unit>
        <trans-unit id="7a37f9d2b0e71dad0332527a62a587f91eef4b74" translate="yes" xml:space="preserve">
          <source>Under the hood, the &lt;code&gt;cache&lt;/code&gt; helper is going to call the &lt;code&gt;get&lt;/code&gt; method on the class underlying the &lt;code&gt;Cache&lt;/code&gt; facade. So, even though we are using the helper function, we can write the following test to verify that the method was called with the argument we expected:</source>
          <target state="translated">内部的には、 &lt;code&gt;cache&lt;/code&gt; ヘルパーは、 &lt;code&gt;Cache&lt;/code&gt; ファサードの基になるクラスで &lt;code&gt;get&lt;/code&gt; メソッドを呼び出します。したがって、ヘルパー関数を使用している場合でも、次のテストを記述して、メソッドが期待した引数で呼び出されたことを確認できます。</target>
        </trans-unit>
        <trans-unit id="750d588b4487042bc3cb4df2f07a673b613d2ee0" translate="yes" xml:space="preserve">
          <source>UnexpectedValueException</source>
          <target state="translated">UnexpectedValueException</target>
        </trans-unit>
        <trans-unit id="5e38e0b07f9b18e7261ca02b5a2ad3ba15f29bfa" translate="yes" xml:space="preserve">
          <source>Unicode Content</source>
          <target state="translated">ユニコードコンテンツ</target>
        </trans-unit>
        <trans-unit id="313f6ac7158154d571bf6bf60f8a41f3199887c3" translate="yes" xml:space="preserve">
          <source>Uninstall the Valet daemon entirely.</source>
          <target state="translated">Valet デーモンを完全にアンインストールします。</target>
        </trans-unit>
        <trans-unit id="a7f6fb72911fd3490eb3210219daae3c1d77f8c6" translate="yes" xml:space="preserve">
          <source>Union the collection with the given items.</source>
          <target state="translated">与えられたアイテムとコレクションを結合します。</target>
        </trans-unit>
        <trans-unit id="00002b164c08859d5a15579e55c8f17ce6478546" translate="yes" xml:space="preserve">
          <source>Unions</source>
          <target state="translated">Unions</target>
        </trans-unit>
        <trans-unit id="87c6f410754d2f5d42cbccc33576be0d5edc865c" translate="yes" xml:space="preserve">
          <source>Unique</source>
          <target state="translated">Unique</target>
        </trans-unit>
        <trans-unit id="e4286fc9472d175a44248d76c7be621486e35980" translate="yes" xml:space="preserve">
          <source>Unique (Validation\Rules)</source>
          <target state="translated">Unique (ValidationRules)</target>
        </trans-unit>
        <trans-unit id="04d91cab5caa2d39c0a4a55c48559fa030b56996" translate="yes" xml:space="preserve">
          <source>Unique::__toString()</source>
          <target state="translated">Unique::__toString()</target>
        </trans-unit>
        <trans-unit id="65a74a72e4ea3969054b3da600a94655bebe2809" translate="yes" xml:space="preserve">
          <source>Unique::ignore()</source>
          <target state="translated">Unique::ignore()</target>
        </trans-unit>
        <trans-unit id="a6f715dcf805ab87f2c27d5026e65bd042072b4b" translate="yes" xml:space="preserve">
          <source>Unique::ignoreModel()</source>
          <target state="translated">Unique::ignoreModel()</target>
        </trans-unit>
        <trans-unit id="a42a000167a82dfbca8440a95cea4046b369bd1b" translate="yes" xml:space="preserve">
          <source>Universal To</source>
          <target state="translated">ユニバーサルツー</target>
        </trans-unit>
        <trans-unit id="15af64a17a16be21eea3c0397cbef630f7cae431" translate="yes" xml:space="preserve">
          <source>Unlike facades, which do not require you to require them in your class' constructor, contracts allow you to define explicit dependencies for your classes. Some developers prefer to explicitly define their dependencies in this way and therefore prefer to use contracts, while other developers enjoy the convenience of facades.</source>
          <target state="translated">クラスのコンストラクタで必要としないファサードとは異なり、コントラクトではクラスの依存関係を明示的に定義することができます。この方法で依存関係を明示的に定義することを好む開発者もいれば、ファサードの便利さを享受する開発者もいます。</target>
        </trans-unit>
        <trans-unit id="df3660864ac96501205f2b18444128c21bf72ea2" translate="yes" xml:space="preserve">
          <source>Unlike most other collection methods, &lt;code&gt;forget&lt;/code&gt; does not return a new modified collection; it modifies the collection it is called on.</source>
          <target state="translated">他のほとんどのコレクションメソッドとは異なり、 &lt;code&gt;forget&lt;/code&gt; は新しい変更されたコレクションを返しません。呼び出されたコレクションを変更します。</target>
        </trans-unit>
        <trans-unit id="7e0edb2c8b91ae6881442e750bef8566fcff6fd7" translate="yes" xml:space="preserve">
          <source>Unlike most other collection methods, &lt;code&gt;transform&lt;/code&gt; modifies the collection itself. If you wish to create a new collection instead, use the &lt;a href=&quot;#method-map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">他のほとんどのコレクションメソッドとは異なり、 &lt;code&gt;transform&lt;/code&gt; はコレクション自体を変更します。代わりに新しいコレクションを作成する場合は、&lt;a href=&quot;#method-map&quot;&gt; &lt;code&gt;map&lt;/code&gt; &lt;/a&gt;メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="4e2e857a6e1df693c6239dd9b9712cbc75d6a5b5" translate="yes" xml:space="preserve">
          <source>Unlike traditional static method calls, &lt;a href=&quot;facades&quot;&gt;facades&lt;/a&gt; may be mocked. This provides a great advantage over traditional static methods and grants you the same testability you would have if you were using dependency injection. When testing, you may often want to mock a call to a Laravel facade in one of your controllers. For example, consider the following controller action:</source>
          <target state="translated">従来の静的メソッド呼び出しとは異なり、&lt;a href=&quot;facades&quot;&gt;ファサード&lt;/a&gt;はモックされている場合があります。これは、従来の静的メソッドに比べて大きな利点を提供し、依存性注入を使用した場合と同じテスト容易性を提供します。テスト時には、コントローラーの1つにあるLaravelファサードへの呼び出しを模擬したい場合があります。たとえば、次のコントローラーアクションを考えてみます。</target>
        </trans-unit>
        <trans-unit id="1aa3965966efcf18122d576ca7bc093bba8fbdb8" translate="yes" xml:space="preserve">
          <source>Unserialize the data if needed.</source>
          <target state="translated">必要に応じてデータをアンシリアライズします。</target>
        </trans-unit>
        <trans-unit id="5bf7c0ff451bed65a9c2e4e1fe482dae6b81a123" translate="yes" xml:space="preserve">
          <source>Unserialize the given value.</source>
          <target state="translated">与えられた値をアンシリアライズします。</target>
        </trans-unit>
        <trans-unit id="cd6d0ada08b545e2653d6498d810b3322eea3a2f" translate="yes" xml:space="preserve">
          <source>Unserialize the value.</source>
          <target state="translated">値をアンシリアライズします。</target>
        </trans-unit>
        <trans-unit id="bdf0a99a0cfb1cab1e92001c08e290e0efb56223" translate="yes" xml:space="preserve">
          <source>Unset a configuration option.</source>
          <target state="translated">設定オプションの設定を解除します。</target>
        </trans-unit>
        <trans-unit id="a90c92ae24574960012fc865d8f004d1b1c3101f" translate="yes" xml:space="preserve">
          <source>Unset a loaded relationship.</source>
          <target state="translated">負荷のかかった関係を解除します。</target>
        </trans-unit>
        <trans-unit id="aeb5904c46fe8d323c82deb5faf0054d24da62d9" translate="yes" xml:space="preserve">
          <source>Unset a parameter on the route if it is set.</source>
          <target state="translated">ルート上のパラメータが設定されている場合、設定を解除します。</target>
        </trans-unit>
        <trans-unit id="09d5a2d9dc1d4b088677b8b13c371ac00446afa7" translate="yes" xml:space="preserve">
          <source>Unset a piece of data from the view.</source>
          <target state="translated">ビューからデータの一部を解除します。</target>
        </trans-unit>
        <trans-unit id="e13e0f38cf2059b5f5262a594ee8df5847060466" translate="yes" xml:space="preserve">
          <source>Unset an attribute on the model.</source>
          <target state="translated">モデルの属性の設定を解除します。</target>
        </trans-unit>
        <trans-unit id="7dbb6f558d8169343d27b436d4954dfa6da7d9d9" translate="yes" xml:space="preserve">
          <source>Unset an attribute on the resource.</source>
          <target state="translated">リソースの属性の設定を解除します。</target>
        </trans-unit>
        <trans-unit id="b7029217f969563e9641c4ba12f4ae0b70864ea0" translate="yes" xml:space="preserve">
          <source>Unset the connection resolver for models.</source>
          <target state="translated">モデルの接続リゾルバの設定を解除します。</target>
        </trans-unit>
        <trans-unit id="be8adb7a8e9c689499e07a4e4e2fd35a20e6f4b4" translate="yes" xml:space="preserve">
          <source>Unset the event dispatcher for models.</source>
          <target state="translated">モデルのイベントディスパッチャの設定を解除します。</target>
        </trans-unit>
        <trans-unit id="9989c7f33bcdb6d9c9fb5a628896075a176fa7f1" translate="yes" xml:space="preserve">
          <source>Unset the event dispatcher for this connection.</source>
          <target state="translated">この接続のイベントディスパッチャの設定を解除します。</target>
        </trans-unit>
        <trans-unit id="0b7daa3ef3c66022a3deba8d0ccd067c11ab5ed5" translate="yes" xml:space="preserve">
          <source>Unset the event dispatcher instance on the connection.</source>
          <target state="translated">接続上のイベントディスパッチャインスタンスの設定を解除します。</target>
        </trans-unit>
        <trans-unit id="6caca4c2079af3469a1f9aa423844c66a6a25bfa" translate="yes" xml:space="preserve">
          <source>Unset the given disk instances.</source>
          <target state="translated">与えられたディスクインスタンスの設定を解除します。</target>
        </trans-unit>
        <trans-unit id="9cc43daff0f7a9c86c2e448c690f0777bd68810b" translate="yes" xml:space="preserve">
          <source>Unset the item at a given offset.</source>
          <target state="translated">指定されたオフセットの項目を解除します。</target>
        </trans-unit>
        <trans-unit id="9a19bf398044905ec67d259cba26b685a447fd25" translate="yes" xml:space="preserve">
          <source>Unset the item at the given key.</source>
          <target state="translated">指定されたキーで項目の設定を解除します。</target>
        </trans-unit>
        <trans-unit id="c952df7ad7ba3c3a04f544ecc2b98a97287e40a4" translate="yes" xml:space="preserve">
          <source>Unset the value at a given offset.</source>
          <target state="translated">指定されたオフセットの値を解除します。</target>
        </trans-unit>
        <trans-unit id="eeb834ea544594277d6eb0b918a39128ad861f52" translate="yes" xml:space="preserve">
          <source>Unset the value at the given offset.</source>
          <target state="translated">指定されたオフセットの値を解除します。</target>
        </trans-unit>
        <trans-unit id="541793c5701d1c15bc51625e27e54f88a0670674" translate="yes" xml:space="preserve">
          <source>Unset the value for a given offset.</source>
          <target state="translated">指定されたオフセットの値を解除します。</target>
        </trans-unit>
        <trans-unit id="f9ed626adc67df10ef841fc12e4fffbaea51e059" translate="yes" xml:space="preserve">
          <source>UpCommand</source>
          <target state="translated">UpCommand</target>
        </trans-unit>
        <trans-unit id="133cc624ca5d53bafe25787c2e1282d19812f6fb" translate="yes" xml:space="preserve">
          <source>UpCommand (Foundation)</source>
          <target state="translated">アップコマンド(ファンデーション</target>
        </trans-unit>
        <trans-unit id="25f824f86fa25bc3043f07bcfe24943270761c40" translate="yes" xml:space="preserve">
          <source>UpCommand::handle()</source>
          <target state="translated">UpCommand::handle()</target>
        </trans-unit>
        <trans-unit id="03bd1051c57685f0f9be5a94e120dda5171f4afd" translate="yes" xml:space="preserve">
          <source>Update a record in the database.</source>
          <target state="translated">データベース内のレコードを更新します。</target>
        </trans-unit>
        <trans-unit id="002f5ef3ebcfc628843d0cf7b8ddb2feb32f677c" translate="yes" xml:space="preserve">
          <source>Update an existing pivot record on the table.</source>
          <target state="translated">テーブル上の既存のピボット・レコードを更新します。</target>
        </trans-unit>
        <trans-unit id="73a1e9e01c757831d62c2c95c024ca78761b0e2b" translate="yes" xml:space="preserve">
          <source>Update the &quot;package.json&quot; file.</source>
          <target state="translated">package.json」ファイルを更新します。</target>
        </trans-unit>
        <trans-unit id="bf8b8ec88f5ac1c125a7a4611faa241b4fbc00a9" translate="yes" xml:space="preserve">
          <source>Update the &quot;remember me&quot; token for the given user in storage.</source>
          <target state="translated">ストレージ内の指定されたユーザの &quot;remember me &quot;トークンを更新します。</target>
        </trans-unit>
        <trans-unit id="8d85d72e6cbd850f06dbb495dbef9000096f3617" translate="yes" xml:space="preserve">
          <source>Update the &quot;reserved at&quot; timestamp of the job.</source>
          <target state="translated">ジョブの &quot;reserved at &quot;タイムスタンプを更新します。</target>
        </trans-unit>
        <trans-unit id="0e6cf51be4c34b3965829f09b6898ed8a890bbc9" translate="yes" xml:space="preserve">
          <source>Update the Sass files for the application.</source>
          <target state="translated">アプリケーションのSassファイルを更新します。</target>
        </trans-unit>
        <trans-unit id="e664460e77379ec3300dade4b2b4ce40ca90eef1" translate="yes" xml:space="preserve">
          <source>Update the Webpack configuration.</source>
          <target state="translated">Webpackの設定を更新します。</target>
        </trans-unit>
        <trans-unit id="11edb18c0d4b80953e40c9a3d76d1dbd22da2510" translate="yes" xml:space="preserve">
          <source>Update the bootstrapping files.</source>
          <target state="translated">ブートストラップファイルを更新します。</target>
        </trans-unit>
        <trans-unit id="905546f37849de4c75c785dd2e6d4b2a41ababf4" translate="yes" xml:space="preserve">
          <source>Update the creation and update timestamps.</source>
          <target state="translated">作成と更新のタイムスタンプを更新します。</target>
        </trans-unit>
        <trans-unit id="07f869893e250ccccf293b1a3f116d644cb41fd6" translate="yes" xml:space="preserve">
          <source>Update the example component.</source>
          <target state="translated">サンプルコンポーネントを更新します。</target>
        </trans-unit>
        <trans-unit id="148a5534b7d7eb95f711ebbe8a8ae958c56678b4" translate="yes" xml:space="preserve">
          <source>Update the given package array.</source>
          <target state="translated">与えられたパッケージ配列を更新します。</target>
        </trans-unit>
        <trans-unit id="8c9894cdf51b9b80a7579943b2d52edb31257c5b" translate="yes" xml:space="preserve">
          <source>Update the group stack with the given attributes.</source>
          <target state="translated">与えられた属性でグループスタックを更新します。</target>
        </trans-unit>
        <trans-unit id="95b7b1cfc33a3ac27790b9f06e48e6ec180bacb8" translate="yes" xml:space="preserve">
          <source>Update the model in the database.</source>
          <target state="translated">データベース内のモデルを更新します。</target>
        </trans-unit>
        <trans-unit id="4c357e933efe3fd4ff108b97cf06c09af63817b0" translate="yes" xml:space="preserve">
          <source>Update the model's update timestamp.</source>
          <target state="translated">モデルの更新タイムスタンプを更新します。</target>
        </trans-unit>
        <trans-unit id="d73f622fadf5aca1b559e04ab1a8d9bd028e95ea" translate="yes" xml:space="preserve">
          <source>Update the parent model on the relationship.</source>
          <target state="translated">リレーションシップの親モデルを更新します。</target>
        </trans-unit>
        <trans-unit id="d2a282689bfa27edada19bcc74df552c14f28c5f" translate="yes" xml:space="preserve">
          <source>Update the session with the given ID.</source>
          <target state="translated">与えられたIDでセッションを更新します。</target>
        </trans-unit>
        <trans-unit id="ec9e4a51844915dfc4414d64b1af57a13f9ce582" translate="yes" xml:space="preserve">
          <source>Update your &lt;code&gt;laravel/framework&lt;/code&gt; dependency to &lt;code&gt;5.7.*&lt;/code&gt; in your &lt;code&gt;composer.json&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;composer.json&lt;/code&gt; ファイルで、 &lt;code&gt;laravel/framework&lt;/code&gt; 依存関係を &lt;code&gt;5.7.*&lt;/code&gt; に更新します。</target>
        </trans-unit>
        <trans-unit id="c76d18079a076ee34ffc62b5b9bd0909da356dce" translate="yes" xml:space="preserve">
          <source>Updates</source>
          <target state="translated">Updates</target>
        </trans-unit>
        <trans-unit id="93fe4180e870c7c673ccf65b42f6ab5f9b05ae35" translate="yes" xml:space="preserve">
          <source>Updates can also be performed against any number of models that match a given query. In this example, all flights that are &lt;code&gt;active&lt;/code&gt; and have a &lt;code&gt;destination&lt;/code&gt; of &lt;code&gt;San Diego&lt;/code&gt; will be marked as delayed:</source>
          <target state="translated">更新は、特定のクエリに一致する任意の数のモデルに対しても実行できます。この例では、 &lt;code&gt;active&lt;/code&gt; で、 &lt;code&gt;destination&lt;/code&gt; が &lt;code&gt;San Diego&lt;/code&gt; すべてのフライトが遅延としてマークされます。</target>
        </trans-unit>
        <trans-unit id="9356b969eea16c86811c9445deb0962c55187fa9" translate="yes" xml:space="preserve">
          <source>Updating A Record On A Pivot Table</source>
          <target state="translated">ピボットテーブルのレコードの更新</target>
        </trans-unit>
        <trans-unit id="1c1786f6cf4784e48504e429f9238b5d18f3f6ae" translate="yes" xml:space="preserve">
          <source>Updating Column Attributes</source>
          <target state="translated">カラム属性の更新</target>
        </trans-unit>
        <trans-unit id="7d3336de02aa02f967c096f71d0efd6a5f436a21" translate="yes" xml:space="preserve">
          <source>Updating Credit Cards</source>
          <target state="translated">クレジットカードの更新</target>
        </trans-unit>
        <trans-unit id="7df9a4cf600a48f460195272caa546a2cd3708c2" translate="yes" xml:space="preserve">
          <source>Updating Dependencies</source>
          <target state="translated">依存関係の更新</target>
        </trans-unit>
        <trans-unit id="178207d52bb680531ef40ebce399a3763b5e6752" translate="yes" xml:space="preserve">
          <source>Updating Envoy</source>
          <target state="translated">通信使の更新</target>
        </trans-unit>
        <trans-unit id="1866dde603755a649eef61154cacb2f74e9ace28" translate="yes" xml:space="preserve">
          <source>Updating Homestead</source>
          <target state="translated">ホームステッドの更新</target>
        </trans-unit>
        <trans-unit id="d5f938ba11d6e8912b7b98b91a74c13494ca3782" translate="yes" xml:space="preserve">
          <source>Updating JSON Columns</source>
          <target state="translated">JSONカラムの更新</target>
        </trans-unit>
        <trans-unit id="e5b09343b2238bb74ea50d37eff3231b6eb0978f" translate="yes" xml:space="preserve">
          <source>Updating Records</source>
          <target state="translated">記録の更新</target>
        </trans-unit>
        <trans-unit id="2f3485fdf3ae3831ba56f645c6f462d9a81292dd" translate="yes" xml:space="preserve">
          <source>Upgrade Guide</source>
          <target state="translated">アップグレードガイド</target>
        </trans-unit>
        <trans-unit id="a7dd3a1d8ed51cf30314c15a934d4cae0718aa5a" translate="yes" xml:space="preserve">
          <source>Upgrading</source>
          <target state="translated">Upgrading</target>
        </trans-unit>
        <trans-unit id="d505533398635ad971e0ccd38b7c3af38267f58e" translate="yes" xml:space="preserve">
          <source>Upgrading To 5.7.0 From 5.6</source>
          <target state="translated">5.6から5.7.0へのアップグレード</target>
        </trans-unit>
        <trans-unit id="605ab121b0528444f54d7535cf18ad408ae5b7dc" translate="yes" xml:space="preserve">
          <source>Upgrading To Valet 2.0</source>
          <target state="translated">バレット2.0へのアップグレード</target>
        </trans-unit>
        <trans-unit id="023fd83a0de52728b167fe09fbf61b2660601158" translate="yes" xml:space="preserve">
          <source>UploadedFile</source>
          <target state="translated">UploadedFile</target>
        </trans-unit>
        <trans-unit id="0fae64d1bc9acb27d0e1c2b4e9cab51326ba47b0" translate="yes" xml:space="preserve">
          <source>UploadedFile (Http)</source>
          <target state="translated">UploadedFile (Http)</target>
        </trans-unit>
        <trans-unit id="929cdbfae255d063719196518f122ff600026a9a" translate="yes" xml:space="preserve">
          <source>UploadedFile::createFromBase()</source>
          <target state="translated">UploadedFile::createFromBase()</target>
        </trans-unit>
        <trans-unit id="8ca9b5c61903439dbe6b306208888d59eae2c415" translate="yes" xml:space="preserve">
          <source>UploadedFile::fake()</source>
          <target state="translated">UploadedFile::fake()</target>
        </trans-unit>
        <trans-unit id="bec6b04348c3d4d79d97bb39bf4b76eea2cc6b5c" translate="yes" xml:space="preserve">
          <source>UploadedFile::get()</source>
          <target state="translated">UploadedFile::get()</target>
        </trans-unit>
        <trans-unit id="eb17a0f2baf59c892614bb1db35c4e10777b559b" translate="yes" xml:space="preserve">
          <source>UploadedFile::parseOptions()</source>
          <target state="translated">UploadedFile::parseOptions()</target>
        </trans-unit>
        <trans-unit id="bee0d4b4858e108447d498caaf1760a65e535671" translate="yes" xml:space="preserve">
          <source>UploadedFile::store()</source>
          <target state="translated">UploadedFile::store()</target>
        </trans-unit>
        <trans-unit id="80446ee3e5915a0c6c137ec25ced82fcaead3852" translate="yes" xml:space="preserve">
          <source>UploadedFile::storeAs()</source>
          <target state="translated">UploadedFile::storeAs()</target>
        </trans-unit>
        <trans-unit id="1efb800abe70f17967219892620a445c0ebc9d89" translate="yes" xml:space="preserve">
          <source>UploadedFile::storePublicly()</source>
          <target state="translated">UploadedFile::storePublicly()</target>
        </trans-unit>
        <trans-unit id="5754c39d9e8ad5919ce457740d4cbe045b8c566a" translate="yes" xml:space="preserve">
          <source>UploadedFile::storePubliclyAs()</source>
          <target state="translated">UploadedFile::storePubliclyAs()</target>
        </trans-unit>
        <trans-unit id="e2aa20e71f24069d864f6960094daa88183d169b" translate="yes" xml:space="preserve">
          <source>UriValidator</source>
          <target state="translated">UriValidator</target>
        </trans-unit>
        <trans-unit id="b9ef8e5c22c477698492f2eb201d546b80e4d992" translate="yes" xml:space="preserve">
          <source>UriValidator (Routing\Matching)</source>
          <target state="translated">UriValidator (ルーティングマッチング)</target>
        </trans-unit>
        <trans-unit id="a1ffb6435d5b897a1a9505be58529ca105e7c2b1" translate="yes" xml:space="preserve">
          <source>UriValidator::matches()</source>
          <target state="translated">UriValidator::matches()</target>
        </trans-unit>
        <trans-unit id="9eff5906156c95b179bf55d811165d62dbf6f86e" translate="yes" xml:space="preserve">
          <source>UrlGenerationException</source>
          <target state="translated">UrlGenerationException</target>
        </trans-unit>
        <trans-unit id="885ede85647c1a7b223cc3e8e0925b2257f4658d" translate="yes" xml:space="preserve">
          <source>UrlGenerationException (Routing\Exceptions)</source>
          <target state="translated">UrlGenerationException (RoutingExceptions)</target>
        </trans-unit>
        <trans-unit id="a75bc3a2dc94e7d269950325bc494454f3d84051" translate="yes" xml:space="preserve">
          <source>UrlGenerationException::forMissingParameters()</source>
          <target state="translated">UrlGenerationException::forMissingParameters()</target>
        </trans-unit>
        <trans-unit id="0769e65016ed0c832ab200b2aa5f1bd9d7c92758" translate="yes" xml:space="preserve">
          <source>UrlGenerator</source>
          <target state="translated">UrlGenerator</target>
        </trans-unit>
        <trans-unit id="b1e2ed20c7649a6018d6ee4f1ad2e204e0db0e05" translate="yes" xml:space="preserve">
          <source>UrlGenerator (Contracts)</source>
          <target state="translated">UrlGenerator (契約書)</target>
        </trans-unit>
        <trans-unit id="43458e6fc9284c0a508e0b54a744075649ddcd6e" translate="yes" xml:space="preserve">
          <source>UrlGenerator (Routing)</source>
          <target state="translated">UrlGenerator (ルーティング)</target>
        </trans-unit>
        <trans-unit id="962077cfbfeafaa6253c938f85a8dba9cafae24b" translate="yes" xml:space="preserve">
          <source>UrlGenerator::__construct()</source>
          <target state="translated">UrlGenerator::__construct()</target>
        </trans-unit>
        <trans-unit id="da33d4331a00ff0816ebdb06fb9c8eaf2c90748f" translate="yes" xml:space="preserve">
          <source>UrlGenerator::action()</source>
          <target state="translated">UrlGenerator::action()</target>
        </trans-unit>
        <trans-unit id="a83c1ab93b408a5da87b592ab85b7090eb1321e6" translate="yes" xml:space="preserve">
          <source>UrlGenerator::asset()</source>
          <target state="translated">UrlGenerator::asset()</target>
        </trans-unit>
        <trans-unit id="6f88971227ce1bd491fca24e780bc700e853af1f" translate="yes" xml:space="preserve">
          <source>UrlGenerator::assetFrom()</source>
          <target state="translated">UrlGenerator::assetFrom()</target>
        </trans-unit>
        <trans-unit id="32152f3f1615212665fc00469e3fadf773b1de37" translate="yes" xml:space="preserve">
          <source>UrlGenerator::current()</source>
          <target state="translated">UrlGenerator::current()</target>
        </trans-unit>
        <trans-unit id="2facd0534bc9480e4c20c0a251d1e9a3766da62f" translate="yes" xml:space="preserve">
          <source>UrlGenerator::defaults()</source>
          <target state="translated">UrlGenerator::defaults()</target>
        </trans-unit>
        <trans-unit id="644fec71bb011a37dd3a037828713c3102f8a1ae" translate="yes" xml:space="preserve">
          <source>UrlGenerator::extractQueryString()</source>
          <target state="translated">UrlGenerator::extractQueryString()</target>
        </trans-unit>
        <trans-unit id="930dbb951463ea5132f8f86c24825d1df188f732" translate="yes" xml:space="preserve">
          <source>UrlGenerator::forceRootUrl()</source>
          <target state="translated">UrlGenerator::forceRootUrl()</target>
        </trans-unit>
        <trans-unit id="44324252ab95b010591205848107f64eae2ece3e" translate="yes" xml:space="preserve">
          <source>UrlGenerator::forceScheme()</source>
          <target state="translated">UrlGenerator::forceScheme()</target>
        </trans-unit>
        <trans-unit id="e5ac6e06a412bcd30f0eb5b5e4e1c8981e87b69c" translate="yes" xml:space="preserve">
          <source>UrlGenerator::format()</source>
          <target state="translated">UrlGenerator::format()</target>
        </trans-unit>
        <trans-unit id="471c2173777b81f2c0a978ff1916746caa917310" translate="yes" xml:space="preserve">
          <source>UrlGenerator::formatAction()</source>
          <target state="translated">UrlGenerator::formatAction()</target>
        </trans-unit>
        <trans-unit id="f63022f163ec7f591a9530793b4bf3e803fe2b74" translate="yes" xml:space="preserve">
          <source>UrlGenerator::formatHostUsing()</source>
          <target state="translated">UrlGenerator::formatHostUsing()</target>
        </trans-unit>
        <trans-unit id="ba9558b4fc925020bac08b64e6aa98800bf077da" translate="yes" xml:space="preserve">
          <source>UrlGenerator::formatParameters()</source>
          <target state="translated">UrlGenerator::formatParameters()</target>
        </trans-unit>
        <trans-unit id="77bc4e8f54322b0ed0c88425db13e228caed07a4" translate="yes" xml:space="preserve">
          <source>UrlGenerator::formatPathUsing()</source>
          <target state="translated">UrlGenerator::formatPathUsing()</target>
        </trans-unit>
        <trans-unit id="d3c233468f2a2a061916a36043db0a969b73ccba" translate="yes" xml:space="preserve">
          <source>UrlGenerator::formatRoot()</source>
          <target state="translated">UrlGenerator::formatRoot()</target>
        </trans-unit>
        <trans-unit id="f921db8fec662e2d3a34f7f81cea8393f02001f4" translate="yes" xml:space="preserve">
          <source>UrlGenerator::formatScheme()</source>
          <target state="translated">UrlGenerator::formatScheme()</target>
        </trans-unit>
        <trans-unit id="18904ae888c8163de2140cf5e9c9fcc8ac854381" translate="yes" xml:space="preserve">
          <source>UrlGenerator::full()</source>
          <target state="translated">UrlGenerator::full()</target>
        </trans-unit>
        <trans-unit id="4843c6f1e994ef77abaf5a340e9d49fe158eaf98" translate="yes" xml:space="preserve">
          <source>UrlGenerator::getDefaultParameters()</source>
          <target state="translated">UrlGenerator::getDefaultParameters()</target>
        </trans-unit>
        <trans-unit id="e69d68e8e68722142ae11988c2b9bccc9d4224bc" translate="yes" xml:space="preserve">
          <source>UrlGenerator::getPreviousUrlFromSession()</source>
          <target state="translated">UrlGenerator::getPreviousUrlFromSession()</target>
        </trans-unit>
        <trans-unit id="47adfe9ee6d750475c97577a69ed7056997ab075" translate="yes" xml:space="preserve">
          <source>UrlGenerator::getRequest()</source>
          <target state="translated">UrlGenerator::getRequest()</target>
        </trans-unit>
        <trans-unit id="9ceb4fe2dd747f996e60a5cf9604850dba51dbec" translate="yes" xml:space="preserve">
          <source>UrlGenerator::getSession()</source>
          <target state="translated">UrlGenerator::getSession()</target>
        </trans-unit>
        <trans-unit id="c66d6d241e6efe575ef5c97b8f1015a20d6eba84" translate="yes" xml:space="preserve">
          <source>UrlGenerator::hasValidSignature()</source>
          <target state="translated">UrlGenerator::hasValidSignature()</target>
        </trans-unit>
        <trans-unit id="ca1cb3b12049ce569522f22cf2b619ab2168ffef" translate="yes" xml:space="preserve">
          <source>UrlGenerator::isValidUrl()</source>
          <target state="translated">UrlGenerator::isValidUrl()</target>
        </trans-unit>
        <trans-unit id="d2d25b87c42581a75d02cef68ebc5bb978512ff8" translate="yes" xml:space="preserve">
          <source>UrlGenerator::pathFormatter()</source>
          <target state="translated">UrlGenerator::pathFormatter()</target>
        </trans-unit>
        <trans-unit id="68667b7bb1b86d45ff800caabb6ca6b0e3a75ad6" translate="yes" xml:space="preserve">
          <source>UrlGenerator::previous()</source>
          <target state="translated">UrlGenerator::previous()</target>
        </trans-unit>
        <trans-unit id="085f58c8ee1be5809a1eb56bb0def52fe0899402" translate="yes" xml:space="preserve">
          <source>UrlGenerator::removeIndex()</source>
          <target state="translated">UrlGenerator::removeIndex()</target>
        </trans-unit>
        <trans-unit id="796c12bf7e518d5b6caa6e3b04876f9d41e2e1b6" translate="yes" xml:space="preserve">
          <source>UrlGenerator::route()</source>
          <target state="translated">UrlGenerator::route()</target>
        </trans-unit>
        <trans-unit id="3f4b888a055754d4bd2a2e496a6472a71a5f1232" translate="yes" xml:space="preserve">
          <source>UrlGenerator::routeUrl()</source>
          <target state="translated">UrlGenerator::routeUrl()</target>
        </trans-unit>
        <trans-unit id="546e38149374e7d15613b598c3cda70058e0379d" translate="yes" xml:space="preserve">
          <source>UrlGenerator::secure()</source>
          <target state="translated">UrlGenerator::secure()</target>
        </trans-unit>
        <trans-unit id="9e06c873e1ff0be7027c084e83ca847125148f36" translate="yes" xml:space="preserve">
          <source>UrlGenerator::secureAsset()</source>
          <target state="translated">UrlGenerator::secureAsset()</target>
        </trans-unit>
        <trans-unit id="0049d696c4c49ab56330e02b64abf7c5782c2f21" translate="yes" xml:space="preserve">
          <source>UrlGenerator::setKeyResolver()</source>
          <target state="translated">UrlGenerator::setKeyResolver()</target>
        </trans-unit>
        <trans-unit id="7bb84eafb7b49f8faf7aad9b8973b34509555187" translate="yes" xml:space="preserve">
          <source>UrlGenerator::setRequest()</source>
          <target state="translated">UrlGenerator::setRequest()</target>
        </trans-unit>
        <trans-unit id="789e4a0b11bf0edae16be4459b76d327a98e3f44" translate="yes" xml:space="preserve">
          <source>UrlGenerator::setRootControllerNamespace()</source>
          <target state="translated">UrlGenerator::setRootControllerNamespace()</target>
        </trans-unit>
        <trans-unit id="fb3f373477aa5a6ec53629555cabdc2308a9cd60" translate="yes" xml:space="preserve">
          <source>UrlGenerator::setRoutes()</source>
          <target state="translated">UrlGenerator::setRoutes()</target>
        </trans-unit>
        <trans-unit id="4ff19c4e0f57466ea6fc6dfa735551d5e85bac88" translate="yes" xml:space="preserve">
          <source>UrlGenerator::setSessionResolver()</source>
          <target state="translated">UrlGenerator::setSessionResolver()</target>
        </trans-unit>
        <trans-unit id="7eaed9594e126480c5f9c637fb9b88556faea2da" translate="yes" xml:space="preserve">
          <source>UrlGenerator::signedRoute()</source>
          <target state="translated">UrlGenerator::signedRoute()</target>
        </trans-unit>
        <trans-unit id="508e07bbc212c1d6693da067f10d6a3d810056da" translate="yes" xml:space="preserve">
          <source>UrlGenerator::temporarySignedRoute()</source>
          <target state="translated">UrlGenerator::temporarySignedRoute()</target>
        </trans-unit>
        <trans-unit id="e75eb34daec7052fa4f1c5ef75a0e419594ddb18" translate="yes" xml:space="preserve">
          <source>UrlGenerator::to()</source>
          <target state="translated">UrlGenerator::to()</target>
        </trans-unit>
        <trans-unit id="4d80db61d2d377e640cbb363d032fd4a26ee4e0c" translate="yes" xml:space="preserve">
          <source>UrlGenerator::toRoute()</source>
          <target state="translated">UrlGenerator::toRoute()</target>
        </trans-unit>
        <trans-unit id="af56f7f12d9fd2230182fbdd0a6bb833213966ca" translate="yes" xml:space="preserve">
          <source>UrlRoutable</source>
          <target state="translated">UrlRoutable</target>
        </trans-unit>
        <trans-unit id="88831b58f6d1222d31691ec4661fb51691d9589f" translate="yes" xml:space="preserve">
          <source>UrlRoutable (Contracts)</source>
          <target state="translated">UrlRoutable (契約書)</target>
        </trans-unit>
        <trans-unit id="26867eb6098ebe702718474a39808543575a18cf" translate="yes" xml:space="preserve">
          <source>UrlRoutable::getRouteKey()</source>
          <target state="translated">UrlRoutable::getRouteKey()</target>
        </trans-unit>
        <trans-unit id="531de13b5fac1fca950c86df5cd3cd3c56af20ab" translate="yes" xml:space="preserve">
          <source>UrlRoutable::getRouteKeyName()</source>
          <target state="translated">UrlRoutable::getRouteKeyName()</target>
        </trans-unit>
        <trans-unit id="f64287f41a85f084f8752d60b768a92aa5c5dea2" translate="yes" xml:space="preserve">
          <source>UrlRoutable::resolveRouteBinding()</source>
          <target state="translated">UrlRoutable::resolveRouteBinding()</target>
        </trans-unit>
        <trans-unit id="82d9aa8714d152b96d98145954211474a4a200b4" translate="yes" xml:space="preserve">
          <source>UrlWindow</source>
          <target state="translated">UrlWindow</target>
        </trans-unit>
        <trans-unit id="4ac09d342c760e171ef290e74de15fb664e0758f" translate="yes" xml:space="preserve">
          <source>UrlWindow (Pagination)</source>
          <target state="translated">UrlWindow (ページネーション)</target>
        </trans-unit>
        <trans-unit id="254ee6bbdd5efd79d6d42ad23b9937c22c401a12" translate="yes" xml:space="preserve">
          <source>UrlWindow::__construct()</source>
          <target state="translated">UrlWindow::__construct()</target>
        </trans-unit>
        <trans-unit id="a8710b73bc828e6c8f0822bf04003e610c0db5cb" translate="yes" xml:space="preserve">
          <source>UrlWindow::currentPage()</source>
          <target state="translated">UrlWindow::currentPage()</target>
        </trans-unit>
        <trans-unit id="364f275d33ecdb278caba77beaf055db29737f00" translate="yes" xml:space="preserve">
          <source>UrlWindow::get()</source>
          <target state="translated">UrlWindow::get()</target>
        </trans-unit>
        <trans-unit id="710443fde65d94cfc63eedfc96ba98f04acb5c30" translate="yes" xml:space="preserve">
          <source>UrlWindow::getAdjacentUrlRange()</source>
          <target state="translated">UrlWindow::getAdjacentUrlRange()</target>
        </trans-unit>
        <trans-unit id="f3e3248b32fec4e45b1a7bc4a3bee3e3f2318828" translate="yes" xml:space="preserve">
          <source>UrlWindow::getFinish()</source>
          <target state="translated">UrlWindow::getFinish()</target>
        </trans-unit>
        <trans-unit id="c122b588961947ddb91ff54012612f8df543dd7d" translate="yes" xml:space="preserve">
          <source>UrlWindow::getFullSlider()</source>
          <target state="translated">UrlWindow::getFullSlider()</target>
        </trans-unit>
        <trans-unit id="a2a4408d81c496eef32b1bd4f094b611b7188eb9" translate="yes" xml:space="preserve">
          <source>UrlWindow::getSliderTooCloseToBeginning()</source>
          <target state="translated">UrlWindow::getSliderTooCloseToBeginning()</target>
        </trans-unit>
        <trans-unit id="1d6e0206f309c298f5ae5fcd088665a799719b54" translate="yes" xml:space="preserve">
          <source>UrlWindow::getSliderTooCloseToEnding()</source>
          <target state="translated">UrlWindow::getSliderTooCloseToEnding()</target>
        </trans-unit>
        <trans-unit id="4f04e8bc590290708741548077563e5ad0f2e67b" translate="yes" xml:space="preserve">
          <source>UrlWindow::getSmallSlider()</source>
          <target state="translated">UrlWindow::getSmallSlider()</target>
        </trans-unit>
        <trans-unit id="7d90fac9aa941967c93f97cec7322364ee9590ef" translate="yes" xml:space="preserve">
          <source>UrlWindow::getStart()</source>
          <target state="translated">UrlWindow::getStart()</target>
        </trans-unit>
        <trans-unit id="b131c59f5e016f4708ef17de7064718df2080c67" translate="yes" xml:space="preserve">
          <source>UrlWindow::getUrlSlider()</source>
          <target state="translated">UrlWindow::getUrlSlider()</target>
        </trans-unit>
        <trans-unit id="1f9db9230bc50f04616b2fbcf0215e94d105cadc" translate="yes" xml:space="preserve">
          <source>UrlWindow::hasPages()</source>
          <target state="translated">UrlWindow::hasPages()</target>
        </trans-unit>
        <trans-unit id="09c4f7c2a4e5c08140573da3f0f13d9b494e5e76" translate="yes" xml:space="preserve">
          <source>UrlWindow::lastPage()</source>
          <target state="translated">UrlWindow::lastPage()</target>
        </trans-unit>
        <trans-unit id="920ce395356ed4a66196648b5dd3fdf76c6236e5" translate="yes" xml:space="preserve">
          <source>UrlWindow::make()</source>
          <target state="translated">UrlWindow::make()</target>
        </trans-unit>
        <trans-unit id="cd92a2af065149bb26b02b77ff1a08bf20165eae" translate="yes" xml:space="preserve">
          <source>Use the write pdo for query.</source>
          <target state="translated">クエリにはwrite pdoを使用します。</target>
        </trans-unit>
        <trans-unit id="4cf361c53629d5b3a5f597c733c74c5fb7ac7600" translate="yes" xml:space="preserve">
          <source>Used to extract a sub-section of the data for faster iteration.</source>
          <target state="translated">高速な反復処理のためにデータのサブセクションを抽出するために使用されます。</target>
        </trans-unit>
        <trans-unit id="9f8a2389a20ca0752aa9e95093515517e90e194c" translate="yes" xml:space="preserve">
          <source>User</source>
          <target state="translated">User</target>
        </trans-unit>
        <trans-unit id="f6e6901a736331a2d03d0bae71f2aa30c7a437c7" translate="yes" xml:space="preserve">
          <source>User (Foundation\Auth)</source>
          <target state="translated">User (Foundation\Auth)</target>
        </trans-unit>
        <trans-unit id="c5894e60fa9cbc30ade4b7159bc3b136927b3eb5" translate="yes" xml:space="preserve">
          <source>User Preferred Locales</source>
          <target state="translated">ユーザーの希望するロケール</target>
        </trans-unit>
        <trans-unit id="00694732aa07caf73ddfd791cbe4fa72d599807b" translate="yes" xml:space="preserve">
          <source>User exposed observable events.</source>
          <target state="translated">ユーザーに公開された観測可能なイベント。</target>
        </trans-unit>
        <trans-unit id="19932fcd6dd1e91b6f6ec9819c90fd63e29c3f4e" translate="yes" xml:space="preserve">
          <source>UserProvider</source>
          <target state="translated">UserProvider</target>
        </trans-unit>
        <trans-unit id="b1bacba86cebdb93ac86015e7becb4856b6787db" translate="yes" xml:space="preserve">
          <source>UserProvider (Contracts)</source>
          <target state="translated">ユーザープロバイダー(契約</target>
        </trans-unit>
        <trans-unit id="683fa399ea4e3bea06e0f6293d7beffac735ea8c" translate="yes" xml:space="preserve">
          <source>UserProvider::retrieveByCredentials()</source>
          <target state="translated">UserProvider::retrieveByCredentials()</target>
        </trans-unit>
        <trans-unit id="4d5d883b153ed3c4b328c3b600b9be62a29d66f5" translate="yes" xml:space="preserve">
          <source>UserProvider::retrieveById()</source>
          <target state="translated">UserProvider::retrieveById()</target>
        </trans-unit>
        <trans-unit id="f643afb3ac6a9e952d9007cdb9e0117047753cbf" translate="yes" xml:space="preserve">
          <source>UserProvider::retrieveByToken()</source>
          <target state="translated">UserProvider::retrieveByToken()</target>
        </trans-unit>
        <trans-unit id="2800a0be963e2c4eab0cca73e021a0fdc9bbca68" translate="yes" xml:space="preserve">
          <source>UserProvider::updateRememberToken()</source>
          <target state="translated">UserProvider::updateRememberToken()</target>
        </trans-unit>
        <trans-unit id="66b7b24c2b975df0a3277fc043c17a1d74c004c1" translate="yes" xml:space="preserve">
          <source>UserProvider::validateCredentials()</source>
          <target state="translated">UserProvider::validateCredentials()</target>
        </trans-unit>
        <trans-unit id="2e7db576eadb453c186f445a796970d3e0af302f" translate="yes" xml:space="preserve">
          <source>Username Customization</source>
          <target state="translated">ユーザー名のカスタマイズ</target>
        </trans-unit>
        <trans-unit id="2c1db596d2dfc88f58701d9fe9d57e9dcdcc4032" translate="yes" xml:space="preserve">
          <source>Using A Global &lt;code&gt;from&lt;/code&gt; Address</source>
          <target state="translated">グローバル &lt;code&gt;from&lt;/code&gt; アドレスの使用</target>
        </trans-unit>
        <trans-unit id="216f35abbad1de6e68b33b2cdcc8837d76c280f4" translate="yes" xml:space="preserve">
          <source>Using An Example Application</source>
          <target state="translated">アプリケーション例の使用</target>
        </trans-unit>
        <trans-unit id="a9d983ec2ba25e12439b4bb33bb9cb4ff20cec94" translate="yes" xml:space="preserve">
          <source>Using Another Domain</source>
          <target state="translated">別のドメインを使用する</target>
        </trans-unit>
        <trans-unit id="25112a4804e46ede87116524e3f34212886cddfb" translate="yes" xml:space="preserve">
          <source>Using Closures</source>
          <target state="translated">クロージャの使用</target>
        </trans-unit>
        <trans-unit id="25786ca0bd0d30fd8fa61a08279117e107aabca9" translate="yes" xml:space="preserve">
          <source>Using Components</source>
          <target state="translated">コンポーネントの使用</target>
        </trans-unit>
        <trans-unit id="24932eb2b8d5b43b0680490a8468087bc33abbd5" translate="yes" xml:space="preserve">
          <source>Using Cursors</source>
          <target state="translated">カーサの使用</target>
        </trans-unit>
        <trans-unit id="fa10774d0e271ce1daa32ba7d67741dff0dd4dd8" translate="yes" xml:space="preserve">
          <source>Using Extensions</source>
          <target state="translated">拡張機能の使用</target>
        </trans-unit>
        <trans-unit id="686c3d4bfe9f7aa5efa5e0095401e7adf93fea51" translate="yes" xml:space="preserve">
          <source>Using Factories</source>
          <target state="translated">工場の利用</target>
        </trans-unit>
        <trans-unit id="f2036f1ba7e70d3832aa3097ae413a7dc03e90ba" translate="yes" xml:space="preserve">
          <source>Using Forms</source>
          <target state="translated">フォームの使用</target>
        </trans-unit>
        <trans-unit id="9ee6d0556e77496962a7f68fc2938ee8a2b4b239" translate="yes" xml:space="preserve">
          <source>Using Model Factories</source>
          <target state="translated">モデル工場の使用</target>
        </trans-unit>
        <trans-unit id="9024e7794fa530c1d7fe273d02883b5baa90cf94" translate="yes" xml:space="preserve">
          <source>Using Multiple Database Connections</source>
          <target state="translated">複数のデータベース接続を使用する</target>
        </trans-unit>
        <trans-unit id="3705315f35938a6abf481834794518bd704bd8ea" translate="yes" xml:space="preserve">
          <source>Using Multiple Redis Connections</source>
          <target state="translated">複数の Redis 接続を使用する</target>
        </trans-unit>
        <trans-unit id="70946ec4b6a6083b237c2f5b126322c2957bd26c" translate="yes" xml:space="preserve">
          <source>Using Named Bindings</source>
          <target state="translated">名前付きバインディングの使用</target>
        </trans-unit>
        <trans-unit id="55cb1e4b38a0c574a47a6387cc78f55aea1bb2bc" translate="yes" xml:space="preserve">
          <source>Using OAuth2 with authorization codes is how most developers are familiar with OAuth2. When using authorization codes, a client application will redirect a user to your server where they will either approve or deny the request to issue an access token to the client.</source>
          <target state="translated">認証コードを使って OAuth2 を使用することは、ほとんどの開発者が OAuth2 をどのように理解しているかを示しています。認証コードを使用する場合、クライアントアプリケーションはユーザをサーバにリダイレクトし、サーバはクライアントにアクセストークンを発行するリクエストを承認するか拒否します。</target>
        </trans-unit>
        <trans-unit id="96139a5c99e2a55f4e1d42578e8b77ebaa7c6ecd" translate="yes" xml:space="preserve">
          <source>Using Other Browsers</source>
          <target state="translated">他のブラウザを使用する</target>
        </trans-unit>
        <trans-unit id="547f3d366f6ba6dbebb442ff52e5209ac22bfe3d" translate="yes" xml:space="preserve">
          <source>Using React</source>
          <target state="translated">Reactを使う</target>
        </trans-unit>
        <trans-unit id="1f29841b38fd243f89b80a9f29f63a4ed2ee9216" translate="yes" xml:space="preserve">
          <source>Using Rule Objects</source>
          <target state="translated">ルールオブジェクトの使用</target>
        </trans-unit>
        <trans-unit id="e2228f5e9598a5d7c4ea863d0e5acf274d8ad1a0" translate="yes" xml:space="preserve">
          <source>Using Short Keys</source>
          <target state="translated">ショートキーの使用</target>
        </trans-unit>
        <trans-unit id="c142408ff0ea25a774b51389fb5125e10d488f17" translate="yes" xml:space="preserve">
          <source>Using The &lt;code&gt;from&lt;/code&gt; Method</source>
          <target state="translated">&lt;code&gt;from&lt;/code&gt; メソッドの使用</target>
        </trans-unit>
        <trans-unit id="e828f2da10d4699211aea8ec287ea22dc98d8e4a" translate="yes" xml:space="preserve">
          <source>Using The Encrypter</source>
          <target state="translated">暗号化器の使用</target>
        </trans-unit>
        <trans-unit id="32e4c8f87a22afe4dc721aef0e4172613cbd432a" translate="yes" xml:space="preserve">
          <source>Using The Keyboard</source>
          <target state="translated">キーボードの使用</target>
        </trans-unit>
        <trans-unit id="6acef1ffb7973221335871f1416a7eb621f9bb2c" translate="yes" xml:space="preserve">
          <source>Using The Mouse</source>
          <target state="translated">マウスの使用</target>
        </trans-unit>
        <trans-unit id="2be585cd02cbac6e6aa7f3a5e76a42890611569a" translate="yes" xml:space="preserve">
          <source>Using The Notifiable Trait</source>
          <target state="translated">届出可能な特性を利用する</target>
        </trans-unit>
        <trans-unit id="bc0066137ddde9f57acea92265960870ddbc85d4" translate="yes" xml:space="preserve">
          <source>Using The Notification Facade</source>
          <target state="translated">通知ファサードの使用</target>
        </trans-unit>
        <trans-unit id="2c4389b8f20380044dd4d1a71631f1bd707c2a9a" translate="yes" xml:space="preserve">
          <source>Using The Session</source>
          <target state="translated">セッションの使用</target>
        </trans-unit>
        <trans-unit id="4ddeb48ad6c4a3dbd99803569688896b32d1a88b" translate="yes" xml:space="preserve">
          <source>Using Translation Strings As Keys</source>
          <target state="translated">キーとしての翻訳文字列の使用</target>
        </trans-unit>
        <trans-unit id="dd22fed353795223638fa3d57ab7cca926b4236a" translate="yes" xml:space="preserve">
          <source>Using a few simple methods, you may access all of the user input from your &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; instance without worrying about which HTTP verb was used for the request. Regardless of the HTTP verb, the &lt;code&gt;input&lt;/code&gt; method may be used to retrieve user input:</source>
          <target state="translated">いくつかの単純なメソッドを使用して、要求にどのHTTP動詞が使用されているかを気にすることなく、 &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; インスタンスからすべてのユーザー入力にアクセスできます。HTTP動詞に関係なく、 &lt;code&gt;input&lt;/code&gt; メソッドを使用してユーザー入力を取得できます。</target>
        </trans-unit>
        <trans-unit id="406c1ebda5c578fc0028f36c7519ac73224c8118" translate="yes" xml:space="preserve">
          <source>Using either the &lt;code&gt;pingBefore($url)&lt;/code&gt; or &lt;code&gt;thenPing($url)&lt;/code&gt; feature requires the Guzzle HTTP library. You can add Guzzle to your project using the Composer package manager:</source>
          <target state="translated">いずれかを使用して &lt;code&gt;pingBefore($url)&lt;/code&gt; または &lt;code&gt;thenPing($url)&lt;/code&gt; 機能では、がつがつ食うHTTPライブラリが必要です。Composerパッケージマネージャーを使用して、プロジェクトにGuzzleを追加できます。</target>
        </trans-unit>
        <trans-unit id="0e30d58ca464af791be0f4dd1b5adbb1b8914db2" translate="yes" xml:space="preserve">
          <source>Using real-time facades, you may treat any class in your application as if it were a facade. To illustrate how this can be used, let's examine an alternative. For example, let's assume our &lt;code&gt;Podcast&lt;/code&gt; model has a &lt;code&gt;publish&lt;/code&gt; method. However, in order to publish the podcast, we need to inject a &lt;code&gt;Publisher&lt;/code&gt; instance:</source>
          <target state="translated">リアルタイムファサードを使用すると、アプリケーション内のクラスをファサードのように扱うことができます。これがどのように使用できるかを説明するために、代替案を検討しましょう。たとえば、 &lt;code&gt;Podcast&lt;/code&gt; モデルに &lt;code&gt;publish&lt;/code&gt; メソッドがあるとします。ただし、ポッドキャストを公開するには、 &lt;code&gt;Publisher&lt;/code&gt; インスタンスを挿入する必要があります。</target>
        </trans-unit>
        <trans-unit id="1989c15c720e800a884e34521b523d9b38a95afa" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;Cache&lt;/code&gt; facade, you may access various cache stores via the &lt;code&gt;store&lt;/code&gt; method. The key passed to the &lt;code&gt;store&lt;/code&gt; method should correspond to one of the stores listed in the &lt;code&gt;stores&lt;/code&gt; configuration array in your &lt;code&gt;cache&lt;/code&gt; configuration file:</source>
          <target state="translated">&lt;code&gt;Cache&lt;/code&gt; ファサードを使用すると、 &lt;code&gt;store&lt;/code&gt; メソッドを介してさまざまなキャッシュストアにアクセスできます。 &lt;code&gt;store&lt;/code&gt; メソッドに渡されるキーは、 &lt;code&gt;cache&lt;/code&gt; 構成ファイル内の &lt;code&gt;stores&lt;/code&gt; 構成配列にリストされているストアの1つに対応している必要があります。</target>
        </trans-unit>
        <trans-unit id="b7a1520a74cd435ee873b2f1ed48c86b342a6b5f" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;Route::fallback&lt;/code&gt; method, you may define a route that will be executed when no other route matches the incoming request. Typically, unhandled requests will automatically render a &quot;404&quot; page via your application's exception handler. However, since you may define the &lt;code&gt;fallback&lt;/code&gt; route within your &lt;code&gt;routes/web.php&lt;/code&gt; file, all middleware in the &lt;code&gt;web&lt;/code&gt; middleware group will apply to the route. Of course, you are free to add additional middleware to this route as needed:</source>
          <target state="translated">&lt;code&gt;Route::fallback&lt;/code&gt; メソッドを使用して、着信リクエストに一致する他のルートがないときに実行されるルートを定義できます。通常、未処理のリクエストは、アプリケーションの例外ハンドラを介して「404」ページを自動的にレンダリングします。ただし、 &lt;code&gt;routes/web.php&lt;/code&gt; ファイル内で &lt;code&gt;fallback&lt;/code&gt; ルートを定義できるため、 &lt;code&gt;web&lt;/code&gt; ミドルウェアグループのすべてのミドルウェアがルートに適用されます。もちろん、必要に応じて、このルートにミドルウェアを自由に追加できます。</target>
        </trans-unit>
        <trans-unit id="65f521afa14d4f75e7a8432c2968b7b3abc4f8a2" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; methods on the &lt;code&gt;Queue&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt;, you may specify callbacks to be executed before or after a queued job is processed. These callbacks are a great opportunity to perform additional logging or increment statistics for a dashboard. Typically, you should call these methods from a &lt;a href=&quot;providers&quot;&gt;service provider&lt;/a&gt;. For example, we may use the &lt;code&gt;AppServiceProvider&lt;/code&gt; that is included with Laravel:</source>
          <target state="translated">&lt;code&gt;Queue&lt;/code&gt; &lt;a href=&quot;facades&quot;&gt;ファサード&lt;/a&gt;の &lt;code&gt;before&lt;/code&gt; および &lt;code&gt;after&lt;/code&gt; メソッドを使用して、キューに入れられたジョブが処理される前または後に実行されるコールバックを指定できます。これらのコールバックは、ダッシュボードの追加のロギングまたはインクリメント統計を実行する絶好の機会です。通常、これらのメソッドは&lt;a href=&quot;providers&quot;&gt;サービスプロバイダー&lt;/a&gt;から呼び出す必要があります。たとえば、Laravelに含まれている &lt;code&gt;AppServiceProvider&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="b783bcb9ebc1f36e40dc3bc7c1644f534e87b195" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; methods, you may specify code to be executed before and after the scheduled task is complete:</source>
          <target state="translated">&lt;code&gt;before&lt;/code&gt; メソッドと &lt;code&gt;after&lt;/code&gt; メソッドを使用して、スケジュールされたタスクが完了する前後に実行するコードを指定できます。</target>
        </trans-unit>
        <trans-unit id="678c4bdbc0980fe89557af54092436241e5d6049" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;emailOutputTo&lt;/code&gt; method, you may e-mail the output to an e-mail address of your choice. Before e-mailing the output of a task, you should configure Laravel's &lt;a href=&quot;mail&quot;&gt;e-mail services&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;emailOutputTo&lt;/code&gt; メソッドを使用すると、選択した電子メールアドレスに出力を電子メールで送信できます。タスクの出力を電子メールで送信する前に、Laravelの&lt;a href=&quot;mail&quot;&gt;電子メールサービスを&lt;/a&gt;設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="805cc0a60fdd61923070deec51473812bc87daf6" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;first&lt;/code&gt; method, you may create the first view that exists in a given array of views. This is useful if your application or package allows views to be customized or overwritten:</source>
          <target state="translated">&lt;code&gt;first&lt;/code&gt; 方法を使用して、ビューの特定の配列に存在する最初のビューを作成できます。これは、アプリケーションまたはパッケージでビューのカスタマイズまたは上書きが許可されている場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="d89c7129bfcb2320bd6e3cf389f22cc353c3275e" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;looping&lt;/code&gt; method on the &lt;code&gt;Queue&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt;, you may specify callbacks that execute before the worker attempts to fetch a job from a queue. For example, you might register a Closure to rollback any transactions that were left open by a previously failed job:</source>
          <target state="translated">&lt;code&gt;Queue&lt;/code&gt; &lt;a href=&quot;facades&quot;&gt;ファサード&lt;/a&gt;で &lt;code&gt;looping&lt;/code&gt; メソッドを使用すると、ワーカーがキューからジョブをフェッチしようとする前に実行するコールバックを指定できます。たとえば、以前に失敗したジョブによって開いたままにされたトランザクションをロールバックするためにクロージャを登録できます。</target>
        </trans-unit>
        <trans-unit id="c88eb0e8a9ad89538b979ac4c1c5c209c1188062" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;pingBefore&lt;/code&gt; and &lt;code&gt;thenPing&lt;/code&gt; methods, the scheduler can automatically ping a given URL before or after a task is complete. This method is useful for notifying an external service, such as &lt;a href=&quot;https://envoyer.io&quot;&gt;Laravel Envoyer&lt;/a&gt;, that your scheduled task is commencing or has finished execution:</source>
          <target state="translated">使用 &lt;code&gt;pingBefore&lt;/code&gt; と &lt;code&gt;thenPing&lt;/code&gt; タスクが完了する前または後の方法、スケジューラが自動的に指定されたURLにpingを実行することができます。このメソッドは、&lt;a href=&quot;https://envoyer.io&quot;&gt;Laravel Envoyer&lt;/a&gt;などの外部サービスに、スケジュールされたタスクが開始中であるか、実行が終了したことを通知するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="50064d12b24b039c91d1244e92a456d73c9241ec" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;psubscribe&lt;/code&gt; method, you may subscribe to a wildcard channel, which may be useful for catching all messages on all channels. The &lt;code&gt;$channel&lt;/code&gt; name will be passed as the second argument to the provided callback &lt;code&gt;Closure&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;psubscribe&lt;/code&gt; メソッドを使用すると、ワイルドカードチャネルをサブスクライブできます。これは、すべてのチャネルのすべてのメッセージをキャッチするのに役立ちます。 &lt;code&gt;$channel&lt;/code&gt; 名が提供されるコールバックへの2番目の引数として渡されます &lt;code&gt;Closure&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7cff7155c545f37c1ab3e589532cfcfadb593e62" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;queue&lt;/code&gt; method on the &lt;code&gt;Artisan&lt;/code&gt; facade, you may even queue Artisan commands so they are processed in the background by your &lt;a href=&quot;queues&quot;&gt;queue workers&lt;/a&gt;. Before using this method, make sure you have configured your queue and are running a queue listener:</source>
          <target state="translated">&lt;code&gt;Artisan&lt;/code&gt; ファサードで &lt;code&gt;queue&lt;/code&gt; メソッドを使用すると、Artisanコマンドを&lt;a href=&quot;queues&quot;&gt;キューに入れ&lt;/a&gt;て、キューワーカーによってバックグラウンドで処理されるようにすることもできます。このメソッドを使用する前に、キューを構成し、キューリスナーを実行していることを確認してください。</target>
        </trans-unit>
        <trans-unit id="27a24dbd64e1ac755132eb44feff861706999322" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;timezone&lt;/code&gt; method, you may specify that a scheduled task's time should be interpreted within a given timezone:</source>
          <target state="translated">&lt;code&gt;timezone&lt;/code&gt; メソッドを使用すると、スケジュールされたタスクの時間を特定のタイムゾーン内で解釈するように指定できます。</target>
        </trans-unit>
        <trans-unit id="e3ed6eadd37b5bc0955a052e8e60637bdc9c6048" translate="yes" xml:space="preserve">
          <source>Using the Memcached driver requires the &lt;a href=&quot;https://pecl.php.net/package/memcached&quot;&gt;Memcached PECL package&lt;/a&gt; to be installed. You may list all of your Memcached servers in the &lt;code&gt;config/cache.php&lt;/code&gt; configuration file:</source>
          <target state="translated">Memcachedドライバーを使用するには、&lt;a href=&quot;https://pecl.php.net/package/memcached&quot;&gt;Memcached PECLパッケージ&lt;/a&gt;をインストールする必要があります。すべてのMemcachedサーバーを &lt;code&gt;config/cache.php&lt;/code&gt; 構成ファイルにリストできます。</target>
        </trans-unit>
        <trans-unit id="bcb12112c0f1179c9c17c9f8020135846a27f2d8" translate="yes" xml:space="preserve">
          <source>Utilizing A Local Scope</source>
          <target state="translated">ローカルスコープの活用</target>
        </trans-unit>
        <trans-unit id="976bf1c80ce87f4d5095dac7464aeabbcb5981e2" translate="yes" xml:space="preserve">
          <source>UuidInterface</source>
          <target state="translated">UuidInterface</target>
        </trans-unit>
        <trans-unit id="1033afd1ffe433be3334a586831b5b90e719c44a" translate="yes" xml:space="preserve">
          <source>VARCHAR equivalent column with a optional length.</source>
          <target state="translated">任意の長さのVARCHAR等価列。</target>
        </trans-unit>
        <trans-unit id="b33892fbddeffc3368077b4904ad0b3d562a7312" translate="yes" xml:space="preserve">
          <source>VERSION</source>
          <target state="translated">VERSION</target>
        </trans-unit>
        <trans-unit id="7c4318788e30db66abddf721412f42bf7eac6d83" translate="yes" xml:space="preserve">
          <source>VISIBILITY_PRIVATE</source>
          <target state="translated">VISIBILITY_PRIVATE</target>
        </trans-unit>
        <trans-unit id="17fd123d652bb24f8e16616f88600967f74eeb90" translate="yes" xml:space="preserve">
          <source>VISIBILITY_PUBLIC</source>
          <target state="translated">VISIBILITY_PUBLIC</target>
        </trans-unit>
        <trans-unit id="1f185450ee544ae965bb9573dd704b8abfefef26" translate="yes" xml:space="preserve">
          <source>Valet 2.0 transitions Valet's underlying web server from Caddy to Nginx. Before upgrading to this version you should run the following commands to stop and uninstall the existing Caddy daemon:</source>
          <target state="translated">Valet 2.0 は、Valet の基盤となるウェブサーバを Caddy から Nginx に移行します。このバージョンにアップグレードする前に、以下のコマンドを実行して既存の Caddy デーモンを停止してアンインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="eb51daea5519daa59c110af3ff0fdce0f775a821" translate="yes" xml:space="preserve">
          <source>Valet Or Homestead</source>
          <target state="translated">バレットまたはホームステッド</target>
        </trans-unit>
        <trans-unit id="26fa6221d420c739c957e39e36b8669ec9493b9a" translate="yes" xml:space="preserve">
          <source>Valet even includes a command to share your local sites with the world. No additional software installation is required once Valet is installed.</source>
          <target state="translated">Valetには、ローカルサイトを世界と共有するためのコマンドも含まれています。Valetをインストールしてしまえば、ソフトウェアの追加インストールは必要ありません。</target>
        </trans-unit>
        <trans-unit id="15bee6457bf5499b6941a3d7bc06352107aef258" translate="yes" xml:space="preserve">
          <source>Valet is a Laravel development environment for Mac minimalists. No Vagrant, no &lt;code&gt;/etc/hosts&lt;/code&gt; file. You can even share your sites publicly using local tunnels. &lt;em&gt;Yeah, we like it too.&lt;/em&gt;</source>
          <target state="translated">ValetはMacミニマリストのためのLaravel開発環境です。Vagrantも &lt;code&gt;/etc/hosts&lt;/code&gt; ファイルもありません。ローカルトンネルを使用してサイトを公開することもできます。&lt;em&gt;ええ、私たちもそれが好きです。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="42c0b9ead0c11c596b4a96ec474adae3a3c540be" translate="yes" xml:space="preserve">
          <source>Valet only supports Mac, and requires you to install PHP and a database server directly onto your local machine. This is easily achieved by using &lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; with commands like &lt;code&gt;brew install php&lt;/code&gt; and &lt;code&gt;brew install mysql&lt;/code&gt;. Valet provides a blazing fast local development environment with minimal resource consumption, so it's great for developers who only require PHP / MySQL and do not need a fully virtualized development environment.</source>
          <target state="translated">ValetはMacのみをサポートしており、ローカルマシンに直接PHPとデータベースサーバーをインストールする必要があります。これは、 &lt;code&gt;brew install php&lt;/code&gt; や &lt;code&gt;brew install mysql&lt;/code&gt; などのコマンドで&lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;を使用することで簡単に実現できます。Valetは、最小限のリソース消費で高速のローカル開発環境を提供するため、PHP / MySQLのみを必要とし、完全に仮想化された開発環境を必要としない開発者に最適です。</target>
        </trans-unit>
        <trans-unit id="6dbfbc5d8337390ade7cc39d221ef41687ed6cab" translate="yes" xml:space="preserve">
          <source>Valet will automatically start its daemon each time your machine boots. There is no need to run &lt;code&gt;valet start&lt;/code&gt; or &lt;code&gt;valet install&lt;/code&gt; ever again once the initial Valet installation is complete.</source>
          <target state="translated">Valetは、マシンが起動するたびにデーモンを自動的に起動します。最初のValetインストールが完了したら、 &lt;code&gt;valet start&lt;/code&gt; または &lt;code&gt;valet install&lt;/code&gt; を再度実行する必要はありません。</target>
        </trans-unit>
        <trans-unit id="57e96c6ba747a0c200bcccb1b419a4e886fdbece" translate="yes" xml:space="preserve">
          <source>Validate a given attribute against a rule.</source>
          <target state="translated">与えられた属性をルールに対して検証します。</target>
        </trans-unit>
        <trans-unit id="bf05c9bb9c98f61e1d302485ed610ec9dbcd9444" translate="yes" xml:space="preserve">
          <source>Validate a given rule against a route and request.</source>
          <target state="translated">ルートとリクエストに対して与えられたルールを検証します。</target>
        </trans-unit>
        <trans-unit id="d4b6027fe5ad73a4c290bbac11d3555f16f1dd96" translate="yes" xml:space="preserve">
          <source>Validate a password reset for the given credentials.</source>
          <target state="translated">与えられた資格情報のパスワードリセットを検証します。</target>
        </trans-unit>
        <trans-unit id="6a0c4f022d9c795fc1f2a61e99f93f887e2bccd4" translate="yes" xml:space="preserve">
          <source>Validate a user against the given credentials.</source>
          <target state="translated">与えられた資格情報に対してユーザーを検証します。</target>
        </trans-unit>
        <trans-unit id="6bffe55f8f623a1224d882b06bf194cbc65a7546" translate="yes" xml:space="preserve">
          <source>Validate a user's credentials.</source>
          <target state="translated">ユーザーの資格情報を検証します。</target>
        </trans-unit>
        <trans-unit id="88bf33d745c16d038c737ecf51b73fe1debde309" translate="yes" xml:space="preserve">
          <source>Validate an attribute is contained within a list of values.</source>
          <target state="translated">属性が値のリストに含まれていることを検証します。</target>
        </trans-unit>
        <trans-unit id="ef0b710d34997d403a7854d04236bae2cc162119" translate="yes" xml:space="preserve">
          <source>Validate an attribute is not contained within a list of values.</source>
          <target state="translated">属性が値のリストに含まれていないことを検証します。</target>
        </trans-unit>
        <trans-unit id="0bbbeba79817c9a5086a8f0076e7f31f685c95fe" translate="yes" xml:space="preserve">
          <source>Validate an attribute is unique among other values.</source>
          <target state="translated">属性が他の値の中で一意であることを検証します。</target>
        </trans-unit>
        <trans-unit id="a3688c63a10d1a97aac77c7d7a69dc854a8bc94d" translate="yes" xml:space="preserve">
          <source>Validate an attribute using a custom rule object.</source>
          <target state="translated">カスタムルールオブジェクトを使用して属性を検証します。</target>
        </trans-unit>
        <trans-unit id="f4742cb9bd40c1efc47dd7a72490be12a8a03997" translate="yes" xml:space="preserve">
          <source>Validate and return the decoded response JSON.</source>
          <target state="translated">デコードされたレスポンスJSONを検証して返します。</target>
        </trans-unit>
        <trans-unit id="ff4e36dc555e99bd821546820b2d9af938a738d9" translate="yes" xml:space="preserve">
          <source>Validate that a required attribute exists.</source>
          <target state="translated">必須属性が存在することを検証します。</target>
        </trans-unit>
        <trans-unit id="f04da6cab263ff3bee6b08cace4a973dfc32e6c1" translate="yes" xml:space="preserve">
          <source>Validate that an attribute contains only alpha-numeric characters, dashes, and underscores.</source>
          <target state="translated">属性が英数字、ダッシュ、およびアンダースコアのみを含むことを検証します。</target>
        </trans-unit>
        <trans-unit id="72d23bac999a5932fc758e21a78a5e2845978ce6" translate="yes" xml:space="preserve">
          <source>Validate that an attribute contains only alpha-numeric characters.</source>
          <target state="translated">属性が英数字のみを含むことを検証します。</target>
        </trans-unit>
        <trans-unit id="e9fe65d0f707ad143edd22baff2365eff37d90d3" translate="yes" xml:space="preserve">
          <source>Validate that an attribute contains only alphabetic characters.</source>
          <target state="translated">属性がアルファベット文字のみを含むことを検証します。</target>
        </trans-unit>
        <trans-unit id="343482576c652c62c3f758f2a8a84b67326b95c3" translate="yes" xml:space="preserve">
          <source>Validate that an attribute does not pass a regular expression check.</source>
          <target state="translated">属性が正規表現チェックを通過しないことを検証します。</target>
        </trans-unit>
        <trans-unit id="528c4f3f775ec32d1a02f06f86ad0bedbe080102" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists even if not filled.</source>
          <target state="translated">埋められていなくても属性が存在することを検証します。</target>
        </trans-unit>
        <trans-unit id="59fc4f9414926244586f0a65035d9015f551562d" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists when all other attributes do not.</source>
          <target state="translated">他のすべての属性が存在しない場合に、ある属性が存在することを検証します。</target>
        </trans-unit>
        <trans-unit id="7ae72d0c62fd66b764922dea73382cf9b3a9d7cc" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists when all other attributes exists.</source>
          <target state="translated">他のすべての属性が存在する場合に、ある属性が存在することを検証します。</target>
        </trans-unit>
        <trans-unit id="a7d4b77cb04bb7993b55744bfbfb9c5a9121f630" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists when another attribute does not have a given value.</source>
          <target state="translated">他の属性が指定された値を持たない場合に属性が存在することを検証します。</target>
        </trans-unit>
        <trans-unit id="e3d1586f41a80f5392410201a83d37a9cced3e5f" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists when another attribute does not.</source>
          <target state="translated">他の属性が存在しない場合に、ある属性が存在することを検証します。</target>
        </trans-unit>
        <trans-unit id="6910ffad2ed3ac501d9ab9ba6c93157d14ad4f89" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists when another attribute has a given value.</source>
          <target state="translated">他の属性が与えられた値を持つ場合に、その属性が存在することを検証します。</target>
        </trans-unit>
        <trans-unit id="b18848b3e6ba7b069c97d7d249349ed0630d5cfa" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists when any other attribute exists.</source>
          <target state="translated">他の属性が存在する場合に、その属性が存在することを検証します。</target>
        </trans-unit>
        <trans-unit id="ef3dc2da8cb7d76ce0b640a4401ed6d3dc777054" translate="yes" xml:space="preserve">
          <source>Validate that an attribute has a given number of digits.</source>
          <target state="translated">属性が指定された桁数を持つことを検証します。</target>
        </trans-unit>
        <trans-unit id="c25adb3ce0614ad4841b984aed069bc89daf9267" translate="yes" xml:space="preserve">
          <source>Validate that an attribute has a matching confirmation.</source>
          <target state="translated">属性に一致する確認があることを検証します。</target>
        </trans-unit>
        <trans-unit id="78e4c4963c6610602a85d57f4f87027bdfa9f56d" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a boolean.</source>
          <target state="translated">属性がブール値であることを検証します。</target>
        </trans-unit>
        <trans-unit id="ef297e9dda78fca255cd04f6680efefd38de0e98" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a string.</source>
          <target state="translated">属性が文字列であることを検証します。</target>
        </trans-unit>
        <trans-unit id="917ef08a453ae5c72f72992ab2adcf047729f5f2" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid IP.</source>
          <target state="translated">属性が有効な IP であることを検証します。</target>
        </trans-unit>
        <trans-unit id="002b3a6923d6a6558705d6522dc586406140c54c" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid IPv4.</source>
          <target state="translated">属性が有効なIPv4であることを検証します。</target>
        </trans-unit>
        <trans-unit id="81443e60479152cb9295ec1af294468b2ff78709" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid IPv6.</source>
          <target state="translated">属性が有効なIPv6であることを検証します。</target>
        </trans-unit>
        <trans-unit id="8f537f1355b5fcd44027e9d4f1b106b8f1ea8172" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid URL.</source>
          <target state="translated">属性が有効な URL であることを検証します。</target>
        </trans-unit>
        <trans-unit id="4cea5b6196d6fcd64b9c9c78609e744d9ef9686c" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid date.</source>
          <target state="translated">属性が有効な日付であることを検証します。</target>
        </trans-unit>
        <trans-unit id="69de406e80d83d478d4ffc643d664935eb791d9e" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid e-mail address.</source>
          <target state="translated">属性が有効な電子メールアドレスであることを検証します。</target>
        </trans-unit>
        <trans-unit id="797b268481d712b46de1e235d3fc9a2de04fa53a" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid timezone.</source>
          <target state="translated">属性が有効なタイムゾーンであることを検証します。</target>
        </trans-unit>
        <trans-unit id="6408631ac8cfe3a1a98def64a84e4afc540e8bb6" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is an active URL.</source>
          <target state="translated">属性がアクティブな URL であることを検証します。</target>
        </trans-unit>
        <trans-unit id="ce8e0538d7ffc7023a95490c83b9fe970007ec61" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is an array.</source>
          <target state="translated">属性が配列であることを検証します。</target>
        </trans-unit>
        <trans-unit id="803717010ab309ed8d3cc551e176e4584906c4dd" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is an integer.</source>
          <target state="translated">属性が整数であることを検証します。</target>
        </trans-unit>
        <trans-unit id="2e0946185badb69b3adbf87c3fbf61a0abafaaba" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is between a given number of digits.</source>
          <target state="translated">属性が指定された桁数の間にあることを検証します。</target>
        </trans-unit>
        <trans-unit id="9be0fabb9bb58086041743aeaf2dedf2b9718d36" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is different from another attribute.</source>
          <target state="translated">ある属性が他の属性と異なることを検証します。</target>
        </trans-unit>
        <trans-unit id="e663a2c5c85ab2612a48b0b4c0bf70e7d11619a4" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is equal to another date.</source>
          <target state="translated">属性が別の日付と等しいことを検証します。</target>
        </trans-unit>
        <trans-unit id="3feaa754c65000f926bd8e4073b7024445588a3e" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is greater than another attribute.</source>
          <target state="translated">ある属性が他の属性よりも大きいことを検証します。</target>
        </trans-unit>
        <trans-unit id="800ca0d2cf10da481e4165f16419d6ae6c5e5952" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is greater than or equal another attribute.</source>
          <target state="translated">ある属性が他の属性より大きいか等しいかを検証します。</target>
        </trans-unit>
        <trans-unit id="2742f5408d37a36fc6242e7d86d75c1e62792d4d" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is less than another attribute.</source>
          <target state="translated">ある属性が他の属性よりも小さいことを検証します。</target>
        </trans-unit>
        <trans-unit id="caf6a3a079ce556bd86acaee877ac71b916a4715" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is less than or equal another attribute.</source>
          <target state="translated">ある属性が他の属性以下であることを検証します。</target>
        </trans-unit>
        <trans-unit id="fb28b05b8f72a7b43101e797cc2643264b66ab9b" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is numeric.</source>
          <target state="translated">属性が数値であることを検証します。</target>
        </trans-unit>
        <trans-unit id="c8e5167bcea5859f503cb801c69f60f028a1aee9" translate="yes" xml:space="preserve">
          <source>Validate that an attribute matches a date format.</source>
          <target state="translated">属性が日付フォーマットに一致することを検証します。</target>
        </trans-unit>
        <trans-unit id="d76daf0f330118c6b2aa7427b4b1da2b505404eb" translate="yes" xml:space="preserve">
          <source>Validate that an attribute passes a regular expression check.</source>
          <target state="translated">属性が正規表現チェックを通過していることを検証します。</target>
        </trans-unit>
        <trans-unit id="3a539f3f8586772f9fd67bffc1c95b62d8d3f105" translate="yes" xml:space="preserve">
          <source>Validate that an attribute was &quot;accepted&quot;.</source>
          <target state="translated">属性が &quot;受け入れられた &quot;ことを検証します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
