<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="">
    <body>
      <group id="">
        <trans-unit id="e40c336414ab8db8b04bfe4211c96a53c15ce3db" translate="yes" xml:space="preserve">
          <source>HasInDatabase::matches()</source>
          <target state="translated">HasInDatabase::matches()</target>
        </trans-unit>
        <trans-unit id="9230714307867f6b9e07ed59082f6520eeca5f09" translate="yes" xml:space="preserve">
          <source>HasInDatabase::toString()</source>
          <target state="translated">HasInDatabase::toString()</target>
        </trans-unit>
        <trans-unit id="7824457d2a6d197a28cf142026072416993aafa9" translate="yes" xml:space="preserve">
          <source>HasLocalePreference</source>
          <target state="translated">HasLocalePreference</target>
        </trans-unit>
        <trans-unit id="35f5fa3e5c330f66d78d748a1cd2b4aba971afde" translate="yes" xml:space="preserve">
          <source>HasLocalePreference (Contracts)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6dfd39a47430c18053a1fdb53f3a6e427bf383a" translate="yes" xml:space="preserve">
          <source>HasLocalePreference::preferredLocale()</source>
          <target state="translated">HasLocalePreference::preferredLocale()</target>
        </trans-unit>
        <trans-unit id="92789234d7e25be07f8afca4bcff8e4eca67bd7b" translate="yes" xml:space="preserve">
          <source>HasMany</source>
          <target state="translated">HasMany</target>
        </trans-unit>
        <trans-unit id="78c485684ac9f5d93a9e7700d89c2b7bbc8b6049" translate="yes" xml:space="preserve">
          <source>HasMany (Database\Eloquent\Relations)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="157001c0a05da87a6f48a6455448a628a4ba1c5a" translate="yes" xml:space="preserve">
          <source>HasMany::getResults()</source>
          <target state="translated">HasMany::getResults()</target>
        </trans-unit>
        <trans-unit id="05c011f557d71e9f863d98cbb4264820ba24d86b" translate="yes" xml:space="preserve">
          <source>HasMany::initRelation()</source>
          <target state="translated">HasMany::initRelation()</target>
        </trans-unit>
        <trans-unit id="e4c59d31e6cb12c0d8f0ca3feb5054951acc876c" translate="yes" xml:space="preserve">
          <source>HasMany::match()</source>
          <target state="translated">HasMany::match()</target>
        </trans-unit>
        <trans-unit id="072948072e5efe4491ee5ed87a2c3f0735a0f56f" translate="yes" xml:space="preserve">
          <source>HasManyThrough</source>
          <target state="translated">HasManyThrough</target>
        </trans-unit>
        <trans-unit id="703348faab6a7dab55c8af6a922e61cdbdc3e5f1" translate="yes" xml:space="preserve">
          <source>HasManyThrough (Database\Eloquent\Relations)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b230d6689dc9ee72d495abe8ad19edd5740e80fb" translate="yes" xml:space="preserve">
          <source>HasManyThrough::__construct()</source>
          <target state="translated">HasManyThrough::__construct()</target>
        </trans-unit>
        <trans-unit id="bbc89c6e24d9a693c974669d4c046b42441d3c6c" translate="yes" xml:space="preserve">
          <source>HasManyThrough::addConstraints()</source>
          <target state="translated">HasManyThrough::addConstraints()</target>
        </trans-unit>
        <trans-unit id="264fdb7c2121265edfad14ade98e16df8e615f8e" translate="yes" xml:space="preserve">
          <source>HasManyThrough::addEagerConstraints()</source>
          <target state="translated">HasManyThrough::addEagerConstraints()</target>
        </trans-unit>
        <trans-unit id="878b369a965b2f1c282f8b6cb03534aa67ccd781" translate="yes" xml:space="preserve">
          <source>HasManyThrough::buildDictionary()</source>
          <target state="translated">HasManyThrough::buildDictionary()</target>
        </trans-unit>
        <trans-unit id="0f5d71d9b82144c5989fe9db86c55916e316c750" translate="yes" xml:space="preserve">
          <source>HasManyThrough::chunk()</source>
          <target state="translated">HasManyThrough::chunk()</target>
        </trans-unit>
        <trans-unit id="cdfa3df166677239dd79f55dae1436383d019be3" translate="yes" xml:space="preserve">
          <source>HasManyThrough::cursor()</source>
          <target state="translated">HasManyThrough::cursor()</target>
        </trans-unit>
        <trans-unit id="aa28629aa5554fbcb0a9fd861c335e167fdbb603" translate="yes" xml:space="preserve">
          <source>HasManyThrough::each()</source>
          <target state="translated">HasManyThrough::each()</target>
        </trans-unit>
        <trans-unit id="16c8f22e15d6bc2e56df94063246c77369e17548" translate="yes" xml:space="preserve">
          <source>HasManyThrough::find()</source>
          <target state="translated">HasManyThrough::find()</target>
        </trans-unit>
        <trans-unit id="e6dfd24b3157c8111791f08aa4981605ae38da32" translate="yes" xml:space="preserve">
          <source>HasManyThrough::findMany()</source>
          <target state="translated">HasManyThrough::findMany()</target>
        </trans-unit>
        <trans-unit id="f7d9f7aaf0451505b9099fa0d669b069391c7cd9" translate="yes" xml:space="preserve">
          <source>HasManyThrough::findOrFail()</source>
          <target state="translated">HasManyThrough::findOrFail()</target>
        </trans-unit>
        <trans-unit id="1f7974b8307284e26e4cf305c06869ac1bc3bdfd" translate="yes" xml:space="preserve">
          <source>HasManyThrough::first()</source>
          <target state="translated">HasManyThrough::first()</target>
        </trans-unit>
        <trans-unit id="b40e6aee872c0bd591f922247297a4d0e37e5c07" translate="yes" xml:space="preserve">
          <source>HasManyThrough::firstOrFail()</source>
          <target state="translated">HasManyThrough::firstOrFail()</target>
        </trans-unit>
        <trans-unit id="b488ff8efd3bcf7b98ec5bdf155cbb12f07b715e" translate="yes" xml:space="preserve">
          <source>HasManyThrough::firstOrNew()</source>
          <target state="translated">HasManyThrough::firstOrNew()</target>
        </trans-unit>
        <trans-unit id="398396273c1d836ce367dc116b03d609981a018e" translate="yes" xml:space="preserve">
          <source>HasManyThrough::get()</source>
          <target state="translated">HasManyThrough::get()</target>
        </trans-unit>
        <trans-unit id="b0530e248ca781bd252cb7851482f265d84cebd0" translate="yes" xml:space="preserve">
          <source>HasManyThrough::getQualifiedFarKeyName()</source>
          <target state="translated">HasManyThrough::getQualifiedFarKeyName()</target>
        </trans-unit>
        <trans-unit id="8e900c570231c2efc1369c2ea980a740f3c8fc80" translate="yes" xml:space="preserve">
          <source>HasManyThrough::getQualifiedFirstKeyName()</source>
          <target state="translated">HasManyThrough::getQualifiedFirstKeyName()</target>
        </trans-unit>
        <trans-unit id="8c7425f3f6e565324b8a4b5167875468fc76f1c1" translate="yes" xml:space="preserve">
          <source>HasManyThrough::getQualifiedForeignKeyName()</source>
          <target state="translated">HasManyThrough::getQualifiedForeignKeyName()</target>
        </trans-unit>
        <trans-unit id="3d78e3f2815d2e6c3ec6696c9893072169f5599c" translate="yes" xml:space="preserve">
          <source>HasManyThrough::getQualifiedLocalKeyName()</source>
          <target state="translated">HasManyThrough::getQualifiedLocalKeyName()</target>
        </trans-unit>
        <trans-unit id="f2242b8a4394ee100382034283e0dd7ce7512fa3" translate="yes" xml:space="preserve">
          <source>HasManyThrough::getQualifiedParentKeyName()</source>
          <target state="translated">HasManyThrough::getQualifiedParentKeyName()</target>
        </trans-unit>
        <trans-unit id="0e953350348b86601467fde148aaa669ff90690d" translate="yes" xml:space="preserve">
          <source>HasManyThrough::getRelationCountHash()</source>
          <target state="translated">HasManyThrough::getRelationCountHash()</target>
        </trans-unit>
        <trans-unit id="aa5a89517a61b33c18feb8cdbc458256b152ace8" translate="yes" xml:space="preserve">
          <source>HasManyThrough::getRelationExistenceQuery()</source>
          <target state="translated">HasManyThrough::getRelationExistenceQuery()</target>
        </trans-unit>
        <trans-unit id="72eb7db7d5abd9662d4bee5e30ba3178fa04cbbe" translate="yes" xml:space="preserve">
          <source>HasManyThrough::getRelationExistenceQueryForSelfRelation()</source>
          <target state="translated">HasManyThrough::getRelationExistenceQueryForSelfRelation()</target>
        </trans-unit>
        <trans-unit id="e94fb328d647fcd8b201bdca9438eabb32cff28f" translate="yes" xml:space="preserve">
          <source>HasManyThrough::getResults()</source>
          <target state="translated">HasManyThrough::getResults()</target>
        </trans-unit>
        <trans-unit id="090812b3429538e37df2b4fc3e53ae7979089948" translate="yes" xml:space="preserve">
          <source>HasManyThrough::initRelation()</source>
          <target state="translated">HasManyThrough::initRelation()</target>
        </trans-unit>
        <trans-unit id="8a95df32321c1ce1b080975dda3aadeee4d2582b" translate="yes" xml:space="preserve">
          <source>HasManyThrough::match()</source>
          <target state="translated">HasManyThrough::match()</target>
        </trans-unit>
        <trans-unit id="70bb6a6589248b05b0a808e1c4014633af77b8c3" translate="yes" xml:space="preserve">
          <source>HasManyThrough::paginate()</source>
          <target state="translated">HasManyThrough::paginate()</target>
        </trans-unit>
        <trans-unit id="425c8e21c71ab0960446b8a052ea5252e2bd0522" translate="yes" xml:space="preserve">
          <source>HasManyThrough::performJoin()</source>
          <target state="translated">HasManyThrough::performJoin()</target>
        </trans-unit>
        <trans-unit id="8a9b30893e64ec51d1878f79d134662aa79703a9" translate="yes" xml:space="preserve">
          <source>HasManyThrough::prepareQueryBuilder()</source>
          <target state="translated">HasManyThrough::prepareQueryBuilder()</target>
        </trans-unit>
        <trans-unit id="77ba258da77abcb8cc3043f5cf409ed68f084c70" translate="yes" xml:space="preserve">
          <source>HasManyThrough::shouldSelect()</source>
          <target state="translated">HasManyThrough::shouldSelect()</target>
        </trans-unit>
        <trans-unit id="6b511919ea6ceabbc40b22533413b3d15b85aca7" translate="yes" xml:space="preserve">
          <source>HasManyThrough::simplePaginate()</source>
          <target state="translated">HasManyThrough::simplePaginate()</target>
        </trans-unit>
        <trans-unit id="801be871270b353a168b227c46824c19361921b6" translate="yes" xml:space="preserve">
          <source>HasManyThrough::throughParentSoftDeletes()</source>
          <target state="translated">HasManyThrough::throughParentSoftDeletes()</target>
        </trans-unit>
        <trans-unit id="eea57cc0f895b60754a01c081c101aabb88d71d8" translate="yes" xml:space="preserve">
          <source>HasManyThrough::updateOrCreate()</source>
          <target state="translated">HasManyThrough::updateOrCreate()</target>
        </trans-unit>
        <trans-unit id="bd0422a6e4667f9fd25c225c8354b9031b11095b" translate="yes" xml:space="preserve">
          <source>HasOne</source>
          <target state="translated">HasOne</target>
        </trans-unit>
        <trans-unit id="d442bda4160701c0a45b8c37b950ddc442b8d44d" translate="yes" xml:space="preserve">
          <source>HasOne (Database\Eloquent\Relations)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5740685792efa978b988031a9afdb21261837925" translate="yes" xml:space="preserve">
          <source>HasOne::getResults()</source>
          <target state="translated">HasOne::getResults()</target>
        </trans-unit>
        <trans-unit id="ea4505951a08a76c71f1557885aa916d930585bd" translate="yes" xml:space="preserve">
          <source>HasOne::initRelation()</source>
          <target state="translated">HasOne::initRelation()</target>
        </trans-unit>
        <trans-unit id="7aeacacabeea3988d73148f7a1f64992bb303ab4" translate="yes" xml:space="preserve">
          <source>HasOne::match()</source>
          <target state="translated">HasOne::match()</target>
        </trans-unit>
        <trans-unit id="dcf2363efc2c501cb3446710bb4c61c781cd2680" translate="yes" xml:space="preserve">
          <source>HasOne::newRelatedInstanceFor()</source>
          <target state="translated">HasOne::newRelatedInstanceFor()</target>
        </trans-unit>
        <trans-unit id="0d0463c979d8e2852d02c26ca29fbd1e29844592" translate="yes" xml:space="preserve">
          <source>HasOneOrMany</source>
          <target state="translated">HasOneOrMany</target>
        </trans-unit>
        <trans-unit id="6856e0350f594f8dffe50173581ceeedb560b33f" translate="yes" xml:space="preserve">
          <source>HasOneOrMany (Database\Eloquent\Relations)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b334801a2ca6fd7838d8385711e34b3520125ac0" translate="yes" xml:space="preserve">
          <source>HasOneOrMany::__construct()</source>
          <target state="translated">HasOneOrMany::__construct()</target>
        </trans-unit>
        <trans-unit id="77c965f27c300c6a968c04cb403d36d4985548fc" translate="yes" xml:space="preserve">
          <source>HasOneOrMany::addConstraints()</source>
          <target state="translated">HasOneOrMany::addConstraints()</target>
        </trans-unit>
        <trans-unit id="703242e9b5ccbef1ed4e3a0db19127ca5f849ce8" translate="yes" xml:space="preserve">
          <source>HasOneOrMany::addEagerConstraints()</source>
          <target state="translated">HasOneOrMany::addEagerConstraints()</target>
        </trans-unit>
        <trans-unit id="24c0b864370059f8f56647119492b47932279732" translate="yes" xml:space="preserve">
          <source>HasOneOrMany::buildDictionary()</source>
          <target state="translated">HasOneOrMany::buildDictionary()</target>
        </trans-unit>
        <trans-unit id="8ab8f4e3e6b6386d049d1a8a8682ac792c8a2737" translate="yes" xml:space="preserve">
          <source>HasOneOrMany::create()</source>
          <target state="translated">HasOneOrMany::create()</target>
        </trans-unit>
        <trans-unit id="4bb39768b5e9c070169f174e67fb9de842ffec95" translate="yes" xml:space="preserve">
          <source>HasOneOrMany::createMany()</source>
          <target state="translated">HasOneOrMany::createMany()</target>
        </trans-unit>
        <trans-unit id="9c9dee52c037d6a298137edc8f1eb4f1b8ed5191" translate="yes" xml:space="preserve">
          <source>HasOneOrMany::findOrNew()</source>
          <target state="translated">HasOneOrMany::findOrNew()</target>
        </trans-unit>
        <trans-unit id="985797cd1f35d29bc7ff0e0e95e73524d127c5b8" translate="yes" xml:space="preserve">
          <source>HasOneOrMany::firstOrCreate()</source>
          <target state="translated">HasOneOrMany::firstOrCreate()</target>
        </trans-unit>
        <trans-unit id="e1461d3216d1fb170e359a4ba4a99890b290bb5a" translate="yes" xml:space="preserve">
          <source>HasOneOrMany::firstOrNew()</source>
          <target state="translated">HasOneOrMany::firstOrNew()</target>
        </trans-unit>
        <trans-unit id="629f618142d6d9d0c2f0a4e0e4e6612503879b75" translate="yes" xml:space="preserve">
          <source>HasOneOrMany::getExistenceCompareKey()</source>
          <target state="translated">HasOneOrMany::getExistenceCompareKey()</target>
        </trans-unit>
        <trans-unit id="17666d5665b0d3b3052c465142a2b8af6f5bad10" translate="yes" xml:space="preserve">
          <source>HasOneOrMany::getForeignKeyName()</source>
          <target state="translated">HasOneOrMany::getForeignKeyName()</target>
        </trans-unit>
        <trans-unit id="8b9b2041d45f710246708dacbe97ba7422fa21c7" translate="yes" xml:space="preserve">
          <source>HasOneOrMany::getParentKey()</source>
          <target state="translated">HasOneOrMany::getParentKey()</target>
        </trans-unit>
        <trans-unit id="81dc0293eceabb44455d9911ac0b4199f6b1ed8f" translate="yes" xml:space="preserve">
          <source>HasOneOrMany::getQualifiedForeignKeyName()</source>
          <target state="translated">HasOneOrMany::getQualifiedForeignKeyName()</target>
        </trans-unit>
        <trans-unit id="f545b2e3b0f00669815096fee82e4bf0bd53b4db" translate="yes" xml:space="preserve">
          <source>HasOneOrMany::getQualifiedParentKeyName()</source>
          <target state="translated">HasOneOrMany::getQualifiedParentKeyName()</target>
        </trans-unit>
        <trans-unit id="104b9c1de2f4714046d55f50232dc3fc3d5d2558" translate="yes" xml:space="preserve">
          <source>HasOneOrMany::getRelationCountHash()</source>
          <target state="translated">HasOneOrMany::getRelationCountHash()</target>
        </trans-unit>
        <trans-unit id="58930a3803e8c87c50add20b6d21c49f8053282f" translate="yes" xml:space="preserve">
          <source>HasOneOrMany::getRelationExistenceQuery()</source>
          <target state="translated">HasOneOrMany::getRelationExistenceQuery()</target>
        </trans-unit>
        <trans-unit id="923ca33a408853609544603a78c7235ad36e08ac" translate="yes" xml:space="preserve">
          <source>HasOneOrMany::getRelationExistenceQueryForSelfRelation()</source>
          <target state="translated">HasOneOrMany::getRelationExistenceQueryForSelfRelation()</target>
        </trans-unit>
        <trans-unit id="a3d96fa1a563ac985a54833d352e72f0fd7f702a" translate="yes" xml:space="preserve">
          <source>HasOneOrMany::getRelationValue()</source>
          <target state="translated">HasOneOrMany::getRelationValue()</target>
        </trans-unit>
        <trans-unit id="d51ae6253b9bc29b60f43b7e1c847b05986f9002" translate="yes" xml:space="preserve">
          <source>HasOneOrMany::make()</source>
          <target state="translated">HasOneOrMany::make()</target>
        </trans-unit>
        <trans-unit id="87262f2b369a16a913e2efe9cd98867554091c67" translate="yes" xml:space="preserve">
          <source>HasOneOrMany::matchMany()</source>
          <target state="translated">HasOneOrMany::matchMany()</target>
        </trans-unit>
        <trans-unit id="38ab50030791b9744ca2aaeeac6fef0af9468207" translate="yes" xml:space="preserve">
          <source>HasOneOrMany::matchOne()</source>
          <target state="translated">HasOneOrMany::matchOne()</target>
        </trans-unit>
        <trans-unit id="e11f7bf526cf3dfcfc7457944dfea679841e49dc" translate="yes" xml:space="preserve">
          <source>HasOneOrMany::matchOneOrMany()</source>
          <target state="translated">HasOneOrMany::matchOneOrMany()</target>
        </trans-unit>
        <trans-unit id="89aa06b2fedde38afb93e075d6dd31670b517e49" translate="yes" xml:space="preserve">
          <source>HasOneOrMany::save()</source>
          <target state="translated">HasOneOrMany::save()</target>
        </trans-unit>
        <trans-unit id="b6190ecb72207ca5e5940d174d3a686ed5c3aab4" translate="yes" xml:space="preserve">
          <source>HasOneOrMany::saveMany()</source>
          <target state="translated">HasOneOrMany::saveMany()</target>
        </trans-unit>
        <trans-unit id="abd213c3f54c4b6c6e72b602d1ff0f91f356608e" translate="yes" xml:space="preserve">
          <source>HasOneOrMany::setForeignAttributesForCreate()</source>
          <target state="translated">HasOneOrMany::setForeignAttributesForCreate()</target>
        </trans-unit>
        <trans-unit id="5fcea1e3946283f6ca1d702e7c5fb9cc8546e76b" translate="yes" xml:space="preserve">
          <source>HasOneOrMany::update()</source>
          <target state="translated">HasOneOrMany::update()</target>
        </trans-unit>
        <trans-unit id="55a727e8cd59901d44bac4b83551153707500383" translate="yes" xml:space="preserve">
          <source>HasOneOrMany::updateOrCreate()</source>
          <target state="translated">HasOneOrMany::updateOrCreate()</target>
        </trans-unit>
        <trans-unit id="5ce2315714b54a7e02bca83b03c2bac60ec80fe5" translate="yes" xml:space="preserve">
          <source>HasRelationships</source>
          <target state="translated">HasRelationships</target>
        </trans-unit>
        <trans-unit id="f3ecd7671fa95ad9c2dc8e3193b8f0a6a4bf0fb8" translate="yes" xml:space="preserve">
          <source>HasRelationships (Database\Eloquent\Concerns)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e4fc004f55a03bc13b00ef22766915418fe9be" translate="yes" xml:space="preserve">
          <source>HasRelationships::belongsTo()</source>
          <target state="translated">HasRelationships::belongsTo()</target>
        </trans-unit>
        <trans-unit id="6cbcfbd40b75ab50a06bce54590dadcd53746207" translate="yes" xml:space="preserve">
          <source>HasRelationships::belongsToMany()</source>
          <target state="translated">HasRelationships::belongsToMany()</target>
        </trans-unit>
        <trans-unit id="2568c9f435e847fe675b93c21f143f49103d7bba" translate="yes" xml:space="preserve">
          <source>HasRelationships::getActualClassNameForMorph()</source>
          <target state="translated">HasRelationships::getActualClassNameForMorph()</target>
        </trans-unit>
        <trans-unit id="5a119351ccb3875760cba2f9b1d792663958bd4c" translate="yes" xml:space="preserve">
          <source>HasRelationships::getMorphClass()</source>
          <target state="translated">HasRelationships::getMorphClass()</target>
        </trans-unit>
        <trans-unit id="6235d980372e963dc631d694445a475503175823" translate="yes" xml:space="preserve">
          <source>HasRelationships::getMorphs()</source>
          <target state="translated">HasRelationships::getMorphs()</target>
        </trans-unit>
        <trans-unit id="1d784144b8ea6331928fbe5a5d01819f9579e169" translate="yes" xml:space="preserve">
          <source>HasRelationships::getRelation()</source>
          <target state="translated">HasRelationships::getRelation()</target>
        </trans-unit>
        <trans-unit id="e8c9f98aa75d06437df97b44c35ee4c4496db718" translate="yes" xml:space="preserve">
          <source>HasRelationships::getRelations()</source>
          <target state="translated">HasRelationships::getRelations()</target>
        </trans-unit>
        <trans-unit id="1fbc6b42faf5591878aefb4c20cdb1ead5d70261" translate="yes" xml:space="preserve">
          <source>HasRelationships::getTouchedRelations()</source>
          <target state="translated">HasRelationships::getTouchedRelations()</target>
        </trans-unit>
        <trans-unit id="d10829682e3fe79fb2d48bcd30ea30e20836f361" translate="yes" xml:space="preserve">
          <source>HasRelationships::guessBelongsToManyRelation()</source>
          <target state="translated">HasRelationships::guessBelongsToManyRelation()</target>
        </trans-unit>
        <trans-unit id="de0b45c35c3bc0ebeba49cd6098114d618289dbd" translate="yes" xml:space="preserve">
          <source>HasRelationships::guessBelongsToRelation()</source>
          <target state="translated">HasRelationships::guessBelongsToRelation()</target>
        </trans-unit>
        <trans-unit id="f15d008b17518c61e0de4c856c2c1f4b9705a655" translate="yes" xml:space="preserve">
          <source>HasRelationships::hasMany()</source>
          <target state="translated">HasRelationships::hasMany()</target>
        </trans-unit>
        <trans-unit id="da926c70e994eaa3cbc1bc2c7cdb33515d626989" translate="yes" xml:space="preserve">
          <source>HasRelationships::hasManyThrough()</source>
          <target state="translated">HasRelationships::hasManyThrough()</target>
        </trans-unit>
        <trans-unit id="5fc82de9e7f291a08b8e18cdcc5c64c932ea69ae" translate="yes" xml:space="preserve">
          <source>HasRelationships::hasOne()</source>
          <target state="translated">HasRelationships::hasOne()</target>
        </trans-unit>
        <trans-unit id="25f29d5a349704b935c7f11615f95fee3d0a3589" translate="yes" xml:space="preserve">
          <source>HasRelationships::joiningTable()</source>
          <target state="translated">HasRelationships::joiningTable()</target>
        </trans-unit>
        <trans-unit id="6b43d320cd5ee5e79548a7fc5158f2282190e8fa" translate="yes" xml:space="preserve">
          <source>HasRelationships::joiningTableSegment()</source>
          <target state="translated">HasRelationships::joiningTableSegment()</target>
        </trans-unit>
        <trans-unit id="9a549050c2a0732f4c18c483226a32d74f55de60" translate="yes" xml:space="preserve">
          <source>HasRelationships::morphEagerTo()</source>
          <target state="translated">HasRelationships::morphEagerTo()</target>
        </trans-unit>
        <trans-unit id="7272b6c61bcf5d579fe4d67dc9619d462d96bf2f" translate="yes" xml:space="preserve">
          <source>HasRelationships::morphInstanceTo()</source>
          <target state="translated">HasRelationships::morphInstanceTo()</target>
        </trans-unit>
        <trans-unit id="74a1c76e130e7c05447eb73b8f5c3192d9c015b2" translate="yes" xml:space="preserve">
          <source>HasRelationships::morphMany()</source>
          <target state="translated">HasRelationships::morphMany()</target>
        </trans-unit>
        <trans-unit id="69cda898a265b87ea0b1b38183a8ddf6e5736a15" translate="yes" xml:space="preserve">
          <source>HasRelationships::morphOne()</source>
          <target state="translated">HasRelationships::morphOne()</target>
        </trans-unit>
        <trans-unit id="e5abb2d35db33b15513c00c067441f68d4a003a4" translate="yes" xml:space="preserve">
          <source>HasRelationships::morphTo()</source>
          <target state="translated">HasRelationships::morphTo()</target>
        </trans-unit>
        <trans-unit id="5d49691aeffd87e2ebbcc3211c68dcf4228d0c0e" translate="yes" xml:space="preserve">
          <source>HasRelationships::morphToMany()</source>
          <target state="translated">HasRelationships::morphToMany()</target>
        </trans-unit>
        <trans-unit id="f3f9f12e91578b0af44df738185535d7194e2228" translate="yes" xml:space="preserve">
          <source>HasRelationships::morphedByMany()</source>
          <target state="translated">HasRelationships::morphedByMany()</target>
        </trans-unit>
        <trans-unit id="d15b5b77f858b78af314c1af3c469581777a81fd" translate="yes" xml:space="preserve">
          <source>HasRelationships::newBelongsTo()</source>
          <target state="translated">HasRelationships::newBelongsTo()</target>
        </trans-unit>
        <trans-unit id="bd80dc98638381498ee9b7345b06ae13b1387b8a" translate="yes" xml:space="preserve">
          <source>HasRelationships::newBelongsToMany()</source>
          <target state="translated">HasRelationships::newBelongsToMany()</target>
        </trans-unit>
        <trans-unit id="0eef9566187cef58d943f94043311fcb2034eab9" translate="yes" xml:space="preserve">
          <source>HasRelationships::newHasMany()</source>
          <target state="translated">HasRelationships::newHasMany()</target>
        </trans-unit>
        <trans-unit id="7cb38a35d9332cef281c0723ff41a204944cd1a6" translate="yes" xml:space="preserve">
          <source>HasRelationships::newHasManyThrough()</source>
          <target state="translated">HasRelationships::newHasManyThrough()</target>
        </trans-unit>
        <trans-unit id="49d688c6f539b3e25883d92f5584ca02e7b0f0a6" translate="yes" xml:space="preserve">
          <source>HasRelationships::newHasOne()</source>
          <target state="translated">HasRelationships::newHasOne()</target>
        </trans-unit>
        <trans-unit id="a93e8d2010ce5d4fe467188ace076a83c89fa032" translate="yes" xml:space="preserve">
          <source>HasRelationships::newMorphMany()</source>
          <target state="translated">HasRelationships::newMorphMany()</target>
        </trans-unit>
        <trans-unit id="31fcc9db40fa174650e4a1716a6a57fd06777eae" translate="yes" xml:space="preserve">
          <source>HasRelationships::newMorphOne()</source>
          <target state="translated">HasRelationships::newMorphOne()</target>
        </trans-unit>
        <trans-unit id="3bb324168eba067900b2504cdd82f7cd5f5ed965" translate="yes" xml:space="preserve">
          <source>HasRelationships::newMorphTo()</source>
          <target state="translated">HasRelationships::newMorphTo()</target>
        </trans-unit>
        <trans-unit id="23fce0d775f25e48239bc812e3938588e10b7d79" translate="yes" xml:space="preserve">
          <source>HasRelationships::newMorphToMany()</source>
          <target state="translated">HasRelationships::newMorphToMany()</target>
        </trans-unit>
        <trans-unit id="b9e9907c8b87615f5942d0bce4f7c83f0ea4bb22" translate="yes" xml:space="preserve">
          <source>HasRelationships::newRelatedInstance()</source>
          <target state="translated">HasRelationships::newRelatedInstance()</target>
        </trans-unit>
        <trans-unit id="da2efba4df372284b52af1594bef6d02f258c4c9" translate="yes" xml:space="preserve">
          <source>HasRelationships::relationLoaded()</source>
          <target state="translated">HasRelationships::relationLoaded()</target>
        </trans-unit>
        <trans-unit id="4682abcaed62849e64faee2250b66885c4e3fbd6" translate="yes" xml:space="preserve">
          <source>HasRelationships::setRelation()</source>
          <target state="translated">HasRelationships::setRelation()</target>
        </trans-unit>
        <trans-unit id="5f308eda8cfc211767e00df9286a8a24fdb139f3" translate="yes" xml:space="preserve">
          <source>HasRelationships::setRelations()</source>
          <target state="translated">HasRelationships::setRelations()</target>
        </trans-unit>
        <trans-unit id="43ac0d1fc7a7565d6c4c2ec3c7bc6f6b1cd987a9" translate="yes" xml:space="preserve">
          <source>HasRelationships::setTouchedRelations()</source>
          <target state="translated">HasRelationships::setTouchedRelations()</target>
        </trans-unit>
        <trans-unit id="b6502adc49c48312891bedcec83270d3d7f85011" translate="yes" xml:space="preserve">
          <source>HasRelationships::touchOwners()</source>
          <target state="translated">HasRelationships::touchOwners()</target>
        </trans-unit>
        <trans-unit id="f6666b9ff6e58dd7a6f45c71ab8809bd76bb2275" translate="yes" xml:space="preserve">
          <source>HasRelationships::touches()</source>
          <target state="translated">HasRelationships::touches()</target>
        </trans-unit>
        <trans-unit id="ac8fccb6fd57c1a90a17abbf28ea19f114684a96" translate="yes" xml:space="preserve">
          <source>HasRelationships::unsetRelation()</source>
          <target state="translated">HasRelationships::unsetRelation()</target>
        </trans-unit>
        <trans-unit id="d79cdd7e45b560e8a7e5a6f4b142eb320fa3c26a" translate="yes" xml:space="preserve">
          <source>HasTimestamps</source>
          <target state="translated">HasTimestamps</target>
        </trans-unit>
        <trans-unit id="4fd083398be1561288204bfaeee5d86955ad2d28" translate="yes" xml:space="preserve">
          <source>HasTimestamps (Database\Eloquent\Concerns)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70613a54ca068bee5329d794effff7f24bf8b998" translate="yes" xml:space="preserve">
          <source>HasTimestamps::freshTimestamp()</source>
          <target state="translated">HasTimestamps::freshTimestamp()</target>
        </trans-unit>
        <trans-unit id="a85a7a057cff35172c1d18c43af96584ad49b72e" translate="yes" xml:space="preserve">
          <source>HasTimestamps::freshTimestampString()</source>
          <target state="translated">HasTimestamps::freshTimestampString()</target>
        </trans-unit>
        <trans-unit id="bf4b9bd9da332042a290cd6f99b4f572d5fc0a6d" translate="yes" xml:space="preserve">
          <source>HasTimestamps::getCreatedAtColumn()</source>
          <target state="translated">HasTimestamps::getCreatedAtColumn()</target>
        </trans-unit>
        <trans-unit id="01648da09edc6c12445a62e846c15fdf090f5e4f" translate="yes" xml:space="preserve">
          <source>HasTimestamps::getUpdatedAtColumn()</source>
          <target state="translated">HasTimestamps::getUpdatedAtColumn()</target>
        </trans-unit>
        <trans-unit id="49a8c9f8fead0375f285aa0720b83b965c7cabb5" translate="yes" xml:space="preserve">
          <source>HasTimestamps::setCreatedAt()</source>
          <target state="translated">HasTimestamps::setCreatedAt()</target>
        </trans-unit>
        <trans-unit id="eab858f015e971e66477d67a74e9dbfb6a4fc582" translate="yes" xml:space="preserve">
          <source>HasTimestamps::setUpdatedAt()</source>
          <target state="translated">HasTimestamps::setUpdatedAt()</target>
        </trans-unit>
        <trans-unit id="d3cb65f5cf65c6b10cbb13a5fbd4a6c9781b6d38" translate="yes" xml:space="preserve">
          <source>HasTimestamps::touch()</source>
          <target state="translated">HasTimestamps::touch()</target>
        </trans-unit>
        <trans-unit id="5172e5723e08d066836367b3adf8ba084dd5544e" translate="yes" xml:space="preserve">
          <source>HasTimestamps::updateTimestamps()</source>
          <target state="translated">HasTimestamps::updateTimestamps()</target>
        </trans-unit>
        <trans-unit id="de802b7bffa9ac0cf1f9feabc2bb2975f68b4728" translate="yes" xml:space="preserve">
          <source>HasTimestamps::usesTimestamps()</source>
          <target state="translated">HasTimestamps::usesTimestamps()</target>
        </trans-unit>
        <trans-unit id="873507a022b58de26a88deae87268cbd8d6af5b1" translate="yes" xml:space="preserve">
          <source>Hash</source>
          <target state="translated">Hash</target>
        </trans-unit>
        <trans-unit id="b28f61dd8a5e5f4f58a874e9b7aa75eacda0884f" translate="yes" xml:space="preserve">
          <source>Hash (Support\Facades)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="926fa6c5bfda461ab26ea64e5fad7b1292a0190d" translate="yes" xml:space="preserve">
          <source>Hash the given value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3308a2972341b82b23852cd220ef0e7e677a5b27" translate="yes" xml:space="preserve">
          <source>Hash::getFacadeAccessor()</source>
          <target state="translated">Hash::getFacadeAccessor()</target>
        </trans-unit>
        <trans-unit id="7fc40b8de529c7bfa15a09ae8f56c745bb096cda" translate="yes" xml:space="preserve">
          <source>HashManager</source>
          <target state="translated">HashManager</target>
        </trans-unit>
        <trans-unit id="841cae2b904a3c656fb8ffc14378522ee27e0605" translate="yes" xml:space="preserve">
          <source>HashManager (Hashing)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89609de7cf6176943004138ffd89bca7c6f07fd0" translate="yes" xml:space="preserve">
          <source>HashManager::check()</source>
          <target state="translated">HashManager::check()</target>
        </trans-unit>
        <trans-unit id="29c998fdcc08b0b09c92ed5ba7485425aac935df" translate="yes" xml:space="preserve">
          <source>HashManager::createArgon2idDriver()</source>
          <target state="translated">HashManager::createArgon2idDriver()</target>
        </trans-unit>
        <trans-unit id="92ae014f6209d3cec6bba99667ca43641f53a3be" translate="yes" xml:space="preserve">
          <source>HashManager::createArgonDriver()</source>
          <target state="translated">HashManager::createArgonDriver()</target>
        </trans-unit>
        <trans-unit id="4dab1b8521cba4fea4f6ee40b0d5ed6649fbe87e" translate="yes" xml:space="preserve">
          <source>HashManager::createBcryptDriver()</source>
          <target state="translated">HashManager::createBcryptDriver()</target>
        </trans-unit>
        <trans-unit id="e9bfa8556b6434d4c00583373011abe40e5a132b" translate="yes" xml:space="preserve">
          <source>HashManager::getDefaultDriver()</source>
          <target state="translated">HashManager::getDefaultDriver()</target>
        </trans-unit>
        <trans-unit id="41ad4bf4d967aada4f90f0f66bc129e53ad69469" translate="yes" xml:space="preserve">
          <source>HashManager::info()</source>
          <target state="translated">HashManager::info()</target>
        </trans-unit>
        <trans-unit id="988c9c9f58272f03fafa68997419ef36f9917b5e" translate="yes" xml:space="preserve">
          <source>HashManager::make()</source>
          <target state="translated">HashManager::make()</target>
        </trans-unit>
        <trans-unit id="569a3f2cb344eecddb646e094e1bbd67c02e1ad1" translate="yes" xml:space="preserve">
          <source>HashManager::needsRehash()</source>
          <target state="translated">HashManager::needsRehash()</target>
        </trans-unit>
        <trans-unit id="b0eeb77f235dc2bed4d2a85f7a6f3d7327b9e828" translate="yes" xml:space="preserve">
          <source>HashServiceProvider</source>
          <target state="translated">HashServiceProvider</target>
        </trans-unit>
        <trans-unit id="7fb5ea0f7759da438fa8c369f2b9acc4e8fa7acb" translate="yes" xml:space="preserve">
          <source>HashServiceProvider (Hashing)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1aa028297097802e63594aaf95d20a31f4e8976" translate="yes" xml:space="preserve">
          <source>HashServiceProvider::provides()</source>
          <target state="translated">HashServiceProvider::provides()</target>
        </trans-unit>
        <trans-unit id="b1fe3355bccd8fe5a930ecafdcc2603d0e8ba8e1" translate="yes" xml:space="preserve">
          <source>HashServiceProvider::register()</source>
          <target state="translated">HashServiceProvider::register()</target>
        </trans-unit>
        <trans-unit id="fc0f48d98ae0d2092a247d5cee9ccdb867d1d001" translate="yes" xml:space="preserve">
          <source>Hasher</source>
          <target state="translated">Hasher</target>
        </trans-unit>
        <trans-unit id="9c5c747129be01f08a7cb4ff1b2e33fe331e6999" translate="yes" xml:space="preserve">
          <source>Hasher (Contracts)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9929949d627d826a7b7313ea50248925b37ea925" translate="yes" xml:space="preserve">
          <source>Hasher::check()</source>
          <target state="translated">Hasher::check()</target>
        </trans-unit>
        <trans-unit id="8a3f9459e07698f0ccc24b8faa2e79b98793917e" translate="yes" xml:space="preserve">
          <source>Hasher::info()</source>
          <target state="translated">Hasher::info()</target>
        </trans-unit>
        <trans-unit id="ffaabdf6d4a36dfda1df7f29e86f67a7c3d7d764" translate="yes" xml:space="preserve">
          <source>Hasher::make()</source>
          <target state="translated">Hasher::make()</target>
        </trans-unit>
        <trans-unit id="cdaa24be64f246dd153314409821a8d13c0722d1" translate="yes" xml:space="preserve">
          <source>Hasher::needsRehash()</source>
          <target state="translated">Hasher::needsRehash()</target>
        </trans-unit>
        <trans-unit id="53e49a69fb315c4f51afc9825055d4858a064cdc" translate="yes" xml:space="preserve">
          <source>Hashing</source>
          <target state="translated">Hashing</target>
        </trans-unit>
        <trans-unit id="70a61cb63901bc0df15e611eac89dbfeb2622942" translate="yes" xml:space="preserve">
          <source>Having a firm grasp of how a Laravel application is built and bootstrapped via service providers is very valuable. Of course, your application's default service providers are stored in the &lt;code&gt;app/Providers&lt;/code&gt; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="549a12af5e38572502f271ff819f790c468e375a" translate="yes" xml:space="preserve">
          <source>HeaderBag|array</source>
          <target state="translated">HeaderBag|array</target>
        </trans-unit>
        <trans-unit id="3c9b3433e6f225e4ae00ef2041d44d91bfbf7113" translate="yes" xml:space="preserve">
          <source>Helpers</source>
          <target state="translated">Helpers</target>
        </trans-unit>
        <trans-unit id="30fa1e4ab713f26302ad0de8d00de73546e64032" translate="yes" xml:space="preserve">
          <source>Heroku CI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="567cce2d2cf2edd60a50d0789c759d7111598d3d" translate="yes" xml:space="preserve">
          <source>HidesAttributes</source>
          <target state="translated">HidesAttributes</target>
        </trans-unit>
        <trans-unit id="06e89b160c9c38cb7b013ead10f785ec75e8d4cf" translate="yes" xml:space="preserve">
          <source>HidesAttributes (Database\Eloquent\Concerns)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6330acebe9686d2bd85ef5fed247c53fc518467e" translate="yes" xml:space="preserve">
          <source>HidesAttributes::addHidden()</source>
          <target state="translated">HidesAttributes::addHidden()</target>
        </trans-unit>
        <trans-unit id="c46c523339f319d5314263cad228bd4d3db6c440" translate="yes" xml:space="preserve">
          <source>HidesAttributes::addVisible()</source>
          <target state="translated">HidesAttributes::addVisible()</target>
        </trans-unit>
        <trans-unit id="c166d7b89f0afd5540ed9204c034f5469ff6bee5" translate="yes" xml:space="preserve">
          <source>HidesAttributes::getHidden()</source>
          <target state="translated">HidesAttributes::getHidden()</target>
        </trans-unit>
        <trans-unit id="c02629e30b835051eff8135f6ac21d724f1982d0" translate="yes" xml:space="preserve">
          <source>HidesAttributes::getVisible()</source>
          <target state="translated">HidesAttributes::getVisible()</target>
        </trans-unit>
        <trans-unit id="d34163bea32b37ca4e8624544448c9ebd42851b4" translate="yes" xml:space="preserve">
          <source>HidesAttributes::makeHidden()</source>
          <target state="translated">HidesAttributes::makeHidden()</target>
        </trans-unit>
        <trans-unit id="45f283729a6995230cb4bd97bd0833b24f5f7bbf" translate="yes" xml:space="preserve">
          <source>HidesAttributes::makeVisible()</source>
          <target state="translated">HidesAttributes::makeVisible()</target>
        </trans-unit>
        <trans-unit id="d745c69a5c56645fc60137a8b11c49da75814925" translate="yes" xml:space="preserve">
          <source>HidesAttributes::setHidden()</source>
          <target state="translated">HidesAttributes::setHidden()</target>
        </trans-unit>
        <trans-unit id="dccf4c77dcdade32ae370a38c3788e16dc667718" translate="yes" xml:space="preserve">
          <source>HidesAttributes::setVisible()</source>
          <target state="translated">HidesAttributes::setVisible()</target>
        </trans-unit>
        <trans-unit id="82625976189f4f22d4d66fc4dea2024a6aacc599" translate="yes" xml:space="preserve">
          <source>Hiding Attributes From JSON</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f1352943b54c8d7dedd02a0b48163e0fe0151f9" translate="yes" xml:space="preserve">
          <source>Hiding Environment Variables From Debug Pages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b2f47e1e5e723de23431da5c9e5d7b63221a146" translate="yes" xml:space="preserve">
          <source>Higher Order Messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e4c79c06d84fe484e360ff4079bba35b7ebfdbf" translate="yes" xml:space="preserve">
          <source>HigherOrderCollectionProxy</source>
          <target state="translated">HigherOrderCollectionProxy</target>
        </trans-unit>
        <trans-unit id="376a5a3f051d689bd2f4645e73a1a7b8742453e9" translate="yes" xml:space="preserve">
          <source>HigherOrderCollectionProxy (Support)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9425a1167046f5adbdeca9b428bf9a286589dab1" translate="yes" xml:space="preserve">
          <source>HigherOrderCollectionProxy::__call()</source>
          <target state="translated">HigherOrderCollectionProxy::__call()</target>
        </trans-unit>
        <trans-unit id="2727877cd7bcb9d98339f211c6943887abc5f942" translate="yes" xml:space="preserve">
          <source>HigherOrderCollectionProxy::__construct()</source>
          <target state="translated">HigherOrderCollectionProxy::__construct()</target>
        </trans-unit>
        <trans-unit id="c654af7ebcc41a0fbc5ebfcaffe8b4f377453de1" translate="yes" xml:space="preserve">
          <source>HigherOrderCollectionProxy::__get()</source>
          <target state="translated">HigherOrderCollectionProxy::__get()</target>
        </trans-unit>
        <trans-unit id="f7dbe7d8e5d26ebe4230cb26bea0c5f309ee0e84" translate="yes" xml:space="preserve">
          <source>HigherOrderTapProxy</source>
          <target state="translated">HigherOrderTapProxy</target>
        </trans-unit>
        <trans-unit id="6ac9e62b647a44dbb8f78005e3e7ec0d624e66df" translate="yes" xml:space="preserve">
          <source>HigherOrderTapProxy (Support)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e59e1fd0e828eab8343ed7fc6534dcf842b1eee" translate="yes" xml:space="preserve">
          <source>HigherOrderTapProxy::__call()</source>
          <target state="translated">HigherOrderTapProxy::__call()</target>
        </trans-unit>
        <trans-unit id="0681ea726beaf81adb25690400b9581548c9533e" translate="yes" xml:space="preserve">
          <source>HigherOrderTapProxy::__construct()</source>
          <target state="translated">HigherOrderTapProxy::__construct()</target>
        </trans-unit>
        <trans-unit id="7c9280f30f1e61e649508033b12a46e5d635686a" translate="yes" xml:space="preserve">
          <source>Homestead 6 introduced support for multiple versions of PHP on the same virtual machine. You may specify which version of PHP to use for a given site within your &lt;code&gt;Homestead.yaml&lt;/code&gt; file. The available PHP versions are: &quot;5.6&quot;, &quot;7.0&quot;, &quot;7.1&quot;, &quot;7.2&quot; and &quot;7.3&quot; (the default):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fbbe2fbc68813dc587c1ee8614afc79723c44e6" translate="yes" xml:space="preserve">
          <source>Homestead can automatically backup your database when your Vagrant box is destroyed. To utilize this feature, you must be using Vagrant 2.1.0 or greater. Or, if you are using an older version of Vagrant, you must install the &lt;code&gt;vagrant-triggers&lt;/code&gt; plug-in. To enable automatic database backups, add the following line to your &lt;code&gt;Homestead.yaml&lt;/code&gt; file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b2db98005e847c046c46f14e05e44bab1661220" translate="yes" xml:space="preserve">
          <source>Homestead includes the Postfix mail transfer agent, which is listening on port &lt;code&gt;1025&lt;/code&gt; by default. So, you may instruct your application to use the &lt;code&gt;smtp&lt;/code&gt; mail driver on &lt;code&gt;localhost&lt;/code&gt; port &lt;code&gt;1025&lt;/code&gt;. Then, all sent mail will be handled by Postfix and caught by Mailhog. To view your sent emails, open &lt;a href=&quot;http://localhost:8025&quot;&gt;http://localhost:8025&lt;/a&gt; in your web browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a855138eb123caeef64bddbfb2502feefed870c" translate="yes" xml:space="preserve">
          <source>Homestead runs on any Windows, Mac, or Linux system, and includes the Nginx web server, PHP 7.3, PHP 7.2, PHP 7.1, PHP 7.0, PHP 5.6, MySQL, PostgreSQL, Redis, Memcached, Node, and all of the other goodies you need to develop amazing Laravel applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23760dd8cfcf0b129fff1db21cee77a0b4cccbd8" translate="yes" xml:space="preserve">
          <source>Homestead supports several types of sites which allow you to easily run projects that are not based on Laravel. For example, we may easily add a Symfony application to Homestead using the &lt;code&gt;symfony2&lt;/code&gt; site type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e942560388f429b84c6ff7d4870e405ebc4c7496" translate="yes" xml:space="preserve">
          <source>Homestead uses the Nginx web server by default. However, it can install Apache if &lt;code&gt;apache&lt;/code&gt; is specified as a site type. While both web servers can be installed at the same time, they cannot both be &lt;em&gt;running&lt;/em&gt; at the same time. The &lt;code&gt;flip&lt;/code&gt; shell command is available to ease the process of switching between web servers. The &lt;code&gt;flip&lt;/code&gt; command automatically determines which web server is running, shuts it off, and then starts the other server. To use this command, SSH into your Homestead machine and run the command in your terminal:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="245f0ce2e04b122236a0bd7ba5115a2cea0e8bf8" translate="yes" xml:space="preserve">
          <source>Horizon allows you to assign &amp;ldquo;tags&amp;rdquo; to jobs, including mailables, event broadcasts, notifications, and queued event listeners. In fact, Horizon will intelligently and automatically tag most jobs depending on the Eloquent models that are attached to the job. For example, take a look at the following job:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d5085606c23d6fbd0c2280751db3a073636642e" translate="yes" xml:space="preserve">
          <source>Horizon allows you to choose from three balancing strategies: &lt;code&gt;simple&lt;/code&gt;, &lt;code&gt;auto&lt;/code&gt;, and &lt;code&gt;false&lt;/code&gt;. The &lt;code&gt;simple&lt;/code&gt; strategy, which is the default, splits incoming jobs evenly between processes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48e0373cd14bcebdd1fb10d7d910db38b51f26b8" translate="yes" xml:space="preserve">
          <source>Horizon exposes a dashboard at &lt;code&gt;/horizon&lt;/code&gt;. By default, you will only be able to access this dashboard in the &lt;code&gt;local&lt;/code&gt; environment. To define a more specific access policy for the dashboard, you should use the &lt;code&gt;Horizon::auth&lt;/code&gt; method. The &lt;code&gt;auth&lt;/code&gt; method accepts a callback which should return &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, indicating whether the user should have access to the Horizon dashboard. Typically, you should call &lt;code&gt;Horizon::auth&lt;/code&gt; in the &lt;code&gt;boot&lt;/code&gt; method of your &lt;code&gt;AppServiceProvider&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54e200bcbb74055d8ce9fe6f8151f69e04e9283e" translate="yes" xml:space="preserve">
          <source>Horizon includes a metrics dashboard which provides information on your job and queue wait times and throughput. In order to populate this dashboard, you should configure Horizon's &lt;code&gt;snapshot&lt;/code&gt; Artisan command to run every five minutes via your application's &lt;a href=&quot;scheduling&quot;&gt;scheduler&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b300803b09100d4e31fce9d116257825f01687d" translate="yes" xml:space="preserve">
          <source>Horizon provides a beautiful dashboard and code-driven configuration for your Laravel powered Redis queues. Horizon allows you to easily monitor key metrics of your queue system such as job throughput, runtime, and job failures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77704854ad44932242ab8a1adb99082a60be7a77" translate="yes" xml:space="preserve">
          <source>HostValidator</source>
          <target state="translated">HostValidator</target>
        </trans-unit>
        <trans-unit id="da6a32259cfa7dede67fdde8e35b2937aa71f467" translate="yes" xml:space="preserve">
          <source>HostValidator (Routing\Matching)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea367dcd7518d816ddac29818dff20125cfd21e6" translate="yes" xml:space="preserve">
          <source>HostValidator::matches()</source>
          <target state="translated">HostValidator::matches()</target>
        </trans-unit>
        <trans-unit id="52ed77e7c7467befa37dc7904e2b85a266e8ac43" translate="yes" xml:space="preserve">
          <source>Hotswap the underlying instance behind the facade.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b21cc26905ff3e42d6e3f8f5b02dd0791348039" translate="yes" xml:space="preserve">
          <source>How Facades Work</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a666f32429ea24229b1d2834c400e0a21bc0ceb" translate="yes" xml:space="preserve">
          <source>How To Use Contracts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05a2e1c68e1b27a622af30e28637131ab4f02e19" translate="yes" xml:space="preserve">
          <source>However, collections are much more powerful than arrays and expose a variety of map / reduce operations that may be chained using an intuitive interface. For example, let's remove all inactive models and gather the first name for each remaining user:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e50760c064dda5d01a527bffc2cdd64343e9c40" translate="yes" xml:space="preserve">
          <source>However, if you are not using Homestead, you will need to make sure your server meets the following requirements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22efaa071aad963c7ea1af6031a1de9c2ffb485c" translate="yes" xml:space="preserve">
          <source>However, if you file a bug report, your issue should contain a title and a clear description of the issue. You should also include as much relevant information as possible and a code sample that demonstrates the issue. The goal of a bug report is to make it easy for yourself - and others - to replicate the bug and develop a fix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2c88795a6c94a7ff47edaa822c06047ba33ac40" translate="yes" xml:space="preserve">
          <source>However, if you need to customize the meta data returned with the collection, it will be necessary to define a resource collection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0a2337f72bd64f670633207d4988475737c7bca" translate="yes" xml:space="preserve">
          <source>However, if you wish to have more fine-grained control over your broadcast payload, you may add a &lt;code&gt;broadcastWith&lt;/code&gt; method to your event. This method should return the array of data that you wish to broadcast as the event payload:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c6ae24120c14c832f2a173859d04460034a722e" translate="yes" xml:space="preserve">
          <source>However, if you wish to make this change, you should move all files from the &lt;code&gt;resources/assets/*&lt;/code&gt; directory up one level:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f4404aa73ee29cc21e231bd90e3be458df26f93" translate="yes" xml:space="preserve">
          <source>However, if your application uses the same &quot;from&quot; address for all of its emails, it can become cumbersome to call the &lt;code&gt;from&lt;/code&gt; method in each mailable class you generate. Instead, you may specify a global &quot;from&quot; address in your &lt;code&gt;config/mail.php&lt;/code&gt; configuration file. This address will be used if no other &quot;from&quot; address is specified within the mailable class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40151a146935b598932efac97164f05f0b7baf37" translate="yes" xml:space="preserve">
          <source>However, instead of looping through each notification, you may use the &lt;code&gt;markAsRead&lt;/code&gt; method directly on a collection of notifications:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80073823a795f71ed06798833c6708db84ce42ad" translate="yes" xml:space="preserve">
          <source>However, instead of manually calling &lt;code&gt;json_encode&lt;/code&gt;, you may use the &lt;code&gt;@json&lt;/code&gt; Blade directive:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f1ea4373efc4cb63bcfaa1fe250892697ccfd00" translate="yes" xml:space="preserve">
          <source>However, it is more convenient to specify middleware within your controller's constructor. Using the &lt;code&gt;middleware&lt;/code&gt; method from your controller's constructor, you may easily assign middleware to the controller's action. You may even restrict the middleware to only certain methods on the controller class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9da51fc74a67d2c1396fdb0c51c87e2fcceaa8d6" translate="yes" xml:space="preserve">
          <source>However, remember that we also broadcast the task's creation. If your JavaScript application is listening for this event in order to add tasks to the task list, you will have duplicate tasks in your list: one from the end-point and one from the broadcast. You may solve this by using the &lt;code&gt;toOthers&lt;/code&gt; method to instruct the broadcaster to not broadcast the event to the current user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad717d158a25f1a2cf246ca759c3c5deaebc64d1" translate="yes" xml:space="preserve">
          <source>However, some care must be taken when using facades. The primary danger of facades is class scope creep. Since facades are so easy to use and do not require injection, it can be easy to let your classes continue to grow and use many facades in a single class. Using dependency injection, this potential is mitigated by the visual feedback a large constructor gives you that your class is growing too large. So, when using facades, pay special attention to the size of your class so that its scope of responsibility stays narrow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ce1f2a56734dda982816ac139943e9070f563c" translate="yes" xml:space="preserve">
          <source>However, sometimes you may need to customize the outgoing HTTP response before it is sent to the client. There are two ways to accomplish this. First, you may chain the &lt;code&gt;response&lt;/code&gt; method onto the resource. This method will return an &lt;code&gt;Illuminate\Http\Response&lt;/code&gt; instance, allowing you full control of the response's headers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cbb16bab8cddc1d4773c7f35b687d7e09446aee" translate="yes" xml:space="preserve">
          <source>However, the &lt;code&gt;broadcast&lt;/code&gt; function also exposes the &lt;code&gt;toOthers&lt;/code&gt; method which allows you to exclude the current user from the broadcast's recipients:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c00e718e76499ea5ad26fd1ac796611ded272df" translate="yes" xml:space="preserve">
          <source>However, the easiest way to customize the pagination views is by exporting them to your &lt;code&gt;resources/views/vendor&lt;/code&gt; directory using the &lt;code&gt;vendor:publish&lt;/code&gt; command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="649987909911cda41e68f9a2186c3608066d08ce" translate="yes" xml:space="preserve">
          <source>However, this middleware would perform its task &lt;strong&gt;after&lt;/strong&gt; the request is handled by the application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28e6d9f6d022c718eb261debe00c86b4dc2b25b0" translate="yes" xml:space="preserve">
          <source>However, you may also define the maximum number of seconds a job should be allowed to run on the job class itself. If the timeout is specified on the job, it will take precedence over any timeout specified on the command line:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca72004f36d97017e5b369a8dcfe0fc0cff0e054" translate="yes" xml:space="preserve">
          <source>However, you may also use the &lt;code&gt;Cache&lt;/code&gt; facade, which is what we will use throughout this documentation. The &lt;code&gt;Cache&lt;/code&gt; facade provides convenient, terse access to the underlying implementations of the Laravel cache contracts:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6a35b0dec15333050e625b216bb3dd5bc88cef6" translate="yes" xml:space="preserve">
          <source>However, you may extend Valet with your own &lt;a href=&quot;#custom-valet-drivers&quot;&gt;custom drivers&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3961c59003f85dd70e202e94a99b2afa1888c29" translate="yes" xml:space="preserve">
          <source>However, you may still have several questions regarding contracts. For example, why use interfaces at all? Isn't using interfaces more complicated? Let's distill the reasons for using interfaces to the following headings: loose coupling and simplicity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db513e1313e635b0b5b99dcaf4951c206baf7e8e" translate="yes" xml:space="preserve">
          <source>However, you may take a more granular approach by defining the maximum number of attempts on the job class itself. If the maximum number of attempts is specified on the job, it will take precedence over the value provided on the command line:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a1bbed8c0b594ca3902942a1fc40fac04272b0b" translate="yes" xml:space="preserve">
          <source>However, you will need to pair Passport's JSON API with your own frontend to provide a dashboard for your users to manage their clients. Below, we'll review all of the API endpoints for managing clients. For convenience, we'll use &lt;a href=&quot;https://github.com/mzabriskie/axios&quot;&gt;Axios&lt;/a&gt; to demonstrate making HTTP requests to the endpoints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f508657cbc97322f52c231052c41835d65b00328" translate="yes" xml:space="preserve">
          <source>HtmlString</source>
          <target state="translated">HtmlString</target>
        </trans-unit>
        <trans-unit id="231967046268427f35f499b7be9069b6b8b81f19" translate="yes" xml:space="preserve">
          <source>HtmlString (Support)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e750a1f3b7f4bd6ac1d4c382b43fb04530bb0a9" translate="yes" xml:space="preserve">
          <source>HtmlString::__construct()</source>
          <target state="translated">HtmlString::__construct()</target>
        </trans-unit>
        <trans-unit id="de8094af22f4cf2fa39fb6e9c1a3c0d73ae876ec" translate="yes" xml:space="preserve">
          <source>HtmlString::__toString()</source>
          <target state="translated">HtmlString::__toString()</target>
        </trans-unit>
        <trans-unit id="97b9e50fd97847ac58fbaa1882519e14e2379b7b" translate="yes" xml:space="preserve">
          <source>HtmlString::toHtml()</source>
          <target state="translated">HtmlString::toHtml()</target>
        </trans-unit>
        <trans-unit id="6761270eaf033bc903be24dc1ca5b83546148d17" translate="yes" xml:space="preserve">
          <source>Htmlable</source>
          <target state="translated">Htmlable</target>
        </trans-unit>
        <trans-unit id="2838367c122712fabd3bffa4a4a569f774eea6fb" translate="yes" xml:space="preserve">
          <source>Htmlable (Contracts)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8d1171394355dc61f0cd046786d93d303c8a627" translate="yes" xml:space="preserve">
          <source>Htmlable::toHtml()</source>
          <target state="translated">Htmlable::toHtml()</target>
        </trans-unit>
        <trans-unit id="fb5c6c62bf80b8c73f40fbbb8ffdc8cf06e4cb8f" translate="yes" xml:space="preserve">
          <source>Http</source>
          <target state="translated">Http</target>
        </trans-unit>
        <trans-unit id="6e788520269a8d2f4bace94042d1b25ee2e6475e" translate="yes" xml:space="preserve">
          <source>HttpException</source>
          <target state="translated">HttpException</target>
        </trans-unit>
        <trans-unit id="a53e5e5993f5f356a6631f870b33c4ad649cbb67" translate="yes" xml:space="preserve">
          <source>HttpException (Foundation\Testing)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b78d9b4ba55ce061ceb404c95efaa0d9fc90b3fc" translate="yes" xml:space="preserve">
          <source>HttpKernelInterface</source>
          <target state="translated">HttpKernelInterface</target>
        </trans-unit>
        <trans-unit id="a97009543c98a8790f7838667b8e7f2687645264" translate="yes" xml:space="preserve">
          <source>HttpResponseException</source>
          <target state="translated">HttpResponseException</target>
        </trans-unit>
        <trans-unit id="207e13ec61c93a8f8dfefa05bac51e5f67e22b16" translate="yes" xml:space="preserve">
          <source>HttpResponseException (Http\Exceptions)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c16d87b4f9953286408013a1df4ac8604a14a573" translate="yes" xml:space="preserve">
          <source>HttpResponseException::__construct()</source>
          <target state="translated">HttpResponseException::__construct()</target>
        </trans-unit>
        <trans-unit id="baf923b8160f898270a5cb886e86c0dc2a873ba4" translate="yes" xml:space="preserve">
          <source>HttpResponseException::getResponse()</source>
          <target state="translated">HttpResponseException::getResponse()</target>
        </trans-unit>
        <trans-unit id="6212ff17228009de59ab828dbbb8b440222e7273" translate="yes" xml:space="preserve">
          <source>Http\Concerns</source>
          <target state="translated">Http\Concerns</target>
        </trans-unit>
        <trans-unit id="a45c74f478db2752aa4eafe0eeb83c027d2a1f51" translate="yes" xml:space="preserve">
          <source>Http\Exceptions</source>
          <target state="translated">Http\Exceptions</target>
        </trans-unit>
        <trans-unit id="a45244cdf3d4f52a0cb560248cc5af2cbc345f80" translate="yes" xml:space="preserve">
          <source>Http\Middleware</source>
          <target state="translated">Http\Middleware</target>
        </trans-unit>
        <trans-unit id="dfaf67e8714c43f464c78cb6bf6099a1b548cfa2" translate="yes" xml:space="preserve">
          <source>Http\Resources</source>
          <target state="translated">Http\Resources</target>
        </trans-unit>
        <trans-unit id="415dcaf556ef379232b34288dc2f8f24d611022a" translate="yes" xml:space="preserve">
          <source>Http\Resources\Json</source>
          <target state="translated">Http\Resources\Json</target>
        </trans-unit>
        <trans-unit id="7247214858fe81783dc867ef1d8b3d5dc929c8e1" translate="yes" xml:space="preserve">
          <source>Http\Testing</source>
          <target state="translated">Http\Testing</target>
        </trans-unit>
        <trans-unit id="a38df5fc50fbd18c010f89723d32df31a2609347" translate="yes" xml:space="preserve">
          <source>Hub</source>
          <target state="translated">Hub</target>
        </trans-unit>
        <trans-unit id="e73276cd8bdfe756cae3895163c3ea2a05b79d0b" translate="yes" xml:space="preserve">
          <source>Hub (Contracts)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="068aee8b9addf3049d343e2bf8eab45e2c247bf7" translate="yes" xml:space="preserve">
          <source>Hub (Pipeline)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2cf4c60bbee7b9d2f9ecc4079ba57558c41f245" translate="yes" xml:space="preserve">
          <source>Hub::__construct()</source>
          <target state="translated">Hub::__construct()</target>
        </trans-unit>
        <trans-unit id="d0bcc21f2a767828bc6e869873733597b46dcda5" translate="yes" xml:space="preserve">
          <source>Hub::defaults()</source>
          <target state="translated">Hub::defaults()</target>
        </trans-unit>
        <trans-unit id="8e62337a7b4ecf224bb834c1d18851b55d4140dd" translate="yes" xml:space="preserve">
          <source>Hub::pipe()</source>
          <target state="translated">Hub::pipe()</target>
        </trans-unit>
        <trans-unit id="0f97e35ad1a02adb318a7639bdda0e1492c0cba2" translate="yes" xml:space="preserve">
          <source>Hub::pipeline()</source>
          <target state="translated">Hub::pipeline()</target>
        </trans-unit>
        <trans-unit id="7d06254923c1e9c5cada6c9585747709cd86c695" translate="yes" xml:space="preserve">
          <source>Hydrate the pivot table relationship on the models.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3d8cd574c90652d229fde2effae151f3eb41250" translate="yes" xml:space="preserve">
          <source>INTEGER equivalent column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c9c4ba968615cd9aa4d173eefb6672ba6591fa2" translate="yes" xml:space="preserve">
          <source>INVALID_PASSWORD</source>
          <target state="translated">INVALID_PASSWORD</target>
        </trans-unit>
        <trans-unit id="939c7ec1476ec865001bbc90c6f6e584d50e9039" translate="yes" xml:space="preserve">
          <source>INVALID_TOKEN</source>
          <target state="translated">INVALID_TOKEN</target>
        </trans-unit>
        <trans-unit id="262b6c6795ac56240022015031bda3de14b0f0b5" translate="yes" xml:space="preserve">
          <source>INVALID_USER</source>
          <target state="translated">INVALID_USER</target>
        </trans-unit>
        <trans-unit id="4b44d1188ba30d99644789921949fb1d575f8b1e" translate="yes" xml:space="preserve">
          <source>IP address equivalent column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4500b3c59c8dda5c67150809ba2da8818e1884" translate="yes" xml:space="preserve">
          <source>Identifier for the first case in switch statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d62531d5c7342e932232b827f9dc5f4b2b8a808c" translate="yes" xml:space="preserve">
          <source>If $resource is not a file handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36700c2c10655c29379465dfe1fd6e89caba46f9" translate="yes" xml:space="preserve">
          <source>If Statements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f9ad11882a0a777ff5f7c680d2479fab7523dc7" translate="yes" xml:space="preserve">
          <source>If Vagrant is not automatically managing your &quot;hosts&quot; file, you may need to add the new site to that file as well:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13ca6ef8e7a2e0d5bbc86cc8bd7706f2b2a61cd1" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;#registering-policies&quot;&gt;policy is registered&lt;/a&gt; for the given model, the &lt;code&gt;can&lt;/code&gt; method will automatically call the appropriate policy and return the boolean result. If no policy is registered for the model, the &lt;code&gt;can&lt;/code&gt; method will attempt to call the Closure based Gate matching the given action name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd76371e7dfd9c7b77bf4b3015c44b9439c7abde" translate="yes" xml:space="preserve">
          <source>If a database column is not specified, the attribute will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1835c153b8f454555ebd426230a94cabfe6392fc" translate="yes" xml:space="preserve">
          <source>If a matching model instance is not found in the database, a 404 HTTP response will be automatically generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf21f36d41e01274abbc081217b7b3608faba988" translate="yes" xml:space="preserve">
          <source>If a notification supports being sent as a Slack message, you should define a &lt;code&gt;toSlack&lt;/code&gt; method on the notification class. This method will receive a &lt;code&gt;$notifiable&lt;/code&gt; entity and should return a &lt;code&gt;Illuminate\Notifications\Messages\SlackMessage&lt;/code&gt; instance. Slack messages may contain text content as well as an &quot;attachment&quot; that formats additional text or an array of fields. Let's take a look at a basic &lt;code&gt;toSlack&lt;/code&gt; example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8c1fdb56fd964b424295f64b6cc9452e18504c7" translate="yes" xml:space="preserve">
          <source>If a notification supports being sent as an SMS, you should define a &lt;code&gt;toNexmo&lt;/code&gt; method on the notification class. This method will receive a &lt;code&gt;$notifiable&lt;/code&gt; entity and should return a &lt;code&gt;Illuminate\Notifications\Messages\NexmoMessage&lt;/code&gt; instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6097065d305abb9fa7bb0ab2fa997dd438787da6" translate="yes" xml:space="preserve">
          <source>If a notification supports being sent as an email, you should define a &lt;code&gt;toMail&lt;/code&gt; method on the notification class. This method will receive a &lt;code&gt;$notifiable&lt;/code&gt; entity and should return a &lt;code&gt;Illuminate\Notifications\Messages\MailMessage&lt;/code&gt; instance. Mail messages may contain lines of text as well as a &quot;call to action&quot;. Let's take a look at an example &lt;code&gt;toMail&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13da2bf84c41187d7913ebb9442d8ef9b81ce7f5" translate="yes" xml:space="preserve">
          <source>If a notification supports being stored in a database table, you should define a &lt;code&gt;toDatabase&lt;/code&gt; or &lt;code&gt;toArray&lt;/code&gt; method on the notification class. This method will receive a &lt;code&gt;$notifiable&lt;/code&gt; entity and should return a plain PHP array. The returned array will be encoded as JSON and stored in the &lt;code&gt;data&lt;/code&gt; column of your &lt;code&gt;notifications&lt;/code&gt; table. Let's take a look at an example &lt;code&gt;toArray&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e511bb7602bc995eabd6c3dd41992a37549cafe6" translate="yes" xml:space="preserve">
          <source>If a user has cancelled their subscription and you wish to resume it, use the &lt;code&gt;resume&lt;/code&gt; method. The user &lt;strong&gt;must&lt;/strong&gt; still be on their grace period in order to resume a subscription:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60e98665803571765dffdb51f6bebad6fca78ed4" translate="yes" xml:space="preserve">
          <source>If an exception is thrown while the job is being processed, the job will automatically be released back onto the queue so it may be attempted again. The job will continue to be released until it has been attempted the maximum number of times allowed by your application. The maximum number of attempts is defined by the &lt;code&gt;--tries&lt;/code&gt; switch used on the &lt;code&gt;queue:work&lt;/code&gt; Artisan command. Alternatively, the maximum number of attempts may be defined on the job class itself. More information on running the queue worker &lt;a href=&quot;#running-the-queue-worker&quot;&gt;can be found below&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5443a7b010433e8b23c71032754130f92e402864" translate="yes" xml:space="preserve">
          <source>If configuring Supervisor yourself sounds overwhelming, consider using &lt;a href=&quot;https://forge.laravel.com&quot;&gt;Laravel Forge&lt;/a&gt;, which will automatically install and configure Supervisor for your Laravel projects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d84195fe960c012090da8c2f9ac30c833dcb1c9" translate="yes" xml:space="preserve">
          <source>If duplicate keys exist, the last matching element will be inserted into the plucked collection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e36d9e1cea7bfa97bb88ddce0ed53d000e35eb2b" translate="yes" xml:space="preserve">
          <source>If necessary, you may also configure which &lt;a href=&quot;https://developers.sparkpost.com/api/#header-endpoints&quot;&gt;API endpoint&lt;/a&gt; should be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e600f521f043a0702c8d8ed493036540305efac3" translate="yes" xml:space="preserve">
          <source>If necessary, you may specify the disk that the file should be deleted from:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b45f7e3772ae2a040abe2c6aeeb2896768b1d73" translate="yes" xml:space="preserve">
          <source>If needed, you may pass option values into Envoy tasks using the command line:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6efd7307b33ad9dc3e059789cca8b882349a8883" translate="yes" xml:space="preserve">
          <source>If needed, you may specify how many minutes must pass before the &quot;without overlapping&quot; lock expires. By default, the lock will expire after 24 hours:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50bb60e719b5bb933a940abf336bd901c1c4e900" translate="yes" xml:space="preserve">
          <source>If needed, you may specify the &lt;a href=&quot;authentication&quot;&gt;authentication guard&lt;/a&gt; that should be checked when using the &lt;code&gt;@auth&lt;/code&gt; and &lt;code&gt;@guest&lt;/code&gt; directives:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae937c52ed7ddd257c965e1bff7fbd3d1a69ccbc" translate="yes" xml:space="preserve">
          <source>If needed, you may specify the key that should be used for the value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d48ddaf63e838dadb8fc884ac8ae74ac6faa8f3f" translate="yes" xml:space="preserve">
          <source>If needed, you may specify which guard instance you would like to access:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bbe854360c233ebb30407c7b8f06d9339cdb53c" translate="yes" xml:space="preserve">
          <source>If needed, you may use custom error messages for validation instead of the defaults. There are several ways to specify custom messages. First, you may pass the custom messages as the third argument to the &lt;code&gt;Validator::make&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d70cc0f0f64ab85eb9623aa0d714f6593e1467" translate="yes" xml:space="preserve">
          <source>If neither of these drivers are available, Laravel will use the &lt;code&gt;PDO_DBLIB&lt;/code&gt; driver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3bde9822e75ca6a6ecb3c6bf5ec635a66dd63f9" translate="yes" xml:space="preserve">
          <source>If no Closure is passed to the &lt;code&gt;tap&lt;/code&gt; function, you may call any method on the given &lt;code&gt;$value&lt;/code&gt;. The return value of the method you call will always be &lt;code&gt;$value&lt;/code&gt;, regardless of what the method actually returns in its definition. For example, the Eloquent &lt;code&gt;update&lt;/code&gt; method typically returns an integer. However, we can force the method to return the model itself by chaining the &lt;code&gt;update&lt;/code&gt; method call through the &lt;code&gt;tap&lt;/code&gt; function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f1ff7b7b51fd1c4c5be80defb8ed5cdeb69bf52" translate="yes" xml:space="preserve">
          <source>If no callback is supplied, all entries of the collection that are equivalent to &lt;code&gt;false&lt;/code&gt; will be removed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3995193ca9df3c5c35101c8703389d6c21108f04" translate="yes" xml:space="preserve">
          <source>If no key is given to the method, the entire array will be replaced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb59ed63fac717e10799674b2850478f4d49abb7" translate="yes" xml:space="preserve">
          <source>If no path is provided to the &lt;code&gt;url&lt;/code&gt; helper, a &lt;code&gt;Illuminate\Routing\UrlGenerator&lt;/code&gt; instance is returned, allowing you to access information about the current URL:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="324f0e91608a8d6e150c3f1df5fe94884f0bcb02" translate="yes" xml:space="preserve">
          <source>If no path is provided, a &lt;code&gt;Illuminate\Routing\UrlGenerator&lt;/code&gt; instance is returned:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d894fef51da291ee19d3a33e7a08fbf5667cbd1e" translate="yes" xml:space="preserve">
          <source>If no token is present, display the link request form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="881679a20b46ca7bc28052fa605c7dcf1830e882" translate="yes" xml:space="preserve">
          <source>If one of the built-in Scout search engines doesn't fit your needs, you may write your own custom engine and register it with Scout. Your engine should extend the &lt;code&gt;Laravel\Scout\Engines\Engine&lt;/code&gt; abstract class. This abstract class contains seven methods your custom engine must implement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1160d56ae9e89bc84c5f40879c2950a61eec791c" translate="yes" xml:space="preserve">
          <source>If some of your attachment fields contain Markdown, you may use the &lt;code&gt;markdown&lt;/code&gt; method to instruct Slack to parse and display the given attachment fields as Markdown formatted text. The values accepted by this method are: &lt;code&gt;pretext&lt;/code&gt;, &lt;code&gt;text&lt;/code&gt;, and / or &lt;code&gt;fields&lt;/code&gt;. For more information about Slack attachment formatting, check out the &lt;a href=&quot;https://api.slack.com/docs/message-formatting#message_formatting&quot;&gt;Slack API documentation&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5083bf662b8ef6742a9d6e3121a15cd87eb8419" translate="yes" xml:space="preserve">
          <source>If some of your class' dependencies are not resolvable via the container, you may inject them by passing them as an associative array into the &lt;code&gt;makeWith&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bb0f52860c6a763a1602d93ed92dd8f57b67a73" translate="yes" xml:space="preserve">
          <source>If symbolic links are not working properly on your Windows machine, you may need to add the following block to your &lt;code&gt;Vagrantfile&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="920048cda346191519f588d99c56b1f0c4910f1c" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;.htaccess&lt;/code&gt; file that ships with Laravel does not work with your Apache installation, try this alternative:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de74764c7b6a8ebdb43df5706bc25a17d086e7d3" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;authorize&lt;/code&gt; method returns &lt;code&gt;false&lt;/code&gt;, a HTTP response with a 403 status code will automatically be returned and your controller method will not execute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30bfc0c89fe79db7ac64d4376694b90c908df5c5" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;before&lt;/code&gt; callback returns a non-null result that result will be considered the result of the check.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a91e04b4894b5685ce145bb956819735919d1ff" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;column&lt;/code&gt; option is not specified, the field name will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dee5b6fabb74e9a3be5233f9431211aaff2f98b1" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;redirect&lt;/code&gt; option contains a relative path, it will automatically be resolved to a fully qualified URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fabcd1a61326784f5513f42f189a610b12b28f0d" translate="yes" xml:space="preserve">
          <source>If the Collection has fewer items than requested, the method will throw an &lt;code&gt;InvalidArgumentException&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74ab425ef6968824770717c93e4db3355b54411b" translate="yes" xml:space="preserve">
          <source>If the argument or option does not exist, &lt;code&gt;null&lt;/code&gt; will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="815d85f0297f220dc46c68a56de72edf0d64321b" translate="yes" xml:space="preserve">
          <source>If the collection contains nested arrays or objects, you should pass a key to use for determining which values to sum:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b1f385f6a912209f3821ee2ea8486cefa42244c" translate="yes" xml:space="preserve">
          <source>If the collection contains simple strings or numeric values, pass the &quot;glue&quot; as the only argument to the method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14f2080d183e11992b7dc547e3fd6f4a5f29b536" translate="yes" xml:space="preserve">
          <source>If the controller method accepts route parameters, you may pass them as the second argument to the function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="224ebc96a6e2e638fc7fa90dd535b2a98ece1304" translate="yes" xml:space="preserve">
          <source>If the customer's subscription is not cancelled before the trial ending date they will be charged as soon as the trial expires, so you should be sure to notify your users of their trial ending date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3adc052ecda072f687e7fbd3fcc914978fa096c0" translate="yes" xml:space="preserve">
          <source>If the exception is not caught, a &lt;code&gt;404&lt;/code&gt; HTTP response is automatically sent back to the user. It is not necessary to write explicit checks to return &lt;code&gt;404&lt;/code&gt; responses when using these methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b61575234e763d0d1dc32977c8099a51475b7317" translate="yes" xml:space="preserve">
          <source>If the file has already been stored, its visibility can be retrieved and set via the &lt;code&gt;getVisibility&lt;/code&gt; and &lt;code&gt;setVisibility&lt;/code&gt; methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f71ed9f9c0e7af5619d4b0ae06f4dafef5c1c43d" translate="yes" xml:space="preserve">
          <source>If the given items's keys are numeric, the values will be appended to the end of the collection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df6509e310754ede5d6b72603e17b3797133710c" translate="yes" xml:space="preserve">
          <source>If the given value is an interval, convert it to a DateTime instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4916e9e1ff26bf7f0611e9cdde58f81595a97fea" translate="yes" xml:space="preserve">
          <source>If the given value is not an array and not null, wrap it in one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67312e2453742d53dd50df10568345a623d2a139" translate="yes" xml:space="preserve">
          <source>If the given value is null, an empty array will be returned:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01731251365b274a3026bbae7d6a170f936fe02b" translate="yes" xml:space="preserve">
          <source>If the item does not exist in the cache, the &lt;code&gt;Closure&lt;/code&gt; passed to the &lt;code&gt;remember&lt;/code&gt; method will be executed and its result will be placed in the cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93477beb58ced8a034c99236a3f85cf842ba83a6" translate="yes" xml:space="preserve">
          <source>If the lock is not available at the moment you request it, you may instruct Laravel to wait for a specified number of seconds. If the lock can not be acquired within the specified time limit, an &lt;code&gt;Illuminate\Contracts\Cache\LockTimeoutException&lt;/code&gt; will be thrown:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95957c856a12f9e262052fd02d3ee8bcde5ee6ed" translate="yes" xml:space="preserve">
          <source>If the method accepts route parameters, you may pass them as the second argument to the method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e25fe80c1b7ea491ead1ab5ead3309caad4e61a1" translate="yes" xml:space="preserve">
          <source>If the middleware is already in the group, it will not be added again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1efdfc8faa6b393a7c0b4f1ce595d56a9fe186fa" translate="yes" xml:space="preserve">
          <source>If the named route defines parameters, you may pass the parameters as the second argument to the &lt;code&gt;route&lt;/code&gt; function. The given parameters will automatically be inserted into the URL in their correct positions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="add6eb7aac813559ccc063ee93296f57f81b604e" translate="yes" xml:space="preserve">
          <source>If the redirect path needs custom generation logic you may define a &lt;code&gt;redirectTo&lt;/code&gt; method instead of a &lt;code&gt;redirectTo&lt;/code&gt; property:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fbe8d6398f9de4b4a9fc13f87ab6284adea7abb" translate="yes" xml:space="preserve">
          <source>If the requested query string value data is not present, the second argument to this method will be returned:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d01683e361cb4681f3b318af97ff35401ea461a7" translate="yes" xml:space="preserve">
          <source>If the route accepts parameters, you may pass them as the second argument to the method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e323bc82eac9390b20863d694f93bd43e19ae11" translate="yes" xml:space="preserve">
          <source>If the specified translation key does not exist, the &lt;code&gt;trans&lt;/code&gt; function will return the given key. So, using the example above, the &lt;code&gt;trans&lt;/code&gt; function would return &lt;code&gt;messages.welcome&lt;/code&gt; if the translation key does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b902c8894d2b543c2febf82858337c6cd31057a8" translate="yes" xml:space="preserve">
          <source>If the specified translation key does not exist, the &lt;code&gt;trans_choice&lt;/code&gt; function will return the given key. So, using the example above, the &lt;code&gt;trans_choice&lt;/code&gt; function would return &lt;code&gt;messages.notifications&lt;/code&gt; if the translation key does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7dfadfbb5140bd501dcdb0e499806ba7fce6177" translate="yes" xml:space="preserve">
          <source>If the specified translation string does not exist, the &lt;code&gt;__&lt;/code&gt; function will return the translation string key. So, using the example above, the &lt;code&gt;__&lt;/code&gt; function would return &lt;code&gt;messages.welcome&lt;/code&gt; if the translation string does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2de419c7e613630d260894dd2a0d02e300229ef" translate="yes" xml:space="preserve">
          <source>If the specified translation string or key does not exist, the &lt;code&gt;__&lt;/code&gt; function will return the given value. So, using the example above, the &lt;code&gt;__&lt;/code&gt; function would return &lt;code&gt;messages.welcome&lt;/code&gt; if that translation key does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0df97183d0b64aff3b63d0206363ee2f1f90097" translate="yes" xml:space="preserve">
          <source>If the table has an auto-incrementing id, use the &lt;code&gt;insertGetId&lt;/code&gt; method to insert a record and then retrieve the ID:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="748c39163da2eb95a6d3312b2378227bfcb6eb58" translate="yes" xml:space="preserve">
          <source>If the user approves the authorization request, they will be redirected back to the consuming application. The consumer should then issue a &lt;code&gt;POST&lt;/code&gt; request to your application to request an access token. The request should include the authorization code that was issued by your application when the user approved the authorization request. In this example, we'll use the Guzzle HTTP library to make the &lt;code&gt;POST&lt;/code&gt; request:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32da1ed57fb50220528ebd9d6d658d8aa2608727" translate="yes" xml:space="preserve">
          <source>If the user cancels a subscription and then resumes that subscription before the subscription has fully expired, they will not be billed immediately. Instead, their subscription will be re-activated, and they will be billed on the original billing cycle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08c81f54eefb51a76f872ec262148adefd012d8a" translate="yes" xml:space="preserve">
          <source>If the user is on trial, the trial period will be maintained. Also, if a &quot;quantity&quot; exists for the subscription, that quantity will also be maintained.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19f51ac11b3d3f77ea532de99391cb33ce7f50cc" translate="yes" xml:space="preserve">
          <source>If this Grammar supports schema changes wrapped in a transaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a32923f85198720cf7e6f97279c9208615100b29" translate="yes" xml:space="preserve">
          <source>If this command fails, make sure your Vagrant installation is up to date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe5f55b5001fda50b67694de8c5969827a25b5c" translate="yes" xml:space="preserve">
          <source>If this job is queued with an &lt;code&gt;App\Video&lt;/code&gt; instance that has an &lt;code&gt;id&lt;/code&gt; of &lt;code&gt;1&lt;/code&gt;, it will automatically receive the tag &lt;code&gt;App\Video:1&lt;/code&gt;. This is because Horizon will examine the job's properties for any Eloquent models. If Eloquent models are found, Horizon will intelligently tag the job using the model's class name and primary key:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="061742642b94648e0305fbe67a90ceb088547633" translate="yes" xml:space="preserve">
          <source>If validation fails, a redirect response will be generated to send the user back to their previous location. The errors will also be flashed to the session so they are available for display. If the request was an AJAX request, a HTTP response with a 422 status code will be returned to the user including a JSON representation of the validation errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed6bf3f88b1d8d093c3af3a04322586e5bbcaa0" translate="yes" xml:space="preserve">
          <source>If we look at that &lt;code&gt;Illuminate\Support\Facades\Cache&lt;/code&gt; class, you'll see that there is no static method &lt;code&gt;get&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93f618ec4f19f6086e963aa192c58a56bb583150" translate="yes" xml:space="preserve">
          <source>If we're touching the parent model, touch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea995fbeaed9296c19031e9d4d1c0dbfed2f4559" translate="yes" xml:space="preserve">
          <source>If you already have a model instance, you may use the &lt;code&gt;fill&lt;/code&gt; method to populate it with an array of attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="574ffdc963a0406b4ab9d2d9aeac581de6101fe9" translate="yes" xml:space="preserve">
          <source>If you already have a query builder instance and you wish to add a column to its existing select clause, you may use the &lt;code&gt;addSelect&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1455042e6daa322b8f22915362015dfba5f3fa44" translate="yes" xml:space="preserve">
          <source>If you already have a raw data string you wish to embed into an email template, you may use the &lt;code&gt;embedData&lt;/code&gt; method on the &lt;code&gt;$message&lt;/code&gt; variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20fe3900660b4db098d92d82bc9848c9b264c871" translate="yes" xml:space="preserve">
          <source>If you already have a valid access token for a user, you can retrieve their details using the &lt;code&gt;userFromToken&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c4d07ff90589102890a940a73d135fb08811826" translate="yes" xml:space="preserve">
          <source>If you already have a valid pair of token / secret for a user, you can retrieve their details using the &lt;code&gt;userFromTokenAndSecret&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e722092c391f398e6c14b06190901a7dba5d30" translate="yes" xml:space="preserve">
          <source>If you are &quot;remembering&quot; users, you may use the &lt;code&gt;viaRemember&lt;/code&gt; method to determine if the user was authenticated using the &quot;remember me&quot; cookie:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873ca9abc9f0b6ca049eb7a36c54d695a63b93f9" translate="yes" xml:space="preserve">
          <source>If you are attempting to validate a field that should always be present but may be empty, check out &lt;a href=&quot;#a-note-on-optional-fields&quot;&gt;this note on optional fields&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd90620b82c17ba6b8665c59120f0f6e50efb14c" translate="yes" xml:space="preserve">
          <source>If you are broadcasting your events over &lt;a href=&quot;https://pusher.com&quot;&gt;Pusher&lt;/a&gt;, you should install the Pusher PHP SDK using the Composer package manager:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89d9598d4b4a9a33124e3cfdee45005a1c374c06" translate="yes" xml:space="preserve">
          <source>If you are building a large application with many routes, you should make sure that you are running the &lt;code&gt;route:cache&lt;/code&gt; Artisan command during your deployment process:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97cda3fd4ebb519591e44a92d5d899128b684e15" translate="yes" xml:space="preserve">
          <source>If you are defining a route that redirects to another URI, you may use the &lt;code&gt;Route::redirect&lt;/code&gt; method. This method provides a convenient shortcut so that you do not have to define a full route or controller for performing a simple redirect:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd9748d141b0a3522dc83c78aa532e7934811d9f" translate="yes" xml:space="preserve">
          <source>If you are deploying Horizon to a live server, you should configure a process monitor to monitor the &lt;code&gt;php artisan horizon&lt;/code&gt; command and restart it if it quits unexpectedly. When deploying fresh code to your server, you will need to instruct the master Horizon process to terminate so it can be restarted by your process monitor and receive your code changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d43f0c6c31350431216aa025ce415e5e945609c8" translate="yes" xml:space="preserve">
          <source>If you are deploying your application to a server that is running Nginx, you may use the following configuration file as a starting point for configuring your web server. Most likely, this file will need to be customized depending on your server's configuration. If you would like assistance in managing your server, consider using a service such as &lt;a href=&quot;https://forge.laravel.com&quot;&gt;Laravel Forge&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01e7f343678423bb90a0e44fdd16c22cb990df12" translate="yes" xml:space="preserve">
          <source>If you are developing with a team, you may wish to continue including a &lt;code&gt;.env.example&lt;/code&gt; file with your application. By putting place-holder values in the example configuration file, other developers on your team can clearly see which environment variables are needed to run your application. You may also create a &lt;code&gt;.env.testing&lt;/code&gt; file. This file will override the &lt;code&gt;.env&lt;/code&gt; file when running PHPUnit tests or executing Artisan commands with the &lt;code&gt;--env=testing&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc4eb2fd93c8e8ea471b41fd5eec08b8c0ab57af" translate="yes" xml:space="preserve">
          <source>If you are displaying JavaScript variables in a large portion of your template, you may wrap the HTML in the &lt;code&gt;@verbatim&lt;/code&gt; directive so that you do not have to prefix each Blade echo statement with an &lt;code&gt;@&lt;/code&gt; symbol:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dba47dac121daca4cad1597f74d6354a811e9fc2" translate="yes" xml:space="preserve">
          <source>If you are going to pair the Redis broadcaster with a Socket.IO server, you will need to include the Socket.IO JavaScript client library in your application. You may install it via the NPM package manager:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94f20674cc8abc6499cdcb69983331a09adaa148" translate="yes" xml:space="preserve">
          <source>If you are implementing this interface, you should add this method to your implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af88a7dbaa9b8c4a9cbdff5223d946f0ede2030f" translate="yes" xml:space="preserve">
          <source>If you are in a location of your code that does not have access to the &lt;code&gt;$app&lt;/code&gt; variable, you may use the global &lt;code&gt;resolve&lt;/code&gt; helper:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a77e21da8e5057473ff9d76315dda9214bddd7c2" translate="yes" xml:space="preserve">
          <source>If you are in a nested loop, you may access the parent loop's &lt;code&gt;$loop&lt;/code&gt; variable via the &lt;code&gt;parent&lt;/code&gt; property:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9490cb12bde1e72081fa7a38378d6dd6c7129f99" translate="yes" xml:space="preserve">
          <source>If you are installing Scout into an existing project, you may already have database records you need to import into your search driver. Scout provides an &lt;code&gt;import&lt;/code&gt; Artisan command that you may use to import all of your existing records into your search indexes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f207b958f5eb6b0877101dae79c7eab7e468386f" translate="yes" xml:space="preserve">
          <source>If you are issuing personal access tokens using the &lt;code&gt;User&lt;/code&gt; model's &lt;code&gt;createToken&lt;/code&gt; method, you may pass the array of desired scopes as the second argument to the method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da655f76bc479f6fc0bc84d5c8e0ef5c9bf86ada" translate="yes" xml:space="preserve">
          <source>If you are listening for many events on a given model, you may use observers to group all of your listeners into a single class. Observers classes have method names which reflect the Eloquent events you wish to listen for. Each of these methods receives the model as their only argument. The &lt;code&gt;make:observer&lt;/code&gt; Artisan command is the easiest way to create a new observer class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a171e3a48b81d227dfd2cead70659d1673aa3762" translate="yes" xml:space="preserve">
          <source>If you are manually registering Dusk's service provider, you should &lt;strong&gt;never&lt;/strong&gt; register it in your production environment, as doing so could lead to arbitrary users being able to authenticate with your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dd85e30da6663b081a211e972363cea48186049" translate="yes" xml:space="preserve">
          <source>If you are not going to use Passport's default migrations, you should call the &lt;code&gt;Passport::ignoreMigrations&lt;/code&gt; method in the &lt;code&gt;register&lt;/code&gt; method of your &lt;code&gt;AppServiceProvider&lt;/code&gt;. You may export the default migrations using &lt;code&gt;php artisan vendor:publish --tag=passport-migrations&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc18f4d8d08b9290c536fc8260fe9860a052f19d" translate="yes" xml:space="preserve">
          <source>If you are not using Vue and Axios, you will need to manually configure your JavaScript application to send the &lt;code&gt;X-Socket-ID&lt;/code&gt; header. You may retrieve the socket ID using the &lt;code&gt;Echo.socketId&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5b111296d97b25ef59f12bf4941cd306ad65221" translate="yes" xml:space="preserve">
          <source>If you are not using a traditional relational database to store your users, you will need to extend Laravel with your own authentication user provider. We will use the &lt;code&gt;provider&lt;/code&gt; method on the &lt;code&gt;Auth&lt;/code&gt; facade to define a custom user provider:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ab95e79bc46ddcc2d321c617d6a532e10feb14" translate="yes" xml:space="preserve">
          <source>If you are only creating a few sites, this generic mapping will work just fine. However, as the number of sites continue to grow, you may begin to experience performance problems. This problem can be painfully apparent on low-end machines or projects that contain a very large number of files. If you are experiencing this issue, try mapping every project to its own Vagrant folder:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3375997ad85d144da1fa6ca76a4691f37759063" translate="yes" xml:space="preserve">
          <source>If you are queueing mailables for delivery in the background, you should use the &lt;code&gt;assertQueued&lt;/code&gt; method instead of &lt;code&gt;assertSent&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="088c1decf89cbdd586e860b02c6b4b34d816f54d" translate="yes" xml:space="preserve">
          <source>If you are redirecting to a route with an &quot;ID&quot; parameter that is being populated from an Eloquent model, you may pass the model itself. The ID will be extracted automatically:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec884b6154f9e8862c6270cc32e6a17559370105" translate="yes" xml:space="preserve">
          <source>If you are returning a collection of resources or a paginated response, you may use the &lt;code&gt;collection&lt;/code&gt; method when creating the resource instance in your route or controller:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="979943ada1faa0605ff0e8e8f79d469196bc8361" translate="yes" xml:space="preserve">
          <source>If you are the consumer of a package and would like to disable package discovery for a package, you may list the package name in the &lt;code&gt;extra&lt;/code&gt; section of your application's &lt;code&gt;composer.json&lt;/code&gt; file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="249953fc4c92e89bc7d8eb7e9cef3f33e39b4310" translate="yes" xml:space="preserve">
          <source>If you are uncomfortable managing your own servers, consider using &lt;a href=&quot;https://forge.laravel.com&quot;&gt;Laravel Forge&lt;/a&gt;. Forge provisions PHP 7+ servers with everything you need to run modern, robust Laravel applications with Horizon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3160c62f1bfcb9f44251943023b76a72616bc28d" translate="yes" xml:space="preserve">
          <source>If you are unsure if your feature qualifies as a major or minor, please ask Taylor Otwell in the &lt;code&gt;#internals&lt;/code&gt; channel of the &lt;a href=&quot;https://discordapp.com/invite/mPZNm7A&quot;&gt;Laravel Discord server&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f03e36ef59186cbe598c8794ac1b00e30c737b6" translate="yes" xml:space="preserve">
          <source>If you are using AWS Elastic Load Balancing, your &lt;code&gt;$headers&lt;/code&gt; value should be &lt;code&gt;Request::HEADER_X_FORWARDED_AWS_ELB&lt;/code&gt;. For more information on the constants that may be used in the &lt;code&gt;$headers&lt;/code&gt; property, check out Symfony's documentation on &lt;a href=&quot;http://symfony.com/doc/current/deployment/proxies.html&quot;&gt;trusting proxies&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="361f5c4c3a961d456a90a59c90d2a49660f3467c" translate="yes" xml:space="preserve">
          <source>If you are using Amazon AWS or another &quot;cloud&quot; load balancer provider, you may not know the IP addresses of your actual balancers. In this case, you may use &lt;code&gt;*&lt;/code&gt; to trust all proxies:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8519b25d4339ce6e63ffe05d4e22a75bfbd5df4" translate="yes" xml:space="preserve">
          <source>If you are using Braintree as your billing provider, you must include a &lt;code&gt;description&lt;/code&gt; option when calling the &lt;code&gt;invoiceFor&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07353c47779b167f88eb87ba092af0bc42c0558c" translate="yes" xml:space="preserve">
          <source>If you are using CircleCI 1.0 to run your Dusk tests, you may use this configuration file as a starting point. Like TravisCI, we will use the &lt;code&gt;php artisan serve&lt;/code&gt; command to launch PHP's built-in web server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43813db7001a2b113c744bec7186d8532ac46ef4" translate="yes" xml:space="preserve">
          <source>If you are using CircleCI 2.0 to run your Dusk tests, you may add these steps to your build:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f59cf4f1d6b1106634dc3e8033199a55d394aef" translate="yes" xml:space="preserve">
          <source>If you are using Laravel Passport, you should update your &lt;code&gt;laravel/passport&lt;/code&gt; dependency to &lt;code&gt;^7.0&lt;/code&gt; in your &lt;code&gt;composer.json&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fd3c11b616776827f2bab7e0b9a77b05756871d" translate="yes" xml:space="preserve">
          <source>If you are using Laravel's built-in &lt;code&gt;LoginController&lt;/code&gt; class, the &lt;code&gt;Illuminate\Foundation\Auth\ThrottlesLogins&lt;/code&gt; trait will already be included in your controller. By default, the user will not be able to login for one minute if they fail to provide the correct credentials after several attempts. The throttling is unique to the user's username / e-mail address and their IP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2887e566793f1cf7f4242f1f9539ace2720c80ab" translate="yes" xml:space="preserve">
          <source>If you are using Nginx, the following directive in your site configuration will direct all requests to the &lt;code&gt;index.php&lt;/code&gt; front controller:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa410f54e19eea0e1836f3f60205d82cac14e4c1" translate="yes" xml:space="preserve">
          <source>If you are using PHP FastCGI, HTTP Basic authentication may not work correctly out of the box. The following lines should be added to your &lt;code&gt;.htaccess&lt;/code&gt; file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684c8370b083588260cbee7e6ec4968ff2c5f57b" translate="yes" xml:space="preserve">
          <source>If you are using Windows, you may need to enable hardware virtualization (VT-x). It can usually be enabled via your BIOS. If you are using Hyper-V on a UEFI system you may additionally need to disable Hyper-V in order to access VT-x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7950861dc6b2f111b1a92f6abfe651a2862422b" translate="yes" xml:space="preserve">
          <source>If you are using a Monolog handler that is capable of providing its own formatter, you may set the value of the &lt;code&gt;formatter&lt;/code&gt; configuration option to &lt;code&gt;default&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4cff8dd3e7c9013a5d779350e1d2ee1ac6a2cc9" translate="yes" xml:space="preserve">
          <source>If you are using a different JavaScript framework, you should make sure it is configured to send the &lt;code&gt;X-CSRF-TOKEN&lt;/code&gt; and &lt;code&gt;X-Requested-With&lt;/code&gt; headers with every outgoing request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b335fcab97ba2f988d2dea31ffc64ec61e30f292" translate="yes" xml:space="preserve">
          <source>If you are using route model binding and would like the resource controller's methods to type-hint a model instance, you may use the &lt;code&gt;--model&lt;/code&gt; option when generating the controller:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f99ec3743dc19616e3f2ef4c532e1d47c53656ce" translate="yes" xml:space="preserve">
          <source>If you are using the &lt;a href=&quot;homestead&quot;&gt;Homestead virtual machine&lt;/a&gt;, you should run this command from within your virtual machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91506c33cbb42e48035be8e00736ae93e4f008fa" translate="yes" xml:space="preserve">
          <source>If you are using the Argon2 algorithm, the &lt;code&gt;make&lt;/code&gt; method allows you to manage the work factor of the algorithm using the &lt;code&gt;memory&lt;/code&gt;, &lt;code&gt;time&lt;/code&gt;, and &lt;code&gt;threads&lt;/code&gt; options; however, the defaults are acceptable for most applications:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3cacb0c8beb503d1cda4013f1afed5eb5cbd58e" translate="yes" xml:space="preserve">
          <source>If you are using the Bcrypt algorithm, the &lt;code&gt;make&lt;/code&gt; method allows you to manage the work factor of the algorithm using the &lt;code&gt;rounds&lt;/code&gt; option; however, the default is acceptable for most applications:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc41464c5a593fc3ca21acee954fd67bc5ae8ca4" translate="yes" xml:space="preserve">
          <source>If you are using the Memcached driver, items that are stored &quot;forever&quot; may be removed when the cache reaches its size limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e8b57fd77daab462ddce166f2f6f22847b087fd" translate="yes" xml:space="preserve">
          <source>If you are using the Redis broadcaster, you should install the Predis library:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a72abe15ebdbcfa45a372d34879cafb361677e9e" translate="yes" xml:space="preserve">
          <source>If you are using the Supervisor process monitor to manage your &lt;code&gt;horizon&lt;/code&gt; process, the following configuration file should suffice:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f735571c56e84396579cdbb77e2c2aa71d2b5648" translate="yes" xml:space="preserve">
          <source>If you are using the built-in &lt;code&gt;LoginController&lt;/code&gt; that is shipped with Laravel, the proper logic to &quot;remember&quot; users is already implemented by the traits used by the controller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dedd976b7ed6bb9b8a33763b2892c378be32ad5" translate="yes" xml:space="preserve">
          <source>If you are validating an array form field, you may retrieve all of the messages for each of the array elements using the &lt;code&gt;*&lt;/code&gt; character:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0b076b5c3725f7c74f7f76396b8965035c27506" translate="yes" xml:space="preserve">
          <source>If you are working with multiple queue connections, you may specify which connection to push a job to. To specify the connection, use the &lt;code&gt;onConnection&lt;/code&gt; method when dispatching the job:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1396309754a79a60a900d50567af987eb03dd2bb" translate="yes" xml:space="preserve">
          <source>If you aren't quite ready to manage your own server configuration or aren't comfortable configuring all of the various services needed to run a robust Laravel application, &lt;a href=&quot;https://forge.laravel.com&quot;&gt;Laravel Forge&lt;/a&gt; is a wonderful alternative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f335797f92b74d121e2901fe1c763987d9d46fc" translate="yes" xml:space="preserve">
          <source>If you change the &lt;code&gt;sites&lt;/code&gt; property after provisioning the Homestead box, you should re-run &lt;code&gt;vagrant reload --provision&lt;/code&gt; to update the Nginx configuration on the virtual machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e15c91531d9fb650a4d725277cec9629b60ef9a" translate="yes" xml:space="preserve">
          <source>If you choose to nest your controllers deeper into the &lt;code&gt;App\Http\Controllers&lt;/code&gt; directory, use the specific class name relative to the &lt;code&gt;App\Http\Controllers&lt;/code&gt; root namespace. So, if your full controller class is &lt;code&gt;App\Http\Controllers\Photos\AdminController&lt;/code&gt;, you should register routes to the controller like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ae7081e756e9794ac3a364523ce23808373ff5" translate="yes" xml:space="preserve">
          <source>If you choose to use Laravel's new &lt;a href=&quot;verification&quot;&gt;email verification services&lt;/a&gt;, you will need to add additional scaffolding to your application. First, add the &lt;code&gt;VerificationController&lt;/code&gt; to your application: &lt;a href=&quot;https://github.com/laravel/laravel/blob/master/app/Http/Controllers/Auth/VerificationController.php&quot;&gt;App\Http\Controllers\Auth\VerificationController&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4065eba7a177c363412326f7ba0cf8b1c64f183" translate="yes" xml:space="preserve">
          <source>If you customize the broadcast name using the &lt;code&gt;broadcastAs&lt;/code&gt; method, you should make sure to register your listener with a leading &lt;code&gt;.&lt;/code&gt; character. This will instruct Echo to not prepend the application's namespace to the event:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e841e789e3b019df906c9d988b585a7233b6dd" translate="yes" xml:space="preserve">
          <source>If you define your own &lt;code&gt;setUp&lt;/code&gt; method within a test class, be sure to call &lt;code&gt;parent::setUp()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f55884cf55117fa54c15c93c982bb6e9add30692" translate="yes" xml:space="preserve">
          <source>If you discover a security vulnerability within Laravel, please send an email to Taylor Otwell at &lt;a href=&quot;https://laravel.com/cdn-cgi/l/email-protection#acd8cdd5c0c3deecc0cddecddac9c082cfc3c1&quot;&gt;taylor@laravel.com&lt;/a&gt;. All security vulnerabilities will be promptly addressed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee11208085aeccbf3fdcf78ae406a793b0918ff" translate="yes" xml:space="preserve">
          <source>If you do not need to add additional constraints to an Eloquent relationship query, you may access the relationship as if it were a property. For example, continuing to use our &lt;code&gt;User&lt;/code&gt; and &lt;code&gt;Post&lt;/code&gt; example models, we may access all of a user's posts like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea34da5443acfab7316ae39e64b5e85d448fe6ea" translate="yes" xml:space="preserve">
          <source>If you do not want a file name to be automatically generated, you may use the &lt;code&gt;storeAs&lt;/code&gt; method, which accepts the path, file name, and disk name as its arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca1a81089c92a1ff575e305b342c42fb0a641b6" translate="yes" xml:space="preserve">
          <source>If you do not want to detach existing IDs, you may use the &lt;code&gt;syncWithoutDetaching&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60a3b7df7b53e71cb745ee827ef76d4f2237041e" translate="yes" xml:space="preserve">
          <source>If you do not want to halt the execution of your script, use the &lt;a href=&quot;#method-dump&quot;&gt;&lt;code&gt;dump&lt;/code&gt;&lt;/a&gt; function instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d83118baaadc3a861436d94ed8941863ef880b9" translate="yes" xml:space="preserve">
          <source>If you do not want to retrieve the model before deleting the record, you may use the &lt;code&gt;unsearchable&lt;/code&gt; method on an Eloquent query instance or collection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1af50e5a5a26d7551e334fd7e28edc30706d21a" translate="yes" xml:space="preserve">
          <source>If you do not want to stop executing the script, use the &lt;a href=&quot;#method-dump&quot;&gt;&lt;code&gt;dump&lt;/code&gt;&lt;/a&gt; method instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0d82289c8b584f13fcc9e7765142a3aa53a3b92" translate="yes" xml:space="preserve">
          <source>If you do not want to use the &lt;code&gt;validate&lt;/code&gt; method on the request, you may create a validator instance manually using the &lt;code&gt;Validator&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt;. The &lt;code&gt;make&lt;/code&gt; method on the facade generates a new validator instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70558fc5234f6fc4cc5079955f9f1d7c8dda39e1" translate="yes" xml:space="preserve">
          <source>If you don't even need an entire row, you may extract a single value from a record using the &lt;code&gt;value&lt;/code&gt; method. This method will return the value of the column directly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6561012beb93d7d15cbdfdf08d683536a209dc58" translate="yes" xml:space="preserve">
          <source>If you don't want to implement the entire client management frontend yourself, you can use the &lt;a href=&quot;#frontend-quickstart&quot;&gt;frontend quickstart&lt;/a&gt; to have a fully functional frontend in a matter of minutes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91eb6f883b200823320a0d095f699de19bc66513" translate="yes" xml:space="preserve">
          <source>If you don't want to implement the personal access token frontend yourself, you can use the &lt;a href=&quot;#frontend-quickstart&quot;&gt;frontend quickstart&lt;/a&gt; to have a fully functional frontend in a matter of minutes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d24b7d13dc209e864f138fccd877c96e48344d54" translate="yes" xml:space="preserve">
          <source>If you execute the &lt;code&gt;config:cache&lt;/code&gt; command during your deployment process, you should be sure that you are only calling the &lt;code&gt;env&lt;/code&gt; function from within your configuration files. Once the configuration has been cached, the &lt;code&gt;.env&lt;/code&gt; file will not be loaded and all calls to the &lt;code&gt;env&lt;/code&gt; function will return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a26f1b35b2440feea4e37a2775d2763fa4431452" translate="yes" xml:space="preserve">
          <source>If you had test failures the last time you ran the &lt;code&gt;dusk&lt;/code&gt; command, you may save time by re-running the failing tests first using the &lt;code&gt;dusk:fails&lt;/code&gt; command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="296779cd6a70a9de622a60fc64f7c2aa0c2a9a18" translate="yes" xml:space="preserve">
          <source>If you have PHP installed locally and you would like to use PHP's built-in development server to serve your application, you may use the &lt;code&gt;serve&lt;/code&gt; Artisan command. This command will start a development server at &lt;code&gt;http://localhost:8000&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f18022da5dbc86409a668f30d782f0ace6d30578" translate="yes" xml:space="preserve">
          <source>If you have customized the default theme styles used for Markdown mailable templates, you will need to re-publish and make your customizations again. The button color classes have been renamed from 'blue', 'green', and 'red' to 'primary', 'success', and 'error'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42912fec1720c79977ea0b1c42d064f503492e1f" translate="yes" xml:space="preserve">
          <source>If you have installed Homestead via your project's &lt;code&gt;composer.json&lt;/code&gt; file, you should ensure your &lt;code&gt;composer.json&lt;/code&gt; file contains &lt;code&gt;&quot;laravel/homestead&quot;: &quot;^7&quot;&lt;/code&gt; and update your dependencies:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ec618824676d4b29771e6829ad401e26f797a14" translate="yes" xml:space="preserve">
          <source>If you have mailable classes that you want to always be queued, you may implement the &lt;code&gt;ShouldQueue&lt;/code&gt; contract on the class. Now, even if you call the &lt;code&gt;send&lt;/code&gt; method when mailing, the mailable will still be queued since it implements the contract:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6578a52dd97e7b3214c65ce2895b3eb7d9ef0da4" translate="yes" xml:space="preserve">
          <source>If you have multiple forms on a single page, you may wish to name the &lt;code&gt;MessageBag&lt;/code&gt; of errors, allowing you to retrieve the error messages for a specific form. Pass a name as the second argument to &lt;code&gt;withErrors&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3637d6970ac00e9785bf5dc54be52236f05c255" translate="yes" xml:space="preserve">
          <source>If you have not read the &lt;a href=&quot;#concept-overview&quot;&gt;concept overview&lt;/a&gt;, you are highly encouraged to do so before proceeding with this documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="775281108018c1f5ad0dc7f197e68c7305b03266" translate="yes" xml:space="preserve">
          <source>If you intend to make frequent updates to your application's JavaScript, you should consider extracting all of your vendor libraries into their own file. This way, a change to your application code will not affect the caching of your large &lt;code&gt;vendor.js&lt;/code&gt; file. Mix's &lt;code&gt;extract&lt;/code&gt; method makes this a breeze:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="027043c94375af4aca61fd77ed0777206e531666" translate="yes" xml:space="preserve">
          <source>If you just need to retrieve a single row from the database table, you may use the &lt;code&gt;first&lt;/code&gt; method. This method will return a single &lt;code&gt;stdClass&lt;/code&gt; object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad054b0b9d44d975bf491052f5f10538c3afbdb9" translate="yes" xml:space="preserve">
          <source>If you need a database, try MySQL by running &lt;code&gt;brew install mysql@5.7&lt;/code&gt; on your command line. Once MySQL has been installed, you may start it using the &lt;code&gt;brew services start mysql@5.7&lt;/code&gt; command. You can then connect to the database at &lt;code&gt;127.0.0.1&lt;/code&gt; using the &lt;code&gt;root&lt;/code&gt; username and an empty string for the password.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9beb2537969ff13774f9093eccd093cdb3499fa5" translate="yes" xml:space="preserve">
          <source>If you need control over the response's status and headers but also need to return a &lt;a href=&quot;views&quot;&gt;view&lt;/a&gt; as the response's content, you should use the &lt;code&gt;view&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a170eb44158091d97790d0c704630a4f3f4497ef" translate="yes" xml:space="preserve">
          <source>If you need even more power, you may use the &lt;code&gt;whereDoesntHave&lt;/code&gt; and &lt;code&gt;orWhereDoesntHave&lt;/code&gt; methods to put &quot;where&quot; conditions on your &lt;code&gt;doesntHave&lt;/code&gt; queries. These methods allows you to add customized constraints to a relationship constraint, such as checking the content of a comment:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aa87accc3f854a35993769602b7ba4413349d0c" translate="yes" xml:space="preserve">
          <source>If you need even more power, you may use the &lt;code&gt;whereHas&lt;/code&gt; and &lt;code&gt;orWhereHas&lt;/code&gt; methods to put &quot;where&quot; conditions on your &lt;code&gt;has&lt;/code&gt; queries. These methods allow you to add customized constraints to a relationship constraint, such as checking the content of a comment:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01a37dab2354e2eda9f80d9b487a1293fbb9b854" translate="yes" xml:space="preserve">
          <source>If you need to add additional routes to a resource controller beyond the default set of resource routes, you should define those routes before your call to &lt;code&gt;Route::resource&lt;/code&gt;; otherwise, the routes defined by the &lt;code&gt;resource&lt;/code&gt; method may unintentionally take precedence over your supplemental routes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="154265239b970b05b61297c1b574b87443e72a8d" translate="yes" xml:space="preserve">
          <source>If you need to ask the user for a simple confirmation, you may use the &lt;code&gt;confirm&lt;/code&gt; method. By default, this method will return &lt;code&gt;false&lt;/code&gt;. However, if the user enters &lt;code&gt;y&lt;/code&gt; or &lt;code&gt;yes&lt;/code&gt; in response to the prompt, the method will return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b688489eac9d6ec6bc85d73ee513ba21579240d4" translate="yes" xml:space="preserve">
          <source>If you need to customize the format of your timestamps, set the &lt;code&gt;$dateFormat&lt;/code&gt; property on your model. This property determines how date attributes are stored in the database, as well as their format when the model is serialized to an array or JSON:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e31840cfaa7504cc9276faf0d8d057675f42258a" translate="yes" xml:space="preserve">
          <source>If you need to customize the names of the columns used to store the timestamps, you may set the &lt;code&gt;CREATED_AT&lt;/code&gt; and &lt;code&gt;UPDATED_AT&lt;/code&gt; constants in your model:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc7c9b091c16bf09219560e3b006c98f0d5fe674" translate="yes" xml:space="preserve">
          <source>If you need to define an environment variable with a value that contains spaces, you may do so by enclosing the value in double quotes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e3a26c189cd354a86ae2a8e6a71e400f0e51894" translate="yes" xml:space="preserve">
          <source>If you need to determine if a view exists, you may use the &lt;code&gt;View&lt;/code&gt; facade. The &lt;code&gt;exists&lt;/code&gt; method will return &lt;code&gt;true&lt;/code&gt; if the view exists:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3aad5fa09505341b2203749ab485e7ebf782732" translate="yes" xml:space="preserve">
          <source>If you need to give the user a predefined set of choices, you may use the &lt;code&gt;choice&lt;/code&gt; method. You may set the array index of the default value to be returned if no option is chosen:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8baf1dbf913a6dee50d3774c70e13d9455ae18b2" translate="yes" xml:space="preserve">
          <source>If you need to include &lt;a href=&quot;https://docs.aws.amazon.com/aws-sdk-php/v3/api/api-email-2010-12-01.html#sendrawemail&quot;&gt;additional options&lt;/a&gt; when executing the SES &lt;code&gt;SendRawEmail&lt;/code&gt; request, you may define an &lt;code&gt;options&lt;/code&gt; array within your &lt;code&gt;ses&lt;/code&gt; configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60df8347bb2f65e7b1fa5fd61df613a1a57f8678" translate="yes" xml:space="preserve">
          <source>If you need to keep your flash data around for several requests, you may use the &lt;code&gt;reflash&lt;/code&gt; method, which will keep all of the flash data for an additional request. If you only need to keep specific flash data, you may use the &lt;code&gt;keep&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcd2cd9e721c39e16f1f718db91a950db05a628e" translate="yes" xml:space="preserve">
          <source>If you need to log an existing user instance into your application, you may call the &lt;code&gt;login&lt;/code&gt; method with the user instance. The given object must be an implementation of the &lt;code&gt;Illuminate\Contracts\Auth\Authenticatable&lt;/code&gt;&lt;a href=&quot;contracts&quot;&gt;contract&lt;/a&gt;. Of course, the &lt;code&gt;App\User&lt;/code&gt; model included with Laravel already implements this interface:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4c082a554ba587832a01d8549a3b3f14dea41d9" translate="yes" xml:space="preserve">
          <source>If you need to make assertions after a page has been reloaded, use the &lt;code&gt;waitForReload&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14833c146efe36097116d558c4f3c033212ca4ae" translate="yes" xml:space="preserve">
          <source>If you need to manually access the listener's underlying queue job's &lt;code&gt;delete&lt;/code&gt; and &lt;code&gt;release&lt;/code&gt; methods, you may do so using the &lt;code&gt;Illuminate\Queue\InteractsWithQueue&lt;/code&gt; trait. This trait is imported by default on generated listeners and provides access to these methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fecf1d46609f471ed523c543a0dca2811dce4ef5" translate="yes" xml:space="preserve">
          <source>If you need to override the &lt;a href=&quot;https://github.com/webpack-contrib/less-loader#options&quot;&gt;underlying Less plug-in options&lt;/a&gt;, you may pass an object as the third argument to &lt;code&gt;mix.less()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dccfbab7558899180b1b6d5626926106f85d760e" translate="yes" xml:space="preserve">
          <source>If you need to pause the test for a given number of milliseconds, use the &lt;code&gt;pause&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88a03025c7607c3c0ba68fd91638d8780fadaf89" translate="yes" xml:space="preserve">
          <source>If you need to process thousands of Eloquent records, use the &lt;code&gt;chunk&lt;/code&gt; command. The &lt;code&gt;chunk&lt;/code&gt; method will retrieve a &quot;chunk&quot; of Eloquent models, feeding them to a given &lt;code&gt;Closure&lt;/code&gt; for processing. Using the &lt;code&gt;chunk&lt;/code&gt; method will conserve memory when working with large result sets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b97670a4c55881eaf81fdeafc2995f02453b3932" translate="yes" xml:space="preserve">
          <source>If you need to require other PHP files before your task is executed, you may use the &lt;code&gt;@include&lt;/code&gt; directive at the top of your &lt;code&gt;Envoy.blade.php&lt;/code&gt; file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f37922082bad8ac67af32827b69ceddf985aa0" translate="yes" xml:space="preserve">
          <source>If you need to retrieve a subset of the input data, you may use the &lt;code&gt;only&lt;/code&gt; and &lt;code&gt;except&lt;/code&gt; methods. Both of these methods accept a single &lt;code&gt;array&lt;/code&gt; or a dynamic list of arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f88beb41686ea507995354617134b74845322b0c" translate="yes" xml:space="preserve">
          <source>If you need to retrieve all of the arguments as an &lt;code&gt;array&lt;/code&gt;, call the &lt;code&gt;arguments&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cdeb02590860b9ea1d18e8395018348b23129bb" translate="yes" xml:space="preserve">
          <source>If you need to retrieve an array of all the messages for a given field, use the &lt;code&gt;get&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12a0005b5cefaf71d1d2b9a45dcb2df4ec6ebe8e" translate="yes" xml:space="preserve">
          <source>If you need to retrieve an item from the cache and then delete the item, you may use the &lt;code&gt;pull&lt;/code&gt; method. Like the &lt;code&gt;get&lt;/code&gt; method, &lt;code&gt;null&lt;/code&gt; will be returned if the item does not exist in the cache:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="110d967f5dc97298c96e23ead245165ffe37b093" translate="yes" xml:space="preserve">
          <source>If you need to save multiple related models, you may use the &lt;code&gt;saveMany&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67931664d2fbd5ae4c4e98cafa5ae90f0d0b7193" translate="yes" xml:space="preserve">
          <source>If you need to set additional query constraints on the eager loading query, you may pass an array keyed by the relationships you wish to load. The array values should be &lt;code&gt;Closure&lt;/code&gt; instances which receive the query instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="322063742317f7a17ae1d8ef12382e695dd3d302" translate="yes" xml:space="preserve">
          <source>If you need to sort a collection of nested arrays or objects, see the &lt;a href=&quot;#method-sortby&quot;&gt;&lt;code&gt;sortBy&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#method-sortbydesc&quot;&gt;&lt;code&gt;sortByDesc&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07823b04bc4d80fd8cf08afe4d38ffa87f22f7a5" translate="yes" xml:space="preserve">
          <source>If you need to specify the value of an option that does not accept string values, such as the &lt;code&gt;--force&lt;/code&gt; flag on the &lt;code&gt;migrate:refresh&lt;/code&gt; command, you should pass &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bbdf2c0fa36be7737d172825c93eed8d08654f8" translate="yes" xml:space="preserve">
          <source>If you need to update an existing row in your pivot table, you may use &lt;code&gt;updateExistingPivot&lt;/code&gt; method. This method accepts the pivot record foreign key and an array of attributes to update:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fd95bb0c779c127490efbfa20778e3c282ae17c" translate="yes" xml:space="preserve">
          <source>If you need to use a custom &lt;code&gt;Collection&lt;/code&gt; object with your own extension methods, you may override the &lt;code&gt;newCollection&lt;/code&gt; method on your model:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5c56d419b5f9e90bed94c0d7d35d82d48175003" translate="yes" xml:space="preserve">
          <source>If you need to work with thousands of database records, consider using the &lt;code&gt;chunk&lt;/code&gt; method. This method retrieves a small chunk of the results at a time and feeds each chunk into a &lt;code&gt;Closure&lt;/code&gt; for processing. This method is very useful for writing &lt;a href=&quot;artisan&quot;&gt;Artisan commands&lt;/a&gt; that process thousands of records. For example, let's work with the entire &lt;code&gt;users&lt;/code&gt; table in chunks of 100 records at a time:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54fba411f0c190916b069a5095542f25b8daa442" translate="yes" xml:space="preserve">
          <source>If you only need the functionality of a custom rule once throughout your application, you may use a Closure instead of a rule object. The Closure receives the attribute's name, the attribute's value, and a &lt;code&gt;$fail&lt;/code&gt; callback that should be called if validation fails:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f242c8847dc1d3e0218bd99b2f462672732d6470" translate="yes" xml:space="preserve">
          <source>If you only need to display simple &quot;Next&quot; and &quot;Previous&quot; links in your pagination view, you may use the &lt;code&gt;simplePaginate&lt;/code&gt; method to perform a more efficient query. This is very useful for large datasets when you do not need to display a link for each page number when rendering your view:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8db27fd263fab1ab8bdba5c377000ac95da4eb42" translate="yes" xml:space="preserve">
          <source>If you only want to fake event listeners for a portion of your test, you may use the &lt;code&gt;fakeFor&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13e3517f275db5ad260ba3c0209c9ca3644d837f" translate="yes" xml:space="preserve">
          <source>If you open the &lt;code&gt;config/app.php&lt;/code&gt; file included with Laravel, you will see a &lt;code&gt;providers&lt;/code&gt; array. These are all of the service provider classes that will be loaded for your application. Of course, many of these are &quot;deferred&quot; providers, meaning they will not be loaded on every request, but only when the services they provide are actually needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="142ffe10cb300cc8413baf547a72b32acc0db551" translate="yes" xml:space="preserve">
          <source>If you pass an array of columns into a method that drops indexes, the conventional index name will be generated based on the table name, columns and key type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe3e64946531a08dd602ee3eac16848efa80829" translate="yes" xml:space="preserve">
          <source>If you plan to have authorization logic in another part of your application, return &lt;code&gt;true&lt;/code&gt; from the &lt;code&gt;authorize&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c31cd66e3660d510f430445fe1b93e1e2043a5" translate="yes" xml:space="preserve">
          <source>If you prefer to use MariaDB instead of MySQL, you may add the &lt;code&gt;mariadb&lt;/code&gt; option to your &lt;code&gt;Homestead.yaml&lt;/code&gt; file. This option will remove MySQL and install MariaDB. MariaDB serves as a drop-in replacement for MySQL so you should still use the &lt;code&gt;mysql&lt;/code&gt; database driver in your application's database configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb469d3db8e49ba5d150780974bf190155e5856b" translate="yes" xml:space="preserve">
          <source>If you prefer to use React to build your JavaScript application, Laravel makes it a cinch to swap the Vue scaffolding with React scaffolding. On any fresh Laravel application, you may use the &lt;code&gt;preset&lt;/code&gt; command with the &lt;code&gt;react&lt;/code&gt; option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47e870e1a0ebbe2d9031e536ad5801f0272351e8" translate="yes" xml:space="preserve">
          <source>If you provide an array of key / value pairs and an expiration time to the function, it will store values in the cache for the specified duration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d4b008bbbe536529082bf0beb1ccb399f5d620" translate="yes" xml:space="preserve">
          <source>If you return a PSR-7 response instance from a route or controller, it will automatically be converted back to a Laravel response instance and be displayed by the framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="388a83422b713bf10b2f388b5d49969380220f4a" translate="yes" xml:space="preserve">
          <source>If you run your migrations on multiple types of databases, consider using &lt;code&gt;DB::getDriverName()&lt;/code&gt; in your migrations to skip unsupported foreign key methods for SQLite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0afbc46858ecd5214a2cac32739f175484d23ac" translate="yes" xml:space="preserve">
          <source>If you used the &lt;code&gt;--model&lt;/code&gt; option when generating your policy via the Artisan console, it will already contain methods for the &lt;code&gt;view&lt;/code&gt;, &lt;code&gt;create&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, and &lt;code&gt;delete&lt;/code&gt; actions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4deed7abcb4a166e72847894f3956c0bd27c130a" translate="yes" xml:space="preserve">
          <source>If you want a middleware to run during every HTTP request to your application, list the middleware class in the &lt;code&gt;$middleware&lt;/code&gt; property of your &lt;code&gt;app/Http/Kernel.php&lt;/code&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7350cc2d65ca30bbeaa8e2b6953c63b7e7ed72f" translate="yes" xml:space="preserve">
          <source>If you want to broadcast your event using the &lt;code&gt;sync&lt;/code&gt; queue instead of the default queue driver, you can implement the &lt;code&gt;ShouldBroadcastNow&lt;/code&gt; interface instead of &lt;code&gt;ShouldBroadcast&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfe0215a5469f88a8dd057f2024207b48d2dc37a" translate="yes" xml:space="preserve">
          <source>If you want to count the number of results from a relationship without actually loading them you may use the &lt;code&gt;withCount&lt;/code&gt; method, which will place a &lt;code&gt;{relation}_count&lt;/code&gt; column on your resulting models. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c4aba924e0af6a213824172102725e1801ee337" translate="yes" xml:space="preserve">
          <source>If you want to perform a schema operation on a database connection that is not your default connection, use the &lt;code&gt;connection&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d58d79e01663f9d87ae42c52268cb7d66d5cb2c6" translate="yes" xml:space="preserve">
          <source>If you want to retrieve only the &quot;unread&quot; notifications, you may use the &lt;code&gt;unreadNotifications&lt;/code&gt; relationship. Again, these notifications will be sorted by the &lt;code&gt;created_at&lt;/code&gt; timestamp:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b991b8cb1b12a366756b25c8e6709271a370fab" translate="yes" xml:space="preserve">
          <source>If you want to stop executing the script after dumping the collection, use the &lt;a href=&quot;#method-dd&quot;&gt;&lt;code&gt;dd&lt;/code&gt;&lt;/a&gt; method instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5bfd9c11261e25f62152824977cc2a34518c9f3" translate="yes" xml:space="preserve">
          <source>If you want to stop executing the script after dumping the variables, use the &lt;a href=&quot;#method-dd&quot;&gt;&lt;code&gt;dd&lt;/code&gt;&lt;/a&gt; function instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="672dacc30dbfb0ff1e001bf92889598ee9951337" translate="yes" xml:space="preserve">
          <source>If you want your pivot table to have automatically maintained &lt;code&gt;created_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt; timestamps, use the &lt;code&gt;withTimestamps&lt;/code&gt; method on the relationship definition:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e96a2d5cc2cd5b4bb64aa1257d8fa9c12c43996" translate="yes" xml:space="preserve">
          <source>If you wish to append a &quot;hash fragment&quot; to the paginator's URLs, you may use the &lt;code&gt;fragment&lt;/code&gt; method. For example, to append &lt;code&gt;#foo&lt;/code&gt; to the end of each pagination link, make the following call to the &lt;code&gt;fragment&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7b4de90cdbe3eea8edb32580a1d2e906dd43815" translate="yes" xml:space="preserve">
          <source>If you wish to cancel a subscription immediately, call the &lt;code&gt;cancelNow&lt;/code&gt; method on the user's subscription:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7325c7bfb6aec7d3af11b493297a2a11aed625fd" translate="yes" xml:space="preserve">
          <source>If you wish to customize the file name of the compiled CSS, you may pass a full file path as the second argument to the &lt;code&gt;less&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="200df1248e26b17b182ba63b22d6d441522fbe21" translate="yes" xml:space="preserve">
          <source>If you wish to delay the delivery of a queued email message, you may use the &lt;code&gt;later&lt;/code&gt; method. As its first argument, the &lt;code&gt;later&lt;/code&gt; method accepts a &lt;code&gt;DateTime&lt;/code&gt; instance indicating when the message should be sent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75066d14550d7dc0b80b43fe48a09e09ace48ffe" translate="yes" xml:space="preserve">
          <source>If you wish to truncate the entire table, which will remove all rows and reset the auto-incrementing ID to zero, you may use the &lt;code&gt;truncate&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac28ed755c6716e9fdc240cc30e3af558622f8e" translate="yes" xml:space="preserve">
          <source>If you wish to use your own resolution logic, you may use the &lt;code&gt;Route::bind&lt;/code&gt; method. The &lt;code&gt;Closure&lt;/code&gt; you pass to the &lt;code&gt;bind&lt;/code&gt; method will receive the value of the URI segment and should return the instance of the class that should be injected into the route:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5b1a784e14cd61e9f67860963709f273e51d980" translate="yes" xml:space="preserve">
          <source>If you wish, you may also add extra conditions to the authentication query in addition to the user's e-mail and password. For example, we may verify that user is marked as &quot;active&quot;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4300df6c6fe3c323516793547baa3e71944413c3" translate="yes" xml:space="preserve">
          <source>If you wish, you may define place-holders in your translation strings. All place-holders are prefixed with a &lt;code&gt;:&lt;/code&gt;. For example, you may define a welcome message with a place-holder name:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d09b56950fbaa73c2f4759d80c233c61f791d64" translate="yes" xml:space="preserve">
          <source>If you wish, you may forward additional ports to the Vagrant box, as well as specify their protocol:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="289b4e5b61ae73180e5129c2e7199a91ceb1d394" translate="yes" xml:space="preserve">
          <source>If you would just like to concatenate some plain CSS stylesheets into a single file, you may use the &lt;code&gt;styles&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="974943b72b9952603321a16d5bac9bfc90aba2dc" translate="yes" xml:space="preserve">
          <source>If you would like Laravel to automatically manage streaming a given file to your storage location, you may use the &lt;code&gt;putFile&lt;/code&gt; or &lt;code&gt;putFileAs&lt;/code&gt; method. This method accepts either a &lt;code&gt;Illuminate\Http\File&lt;/code&gt; or &lt;code&gt;Illuminate\Http\UploadedFile&lt;/code&gt; instance and will automatically stream the file to your desired location:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4cfcbb58ef6bfe0b1a47e832452f91fb5ae1825" translate="yes" xml:space="preserve">
          <source>If you would like a route parameter to always be constrained by a given regular expression, you may use the &lt;code&gt;pattern&lt;/code&gt; method. You should define these patterns in the &lt;code&gt;boot&lt;/code&gt; method of your &lt;code&gt;RouteServiceProvider&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5e40a4a2022cedf978f394046cd4b1a94070e3a" translate="yes" xml:space="preserve">
          <source>If you would like model binding to use a database column other than &lt;code&gt;id&lt;/code&gt; when retrieving a given model class, you may override the &lt;code&gt;getRouteKeyName&lt;/code&gt; method on the Eloquent model:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d996ada4f36db33dd8845082262d85b361b65e4" translate="yes" xml:space="preserve">
          <source>If you would like the &lt;code&gt;:attribute&lt;/code&gt; portion of your validation message to be replaced with a custom attribute name, you may specify the custom name in the &lt;code&gt;attributes&lt;/code&gt; array of your &lt;code&gt;resources/lang/xx/validation.php&lt;/code&gt; language file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aee7e822655f0ec06851d95840c64ef6f4fc11d" translate="yes" xml:space="preserve">
          <source>If you would like the &lt;code&gt;schedule:run&lt;/code&gt; command to be run for a Homestead site, you may set the &lt;code&gt;schedule&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt; when defining the site:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c07675901c60116a3fdb69c26f529f07431ea2b" translate="yes" xml:space="preserve">
          <source>If you would like these computed values to be added to the array / JSON representations of your model, &lt;a href=&quot;eloquent-serialization#appending-values-to-json&quot;&gt;you will need to append them&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cd7b2157eeb4c3c7d6a55f0d8c8e8fb75dfb1f9" translate="yes" xml:space="preserve">
          <source>If you would like to &lt;code&gt;@include&lt;/code&gt; a view depending on a given boolean condition, you may use the &lt;code&gt;@includeWhen&lt;/code&gt; directive:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37efb431e155654ded8bd89a43a96266327efb40" translate="yes" xml:space="preserve">
          <source>If you would like to &lt;code&gt;save&lt;/code&gt; your model and all of its associated relationships, you may use the &lt;code&gt;push&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb610adc130ca0f9645fb1407800a46f4fb389f" translate="yes" xml:space="preserve">
          <source>If you would like to add a collection of models to your search index via an Eloquent query, you may chain the &lt;code&gt;searchable&lt;/code&gt; method onto an Eloquent query. The &lt;code&gt;searchable&lt;/code&gt; method will &lt;a href=&quot;eloquent#chunking-results&quot;&gt;chunk the results&lt;/a&gt; of the query and add the records to your search index. Again, if you have configured Scout to use queues, all of the chunks will be added in the background by your queue workers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80c6e3e9c4764612c015a7aa8415d1f09ce2f64c" translate="yes" xml:space="preserve">
          <source>If you would like to add an &quot;after&quot; hook to a form request, you may use the &lt;code&gt;withValidator&lt;/code&gt; method. This method receives the fully constructed validator, allowing you to call any of its methods before the validation rules are actually evaluated:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ef25778b02080eb4dbf5be45bcd60bed5b1c7f" translate="yes" xml:space="preserve">
          <source>If you would like to append the output to a given file, you may use the &lt;code&gt;appendOutputTo&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9805d2c7dfd79904240aafd50f81bd8d72c3d65" translate="yes" xml:space="preserve">
          <source>If you would like to apply a coupon when creating the subscription, you may use the &lt;code&gt;withCoupon&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="125e8538d84424dfdc4d6ad946e7aa1dfea5da90" translate="yes" xml:space="preserve">
          <source>If you would like to assign middleware to specific routes, you should first assign the middleware a key in your &lt;code&gt;app/Http/Kernel.php&lt;/code&gt; file. By default, the &lt;code&gt;$routeMiddleware&lt;/code&gt; property of this class contains entries for the middleware included with Laravel. To add your own, append it to this list and assign it a key of your choosing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43f8ffe96acbc51267a65564733c484d4a71f085" translate="yes" xml:space="preserve">
          <source>If you would like to be notified when one of your queues has a long wait time, you may use the &lt;code&gt;Horizon::routeMailNotificationsTo&lt;/code&gt;, &lt;code&gt;Horizon::routeSlackNotificationsTo&lt;/code&gt;, and &lt;code&gt;Horizon::routeSmsNotificationsTo&lt;/code&gt; methods. You may call these methods from your application's &lt;code&gt;AppServiceProvider&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d22870a2eef6e8f9e64cc682ed27d2915b57227a" translate="yes" xml:space="preserve">
          <source>If you would like to be prompted for confirmation before running a given task on your servers, you should add the &lt;code&gt;confirm&lt;/code&gt; directive to your task declaration. This option is particularly useful for destructive operations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e74c391590a69c440df59b665ca3907100155395" translate="yes" xml:space="preserve">
          <source>If you would like to begin a transaction manually and have complete control over rollbacks and commits, you may use the &lt;code&gt;beginTransaction&lt;/code&gt; method on the &lt;code&gt;DB&lt;/code&gt; facade:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bcb931be077e38dba55b60419f1589d708957ef" translate="yes" xml:space="preserve">
          <source>If you would like to build an entirely new theme for the Markdown components, write a new CSS file within the &lt;code&gt;html/themes&lt;/code&gt; directory and change the &lt;code&gt;theme&lt;/code&gt; option of your &lt;code&gt;mail&lt;/code&gt; configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f005980e03c838cc158691b07019916142acf695" translate="yes" xml:space="preserve">
          <source>If you would like to call another console command and suppress all of its output, you may use the &lt;code&gt;callSilent&lt;/code&gt; method. The &lt;code&gt;callSilent&lt;/code&gt; method has the same signature as the &lt;code&gt;call&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="957577815dad90548631b412494ad4dad4079ae4" translate="yes" xml:space="preserve">
          <source>If you would like to completely customize your Webpack configuration, copy the &lt;code&gt;node_modules/laravel-mix/setup/webpack.config.js&lt;/code&gt; file to your project's root directory. Next, point all of the &lt;code&gt;--config&lt;/code&gt; references in your &lt;code&gt;package.json&lt;/code&gt; file to the newly copied configuration file. If you choose to take this approach to customization, any future upstream updates to Mix's &lt;code&gt;webpack.config.js&lt;/code&gt; must be manually merged into your customized file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1023a250d08dbba3cf4cf213cc05d03000f05665" translate="yes" xml:space="preserve">
          <source>If you would like to create a JSONP response, you may use the &lt;code&gt;json&lt;/code&gt; method in combination with the &lt;code&gt;withCallback&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc00be3f7b867ec0b1ac16ce39a2d29943de49c" translate="yes" xml:space="preserve">
          <source>If you would like to create a validator instance manually but still take advantage of the automatic redirection offered by the requests's &lt;code&gt;validate&lt;/code&gt; method, you may call the &lt;code&gt;validate&lt;/code&gt; method on an existing validator instance. If validation fails, the user will automatically be redirected or, in the case of an AJAX request, a JSON response will be returned:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="878b4585baba59d2b7b2809aba31abba17045c8d" translate="yes" xml:space="preserve">
          <source>If you would like to create an on-demand logging stack consisting of multiple channels, you may use the &lt;code&gt;stack&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c52771888b1275d73433877297cf3a645c2f770b" translate="yes" xml:space="preserve">
          <source>If you would like to customize the authorization approval screen, you may publish Passport's views using the &lt;code&gt;vendor:publish&lt;/code&gt; Artisan command. The published views will be placed in &lt;code&gt;resources/views/vendor/passport&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8cbe33a741c502cf67ed66d76eae4a90cd5b693" translate="yes" xml:space="preserve">
          <source>If you would like to customize the format of your email's data before it is sent to the template, you may manually pass your data to the view via the &lt;code&gt;with&lt;/code&gt; method. Typically, you will still pass data via the mailable class' constructor; however, you should set this data to &lt;code&gt;protected&lt;/code&gt; or &lt;code&gt;private&lt;/code&gt; properties so the data is not automatically made available to the template. Then, when calling the &lt;code&gt;with&lt;/code&gt; method, pass an array of data that you wish to make available to the template:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e97f444df85b482a9e9808018cc11d2f52710ecc" translate="yes" xml:space="preserve">
          <source>If you would like to customize the query executed by the validation rule, you may use the &lt;code&gt;Rule&lt;/code&gt; class to fluently define the rule. In this example, we'll also specify the validation rules as an array instead of using the &lt;code&gt;|&lt;/code&gt; character to delimit them:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b088676703f6085b18f1e84ae5b18d04b9b4c4c9" translate="yes" xml:space="preserve">
          <source>If you would like to customize the queue connection and queue name used by an event listener, you may define &lt;code&gt;$connection&lt;/code&gt; and &lt;code&gt;$queue&lt;/code&gt; properties on your listener class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ede5ea5f9a32cd8168db6c35b6311fc43900c001" translate="yes" xml:space="preserve">
          <source>If you would like to customize the value that is placed in the route parameter, you should override the &lt;code&gt;getRouteKey&lt;/code&gt; method on your Eloquent model:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c420332cab852b3fcdae4b2f71f5d2ea44e058e4" translate="yes" xml:space="preserve">
          <source>If you would like to customize which channels a notifiable entity receives its broadcast notifications on, you may define a &lt;code&gt;receivesBroadcastNotificationsOn&lt;/code&gt; method on the notifiable entity:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fbd56c66a478fb3a0e12f8a5880b5842fccd07e" translate="yes" xml:space="preserve">
          <source>If you would like to define a controller that only handles a single action, you may place a single &lt;code&gt;__invoke&lt;/code&gt; method on the controller:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4bea4fb7a2fa4a2894cdcfe1602bb7979b845a7" translate="yes" xml:space="preserve">
          <source>If you would like to define a custom Valet driver for a single application, create a &lt;code&gt;LocalValetDriver.php&lt;/code&gt; in the application's root directory. Your custom driver may extend the base &lt;code&gt;ValetDriver&lt;/code&gt; class or extend an existing application specific driver such as the &lt;code&gt;LaravelValetDriver&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="443fa1393674b164e3af28029741f853c7649f52" translate="yes" xml:space="preserve">
          <source>If you would like to define a custom model to represent the intermediate table of your relationship, you may call the &lt;code&gt;using&lt;/code&gt; method when defining the relationship. Custom many-to-many pivot models should extend the &lt;code&gt;Illuminate\Database\Eloquent\Relations\Pivot&lt;/code&gt; class while custom polymorphic many-to-many pivot models should extend the &lt;code&gt;Illuminate\Database\Eloquent\Relations\MorphPivot&lt;/code&gt; class. For example, we may define a &lt;code&gt;Role&lt;/code&gt; which uses a custom &lt;code&gt;UserRole&lt;/code&gt; pivot model:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e468c0ef7b9c1674f6f19a8767a922e33d40182" translate="yes" xml:space="preserve">
          <source>If you would like to define a custom response that you can re-use in a variety of your routes and controllers, you may use the &lt;code&gt;macro&lt;/code&gt; method on the &lt;code&gt;Response&lt;/code&gt; facade. For example, from a &lt;a href=&quot;providers&quot;&gt;service provider's&lt;/a&gt;&lt;code&gt;boot&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7814abbc503e4b4f1d4717ae186fb256d433f0f9" translate="yes" xml:space="preserve">
          <source>If you would like to define a plain-text version of your email, you may use the &lt;code&gt;text&lt;/code&gt; method. Like the &lt;code&gt;view&lt;/code&gt; method, the &lt;code&gt;text&lt;/code&gt; method accepts a template name which will be used to render the contents of the email. You are free to define both a HTML and plain-text version of your message:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d4b7b0b990c18bae8e9087a8b06f5b56f2d9707" translate="yes" xml:space="preserve">
          <source>If you would like to define an entirely custom channel in which you have full control over Monolog's instantiation and configuration, you may specify a &lt;code&gt;custom&lt;/code&gt; driver type in your &lt;code&gt;config/logging.php&lt;/code&gt; configuration file. Your configuration should include a &lt;code&gt;via&lt;/code&gt; option to point to the factory class which will be invoked to create the Monolog instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c94654a81246facc28fa5f750f4dd8999376ad3" translate="yes" xml:space="preserve">
          <source>If you would like to define arguments or options to expect array inputs, you may use the &lt;code&gt;*&lt;/code&gt; character. First, let's take a look at an example that specifies an array argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519c5e02b251bf04da4402ffad2055f064b36d14" translate="yes" xml:space="preserve">
          <source>If you would like to delay the delivery of the notification, you may chain the &lt;code&gt;delay&lt;/code&gt; method onto your notification instantiation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aecfc1bb235ebf0dab5e6bbb119ef9df03220d88" translate="yes" xml:space="preserve">
          <source>If you would like to delay the execution of a queued job, you may use the &lt;code&gt;delay&lt;/code&gt; method when dispatching a job. For example, let's specify that a job should not be available for processing until 10 minutes after it has been dispatched:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f92c61106cbf0c6880d2cd57e985f48873561067" translate="yes" xml:space="preserve">
          <source>If you would like to delete a failed job, you may use the &lt;code&gt;queue:forget&lt;/code&gt; command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8006e67d6d2f8e39a0ab780a42ad7e9db80ffa6a" translate="yes" xml:space="preserve">
          <source>If you would like to deny all authorizations for a user you should return &lt;code&gt;false&lt;/code&gt; from the &lt;code&gt;before&lt;/code&gt; method. If &lt;code&gt;null&lt;/code&gt; is returned, the authorization will fall through to the policy method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29975588ff827a680a84cef92461d2dd119f3899" translate="yes" xml:space="preserve">
          <source>If you would like to designate a different file as the default pagination view, you may use the paginator's &lt;code&gt;defaultView&lt;/code&gt; and &lt;code&gt;defaultSimpleView&lt;/code&gt; methods within your &lt;code&gt;AppServiceProvider&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9220e854b0c8d39806bf85eab15009921b211d3c" translate="yes" xml:space="preserve">
          <source>If you would like to determine if a particular user is authorized to perform an action, you may use the &lt;code&gt;forUser&lt;/code&gt; method on the &lt;code&gt;Gate&lt;/code&gt; facade:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4646ad2061dee2a8d77964cd90a6d2500fe3770" translate="yes" xml:space="preserve">
          <source>If you would like to determine if a user is still within their trial period, you may use the &lt;code&gt;onTrial&lt;/code&gt; method. This method can be useful for displaying a warning to the user that they are still on their trial period:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ad7c1429d1b02f39769a784305a5bf7eb8fb2d5" translate="yes" xml:space="preserve">
          <source>If you would like to determine if a value is present on the request and is not empty, you may use the &lt;code&gt;filled&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda089bd37735451489cdfe627539242270c4021" translate="yes" xml:space="preserve">
          <source>If you would like to determine if the current request was routed to a given named route, you may use the &lt;code&gt;named&lt;/code&gt; method on a Route instance. For example, you may check the current route name from a route middleware:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="427313496f7da54ce5b983c424cc83148316bcab" translate="yes" xml:space="preserve">
          <source>If you would like to disable the wrapping of the outer-most resource, you may use the &lt;code&gt;withoutWrapping&lt;/code&gt; method on the base resource class. Typically, you should call this method from your &lt;code&gt;AppServiceProvider&lt;/code&gt; or another &lt;a href=&quot;providers&quot;&gt;service provider&lt;/a&gt; that is loaded on every request to your application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c113122b37e7353217fcf2ae537d4450c874317" translate="yes" xml:space="preserve">
          <source>If you would like to disable this behavior, you may remove the two middleware from your application's middleware stack by removing them from the &lt;code&gt;$middleware&lt;/code&gt; property of your &lt;code&gt;App\Http\Kernel&lt;/code&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7075e55558e513480cc342abb307934cecfc3a7" translate="yes" xml:space="preserve">
          <source>If you would like to display plain, uncolored console output, use the &lt;code&gt;line&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c33408554e3377aad0b35c352ff825577a1b5a5" translate="yes" xml:space="preserve">
          <source>If you would like to display the integer value that was passed to the &lt;code&gt;trans_choice&lt;/code&gt; function, you may use the &lt;code&gt;:count&lt;/code&gt; placeholder:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83ec58ca2de5a925c95a277c866fe5c03a213510" translate="yes" xml:space="preserve">
          <source>If you would like to generate a &lt;a href=&quot;migrations&quot;&gt;database migration&lt;/a&gt; when you generate the model, you may use the &lt;code&gt;--migration&lt;/code&gt; or &lt;code&gt;-m&lt;/code&gt; option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91f47600ac9839b3f7ccc87d8edb13577bed604a" translate="yes" xml:space="preserve">
          <source>If you would like to generate a &lt;code&gt;Symfony\Component\HttpFoundation\Cookie&lt;/code&gt; instance that can be given to a response instance at a later time, you may use the global &lt;code&gt;cookie&lt;/code&gt; helper. This cookie will not be sent back to the client unless it is attached to a response instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="701c468efc63995f491df054f0730a846390cfc0" translate="yes" xml:space="preserve">
          <source>If you would like to generate a temporary signed route URL that expires, you may use the &lt;code&gt;temporarySignedRoute&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f73edc096cb98b174efdba219dce25c2c8233887" translate="yes" xml:space="preserve">
          <source>If you would like to get the raw results before they are converted to Eloquent models, you should use the &lt;code&gt;raw&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a171b35a65fe07fed7d6e1adbb43177bf9c9a225" translate="yes" xml:space="preserve">
          <source>If you would like to include related resources in your response, you may add them to the array returned by your &lt;code&gt;toArray&lt;/code&gt; method. In this example, we will use the &lt;code&gt;Post&lt;/code&gt; resource's &lt;code&gt;collection&lt;/code&gt; method to add the user's blog posts to the resource response:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c96f0fd22db1c54e8e40af577da91987c091c5d" translate="yes" xml:space="preserve">
          <source>If you would like to include relationships only when they have already been loaded, check out the documentation on &lt;a href=&quot;#conditional-relationships&quot;&gt;conditional relationships&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c92aea399952d3ec7a2f3382357162cd33fa0f" translate="yes" xml:space="preserve">
          <source>If you would like to limit the size of the returned slice, pass the desired size as the second argument to the method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b552473eae1b7d6365a237465ead6c558f766ce" translate="yes" xml:space="preserve">
          <source>If you would like to listen for events on a private channel, use the &lt;code&gt;private&lt;/code&gt; method instead. You may continue to chain calls to the &lt;code&gt;listen&lt;/code&gt; method to listen for multiple events on a single channel:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac55512a715e92d8ceed634b4f01b4491665fe59" translate="yes" xml:space="preserve">
          <source>If you would like to make a &quot;one off&quot; charge against a subscribed customer's credit card, you may use the &lt;code&gt;charge&lt;/code&gt; method on a billable model instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f900cdf90c3fdef0814f7e08d4206db4d540d65" translate="yes" xml:space="preserve">
          <source>If you would like to make all attributes mass assignable, you may define the &lt;code&gt;$guarded&lt;/code&gt; property as an empty array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f6a66802fc01a8eb40fe33897558e6d2c3ddc7e" translate="yes" xml:space="preserve">
          <source>If you would like to make some typically hidden attributes visible on a given model instance, you may use the &lt;code&gt;makeVisible&lt;/code&gt; method. The &lt;code&gt;makeVisible&lt;/code&gt; method returns the model instance for convenient method chaining:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="055c0b0309f2007121809e6f22497fa40f115471" translate="yes" xml:space="preserve">
          <source>If you would like to make your views available for publishing to the application's &lt;code&gt;resources/views/vendor&lt;/code&gt; directory, you may use the service provider's &lt;code&gt;publishes&lt;/code&gt; method. The &lt;code&gt;publishes&lt;/code&gt; method accepts an array of package view paths and their desired publish locations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b1a54deda4604275d64131ab0dc216857049660" translate="yes" xml:space="preserve">
          <source>If you would like to manually define the tags for one of your queueable objects, you may define a &lt;code&gt;tags&lt;/code&gt; method on the class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd1029f8c62030696d48671f6c760da567d39d70" translate="yes" xml:space="preserve">
          <source>If you would like to offer trial periods to your customers while still collecting payment method information up front, you should use the &lt;code&gt;trialDays&lt;/code&gt; method when creating your subscriptions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a05196ed88f3247cda0b27c2ec33c836cbd54c66" translate="yes" xml:space="preserve">
          <source>If you would like to offer trial periods without collecting the user's payment method information up front, you may set the &lt;code&gt;trial_ends_at&lt;/code&gt; column on the user record to your desired trial ending date. This is typically done during user registration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ffa7368b8ff83860d161ded3a60f3f17acb37e2" translate="yes" xml:space="preserve">
          <source>If you would like to override some of the default values of your models, you may pass an array of values to the &lt;code&gt;make&lt;/code&gt; method. Only the specified values will be replaced while the rest of the values remain set to their default values as specified by the factory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbefb7f6f59c2c7a16eed517cb80fcfdaed4c6f6" translate="yes" xml:space="preserve">
          <source>If you would like to perform a &quot;left join&quot; instead of an &quot;inner join&quot;, use the &lt;code&gt;leftJoin&lt;/code&gt; method. The &lt;code&gt;leftJoin&lt;/code&gt; method has the same signature as the &lt;code&gt;join&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4b1fde44e53e873e5bea13a06794d6aab411c71" translate="yes" xml:space="preserve">
          <source>If you would like to pre-define the host for files stored on a disk using the &lt;code&gt;local&lt;/code&gt; driver, you may add a &lt;code&gt;url&lt;/code&gt; option to the disk's configuration array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3d1abfc82261f0fceab61726034ef4dd4828bda" translate="yes" xml:space="preserve">
          <source>If you would like to prepend content onto the beginning of a stack, you should use the &lt;code&gt;@prepend&lt;/code&gt; directive:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da21cadfa8625612c7681e8b967239b6067250aa" translate="yes" xml:space="preserve">
          <source>If you would like to provide &quot;remember me&quot; functionality in your application, you may pass a boolean value as the second argument to the &lt;code&gt;attempt&lt;/code&gt; method, which will keep the user authenticated indefinitely, or until they manually logout. Of course, your &lt;code&gt;users&lt;/code&gt; table must include the string &lt;code&gt;remember_token&lt;/code&gt; column, which will be used to store the &quot;remember me&quot; token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d91be89888717c06be7f404927f7718f946db9f3" translate="yes" xml:space="preserve">
          <source>If you would like to publish your package's translations to the application's &lt;code&gt;resources/lang/vendor&lt;/code&gt; directory, you may use the service provider's &lt;code&gt;publishes&lt;/code&gt; method. The &lt;code&gt;publishes&lt;/code&gt; method accepts an array of package paths and their desired publish locations. For example, to publish the translation files for the &lt;code&gt;courier&lt;/code&gt; package, you may do the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cea8fae799115aa48665a53652c8336ac933e318" translate="yes" xml:space="preserve">
          <source>If you would like to receive each SQL query executed by your application, you may use the &lt;code&gt;listen&lt;/code&gt; method. This method is useful for logging queries or debugging. You may register your query listener in a &lt;a href=&quot;providers&quot;&gt;service provider&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="733ab538b1ff98831f8cbaa7c832b6a68fd5f41a" translate="yes" xml:space="preserve">
          <source>If you would like to register an event that will be called when a job fails, you may use the &lt;code&gt;Queue::failing&lt;/code&gt; method. This event is a great opportunity to notify your team via email or &lt;a href=&quot;https://www.stride.com&quot;&gt;Stride&lt;/a&gt;. For example, we may attach a callback to this event from the &lt;code&gt;AppServiceProvider&lt;/code&gt; that is included with Laravel:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95356c895a10eae745423ccfeb5043886fca2b9d" translate="yes" xml:space="preserve">
          <source>If you would like to remove a global scope for a given query, you may use the &lt;code&gt;withoutGlobalScope&lt;/code&gt; method. The method accepts the class name of the global scope as its only argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d4033d9e1e954c0c7cece20f97bac2195e852c1" translate="yes" xml:space="preserve">
          <source>If you would like to remove several or even all of the global scopes, you may use the &lt;code&gt;withoutGlobalScopes&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73fb0f01fad59b86138c835e8622cefc6fe64080" translate="yes" xml:space="preserve">
          <source>If you would like to remove the frontend scaffolding from your application, you may use the &lt;code&gt;preset&lt;/code&gt; Artisan command. This command, when combined with the &lt;code&gt;none&lt;/code&gt; option, will remove the Bootstrap and Vue scaffolding from your application, leaving only a blank SASS file and a few common JavaScript utility libraries:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb91002cd4e4e60df3ece9c4ed7ba31bdede6416" translate="yes" xml:space="preserve">
          <source>If you would like to retrieve a Collection containing the values of a single column, you may use the &lt;code&gt;pluck&lt;/code&gt; method. In this example, we'll retrieve a Collection of role titles:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68e5ea6b7fb0ff4f82f206d91dbdd00e18b4d2d5" translate="yes" xml:space="preserve">
          <source>If you would like to retrieve all the data in the session, you may use the &lt;code&gt;all&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42ef92b2a7718cff60802c6853330757f55b6a78" translate="yes" xml:space="preserve">
          <source>If you would like to send some notifications from a phone number that is different from the phone number specified in your &lt;code&gt;config/services.php&lt;/code&gt; file, you may use the &lt;code&gt;from&lt;/code&gt; method on a &lt;code&gt;NexmoMessage&lt;/code&gt; instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8be9cc49709e5b354184fc4ea75eaabfb920bca5" translate="yes" xml:space="preserve">
          <source>If you would like to specify a custom output path for the generated migration, you may use the &lt;code&gt;--path&lt;/code&gt; option when executing the &lt;code&gt;make:migration&lt;/code&gt; command. The given path should be relative to your application's base path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33133e40da438e037302c7c044a80dcfea584354" translate="yes" xml:space="preserve">
          <source>If you would like to specify additional customer details, you may do so by passing them as the second argument to the &lt;code&gt;create&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70878f137f8743310a6d1d72390873480da7908c" translate="yes" xml:space="preserve">
          <source>If you would like to specify the default connection and queue that should be used for the chained jobs, you may use the &lt;code&gt;allOnConnection&lt;/code&gt; and &lt;code&gt;allOnQueue&lt;/code&gt; methods. These methods specify the queue connection and queue name that should be used unless the queued job is explicitly assigned a different connection / queue:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73eedcd290290a41ef0783811a7f829a64e118cd" translate="yes" xml:space="preserve">
          <source>If you would like to stop iterating through the items, you may return &lt;code&gt;false&lt;/code&gt; from your callback:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14c04116fbfcf959505a557dac843892e2031146" translate="yes" xml:space="preserve">
          <source>If you would like to swap plans and cancel any trial period the user is currently on, you may use the &lt;code&gt;skipTrial&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61896fd24a149de7683ab62195f08e6f444d523a" translate="yes" xml:space="preserve">
          <source>If you would like to use a &quot;where&quot; style clause on your joins, you may use the &lt;code&gt;where&lt;/code&gt; and &lt;code&gt;orWhere&lt;/code&gt; methods on a join. Instead of comparing two columns, these methods will compare the column against a value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76f205a5af6eeec5522fa9bab583b500d0897a78" translate="yes" xml:space="preserve">
          <source>If you would like to use other delivery channels such as Telegram or Pusher, check out the community driven &lt;a href=&quot;http://laravel-notification-channels.com&quot;&gt;Laravel Notification Channels website&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42a2d3c7e842845d5261db1323ee659b0f68b5e0" translate="yes" xml:space="preserve">
          <source>If you would like to verify that the given array is an &lt;strong&gt;exact&lt;/strong&gt; match for the JSON returned by the application, you should use the &lt;code&gt;assertExactJson&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce6f95cae3dad1254694f4367a45a6ae77103f22" translate="yes" xml:space="preserve">
          <source>If you would not like a file name to be automatically assigned to your stored file, you may use the &lt;code&gt;storeAs&lt;/code&gt; method, which receives the path, the file name, and the (optional) disk as its arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5bd380ac70ee43ed5a8ac2c2fed4292f3ab4425" translate="yes" xml:space="preserve">
          <source>If you're only performing &quot;one-off&quot; charges and do not offer subscriptions, you should not use Cashier. Instead, use the Stripe and Braintree SDKs directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7007e623ebde7b08310ad0f30ec23ff7fac3eec" translate="yes" xml:space="preserve">
          <source>If you're wondering where to put your custom cache driver code, you could create an &lt;code&gt;Extensions&lt;/code&gt; namespace within your &lt;code&gt;app&lt;/code&gt; directory. However, keep in mind that Laravel does not have a rigid application structure and you are free to organize your application according to your preferences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf9b475cecebccc3a82d2ebbaeec48d7554f91e5" translate="yes" xml:space="preserve">
          <source>If you've ever been confused and overwhelmed about getting started with Webpack and asset compilation, you will love Laravel Mix. However, you are not required to use it while developing your application. Of course, you are free to use any asset pipeline tool you wish, or even none at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e92b242a0d3efb0d1b90c5c8efcde6e10127099" translate="yes" xml:space="preserve">
          <source>If your Blade components are stored in a sub-directory, you may wish to alias them for easier access. For example, imagine a Blade component that is stored at &lt;code&gt;resources/views/components/alert.blade.php&lt;/code&gt;. You may use the &lt;code&gt;component&lt;/code&gt; method to alias the component from &lt;code&gt;components.alert&lt;/code&gt; to &lt;code&gt;alert&lt;/code&gt;. Typically, this should be done in the &lt;code&gt;boot&lt;/code&gt; method of your &lt;code&gt;AppServiceProvider&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec40e40731ce3b113ae87ee049be55134b2cd1d3" translate="yes" xml:space="preserve">
          <source>If your HTTP request contains &quot;nested&quot; parameters, you may specify them in your validation rules using &quot;dot&quot; syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00d561b13e92ab245c3def504b57962fb01ee9bc" translate="yes" xml:space="preserve">
          <source>If your Redis queue connection uses a Redis Cluster, your queue names must contain a &lt;a href=&quot;https://redis.io/topics/cluster-spec#keys-hash-tags&quot;&gt;key hash tag&lt;/a&gt;. This is required in order to ensure all of the Redis keys for a given queue are placed into the same hash slot:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cbdd7fd4442a858ab0c70c6399b606537d7d707" translate="yes" xml:space="preserve">
          <source>If your SMS message will contain unicode characters, you should call the &lt;code&gt;unicode&lt;/code&gt; method when constructing the &lt;code&gt;NexmoMessage&lt;/code&gt; instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cadac7dce1753ef7bd49ed1bb3cbaf11cbbb0f0c" translate="yes" xml:space="preserve">
          <source>If your application interacts with Redis, you may throttle your queued jobs by time or concurrency. This feature can be of assistance when your queued jobs are interacting with APIs that are also rate limited. For example, using the &lt;code&gt;throttle&lt;/code&gt; method, you may throttle a given type of job to only run 10 times every 60 seconds. If a lock can not be obtained, you should typically release the job back onto the queue so it can be retried later:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15bf850328e4d5931d45684e34f9eb6183c4e9a3" translate="yes" xml:space="preserve">
          <source>If your application is consuming many different channels, your &lt;code&gt;routes/channels.php&lt;/code&gt; file could become bulky. So, instead of using Closures to authorize channels, you may use channel classes. To generate a channel class, use the &lt;code&gt;make:channel&lt;/code&gt; Artisan command. This command will place a new channel class in the &lt;code&gt;App/Broadcasting&lt;/code&gt; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a82c5e1f660fa863ed0339a803ab847f5a20be46" translate="yes" xml:space="preserve">
          <source>If your application is exclusively using controller based routes, you should take advantage of Laravel's route cache. Using the route cache will drastically decrease the amount of time it takes to register all of your application's routes. In some cases, your route registration may even be up to 100x faster. To generate a route cache, just execute the &lt;code&gt;route:cache&lt;/code&gt; Artisan command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9065c902a2c1693f173a825eaef9b7e7cf6d0a4" translate="yes" xml:space="preserve">
          <source>If your application is running on multiple servers, you may limit a scheduled job to only execute on a single server. For instance, assume you have a scheduled task that generates a new report every Friday night. If the task scheduler is running on three worker servers, the scheduled task will run on all three servers and generate the report three times. Not good!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25d07475ad10d99b0add773c5af1b8c2480d5284" translate="yes" xml:space="preserve">
          <source>If your application is utilizing a cluster of Redis servers, you should define these clusters within a &lt;code&gt;clusters&lt;/code&gt; key of your Redis configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="773773365823de5d350e6e26657b5221ad2a1963" translate="yes" xml:space="preserve">
          <source>If your application issues short-lived access tokens, users will need to refresh their access tokens via the refresh token that was provided to them when the access token was issued. In this example, we'll use the Guzzle HTTP library to refresh the token:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df035e4a709a3570626f56d8a0ff1f62e6235841" translate="yes" xml:space="preserve">
          <source>If your applications interacts with multiple disks, you may use the &lt;code&gt;disk&lt;/code&gt; method on the &lt;code&gt;Storage&lt;/code&gt; facade to work with files on a particular disk:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7841b9cf874596ee7af1703c3f7a888cc27f839e" translate="yes" xml:space="preserve">
          <source>If your command defines an option that accepts an array, you may pass an array of values to that option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="672ff7eeaa885f30ba5786b245b1872d4a077220" translate="yes" xml:space="preserve">
          <source>If your controller method is also expecting input from a route parameter you should list your route parameters after your other dependencies. For example, if your route is defined like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7187000e1a07f4c5e5934110269c9787f7415ef2" translate="yes" xml:space="preserve">
          <source>If your controller method is also expecting input from a route parameter, list your route arguments after your other dependencies. For example, if your route is defined like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56bc50c52f21ede7f0d0af18a3f572f92887e46f" translate="yes" xml:space="preserve">
          <source>If your controller route requires parameters, you may pass them as the second argument to the &lt;code&gt;action&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="509d5a88b7719f65c22e4c5a4ec36e722088ff9b" translate="yes" xml:space="preserve">
          <source>If your global scope is adding columns to the select clause of the query, you should use the &lt;code&gt;addSelect&lt;/code&gt; method instead of &lt;code&gt;select&lt;/code&gt;. This will prevent the unintentional replacement of the query's existing select clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97e844343150257b6c7dd17559c189eb93cfe6e8" translate="yes" xml:space="preserve">
          <source>If your indexed models are &lt;a href=&quot;eloquent#soft-deleting&quot;&gt;soft deleting&lt;/a&gt; and you need to search your soft deleted models, set the &lt;code&gt;soft_delete&lt;/code&gt; option of the &lt;code&gt;config/scout.php&lt;/code&gt; configuration file to &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de8cd282af45d1ee9e0bdc4c1f338e168ca06953" translate="yes" xml:space="preserve">
          <source>If your intermediate table is using an accessor other than &lt;code&gt;pivot&lt;/code&gt;, you may use the &lt;code&gt;whenPivotLoadedAs&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1215a930077070494785226472c33f0f2efe0bd1" translate="yes" xml:space="preserve">
          <source>If your package contains &lt;a href=&quot;localization&quot;&gt;translation files&lt;/a&gt;, you may use the &lt;code&gt;loadTranslationsFrom&lt;/code&gt; method to inform Laravel how to load them. For example, if your package is named &lt;code&gt;courier&lt;/code&gt;, you should add the following to your service provider's &lt;code&gt;boot&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="693fb8840dc047e22e20518fdc246dcba208bc31" translate="yes" xml:space="preserve">
          <source>If your package contains &lt;a href=&quot;migrations&quot;&gt;database migrations&lt;/a&gt;, you may use the &lt;code&gt;loadMigrationsFrom&lt;/code&gt; method to inform Laravel how to load them. The &lt;code&gt;loadMigrationsFrom&lt;/code&gt; method accepts the path to your package's migrations as its only argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f53b39a297d9cd92b98c777ade6f93edddeaba1f" translate="yes" xml:space="preserve">
          <source>If your package contains routes, you may load them using the &lt;code&gt;loadRoutesFrom&lt;/code&gt; method. This method will automatically determine if the application's routes are cached and will not load your routes file if the routes have already been cached:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc5ff9403af5b82dfef660d7ac31d3bc5c4cb21d" translate="yes" xml:space="preserve">
          <source>If your parent model does not use &lt;code&gt;id&lt;/code&gt; as its primary key, or you wish to join the child model to a different column, you may pass a third argument to the &lt;code&gt;belongsTo&lt;/code&gt; method specifying your parent table's custom key:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee15a9d8030c393d9bb9c4c1e62833077c19a19f" translate="yes" xml:space="preserve">
          <source>If your place-holder contains all capital letters, or only has its first letter capitalized, the translated value will be capitalized accordingly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6c9ddc8a51475794f76a1a2be92e75f1faeb6d5" translate="yes" xml:space="preserve">
          <source>If your provider is &lt;strong&gt;only&lt;/strong&gt; registering bindings in the &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;, you may choose to defer its registration until one of the registered bindings is actually needed. Deferring the loading of such a provider will improve the performance of your application, since it is not loaded from the filesystem on every request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0188e879e9e5b87ebb5a1a2704a1770337b6ca22" translate="yes" xml:space="preserve">
          <source>If your route has parameters, you may pass them as the second argument to the &lt;code&gt;route&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50e213b65e92c789a023e34bd2266e5cee31464a" translate="yes" xml:space="preserve">
          <source>If your route only needs to return a view, you may use the &lt;code&gt;Route::view&lt;/code&gt; method. Like the &lt;code&gt;redirect&lt;/code&gt; method, this method provides a simple shortcut so that you do not have to define a full route or controller. The &lt;code&gt;view&lt;/code&gt; method accepts a URI as its first argument and a view name as its second argument. In addition, you may provide an array of data to pass to the view as an optional third argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36c1097f632bfca74931efaed229cb5db4d73255" translate="yes" xml:space="preserve">
          <source>If your service provider registers many simple bindings, you may wish to use the &lt;code&gt;bindings&lt;/code&gt; and &lt;code&gt;singletons&lt;/code&gt; properties instead of manually registering each container binding. When the service provider is loaded by the framework, it will automatically check for these properties and register their bindings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93164b21dcdceaa0edfe6e756e930f30d21e4d67" translate="yes" xml:space="preserve">
          <source>If your sorting needs are more advanced, you may pass a callback to &lt;code&gt;sort&lt;/code&gt; with your own algorithm. Refer to the PHP documentation on &lt;a href=&quot;https://secure.php.net/manual/en/function.uasort.php#refsect1-function.uasort-parameters&quot;&gt;&lt;code&gt;uasort&lt;/code&gt;&lt;/a&gt;, which is what the collection's &lt;code&gt;sort&lt;/code&gt; method calls under the hood.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50c30aed909b06c81dd764b834fdedfbdbd29eb7" translate="yes" xml:space="preserve">
          <source>If your state requires calculation or a &lt;code&gt;$faker&lt;/code&gt; instance, you may use a Closure to calculate the state's attribute modifications:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d988c7b13278fb3e6131626ddb382cb2d488eb5" translate="yes" xml:space="preserve">
          <source>If your table uses a primary key column name other than &lt;code&gt;id&lt;/code&gt;, you may specify the name of the column when calling the &lt;code&gt;ignore&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c33ad426579ec627b1068a3d127b36d508107da" translate="yes" xml:space="preserve">
          <source>Ignore the given ID during the unique check.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2270aa724d1a24b4e9cb072395c4451e243eace" translate="yes" xml:space="preserve">
          <source>Ignore the given model during the unique check.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baede0a07359c08ef65e41f59bf008d0883fdad6" translate="yes" xml:space="preserve">
          <source>Ignoring Exceptions By Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1526e6b93ddb847b6a3b836ee1dab53cfd48ef3c" translate="yes" xml:space="preserve">
          <source>Illuminate</source>
          <target state="translated">Illuminate</target>
        </trans-unit>
        <trans-unit id="4001a946e3d3aa242c595ea91cf8bf394eda5ded" translate="yes" xml:space="preserve">
          <source>Illuminate\Auth</source>
          <target state="translated">Illuminate\Auth</target>
        </trans-unit>
        <trans-unit id="949ad416e1cd98a26c7106c4c3cae5ac35601f1f" translate="yes" xml:space="preserve">
          <source>Illuminate\Auth\Access</source>
          <target state="translated">Illuminate\Auth\Access</target>
        </trans-unit>
        <trans-unit id="62272ccfde10eba7890eb80d8b80714aecf85a01" translate="yes" xml:space="preserve">
          <source>Illuminate\Auth\AuthManager</source>
          <target state="translated">Illuminate\Auth\AuthManager</target>
        </trans-unit>
        <trans-unit id="17e2696f1deb2dcd1dbca4c87f635600162dd933" translate="yes" xml:space="preserve">
          <source>Illuminate\Auth\Console</source>
          <target state="translated">Illuminate\Auth\Console</target>
        </trans-unit>
        <trans-unit id="dce50c570d0c8880099bf81c1c7747f8efa0c44c" translate="yes" xml:space="preserve">
          <source>Illuminate\Auth\Events</source>
          <target state="translated">Illuminate\Auth\Events</target>
        </trans-unit>
        <trans-unit id="fab89d4f4a4cf433eb56a2141d475a1acf17f709" translate="yes" xml:space="preserve">
          <source>Illuminate\Auth\Listeners</source>
          <target state="translated">Illuminate\Auth\Listeners</target>
        </trans-unit>
        <trans-unit id="895da0bfe2192066b0d33e3b0fe8cbf93d4887b8" translate="yes" xml:space="preserve">
          <source>Illuminate\Auth\Middleware</source>
          <target state="translated">Illuminate\Auth\Middleware</target>
        </trans-unit>
        <trans-unit id="72a5e80db8962cde814569399e2f2dcc4eb9db4c" translate="yes" xml:space="preserve">
          <source>Illuminate\Auth\Notifications</source>
          <target state="translated">Illuminate\Auth\Notifications</target>
        </trans-unit>
        <trans-unit id="34950cb30cf3352f617558a9ad54fd5aeeb509cb" translate="yes" xml:space="preserve">
          <source>Illuminate\Auth\Passwords</source>
          <target state="translated">Illuminate\Auth\Passwords</target>
        </trans-unit>
        <trans-unit id="e0ad7be146a4f90d6d6f5c2b52810d034d113e56" translate="yes" xml:space="preserve">
          <source>Illuminate\Auth\Passwords\PasswordBroker</source>
          <target state="translated">Illuminate\Auth\Passwords\PasswordBroker</target>
        </trans-unit>
        <trans-unit id="42546fcbd66531bc05db683fd1cf232830162646" translate="yes" xml:space="preserve">
          <source>Illuminate\Auth\Passwords\PasswordBrokerManager</source>
          <target state="translated">Illuminate\Auth\Passwords\PasswordBrokerManager</target>
        </trans-unit>
        <trans-unit id="34325fd0e0b569c7ec32392c71468c5e62a727ae" translate="yes" xml:space="preserve">
          <source>Illuminate\Broadcasting</source>
          <target state="translated">Illuminate\Broadcasting</target>
        </trans-unit>
        <trans-unit id="64cfad805c1c17b18fc1359bbdabdb84f5df9abf" translate="yes" xml:space="preserve">
          <source>Illuminate\Broadcasting\Broadcasters</source>
          <target state="translated">Illuminate\Broadcasting\Broadcasters</target>
        </trans-unit>
        <trans-unit id="7971c695a665fa25aa8f01c25dfb9b6159e4efb0" translate="yes" xml:space="preserve">
          <source>Illuminate\Bus</source>
          <target state="translated">Illuminate\Bus</target>
        </trans-unit>
        <trans-unit id="382cdde5fc7e5fb335c8ba064e4464087527e832" translate="yes" xml:space="preserve">
          <source>Illuminate\Cache</source>
          <target state="translated">Illuminate\Cache</target>
        </trans-unit>
        <trans-unit id="6634d3084fc51633b540ec0b5e0619ae07b47c5f" translate="yes" xml:space="preserve">
          <source>Illuminate\Cache\CacheManager</source>
          <target state="translated">Illuminate\Cache\CacheManager</target>
        </trans-unit>
        <trans-unit id="15ab423709a7d55946cf50b4bff8e344090d6af6" translate="yes" xml:space="preserve">
          <source>Illuminate\Cache\Console</source>
          <target state="translated">Illuminate\Cache\Console</target>
        </trans-unit>
        <trans-unit id="d9742bc8564aacde7ea1bd06cd72f63b183c0ed3" translate="yes" xml:space="preserve">
          <source>Illuminate\Cache\Events</source>
          <target state="translated">Illuminate\Cache\Events</target>
        </trans-unit>
        <trans-unit id="1f00dc56f9c20e5d3aba93b69f2a281965f39a77" translate="yes" xml:space="preserve">
          <source>Illuminate\Cache\Repository</source>
          <target state="translated">Illuminate\Cache\Repository</target>
        </trans-unit>
        <trans-unit id="8d49256a5450e88e87400073d6d9c261e5db9375" translate="yes" xml:space="preserve">
          <source>Illuminate\Config</source>
          <target state="translated">Illuminate\Config</target>
        </trans-unit>
        <trans-unit id="dbb4f77763d907c46c7c516634276c1814118c7b" translate="yes" xml:space="preserve">
          <source>Illuminate\Config\Repository</source>
          <target state="translated">Illuminate\Config\Repository</target>
        </trans-unit>
        <trans-unit id="6e006ed4d09a8f46309f542cff2097f77b932fe5" translate="yes" xml:space="preserve">
          <source>Illuminate\Console</source>
          <target state="translated">Illuminate\Console</target>
        </trans-unit>
        <trans-unit id="47290132b3ae6821b6693267d22a6cfdb22ce1a6" translate="yes" xml:space="preserve">
          <source>Illuminate\Console\Events</source>
          <target state="translated">Illuminate\Console\Events</target>
        </trans-unit>
        <trans-unit id="4b21f9a17d69d990abebd07f61b0bca9e249bcea" translate="yes" xml:space="preserve">
          <source>Illuminate\Console\Scheduling</source>
          <target state="translated">Illuminate\Console\Scheduling</target>
        </trans-unit>
        <trans-unit id="d92f32c809bacf1b7a540b20727b1d7199b02d64" translate="yes" xml:space="preserve">
          <source>Illuminate\Container</source>
          <target state="translated">Illuminate\Container</target>
        </trans-unit>
        <trans-unit id="1415f5c5dc4e8e992b21d1371a3b23fd9ea8b1e3" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts</source>
          <target state="translated">Illuminate\Contracts</target>
        </trans-unit>
        <trans-unit id="283be4fb754f9a2ede4f0ade7023d9bc9bdd84ba" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Auth</source>
          <target state="translated">Illuminate\Contracts\Auth</target>
        </trans-unit>
        <trans-unit id="38b9a8512fef8870a64603009b66c1d31eef30d5" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Auth\Access</source>
          <target state="translated">Illuminate\Contracts\Auth\Access</target>
        </trans-unit>
        <trans-unit id="ea8391be530bc3776ba8d2d5313ca8d6e97359f0" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Auth\Access\Authorizable</source>
          <target state="translated">Illuminate\Contracts\Auth\Access\Authorizable</target>
        </trans-unit>
        <trans-unit id="a5f2e6234d7b47e553a361e526bb4ae2e5e4757f" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Auth\Access\Gate</source>
          <target state="translated">Illuminate\Contracts\Auth\Access\Gate</target>
        </trans-unit>
        <trans-unit id="d127689170fc96c9b7ac41733c037e9ccdc66c0b" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Auth\Authenticatable</source>
          <target state="translated">Illuminate\Contracts\Auth\Authenticatable</target>
        </trans-unit>
        <trans-unit id="6ade1aa798dcc3cb6a4cbd33742a3cd47f9c27a8" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Auth\CanResetPassword</source>
          <target state="translated">Illuminate\Contracts\Auth\CanResetPassword</target>
        </trans-unit>
        <trans-unit id="2ba8e0e33874fba9b53896bc758168661d5656b4" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Auth\Factory</source>
          <target state="translated">Illuminate\Contracts\Auth\Factory</target>
        </trans-unit>
        <trans-unit id="108159b660d144d7171a18ac50ad11a1a35848b1" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Auth\Guard</source>
          <target state="translated">Illuminate\Contracts\Auth\Guard</target>
        </trans-unit>
        <trans-unit id="c202dddd236e8b5bbe62f1fa097fbef35e04665b" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Auth\PasswordBroker</source>
          <target state="translated">Illuminate\Contracts\Auth\PasswordBroker</target>
        </trans-unit>
        <trans-unit id="a3f46a1ecf13af12a21ea56368e49fd1826f481c" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Auth\PasswordBrokerFactory</source>
          <target state="translated">Illuminate\Contracts\Auth\PasswordBrokerFactory</target>
        </trans-unit>
        <trans-unit id="0956d2a03fbb102f509080311d19ea36550a6b8b" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Auth\StatefulGuard</source>
          <target state="translated">Illuminate\Contracts\Auth\StatefulGuard</target>
        </trans-unit>
        <trans-unit id="8e38b73e24f53d865153cda7874116d8819e8359" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Auth\SupportsBasicAuth</source>
          <target state="translated">Illuminate\Contracts\Auth\SupportsBasicAuth</target>
        </trans-unit>
        <trans-unit id="6dd7a8a315428a41bebd808b984051428ca20d77" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Auth\UserProvider</source>
          <target state="translated">Illuminate\Contracts\Auth\UserProvider</target>
        </trans-unit>
        <trans-unit id="0a92fa39a377f1d063af77a9af9bc1e940b6b07b" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Broadcasting</source>
          <target state="translated">Illuminate\Contracts\Broadcasting</target>
        </trans-unit>
        <trans-unit id="0d8e1808599f8afe1329a0fb42e7ee2ff55def2a" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Broadcasting\Broadcaster</source>
          <target state="translated">Illuminate\Contracts\Broadcasting\Broadcaster</target>
        </trans-unit>
        <trans-unit id="fe3b296a21f36977c723d433a9b9b3726568fd43" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Broadcasting\Factory</source>
          <target state="translated">Illuminate\Contracts\Broadcasting\Factory</target>
        </trans-unit>
        <trans-unit id="0434cd8317615cb12056424574176ff65cdfd6dd" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Broadcasting\ShouldBroadcast</source>
          <target state="translated">Illuminate\Contracts\Broadcasting\ShouldBroadcast</target>
        </trans-unit>
        <trans-unit id="3b114dd1600886028c94a488862038d16317a346" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Broadcasting\ShouldBroadcastNow</source>
          <target state="translated">Illuminate\Contracts\Broadcasting\ShouldBroadcastNow</target>
        </trans-unit>
        <trans-unit id="f9aa7c8cefa4629fb42692b4352929a2e3b4fbda" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Bus</source>
          <target state="translated">Illuminate\Contracts\Bus</target>
        </trans-unit>
        <trans-unit id="d13dd47edf56922aa0b0560a423fd620748196e0" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Bus\Dispatcher</source>
          <target state="translated">Illuminate\Contracts\Bus\Dispatcher</target>
        </trans-unit>
        <trans-unit id="178fc95829ee7b4222f61a3c0bc0c363c9051904" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Bus\QueueingDispatcher</source>
          <target state="translated">Illuminate\Contracts\Bus\QueueingDispatcher</target>
        </trans-unit>
        <trans-unit id="dd1a47bac8b4ee799f8c951d00a1b996ccfdde39" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Cache</source>
          <target state="translated">Illuminate\Contracts\Cache</target>
        </trans-unit>
        <trans-unit id="a394e1e42d9afe834c5d4e4b3c204d2a8d01dcac" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Cache\Factory</source>
          <target state="translated">Illuminate\Contracts\Cache\Factory</target>
        </trans-unit>
        <trans-unit id="b4f18aed833b749b5d809ce749e994017451e48f" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Cache\Lock</source>
          <target state="translated">Illuminate\Contracts\Cache\Lock</target>
        </trans-unit>
        <trans-unit id="0c46c8c41674169474f9fd341f0228ccaf6e3d61" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Cache\LockProvider</source>
          <target state="translated">Illuminate\Contracts\Cache\LockProvider</target>
        </trans-unit>
        <trans-unit id="2b184d6e2fea8c7f5e2b972774dc5b7090feb2cd" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Cache\Repository</source>
          <target state="translated">Illuminate\Contracts\Cache\Repository</target>
        </trans-unit>
        <trans-unit id="0571c081cdb1909163b5a3791f16554bd113019a" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Cache\Store</source>
          <target state="translated">Illuminate\Contracts\Cache\Store</target>
        </trans-unit>
        <trans-unit id="7777bbb09850c10e44ac242c4d0d347515ee21be" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Config</source>
          <target state="translated">Illuminate\Contracts\Config</target>
        </trans-unit>
        <trans-unit id="a7f497bb74745ca3d65c49765e329abdbd9de1c4" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Config\Repository</source>
          <target state="translated">Illuminate\Contracts\Config\Repository</target>
        </trans-unit>
        <trans-unit id="02d3d74d73b99e673231b2de938c73c4be2c14aa" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Console</source>
          <target state="translated">Illuminate\Contracts\Console</target>
        </trans-unit>
        <trans-unit id="bd1b1c399fc4a18c0801c782a5595e8c1810f690" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Console\Application</source>
          <target state="translated">Illuminate\Contracts\Console\Application</target>
        </trans-unit>
        <trans-unit id="819d3f0dcb09c344f0d6fbe93de2459de417ada3" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Console\Kernel</source>
          <target state="translated">Illuminate\Contracts\Console\Kernel</target>
        </trans-unit>
        <trans-unit id="97ef18ff80fb716fbdb4c683bcbb2b31dbed3943" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Container</source>
          <target state="translated">Illuminate\Contracts\Container</target>
        </trans-unit>
        <trans-unit id="655a700555411ab4d992614f7a1c88ff5318be85" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Container\Container</source>
          <target state="translated">Illuminate\Contracts\Container\Container</target>
        </trans-unit>
        <trans-unit id="28a2055b5c922a6d160cbdae84e19faa820ec8a3" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Cookie</source>
          <target state="translated">Illuminate\Contracts\Cookie</target>
        </trans-unit>
        <trans-unit id="a4a9b69c83b82c1c31ffcc0d026a6a9844a37989" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Cookie\Factory</source>
          <target state="translated">Illuminate\Contracts\Cookie\Factory</target>
        </trans-unit>
        <trans-unit id="9fdfb61d85f1fa24005d28a41ccffc6fdab180f9" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Cookie\QueueingFactory</source>
          <target state="translated">Illuminate\Contracts\Cookie\QueueingFactory</target>
        </trans-unit>
        <trans-unit id="2e53f40b16b324fdb527a36345b21eff218f6de6" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Database</source>
          <target state="translated">Illuminate\Contracts\Database</target>
        </trans-unit>
        <trans-unit id="503f07c79e318a58a7763151d0ab5b2f8f1617e3" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Database\ModelIdentifier</source>
          <target state="translated">Illuminate\Contracts\Database\ModelIdentifier</target>
        </trans-unit>
        <trans-unit id="7003705ecb015e80ec990400028014a9e6fe7bd1" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Debug</source>
          <target state="translated">Illuminate\Contracts\Debug</target>
        </trans-unit>
        <trans-unit id="5fa105b8287cc6010b5cecb05c4b6fc56707ee26" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Debug\ExceptionHandler</source>
          <target state="translated">Illuminate\Contracts\Debug\ExceptionHandler</target>
        </trans-unit>
        <trans-unit id="762b1e35d1413539ce2c6f9b3dd69da1f3cfe21e" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Encryption</source>
          <target state="translated">Illuminate\Contracts\Encryption</target>
        </trans-unit>
        <trans-unit id="49d97678a172403e7b6a518fab4d8a02aecf3448" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Encryption\Encrypter</source>
          <target state="translated">Illuminate\Contracts\Encryption\Encrypter</target>
        </trans-unit>
        <trans-unit id="e4a1d0e8a46552d2bcf1f41b6f72e1b2ecb1f62e" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Events</source>
          <target state="translated">Illuminate\Contracts\Events</target>
        </trans-unit>
        <trans-unit id="38ecd2e56b791f72f4cf8e9903b244205d7817df" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Events\Dispatcher</source>
          <target state="translated">Illuminate\Contracts\Events\Dispatcher</target>
        </trans-unit>
        <trans-unit id="b8f424bf60b25406caeb119dac30135fbdb60718" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Filesystem</source>
          <target state="translated">Illuminate\Contracts\Filesystem</target>
        </trans-unit>
        <trans-unit id="b7ebfe8998a4a24896a0890e7fb13a94cc825bd4" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Filesystem\Cloud</source>
          <target state="translated">Illuminate\Contracts\Filesystem\Cloud</target>
        </trans-unit>
        <trans-unit id="e96bfe6e6638e229bc7702ca9560e23324ec7b3f" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Filesystem\Factory</source>
          <target state="translated">Illuminate\Contracts\Filesystem\Factory</target>
        </trans-unit>
        <trans-unit id="36fa7356c844a879861fe10c9a383ce7472b5fb1" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Filesystem\Filesystem</source>
          <target state="translated">Illuminate\Contracts\Filesystem\Filesystem</target>
        </trans-unit>
        <trans-unit id="ee654e7837ac1ad521f42cccae585eb1528740b2" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Foundation</source>
          <target state="translated">Illuminate\Contracts\Foundation</target>
        </trans-unit>
        <trans-unit id="f49a1076f7e79eea3e2a1e30a8b540d6127d7689" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Foundation\Application</source>
          <target state="translated">Illuminate\Contracts\Foundation\Application</target>
        </trans-unit>
        <trans-unit id="a2ba43056d28c2d660b1fd87446f5841cbbf4008" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Hashing</source>
          <target state="translated">Illuminate\Contracts\Hashing</target>
        </trans-unit>
        <trans-unit id="46f9e70cf479a65506824f2e83fb866676faa0d7" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Hashing\Hasher</source>
          <target state="translated">Illuminate\Contracts\Hashing\Hasher</target>
        </trans-unit>
        <trans-unit id="6e353f4122f131db6ceddad5b272f9db9aff00bf" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Http</source>
          <target state="translated">Illuminate\Contracts\Http</target>
        </trans-unit>
        <trans-unit id="c2eaf09bb9aafdede6f8111fee9f160321816833" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Http\Kernel</source>
          <target state="translated">Illuminate\Contracts\Http\Kernel</target>
        </trans-unit>
        <trans-unit id="b52770531bfb594ce0cd80c3c4eaae02236b9554" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Mail</source>
          <target state="translated">Illuminate\Contracts\Mail</target>
        </trans-unit>
        <trans-unit id="6f2b3bf92ddff770d8c1121448c8c7cf88a8e042" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Mail\MailQueue</source>
          <target state="translated">Illuminate\Contracts\Mail\MailQueue</target>
        </trans-unit>
        <trans-unit id="b83f3a0446d03576a9f9ca845c663b8d76c6f980" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Mail\Mailable</source>
          <target state="translated">Illuminate\Contracts\Mail\Mailable</target>
        </trans-unit>
        <trans-unit id="00ee098dc8db8576475398516c2197dc3cfdcd0a" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Mail\Mailer</source>
          <target state="translated">Illuminate\Contracts\Mail\Mailer</target>
        </trans-unit>
        <trans-unit id="96df9f9a65f4b839580778b8a916417926d3801c" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Notifications</source>
          <target state="translated">Illuminate\Contracts\Notifications</target>
        </trans-unit>
        <trans-unit id="8fa4624be6f967183c19c4b946b3f7504d46afda" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Notifications\Dispatcher</source>
          <target state="translated">Illuminate\Contracts\Notifications\Dispatcher</target>
        </trans-unit>
        <trans-unit id="0e369803c991de2261184a72d8ddc0703efcfda0" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Notifications\Factory</source>
          <target state="translated">Illuminate\Contracts\Notifications\Factory</target>
        </trans-unit>
        <trans-unit id="b2c0fd9bbfb2861a4219553a2ef292df34db9234" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Pagination</source>
          <target state="translated">Illuminate\Contracts\Pagination</target>
        </trans-unit>
        <trans-unit id="13990b783a4308ae04519f2c5ed9aaefee08f0cd" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Pagination\LengthAwarePaginator</source>
          <target state="translated">Illuminate\Contracts\Pagination\LengthAwarePaginator</target>
        </trans-unit>
        <trans-unit id="b7b52ae8b75ccff0e395aa3aa98593bba3a04407" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Pagination\Paginator</source>
          <target state="translated">Illuminate\Contracts\Pagination\Paginator</target>
        </trans-unit>
        <trans-unit id="9476860ad9829f6678a25f1522ac7e8f671199de" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Pipeline</source>
          <target state="translated">Illuminate\Contracts\Pipeline</target>
        </trans-unit>
        <trans-unit id="b1204de1be9a4e966f7d798ec0e82d09990630ba" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Pipeline\Hub</source>
          <target state="translated">Illuminate\Contracts\Pipeline\Hub</target>
        </trans-unit>
        <trans-unit id="667edea2b86102e4a4fb45e37cfb9d4aa55e7b51" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Pipeline\Pipeline</source>
          <target state="translated">Illuminate\Contracts\Pipeline\Pipeline</target>
        </trans-unit>
        <trans-unit id="155d11ee4214721ecd829b5a1f35acb287cff62b" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Queue</source>
          <target state="translated">Illuminate\Contracts\Queue</target>
        </trans-unit>
        <trans-unit id="0f8bdcae0383de9aa410f7c5ec773e1907f3effe" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Queue\EntityResolver</source>
          <target state="translated">Illuminate\Contracts\Queue\EntityResolver</target>
        </trans-unit>
        <trans-unit id="e7e1b916bfd5b6dc20bf981f0a6d84dcc717551c" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Queue\Factory</source>
          <target state="translated">Illuminate\Contracts\Queue\Factory</target>
        </trans-unit>
        <trans-unit id="4f2ebb8a02c735bc0b7bbaf38f0ce66e65ed5d90" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Queue\Job</source>
          <target state="translated">Illuminate\Contracts\Queue\Job</target>
        </trans-unit>
        <trans-unit id="56d130644dcb39374063110176c6a27f3659de78" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Queue\Monitor</source>
          <target state="translated">Illuminate\Contracts\Queue\Monitor</target>
        </trans-unit>
        <trans-unit id="2cc02eaa42308446fc1960d9808cf1d6c10b4b15" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Queue\Queue</source>
          <target state="translated">Illuminate\Contracts\Queue\Queue</target>
        </trans-unit>
        <trans-unit id="2d8c7e5d803f93d17f0bf1423b995694d697c50d" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Queue\QueueableCollection</source>
          <target state="translated">Illuminate\Contracts\Queue\QueueableCollection</target>
        </trans-unit>
        <trans-unit id="dcf1de4dce45dd52932a8d097657aa6e53f72c4e" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Queue\QueueableEntity</source>
          <target state="translated">Illuminate\Contracts\Queue\QueueableEntity</target>
        </trans-unit>
        <trans-unit id="a87cc82cfd15b4d913c7f804036dcfa8626c33bd" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Queue\ShouldQueue</source>
          <target state="translated">Illuminate\Contracts\Queue\ShouldQueue</target>
        </trans-unit>
        <trans-unit id="1ab26e5d7e9330af411ba0ccf11b6c61f9060359" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Redis</source>
          <target state="translated">Illuminate\Contracts\Redis</target>
        </trans-unit>
        <trans-unit id="4832d9546f5fea938ee9542ef0a82b8f6c358c0c" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Redis\Factory</source>
          <target state="translated">Illuminate\Contracts\Redis\Factory</target>
        </trans-unit>
        <trans-unit id="c2095ddfe9c36498ea6eea25b10b3e4bdb16956d" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Routing</source>
          <target state="translated">Illuminate\Contracts\Routing</target>
        </trans-unit>
        <trans-unit id="03cfcf1b087be5d60dbafeef33551d36e20e2e59" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Routing\BindingRegistrar</source>
          <target state="translated">Illuminate\Contracts\Routing\BindingRegistrar</target>
        </trans-unit>
        <trans-unit id="2ea3758b553ee5f5ba7eab10d5c1e15fe324988b" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Routing\Registrar</source>
          <target state="translated">Illuminate\Contracts\Routing\Registrar</target>
        </trans-unit>
        <trans-unit id="c3c65799d437c9f3479b8afd8e5c295173fb663e" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Routing\ResponseFactory</source>
          <target state="translated">Illuminate\Contracts\Routing\ResponseFactory</target>
        </trans-unit>
        <trans-unit id="def8234e4c135051aff18ee1e36c82cd245ec0bf" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Routing\UrlGenerator</source>
          <target state="translated">Illuminate\Contracts\Routing\UrlGenerator</target>
        </trans-unit>
        <trans-unit id="d17029a9b67c1bc4bdda57ca353d48946f718ccb" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Routing\UrlRoutable</source>
          <target state="translated">Illuminate\Contracts\Routing\UrlRoutable</target>
        </trans-unit>
        <trans-unit id="cb415e63e894dd5625c434a2ce72a90d2ac57a0f" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Session</source>
          <target state="translated">Illuminate\Contracts\Session</target>
        </trans-unit>
        <trans-unit id="ff31505899c91ae30cccec6445d03eb97d3863e5" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Session\Session</source>
          <target state="translated">Illuminate\Contracts\Session\Session</target>
        </trans-unit>
        <trans-unit id="643f107b6bf0276c7cb1bff3e70492155ef8fd46" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Support</source>
          <target state="translated">Illuminate\Contracts\Support</target>
        </trans-unit>
        <trans-unit id="4201bab0ce7f6c8ddb75755a68fbb7d73720cdbc" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Support\Arrayable</source>
          <target state="translated">Illuminate\Contracts\Support\Arrayable</target>
        </trans-unit>
        <trans-unit id="4983564fbf23f69741ba6fa466114e5edc752a7e" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Support\Htmlable</source>
          <target state="translated">Illuminate\Contracts\Support\Htmlable</target>
        </trans-unit>
        <trans-unit id="88cda88d51e9f874b60a0449d1f8b82014e7126f" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Support\Jsonable</source>
          <target state="translated">Illuminate\Contracts\Support\Jsonable</target>
        </trans-unit>
        <trans-unit id="b4f38521d130e71b6051db47f75ad2e7ddb69c01" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Support\MessageBag</source>
          <target state="translated">Illuminate\Contracts\Support\MessageBag</target>
        </trans-unit>
        <trans-unit id="33b4ac20af8cd13093f93352c243ac550e2c9f24" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Support\MessageProvider</source>
          <target state="translated">Illuminate\Contracts\Support\MessageProvider</target>
        </trans-unit>
        <trans-unit id="30ffe04f711cefe0dc15eac86f56ad5a99419f6f" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Support\Renderable</source>
          <target state="translated">Illuminate\Contracts\Support\Renderable</target>
        </trans-unit>
        <trans-unit id="dbde2e4e586577b95cc65bb787286d3cd776f958" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Support\Responsable</source>
          <target state="translated">Illuminate\Contracts\Support\Responsable</target>
        </trans-unit>
        <trans-unit id="c82828c5d5c89d7c92025b83ef5318f48527b562" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Translation</source>
          <target state="translated">Illuminate\Contracts\Translation</target>
        </trans-unit>
        <trans-unit id="8442a54148f6fc25116afaba0c79af4330044f52" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Translation\Loader</source>
          <target state="translated">Illuminate\Contracts\Translation\Loader</target>
        </trans-unit>
        <trans-unit id="4abf6c09b484e993be42aeae38cb591d6d4d4575" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Translation\Translator</source>
          <target state="translated">Illuminate\Contracts\Translation\Translator</target>
        </trans-unit>
        <trans-unit id="aaf0ea53b0b50f6c1d919e1efe40bcfaf54f5041" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Validation</source>
          <target state="translated">Illuminate\Contracts\Validation</target>
        </trans-unit>
        <trans-unit id="a098f5e36caed29af5b07f8717a070922650e403" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Validation\Factory</source>
          <target state="translated">Illuminate\Contracts\Validation\Factory</target>
        </trans-unit>
        <trans-unit id="0b4e34adaac533dbf5e5448924c390a51dcefcdf" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Validation\ImplicitRule</source>
          <target state="translated">Illuminate\Contracts\Validation\ImplicitRule</target>
        </trans-unit>
        <trans-unit id="d295f7f130199f8b2a093e81ff1e994716b7ee4b" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Validation\Rule</source>
          <target state="translated">Illuminate\Contracts\Validation\Rule</target>
        </trans-unit>
        <trans-unit id="092a93ddcb84be67b32b12e4db4041bd2f29648a" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Validation\ValidatesWhenResolved</source>
          <target state="translated">Illuminate\Contracts\Validation\ValidatesWhenResolved</target>
        </trans-unit>
        <trans-unit id="2e68d3cf72f9fb66b46f101aa3f60e72b41580e5" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Validation\Validator</source>
          <target state="translated">Illuminate\Contracts\Validation\Validator</target>
        </trans-unit>
        <trans-unit id="e15d30d72ee5fe9a2cbc9659b240f5fa52bac3a4" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\View</source>
          <target state="translated">Illuminate\Contracts\View</target>
        </trans-unit>
        <trans-unit id="6555e4d6826eb0489c7a0c712d30c9a3eae84851" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\View\Engine</source>
          <target state="translated">Illuminate\Contracts\View\Engine</target>
        </trans-unit>
        <trans-unit id="e659e4b92de46ce67c8b69bf8331e86a54a611d0" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\View\Factory</source>
          <target state="translated">Illuminate\Contracts\View\Factory</target>
        </trans-unit>
        <trans-unit id="7138b953402698ee5c43d684275cfad7a9b527d5" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\View\View</source>
          <target state="translated">Illuminate\Contracts\View\View</target>
        </trans-unit>
        <trans-unit id="d82d5063c7d4a2496aae9c867bf1f854d6400da5" translate="yes" xml:space="preserve">
          <source>Illuminate\Cookie</source>
          <target state="translated">Illuminate\Cookie</target>
        </trans-unit>
        <trans-unit id="075c1d67cc9da4339795a325ad385489eea42330" translate="yes" xml:space="preserve">
          <source>Illuminate\Cookie\CookieJar</source>
          <target state="translated">Illuminate\Cookie\CookieJar</target>
        </trans-unit>
        <trans-unit id="7d9c66d24af9ca9da4c4b8c751c24e9685f2114d" translate="yes" xml:space="preserve">
          <source>Illuminate\Cookie\Middleware</source>
          <target state="translated">Illuminate\Cookie\Middleware</target>
        </trans-unit>
        <trans-unit id="485a86103811fe0e91c10648bf3c68110509b7eb" translate="yes" xml:space="preserve">
          <source>Illuminate\Database</source>
          <target state="translated">Illuminate\Database</target>
        </trans-unit>
        <trans-unit id="ac43d80ead7e1f6cef11e64d6cb100d61e72c54a" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Capsule</source>
          <target state="translated">Illuminate\Database\Capsule</target>
        </trans-unit>
        <trans-unit id="45afe7c0925dff8e7a00b1882d7d1e6e7ecb8200" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Concerns</source>
          <target state="translated">Illuminate\Database\Concerns</target>
        </trans-unit>
        <trans-unit id="137849ad128d72fb6e3b49c88f69ced1f50fbcbf" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Connection</source>
          <target state="translated">Illuminate\Database\Connection</target>
        </trans-unit>
        <trans-unit id="065889ec88e25eca5587901e3462e44baf6b70c8" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Connectors</source>
          <target state="translated">Illuminate\Database\Connectors</target>
        </trans-unit>
        <trans-unit id="a9a76008bc5a63bef0cdc26c372ad3b07997c7f9" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Console</source>
          <target state="translated">Illuminate\Database\Console</target>
        </trans-unit>
        <trans-unit id="c3137881d86002f2aee5244d2115c41aa02ab3d4" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Console\Factories</source>
          <target state="translated">Illuminate\Database\Console\Factories</target>
        </trans-unit>
        <trans-unit id="52e782108b87683f0b336e134ec07479df6c9988" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Console\Migrations</source>
          <target state="translated">Illuminate\Database\Console\Migrations</target>
        </trans-unit>
        <trans-unit id="ed8a199582f415db7c36ad4da2c982e289d65d90" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Console\Seeds</source>
          <target state="translated">Illuminate\Database\Console\Seeds</target>
        </trans-unit>
        <trans-unit id="8f7d6de38d938386d87cad70f1902f08b5f8a16f" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\DatabaseManager</source>
          <target state="translated">Illuminate\Database\DatabaseManager</target>
        </trans-unit>
        <trans-unit id="03e704904221d24fda47d7abd8e1c9022ac687a5" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Eloquent</source>
          <target state="translated">Illuminate\Database\Eloquent</target>
        </trans-unit>
        <trans-unit id="af7b97abb015a13eb1ca36220e05751751240365" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Eloquent\Concerns</source>
          <target state="translated">Illuminate\Database\Eloquent\Concerns</target>
        </trans-unit>
        <trans-unit id="fc6fa08afee4422f35f26f98d9e9e18de11d01cb" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Eloquent\Relations</source>
          <target state="translated">Illuminate\Database\Eloquent\Relations</target>
        </trans-unit>
        <trans-unit id="6168b3303423b72004f94f8eeed275cbb5f3516e" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Eloquent\Relations\Concerns</source>
          <target state="translated">Illuminate\Database\Eloquent\Relations\Concerns</target>
        </trans-unit>
        <trans-unit id="3a0bbe4390beb31a5343409426dea10c41e93b02" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Events</source>
          <target state="translated">Illuminate\Database\Events</target>
        </trans-unit>
        <trans-unit id="d822375a0c6ea499a2b1e700d87ed15fca66bbd0" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Migrations</source>
          <target state="translated">Illuminate\Database\Migrations</target>
        </trans-unit>
        <trans-unit id="3a9f66fa8e41e95eb6114b988462352d653fc443" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Query</source>
          <target state="translated">Illuminate\Database\Query</target>
        </trans-unit>
        <trans-unit id="58428e7d68dd39a594220d7cce4a028bf31c13a6" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Query\Grammars</source>
          <target state="translated">Illuminate\Database\Query\Grammars</target>
        </trans-unit>
        <trans-unit id="db8943cd5bffc8881c7f8caabc1c8e2bcfb820ab" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Query\Processors</source>
          <target state="translated">Illuminate\Database\Query\Processors</target>
        </trans-unit>
        <trans-unit id="cbf0948f0025e4f8414d1e5b8aa831be1f6fff4b" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Schema</source>
          <target state="translated">Illuminate\Database\Schema</target>
        </trans-unit>
        <trans-unit id="347cf428c2f7a55fdd3c03be17a97c187e93a297" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Schema\Builder</source>
          <target state="translated">Illuminate\Database\Schema\Builder</target>
        </trans-unit>
        <trans-unit id="9cc4c6071e26037cb19b608ae601f1acc9affd52" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Schema\Grammars</source>
          <target state="translated">Illuminate\Database\Schema\Grammars</target>
        </trans-unit>
        <trans-unit id="529beafec6b2845ebf1adbd1bb5d5da5ba9c0e66" translate="yes" xml:space="preserve">
          <source>Illuminate\Encryption</source>
          <target state="translated">Illuminate\Encryption</target>
        </trans-unit>
        <trans-unit id="59dbd5da972f58554ff98fd817a3e98734018c3a" translate="yes" xml:space="preserve">
          <source>Illuminate\Encryption\Encrypter</source>
          <target state="translated">Illuminate\Encryption\Encrypter</target>
        </trans-unit>
        <trans-unit id="b2d201376495d6af0dd58d518864420b196c09a9" translate="yes" xml:space="preserve">
          <source>Illuminate\Events</source>
          <target state="translated">Illuminate\Events</target>
        </trans-unit>
        <trans-unit id="5807171f6ca650b433d48ef146954d4fe40b2867" translate="yes" xml:space="preserve">
          <source>Illuminate\Events\Dispatcher</source>
          <target state="translated">Illuminate\Events\Dispatcher</target>
        </trans-unit>
        <trans-unit id="687dbb77dfb114985a6b2f367ea40027698328c6" translate="yes" xml:space="preserve">
          <source>Illuminate\Filesystem</source>
          <target state="translated">Illuminate\Filesystem</target>
        </trans-unit>
        <trans-unit id="9fa2ea01d6574bc8012d6e60882bfc8d582f600a" translate="yes" xml:space="preserve">
          <source>Illuminate\Filesystem\Filesystem</source>
          <target state="translated">Illuminate\Filesystem\Filesystem</target>
        </trans-unit>
        <trans-unit id="589020ae55bf65cd2a6e905249156a9aba377456" translate="yes" xml:space="preserve">
          <source>Illuminate\Filesystem\FilesystemManager</source>
          <target state="translated">Illuminate\Filesystem\FilesystemManager</target>
        </trans-unit>
        <trans-unit id="eae3b27ce804029a337afe1a7f833ce2819edca6" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation</source>
          <target state="translated">Illuminate\Foundation</target>
        </trans-unit>
        <trans-unit id="762b785b624baf12b66e32b2d5ffacd9f87e1515" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Application</source>
          <target state="translated">Illuminate\Foundation\Application</target>
        </trans-unit>
        <trans-unit id="44aeeac223def71656dd1eef856c6cf4576c9e87" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Auth</source>
          <target state="translated">Illuminate\Foundation\Auth</target>
        </trans-unit>
        <trans-unit id="d250ece3feb91a177be3e4d30121448990ce4498" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Auth\Access</source>
          <target state="translated">Illuminate\Foundation\Auth\Access</target>
        </trans-unit>
        <trans-unit id="7b960e72b5ae6089c3d74fb7694428a3f983addd" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Bootstrap</source>
          <target state="translated">Illuminate\Foundation\Bootstrap</target>
        </trans-unit>
        <trans-unit id="3f9603c68f27dd40e7279727c05879b15618c431" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Bus</source>
          <target state="translated">Illuminate\Foundation\Bus</target>
        </trans-unit>
        <trans-unit id="6d4e1a7b443f117f44a4b57ebc9fa9136f2192ab" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Console</source>
          <target state="translated">Illuminate\Foundation\Console</target>
        </trans-unit>
        <trans-unit id="06bcc65445d528a3d2fb2f48aa8050ea06091ae5" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Console\Presets</source>
          <target state="translated">Illuminate\Foundation\Console\Presets</target>
        </trans-unit>
        <trans-unit id="1f76f552b2a9b82029784ffbf30a0d6a9c7988fd" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Events</source>
          <target state="translated">Illuminate\Foundation\Events</target>
        </trans-unit>
        <trans-unit id="970976110acac261dbbafc956e8a2c8bad034bbc" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Exceptions</source>
          <target state="translated">Illuminate\Foundation\Exceptions</target>
        </trans-unit>
        <trans-unit id="f4a5027e0fa5b201af8b449655c74cc78172e537" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Http</source>
          <target state="translated">Illuminate\Foundation\Http</target>
        </trans-unit>
        <trans-unit id="040bff284fe73ae90e09ab2d3c65b23df20fda6a" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Http\Events</source>
          <target state="translated">Illuminate\Foundation\Http\Events</target>
        </trans-unit>
        <trans-unit id="23da52da8a770f73d57d7324e96be507d87cdfda" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Http\Exceptions</source>
          <target state="translated">Illuminate\Foundation\Http\Exceptions</target>
        </trans-unit>
        <trans-unit id="11f4ba2f011eba2fff536d7bc19168ff979968de" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Http\Middleware</source>
          <target state="translated">Illuminate\Foundation\Http\Middleware</target>
        </trans-unit>
        <trans-unit id="3f540aa4e94db9ebf89122219a6a15e149fe37ef" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Providers</source>
          <target state="translated">Illuminate\Foundation\Providers</target>
        </trans-unit>
        <trans-unit id="247097724f8e1422953d9e2a322009dddc68cd16" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Support</source>
          <target state="translated">Illuminate\Foundation\Support</target>
        </trans-unit>
        <trans-unit id="d456f3becda9cce4168b71a717b7118bfb0e63ee" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Support\Providers</source>
          <target state="translated">Illuminate\Foundation\Support\Providers</target>
        </trans-unit>
        <trans-unit id="ecced7aaa77f307e8747316a23328fa81478088d" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Testing</source>
          <target state="translated">Illuminate\Foundation\Testing</target>
        </trans-unit>
        <trans-unit id="ca8cc7d56e5696bb54b723209b9c543fa8891842" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Testing\Concerns</source>
          <target state="translated">Illuminate\Foundation\Testing\Concerns</target>
        </trans-unit>
        <trans-unit id="ac9775cc5b6d79e0cad6f2915baa35b8351203fd" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Testing\Constraints</source>
          <target state="translated">Illuminate\Foundation\Testing\Constraints</target>
        </trans-unit>
        <trans-unit id="1d912fb2091861c3d546761423b5a526cb297185" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Validation</source>
          <target state="translated">Illuminate\Foundation\Validation</target>
        </trans-unit>
        <trans-unit id="015b0ed1b887eff9332acd05201ed8b447fb077d" translate="yes" xml:space="preserve">
          <source>Illuminate\Hashing</source>
          <target state="translated">Illuminate\Hashing</target>
        </trans-unit>
        <trans-unit id="d044a6c16c0e757149d8f54982f18135d934963a" translate="yes" xml:space="preserve">
          <source>Illuminate\Http</source>
          <target state="translated">Illuminate\Http</target>
        </trans-unit>
        <trans-unit id="6ccd4a1ee6836c5883d9451dc345a23f48da1013" translate="yes" xml:space="preserve">
          <source>Illuminate\Http\Concerns</source>
          <target state="translated">Illuminate\Http\Concerns</target>
        </trans-unit>
        <trans-unit id="ded9d7213951f81619fe3b73e78bdf4d61384a53" translate="yes" xml:space="preserve">
          <source>Illuminate\Http\Exceptions</source>
          <target state="translated">Illuminate\Http\Exceptions</target>
        </trans-unit>
        <trans-unit id="a89bab0018a3f75e820665c98423f217d31a66ac" translate="yes" xml:space="preserve">
          <source>Illuminate\Http\Middleware</source>
          <target state="translated">Illuminate\Http\Middleware</target>
        </trans-unit>
        <trans-unit id="b2b3983e29d4f1d6c52f8bb25ec8226e4dcdc8be" translate="yes" xml:space="preserve">
          <source>Illuminate\Http\Request</source>
          <target state="translated">Illuminate\Http\Request</target>
        </trans-unit>
        <trans-unit id="aec982af8e53df9f3cfeef14a1959500e519cfc5" translate="yes" xml:space="preserve">
          <source>Illuminate\Http\Resources</source>
          <target state="translated">Illuminate\Http\Resources</target>
        </trans-unit>
        <trans-unit id="7e887eb6c4197c91297debb5c92f67b7d122282d" translate="yes" xml:space="preserve">
          <source>Illuminate\Http\Resources\Json</source>
          <target state="translated">Illuminate\Http\Resources\Json</target>
        </trans-unit>
        <trans-unit id="6d8e2a2dd9e9fa948c305d75f615009a11b82493" translate="yes" xml:space="preserve">
          <source>Illuminate\Http\Response</source>
          <target state="translated">Illuminate\Http\Response</target>
        </trans-unit>
        <trans-unit id="4488ace460482ed7d12e30e00a1b5e131364fdfc" translate="yes" xml:space="preserve">
          <source>Illuminate\Http\Testing</source>
          <target state="translated">Illuminate\Http\Testing</target>
        </trans-unit>
        <trans-unit id="849a3990c510bd91c65c0528d2b610561e5aa936" translate="yes" xml:space="preserve">
          <source>Illuminate\Log</source>
          <target state="translated">Illuminate\Log</target>
        </trans-unit>
        <trans-unit id="8dff5f85a76aff8135ce0c4653590d9af3ee5067" translate="yes" xml:space="preserve">
          <source>Illuminate\Log\Events</source>
          <target state="translated">Illuminate\Log\Events</target>
        </trans-unit>
        <trans-unit id="2a6c34aa61dc2dbe29132426b9ea15cd480570da" translate="yes" xml:space="preserve">
          <source>Illuminate\Log\Logger</source>
          <target state="translated">Illuminate\Log\Logger</target>
        </trans-unit>
        <trans-unit id="e2995be3e5b9482c4e4e1e0185f840f1dc52f1db" translate="yes" xml:space="preserve">
          <source>Illuminate\Mail</source>
          <target state="translated">Illuminate\Mail</target>
        </trans-unit>
        <trans-unit id="37c4d5c8de158dfa6df75617161022e94ed5084a" translate="yes" xml:space="preserve">
          <source>Illuminate\Mail\Events</source>
          <target state="translated">Illuminate\Mail\Events</target>
        </trans-unit>
        <trans-unit id="9c6c26ada18d8545e66c00571f7e0e1b64b5227b" translate="yes" xml:space="preserve">
          <source>Illuminate\Mail\Mailer</source>
          <target state="translated">Illuminate\Mail\Mailer</target>
        </trans-unit>
        <trans-unit id="5866a4cb280fbf322246bd4a1e4665b885f71516" translate="yes" xml:space="preserve">
          <source>Illuminate\Mail\Transport</source>
          <target state="translated">Illuminate\Mail\Transport</target>
        </trans-unit>
        <trans-unit id="673903a63c6bdd680b0e9bd7ff871c69bd69e12d" translate="yes" xml:space="preserve">
          <source>Illuminate\Notifications</source>
          <target state="translated">Illuminate\Notifications</target>
        </trans-unit>
        <trans-unit id="d3b4abda00af643c5b9dcb8adfe203b45687295e" translate="yes" xml:space="preserve">
          <source>Illuminate\Notifications\ChannelManager</source>
          <target state="translated">Illuminate\Notifications\ChannelManager</target>
        </trans-unit>
        <trans-unit id="6cf0b26331ff65c3d1f91c423aa57063f2c567e1" translate="yes" xml:space="preserve">
          <source>Illuminate\Notifications\Channels</source>
          <target state="translated">Illuminate\Notifications\Channels</target>
        </trans-unit>
        <trans-unit id="4d869061cc599091c2ff83bae0a815d4d356e82d" translate="yes" xml:space="preserve">
          <source>Illuminate\Notifications\Console</source>
          <target state="translated">Illuminate\Notifications\Console</target>
        </trans-unit>
        <trans-unit id="c805a27c327342f570caf1eab304f464f7d6e65c" translate="yes" xml:space="preserve">
          <source>Illuminate\Notifications\Events</source>
          <target state="translated">Illuminate\Notifications\Events</target>
        </trans-unit>
        <trans-unit id="e0710e0312a828c2f9e7b4e8849eda0cd3de8297" translate="yes" xml:space="preserve">
          <source>Illuminate\Notifications\Messages</source>
          <target state="translated">Illuminate\Notifications\Messages</target>
        </trans-unit>
        <trans-unit id="fa44d3cd0a4cbb74479c488749e244d4b4d63b31" translate="yes" xml:space="preserve">
          <source>Illuminate\Pagination</source>
          <target state="translated">Illuminate\Pagination</target>
        </trans-unit>
        <trans-unit id="a8fb42032983b6b82cd0b1ab4938e0226d3c0589" translate="yes" xml:space="preserve">
          <source>Illuminate\Pipeline</source>
          <target state="translated">Illuminate\Pipeline</target>
        </trans-unit>
        <trans-unit id="a24c953de9fc9d143031bd41c1c9e9fb807bb9c4" translate="yes" xml:space="preserve">
          <source>Illuminate\Queue</source>
          <target state="translated">Illuminate\Queue</target>
        </trans-unit>
        <trans-unit id="575486e64eed1dfce137dbcb8fa36fb813702082" translate="yes" xml:space="preserve">
          <source>Illuminate\Queue\Capsule</source>
          <target state="translated">Illuminate\Queue\Capsule</target>
        </trans-unit>
        <trans-unit id="f0265089943c94e6c5d8dc44cf3a59a9ee23f0a5" translate="yes" xml:space="preserve">
          <source>Illuminate\Queue\Connectors</source>
          <target state="translated">Illuminate\Queue\Connectors</target>
        </trans-unit>
        <trans-unit id="9d05edc9c74de685f63be995a221a2676c0dc9ca" translate="yes" xml:space="preserve">
          <source>Illuminate\Queue\Console</source>
          <target state="translated">Illuminate\Queue\Console</target>
        </trans-unit>
        <trans-unit id="c89c877141dffdd7580e07e50bfdeb6f4a726869" translate="yes" xml:space="preserve">
          <source>Illuminate\Queue\Events</source>
          <target state="translated">Illuminate\Queue\Events</target>
        </trans-unit>
        <trans-unit id="a24c8d009cab4b2e78f20150a8067b8f9fc6a115" translate="yes" xml:space="preserve">
          <source>Illuminate\Queue\Failed</source>
          <target state="translated">Illuminate\Queue\Failed</target>
        </trans-unit>
        <trans-unit id="8a4e9878d6fcf790898927fb83d34eda9f72f5be" translate="yes" xml:space="preserve">
          <source>Illuminate\Queue\Jobs</source>
          <target state="translated">Illuminate\Queue\Jobs</target>
        </trans-unit>
        <trans-unit id="7dbfe69301371a1ad6068d73b0203107bbcddf1a" translate="yes" xml:space="preserve">
          <source>Illuminate\Queue\Queue</source>
          <target state="translated">Illuminate\Queue\Queue</target>
        </trans-unit>
        <trans-unit id="06cdacf690ae0ddefd0d1fb26d6b9b330b9221b2" translate="yes" xml:space="preserve">
          <source>Illuminate\Queue\QueueManager</source>
          <target state="translated">Illuminate\Queue\QueueManager</target>
        </trans-unit>
        <trans-unit id="7a67cf7f15302008eae27879da8784a598eb8d34" translate="yes" xml:space="preserve">
          <source>Illuminate\Redis</source>
          <target state="translated">Illuminate\Redis</target>
        </trans-unit>
        <trans-unit id="d298417a6f2b1dd01555d0e57aa2ca70b07a2507" translate="yes" xml:space="preserve">
          <source>Illuminate\Redis\Connections</source>
          <target state="translated">Illuminate\Redis\Connections</target>
        </trans-unit>
        <trans-unit id="b4efe6be20221ee31c974e4a2e485c83e0c4b113" translate="yes" xml:space="preserve">
          <source>Illuminate\Redis\Connections\Connection</source>
          <target state="translated">Illuminate\Redis\Connections\Connection</target>
        </trans-unit>
        <trans-unit id="8f5c8830a7b26c155c35a985c906c4053e603d26" translate="yes" xml:space="preserve">
          <source>Illuminate\Redis\Connectors</source>
          <target state="translated">Illuminate\Redis\Connectors</target>
        </trans-unit>
        <trans-unit id="6331749eb2b72dbc188c74da12c82cf3109a998e" translate="yes" xml:space="preserve">
          <source>Illuminate\Redis\Events</source>
          <target state="translated">Illuminate\Redis\Events</target>
        </trans-unit>
        <trans-unit id="e3ad04349ae8ffcd5669b9affd4e87229149fed8" translate="yes" xml:space="preserve">
          <source>Illuminate\Redis\Limiters</source>
          <target state="translated">Illuminate\Redis\Limiters</target>
        </trans-unit>
        <trans-unit id="b2045a7d62b20387b94b7efb4b1618d0dd55f0da" translate="yes" xml:space="preserve">
          <source>Illuminate\Redis\RedisManager</source>
          <target state="translated">Illuminate\Redis\RedisManager</target>
        </trans-unit>
        <trans-unit id="59b076c1b404a9f411334857d5683d7a470d9774" translate="yes" xml:space="preserve">
          <source>Illuminate\Routing</source>
          <target state="translated">Illuminate\Routing</target>
        </trans-unit>
        <trans-unit id="2055a8e2c15a7132bb4ec0db4b1bbe28e2a91ac8" translate="yes" xml:space="preserve">
          <source>Illuminate\Routing\Console</source>
          <target state="translated">Illuminate\Routing\Console</target>
        </trans-unit>
        <trans-unit id="5cf62a13907187aca2a7db56c9bbc29e11f9b862" translate="yes" xml:space="preserve">
          <source>Illuminate\Routing\Contracts</source>
          <target state="translated">Illuminate\Routing\Contracts</target>
        </trans-unit>
        <trans-unit id="ae22fa68b46e0303f35be4a54b71ec67b3bf3aa4" translate="yes" xml:space="preserve">
          <source>Illuminate\Routing\Events</source>
          <target state="translated">Illuminate\Routing\Events</target>
        </trans-unit>
        <trans-unit id="82e9baf864e371356db92e2778bc8023b68a3234" translate="yes" xml:space="preserve">
          <source>Illuminate\Routing\Exceptions</source>
          <target state="translated">Illuminate\Routing\Exceptions</target>
        </trans-unit>
        <trans-unit id="2db1b07296de5ba55388ff0eb08bdd477db25d9e" translate="yes" xml:space="preserve">
          <source>Illuminate\Routing\Matching</source>
          <target state="translated">Illuminate\Routing\Matching</target>
        </trans-unit>
        <trans-unit id="e394ca3b939fdddb54e099bd0e1e7a9d1d04da1d" translate="yes" xml:space="preserve">
          <source>Illuminate\Routing\Middleware</source>
          <target state="translated">Illuminate\Routing\Middleware</target>
        </trans-unit>
        <trans-unit id="6f57272348f4b61b5ee1bbd7854cf81960f6b0f1" translate="yes" xml:space="preserve">
          <source>Illuminate\Routing\Redirector</source>
          <target state="translated">Illuminate\Routing\Redirector</target>
        </trans-unit>
        <trans-unit id="ac0336c53d50171aa6fa6b2f3a94dd97c545c2ba" translate="yes" xml:space="preserve">
          <source>Illuminate\Routing\Router</source>
          <target state="translated">Illuminate\Routing\Router</target>
        </trans-unit>
        <trans-unit id="f7815bc65e394f884c7f74f221442e49ab5a1af7" translate="yes" xml:space="preserve">
          <source>Illuminate\Routing\UrlGenerator</source>
          <target state="translated">Illuminate\Routing\UrlGenerator</target>
        </trans-unit>
        <trans-unit id="dc7acc43896991aec58aec3673d82852f34d0cad" translate="yes" xml:space="preserve">
          <source>Illuminate\Session</source>
          <target state="translated">Illuminate\Session</target>
        </trans-unit>
        <trans-unit id="1d60d0954d8175eb660c1f7375faebf003a887fc" translate="yes" xml:space="preserve">
          <source>Illuminate\Session\Console</source>
          <target state="translated">Illuminate\Session\Console</target>
        </trans-unit>
        <trans-unit id="f06d30da5ff839a174312b9eea32da5e36454629" translate="yes" xml:space="preserve">
          <source>Illuminate\Session\Middleware</source>
          <target state="translated">Illuminate\Session\Middleware</target>
        </trans-unit>
        <trans-unit id="043f84aa4b9e48f4f0e34e095a709f2874470659" translate="yes" xml:space="preserve">
          <source>Illuminate\Session\SessionManager</source>
          <target state="translated">Illuminate\Session\SessionManager</target>
        </trans-unit>
        <trans-unit id="b3594f82a2c318474602e0d71f5771ad4e5a53a7" translate="yes" xml:space="preserve">
          <source>Illuminate\Session\Store</source>
          <target state="translated">Illuminate\Session\Store</target>
        </trans-unit>
        <trans-unit id="f1e1cf387160fb189c9794a57a3f959d5f119c55" translate="yes" xml:space="preserve">
          <source>Illuminate\Support</source>
          <target state="translated">Illuminate\Support</target>
        </trans-unit>
        <trans-unit id="2f9b70309c0f0becd388b7b8ae38e82698ca5cc4" translate="yes" xml:space="preserve">
          <source>Illuminate\Support\Facades</source>
          <target state="translated">Illuminate\Support\Facades</target>
        </trans-unit>
        <trans-unit id="2dcd0fe2f0963796c65336523e825385ebafde33" translate="yes" xml:space="preserve">
          <source>Illuminate\Support\Testing</source>
          <target state="translated">Illuminate\Support\Testing</target>
        </trans-unit>
        <trans-unit id="f05cb50b9092736d43cc081d3cfeed35e6f4c28a" translate="yes" xml:space="preserve">
          <source>Illuminate\Support\Testing\Fakes</source>
          <target state="translated">Illuminate\Support\Testing\Fakes</target>
        </trans-unit>
        <trans-unit id="8e6fab5e41524c5fad96d395c8a3c720e3dcbde3" translate="yes" xml:space="preserve">
          <source>Illuminate\Support\Traits</source>
          <target state="translated">Illuminate\Support\Traits</target>
        </trans-unit>
        <trans-unit id="cc81c16893ac979b431df6aa606438fda64b4240" translate="yes" xml:space="preserve">
          <source>Illuminate\Translation</source>
          <target state="translated">Illuminate\Translation</target>
        </trans-unit>
        <trans-unit id="db966afc4753ede4f0db19f0fabcdb925b4ed54b" translate="yes" xml:space="preserve">
          <source>Illuminate\Translation\Translator</source>
          <target state="translated">Illuminate\Translation\Translator</target>
        </trans-unit>
        <trans-unit id="ab593cdecdc4d51ebc473777121daa1d840dd2d7" translate="yes" xml:space="preserve">
          <source>Illuminate\Validation</source>
          <target state="translated">Illuminate\Validation</target>
        </trans-unit>
        <trans-unit id="c970c0d7e91c5429bd563d76510f99a21709ff10" translate="yes" xml:space="preserve">
          <source>Illuminate\Validation\Concerns</source>
          <target state="translated">Illuminate\Validation\Concerns</target>
        </trans-unit>
        <trans-unit id="48cef8214cefc2e23e9abf53496ae042fa7ce85b" translate="yes" xml:space="preserve">
          <source>Illuminate\Validation\Factory</source>
          <target state="translated">Illuminate\Validation\Factory</target>
        </trans-unit>
        <trans-unit id="f7ba48893f5a67d48ecf4414d47195a5eafea0a6" translate="yes" xml:space="preserve">
          <source>Illuminate\Validation\Rules</source>
          <target state="translated">Illuminate\Validation\Rules</target>
        </trans-unit>
        <trans-unit id="ad7ace3ee91fd219b75ac926a0d5fdc7d08ea8f3" translate="yes" xml:space="preserve">
          <source>Illuminate\Validation\Validator</source>
          <target state="translated">Illuminate\Validation\Validator</target>
        </trans-unit>
        <trans-unit id="d6165e3bc2682b7cff170e2f26cf68456aa7f9cc" translate="yes" xml:space="preserve">
          <source>Illuminate\View</source>
          <target state="translated">Illuminate\View</target>
        </trans-unit>
        <trans-unit id="631bd89ffd2741d9f6696ad646ade480ceb6eefc" translate="yes" xml:space="preserve">
          <source>Illuminate\View\Compilers</source>
          <target state="translated">Illuminate\View\Compilers</target>
        </trans-unit>
        <trans-unit id="3e4caf5bdfd85bef41d0de4143862c6f35571fe3" translate="yes" xml:space="preserve">
          <source>Illuminate\View\Compilers\BladeCompiler</source>
          <target state="translated">Illuminate\View\Compilers\BladeCompiler</target>
        </trans-unit>
        <trans-unit id="fab05b277dca4f65ca5f631c940c4ed767206383" translate="yes" xml:space="preserve">
          <source>Illuminate\View\Compilers\Concerns</source>
          <target state="translated">Illuminate\View\Compilers\Concerns</target>
        </trans-unit>
        <trans-unit id="dcd46b27a8ba9371b9d76399575bc09ca54bdd2d" translate="yes" xml:space="preserve">
          <source>Illuminate\View\Concerns</source>
          <target state="translated">Illuminate\View\Concerns</target>
        </trans-unit>
        <trans-unit id="b9767b671330a19850d5e9eadc3b5fb600537479" translate="yes" xml:space="preserve">
          <source>Illuminate\View\Engines</source>
          <target state="translated">Illuminate\View\Engines</target>
        </trans-unit>
        <trans-unit id="1d6e47ff529ae403b3fdcb8e8aeab5e6a55ea870" translate="yes" xml:space="preserve">
          <source>Illuminate\View\Factory</source>
          <target state="translated">Illuminate\View\Factory</target>
        </trans-unit>
        <trans-unit id="6e5c2aaa6d78e27f1007c3ecb6b9a0c0dbf9f33b" translate="yes" xml:space="preserve">
          <source>Illuminate\View\Middleware</source>
          <target state="translated">Illuminate\View\Middleware</target>
        </trans-unit>
        <trans-unit id="8d0a371b86e19f3245c10d0ad8a154576fc1fb9f" translate="yes" xml:space="preserve">
          <source>Illuminate\View\View</source>
          <target state="translated">Illuminate\View\View</target>
        </trans-unit>
        <trans-unit id="2c1693c6ec2fecf9d728de3bd223d247daecfdcc" translate="yes" xml:space="preserve">
          <source>Implementing The Driver</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5868306e35f5ed89a827d7088b357d35fdb7d9c" translate="yes" xml:space="preserve">
          <source>Implicit Binding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="775898734f518e4c2d42c56fc79fbfdb3f8706a7" translate="yes" xml:space="preserve">
          <source>Implicit Extensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f04d2f7f73b5b2ce9c13c0e62b8e21f7285cfa0" translate="yes" xml:space="preserve">
          <source>Implicit Grant Tokens</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0760cb30ce2ce5b6e60f9307f92f8a74f92aa9b7" translate="yes" xml:space="preserve">
          <source>ImplicitRouteBinding</source>
          <target state="translated">ImplicitRouteBinding</target>
        </trans-unit>
        <trans-unit id="db47cd33d422202d6d334622961e9c47985df790" translate="yes" xml:space="preserve">
          <source>ImplicitRouteBinding (Routing)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18d267f5821c961e5dbc9140cbd62361d8c1d729" translate="yes" xml:space="preserve">
          <source>ImplicitRouteBinding::getParameterName()</source>
          <target state="translated">ImplicitRouteBinding::getParameterName()</target>
        </trans-unit>
        <trans-unit id="8aa1ead5517e036bf2e30c2ff46a2bac59e06988" translate="yes" xml:space="preserve">
          <source>ImplicitRouteBinding::resolveForRoute()</source>
          <target state="translated">ImplicitRouteBinding::resolveForRoute()</target>
        </trans-unit>
        <trans-unit id="85bd5177b9510e7ff19147bd1b10e1e84bda95cb" translate="yes" xml:space="preserve">
          <source>ImplicitRule</source>
          <target state="translated">ImplicitRule</target>
        </trans-unit>
        <trans-unit id="5759be3863d01ac1d3643359ee54161c214e9f48" translate="yes" xml:space="preserve">
          <source>ImplicitRule (Contracts)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef36502d67b0520654deb764dd055a7e905cfdd" translate="yes" xml:space="preserve">
          <source>In</source>
          <target state="translated">In</target>
        </trans-unit>
        <trans-unit id="db7e950e3dcf61e0b5cb06087fadfde65338c335" translate="yes" xml:space="preserve">
          <source>In (Validation\Rules)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59cad59b3ed7128fdd55b14330c61de34a6ff2c4" translate="yes" xml:space="preserve">
          <source>In Laravel's Flysystem integration, &quot;visibility&quot; is an abstraction of file permissions across multiple platforms. Files may either be declared &lt;code&gt;public&lt;/code&gt; or &lt;code&gt;private&lt;/code&gt;. When a file is declared &lt;code&gt;public&lt;/code&gt;, you are indicating that the file should generally be accessible to others. For example, when using the S3 driver, you may retrieve URLs for &lt;code&gt;public&lt;/code&gt; files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb03e4ecd1a856c8ea0260e17944a799370cf55e" translate="yes" xml:space="preserve">
          <source>In Laravel, each notification is represented by a single class (typically stored in the &lt;code&gt;app/Notifications&lt;/code&gt; directory). Don't worry if you don't see this directory in your application, it will be created for you when you run the &lt;code&gt;make:notification&lt;/code&gt; Artisan command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92067a03576e685b6ca57c8453d679fa5f09f34e" translate="yes" xml:space="preserve">
          <source>In Laravel, each type of email sent by your application is represented as a &quot;mailable&quot; class. These classes are stored in the &lt;code&gt;app/Mail&lt;/code&gt; directory. Don't worry if you don't see this directory in your application, since it will be generated for you when you create your first mailable class using the &lt;code&gt;make:mail&lt;/code&gt; command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="155f99e724d3a80dd55ca241f812ca4bbbd58aed" translate="yes" xml:space="preserve">
          <source>In a Laravel application's &lt;code&gt;config/app.php&lt;/code&gt; configuration file, the &lt;code&gt;providers&lt;/code&gt; option defines a list of service providers that should be loaded by Laravel. When someone installs your package, you will typically want your service provider to be included in this list. Instead of requiring users to manually add your service provider to the list, you may define the provider in the &lt;code&gt;extra&lt;/code&gt; section of your package's &lt;code&gt;composer.json&lt;/code&gt; file. In addition to service providers, you may also list any &lt;a href=&quot;facades&quot;&gt;facades&lt;/a&gt; you would like to be registered:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1508fa6a2babb31d4ff995b9388b1e0859a9995" translate="yes" xml:space="preserve">
          <source>In a Laravel application, a facade is a class that provides access to an object from the container. The machinery that makes this work is in the &lt;code&gt;Facade&lt;/code&gt; class. Laravel's facades, and any custom facades you create, will extend the base &lt;code&gt;Illuminate\Support\Facades\Facade&lt;/code&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8315c199b393c6eeb57b61aa4facfd00b7c4c101" translate="yes" xml:space="preserve">
          <source>In a fresh Laravel application, this directory will already contain several providers. You are free to add your own providers to this directory as needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44c63a72a69a725d4525da5b896a11b2733b39c3" translate="yes" xml:space="preserve">
          <source>In addition to actually removing records from your database, Eloquent can also &quot;soft delete&quot; models. When models are soft deleted, they are not actually removed from your database. Instead, a &lt;code&gt;deleted_at&lt;/code&gt; attribute is set on the model and inserted into the database. If a model has a non-null &lt;code&gt;deleted_at&lt;/code&gt; value, the model has been soft deleted. To enable soft deletes for a model, use the &lt;code&gt;Illuminate\Database\Eloquent\SoftDeletes&lt;/code&gt; trait on the model and add the &lt;code&gt;deleted_at&lt;/code&gt; column to your &lt;code&gt;$dates&lt;/code&gt; property:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d10082b362f898b56ffabcb9eb9060eb479a16" translate="yes" xml:space="preserve">
          <source>In addition to checking for the CSRF token as a POST parameter, the &lt;code&gt;VerifyCsrfToken&lt;/code&gt; middleware will also check for the &lt;code&gt;X-CSRF-TOKEN&lt;/code&gt; request header. You could, for example, store the token in a HTML &lt;code&gt;meta&lt;/code&gt; tag:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dd31d30fba4c0a6bce05e9d28154b0016841ce0" translate="yes" xml:space="preserve">
          <source>In addition to checking if the file is present, you may verify that there were no problems uploading the file via the &lt;code&gt;isValid&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ec5bee9f295317d5a7c7b23e32fb252a05a1441" translate="yes" xml:space="preserve">
          <source>In addition to conditional statements, Blade provides simple directives for working with PHP's loop structures. Again, each of these directives functions identically to their PHP counterparts:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccd6612e62614a38f52bf71c62cc5b7483eb53ab" translate="yes" xml:space="preserve">
          <source>In addition to conditionally including relationship information in your resource responses, you may conditionally include data from the intermediate tables of many-to-many relationships using the &lt;code&gt;whenPivotLoaded&lt;/code&gt; method. The &lt;code&gt;whenPivotLoaded&lt;/code&gt; method accepts the name of the pivot table as its first argument. The second argument should be a Closure that defines the value to be returned if the pivot information is available on the model:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="870cdf239e96619c23b5baa996078a844bc74e95" translate="yes" xml:space="preserve">
          <source>In addition to conditionally loading attributes, you may conditionally include relationships on your resource responses based on if the relationship has already been loaded on the model. This allows your controller to decide which relationships should be loaded on the model and your resource can easily include them only when they have actually been loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e35a2e3f8291967a1da91db5804c9422db4c30f" translate="yes" xml:space="preserve">
          <source>In addition to constructor injection, you may also type-hint dependencies on your controller's methods. A common use-case for method injection is injecting the &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; instance into your controller methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f49907e1643297e4a0730646264b22e3f21a1450" translate="yes" xml:space="preserve">
          <source>In addition to creating images, you may create files of any other type using the &lt;code&gt;create&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d3b9bcd7f717ca19d11546a168c78f4e21884d2" translate="yes" xml:space="preserve">
          <source>In addition to custom accessors and mutators, Eloquent can also automatically cast date fields to &lt;a href=&quot;https://github.com/briannesbitt/Carbon&quot;&gt;Carbon&lt;/a&gt; instances or even &lt;a href=&quot;#attribute-casting&quot;&gt;cast text fields to JSON&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae5e59f8783e4edd39e014cf446681a37611f34e" translate="yes" xml:space="preserve">
          <source>In addition to customizing the name of the joining table, you may also customize the column names of the keys on the table by passing additional arguments to the &lt;code&gt;belongsToMany&lt;/code&gt; method. The third argument is the foreign key name of the model on which you are defining the relationship, while the fourth argument is the foreign key name of the model that you are joining to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f38613e5db2e6063efb637518ec27e83d30a143c" translate="yes" xml:space="preserve">
          <source>In addition to displaying output, you may also ask the user to provide input during the execution of your command. The &lt;code&gt;ask&lt;/code&gt; method will prompt the user with the given question, accept their input, and then return the user's input back to your command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8e60330fe13511f3c4029a24557993f475badb2" translate="yes" xml:space="preserve">
          <source>In addition to facades, Laravel includes a variety of &quot;helper&quot; functions which can perform common tasks like generating views, firing events, dispatching jobs, or sending HTTP responses. Many of these helper functions perform the same function as a corresponding facade. For example, this facade call and helper call are equivalent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6592eced6c7f8ec71fa85f95f9f46a6bf0563f5" translate="yes" xml:space="preserve">
          <source>In addition to generating resources that transform individual models, you may generate resources that are responsible for transforming collections of models. This allows your response to include links and other meta information that is relevant to an entire collection of a given resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="345e2578bec12e46d02910b31cc1928dbbb1c3c2" translate="yes" xml:space="preserve">
          <source>In addition to helpful methods provided to the &lt;code&gt;User&lt;/code&gt; model, Laravel provides a helpful &lt;code&gt;authorize&lt;/code&gt; method to any of your controllers which extend the &lt;code&gt;App\Http\Controllers\Controller&lt;/code&gt; base class. Like the &lt;code&gt;can&lt;/code&gt; method, this method accepts the name of the action you wish to authorize and the relevant model. If the action is not authorized, the &lt;code&gt;authorize&lt;/code&gt; method will throw an &lt;code&gt;Illuminate\Auth\Access\AuthorizationException&lt;/code&gt;, which the default Laravel exception handler will convert to an HTTP response with a &lt;code&gt;403&lt;/code&gt; status code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b57fc0ff1a3e2e6daa168ba10ece36fbb4f2c6d2" translate="yes" xml:space="preserve">
          <source>In addition to optimizing the autoloader, you should always be sure to include a &lt;code&gt;composer.lock&lt;/code&gt; file in your project's source control repository. Your project's dependencies can be installed much faster when a &lt;code&gt;composer.lock&lt;/code&gt; file is present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="188bdf3c42b975715ac2ff4721bcbdf3ba18b4d9" translate="yes" xml:space="preserve">
          <source>In addition to providing &lt;a href=&quot;authentication&quot;&gt;authentication&lt;/a&gt; services out of the box, Laravel also provides a simple way to authorize user actions against a given resource. Like authentication, Laravel's approach to authorization is simple, and there are two primary ways of authorizing actions: gates and policies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdb03d7ab60246fa976e882e8c940eff0bc6e21b" translate="yes" xml:space="preserve">
          <source>In addition to reading and writing files, Laravel can also provide information about the files themselves. For example, the &lt;code&gt;size&lt;/code&gt; method may be used to get the size of the file in bytes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="145b94691fe48e7dad2f7b127c92105b73e791f0" translate="yes" xml:space="preserve">
          <source>In addition to receiving your command's arguments and options, command Closures may also type-hint additional dependencies that you would like resolved out of the &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="025e7c3060bcdfd4a23171aac71aeaebdc72a4f0" translate="yes" xml:space="preserve">
          <source>In addition to retrieving a collection of models, you may paginate your search results using the &lt;code&gt;paginate&lt;/code&gt; method. This method will return a &lt;code&gt;Paginator&lt;/code&gt; instance just as if you had &lt;a href=&quot;pagination&quot;&gt;paginated a traditional Eloquent query&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49eb756e4f64da87852280b9ab7c0a73594b162e" translate="yes" xml:space="preserve">
          <source>In addition to returning strings from your routes and controllers, you may also return arrays. The framework will automatically convert the array into a JSON response:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba6f823ac9880ebcc4178107ec81e2a8a68200da" translate="yes" xml:space="preserve">
          <source>In addition to scheduling Closure calls, you may also schedule &lt;a href=&quot;artisan&quot;&gt;Artisan commands&lt;/a&gt; and operating system commands. For example, you may use the &lt;code&gt;command&lt;/code&gt; method to schedule an Artisan command using either the command's name or class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e36c597dca9ad0ec61a9f73b1bdac29c7fd8a7d" translate="yes" xml:space="preserve">
          <source>In addition to scheduling using Closures, you may also using &lt;a href=&quot;http://php.net/manual/en/language.oop5.magic.php#object.invoke&quot;&gt;invokable objects&lt;/a&gt;. Invokable objects are simple PHP classes that contain an &lt;code&gt;__invoke&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3fecf0bbf77000d2a857a7318ad0726bea0b926" translate="yes" xml:space="preserve">
          <source>In addition to simplifying HTTP testing, Laravel provides a simple API for testing console applications that ask for user input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b12aec219ea784510e7e975e38da0f98a729d0a0" translate="yes" xml:space="preserve">
          <source>In addition to support for &lt;a href=&quot;mail&quot;&gt;sending email&lt;/a&gt;, Laravel provides support for sending notifications across a variety of delivery channels, including mail, SMS (via &lt;a href=&quot;https://www.nexmo.com/&quot;&gt;Nexmo&lt;/a&gt;), and &lt;a href=&quot;https://slack.com&quot;&gt;Slack&lt;/a&gt;. Notifications may also be stored in a database so they may be displayed in your web interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4f379369e5396aae8dc7c5a70491004656e8e0" translate="yes" xml:space="preserve">
          <source>In addition to template inheritance and displaying data, Blade also provides convenient shortcuts for common PHP control structures, such as conditional statements and loops. These shortcuts provide a very clean, terse way of working with PHP control structures, while also remaining familiar to their PHP counterparts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa58235aae53e56d31a96a040944a5e6e8845a40" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;code&gt;save&lt;/code&gt; and &lt;code&gt;saveMany&lt;/code&gt; methods, you may also use the &lt;code&gt;create&lt;/code&gt; method, which accepts an array of attributes, creates a model, and inserts it into the database. Again, the difference between &lt;code&gt;save&lt;/code&gt; and &lt;code&gt;create&lt;/code&gt; is that &lt;code&gt;save&lt;/code&gt; accepts a full Eloquent model instance while &lt;code&gt;create&lt;/code&gt; accepts a plain PHP &lt;code&gt;array&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0191097b2321ae8283a95fb778341a273e04b21" translate="yes" xml:space="preserve">
          <source>In addition to the column types listed above, there are several column &quot;modifiers&quot; you may use while adding a column to a database table. For example, to make the column &quot;nullable&quot;, you may use the &lt;code&gt;nullable&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75591e542c79c63631414d694fde549884242911" translate="yes" xml:space="preserve">
          <source>In addition to the commands provided with Artisan, you may also build your own custom commands. Commands are typically stored in the &lt;code&gt;app/Console/Commands&lt;/code&gt; directory; however, you are free to choose your own storage location as long as your commands can be loaded by Composer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ede65a7682bfc030932aca5e2ca6376901402f" translate="yes" xml:space="preserve">
          <source>In addition to the conditional directives already discussed, the &lt;code&gt;@isset&lt;/code&gt; and &lt;code&gt;@empty&lt;/code&gt; directives may be used as convenient shortcuts for their respective PHP functions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e7dfb9786159d071c4fc0af06311820cce04316" translate="yes" xml:space="preserve">
          <source>In addition to the data you specify, broadcast notifications will also contain a &lt;code&gt;type&lt;/code&gt; field containing the class name of the notification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a03939d181da8df62f16d6ae74e901f434e029a4" translate="yes" xml:space="preserve">
          <source>In addition to the default &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;, &lt;code&gt;database&lt;/code&gt;, and &lt;code&gt;password&lt;/code&gt; server configuration options, PhpRedis supports the following additional connection parameters: &lt;code&gt;persistent&lt;/code&gt;, &lt;code&gt;prefix&lt;/code&gt;, &lt;code&gt;read_timeout&lt;/code&gt; and &lt;code&gt;timeout&lt;/code&gt;. You may add any of these options to your Redis server configuration in the &lt;code&gt;config/database.php&lt;/code&gt; configuration file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cb824651cec5379b5fc8b7d4e59dc163541a1ee" translate="yes" xml:space="preserve">
          <source>In addition to the default &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;, &lt;code&gt;database&lt;/code&gt;, and &lt;code&gt;password&lt;/code&gt; server configuration options, Predis supports additional &lt;a href=&quot;https://github.com/nrk/predis/wiki/Connection-Parameters&quot;&gt;connection parameters&lt;/a&gt; that may be defined for each of your Redis servers. To utilize these additional configuration options, add them to your Redis server configuration in the &lt;code&gt;config/database.php&lt;/code&gt; configuration file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d213f16e19f0555fbca0bfa7b5b7268c63911f" translate="yes" xml:space="preserve">
          <source>In addition to the default methods defined on pages, you may define additional methods which may be used throughout your tests. For example, let's imagine we are building a music management application. A common action for one page of the application might be to create a playlist. Instead of re-writing the logic to create a playlist in each test, you may define a &lt;code&gt;createPlaylist&lt;/code&gt; method on a page class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d98a52030597dcd1b93cd7e5cb5c03c9267500b6" translate="yes" xml:space="preserve">
          <source>In addition to traditional polymorphic relations, you may also define &quot;many-to-many&quot; polymorphic relations. For example, a blog &lt;code&gt;Post&lt;/code&gt; and &lt;code&gt;Video&lt;/code&gt; model could share a polymorphic relation to a &lt;code&gt;Tag&lt;/code&gt; model. Using a many-to-many polymorphic relation allows you to have a single list of unique tags that are shared across blog posts and videos. First, let's examine the table structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d635de2fae364e81cf749d3d916a3f78911e8f8" translate="yes" xml:space="preserve">
          <source>In addition to typical, form based authentication, Laravel also provides a simple, convenient way to authenticate with OAuth providers using &lt;a href=&quot;https://github.com/laravel/socialite&quot;&gt;Laravel Socialite&lt;/a&gt;. Socialite currently supports authentication with Facebook, Twitter, LinkedIn, Google, GitHub and Bitbucket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95d77040361e26995411dd94be7132037cf94f43" translate="yes" xml:space="preserve">
          <source>In addition to using the &lt;code&gt;Cache&lt;/code&gt; facade or &lt;a href=&quot;contracts&quot;&gt;cache contract&lt;/a&gt;, you may also use the global &lt;code&gt;cache&lt;/code&gt; function to retrieve and store data via the cache. When the &lt;code&gt;cache&lt;/code&gt; function is called with a single, string argument, it will return the value of the given key:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca21a77d226920f2d0caa2f5693c20b5abb1e93c" translate="yes" xml:space="preserve">
          <source>In addition, Eloquent assumes that the primary key is an incrementing integer value, which means that by default the primary key will be cast to an &lt;code&gt;int&lt;/code&gt; automatically. If you wish to use a non-incrementing or a non-numeric primary key you must set the public &lt;code&gt;$incrementing&lt;/code&gt; property on your model to &lt;code&gt;false&lt;/code&gt;. If your primary key is not an integer, you should set the protected &lt;code&gt;$keyType&lt;/code&gt; property on your model to &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d829f37e367148c6f97713cd101e5600123aa308" translate="yes" xml:space="preserve">
          <source>In addition, if you start ChromeDriver on a port other than 9515, you should modify the &lt;code&gt;driver&lt;/code&gt; method of the same class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b2bd34abcfa759b004e3a5f60ece6adebdcd973" translate="yes" xml:space="preserve">
          <source>In addition, new pivot records will receive this value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9b532401dadd1a8e48af290963c5d0424fc3f41" translate="yes" xml:space="preserve">
          <source>In addition, the &lt;code&gt;cursor&lt;/code&gt; method was added to the contract:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88e0bc06173864580da40e7e98b618a6b1aa9e71" translate="yes" xml:space="preserve">
          <source>In addition, when you depend on simple interfaces, your code is easier to understand and maintain. Rather than tracking down which methods are available to you within a large, complicated class, you can refer to a simple, clean interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11081d72d654fe760529dae87e6ca38a9eacade7" translate="yes" xml:space="preserve">
          <source>In addition, you can pass a third argument containing the new items to replace the items removed from the collection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb91e32ab99488935a9b44ea6801f9366e196e7a" translate="yes" xml:space="preserve">
          <source>In addition, you may create a &lt;code&gt;.env.testing&lt;/code&gt; file in the root of your project. This file will override the &lt;code&gt;.env&lt;/code&gt; file when running PHPUnit tests or executing Artisan commands with the &lt;code&gt;--env=testing&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b51a09732cbe19c4c96fdaa54bf1747a08c3b674" translate="yes" xml:space="preserve">
          <source>In addition, you may define a global &quot;reply_to&quot; address within your &lt;code&gt;config/mail.php&lt;/code&gt; configuration file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="948ce3924c5025790bf07cf0d2fa8872fd6fc5d5" translate="yes" xml:space="preserve">
          <source>In addition, you may pass your own callback to determine which values of the collection to sum:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ff2cd9cab28f5252f3d4d1ff4b3f1e9622673d2" translate="yes" xml:space="preserve">
          <source>In addition, you may return a &lt;a href=&quot;mail&quot;&gt;mailable object&lt;/a&gt; from the &lt;code&gt;toMail&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9df1ac9ec080df44cd06e9895ee7e0dcb44e9bb" translate="yes" xml:space="preserve">
          <source>In addition, you may use any of the supported PHP versions via the CLI:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aaebdb375ec527d7b5be490b38d3e98463668e8" translate="yes" xml:space="preserve">
          <source>In contrast, this statement would remove only caches tagged with &lt;code&gt;authors&lt;/code&gt;, so &lt;code&gt;Anne&lt;/code&gt; would be removed, but not &lt;code&gt;John&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a82448c31f7932c1e26db1e0369773877acb5fa" translate="yes" xml:space="preserve">
          <source>In essence, resources are simple. They only need to transform a given model into an array. So, each resource contains a &lt;code&gt;toArray&lt;/code&gt; method which translates your model's attributes into an API friendly array that can be returned to your users:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7043ade0b8934115fb7d17f2ae03dfa4b0808920" translate="yes" xml:space="preserve">
          <source>In many modern web applications, WebSockets are used to implement realtime, live-updating user interfaces. When some data is updated on the server, a message is typically sent over a WebSocket connection to be handled by the client. This provides a more robust, efficient alternative to continually polling your application for changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="710752a704aa3cb5874d2eb8a186bb31779e55c3" translate="yes" xml:space="preserve">
          <source>In most cases, you will probably specify your custom messages in a language file instead of passing them directly to the &lt;code&gt;Validator&lt;/code&gt;. To do so, add your messages to &lt;code&gt;custom&lt;/code&gt; array in the &lt;code&gt;resources/lang/xx/validation.php&lt;/code&gt; language file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dc25fbc8f94adb5da43252429cdf2e79ad3a3cb" translate="yes" xml:space="preserve">
          <source>In order to send the email when a user is registered, you should register following events and listeners in your &lt;a href=&quot;https://github.com/laravel/laravel/blob/master/app/Providers/EventServiceProvider.php&quot;&gt;App\Providers\EventServiceProvider&lt;/a&gt; class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe535f1ce45de287f6e2ad5cac81394cd30e74d5" translate="yes" xml:space="preserve">
          <source>In order to set up the custom filesystem you will need a Flysystem adapter. Let's add a community maintained Dropbox adapter to our project:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee0ee2d646ee15ce80bef9f60fa59963b6ac183" translate="yes" xml:space="preserve">
          <source>In order to use Minio you will need to adjust the S3 disk configuration in your &lt;code&gt;config/filesystems.php&lt;/code&gt; configuration file. You will need to add the &lt;code&gt;use_path_style_endpoint&lt;/code&gt; option to the disk configuration, as well as change the &lt;code&gt;url&lt;/code&gt; key to &lt;code&gt;endpoint&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03ec686aeac3fb4bc00fb711f63a57e8c2031a28" translate="yes" xml:space="preserve">
          <source>In order to use the &lt;code&gt;database&lt;/code&gt; queue driver, you will need a database table to hold the jobs. To generate a migration that creates this table, run the &lt;code&gt;queue:table&lt;/code&gt; Artisan command. Once the migration has been created, you may migrate your database using the &lt;code&gt;migrate&lt;/code&gt; command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ccc027947d23a9854042722204bb6441049420" translate="yes" xml:space="preserve">
          <source>In order to use the &lt;code&gt;redis&lt;/code&gt; queue driver, you should configure a Redis database connection in your &lt;code&gt;config/database.php&lt;/code&gt; configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d600376c64629a768a74f2d5606a0cff9fa397f6" translate="yes" xml:space="preserve">
          <source>In order to use the &lt;code&gt;verified&lt;/code&gt; middleware so that only verified users may access a given route, you will need to update the &lt;code&gt;$routeMiddleware&lt;/code&gt; property of your &lt;code&gt;app/Http/Kernel.php&lt;/code&gt; file to include the new middleware:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c49768cb4c406065b8e8949ec68799dc9b7c2c15" translate="yes" xml:space="preserve">
          <source>In order to use the Passport Vue components, you must be using the &lt;a href=&quot;https://vuejs.org&quot;&gt;Vue&lt;/a&gt; JavaScript framework. These components also use the Bootstrap CSS framework. However, even if you are not using these tools, the components serve as a valuable reference for your own frontend implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e260b43c0735fe5a065c9370ac4726b62d40ee3" translate="yes" xml:space="preserve">
          <source>In other frameworks, pagination can be very painful. Laravel's paginator is integrated with the &lt;a href=&quot;queries&quot;&gt;query builder&lt;/a&gt; and &lt;a href=&quot;eloquent&quot;&gt;Eloquent ORM&lt;/a&gt; and provides convenient, easy-to-use pagination of database results out of the box. The HTML generated by the paginator is compatible with the &lt;a href=&quot;https://getbootstrap.com/&quot;&gt;Bootstrap CSS framework&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb4ef64462c2802b01a5b8d294165754298edf9f" translate="yes" xml:space="preserve">
          <source>In other words, a blazing fast Laravel development environment that uses roughly 7 MB of RAM. Valet isn't a complete replacement for Vagrant or Homestead, but provides a great alternative if you want flexible basics, prefer extreme speed, or are working on a machine with a limited amount of RAM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef5f311aaf39c3e86ab46093fb659cca14be0c01" translate="yes" xml:space="preserve">
          <source>In other words, the &lt;code&gt;Paginator&lt;/code&gt; corresponds to the &lt;code&gt;simplePaginate&lt;/code&gt; method on the query builder and Eloquent, while the &lt;code&gt;LengthAwarePaginator&lt;/code&gt; corresponds to the &lt;code&gt;paginate&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d650a501c1ab6d513853e5a94f7f274f959f83f0" translate="yes" xml:space="preserve">
          <source>In our application, let's assume we have a page that allows users to view the shipping status for their orders. Let's also assume that a &lt;code&gt;ShippingStatusUpdated&lt;/code&gt; event is fired when a shipping status update is processed by the application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a3cd47f01019b5b082b694fc528aefc662f34d4" translate="yes" xml:space="preserve">
          <source>In previous versions of Laravel, authorization gates and policies automatically returned &lt;code&gt;false&lt;/code&gt; for unauthenticated visitors to your application. However, you may now allow guests to pass through authorization checks by declaring an &quot;optional&quot; type-hint or supplying a &lt;code&gt;null&lt;/code&gt; default value for the user argument definition:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="514a63a5ef58056a11eb51ebd7256a601d6d2b16" translate="yes" xml:space="preserve">
          <source>In previous versions of Laravel, the &lt;code&gt;validate&lt;/code&gt; method did not return the correct data for nested validation rules. This has been corrected in Laravel 5.7:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c3f929f96bec6977b9484ac2b0a0c84778ae5e9" translate="yes" xml:space="preserve">
          <source>In some situations, it's useful to embed PHP code into your views. You can use the Blade &lt;code&gt;@php&lt;/code&gt; directive to execute a block of plain PHP within your template:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54fe8fea5e3227081e02b41359ce281c85666670" translate="yes" xml:space="preserve">
          <source>In some situations, you may wish to run validation checks against a field &lt;strong&gt;only&lt;/strong&gt; if that field is present in the input array. To quickly accomplish this, add the &lt;code&gt;sometimes&lt;/code&gt; rule to your rule list:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b4114db7494f5f3ee10842a6eac9f7f983f0c1e" translate="yes" xml:space="preserve">
          <source>In the example above, Eloquent will try to match the &lt;code&gt;post_id&lt;/code&gt; from the &lt;code&gt;Comment&lt;/code&gt; model to an &lt;code&gt;id&lt;/code&gt; on the &lt;code&gt;Post&lt;/code&gt; model. Eloquent determines the default foreign key name by examining the name of the relationship method and suffixing the method name with a &lt;code&gt;_&lt;/code&gt; followed by the name of the primary key column. However, if the foreign key on the &lt;code&gt;Comment&lt;/code&gt; model is not &lt;code&gt;post_id&lt;/code&gt;, you may pass a custom key name as the second argument to the &lt;code&gt;belongsTo&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d4064d13dd2c6c23ef09d77de2297b667443164" translate="yes" xml:space="preserve">
          <source>In the example above, Eloquent will try to match the &lt;code&gt;user_id&lt;/code&gt; from the &lt;code&gt;Phone&lt;/code&gt; model to an &lt;code&gt;id&lt;/code&gt; on the &lt;code&gt;User&lt;/code&gt; model. Eloquent determines the default foreign key name by examining the name of the relationship method and suffixing the method name with &lt;code&gt;_id&lt;/code&gt;. However, if the foreign key on the &lt;code&gt;Phone&lt;/code&gt; model is not &lt;code&gt;user_id&lt;/code&gt;, you may pass a custom key name as the second argument to the &lt;code&gt;belongsTo&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a16dc4dd4e20c0a8d0100b865c468cd2475de713" translate="yes" xml:space="preserve">
          <source>In the example above, the &lt;code&gt;email&lt;/code&gt; field will only be validated if it is present in the &lt;code&gt;$data&lt;/code&gt; array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8db570874f2b9509d179ccc3331164264361c9dc" translate="yes" xml:space="preserve">
          <source>In the example above, the &lt;code&gt;key&lt;/code&gt; may be any string that uniquely identifies the type of job you would like to rate limit. For example, you may wish to construct the key based on the class name of the job and the IDs of the Eloquent models it operates on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa373ca2522dd6f61e98548506b9ec5e0bc2fed0" translate="yes" xml:space="preserve">
          <source>In the example above, we are retrieving the model from the database before calling the &lt;code&gt;delete&lt;/code&gt; method. However, if you know the primary key of the model, you may delete the model without retrieving it by calling the &lt;code&gt;destroy&lt;/code&gt; method. In addition to a single primary key as its argument, the &lt;code&gt;destroy&lt;/code&gt; method will accept multiple primary keys, an array of primary keys, or a &lt;a href=&quot;collections&quot;&gt;collection&lt;/a&gt; of primary keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="499ced5540ed367190dc241ec2646b9a76539b78" translate="yes" xml:space="preserve">
          <source>In the past, you may have generated a Cron entry for each task you needed to schedule on your server. However, this can quickly become a pain, because your task schedule is no longer in source control and you must SSH into your server to add additional Cron entries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0742ab6464609f3aa0f98430a0fb6ac2bfe20748" translate="yes" xml:space="preserve">
          <source>In these examples, &lt;code&gt;email&lt;/code&gt; is not a required option, it is merely used as an example. You should use whatever column name corresponds to a &quot;username&quot; in your database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b355dc364cf53d2a449cfc343efbeb9c87edc6bc" translate="yes" xml:space="preserve">
          <source>In this class, the code is tightly coupled to a given cache implementation. It is tightly coupled because we are depending on a concrete Cache class from a package vendor. If the API of that package changes our code must change as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e84ad68ef842caca84c55e03c50f080ab009cc7a" translate="yes" xml:space="preserve">
          <source>In this example we are just sending a single line of text to Slack, which will create a message that looks like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6fe99faef1ab5444158dcd871e6adf3eab94a6c" translate="yes" xml:space="preserve">
          <source>In this example, Eloquent will only eager load posts where the post's &lt;code&gt;title&lt;/code&gt; column contains the word &lt;code&gt;first&lt;/code&gt;. Of course, you may call other &lt;a href=&quot;queries&quot;&gt;query builder&lt;/a&gt; methods to further customize the eager loading operation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ea7c3bd4538d03bc179982ef5d539d84b287cfa" translate="yes" xml:space="preserve">
          <source>In this example, all notifications sent to &lt;code&gt;App\User&lt;/code&gt; instances via the &lt;code&gt;broadcast&lt;/code&gt; channel would be received by the callback. A channel authorization callback for the &lt;code&gt;App.User.{id}&lt;/code&gt; channel is included in the default &lt;code&gt;BroadcastServiceProvider&lt;/code&gt; that ships with the Laravel framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17bd5e9027ef6615195b43c201f7c3a83fa0d857" translate="yes" xml:space="preserve">
          <source>In this example, calling &lt;code&gt;flatten&lt;/code&gt; without providing the depth would have also flattened the nested arrays, resulting in &lt;code&gt;['iPhone 6S', 'Apple', 'Galaxy S7', 'Samsung']&lt;/code&gt;. Providing a depth allows you to restrict the levels of nested arrays that will be flattened.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d00c8d5a6f13da758053f52e55ddde5b10fea943" translate="yes" xml:space="preserve">
          <source>In this example, if the &lt;code&gt;unique&lt;/code&gt; rule on the &lt;code&gt;title&lt;/code&gt; attribute fails, the &lt;code&gt;max&lt;/code&gt; rule will not be checked. Rules will be validated in the order they are assigned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d1618c5c5c7dd607a3a738fab8a4590035678e4" translate="yes" xml:space="preserve">
          <source>In this example, if the relationship has not been loaded, the &lt;code&gt;posts&lt;/code&gt; key will be removed from the resource response entirely before it is sent to the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79d3ab1d03601e58e1892460595a8bdf2308d22a" translate="yes" xml:space="preserve">
          <source>In this example, note that we were able to pass an &lt;a href=&quot;eloquent&quot;&gt;Eloquent model&lt;/a&gt; directly into the queued job's constructor. Because of the &lt;code&gt;SerializesModels&lt;/code&gt; trait that the job is using, Eloquent models will be gracefully serialized and unserialized when the job is processing. If your queued job accepts an Eloquent model in its constructor, only the identifier for the model will be serialized onto the queue. When the job is actually handled, the queue system will automatically re-retrieve the full model instance from the database. It's all totally transparent to your application and prevents issues that can arise from serializing full Eloquent model instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c04c27920c40b1d3545c266711d9ed010b2d9359" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;--queue&lt;/code&gt; switch may be specified when calling the Artisan command. If the &lt;code&gt;--queue&lt;/code&gt; switch is passed, the value of the option will be &lt;code&gt;true&lt;/code&gt;. Otherwise, the value will be &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dce48860f3816ee07f41816e16934390f49cbd2" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;:attribute&lt;/code&gt; place-holder will be replaced by the actual name of the field under validation. You may also utilize other place-holders in validation messages. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef0bf5dc5e5e98ecff7390e69f67c14ef0ce6f5d" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;@&lt;/code&gt; symbol will be removed by Blade; however, &lt;code&gt;{{ name }}&lt;/code&gt; expression will remain untouched by the Blade engine, allowing it to instead be rendered by your JavaScript framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ebad6e611f0542c43e010f57631959e0216f422" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;UserController&lt;/code&gt; needs to retrieve users from a data source. So, we will &lt;strong&gt;inject&lt;/strong&gt; a service that is able to retrieve users. In this context, our &lt;code&gt;UserRepository&lt;/code&gt; most likely uses &lt;a href=&quot;eloquent&quot;&gt;Eloquent&lt;/a&gt; to retrieve user information from the database. However, since the repository is injected, we are able to easily swap it out with another implementation. We are also able to easily &quot;mock&quot;, or create a dummy implementation of the &lt;code&gt;UserRepository&lt;/code&gt; when testing our application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c932e21f54ca1bcf8044bdb4b4b52d4310252766" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;emails:send&lt;/code&gt;&lt;a href=&quot;artisan&quot;&gt;Artisan command&lt;/a&gt; will be run every minute if it is not already running. The &lt;code&gt;withoutOverlapping&lt;/code&gt; method is especially useful if you have tasks that vary drastically in their execution time, preventing you from predicting exactly how long a given task will take.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="408984634b6aa1b5a1717afd37dcae4935f78860" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;numprocs&lt;/code&gt; directive will instruct Supervisor to run 8 &lt;code&gt;queue:work&lt;/code&gt; processes and monitor all of them, automatically restarting them if they fail. Of course, you should change the &lt;code&gt;queue:work sqs&lt;/code&gt; portion of the &lt;code&gt;command&lt;/code&gt; directive to reflect your desired queue connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f6d9afd2161b8d8f0724a4fa5a2570f4f38d826" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;secret&lt;/code&gt; key will only be returned in the final resource response if the authenticated user's &lt;code&gt;isAdmin&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt;. If the method returns &lt;code&gt;false&lt;/code&gt;, the &lt;code&gt;secret&lt;/code&gt; key will be removed from the resource response entirely before it is sent back to the client. The &lt;code&gt;when&lt;/code&gt; method allows you to expressively define your resources without resorting to conditional statements when building the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e64d03449b77c86a1827b5b7d672621a3ce38c55" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;setFirstNameAttribute&lt;/code&gt; function will be called with the value &lt;code&gt;Sally&lt;/code&gt;. The mutator will then apply the &lt;code&gt;strtolower&lt;/code&gt; function to the name and set its resulting value in the internal &lt;code&gt;$attributes&lt;/code&gt; array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80470b87222f897074811578583ee513a1d0f6cb" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;sidebar&lt;/code&gt; section is utilizing the &lt;code&gt;@parent&lt;/code&gt; directive to append (rather than overwriting) content to the layout's sidebar. The &lt;code&gt;@parent&lt;/code&gt; directive will be replaced by the content of the layout when the view is rendered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f24299ecfe690d1ac8f7b68de13e93f550323a7" translate="yes" xml:space="preserve">
          <source>In this example, the only argument passed to the &lt;code&gt;paginate&lt;/code&gt; method is the number of items you would like displayed &quot;per page&quot;. In this case, let's specify that we would like to display &lt;code&gt;15&lt;/code&gt; items per page:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="294cf6c5faa854b02b152515e47f8c4080c92f42" translate="yes" xml:space="preserve">
          <source>In this example, the user may pass a value for the option like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f917f182027ac94bf72b5a7df0a4ba77a33635dd" translate="yes" xml:space="preserve">
          <source>In this example, we are specifying that the &lt;code&gt;publish_at&lt;/code&gt; field may be either &lt;code&gt;null&lt;/code&gt; or a valid date representation. If the &lt;code&gt;nullable&lt;/code&gt; modifier is not added to the rule definition, the validator would consider &lt;code&gt;null&lt;/code&gt; an invalid date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7645e6fd1e91dfad4e70083d2e092be76ea5b9c0" translate="yes" xml:space="preserve">
          <source>In this example, we assign the &lt;code&gt;name&lt;/code&gt; parameter from the incoming HTTP request to the &lt;code&gt;name&lt;/code&gt; attribute of the &lt;code&gt;App\Flight&lt;/code&gt; model instance. When we call the &lt;code&gt;save&lt;/code&gt; method, a record will be inserted into the database. The &lt;code&gt;created_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt; timestamps will automatically be set when the &lt;code&gt;save&lt;/code&gt; method is called, so there is no need to set them manually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b409a867b088dba02674a12d19ff62006e3cba6" translate="yes" xml:space="preserve">
          <source>In this example, we register a greeting, a line of text, a call to action, and then another line of text. These methods provided by the &lt;code&gt;MailMessage&lt;/code&gt; object make it simple and fast to format small transactional emails. The mail channel will then translate the message components into a nice, responsive HTML email template with a plain-text counterpart. Here is an example of an email generated by the &lt;code&gt;mail&lt;/code&gt; channel:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55dd4321c0759a519afbc6bc62fb828fc475d0b1" translate="yes" xml:space="preserve">
          <source>In this example, we used a traditional form to send data to the application. However, many applications use AJAX requests. When using the &lt;code&gt;validate&lt;/code&gt; method during an AJAX request, Laravel will not generate a redirect response. Instead, Laravel generates a JSON response containing all of the validation errors. This JSON response will be sent with a 422 HTTP status code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c8df09327d1a61c868a95781417326ce057d315" translate="yes" xml:space="preserve">
          <source>In this example, we'll attach a relation to some created models. When using the &lt;code&gt;create&lt;/code&gt; method to create multiple models, an Eloquent &lt;a href=&quot;eloquent-collections&quot;&gt;collection instance&lt;/a&gt; is returned, allowing you to use any of the convenient functions provided by the collection, such as &lt;code&gt;each&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48aa07114d1dbabd827aec6417e740a6ed152a8b" translate="yes" xml:space="preserve">
          <source>In this example, we're passing the &lt;code&gt;can&lt;/code&gt; middleware two arguments. The first is the name of the action we wish to authorize and the second is the route parameter we wish to pass to the policy method. In this case, since we are using &lt;a href=&quot;routing#implicit-binding&quot;&gt;implicit model binding&lt;/a&gt;, a &lt;code&gt;Post&lt;/code&gt; model will be passed to the policy method. If the user is not authorized to perform the given action, a HTTP response with a &lt;code&gt;403&lt;/code&gt; status code will be generated by the middleware.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31cf8434e7fd0b7b62c51b005cf3d7214d24fc05" translate="yes" xml:space="preserve">
          <source>In this overview you will learn how to write your own service providers and register them with your Laravel application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a371cb1ae5274fad95e57ac9993ae7c792d4583" translate="yes" xml:space="preserve">
          <source>In web applications, one of the most common use-cases for storing files is storing user uploaded files such as profile pictures, photos, and documents. Laravel makes it very easy to store uploaded files using the &lt;code&gt;store&lt;/code&gt; method on an uploaded file instance. Call the &lt;code&gt;store&lt;/code&gt; method with the path at which you wish to store the uploaded file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce954e9a3774e22208ca0f27349cf1a8281d83fc" translate="yes" xml:space="preserve">
          <source>In your &lt;code&gt;auth.php&lt;/code&gt; configuration file, you may configure multiple &quot;guards&quot;, which may be used to define authentication behavior for multiple user tables. You can customize the included &lt;code&gt;ResetPasswordController&lt;/code&gt; to use the guard of your choice by overriding the &lt;code&gt;guard&lt;/code&gt; method on the controller. This method should return a guard instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="243a61a48b1464612ee3b00761d5251a4d87ad3f" translate="yes" xml:space="preserve">
          <source>In your &lt;code&gt;auth.php&lt;/code&gt; configuration file, you may configure multiple password &quot;brokers&quot;, which may be used to reset passwords on multiple user tables. You can customize the included &lt;code&gt;ForgotPasswordController&lt;/code&gt; and &lt;code&gt;ResetPasswordController&lt;/code&gt; to use the broker of your choice by overriding the &lt;code&gt;broker&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1524288543700d7d9e32205b8fd0adb4e8cf8ac1" translate="yes" xml:space="preserve">
          <source>In your &lt;code&gt;config/queue.php&lt;/code&gt; configuration file, each queue connection defines a &lt;code&gt;retry_after&lt;/code&gt; option. This option specifies how many seconds the queue connection should wait before retrying a job that is being processed. For example, if the value of &lt;code&gt;retry_after&lt;/code&gt; is set to &lt;code&gt;90&lt;/code&gt;, the job will be released back onto the queue if it has been processing for 90 seconds without being deleted. Typically, you should set the &lt;code&gt;retry_after&lt;/code&gt; value to the maximum number of seconds your jobs should reasonably take to complete processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a5eae4878fa1d29183fea69ff2e42fec94a9e1" translate="yes" xml:space="preserve">
          <source>In::__construct()</source>
          <target state="translated">In::__construct()</target>
        </trans-unit>
        <trans-unit id="1ada18d61a4a2f9d0f12e01cd177a5007beeb936" translate="yes" xml:space="preserve">
          <source>In::__toString()</source>
          <target state="translated">In::__toString()</target>
        </trans-unit>
        <trans-unit id="58f82d0812f7117dc6f2e8f0a267abdc22110de3" translate="yes" xml:space="preserve">
          <source>Included Software</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53bed8a85a2245a3110061dfbda8a710ae7bac44" translate="yes" xml:space="preserve">
          <source>Including Soft Deleted Models</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60b4bee006119a74c478faf1735ae28fd427a1da" translate="yes" xml:space="preserve">
          <source>Including Sub-Views</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e6b64578fe784042a30fcd187761db768f450bb" translate="yes" xml:space="preserve">
          <source>Increment &amp;amp; Decrement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ed656d77828bd104d07eefa11edb709fd88fd24" translate="yes" xml:space="preserve">
          <source>Increment a column's value by a given amount.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4483e397144f43243f9e02d68088cac7428c934" translate="yes" xml:space="preserve">
          <source>Increment or decrement an item in the cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f31526e48256ed6e974c64a774df5e928fac32d3" translate="yes" xml:space="preserve">
          <source>Increment the counter for a given key for a given decay time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74a7a5ac36856023c6f877a164006194f1934cf0" translate="yes" xml:space="preserve">
          <source>Increment the login attempts for the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2bc3ea2a13350bb4bfb5ddd0834d26e0d26a359" translate="yes" xml:space="preserve">
          <source>Increment the number of times the job has been attempted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a0b0dc6d6546e3695a3c0b6d4e3cdbeb46b3952" translate="yes" xml:space="preserve">
          <source>Increment the rendering counter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a235ff37d4244756ff4c714a1b9764197ffe1f6" translate="yes" xml:space="preserve">
          <source>Increment the top loop's indices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbf36fd3c20d20f78788a458b293e1b64728b151" translate="yes" xml:space="preserve">
          <source>Increment the underlying attribute value and sync with original.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd462300156b4c9217ac341bce7277930e8c13a9" translate="yes" xml:space="preserve">
          <source>Increment the value of an item in the cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71eddc5157e377fc43bbc60eca7ecaa1eacf91ab" translate="yes" xml:space="preserve">
          <source>Increment the value of an item in the session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b9529aa83638faa3de648e21f86dbd495a97d46" translate="yes" xml:space="preserve">
          <source>Incrementing / Decrementing Values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ffcc65e726c58fe174e651b450b752578d81c56" translate="yes" xml:space="preserve">
          <source>Index Lengths &amp;amp; MySQL / MariaDB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f642ee196088372ea886186c6c617515599afd3f" translate="yes" xml:space="preserve">
          <source>Indexes</source>
          <target state="translated">Indexes</target>
        </trans-unit>
        <trans-unit id="9951861c21df18489a5872209655d6f9039b5e2a" translate="yes" xml:space="preserve">
          <source>Indexing</source>
          <target state="translated">Indexing</target>
        </trans-unit>
        <trans-unit id="8483f571e1531b3290891a35fc6218a587d0b11e" translate="yes" xml:space="preserve">
          <source>Indicate if any records have been modified.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
