<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="">
    <body>
      <group id="">
        <trans-unit id="c75ba7263fda8c4703639bf91fa85e1de8b70652" translate="yes" xml:space="preserve">
          <source>Indicate if the job should be deleted when models are missing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d490e7c187516a679ff603fed4da08be329f2ad" translate="yes" xml:space="preserve">
          <source>Indicate that Bootstrap 3 styling should be used for generated links.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e320d89cffa329dcddb7488c45d10128f3fffbe9" translate="yes" xml:space="preserve">
          <source>Indicate that the given columns should be dropped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ada10c8d8018395aa0924361528092dbeda3713" translate="yes" xml:space="preserve">
          <source>Indicate that the given columns should be renamed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="112b10887f4cab70e2e100e41903ee856a026a10" translate="yes" xml:space="preserve">
          <source>Indicate that the given foreign key should be dropped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bb761eb2d7f273838ee8e95a1facc47cdd0f842" translate="yes" xml:space="preserve">
          <source>Indicate that the given index should be dropped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="557da3914113389329c23c0c7e75a3509252cbe4" translate="yes" xml:space="preserve">
          <source>Indicate that the given indexes should be renamed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d0d2405deb02fb2261e398f8b6a274cb11bad52" translate="yes" xml:space="preserve">
          <source>Indicate that the given primary key should be dropped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f8bc6bf350ef412195675e4686b69f2a66a88bd" translate="yes" xml:space="preserve">
          <source>Indicate that the given spatial index should be dropped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d949705ca337b2f864b4225ea7f476d1d27c8791" translate="yes" xml:space="preserve">
          <source>Indicate that the given unique key should be dropped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e0577ff1f7edce5a456615ad7bed1d5349acb5d" translate="yes" xml:space="preserve">
          <source>Indicate that the notification gives information about a successful operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da6af317c9fa4c9319a160c096ecfec447a033ed" translate="yes" xml:space="preserve">
          <source>Indicate that the notification gives information about a warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1e4d3b4f57c6d9fb779163ae917292d46144143" translate="yes" xml:space="preserve">
          <source>Indicate that the notification gives information about an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b2b50614f4011aa2604723ef4a696a347592e6f" translate="yes" xml:space="preserve">
          <source>Indicate that the notification gives information about an operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac57105d7d241e2eb1c1898210eabdff5eb3cd61" translate="yes" xml:space="preserve">
          <source>Indicate that the polymorphic columns should be dropped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="627637fc17d47b8baf22e3828d1909d19fbc71c2" translate="yes" xml:space="preserve">
          <source>Indicate that the remember token column should be dropped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecc2bd3df3398642668d30aacc0038b7382ecd23" translate="yes" xml:space="preserve">
          <source>Indicate that the soft delete column should be dropped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0bfc941b3431df313279c6889590a8c140773d3" translate="yes" xml:space="preserve">
          <source>Indicate that the table needs to be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7f5fb99242137a5e0630403eb90fc3240cc3109" translate="yes" xml:space="preserve">
          <source>Indicate that the table needs to be temporary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb7351a1657aa0fd057a74106c77f627c3dd99d0" translate="yes" xml:space="preserve">
          <source>Indicate that the table should be dropped if it exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af6ac437c589e85bac0e93716f54f3baaa3f57bc" translate="yes" xml:space="preserve">
          <source>Indicate that the table should be dropped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5abf3c41c3fc2b34e76227860f1ff41f954e811" translate="yes" xml:space="preserve">
          <source>Indicate that the timestamp columns should be dropped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b75f3bd4244116a0614819b622bc1e5f7f0d048" translate="yes" xml:space="preserve">
          <source>Indicates if APCu is supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b609b93f002b1b303ac64c439e3805d4ce73a5d3" translate="yes" xml:space="preserve">
          <source>Indicates if a default model instance should be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa33171d5ceabaf04509ff62bae5837e829ca47" translate="yes" xml:space="preserve">
          <source>Indicates if a loader has been registered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15fa47fb192181b642e894e6fe76d4b50962320a" translate="yes" xml:space="preserve">
          <source>Indicates if a token user retrieval has been attempted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac55f3a642a77e844031c2e87682e8d4bf06452f" translate="yes" xml:space="preserve">
          <source>Indicates if all mass assignment is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dc592b8177120b66cfff59fca8225fb1cb601b1" translate="yes" xml:space="preserve">
          <source>Indicates if changes have been made to the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a76dad66d6fa3a9ad7ddb044c7fbd6f1d60ee922" translate="yes" xml:space="preserve">
          <source>Indicates if channel names and usernames should be linked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc542ec4c7c7ffad005cee1757a452248c921031" translate="yes" xml:space="preserve">
          <source>Indicates if cookies should be serialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67a420a672e545baa9fc00cdd20e49a510ec9878" translate="yes" xml:space="preserve">
          <source>Indicates if loading of the provider is deferred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="819c4958958edfa0bbf7b31d90c4efb66287ebaf" translate="yes" xml:space="preserve">
          <source>Indicates if the Closure commands have been loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13b41f05162327c1cf5f7cf0d9922770a8a87777" translate="yes" xml:space="preserve">
          <source>Indicates if the IDs are auto-incrementing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7135809d359a24e84a441a0ae83db49705955e70" translate="yes" xml:space="preserve">
          <source>Indicates if the application has &quot;booted&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d44b3cbe4d8057b9d243e8e40788a4cf6d8ae4e" translate="yes" xml:space="preserve">
          <source>Indicates if the application has been bootstrapped before.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eb8b8a5862269bf4227f6af5653b861847edd72" translate="yes" xml:space="preserve">
          <source>Indicates if the command should not overlap itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58ac1184783289f0ac5debf2cd33efcd4921df34" translate="yes" xml:space="preserve">
          <source>Indicates if the command should only be allowed to run on one server for each cron expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="565f31d9388a1d02ca012e569ab58580cf4da075" translate="yes" xml:space="preserve">
          <source>Indicates if the command should run in background.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a4a1918ce4c55f26322059bd89ab12935d25c6f" translate="yes" xml:space="preserve">
          <source>Indicates if the command should run in maintenance mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a43b217aec07fa5a89ffee749c58eeff5c226dc2" translate="yes" xml:space="preserve">
          <source>Indicates if the connection is in a &quot;dry run&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed1fbdbb5048963f325bea6d681c41f3daa62eb4" translate="yes" xml:space="preserve">
          <source>Indicates if the console output should be mocked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="892dc9d8cd9b81d8991db91c318a4859a14b7083" translate="yes" xml:space="preserve">
          <source>Indicates if the job has been deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e20b6b5356745e78630f408c8ab27daf2954aa35" translate="yes" xml:space="preserve">
          <source>Indicates if the job has been released.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e68cbe84b56cd5b885475b54f4a63d5487d00ab" translate="yes" xml:space="preserve">
          <source>Indicates if the job has failed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3340d89ad8eb36d670dfa98adeff0595ca2a4f62" translate="yes" xml:space="preserve">
          <source>Indicates if the loader has been registered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ac0249fffae29d58d7b021bad38afd4078a3300" translate="yes" xml:space="preserve">
          <source>Indicates if the logout method has been called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f367df1017ac91611daa45498899270bab608080" translate="yes" xml:space="preserve">
          <source>Indicates if the model exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcf154256b9fd60f98c1d6a17ed80a897c61dc6e" translate="yes" xml:space="preserve">
          <source>Indicates if the model is currently force deleting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1b48fe4ab3d5c140c347e94e6a20510ed95bbb3" translate="yes" xml:space="preserve">
          <source>Indicates if the model should be timestamped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be575b0b97eb6a237dfc953b5230a095df6911dc" translate="yes" xml:space="preserve">
          <source>Indicates if the model was inserted during the current request lifecycle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29ff77e90fdbaa03314d41d8247ff07b803991b8" translate="yes" xml:space="preserve">
          <source>Indicates if the query returns distinct results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b39233bce7ddbe2ade17f48712d40fa8471f265d" translate="yes" xml:space="preserve">
          <source>Indicates if the relation is adding constraints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a51ca035e76c480a09537be58c8a846b75f66450" translate="yes" xml:space="preserve">
          <source>Indicates if the session was handled for the current request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="162686c761b2e881cb137365290dc2683b4dc9d5" translate="yes" xml:space="preserve">
          <source>Indicates if the test database has been migrated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dec7d2d46b3099ffe3e897c5a889b0f16580d847" translate="yes" xml:space="preserve">
          <source>Indicates if the user should be &quot;remembered&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb38195c439ccb852a08619e7d39677e98e564c" translate="yes" xml:space="preserve">
          <source>Indicates if the user was authenticated via a recaller cookie.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1854bf2fb3f390c4b98fdccfec02cffd2823ee95" translate="yes" xml:space="preserve">
          <source>Indicates if the validation callback failed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1a2b5f7ba4b36cda36543ac5b784fa1ab8bcc67" translate="yes" xml:space="preserve">
          <source>Indicates if the worker is paused.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e76773bd21735ae1e08b04f2e5b1496605c500" translate="yes" xml:space="preserve">
          <source>Indicates if the worker should exit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba3b3d7c679296cd6c7797bf4bc14db1850700f" translate="yes" xml:space="preserve">
          <source>Indicates if the worker should run in maintenance mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80560e08b095aff8b7f03378d1b05fbc762cd0c1" translate="yes" xml:space="preserve">
          <source>Indicates if the worker should stop when queue is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b051ca49a10f714bc7748d070e9fcfa4881cb3" translate="yes" xml:space="preserve">
          <source>Indicates if timestamps are available on the pivot table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="866c5d8efaeab8573c7d32d672f3a420d05e9bb4" translate="yes" xml:space="preserve">
          <source>Indicates if we are connecting the inverse of the relation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a7bde03aecf02a5191da75c71e0eea0ebe796a" translate="yes" xml:space="preserve">
          <source>Indicates if we have made it through the base setUp function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f5c97f92fc127e78082913eefaac1bccb2654b6" translate="yes" xml:space="preserve">
          <source>Indicates if you want a preview of links inlined in the message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="452ec2ae5b8ed0872328b75cd150c60e7ef4df78" translate="yes" xml:space="preserve">
          <source>Indicates if you want a preview of links to media inlined in the message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7021f48ad1fdb91349daf79d434d2d24d98a5aee" translate="yes" xml:space="preserve">
          <source>Indicates that the content should not be displayed side-by-side with other fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a75d29baa4ca9045f6e2f61a052765c804d8e95" translate="yes" xml:space="preserve">
          <source>Indicates whether attributes are snake cased on arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a16faa3c1d6dacc090a913e7e789bc7418e94ba4" translate="yes" xml:space="preserve">
          <source>Indicates whether event dispatcher is set on connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff3d9cec077c7c930832e674bc382f06989ca453" translate="yes" xml:space="preserve">
          <source>Indicates whether output should be appended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bddb38e25ccad4ba110959670b4967d79e93614" translate="yes" xml:space="preserve">
          <source>Indicates whether queries are being logged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd852f8da51b3c6a04e372f940d4a99086e687a6" translate="yes" xml:space="preserve">
          <source>Indicates whether redirects should be followed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39c92eca3ac205ae6a2b649a414032405ef1dc4d" translate="yes" xml:space="preserve">
          <source>Indicates whether row locking is being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc0e78afad07d9f83d97fd67a5fe23eb02a7de8e" translate="yes" xml:space="preserve">
          <source>Indicates whether the XSRF-TOKEN cookie should be set on the response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ec05d38d59abfcd0682bfe74d12cd0608a832c2" translate="yes" xml:space="preserve">
          <source>Indicates whether the command should be shown in the Artisan command list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e5d16fa9ab7dc7d8f3ad2f0b57dfcbf0993df52" translate="yes" xml:space="preserve">
          <source>Indicates whether the route is a fallback route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3153b46f7f7c8a145502271c8b1c6d361e0086f1" translate="yes" xml:space="preserve">
          <source>Indicates whether to perform an algorithm check.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd38d68253cb7dc7fc9c7701dedf10d7453ef61d" translate="yes" xml:space="preserve">
          <source>Indicates whether we are using Memcached version &amp;gt;= 3.0.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9e84908272d623f45fae558d1c743f47b960f52" translate="yes" xml:space="preserve">
          <source>Informal discussion regarding bugs, new features, and implementation of existing features takes place in the &lt;code&gt;#internals&lt;/code&gt; channel of the &lt;a href=&quot;https://discordapp.com/invite/mPZNm7A&quot;&gt;Laravel Discord server&lt;/a&gt;. Taylor Otwell, the maintainer of Laravel, is typically present in the channel on weekdays from 8am-5pm (UTC-06:00 or America/Chicago), and sporadically present in the channel at other times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8385ff66d554caecf61d776861ff14ab31d43d19" translate="yes" xml:space="preserve">
          <source>Initialize and gather data for given attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92763003104ff1d8cbb8c24372263a0f19803de4" translate="yes" xml:space="preserve">
          <source>Initialize any initializable traits on the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c52da5df92e4ef81f1c65f96d2e742faafa8348" translate="yes" xml:space="preserve">
          <source>Initialize the relation on a set of models.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dfc4f26b2c8c5782cda7a79143f3cf06a563e03" translate="yes" xml:space="preserve">
          <source>Initiate a mock expectation on the facade.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="731c60a23f2dec14bd1ae30968b39619a8efba83" translate="yes" xml:space="preserve">
          <source>Inject inline content into a section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cd33da5ea0644ecad822cd6eeb2c97bc15a95bc" translate="yes" xml:space="preserve">
          <source>Injecting a publisher implementation into the method allows us to easily test the method in isolation since we can mock the injected publisher. However, it requires us to always pass a publisher instance each time we call the &lt;code&gt;publish&lt;/code&gt; method. Using real-time facades, we can maintain the same testability while not being required to explicitly pass a &lt;code&gt;Publisher&lt;/code&gt; instance. To generate a real-time facade, prefix the namespace of the imported class with &lt;code&gt;Facades&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2860d2edae8411abdfa46d50321f29af97f5353" translate="yes" xml:space="preserve">
          <source>Inline Attachments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c873c2bd8f9cfed52f04b4c27cf706523f809dab" translate="yes" xml:space="preserve">
          <source>Inner Join Clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b568d47f2e244743b1fd7472db836ef9769c21f8" translate="yes" xml:space="preserve">
          <source>Input</source>
          <target state="translated">Input</target>
        </trans-unit>
        <trans-unit id="d3c0b0a046955869eb5bc4ca617d5af2783792f2" translate="yes" xml:space="preserve">
          <source>Input (Support\Facades)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef6caaf1ffac65c55e3879237f23b9e4cd5b35fe" translate="yes" xml:space="preserve">
          <source>Input Arrays</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40c12599fca3ae01774b7e21ce28b44be9649a39" translate="yes" xml:space="preserve">
          <source>Input Descriptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9406d091f0ebc551b72ab17d3bfc0d682fcdac2d" translate="yes" xml:space="preserve">
          <source>Input Trimming &amp;amp; Normalization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1d256c1c254179d60f7fbc672a72f1269b8acec" translate="yes" xml:space="preserve">
          <source>Input::get()</source>
          <target state="translated">Input::get()</target>
        </trans-unit>
        <trans-unit id="b344d1376af5b9748c1d185628f25d6bd5a0d4c1" translate="yes" xml:space="preserve">
          <source>Input::getFacadeAccessor()</source>
          <target state="translated">Input::getFacadeAccessor()</target>
        </trans-unit>
        <trans-unit id="045c55dbf354c1b52c8c6faa021bac809f3caea8" translate="yes" xml:space="preserve">
          <source>InputArgument</source>
          <target state="translated">InputArgument</target>
        </trans-unit>
        <trans-unit id="78defe704adfd4c9b269b546b93b72acbfc14c61" translate="yes" xml:space="preserve">
          <source>InputDefinition</source>
          <target state="translated">InputDefinition</target>
        </trans-unit>
        <trans-unit id="19b5be82bdfcdb06329fa85529e8a15629e22c27" translate="yes" xml:space="preserve">
          <source>InputInterface</source>
          <target state="translated">InputInterface</target>
        </trans-unit>
        <trans-unit id="d893e20cecb319b7ceb0fa864838de1756cd03ae" translate="yes" xml:space="preserve">
          <source>InputInterface|null</source>
          <target state="translated">InputInterface|null</target>
        </trans-unit>
        <trans-unit id="48a7b2c749b08c7d5dddff2f201247dd77db5e7c" translate="yes" xml:space="preserve">
          <source>InputOption</source>
          <target state="translated">InputOption</target>
        </trans-unit>
        <trans-unit id="ee17e0b3e84879c29adf8278e863f21acbb03fb7" translate="yes" xml:space="preserve">
          <source>Insert a new record and get the value of the primary key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf003bd6a0b82747f7a97a56acf1261baa054669" translate="yes" xml:space="preserve">
          <source>Insert a new record into the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50e972838d08d5113447c0c6127a9b113adbf2e7" translate="yes" xml:space="preserve">
          <source>Insert or update a record matching the attributes, and fill it with values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccfb8a9bcad170de1a780c42634e84dcfa38cac8" translate="yes" xml:space="preserve">
          <source>Insert the given attributes and set the ID on the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff88f326f9f738ad51a90eb5bca1b7f4896d368" translate="yes" xml:space="preserve">
          <source>Inserting &amp;amp; Updating Models</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70c0b395778fb131601982dd08cbfec3005d2903" translate="yes" xml:space="preserve">
          <source>Inserting &amp;amp; Updating Related Models</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08711e711134e579523d56126b09874d8022e4b2" translate="yes" xml:space="preserve">
          <source>Inserts</source>
          <target state="translated">Inserts</target>
        </trans-unit>
        <trans-unit id="6488d4279a5b8a7b44ee864228907e04a748e9bf" translate="yes" xml:space="preserve">
          <source>Inspecting The Current Route</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3276864f6fe0efa8acdac21d8b15d80f9e87c6f2" translate="yes" xml:space="preserve">
          <source>Inspiring</source>
          <target state="translated">Inspiring</target>
        </trans-unit>
        <trans-unit id="0ed5f53a38f523924ab9530f173e3c2a78e0e599" translate="yes" xml:space="preserve">
          <source>Inspiring (Foundation)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4af180ae9fa7cee9d0bec19dfab1c815898a7d16" translate="yes" xml:space="preserve">
          <source>Inspiring::quote()</source>
          <target state="translated">Inspiring::quote()</target>
        </trans-unit>
        <trans-unit id="9edfcb9dacd45979d43e5ae2bcfd057cbb4e66f0" translate="yes" xml:space="preserve">
          <source>Install &lt;a href=&quot;https://getcomposer.org&quot;&gt;Composer&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="897c5a2a06cb8191603b3512b107f35b6db41731" translate="yes" xml:space="preserve">
          <source>Install PHP 7.2 using Homebrew via &lt;code&gt;brew install php@7.2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baae91e6ded067391ed44172908a88d959d65d62" translate="yes" xml:space="preserve">
          <source>Install Valet with Composer via &lt;code&gt;composer global require laravel/valet&lt;/code&gt;. Make sure the &lt;code&gt;~/.composer/vendor/bin&lt;/code&gt; directory is in your system's &quot;PATH&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3658a472e6a2a836171a10aac7e03a42549413d" translate="yes" xml:space="preserve">
          <source>Install or update &lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; to the latest version using &lt;code&gt;brew update&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d271bdec9cde71cbe43f164c7ddb9d0550bc38cd" translate="yes" xml:space="preserve">
          <source>Install the &quot;bootstrap&quot; preset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98530e0334027aab3e1335716bac94052c70a6d4" translate="yes" xml:space="preserve">
          <source>Install the &quot;fresh&quot; preset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90d988b9f14832669437497e55ebfab2aed8258c" translate="yes" xml:space="preserve">
          <source>Install the &quot;react&quot; preset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de358d119d672d2a6b3a389715ddf35b82a3fa1" translate="yes" xml:space="preserve">
          <source>Install the &quot;vue&quot; preset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="758df3820b1409a7d49229d6f0a11aba19f1661d" translate="yes" xml:space="preserve">
          <source>Install the preset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed7eb98d2c806fc160d8c641965c8debdc638e79" translate="yes" xml:space="preserve">
          <source>InstallCommand</source>
          <target state="translated">InstallCommand</target>
        </trans-unit>
        <trans-unit id="eaaa29840cfff317f93a4a21104e061b53b536dd" translate="yes" xml:space="preserve">
          <source>InstallCommand (Database\Console\Migrations)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cbadbb1ffc18db2915f926e682e2c52de7f4fa4" translate="yes" xml:space="preserve">
          <source>InstallCommand::__construct()</source>
          <target state="translated">InstallCommand::__construct()</target>
        </trans-unit>
        <trans-unit id="93570189f4a930672844bb349f457f5f438b846e" translate="yes" xml:space="preserve">
          <source>InstallCommand::getOptions()</source>
          <target state="translated">InstallCommand::getOptions()</target>
        </trans-unit>
        <trans-unit id="8ba537ff9f686df0bd626acd9c77ebcf570ce612" translate="yes" xml:space="preserve">
          <source>InstallCommand::handle()</source>
          <target state="translated">InstallCommand::handle()</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="e83e28708cd23339caf94328691639920f4b9816" translate="yes" xml:space="preserve">
          <source>Installation &amp;amp; Setup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f00d4e2b6347fad203982cbfeab54d37ad1dfd" translate="yes" xml:space="preserve">
          <source>Installing Elasticsearch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bfa14f4b8bb5440b71e8d6c87064732f4a5ccf1" translate="yes" xml:space="preserve">
          <source>Installing Homestead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64ae52712817ec555dcde4692af98c6962ca70e6" translate="yes" xml:space="preserve">
          <source>Installing Laravel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92f85750e91e1b17bed4e411bbc85a55d250619f" translate="yes" xml:space="preserve">
          <source>Installing Laravel Echo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7361d7112d92cc8976242d28b36ebef58b7add8f" translate="yes" xml:space="preserve">
          <source>Installing MariaDB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eda82d53eddeff2d648d07ceb4266a4e684fe260" translate="yes" xml:space="preserve">
          <source>Installing MongoDB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deb001a86942aeba7d26c68a380d364500e8d27e" translate="yes" xml:space="preserve">
          <source>Installing Neo4j</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9217fb1d718bb6a45f35f2a0995df763f527da1d" translate="yes" xml:space="preserve">
          <source>Installing Node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3bbd5ce7f2ed13063a18f9155f09df015ea1778" translate="yes" xml:space="preserve">
          <source>Installing Supervisor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26ba2154d7b533aa06082e0b156589a890aa12a7" translate="yes" xml:space="preserve">
          <source>Installing The Homestead Vagrant Box</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92031ea5329a0f43fcf6765ee6a0b2618ae67f5c" translate="yes" xml:space="preserve">
          <source>Instantiate a concrete instance of the given type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75c80a720b39c9b0a8a6daf3895f3ad30a49307f" translate="yes" xml:space="preserve">
          <source>Instantiate a new BelongsTo relationship.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f20826ede7ae47f03b2958c81da787cab9263534" translate="yes" xml:space="preserve">
          <source>Instantiate a new BelongsToMany relationship.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d292543bf2dc2542c50e47ba20184fad0edf804c" translate="yes" xml:space="preserve">
          <source>Instantiate a new HasMany relationship.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04310e3b0a45c18875ca066d3438566b004d7ddf" translate="yes" xml:space="preserve">
          <source>Instantiate a new HasManyThrough relationship.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efb0896947b903f9d945640014d35ff9ae44a3de" translate="yes" xml:space="preserve">
          <source>Instantiate a new HasOne relationship.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c6019933a04df3f4946f4f9bcccbdb43cf8b6f6" translate="yes" xml:space="preserve">
          <source>Instantiate a new MorphMany relationship.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="709ee4400d2ae67167319bd5751a90075fd6de15" translate="yes" xml:space="preserve">
          <source>Instantiate a new MorphOne relationship.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e8a430610207b9750f9e9cb6a3e267e59f9b883" translate="yes" xml:space="preserve">
          <source>Instantiate a new MorphTo relationship.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39391c1d9aa4c0c53005fcf35a8c8725d55d220a" translate="yes" xml:space="preserve">
          <source>Instantiate a new MorphToMany relationship.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94ba07cf74cc844a0d76d9937c196e2a4f9cf358" translate="yes" xml:space="preserve">
          <source>Instead of defining all of your request handling logic as Closures in route files, you may wish to organize this behavior using Controller classes. Controllers can group related request handling logic into a single class. Controllers are stored in the &lt;code&gt;app/Http/Controllers&lt;/code&gt; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13c0dfbcf0ca21de4be6416c023fc8a2a9761fee" translate="yes" xml:space="preserve">
          <source>Instead of defining the &quot;lines&quot; of text in the notification class, you may use the &lt;code&gt;view&lt;/code&gt; method to specify a custom template that should be used to render the notification email:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c681102d82ec52c3e6e46654ded18822fde36a5b" translate="yes" xml:space="preserve">
          <source>Instead of installing Homestead globally and sharing the same Homestead box across all of your projects, you may instead configure a Homestead instance for each project you manage. Installing Homestead per project may be beneficial if you wish to ship a &lt;code&gt;Vagrantfile&lt;/code&gt; with your project, allowing others working on the project to &lt;code&gt;vagrant up&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40b3e22c17968dc8fa7933cee6b779c453a6030a" translate="yes" xml:space="preserve">
          <source>Instead of making a lot of &lt;code&gt;instanceof&lt;/code&gt; checks in your &lt;code&gt;report&lt;/code&gt; method, consider using &lt;a href=&quot;errors#renderable-exceptions&quot;&gt;reportable exceptions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9db8eeaccf9e7233eec61739837cc4c16b29de39" translate="yes" xml:space="preserve">
          <source>Instead of only accepting strings, Laravel's URL generator now accepts &quot;callable&quot; syntax when generating URLs to controller actions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="492ef4fa69b0adf6f5bd706a4bef393088c79576" translate="yes" xml:space="preserve">
          <source>Instead of passing a date string to be evaluated by &lt;code&gt;strtotime&lt;/code&gt;, you may specify another field to compare against the date:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed7af8f449d6b1f9413ef7ac09d52f941afc462c" translate="yes" xml:space="preserve">
          <source>Instead of passing a string &lt;code&gt;key&lt;/code&gt;, you may pass a callback. The callback should return the value you wish to key the group by:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b678e7d561f60816bae1b72d917cfb815fd8fa" translate="yes" xml:space="preserve">
          <source>Instead of passing the number of minutes as an integer, you may also pass a &lt;code&gt;DateTime&lt;/code&gt; instance representing the expiration time of the cached item:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ad2c28990210c7ce94ec9d92d28b9782d4d4ff9" translate="yes" xml:space="preserve">
          <source>Instead of sending your emails, the &lt;code&gt;log&lt;/code&gt; mail driver will write all email messages to your log files for inspection. For more information on configuring your application per environment, check out the &lt;a href=&quot;configuration#environment-configuration&quot;&gt;configuration documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf9b28a3a0bf189f42cde36d317300e64f8504b3" translate="yes" xml:space="preserve">
          <source>Instead of type-checking exceptions in the exception handler's &lt;code&gt;report&lt;/code&gt; and &lt;code&gt;render&lt;/code&gt; methods, you may define &lt;code&gt;report&lt;/code&gt; and &lt;code&gt;render&lt;/code&gt; methods directly on your custom exception. When these methods exist, they will be called automatically by the framework:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03665fb2772aac633f1ec77619f8364479cac6ff" translate="yes" xml:space="preserve">
          <source>Instead of using &lt;code&gt;?&lt;/code&gt; to represent your parameter bindings, you may execute a query using named bindings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f67a280274c72a307542b65147dba2392db2fcb9" translate="yes" xml:space="preserve">
          <source>Instead of using &lt;code&gt;DB::raw&lt;/code&gt;, you may also use the following methods to insert a raw expression into various parts of your query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9982e67ac1fba2a43f5d6bed781b76a1c353a6dc" translate="yes" xml:space="preserve">
          <source>Instead of using the &lt;code&gt;count&lt;/code&gt; method to determine if any records exist that match your query's constraints, you may use the &lt;code&gt;exists&lt;/code&gt; and &lt;code&gt;doesntExist&lt;/code&gt; methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e01ac035cbd4692a740131fc6136bafd24e6918a" translate="yes" xml:space="preserve">
          <source>Instead, the &lt;code&gt;Cache&lt;/code&gt; facade extends the base &lt;code&gt;Facade&lt;/code&gt; class and defines the method &lt;code&gt;getFacadeAccessor()&lt;/code&gt;. This method's job is to return the name of a service container binding. When a user references any static method on the &lt;code&gt;Cache&lt;/code&gt; facade, Laravel resolves the &lt;code&gt;cache&lt;/code&gt; binding from the &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt; and runs the requested method (in this case, &lt;code&gt;get&lt;/code&gt;) against that object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6adf9e98e6f59fb3faf8a3ed9eb86a39bf448ce6" translate="yes" xml:space="preserve">
          <source>Instead, you may use the &quot;input&quot; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5533fd2ae269ffec5ff40e8ec9c81ff86a38ca11" translate="yes" xml:space="preserve">
          <source>Interacting With Elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="258ed0ea001125d961292c47b027c771144fc53c" translate="yes" xml:space="preserve">
          <source>Interacting With Redis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5208ad1ae3a6eb5c915999d32887c6bc6529ad5d" translate="yes" xml:space="preserve">
          <source>InteractsWithAuthentication</source>
          <target state="translated">InteractsWithAuthentication</target>
        </trans-unit>
        <trans-unit id="6d94284d4887b51a9672a05997291a172ace0291" translate="yes" xml:space="preserve">
          <source>InteractsWithAuthentication (Foundation\Testing)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce1de8824fa15e1882856b6d1c4c0b1ee2bfdb3b" translate="yes" xml:space="preserve">
          <source>InteractsWithAuthentication::actingAs()</source>
          <target state="translated">InteractsWithAuthentication::actingAs()</target>
        </trans-unit>
        <trans-unit id="0a2669864c8d4f934006ac3a97b186f4bc9578bb" translate="yes" xml:space="preserve">
          <source>InteractsWithAuthentication::assertAuthenticated()</source>
          <target state="translated">InteractsWithAuthentication::assertAuthenticated()</target>
        </trans-unit>
        <trans-unit id="325e29554aa61008ac1d9dfb13468a8e8994c3f8" translate="yes" xml:space="preserve">
          <source>InteractsWithAuthentication::assertAuthenticatedAs()</source>
          <target state="translated">InteractsWithAuthentication::assertAuthenticatedAs()</target>
        </trans-unit>
        <trans-unit id="1a43b091763948cefb3d9f5bce6654c6fd70146f" translate="yes" xml:space="preserve">
          <source>InteractsWithAuthentication::assertCredentials()</source>
          <target state="translated">InteractsWithAuthentication::assertCredentials()</target>
        </trans-unit>
        <trans-unit id="faf3466b39f295c01e8fee1845c21a6f18b283ae" translate="yes" xml:space="preserve">
          <source>InteractsWithAuthentication::assertGuest()</source>
          <target state="translated">InteractsWithAuthentication::assertGuest()</target>
        </trans-unit>
        <trans-unit id="e2c7d59a8e739196af1be67906cb6fa49d9297d9" translate="yes" xml:space="preserve">
          <source>InteractsWithAuthentication::assertInvalidCredentials()</source>
          <target state="translated">InteractsWithAuthentication::assertInvalidCredentials()</target>
        </trans-unit>
        <trans-unit id="8df71f5670b0cee46b7885c100f5340d620167e1" translate="yes" xml:space="preserve">
          <source>InteractsWithAuthentication::be()</source>
          <target state="translated">InteractsWithAuthentication::be()</target>
        </trans-unit>
        <trans-unit id="0d8675af6e539ca0f61415badf937b0c05fef720" translate="yes" xml:space="preserve">
          <source>InteractsWithAuthentication::hasCredentials()</source>
          <target state="translated">InteractsWithAuthentication::hasCredentials()</target>
        </trans-unit>
        <trans-unit id="f658503c0ee5d9afa4729786ada2b02f002b41ea" translate="yes" xml:space="preserve">
          <source>InteractsWithAuthentication::isAuthenticated()</source>
          <target state="translated">InteractsWithAuthentication::isAuthenticated()</target>
        </trans-unit>
        <trans-unit id="cf06743b45cf13ca0f6324368c091fec2b61bec7" translate="yes" xml:space="preserve">
          <source>InteractsWithConsole</source>
          <target state="translated">InteractsWithConsole</target>
        </trans-unit>
        <trans-unit id="b9f380e5d35557dbe6d97090e49cd4df031bf8e5" translate="yes" xml:space="preserve">
          <source>InteractsWithConsole (Foundation\Testing)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51a8d361533ad412d5751a909037e242959c5ffb" translate="yes" xml:space="preserve">
          <source>InteractsWithConsole::artisan()</source>
          <target state="translated">InteractsWithConsole::artisan()</target>
        </trans-unit>
        <trans-unit id="4a007c45602238484bcd15423fe0ec41bc05e1f4" translate="yes" xml:space="preserve">
          <source>InteractsWithConsole::withoutMockingConsoleOutput()</source>
          <target state="translated">InteractsWithConsole::withoutMockingConsoleOutput()</target>
        </trans-unit>
        <trans-unit id="0553e525a501d376bacf32ae252947a23901d1b2" translate="yes" xml:space="preserve">
          <source>InteractsWithContainer</source>
          <target state="translated">InteractsWithContainer</target>
        </trans-unit>
        <trans-unit id="2744897d02d5707a563d26fb6faf5ad08c9830c9" translate="yes" xml:space="preserve">
          <source>InteractsWithContainer (Foundation\Testing)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e44662ab68bcd5700164d4ef9339b5bbc1e7ad3" translate="yes" xml:space="preserve">
          <source>InteractsWithContainer::instance()</source>
          <target state="translated">InteractsWithContainer::instance()</target>
        </trans-unit>
        <trans-unit id="7364aa9dc5ebcd1f0b61b11e0666f946ab45b3fb" translate="yes" xml:space="preserve">
          <source>InteractsWithContainer::swap()</source>
          <target state="translated">InteractsWithContainer::swap()</target>
        </trans-unit>
        <trans-unit id="1e8035c63d3e1f3bddddc4c9dd961c40af546557" translate="yes" xml:space="preserve">
          <source>InteractsWithContentTypes</source>
          <target state="translated">InteractsWithContentTypes</target>
        </trans-unit>
        <trans-unit id="f2e322961c0fddd4adc98fb01ded7c5d5933819a" translate="yes" xml:space="preserve">
          <source>InteractsWithContentTypes (Http\Concerns)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4626a5ddaf18becc01b1fb69694e465693801ac" translate="yes" xml:space="preserve">
          <source>InteractsWithContentTypes::accepts()</source>
          <target state="translated">InteractsWithContentTypes::accepts()</target>
        </trans-unit>
        <trans-unit id="9e78a798924c325bb1bb35d18bc84e2214cdf83b" translate="yes" xml:space="preserve">
          <source>InteractsWithContentTypes::acceptsAnyContentType()</source>
          <target state="translated">InteractsWithContentTypes::acceptsAnyContentType()</target>
        </trans-unit>
        <trans-unit id="6796bf7bb73ca93d7bd36c885ff042bb22f10aa4" translate="yes" xml:space="preserve">
          <source>InteractsWithContentTypes::acceptsHtml()</source>
          <target state="translated">InteractsWithContentTypes::acceptsHtml()</target>
        </trans-unit>
        <trans-unit id="6c2dc9846006d2bace893a049e5f5b17f687352c" translate="yes" xml:space="preserve">
          <source>InteractsWithContentTypes::acceptsJson()</source>
          <target state="translated">InteractsWithContentTypes::acceptsJson()</target>
        </trans-unit>
        <trans-unit id="28e530f140eb07023ca924bf42b8f14cae775d4c" translate="yes" xml:space="preserve">
          <source>InteractsWithContentTypes::expectsJson()</source>
          <target state="translated">InteractsWithContentTypes::expectsJson()</target>
        </trans-unit>
        <trans-unit id="714aa83d1e896b9e23aaa8024c8be222f75fe4c9" translate="yes" xml:space="preserve">
          <source>InteractsWithContentTypes::format()</source>
          <target state="translated">InteractsWithContentTypes::format()</target>
        </trans-unit>
        <trans-unit id="e8db62bc5d03cb76eec4d2bb2458043b7b802a44" translate="yes" xml:space="preserve">
          <source>InteractsWithContentTypes::isJson()</source>
          <target state="translated">InteractsWithContentTypes::isJson()</target>
        </trans-unit>
        <trans-unit id="d68c62868bcea6ffb20ad2175a7607c0c7fe9c33" translate="yes" xml:space="preserve">
          <source>InteractsWithContentTypes::matchesType()</source>
          <target state="translated">InteractsWithContentTypes::matchesType()</target>
        </trans-unit>
        <trans-unit id="61eaf943e5142d2727a5a5c62628a4d00df54011" translate="yes" xml:space="preserve">
          <source>InteractsWithContentTypes::prefers()</source>
          <target state="translated">InteractsWithContentTypes::prefers()</target>
        </trans-unit>
        <trans-unit id="015b74944c9f7b8450404de9bd3c1c7f9a398423" translate="yes" xml:space="preserve">
          <source>InteractsWithContentTypes::wantsJson()</source>
          <target state="translated">InteractsWithContentTypes::wantsJson()</target>
        </trans-unit>
        <trans-unit id="45b8626a21b1d5db76ad9a494a5da34b1af60768" translate="yes" xml:space="preserve">
          <source>InteractsWithDatabase</source>
          <target state="translated">InteractsWithDatabase</target>
        </trans-unit>
        <trans-unit id="867d7a167db93df852e4c82db44a29773861ac1b" translate="yes" xml:space="preserve">
          <source>InteractsWithDatabase (Foundation\Testing)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d785d0f07b90d59c1b84c44d98ab2a89fa545485" translate="yes" xml:space="preserve">
          <source>InteractsWithDatabase::assertDatabaseHas()</source>
          <target state="translated">InteractsWithDatabase::assertDatabaseHas()</target>
        </trans-unit>
        <trans-unit id="57aac12ce263bb81dd014966f6154ee9ffbfb135" translate="yes" xml:space="preserve">
          <source>InteractsWithDatabase::assertDatabaseMissing()</source>
          <target state="translated">InteractsWithDatabase::assertDatabaseMissing()</target>
        </trans-unit>
        <trans-unit id="6e3d741c6059a5786b731bbcfa5280d232a7b09c" translate="yes" xml:space="preserve">
          <source>InteractsWithDatabase::assertSoftDeleted()</source>
          <target state="translated">InteractsWithDatabase::assertSoftDeleted()</target>
        </trans-unit>
        <trans-unit id="7aa2f7a6193a6e26b9e57fa2ec27a245bd2a3b5e" translate="yes" xml:space="preserve">
          <source>InteractsWithDatabase::getConnection()</source>
          <target state="translated">InteractsWithDatabase::getConnection()</target>
        </trans-unit>
        <trans-unit id="324c284d734adefdf43568804d0039d65c201029" translate="yes" xml:space="preserve">
          <source>InteractsWithDatabase::seed()</source>
          <target state="translated">InteractsWithDatabase::seed()</target>
        </trans-unit>
        <trans-unit id="4e7aa7f89ad581019b8a2acfb6671ba5acd3c5e4" translate="yes" xml:space="preserve">
          <source>InteractsWithExceptionHandling</source>
          <target state="translated">InteractsWithExceptionHandling</target>
        </trans-unit>
        <trans-unit id="ea98e9adf4ee61d770dd042f8585f4f0ec18451e" translate="yes" xml:space="preserve">
          <source>InteractsWithExceptionHandling (Foundation\Testing)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1415481f21a1bb96af0a173e8d9528abfa793edf" translate="yes" xml:space="preserve">
          <source>InteractsWithExceptionHandling::__construct()</source>
          <target state="translated">InteractsWithExceptionHandling::__construct()</target>
        </trans-unit>
        <trans-unit id="95029dafefd16a8ca00665ea9967216eca5b7703" translate="yes" xml:space="preserve">
          <source>InteractsWithExceptionHandling::handleExceptions()</source>
          <target state="translated">InteractsWithExceptionHandling::handleExceptions()</target>
        </trans-unit>
        <trans-unit id="57e6124d91d03c29571ca0822da133ed3b75e9de" translate="yes" xml:space="preserve">
          <source>InteractsWithExceptionHandling::handleValidationExceptions()</source>
          <target state="translated">InteractsWithExceptionHandling::handleValidationExceptions()</target>
        </trans-unit>
        <trans-unit id="7cfa9e6d3be667cd88edd9c6b2a1da6b65ff4565" translate="yes" xml:space="preserve">
          <source>InteractsWithExceptionHandling::render()</source>
          <target state="translated">InteractsWithExceptionHandling::render()</target>
        </trans-unit>
        <trans-unit id="ae34255541abe1fbe03d2215ec5d9298c58324b7" translate="yes" xml:space="preserve">
          <source>InteractsWithExceptionHandling::renderForConsole()</source>
          <target state="translated">InteractsWithExceptionHandling::renderForConsole()</target>
        </trans-unit>
        <trans-unit id="9f8d9e48d64fe578d8a514d506ee1afe10bc4703" translate="yes" xml:space="preserve">
          <source>InteractsWithExceptionHandling::report()</source>
          <target state="translated">InteractsWithExceptionHandling::report()</target>
        </trans-unit>
        <trans-unit id="991a1a1845a448adc2fd585af4570e92b0aa8857" translate="yes" xml:space="preserve">
          <source>InteractsWithExceptionHandling::withExceptionHandling()</source>
          <target state="translated">InteractsWithExceptionHandling::withExceptionHandling()</target>
        </trans-unit>
        <trans-unit id="f7814cd711adb8372c5aedea71b2cb41b50b74b1" translate="yes" xml:space="preserve">
          <source>InteractsWithExceptionHandling::withoutExceptionHandling()</source>
          <target state="translated">InteractsWithExceptionHandling::withoutExceptionHandling()</target>
        </trans-unit>
        <trans-unit id="200bb9607e1b595f81ca7a117d1666123dcddfc0" translate="yes" xml:space="preserve">
          <source>InteractsWithFlashData</source>
          <target state="translated">InteractsWithFlashData</target>
        </trans-unit>
        <trans-unit id="236415ccc7a831fbb02081d7abf8486c2ef2b562" translate="yes" xml:space="preserve">
          <source>InteractsWithFlashData (Http\Concerns)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="859bb18b919dc4284f1dfe187f78e06e3dc5b177" translate="yes" xml:space="preserve">
          <source>InteractsWithFlashData::flash()</source>
          <target state="translated">InteractsWithFlashData::flash()</target>
        </trans-unit>
        <trans-unit id="3829138af66cd2c09f5e42dccf603e50e3719c9e" translate="yes" xml:space="preserve">
          <source>InteractsWithFlashData::flashExcept()</source>
          <target state="translated">InteractsWithFlashData::flashExcept()</target>
        </trans-unit>
        <trans-unit id="8f0734d0caa0dd27c5692ab8922cc86d189552eb" translate="yes" xml:space="preserve">
          <source>InteractsWithFlashData::flashOnly()</source>
          <target state="translated">InteractsWithFlashData::flashOnly()</target>
        </trans-unit>
        <trans-unit id="7952382948560d3fc2b32810f0c2dd577658ea80" translate="yes" xml:space="preserve">
          <source>InteractsWithFlashData::flush()</source>
          <target state="translated">InteractsWithFlashData::flush()</target>
        </trans-unit>
        <trans-unit id="7b2fb03ae708848d96feb2ec27ed3e6f13cb0992" translate="yes" xml:space="preserve">
          <source>InteractsWithFlashData::old()</source>
          <target state="translated">InteractsWithFlashData::old()</target>
        </trans-unit>
        <trans-unit id="3463848544c69e1747e10b9b4c31355df449ba4b" translate="yes" xml:space="preserve">
          <source>InteractsWithInput</source>
          <target state="translated">InteractsWithInput</target>
        </trans-unit>
        <trans-unit id="7cb32b43d7f37c300510da227ecba616e1ad0773" translate="yes" xml:space="preserve">
          <source>InteractsWithInput (Http\Concerns)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9666a7bd318ea73aca3c0daf660534dafdbfe030" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::all()</source>
          <target state="translated">InteractsWithInput::all()</target>
        </trans-unit>
        <trans-unit id="e8457a8e693abcbff2ea66090e004b2452d67f18" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::allFiles()</source>
          <target state="translated">InteractsWithInput::allFiles()</target>
        </trans-unit>
        <trans-unit id="7f045e3517ad1788a7eccc682e261817e664e7b3" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::anyFilled()</source>
          <target state="translated">InteractsWithInput::anyFilled()</target>
        </trans-unit>
        <trans-unit id="b9ef067b0b4ec2403f4c79d27812d091c64b1273" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::bearerToken()</source>
          <target state="translated">InteractsWithInput::bearerToken()</target>
        </trans-unit>
        <trans-unit id="a50d73880de79e05f481c087b31e155c86a12a83" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::convertUploadedFiles()</source>
          <target state="translated">InteractsWithInput::convertUploadedFiles()</target>
        </trans-unit>
        <trans-unit id="d5a5cc0587af8396444a6dd68b8840bc7082f08e" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::cookie()</source>
          <target state="translated">InteractsWithInput::cookie()</target>
        </trans-unit>
        <trans-unit id="8e741c4f47d98a9a9801f0c57a17c5a9b9c79567" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::except()</source>
          <target state="translated">InteractsWithInput::except()</target>
        </trans-unit>
        <trans-unit id="ade098659d30325d4f925bf7052cc6ddb02a0689" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::exists()</source>
          <target state="translated">InteractsWithInput::exists()</target>
        </trans-unit>
        <trans-unit id="e355d6e906282b31de998efb4d146b3ba3224b21" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::file()</source>
          <target state="translated">InteractsWithInput::file()</target>
        </trans-unit>
        <trans-unit id="cb225b01fd7a4f99ebb0e4c454ccc20e608d5072" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::filled()</source>
          <target state="translated">InteractsWithInput::filled()</target>
        </trans-unit>
        <trans-unit id="62a51d357ae9417facc8506040a28b12ebfd0caf" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::has()</source>
          <target state="translated">InteractsWithInput::has()</target>
        </trans-unit>
        <trans-unit id="6825f0fdfae8451d3e83f1614736513aa6247955" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::hasAny()</source>
          <target state="translated">InteractsWithInput::hasAny()</target>
        </trans-unit>
        <trans-unit id="bacffccdfb15ede1fbb9c560d0301ea45e45f317" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::hasCookie()</source>
          <target state="translated">InteractsWithInput::hasCookie()</target>
        </trans-unit>
        <trans-unit id="bcd63b9309ed3d47619479d06479907bf29718f0" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::hasFile()</source>
          <target state="translated">InteractsWithInput::hasFile()</target>
        </trans-unit>
        <trans-unit id="75d636800a02c27f17db3e8df72750c9f4e2041c" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::hasHeader()</source>
          <target state="translated">InteractsWithInput::hasHeader()</target>
        </trans-unit>
        <trans-unit id="083d7c766efeb282de04a0567be4ecac92f48c29" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::header()</source>
          <target state="translated">InteractsWithInput::header()</target>
        </trans-unit>
        <trans-unit id="899ef68aea5b384b7bf533c7d536d72076d5a615" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::input()</source>
          <target state="translated">InteractsWithInput::input()</target>
        </trans-unit>
        <trans-unit id="23a2d64fdde65488235c0c953b5f302d566f1cd3" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::isEmptyString()</source>
          <target state="translated">InteractsWithInput::isEmptyString()</target>
        </trans-unit>
        <trans-unit id="c0be9a60df6cc5e111810deb08933efc57d4a94f" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::isValidFile()</source>
          <target state="translated">InteractsWithInput::isValidFile()</target>
        </trans-unit>
        <trans-unit id="d8ff77c91b05931fe13aea92e2260c2e9963d143" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::keys()</source>
          <target state="translated">InteractsWithInput::keys()</target>
        </trans-unit>
        <trans-unit id="61c0587b0cdcc8bfaf248f7b6090ceafb8628b20" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::only()</source>
          <target state="translated">InteractsWithInput::only()</target>
        </trans-unit>
        <trans-unit id="38e06ffc03b31aa16baa778feefcc797ec9677ec" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::post()</source>
          <target state="translated">InteractsWithInput::post()</target>
        </trans-unit>
        <trans-unit id="ba837406d9d4e732845bd52204ccc2866104b1c8" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::query()</source>
          <target state="translated">InteractsWithInput::query()</target>
        </trans-unit>
        <trans-unit id="9efa439cf5ad5e3cb3583adbfec8cebd574c6ced" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::retrieveItem()</source>
          <target state="translated">InteractsWithInput::retrieveItem()</target>
        </trans-unit>
        <trans-unit id="bb2f1dd6ca79a16b6c01d5cdcd22c29095691ed1" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::server()</source>
          <target state="translated">InteractsWithInput::server()</target>
        </trans-unit>
        <trans-unit id="a6ab49c106e83b3fa9a946dd5900d43d36e5c5f3" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable</source>
          <target state="translated">InteractsWithPivotTable</target>
        </trans-unit>
        <trans-unit id="5798305ed6dda3ceb15d1c999a90eaf498c20595" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable (Database\Eloquent\Relations)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b36e26f4336d8b972896d026d025a60b8f499b1" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::addTimestampsToAttachment()</source>
          <target state="translated">InteractsWithPivotTable::addTimestampsToAttachment()</target>
        </trans-unit>
        <trans-unit id="f7f699f34fa616ec4b7e81464122a1175054569c" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::attach()</source>
          <target state="translated">InteractsWithPivotTable::attach()</target>
        </trans-unit>
        <trans-unit id="d67e2ac5839b243f0ae128af5d7c25aad8f2ab03" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::attachNew()</source>
          <target state="translated">InteractsWithPivotTable::attachNew()</target>
        </trans-unit>
        <trans-unit id="f4f26273b6e7bc1d096e5bb8f4b7397341e76414" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::baseAttachRecord()</source>
          <target state="translated">InteractsWithPivotTable::baseAttachRecord()</target>
        </trans-unit>
        <trans-unit id="c8e9372d6da03717b537b263b4cd5ed96ad8f832" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::castAttributes()</source>
          <target state="translated">InteractsWithPivotTable::castAttributes()</target>
        </trans-unit>
        <trans-unit id="22802fbb55338a716ef550369e5007bcd46381fb" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::castKey()</source>
          <target state="translated">InteractsWithPivotTable::castKey()</target>
        </trans-unit>
        <trans-unit id="b74a43fad64ba458c09e7c2c2dbf75a4b7f74ba3" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::castKeys()</source>
          <target state="translated">InteractsWithPivotTable::castKeys()</target>
        </trans-unit>
        <trans-unit id="597d11a2cf4296de5dd1df0a12792b244fa80357" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::detach()</source>
          <target state="translated">InteractsWithPivotTable::detach()</target>
        </trans-unit>
        <trans-unit id="1aa62238767c15485b2979d4cbce2697bcdd318a" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::extractAttachIdAndAttributes()</source>
          <target state="translated">InteractsWithPivotTable::extractAttachIdAndAttributes()</target>
        </trans-unit>
        <trans-unit id="68d734f44d35844a5c084da95f93d6d703eeeb4c" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::formatAttachRecord()</source>
          <target state="translated">InteractsWithPivotTable::formatAttachRecord()</target>
        </trans-unit>
        <trans-unit id="63f15c83241780b5466ad2cd1cc53d13d73df7c1" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::formatAttachRecords()</source>
          <target state="translated">InteractsWithPivotTable::formatAttachRecords()</target>
        </trans-unit>
        <trans-unit id="471f4f4c7a1e5229f4a0e25add23c2301b1e8b1d" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::formatRecordsList()</source>
          <target state="translated">InteractsWithPivotTable::formatRecordsList()</target>
        </trans-unit>
        <trans-unit id="37a98c579e872841756ea0a9df62c95f730b6952" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::getTypeSwapValue()</source>
          <target state="translated">InteractsWithPivotTable::getTypeSwapValue()</target>
        </trans-unit>
        <trans-unit id="ba0324a3e971977075e4b1f54a754c822c62acab" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::hasPivotColumn()</source>
          <target state="translated">InteractsWithPivotTable::hasPivotColumn()</target>
        </trans-unit>
        <trans-unit id="ce2c590f6ff3736aad0db15a8ad9b4206089ff4f" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::newExistingPivot()</source>
          <target state="translated">InteractsWithPivotTable::newExistingPivot()</target>
        </trans-unit>
        <trans-unit id="7799a328f9cbced0158c3dbe79eec1f4ddb24ade" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::newPivot()</source>
          <target state="translated">InteractsWithPivotTable::newPivot()</target>
        </trans-unit>
        <trans-unit id="380d306d13455c9bb41c0c9aca35fcfeb56bb0fc" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::newPivotQuery()</source>
          <target state="translated">InteractsWithPivotTable::newPivotQuery()</target>
        </trans-unit>
        <trans-unit id="81ac6ae23bde5770e15092ca7a04979931a142f5" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::newPivotStatement()</source>
          <target state="translated">InteractsWithPivotTable::newPivotStatement()</target>
        </trans-unit>
        <trans-unit id="6f6adb044422d9b20f18680a853176c591ed6a0d" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::newPivotStatementForId()</source>
          <target state="translated">InteractsWithPivotTable::newPivotStatementForId()</target>
        </trans-unit>
        <trans-unit id="23807fe2755f90f43fbd8d00998bf61a043ab19b" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::parseId()</source>
          <target state="translated">InteractsWithPivotTable::parseId()</target>
        </trans-unit>
        <trans-unit id="a73c1e55edaf18e9cf53c4a153a9b282ff297faa" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::parseIds()</source>
          <target state="translated">InteractsWithPivotTable::parseIds()</target>
        </trans-unit>
        <trans-unit id="c6167fcb905959462f7b272923d86c925524c2a4" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::sync()</source>
          <target state="translated">InteractsWithPivotTable::sync()</target>
        </trans-unit>
        <trans-unit id="c70231c1c7021414349ad0dae2589a0388ece35c" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::syncWithoutDetaching()</source>
          <target state="translated">InteractsWithPivotTable::syncWithoutDetaching()</target>
        </trans-unit>
        <trans-unit id="a5359081c2408c266952a3c0aeff541a2d45395a" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::toggle()</source>
          <target state="translated">InteractsWithPivotTable::toggle()</target>
        </trans-unit>
        <trans-unit id="8cf0085a3571b2f4e08ab404dd835633a267d51c" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::updateExistingPivot()</source>
          <target state="translated">InteractsWithPivotTable::updateExistingPivot()</target>
        </trans-unit>
        <trans-unit id="585d435754610a4cf48673b14a011803bcb98cc3" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::withPivot()</source>
          <target state="translated">InteractsWithPivotTable::withPivot()</target>
        </trans-unit>
        <trans-unit id="a6561cccf999a06bd2c6d2f3d72f1f25ecb2b586" translate="yes" xml:space="preserve">
          <source>InteractsWithQueue</source>
          <target state="translated">InteractsWithQueue</target>
        </trans-unit>
        <trans-unit id="cf7882e33f9e31307d033ba6a60b8e7ea313bc5a" translate="yes" xml:space="preserve">
          <source>InteractsWithQueue (Queue)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dd5c728457dd966f4fd40b0291d0ba939d9c5bb" translate="yes" xml:space="preserve">
          <source>InteractsWithQueue::attempts()</source>
          <target state="translated">InteractsWithQueue::attempts()</target>
        </trans-unit>
        <trans-unit id="d82bf59d95627835cd0f227fb3463165a3d4ee06" translate="yes" xml:space="preserve">
          <source>InteractsWithQueue::delete()</source>
          <target state="translated">InteractsWithQueue::delete()</target>
        </trans-unit>
        <trans-unit id="f107c0f298cc7732c769b671d7fdde042adefb28" translate="yes" xml:space="preserve">
          <source>InteractsWithQueue::fail()</source>
          <target state="translated">InteractsWithQueue::fail()</target>
        </trans-unit>
        <trans-unit id="5e92fe3e1ad8a6df3b55fa8e1823e4a1f3b4e1cd" translate="yes" xml:space="preserve">
          <source>InteractsWithQueue::release()</source>
          <target state="translated">InteractsWithQueue::release()</target>
        </trans-unit>
        <trans-unit id="04058e5f34567f025485692a30ff822efb94fae3" translate="yes" xml:space="preserve">
          <source>InteractsWithQueue::setJob()</source>
          <target state="translated">InteractsWithQueue::setJob()</target>
        </trans-unit>
        <trans-unit id="075f4c562c9acff361fcc7636cf7c63ac22e5d7d" translate="yes" xml:space="preserve">
          <source>InteractsWithRedis</source>
          <target state="translated">InteractsWithRedis</target>
        </trans-unit>
        <trans-unit id="aa384a6e5877cb2948541657386166ba84f5910b" translate="yes" xml:space="preserve">
          <source>InteractsWithRedis (Foundation\Testing)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64087781479700075d3bdf2d29650734401351b5" translate="yes" xml:space="preserve">
          <source>InteractsWithRedis::ifRedisAvailable()</source>
          <target state="translated">InteractsWithRedis::ifRedisAvailable()</target>
        </trans-unit>
        <trans-unit id="5b02061e017e9d0c6dda3045ac939b9529ab59a7" translate="yes" xml:space="preserve">
          <source>InteractsWithRedis::redisDriverProvider()</source>
          <target state="translated">InteractsWithRedis::redisDriverProvider()</target>
        </trans-unit>
        <trans-unit id="82e3bebdc2360ceeabecaf2233f17e7a78544a73" translate="yes" xml:space="preserve">
          <source>InteractsWithRedis::setUpRedis()</source>
          <target state="translated">InteractsWithRedis::setUpRedis()</target>
        </trans-unit>
        <trans-unit id="700250ca509439e5624d6ada5a9e37a033a1f671" translate="yes" xml:space="preserve">
          <source>InteractsWithRedis::tearDownRedis()</source>
          <target state="translated">InteractsWithRedis::tearDownRedis()</target>
        </trans-unit>
        <trans-unit id="cef32600894f63811db7a9816f8ea7584e7a3701" translate="yes" xml:space="preserve">
          <source>InteractsWithSession</source>
          <target state="translated">InteractsWithSession</target>
        </trans-unit>
        <trans-unit id="e98f049902312ae4ad0f011ee0aebb475dd4d364" translate="yes" xml:space="preserve">
          <source>InteractsWithSession (Foundation\Testing)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98a2598d3e81ccd79603ac9d917d6be35a89605c" translate="yes" xml:space="preserve">
          <source>InteractsWithSession::flushSession()</source>
          <target state="translated">InteractsWithSession::flushSession()</target>
        </trans-unit>
        <trans-unit id="daef403552d186720fe905310c6cc0b2fa17ce5d" translate="yes" xml:space="preserve">
          <source>InteractsWithSession::session()</source>
          <target state="translated">InteractsWithSession::session()</target>
        </trans-unit>
        <trans-unit id="e1e4856c50049eaf1f01a49f606cfd80b6d9add7" translate="yes" xml:space="preserve">
          <source>InteractsWithSession::startSession()</source>
          <target state="translated">InteractsWithSession::startSession()</target>
        </trans-unit>
        <trans-unit id="e510f678f68c26a0d56ccc3caca720196efe5b4e" translate="yes" xml:space="preserve">
          <source>InteractsWithSession::withSession()</source>
          <target state="translated">InteractsWithSession::withSession()</target>
        </trans-unit>
        <trans-unit id="515a3a2edfbce6087a33ece40bde4373887339d7" translate="yes" xml:space="preserve">
          <source>InteractsWithSockets</source>
          <target state="translated">InteractsWithSockets</target>
        </trans-unit>
        <trans-unit id="88f72c7feed94fdc3af0b4dc8dee96472f84b4e7" translate="yes" xml:space="preserve">
          <source>InteractsWithSockets (Broadcasting)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae19fe5dfe3884db9ede059bd85a88a111e29b62" translate="yes" xml:space="preserve">
          <source>InteractsWithSockets::broadcastToEveryone()</source>
          <target state="translated">InteractsWithSockets::broadcastToEveryone()</target>
        </trans-unit>
        <trans-unit id="5c1ae33285b385102a4e8fa1a40312369fc6c26b" translate="yes" xml:space="preserve">
          <source>InteractsWithSockets::dontBroadcastToCurrentUser()</source>
          <target state="translated">InteractsWithSockets::dontBroadcastToCurrentUser()</target>
        </trans-unit>
        <trans-unit id="2a6a09ba9950665622f7c6efd9b582db2d2683b1" translate="yes" xml:space="preserve">
          <source>InteractsWithTime</source>
          <target state="translated">InteractsWithTime</target>
        </trans-unit>
        <trans-unit id="ebf9ebbf8607069b36fc67662cab27a971cff708" translate="yes" xml:space="preserve">
          <source>InteractsWithTime (Support)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ca12bb493e3ed68a7989a84f6eb0ee09e23ec5c" translate="yes" xml:space="preserve">
          <source>InteractsWithTime::availableAt()</source>
          <target state="translated">InteractsWithTime::availableAt()</target>
        </trans-unit>
        <trans-unit id="910ac0fb6ace928c2f8ecf4b19e569752b839128" translate="yes" xml:space="preserve">
          <source>InteractsWithTime::currentTime()</source>
          <target state="translated">InteractsWithTime::currentTime()</target>
        </trans-unit>
        <trans-unit id="8933e5f1fe5173f021e43db7bc069a0e36a806b6" translate="yes" xml:space="preserve">
          <source>InteractsWithTime::parseDateInterval()</source>
          <target state="translated">InteractsWithTime::parseDateInterval()</target>
        </trans-unit>
        <trans-unit id="af948cf95aa754955899817bf7b886c1ccce4789" translate="yes" xml:space="preserve">
          <source>InteractsWithTime::secondsUntil()</source>
          <target state="translated">InteractsWithTime::secondsUntil()</target>
        </trans-unit>
        <trans-unit id="9ddb06d19375212386c26d830f63ad8db1410da7" translate="yes" xml:space="preserve">
          <source>Intercepting Gate Checks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40476a98686d7c9da59c960e19503022f2a672d5" translate="yes" xml:space="preserve">
          <source>Interesting events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b356313f979923fc829adb909098ed26a5a01aff" translate="yes" xml:space="preserve">
          <source>Interfaces</source>
          <target state="translated">Interfaces</target>
        </trans-unit>
        <trans-unit id="c632fec3f45ac8b54f91b4a4d6fa855d1c422171" translate="yes" xml:space="preserve">
          <source>Internally, this rule uses the PHP &lt;code&gt;preg_match&lt;/code&gt; function. The pattern specified should obey the same formatting required by &lt;code&gt;preg_match&lt;/code&gt; and thus also include valid delimiters. For example: &lt;code&gt;'email' =&amp;gt; 'regex:/^.+@.+$/i'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f54b5d08b9e7e9575b4cb09d85028b44cacc36cb" translate="yes" xml:space="preserve">
          <source>Intersect the collection with the given items by key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac5f15a9f88cf3506ff885f7cc498184f0cea7a" translate="yes" xml:space="preserve">
          <source>Intersect the collection with the given items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="474abcfe06fcebaf10100258687c39dc09eb6846" translate="yes" xml:space="preserve">
          <source>InvalidArgumentException</source>
          <target state="translated">InvalidArgumentException</target>
        </trans-unit>
        <trans-unit id="70e975ae436dffc4aaf8bb3938a256cfd6cda7be" translate="yes" xml:space="preserve">
          <source>InvalidPayloadException</source>
          <target state="translated">InvalidPayloadException</target>
        </trans-unit>
        <trans-unit id="23e6e2430796e298723e193487e67abe48c8fc17" translate="yes" xml:space="preserve">
          <source>InvalidPayloadException (Queue)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ecaeb42bf4e3b97734d54543ad9fcf10de6054" translate="yes" xml:space="preserve">
          <source>InvalidPayloadException::__construct()</source>
          <target state="translated">InvalidPayloadException::__construct()</target>
        </trans-unit>
        <trans-unit id="e55cc8a9619d144e386961fd900a69d72ce9b44c" translate="yes" xml:space="preserve">
          <source>InvalidSignatureException</source>
          <target state="translated">InvalidSignatureException</target>
        </trans-unit>
        <trans-unit id="de07016d07471deddaf32d16913e1b24358beaac" translate="yes" xml:space="preserve">
          <source>InvalidSignatureException (Routing\Exceptions)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef721e0a975c7fe3a84dfe4009967bd269810d9" translate="yes" xml:space="preserve">
          <source>InvalidSignatureException::__construct()</source>
          <target state="translated">InvalidSignatureException::__construct()</target>
        </trans-unit>
        <trans-unit id="14d5a0cd53c6fd6943f6f29dfdacf8a1439b7b65" translate="yes" xml:space="preserve">
          <source>Invalidate other sessions for the current user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25818764123575f6e7e9d85b4af887a1989685e8" translate="yes" xml:space="preserve">
          <source>Invalidating Sessions On Other Devices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35f8f37b92ae06da1cbb06dd1617d767c1b6ea72" translate="yes" xml:space="preserve">
          <source>Invoices</source>
          <target state="translated">Invoices</target>
        </trans-unit>
        <trans-unit id="fa4dcffa5113b00526bb461d85972bcbadda899d" translate="yes" xml:space="preserve">
          <source>Invoke the controller method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2bc0cf95cbc7cc0a7a624977d1d5c033b6af394" translate="yes" xml:space="preserve">
          <source>Is Doctrine available?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0ec01ce86e1148025f5f436a27df8102e4839d1" translate="yes" xml:space="preserve">
          <source>Is the given string surrounded by the given character?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0c213054bf824d45c2718ca3d566dae68e73b26" translate="yes" xml:space="preserve">
          <source>Issuing Access Tokens</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac32c207edd753e66f3b4d678c70c48bd6e31398" translate="yes" xml:space="preserve">
          <source>It is cumbersome to always pass the &lt;code&gt;locale&lt;/code&gt; every time you call the &lt;code&gt;route&lt;/code&gt; helper. So, you may use the &lt;code&gt;URL::defaults&lt;/code&gt; method to define a default value for this parameter that will always be applied during the current request. You may wish to call this method from a &lt;a href=&quot;middleware#assigning-middleware-to-routes&quot;&gt;route middleware&lt;/a&gt; so that you have access to the current request:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b37687e785e8ae6a694d7943786467fa93ba720d" translate="yes" xml:space="preserve">
          <source>It is often helpful to have different configuration values based on the environment where the application is running. For example, you may wish to use a different cache driver locally than you do on your production server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41661ecfc5041c9a4d7e97ac604361646c6f8f28" translate="yes" xml:space="preserve">
          <source>It is often useful to reset your database after each test so that data from a previous test does not interfere with subsequent tests. The &lt;code&gt;RefreshDatabase&lt;/code&gt; trait takes the most optimal approach to migrating your test database depending on if you are using an in-memory database or a traditional database. Use the trait on your test class and everything will be handled for you:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7038df1f7c26d40910033e1cc458309d5cec5a1" translate="yes" xml:space="preserve">
          <source>It is very important to note that we did not need to specify the full controller namespace when defining the controller route. Since the &lt;code&gt;RouteServiceProvider&lt;/code&gt; loads your route files within a route group that contains the namespace, we only specified the portion of the class name that comes after the &lt;code&gt;App\Http\Controllers&lt;/code&gt; portion of the namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b39f96a31b34993e3f76d4de2a0e018d6187e39" translate="yes" xml:space="preserve">
          <source>It's best to envision middleware as a series of &quot;layers&quot; HTTP requests must pass through before they hit your application. Each layer can examine the request and even reject it entirely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a035e8c94497b222365e77324f10d4581ae1c7d" translate="yes" xml:space="preserve">
          <source>Items not found in the cache will have a null value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fb7e44d0f21152c7a147c841b758453f7e0cef7" translate="yes" xml:space="preserve">
          <source>Iterate through registered plugins and execute plugins' methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d1981a59e491448ff84cec967f357e23d7a3da" translate="yes" xml:space="preserve">
          <source>JSON API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab298721be5a406b1f264fb4a0b13d86d0a5531" translate="yes" xml:space="preserve">
          <source>JSON PHP Extension</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="565022c0f2b484f49110f22aedc82f84cd16fb86" translate="yes" xml:space="preserve">
          <source>JSON Responses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="063f5b40cca4895106081e6e0436fc09b19afbfb" translate="yes" xml:space="preserve">
          <source>JSON Where Clauses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c59c0317652386105b23d857967c130e0e0589" translate="yes" xml:space="preserve">
          <source>JSON equivalent column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="770d99157b721430193360cf5e11fb14d8bad3d3" translate="yes" xml:space="preserve">
          <source>JSONB equivalent column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39a74d46ff0229b00d90fbd74074cefd45f28b74" translate="yes" xml:space="preserve">
          <source>January 24th, 2017</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e805134cafdef4bd85338d5ebcc7630cfdd370" translate="yes" xml:space="preserve">
          <source>January 24th, 2018</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68ef4374f2d4a9c0c258d3898ad40c4ba443343d" translate="yes" xml:space="preserve">
          <source>Jar::forever()</source>
          <target state="translated">Jar::forever()</target>
        </trans-unit>
        <trans-unit id="39caa569565af369dbeddc9d5cdcb966c317a86e" translate="yes" xml:space="preserve">
          <source>Jar::forget()</source>
          <target state="translated">Jar::forget()</target>
        </trans-unit>
        <trans-unit id="0dc56ebdd0a2830587337b52886d7ac9f98d3826" translate="yes" xml:space="preserve">
          <source>Jar::getPathAndDomain()</source>
          <target state="translated">Jar::getPathAndDomain()</target>
        </trans-unit>
        <trans-unit id="ada11e91a518838d2d938a007bfb05b49158f1c3" translate="yes" xml:space="preserve">
          <source>Jar::getQueuedCookies()</source>
          <target state="translated">Jar::getQueuedCookies()</target>
        </trans-unit>
        <trans-unit id="a92a5033725726c45ad1f6ea1cc810d2ee019586" translate="yes" xml:space="preserve">
          <source>Jar::hasQueued()</source>
          <target state="translated">Jar::hasQueued()</target>
        </trans-unit>
        <trans-unit id="defd48ac7f86fca2b7c03166bfd58d5b7f6986a9" translate="yes" xml:space="preserve">
          <source>Jar::make()</source>
          <target state="translated">Jar::make()</target>
        </trans-unit>
        <trans-unit id="1c635ed171917550165c2e8363800a0ad3a71aaa" translate="yes" xml:space="preserve">
          <source>Jar::queue()</source>
          <target state="translated">Jar::queue()</target>
        </trans-unit>
        <trans-unit id="836242169a75fa6147d31cc733de002299f701b7" translate="yes" xml:space="preserve">
          <source>Jar::queued()</source>
          <target state="translated">Jar::queued()</target>
        </trans-unit>
        <trans-unit id="6c363679d1bbe8e5de54963054b73571885161c3" translate="yes" xml:space="preserve">
          <source>Jar::setDefaultPathAndDomain()</source>
          <target state="translated">Jar::setDefaultPathAndDomain()</target>
        </trans-unit>
        <trans-unit id="9d45b9bb0b7905a9907ce66c7f128913ebc7274a" translate="yes" xml:space="preserve">
          <source>Jar::unqueue()</source>
          <target state="translated">Jar::unqueue()</target>
        </trans-unit>
        <trans-unit id="ee620923ff5fc510555dc37083a135ee93b5404b" translate="yes" xml:space="preserve">
          <source>JavaScript</source>
          <target state="translated">JavaScript</target>
        </trans-unit>
        <trans-unit id="ea9212f85e861b1c00fc2f1eb1fe9581fdf49d6e" translate="yes" xml:space="preserve">
          <source>JavaScript &amp;amp; CSS Scaffolding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="984512ca0af6c846a106b53df5519ac7fc8e764d" translate="yes" xml:space="preserve">
          <source>Jigsaw</source>
          <target state="translated">Jigsaw</target>
        </trans-unit>
        <trans-unit id="30c8cb83b9acd93beaa32086336c36cb77c065d9" translate="yes" xml:space="preserve">
          <source>Job</source>
          <target state="translated">Job</target>
        </trans-unit>
        <trans-unit id="8e778a2df1e76eaf04e88c068026d8fc7317f388" translate="yes" xml:space="preserve">
          <source>Job
    getPheanstalkJob()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf69eb83ca1b54393067180dc3fd154a489774cf" translate="yes" xml:space="preserve">
          <source>Job (Contracts)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52ac3e7900f792b437fa8f18ddfd069df8bf8462" translate="yes" xml:space="preserve">
          <source>Job (Queue\Jobs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd9b5761a4c2eb4c07230ab8d0ae2f3a3cb3bb06" translate="yes" xml:space="preserve">
          <source>Job Chaining</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="460bc12837b10f2a75abb16e30585827ceb62246" translate="yes" xml:space="preserve">
          <source>Job Events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f8b021e68b3ae2a2d4752698b0db775fd4daf46" translate="yes" xml:space="preserve">
          <source>Job Expiration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d50e263289cf9cdb14e74dd9d5397b3eee3cc7da" translate="yes" xml:space="preserve">
          <source>Job Expirations &amp;amp; Timeouts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f312a0cfc810775918dd2d377a729d8e86afc0be" translate="yes" xml:space="preserve">
          <source>Job chaining allows you to specify a list of queued jobs that should be run in sequence. If one job in the sequence fails, the rest of the jobs will not be run. To execute a queued job chain, you may use the &lt;code&gt;withChain&lt;/code&gt; method on any of your dispatchable jobs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="922dea61fde0392b19983ba8d4d759dd551b7674" translate="yes" xml:space="preserve">
          <source>Job classes are very simple, normally containing only a &lt;code&gt;handle&lt;/code&gt; method which is called when the job is processed by the queue. To get started, let's take a look at an example job class. In this example, we'll pretend we manage a podcast publishing service and need to process the uploaded podcast files before they are published:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969bfb0661fcc6c8175e129098b6e7d344ea58d2" translate="yes" xml:space="preserve">
          <source>Job::attempts()</source>
          <target state="translated">Job::attempts()</target>
        </trans-unit>
        <trans-unit id="5eedc6a95b944c6bd1a54080699d698437fb22aa" translate="yes" xml:space="preserve">
          <source>Job::delete()</source>
          <target state="translated">Job::delete()</target>
        </trans-unit>
        <trans-unit id="460f463b540f5dcba516da5c23a78536d06498b6" translate="yes" xml:space="preserve">
          <source>Job::failed()</source>
          <target state="translated">Job::failed()</target>
        </trans-unit>
        <trans-unit id="73245797c15cdb6c736ed82aba2a1495c8271f63" translate="yes" xml:space="preserve">
          <source>Job::fire()</source>
          <target state="translated">Job::fire()</target>
        </trans-unit>
        <trans-unit id="1daa8e5e9f08c51c39787e1e7025fe5485a86d58" translate="yes" xml:space="preserve">
          <source>Job::getConnectionName()</source>
          <target state="translated">Job::getConnectionName()</target>
        </trans-unit>
        <trans-unit id="487cf738ea370b478620d3393412d34af70474fb" translate="yes" xml:space="preserve">
          <source>Job::getContainer()</source>
          <target state="translated">Job::getContainer()</target>
        </trans-unit>
        <trans-unit id="92131d8221234f44c879c8334787db786880ae48" translate="yes" xml:space="preserve">
          <source>Job::getJobId()</source>
          <target state="translated">Job::getJobId()</target>
        </trans-unit>
        <trans-unit id="f6ee9b899a4f6c590c8acd5c4ac1fac13c5cabad" translate="yes" xml:space="preserve">
          <source>Job::getName()</source>
          <target state="translated">Job::getName()</target>
        </trans-unit>
        <trans-unit id="21d451a45de4ac6c62c2eb3a53ce2e5ff343e5ae" translate="yes" xml:space="preserve">
          <source>Job::getQueue()</source>
          <target state="translated">Job::getQueue()</target>
        </trans-unit>
        <trans-unit id="e42135f41d3696e44b618e94d747ed1cc8b6bb4b" translate="yes" xml:space="preserve">
          <source>Job::getRawBody()</source>
          <target state="translated">Job::getRawBody()</target>
        </trans-unit>
        <trans-unit id="2875d7f52b06f2e7440f4fc6381602600e0c0430" translate="yes" xml:space="preserve">
          <source>Job::hasFailed()</source>
          <target state="translated">Job::hasFailed()</target>
        </trans-unit>
        <trans-unit id="23fa301688eaaa1243632d63108bc02409a8f4a7" translate="yes" xml:space="preserve">
          <source>Job::isDeleted()</source>
          <target state="translated">Job::isDeleted()</target>
        </trans-unit>
        <trans-unit id="dfa3ced177e49d674e5a870d3853cc5ccd434d37" translate="yes" xml:space="preserve">
          <source>Job::isDeletedOrReleased()</source>
          <target state="translated">Job::isDeletedOrReleased()</target>
        </trans-unit>
        <trans-unit id="1a1400ac325397d86567858570765895781d0eb7" translate="yes" xml:space="preserve">
          <source>Job::isReleased()</source>
          <target state="translated">Job::isReleased()</target>
        </trans-unit>
        <trans-unit id="d41a90fff9f816c7c0fa370877da76e01b1dc5b7" translate="yes" xml:space="preserve">
          <source>Job::markAsFailed()</source>
          <target state="translated">Job::markAsFailed()</target>
        </trans-unit>
        <trans-unit id="2d0cd04100ad77e943ba5cdf3434f1d6ee895f1d" translate="yes" xml:space="preserve">
          <source>Job::maxTries()</source>
          <target state="translated">Job::maxTries()</target>
        </trans-unit>
        <trans-unit id="680711024e196db9ccb1ef11f61a3992aff6d2e1" translate="yes" xml:space="preserve">
          <source>Job::payload()</source>
          <target state="translated">Job::payload()</target>
        </trans-unit>
        <trans-unit id="84a18021a46cb346038c674630c0086bd100706d" translate="yes" xml:space="preserve">
          <source>Job::release()</source>
          <target state="translated">Job::release()</target>
        </trans-unit>
        <trans-unit id="e9ba7b35acdf3e2f82e5b6751ec32b48f78904d9" translate="yes" xml:space="preserve">
          <source>Job::resolve()</source>
          <target state="translated">Job::resolve()</target>
        </trans-unit>
        <trans-unit id="fffb56968ccb0379077c4c87b23714f4480d7eda" translate="yes" xml:space="preserve">
          <source>Job::resolveName()</source>
          <target state="translated">Job::resolveName()</target>
        </trans-unit>
        <trans-unit id="9bc91d6fb11d2b5987f15cc34c8abe51119c5a29" translate="yes" xml:space="preserve">
          <source>Job::timeout()</source>
          <target state="translated">Job::timeout()</target>
        </trans-unit>
        <trans-unit id="1688901e3dac9ed35b35d3758b46548f8bd47892" translate="yes" xml:space="preserve">
          <source>Job::timeoutAt()</source>
          <target state="translated">Job::timeoutAt()</target>
        </trans-unit>
        <trans-unit id="c4e805ab1d6951395b62c34176b98e3ba13a298e" translate="yes" xml:space="preserve">
          <source>JobExceptionOccurred</source>
          <target state="translated">JobExceptionOccurred</target>
        </trans-unit>
        <trans-unit id="543a3fa32251346c08806b69cb4a33cce80c3dc2" translate="yes" xml:space="preserve">
          <source>JobExceptionOccurred (Queue\Events)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b239a9483183b306fe7d0390d5e692dd408bb12" translate="yes" xml:space="preserve">
          <source>JobExceptionOccurred::__construct()</source>
          <target state="translated">JobExceptionOccurred::__construct()</target>
        </trans-unit>
        <trans-unit id="3fd4dca33b1d997e07b9fdd671d7a8b1a283e9fc" translate="yes" xml:space="preserve">
          <source>JobFailed</source>
          <target state="translated">JobFailed</target>
        </trans-unit>
        <trans-unit id="ee651a7c32028e519426347ff6e2e2bc71d3ea26" translate="yes" xml:space="preserve">
          <source>JobFailed (Queue\Events)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4018885c11778fd0bb6337e0a6c21d2ffcf3a4d5" translate="yes" xml:space="preserve">
          <source>JobFailed::__construct()</source>
          <target state="translated">JobFailed::__construct()</target>
        </trans-unit>
        <trans-unit id="2221c5357fcf9989b525838657f610de06b45873" translate="yes" xml:space="preserve">
          <source>JobMakeCommand</source>
          <target state="translated">JobMakeCommand</target>
        </trans-unit>
        <trans-unit id="395bab2de83c094dc3025b49a741af4d8e8bf53d" translate="yes" xml:space="preserve">
          <source>JobMakeCommand (Foundation)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92dcaf9eb20e24139b3fd5af6c4107d877fcd0b5" translate="yes" xml:space="preserve">
          <source>JobMakeCommand::getDefaultNamespace()</source>
          <target state="translated">JobMakeCommand::getDefaultNamespace()</target>
        </trans-unit>
        <trans-unit id="bdb9ab38e679fb4b66f106a487ae6fd69d46fd71" translate="yes" xml:space="preserve">
          <source>JobMakeCommand::getOptions()</source>
          <target state="translated">JobMakeCommand::getOptions()</target>
        </trans-unit>
        <trans-unit id="07bcc8653e018ac437b489e42c14fc0d817b8ca5" translate="yes" xml:space="preserve">
          <source>JobMakeCommand::getStub()</source>
          <target state="translated">JobMakeCommand::getStub()</target>
        </trans-unit>
        <trans-unit id="f1f568f7bbb3aae07f923667c832d60a1e42728a" translate="yes" xml:space="preserve">
          <source>JobName</source>
          <target state="translated">JobName</target>
        </trans-unit>
        <trans-unit id="9bc19cd9ee40392f36cb941e252d9561e737394d" translate="yes" xml:space="preserve">
          <source>JobName (Queue\Jobs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5502481894fa38641cf46f7606b4f844c9347513" translate="yes" xml:space="preserve">
          <source>JobName::parse()</source>
          <target state="translated">JobName::parse()</target>
        </trans-unit>
        <trans-unit id="99fadcbd57d6e001dbcb009bded456db3d88b2db" translate="yes" xml:space="preserve">
          <source>JobName::resolve()</source>
          <target state="translated">JobName::resolve()</target>
        </trans-unit>
        <trans-unit id="12399cd6dda72b0830e44ffe2e95e08f57fbc308" translate="yes" xml:space="preserve">
          <source>JobProcessed</source>
          <target state="translated">JobProcessed</target>
        </trans-unit>
        <trans-unit id="6f502b84b4f76a03d05a1d33039f6bec30af0e28" translate="yes" xml:space="preserve">
          <source>JobProcessed (Queue\Events)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6bcd48823a842511cc1115374d8e26deebd7749" translate="yes" xml:space="preserve">
          <source>JobProcessed::__construct()</source>
          <target state="translated">JobProcessed::__construct()</target>
        </trans-unit>
        <trans-unit id="76485ed4552b9b0efc36b64fc73035109d19230b" translate="yes" xml:space="preserve">
          <source>JobProcessing</source>
          <target state="translated">JobProcessing</target>
        </trans-unit>
        <trans-unit id="5eeff561360add95937d66365093910077c68a17" translate="yes" xml:space="preserve">
          <source>JobProcessing (Queue\Events)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ee2cd703692da6c030c1b39b873254d589a7cd" translate="yes" xml:space="preserve">
          <source>JobProcessing::__construct()</source>
          <target state="translated">JobProcessing::__construct()</target>
        </trans-unit>
        <trans-unit id="8468dd2fe9999a77c67f7a39273b321e20bc2717" translate="yes" xml:space="preserve">
          <source>JoinClause</source>
          <target state="translated">JoinClause</target>
        </trans-unit>
        <trans-unit id="2eedfefd68562c3e7edc72607c8f5dc815d77372" translate="yes" xml:space="preserve">
          <source>JoinClause (Database\Query)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0eb2c475d95ed2b64f4d5af699bc1f5be726822" translate="yes" xml:space="preserve">
          <source>JoinClause::__construct()</source>
          <target state="translated">JoinClause::__construct()</target>
        </trans-unit>
        <trans-unit id="8f6aedffe27dd68a4ebb13ff4b18dfa660e2403b" translate="yes" xml:space="preserve">
          <source>JoinClause::forSubQuery()</source>
          <target state="translated">JoinClause::forSubQuery()</target>
        </trans-unit>
        <trans-unit id="f3fb37d881c38b83541cf573e34948099a142d5a" translate="yes" xml:space="preserve">
          <source>JoinClause::newQuery()</source>
          <target state="translated">JoinClause::newQuery()</target>
        </trans-unit>
        <trans-unit id="2d8a49584491a6ed38c7aca67486bd5781b58db9" translate="yes" xml:space="preserve">
          <source>JoinClause::on()</source>
          <target state="translated">JoinClause::on()</target>
        </trans-unit>
        <trans-unit id="23e7ee6d19eaeb77cf3862b8d06bdf3b12a7843f" translate="yes" xml:space="preserve">
          <source>JoinClause::orOn()</source>
          <target state="translated">JoinClause::orOn()</target>
        </trans-unit>
        <trans-unit id="aa20e8f265cf7079d0b22a260325ac4770660c99" translate="yes" xml:space="preserve">
          <source>Joining Presence Channels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36cb6826dbbbacc9f0915d9e44ccb82925b04c72" translate="yes" xml:space="preserve">
          <source>Joins</source>
          <target state="translated">Joins</target>
        </trans-unit>
        <trans-unit id="ec11658474cfe99e7b124c4ba9c07ef816b7be5f" translate="yes" xml:space="preserve">
          <source>Joomla</source>
          <target state="translated">Joomla</target>
        </trans-unit>
        <trans-unit id="99813e1a2b0f7c0f04aa6e1090672b3f50117938" translate="yes" xml:space="preserve">
          <source>JsonEncodingException</source>
          <target state="translated">JsonEncodingException</target>
        </trans-unit>
        <trans-unit id="a9faf297a6fe3264efa89ee8a9865d11864ad639" translate="yes" xml:space="preserve">
          <source>JsonEncodingException (Database\Eloquent)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c87fb038ba5a9cd493b76faa2e57ce3fff5269c" translate="yes" xml:space="preserve">
          <source>JsonEncodingException::forAttribute()</source>
          <target state="translated">JsonEncodingException::forAttribute()</target>
        </trans-unit>
        <trans-unit id="2a2dcb6800fff1b1c038e06e3e162a96a3c44eb6" translate="yes" xml:space="preserve">
          <source>JsonEncodingException::forModel()</source>
          <target state="translated">JsonEncodingException::forModel()</target>
        </trans-unit>
        <trans-unit id="811b2e01179acfc1d29028fa7de74789cef4b689" translate="yes" xml:space="preserve">
          <source>JsonExpression</source>
          <target state="translated">JsonExpression</target>
        </trans-unit>
        <trans-unit id="d9e009a9d830cf15f58eb7411290b206f394e404" translate="yes" xml:space="preserve">
          <source>JsonExpression (Database\Query)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8066a3e6fd649ecb30a2e4671bf8e697a2eec3a3" translate="yes" xml:space="preserve">
          <source>JsonExpression::__construct()</source>
          <target state="translated">JsonExpression::__construct()</target>
        </trans-unit>
        <trans-unit id="312c1f4bed83dc044e52bd8aecb32f6b6efaab15" translate="yes" xml:space="preserve">
          <source>JsonExpression::getJsonBindingParameter()</source>
          <target state="translated">JsonExpression::getJsonBindingParameter()</target>
        </trans-unit>
        <trans-unit id="8a9f62d49faaaad7bcfe259ddafb5477dcb99115" translate="yes" xml:space="preserve">
          <source>JsonResource</source>
          <target state="translated">JsonResource</target>
        </trans-unit>
        <trans-unit id="bf0ff8436f323d1d952c09b688d3dfc5c5251e86" translate="yes" xml:space="preserve">
          <source>JsonResource (Http\Resources)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6533be4a32a650fa0bdc811ec0c897164869a4cb" translate="yes" xml:space="preserve">
          <source>JsonResource::__construct()</source>
          <target state="translated">JsonResource::__construct()</target>
        </trans-unit>
        <trans-unit id="36e595c5a2b2b6b3c0b4451e783bd17d8fb48351" translate="yes" xml:space="preserve">
          <source>JsonResource::additional()</source>
          <target state="translated">JsonResource::additional()</target>
        </trans-unit>
        <trans-unit id="743c7175374efbeebd2d505c887ae53e43621a0d" translate="yes" xml:space="preserve">
          <source>JsonResource::collection()</source>
          <target state="translated">JsonResource::collection()</target>
        </trans-unit>
        <trans-unit id="56c7a655b44f963a5c3ee0dc035916a2c5c57f23" translate="yes" xml:space="preserve">
          <source>JsonResource::jsonSerialize()</source>
          <target state="translated">JsonResource::jsonSerialize()</target>
        </trans-unit>
        <trans-unit id="7a446a2f361f48e7ef0766eb734c049db329a508" translate="yes" xml:space="preserve">
          <source>JsonResource::make()</source>
          <target state="translated">JsonResource::make()</target>
        </trans-unit>
        <trans-unit id="451e1c230878fdff2ecd344374174371527c4f18" translate="yes" xml:space="preserve">
          <source>JsonResource::resolve()</source>
          <target state="translated">JsonResource::resolve()</target>
        </trans-unit>
        <trans-unit id="8262608145b81bc51ae3a3b310daf50142302340" translate="yes" xml:space="preserve">
          <source>JsonResource::response()</source>
          <target state="translated">JsonResource::response()</target>
        </trans-unit>
        <trans-unit id="a85fb48abffd75ae92ed24b0ecb6b32bf42ce91a" translate="yes" xml:space="preserve">
          <source>JsonResource::toArray()</source>
          <target state="translated">JsonResource::toArray()</target>
        </trans-unit>
        <trans-unit id="735cbf412dee8a2ebe1621a5a49af85e5f79cb70" translate="yes" xml:space="preserve">
          <source>JsonResource::toResponse()</source>
          <target state="translated">JsonResource::toResponse()</target>
        </trans-unit>
        <trans-unit id="b8c4a4f350e8cc1fae7b286e42b33ab92abed612" translate="yes" xml:space="preserve">
          <source>JsonResource::with()</source>
          <target state="translated">JsonResource::with()</target>
        </trans-unit>
        <trans-unit id="e157bfa7bbb009829940291984e2eda177cb14f4" translate="yes" xml:space="preserve">
          <source>JsonResource::withResponse()</source>
          <target state="translated">JsonResource::withResponse()</target>
        </trans-unit>
        <trans-unit id="7080c5f67d99cb8d3be0210b2f687340441ec230" translate="yes" xml:space="preserve">
          <source>JsonResource::withoutWrapping()</source>
          <target state="translated">JsonResource::withoutWrapping()</target>
        </trans-unit>
        <trans-unit id="e29d637f2ea2ae0743c485a4e9ebe196b0544779" translate="yes" xml:space="preserve">
          <source>JsonResource::wrap()</source>
          <target state="translated">JsonResource::wrap()</target>
        </trans-unit>
        <trans-unit id="0ffa6db4b15f44f2c0dcd68335b85b11487d0c19" translate="yes" xml:space="preserve">
          <source>JsonResponse</source>
          <target state="translated">JsonResponse</target>
        </trans-unit>
        <trans-unit id="5f7d2ea3adbfeed4911e46f1127dae50ca162a14" translate="yes" xml:space="preserve">
          <source>JsonResponse (Http)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dafed5d1d729ea609c27f120b758441014cc6ed" translate="yes" xml:space="preserve">
          <source>JsonResponse::__construct()</source>
          <target state="translated">JsonResponse::__construct()</target>
        </trans-unit>
        <trans-unit id="83c9dab0fa0c94b2a8b637eb42ad47fde02bc4cf" translate="yes" xml:space="preserve">
          <source>JsonResponse::getData()</source>
          <target state="translated">JsonResponse::getData()</target>
        </trans-unit>
        <trans-unit id="6608c1faeb2595bc2ea11d52ec8594986029b97d" translate="yes" xml:space="preserve">
          <source>JsonResponse::hasEncodingOption()</source>
          <target state="translated">JsonResponse::hasEncodingOption()</target>
        </trans-unit>
        <trans-unit id="175705571fb8db66a0958a229025bd7b07744c4a" translate="yes" xml:space="preserve">
          <source>JsonResponse::hasValidJson()</source>
          <target state="translated">JsonResponse::hasValidJson()</target>
        </trans-unit>
        <trans-unit id="aad944b08f736de0c13780f317832c183971d61c" translate="yes" xml:space="preserve">
          <source>JsonResponse::setData()</source>
          <target state="translated">JsonResponse::setData()</target>
        </trans-unit>
        <trans-unit id="3a3138b26d6ebac6f7fba182cc6680f7ab6ae1ae" translate="yes" xml:space="preserve">
          <source>JsonResponse::setEncodingOptions()</source>
          <target state="translated">JsonResponse::setEncodingOptions()</target>
        </trans-unit>
        <trans-unit id="08716af7c24682942e947acbb9089020d5168b42" translate="yes" xml:space="preserve">
          <source>JsonResponse::withCallback()</source>
          <target state="translated">JsonResponse::withCallback()</target>
        </trans-unit>
        <trans-unit id="2ca1074e61f234f7ed88d910cce0126247cf865e" translate="yes" xml:space="preserve">
          <source>Jsonable</source>
          <target state="translated">Jsonable</target>
        </trans-unit>
        <trans-unit id="bf1070ce011474911ca16c4d8a842423c0ee4ae9" translate="yes" xml:space="preserve">
          <source>Jsonable (Contracts)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0818c1d20000521d27b09893b891d43676afe9c" translate="yes" xml:space="preserve">
          <source>Jsonable::toJson()</source>
          <target state="translated">Jsonable::toJson()</target>
        </trans-unit>
        <trans-unit id="656be1f7b067c1f222f3e00c88f45d0bf0d942d6" translate="yes" xml:space="preserve">
          <source>July 24th, 2017</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="919cbf9d66b6f8d79b01878d384ddf253a2d0a26" translate="yes" xml:space="preserve">
          <source>June 21st, 2016</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd81b82eed519d3094b1c5e674ccdaef43c52979" translate="yes" xml:space="preserve">
          <source>June 9th, 2015</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32f0e08b1188a643f527d26dbefb68c8ee0f8e64" translate="yes" xml:space="preserve">
          <source>June 9th, 2017</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d1d7aee95173705eff451c40974d84092451c6" translate="yes" xml:space="preserve">
          <source>June 9th, 2018</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4200d59bfef2b7b2c4438ce8be7ed39e56ecf60" translate="yes" xml:space="preserve">
          <source>Just before the view is rendered, the composer's &lt;code&gt;compose&lt;/code&gt; method is called with the &lt;code&gt;Illuminate\View\View&lt;/code&gt; instance. You may use the &lt;code&gt;with&lt;/code&gt; method to bind data to the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d89ae689a0f8f705a7e17031f805c0b403593f94" translate="yes" xml:space="preserve">
          <source>Just like HTTP routes, channel routes may also take advantage of implicit and explicit &lt;a href=&quot;routing#route-model-binding&quot;&gt;route model binding&lt;/a&gt;. For example, instead of receiving the string or numeric order ID, you may request an actual &lt;code&gt;Order&lt;/code&gt; model instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63265dc144907e3afa04d5c20a82e1f05d97f0ff" translate="yes" xml:space="preserve">
          <source>KEYS - The keys that represent available slots ARGV[1] - The limiter name ARGV[2] - The number of seconds the slot should be reserved</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fcc4160d899fe747e00a88b6f53871dd5ade945" translate="yes" xml:space="preserve">
          <source>KEYS[1] - The &quot;delayed&quot; queue we release jobs onto, for example: queues:foo:delayed KEYS[2] - The queue the jobs are currently on, for example: queues:foo:reserved ARGV[1] - The raw payload of the job to add to the &quot;delayed&quot; queue ARGV[2] - The UNIX timestamp at which the job should become available</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f6c770f2d3a5e6c0a94af408a31363229407d35" translate="yes" xml:space="preserve">
          <source>KEYS[1] - The limiter name ARGV[1] - Current time in microseconds ARGV[2] - Current time in seconds ARGV[3] - Duration of the bucket ARGV[4] - Allowed number of tasks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43060ca0789b1fe8b940f1d272db02f599f00b8c" translate="yes" xml:space="preserve">
          <source>KEYS[1] - The name of the primary queue KEYS[2] - The name of the &quot;delayed&quot; queue KEYS[3] - The name of the &quot;reserved&quot; queue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b767214b9ba9c0eeeec600f3bea6c5475230399" translate="yes" xml:space="preserve">
          <source>KEYS[1] - The queue to pop jobs from, for example: queues:foo KEYS[2] - The queue to place reserved jobs on, for example: queues:foo:reserved ARGV[1] - The time at which the reserved job will expire</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe15a0a1fb9d5d2947c802a3137908ff54653e7" translate="yes" xml:space="preserve">
          <source>KEYS[1] - The queue we are removing jobs from, for example: queues:foo:reserved KEYS[2] - The queue we are moving jobs to, for example: queues:foo ARGV[1] - The current UNIX timestamp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="913305b0b0d858cc87a22b16642d2a969b0cff82" translate="yes" xml:space="preserve">
          <source>Katana</source>
          <target state="translated">Katana</target>
        </trans-unit>
        <trans-unit id="7558734a8f08a433995abe8d660ee66e74777b96" translate="yes" xml:space="preserve">
          <source>Keep in mind that most response methods are chainable, allowing for the fluent construction of response instances. For example, you may use the &lt;code&gt;header&lt;/code&gt; method to add a series of headers to the response before sending it back to the user:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74808d3df030e992e7b9444241625147986487c1" translate="yes" xml:space="preserve">
          <source>Kernel</source>
          <target state="translated">Kernel</target>
        </trans-unit>
        <trans-unit id="86e10cfdc61e63c1f8809f3611afe3a913a4dfaf" translate="yes" xml:space="preserve">
          <source>Kernel (Contracts)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1ac901c4a47e89bae12b2f8406192a2404f1d19" translate="yes" xml:space="preserve">
          <source>Kernel (Foundation)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92d9efc540e89fd56fa51375b884f858f23c9937" translate="yes" xml:space="preserve">
          <source>Kernel (Foundation\Http)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab56a2eda2ac35fedd9a65272adb2b571bb26186" translate="yes" xml:space="preserve">
          <source>Kernel::__construct()</source>
          <target state="translated">Kernel::__construct()</target>
        </trans-unit>
        <trans-unit id="2f4daf56ba340265296d20213183e21756f48358" translate="yes" xml:space="preserve">
          <source>Kernel::all()</source>
          <target state="translated">Kernel::all()</target>
        </trans-unit>
        <trans-unit id="79759990eca956507e0517785afe542ba497ae00" translate="yes" xml:space="preserve">
          <source>Kernel::bootstrap()</source>
          <target state="translated">Kernel::bootstrap()</target>
        </trans-unit>
        <trans-unit id="9d8b1ff48b418951dad2345a40fab64946b23a23" translate="yes" xml:space="preserve">
          <source>Kernel::bootstrappers()</source>
          <target state="translated">Kernel::bootstrappers()</target>
        </trans-unit>
        <trans-unit id="df99a3f6ee1a3de3582d59a186ac7a7caa198590" translate="yes" xml:space="preserve">
          <source>Kernel::call()</source>
          <target state="translated">Kernel::call()</target>
        </trans-unit>
        <trans-unit id="c74c2983a9455c587714c541e0275fc127253409" translate="yes" xml:space="preserve">
          <source>Kernel::command()</source>
          <target state="translated">Kernel::command()</target>
        </trans-unit>
        <trans-unit id="71f4cc47c98758bf0a749fa34ae994f4aacf17cd" translate="yes" xml:space="preserve">
          <source>Kernel::commands()</source>
          <target state="translated">Kernel::commands()</target>
        </trans-unit>
        <trans-unit id="12d04169c3fe065207ccc2068ef7702e251c0245" translate="yes" xml:space="preserve">
          <source>Kernel::defineConsoleSchedule()</source>
          <target state="translated">Kernel::defineConsoleSchedule()</target>
        </trans-unit>
        <trans-unit id="ec5c895aa624134b57fa7a46b081bff8c110f454" translate="yes" xml:space="preserve">
          <source>Kernel::dispatchToRouter()</source>
          <target state="translated">Kernel::dispatchToRouter()</target>
        </trans-unit>
        <trans-unit id="1cbf2db098c3d08e0cb5f8225daa393cfa7275a4" translate="yes" xml:space="preserve">
          <source>Kernel::gatherRouteMiddleware()</source>
          <target state="translated">Kernel::gatherRouteMiddleware()</target>
        </trans-unit>
        <trans-unit id="0d4baeedee28f161712906453c52988e607676b6" translate="yes" xml:space="preserve">
          <source>Kernel::getApplication()</source>
          <target state="translated">Kernel::getApplication()</target>
        </trans-unit>
        <trans-unit id="5273b498ae2fa568b898c35567e60634ba4732c7" translate="yes" xml:space="preserve">
          <source>Kernel::getArtisan()</source>
          <target state="translated">Kernel::getArtisan()</target>
        </trans-unit>
        <trans-unit id="f4c70739f828c2ce450eb2d7e68c8ec74c48369e" translate="yes" xml:space="preserve">
          <source>Kernel::handle()</source>
          <target state="translated">Kernel::handle()</target>
        </trans-unit>
        <trans-unit id="158dff28a1597378bcc930649eb4e163a1f322f4" translate="yes" xml:space="preserve">
          <source>Kernel::hasMiddleware()</source>
          <target state="translated">Kernel::hasMiddleware()</target>
        </trans-unit>
        <trans-unit id="a5900df465b80c2b2af4c6a46b5098137ff27ba1" translate="yes" xml:space="preserve">
          <source>Kernel::load()</source>
          <target state="translated">Kernel::load()</target>
        </trans-unit>
        <trans-unit id="f7504bd021df8fc8d1865dccf690f8bbc521b427" translate="yes" xml:space="preserve">
          <source>Kernel::output()</source>
          <target state="translated">Kernel::output()</target>
        </trans-unit>
        <trans-unit id="b142117176bdf97b7bea64697613b6fc44fa574e" translate="yes" xml:space="preserve">
          <source>Kernel::parseMiddleware()</source>
          <target state="translated">Kernel::parseMiddleware()</target>
        </trans-unit>
        <trans-unit id="05d774f1101fd0b6bd85f3995325fbc0490c84b1" translate="yes" xml:space="preserve">
          <source>Kernel::prependMiddleware()</source>
          <target state="translated">Kernel::prependMiddleware()</target>
        </trans-unit>
        <trans-unit id="53ffc27f65e3372c4f3b1937c00016003c645c3f" translate="yes" xml:space="preserve">
          <source>Kernel::pushMiddleware()</source>
          <target state="translated">Kernel::pushMiddleware()</target>
        </trans-unit>
        <trans-unit id="e8e3f21ae4033f4e7cd4d97110a82c73831d4aab" translate="yes" xml:space="preserve">
          <source>Kernel::queue()</source>
          <target state="translated">Kernel::queue()</target>
        </trans-unit>
        <trans-unit id="b0b52cbeae696880fa2faf7fc90d0bb35a062df1" translate="yes" xml:space="preserve">
          <source>Kernel::registerCommand()</source>
          <target state="translated">Kernel::registerCommand()</target>
        </trans-unit>
        <trans-unit id="b8cef619377fea191daba496718c486ac21c7c1c" translate="yes" xml:space="preserve">
          <source>Kernel::renderException()</source>
          <target state="translated">Kernel::renderException()</target>
        </trans-unit>
        <trans-unit id="214f0ca94256914f4fd9546705a1bcd0b5a47dcc" translate="yes" xml:space="preserve">
          <source>Kernel::reportException()</source>
          <target state="translated">Kernel::reportException()</target>
        </trans-unit>
        <trans-unit id="1df80bd14d0de26a223b9f237e6c5322ee4db527" translate="yes" xml:space="preserve">
          <source>Kernel::schedule()</source>
          <target state="translated">Kernel::schedule()</target>
        </trans-unit>
        <trans-unit id="0f8947639139eb71f3cf0fd662cecdf229e3a736" translate="yes" xml:space="preserve">
          <source>Kernel::sendRequestThroughRouter()</source>
          <target state="translated">Kernel::sendRequestThroughRouter()</target>
        </trans-unit>
        <trans-unit id="07c25448ce20403587774ed962918cb5ce9a173f" translate="yes" xml:space="preserve">
          <source>Kernel::setArtisan()</source>
          <target state="translated">Kernel::setArtisan()</target>
        </trans-unit>
        <trans-unit id="65357f39adf91c65feefb9b9fc87de53784a9cfb" translate="yes" xml:space="preserve">
          <source>Kernel::terminate()</source>
          <target state="translated">Kernel::terminate()</target>
        </trans-unit>
        <trans-unit id="146222f9669544040c3f999bacb88c95c5efe9ca" translate="yes" xml:space="preserve">
          <source>Kernel::terminateMiddleware()</source>
          <target state="translated">Kernel::terminateMiddleware()</target>
        </trans-unit>
        <trans-unit id="ad6e6aa82ee776b4c0b8d1d39a35f83ea53e50c4" translate="yes" xml:space="preserve">
          <source>Key an associative array by a field or using a callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3478d2b6419d817fe0a38a96786cd92f627981ee" translate="yes" xml:space="preserve">
          <source>KeyForgotten</source>
          <target state="translated">KeyForgotten</target>
        </trans-unit>
        <trans-unit id="cc9c3d21fc7325f4491511f42bcf0f7a35f8a78e" translate="yes" xml:space="preserve">
          <source>KeyForgotten (Cache\Events)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72519e9cc0a02681b1c017645bed03c271d0f022" translate="yes" xml:space="preserve">
          <source>KeyGenerateCommand</source>
          <target state="translated">KeyGenerateCommand</target>
        </trans-unit>
        <trans-unit id="3a84b356c3ccc05fe3ace8905d95c5000c73d5f6" translate="yes" xml:space="preserve">
          <source>KeyGenerateCommand (Foundation)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8214c9e67b883832aef50e5ce31fd9b866b06c0c" translate="yes" xml:space="preserve">
          <source>KeyGenerateCommand::generateRandomKey()</source>
          <target state="translated">KeyGenerateCommand::generateRandomKey()</target>
        </trans-unit>
        <trans-unit id="df66f5722f9548d9a4a495d7e16a48dc406ccfb5" translate="yes" xml:space="preserve">
          <source>KeyGenerateCommand::handle()</source>
          <target state="translated">KeyGenerateCommand::handle()</target>
        </trans-unit>
        <trans-unit id="adcf8e7a89959ee5c8b989fc9d07992790dcc852" translate="yes" xml:space="preserve">
          <source>KeyGenerateCommand::keyReplacementPattern()</source>
          <target state="translated">KeyGenerateCommand::keyReplacementPattern()</target>
        </trans-unit>
        <trans-unit id="0721d8efc7b7987502aacbeae82c54b2c8608def" translate="yes" xml:space="preserve">
          <source>KeyGenerateCommand::setKeyInEnvironmentFile()</source>
          <target state="translated">KeyGenerateCommand::setKeyInEnvironmentFile()</target>
        </trans-unit>
        <trans-unit id="2592f374bd11343b68bc3b52b34a4acb46409123" translate="yes" xml:space="preserve">
          <source>KeyGenerateCommand::writeNewEnvironmentFileWith()</source>
          <target state="translated">KeyGenerateCommand::writeNewEnvironmentFileWith()</target>
        </trans-unit>
        <trans-unit id="b0fdeb74247d886c908667c3cb0e64fe302e2d08" translate="yes" xml:space="preserve">
          <source>KeyWritten</source>
          <target state="translated">KeyWritten</target>
        </trans-unit>
        <trans-unit id="d2276767dc2aca4c0611f0c925e97325cb2b0c1d" translate="yes" xml:space="preserve">
          <source>KeyWritten (Cache\Events)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0d86865e71b355418eb2d4a7d42974bcbb85e10" translate="yes" xml:space="preserve">
          <source>KeyWritten::__construct()</source>
          <target state="translated">KeyWritten::__construct()</target>
        </trans-unit>
        <trans-unit id="cba8ddc5884a500606a59bdf9f014a6821ae2a55" translate="yes" xml:space="preserve">
          <source>Kill the process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="841935e1ecb1a09aa7c0cf551d23ebf57fa0239e" translate="yes" xml:space="preserve">
          <source>Kirby</source>
          <target state="translated">Kirby</target>
        </trans-unit>
        <trans-unit id="e048fd121d36d52d9b005a05a25bffe850a1a70a" translate="yes" xml:space="preserve">
          <source>LINESTRING equivalent column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da943ffa11a09eba4de9bf0947fb0f90130279ab" translate="yes" xml:space="preserve">
          <source>LONGTEXT equivalent column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="769c96075047fae57552577a9a43bb6ecdf288f5" translate="yes" xml:space="preserve">
          <source>Lang</source>
          <target state="translated">Lang</target>
        </trans-unit>
        <trans-unit id="1ccebe10a10c153e3ca56b41f3a02faa7d3b24f5" translate="yes" xml:space="preserve">
          <source>Lang (Support\Facades)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c82c37cd108c59b6f8cd67ffe9479bba17fa935a" translate="yes" xml:space="preserve">
          <source>Lang::getFacadeAccessor()</source>
          <target state="translated">Lang::getFacadeAccessor()</target>
        </trans-unit>
        <trans-unit id="e31cfe3eb5d13086108730689c08cf77e07a5481" translate="yes" xml:space="preserve">
          <source>Laravel</source>
          <target state="translated">Laravel</target>
        </trans-unit>
        <trans-unit id="902f71cfe5c8e2dc8334d52dcc4d2a07b82c71ca" translate="yes" xml:space="preserve">
          <source>Laravel 5.7</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="036312081986f72d6c770d1cbe9385d32eafcb8b" translate="yes" xml:space="preserve">
          <source>Laravel 5.7 allows you to control how many additional links are displayed on each side of the paginator's URL &quot;window&quot;. By default, three links are displayed on each side of the primary paginator links. However, you may control this number using the &lt;code&gt;onEachSide&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e810633db5a2ff11766c32f8d773b2066943490" translate="yes" xml:space="preserve">
          <source>Laravel 5.7 allows you to easily &quot;mock&quot; user input for your console commands using the &lt;code&gt;expectsQuestion&lt;/code&gt; method. In addition, you may specify the exit code and text that you expect to be output by the console command using the &lt;code&gt;assertExitCode&lt;/code&gt; and &lt;code&gt;expectsOutput&lt;/code&gt; methods. For example, consider the following console command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcde1734048ab37ac1702169084c73acdc953321" translate="yes" xml:space="preserve">
          <source>Laravel 5.7 continues the improvements made in Laravel 5.6 by introducing &lt;a href=&quot;https://nova.laravel.com&quot;&gt;Laravel Nova&lt;/a&gt;, optional email verification to the authentication scaffolding, support for guest users in authorization gates and policies, console testing improvements, Symfony &lt;code&gt;dump-server&lt;/code&gt; integration, localizable notifications, and a variety of other bug fixes and usability improvements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0cb411b4f2a056d1796bd94cb29732c37a77940" translate="yes" xml:space="preserve">
          <source>Laravel 5.7 introduces optional email verification to the authentication scaffolding included with the framework. To accommodate this feature, an &lt;code&gt;email_verified_at&lt;/code&gt; timestamp column has been added to the default &lt;code&gt;users&lt;/code&gt; table migration that is included with the framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fecb868cb396fa00c27ae92fd87a67ebc56226eb" translate="yes" xml:space="preserve">
          <source>Laravel 5.7 offers integration with Symfony's &lt;code&gt;dump-server&lt;/code&gt; command via &lt;a href=&quot;https://github.com/beyondcode/laravel-dump-server&quot;&gt;a package by Marcel Pociot&lt;/a&gt;. To get started, run the &lt;code&gt;dump-server&lt;/code&gt; Artisan command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46cbecd8c61a9190b6721ed95c4e139b3e0cc706" translate="yes" xml:space="preserve">
          <source>Laravel Application</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="914fa57baae34b06ca80f5c139347d15d08b5566" translate="yes" xml:space="preserve">
          <source>Laravel Art</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b44663c9252ba53d55e3aaaeddd64714121fab68" translate="yes" xml:space="preserve">
          <source>Laravel Cashier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6004e25a139ac001eb2fd37d3cce0161326d13bb" translate="yes" xml:space="preserve">
          <source>Laravel Cashier for Braintree</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bf428eaf46107babfc26892ab9aa77788aa3eb2" translate="yes" xml:space="preserve">
          <source>Laravel Cashier provides an expressive, fluent interface to &lt;a href=&quot;https://stripe.com&quot;&gt;Stripe's&lt;/a&gt; and &lt;a href=&quot;https://www.braintreepayments.com&quot;&gt;Braintree's&lt;/a&gt; subscription billing services. It handles almost all of the boilerplate subscription billing code you are dreading writing. In addition to basic subscription management, Cashier can handle coupons, swapping subscription, subscription &quot;quantities&quot;, cancellation grace periods, and even generate invoice PDFs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f26c9ef1ac0cd62ab5e99290dd43754e637649" translate="yes" xml:space="preserve">
          <source>Laravel Documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94f79c81502626882f071d63e0357190eeea91e9" translate="yes" xml:space="preserve">
          <source>Laravel Dusk provides an expressive, easy-to-use browser automation and testing API. By default, Dusk does not require you to install JDK or Selenium on your machine. Instead, Dusk uses a standalone &lt;a href=&quot;https://sites.google.com/a/chromium.org/chromedriver/home&quot;&gt;ChromeDriver&lt;/a&gt; installation. However, you are free to utilize any other Selenium compatible driver you wish.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0545a256a935263ebb9f729daaaabbffb45ba99e" translate="yes" xml:space="preserve">
          <source>Laravel Echo is a JavaScript library that makes it painless to subscribe to channels and listen for events broadcast by Laravel. You may install Echo via the NPM package manager. In this example, we will also install the &lt;code&gt;pusher-js&lt;/code&gt; package since we will be using the Pusher broadcaster:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b676284b2192c9060cbc8d9a4e4bdc89d6228b9" translate="yes" xml:space="preserve">
          <source>Laravel Envoy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="961e56c4f87d78aa00777b98b50434f971f93e39" translate="yes" xml:space="preserve">
          <source>Laravel Forge can create servers on various infrastructure providers such as DigitalOcean, Linode, AWS, and more. In addition, Forge installs and manages all of the tools needed to build robust Laravel applications, such as Nginx, MySQL, Redis, Memcached, Beanstalk, and more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d16a4484bd4f20a2d3eecc3c12054c897df861fd" translate="yes" xml:space="preserve">
          <source>Laravel Framework</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a326fbf15fc3140677ebeee315232d095fdba65" translate="yes" xml:space="preserve">
          <source>Laravel Homestead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78d0aaa06bd54efe39d9f43ed90a03b16bcce25b" translate="yes" xml:space="preserve">
          <source>Laravel Homestead Build Scripts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="627a5d09bf3106ed29d9a934169a3fa33027a42a" translate="yes" xml:space="preserve">
          <source>Laravel Homestead is an official, pre-packaged Vagrant box that provides you a wonderful development environment without requiring you to install PHP, a web server, and any other server software on your local machine. No more worrying about messing up your operating system! Vagrant boxes are completely disposable. If something goes wrong, you can destroy and re-create the box in minutes!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51fb81eb322f7245c32af66e128b99bc2e012f71" translate="yes" xml:space="preserve">
          <source>Laravel Horizon</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8345819947a17ecc93637eab47154c3013b4be58" translate="yes" xml:space="preserve">
          <source>Laravel Mix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c7873a657fabdbbd8fd485c16224ab5edfcc5a3" translate="yes" xml:space="preserve">
          <source>Laravel Nova</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b07391682104453d6fc2ec8b3a03bd5facbd6ce5" translate="yes" xml:space="preserve">
          <source>Laravel Passport</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac92bdd344f4ba5b41cc85e1c75455376101542e" translate="yes" xml:space="preserve">
          <source>Laravel REPL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd02bd410a136f60131beb3beb8a81d9e3ad7ba6" translate="yes" xml:space="preserve">
          <source>Laravel Scout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d961dc7abd234e4fed4f04d1c44b67e1595df2d3" translate="yes" xml:space="preserve">
          <source>Laravel Scout provides a simple, driver based solution for adding full-text search to your &lt;a href=&quot;eloquent&quot;&gt;Eloquent models&lt;/a&gt;. Using model observers, Scout will automatically keep your search indexes in sync with your Eloquent records.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01a9cb16b341be7fb519b72c2da79b5667020042" translate="yes" xml:space="preserve">
          <source>Laravel Socialite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1fd655aeab7e7788a761b601549884a582cef95" translate="yes" xml:space="preserve">
          <source>Laravel Valet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d9177c39871bb87b059f06e3d717263f199670" translate="yes" xml:space="preserve">
          <source>Laravel Valet configures your Mac to always run &lt;a href=&quot;https://www.nginx.com/&quot;&gt;Nginx&lt;/a&gt; in the background when your machine starts. Then, using &lt;a href=&quot;https://en.wikipedia.org/wiki/Dnsmasq&quot;&gt;DnsMasq&lt;/a&gt;, Valet proxies all requests on the &lt;code&gt;*.test&lt;/code&gt; domain to point to sites installed on your local machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fa903b5dceb2844b8c366e162ce1155bcb4660b" translate="yes" xml:space="preserve">
          <source>Laravel Website</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c73154dee763c54fdef04b7fe91b7de8041f0e6" translate="yes" xml:space="preserve">
          <source>Laravel allows you to easily &quot;mock&quot; user input for your console commands using the &lt;code&gt;expectsQuestion&lt;/code&gt; method. In addition, you may specify the exit code and text that you expect to be output by the console command using the &lt;code&gt;assertExitCode&lt;/code&gt; and &lt;code&gt;expectsOutput&lt;/code&gt; methods. For example, consider the following console command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d223f4f5e13461f32e8bd1239a73dd40f1a9b2e" translate="yes" xml:space="preserve">
          <source>Laravel allows you to easily create &quot;signed&quot; URLs to named routes. These URLs have a &quot;signature&quot; hash appended to the query string which allows Laravel to verify that the URL has not been modified since it was created. Signed URLs are especially useful for routes that are publicly accessible yet need a layer of protection against URL manipulation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ebd1eff7627fc6be1770447cddab88aaae86148" translate="yes" xml:space="preserve">
          <source>Laravel allows you to keep input from one request during the next request. This feature is particularly useful for re-populating forms after detecting validation errors. However, if you are using Laravel's included &lt;a href=&quot;validation&quot;&gt;validation features&lt;/a&gt;, it is unlikely you will need to manually use these methods, as some of Laravel's built-in validation facilities will call them automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b216d9c161fb28cfb3f64a82e02eed7c7198fde1" translate="yes" xml:space="preserve">
          <source>Laravel allows you to send mailables in a locale other than the current language, and will even remember this locale if the mail is queued.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4681842d02c90594d2dc45e644fb19ea07ea1d03" translate="yes" xml:space="preserve">
          <source>Laravel allows you to send notifications in a locale other than the current language, and will even remember this locale if the notification is queued.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34457ac8f7afe7b5abb571d99130354a05bec332" translate="yes" xml:space="preserve">
          <source>Laravel already makes it easy to perform authentication via traditional login forms, but what about APIs? APIs typically use tokens to authenticate users and do not maintain session state between requests. Laravel makes API authentication a breeze using Laravel Passport, which provides a full OAuth2 server implementation for your Laravel application in a matter of minutes. Passport is built on top of the &lt;a href=&quot;https://github.com/thephpleague/oauth2-server&quot;&gt;League OAuth2 server&lt;/a&gt; that is maintained by Andy Millington and Simon Hamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57591fd919b5e754243d68f16eb966b8dc82277a" translate="yes" xml:space="preserve">
          <source>Laravel also provides a global &lt;code&gt;old&lt;/code&gt; helper. If you are displaying old input within a &lt;a href=&quot;blade&quot;&gt;Blade template&lt;/a&gt;, it is more convenient to use the &lt;code&gt;old&lt;/code&gt; helper. If no old input exists for the given field, &lt;code&gt;null&lt;/code&gt; will be returned:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ebaea6660561899f643c68c594b9010b4be520" translate="yes" xml:space="preserve">
          <source>Laravel also provides a mechanism for invalidating and &quot;logging out&quot; a user's sessions that are active on other devices without invalidating the session on their current device. Before getting started, you should make sure that the &lt;code&gt;Illuminate\Session\Middleware\AuthenticateSession&lt;/code&gt; middleware is present and un-commented in your &lt;code&gt;app/Http/Kernel.php&lt;/code&gt; class' &lt;code&gt;web&lt;/code&gt; middleware group:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="090a11fabb69540daf71a4fcd5e5536a5c40e4fb" translate="yes" xml:space="preserve">
          <source>Laravel also provides a variety of authentication related assertions for your &lt;a href=&quot;https://phpunit.de/&quot;&gt;PHPUnit&lt;/a&gt; tests:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9518bca7a05a8ef7c85bb2199394345d4255be7f" translate="yes" xml:space="preserve">
          <source>Laravel also provides several helpers for testing JSON APIs and their responses. For example, the &lt;code&gt;json&lt;/code&gt;, &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;post&lt;/code&gt;, &lt;code&gt;put&lt;/code&gt;, &lt;code&gt;patch&lt;/code&gt;, and &lt;code&gt;delete&lt;/code&gt; methods may be used to issue requests with various HTTP verbs. You may also easily pass data and headers to these methods. To get started, let's write a test to make a &lt;code&gt;POST&lt;/code&gt; request to &lt;code&gt;/user&lt;/code&gt; and assert that the expected data was returned:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="311c09e12baed9df1efd9622e0f3908f17462e35" translate="yes" xml:space="preserve">
          <source>Laravel also provides support for creating foreign key constraints, which are used to force referential integrity at the database level. For example, let's define a &lt;code&gt;user_id&lt;/code&gt; column on the &lt;code&gt;posts&lt;/code&gt; table that references the &lt;code&gt;id&lt;/code&gt; column on a &lt;code&gt;users&lt;/code&gt; table:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc6148d4e6c8f1e9dbfbbb7cb09b7fdff4c7b5d0" translate="yes" xml:space="preserve">
          <source>Laravel also supports querying JSON column types on databases that provide support for JSON column types. Currently, this includes MySQL 5.7, PostgreSQL, SQL Server 2016, and SQLite 3.9.0 (with the &lt;a href=&quot;https://www.sqlite.org/json1.html&quot;&gt;JSON1 extension&lt;/a&gt;). To query a JSON column, use the &lt;code&gt;-&amp;gt;&lt;/code&gt; operator:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8537f1d72bf731d0ba371629a40461a2f5b7f2b4" translate="yes" xml:space="preserve">
          <source>Laravel automatically generates a CSRF &quot;token&quot; for each active user session managed by the application. This token is used to verify that the authenticated user is the one actually making the requests to the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee873bef5585ceef4a06f5b4dd7da35ad048a05c" translate="yes" xml:space="preserve">
          <source>Laravel automatically regenerates the session ID during authentication if you are using the built-in &lt;code&gt;LoginController&lt;/code&gt;; however, if you need to manually regenerate the session ID, you may use the &lt;code&gt;regenerate&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad52d22456ca17e2e3ad52c39cc195d27feba834" translate="yes" xml:space="preserve">
          <source>Laravel automatically resolves Eloquent models defined in routes or controller actions whose type-hinted variable names match a route segment name. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96f94abe13225590555229493828e7e13c34b2c4" translate="yes" xml:space="preserve">
          <source>Laravel compiles and stores a list of all of the services supplied by deferred service providers, along with the name of its service provider class. Then, only when you attempt to resolve one of these services does Laravel load the service provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3e9a9f1ad23d6355e885b80980744718eae2abb" translate="yes" xml:space="preserve">
          <source>Laravel does not require you to use a specific JavaScript framework or library to build your applications. In fact, you don't have to use JavaScript at all. However, Laravel does include some basic scaffolding to make it easier to get started writing modern JavaScript using the &lt;a href=&quot;https://vuejs.org&quot;&gt;Vue&lt;/a&gt; library. Vue provides an expressive API for building robust JavaScript applications using components. As with CSS, we may use Laravel Mix to easily compile JavaScript components into a single, browser-ready JavaScript file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7831887dc6f96758be5c834c7aa76196e21a0571" translate="yes" xml:space="preserve">
          <source>Laravel does not ship with a directory to contain your extensions. You are free to place them anywhere you like. In this example, we have created an &lt;code&gt;Extensions&lt;/code&gt; directory to house the &lt;code&gt;MongoSessionHandler&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d781fc115c46b5117e4a3034ab71c9e67e60a53c" translate="yes" xml:space="preserve">
          <source>Laravel extends the &lt;a href=&quot;https://github.com/briannesbitt/Carbon&quot;&gt;Carbon&lt;/a&gt; date library in order to provide convenient customization of Carbon's JSON serialization format. To customize how all Carbon dates throughout your application are serialized, use the &lt;code&gt;Carbon::serializeUsing&lt;/code&gt; method. The &lt;code&gt;serializeUsing&lt;/code&gt; method accepts a Closure which returns a string representation of the date for JSON serialization:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83d4dd7ef333f99c97d82464dbfbaccdd5a8b243" translate="yes" xml:space="preserve">
          <source>Laravel fires two events during the process of sending mail messages. The &lt;code&gt;MessageSending&lt;/code&gt; event is fired prior to a message being sent, while the &lt;code&gt;MessageSent&lt;/code&gt; event is fired after a message has been sent. Remember, these events are fired when the mail is being &lt;em&gt;sent&lt;/em&gt;, not when it is queued. You may register an event listener for this event in your &lt;code&gt;EventServiceProvider&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8979d6e2a86cfe856be433091cf030a9bd6fe30" translate="yes" xml:space="preserve">
          <source>Laravel follows the &lt;a href=&quot;https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-2-coding-style-guide.md&quot;&gt;PSR-2&lt;/a&gt; coding standard and the &lt;a href=&quot;https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-4-autoloader.md&quot;&gt;PSR-4&lt;/a&gt; autoloading standard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05c030ec16a38d916386981b350838e6c439e28c" translate="yes" xml:space="preserve">
          <source>Laravel includes &lt;code&gt;Auth\ForgotPasswordController&lt;/code&gt; and &lt;code&gt;Auth\ResetPasswordController&lt;/code&gt; classes that contains the logic necessary to e-mail password reset links and reset user passwords. All of the routes needed to perform password resets may be generated using the &lt;code&gt;make:auth&lt;/code&gt; Artisan command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80802a01befb1e960e81a9905bdc163393f3d5ed" translate="yes" xml:space="preserve">
          <source>Laravel includes a &lt;a href=&quot;middleware&quot;&gt;middleware&lt;/a&gt; to rate limit access to routes within your application. To get started, assign the &lt;code&gt;throttle&lt;/code&gt; middleware to a route or a group of routes. The &lt;code&gt;throttle&lt;/code&gt; middleware accepts two parameters that determine the maximum number of requests that can be made in a given number of minutes. For example, let's specify that an authenticated user may access the following group of routes 60 times per minute:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faf8f96d8df48bbd90b99eace5d49d83cbfcd985" translate="yes" xml:space="preserve">
          <source>Laravel includes a &lt;code&gt;public/.htaccess&lt;/code&gt; file that is used to provide URLs without the &lt;code&gt;index.php&lt;/code&gt; front controller in the path. Before serving Laravel with Apache, be sure to enable the &lt;code&gt;mod_rewrite&lt;/code&gt; module so the &lt;code&gt;.htaccess&lt;/code&gt; file will be honored by the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="866600cbbab686b290a4d35b7589d09292189281" translate="yes" xml:space="preserve">
          <source>Laravel includes a middleware that can authorize actions before the incoming request even reaches your routes or controllers. By default, the &lt;code&gt;Illuminate\Auth\Middleware\Authorize&lt;/code&gt; middleware is assigned the &lt;code&gt;can&lt;/code&gt; key in your &lt;code&gt;App\Http\Kernel&lt;/code&gt; class. Let's explore an example of using the &lt;code&gt;can&lt;/code&gt; middleware to authorize that a user can update a blog post:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1d157cc7590aa93405075d52848233afe3ca9ad" translate="yes" xml:space="preserve">
          <source>Laravel includes a queue worker that will process new jobs as they are pushed onto the queue. You may run the worker using the &lt;code&gt;queue:work&lt;/code&gt; Artisan command. Note that once the &lt;code&gt;queue:work&lt;/code&gt; command has started, it will continue to run until it is manually stopped or you close your terminal:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d35fb8a6f7b51b85989430d716d987a63a1527aa" translate="yes" xml:space="preserve">
          <source>Laravel includes a simple method of seeding your database with test data using seed classes. All seed classes are stored in the &lt;code&gt;database/seeds&lt;/code&gt; directory. Seed classes may have any name you wish, but probably should follow some sensible convention, such as &lt;code&gt;UsersTableSeeder&lt;/code&gt;, etc. By default, a &lt;code&gt;DatabaseSeeder&lt;/code&gt; class is defined for you. From this class, you may use the &lt;code&gt;call&lt;/code&gt; method to run other seed classes, allowing you to control the seeding order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caac93a00e688aa26d2df844b90526017d226508" translate="yes" xml:space="preserve">
          <source>Laravel includes a variety of global &quot;helper&quot; PHP functions. Many of these functions are used by the framework itself; however, you are free to use them in your own applications if you find them convenient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0128eb57cf73312a7b756da6f1d62baf9e99174d" translate="yes" xml:space="preserve">
          <source>Laravel includes the &lt;code&gt;Auth\VerificationController&lt;/code&gt; class that contains the necessary logic to send verification links and verify emails. To register the necessary routes for this controller, pass the &lt;code&gt;verify&lt;/code&gt; option to the &lt;code&gt;Auth::routes&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="745107d905a4a05be840c88bdb0871dcff8af1ae" translate="yes" xml:space="preserve">
          <source>Laravel is a trademark of Taylor Otwell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="159fe08378b4f4e2f0475d80c917a7b34e6b3b22" translate="yes" xml:space="preserve">
          <source>Laravel is built with testing in mind. In fact, support for testing with PHPUnit is included out of the box and a &lt;code&gt;phpunit.xml&lt;/code&gt; file is already set up for your application. The framework also ships with convenient helper methods that allow you to expressively test your applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aea55fbb9dcce2b9efd0103e51f29c9070352274" translate="yes" xml:space="preserve">
          <source>Laravel makes implementing authentication very simple. In fact, almost everything is configured for you out of the box. The authentication configuration file is located at &lt;code&gt;config/auth.php&lt;/code&gt;, which contains several well documented options for tweaking the behavior of the authentication services.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b812924523bca089a1698d22dda2fbfa37bde8d" translate="yes" xml:space="preserve">
          <source>Laravel makes interacting with databases extremely simple across a variety of database backends using either raw SQL, the &lt;a href=&quot;queries&quot;&gt;fluent query builder&lt;/a&gt;, and the &lt;a href=&quot;eloquent&quot;&gt;Eloquent ORM&lt;/a&gt;. Currently, Laravel supports four databases:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d417c7557e9543920faf8a80bfb5d1dd3a29cea6" translate="yes" xml:space="preserve">
          <source>Laravel makes it easy to display custom error pages for various HTTP status codes. For example, if you wish to customize the error page for 404 HTTP status codes, create a &lt;code&gt;resources/views/errors/404.blade.php&lt;/code&gt;. This file will be served on all 404 errors generated by your application. The views within this directory should be named to match the HTTP status code they correspond to. The &lt;code&gt;HttpException&lt;/code&gt; instance raised by the &lt;code&gt;abort&lt;/code&gt; function will be passed to the view as an &lt;code&gt;$exception&lt;/code&gt; variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de476072ff6a38125ea369318cae8be99e455f3b" translate="yes" xml:space="preserve">
          <source>Laravel makes it easy to protect your application from &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_request_forgery&quot;&gt;cross-site request forgery&lt;/a&gt; (CSRF) attacks. Cross-site request forgeries are a type of malicious exploit whereby unauthorized commands are performed on behalf of an authenticated user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130ce7ff7020afba7f0913844babb3ee6ec322d2" translate="yes" xml:space="preserve">
          <source>Laravel needs almost no other configuration out of the box. You are free to get started developing! However, you may wish to review the &lt;code&gt;config/app.php&lt;/code&gt; file and its documentation. It contains several options such as &lt;code&gt;timezone&lt;/code&gt; and &lt;code&gt;locale&lt;/code&gt; that you may wish to change according to your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb8c2527b9f6e79aac1af2ce34cc440fa5579f6" translate="yes" xml:space="preserve">
          <source>Laravel now allows you to send notifications in a locale other than the current language, and will even remember this locale if the notification is queued.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dd05a2588652165e30f64d82062155164f3c8bd" translate="yes" xml:space="preserve">
          <source>Laravel now offers Horizon, a beautiful dashboard and configuration system for your Redis powered queues. Check out the full &lt;a href=&quot;horizon&quot;&gt;Horizon documentation&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3aa3b4e113225fd27a3d53d90a6666ab9e105dc" translate="yes" xml:space="preserve">
          <source>Laravel provides a clean, simple API over the popular &lt;a href=&quot;https://swiftmailer.symfony.com/&quot;&gt;SwiftMailer&lt;/a&gt; library with drivers for SMTP, Mailgun, SparkPost, Amazon SES, PHP's &lt;code&gt;mail&lt;/code&gt; function, and &lt;code&gt;sendmail&lt;/code&gt;, allowing you to quickly get started sending mail through a local or cloud based service of your choice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b39f18b52756f4c0208b4a2ae469e24f331d5299" translate="yes" xml:space="preserve">
          <source>Laravel provides a convenient interface to the Redis &lt;code&gt;publish&lt;/code&gt; and &lt;code&gt;subscribe&lt;/code&gt; commands. These Redis commands allow you to listen for messages on a given &quot;channel&quot;. You may publish messages to the channel from another application, or even using another programming language, allowing easy communication between applications and processes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f93392b2439ecea411f5390bb38e41b2291a9ae6" translate="yes" xml:space="preserve">
          <source>Laravel provides a convenient way to &lt;a href=&quot;scheduling&quot;&gt;schedule Cron jobs&lt;/a&gt; by scheduling a single &lt;code&gt;schedule:run&lt;/code&gt; Artisan command to be run every minute. The &lt;code&gt;schedule:run&lt;/code&gt; command will examine the job schedule defined in your &lt;code&gt;App\Console\Kernel&lt;/code&gt; class to determine which jobs should be run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12a705905639d623c82b18c5c6933a3ec66136ea" translate="yes" xml:space="preserve">
          <source>Laravel provides a powerful filesystem abstraction thanks to the wonderful &lt;a href=&quot;https://github.com/thephpleague/flysystem&quot;&gt;Flysystem&lt;/a&gt; PHP package by Frank de Jonge. The Laravel Flysystem integration provides simple to use drivers for working with local filesystems, Amazon S3, and Rackspace Cloud Storage. Even better, it's amazingly simple to switch between these storage options as the API remains the same for each system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d628c4bcdd1eedc9d614fd86efa7e472d45e40a" translate="yes" xml:space="preserve">
          <source>Laravel provides a quick way to scaffold all of the routes and views you need for authentication using one simple command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a82ee3e6c12ae77e511ce6216faa0630491a5166" translate="yes" xml:space="preserve">
          <source>Laravel provides a variety of custom assertion methods for your &lt;a href=&quot;https://phpunit.de/&quot;&gt;PHPUnit&lt;/a&gt; tests. These assertions may be accessed on the response that is returned from the &lt;code&gt;json&lt;/code&gt;, &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;post&lt;/code&gt;, &lt;code&gt;put&lt;/code&gt;, and &lt;code&gt;delete&lt;/code&gt; test methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20a7a760646b374a74c40602326bbfe95c444580" translate="yes" xml:space="preserve">
          <source>Laravel provides a variety of helpful tools to make it easier to test your database driven applications. First, you may use the &lt;code&gt;assertDatabaseHas&lt;/code&gt; helper to assert that data exists in the database matching a given set of criteria. For example, if you would like to verify that there is a record in the &lt;code&gt;users&lt;/code&gt; table with the &lt;code&gt;email&lt;/code&gt; value of &lt;code&gt;sally@example.com&lt;/code&gt;, you can do the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8a4cfdca813c133097c6572fbf7ff4af7596bb9" translate="yes" xml:space="preserve">
          <source>Laravel provides a variety of helpful validation rules; however, you may wish to specify some of your own. One method of registering custom validation rules is using rule objects. To generate a new rule object, you may use the &lt;code&gt;make:rule&lt;/code&gt; Artisan command. Let's use this command to generate a rule that verifies a string is uppercase. Laravel will place the new rule in the &lt;code&gt;app/Rules&lt;/code&gt; directory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b622b692e4fa7baafaf1f9eec256d966ec4e8874" translate="yes" xml:space="preserve">
          <source>Laravel provides a very fluent API for making HTTP requests to your application and examining the output. For example, take a look at the test defined below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa48c0c930d739065f257c85f56b477e40d18be0" translate="yes" xml:space="preserve">
          <source>Laravel provides an expressive, unified API for various caching backends. The cache configuration is located at &lt;code&gt;config/cache.php&lt;/code&gt;. In this file you may specify which cache driver you would like to be used by default throughout your application. Laravel supports popular caching backends like &lt;a href=&quot;https://memcached.org&quot;&gt;Memcached&lt;/a&gt; and &lt;a href=&quot;https://redis.io&quot;&gt;Redis&lt;/a&gt; out of the box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06f596d1d83aabeadd2058c90ab91150dbe4d67" translate="yes" xml:space="preserve">
          <source>Laravel provides helpers for mocking events, jobs, and facades out of the box. These helpers primarily provide a convenience layer over Mockery so you do not have to manually make complicated Mockery method calls. Of course, you are free to use &lt;a href=&quot;http://docs.mockery.io/en/latest/&quot;&gt;Mockery&lt;/a&gt; or PHPUnit to create your own mocks or spies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71cb1a8ba3fbce028b34fa92b6e850eff88beeaf" translate="yes" xml:space="preserve">
          <source>Laravel provides several database assertions for your &lt;a href=&quot;https://phpunit.de/&quot;&gt;PHPUnit&lt;/a&gt; tests:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af03cc72a8b223d72a4e9e3e587c5f00bcbd661a" translate="yes" xml:space="preserve">
          <source>Laravel provides several different approaches to validate your application's incoming data. By default, Laravel's base controller class uses a &lt;code&gt;ValidatesRequests&lt;/code&gt; trait which provides a convenient method to validate incoming HTTP request with a variety of powerful validation rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="377d4ec0047e492ddfb45dce90bd33c1e922d0c8" translate="yes" xml:space="preserve">
          <source>Laravel provides several helpers for working with the session during HTTP testing. First, you may set the session data to a given array using the &lt;code&gt;withSession&lt;/code&gt; method. This is useful for loading the session with data before issuing a request to your application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71e9b55859defa1b2f53a05b5bf3dcd3292455c4" translate="yes" xml:space="preserve">
          <source>Laravel provides several helpers to assist you in generating URLs for your application. Of course, these are mainly helpful when building links in your templates and API responses, or when generating redirect responses to another part of your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a86338e33d89f0009dba25428ea9492ac45b732b" translate="yes" xml:space="preserve">
          <source>Laravel queues provide a unified API across a variety of different queue backends, such as Beanstalk, Amazon SQS, Redis, or even a relational database. Queues allow you to defer the processing of a time consuming task, such as sending an email, until a later time. Deferring these time consuming tasks drastically speeds up web requests to your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d0a79c12a5991755c509a170f887ba1338bacde" translate="yes" xml:space="preserve">
          <source>Laravel raises a variety of &lt;a href=&quot;events&quot;&gt;events&lt;/a&gt; during the authentication process. You may attach listeners to these events in your &lt;code&gt;EventServiceProvider&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d86064b0b803e795d6c60896fba5073102086a7" translate="yes" xml:space="preserve">
          <source>Laravel resource routing assigns the typical &quot;CRUD&quot; routes to a controller with a single line of code. For example, you may wish to create a controller that handles all HTTP requests for &quot;photos&quot; stored by your application. Using the &lt;code&gt;make:controller&lt;/code&gt; Artisan command, we can quickly create such a controller:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db3eb07a9ad4e6572d97643516cd64bcf4c0d76f" translate="yes" xml:space="preserve">
          <source>Laravel ships with a handful of notification channels, but you may want to write your own drivers to deliver notifications via other channels. Laravel makes it simple. To get started, define a class that contains a &lt;code&gt;send&lt;/code&gt; method. The method should receive two arguments: a &lt;code&gt;$notifiable&lt;/code&gt; and a &lt;code&gt;$notification&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0967b9c078669e6f3dfcad765e4b4d835880a7e" translate="yes" xml:space="preserve">
          <source>Laravel ships with several pre-built authentication controllers, which are located in the &lt;code&gt;App\Http\Controllers\Auth&lt;/code&gt; namespace. The &lt;code&gt;RegisterController&lt;/code&gt; handles new user registration, the &lt;code&gt;LoginController&lt;/code&gt; handles authentication, the &lt;code&gt;ForgotPasswordController&lt;/code&gt; handles e-mailing links for resetting passwords, and the &lt;code&gt;ResetPasswordController&lt;/code&gt; contains the logic to reset passwords. Each of these controllers uses a trait to include their necessary methods. For many applications, you will not need to modify these controllers at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57254b3de147ca512d02857930002d1f6e752499" translate="yes" xml:space="preserve">
          <source>Laravel stores the current CSRF token in a &lt;code&gt;XSRF-TOKEN&lt;/code&gt; cookie that is included with each response generated by the framework. You can use the cookie value to set the &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; request header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e111384157619ddaf66dd2a6b3b996f4fa547577" translate="yes" xml:space="preserve">
          <source>Laravel strives to make the entire PHP development experience delightful, including your local development environment. &lt;a href=&quot;https://www.vagrantup.com&quot;&gt;Vagrant&lt;/a&gt; provides a simple, elegant way to manage and provision Virtual Machines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fde55e089473ffd4742bea37479382b607a39e6" translate="yes" xml:space="preserve">
          <source>Laravel uses the &lt;code&gt;utf8mb4&lt;/code&gt; character set by default, which includes support for storing &quot;emojis&quot; in the database. If you are running a version of MySQL older than the 5.7.7 release or MariaDB older than the 10.2.2 release, you may need to manually configure the default string length generated by migrations in order for MySQL to create indexes for them. You may configure this by calling the &lt;code&gt;Schema::defaultStringLength&lt;/code&gt; method within your &lt;code&gt;AppServiceProvider&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd39d25a1a91914d88e412fe36c4da95f698f7df" translate="yes" xml:space="preserve">
          <source>Laravel utilizes &lt;a href=&quot;https://getcomposer.org&quot;&gt;Composer&lt;/a&gt; to manage its dependencies. So, before using Laravel, make sure you have Composer installed on your machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc27ae0969e14d1eaa465c5a3dfe3f5cb9144c62" translate="yes" xml:space="preserve">
          <source>Laravel will automatically generate a reasonable index name, but you may pass a second argument to the method to specify the name yourself:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff14dad0bf751f6de339d5bbbaf7795d727931e" translate="yes" xml:space="preserve">
          <source>Laravel will generate all of the necessary email verification views when the &lt;code&gt;make:auth&lt;/code&gt; command is executed. This view is placed in &lt;code&gt;resources/views/auth/verify.blade.php&lt;/code&gt;. You are free to customize this view as needed for your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dab81e14182a2e08c9007da231e75380205be45a" translate="yes" xml:space="preserve">
          <source>Laravel's &lt;a href=&quot;facades&quot;&gt;facades&lt;/a&gt; and helper functions provide a simple way of utilizing Laravel's services without needing to type-hint and resolve contracts out of the service container. In most cases, each facade has an equivalent contract.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ead0d989fc12cbd037c569872d4cfac0eb4e389" translate="yes" xml:space="preserve">
          <source>Laravel's &lt;code&gt;package.json&lt;/code&gt; file includes the &lt;code&gt;bootstrap&lt;/code&gt; package to help you get started prototyping your application's frontend using Bootstrap. However, feel free to add or remove packages from the &lt;code&gt;package.json&lt;/code&gt; file as needed for your own application. You are not required to use the Bootstrap framework to build your Laravel application - it is provided as a good starting point for those who choose to use it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed4adb37272777d34ee30d4f278f4bd121561195" translate="yes" xml:space="preserve">
          <source>Laravel's Contracts are a set of interfaces that define the core services provided by the framework. For example, a &lt;code&gt;Illuminate\Contracts\Queue\Queue&lt;/code&gt; contract defines the methods needed for queueing jobs, while the &lt;code&gt;Illuminate\Contracts\Mail\Mailer&lt;/code&gt; contract defines the methods needed for sending e-mail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3772d13f0146c82e1ff2a8d749246823fee41f04" translate="yes" xml:space="preserve">
          <source>Laravel's Flysystem integration now offers &lt;code&gt;readStream&lt;/code&gt; and &lt;code&gt;writeStream&lt;/code&gt; methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b747547b7dee49247a932ea5cefeafc3a7e6fa2" translate="yes" xml:space="preserve">
          <source>Laravel's Flysystem integration provides drivers for several &quot;drivers&quot; out of the box; however, Flysystem is not limited to these and has adapters for many other storage systems. You can create a custom driver if you want to use one of these additional adapters in your Laravel application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76f6975db9b6b501bcbba4bb279d46e0a37dbdd7" translate="yes" xml:space="preserve">
          <source>Laravel's Flysystem integrations works great with FTP; however, a sample configuration is not included with the framework's default &lt;code&gt;filesystems.php&lt;/code&gt; configuration file. If you need to configure a FTP filesystem, you may use the example configuration below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac61eb4c42edc3d886c1a7ee1b334df0b8f897b0" translate="yes" xml:space="preserve">
          <source>Laravel's Flysystem integrations works great with Rackspace; however, a sample configuration is not included with the framework's default &lt;code&gt;filesystems.php&lt;/code&gt; configuration file. If you need to configure a Rackspace filesystem, you may use the example configuration below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d9df47d3b0bd2c8dc20a7e0520d7a38ebf67cac" translate="yes" xml:space="preserve">
          <source>Laravel's Flysystem integrations works great with SFTP; however, a sample configuration is not included with the framework's default &lt;code&gt;filesystems.php&lt;/code&gt; configuration file. If you need to configure a SFTP filesystem, you may use the example configuration below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e41e641f54ecccae412954ffb67c230cca7bff3" translate="yes" xml:space="preserve">
          <source>Laravel's command scheduler allows you to fluently and expressively define your command schedule within Laravel itself. When using the scheduler, only a single Cron entry is needed on your server. Your task schedule is defined in the &lt;code&gt;app/Console/Kernel.php&lt;/code&gt; file's &lt;code&gt;schedule&lt;/code&gt; method. To help you get started, a simple example is defined within the method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4006f3ec2c56ab983ffe74adc8d6e235c7a0c647" translate="yes" xml:space="preserve">
          <source>Laravel's database query builder provides a convenient, fluent interface to creating and running database queries. It can be used to perform most database operations in your application and works on all supported database systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f90457b246d801b96ea10118a615504f68978c54" translate="yes" xml:space="preserve">
          <source>Laravel's encrypter uses OpenSSL to provide AES-256 and AES-128 encryption. You are strongly encouraged to use Laravel's built-in encryption facilities and not attempt to roll your own &quot;home grown&quot; encryption algorithms. All of Laravel's encrypted values are signed using a message authentication code (MAC) so that their underlying value can not be modified once encrypted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ea17d0e1bda52a445a05642ac473a707e74b115" translate="yes" xml:space="preserve">
          <source>Laravel's event broadcasting allows you to broadcast your server-side Laravel events to your client-side JavaScript application using a driver-based approach to WebSockets. Currently, Laravel ships with &lt;a href=&quot;https://pusher.com&quot;&gt;Pusher&lt;/a&gt; and Redis drivers. The events may be easily consumed on the client-side using the &lt;a href=&quot;#installing-laravel-echo&quot;&gt;Laravel Echo&lt;/a&gt; Javascript package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4066811d8433589aac43d11440ea28df561b119f" translate="yes" xml:space="preserve">
          <source>Laravel's events provides a simple observer implementation, allowing you to subscribe and listen for various events that occur in your application. Event classes are typically stored in the &lt;code&gt;app/Events&lt;/code&gt; directory, while their listeners are stored in &lt;code&gt;app/Listeners&lt;/code&gt;. Don't worry if you don't see these directories in your application, since they will be created for you as you generate events and listeners using Artisan console commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d174b2074eb8beb38394b4181e9c9387042c11c9" translate="yes" xml:space="preserve">
          <source>Laravel's localization features provide a convenient way to retrieve strings in various languages, allowing you to easily support multiple languages within your application. Language strings are stored in files within the &lt;code&gt;resources/lang&lt;/code&gt; directory. Within this directory there should be a subdirectory for each language supported by the application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6b20919062219bc4207d54174a9fadaa3818860" translate="yes" xml:space="preserve">
          <source>Laravel's scheduled tasks will not run when Laravel is in &lt;a href=&quot;configuration#maintenance-mode&quot;&gt;maintenance mode&lt;/a&gt;, since we don't want your tasks to interfere with any unfinished maintenance you may be performing on your server. However, if you would like to force a task to run even in maintenance mode, you may use the &lt;code&gt;evenInMaintenanceMode&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50dbfaa21843dfb5abdcac19345c61a266c6aad1" translate="yes" xml:space="preserve">
          <source>Laravel's service container implements the &lt;a href=&quot;https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-11-container.md&quot;&gt;PSR-11&lt;/a&gt; interface. Therefore, you may type-hint the PSR-11 container interface to obtain an instance of the Laravel container:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bbec5efc325f11fa57c623e132aa2b2e0bc9325" translate="yes" xml:space="preserve">
          <source>Laravel's versioning scheme maintains the following convention: &lt;code&gt;paradigm.major.minor&lt;/code&gt;. Major framework releases are released every six months (February and August), while minor releases may be released as often as every week. Minor releases should &lt;strong&gt;never&lt;/strong&gt; contain breaking changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fabc59f932f5cefad05ba4fc86990bd6d441b3c9" translate="yes" xml:space="preserve">
          <source>Lastly, you can commit a transaction via the &lt;code&gt;commit&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13aebdbfe986f3c16d31b9744127c77e13ec8fbf" translate="yes" xml:space="preserve">
          <source>Launching The Vagrant Box</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e516a131a5ef395080c385bbbcbd9d569a1b0b45" translate="yes" xml:space="preserve">
          <source>Lazy Eager Loading</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4607f75f31f641e7320ac3ea466638f5ce3561e2" translate="yes" xml:space="preserve">
          <source>Leaving A Channel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="347bf978b8f52026de00a2abc23f3216416152ed" translate="yes" xml:space="preserve">
          <source>Left Join Clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a72ab02ca1a241b3c01274e7f1d25858c4435748" translate="yes" xml:space="preserve">
          <source>LengthAwarePaginator</source>
          <target state="translated">LengthAwarePaginator</target>
        </trans-unit>
        <trans-unit id="80193dc4d6fa913d296346463ad4d579d7c535f4" translate="yes" xml:space="preserve">
          <source>LengthAwarePaginator (Contracts)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a27c509703dfeafeff4a48a2410b4efd98e92d4" translate="yes" xml:space="preserve">
          <source>LengthAwarePaginator (Pagination)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d990ab7ae9a7ba927a2bf8a387868b89cd9e925e" translate="yes" xml:space="preserve">
          <source>LengthAwarePaginator::__construct()</source>
          <target state="translated">LengthAwarePaginator::__construct()</target>
        </trans-unit>
        <trans-unit id="6aaceb48d60ffea0c2075a2f711db7a51f47a55c" translate="yes" xml:space="preserve">
          <source>LengthAwarePaginator::elements()</source>
          <target state="translated">LengthAwarePaginator::elements()</target>
        </trans-unit>
        <trans-unit id="8e76ee63c5fe1f750391d8613003181998a344cc" translate="yes" xml:space="preserve">
          <source>LengthAwarePaginator::getUrlRange()</source>
          <target state="translated">LengthAwarePaginator::getUrlRange()</target>
        </trans-unit>
        <trans-unit id="757cfc65e91a372c1ce895d67ff7a70c3ee9f217" translate="yes" xml:space="preserve">
          <source>LengthAwarePaginator::hasMorePages()</source>
          <target state="translated">LengthAwarePaginator::hasMorePages()</target>
        </trans-unit>
        <trans-unit id="846f8cee9b5bd8aff568509e198eee099db16dd7" translate="yes" xml:space="preserve">
          <source>LengthAwarePaginator::jsonSerialize()</source>
          <target state="translated">LengthAwarePaginator::jsonSerialize()</target>
        </trans-unit>
        <trans-unit id="f7a636d806be67f6a38e71244018add609433a31" translate="yes" xml:space="preserve">
          <source>LengthAwarePaginator::lastPage()</source>
          <target state="translated">LengthAwarePaginator::lastPage()</target>
        </trans-unit>
        <trans-unit id="cea28119845e31145637ddf140e7e0e077ac61d7" translate="yes" xml:space="preserve">
          <source>LengthAwarePaginator::links()</source>
          <target state="translated">LengthAwarePaginator::links()</target>
        </trans-unit>
        <trans-unit id="ef56f9a49bbf525425ad7ad71d3e4d9227f9cbd7" translate="yes" xml:space="preserve">
          <source>LengthAwarePaginator::nextPageUrl()</source>
          <target state="translated">LengthAwarePaginator::nextPageUrl()</target>
        </trans-unit>
        <trans-unit id="521cd9d38ebc808d960d3ef3d7ad271653837ce0" translate="yes" xml:space="preserve">
          <source>LengthAwarePaginator::render()</source>
          <target state="translated">LengthAwarePaginator::render()</target>
        </trans-unit>
        <trans-unit id="8663ee92fdd5591be5f15de55ba6e097e69f8edf" translate="yes" xml:space="preserve">
          <source>LengthAwarePaginator::setCurrentPage()</source>
          <target state="translated">LengthAwarePaginator::setCurrentPage()</target>
        </trans-unit>
        <trans-unit id="d9b36e1cc4cc81597a169e5fed5668b63d7b0aa7" translate="yes" xml:space="preserve">
          <source>LengthAwarePaginator::toArray()</source>
          <target state="translated">LengthAwarePaginator::toArray()</target>
        </trans-unit>
        <trans-unit id="8b1e85962848ca3224a915680eaf828497a7b342" translate="yes" xml:space="preserve">
          <source>LengthAwarePaginator::toJson()</source>
          <target state="translated">LengthAwarePaginator::toJson()</target>
        </trans-unit>
        <trans-unit id="eaff4275c69edc1ff4c6877ad61dc20a8720b059" translate="yes" xml:space="preserve">
          <source>LengthAwarePaginator::total()</source>
          <target state="translated">LengthAwarePaginator::total()</target>
        </trans-unit>
        <trans-unit id="526cb7425ab8d8d55c981974917cba26fab9834e" translate="yes" xml:space="preserve">
          <source>Less</source>
          <target state="translated">Less</target>
        </trans-unit>
        <trans-unit id="59144313c41d01bd6a46e4753b39262de7e245cd" translate="yes" xml:space="preserve">
          <source>Let's assume our web application is for game collectors. If a game collector registers with our application and they own more than 100 games, we want them to explain why they own so many games. For example, perhaps they run a game resale shop, or maybe they just enjoy collecting. To conditionally add this requirement, we can use the &lt;code&gt;sometimes&lt;/code&gt; method on the &lt;code&gt;Validator&lt;/code&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fb54ca12724043f89a396321f6f677f20676155" translate="yes" xml:space="preserve">
          <source>Let's dissect this configuration. First, notice our &lt;code&gt;stack&lt;/code&gt; channel aggregates two other channels via its &lt;code&gt;channels&lt;/code&gt; option: &lt;code&gt;syslog&lt;/code&gt; and &lt;code&gt;slack&lt;/code&gt;. So, when logging messages, both of these channels will have the opportunity to log the message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4737a275a5712ad789b040dafc11944f6449bd7" translate="yes" xml:space="preserve">
          <source>Let's look at a simple example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="835ff739ced269e69d9ca933165dc5c7d85e21c2" translate="yes" xml:space="preserve">
          <source>Let's take a look at a basic service provider. Within any of your service provider methods, you always have access to the &lt;code&gt;$app&lt;/code&gt; property which provides access to the service container:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="232a663b7a786fbaaa1c8d58cbe5978036414178" translate="yes" xml:space="preserve">
          <source>Let's take a look at a sample implementation of each method your custom Valet driver should implement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1537b787a59ed5ab139cf6e76a917ea1f508310" translate="yes" xml:space="preserve">
          <source>Let's take a look at an example command. Note that we are able to inject any dependencies we need into the command's constructor or &lt;code&gt;handle&lt;/code&gt; method. The Laravel &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt; will automatically inject all dependencies type-hinted in the constructor or &lt;code&gt;handle&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc5da8a4ae0e30c511ae364fcc31287133dc9f6d" translate="yes" xml:space="preserve">
          <source>Let's take a look at the &lt;code&gt;Illuminate\Contracts\Auth\UserProvider&lt;/code&gt; contract:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58fd3b1b83cc7fc933d72fe934bdb6e534441281" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT License.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f38c54acd17f433ee976d6de9c8bdc616d1812e" translate="yes" xml:space="preserve">
          <source>Lifecycle Overview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d84ad9632f567bf2d5b65f26979c566118f03f20" translate="yes" xml:space="preserve">
          <source>Like all other mail notifications, notifications that use Markdown templates should define a &lt;code&gt;toMail&lt;/code&gt; method on their notification class. However, instead of using the &lt;code&gt;line&lt;/code&gt; and &lt;code&gt;action&lt;/code&gt; methods to construct the notification, use the &lt;code&gt;markdown&lt;/code&gt; method to specify the name of the Markdown template that should be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b08a8d45c7a09fda162c6a13a7177439a2c9864" translate="yes" xml:space="preserve">
          <source>Like many other classes in Laravel, channel classes will automatically be resolved by the &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;. So, you may type-hint any dependencies required by your channel in its constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d440a8daa6fb7a5bbdfe23b5cb46fda4f65638a7" translate="yes" xml:space="preserve">
          <source>Like most of the other authorization methods, you may pass a class name to the &lt;code&gt;@can&lt;/code&gt; and &lt;code&gt;@cannot&lt;/code&gt; directives if the action does not require a model instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a173602a90971669281b24ed29df6c91ff46df27" translate="yes" xml:space="preserve">
          <source>Like most other collection methods, &lt;code&gt;map&lt;/code&gt; returns a new collection instance; it does not modify the collection it is called on. If you want to transform the original collection, use the &lt;a href=&quot;#method-transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60caa2f60dc7e17c130b158559e64ce57bc7cb23" translate="yes" xml:space="preserve">
          <source>Like public or private events, presence channel events may be broadcast using the &lt;code&gt;broadcast&lt;/code&gt; function. As with other events, you may use the &lt;code&gt;toOthers&lt;/code&gt; method to exclude the current user from receiving the broadcast:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae6070b85e2d153ad2beec3bcb2a7c451fd90491" translate="yes" xml:space="preserve">
          <source>Like singular resources, resource collections may be returned directly from routes or controllers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57075906818e67540d3056ac3b34607817ab0340" translate="yes" xml:space="preserve">
          <source>Like the &lt;code&gt;/oauth/authorize&lt;/code&gt; route, the &lt;code&gt;/oauth/token&lt;/code&gt; route is defined for you by the &lt;code&gt;Passport::routes&lt;/code&gt; method. There is no need to manually define this route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2eec989a7e4b91181a831f6742a297d1933d8e6" translate="yes" xml:space="preserve">
          <source>Like the &lt;code&gt;abort&lt;/code&gt; method, you may also provide the exception's response text as the third argument and an array of custom response headers as the fourth argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4581cbee178c005dc764c2e362fb3b170ee05a" translate="yes" xml:space="preserve">
          <source>Like the &lt;code&gt;hasOne&lt;/code&gt; method, you may also override the foreign and local keys by passing additional arguments to the &lt;code&gt;hasMany&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cec12618039102946d62ffd91a8806bb126599f" translate="yes" xml:space="preserve">
          <source>Like the &lt;code&gt;withTrashed&lt;/code&gt; method, the &lt;code&gt;restore&lt;/code&gt; method may also be used on &lt;a href=&quot;eloquent-relationships&quot;&gt;relationships&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68dca70ae19be58af7b8feb61ba717a120ea2a9d" translate="yes" xml:space="preserve">
          <source>Likewise, if we want to replace our underlying cache technology (Memcached) with another technology (Redis), we again will have to modify our repository. Our repository should not have so much knowledge regarding who is providing them data or how they are providing it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a11df06d5003d8a91cf5ed44367ff11f7f6a9ce4" translate="yes" xml:space="preserve">
          <source>Likewise, if you would like to make some typically visible attributes hidden on a given model instance, you may use the &lt;code&gt;makeHidden&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fb61efaea72f94126086751e3475b6203374bc1" translate="yes" xml:space="preserve">
          <source>Likewise, the maximum number of seconds that jobs can run may be specified using the &lt;code&gt;--timeout&lt;/code&gt; switch on the Artisan command line:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b7d78bb969c34f9c58a3ed0c5ed7d1c721a8556" translate="yes" xml:space="preserve">
          <source>Likewise, we can use the &lt;code&gt;sum&lt;/code&gt; higher order message to gather the total number of &quot;votes&quot; for a collection of users:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e809b3a38f8d6b03290ba84b8cf08e7eb1c6daf5" translate="yes" xml:space="preserve">
          <source>Likewise, you may use the &lt;code&gt;*&lt;/code&gt; character when specifying your validation messages in your language files, making it a breeze to use a single validation message for array based fields:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0141b6d61e44baa3fcb72615db78fc65eaab4984" translate="yes" xml:space="preserve">
          <source>Limit the environments the command should run in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da95441f10be74fcf37afbe7dc1f834ab0541cc" translate="yes" xml:space="preserve">
          <source>Limit the number of characters in a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da14ca386597884cbb6a83ef5423614c3216d71" translate="yes" xml:space="preserve">
          <source>Limit the number of words in a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0c8e5f90547049eb5d4c04d2f3463ea55abafbd" translate="yes" xml:space="preserve">
          <source>Limit the task based on a truth test</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2b83dd5d91ecbe8bdf455c1d08fc1fefa98aba1" translate="yes" xml:space="preserve">
          <source>Limit the task to Friday</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c0ac5f6a2204074c02fadc358c9c51ee869f49f" translate="yes" xml:space="preserve">
          <source>Limit the task to Monday</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8282910cedaf105f9e92d152c15bf95710a4b761" translate="yes" xml:space="preserve">
          <source>Limit the task to Saturday</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b923c71b74b3cee1fc5cba4ce74d19b667c1a0f" translate="yes" xml:space="preserve">
          <source>Limit the task to Sunday</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="438cde79767108ac2b49911acabcb0715cb455d5" translate="yes" xml:space="preserve">
          <source>Limit the task to Thursday</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e49cf90dbf5b203a607a15dd81be90b9f182e23f" translate="yes" xml:space="preserve">
          <source>Limit the task to Tuesday</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cebced39c2caac1aa525529a4f2eff825426f8d" translate="yes" xml:space="preserve">
          <source>Limit the task to Wednesday</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db3cac2c033be09d0ab54343c16d82a810e87b41" translate="yes" xml:space="preserve">
          <source>Limit the task to run between start and end times</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6f5c4684b201a65e12479f51bfcec06aecd4a2d" translate="yes" xml:space="preserve">
          <source>Limit the task to weekdays</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e391d6aa6535b587423a7408c6ca4ccc44eb8396" translate="yes" xml:space="preserve">
          <source>LimiterTimeoutException</source>
          <target state="translated">LimiterTimeoutException</target>
        </trans-unit>
        <trans-unit id="eb88d62e0170c3cb3c2ee776bfa2b17bbce5a2f5" translate="yes" xml:space="preserve">
          <source>LimiterTimeoutException (Contracts)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9766547827a7643d4421e27877175ad9150bef32" translate="yes" xml:space="preserve">
          <source>ListFailedCommand</source>
          <target state="translated">ListFailedCommand</target>
        </trans-unit>
        <trans-unit id="17ceff6e915a96a7a8857ed04c9bbd56f2d7c9c4" translate="yes" xml:space="preserve">
          <source>ListFailedCommand (Queue)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="485ff1cad7a3efabadaed96ddc1846627c339c2a" translate="yes" xml:space="preserve">
          <source>ListFailedCommand::displayFailedJobs()</source>
          <target state="translated">ListFailedCommand::displayFailedJobs()</target>
        </trans-unit>
        <trans-unit id="562c497a49838cafcfe6061c9f34c4c07c2fa9ec" translate="yes" xml:space="preserve">
          <source>ListFailedCommand::getFailedJobs()</source>
          <target state="translated">ListFailedCommand::getFailedJobs()</target>
        </trans-unit>
        <trans-unit id="6d607cc235a6818241277e5bcdd50d7becef1775" translate="yes" xml:space="preserve">
          <source>ListFailedCommand::handle()</source>
          <target state="translated">ListFailedCommand::handle()</target>
        </trans-unit>
        <trans-unit id="1318939b483a265938f9214592947e302394cbdf" translate="yes" xml:space="preserve">
          <source>ListFailedCommand::matchJobName()</source>
          <target state="translated">ListFailedCommand::matchJobName()</target>
        </trans-unit>
        <trans-unit id="4c81de2c86beaadc1d70b4703d0338ab6d2e9628" translate="yes" xml:space="preserve">
          <source>ListFailedCommand::parseFailedJob()</source>
          <target state="translated">ListFailedCommand::parseFailedJob()</target>
        </trans-unit>
        <trans-unit id="b6ab8ac0760b25e307502fe1f9f9db5ed065501c" translate="yes" xml:space="preserve">
          <source>Listen for the queue events in order to update the console output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c61195871fa9ebec4dca37e41f0da668687486e" translate="yes" xml:space="preserve">
          <source>Listen to the given queue connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da40f20903f7bcbfca52ef75807ee536986ac6ba" translate="yes" xml:space="preserve">
          <source>Listen to the given queue in a loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="491d86f2c5f008579eb1f170a412674082032fe1" translate="yes" xml:space="preserve">
          <source>ListenCommand</source>
          <target state="translated">ListenCommand</target>
        </trans-unit>
        <trans-unit id="ac82f8dd109e311da36ff41185aeecb7adcb1106" translate="yes" xml:space="preserve">
          <source>ListenCommand (Queue)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0ec78b85f57c0a07f3a583af25dee81914a495c" translate="yes" xml:space="preserve">
          <source>ListenCommand::__construct()</source>
          <target state="translated">ListenCommand::__construct()</target>
        </trans-unit>
        <trans-unit id="732777081e3b17a8e52684ebb634b55c2bd692f9" translate="yes" xml:space="preserve">
          <source>ListenCommand::gatherOptions()</source>
          <target state="translated">ListenCommand::gatherOptions()</target>
        </trans-unit>
        <trans-unit id="056698a41fe1c760493f0d552faa8e8e96b21157" translate="yes" xml:space="preserve">
          <source>ListenCommand::getQueue()</source>
          <target state="translated">ListenCommand::getQueue()</target>
        </trans-unit>
        <trans-unit id="33d7c15812c397558b1c0f69fa104716686e57d1" translate="yes" xml:space="preserve">
          <source>ListenCommand::handle()</source>
          <target state="translated">ListenCommand::handle()</target>
        </trans-unit>
        <trans-unit id="74afdff7366ec0923e106e28876ddb85c415527f" translate="yes" xml:space="preserve">
          <source>ListenCommand::setOutputHandler()</source>
          <target state="translated">ListenCommand::setOutputHandler()</target>
        </trans-unit>
        <trans-unit id="37ea46b5942beaeb21bb4e06a14e4f7232d2a1b0" translate="yes" xml:space="preserve">
          <source>Listener</source>
          <target state="translated">Listener</target>
        </trans-unit>
        <trans-unit id="8f921e6a14ac844067240f6b3b12ba946b2bb135" translate="yes" xml:space="preserve">
          <source>Listener (Queue)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec1c0d83ce0564b243e736e301dad8cceb4c808" translate="yes" xml:space="preserve">
          <source>Listener::__construct()</source>
          <target state="translated">Listener::__construct()</target>
        </trans-unit>
        <trans-unit id="be72dc6dcf79e017a06b2804e4e51de310728f5f" translate="yes" xml:space="preserve">
          <source>Listener::addEnvironment()</source>
          <target state="translated">Listener::addEnvironment()</target>
        </trans-unit>
        <trans-unit id="c410a5e4dd04edf817e3483e16bb3c45ac6d949c" translate="yes" xml:space="preserve">
          <source>Listener::artisanBinary()</source>
          <target state="translated">Listener::artisanBinary()</target>
        </trans-unit>
        <trans-unit id="1d2513db878cdc6380422dcaabc25cc23f005d33" translate="yes" xml:space="preserve">
          <source>Listener::buildCommandTemplate()</source>
          <target state="translated">Listener::buildCommandTemplate()</target>
        </trans-unit>
        <trans-unit id="f977e11a4578ba4bd7e274cb440847e114ad8cdd" translate="yes" xml:space="preserve">
          <source>Listener::formatCommand()</source>
          <target state="translated">Listener::formatCommand()</target>
        </trans-unit>
        <trans-unit id="a846a0e9ce24b8b81cf9a7fcb0cfef15334b5fa7" translate="yes" xml:space="preserve">
          <source>Listener::handleWorkerOutput()</source>
          <target state="translated">Listener::handleWorkerOutput()</target>
        </trans-unit>
        <trans-unit id="fff7a451340936b0affed1616b0aaf032a5a51dc" translate="yes" xml:space="preserve">
          <source>Listener::listen()</source>
          <target state="translated">Listener::listen()</target>
        </trans-unit>
        <trans-unit id="8f09bb8fe9e9af7e8e89858f11cd3563d372b735" translate="yes" xml:space="preserve">
          <source>Listener::makeProcess()</source>
          <target state="translated">Listener::makeProcess()</target>
        </trans-unit>
        <trans-unit id="0921d0d82775cb23625ec1fe023c6b47bdde5244" translate="yes" xml:space="preserve">
          <source>Listener::memoryExceeded()</source>
          <target state="translated">Listener::memoryExceeded()</target>
        </trans-unit>
        <trans-unit id="379c93edd109af0ae0e1efaed65a6211d67494ce" translate="yes" xml:space="preserve">
          <source>Listener::phpBinary()</source>
          <target state="translated">Listener::phpBinary()</target>
        </trans-unit>
        <trans-unit id="7ed1c714551a5fe943e593d32a9a399aefd95073" translate="yes" xml:space="preserve">
          <source>Listener::runProcess()</source>
          <target state="translated">Listener::runProcess()</target>
        </trans-unit>
        <trans-unit id="ac6cc2c969c7ad5893226baa13c89ace3f071ddd" translate="yes" xml:space="preserve">
          <source>Listener::setOutputHandler()</source>
          <target state="translated">Listener::setOutputHandler()</target>
        </trans-unit>
        <trans-unit id="587a0026b56aee461a4ec01e8467d519d1d72df1" translate="yes" xml:space="preserve">
          <source>Listener::stop()</source>
          <target state="translated">Listener::stop()</target>
        </trans-unit>
        <trans-unit id="92b94c74d1b605ee2464f87f309b531d45bb6eef" translate="yes" xml:space="preserve">
          <source>ListenerMakeCommand</source>
          <target state="translated">ListenerMakeCommand</target>
        </trans-unit>
        <trans-unit id="555aa1239e05c6549d967e6698ce24a141e7c88a" translate="yes" xml:space="preserve">
          <source>ListenerMakeCommand (Foundation)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc04f95df16fb90e716e4e6098659f2f7ae7c254" translate="yes" xml:space="preserve">
          <source>ListenerMakeCommand::alreadyExists()</source>
          <target state="translated">ListenerMakeCommand::alreadyExists()</target>
        </trans-unit>
        <trans-unit id="52139ee91bb4dbc105d1071cfabbd256a25b4121" translate="yes" xml:space="preserve">
          <source>ListenerMakeCommand::buildClass()</source>
          <target state="translated">ListenerMakeCommand::buildClass()</target>
        </trans-unit>
        <trans-unit id="7d36683178290fad1d0b1f7f49fe8a6f384e15f6" translate="yes" xml:space="preserve">
          <source>ListenerMakeCommand::getDefaultNamespace()</source>
          <target state="translated">ListenerMakeCommand::getDefaultNamespace()</target>
        </trans-unit>
        <trans-unit id="7e89d4782f5946e6748b3b4141339f42dc17ec30" translate="yes" xml:space="preserve">
          <source>ListenerMakeCommand::getOptions()</source>
          <target state="translated">ListenerMakeCommand::getOptions()</target>
        </trans-unit>
        <trans-unit id="965aa1fbbf74e74b3a5d5b06e1b6ef5bd374bc62" translate="yes" xml:space="preserve">
          <source>ListenerMakeCommand::getStub()</source>
          <target state="translated">ListenerMakeCommand::getStub()</target>
        </trans-unit>
        <trans-unit id="5e5e7de2afd3818b6106d28606e8e3d33df6b330" translate="yes" xml:space="preserve">
          <source>ListenerOptions</source>
          <target state="translated">ListenerOptions</target>
        </trans-unit>
        <trans-unit id="8299d26e05463562bb7558a9f7750ba5b83d1d4b" translate="yes" xml:space="preserve">
          <source>ListenerOptions (Queue)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8da7452f43d7ee860d7296a33e50f63b11488d26" translate="yes" xml:space="preserve">
          <source>ListenerOptions::__construct()</source>
          <target state="translated">ListenerOptions::__construct()</target>
        </trans-unit>
        <trans-unit id="ba36ae92a3bcac6463b44ba15e0c73d7637d4675" translate="yes" xml:space="preserve">
          <source>Listening For Event Broadcasts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c33681da20ab2dbd09bdbb946b56f94f05e336a" translate="yes" xml:space="preserve">
          <source>Listening For Events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f558096d89aa4fe11063b5f4baadfdf326818e5e" translate="yes" xml:space="preserve">
          <source>Listening For Notifications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="532fd25b38800d4f39d5b2f0e7f34e1b8de279bc" translate="yes" xml:space="preserve">
          <source>Listening For Query Events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5362b244541654b46604e764d1c0a18905fa285b" translate="yes" xml:space="preserve">
          <source>Load a class alias if it is registered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faea8e244e7c8343377d395ceb62413656c94993" translate="yes" xml:space="preserve">
          <source>Load a custom environment file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c01d85fc8562b8144753c216db4bd280d2a8ced" translate="yes" xml:space="preserve">
          <source>Load a local namespaced translation group for overrides.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a3a4e3a2387d79a0e648a13023ff22b77bc977e" translate="yes" xml:space="preserve">
          <source>Load a locale from a given path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b10179efd739cfb6842f300a029f9ad170c5262" translate="yes" xml:space="preserve">
          <source>Load a locale from the given JSON file path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70237a85982ff553760cddba749e84317f6e8cb9" translate="yes" xml:space="preserve">
          <source>Load a namespaced translation group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3d1d6d1a3022c49b6e284389c64ce5f2e2998b2" translate="yes" xml:space="preserve">
          <source>Load a real-time facade for the given alias.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45cdaa01535678d3e6763fd6002b725dd9ea4735" translate="yes" xml:space="preserve">
          <source>Load a relationship path if it is not already eager loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1e70757a30c4422be91f456a39a86626e6f96c9" translate="yes" xml:space="preserve">
          <source>Load a set of relationships onto the collection if they are not already eager loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfb6f32005122928c67428d1659101464839d7a7" translate="yes" xml:space="preserve">
          <source>Load a set of relationships onto the collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e1a691ec4a57e31a195e154bdac1023c6de1089" translate="yes" xml:space="preserve">
          <source>Load a set of relationships onto the mixed relationship collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e14fc02b23d0f24b307157fd750baaf7cbc13e9" translate="yes" xml:space="preserve">
          <source>Load and boot all of the remaining deferred providers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f21725ff86a353cf4e158d24869c0bbd7affad80" translate="yes" xml:space="preserve">
          <source>Load factories from path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="460cda722a9c31ea7d84854f6093c2d7028585cf" translate="yes" xml:space="preserve">
          <source>Load the application routes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78129a8835b646369d9529b81414b4cb4a866ace" translate="yes" xml:space="preserve">
          <source>Load the cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06f5a86756d2806b0da0d55c5c0938dfbb711002" translate="yes" xml:space="preserve">
          <source>Load the cached routes for the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bb84317c74dd00db5f706efb295f042bca3ec9b" translate="yes" xml:space="preserve">
          <source>Load the configuration items from all of the files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b234c19d78904b026b95d4d326132d6bda4c17c7" translate="yes" xml:space="preserve">
          <source>Load the given routes file if routes are not already cached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03303116de5ae30e3af54109b56af338b91ed4f0" translate="yes" xml:space="preserve">
          <source>Load the messages for the given locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="679cb0fc94f84dc72278045a65bc4d9926a305a9" translate="yes" xml:space="preserve">
          <source>Load the provided routes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04555d1389700a4e523a91df86d33f1eaa01235b" translate="yes" xml:space="preserve">
          <source>Load the provider for a deferred service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84c99af4f78d670cc3b96cf052eab3e3c0b92a5d" translate="yes" xml:space="preserve">
          <source>Load the service provider manifest JSON file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b84de93f706b0905e47d38a647eb5216f55e10" translate="yes" xml:space="preserve">
          <source>Load the session data from the handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75f57170a0c3e08b075984c0dac2b539a86f1348" translate="yes" xml:space="preserve">
          <source>Load the specified language group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="013fbb7725b8f7d8d69751eb93c8e0bbe84d6ef7" translate="yes" xml:space="preserve">
          <source>LoadConfiguration</source>
          <target state="translated">LoadConfiguration</target>
        </trans-unit>
        <trans-unit id="07f798280ed2b063ffc21597e8b61acd48899835" translate="yes" xml:space="preserve">
          <source>LoadConfiguration (Foundation\Bootstrap)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="731ca9482b70890c8c6f246095701535c06ecbf1" translate="yes" xml:space="preserve">
          <source>LoadConfiguration::bootstrap()</source>
          <target state="translated">LoadConfiguration::bootstrap()</target>
        </trans-unit>
        <trans-unit id="13bd75518debbf9998bf3f5f1a8ace3812688fd2" translate="yes" xml:space="preserve">
          <source>LoadConfiguration::getConfigurationFiles()</source>
          <target state="translated">LoadConfiguration::getConfigurationFiles()</target>
        </trans-unit>
        <trans-unit id="6a3683b9ce293634690eef892bac786f70a1a3f3" translate="yes" xml:space="preserve">
          <source>LoadConfiguration::getNestedDirectory()</source>
          <target state="translated">LoadConfiguration::getNestedDirectory()</target>
        </trans-unit>
        <trans-unit id="208d00f76292e96cf5684685ae362d0ee758255a" translate="yes" xml:space="preserve">
          <source>LoadConfiguration::loadConfigurationFiles()</source>
          <target state="translated">LoadConfiguration::loadConfigurationFiles()</target>
        </trans-unit>
        <trans-unit id="2c2c021ef13c94c880347f19609acd2016ae0258" translate="yes" xml:space="preserve">
          <source>LoadEnvironmentVariables</source>
          <target state="translated">LoadEnvironmentVariables</target>
        </trans-unit>
        <trans-unit id="3c63e5b09e5da4b2f416929aaaeb0add12b9751d" translate="yes" xml:space="preserve">
          <source>LoadEnvironmentVariables (Foundation\Bootstrap)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="743e9d526f010461f5b8ff0c00e8be1c8a3a952d" translate="yes" xml:space="preserve">
          <source>LoadEnvironmentVariables::bootstrap()</source>
          <target state="translated">LoadEnvironmentVariables::bootstrap()</target>
        </trans-unit>
        <trans-unit id="e7979d052b8dc71633670bec52743c4e889ca04c" translate="yes" xml:space="preserve">
          <source>LoadEnvironmentVariables::checkForSpecificEnvironmentFile()</source>
          <target state="translated">LoadEnvironmentVariables::checkForSpecificEnvironmentFile()</target>
        </trans-unit>
        <trans-unit id="d1391f84e097b11407c184543e94fee402d55cbc" translate="yes" xml:space="preserve">
          <source>LoadEnvironmentVariables::setEnvironmentFilePath()</source>
          <target state="translated">LoadEnvironmentVariables::setEnvironmentFilePath()</target>
        </trans-unit>
        <trans-unit id="ec6f9069daa80029e880d76fc3bf6a0698a7d554" translate="yes" xml:space="preserve">
          <source>Loader</source>
          <target state="translated">Loader</target>
        </trans-unit>
        <trans-unit id="3dc83984bb64191b51846fced862a22bbd1f4567" translate="yes" xml:space="preserve">
          <source>Loader (Contracts)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78977d75056c77dfeeedaacaf56c665814967f39" translate="yes" xml:space="preserve">
          <source>Loader::addJsonPath()</source>
          <target state="translated">Loader::addJsonPath()</target>
        </trans-unit>
        <trans-unit id="be3a8c8cc8aaf5ad90fc85e279f9529ef0b45ae1" translate="yes" xml:space="preserve">
          <source>Loader::addNamespace()</source>
          <target state="translated">Loader::addNamespace()</target>
        </trans-unit>
        <trans-unit id="cadd2c5c0f0ac57a90e205644df47a4a30d9d450" translate="yes" xml:space="preserve">
          <source>Loader::load()</source>
          <target state="translated">Loader::load()</target>
        </trans-unit>
        <trans-unit id="9d155065286ba3e02323b4d8b2403a8bd156bd2f" translate="yes" xml:space="preserve">
          <source>Loader::namespaces()</source>
          <target state="translated">Loader::namespaces()</target>
        </trans-unit>
        <trans-unit id="af445b2b92bb3697ec701895b808fdb2d8e98359" translate="yes" xml:space="preserve">
          <source>Local Development Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6299d5149d1863738e69ded5efa01cf6e4158f3f" translate="yes" xml:space="preserve">
          <source>Local Drivers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba5aca6a541c48f35e67498eb135cc0f3b8da0d8" translate="yes" xml:space="preserve">
          <source>Local Scopes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10d774f65057675acd389e7956ea57b24eb4939c" translate="yes" xml:space="preserve">
          <source>Local URL Host Customization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce32c5bca58e2af03b97187a3c4bea9b77d6e22f" translate="yes" xml:space="preserve">
          <source>Local scopes allow you to define common sets of constraints that you may easily re-use throughout your application. For example, you may need to frequently retrieve all users that are considered &quot;popular&quot;. To define a scope, prefix an Eloquent model method with &lt;code&gt;scope&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d5dfa7c1fce02b0efdd48a4748caac39029929f" translate="yes" xml:space="preserve">
          <source>Locale used when sending notifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="603c68550764bc1a3540528316269bf88c7c54b8" translate="yes" xml:space="preserve">
          <source>LocaleUpdated</source>
          <target state="translated">LocaleUpdated</target>
        </trans-unit>
        <trans-unit id="8c993b366c4a347b361c485c11f1c30309a7abc8" translate="yes" xml:space="preserve">
          <source>LocaleUpdated (Foundation\Events)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4230e0ecb1249754e3e91fafad2000823691f0da" translate="yes" xml:space="preserve">
          <source>LocaleUpdated::__construct()</source>
          <target state="translated">LocaleUpdated::__construct()</target>
        </trans-unit>
        <trans-unit id="bf65b53244d21c29569888ef55a28e76847c8992" translate="yes" xml:space="preserve">
          <source>Localizable</source>
          <target state="translated">Localizable</target>
        </trans-unit>
        <trans-unit id="8e0656ca44991cf3da9711ad0c957d79c7202bbf" translate="yes" xml:space="preserve">
          <source>Localizable (Support\Traits)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a3c7ff41eb8a79d61ce60a2bfb76b57bfd685e" translate="yes" xml:space="preserve">
          <source>Localizable::withLocale()</source>
          <target state="translated">Localizable::withLocale()</target>
        </trans-unit>
        <trans-unit id="b9fc941160f1b0396956bfd39853ec712bd8d1fb" translate="yes" xml:space="preserve">
          <source>Localization</source>
          <target state="translated">Localization</target>
        </trans-unit>
        <trans-unit id="94d5406b386dbb15de739b490aa443e577e367ef" translate="yes" xml:space="preserve">
          <source>Localization of multiple notifiable entries may also be achieved via the &lt;code&gt;Notification&lt;/code&gt; facade:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f984c2d075f4ac230184923ae2bf1e595ac94424" translate="yes" xml:space="preserve">
          <source>Localizing Mailables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7052a20e9885fefc95fc532680e3c246d70e8d7" translate="yes" xml:space="preserve">
          <source>Localizing Notifications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1158d3bd5c44df936784077ae74125799fb0373d" translate="yes" xml:space="preserve">
          <source>Localizing Resource URIs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="891ebccd5baa32daed16fb5a0825ca7a4464931f" translate="yes" xml:space="preserve">
          <source>Lock</source>
          <target state="translated">Lock</target>
        </trans-unit>
        <trans-unit id="79e523cfd9b3dab1eea6335e84d1935732287f6a" translate="yes" xml:space="preserve">
          <source>Lock (Cache)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c20973422df9f916d3bb5d4d4fb8579fac0af836" translate="yes" xml:space="preserve">
          <source>Lock (Contracts)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e016602e7e9c657f4a261e31579eb6e68ec04a4f" translate="yes" xml:space="preserve">
          <source>Lock the selected rows in the table for updating.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5891989a862d6db2d84a0c4697d33dcdeb1e0b0c" translate="yes" xml:space="preserve">
          <source>Lock the selected rows in the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d0286b143b36a1cc68571c6dcf32f4b6c3b4a3e" translate="yes" xml:space="preserve">
          <source>Lock::__construct()</source>
          <target state="translated">Lock::__construct()</target>
        </trans-unit>
        <trans-unit id="6c9ae3f9abe6c7f36b6f54510c985516ec859be0" translate="yes" xml:space="preserve">
          <source>Lock::acquire()</source>
          <target state="translated">Lock::acquire()</target>
        </trans-unit>
        <trans-unit id="6442411849bddc49b8057025c6430389af0082ef" translate="yes" xml:space="preserve">
          <source>Lock::block()</source>
          <target state="translated">Lock::block()</target>
        </trans-unit>
        <trans-unit id="cd04441fac849bfc6e654f36b7b2e4bfa93c3eec" translate="yes" xml:space="preserve">
          <source>Lock::get()</source>
          <target state="translated">Lock::get()</target>
        </trans-unit>
        <trans-unit id="ed5209b1209fd3b604d484aed3cc640fe9228adb" translate="yes" xml:space="preserve">
          <source>Lock::release()</source>
          <target state="translated">Lock::release()</target>
        </trans-unit>
        <trans-unit id="e913b59bed164e94f1c6569953bc22c097104d05" translate="yes" xml:space="preserve">
          <source>LockProvider</source>
          <target state="translated">LockProvider</target>
        </trans-unit>
        <trans-unit id="495f2172492b67f7e2bb733619120dd6e0be5b52" translate="yes" xml:space="preserve">
          <source>LockProvider (Contracts)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02795489301ca273f0d0ecec77ef03469808833a" translate="yes" xml:space="preserve">
          <source>LockProvider::lock()</source>
          <target state="translated">LockProvider::lock()</target>
        </trans-unit>
        <trans-unit id="5d2cd6d3987e0f4f5874f73209a7e39cb84874f9" translate="yes" xml:space="preserve">
          <source>LockTimeoutException</source>
          <target state="translated">LockTimeoutException</target>
        </trans-unit>
        <trans-unit id="cda1e08a90bce5dc77d0081fc6852ba019bc558d" translate="yes" xml:space="preserve">
          <source>LockTimeoutException (Contracts)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0e7313bc2622e9d1969a2b6b0e43f242bf57ada" translate="yes" xml:space="preserve">
          <source>Lockout</source>
          <target state="translated">Lockout</target>
        </trans-unit>
        <trans-unit id="6cfd679db3d34d9533b92e2c34c47cedc807709c" translate="yes" xml:space="preserve">
          <source>Lockout (Auth\Events)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cc32140bd0f4542b435eab55fd529e74e81894c" translate="yes" xml:space="preserve">
          <source>Lockout::__construct()</source>
          <target state="translated">Lockout::__construct()</target>
        </trans-unit>
        <trans-unit id="8bf95ea372568c7a254ba9fada5f6f1701ebc5b5" translate="yes" xml:space="preserve">
          <source>Log</source>
          <target state="translated">Log</target>
        </trans-unit>
        <trans-unit id="bf93588c0cba677b3282f3dcb15476c7f9ae53e8" translate="yes" xml:space="preserve">
          <source>Log (Support\Facades)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b1818e2b573b6c5c2cc095b3926f2e1aca7a480" translate="yes" xml:space="preserve">
          <source>Log Driver</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0797e5297ca5c23288b5154f0d790da08cf46509" translate="yes" xml:space="preserve">
          <source>Log Levels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec34aa6f1948002f62c2389035fdee2b497b6bc6" translate="yes" xml:space="preserve">
          <source>Log a critical message to the logs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf77bc7e4a41dd934f5aa0f18f62434c1758197" translate="yes" xml:space="preserve">
          <source>Log a debug message to the logs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79e090abdcf3cc8677ec17286477136bf8e37000" translate="yes" xml:space="preserve">
          <source>Log a failed job into storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c5111a7b4a1370e41adeb9ba8dc208f5729f2c4" translate="yes" xml:space="preserve">
          <source>Log a message to the logs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c27a7bc719a5f8d13ff6c3b2bbe2d4fb306dfb85" translate="yes" xml:space="preserve">
          <source>Log a notice to the logs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7465227a284ed4094f28af2c10ebee67a4480369" translate="yes" xml:space="preserve">
          <source>Log a query in the connection's query log.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60558198ee9b9eba517c7c31c2535add85e480a3" translate="yes" xml:space="preserve">
          <source>Log a user into the application without sessions or cookies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecc6c64220a5ac8d683d669a712d62e4c0196d3f" translate="yes" xml:space="preserve">
          <source>Log a user into the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cff4b687be528d37292d89536e7d17c5946664e" translate="yes" xml:space="preserve">
          <source>Log a warning message to the logs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a58d95a6017c28863171bb49ec92d848f06f965" translate="yes" xml:space="preserve">
          <source>Log an alert message to the logs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="104f0b1d3ab6ab80b8540cedcaac17172bcae91e" translate="yes" xml:space="preserve">
          <source>Log an emergency message to the logs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d5dce2823197a6f169320a9df001270a2b1f169" translate="yes" xml:space="preserve">
          <source>Log an error message to the logs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0343de165e96028d88147caa95c37f7a7beb9502" translate="yes" xml:space="preserve">
          <source>Log an informational message to the logs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2727fb58441d9824fc9619d1de24a247212b68d1" translate="yes" xml:space="preserve">
          <source>Log that a migration was run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a101d65b877000ed5edf87f7eb290154ce157eb9" translate="yes" xml:space="preserve">
          <source>Log the given user ID into the application without sessions or cookies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05937354d52130e14df6302a3f6e832f0bd6f38a" translate="yes" xml:space="preserve">
          <source>Log the given user ID into the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c064320037c77b30ba87f18e4972862b6ba5ad9" translate="yes" xml:space="preserve">
          <source>Log the user out of the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c97f3c3ae2cfd569dc3767e158d34955e9bbce69" translate="yes" xml:space="preserve">
          <source>Log::getFacadeAccessor()</source>
          <target state="translated">Log::getFacadeAccessor()</target>
        </trans-unit>
        <trans-unit id="18d9b17fa24e7eb26d07664f3b576526c5614f4d" translate="yes" xml:space="preserve">
          <source>LogBroadcaster</source>
          <target state="translated">LogBroadcaster</target>
        </trans-unit>
        <trans-unit id="97a60465966b4731a6f5ef4a3a5de351db19398a" translate="yes" xml:space="preserve">
          <source>LogBroadcaster (Broadcasting\Broadcasters)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a796b874ea88b8e3a6c599521c784bc73d802cb" translate="yes" xml:space="preserve">
          <source>LogBroadcaster::__construct()</source>
          <target state="translated">LogBroadcaster::__construct()</target>
        </trans-unit>
        <trans-unit id="662e41c7dd9ab0d77aab2ac51efe059629d83600" translate="yes" xml:space="preserve">
          <source>LogBroadcaster::auth()</source>
          <target state="translated">LogBroadcaster::auth()</target>
        </trans-unit>
        <trans-unit id="2e8ebf60488ca5afafe2274552eb506bfd6d1909" translate="yes" xml:space="preserve">
          <source>LogBroadcaster::broadcast()</source>
          <target state="translated">LogBroadcaster::broadcast()</target>
        </trans-unit>
        <trans-unit id="f550801302abb2eab2146eb7013fb923a98e7392" translate="yes" xml:space="preserve">
          <source>LogBroadcaster::validAuthenticationResponse()</source>
          <target state="translated">LogBroadcaster::validAuthenticationResponse()</target>
        </trans-unit>
        <trans-unit id="72f6de230872708882c80aecd27e92ef3e0f48de" translate="yes" xml:space="preserve">
          <source>LogManager</source>
          <target state="translated">LogManager</target>
        </trans-unit>
        <trans-unit id="5aefe0a2e3326e69458216d74888094f9dfc0b32" translate="yes" xml:space="preserve">
          <source>LogServiceProvider</source>
          <target state="translated">LogServiceProvider</target>
        </trans-unit>
        <trans-unit id="e11d7cb49bdf6127a50014e04ba75a6b0e7d3559" translate="yes" xml:space="preserve">
          <source>LogTransport</source>
          <target state="translated">LogTransport</target>
        </trans-unit>
        <trans-unit id="7bc2060803123dad74ce57ccf7c1f0bf9a3b87ff" translate="yes" xml:space="preserve">
          <source>LogTransport (Mail\Transport)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e170e30bc3789c5c4c9502e111a7d6f00a3bf5" translate="yes" xml:space="preserve">
          <source>LogTransport::__construct()</source>
          <target state="translated">LogTransport::__construct()</target>
        </trans-unit>
        <trans-unit id="a8c98e0e58b3f5138e5cfe09860326c0fb0d14f9" translate="yes" xml:space="preserve">
          <source>LogTransport::getMimeEntityString()</source>
          <target state="translated">LogTransport::getMimeEntityString()</target>
        </trans-unit>
        <trans-unit id="8ef040bcb3e39cec5a8de0c1d29ed38aad75efee" translate="yes" xml:space="preserve">
          <source>LogTransport::send()</source>
          <target state="translated">LogTransport::send()</target>
        </trans-unit>
        <trans-unit id="b792a454b9673a8b356b8e82bf9f200acc105d60" translate="yes" xml:space="preserve">
          <source>Log\Events</source>
          <target state="translated">Log\Events</target>
        </trans-unit>
        <trans-unit id="8432c24573f3f89fad60802fe8eddf1da6315768" translate="yes" xml:space="preserve">
          <source>Logger</source>
          <target state="translated">Logger</target>
        </trans-unit>
        <trans-unit id="debf1c0f1d4348c678460f5feda18fc5413d13db" translate="yes" xml:space="preserve">
          <source>LoggerInterface</source>
          <target state="translated">LoggerInterface</target>
        </trans-unit>
        <trans-unit id="790a344a841bfd91fe92ad97cd53196b7ad96184" translate="yes" xml:space="preserve">
          <source>LoggerInterface
    getLogger()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77622898261ef20a6a11e7ba3ae5bcfdaebc0d57" translate="yes" xml:space="preserve">
          <source>LoggerInterface
    stack(array $channels, string|null $channel = null)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57003616863fe634c645e342ee9080681e419c5f" translate="yes" xml:space="preserve">
          <source>Logging</source>
          <target state="translated">Logging</target>
        </trans-unit>
        <trans-unit id="2c816ebdd9fac2c178b10f425ad795e1609b0ac4" translate="yes" xml:space="preserve">
          <source>Logging Out</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa1fc50d9ca5e574d016c758be6512b24b96ded" translate="yes" xml:space="preserve">
          <source>LogicException</source>
          <target state="translated">LogicException</target>
        </trans-unit>
        <trans-unit id="4e5a2893bdcc7d239c1db72e4c4ffbe4bea73174" translate="yes" xml:space="preserve">
          <source>Login</source>
          <target state="translated">Login</target>
        </trans-unit>
        <trans-unit id="f76895c8c7ba579aca6f3cd80710d4ac8b084b75" translate="yes" xml:space="preserve">
          <source>Login (Auth\Events)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d075191549164fc4642c58b966ddb76c1ce010d4" translate="yes" xml:space="preserve">
          <source>Login Throttling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09b5bfe89cc8f05b4fda92064e8d10a6568a72c9" translate="yes" xml:space="preserve">
          <source>Login::__construct()</source>
          <target state="translated">Login::__construct()</target>
        </trans-unit>
        <trans-unit id="e43d612e11f1568f2373e719d4c4b08dcecdc7cc" translate="yes" xml:space="preserve">
          <source>Logout</source>
          <target state="translated">Logout</target>
        </trans-unit>
        <trans-unit id="2d10001257e1d6b29ce43599fad6b941e1b6c6e2" translate="yes" xml:space="preserve">
          <source>Logout (Auth\Events)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b49d23585957c45606ff6bc053ff417a5b05fe8" translate="yes" xml:space="preserve">
          <source>Logout::__construct()</source>
          <target state="translated">Logout::__construct()</target>
        </trans-unit>
        <trans-unit id="1fa62e6aa37ff6dbe4a2050cb74be5c82a1f1a40" translate="yes" xml:space="preserve">
          <source>Logs with an arbitrary level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22ae5e496f12c852ee52320b80c057c68c3d0224" translate="yes" xml:space="preserve">
          <source>Looking for more information on how to write Blade templates? Check out the full &lt;a href=&quot;blade&quot;&gt;Blade documentation&lt;/a&gt; to get started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c32a08b6182b2579d31a9777f1cb4f1af49eea9" translate="yes" xml:space="preserve">
          <source>Looping</source>
          <target state="translated">Looping</target>
        </trans-unit>
        <trans-unit id="8b97218381df3ff07bd8df3b54e05f49ca62cd12" translate="yes" xml:space="preserve">
          <source>Looping (Queue\Events)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24cb83f925655f460745f4d35dfa20960f647377" translate="yes" xml:space="preserve">
          <source>Looping::__construct()</source>
          <target state="translated">Looping::__construct()</target>
        </trans-unit>
        <trans-unit id="02720f9d38bf4f35e84ed5228689898bee176418" translate="yes" xml:space="preserve">
          <source>Loops</source>
          <target state="translated">Loops</target>
        </trans-unit>
        <trans-unit id="9822800055d3f706d3040bbab73890c893ac237a" translate="yes" xml:space="preserve">
          <source>Loose Coupling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8649d415f7ce0458aa4fed1a22cd1c61d46caef" translate="yes" xml:space="preserve">
          <source>LuaScripts</source>
          <target state="translated">LuaScripts</target>
        </trans-unit>
        <trans-unit id="7e99a607af85d6c05d80a7777c75d5056b6bbdf7" translate="yes" xml:space="preserve">
          <source>LuaScripts (Queue)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="288cc88d464200ba018432759f6877b17c616870" translate="yes" xml:space="preserve">
          <source>LuaScripts::migrateExpiredJobs()</source>
          <target state="translated">LuaScripts::migrateExpiredJobs()</target>
        </trans-unit>
        <trans-unit id="ae6492977b86d24ef687cfb8be409c0309017c15" translate="yes" xml:space="preserve">
          <source>LuaScripts::pop()</source>
          <target state="translated">LuaScripts::pop()</target>
        </trans-unit>
        <trans-unit id="62bbb9d5fb1acf3b22372ced50a5b85c59ab63a5" translate="yes" xml:space="preserve">
          <source>LuaScripts::release()</source>
          <target state="translated">LuaScripts::release()</target>
        </trans-unit>
        <trans-unit id="afbc3f8e0a9eb238038cda27894e1e573ac359f6" translate="yes" xml:space="preserve">
          <source>LuaScripts::size()</source>
          <target state="translated">LuaScripts::size()</target>
        </trans-unit>
        <trans-unit id="8f674c15ca6409df4015589962b141d5ca0ca649" translate="yes" xml:space="preserve">
          <source>Lumen</source>
          <target state="translated">Lumen</target>
        </trans-unit>
        <trans-unit id="2f16c30ddff89b38e96bc82806bfd185a2b10e64" translate="yes" xml:space="preserve">
          <source>MAC address equivalent column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec29cfe65553e07b2113c124b5055643699336f8" translate="yes" xml:space="preserve">
          <source>MEDIUMINT equivalent column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c82e7ef8f0b041144f1f90f7a4bcce2e2f62dea" translate="yes" xml:space="preserve">
          <source>MEDIUMTEXT equivalent column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4db9e72d5a894a4e3e6759e29ba5bd411438af02" translate="yes" xml:space="preserve">
          <source>MULTILINESTRING equivalent column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="062f4016f29fdb3516ae5e517467d51caaeaba8c" translate="yes" xml:space="preserve">
          <source>MULTIPOINT equivalent column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a49c57d5cfcaa3a46c4e32ea398dfa64e23f0bcd" translate="yes" xml:space="preserve">
          <source>MULTIPOLYGON equivalent column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ef5fab8b5ecf995f07ea98d19262ad9f4a4b011" translate="yes" xml:space="preserve">
          <source>Mac / Linux</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da81d9cac641684af54c22bf44d1fa34831f4d0a" translate="yes" xml:space="preserve">
          <source>Mac / Linux:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e1e1a2b40fc4b23c49c207c46565c4207da2952" translate="yes" xml:space="preserve">
          <source>Macroable</source>
          <target state="translated">Macroable</target>
        </trans-unit>
        <trans-unit id="68363da268dcd74383c829b0e493a0f5dbde15a5" translate="yes" xml:space="preserve">
          <source>Macroable (Support\Traits)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5647ca26cbb591d2d87c96fbc4974985cd0f5619" translate="yes" xml:space="preserve">
          <source>Macroable::__call()</source>
          <target state="translated">Macroable::__call()</target>
        </trans-unit>
        <trans-unit id="2ffef4a9e35677ad24e1bd87da01c80e71bf6dc5" translate="yes" xml:space="preserve">
          <source>Macroable::__callStatic()</source>
          <target state="translated">Macroable::__callStatic()</target>
        </trans-unit>
        <trans-unit id="68b7cd311dd856ca6b493022ad6710499c781014" translate="yes" xml:space="preserve">
          <source>Macroable::hasMacro()</source>
          <target state="translated">Macroable::hasMacro()</target>
        </trans-unit>
        <trans-unit id="63a4ceefaa42a8413832ca6285eef760443ea72d" translate="yes" xml:space="preserve">
          <source>Macroable::macro()</source>
          <target state="translated">Macroable::macro()</target>
        </trans-unit>
        <trans-unit id="3479fc8c8a254ca0686f2a461dfc81d7af069576" translate="yes" xml:space="preserve">
          <source>Macroable::mixin()</source>
          <target state="translated">Macroable::mixin()</target>
        </trans-unit>
        <trans-unit id="8a754257a5f34265d9373b2e7571c43a4568fdeb" translate="yes" xml:space="preserve">
          <source>Magento</source>
          <target state="translated">Magento</target>
        </trans-unit>
        <trans-unit id="92379cbb8ecf696194b47b619a87e9e4f9a75db2" translate="yes" xml:space="preserve">
          <source>Mail</source>
          <target state="translated">Mail</target>
        </trans-unit>
        <trans-unit id="88c28792c2a04bfae492ce3f8e8753e8007e3f5a" translate="yes" xml:space="preserve">
          <source>Mail &amp;amp; Local Development</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5438f6538e44595c5ecb3c6c89bec0f7b315febb" translate="yes" xml:space="preserve">
          <source>Mail (Support\Facades)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9705a9b6c021be9912fd43377d7a57180ab19f2" translate="yes" xml:space="preserve">
          <source>Mail Fake</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b229889ec3c0a24028526c9870294d48dbd0ffa5" translate="yes" xml:space="preserve">
          <source>Mail Notifications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90c37858e4a49c6f53f5a2fe7ebb9c1728b842e5" translate="yes" xml:space="preserve">
          <source>Mail::fake()</source>
          <target state="translated">Mail::fake()</target>
        </trans-unit>
        <trans-unit id="4ffccfbed339dc569d195ba687b4997aca315fd5" translate="yes" xml:space="preserve">
          <source>Mail::getFacadeAccessor()</source>
          <target state="translated">Mail::getFacadeAccessor()</target>
        </trans-unit>
        <trans-unit id="a17adaa58236dc8d7952253128ed88910010f533" translate="yes" xml:space="preserve">
          <source>MailChannel</source>
          <target state="translated">MailChannel</target>
        </trans-unit>
        <trans-unit id="a6f2b39962b3cc00c7cdfe79f2f5ede8ee7dce8c" translate="yes" xml:space="preserve">
          <source>MailChannel (Notifications\Channels)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00f4481f5f0faa7cd879d1db0cedcaae5c0fa772" translate="yes" xml:space="preserve">
          <source>MailChannel::__construct()</source>
          <target state="translated">MailChannel::__construct()</target>
        </trans-unit>
        <trans-unit id="5ae935d4af2f6252e080bc4f1af5d239d88b8ef5" translate="yes" xml:space="preserve">
          <source>MailChannel::addAttachments()</source>
          <target state="translated">MailChannel::addAttachments()</target>
        </trans-unit>
        <trans-unit id="5b617d93d7c4e31833b036165bc03da01b5250bd" translate="yes" xml:space="preserve">
          <source>MailChannel::addSender()</source>
          <target state="translated">MailChannel::addSender()</target>
        </trans-unit>
        <trans-unit id="18d70a23696f64ca2db39b00ebc53f44ba0f3a3a" translate="yes" xml:space="preserve">
          <source>MailChannel::additionalMessageData()</source>
          <target state="translated">MailChannel::additionalMessageData()</target>
        </trans-unit>
        <trans-unit id="414db51857444a16e843f60f2e5926d464bfa52b" translate="yes" xml:space="preserve">
          <source>MailChannel::addressMessage()</source>
          <target state="translated">MailChannel::addressMessage()</target>
        </trans-unit>
        <trans-unit id="ce37bb6867b01a7ae3f70a9b9b2743cfb7dc605e" translate="yes" xml:space="preserve">
          <source>MailChannel::buildMessage()</source>
          <target state="translated">MailChannel::buildMessage()</target>
        </trans-unit>
        <trans-unit id="90133b7bcf50967eee4b67b884f15301fe3c732c" translate="yes" xml:space="preserve">
          <source>MailChannel::buildView()</source>
          <target state="translated">MailChannel::buildView()</target>
        </trans-unit>
        <trans-unit id="eb38ae88aea480ca6ed0343fc4bde79f287ccb6e" translate="yes" xml:space="preserve">
          <source>MailChannel::getRecipients()</source>
          <target state="translated">MailChannel::getRecipients()</target>
        </trans-unit>
        <trans-unit id="67fbba40cb67bf97244fe435b12e39b1a1c4c766" translate="yes" xml:space="preserve">
          <source>MailChannel::messageBuilder()</source>
          <target state="translated">MailChannel::messageBuilder()</target>
        </trans-unit>
        <trans-unit id="01fe6012396216ed1257ec5be03d8d9d2f0dd26e" translate="yes" xml:space="preserve">
          <source>MailChannel::send()</source>
          <target state="translated">MailChannel::send()</target>
        </trans-unit>
        <trans-unit id="f458f55bc3f42854e0187eb4219109a0cb47c769" translate="yes" xml:space="preserve">
          <source>MailFake</source>
          <target state="translated">MailFake</target>
        </trans-unit>
        <trans-unit id="6f8531bbabbf46dc3497d7612760646a52727940" translate="yes" xml:space="preserve">
          <source>MailFake (Support\Testing)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c408d11cf3c9471c833eae9fe31c7b4939788bf3" translate="yes" xml:space="preserve">
          <source>MailFake::assertNotQueued()</source>
          <target state="translated">MailFake::assertNotQueued()</target>
        </trans-unit>
        <trans-unit id="4a6f27960b8aea57578e775db41e38fb8bc9ac69" translate="yes" xml:space="preserve">
          <source>MailFake::assertNotSent()</source>
          <target state="translated">MailFake::assertNotSent()</target>
        </trans-unit>
        <trans-unit id="e9cb9f3a13db1e86073c4fc7991ca8198e40d946" translate="yes" xml:space="preserve">
          <source>MailFake::assertNothingQueued()</source>
          <target state="translated">MailFake::assertNothingQueued()</target>
        </trans-unit>
        <trans-unit id="c70286ec2f86ddac8a67103571536a58fc2de913" translate="yes" xml:space="preserve">
          <source>MailFake::assertNothingSent()</source>
          <target state="translated">MailFake::assertNothingSent()</target>
        </trans-unit>
        <trans-unit id="fdc0f1dff09cb7d586e8e6ed26ad37a98f6ed562" translate="yes" xml:space="preserve">
          <source>MailFake::assertQueued()</source>
          <target state="translated">MailFake::assertQueued()</target>
        </trans-unit>
        <trans-unit id="ebb34b86f2dbd434dcfb4f26b11cff08da5fdc5b" translate="yes" xml:space="preserve">
          <source>MailFake::assertQueuedTimes()</source>
          <target state="translated">MailFake::assertQueuedTimes()</target>
        </trans-unit>
        <trans-unit id="1f2f6d69c8f887a5123754965fd610fa2acf2f00" translate="yes" xml:space="preserve">
          <source>MailFake::assertSent()</source>
          <target state="translated">MailFake::assertSent()</target>
        </trans-unit>
        <trans-unit id="1aac410a9471f2501e4bf2565775d5782afbfba5" translate="yes" xml:space="preserve">
          <source>MailFake::assertSentTimes()</source>
          <target state="translated">MailFake::assertSentTimes()</target>
        </trans-unit>
        <trans-unit id="ac3a44da0850e30d5981d1cb089e09d136476ba8" translate="yes" xml:space="preserve">
          <source>MailFake::bcc()</source>
          <target state="translated">MailFake::bcc()</target>
        </trans-unit>
        <trans-unit id="a2ec7ffb5d30412051172bcf140b6d02061a4f15" translate="yes" xml:space="preserve">
          <source>MailFake::failures()</source>
          <target state="translated">MailFake::failures()</target>
        </trans-unit>
        <trans-unit id="5d721bcb6024584b9521d22e7aca6e2d029a6b84" translate="yes" xml:space="preserve">
          <source>MailFake::hasQueued()</source>
          <target state="translated">MailFake::hasQueued()</target>
        </trans-unit>
        <trans-unit id="9136af8118ae9d12bdeb482fe8d9a39ae1169b1e" translate="yes" xml:space="preserve">
          <source>MailFake::hasSent()</source>
          <target state="translated">MailFake::hasSent()</target>
        </trans-unit>
        <trans-unit id="c4eefc4812ec46bacc07a3ba66692a76539762a4" translate="yes" xml:space="preserve">
          <source>MailFake::later()</source>
          <target state="translated">MailFake::later()</target>
        </trans-unit>
        <trans-unit id="69ca57d8171493b9bb13064f3189e7ba47297772" translate="yes" xml:space="preserve">
          <source>MailFake::mailablesOf()</source>
          <target state="translated">MailFake::mailablesOf()</target>
        </trans-unit>
        <trans-unit id="b5b3c3f2ff2052fe2b9101f40aac8763e3a7ab15" translate="yes" xml:space="preserve">
          <source>MailFake::queue()</source>
          <target state="translated">MailFake::queue()</target>
        </trans-unit>
        <trans-unit id="ecbe9108beff670332c748a18f454be7dfa19eb3" translate="yes" xml:space="preserve">
          <source>MailFake::queued()</source>
          <target state="translated">MailFake::queued()</target>
        </trans-unit>
        <trans-unit id="a86f96bcc6784478d9f97657ca1b7d29b5d3d120" translate="yes" xml:space="preserve">
          <source>MailFake::queuedMailablesOf()</source>
          <target state="translated">MailFake::queuedMailablesOf()</target>
        </trans-unit>
        <trans-unit id="b5f8c773645454573201fe2695cc5716683d70cc" translate="yes" xml:space="preserve">
          <source>MailFake::raw()</source>
          <target state="translated">MailFake::raw()</target>
        </trans-unit>
        <trans-unit id="3e51267dab90c396cc21528cd181388e73de9c26" translate="yes" xml:space="preserve">
          <source>MailFake::send()</source>
          <target state="translated">MailFake::send()</target>
        </trans-unit>
        <trans-unit id="d562e409c91b2f8fa3ff6e2e12854e5dc81a5c54" translate="yes" xml:space="preserve">
          <source>MailFake::sent()</source>
          <target state="translated">MailFake::sent()</target>
        </trans-unit>
        <trans-unit id="cfd0792fd95097f398a15e4006002907dc400ad1" translate="yes" xml:space="preserve">
          <source>MailFake::to()</source>
          <target state="translated">MailFake::to()</target>
        </trans-unit>
        <trans-unit id="601f7d8ec6172e25fcc8b2672e2da39df924ac51" translate="yes" xml:space="preserve">
          <source>MailMakeCommand</source>
          <target state="translated">MailMakeCommand</target>
        </trans-unit>
        <trans-unit id="075862956d8845d0596cf41bf0c8b30af8b32dc5" translate="yes" xml:space="preserve">
          <source>MailMakeCommand (Foundation)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b487e7962ab820c5574afe483a6d893bc0f5eaa5" translate="yes" xml:space="preserve">
          <source>MailMakeCommand::buildClass()</source>
          <target state="translated">MailMakeCommand::buildClass()</target>
        </trans-unit>
        <trans-unit id="31c8bbb4fadda56e9d7be764bb9e724d4cc31a02" translate="yes" xml:space="preserve">
          <source>MailMakeCommand::getDefaultNamespace()</source>
          <target state="translated">MailMakeCommand::getDefaultNamespace()</target>
        </trans-unit>
        <trans-unit id="eb55b52da1dd86b0f5bda005798029e654496e7c" translate="yes" xml:space="preserve">
          <source>MailMakeCommand::getOptions()</source>
          <target state="translated">MailMakeCommand::getOptions()</target>
        </trans-unit>
        <trans-unit id="0ec8ddb4c95396c99d9d2ce19c3b217d5faadb05" translate="yes" xml:space="preserve">
          <source>MailMakeCommand::getStub()</source>
          <target state="translated">MailMakeCommand::getStub()</target>
        </trans-unit>
        <trans-unit id="b921636c6f84486ad97dd4d240c05db6481630da" translate="yes" xml:space="preserve">
          <source>MailMakeCommand::handle()</source>
          <target state="translated">MailMakeCommand::handle()</target>
        </trans-unit>
        <trans-unit id="b9802d501f10aa28a5f285a7e41a1a10c8c5a9ce" translate="yes" xml:space="preserve">
          <source>MailMakeCommand::writeMarkdownTemplate()</source>
          <target state="translated">MailMakeCommand::writeMarkdownTemplate()</target>
        </trans-unit>
        <trans-unit id="5844f77749c7e72c1da9a4fb627b22a577a545a9" translate="yes" xml:space="preserve">
          <source>MailMessage</source>
          <target state="translated">MailMessage</target>
        </trans-unit>
        <trans-unit id="fff90dfbd0d3b79f52cfcd6d249b564d5b1530bf" translate="yes" xml:space="preserve">
          <source>MailMessage (Notifications\Messages)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5abd993fac728ed7209e4988b75955927a8a1f29" translate="yes" xml:space="preserve">
          <source>MailMessage::arrayOfAddresses()</source>
          <target state="translated">MailMessage::arrayOfAddresses()</target>
        </trans-unit>
        <trans-unit id="b9296e48db153fb1f0013d529b51189108ecebb6" translate="yes" xml:space="preserve">
          <source>MailMessage::attach()</source>
          <target state="translated">MailMessage::attach()</target>
        </trans-unit>
        <trans-unit id="43216005afa76164b6477f5b86231893c6a2128e" translate="yes" xml:space="preserve">
          <source>MailMessage::attachData()</source>
          <target state="translated">MailMessage::attachData()</target>
        </trans-unit>
        <trans-unit id="cdaa63397f058b2bb1aa91e9ab0dc31d1c4e62f4" translate="yes" xml:space="preserve">
          <source>MailMessage::bcc()</source>
          <target state="translated">MailMessage::bcc()</target>
        </trans-unit>
        <trans-unit id="c6dc08a7ccad13106cc64a16e2d0ab80e3d2fbca" translate="yes" xml:space="preserve">
          <source>MailMessage::cc()</source>
          <target state="translated">MailMessage::cc()</target>
        </trans-unit>
        <trans-unit id="5b0844663262743131a24713305c31c05c4b7afd" translate="yes" xml:space="preserve">
          <source>MailMessage::data()</source>
          <target state="translated">MailMessage::data()</target>
        </trans-unit>
        <trans-unit id="1565993e629596339acd5129850b0e1378004856" translate="yes" xml:space="preserve">
          <source>MailMessage::from()</source>
          <target state="translated">MailMessage::from()</target>
        </trans-unit>
        <trans-unit id="75617b58bfbb0a7848438d843a06d773e8e4a84e" translate="yes" xml:space="preserve">
          <source>MailMessage::markdown()</source>
          <target state="translated">MailMessage::markdown()</target>
        </trans-unit>
        <trans-unit id="36d0e7cc424c92457c02bce21a9ba98eeb821ce8" translate="yes" xml:space="preserve">
          <source>MailMessage::parseAddresses()</source>
          <target state="translated">MailMessage::parseAddresses()</target>
        </trans-unit>
        <trans-unit id="3c76310238c7892a20c0ab0d9a55e72d2d3741fa" translate="yes" xml:space="preserve">
          <source>MailMessage::priority()</source>
          <target state="translated">MailMessage::priority()</target>
        </trans-unit>
        <trans-unit id="0c98007f99fb5d10d6599fa5b4779ac66c539973" translate="yes" xml:space="preserve">
          <source>MailMessage::replyTo()</source>
          <target state="translated">MailMessage::replyTo()</target>
        </trans-unit>
        <trans-unit id="30d00e1d9a636c23c4b5bafbebab1bc1a7bfe7ff" translate="yes" xml:space="preserve">
          <source>MailMessage::template()</source>
          <target state="translated">MailMessage::template()</target>
        </trans-unit>
        <trans-unit id="666f4405414ffdfd7ef226ccec3c815ea78c2d6c" translate="yes" xml:space="preserve">
          <source>MailMessage::view()</source>
          <target state="translated">MailMessage::view()</target>
        </trans-unit>
        <trans-unit id="3f6bc67bbdda04ba414c64cfd857447ea67c32f2" translate="yes" xml:space="preserve">
          <source>MailQueue</source>
          <target state="translated">MailQueue</target>
        </trans-unit>
        <trans-unit id="82358de37f96153d07ee414718caa5e7e9503b23" translate="yes" xml:space="preserve">
          <source>MailQueue (Contracts)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f976e8f0ac78e612ed8830b20d062cdc98dcb82" translate="yes" xml:space="preserve">
          <source>MailQueue::later()</source>
          <target state="translated">MailQueue::later()</target>
        </trans-unit>
        <trans-unit id="880979ca36db7d7c11fe27428c61b09b99732a36" translate="yes" xml:space="preserve">
          <source>MailQueue::queue()</source>
          <target state="translated">MailQueue::queue()</target>
        </trans-unit>
        <trans-unit id="d06f698d06f5449a3b2a115dd2e18a572bf66db2" translate="yes" xml:space="preserve">
          <source>MailServiceProvider</source>
          <target state="translated">MailServiceProvider</target>
        </trans-unit>
        <trans-unit id="0a9dff25c7cfee87b80a7926888b77521b0cbcd8" translate="yes" xml:space="preserve">
          <source>Mail\Events</source>
          <target state="translated">Mail\Events</target>
        </trans-unit>
        <trans-unit id="d0ce225de12ccd8052dbe4e4339a6e817263c830" translate="yes" xml:space="preserve">
          <source>Mail\Transport</source>
          <target state="translated">Mail\Transport</target>
        </trans-unit>
        <trans-unit id="e383f5f042ab2bc2818edff3640ba2dfb7fc1154" translate="yes" xml:space="preserve">
          <source>Mailable</source>
          <target state="translated">Mailable</target>
        </trans-unit>
        <trans-unit id="cb2e6e10e333582214745534092193ec65f9b983" translate="yes" xml:space="preserve">
          <source>Mailable (Contracts)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dad3ab46c97271ffba402d01fc0e21a17becb09" translate="yes" xml:space="preserve">
          <source>Mailable Dynamic Variable Casing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9adabad8a8aaecf3ab605f06c56f603704665c5" translate="yes" xml:space="preserve">
          <source>Mailable::later()</source>
          <target state="translated">Mailable::later()</target>
        </trans-unit>
        <trans-unit id="2b44b1c44db0666216bd18254bf32e12c7c072f1" translate="yes" xml:space="preserve">
          <source>Mailable::queue()</source>
          <target state="translated">Mailable::queue()</target>
        </trans-unit>
        <trans-unit id="bec5ce3a621977dd7e1f0aefb88cc4e5edbdc8b5" translate="yes" xml:space="preserve">
          <source>Mailable::send()</source>
          <target state="translated">Mailable::send()</target>
        </trans-unit>
        <trans-unit id="0671b7453f47349a5cf028068f598c7244868dbf" translate="yes" xml:space="preserve">
          <source>Mailer</source>
          <target state="translated">Mailer</target>
        </trans-unit>
        <trans-unit id="0720385eb6ffa64237e6070c82a5b89d018db9f5" translate="yes" xml:space="preserve">
          <source>Mailer (Contracts)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9a07c2f7093909b34f718b34ce3815c519a4047" translate="yes" xml:space="preserve">
          <source>Mailer::bcc()</source>
          <target state="translated">Mailer::bcc()</target>
        </trans-unit>
        <trans-unit id="8b36d044879283d8f45ffb5440ff4f0fa3c19320" translate="yes" xml:space="preserve">
          <source>Mailer::failures()</source>
          <target state="translated">Mailer::failures()</target>
        </trans-unit>
        <trans-unit id="dbeb80d46f8e646885821292908ad205b1b04ad4" translate="yes" xml:space="preserve">
          <source>Mailer::raw()</source>
          <target state="translated">Mailer::raw()</target>
        </trans-unit>
        <trans-unit id="63451f89e6001d795cabc9b4d8d8e1e029588626" translate="yes" xml:space="preserve">
          <source>Mailer::send()</source>
          <target state="translated">Mailer::send()</target>
        </trans-unit>
        <trans-unit id="5b5b1b787ea01696c7f04b005e14a04ceb007a0c" translate="yes" xml:space="preserve">
          <source>Mailer::to()</source>
          <target state="translated">Mailer::to()</target>
        </trans-unit>
        <trans-unit id="4e2026c9f54bb51dbe8195251c8094a626ca4057" translate="yes" xml:space="preserve">
          <source>Mailgun Driver</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9de6470492af7766c265944e9255f3e603b7d2b9" translate="yes" xml:space="preserve">
          <source>MailgunTransport</source>
          <target state="translated">MailgunTransport</target>
        </trans-unit>
        <trans-unit id="466d8fbcd76bc4e7e747c807956c1b925a4b9423" translate="yes" xml:space="preserve">
          <source>MailgunTransport (Mail\Transport)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98a900b736903a6b6cf33ad515ac7dee071037b0" translate="yes" xml:space="preserve">
          <source>MailgunTransport::__construct()</source>
          <target state="translated">MailgunTransport::__construct()</target>
        </trans-unit>
        <trans-unit id="ade458f28781ee5ed471a883e423ec3b25c85c2f" translate="yes" xml:space="preserve">
          <source>MailgunTransport::allContacts()</source>
          <target state="translated">MailgunTransport::allContacts()</target>
        </trans-unit>
        <trans-unit id="eef918c29e42f806d3690ab3f863c7f1992158ea" translate="yes" xml:space="preserve">
          <source>MailgunTransport::getDomain()</source>
          <target state="translated">MailgunTransport::getDomain()</target>
        </trans-unit>
        <trans-unit id="8f0fdbfc8519317a22c3caf7effb0d34dcf7286d" translate="yes" xml:space="preserve">
          <source>MailgunTransport::getKey()</source>
          <target state="translated">MailgunTransport::getKey()</target>
        </trans-unit>
        <trans-unit id="2895b64c70996be1da067100d881132341f6997f" translate="yes" xml:space="preserve">
          <source>MailgunTransport::getTo()</source>
          <target state="translated">MailgunTransport::getTo()</target>
        </trans-unit>
        <trans-unit id="d88894d2e7f52e7b7c26c085b81b5733a814ced3" translate="yes" xml:space="preserve">
          <source>MailgunTransport::payload()</source>
          <target state="translated">MailgunTransport::payload()</target>
        </trans-unit>
        <trans-unit id="d4e5156fe50875fc062acafff4487a402ad506f5" translate="yes" xml:space="preserve">
          <source>MailgunTransport::send()</source>
          <target state="translated">MailgunTransport::send()</target>
        </trans-unit>
        <trans-unit id="9a3bf5a7642986c1cb3eb65d3b58d2d6b343b3d0" translate="yes" xml:space="preserve">
          <source>MailgunTransport::setDomain()</source>
          <target state="translated">MailgunTransport::setDomain()</target>
        </trans-unit>
        <trans-unit id="f7f311d40ad3c4e5d7f2257370ce911a600db0f8" translate="yes" xml:space="preserve">
          <source>MailgunTransport::setKey()</source>
          <target state="translated">MailgunTransport::setKey()</target>
        </trans-unit>
        <trans-unit id="90c181ac5bd7bae16f0d5218cf986401324b8537" translate="yes" xml:space="preserve">
          <source>Mailhog</source>
          <target state="translated">Mailhog</target>
        </trans-unit>
        <trans-unit id="e672d7090a42aa4166b0496fd456178f116ea33c" translate="yes" xml:space="preserve">
          <source>Mailhog allows you to easily catch your outgoing email and examine it without actually sending the mail to its recipients. To get started, update your &lt;code&gt;.env&lt;/code&gt; file to use the following mail settings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb83d89548cf78f0282cfaa2569f288215d87ac1" translate="yes" xml:space="preserve">
          <source>Mailtrap</source>
          <target state="translated">Mailtrap</target>
        </trans-unit>
        <trans-unit id="a99b9edf7a4189f29fa47eb992fdf83705442323" translate="yes" xml:space="preserve">
          <source>Maintenance Mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b92290ad563808df11c9d5065a3e72102261f8c" translate="yes" xml:space="preserve">
          <source>Maintenance Mode &amp;amp; Queues</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9709aeaecbdc6bdc4fcaf28a5f7f2af45ce51eb2" translate="yes" xml:space="preserve">
          <source>MaintenanceModeException</source>
          <target state="translated">MaintenanceModeException</target>
        </trans-unit>
        <trans-unit id="9b228a5914f435466585fd74cf24828516f6a0df" translate="yes" xml:space="preserve">
          <source>MaintenanceModeException (Foundation\Http)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4081dbc1db0961c360daab3c32ced4f2d74404c3" translate="yes" xml:space="preserve">
          <source>MaintenanceModeException::__construct()</source>
          <target state="translated">MaintenanceModeException::__construct()</target>
        </trans-unit>
        <trans-unit id="921db2310b19ff45aaada3539f2aa30a9381af39" translate="yes" xml:space="preserve">
          <source>Make a new related instance for the given model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd27f59f9d4ad6841dbe3f07a5649e9cd3810fdb" translate="yes" xml:space="preserve">
          <source>Make a string's first character uppercase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0d3496d8e99258569c3f926b83b898f0a0aff26" translate="yes" xml:space="preserve">
          <source>Make an action for an invokable controller.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
