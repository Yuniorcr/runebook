<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="laravel">
    <body>
      <group id="laravel">
        <trans-unit id="af8232208276abee8476715b00f255547f0dd814" translate="yes" xml:space="preserve">
          <source>Sometimes you may wish to limit the attributes, such as passwords, that are included in your model's array or JSON representation. To do so, add a &lt;code&gt;$hidden&lt;/code&gt; property to your model:</source>
          <target state="translated">モデルの配列またはJSON表現に含まれるパスワードなどの属性を制限したい場合があります。これを行うには、モデルに &lt;code&gt;$hidden&lt;/code&gt; プロパティを追加します。</target>
        </trans-unit>
        <trans-unit id="c565430aae6f1ef690b1883cc538f75bdc6784ba" translate="yes" xml:space="preserve">
          <source>Sometimes you may wish to log a message to a channel other than your application's default channel. You may use the &lt;code&gt;channel&lt;/code&gt; method on the &lt;code&gt;Log&lt;/code&gt; facade to retrieve and log to any channel defined in your configuration file:</source>
          <target state="translated">アプリケーションのデフォルトチャネル以外のチャネルにメッセージを記録したい場合があります。 &lt;code&gt;Log&lt;/code&gt; ファサードの &lt;code&gt;channel&lt;/code&gt; メソッドを使用して、構成ファイルで定義されている任意のチャネルを取得してログに記録できます。</target>
        </trans-unit>
        <trans-unit id="245dc7d51ff7c89697215f14f7b03794aac551d1" translate="yes" xml:space="preserve">
          <source>Sometimes you may wish to only include an attribute in a resource response if a given condition is met. For example, you may wish to only include a value if the current user is an &quot;administrator&quot;. Laravel provides a variety of helper methods to assist you in this situation. The &lt;code&gt;when&lt;/code&gt; method may be used to conditionally add an attribute to a resource response:</source>
          <target state="translated">特定の条件が満たされた場合にのみ、リソースレスポンスに属性を含めたい場合があります。たとえば、現在のユーザーが「管理者」である場合にのみ値を含めることができます。 Laravelは、この状況であなたを支援するためのさまざまなヘルパーメソッドを提供しています。 &lt;code&gt;when&lt;/code&gt; の方法は、条件付きでリソース応答に属性を追加するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="f80cb4f5910728d9c7e2bcb218b07be4a2b3a51b" translate="yes" xml:space="preserve">
          <source>Sometimes you may wish to only include certain meta data with a resource response if the resource is the outer-most resource being returned. Typically, this includes meta information about the response as a whole. To define this meta data, add a &lt;code&gt;with&lt;/code&gt; method to your resource class. This method should return an array of meta data to be included with the resource response only when the resource is the outer-most resource being rendered:</source>
          <target state="translated">リソースが返される最も外側のリソースである場合は、リソースレスポンスに特定のメタデータのみを含めたい場合があります。通常、これには応答全体に関するメタ情報が含まれます。このメタデータを定義するには、 &lt;code&gt;with&lt;/code&gt; メソッドをリソースクラスに追加します。このメソッドは、リソースがレンダリングされる最も外側のリソースである場合にのみ、リソースレスポンスに含まれるメタデータの配列を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="7a50e492ce1153df7f7b86d06ac66991597e80cf" translate="yes" xml:space="preserve">
          <source>Sometimes you may wish to pause the execution of a test until a given JavaScript expression evaluates to &lt;code&gt;true&lt;/code&gt;. You may easily accomplish this using the &lt;code&gt;waitUntil&lt;/code&gt; method. When passing an expression to this method, you do not need to include the &lt;code&gt;return&lt;/code&gt; keyword or an ending semi-colon:</source>
          <target state="translated">特定のJavaScript式が &lt;code&gt;true&lt;/code&gt; と評価されるまで、テストの実行を一時停止したい場合があります。これは、 &lt;code&gt;waitUntil&lt;/code&gt; メソッドを使用して簡単に実現できます。このメソッドに式を渡す場合、 &lt;code&gt;return&lt;/code&gt; キーワードや終了セミコロンを含める必要はありません。</target>
        </trans-unit>
        <trans-unit id="0067038ccd5abc6306873a5a98073d422ad1a006" translate="yes" xml:space="preserve">
          <source>Sometimes you may wish to perform several operations while scoping all of the operations within a given selector. For example, you may wish to assert that some text exists only within a table and then click a button within that table. You may use the &lt;code&gt;with&lt;/code&gt; method to accomplish this. All operations performed within the callback given to the &lt;code&gt;with&lt;/code&gt; method will be scoped to the original selector:</source>
          <target state="translated">場合によっては、特定のセレクター内のすべての操作をスコープしながら、いくつかの操作を実行したいことがあります。たとえば、一部のテキストがテーブル内にのみ存在することを表明してから、そのテーブル内のボタンをクリックするとします。これを行うには &lt;code&gt;with&lt;/code&gt; メソッドを使用できます。 &lt;code&gt;with&lt;/code&gt; メソッドに与えられたコールバック内で実行されるすべての操作は、元のセレクターにスコープされます：</target>
        </trans-unit>
        <trans-unit id="c53f2f48d3d40b05ed477c1c724ba77b5469ca9e" translate="yes" xml:space="preserve">
          <source>Sometimes you may wish to prioritize how your queues are processed. For example, in your &lt;code&gt;config/queue.php&lt;/code&gt; you may set the default &lt;code&gt;queue&lt;/code&gt; for your &lt;code&gt;redis&lt;/code&gt; connection to &lt;code&gt;low&lt;/code&gt;. However, occasionally you may wish to push a job to a &lt;code&gt;high&lt;/code&gt; priority queue like so:</source>
          <target state="translated">キューの処理方法を優先したい場合があります。たとえば、自分の中で &lt;code&gt;config/queue.php&lt;/code&gt; デフォルト設定可能 &lt;code&gt;queue&lt;/code&gt; あなたのため &lt;code&gt;redis&lt;/code&gt; への接続 &lt;code&gt;low&lt;/code&gt; 。しかし、時にはあなたはにジョブをプッシュしたい場合も &lt;code&gt;high&lt;/code&gt; ので、のような優先度キュー：</target>
        </trans-unit>
        <trans-unit id="ca8df9c127f4f40a1a0125b5c7dadec37852da0b" translate="yes" xml:space="preserve">
          <source>Sometimes you may wish to redirect the user to their previous location, such as when a submitted form is invalid. You may do so by using the global &lt;code&gt;back&lt;/code&gt; helper function. Since this feature utilizes the &lt;a href=&quot;session&quot;&gt;session&lt;/a&gt;, make sure the route calling the &lt;code&gt;back&lt;/code&gt; function is using the &lt;code&gt;web&lt;/code&gt; middleware group or has all of the session middleware applied:</source>
          <target state="translated">送信されたフォームが無効な場合など、ユーザーを以前の場所にリダイレクトしたい場合があります。グローバル &lt;code&gt;back&lt;/code&gt; ヘルパー関数を使用してこれを行うことができます。この機能は&lt;a href=&quot;session&quot;&gt;セッションを&lt;/a&gt;利用するため、 &lt;code&gt;back&lt;/code&gt; 関数を呼び出すルートが &lt;code&gt;web&lt;/code&gt; ミドルウェアグループを使用しているか、すべてのセッションミドルウェアが適用されていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="1dc3d97bbe511de5713248ddf6a4cde4388c896f" translate="yes" xml:space="preserve">
          <source>Sometimes you may wish to retrieve an item from the cache, but also store a default value if the requested item doesn't exist. For example, you may wish to retrieve all users from the cache or, if they don't exist, retrieve them from the database and add them to the cache. You may do this using the &lt;code&gt;Cache::remember&lt;/code&gt; method:</source>
          <target state="translated">場合によっては、キャッシュからアイテムを取得したいが、要求されたアイテムが存在しない場合はデフォルト値を保存することもできます。たとえば、すべてのユーザーをキャッシュから取得したり、ユーザーが存在しない場合はデータベースから取得してキャッシュに追加したりできます。これを行うには、 &lt;code&gt;Cache::remember&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="547cfabe1261eb41447ac3ec2c47083470f23202" translate="yes" xml:space="preserve">
          <source>Sometimes you may wish to share what you're currently working on with coworkers or a client. Vagrant has a built-in way to support this via &lt;code&gt;vagrant share&lt;/code&gt;; however, this will not work if you have multiple sites configured in your &lt;code&gt;Homestead.yaml&lt;/code&gt; file.</source>
          <target state="translated">自分が現在取り組んでいることを同僚やクライアントと共有したい場合があります。Vagrantには、これを &lt;code&gt;vagrant share&lt;/code&gt; を介してサポートする組み込みの方法があります。ただし、 &lt;code&gt;Homestead.yaml&lt;/code&gt; ファイルで複数のサイトが構成されている場合、これは機能しません。</target>
        </trans-unit>
        <trans-unit id="5834b1b5b28876d70ab4b4f6d7ae69854905838d" translate="yes" xml:space="preserve">
          <source>Sometimes you may wish to specify a custom error messages only for a specific field. You may do so using &quot;dot&quot; notation. Specify the attribute's name first, followed by the rule:</source>
          <target state="translated">特定のフィールドのみにカスタムエラーメッセージを指定したい場合もあるでしょう。これには &quot;ドット &quot;表記を使用することができます。最初に属性名を指定し、その後にルールを指定します。</target>
        </trans-unit>
        <trans-unit id="1984ce1fbcc91ab0882f11d82c3be3a8ff467b9b" translate="yes" xml:space="preserve">
          <source>Sometimes you may wish to stop running validation rules on an attribute after the first validation failure. To do so, assign the &lt;code&gt;bail&lt;/code&gt; rule to the attribute:</source>
          <target state="translated">最初の検証が失敗した後で、属性に対する検証ルールの実行を停止したい場合があります。これを行うには、 &lt;code&gt;bail&lt;/code&gt; ルールを属性に割り当てます。</target>
        </trans-unit>
        <trans-unit id="cbfbe150fe97e819583241004bd55f4076d9dca6" translate="yes" xml:space="preserve">
          <source>Sometimes you may wish to store items in the session only for the next request. You may do so using the &lt;code&gt;flash&lt;/code&gt; method. Data stored in the session using this method will only be available during the subsequent HTTP request, and then will be deleted. Flash data is primarily useful for short-lived status messages:</source>
          <target state="translated">次のリクエストのためにのみセッションにアイテムを保存したい場合があります。 &lt;code&gt;flash&lt;/code&gt; メソッドを使用してこれを行うことができます。このメソッドを使用してセッションに保存されたデータは、後続のHTTPリクエストでのみ使用可能になり、その後削除されます。フラッシュデータは、主に短期間のステータスメッセージに役立ちます。</target>
        </trans-unit>
        <trans-unit id="0b50487a89d22e1396d34c3aa31d9144715b84cb" translate="yes" xml:space="preserve">
          <source>Sometimes you may wish to throw an exception if a model is not found. This is particularly useful in routes or controllers. The &lt;code&gt;findOrFail&lt;/code&gt; and &lt;code&gt;firstOrFail&lt;/code&gt; methods will retrieve the first result of the query; however, if no result is found, a &lt;code&gt;Illuminate\Database\Eloquent\ModelNotFoundException&lt;/code&gt; will be thrown:</source>
          <target state="translated">モデルが見つからない場合は、例外をスローしたいことがあります。これはルートやコントローラーで特に役立ちます。 &lt;code&gt;findOrFail&lt;/code&gt; と &lt;code&gt;firstOrFail&lt;/code&gt; 方法は、クエリの最初の結果を取得します。ただし、結果が見つからない場合は、 &lt;code&gt;Illuminate\Database\Eloquent\ModelNotFoundException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="a5c7a088384f889e1d0cda322e8b50f8cad8c239" translate="yes" xml:space="preserve">
          <source>Sometimes you may wish to turn the string response of a given operation into a downloadable response without having to write the contents of the operation to disk. You may use the &lt;code&gt;streamDownload&lt;/code&gt; method in this scenario. This method accepts a callback, file name, and an optional array of headers as its arguments:</source>
          <target state="translated">オペレーションの内容をディスクに書き込むことなく、特定のオペレーションの文字列応答をダウンロード可能な応答に変換したい場合があります。このシナリオでは &lt;code&gt;streamDownload&lt;/code&gt; メソッドを使用できます。このメソッドは、引数としてコールバック、ファイル名、およびヘッダーのオプションの配列を受け入れます。</target>
        </trans-unit>
        <trans-unit id="94830e2032c2be81744183960fd42a36c0766560" translate="yes" xml:space="preserve">
          <source>Sometimes you may wish to use one database connection for SELECT statements, and another for INSERT, UPDATE, and DELETE statements. Laravel makes this a breeze, and the proper connections will always be used whether you are using raw queries, the query builder, or the Eloquent ORM.</source>
          <target state="translated">SELECT文には1つのデータベース接続を使用し、INSERT、UPDATE、DELETE文には別のデータベース接続を使用したい場合があります。Laravelはこれを簡単にしてくれます。生のクエリ、クエリビルダ、Eloquent ORMのいずれを使用していても、常に適切な接続が使用されます。</target>
        </trans-unit>
        <trans-unit id="297cde69e90000714c46ab98a06a993c83d74d73" translate="yes" xml:space="preserve">
          <source>Sometimes you want to broadcast your event only if a given condition is true. You may define these conditions by adding a &lt;code&gt;broadcastWhen&lt;/code&gt; method to your event class:</source>
          <target state="translated">特定の条件が真の場合にのみイベントをブロードキャストしたい場合があります。イベントクラスに &lt;code&gt;broadcastWhen&lt;/code&gt; メソッドを追加することで、これらの条件を定義できます。</target>
        </trans-unit>
        <trans-unit id="0b0af48667d18b4e7f3c0124be46fa25e2fc4ee0" translate="yes" xml:space="preserve">
          <source>Sometimes your queued event listeners may fail. If queued listener exceeds the maximum number of attempts as defined by your queue worker, the &lt;code&gt;failed&lt;/code&gt; method will be called on your listener. The &lt;code&gt;failed&lt;/code&gt; method receives the event instance and the exception that caused the failure:</source>
          <target state="translated">キューに入れられたイベントリスナーが失敗することがあります。キューに入れられたリスナーが、キューワーカーによって定義された最大試行回数を超えると、 &lt;code&gt;failed&lt;/code&gt; メソッドがリスナーで呼び出されます。 &lt;code&gt;failed&lt;/code&gt; メソッドは、イベントのインスタンスと失敗の原因となった例外を受け取ります。</target>
        </trans-unit>
        <trans-unit id="880bc2a88c9813cfb011c76925f94b6f5fbceb0b" translate="yes" xml:space="preserve">
          <source>Sometimes your queued jobs will fail. Don't worry, things don't always go as planned! Laravel includes a convenient way to specify the maximum number of times a job should be attempted. After a job has exceeded this amount of attempts, it will be inserted into the &lt;code&gt;failed_jobs&lt;/code&gt; database table. To create a migration for the &lt;code&gt;failed_jobs&lt;/code&gt; table, you may use the &lt;code&gt;queue:failed-table&lt;/code&gt; command:</source>
          <target state="translated">キューに入れられたジョブが失敗することがあります。心配しないでください。物事は常に計画どおりに進むとは限りません。Laravelには、ジョブを試行する最大回数を指定する便利な方法が含まれています。ジョブがこの試行回数を超えた後、ジョブは &lt;code&gt;failed_jobs&lt;/code&gt; データベーステーブルに挿入されます。 &lt;code&gt;failed_jobs&lt;/code&gt; テーブルの移行を作成するには、 &lt;code&gt;queue:failed-table&lt;/code&gt; コマンドを使用できます。</target>
        </trans-unit>
        <trans-unit id="0c779dfb4fa8fdccbc95e2eb1c58c2a59cccba50" translate="yes" xml:space="preserve">
          <source>Sometimes, applications store each user's preferred locale. By implementing the &lt;code&gt;HasLocalePreference&lt;/code&gt; contract on one or more of your models, you may instruct Laravel to use this stored locale when sending mail:</source>
          <target state="translated">時々、アプリケーションは各ユーザーの優先ロケールを保存します。1つ以上のモデルに &lt;code&gt;HasLocalePreference&lt;/code&gt; コントラクトを実装することにより、メールを送信するときにこの格納されたロケールを使用するようにLaravelに指示できます。</target>
        </trans-unit>
        <trans-unit id="abb784d77bd44531967718cd3e3c0b410e1141ed" translate="yes" xml:space="preserve">
          <source>Sometimes, applications store each user's preferred locale. By implementing the &lt;code&gt;HasLocalePreference&lt;/code&gt; contract on your notifiable model, you may instruct Laravel to use this stored locale when sending a notification:</source>
          <target state="translated">時々、アプリケーションは各ユーザーの優先ロケールを保存します。通知可能なモデルに &lt;code&gt;HasLocalePreference&lt;/code&gt; コントラクトを実装することにより、通知を送信するときにこの格納されたロケールを使用するようにLaravelに指示できます。</target>
        </trans-unit>
        <trans-unit id="98bc3d6de6a68a763d9eaf8a81453f4a333e2da2" translate="yes" xml:space="preserve">
          <source>Sometimes, tests require several complicated actions to be performed in sequence. This can make your tests harder to read and understand. Pages allow you to define expressive actions that may then be performed on a given page using a single method. Pages also allow you to define short-cuts to common selectors for your application or a single page.</source>
          <target state="translated">テストでは、いくつかの複雑な動作を順番に実行する必要があることがあります。これは、テストを読んだり理解したりするのが難しくなることがあります。ページでは、単一のメソッドを使用して特定のページで実行される表現的なアクションを定義することができます。また、ページでは、アプリケーションや単一ページの共通セレクタへのショートカットを定義することができます。</target>
        </trans-unit>
        <trans-unit id="eda2720177dbe686ae1fbe8e575a0af2925a1ebd" translate="yes" xml:space="preserve">
          <source>Sometimes, you may need to execute some PHP code before executing your Envoy tasks. You may use the &lt;code&gt;@setup&lt;/code&gt; directive to declare variables and do other general PHP work before any of your other tasks are executed:</source>
          <target state="translated">Envoyタスクを実行する前に、いくつかのPHPコードを実行する必要がある場合があります。 &lt;code&gt;@setup&lt;/code&gt; ディレクティブを使用して、変数を宣言し、他のタスクが実行される前に他の一般的なPHP作業を行うことができます。</target>
        </trans-unit>
        <trans-unit id="3a90df54b77dedf6d0af4feb2d4004e9ecd7e7ac" translate="yes" xml:space="preserve">
          <source>Sometimes, you may wish to grant all abilities to a specific user. You may use the &lt;code&gt;before&lt;/code&gt; method to define a callback that is run before all other authorization checks:</source>
          <target state="translated">特定のユーザーにすべての機能を付与したい場合があります。 &lt;code&gt;before&lt;/code&gt; メソッドを使用して、他のすべての承認チェックの前に実行されるコールバックを定義できます。</target>
        </trans-unit>
        <trans-unit id="e12853466dbc97db6fdf25a8293eed44810b4fa8" translate="yes" xml:space="preserve">
          <source>Sometimes, you may wish to ignore a given ID during the unique check. For example, consider an &quot;update profile&quot; screen that includes the user's name, e-mail address, and location. Of course, you will want to verify that the e-mail address is unique. However, if the user only changes the name field and not the e-mail field, you do not want a validation error to be thrown because the user is already the owner of the e-mail address.</source>
          <target state="translated">固有チェックの際に、与えられたIDを無視したい場合もあるでしょう。例えば、ユーザーの名前、メールアドレス、所在地を含む「プロフィールの更新」画面を考えてみましょう。もちろん、メールアドレスが一意であることを確認したいでしょう。しかし、ユーザーが名前の欄だけを変更して、電子メールの欄を変更しない場合、ユーザーはすでに電子メールアドレスの所有者であるため、バリデーションエラーがスローされるのは避けたいところです。</target>
        </trans-unit>
        <trans-unit id="e7ee93f9f5d0630c43fee4844836b1779444acca" translate="yes" xml:space="preserve">
          <source>Sometimes, you may wish to stop the propagation of an event to other listeners. You may do so by returning &lt;code&gt;false&lt;/code&gt; from your listener's &lt;code&gt;handle&lt;/code&gt; method.</source>
          <target state="translated">場合によっては、他のリスナーへのイベントの伝播を停止したいことがあります。そのためには、リスナーの &lt;code&gt;handle&lt;/code&gt; メソッドから &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="51136ecd668602a7f864610b848f05d722b40686" translate="yes" xml:space="preserve">
          <source>Sometimes, your users may want to issue access tokens to themselves without going through the typical authorization code redirect flow. Allowing users to issue tokens to themselves via your application's UI can be useful for allowing users to experiment with your API or may serve as a simpler approach to issuing access tokens in general.</source>
          <target state="translated">時には、典型的な認証コードのリダイレクトフローを経由せずに、ユーザー自身にアクセストークンを発行したい場合もあるでしょう。アプリケーションの UI を介してユーザーが自分自身にトークンを発行できるようにすることは、ユーザーが API を使って実験できるようにするのに便利です。</target>
        </trans-unit>
        <trans-unit id="17d6803c79b539d79af4071a5cb65a2ae2fadfa4" translate="yes" xml:space="preserve">
          <source>Sort the array using the given callback or &quot;dot&quot; notation.</source>
          <target state="translated">指定されたコールバックまたは &quot;ドット &quot;記法を使用して配列をソートします。</target>
        </trans-unit>
        <trans-unit id="f39a9201e150f2c37d55b9a5c14c802a9de2445c" translate="yes" xml:space="preserve">
          <source>Sort the collection in descending order using the given callback.</source>
          <target state="translated">与えられたコールバックを使用して、コレクションを降順に並べ替えます。</target>
        </trans-unit>
        <trans-unit id="ec5f14d85e98a2fdc850813366813fa4f512666f" translate="yes" xml:space="preserve">
          <source>Sort the collection keys in descending order.</source>
          <target state="translated">コレクションキーを降順に並べ替えます。</target>
        </trans-unit>
        <trans-unit id="be3fa86c4d8f95e68b5b839c8ba0c5db36dcf5df" translate="yes" xml:space="preserve">
          <source>Sort the collection keys.</source>
          <target state="translated">コレクションキーをソートします。</target>
        </trans-unit>
        <trans-unit id="744b161f1d267e23a7d53523f9871fecf17be78d" translate="yes" xml:space="preserve">
          <source>Sort the collection using the given callback.</source>
          <target state="translated">与えられたコールバックを使用してコレクションをソートします。</target>
        </trans-unit>
        <trans-unit id="0934b72490cdae419cb4e8c0539c56b9b404b451" translate="yes" xml:space="preserve">
          <source>Sort the given middleware by priority.</source>
          <target state="translated">与えられたミドルウェアを優先度でソートします。</target>
        </trans-unit>
        <trans-unit id="1b50b4099b932178444b4923efb18fc13fba19e4" translate="yes" xml:space="preserve">
          <source>Sort the middlewares by the given priority map.</source>
          <target state="translated">指定された優先度マップでミドルウェアを並べ替えます。</target>
        </trans-unit>
        <trans-unit id="6fb12edf6d8985343a683c1951079497c299c170" translate="yes" xml:space="preserve">
          <source>Sort the replacements array.</source>
          <target state="translated">置換配列をソートします。</target>
        </trans-unit>
        <trans-unit id="1c363c1466dfbaa3b740e7c6242fbaf01c18bc91" translate="yes" xml:space="preserve">
          <source>Sort the routes by a given element.</source>
          <target state="translated">指定された要素でルートをソートします。</target>
        </trans-unit>
        <trans-unit id="83cf11e18c18e9137e04e27b195a5296432198c4" translate="yes" xml:space="preserve">
          <source>Sort through each item with a callback.</source>
          <target state="translated">コールバックで各項目をソートします。</target>
        </trans-unit>
        <trans-unit id="82fa8a3506610dd77281f7175e2af1a8cc6e64b6" translate="yes" xml:space="preserve">
          <source>SortedMiddleware</source>
          <target state="translated">SortedMiddleware</target>
        </trans-unit>
        <trans-unit id="837af130ce577d9d94570d82870435cccd9c90de" translate="yes" xml:space="preserve">
          <source>SortedMiddleware (Routing)</source>
          <target state="translated">ソートされたミドルウェア (ルーティング)</target>
        </trans-unit>
        <trans-unit id="9924552a47049ae6965f38a0de29205d55c23a9d" translate="yes" xml:space="preserve">
          <source>SortedMiddleware::__construct()</source>
          <target state="translated">SortedMiddleware::__construct()</target>
        </trans-unit>
        <trans-unit id="84dba8b4ee005d0bc7a65c2d100d1b29a6c5d4ee" translate="yes" xml:space="preserve">
          <source>SortedMiddleware::moveMiddleware()</source>
          <target state="translated">SortedMiddleware::moveMiddleware()</target>
        </trans-unit>
        <trans-unit id="f97402c425ff1055812e02e829540377230f868e" translate="yes" xml:space="preserve">
          <source>SortedMiddleware::sortMiddleware()</source>
          <target state="translated">SortedMiddleware::sortMiddleware()</target>
        </trans-unit>
        <trans-unit id="5774da7b802f7af9150c4273aaf57f7387c8eb1d" translate="yes" xml:space="preserve">
          <source>Source Maps</source>
          <target state="translated">ソースマップ</target>
        </trans-unit>
        <trans-unit id="f009bb69889bc21dd2d4d592db604628acb2627e" translate="yes" xml:space="preserve">
          <source>SparkPost Driver</source>
          <target state="translated">スパークポストドライバー</target>
        </trans-unit>
        <trans-unit id="1ccff86ee6225cfc744916e5000b167f0756f187" translate="yes" xml:space="preserve">
          <source>SparkPostTransport</source>
          <target state="translated">SparkPostTransport</target>
        </trans-unit>
        <trans-unit id="390b8343c724c11d4492b3f5cce8af1c370dcfbc" translate="yes" xml:space="preserve">
          <source>SparkPostTransport (Mail\Transport)</source>
          <target state="translated">SparkPostTransport (MailTransport)</target>
        </trans-unit>
        <trans-unit id="37639c070d397eecf62563462b1be81a4832e982" translate="yes" xml:space="preserve">
          <source>SparkPostTransport::__construct()</source>
          <target state="translated">SparkPostTransport::__construct()</target>
        </trans-unit>
        <trans-unit id="4d67bb0d01fc732e44022dd36140f4a920b1b5b6" translate="yes" xml:space="preserve">
          <source>SparkPostTransport::getEndpoint()</source>
          <target state="translated">SparkPostTransport::getEndpoint()</target>
        </trans-unit>
        <trans-unit id="ade91c95678f52b61698744f746e602174256c38" translate="yes" xml:space="preserve">
          <source>SparkPostTransport::getKey()</source>
          <target state="translated">SparkPostTransport::getKey()</target>
        </trans-unit>
        <trans-unit id="ed2533ec441e4def8455551b5198b1e5442f2af3" translate="yes" xml:space="preserve">
          <source>SparkPostTransport::getOptions()</source>
          <target state="translated">SparkPostTransport::getOptions()</target>
        </trans-unit>
        <trans-unit id="aa04138fe3aad96919fec3cc753fd5d0ed007605" translate="yes" xml:space="preserve">
          <source>SparkPostTransport::getRecipients()</source>
          <target state="translated">SparkPostTransport::getRecipients()</target>
        </trans-unit>
        <trans-unit id="7e9036729e01532801bbe1c736e811650260ffd5" translate="yes" xml:space="preserve">
          <source>SparkPostTransport::getTransmissionId()</source>
          <target state="translated">SparkPostTransport::getTransmissionId()</target>
        </trans-unit>
        <trans-unit id="9b250668d1028f834df688a8cc3f487f1487e13c" translate="yes" xml:space="preserve">
          <source>SparkPostTransport::send()</source>
          <target state="translated">SparkPostTransport::send()</target>
        </trans-unit>
        <trans-unit id="ea4ec1ca1bcd55e691a8e91add995288227fe554" translate="yes" xml:space="preserve">
          <source>SparkPostTransport::setKey()</source>
          <target state="translated">SparkPostTransport::setKey()</target>
        </trans-unit>
        <trans-unit id="5cc1c23026f538f8cc01ee62bb9e2cfd87ac7d8f" translate="yes" xml:space="preserve">
          <source>SparkPostTransport::setOptions()</source>
          <target state="translated">SparkPostTransport::setOptions()</target>
        </trans-unit>
        <trans-unit id="0d3c89410365cd01d0a4301000bb23d67cd88668" translate="yes" xml:space="preserve">
          <source>Specify a &quot;default&quot; value for the column</source>
          <target state="translated">カラムの「デフォルト」値を指定します。</target>
        </trans-unit>
        <trans-unit id="c5bb07bad1eabe483c2a6005d04ca7ee25b90b9f" translate="yes" xml:space="preserve">
          <source>Specify a character set for the column (MySQL)</source>
          <target state="translated">カラムの文字セットを指定する(MySQL)</target>
        </trans-unit>
        <trans-unit id="31b1b88eb1e9f0b4c8d6bb403c388228f117c113" translate="yes" xml:space="preserve">
          <source>Specify a collation for the column (MySQL/SQL Server)</source>
          <target state="translated">カラムの照合順序を指定する(MySQL/SQL Server</target>
        </trans-unit>
        <trans-unit id="1cfc32136ad73ffcbb4fb087be22fc299201a1bd" translate="yes" xml:space="preserve">
          <source>Specify a default character set for the table (MySQL).</source>
          <target state="translated">テーブル(MySQL)のデフォルトの文字セットを指定します。</target>
        </trans-unit>
        <trans-unit id="a1e79fea58eb8e2a9386fe99147b45d30efa6d2b" translate="yes" xml:space="preserve">
          <source>Specify a default collation for the table (MySQL).</source>
          <target state="translated">テーブル(MySQL)のデフォルトの照合順序を指定します。</target>
        </trans-unit>
        <trans-unit id="305e0ccad85d6037f493f2e72c5fe33af0add9c4" translate="yes" xml:space="preserve">
          <source>Specify a foreign key for the table.</source>
          <target state="translated">テーブルの外部キーを指定します。</target>
        </trans-unit>
        <trans-unit id="355b0c22dbe43ddb2901d7da0c0630e1a0a8a8b2" translate="yes" xml:space="preserve">
          <source>Specify a list of events that should be fired for the given operation.</source>
          <target state="translated">指定した操作に対して発生するイベントのリストを指定します。</target>
        </trans-unit>
        <trans-unit id="11bd1b21445987f551e61461165966762d6f3bd3" translate="yes" xml:space="preserve">
          <source>Specify a list of events that should not be fired for the given operation.</source>
          <target state="translated">指定した操作に対して発生させてはならないイベントのリストを指定します。</target>
        </trans-unit>
        <trans-unit id="b090bc7d9779adab2d7270f1eb2349933be1fc91" translate="yes" xml:space="preserve">
          <source>Specify a list of jobs that should be dispatched for the given operation.</source>
          <target state="translated">指定した操作に対してディスパッチされるべきジョブのリストを指定します。</target>
        </trans-unit>
        <trans-unit id="3f4c6d016944a32309355a3d9ee542bf08a65e90" translate="yes" xml:space="preserve">
          <source>Specify a list of jobs that should not be dispatched for the given operation.</source>
          <target state="translated">指定した操作に対してディスパッチされるべきではないジョブのリストを指定します。</target>
        </trans-unit>
        <trans-unit id="21388872b32b7976cedd5c7fa6aeada6618de19e" translate="yes" xml:space="preserve">
          <source>Specify a notification that is expected to be dispatched.</source>
          <target state="translated">発信されることが予想される通知を指定します。</target>
        </trans-unit>
        <trans-unit id="70b6e6a9cfb67f701390cb86935e8ce70d2cac9b" translate="yes" xml:space="preserve">
          <source>Specify a question that should be asked when the command runs.</source>
          <target state="translated">コマンド実行時に質問する質問を指定します。</target>
        </trans-unit>
        <trans-unit id="872150708bda088f5215eb702268e9f7bed0d881" translate="yes" xml:space="preserve">
          <source>Specify a spatial index for the table.</source>
          <target state="translated">テーブルの空間インデックスを指定します。</target>
        </trans-unit>
        <trans-unit id="109c79b393bbbc4e77926c028cf5a73cde09d3a4" translate="yes" xml:space="preserve">
          <source>Specify a unique index for the table.</source>
          <target state="translated">テーブルの一意のインデックスを指定します。</target>
        </trans-unit>
        <trans-unit id="db7efad02cb34f794d247f6e029fec4ae122e159" translate="yes" xml:space="preserve">
          <source>Specify an index for the table.</source>
          <target state="translated">テーブルのインデックスを指定します。</target>
        </trans-unit>
        <trans-unit id="bb88059c489291e0d8bf7ac7a40ac4b9b533cd81" translate="yes" xml:space="preserve">
          <source>Specify output that should be printed when the command runs.</source>
          <target state="translated">コマンド実行時に出力する出力を指定します。</target>
        </trans-unit>
        <trans-unit id="02c9fe8cbf9bf7afaf474afaec3ea23caadd33ac" translate="yes" xml:space="preserve">
          <source>Specify that the pivot table has creation and update timestamps.</source>
          <target state="translated">ピボットテーブルに作成と更新のタイムスタンプがあることを指定します。</target>
        </trans-unit>
        <trans-unit id="fefd5dba559a1f80535baf45ed01361f6b566a64" translate="yes" xml:space="preserve">
          <source>Specify the arguments and options on the command.</source>
          <target state="translated">コマンドの引数とオプションを指定します。</target>
        </trans-unit>
        <trans-unit id="5be5922a807a5ee9987e5bbd2f1a596bc4d47747" translate="yes" xml:space="preserve">
          <source>Specify the cache store that should be used to store mutexes.</source>
          <target state="translated">ミューテックスの格納に使用するキャッシュストアを指定します。</target>
        </trans-unit>
        <trans-unit id="cfc71ea17ddf8d3afd3cbbb8b2f937b647cea30c" translate="yes" xml:space="preserve">
          <source>Specify the cache store that should be used.</source>
          <target state="translated">使用するキャッシュストアを指定します。</target>
        </trans-unit>
        <trans-unit id="5fc2e39eb08b622517de2c0ddfe53aa9f823ef67" translate="yes" xml:space="preserve">
          <source>Specify the custom pivot accessor to use for the relationship.</source>
          <target state="translated">リレーションシップで使用するカスタム ピボット アクセッサを指定します。</target>
        </trans-unit>
        <trans-unit id="ffe52aa4c0d58fc420a782baec99502ab19ba094" translate="yes" xml:space="preserve">
          <source>Specify the custom pivot model to use for the relationship.</source>
          <target state="translated">リレーションシップに使用するカスタム・ピボット・モデルを指定します。</target>
        </trans-unit>
        <trans-unit id="2015a09f4978bf10d2d2198f11b2d88628e0249c" translate="yes" xml:space="preserve">
          <source>Specify the primary key(s) for the table.</source>
          <target state="translated">テーブルの主キーを指定します。</target>
        </trans-unit>
        <trans-unit id="9ac4ed6db5fdc3f777ba6cad254d458f990127c7" translate="yes" xml:space="preserve">
          <source>Specify the table storage engine (MySQL).</source>
          <target state="translated">テーブルストレージエンジン(MySQL)を指定します。</target>
        </trans-unit>
        <trans-unit id="44b2b9efa3b7759efbfb4a3af1af1a4096231bc1" translate="yes" xml:space="preserve">
          <source>Specifying A Custom Column Name</source>
          <target state="translated">カスタムのカラム名を指定する</target>
        </trans-unit>
        <trans-unit id="b28b46bea70a66c5c8d3018f6ccbf5c2d01612d1" translate="yes" xml:space="preserve">
          <source>Specifying A Custom Message For A Given Attribute</source>
          <target state="translated">特定の属性に対するカスタムメッセージの指定</target>
        </trans-unit>
        <trans-unit id="9147be9603deb37de1dc12743278093ac934c66f" translate="yes" xml:space="preserve">
          <source>Specifying A Disk</source>
          <target state="translated">ディスクの指定</target>
        </trans-unit>
        <trans-unit id="20ae63863740eb9e9ae090cf10c3a65fe7f94c1d" translate="yes" xml:space="preserve">
          <source>Specifying A File Name</source>
          <target state="translated">ファイル名の指定</target>
        </trans-unit>
        <trans-unit id="ca1faf20390fcc2e544fcca6f4939b7d567b5874" translate="yes" xml:space="preserve">
          <source>Specifying A Guard</source>
          <target state="translated">ガードを指定する</target>
        </trans-unit>
        <trans-unit id="f191c397f8dc072208bbb663adb17d12db36c1e1" translate="yes" xml:space="preserve">
          <source>Specifying A Select Clause</source>
          <target state="translated">選択節の指定</target>
        </trans-unit>
        <trans-unit id="76335ead6ee4f5de7eadff487fca86ce8c03767f" translate="yes" xml:space="preserve">
          <source>Specifying Additional Conditions</source>
          <target state="translated">追加条件の指定</target>
        </trans-unit>
        <trans-unit id="eed2d1ab2e03bfc85fa2489d1725fc2b65386569" translate="yes" xml:space="preserve">
          <source>Specifying Custom Attributes In Language Files</source>
          <target state="translated">言語ファイルでのカスタム属性の指定</target>
        </trans-unit>
        <trans-unit id="b902024510ba887785cb3246ae7c932fadccbb5b" translate="yes" xml:space="preserve">
          <source>Specifying Custom Messages In Language Files</source>
          <target state="translated">言語ファイルでのカスタムメッセージの指定</target>
        </trans-unit>
        <trans-unit id="71bff735547be8c116b302c522e51e48aa6a1c55" translate="yes" xml:space="preserve">
          <source>Specifying Delivery Channels</source>
          <target state="translated">配送チャネルの指定</target>
        </trans-unit>
        <trans-unit id="24d59bdd40a87713aecb487d324ebf9c9ce8b5ce" translate="yes" xml:space="preserve">
          <source>Specifying Max Job Attempts / Timeout Values</source>
          <target state="translated">最大ジョブの試行/タイムアウト値の指定</target>
        </trans-unit>
        <trans-unit id="2d465d2266ca89f4c69c1e0c815a60e39ff48664" translate="yes" xml:space="preserve">
          <source>Specifying The Connection &amp;amp; Queue</source>
          <target state="translated">接続とキューの指定</target>
        </trans-unit>
        <trans-unit id="02ffc35790fec1ee73397f1e63a81383dbeabd2e" translate="yes" xml:space="preserve">
          <source>Specifying The Resource Model</source>
          <target state="translated">リソースモデルの指定</target>
        </trans-unit>
        <trans-unit id="9189b386c400f31869c9616cc12e0f3f3f550259" translate="yes" xml:space="preserve">
          <source>SplFileInfo</source>
          <target state="translated">SplFileInfo</target>
        </trans-unit>
        <trans-unit id="411c69634c5d1ef9f3c9c4de1ec8ff68921b623e" translate="yes" xml:space="preserve">
          <source>SplFileInfo[]</source>
          <target state="translated">SplFileInfo[]</target>
        </trans-unit>
        <trans-unit id="f4869a90a43f7293d60db960fd55cd5ddb673891" translate="yes" xml:space="preserve">
          <source>SplFileInfo[]
    allFiles(string $directory, bool $hidden = false)</source>
          <target state="translated">SplFileInfo[]allFiles(string $directory,bool $hidden=false)</target>
        </trans-unit>
        <trans-unit id="108a29793a4ef06c11b291253a97fc3d50f32820" translate="yes" xml:space="preserve">
          <source>SplFileInfo[]
    files(string $directory, bool $hidden = false)</source>
          <target state="translated">SplFileInfo[]files(string $directory,bool $hidden=false)</target>
        </trans-unit>
        <trans-unit id="6820b9af885bc93137c2e3d7b65376ddeaabd60f" translate="yes" xml:space="preserve">
          <source>Splice a middleware into a new position and remove the old entry.</source>
          <target state="translated">ミドルウェアを新しい位置にスプライスし、古いエントリを削除します。</target>
        </trans-unit>
        <trans-unit id="9da58995a38d8516b990a9629940df10ba8cdc33" translate="yes" xml:space="preserve">
          <source>Splice a portion of the underlying collection array.</source>
          <target state="translated">基礎となるコレクション配列の一部を接続します。</target>
        </trans-unit>
        <trans-unit id="992d9e4084f4374263677d56a71db8f228258c23" translate="yes" xml:space="preserve">
          <source>Splice the given value into the given position of the expression.</source>
          <target state="translated">与えられた値を式の与えられた位置にスプライスします。</target>
        </trans-unit>
        <trans-unit id="40a773c2d51276f6d1fdc955fea5dd387a28b9fc" translate="yes" xml:space="preserve">
          <source>Splice the given value into the parameter list.</source>
          <target state="translated">与えられた値をパラメータリストにスプライスします。</target>
        </trans-unit>
        <trans-unit id="2e27acc5d198d75c8027c6100a2f44a0c6c0dde9" translate="yes" xml:space="preserve">
          <source>Split a collection into a certain number of groups.</source>
          <target state="translated">コレクションを一定数のグループに分割します。</target>
        </trans-unit>
        <trans-unit id="75102578a3bfdc823e9f4a84b6f041e20e4fdcb4" translate="yes" xml:space="preserve">
          <source>Split the given JSON selector into the field and the optional path and wrap them separately.</source>
          <target state="translated">与えられたJSONセレクタをフィールドとオプションのパスに分割し、別々にラップします。</target>
        </trans-unit>
        <trans-unit id="265d4be59e37f8f85d688592dd3e8d3af7f32ad7" translate="yes" xml:space="preserve">
          <source>Spoofing Form Methods</source>
          <target state="translated">なりすましフォームの方法</target>
        </trans-unit>
        <trans-unit id="eb1813ba7356a66761296eb99451a406e2577464" translate="yes" xml:space="preserve">
          <source>SqlServerBuilder</source>
          <target state="translated">SqlServerBuilder</target>
        </trans-unit>
        <trans-unit id="e0c68eabab44ac273dc6c453f7dd70fa5867dc65" translate="yes" xml:space="preserve">
          <source>SqlServerBuilder (Database\Schema)</source>
          <target state="translated">SqlServerBuilder (Database)</target>
        </trans-unit>
        <trans-unit id="30f393bafb8a6591256ecd89e1b9421710f3aab5" translate="yes" xml:space="preserve">
          <source>SqlServerBuilder::dropAllTables()</source>
          <target state="translated">SqlServerBuilder::dropAllTables()</target>
        </trans-unit>
        <trans-unit id="bb748f96c248193f1dd0275bb7c1003c56c5b4fc" translate="yes" xml:space="preserve">
          <source>SqlServerConnection</source>
          <target state="translated">SqlServerConnection</target>
        </trans-unit>
        <trans-unit id="4d86fd3af9a0b5af25b6681718bcf799f39ab1f8" translate="yes" xml:space="preserve">
          <source>SqlServerConnection (Database)</source>
          <target state="translated">SqlServerConnection(データベース</target>
        </trans-unit>
        <trans-unit id="b684fabcf97ce35f4a55f7eff764f96f67ec8d09" translate="yes" xml:space="preserve">
          <source>SqlServerConnection::getDefaultPostProcessor()</source>
          <target state="translated">SqlServerConnection::getDefaultPostProcessor()</target>
        </trans-unit>
        <trans-unit id="3076e590d74c96675435eec39c06cebbf6200621" translate="yes" xml:space="preserve">
          <source>SqlServerConnection::getDefaultQueryGrammar()</source>
          <target state="translated">SqlServerConnection::getDefaultQueryGrammar()</target>
        </trans-unit>
        <trans-unit id="7f9860755fb1358fbe879894f44ed71bdd216a23" translate="yes" xml:space="preserve">
          <source>SqlServerConnection::getDefaultSchemaGrammar()</source>
          <target state="translated">SqlServerConnection::getDefaultSchemaGrammar()</target>
        </trans-unit>
        <trans-unit id="52fa70349fea3ba47d134796b20aa4ee2121741e" translate="yes" xml:space="preserve">
          <source>SqlServerConnection::getDoctrineDriver()</source>
          <target state="translated">SqlServerConnection::getDoctrineDriver()</target>
        </trans-unit>
        <trans-unit id="1d4458b521b4b36a2f776fad7bc9c57504c77bd2" translate="yes" xml:space="preserve">
          <source>SqlServerConnection::getSchemaBuilder()</source>
          <target state="translated">SqlServerConnection::getSchemaBuilder()</target>
        </trans-unit>
        <trans-unit id="2b3be500cb19c2af63301606fb7dde7301466c68" translate="yes" xml:space="preserve">
          <source>SqlServerConnection::transaction()</source>
          <target state="translated">SqlServerConnection::transaction()</target>
        </trans-unit>
        <trans-unit id="a03ca6ee900d99044f0c9be93907493ccdad59cc" translate="yes" xml:space="preserve">
          <source>SqlServerConnector</source>
          <target state="translated">SqlServerConnector</target>
        </trans-unit>
        <trans-unit id="e70ae3ac17ff1b64c878be236f9eff34e46409b7" translate="yes" xml:space="preserve">
          <source>SqlServerConnector (Database\Connectors)</source>
          <target state="translated">SqlServerConnector (DatabaseConnectors)</target>
        </trans-unit>
        <trans-unit id="cffe0694be5eabdf8c16950b8f199c8d95fe87a5" translate="yes" xml:space="preserve">
          <source>SqlServerConnector::buildConnectString()</source>
          <target state="translated">SqlServerConnector::buildConnectString()</target>
        </trans-unit>
        <trans-unit id="6175b31c7d745c13412275d95773937df31abcdd" translate="yes" xml:space="preserve">
          <source>SqlServerConnector::buildHostString()</source>
          <target state="translated">SqlServerConnector::buildHostString()</target>
        </trans-unit>
        <trans-unit id="619410d29db0dfc4f37b07a13329b67796ece519" translate="yes" xml:space="preserve">
          <source>SqlServerConnector::connect()</source>
          <target state="translated">SqlServerConnector::connect()</target>
        </trans-unit>
        <trans-unit id="42d43257dd71783b27e83ae4e1c6c49a4778e0e6" translate="yes" xml:space="preserve">
          <source>SqlServerConnector::getAvailableDrivers()</source>
          <target state="translated">SqlServerConnector::getAvailableDrivers()</target>
        </trans-unit>
        <trans-unit id="da190637d048c9f2492b3ebf1c689e19b09b5154" translate="yes" xml:space="preserve">
          <source>SqlServerConnector::getDblibDsn()</source>
          <target state="translated">SqlServerConnector::getDblibDsn()</target>
        </trans-unit>
        <trans-unit id="dc690dc03744d753389340a2a168218e74a93bd4" translate="yes" xml:space="preserve">
          <source>SqlServerConnector::getDsn()</source>
          <target state="translated">SqlServerConnector::getDsn()</target>
        </trans-unit>
        <trans-unit id="b3c5571a4fbf64141a109b70c8704ded9bb208d6" translate="yes" xml:space="preserve">
          <source>SqlServerConnector::getOdbcDsn()</source>
          <target state="translated">SqlServerConnector::getOdbcDsn()</target>
        </trans-unit>
        <trans-unit id="54a2655f617e37be37c10e2db97ec911d8f28e4d" translate="yes" xml:space="preserve">
          <source>SqlServerConnector::getSqlSrvDsn()</source>
          <target state="translated">SqlServerConnector::getSqlSrvDsn()</target>
        </trans-unit>
        <trans-unit id="72401f9ecf0b9a85df894ae89e80031e3d15018a" translate="yes" xml:space="preserve">
          <source>SqlServerConnector::prefersOdbc()</source>
          <target state="translated">SqlServerConnector::prefersOdbc()</target>
        </trans-unit>
        <trans-unit id="2fc48b97f09a415f00f37f593bd3deac9c35d9c6" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar</source>
          <target state="translated">SqlServerGrammar</target>
        </trans-unit>
        <trans-unit id="b837c3060e96b8509c57ace92dd76ea63f19746d" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar (Database\Query\Grammars)</source>
          <target state="translated">SqlServerGrammar (DatabaseQueryGrammars)</target>
        </trans-unit>
        <trans-unit id="1f50e3406b0cbad1383a52484bdeb6db05daf2de" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar (Database\Schema\Grammars)</source>
          <target state="translated">SqlServerGrammar (Database\SchemaGrammars)</target>
        </trans-unit>
        <trans-unit id="5689a5e5bde8ff5bc61f2531d1d2f8e5b378ec94" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileAdd()</source>
          <target state="translated">SqlServerGrammar::compileAdd()</target>
        </trans-unit>
        <trans-unit id="d84c2708d9498b498068dd94424457cf2831e737" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileAnsiOffset()</source>
          <target state="translated">SqlServerGrammar::compileAnsiOffset()</target>
        </trans-unit>
        <trans-unit id="4c77e462df05ac31f9f14ce11ea394b1b90da811" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileColumnListing()</source>
          <target state="translated">SqlServerGrammar::compileColumnListing()</target>
        </trans-unit>
        <trans-unit id="f613b344eaad75e5861a28fef3d7cc868d35f33e" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileColumns()</source>
          <target state="translated">SqlServerGrammar::compileColumns()</target>
        </trans-unit>
        <trans-unit id="5b04507e4a2a61988596768f6e0adbf19da69b4d" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileCreate()</source>
          <target state="translated">SqlServerGrammar::compileCreate()</target>
        </trans-unit>
        <trans-unit id="f541db5586e9f64031efbe5f18928d89777d924e" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileDelete()</source>
          <target state="translated">SqlServerGrammar::compileDelete()</target>
        </trans-unit>
        <trans-unit id="eb9ba3139a26e02a5732f1fcf8b19dbf7f103d4b" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileDeleteWithJoins()</source>
          <target state="translated">SqlServerGrammar::compileDeleteWithJoins()</target>
        </trans-unit>
        <trans-unit id="85a66c60bc42c246c2ceb2ca10b6e625d71a044a" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileDisableForeignKeyConstraints()</source>
          <target state="translated">SqlServerGrammar::compileDisableForeignKeyConstraints()</target>
        </trans-unit>
        <trans-unit id="68226d2a0922bca63f61f85e8b9db8c1b7a62248" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileDrop()</source>
          <target state="translated">SqlServerGrammar::compileDrop()</target>
        </trans-unit>
        <trans-unit id="4938ec246665494f4b0e71d7d33be6843f054787" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileDropAllTables()</source>
          <target state="translated">SqlServerGrammar::compileDropAllTables()</target>
        </trans-unit>
        <trans-unit id="c19da16b39799163283fbebe65a07db6dd69f2f9" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileDropColumn()</source>
          <target state="translated">SqlServerGrammar::compileDropColumn()</target>
        </trans-unit>
        <trans-unit id="07f52a13abff0178f7303c9695c89b0061b13b0e" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileDropForeign()</source>
          <target state="translated">SqlServerGrammar::compileDropForeign()</target>
        </trans-unit>
        <trans-unit id="0470a8f684a716e332df273cae21e7cc58896e79" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileDropIfExists()</source>
          <target state="translated">SqlServerGrammar::compileDropIfExists()</target>
        </trans-unit>
        <trans-unit id="1868c42a1567badad2ce87772fe5eb87a254b3c1" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileDropIndex()</source>
          <target state="translated">SqlServerGrammar::compileDropIndex()</target>
        </trans-unit>
        <trans-unit id="be6df252521ab7e72239fc70bbb56c5b3a8b6d9c" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileDropPrimary()</source>
          <target state="translated">SqlServerGrammar::compileDropPrimary()</target>
        </trans-unit>
        <trans-unit id="83954e5fa6bfe3458257d0ad7f40f16da60f4782" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileDropSpatialIndex()</source>
          <target state="translated">SqlServerGrammar::compileDropSpatialIndex()</target>
        </trans-unit>
        <trans-unit id="b7d77b8eef8eff386f4d75939dfbae75c65490a2" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileDropUnique()</source>
          <target state="translated">SqlServerGrammar::compileDropUnique()</target>
        </trans-unit>
        <trans-unit id="f13147f61ca8aa9a07698423fdbc59c7e6c65451" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileEnableForeignKeyConstraints()</source>
          <target state="translated">SqlServerGrammar::compileEnableForeignKeyConstraints()</target>
        </trans-unit>
        <trans-unit id="e8dc49119be8b3034865ea402cede4eb04e96372" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileExists()</source>
          <target state="translated">SqlServerGrammar::compileExists()</target>
        </trans-unit>
        <trans-unit id="196cf12b9686638a28b93e478edf100cc89b3fa8" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileFrom()</source>
          <target state="translated">SqlServerGrammar::compileFrom()</target>
        </trans-unit>
        <trans-unit id="03dba8c31c25218981f812e4a243aabfbd9215ca" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileIndex()</source>
          <target state="translated">SqlServerGrammar::compileIndex()</target>
        </trans-unit>
        <trans-unit id="d3b95e953da9ead66a6a4be771972219d1140202" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileJsonContains()</source>
          <target state="translated">SqlServerGrammar::compileJsonContains()</target>
        </trans-unit>
        <trans-unit id="1852463ab0353b043130a0ec5387eb51a6fa0d13" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileJsonLength()</source>
          <target state="translated">SqlServerGrammar::compileJsonLength()</target>
        </trans-unit>
        <trans-unit id="0e8a1b7d200bee88291297284d9ab5ebe007bdc4" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileLimit()</source>
          <target state="translated">SqlServerGrammar::compileLimit()</target>
        </trans-unit>
        <trans-unit id="44ca371fff583d0f22b8a2c670338374b381232e" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileLock()</source>
          <target state="translated">SqlServerGrammar::compileLock()</target>
        </trans-unit>
        <trans-unit id="c27f75813636941aa2c4a06dc2b5ced57b3c274e" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileOffset()</source>
          <target state="translated">SqlServerGrammar::compileOffset()</target>
        </trans-unit>
        <trans-unit id="05f1d189ffaec82e19c99f145dbb7a5a3930c738" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileOver()</source>
          <target state="translated">SqlServerGrammar::compileOver()</target>
        </trans-unit>
        <trans-unit id="1658da385e80f3c8daa8be292d0aa015d8687718" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compilePrimary()</source>
          <target state="translated">SqlServerGrammar::compilePrimary()</target>
        </trans-unit>
        <trans-unit id="3d90d7468b85cb240a337ed938782923dbf66ec4" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileRandom()</source>
          <target state="translated">SqlServerGrammar::compileRandom()</target>
        </trans-unit>
        <trans-unit id="66f559ddadeabf30ababc35359ebce41a1ae0c47" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileRename()</source>
          <target state="translated">SqlServerGrammar::compileRename()</target>
        </trans-unit>
        <trans-unit id="f88ed99ee43c7733c4700ee8b330ad27eaa173f1" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileRenameIndex()</source>
          <target state="translated">SqlServerGrammar::compileRenameIndex()</target>
        </trans-unit>
        <trans-unit id="50ebb3f2a8a09be84905395180cb5c87c3a4feae" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileRowConstraint()</source>
          <target state="translated">SqlServerGrammar::compileRowConstraint()</target>
        </trans-unit>
        <trans-unit id="96444d561a5765a53c7ad485d13ad173134a23c1" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileSavepoint()</source>
          <target state="translated">SqlServerGrammar::compileSavepoint()</target>
        </trans-unit>
        <trans-unit id="286f28ec46d42775ebfefbaf90914e11ee11bace" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileSavepointRollBack()</source>
          <target state="translated">SqlServerGrammar::compileSavepointRollBack()</target>
        </trans-unit>
        <trans-unit id="945e2e962085c0451934e207ac94c667a8afbcd2" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileSelect()</source>
          <target state="translated">SqlServerGrammar::compileSelect()</target>
        </trans-unit>
        <trans-unit id="49482686a3382f27ba1f0be4cb670d725f6326f0" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileSpatialIndex()</source>
          <target state="translated">SqlServerGrammar::compileSpatialIndex()</target>
        </trans-unit>
        <trans-unit id="bd6539c41fab9165f874ac1ea7e0de59fb66b9fb" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileTableExists()</source>
          <target state="translated">SqlServerGrammar::compileTableExists()</target>
        </trans-unit>
        <trans-unit id="476f0b89fd6ac374684a21d9b5c3ddf03dc260c4" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileTableExpression()</source>
          <target state="translated">SqlServerGrammar::compileTableExpression()</target>
        </trans-unit>
        <trans-unit id="c8e8c88f970a823df0659687992fff6eef1c3f50" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileTruncate()</source>
          <target state="translated">SqlServerGrammar::compileTruncate()</target>
        </trans-unit>
        <trans-unit id="b9858c292e75ca5788dc751f5bdf2f57059355e9" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileUnique()</source>
          <target state="translated">SqlServerGrammar::compileUnique()</target>
        </trans-unit>
        <trans-unit id="83f1d5fe89ef6eb2722c09d9fd8b00c4bc77d162" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::compileUpdate()</source>
          <target state="translated">SqlServerGrammar::compileUpdate()</target>
        </trans-unit>
        <trans-unit id="9b611c5afa5c955a114866774ef5356fda505631" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::getDateFormat()</source>
          <target state="translated">SqlServerGrammar::getDateFormat()</target>
        </trans-unit>
        <trans-unit id="c7ff18785952089d8c00d16728379b0e94cf67c9" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::modifyCollate()</source>
          <target state="translated">SqlServerGrammar::modifyCollate()</target>
        </trans-unit>
        <trans-unit id="7b118a6170b52888fd4b50e51ff6ac94e79a314a" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::modifyDefault()</source>
          <target state="translated">SqlServerGrammar::modifyDefault()</target>
        </trans-unit>
        <trans-unit id="1ba8c25f814b00fef820b1fd2ba3d5f6aef03c57" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::modifyIncrement()</source>
          <target state="translated">SqlServerGrammar::modifyIncrement()</target>
        </trans-unit>
        <trans-unit id="8e2616a7fe6e8b4b0b0fcf6c80914c97dc4d1715" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::modifyNullable()</source>
          <target state="translated">SqlServerGrammar::modifyNullable()</target>
        </trans-unit>
        <trans-unit id="24f5a07acab9cc4104ead41a2e79f2049449d442" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::parseUpdateTable()</source>
          <target state="translated">SqlServerGrammar::parseUpdateTable()</target>
        </trans-unit>
        <trans-unit id="3ac53cf266a52de971c2b4d3b406894738d5e315" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::prepareBindingForJsonContains()</source>
          <target state="translated">SqlServerGrammar::prepareBindingForJsonContains()</target>
        </trans-unit>
        <trans-unit id="62cdd7a4b5fc755e9362248201d1d808283da3ba" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::prepareBindingsForUpdate()</source>
          <target state="translated">SqlServerGrammar::prepareBindingsForUpdate()</target>
        </trans-unit>
        <trans-unit id="eb530c7a4d4392a96b2562f0f5769e5a46cf4667" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::supportsSavepoints()</source>
          <target state="translated">SqlServerGrammar::supportsSavepoints()</target>
        </trans-unit>
        <trans-unit id="70a25a5921d1f2775f67a97b3fd0d480fed7074a" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typeBigInteger()</source>
          <target state="translated">SqlServerGrammar::typeBigInteger()</target>
        </trans-unit>
        <trans-unit id="318bed085c8e4c803bda0010915f526206e5350a" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typeBinary()</source>
          <target state="translated">SqlServerGrammar::typeBinary()</target>
        </trans-unit>
        <trans-unit id="a6c29142ca7595958617211a49cf407edba9b323" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typeBoolean()</source>
          <target state="translated">SqlServerGrammar::typeBoolean()</target>
        </trans-unit>
        <trans-unit id="9a17db738cce732e9bc66f0f5c8ac7ec31ce6273" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typeChar()</source>
          <target state="translated">SqlServerGrammar::typeChar()</target>
        </trans-unit>
        <trans-unit id="37df8540c3eabef32bad9061c7592288fd03c10d" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typeDate()</source>
          <target state="translated">SqlServerGrammar::typeDate()</target>
        </trans-unit>
        <trans-unit id="fe15381b42e124e04183fc20ba8d697422e6d875" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typeDateTime()</source>
          <target state="translated">SqlServerGrammar::typeDateTime()</target>
        </trans-unit>
        <trans-unit id="b2a547753aa7cee0810987c6a0b11297206fd224" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typeDateTimeTz()</source>
          <target state="translated">SqlServerGrammar::typeDateTimeTz()</target>
        </trans-unit>
        <trans-unit id="4f4cf7e68dff88c98a1c0468a71d46ee9e15292e" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typeDecimal()</source>
          <target state="translated">SqlServerGrammar::typeDecimal()</target>
        </trans-unit>
        <trans-unit id="f7ea4dec5c5fe8f783d2b6b826e0d2e920e0bc39" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typeDouble()</source>
          <target state="translated">SqlServerGrammar::typeDouble()</target>
        </trans-unit>
        <trans-unit id="204779e37dd1c409515ee8bb4aa4964455799dc7" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typeEnum()</source>
          <target state="translated">SqlServerGrammar::typeEnum()</target>
        </trans-unit>
        <trans-unit id="54abfa945d4d7b6cbbef6f972d0d5e4e946f328c" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typeFloat()</source>
          <target state="translated">SqlServerGrammar::typeFloat()</target>
        </trans-unit>
        <trans-unit id="355a31704a4117de28c77e16281babc1345eb197" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typeGeometry()</source>
          <target state="translated">SqlServerGrammar::typeGeometry()</target>
        </trans-unit>
        <trans-unit id="4bb8cafcbeb2176ec662ed9ee1357c7ce72670b1" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typeGeometryCollection()</source>
          <target state="translated">SqlServerGrammar::typeGeometryCollection()</target>
        </trans-unit>
        <trans-unit id="dc527f234f72f0a06ee47cfa95973555b86e678c" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typeInteger()</source>
          <target state="translated">SqlServerGrammar::typeInteger()</target>
        </trans-unit>
        <trans-unit id="6fb9625737b2b496ab148bbe3d378962deb90a31" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typeIpAddress()</source>
          <target state="translated">SqlServerGrammar::typeIpAddress()</target>
        </trans-unit>
        <trans-unit id="18120d45353a5970adc4ba43e20a6756ec53a570" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typeJson()</source>
          <target state="translated">SqlServerGrammar::typeJson()</target>
        </trans-unit>
        <trans-unit id="25a77693610ffeaf12f257ab58e85c46547519e4" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typeJsonb()</source>
          <target state="translated">SqlServerGrammar::typeJsonb()</target>
        </trans-unit>
        <trans-unit id="e2030fe3098f029e9cb665f26825d8e00b36021c" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typeLineString()</source>
          <target state="translated">SqlServerGrammar::typeLineString()</target>
        </trans-unit>
        <trans-unit id="99b28ba470967477b62bd401329b79a6320f3372" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typeLongText()</source>
          <target state="translated">SqlServerGrammar::typeLongText()</target>
        </trans-unit>
        <trans-unit id="a2c248e16f570bf3cb68bfd7faf0d7d2f9141c7a" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typeMacAddress()</source>
          <target state="translated">SqlServerGrammar::typeMacAddress()</target>
        </trans-unit>
        <trans-unit id="bc5234237530c3365fc232d97e8f97f9ce718e05" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typeMediumInteger()</source>
          <target state="translated">SqlServerGrammar::typeMediumInteger()</target>
        </trans-unit>
        <trans-unit id="69387e8dff5516fd7de74f7748535ab5a1c51685" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typeMediumText()</source>
          <target state="translated">SqlServerGrammar::typeMediumText()</target>
        </trans-unit>
        <trans-unit id="1b7d50b209edab5c2cffd33d5aebe93721189a18" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typeMultiLineString()</source>
          <target state="translated">SqlServerGrammar::typeMultiLineString()</target>
        </trans-unit>
        <trans-unit id="c9a50d445319e45d86afcab336f728de3d9ce30b" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typeMultiPoint()</source>
          <target state="translated">SqlServerGrammar::typeMultiPoint()</target>
        </trans-unit>
        <trans-unit id="1ffea643499e1ec176ff9a83350ab2fa5afa064d" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typeMultiPolygon()</source>
          <target state="translated">SqlServerGrammar::typeMultiPolygon()</target>
        </trans-unit>
        <trans-unit id="d9096940dd78f4ca15008d6d5df3191f09c6df5b" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typePoint()</source>
          <target state="translated">SqlServerGrammar::typePoint()</target>
        </trans-unit>
        <trans-unit id="8367b38d28ba004c2422e857e45ebcea1cf3a444" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typePolygon()</source>
          <target state="translated">SqlServerGrammar::typePolygon()</target>
        </trans-unit>
        <trans-unit id="329a6d75a9ef47b6c6b326bf2fccfa9ba7386da4" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typeSmallInteger()</source>
          <target state="translated">SqlServerGrammar::typeSmallInteger()</target>
        </trans-unit>
        <trans-unit id="a3187f2f49c82218dbc773173ff36ccb1c41b4e0" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typeString()</source>
          <target state="translated">SqlServerGrammar::typeString()</target>
        </trans-unit>
        <trans-unit id="9271cec90f1aeffcedb808fbbda1b5b7cc11df23" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typeText()</source>
          <target state="translated">SqlServerGrammar::typeText()</target>
        </trans-unit>
        <trans-unit id="fad5d28f632c098cd623b357bcfdd6605f747cd1" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typeTime()</source>
          <target state="translated">SqlServerGrammar::typeTime()</target>
        </trans-unit>
        <trans-unit id="b41b0656b8709f68f5ea2615d7044969494f6cee" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typeTimeTz()</source>
          <target state="translated">SqlServerGrammar::typeTimeTz()</target>
        </trans-unit>
        <trans-unit id="b084698625d9286535581c2606c1ea9f581dfa0c" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typeTimestamp()</source>
          <target state="translated">SqlServerGrammar::typeTimestamp()</target>
        </trans-unit>
        <trans-unit id="3d2e8444d3d9086b806ab505ed4fe26723f7d371" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typeTimestampTz()</source>
          <target state="translated">SqlServerGrammar::typeTimestampTz()</target>
        </trans-unit>
        <trans-unit id="5c185b39122fdb7e0564fb093e9c216a8ffd704a" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typeTinyInteger()</source>
          <target state="translated">SqlServerGrammar::typeTinyInteger()</target>
        </trans-unit>
        <trans-unit id="b03f718703174cb53d12a5d50e3e27549d37d0a2" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typeUuid()</source>
          <target state="translated">SqlServerGrammar::typeUuid()</target>
        </trans-unit>
        <trans-unit id="fdaac36b49bb942d48a28224efa35fb54e85b33e" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::typeYear()</source>
          <target state="translated">SqlServerGrammar::typeYear()</target>
        </trans-unit>
        <trans-unit id="a3e7c9138625ac5e100f4c24da97718416a05c14" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::whereDate()</source>
          <target state="translated">SqlServerGrammar::whereDate()</target>
        </trans-unit>
        <trans-unit id="fb8725a667a9a4313e98e21f89205f82b3067a6a" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::whereTime()</source>
          <target state="translated">SqlServerGrammar::whereTime()</target>
        </trans-unit>
        <trans-unit id="a47229fb3011b5acf43d16ac4ad2a2d72c4c45d0" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::wrapJsonSelector()</source>
          <target state="translated">SqlServerGrammar::wrapJsonSelector()</target>
        </trans-unit>
        <trans-unit id="120e269fb04269e4df62daf7fb91c62c679b370d" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::wrapTable()</source>
          <target state="translated">SqlServerGrammar::wrapTable()</target>
        </trans-unit>
        <trans-unit id="ae47475634391dc3bb3454d0e488207a41955549" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::wrapTableValuedFunction()</source>
          <target state="translated">SqlServerGrammar::wrapTableValuedFunction()</target>
        </trans-unit>
        <trans-unit id="d0c7d6d3b2115b7365fd75189f720f3a644f429a" translate="yes" xml:space="preserve">
          <source>SqlServerGrammar::wrapValue()</source>
          <target state="translated">SqlServerGrammar::wrapValue()</target>
        </trans-unit>
        <trans-unit id="9f8eaa222cfc7bf1f951a1a872410e8b75d66d43" translate="yes" xml:space="preserve">
          <source>SqlServerProcessor</source>
          <target state="translated">SqlServerProcessor</target>
        </trans-unit>
        <trans-unit id="a803625df1b873293b49f1eee7e5f907f2908b2d" translate="yes" xml:space="preserve">
          <source>SqlServerProcessor (Database\Query\Processors)</source>
          <target state="translated">SqlServerProcessor (DatabaseQueryProcessors)</target>
        </trans-unit>
        <trans-unit id="3b906c7315e0d3a62f3cdcb10e724253a6f66cc3" translate="yes" xml:space="preserve">
          <source>SqlServerProcessor::processColumnListing()</source>
          <target state="translated">SqlServerProcessor::processColumnListing()</target>
        </trans-unit>
        <trans-unit id="4779c24b583b4301f8c0e75804197bc4d76e8d1b" translate="yes" xml:space="preserve">
          <source>SqlServerProcessor::processInsertGetId()</source>
          <target state="translated">SqlServerProcessor::processInsertGetId()</target>
        </trans-unit>
        <trans-unit id="f09403285be0133116c01d17708d56abe948b79f" translate="yes" xml:space="preserve">
          <source>SqlServerProcessor::processInsertGetIdForOdbc()</source>
          <target state="translated">SqlServerProcessor::processInsertGetIdForOdbc()</target>
        </trans-unit>
        <trans-unit id="04f0fa218c1c285e18dafb64ff1d5a27aeb4d249" translate="yes" xml:space="preserve">
          <source>Sqlite3</source>
          <target state="translated">Sqlite3</target>
        </trans-unit>
        <trans-unit id="8fdb4a8d10ee8e2821d8c5be69e743bbda7b76b7" translate="yes" xml:space="preserve">
          <source>SqsClient</source>
          <target state="translated">SqsClient</target>
        </trans-unit>
        <trans-unit id="75d7365c8e80914dce33c6dc28be8e4f6571ff1e" translate="yes" xml:space="preserve">
          <source>SqsClient
    getSqs()</source>
          <target state="translated">SqsClient getSqs()</target>
        </trans-unit>
        <trans-unit id="25ec4ed4e2b3d0530c53e14f4edfdef717078ca3" translate="yes" xml:space="preserve">
          <source>SqsConnector</source>
          <target state="translated">SqsConnector</target>
        </trans-unit>
        <trans-unit id="6af083b11e1eda75136801d843a297fc336a42fe" translate="yes" xml:space="preserve">
          <source>SqsConnector (Queue\Connectors)</source>
          <target state="translated">SqsConnector (QueueConnectors)</target>
        </trans-unit>
        <trans-unit id="6d2d4c967476df11498661fc6340051078bc0d30" translate="yes" xml:space="preserve">
          <source>SqsConnector::connect()</source>
          <target state="translated">SqsConnector::connect()</target>
        </trans-unit>
        <trans-unit id="7c95d813a5dec583e7b744a787b64b0210a00eda" translate="yes" xml:space="preserve">
          <source>SqsConnector::getDefaultConfiguration()</source>
          <target state="translated">SqsConnector::getDefaultConfiguration()</target>
        </trans-unit>
        <trans-unit id="2d57051198b0cb1dc486c9eb4f86e2496dcc61e6" translate="yes" xml:space="preserve">
          <source>SqsJob</source>
          <target state="translated">SqsJob</target>
        </trans-unit>
        <trans-unit id="657b3f701255a14e7e72bcb48a97ef930159d2a0" translate="yes" xml:space="preserve">
          <source>SqsJob (Queue\Jobs)</source>
          <target state="translated">SqsJob (QueueJobs)</target>
        </trans-unit>
        <trans-unit id="1b63593eaff1d5659a637b3409a2f7dd4c30e4f6" translate="yes" xml:space="preserve">
          <source>SqsJob::__construct()</source>
          <target state="translated">SqsJob::__construct()</target>
        </trans-unit>
        <trans-unit id="dbe9b31179a3932b07337bfef0fe8e4cb168807d" translate="yes" xml:space="preserve">
          <source>SqsJob::attempts()</source>
          <target state="translated">SqsJob::attempts()</target>
        </trans-unit>
        <trans-unit id="802d3e84aee1d805bec5e3749a2fdd751c3c39e6" translate="yes" xml:space="preserve">
          <source>SqsJob::delete()</source>
          <target state="translated">SqsJob::delete()</target>
        </trans-unit>
        <trans-unit id="bb088a0809ecce386f0e82c678dec7b8ed9fb3bd" translate="yes" xml:space="preserve">
          <source>SqsJob::getJobId()</source>
          <target state="translated">SqsJob::getJobId()</target>
        </trans-unit>
        <trans-unit id="841b97f18aa1f463a5df9aab819ac6d9a49dd418" translate="yes" xml:space="preserve">
          <source>SqsJob::getRawBody()</source>
          <target state="translated">SqsJob::getRawBody()</target>
        </trans-unit>
        <trans-unit id="6d5725c4266eda1d6d5c52980a54b8557ba8f3c1" translate="yes" xml:space="preserve">
          <source>SqsJob::getSqs()</source>
          <target state="translated">SqsJob::getSqs()</target>
        </trans-unit>
        <trans-unit id="253b74d6c53321e2e440f317041c508e04582ce6" translate="yes" xml:space="preserve">
          <source>SqsJob::getSqsJob()</source>
          <target state="translated">SqsJob::getSqsJob()</target>
        </trans-unit>
        <trans-unit id="ad5fe7aa48b78902d928b7d5077bed621f51f487" translate="yes" xml:space="preserve">
          <source>SqsJob::release()</source>
          <target state="translated">SqsJob::release()</target>
        </trans-unit>
        <trans-unit id="1dc879ff0b4064869b56f8bf7fe299dcb50ae697" translate="yes" xml:space="preserve">
          <source>SqsQueue</source>
          <target state="translated">SqsQueue</target>
        </trans-unit>
        <trans-unit id="7aa8686266d68c1bbb3c973cec7c8b0999178aab" translate="yes" xml:space="preserve">
          <source>SqsQueue (Queue)</source>
          <target state="translated">エスキュー</target>
        </trans-unit>
        <trans-unit id="b1a41bd056d0ab9af7128a1de4b9351f8b756932" translate="yes" xml:space="preserve">
          <source>SqsQueue::__construct()</source>
          <target state="translated">SqsQueue::__construct()</target>
        </trans-unit>
        <trans-unit id="622386c4d7aa328b941345a0b17a4a5c2d11a4e0" translate="yes" xml:space="preserve">
          <source>SqsQueue::getQueue()</source>
          <target state="translated">SqsQueue::getQueue()</target>
        </trans-unit>
        <trans-unit id="3952eef87d85ade4160b4228394f8afa3b076367" translate="yes" xml:space="preserve">
          <source>SqsQueue::getSqs()</source>
          <target state="translated">SqsQueue::getSqs()</target>
        </trans-unit>
        <trans-unit id="1265743939879cf2b9aa83c9abd56f2d69c5da0a" translate="yes" xml:space="preserve">
          <source>SqsQueue::later()</source>
          <target state="translated">SqsQueue::later()</target>
        </trans-unit>
        <trans-unit id="7a211a8c349ac7d716ffb52d4d40c11adca6996c" translate="yes" xml:space="preserve">
          <source>SqsQueue::pop()</source>
          <target state="translated">SqsQueue::pop()</target>
        </trans-unit>
        <trans-unit id="e6af028198ed502564023a5d2175377a3cd59a8b" translate="yes" xml:space="preserve">
          <source>SqsQueue::push()</source>
          <target state="translated">SqsQueue::push()</target>
        </trans-unit>
        <trans-unit id="3d765208809a7cd63f55075832d503321cbf8d0e" translate="yes" xml:space="preserve">
          <source>SqsQueue::pushRaw()</source>
          <target state="translated">SqsQueue::pushRaw()</target>
        </trans-unit>
        <trans-unit id="bcccd03d4373a72d304988113f9cf47796235c33" translate="yes" xml:space="preserve">
          <source>SqsQueue::size()</source>
          <target state="translated">SqsQueue::size()</target>
        </trans-unit>
        <trans-unit id="249f056b552dcec0dec16b7eed3b2513cf1351f3" translate="yes" xml:space="preserve">
          <source>Stacks</source>
          <target state="translated">Stacks</target>
        </trans-unit>
        <trans-unit id="f354ccc6b1cac4fb9811feb621a6f0275fb10d4b" translate="yes" xml:space="preserve">
          <source>Start a component rendering process.</source>
          <target state="translated">コンポーネントのレンダリング処理を開始します。</target>
        </trans-unit>
        <trans-unit id="d0e7f31729ef5f506d543bf085d5935d144ad33b" translate="yes" xml:space="preserve">
          <source>Start a new database transaction.</source>
          <target state="translated">新しいデータベーストランザクションを開始します。</target>
        </trans-unit>
        <trans-unit id="868ec14ab627bed9a9c40293511ee037230afa0a" translate="yes" xml:space="preserve">
          <source>Start a translation block.</source>
          <target state="translated">翻訳ブロックを開始します。</target>
        </trans-unit>
        <trans-unit id="8ab366a836fdc5303c255b00d06437a48da8844b" translate="yes" xml:space="preserve">
          <source>Start injecting content into a push section.</source>
          <target state="translated">プッシュセクションへのコンテンツ注入を開始します。</target>
        </trans-unit>
        <trans-unit id="e6477e68bcaffc74772678381f29897702c1e87e" translate="yes" xml:space="preserve">
          <source>Start injecting content into a section.</source>
          <target state="translated">セクションへのコンテンツ注入を開始します。</target>
        </trans-unit>
        <trans-unit id="7e706c1ab2aaed9deb4e2dc9685ec16bd8f5e51a" translate="yes" xml:space="preserve">
          <source>Start prepending content into a push section.</source>
          <target state="translated">プッシュセクションにコンテンツの前置きを開始します。</target>
        </trans-unit>
        <trans-unit id="2a46426a1a998fe7f9bf712adc3393d63e689bc5" translate="yes" xml:space="preserve">
          <source>Start the Valet daemon.</source>
          <target state="translated">バレットデーモンを起動します。</target>
        </trans-unit>
        <trans-unit id="982156369531e509d95809446a37020dc63851f2" translate="yes" xml:space="preserve">
          <source>Start the session for the application.</source>
          <target state="translated">アプリケーションのセッションを開始します。</target>
        </trans-unit>
        <trans-unit id="9b3ecd722f093c879252c36d8f33a5cd22b24e0e" translate="yes" xml:space="preserve">
          <source>Start the session for the given request.</source>
          <target state="translated">指定されたリクエストのセッションを開始します。</target>
        </trans-unit>
        <trans-unit id="934e961f733987b74508b1430a768bcfae4fda96" translate="yes" xml:space="preserve">
          <source>Start the session, reading the data from a handler.</source>
          <target state="translated">ハンドラからデータを読み込んでセッションを開始します。</target>
        </trans-unit>
        <trans-unit id="43b5966c9b3635afe4d7ad01254c4df911d72904" translate="yes" xml:space="preserve">
          <source>Start the slot rendering process.</source>
          <target state="translated">スロットのレンダリング処理を開始します。</target>
        </trans-unit>
        <trans-unit id="b339985cec3fe7d1805a8a4e3836720336529fa4" translate="yes" xml:space="preserve">
          <source>StartSession</source>
          <target state="translated">StartSession</target>
        </trans-unit>
        <trans-unit id="88ef7f47e4692ebf77297465ddb7a2d56fd2e40d" translate="yes" xml:space="preserve">
          <source>StartSession (Session\Middleware)</source>
          <target state="translated">StartSession (SessionMiddleware)</target>
        </trans-unit>
        <trans-unit id="e8e82cf38bec40743517f182c07029a1a2f2f47a" translate="yes" xml:space="preserve">
          <source>StartSession::__construct()</source>
          <target state="translated">StartSession::__construct()</target>
        </trans-unit>
        <trans-unit id="9c736ae142ad1c582c46d512e847aff453291f75" translate="yes" xml:space="preserve">
          <source>StartSession::addCookieToResponse()</source>
          <target state="translated">StartSession::addCookieToResponse()</target>
        </trans-unit>
        <trans-unit id="37fa18358d5b1786a393d61f0b803e025bb44e2a" translate="yes" xml:space="preserve">
          <source>StartSession::collectGarbage()</source>
          <target state="translated">StartSession::collectGarbage()</target>
        </trans-unit>
        <trans-unit id="c640f5797f59cf88a08b491aea19447acd0dd727" translate="yes" xml:space="preserve">
          <source>StartSession::configHitsLottery()</source>
          <target state="translated">StartSession::configHitsLottery()</target>
        </trans-unit>
        <trans-unit id="7c36edf5d51b847f11a92bc97dd19d6fc4591743" translate="yes" xml:space="preserve">
          <source>StartSession::getCookieExpirationDate()</source>
          <target state="translated">StartSession::getCookieExpirationDate()</target>
        </trans-unit>
        <trans-unit id="65eaf8564d2f8dfb29c1f126dc4cbc4708893848" translate="yes" xml:space="preserve">
          <source>StartSession::getSession()</source>
          <target state="translated">StartSession::getSession()</target>
        </trans-unit>
        <trans-unit id="b9d6311b0af932a828ff160bacdb9ac245d0509c" translate="yes" xml:space="preserve">
          <source>StartSession::getSessionLifetimeInSeconds()</source>
          <target state="translated">StartSession::getSessionLifetimeInSeconds()</target>
        </trans-unit>
        <trans-unit id="b756dd961c12db866b9ddb6ce7e4e65ca23de61b" translate="yes" xml:space="preserve">
          <source>StartSession::handle()</source>
          <target state="translated">StartSession::handle()</target>
        </trans-unit>
        <trans-unit id="41fbc2970cd223e9acd1f1293ebb3f753cd26a83" translate="yes" xml:space="preserve">
          <source>StartSession::sessionConfigured()</source>
          <target state="translated">StartSession::sessionConfigured()</target>
        </trans-unit>
        <trans-unit id="be62144a70d1ac3dc94425784eb2c76f6dbe9f13" translate="yes" xml:space="preserve">
          <source>StartSession::sessionIsPersistent()</source>
          <target state="translated">StartSession::sessionIsPersistent()</target>
        </trans-unit>
        <trans-unit id="d9ebf99a51bc7eba5134524410aa564405eb01b6" translate="yes" xml:space="preserve">
          <source>StartSession::startSession()</source>
          <target state="translated">StartSession::startSession()</target>
        </trans-unit>
        <trans-unit id="9f0486cea8d5cef802f5778d58666b4ae4569c6b" translate="yes" xml:space="preserve">
          <source>StartSession::storeCurrentUrl()</source>
          <target state="translated">StartSession::storeCurrentUrl()</target>
        </trans-unit>
        <trans-unit id="94312789aa51cbeffc609164053c2849613ec76c" translate="yes" xml:space="preserve">
          <source>StartSession::terminate()</source>
          <target state="translated">StartSession::terminate()</target>
        </trans-unit>
        <trans-unit id="4497cdf11a215ccf34fc7fccd070c51b6896499a" translate="yes" xml:space="preserve">
          <source>StartSession::usingCookieSessions()</source>
          <target state="translated">StartSession::usingCookieSessions()</target>
        </trans-unit>
        <trans-unit id="bf64d74b49e21781ce67825b45963b8051e4b921" translate="yes" xml:space="preserve">
          <source>Starting Supervisor</source>
          <target state="translated">開始監督者</target>
        </trans-unit>
        <trans-unit id="de7564d7a15ca0d460ce7baa233e2a1c25c58905" translate="yes" xml:space="preserve">
          <source>Starting The Scheduler</source>
          <target state="translated">スケジューラの起動</target>
        </trans-unit>
        <trans-unit id="7531bfd49307fd96f07484590c3ccaacfbfa045b" translate="yes" xml:space="preserve">
          <source>Statamic</source>
          <target state="translated">Statamic</target>
        </trans-unit>
        <trans-unit id="44323e7d950fe3282779efe86e891d22744b1537" translate="yes" xml:space="preserve">
          <source>State that the command should run even in maintenance mode.</source>
          <target state="translated">メンテナンスモードでもコマンドを実行する状態にする。</target>
        </trans-unit>
        <trans-unit id="00c92a0fd840309c6e47a23f93df43b255e9065c" translate="yes" xml:space="preserve">
          <source>State that the command should run in background.</source>
          <target state="translated">コマンドをバックグラウンドで実行することを指定します。</target>
        </trans-unit>
        <trans-unit id="4541b7ef6dfcae871521fdcc3fb3c41b9d929ef8" translate="yes" xml:space="preserve">
          <source>StatefulGuard</source>
          <target state="translated">StatefulGuard</target>
        </trans-unit>
        <trans-unit id="3700215ac133df6022e8bd6f6a344bf0fc7a3a85" translate="yes" xml:space="preserve">
          <source>StatefulGuard (Contracts)</source>
          <target state="translated">ステートフルガード(契約</target>
        </trans-unit>
        <trans-unit id="ca2d5f46245f81b45eb54ca25a12bfb2434e8115" translate="yes" xml:space="preserve">
          <source>StatefulGuard::attempt()</source>
          <target state="translated">StatefulGuard::attempt()</target>
        </trans-unit>
        <trans-unit id="22c4688040d4e0e72894aebaf9b28f5fd30373c5" translate="yes" xml:space="preserve">
          <source>StatefulGuard::login()</source>
          <target state="translated">StatefulGuard::login()</target>
        </trans-unit>
        <trans-unit id="e761e25e54f72f7f09382d184b962c8251bddcab" translate="yes" xml:space="preserve">
          <source>StatefulGuard::loginUsingId()</source>
          <target state="translated">StatefulGuard::loginUsingId()</target>
        </trans-unit>
        <trans-unit id="80deed82ae37ad114ca51e29c4dc911b4e9c0057" translate="yes" xml:space="preserve">
          <source>StatefulGuard::logout()</source>
          <target state="translated">StatefulGuard::logout()</target>
        </trans-unit>
        <trans-unit id="3fccfbc941471a7e24c52f660a3814ae29159bc0" translate="yes" xml:space="preserve">
          <source>StatefulGuard::once()</source>
          <target state="translated">StatefulGuard::once()</target>
        </trans-unit>
        <trans-unit id="a4c5c2d3c074fde6c31f7fc0cb1951eb5152db8c" translate="yes" xml:space="preserve">
          <source>StatefulGuard::onceUsingId()</source>
          <target state="translated">StatefulGuard::onceUsingId()</target>
        </trans-unit>
        <trans-unit id="49d8b16b703a2e89e36de09b833f801410551af0" translate="yes" xml:space="preserve">
          <source>StatefulGuard::viaRemember()</source>
          <target state="translated">StatefulGuard::viaRemember()</target>
        </trans-unit>
        <trans-unit id="b019c14436a0dfde03f2f2c4d8fc7053212c0005" translate="yes" xml:space="preserve">
          <source>Stateless Authentication</source>
          <target state="translated">ステートレス認証</target>
        </trans-unit>
        <trans-unit id="179a651f7ffbdc32f47e69b3c54b69d74607f41f" translate="yes" xml:space="preserve">
          <source>Stateless HTTP Basic Authentication</source>
          <target state="translated">ステートレス HTTP 基本認証</target>
        </trans-unit>
        <trans-unit id="392f1987d8a538f7723b5c1fdf1df4c89c06f2f1" translate="yes" xml:space="preserve">
          <source>StatementPrepared</source>
          <target state="translated">StatementPrepared</target>
        </trans-unit>
        <trans-unit id="d09b4e5c58dc1bae37a526c2674cdfc70d5e3fc4" translate="yes" xml:space="preserve">
          <source>StatementPrepared (Database\Events)</source>
          <target state="translated">StatementPrepared (DatabaseEvents)</target>
        </trans-unit>
        <trans-unit id="7d15f9a17a29d3217367f981abaabb454d9da0a0" translate="yes" xml:space="preserve">
          <source>StatementPrepared::__construct()</source>
          <target state="translated">StatementPrepared::__construct()</target>
        </trans-unit>
        <trans-unit id="b7efd485aeb553a0ba7ea76a93bfbe00ff7e49cc" translate="yes" xml:space="preserve">
          <source>States allow you to define discrete modifications that can be applied to your model factories in any combination. For example, your &lt;code&gt;User&lt;/code&gt; model might have a &lt;code&gt;delinquent&lt;/code&gt; state that modifies one of its default attribute values. You may define your state transformations using the &lt;code&gt;state&lt;/code&gt; method. For simple states, you may pass an array of attribute modifications:</source>
          <target state="translated">状態を使用すると、モデルファクトリに任意の組み合わせで適用できる個別の変更を定義できます。たとえば、 &lt;code&gt;User&lt;/code&gt; モデルには、デフォルトの属性値の1つを変更する &lt;code&gt;delinquent&lt;/code&gt; 状態がある場合があります。状態変換を定義するには、 &lt;code&gt;state&lt;/code&gt; メソッドを使用します。単純な状態の場合は、属性変更の配列を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="28d467ada5a00963df15b6696671f0cc7ecc88d5" translate="yes" xml:space="preserve">
          <source>Static HTML</source>
          <target state="translated">静的なHTML</target>
        </trans-unit>
        <trans-unit id="a14bc4cd5f2da0e9fa8a1d3490990bef98497ed3" translate="yes" xml:space="preserve">
          <source>Static version of prepareResponse.</source>
          <target state="translated">prepareResponseの静的バージョン。</target>
        </trans-unit>
        <trans-unit id="2ce3f6d14b73cb7bed4e9d40759cef3842888199" translate="yes" xml:space="preserve">
          <source>StatusCommand</source>
          <target state="translated">StatusCommand</target>
        </trans-unit>
        <trans-unit id="af7035788274d1a284403ab851f5abbdc96b3768" translate="yes" xml:space="preserve">
          <source>StatusCommand (Database\Console\Migrations)</source>
          <target state="translated">StatusCommand (DatabaseConsole\Migrations)</target>
        </trans-unit>
        <trans-unit id="6a9c03c4eb234797eafe745f8674de81d4bd9cea" translate="yes" xml:space="preserve">
          <source>StatusCommand::__construct()</source>
          <target state="translated">StatusCommand::__construct()</target>
        </trans-unit>
        <trans-unit id="b71037bbf58e5f79e0ae65726da86736a98640d2" translate="yes" xml:space="preserve">
          <source>StatusCommand::getAllMigrationFiles()</source>
          <target state="translated">StatusCommand::getAllMigrationFiles()</target>
        </trans-unit>
        <trans-unit id="1664a992096c612c848bcd8ec888e821c0cc1eb0" translate="yes" xml:space="preserve">
          <source>StatusCommand::getOptions()</source>
          <target state="translated">StatusCommand::getOptions()</target>
        </trans-unit>
        <trans-unit id="b5606252471d4efb5de40b40fe5459932ccfd2d5" translate="yes" xml:space="preserve">
          <source>StatusCommand::getStatusFor()</source>
          <target state="translated">StatusCommand::getStatusFor()</target>
        </trans-unit>
        <trans-unit id="c0be62f31af848e02f464a82f1b5efb5b9c93fb9" translate="yes" xml:space="preserve">
          <source>StatusCommand::handle()</source>
          <target state="translated">StatusCommand::handle()</target>
        </trans-unit>
        <trans-unit id="37d6cbbe215540d4d53f0eb36e5409bf36e7a226" translate="yes" xml:space="preserve">
          <source>Stop injecting content into a push section.</source>
          <target state="translated">プッシュ部にコンテンツを注入するのはやめてください。</target>
        </trans-unit>
        <trans-unit id="5c2e292c11064234b1ec69c8780f647d7cc941db" translate="yes" xml:space="preserve">
          <source>Stop injecting content into a section and append it.</source>
          <target state="translated">セクションにコンテンツを注入して追記するのはやめてください。</target>
        </trans-unit>
        <trans-unit id="6cd2b7ff01c6e8698932d666c04a1f9eed5025e5" translate="yes" xml:space="preserve">
          <source>Stop injecting content into a section and return its contents.</source>
          <target state="translated">セクションにコンテンツを注入するのを止めて、その内容を返す。</target>
        </trans-unit>
        <trans-unit id="82e418df390322302d4c54c254575d4e7ebe1662" translate="yes" xml:space="preserve">
          <source>Stop injecting content into a section.</source>
          <target state="translated">セクションにコンテンツを注入するのはやめてください。</target>
        </trans-unit>
        <trans-unit id="ac43b97daa5ca89bcf3fcfc3fde27c3ef63bea5a" translate="yes" xml:space="preserve">
          <source>Stop listening and bail out of the script.</source>
          <target state="translated">聞くのをやめて、台本から手を引いてください。</target>
        </trans-unit>
        <trans-unit id="a3a3b83cf442c28d6df722a90064b2532ddb10dc" translate="yes" xml:space="preserve">
          <source>Stop prepending content into a push section.</source>
          <target state="translated">プッシュ欄に内容を前置きするのはやめてください。</target>
        </trans-unit>
        <trans-unit id="7ab58a2534334a99dc158219928cd78012208f50" translate="yes" xml:space="preserve">
          <source>Stop running validation rules after the first validation failure.</source>
          <target state="translated">最初の検証に失敗した後、検証ルールの実行を停止します。</target>
        </trans-unit>
        <trans-unit id="67aae47d5b849ecbfecc12e2fc11e55e4245428b" translate="yes" xml:space="preserve">
          <source>Stop the Valet daemon.</source>
          <target state="translated">バレットデーモンを止めろ</target>
        </trans-unit>
        <trans-unit id="da394643428272df8837907299de6613f505412a" translate="yes" xml:space="preserve">
          <source>Stop the process if necessary.</source>
          <target state="translated">必要に応じて処理を停止します。</target>
        </trans-unit>
        <trans-unit id="4a3b7452eefb783733b1d6e068c41716e2d8ff65" translate="yes" xml:space="preserve">
          <source>Stop the worker if we have lost connection to a database.</source>
          <target state="translated">データベースへの接続を失った場合は、ワーカーを停止します。</target>
        </trans-unit>
        <trans-unit id="b0e0e7c374adcf54a4cd6c49f3834dd3d3a881a5" translate="yes" xml:space="preserve">
          <source>Stopping On First Validation Failure</source>
          <target state="translated">最初のバリデーション失敗での停止</target>
        </trans-unit>
        <trans-unit id="5695708b105f764273173d172a35eb396a06feda" translate="yes" xml:space="preserve">
          <source>Stopping The Propagation Of An Event</source>
          <target state="translated">イベントの伝搬停止</target>
        </trans-unit>
        <trans-unit id="9e092dda4f0e27d0c7686ddd00272079e678b6e6" translate="yes" xml:space="preserve">
          <source>Storage</source>
          <target state="translated">Storage</target>
        </trans-unit>
        <trans-unit id="e9a4f8eae50eec77b168dfad7eb3d35ac562e5a9" translate="yes" xml:space="preserve">
          <source>Storage (Instance)</source>
          <target state="translated">ストレージ(インスタンス</target>
        </trans-unit>
        <trans-unit id="d408bd1d542af1b8cc786b87f07faa5f4d84f8b4" translate="yes" xml:space="preserve">
          <source>Storage (Support\Facades)</source>
          <target state="translated">ストレージ(SupportFacades)</target>
        </trans-unit>
        <trans-unit id="ce0f239f9e51c81186a11c661c7734df3c84932d" translate="yes" xml:space="preserve">
          <source>Storage Fake</source>
          <target state="translated">ストレージフェイク</target>
        </trans-unit>
        <trans-unit id="0e4be725fcd16ecaf8eb5e0ad79c9a4c4bb710b6" translate="yes" xml:space="preserve">
          <source>Storage::fake()</source>
          <target state="translated">Storage::fake()</target>
        </trans-unit>
        <trans-unit id="b42c8eebdbe5f08e4a649b68f6f40320a51c29bb" translate="yes" xml:space="preserve">
          <source>Storage::getFacadeAccessor()</source>
          <target state="translated">Storage::getFacadeAccessor()</target>
        </trans-unit>
        <trans-unit id="d6da669662b1b88b658553e7f1b0ea03c9d2981e" translate="yes" xml:space="preserve">
          <source>Storage::persistentFake()</source>
          <target state="translated">Storage::persistentFake()</target>
        </trans-unit>
        <trans-unit id="8d50719ff664b4def6cea380d1598e46f336db90" translate="yes" xml:space="preserve">
          <source>StorageLinkCommand</source>
          <target state="translated">StorageLinkCommand</target>
        </trans-unit>
        <trans-unit id="6fec2b70a523670094226e1bd8d5bb9619269033" translate="yes" xml:space="preserve">
          <source>StorageLinkCommand (Foundation)</source>
          <target state="translated">StorageLinkCommand (Foundation)</target>
        </trans-unit>
        <trans-unit id="3bdf383b301f320f3a52efb06929be59b01bad77" translate="yes" xml:space="preserve">
          <source>StorageLinkCommand::handle()</source>
          <target state="translated">StorageLinkCommand::handle()</target>
        </trans-unit>
        <trans-unit id="0d8a7046c8d39d9cbd86abcdfb704b161a601f9e" translate="yes" xml:space="preserve">
          <source>Store</source>
          <target state="translated">Store</target>
        </trans-unit>
        <trans-unit id="09162f8a08cf3dd2b9b3f6067f65a7aee6bcd7b3" translate="yes" xml:space="preserve">
          <source>Store (Contracts)</source>
          <target state="translated">店舗(契約</target>
        </trans-unit>
        <trans-unit id="efea7c04a41b14303a89df5195adf25a9ad3b7b1" translate="yes" xml:space="preserve">
          <source>Store (Session)</source>
          <target state="translated">ストア(セッション)</target>
        </trans-unit>
        <trans-unit id="e05cadc4748103a6fd9a83b3ca5f64fed127de8a" translate="yes" xml:space="preserve">
          <source>Store If Not Present</source>
          <target state="translated">プレゼントしない場合のお店</target>
        </trans-unit>
        <trans-unit id="6e15c347d94c6bb63ffa6f34f4a91476a2d20cac" translate="yes" xml:space="preserve">
          <source>Store a failed job event.</source>
          <target state="translated">失敗したジョブイベントを保存します。</target>
        </trans-unit>
        <trans-unit id="9d449da8586a17b8270e700df9e78342f55cf0b2" translate="yes" xml:space="preserve">
          <source>Store a raw block and return a unique raw placeholder.</source>
          <target state="translated">生のブロックを格納し、一意の生のプレースホルダを返します。</target>
        </trans-unit>
        <trans-unit id="29076d0e3e11b5092dc7aef54e663f853cd8bd7e" translate="yes" xml:space="preserve">
          <source>Store a reference to the cache key against the reference key.</source>
          <target state="translated">参照キーに対してキャッシュキーへの参照を格納します。</target>
        </trans-unit>
        <trans-unit id="6b1c6e1fa485a6667907562d8281c8f24b0ac27e" translate="yes" xml:space="preserve">
          <source>Store an item in the cache for a given number of minutes.</source>
          <target state="translated">アイテムをキャッシュに保存します。</target>
        </trans-unit>
        <trans-unit id="b11f1e5b247e760c99f8b9c40db2483537131c65" translate="yes" xml:space="preserve">
          <source>Store an item in the cache for the default time.</source>
          <target state="translated">アイテムをデフォルトの時間だけキャッシュに保存します。</target>
        </trans-unit>
        <trans-unit id="c7b5292250f28faef8bffea9ca8a9b07e5ee62b2" translate="yes" xml:space="preserve">
          <source>Store an item in the cache if the key does not exist.</source>
          <target state="translated">キーが存在しない場合は、キャッシュにアイテムを保存します。</target>
        </trans-unit>
        <trans-unit id="1853dc753ba4d562bb5b727fe1f12bbd286f3e26" translate="yes" xml:space="preserve">
          <source>Store an item in the cache if the key doesn't exist.</source>
          <target state="translated">キーが存在しない場合は、キャッシュにアイテムを保存します。</target>
        </trans-unit>
        <trans-unit id="814d848924d446df94e8139a99a33911da1e2881" translate="yes" xml:space="preserve">
          <source>Store an item in the cache indefinitely.</source>
          <target state="translated">アイテムをキャッシュに無期限に保存します。</target>
        </trans-unit>
        <trans-unit id="6723a4717d6e369e7918a651c58a5c924e7678d2" translate="yes" xml:space="preserve">
          <source>Store an item in the cache.</source>
          <target state="translated">アイテムをキャッシュに保存します。</target>
        </trans-unit>
        <trans-unit id="0efd052130e69e289c5e46e65167051e45cda12f" translate="yes" xml:space="preserve">
          <source>Store forever key references into store.</source>
          <target state="translated">永遠のキー参照をストアに格納します。</target>
        </trans-unit>
        <trans-unit id="66cea3dc82ea333c8b98efd5e1a52331877123ed" translate="yes" xml:space="preserve">
          <source>Store multiple items in the cache for a given number of minutes.</source>
          <target state="translated">複数のアイテムをキャッシュに保存して、指定された分数だけ保存します。</target>
        </trans-unit>
        <trans-unit id="415734de73e1e4a2cdf0942a562801004f4efecb" translate="yes" xml:space="preserve">
          <source>Store standard key references into store.</source>
          <target state="translated">標準キー参照をストアに格納します。</target>
        </trans-unit>
        <trans-unit id="c9517b2a9626c99ba36ea61388156c7b1dfa9f35" translate="yes" xml:space="preserve">
          <source>Store the PHP blocks and replace them with a temporary placeholder.</source>
          <target state="translated">PHPのブロックを保存し、一時的なプレースホルダに置き換えます。</target>
        </trans-unit>
        <trans-unit id="4b5a19dcade125fa5751a271b2bcd96e0f5ee48b" translate="yes" xml:space="preserve">
          <source>Store the current URL for the request if necessary.</source>
          <target state="translated">必要に応じてリクエストの現在のURLを保存します。</target>
        </trans-unit>
        <trans-unit id="de1ab5c2c1a989cac1a19cfd440f7d7f4a1b8b64" translate="yes" xml:space="preserve">
          <source>Store the uploaded file on a filesystem disk with public visibility.</source>
          <target state="translated">アップロードされたファイルをファイルシステムディスクに保存します。</target>
        </trans-unit>
        <trans-unit id="c5da6296839ee7a34d2a7df01bdb9b538972e462" translate="yes" xml:space="preserve">
          <source>Store the uploaded file on a filesystem disk.</source>
          <target state="translated">アップロードしたファイルをファイルシステムディスクに保存します。</target>
        </trans-unit>
        <trans-unit id="734bf2e4d45b6ccf0b7e116b26a65e37141a91d3" translate="yes" xml:space="preserve">
          <source>Store the uploaded file on the disk with a given name.</source>
          <target state="translated">アップロードしたファイルを指定した名前でディスクに保存します。</target>
        </trans-unit>
        <trans-unit id="244bea90d0c068e6ee81d79da195fc1d0a4e2d0c" translate="yes" xml:space="preserve">
          <source>Store the uploaded file on the disk.</source>
          <target state="translated">アップロードしたファイルをディスクに保存します。</target>
        </trans-unit>
        <trans-unit id="a714714aeff8e60335f99d799c9d897d9484e26a" translate="yes" xml:space="preserve">
          <source>Store the user's current password hash in the session.</source>
          <target state="translated">ユーザーの現在のパスワードハッシュをセッションに保存します。</target>
        </trans-unit>
        <trans-unit id="fb0f8d97eb97e5723f28176b56817bef37895644" translate="yes" xml:space="preserve">
          <source>Store the verbatim blocks and replace them with a temporary placeholder.</source>
          <target state="translated">verbatim ブロックを保存し、一時的なプレースホルダに置き換えます。</target>
        </trans-unit>
        <trans-unit id="7a4616ad94dcec51fad159081d835de305aee264" translate="yes" xml:space="preserve">
          <source>Store::__construct()</source>
          <target state="translated">Store::__construct()</target>
        </trans-unit>
        <trans-unit id="a7014ba40d5490daaa626678c682a54b7945d892" translate="yes" xml:space="preserve">
          <source>Store::ageFlashData()</source>
          <target state="translated">Store::ageFlashData()</target>
        </trans-unit>
        <trans-unit id="d3f6ebad00d224ca523bfafcd9ff5c5f42ba07cf" translate="yes" xml:space="preserve">
          <source>Store::all()</source>
          <target state="translated">Store::all()</target>
        </trans-unit>
        <trans-unit id="e63e353d81f7c4d589d5685574e09f76b262bcfe" translate="yes" xml:space="preserve">
          <source>Store::decrement()</source>
          <target state="translated">Store::decrement()</target>
        </trans-unit>
        <trans-unit id="068a8741c22ecb8676dd3869eb095f704bb787e2" translate="yes" xml:space="preserve">
          <source>Store::exists()</source>
          <target state="translated">Store::exists()</target>
        </trans-unit>
        <trans-unit id="edaff36ddedf37a405c957d5e916b138bd6b4460" translate="yes" xml:space="preserve">
          <source>Store::flash()</source>
          <target state="translated">Store::flash()</target>
        </trans-unit>
        <trans-unit id="4f68dabe2319c6b991bc3c0ee5f986897e3fed57" translate="yes" xml:space="preserve">
          <source>Store::flashInput()</source>
          <target state="translated">Store::flashInput()</target>
        </trans-unit>
        <trans-unit id="8bb2560840ae7076019845ddd7a95ffdedd6a6f4" translate="yes" xml:space="preserve">
          <source>Store::flush()</source>
          <target state="translated">Store::flush()</target>
        </trans-unit>
        <trans-unit id="16e052e27b360d44987d16b43230a9e85b24a6ac" translate="yes" xml:space="preserve">
          <source>Store::forever()</source>
          <target state="translated">Store::forever()</target>
        </trans-unit>
        <trans-unit id="b4eb22602f69b9d3793218881396ec31df666d30" translate="yes" xml:space="preserve">
          <source>Store::forget()</source>
          <target state="translated">Store::forget()</target>
        </trans-unit>
        <trans-unit id="86ab25b1fd6a9eb1a817e9403012d3cd752756e4" translate="yes" xml:space="preserve">
          <source>Store::generateSessionId()</source>
          <target state="translated">Store::generateSessionId()</target>
        </trans-unit>
        <trans-unit id="72a1f27dc8cea8158a3c33ad6f3ac0aae5a0ae24" translate="yes" xml:space="preserve">
          <source>Store::get()</source>
          <target state="translated">Store::get()</target>
        </trans-unit>
        <trans-unit id="561259fff80ac91fb1c680eefc1247f8b5aad145" translate="yes" xml:space="preserve">
          <source>Store::getHandler()</source>
          <target state="translated">Store::getHandler()</target>
        </trans-unit>
        <trans-unit id="cf63d54eca843dc7e7750eae84e415bc84c4b728" translate="yes" xml:space="preserve">
          <source>Store::getId()</source>
          <target state="translated">Store::getId()</target>
        </trans-unit>
        <trans-unit id="5afdff25bcea09b14fbf6ec17cc5f5f26433e1d0" translate="yes" xml:space="preserve">
          <source>Store::getName()</source>
          <target state="translated">Store::getName()</target>
        </trans-unit>
        <trans-unit id="922b1a372f897f7405ff7326753ea5d266780737" translate="yes" xml:space="preserve">
          <source>Store::getOldInput()</source>
          <target state="translated">Store::getOldInput()</target>
        </trans-unit>
        <trans-unit id="c56cd13432a735d09b34cf7fc6dc4963ce9b52fd" translate="yes" xml:space="preserve">
          <source>Store::getPrefix()</source>
          <target state="translated">Store::getPrefix()</target>
        </trans-unit>
        <trans-unit id="7e990a774d1769a919d800f77d7048f4d2c6be11" translate="yes" xml:space="preserve">
          <source>Store::handlerNeedsRequest()</source>
          <target state="translated">Store::handlerNeedsRequest()</target>
        </trans-unit>
        <trans-unit id="ed8a1367949dd3d64cae3be2a7d9ac7ac1352d5e" translate="yes" xml:space="preserve">
          <source>Store::has()</source>
          <target state="translated">Store::has()</target>
        </trans-unit>
        <trans-unit id="348e0b6f7d7e24eda5d5fde2578277d10944ba72" translate="yes" xml:space="preserve">
          <source>Store::hasOldInput()</source>
          <target state="translated">Store::hasOldInput()</target>
        </trans-unit>
        <trans-unit id="34a4d135ac175b1dfc2dfa210fc5922f4711fdbc" translate="yes" xml:space="preserve">
          <source>Store::increment()</source>
          <target state="translated">Store::increment()</target>
        </trans-unit>
        <trans-unit id="ed7687de040a6f14de84d11fe39d11b93acbbdd2" translate="yes" xml:space="preserve">
          <source>Store::invalidate()</source>
          <target state="translated">Store::invalidate()</target>
        </trans-unit>
        <trans-unit id="85816674682c785aa4c25acea249c6dbacc7db90" translate="yes" xml:space="preserve">
          <source>Store::isStarted()</source>
          <target state="translated">Store::isStarted()</target>
        </trans-unit>
        <trans-unit id="9042e531c4a03252086835e89d220324864e20fa" translate="yes" xml:space="preserve">
          <source>Store::isValidId()</source>
          <target state="translated">Store::isValidId()</target>
        </trans-unit>
        <trans-unit id="35ca8ee20e51a4e86775601c5091684d17351cd1" translate="yes" xml:space="preserve">
          <source>Store::keep()</source>
          <target state="translated">Store::keep()</target>
        </trans-unit>
        <trans-unit id="fd72252191bb5c850f36ab4171f55432161af4af" translate="yes" xml:space="preserve">
          <source>Store::loadSession()</source>
          <target state="translated">Store::loadSession()</target>
        </trans-unit>
        <trans-unit id="8f2fc8bb7a368e27f4194fcff0cc9fcef0826f7f" translate="yes" xml:space="preserve">
          <source>Store::many()</source>
          <target state="translated">Store::many()</target>
        </trans-unit>
        <trans-unit id="84e72e1c37985dbf913f5915b1267e5c547d4173" translate="yes" xml:space="preserve">
          <source>Store::mergeNewFlashes()</source>
          <target state="translated">Store::mergeNewFlashes()</target>
        </trans-unit>
        <trans-unit id="850871162443c8f386ff75a13f663ad35d62bddc" translate="yes" xml:space="preserve">
          <source>Store::migrate()</source>
          <target state="translated">Store::migrate()</target>
        </trans-unit>
        <trans-unit id="121bc483bfd6ce226a1c1dfb15bf0e588a5a80a9" translate="yes" xml:space="preserve">
          <source>Store::now()</source>
          <target state="translated">Store::now()</target>
        </trans-unit>
        <trans-unit id="12534c30ddac49aba9d90a0e401ba45c10aa4311" translate="yes" xml:space="preserve">
          <source>Store::prepareForStorage()</source>
          <target state="translated">Store::prepareForStorage()</target>
        </trans-unit>
        <trans-unit id="01467d7cd16d2219c77dc5e807beed1e4b2267fe" translate="yes" xml:space="preserve">
          <source>Store::prepareForUnserialize()</source>
          <target state="translated">Store::prepareForUnserialize()</target>
        </trans-unit>
        <trans-unit id="6a9bf375ab667a08d2e3d068a66efa51e8ed2966" translate="yes" xml:space="preserve">
          <source>Store::previousUrl()</source>
          <target state="translated">Store::previousUrl()</target>
        </trans-unit>
        <trans-unit id="a1729447ab1545ea79f2f8f43e5fffee8438c36f" translate="yes" xml:space="preserve">
          <source>Store::pull()</source>
          <target state="translated">Store::pull()</target>
        </trans-unit>
        <trans-unit id="f03ca3846478a82ffcf388f3f3db38867915b0f2" translate="yes" xml:space="preserve">
          <source>Store::push()</source>
          <target state="translated">Store::push()</target>
        </trans-unit>
        <trans-unit id="e94fd891a84198bfefb2345e10554a505a08ce69" translate="yes" xml:space="preserve">
          <source>Store::put()</source>
          <target state="translated">Store::put()</target>
        </trans-unit>
        <trans-unit id="501448a4649f5362f73680794d7ef9bb4af2543a" translate="yes" xml:space="preserve">
          <source>Store::putMany()</source>
          <target state="translated">Store::putMany()</target>
        </trans-unit>
        <trans-unit id="9e0f899ea04c0595f5c5d1481a95f65565d4b696" translate="yes" xml:space="preserve">
          <source>Store::readFromHandler()</source>
          <target state="translated">Store::readFromHandler()</target>
        </trans-unit>
        <trans-unit id="2afb18333fc6c69a2b3635ddb14dca72da64d2c1" translate="yes" xml:space="preserve">
          <source>Store::reflash()</source>
          <target state="translated">Store::reflash()</target>
        </trans-unit>
        <trans-unit id="5bec34de60172000e92a1df51e400a0181bc4bc3" translate="yes" xml:space="preserve">
          <source>Store::regenerate()</source>
          <target state="translated">Store::regenerate()</target>
        </trans-unit>
        <trans-unit id="12d83181ebf00d1176327cf25a5ba30cc916137c" translate="yes" xml:space="preserve">
          <source>Store::regenerateToken()</source>
          <target state="translated">Store::regenerateToken()</target>
        </trans-unit>
        <trans-unit id="57cc88d25cd1b7c02cf5f1a09f50c275d5383f36" translate="yes" xml:space="preserve">
          <source>Store::remember()</source>
          <target state="translated">Store::remember()</target>
        </trans-unit>
        <trans-unit id="bf82023766dc344061792dd0eb82119c91f18217" translate="yes" xml:space="preserve">
          <source>Store::remove()</source>
          <target state="translated">Store::remove()</target>
        </trans-unit>
        <trans-unit id="763ef9f5021f20907b4bbeece3df0e56a77db948" translate="yes" xml:space="preserve">
          <source>Store::removeFromOldFlashData()</source>
          <target state="translated">Store::removeFromOldFlashData()</target>
        </trans-unit>
        <trans-unit id="941bafd7df5a092844226d82390d7247f20df4d1" translate="yes" xml:space="preserve">
          <source>Store::replace()</source>
          <target state="translated">Store::replace()</target>
        </trans-unit>
        <trans-unit id="b277962a23848cb4d0caa2d1878314b92cb1e701" translate="yes" xml:space="preserve">
          <source>Store::save()</source>
          <target state="translated">Store::save()</target>
        </trans-unit>
        <trans-unit id="b10bdf2df1eb62ffe92d48107ad50c5a58a7b8f1" translate="yes" xml:space="preserve">
          <source>Store::setExists()</source>
          <target state="translated">Store::setExists()</target>
        </trans-unit>
        <trans-unit id="a8dbe86e0fb080916aeecca52e6f9d7e27929191" translate="yes" xml:space="preserve">
          <source>Store::setId()</source>
          <target state="translated">Store::setId()</target>
        </trans-unit>
        <trans-unit id="5f8fac2c5343dfdcec24308e8f20858476f09c4e" translate="yes" xml:space="preserve">
          <source>Store::setName()</source>
          <target state="translated">Store::setName()</target>
        </trans-unit>
        <trans-unit id="4e35f2233d28dd8fd131a8e665178c77d17f1603" translate="yes" xml:space="preserve">
          <source>Store::setPreviousUrl()</source>
          <target state="translated">Store::setPreviousUrl()</target>
        </trans-unit>
        <trans-unit id="6eb17b8e0577d26a475c096db43852a6302fc23d" translate="yes" xml:space="preserve">
          <source>Store::setRequestOnHandler()</source>
          <target state="translated">Store::setRequestOnHandler()</target>
        </trans-unit>
        <trans-unit id="beb433046e35d70244b19f18b5c218d3203cd8f8" translate="yes" xml:space="preserve">
          <source>Store::start()</source>
          <target state="translated">Store::start()</target>
        </trans-unit>
        <trans-unit id="63869a0f364528ad686ed22081620309ca7008e7" translate="yes" xml:space="preserve">
          <source>Store::token()</source>
          <target state="translated">Store::token()</target>
        </trans-unit>
        <trans-unit id="67b5fefd39cf2223cfc9023e91571fd2a87cd76a" translate="yes" xml:space="preserve">
          <source>Stories</source>
          <target state="translated">Stories</target>
        </trans-unit>
        <trans-unit id="9798564ec647160384d06e599262fd001f77bdd6" translate="yes" xml:space="preserve">
          <source>Stories group a set of tasks under a single, convenient name, allowing you to group small, focused tasks into large tasks. For instance, a &lt;code&gt;deploy&lt;/code&gt; story may run the &lt;code&gt;git&lt;/code&gt; and &lt;code&gt;composer&lt;/code&gt; tasks by listing the task names within its definition:</source>
          <target state="translated">ストーリーは、一連のタスクを1つのわかりやすい名前でグループ化します。これにより、小さな集中したタスクを大きなタスクにグループ化できます。たとえば、 &lt;code&gt;deploy&lt;/code&gt; ストーリーでは、定義内にタスク名をリストすることで、 &lt;code&gt;git&lt;/code&gt; および &lt;code&gt;composer&lt;/code&gt; タスクを実行できます。</target>
        </trans-unit>
        <trans-unit id="5058d23d7b4c6c3dae4bcb5cbf5c3fdf33f9c0ed" translate="yes" xml:space="preserve">
          <source>Storing Data</source>
          <target state="translated">データの保存</target>
        </trans-unit>
        <trans-unit id="b857f9f57e37609a138c707c2ff4ce3b29afed5b" translate="yes" xml:space="preserve">
          <source>Storing Files</source>
          <target state="translated">ファイルの保存</target>
        </trans-unit>
        <trans-unit id="bae394be4488b9559d8d664b7debad2034b17fab" translate="yes" xml:space="preserve">
          <source>Storing Items Forever</source>
          <target state="translated">アイテムを永遠に保存する</target>
        </trans-unit>
        <trans-unit id="5f6c1f22e0dd290005b8ca0c3e6a11f2424a718b" translate="yes" xml:space="preserve">
          <source>Storing Items In The Cache</source>
          <target state="translated">キャッシュにアイテムを保存する</target>
        </trans-unit>
        <trans-unit id="cc25dd2c53f17021f2766c81db6a4d8843cd39a2" translate="yes" xml:space="preserve">
          <source>Storing Tagged Cache Items</source>
          <target state="translated">タグ付きキャッシュ アイテムの保存</target>
        </trans-unit>
        <trans-unit id="665781126599a44b28193129d49fac32356ddbe6" translate="yes" xml:space="preserve">
          <source>Storing Uploaded Files</source>
          <target state="translated">アップロードしたファイルの保存</target>
        </trans-unit>
        <trans-unit id="5dfe08d5f0fd501cb4cb5c9b5ab1306e28c9aaa5" translate="yes" xml:space="preserve">
          <source>Str</source>
          <target state="translated">Str</target>
        </trans-unit>
        <trans-unit id="e70e967bae82cc29b47374d1f0ef2e6afa2b63f4" translate="yes" xml:space="preserve">
          <source>Str (Support)</source>
          <target state="translated">Str (サポート)</target>
        </trans-unit>
        <trans-unit id="80bb9e6b639e19cd350d690a88be9da9112d89fc" translate="yes" xml:space="preserve">
          <source>Str::after()</source>
          <target state="translated">Str::after()</target>
        </trans-unit>
        <trans-unit id="0c94599b874504c72c2a27aa6b2e699e742da5e5" translate="yes" xml:space="preserve">
          <source>Str::ascii()</source>
          <target state="translated">Str::ascii()</target>
        </trans-unit>
        <trans-unit id="4ce68883ff64bacf9fdef1600aaa66472329e821" translate="yes" xml:space="preserve">
          <source>Str::before()</source>
          <target state="translated">Str::before()</target>
        </trans-unit>
        <trans-unit id="fa75bf9efa35589cfe9f016b6924b4546be2e3e8" translate="yes" xml:space="preserve">
          <source>Str::camel()</source>
          <target state="translated">Str::camel()</target>
        </trans-unit>
        <trans-unit id="3ae41f1285670a032a0b90adcbd057c5e894a9d8" translate="yes" xml:space="preserve">
          <source>Str::charsArray()</source>
          <target state="translated">Str::charsArray()</target>
        </trans-unit>
        <trans-unit id="73f28f329b86bbc27d5a7c4c550480509519213d" translate="yes" xml:space="preserve">
          <source>Str::contains()</source>
          <target state="translated">Str::contains()</target>
        </trans-unit>
        <trans-unit id="8d3464ac6aa7f72486a68e403ca953dddd4c0707" translate="yes" xml:space="preserve">
          <source>Str::endsWith()</source>
          <target state="translated">Str::endsWith()</target>
        </trans-unit>
        <trans-unit id="6efc0bb278e286947de99965b8963563ee02ed8f" translate="yes" xml:space="preserve">
          <source>Str::finish()</source>
          <target state="translated">Str::finish()</target>
        </trans-unit>
        <trans-unit id="b1bf28f3a32775a353d09d583cf6b4d67253671b" translate="yes" xml:space="preserve">
          <source>Str::is()</source>
          <target state="translated">Str::is()</target>
        </trans-unit>
        <trans-unit id="06d623847de72d09265db87783c80b83425cb9d7" translate="yes" xml:space="preserve">
          <source>Str::kebab()</source>
          <target state="translated">Str::kebab()</target>
        </trans-unit>
        <trans-unit id="14a679cffff2a1e21632fc58c0f5165fb0afc382" translate="yes" xml:space="preserve">
          <source>Str::languageSpecificCharsArray()</source>
          <target state="translated">Str::languageSpecificCharsArray()</target>
        </trans-unit>
        <trans-unit id="2a0399e5a58dc114030b163ea7ac4a1631fab007" translate="yes" xml:space="preserve">
          <source>Str::length()</source>
          <target state="translated">Str::length()</target>
        </trans-unit>
        <trans-unit id="7e6ed57e5ae1b3efbcd0eec594557e4761233c0a" translate="yes" xml:space="preserve">
          <source>Str::limit()</source>
          <target state="translated">Str::limit()</target>
        </trans-unit>
        <trans-unit id="9691a9c7ec3537545047bab14882d6438f7f4a7a" translate="yes" xml:space="preserve">
          <source>Str::lower()</source>
          <target state="translated">Str::lower()</target>
        </trans-unit>
        <trans-unit id="fabf09f476debf6ca5e462df3ce15f4975784e3d" translate="yes" xml:space="preserve">
          <source>Str::orderedUuid()</source>
          <target state="translated">Str::orderedUuid()</target>
        </trans-unit>
        <trans-unit id="d5a7f15d99c7fd41f6b8560bab687df7a0891a93" translate="yes" xml:space="preserve">
          <source>Str::parseCallback()</source>
          <target state="translated">Str::parseCallback()</target>
        </trans-unit>
        <trans-unit id="a33b5a4a4ac0ea3176858015cbd85fb79ee931ec" translate="yes" xml:space="preserve">
          <source>Str::plural()</source>
          <target state="translated">Str::plural()</target>
        </trans-unit>
        <trans-unit id="97f08d7d0fcbb892f318f2fd6eab793dde5e96f7" translate="yes" xml:space="preserve">
          <source>Str::random()</source>
          <target state="translated">Str::random()</target>
        </trans-unit>
        <trans-unit id="c54b95edda4b4ee661b27274ec570efc7393b4e5" translate="yes" xml:space="preserve">
          <source>Str::replaceArray()</source>
          <target state="translated">Str::replaceArray()</target>
        </trans-unit>
        <trans-unit id="bd297056c34416fe309527f76de924b4fde63fbf" translate="yes" xml:space="preserve">
          <source>Str::replaceFirst()</source>
          <target state="translated">Str::replaceFirst()</target>
        </trans-unit>
        <trans-unit id="7a2321731c46873b43b6a605b7a2ea3cbc228444" translate="yes" xml:space="preserve">
          <source>Str::replaceLast()</source>
          <target state="translated">Str::replaceLast()</target>
        </trans-unit>
        <trans-unit id="146bd634f32d32ffe11d3a22a83c5f9297966aad" translate="yes" xml:space="preserve">
          <source>Str::singular()</source>
          <target state="translated">Str::singular()</target>
        </trans-unit>
        <trans-unit id="1b5e1783b3827cc47c9208de28b01fe821a7a01e" translate="yes" xml:space="preserve">
          <source>Str::slug()</source>
          <target state="translated">Str::slug()</target>
        </trans-unit>
        <trans-unit id="57d47c77ccd664076e3ac1f07d8fcfec94ebd7b1" translate="yes" xml:space="preserve">
          <source>Str::snake()</source>
          <target state="translated">Str::snake()</target>
        </trans-unit>
        <trans-unit id="bf194d27f1866a3a0cf5de35194554ac385ae4ca" translate="yes" xml:space="preserve">
          <source>Str::start()</source>
          <target state="translated">Str::start()</target>
        </trans-unit>
        <trans-unit id="c99ddd20c6c7b0ac90b62af7a517d6b59e22350e" translate="yes" xml:space="preserve">
          <source>Str::startsWith()</source>
          <target state="translated">Str::startsWith()</target>
        </trans-unit>
        <trans-unit id="0141da7ca35c0d93c6a6a540aaeab9a3290c0593" translate="yes" xml:space="preserve">
          <source>Str::studly()</source>
          <target state="translated">Str::studly()</target>
        </trans-unit>
        <trans-unit id="06219084dc9d3f2be7cf0429110281faa25428cc" translate="yes" xml:space="preserve">
          <source>Str::substr()</source>
          <target state="translated">Str::substr()</target>
        </trans-unit>
        <trans-unit id="7a2d7920196e0d2e9b6a787203fdfe8b0c24c467" translate="yes" xml:space="preserve">
          <source>Str::title()</source>
          <target state="translated">Str::title()</target>
        </trans-unit>
        <trans-unit id="367641e1745f06901ccc0b66209bbcb7c6626c4a" translate="yes" xml:space="preserve">
          <source>Str::ucfirst()</source>
          <target state="translated">Str::ucfirst()</target>
        </trans-unit>
        <trans-unit id="6670b48534c6ba473f4b15ad23d77f5f1242514a" translate="yes" xml:space="preserve">
          <source>Str::upper()</source>
          <target state="translated">Str::upper()</target>
        </trans-unit>
        <trans-unit id="c007a3650da151b252fe59589865a6174dd7eb31" translate="yes" xml:space="preserve">
          <source>Str::uuid()</source>
          <target state="translated">Str::uuid()</target>
        </trans-unit>
        <trans-unit id="00c389707532c440e6e264ded075470444bb03b3" translate="yes" xml:space="preserve">
          <source>Str::words()</source>
          <target state="translated">Str::words()</target>
        </trans-unit>
        <trans-unit id="37fa5721f906864ec25a2bd4c5e0a1558ed76ec5" translate="yes" xml:space="preserve">
          <source>Streamed Downloads</source>
          <target state="translated">ストリーミングダウンロード</target>
        </trans-unit>
        <trans-unit id="b037da385ca16e0a30c117da36ac8b04293f8fc5" translate="yes" xml:space="preserve">
          <source>StreamedResponse</source>
          <target state="translated">StreamedResponse</target>
        </trans-unit>
        <trans-unit id="5a59d2bdae815f51166a86c3395febd467e36737" translate="yes" xml:space="preserve">
          <source>StreamedResponse
    download(string $path, string|null $name = null, array $headers = [])</source>
          <target state="translated">StreamedResponse download(string $path,string|null $name=null,array $headers=[])</target>
        </trans-unit>
        <trans-unit id="cae8b0434ea8944fdbbe36b9e29dfd641a14363b" translate="yes" xml:space="preserve">
          <source>StreamedResponse
    response(string $path, string|null $name = null, array $headers = [], string|null $disposition = 'inline')</source>
          <target state="translated">StreamedResponse response(string $path,string|null $name=null,array $headers=[],string|null $disposition='inline')</target>
        </trans-unit>
        <trans-unit id="7bb7cae309cca77a5c736d80451d39fd2df2bb87" translate="yes" xml:space="preserve">
          <source>StreamedResponse
    stream(&lt;a href=&quot;http://php.net/Closure&quot;&gt;Closure&lt;/a&gt; $callback, int $status = 200, array $headers = [])</source>
          <target state="translated">StreamedResponse stream（&lt;a href=&quot;http://php.net/Closure&quot;&gt;Closure&lt;/a&gt; $ callback、int $ status = 200、array $ headers = []）</target>
        </trans-unit>
        <trans-unit id="1e747650ae19bd1ca1739b62298bdba13ab4d969" translate="yes" xml:space="preserve">
          <source>StreamedResponse
    streamDownload(&lt;a href=&quot;http://php.net/Closure&quot;&gt;Closure&lt;/a&gt; $callback, string|null $name = null, array $headers = [], string|null $disposition = 'attachment')</source>
          <target state="translated">StreamedResponse streamDownload（&lt;a href=&quot;http://php.net/Closure&quot;&gt;Closure&lt;/a&gt; $ callback、string | null $ name = null、array $ headers = []、string | null $ disposition = 'attachment'）</target>
        </trans-unit>
        <trans-unit id="3816c4beac471c733eed1d91c213f8c2b6a29262" translate="yes" xml:space="preserve">
          <source>Strings</source>
          <target state="translated">Strings</target>
        </trans-unit>
        <trans-unit id="5ee3c84299300f8e1bcabd06ff6f3449f2b86649" translate="yes" xml:space="preserve">
          <source>Strings &amp;amp; Arrays</source>
          <target state="translated">文字列と配列</target>
        </trans-unit>
        <trans-unit id="67251669d2c32ff12f91ec69b71f7a2d7cbf9302" translate="yes" xml:space="preserve">
          <source>Strip off the table name or alias from a column identifier.</source>
          <target state="translated">カラム識別子からテーブル名またはエイリアスを削除します。</target>
        </trans-unit>
        <trans-unit id="562fdc9fbd3b70a6e42cca8503b479241f835e4e" translate="yes" xml:space="preserve">
          <source>Strip the parentheses from the given expression.</source>
          <target state="translated">与えられた式から括弧を取り除きます。</target>
        </trans-unit>
        <trans-unit id="4d08ec58743327ba502c47c0f184119d8e65990a" translate="yes" xml:space="preserve">
          <source>Stripe</source>
          <target state="translated">Stripe</target>
        </trans-unit>
        <trans-unit id="f3ea4b794aa3b50ed4a3533beca64b371915c70b" translate="yes" xml:space="preserve">
          <source>StyleCI</source>
          <target state="translated">StyleCI</target>
        </trans-unit>
        <trans-unit id="957400ac1d92f82a856a3f939ce5438d5096957c" translate="yes" xml:space="preserve">
          <source>Stylus</source>
          <target state="translated">Stylus</target>
        </trans-unit>
        <trans-unit id="b8d80cf57402a3ff7ffbd3387834034d37d8ff3a" translate="yes" xml:space="preserve">
          <source>Sub-Domain Routing</source>
          <target state="translated">サブドメインルーティング</target>
        </trans-unit>
        <trans-unit id="a06de88c8f008e1eab3e6e08a89464c0cd0f6631" translate="yes" xml:space="preserve">
          <source>Sub-Query Joins</source>
          <target state="translated">サブクエリーの結合</target>
        </trans-unit>
        <trans-unit id="fb10f231c44bfe830e193ba241e8b692e1636921" translate="yes" xml:space="preserve">
          <source>Subscribe to a set of given channels for messages.</source>
          <target state="translated">メッセージのために与えられたチャンネルのセットを購読します。</target>
        </trans-unit>
        <trans-unit id="e44418dc305206dc8c9401c63fc4f8e71c63386c" translate="yes" xml:space="preserve">
          <source>Subscribe to a set of given channels with wildcards.</source>
          <target state="translated">ワイルドカードで指定されたチャンネルのセットを購読します。</target>
        </trans-unit>
        <trans-unit id="96fa6bf7856007eab0f2c9639a5180823f010b73" translate="yes" xml:space="preserve">
          <source>Subscription Quantity</source>
          <target state="translated">購読量</target>
        </trans-unit>
        <trans-unit id="0d2eae624a00ff5f5d72f580aa355e0a046af7d0" translate="yes" xml:space="preserve">
          <source>Subscription Taxes</source>
          <target state="translated">購読税</target>
        </trans-unit>
        <trans-unit id="37134d5b3ff743ef400e54205a1a2255fbfe96ca" translate="yes" xml:space="preserve">
          <source>Subscription Trials</source>
          <target state="translated">定期購読トライアル</target>
        </trans-unit>
        <trans-unit id="c99c4ce44cce21340220fd5b1356587a4fa28933" translate="yes" xml:space="preserve">
          <source>Subscription quantities are only supported by the Stripe edition of Cashier. Braintree does not have a feature that corresponds to Stripe's &quot;quantity&quot;.</source>
          <target state="translated">サブスクリプションの「数量」はStripe版の「Cashier」でのみ対応しています。BraintreeにはStripeの「数量」に対応した機能はありません。</target>
        </trans-unit>
        <trans-unit id="5697fd85adbd13bf85f28712f9a136e80cc8067e" translate="yes" xml:space="preserve">
          <source>Subscriptions</source>
          <target state="translated">Subscriptions</target>
        </trans-unit>
        <trans-unit id="606886d6ad243ecec3092afc64a03172420afad2" translate="yes" xml:space="preserve">
          <source>Substitute the implicit Eloquent model bindings for the route.</source>
          <target state="translated">ルートに暗黙のEloquentモデルバインディングを代入します。</target>
        </trans-unit>
        <trans-unit id="73eaf2d855f6349eda572bbd5280b34dd336723a" translate="yes" xml:space="preserve">
          <source>Substitute the route bindings onto the route.</source>
          <target state="translated">ルートのバインディングをルートに置き換えます。</target>
        </trans-unit>
        <trans-unit id="0b64294d2f38f96778398fd253615295fc43acc8" translate="yes" xml:space="preserve">
          <source>SubstituteBindings</source>
          <target state="translated">SubstituteBindings</target>
        </trans-unit>
        <trans-unit id="821eb01e55ae8a125fda29ffd24e1ebc0c0286b9" translate="yes" xml:space="preserve">
          <source>SubstituteBindings (Routing\Middleware)</source>
          <target state="translated">SubstituteBindings (RoutingMiddleware)</target>
        </trans-unit>
        <trans-unit id="627d54124c6e88f2ec904b9b2389b303c011ccba" translate="yes" xml:space="preserve">
          <source>SubstituteBindings::__construct()</source>
          <target state="translated">SubstituteBindings::__construct()</target>
        </trans-unit>
        <trans-unit id="c92979abe196647c7c2f65daad550e7da293ed7f" translate="yes" xml:space="preserve">
          <source>SubstituteBindings::handle()</source>
          <target state="translated">SubstituteBindings::handle()</target>
        </trans-unit>
        <trans-unit id="e870d9dd2dde18ea660208d9e3208e395041c09f" translate="yes" xml:space="preserve">
          <source>Supervisor Configuration</source>
          <target state="translated">スーパーバイザの設定</target>
        </trans-unit>
        <trans-unit id="98027b80e476ad42adcf652519cf48b6f97b39c3" translate="yes" xml:space="preserve">
          <source>Supervisor configuration files are typically stored in the &lt;code&gt;/etc/supervisor/conf.d&lt;/code&gt; directory. Within this directory, you may create any number of configuration files that instruct supervisor how your processes should be monitored. For example, let's create a &lt;code&gt;laravel-worker.conf&lt;/code&gt; file that starts and monitors a &lt;code&gt;queue:work&lt;/code&gt; process:</source>
          <target state="translated">スーパーバイザ構成ファイルは通常、 &lt;code&gt;/etc/supervisor/conf.d&lt;/code&gt; ディレクトリに格納されます。このディレクトリ内で、プロセスの監視方法をスーパーバイザに指示する構成ファイルをいくつでも作成できます。たとえば、 &lt;code&gt;queue:work&lt;/code&gt; プロセスを開始して監視する &lt;code&gt;laravel-worker.conf&lt;/code&gt; ファイルを作成してみましょう。</target>
        </trans-unit>
        <trans-unit id="f9dbd9f30d89f33d957a53e5b97b069bcc309d1c" translate="yes" xml:space="preserve">
          <source>Supervisor is a process monitor for the Linux operating system, and will automatically restart your &lt;code&gt;queue:work&lt;/code&gt; process if it fails. To install Supervisor on Ubuntu, you may use the following command:</source>
          <target state="translated">スーパーバイザーはLinuxオペレーティングシステムのプロセスモニターであり、失敗した場合、 &lt;code&gt;queue:work&lt;/code&gt; プロセスを自動的に再起動します。Ubuntuにスーパーバイザをインストールするには、次のコマンドを使用できます。</target>
        </trans-unit>
        <trans-unit id="6e493310c046ebfb17c0393ca5fda7111c2d8062" translate="yes" xml:space="preserve">
          <source>Supplementing Resource Controllers</source>
          <target state="translated">リソースコントローラの補足</target>
        </trans-unit>
        <trans-unit id="f32d5a3b17e614297417cc279a7ec1cd02274d65" translate="yes" xml:space="preserve">
          <source>Support</source>
          <target state="translated">Support</target>
        </trans-unit>
        <trans-unit id="4f6d2544707913fde4ad92764f7202eaeb6a8e12" translate="yes" xml:space="preserve">
          <source>Support Policy</source>
          <target state="translated">サポートポリシー</target>
        </trans-unit>
        <trans-unit id="36b957331f3bb30b3aef03fa31b68fa2f4d9a22a" translate="yes" xml:space="preserve">
          <source>Support\Facades</source>
          <target state="translated">Support\Facades</target>
        </trans-unit>
        <trans-unit id="f46b79efaadaab9785ae1aa42fddf045fc96cb54" translate="yes" xml:space="preserve">
          <source>Support\Testing</source>
          <target state="translated">Support\Testing</target>
        </trans-unit>
        <trans-unit id="63dc9987ba0e1702e99318de774c6d0e4309faf2" translate="yes" xml:space="preserve">
          <source>Support\Traits</source>
          <target state="translated">Support\Traits</target>
        </trans-unit>
        <trans-unit id="e004d859b85d48a6c065333eabe8a282b90ed472" translate="yes" xml:space="preserve">
          <source>Supported &lt;code&gt;policy&lt;/code&gt; values include: &lt;code&gt;none&lt;/code&gt;, &lt;code&gt;download&lt;/code&gt;, &lt;code&gt;upload&lt;/code&gt;, and &lt;code&gt;public&lt;/code&gt;.</source>
          <target state="translated">サポートされている &lt;code&gt;policy&lt;/code&gt; 値には、 &lt;code&gt;none&lt;/code&gt; 、 &lt;code&gt;download&lt;/code&gt; 、 &lt;code&gt;upload&lt;/code&gt; 、および &lt;code&gt;public&lt;/code&gt; があります。</target>
        </trans-unit>
        <trans-unit id="b422a644fce04001289cf656a086a8bf89f0c986" translate="yes" xml:space="preserve">
          <source>SupportsBasicAuth</source>
          <target state="translated">SupportsBasicAuth</target>
        </trans-unit>
        <trans-unit id="37bbf8a2a599f4a0ff0d34d20fb2e5e610307fe7" translate="yes" xml:space="preserve">
          <source>SupportsBasicAuth (Contracts)</source>
          <target state="translated">SupportsBasicAuth (Contracts)</target>
        </trans-unit>
        <trans-unit id="b932ae6ef4e11ab0e64a7add25e54c2fd0bce13d" translate="yes" xml:space="preserve">
          <source>SupportsBasicAuth::basic()</source>
          <target state="translated">SupportsBasicAuth::basic()</target>
        </trans-unit>
        <trans-unit id="b6994a6eb33c957bc49ea3ec29b5858b66464c06" translate="yes" xml:space="preserve">
          <source>SupportsBasicAuth::onceBasic()</source>
          <target state="translated">SupportsBasicAuth::onceBasic()</target>
        </trans-unit>
        <trans-unit id="7e366f8d90c0579695faeb8be33c35755b4ba64d" translate="yes" xml:space="preserve">
          <source>SupportsDefaultModels</source>
          <target state="translated">SupportsDefaultModels</target>
        </trans-unit>
        <trans-unit id="73c1273da59f1a99033f6b2056f20de960c2ab61" translate="yes" xml:space="preserve">
          <source>SupportsDefaultModels (Database\Eloquent\Relations)</source>
          <target state="translated">SupportsDefaultModels (DatabaseEloquent\Relations)</target>
        </trans-unit>
        <trans-unit id="bfc3f7ce13629176cbb7e2c57d9169ad757e43c7" translate="yes" xml:space="preserve">
          <source>SupportsDefaultModels::getDefaultFor()</source>
          <target state="translated">SupportsDefaultModels::getDefaultFor()</target>
        </trans-unit>
        <trans-unit id="a48f85326f2d9673a11a9dfdf83afdb8a5646766" translate="yes" xml:space="preserve">
          <source>SupportsDefaultModels::newRelatedInstanceFor()</source>
          <target state="translated">SupportsDefaultModels::newRelatedInstanceFor()</target>
        </trans-unit>
        <trans-unit id="c1b98a0147ace2ec44af9678888337a9d37f4a26" translate="yes" xml:space="preserve">
          <source>SupportsDefaultModels::withDefault()</source>
          <target state="translated">SupportsDefaultModels::withDefault()</target>
        </trans-unit>
        <trans-unit id="318d115311aa11842be71bbdd73df1da7bef753d" translate="yes" xml:space="preserve">
          <source>Swift_Attachment</source>
          <target state="translated">Swift_Attachment</target>
        </trans-unit>
        <trans-unit id="9f6e938a0a4ff5511dd4a5d65254e476466d1195" translate="yes" xml:space="preserve">
          <source>Swift_Events_EventListener</source>
          <target state="translated">Swift_Events_EventListener</target>
        </trans-unit>
        <trans-unit id="9ca6d5de86c85809b1e462b1d804ee7f77d67a12" translate="yes" xml:space="preserve">
          <source>Swift_Mailer</source>
          <target state="translated">Swift_Mailer</target>
        </trans-unit>
        <trans-unit id="2118d70a74f3d2113d4102d03f5e9f739dc50d01" translate="yes" xml:space="preserve">
          <source>Swift_Mailer
    getSwiftMailer()</source>
          <target state="translated">Swift_Mailer getSwiftMailer()</target>
        </trans-unit>
        <trans-unit id="cd9c20046161feaa780f6ef968023192cd5722bb" translate="yes" xml:space="preserve">
          <source>Swift_Message</source>
          <target state="translated">Swift_Message</target>
        </trans-unit>
        <trans-unit id="a655038e58e48cea4d9b688c6a0fb4b491d3b75d" translate="yes" xml:space="preserve">
          <source>Swift_Message
    getSwiftMessage()</source>
          <target state="translated">Swift_Message getSwiftMessage()</target>
        </trans-unit>
        <trans-unit id="b7b17f308c8c29ca8edc4b8fd30c50e78364de66" translate="yes" xml:space="preserve">
          <source>Swift_Mime_Attachment</source>
          <target state="translated">Swift_Mime_Attachment</target>
        </trans-unit>
        <trans-unit id="aa3d2910ed1b8e6cc04bb7ce0ebd84e6b69495ac" translate="yes" xml:space="preserve">
          <source>Swift_Mime_SimpleMessage</source>
          <target state="translated">Swift_Mime_SimpleMessage</target>
        </trans-unit>
        <trans-unit id="83945c5a4b5cd08cbab8de6c08beb64848abb830" translate="yes" xml:space="preserve">
          <source>Swift_Mime_SimpleMimeEntity</source>
          <target state="translated">Swift_Mime_SimpleMimeEntity</target>
        </trans-unit>
        <trans-unit id="c09635f3874ccaad8bc1821c334bf4d08a1a4571" translate="yes" xml:space="preserve">
          <source>Swift_SendmailTransport</source>
          <target state="translated">Swift_SendmailTransport</target>
        </trans-unit>
        <trans-unit id="cd280165208e26d28b66f98c951250663d483448" translate="yes" xml:space="preserve">
          <source>Swift_SmtpTransport</source>
          <target state="translated">Swift_SmtpTransport</target>
        </trans-unit>
        <trans-unit id="7d140830d04307683300b42c263a4bad9b2b05e6" translate="yes" xml:space="preserve">
          <source>Switch Statements</source>
          <target state="translated">ステートメントを切り替える</target>
        </trans-unit>
        <trans-unit id="9229576d0318fbdc6f7d492114ca1e2ffd7a62e2" translate="yes" xml:space="preserve">
          <source>Switch statements can be constructed using the &lt;code&gt;@switch&lt;/code&gt;, &lt;code&gt;@case&lt;/code&gt;, &lt;code&gt;@break&lt;/code&gt;, &lt;code&gt;@default&lt;/code&gt; and &lt;code&gt;@endswitch&lt;/code&gt; directives:</source>
          <target state="translated">スイッチステートメントは、 &lt;code&gt;@switch&lt;/code&gt; 、 &lt;code&gt;@case&lt;/code&gt; 、 &lt;code&gt;@break&lt;/code&gt; 、 &lt;code&gt;@default&lt;/code&gt; 、および &lt;code&gt;@endswitch&lt;/code&gt; ディレクティブを使用して作成できます。</target>
        </trans-unit>
        <trans-unit id="77d91975de607ee2a247518add408ba098bb2734" translate="yes" xml:space="preserve">
          <source>Symbolic Links On Windows</source>
          <target state="translated">Windowsでのシンボリックリンク</target>
        </trans-unit>
        <trans-unit id="d1c19bea4e2a2e0b334586da45d1990f4121ffec" translate="yes" xml:space="preserve">
          <source>Symfony</source>
          <target state="translated">Symfony</target>
        </trans-unit>
        <trans-unit id="cf3b6a772ee023cb55d69054ccd8635cdd5ad880" translate="yes" xml:space="preserve">
          <source>Symfony Dump Server</source>
          <target state="translated">symfony ダンプサーバー</target>
        </trans-unit>
        <trans-unit id="b7ff4cdde567a32692a337907a7e4cafbf705094" translate="yes" xml:space="preserve">
          <source>Symfony HttpFoundation, which manages file downloads, requires the file being downloaded to have an ASCII file name.</source>
          <target state="translated">ファイルのダウンロードを管理するSymfony HttpFoundationはダウンロードされるファイルがASCIIファイル名を持つことを要求します。</target>
        </trans-unit>
        <trans-unit id="02201953e4b58379ef1f073b95cd74f409065fa4" translate="yes" xml:space="preserve">
          <source>Sync a single original attribute with its current value.</source>
          <target state="translated">単一の元の属性を現在の値に同期させます。</target>
        </trans-unit>
        <trans-unit id="2928193c863b6187eb1ebdb57fd78123cfb0fdfb" translate="yes" xml:space="preserve">
          <source>Sync the changed attributes.</source>
          <target state="translated">変更された属性を同期させます。</target>
        </trans-unit>
        <trans-unit id="593aecd1768b173aa525e11937457cb4fb6febd8" translate="yes" xml:space="preserve">
          <source>Sync the intermediate tables with a list of IDs or collection of models.</source>
          <target state="translated">中間テーブルをIDのリストまたはモデルのコレクションと同期させます。</target>
        </trans-unit>
        <trans-unit id="48c7a0341a6020e5593bfc80b7ac419cbb64306b" translate="yes" xml:space="preserve">
          <source>Sync the intermediate tables with a list of IDs without detaching.</source>
          <target state="translated">中間テーブルをデタッチせずにIDのリストで同期します。</target>
        </trans-unit>
        <trans-unit id="1b1d85fcfd8b9723440aa7c8385ae65b4f6abdfc" translate="yes" xml:space="preserve">
          <source>Sync the original attributes with the current.</source>
          <target state="translated">元の属性を現在の属性に同期させます。</target>
        </trans-unit>
        <trans-unit id="be9d17995c5dd0b69e7b7c07d460a9d3bc1c47ae" translate="yes" xml:space="preserve">
          <source>SyncConnector</source>
          <target state="translated">SyncConnector</target>
        </trans-unit>
        <trans-unit id="a457eb6a973f38ea3db16769bf0ca385acbd5d5e" translate="yes" xml:space="preserve">
          <source>SyncConnector (Queue\Connectors)</source>
          <target state="translated">SyncConnector (QueueConnectors)</target>
        </trans-unit>
        <trans-unit id="89dfaa645f6078c50a4d4f11286755b54c481c05" translate="yes" xml:space="preserve">
          <source>SyncConnector::connect()</source>
          <target state="translated">SyncConnector::connect()</target>
        </trans-unit>
        <trans-unit id="c1bfc0c94c277bfcffb7ee8d7d6917eaae34c3fd" translate="yes" xml:space="preserve">
          <source>SyncJob</source>
          <target state="translated">SyncJob</target>
        </trans-unit>
        <trans-unit id="a0e93d1e565980927576f5f8469c8e0a52694b37" translate="yes" xml:space="preserve">
          <source>SyncJob (Queue\Jobs)</source>
          <target state="translated">SyncJob (QueueJobs)</target>
        </trans-unit>
        <trans-unit id="f9db8d2dd1054c2cbb02dd20dc7215af2f449c7e" translate="yes" xml:space="preserve">
          <source>SyncJob::__construct()</source>
          <target state="translated">SyncJob::__construct()</target>
        </trans-unit>
        <trans-unit id="926ac4b62646727357e12f37acd759d1fb83066c" translate="yes" xml:space="preserve">
          <source>SyncJob::attempts()</source>
          <target state="translated">SyncJob::attempts()</target>
        </trans-unit>
        <trans-unit id="14cff9e4c318880a48fd984eb8139293332fa4b3" translate="yes" xml:space="preserve">
          <source>SyncJob::getJobId()</source>
          <target state="translated">SyncJob::getJobId()</target>
        </trans-unit>
        <trans-unit id="a2b6eb2257399759375861dba010a68699caff6c" translate="yes" xml:space="preserve">
          <source>SyncJob::getQueue()</source>
          <target state="translated">SyncJob::getQueue()</target>
        </trans-unit>
        <trans-unit id="4c2bad1ea9c1f4f56786b7cbfd550cf0db877a8e" translate="yes" xml:space="preserve">
          <source>SyncJob::getRawBody()</source>
          <target state="translated">SyncJob::getRawBody()</target>
        </trans-unit>
        <trans-unit id="1f754807255e3240170f1cb2ffd846a2e17a8b14" translate="yes" xml:space="preserve">
          <source>SyncJob::release()</source>
          <target state="translated">SyncJob::release()</target>
        </trans-unit>
        <trans-unit id="9ba216397b9bbc025b95362a46d94ebfb76c20e5" translate="yes" xml:space="preserve">
          <source>SyncQueue</source>
          <target state="translated">SyncQueue</target>
        </trans-unit>
        <trans-unit id="9e0b08a44dcfc9be856282332f57ab9907498bda" translate="yes" xml:space="preserve">
          <source>SyncQueue (Queue)</source>
          <target state="translated">SyncQueue (Tail)</target>
        </trans-unit>
        <trans-unit id="777c1290792e8851a0d949d6ab02885b216bb58a" translate="yes" xml:space="preserve">
          <source>SyncQueue::handleException()</source>
          <target state="translated">SyncQueue::handleException()</target>
        </trans-unit>
        <trans-unit id="9ea33904b3442dc28cfe6b18fb4e4007efc17545" translate="yes" xml:space="preserve">
          <source>SyncQueue::later()</source>
          <target state="translated">SyncQueue::later()</target>
        </trans-unit>
        <trans-unit id="9bb11fc0f8a429cf3751af336076d4da0835e013" translate="yes" xml:space="preserve">
          <source>SyncQueue::pop()</source>
          <target state="translated">SyncQueue::pop()</target>
        </trans-unit>
        <trans-unit id="992c9d053eadfdef4a9ce4da16c75d166eb605b0" translate="yes" xml:space="preserve">
          <source>SyncQueue::push()</source>
          <target state="translated">SyncQueue::push()</target>
        </trans-unit>
        <trans-unit id="ab2d372303ad86857052645304070f7363805416" translate="yes" xml:space="preserve">
          <source>SyncQueue::pushRaw()</source>
          <target state="translated">SyncQueue::pushRaw()</target>
        </trans-unit>
        <trans-unit id="6e765e21d70d0aada985c85bcd4fe5afedcdcfc8" translate="yes" xml:space="preserve">
          <source>SyncQueue::raiseAfterJobEvent()</source>
          <target state="translated">SyncQueue::raiseAfterJobEvent()</target>
        </trans-unit>
        <trans-unit id="29430cbbe6b8dec081730413538634dd4e4ed9c3" translate="yes" xml:space="preserve">
          <source>SyncQueue::raiseBeforeJobEvent()</source>
          <target state="translated">SyncQueue::raiseBeforeJobEvent()</target>
        </trans-unit>
        <trans-unit id="11726886075617f507ba3c2ea275b2500cc03f50" translate="yes" xml:space="preserve">
          <source>SyncQueue::raiseExceptionOccurredJobEvent()</source>
          <target state="translated">SyncQueue::raiseExceptionOccurredJobEvent()</target>
        </trans-unit>
        <trans-unit id="d89b579fdbab18a077305b7209d684e51415434c" translate="yes" xml:space="preserve">
          <source>SyncQueue::resolveJob()</source>
          <target state="translated">SyncQueue::resolveJob()</target>
        </trans-unit>
        <trans-unit id="7d8b346a9061e3bb6562b38ca97e50279535b7ce" translate="yes" xml:space="preserve">
          <source>SyncQueue::size()</source>
          <target state="translated">SyncQueue::size()</target>
        </trans-unit>
        <trans-unit id="19237611d3b0bf8dd91b340bf7b71747f7ee28f7" translate="yes" xml:space="preserve">
          <source>Syncing Associations</source>
          <target state="translated">アソシエーションの同期</target>
        </trans-unit>
        <trans-unit id="a8be639e41fe96c86e4e33d692fa806357a7b1b5" translate="yes" xml:space="preserve">
          <source>System is unusable.</source>
          <target state="translated">システムが使えません。</target>
        </trans-unit>
        <trans-unit id="8d496d3b4854781aec5db5ae54d1c62e99655f59" translate="yes" xml:space="preserve">
          <source>TEXT equivalent column.</source>
          <target state="translated">TEXTに相当する列。</target>
        </trans-unit>
        <trans-unit id="296be219d88d36d0b12e8d8291c4eb96d6b79a39" translate="yes" xml:space="preserve">
          <source>TIME (with timezone) equivalent column.</source>
          <target state="translated">TIME(タイムゾーンを含む)と同等のカラム。</target>
        </trans-unit>
        <trans-unit id="9542308421620532a1a874eea105add0ea1ca4bd" translate="yes" xml:space="preserve">
          <source>TIME equivalent column.</source>
          <target state="translated">TIMEに相当する欄。</target>
        </trans-unit>
        <trans-unit id="6926e4f49a3c259acb47eaacbec1b71bac412b44" translate="yes" xml:space="preserve">
          <source>TIMESTAMP (with timezone) equivalent column.</source>
          <target state="translated">TIMESTAMP(タイムゾーンを含む)相当のカラム。</target>
        </trans-unit>
        <trans-unit id="b1ddf3f84052ae6aa38c83b3ea69166ed2a8439a" translate="yes" xml:space="preserve">
          <source>TIMESTAMP equivalent column.</source>
          <target state="translated">TIMESTAMPに相当する列です。</target>
        </trans-unit>
        <trans-unit id="3092a1332a56bc2cdc56380ae051fd8d9af0ff3a" translate="yes" xml:space="preserve">
          <source>TINYINT equivalent column.</source>
          <target state="translated">TINYINT相当のカラム。</target>
        </trans-unit>
        <trans-unit id="0424f6e7026fa4bc2c4a7043083417315113c79b" translate="yes" xml:space="preserve">
          <source>Table</source>
          <target state="translated">Table</target>
        </trans-unit>
        <trans-unit id="35c8946a5c948d152a785008517045989fa159ec" translate="yes" xml:space="preserve">
          <source>Table Component</source>
          <target state="translated">テーブルコンポーネント</target>
        </trans-unit>
        <trans-unit id="183a0f5ed7da59f40d7703812d27d7629fe4737a" translate="yes" xml:space="preserve">
          <source>Table Layouts</source>
          <target state="translated">テーブルレイアウト</target>
        </trans-unit>
        <trans-unit id="66d15f4bbfe47c11790cc06fd1ca80b2d92f71c0" translate="yes" xml:space="preserve">
          <source>Table Names</source>
          <target state="translated">テーブル名</target>
        </trans-unit>
        <trans-unit id="5961c5ecc0210429cd13705350536688f661aa5d" translate="yes" xml:space="preserve">
          <source>Table Structure</source>
          <target state="translated">テーブル構造</target>
        </trans-unit>
        <trans-unit id="5d999e5178297b1152ec0ed1d6a0a85d20201caa" translate="yes" xml:space="preserve">
          <source>TableCommand</source>
          <target state="translated">TableCommand</target>
        </trans-unit>
        <trans-unit id="587343f0493d489168868bc7268cb1bbfbf9ab13" translate="yes" xml:space="preserve">
          <source>TableCommand (Queue)</source>
          <target state="translated">テーブルコマンド(キュー</target>
        </trans-unit>
        <trans-unit id="01c8dc4afa983216067d45d36cdf84d78701b77c" translate="yes" xml:space="preserve">
          <source>TableCommand::__construct()</source>
          <target state="translated">TableCommand::__construct()</target>
        </trans-unit>
        <trans-unit id="5851edd3b2b19d75dc2a35ad41b55585ae4fd709" translate="yes" xml:space="preserve">
          <source>TableCommand::createBaseMigration()</source>
          <target state="translated">TableCommand::createBaseMigration()</target>
        </trans-unit>
        <trans-unit id="38a8e58cf5ddbacb253a7711c0a00ee2271b90ea" translate="yes" xml:space="preserve">
          <source>TableCommand::handle()</source>
          <target state="translated">TableCommand::handle()</target>
        </trans-unit>
        <trans-unit id="febd71009e9de7d5853be949ca953a02558acc2f" translate="yes" xml:space="preserve">
          <source>TableCommand::replaceMigration()</source>
          <target state="translated">TableCommand::replaceMigration()</target>
        </trans-unit>
        <trans-unit id="2f6c60dc1d2325694091bbab151274f886a83fd5" translate="yes" xml:space="preserve">
          <source>TableDiff</source>
          <target state="translated">TableDiff</target>
        </trans-unit>
        <trans-unit id="64f2c7ebca5fa82225cf6cad53f04cf602b5a3cc" translate="yes" xml:space="preserve">
          <source>TableDiff
    getDoctrineTableDiff(&lt;a href=&quot;../blueprint&quot;&gt;Blueprint&lt;/a&gt; $blueprint, AbstractSchemaManager $schema)</source>
          <target state="translated">TableDiff getDoctrineTableDiff（&lt;a href=&quot;../blueprint&quot;&gt;Blueprint&lt;/a&gt; $ blueprint、AbstractSchemaManager $ schema）</target>
        </trans-unit>
        <trans-unit id="296b0ddf8b29b9319bf15c7e4b92a062cc171993" translate="yes" xml:space="preserve">
          <source>TableDiff|bool</source>
          <target state="translated">TableDiff|bool</target>
        </trans-unit>
        <trans-unit id="07ebf1e2d62b7ad0445c2e8ed39180a2435b87a1" translate="yes" xml:space="preserve">
          <source>TableGuesser</source>
          <target state="translated">TableGuesser</target>
        </trans-unit>
        <trans-unit id="2debb6e87726d65160def9ad82a2ef68fe4b4461" translate="yes" xml:space="preserve">
          <source>TableGuesser (Database\Console\Migrations)</source>
          <target state="translated">TableGuesser (Database\ConsoleMigrations)</target>
        </trans-unit>
        <trans-unit id="bea659750355b5125c4ab8d17a395738718d5001" translate="yes" xml:space="preserve">
          <source>TableGuesser::guess()</source>
          <target state="translated">TableGuesser::guess()</target>
        </trans-unit>
        <trans-unit id="193daf137ed8b89de36d47c3df5fd8f66c0e1d14" translate="yes" xml:space="preserve">
          <source>Tables</source>
          <target state="translated">Tables</target>
        </trans-unit>
        <trans-unit id="377fd08cd58f6726ca1d4eb06f35ad328b7c4f5c" translate="yes" xml:space="preserve">
          <source>TagSet</source>
          <target state="translated">TagSet</target>
        </trans-unit>
        <trans-unit id="345a419beaee5c04337e15cc8d2bdbcdae7c56d5" translate="yes" xml:space="preserve">
          <source>TagSet (Cache)</source>
          <target state="translated">タグセット (キャッシュ)</target>
        </trans-unit>
        <trans-unit id="7e58984e39f4b7cde21be8578892fdc50ef77cb1" translate="yes" xml:space="preserve">
          <source>TagSet::__construct()</source>
          <target state="translated">TagSet::__construct()</target>
        </trans-unit>
        <trans-unit id="27496e3692df2906f2c5010f05c380e547d9b3ab" translate="yes" xml:space="preserve">
          <source>TagSet::getNames()</source>
          <target state="translated">TagSet::getNames()</target>
        </trans-unit>
        <trans-unit id="93cd25430f3088c046b319abd86a76021380920f" translate="yes" xml:space="preserve">
          <source>TagSet::getNamespace()</source>
          <target state="translated">TagSet::getNamespace()</target>
        </trans-unit>
        <trans-unit id="271c0effe9df4cb27f919ea19f7da2591c270ceb" translate="yes" xml:space="preserve">
          <source>TagSet::reset()</source>
          <target state="translated">TagSet::reset()</target>
        </trans-unit>
        <trans-unit id="e7426b073b693ecb4a674e7dc7150c64947ec273" translate="yes" xml:space="preserve">
          <source>TagSet::resetTag()</source>
          <target state="translated">TagSet::resetTag()</target>
        </trans-unit>
        <trans-unit id="53c371e81fcab6b1c8407a7d766f4eeee3b6aa22" translate="yes" xml:space="preserve">
          <source>TagSet::tagId()</source>
          <target state="translated">TagSet::tagId()</target>
        </trans-unit>
        <trans-unit id="c7072fe5561302c52447f4e1447148382de5f791" translate="yes" xml:space="preserve">
          <source>TagSet::tagIds()</source>
          <target state="translated">TagSet::tagIds()</target>
        </trans-unit>
        <trans-unit id="3e61725093f00af33f6cceab726048bdb7da12b3" translate="yes" xml:space="preserve">
          <source>TagSet::tagKey()</source>
          <target state="translated">TagSet::tagKey()</target>
        </trans-unit>
        <trans-unit id="33678bd83dc13c8af4a808e8540aabcf6bb3ab76" translate="yes" xml:space="preserve">
          <source>TaggableStore</source>
          <target state="translated">TaggableStore</target>
        </trans-unit>
        <trans-unit id="d268d5c96f780c2646d2877e78579309f05640b1" translate="yes" xml:space="preserve">
          <source>TaggableStore (Cache)</source>
          <target state="translated">TaggableStore (キャッシュ)</target>
        </trans-unit>
        <trans-unit id="09acd3a211bbdfb6aeda61f49a9621c080338596" translate="yes" xml:space="preserve">
          <source>TaggableStore::tags()</source>
          <target state="translated">TaggableStore::tags()</target>
        </trans-unit>
        <trans-unit id="6f2bb289e251fdde074f62d004091277fe1a3831" translate="yes" xml:space="preserve">
          <source>TaggedCache</source>
          <target state="translated">TaggedCache</target>
        </trans-unit>
        <trans-unit id="5f75f9a09fc97d2bc0b07e4f79b9d935f7b130d7" translate="yes" xml:space="preserve">
          <source>TaggedCache (Cache)</source>
          <target state="translated">TaggedCache(キャッシュ</target>
        </trans-unit>
        <trans-unit id="43296f087296bae24b34c17ae85932e5d0681cc2" translate="yes" xml:space="preserve">
          <source>TaggedCache::__construct()</source>
          <target state="translated">TaggedCache::__construct()</target>
        </trans-unit>
        <trans-unit id="37515e849cb6c04b346915cb936d994aab28d479" translate="yes" xml:space="preserve">
          <source>TaggedCache::decrement()</source>
          <target state="translated">TaggedCache::decrement()</target>
        </trans-unit>
        <trans-unit id="570454f21897145f457e2092f8470eb113d7e2c8" translate="yes" xml:space="preserve">
          <source>TaggedCache::event()</source>
          <target state="translated">TaggedCache::event()</target>
        </trans-unit>
        <trans-unit id="eec9a5140ab37817ab94a23a615ff242fd91080f" translate="yes" xml:space="preserve">
          <source>TaggedCache::flush()</source>
          <target state="translated">TaggedCache::flush()</target>
        </trans-unit>
        <trans-unit id="931be251745bd4152786d5ebbccdd393166825db" translate="yes" xml:space="preserve">
          <source>TaggedCache::increment()</source>
          <target state="translated">TaggedCache::increment()</target>
        </trans-unit>
        <trans-unit id="d8f77bf94a55f4461e790725c8497f38d6908191" translate="yes" xml:space="preserve">
          <source>TaggedCache::itemKey()</source>
          <target state="translated">TaggedCache::itemKey()</target>
        </trans-unit>
        <trans-unit id="860634ee600854808a2f8868c08a17e85eeed148" translate="yes" xml:space="preserve">
          <source>TaggedCache::taggedItemKey()</source>
          <target state="translated">TaggedCache::taggedItemKey()</target>
        </trans-unit>
        <trans-unit id="19a746b6a9f44b25060cdd716c403e005d486882" translate="yes" xml:space="preserve">
          <source>Tagging</source>
          <target state="translated">Tagging</target>
        </trans-unit>
        <trans-unit id="848eed0fbd5429f556b2982dec3ea87136e33e44" translate="yes" xml:space="preserve">
          <source>Tags</source>
          <target state="translated">Tags</target>
        </trans-unit>
        <trans-unit id="3788cd80f3b31aa2a6e6d2ecddca812597fc8c1d" translate="yes" xml:space="preserve">
          <source>Take note of the &lt;code&gt;level&lt;/code&gt; configuration option present on the &lt;code&gt;syslog&lt;/code&gt; and &lt;code&gt;slack&lt;/code&gt; channel configurations in the example above. This option determines the minimum &quot;level&quot; a message must be in order to be logged by the channel. Monolog, which powers Laravel's logging services, offers all of the log levels defined in the &lt;a href=&quot;https://tools.ietf.org/html/rfc5424&quot;&gt;RFC 5424 specification&lt;/a&gt;: &lt;strong&gt;emergency&lt;/strong&gt;, &lt;strong&gt;alert&lt;/strong&gt;, &lt;strong&gt;critical&lt;/strong&gt;, &lt;strong&gt;error&lt;/strong&gt;, &lt;strong&gt;warning&lt;/strong&gt;, &lt;strong&gt;notice&lt;/strong&gt;, &lt;strong&gt;info&lt;/strong&gt;, and &lt;strong&gt;debug&lt;/strong&gt;.</source>
          <target state="translated">上記の例の &lt;code&gt;syslog&lt;/code&gt; および &lt;code&gt;slack&lt;/code&gt; チャネル構成にある &lt;code&gt;level&lt;/code&gt; 構成オプションに注意してください。このオプションは、チャネルがログに記録するためにメッセージが必要とする最小の「レベル」を決定します。モノローグ、その力Laravelのロギングサービスを、すべての中で定義されたログレベルの申し出&lt;a href=&quot;https://tools.ietf.org/html/rfc5424&quot;&gt;RFC 5424仕様&lt;/a&gt;：&lt;strong&gt;緊急&lt;/strong&gt;、&lt;strong&gt;警告&lt;/strong&gt;、&lt;strong&gt;重大&lt;/strong&gt;、&lt;strong&gt;エラー&lt;/strong&gt;、&lt;strong&gt;警告&lt;/strong&gt;、&lt;strong&gt;注意事項&lt;/strong&gt;、&lt;strong&gt;情報&lt;/strong&gt;、および&lt;strong&gt;デバッグ&lt;/strong&gt;。&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="40a2cb453f5f20f47dd0bb2e27ee3fb68c663f64" translate="yes" xml:space="preserve">
          <source>Take the first or last {$limit} items.</source>
          <target state="translated">最初か最後の{$limit}のアイテムを取ります。</target>
        </trans-unit>
        <trans-unit id="53870c2136954dec4a85989b550ddede0b5d6769" translate="yes" xml:space="preserve">
          <source>Task Hooks</source>
          <target state="translated">タスクフック</target>
        </trans-unit>
        <trans-unit id="177a90177fccdbdf7fbc656ebce73b3813d1127c" translate="yes" xml:space="preserve">
          <source>Task Output</source>
          <target state="translated">タスク出力</target>
        </trans-unit>
        <trans-unit id="35b27a9779eff21e9ca4e0630a6d4a1d4ba1d1d1" translate="yes" xml:space="preserve">
          <source>Task Scheduling</source>
          <target state="translated">タスクスケジューリング</target>
        </trans-unit>
        <trans-unit id="c90004af41a0894260aee8ed9d7116921dbbde50" translate="yes" xml:space="preserve">
          <source>Taylor &amp;amp; Dayle made this commit from Jungfraujoch. (11,333 ft.)</source>
          <target state="translated">Taylor＆Dayleは、ユングフラウヨッホからこのコミットを行いました。（11,333フィート）</target>
        </trans-unit>
        <trans-unit id="feb4ce7f3caf3f8068821dc2a19e621de00719b2" translate="yes" xml:space="preserve">
          <source>Teardown redis connection.</source>
          <target state="translated">redis接続を解除します。</target>
        </trans-unit>
        <trans-unit id="d6b6bb3a1a939adefc8ad08e7880baf39f4c9d7b" translate="yes" xml:space="preserve">
          <source>Template Inheritance</source>
          <target state="translated">テンプレート継承</target>
        </trans-unit>
        <trans-unit id="31be4a3d7e798b0e251f31933bfa8c9917d38cec" translate="yes" xml:space="preserve">
          <source>Template Theme</source>
          <target state="translated">テンプレートテーマ</target>
        </trans-unit>
        <trans-unit id="117b493ddb9d7db50f7e33d793a18bdc27d4f4c1" translate="yes" xml:space="preserve">
          <source>Temporarily Modifying Attribute Visibility</source>
          <target state="translated">属性の表示を一時的に変更する</target>
        </trans-unit>
        <trans-unit id="35c0ffe2469dd23c5a9ce125a35a350873e86818" translate="yes" xml:space="preserve">
          <source>Temporary URLs</source>
          <target state="translated">一時的なURL</target>
        </trans-unit>
        <trans-unit id="7797f475b9350f52ca6f34c80868abd54415507d" translate="yes" xml:space="preserve">
          <source>Terminable Middleware</source>
          <target state="translated">ターミネート可能なミドルウェア</target>
        </trans-unit>
        <trans-unit id="417054be2e3fcbe127b6cbffdab555ee47156903" translate="yes" xml:space="preserve">
          <source>Terminate the application.</source>
          <target state="translated">アプリケーションを終了します。</target>
        </trans-unit>
        <trans-unit id="19c60d0daee0cc0f51d791c2450d4a8570648b92" translate="yes" xml:space="preserve">
          <source>Test if the given width and height fail any conditions.</source>
          <target state="translated">指定された幅と高さが条件に当てはまらないかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="a70ce38389e318bd2be18a0111c6dc76bd2cd9ed" translate="yes" xml:space="preserve">
          <source>TestCase</source>
          <target state="translated">TestCase</target>
        </trans-unit>
        <trans-unit id="c2fb9b37fd9f273dfd1e3ea2048905622d185333" translate="yes" xml:space="preserve">
          <source>TestCase (Foundation\Testing)</source>
          <target state="translated">テストケース (FoundationTesting)</target>
        </trans-unit>
        <trans-unit id="e3b89cd9715001c8c1b3a75f7535a14f250d33dd" translate="yes" xml:space="preserve">
          <source>TestCase::afterApplicationCreated()</source>
          <target state="translated">TestCase::afterApplicationCreated()</target>
        </trans-unit>
        <trans-unit id="fd3d02dac9e4953fd714d1400f74a4908373ebe9" translate="yes" xml:space="preserve">
          <source>TestCase::beforeApplicationDestroyed()</source>
          <target state="translated">TestCase::beforeApplicationDestroyed()</target>
        </trans-unit>
        <trans-unit id="2033cb29c37209a1fbf1058caef44bf475d78921" translate="yes" xml:space="preserve">
          <source>TestCase::createApplication()</source>
          <target state="translated">TestCase::createApplication()</target>
        </trans-unit>
        <trans-unit id="950fa53d038a05abc8f8d14258accf00ec994388" translate="yes" xml:space="preserve">
          <source>TestCase::refreshApplication()</source>
          <target state="translated">TestCase::refreshApplication()</target>
        </trans-unit>
        <trans-unit id="6254c3db8c61918d5460cf8b863b2e6cf11122c0" translate="yes" xml:space="preserve">
          <source>TestCase::setUp()</source>
          <target state="translated">TestCase::setUp()</target>
        </trans-unit>
        <trans-unit id="661682b62fe877d34f25807ff7513cc59444f741" translate="yes" xml:space="preserve">
          <source>TestCase::setUpTraits()</source>
          <target state="translated">TestCase::setUpTraits()</target>
        </trans-unit>
        <trans-unit id="3b03ef41c2b608260eb526ea00fd7673a72f27e5" translate="yes" xml:space="preserve">
          <source>TestCase::tearDown()</source>
          <target state="translated">TestCase::tearDown()</target>
        </trans-unit>
        <trans-unit id="70079b51490060f0ebffe9d041957c1e3f106e5b" translate="yes" xml:space="preserve">
          <source>TestMakeCommand</source>
          <target state="translated">TestMakeCommand</target>
        </trans-unit>
        <trans-unit id="71d7878db6937c823d014347818ceaf6be0af897" translate="yes" xml:space="preserve">
          <source>TestMakeCommand (Foundation)</source>
          <target state="translated">TestMakeCommand (Foundation)</target>
        </trans-unit>
        <trans-unit id="67292fd2e776d35f82c258dd00e6a96785bccc1a" translate="yes" xml:space="preserve">
          <source>TestMakeCommand::getDefaultNamespace()</source>
          <target state="translated">TestMakeCommand::getDefaultNamespace()</target>
        </trans-unit>
        <trans-unit id="f8d02670e92be67ac9ed82041815728edaa616a1" translate="yes" xml:space="preserve">
          <source>TestMakeCommand::getPath()</source>
          <target state="translated">TestMakeCommand::getPath()</target>
        </trans-unit>
        <trans-unit id="f7b846f9b8b49f24105a87a051f9e388c2d33ffa" translate="yes" xml:space="preserve">
          <source>TestMakeCommand::getStub()</source>
          <target state="translated">TestMakeCommand::getStub()</target>
        </trans-unit>
        <trans-unit id="5fb6cd626f8542659aef5b6d7fb0464f7ebf85d4" translate="yes" xml:space="preserve">
          <source>TestMakeCommand::rootNamespace()</source>
          <target state="translated">TestMakeCommand::rootNamespace()</target>
        </trans-unit>
        <trans-unit id="2c0608819183fa573522b2b9cc164a6cb99d780a" translate="yes" xml:space="preserve">
          <source>TestResponse</source>
          <target state="translated">TestResponse</target>
        </trans-unit>
        <trans-unit id="6ba186e9ed9b8e89d86bdcc64ca7a8de69f2e8c0" translate="yes" xml:space="preserve">
          <source>TestResponse (Foundation\Testing)</source>
          <target state="translated">TestResponse (FoundationTesting)</target>
        </trans-unit>
        <trans-unit id="cf4460e37c38fc565b88203088ef840787e34b41" translate="yes" xml:space="preserve">
          <source>TestResponse::__call()</source>
          <target state="translated">TestResponse::__call()</target>
        </trans-unit>
        <trans-unit id="9c93be22f13435af33107564352d89ed67385bd0" translate="yes" xml:space="preserve">
          <source>TestResponse::__construct()</source>
          <target state="translated">TestResponse::__construct()</target>
        </trans-unit>
        <trans-unit id="60151e10fa01aeee91b85427c9ca9f46a3fd5b00" translate="yes" xml:space="preserve">
          <source>TestResponse::__get()</source>
          <target state="translated">TestResponse::__get()</target>
        </trans-unit>
        <trans-unit id="6217f92e6d0b2aa4cf5576f62176f97731b8b401" translate="yes" xml:space="preserve">
          <source>TestResponse::__isset()</source>
          <target state="translated">TestResponse::__isset()</target>
        </trans-unit>
        <trans-unit id="c2efce5dad9213b37fa9ac97a043dabe45e52b5c" translate="yes" xml:space="preserve">
          <source>TestResponse::assertCookie()</source>
          <target state="translated">TestResponse::assertCookie()</target>
        </trans-unit>
        <trans-unit id="10a6b69feca1db6fc50e3bcd24f4304726859314" translate="yes" xml:space="preserve">
          <source>TestResponse::assertCookieExpired()</source>
          <target state="translated">TestResponse::assertCookieExpired()</target>
        </trans-unit>
        <trans-unit id="0863f988c8499edb5ca188e2e86f4da1924413ab" translate="yes" xml:space="preserve">
          <source>TestResponse::assertCookieMissing()</source>
          <target state="translated">TestResponse::assertCookieMissing()</target>
        </trans-unit>
        <trans-unit id="e41b6e3f9f490412b7eaef31db01eb387fae9334" translate="yes" xml:space="preserve">
          <source>TestResponse::assertCookieNotExpired()</source>
          <target state="translated">TestResponse::assertCookieNotExpired()</target>
        </trans-unit>
        <trans-unit id="fb65183bd2f296a8af38812e7490df7fa7460f53" translate="yes" xml:space="preserve">
          <source>TestResponse::assertDontSee()</source>
          <target state="translated">TestResponse::assertDontSee()</target>
        </trans-unit>
        <trans-unit id="54b96f0371cc061e5b74567efd6bb6facdf636d5" translate="yes" xml:space="preserve">
          <source>TestResponse::assertDontSeeText()</source>
          <target state="translated">TestResponse::assertDontSeeText()</target>
        </trans-unit>
        <trans-unit id="cebdf8e779c8eb075db0c7af50a17c2d4dcc4cb3" translate="yes" xml:space="preserve">
          <source>TestResponse::assertExactJson()</source>
          <target state="translated">TestResponse::assertExactJson()</target>
        </trans-unit>
        <trans-unit id="0f979c3008bba19e9601699d154dcaf109990283" translate="yes" xml:space="preserve">
          <source>TestResponse::assertForbidden()</source>
          <target state="translated">TestResponse::assertForbidden()</target>
        </trans-unit>
        <trans-unit id="a66e6821bced3d7baa3ebf5f5b0e54c1743cd704" translate="yes" xml:space="preserve">
          <source>TestResponse::assertHeader()</source>
          <target state="translated">TestResponse::assertHeader()</target>
        </trans-unit>
        <trans-unit id="0f9a7a54e34a46e0e987f87f2a3917286db1e305" translate="yes" xml:space="preserve">
          <source>TestResponse::assertHeaderMissing()</source>
          <target state="translated">TestResponse::assertHeaderMissing()</target>
        </trans-unit>
        <trans-unit id="d771d54ac2945b3fb55be9cf77fead01803b2b5f" translate="yes" xml:space="preserve">
          <source>TestResponse::assertJson()</source>
          <target state="translated">TestResponse::assertJson()</target>
        </trans-unit>
        <trans-unit id="6e16ec93788db6de81766c01e7c309305d0a2d41" translate="yes" xml:space="preserve">
          <source>TestResponse::assertJsonCount()</source>
          <target state="translated">TestResponse::assertJsonCount()</target>
        </trans-unit>
        <trans-unit id="3cd329708f80a62eea15c05a40d5dd4c215f7a6c" translate="yes" xml:space="preserve">
          <source>TestResponse::assertJsonFragment()</source>
          <target state="translated">TestResponse::assertJsonFragment()</target>
        </trans-unit>
        <trans-unit id="11df15bb699674d6305ac5536da236c073772c0e" translate="yes" xml:space="preserve">
          <source>TestResponse::assertJsonMessage()</source>
          <target state="translated">TestResponse::assertJsonMessage()</target>
        </trans-unit>
        <trans-unit id="c354ca124305bc3e4bc5c7db252b304c8068a387" translate="yes" xml:space="preserve">
          <source>TestResponse::assertJsonMissing()</source>
          <target state="translated">TestResponse::assertJsonMissing()</target>
        </trans-unit>
        <trans-unit id="3d1d15d196d2ea34d726ec20aa4cb21384bad22c" translate="yes" xml:space="preserve">
          <source>TestResponse::assertJsonMissingExact()</source>
          <target state="translated">TestResponse::assertJsonMissingExact()</target>
        </trans-unit>
        <trans-unit id="52b756832a81d9b388696cf669efbc0337a25572" translate="yes" xml:space="preserve">
          <source>TestResponse::assertJsonMissingValidationErrors()</source>
          <target state="translated">TestResponse::assertJsonMissingValidationErrors()</target>
        </trans-unit>
        <trans-unit id="28b00979955382e158868bef17c27f62e551bdb8" translate="yes" xml:space="preserve">
          <source>TestResponse::assertJsonStructure()</source>
          <target state="translated">TestResponse::assertJsonStructure()</target>
        </trans-unit>
        <trans-unit id="a4cacb5f5d9209d5a68209e2367b3c81b402677b" translate="yes" xml:space="preserve">
          <source>TestResponse::assertJsonValidationErrors()</source>
          <target state="translated">TestResponse::assertJsonValidationErrors()</target>
        </trans-unit>
        <trans-unit id="b61502ac377caf72b3efe52a3944cae5ddc93c84" translate="yes" xml:space="preserve">
          <source>TestResponse::assertLocation()</source>
          <target state="translated">TestResponse::assertLocation()</target>
        </trans-unit>
        <trans-unit id="1d8b9b428c64e87fe5e150cf23be7fc4201e40ac" translate="yes" xml:space="preserve">
          <source>TestResponse::assertNotFound()</source>
          <target state="translated">TestResponse::assertNotFound()</target>
        </trans-unit>
        <trans-unit id="1fd7eeffc4419debf11200af860aadb491247d85" translate="yes" xml:space="preserve">
          <source>TestResponse::assertOk()</source>
          <target state="translated">TestResponse::assertOk()</target>
        </trans-unit>
        <trans-unit id="7cecc2e6cb9c3ed154a87fab513bd589399ec3ce" translate="yes" xml:space="preserve">
          <source>TestResponse::assertPlainCookie()</source>
          <target state="translated">TestResponse::assertPlainCookie()</target>
        </trans-unit>
        <trans-unit id="322d2286d3f271c9f155b6862d215b4eb0fcc6d0" translate="yes" xml:space="preserve">
          <source>TestResponse::assertRedirect()</source>
          <target state="translated">TestResponse::assertRedirect()</target>
        </trans-unit>
        <trans-unit id="d08a2522a93861e585ba66c6a090dddd0670ea45" translate="yes" xml:space="preserve">
          <source>TestResponse::assertSee()</source>
          <target state="translated">TestResponse::assertSee()</target>
        </trans-unit>
        <trans-unit id="e3fcebb2cecdbc930846bff34d51267a47c1fc0c" translate="yes" xml:space="preserve">
          <source>TestResponse::assertSeeInOrder()</source>
          <target state="translated">TestResponse::assertSeeInOrder()</target>
        </trans-unit>
        <trans-unit id="db0cc90252ba9fff9a896ac508b9e9530f7c62af" translate="yes" xml:space="preserve">
          <source>TestResponse::assertSeeText()</source>
          <target state="translated">TestResponse::assertSeeText()</target>
        </trans-unit>
        <trans-unit id="3d2fbcdcb5aa861b609ce39e7308f390c915cbb8" translate="yes" xml:space="preserve">
          <source>TestResponse::assertSeeTextInOrder()</source>
          <target state="translated">TestResponse::assertSeeTextInOrder()</target>
        </trans-unit>
        <trans-unit id="e7855b942860409c863eb27a2bf0ebd78e0c373c" translate="yes" xml:space="preserve">
          <source>TestResponse::assertSessionHas()</source>
          <target state="translated">TestResponse::assertSessionHas()</target>
        </trans-unit>
        <trans-unit id="365b582df300f5c83075ba855af8ea7420238c35" translate="yes" xml:space="preserve">
          <source>TestResponse::assertSessionHasAll()</source>
          <target state="translated">TestResponse::assertSessionHasAll()</target>
        </trans-unit>
        <trans-unit id="48b7dbdf792f9136a8282719f98db30aaa261e88" translate="yes" xml:space="preserve">
          <source>TestResponse::assertSessionHasErrors()</source>
          <target state="translated">TestResponse::assertSessionHasErrors()</target>
        </trans-unit>
        <trans-unit id="8dad4f2e955f743031db1029d69767e57f2c22f0" translate="yes" xml:space="preserve">
          <source>TestResponse::assertSessionHasErrorsIn()</source>
          <target state="translated">TestResponse::assertSessionHasErrorsIn()</target>
        </trans-unit>
        <trans-unit id="bf72cd0f5b951995c5887c7a02be2d9a63346220" translate="yes" xml:space="preserve">
          <source>TestResponse::assertSessionHasNoErrors()</source>
          <target state="translated">TestResponse::assertSessionHasNoErrors()</target>
        </trans-unit>
        <trans-unit id="224c5fe90f5b875efd01dfaeb3937625dcb400d4" translate="yes" xml:space="preserve">
          <source>TestResponse::assertSessionMissing()</source>
          <target state="translated">TestResponse::assertSessionMissing()</target>
        </trans-unit>
        <trans-unit id="f7d290aa879df5aaea4a624a139b097de19c50b2" translate="yes" xml:space="preserve">
          <source>TestResponse::assertStatus()</source>
          <target state="translated">TestResponse::assertStatus()</target>
        </trans-unit>
        <trans-unit id="03838c5eac2ab2b6d6c2a8cb82a5c648245f4bc0" translate="yes" xml:space="preserve">
          <source>TestResponse::assertSuccessful()</source>
          <target state="translated">TestResponse::assertSuccessful()</target>
        </trans-unit>
        <trans-unit id="dc8db9e89e72ea4153f1d4bd780df39afe266519" translate="yes" xml:space="preserve">
          <source>TestResponse::assertViewHas()</source>
          <target state="translated">TestResponse::assertViewHas()</target>
        </trans-unit>
        <trans-unit id="59ac82ecf750889a14cf927300e3e4cf958cc9f6" translate="yes" xml:space="preserve">
          <source>TestResponse::assertViewHasAll()</source>
          <target state="translated">TestResponse::assertViewHasAll()</target>
        </trans-unit>
        <trans-unit id="5bfa004ffddd0e5c0db79593fa53533416138ce7" translate="yes" xml:space="preserve">
          <source>TestResponse::assertViewIs()</source>
          <target state="translated">TestResponse::assertViewIs()</target>
        </trans-unit>
        <trans-unit id="160333433a9fa297bdf6a864ce712b86b43a3c56" translate="yes" xml:space="preserve">
          <source>TestResponse::assertViewMissing()</source>
          <target state="translated">TestResponse::assertViewMissing()</target>
        </trans-unit>
        <trans-unit id="3a236b915f2b2c27006ccd86b7102f349ff2c3bf" translate="yes" xml:space="preserve">
          <source>TestResponse::decodeResponseJson()</source>
          <target state="translated">TestResponse::decodeResponseJson()</target>
        </trans-unit>
        <trans-unit id="61dfb5a500d9c819fae0c3795152b9988b21e88b" translate="yes" xml:space="preserve">
          <source>TestResponse::dump()</source>
          <target state="translated">TestResponse::dump()</target>
        </trans-unit>
        <trans-unit id="f34c496ceb919e882e9c9d579cc8bbb7c63fd8ef" translate="yes" xml:space="preserve">
          <source>TestResponse::ensureResponseHasView()</source>
          <target state="translated">TestResponse::ensureResponseHasView()</target>
        </trans-unit>
        <trans-unit id="846b845c8ac3da4f78a1526138e4091eaee2f25d" translate="yes" xml:space="preserve">
          <source>TestResponse::fromBaseResponse()</source>
          <target state="translated">TestResponse::fromBaseResponse()</target>
        </trans-unit>
        <trans-unit id="65a28d8388103802537be6b71d3d64c735fe031b" translate="yes" xml:space="preserve">
          <source>TestResponse::getCookie()</source>
          <target state="translated">TestResponse::getCookie()</target>
        </trans-unit>
        <trans-unit id="d3b8d8da0ce32db905d04c10f993a525e337277b" translate="yes" xml:space="preserve">
          <source>TestResponse::json()</source>
          <target state="translated">TestResponse::json()</target>
        </trans-unit>
        <trans-unit id="9c3b2d05766f8b8c800378224a925348ec647b68" translate="yes" xml:space="preserve">
          <source>TestResponse::jsonSearchStrings()</source>
          <target state="translated">TestResponse::jsonSearchStrings()</target>
        </trans-unit>
        <trans-unit id="23139fd7eb2c2d48796d8a73b1b59223789589b4" translate="yes" xml:space="preserve">
          <source>TestResponse::session()</source>
          <target state="translated">TestResponse::session()</target>
        </trans-unit>
        <trans-unit id="e95cb2cbc81c5c81aa30be4bc95a20c1e0598842" translate="yes" xml:space="preserve">
          <source>TestResponse::streamedContent()</source>
          <target state="translated">TestResponse::streamedContent()</target>
        </trans-unit>
        <trans-unit id="74b8d282042056b21aeeb90fda90e29972756eec" translate="yes" xml:space="preserve">
          <source>TestResponse::viewData()</source>
          <target state="translated">TestResponse::viewData()</target>
        </trans-unit>
        <trans-unit id="0820b32b206b7352858e8903a838ed14319acdfd" translate="yes" xml:space="preserve">
          <source>Testing</source>
          <target state="translated">Testing</target>
        </trans-unit>
        <trans-unit id="98aeb8c96fe8f20123084ac3e84f14b98d764752" translate="yes" xml:space="preserve">
          <source>Testing File Uploads</source>
          <target state="translated">ファイルアップロードのテスト</target>
        </trans-unit>
        <trans-unit id="fa31943361576078387ad6fafbf1ee34e4c8e0bd" translate="yes" xml:space="preserve">
          <source>Testing JSON APIs</source>
          <target state="translated">JSON API のテスト</target>
        </trans-unit>
        <trans-unit id="0c549bf736b76e9db9e8be4a0330f32d7b798e91" translate="yes" xml:space="preserve">
          <source>Testing: Getting Started</source>
          <target state="translated">テスト はじめに</target>
        </trans-unit>
        <trans-unit id="1e4564ef7eab6831a546042633293a3ff1d39bfa" translate="yes" xml:space="preserve">
          <source>Text, Values, &amp;amp; Attributes</source>
          <target state="translated">テキスト、値、および属性</target>
        </trans-unit>
        <trans-unit id="a0561bd16c066da0d409139701f1307f6e7c7068" translate="yes" xml:space="preserve">
          <source>Thankfully, Laravel makes it easy to define the routes to respond to channel authorization requests. In the &lt;code&gt;BroadcastServiceProvider&lt;/code&gt; included with your Laravel application, you will see a call to the &lt;code&gt;Broadcast::routes&lt;/code&gt; method. This method will register the &lt;code&gt;/broadcasting/auth&lt;/code&gt; route to handle authorization requests:</source>
          <target state="translated">ありがたいことに、Laravelを使用すると、チャネル認証リクエストに応答するルートを簡単に定義できます。で &lt;code&gt;BroadcastServiceProvider&lt;/code&gt; あなたLaravelアプリケーションに含まれている、あなたはへの呼び出しが表示されます &lt;code&gt;Broadcast::routes&lt;/code&gt; 方法を。このメソッドは、承認リクエストを処理するための &lt;code&gt;/broadcasting/auth&lt;/code&gt; ルートを登録します。</target>
        </trans-unit>
        <trans-unit id="2a109411c1c88d908d62b914a62613a5dd999149" translate="yes" xml:space="preserve">
          <source>Thankfully, we can use eager loading to reduce this operation to just 2 queries. When querying, you may specify which relationships should be eager loaded using the &lt;code&gt;with&lt;/code&gt; method:</source>
          <target state="translated">ありがたいことに、積極的な読み込みを使用して、この操作を2つのクエリに減らすことができます。クエリを実行するとき、 &lt;code&gt;with&lt;/code&gt; メソッドを使用して、どの関係を積極的にロードするかを指定できます。</target>
        </trans-unit>
        <trans-unit id="f9883478966a4bf41f5c835e56f96ba3eae01a13" translate="yes" xml:space="preserve">
          <source>That's it! Failed payments will be captured and handled by the controller. The controller will cancel the customer's subscription when Braintree determines the subscription has failed (normally after three failed payment attempts). Don't forget: you will need to configure the webhook URI in your Braintree control panel settings.</source>
          <target state="translated">それはそれはそれは! 失敗した支払いは、コントローラが捕捉して処理します。Braintreeがサブスクリプションが失敗したと判断すると、コントローラは顧客のサブスクリプションをキャンセルします(通常は3回の支払い失敗後)。忘れずに:Braintreeコントロールパネルの設定でwebhook URIを設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="12f4163d9de7ce79b54352bbbab60f8a1ffdaa5a" translate="yes" xml:space="preserve">
          <source>That's it! Failed payments will be captured and handled by the controller. The controller will cancel the customer's subscription when Stripe determines the subscription has failed (normally after three failed payment attempts).</source>
          <target state="translated">それはそれはそれは! 失敗した支払いはコントローラが捕捉して処理します。Stripeがサブスクリプションに失敗したと判断すると、コントローラは顧客のサブスクリプションをキャンセルします(通常は3回の支払い失敗後)。</target>
        </trans-unit>
        <trans-unit id="143036296471380aefe053fe216f290e2d80a810" translate="yes" xml:space="preserve">
          <source>That's it! Now, when this listener is called for an event, it will be automatically queued by the event dispatcher using Laravel's &lt;a href=&quot;queues&quot;&gt;queue system&lt;/a&gt;. If no exceptions are thrown when the listener is executed by the queue, the queued job will automatically be deleted after it has finished processing.</source>
          <target state="translated">それでおしまい！これで、このリスナーがイベントに対して呼び出されると、Laravelの&lt;a href=&quot;queues&quot;&gt;キューシステム&lt;/a&gt;を使用して、イベントディスパッチャーによって自動的にキューに入れられます。リスナーがキューによって実行されたときに例外がスローされない場合、キューに入れられたジョブは、処理が完了すると自動的に削除されます。</target>
        </trans-unit>
        <trans-unit id="bde275d61d788572727389a5ce614e76b9f24337" translate="yes" xml:space="preserve">
          <source>The &quot;Link&quot; Command</source>
          <target state="translated">リンク」コマンド</target>
        </trans-unit>
        <trans-unit id="171e3dee768bc45bd27fab03ae77311e93ae5a85" translate="yes" xml:space="preserve">
          <source>The &quot;Park&quot; Command</source>
          <target state="translated">公園」コマンド</target>
        </trans-unit>
        <trans-unit id="cf98206e6b2bd36a63cf308ca0f97bf4ad09715e" translate="yes" xml:space="preserve">
          <source>The &quot;bcc&quot; information for the message.</source>
          <target state="translated">メッセージの &quot;bcc &quot;情報。</target>
        </trans-unit>
        <trans-unit id="86fd5b0f84ec65a1c6e16c90a861552136023442" translate="yes" xml:space="preserve">
          <source>The &quot;bcc&quot; recipients of the message.</source>
          <target state="translated">bcc」の受信者です。</target>
        </trans-unit>
        <trans-unit id="947b224c87a93dd20bf06c95a9a64bd554b44861" translate="yes" xml:space="preserve">
          <source>The &quot;booting&quot; method of the model.</source>
          <target state="translated">モデルの「ブーイング」の仕方。</target>
        </trans-unit>
        <trans-unit id="84c90e169a086004740be565bc9be5bceeceafd5" translate="yes" xml:space="preserve">
          <source>The &quot;cc&quot; information for the message.</source>
          <target state="translated">メッセージの &quot;cc &quot;情報。</target>
        </trans-unit>
        <trans-unit id="a023f9fb14dab0a929a9cf54b2003d7f70afda79" translate="yes" xml:space="preserve">
          <source>The &quot;cc&quot; recipients of the message.</source>
          <target state="translated">cc」の受信者です。</target>
        </trans-unit>
        <trans-unit id="f4fc198466b51f86a60a493fbc8709a8d85116da" translate="yes" xml:space="preserve">
          <source>The &quot;data&quot; wrapper that should be applied.</source>
          <target state="translated">適用されるべき &quot;data &quot;ラッパー。</target>
        </trans-unit>
        <trans-unit id="a10a86bcc089422d2c3362d06661ad5aea0fcb69" translate="yes" xml:space="preserve">
          <source>The &quot;from&quot; information for the message.</source>
          <target state="translated">メッセージの「from」情報。</target>
        </trans-unit>
        <trans-unit id="69259540bdcb9cd3ee4e747bfba6e6f71c58f1af" translate="yes" xml:space="preserve">
          <source>The &quot;has-many-through&quot; relationship provides a convenient shortcut for accessing distant relations via an intermediate relation. For example, a &lt;code&gt;Country&lt;/code&gt; model might have many &lt;code&gt;Post&lt;/code&gt; models through an intermediate &lt;code&gt;User&lt;/code&gt; model. In this example, you could easily gather all blog posts for a given country. Let's look at the tables required to define this relationship:</source>
          <target state="translated">「has-many-through」関係は、中間関係を介して遠隔関係にアクセスするための便利なショートカットを提供します。たとえば、 &lt;code&gt;Country&lt;/code&gt; モデルには、中間の &lt;code&gt;User&lt;/code&gt; モデルを介して多くの &lt;code&gt;Post&lt;/code&gt; モデルがある場合があります。この例では、特定の国のすべてのブログ投稿を簡単に収集できます。この関係を定義するために必要なテーブルを見てみましょう：</target>
        </trans-unit>
        <trans-unit id="859261164ffe1cc114cff2f044e7b8958602d3d0" translate="yes" xml:space="preserve">
          <source>The &quot;intro&quot; lines of the notification.</source>
          <target state="translated">通知の「イントロ」のセリフ。</target>
        </trans-unit>
        <trans-unit id="86e893986a69a440ad8ef6f9209c3c7b75a55a05" translate="yes" xml:space="preserve">
          <source>The &quot;level&quot; of the notification (info, success, error).</source>
          <target state="translated">通知の「レベル」(情報、成功、エラー)。</target>
        </trans-unit>
        <trans-unit id="7b7790cb7527cfbd4d68faf8b3b40e7beb66a36f" translate="yes" xml:space="preserve">
          <source>The &quot;level&quot; of the notification (info, success, warning, error).</source>
          <target state="translated">通知の「レベル」(情報、成功、警告、エラー)。</target>
        </trans-unit>
        <trans-unit id="1852336dc56355cce5d347c2103d023be7670322" translate="yes" xml:space="preserve">
          <source>The &quot;name&quot; of the relationship.</source>
          <target state="translated">関係性の「名前」です。</target>
        </trans-unit>
        <trans-unit id="ce5c1061d2578d27509d7c67e1d698e4fb97457d" translate="yes" xml:space="preserve">
          <source>The &quot;outro&quot; lines of the notification.</source>
          <target state="translated">通知の「アウトロ」のセリフ。</target>
        </trans-unit>
        <trans-unit id="d7849c6fb1ff86ce73708016da1f550f4094f409" translate="yes" xml:space="preserve">
          <source>The &quot;recaller&quot; / &quot;remember me&quot; cookie string.</source>
          <target state="translated">recaller&quot;/&quot;remember me &quot;クッキーの文字列。</target>
        </trans-unit>
        <trans-unit id="d7281244bd4c0cc52cd54c297105d49eb5c55a1a" translate="yes" xml:space="preserve">
          <source>The &quot;regular&quot; / legacy echo string format.</source>
          <target state="translated">レギュラー」/レガシーエコー文字列のフォーマット。</target>
        </trans-unit>
        <trans-unit id="e0953801b192273e3006493c7521155560c3c165" translate="yes" xml:space="preserve">
          <source>The &quot;reply to&quot; information for the message.</source>
          <target state="translated">メッセージの「返信先」情報です。</target>
        </trans-unit>
        <trans-unit id="ffab41bc2a8ea656b01efcfa81454398f00ae2b1" translate="yes" xml:space="preserve">
          <source>The &quot;reply to&quot; recipients of the message.</source>
          <target state="translated">メッセージの「返信先」です。</target>
        </trans-unit>
        <trans-unit id="770a53b8f6421bdeedca21f7dcff56f9a9b8f5fc" translate="yes" xml:space="preserve">
          <source>The &quot;size&quot; to report.</source>
          <target state="translated">報告する「サイズ」。</target>
        </trans-unit>
        <trans-unit id="1a4d43c8c4c7f770b25fa41059ffb32cbf859d4d" translate="yes" xml:space="preserve">
          <source>The &quot;through&quot; parent model instance.</source>
          <target state="translated">スルー」親モデルインスタンス。</target>
        </trans-unit>
        <trans-unit id="a1ca5bfa154d8c2a8cacbed294c57b79dff4ece6" translate="yes" xml:space="preserve">
          <source>The &quot;time to run&quot; for all pushed jobs.</source>
          <target state="translated">すべてのプッシュされたジョブの「実行時間」。</target>
        </trans-unit>
        <trans-unit id="eea97ff1c12366dccd882d0bad940af408622b94" translate="yes" xml:space="preserve">
          <source>The &quot;to&quot; recipients of the message.</source>
          <target state="translated">メッセージの &quot;to &quot;の受信者。</target>
        </trans-unit>
        <trans-unit id="4ec20e01da81a87ea261b02ef03383b87bcf02e7" translate="yes" xml:space="preserve">
          <source>The &quot;type&quot; of the auto-incrementing ID.</source>
          <target state="translated">オートインクリメントするIDの「型」。</target>
        </trans-unit>
        <trans-unit id="a6f1c63171b49005812eaadb0fc8ad122b06a222" translate="yes" xml:space="preserve">
          <source>The 24 hour timestamp this scheduler command started running.</source>
          <target state="translated">このスケジューラコマンドの実行を開始した24時間のタイムスタンプです。</target>
        </trans-unit>
        <trans-unit id="0ab32685f8f64bedcb9db933ef0f14064b514243" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.php-fig.org/psr/psr-7/&quot;&gt;PSR-7 standard&lt;/a&gt; specifies interfaces for HTTP messages, including requests and responses. If you would like to obtain an instance of a PSR-7 request instead of a Laravel request, you will first need to install a few libraries. Laravel uses the &lt;em&gt;Symfony HTTP Message Bridge&lt;/em&gt; component to convert typical Laravel requests and responses into PSR-7 compatible implementations:</source>
          <target state="translated">&lt;a href=&quot;http://www.php-fig.org/psr/psr-7/&quot;&gt;PSR-7標準の&lt;/a&gt;要求と応答を含むHTTPメッセージのための指定インタフェース。 Laravelリクエストの代わりにPSR-7リクエストのインスタンスを取得したい場合は、最初にいくつかのライブラリをインストールする必要があります。 Laravelは&lt;em&gt;Symfony HTTPメッセージブリッジ&lt;/em&gt;コンポーネントを使用して、一般的なLaravelリクエストとレスポンスをPSR-7互換の実装に変換します。</target>
        </trans-unit>
        <trans-unit id="8877ca0b2ca6daa5cc8466805156cc138636fd8d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$casts&lt;/code&gt; property on your model provides a convenient method of converting attributes to common data types. The &lt;code&gt;$casts&lt;/code&gt; property should be an array where the key is the name of the attribute being cast and the value is the type you wish to cast the column to. The supported cast types are: &lt;code&gt;integer&lt;/code&gt;, &lt;code&gt;real&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;boolean&lt;/code&gt;, &lt;code&gt;object&lt;/code&gt;, &lt;code&gt;array&lt;/code&gt;, &lt;code&gt;collection&lt;/code&gt;, &lt;code&gt;date&lt;/code&gt;, &lt;code&gt;datetime&lt;/code&gt;, and &lt;code&gt;timestamp&lt;/code&gt;.</source>
          <target state="translated">モデルの &lt;code&gt;$casts&lt;/code&gt; プロパティは、属性を一般的なデータ型に変換する便利な方法を提供します。 &lt;code&gt;$casts&lt;/code&gt; プロパティは、キーが属性というキャストと値の名前は、あなたがに列をキャストしたいタイプである配列でなければなりません。サポートされているキャストタイプは、 &lt;code&gt;integer&lt;/code&gt; 、 &lt;code&gt;real&lt;/code&gt; 、 &lt;code&gt;float&lt;/code&gt; 、 &lt;code&gt;double&lt;/code&gt; 、 &lt;code&gt;string&lt;/code&gt; 、 &lt;code&gt;boolean&lt;/code&gt; 、 &lt;code&gt;object&lt;/code&gt; 、 &lt;code&gt;array&lt;/code&gt; 、 &lt;code&gt;collection&lt;/code&gt; 、 &lt;code&gt;date&lt;/code&gt; 、 &lt;code&gt;datetime&lt;/code&gt; 、および &lt;code&gt;timestamp&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a610c8be13b08361ea752b8031cdca16f03ac7f0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$dontReport&lt;/code&gt; property of the exception handler contains an array of exception types that will not be logged. For example, exceptions resulting from 404 errors, as well as several other types of errors, are not written to your log files. You may add other exception types to this array as needed:</source>
          <target state="translated">例外ハンドラの &lt;code&gt;$dontReport&lt;/code&gt; プロパティには、ログに記録されない例外タイプの配列が含まれています。たとえば、404エラーや他のいくつかのタイプのエラーに起因する例外は、ログファイルに書き込まれません。必要に応じて、この配列に他の例外タイプを追加できます。</target>
        </trans-unit>
        <trans-unit id="a3d25c2efa49e30caef3ae427433b7e602456140" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$errors&lt;/code&gt; variable is bound to the view by the &lt;code&gt;Illuminate\View\Middleware\ShareErrorsFromSession&lt;/code&gt; middleware, which is provided by the &lt;code&gt;web&lt;/code&gt; middleware group. &lt;strong&gt;When this middleware is applied an &lt;code&gt;$errors&lt;/code&gt; variable will always be available in your views&lt;/strong&gt;, allowing you to conveniently assume the &lt;code&gt;$errors&lt;/code&gt; variable is always defined and can be safely used.</source>
          <target state="translated">&lt;code&gt;$errors&lt;/code&gt; 変数は、ビューにバインドさ &lt;code&gt;Illuminate\View\Middleware\ShareErrorsFromSession&lt;/code&gt; によって提供されたミドルウェア、 &lt;code&gt;web&lt;/code&gt; ミドルウェアグループ。&lt;strong&gt;このミドルウェアを適用すると、 &lt;code&gt;$errors&lt;/code&gt; 変数が常にビュー&lt;/strong&gt;で&lt;strong&gt;使用可能になり&lt;/strong&gt;、 &lt;code&gt;$errors&lt;/code&gt; 変数が常に定義されていて安全に使用できると便利に想定できます。</target>
        </trans-unit>
        <trans-unit id="00c8919461f556229af01c5f351c823e056ebc33" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$input&lt;/code&gt; parameter passed to your &lt;code&gt;Closure&lt;/code&gt; will be an instance of &lt;code&gt;Illuminate\Support\Fluent&lt;/code&gt; and may be used to access your input and files.</source>
          <target state="translated">&lt;code&gt;$input&lt;/code&gt; あなたに渡されたパラメータ &lt;code&gt;Closure&lt;/code&gt; のインスタンスになります &lt;code&gt;Illuminate\Support\Fluent&lt;/code&gt; し、あなたの入力やファイルにアクセスするために使用することができます。</target>
        </trans-unit>
        <trans-unit id="d62fea4bc8fa5e38b71f1e8bf33c946ebcc34d47" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$loop&lt;/code&gt; variable also contains a variety of other useful properties:</source>
          <target state="translated">&lt;code&gt;$loop&lt;/code&gt; 変数は、他の有用な特性の様々なが含まれています。</target>
        </trans-unit>
        <trans-unit id="1562087f8573492aaf5351ca63170bd717accc0e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$schedule-&amp;gt;job&lt;/code&gt; method now respects the &lt;code&gt;queue&lt;/code&gt; and &lt;code&gt;connection&lt;/code&gt; properties on the job class if a connection / job is not explicitly passed into the &lt;code&gt;job&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;$schedule-&amp;gt;job&lt;/code&gt; 方法は、今尊重 &lt;code&gt;queue&lt;/code&gt; と &lt;code&gt;connection&lt;/code&gt; 接続/ジョブが明示的に渡されていない場合はジョブ・クラスのプロパティを &lt;code&gt;job&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="9f150d4aa69a652c60371256ad762a62023933e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--model&lt;/code&gt; option may be used to indicate the name of the model created by the factory. This option will pre-fill the generated factory file with the given model:</source>
          <target state="translated">&lt;code&gt;--model&lt;/code&gt; オプションは、工場で作成されたモデルの名前を示すために使用することができます。このオプションは、生成されたファクトリファイルに指定されたモデルを事前に入力します。</target>
        </trans-unit>
        <trans-unit id="098babe87ba8253060449da0c56a7312a643f962" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--once&lt;/code&gt; option may be used to instruct the worker to only process a single job from the queue:</source>
          <target state="translated">&lt;code&gt;--once&lt;/code&gt; のオプションは、キューから単一のジョブを処理するために、作業者に指示するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="2c3f21d526f18adae2178c3c8bb56c14c772ba9d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--stop-when-empty&lt;/code&gt; option may be used to instruct the worker to process all jobs and then exit gracefully. This option can be useful when working Laravel queues within a Docker container if you wish to shutdown the container after the queue is empty:</source>
          <target state="translated">&lt;code&gt;--stop-when-empty&lt;/code&gt; オプションは、すべてのジョブを処理した後、正常に終了するため、作業者に指示するために使用することができます。このオプションは、Dockerコンテナー内でLaravelキューを操作するときに、キューが空になった後にコンテナーをシャットダウンする場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="b83a80bbfa35a48ec0f2be7e66835368da894903" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--table&lt;/code&gt; and &lt;code&gt;--create&lt;/code&gt; options may also be used to indicate the name of the table and whether the migration will be creating a new table. These options pre-fill the generated migration stub file with the specified table:</source>
          <target state="translated">&lt;code&gt;--table&lt;/code&gt; と &lt;code&gt;--create&lt;/code&gt; オプションもテーブルの移行は、新しいテーブルを作成するかどうかを名前を示すために使用することができます。これらのオプションは、生成された移行スタブファイルに指定されたテーブルを事前に入力します。</target>
        </trans-unit>
        <trans-unit id="c610311bb119b5b29ca27d0b1adca74bd894636a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--timeout&lt;/code&gt; value should always be at least several seconds shorter than your &lt;code&gt;retry_after&lt;/code&gt; configuration value. This will ensure that a worker processing a given job is always killed before the job is retried. If your &lt;code&gt;--timeout&lt;/code&gt; option is longer than your &lt;code&gt;retry_after&lt;/code&gt; configuration value, your jobs may be processed twice.</source>
          <target state="translated">&lt;code&gt;--timeout&lt;/code&gt; 値は常にあなたよりも少なくとも数秒短くする必要があります &lt;code&gt;retry_after&lt;/code&gt; の設定値。これにより、特定のジョブを処理しているワーカーが、ジョブが再試行される前に必ず強制終了されます。あなたの場合は &lt;code&gt;--timeout&lt;/code&gt; オプションがあなたのより長い &lt;code&gt;retry_after&lt;/code&gt; の設定値、あなたの仕事は、2回処理することができます。</target>
        </trans-unit>
        <trans-unit id="add9b6f234b2d2d435494f23286178421b5f6a9b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@auth&lt;/code&gt; and &lt;code&gt;@guest&lt;/code&gt; directives may be used to quickly determine if the current user is authenticated or is a guest:</source>
          <target state="translated">&lt;code&gt;@auth&lt;/code&gt; と &lt;code&gt;@guest&lt;/code&gt; ディレクティブは、現在のユーザが認証またはゲストである場合に迅速に決定するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="08bdffc7c917323cdd4eede52213b44ce9b26815" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@inject&lt;/code&gt; directive may be used to retrieve a service from the Laravel &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;. The first argument passed to &lt;code&gt;@inject&lt;/code&gt; is the name of the variable the service will be placed into, while the second argument is the class or interface name of the service you wish to resolve:</source>
          <target state="translated">&lt;code&gt;@inject&lt;/code&gt; ディレクティブはLaravelのからサービスを取得するために使用することができる&lt;a href=&quot;container&quot;&gt;サービスコンテナ&lt;/a&gt;。 &lt;code&gt;@inject&lt;/code&gt; に渡される最初の引数は、サービスが配置される変数の名前です。2番目の引数は、解決するサービスのクラスまたはインターフェースの名前です。</target>
        </trans-unit>
        <trans-unit id="a457a4d7b4f4e1588c2e92f9a351ce1e82fbb65b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@lang&lt;/code&gt; directive does not escape any output. You are &lt;strong&gt;fully responsible&lt;/strong&gt; for escaping your own output when using this directive.</source>
          <target state="translated">&lt;code&gt;@lang&lt;/code&gt; のディレクティブは、任意の出力をエスケープしません。あなたは&lt;strong&gt;完全に責任&lt;/strong&gt;このディレクティブを使用するときに、独自の出力をエスケープするため。</target>
        </trans-unit>
        <trans-unit id="f46b7133217b7bc5f3bf92b6d5633de50a06e4b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@verbatim&lt;/code&gt; Directive</source>
          <target state="translated">&lt;code&gt;@verbatim&lt;/code&gt; 指令</target>
        </trans-unit>
        <trans-unit id="a61baf726ad1cee29805fb43e8ffa71fc112f42a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Authenticate&lt;/code&gt; Middleware</source>
          <target state="translated">&lt;code&gt;Authenticate&lt;/code&gt; ミドルウェア</target>
        </trans-unit>
        <trans-unit id="47f075d92f9490c4f3024ffa6e3f20e4bcd8758a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Broadcast::routes&lt;/code&gt; method will automatically place its routes within the &lt;code&gt;web&lt;/code&gt; middleware group; however, you may pass an array of route attributes to the method if you would like to customize the assigned attributes:</source>
          <target state="translated">&lt;code&gt;Broadcast::routes&lt;/code&gt; メソッドが自動的以内にそのルートを配置します &lt;code&gt;web&lt;/code&gt; ミドルウェア群と、ただし、割り当てられた属性をカスタマイズする場合は、ルート属性の配列をメソッドに渡すことができます。</target>
        </trans-unit>
        <trans-unit id="1d084db1919e75c703d90ae3d75de2deb845dc1a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Broadcasting&lt;/code&gt; Directory</source>
          <target state="translated">&lt;code&gt;Broadcasting&lt;/code&gt; ディレクトリ</target>
        </trans-unit>
        <trans-unit id="4e2b829a00510c0ac3fe2a15dcf8072ab3d21356" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Broadcasting&lt;/code&gt; directory contains all of the broadcast channel classes for your application. These classes are generated using the &lt;code&gt;make:channel&lt;/code&gt; command. This directory does not exist by default, but will be created for you when you create your first channel. To learn more about channels, check out the documentation on &lt;a href=&quot;broadcasting&quot;&gt;event broadcasting&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Broadcasting&lt;/code&gt; ディレクトリは、アプリケーションのための放送チャンネルのすべてのクラスが含まれています。これらのクラスは、 &lt;code&gt;make:channel&lt;/code&gt; コマンドを使用して生成されます。このディレクトリはデフォルトでは存在しませんが、最初のチャネルを作成するときに作成されます。チャンネルの詳細については、&lt;a href=&quot;broadcasting&quot;&gt;イベントブロードキャスト&lt;/a&gt;に関するドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="59edf5cec3a6e9a71d3393d81ed35a7a18fec757" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ConnectionInterface&lt;/code&gt; Contract</source>
          <target state="translated">&lt;code&gt;ConnectionInterface&lt;/code&gt; 契約</target>
        </trans-unit>
        <trans-unit id="865110ddf8df22e78dd685560105b607d3f9c8d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Console&lt;/code&gt; Directory</source>
          <target state="translated">&lt;code&gt;Console&lt;/code&gt; ディレクトリ</target>
        </trans-unit>
        <trans-unit id="61805ff080045f068f4c535ff73a9ad0e18df382" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Console&lt;/code&gt; directory contains all of the custom Artisan commands for your application. These commands may be generated using the &lt;code&gt;make:command&lt;/code&gt; command. This directory also houses your console kernel, which is where your custom Artisan commands are registered and your &lt;a href=&quot;scheduling&quot;&gt;scheduled tasks&lt;/a&gt; are defined.</source>
          <target state="translated">&lt;code&gt;Console&lt;/code&gt; ディレクトリは、アプリケーションのカスタム職人コマンドのすべてが含まれています。これらのコマンドは、 &lt;code&gt;make:command&lt;/code&gt; コマンドを使用して生成できます。このディレクトリには、カスタムのアーティザンコマンドが登録され、&lt;a href=&quot;scheduling&quot;&gt;スケジュールされたタスク&lt;/a&gt;が定義されるコンソールカーネルも格納されます。</target>
        </trans-unit>
        <trans-unit id="0153aa189fb79aca1922530d9403253ba6a042a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DB&lt;/code&gt; facade's transaction methods control the transactions for both the &lt;a href=&quot;queries&quot;&gt;query builder&lt;/a&gt; and &lt;a href=&quot;eloquent&quot;&gt;Eloquent ORM&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;DB&lt;/code&gt; ファサードの取引方法は、両方のためのトランザクション制御&lt;a href=&quot;queries&quot;&gt;クエリービルダー&lt;/a&gt;と&lt;a href=&quot;eloquent&quot;&gt;雄弁ORMを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b3326a7e1ad0c511e0d1e9ad9be47e06e507565c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EventServiceProvider&lt;/code&gt; included with your Laravel application provides a convenient place to register all of your application's event listeners. The &lt;code&gt;listen&lt;/code&gt; property contains an array of all events (keys) and their listeners (values). Of course, you may add as many events to this array as your application requires. For example, let's add a &lt;code&gt;OrderShipped&lt;/code&gt; event:</source>
          <target state="translated">&lt;code&gt;EventServiceProvider&lt;/code&gt; あなたLaravelアプリケーションに含まれては、アプリケーションのイベントリスナーのすべてを登録するための便利な場所を提供します。 &lt;code&gt;listen&lt;/code&gt; プロパティは、すべてのイベント（キー）とそのリスナー（値）の配列が含まれています。もちろん、アプリケーションに必要なだけこの配列にイベントを追加できます。たとえば、 &lt;code&gt;OrderShipped&lt;/code&gt; イベントを追加してみましょう。</target>
        </trans-unit>
        <trans-unit id="affd1cf8cc9da3ab94510e44cb75dd161353ee83" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Events&lt;/code&gt; Directory</source>
          <target state="translated">&lt;code&gt;Events&lt;/code&gt; ディレクトリ</target>
        </trans-unit>
        <trans-unit id="3d0a313b20d4ab5b9d79bd74ddeec407bbea08fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Exceptions&lt;/code&gt; Directory</source>
          <target state="translated">&lt;code&gt;Exceptions&lt;/code&gt; ディレクトリ</target>
        </trans-unit>
        <trans-unit id="a11d53c32de127bc726ff8ec1ddb765977f3acfe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Exceptions&lt;/code&gt; directory contains your application's exception handler and is also a good place to place any exceptions thrown by your application. If you would like to customize how your exceptions are logged or rendered, you should modify the &lt;code&gt;Handler&lt;/code&gt; class in this directory.</source>
          <target state="translated">&lt;code&gt;Exceptions&lt;/code&gt; ディレクトリは、アプリケーションの例外ハンドラが含まれており、また、アプリケーションによってスローされた例外を置くのに良い場所です。例外の記録またはレンダリングの方法をカスタマイズする場合は、このディレクトリの &lt;code&gt;Handler&lt;/code&gt; クラスを変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="16d4d615ff7f2dc62d9828535b34171a5861c733" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Facade&lt;/code&gt; base class makes use of the &lt;code&gt;__callStatic()&lt;/code&gt; magic-method to defer calls from your facade to an object resolved from the container. In the example below, a call is made to the Laravel cache system. By glancing at this code, one might assume that the static method &lt;code&gt;get&lt;/code&gt; is being called on the &lt;code&gt;Cache&lt;/code&gt; class:</source>
          <target state="translated">&lt;code&gt;Facade&lt;/code&gt; 基底クラスは使用可能 &lt;code&gt;__callStatic()&lt;/code&gt; コンテナから解決されたオブジェクトへのあなたのファサードから延期呼び出しにマジックメソッドを。以下の例では、Laravelキャッシュシステムが呼び出されます。このコードをちらりと見ると、静的メソッド &lt;code&gt;get&lt;/code&gt; が &lt;code&gt;Cache&lt;/code&gt; クラスで呼び出されていると想定できます。</target>
        </trans-unit>
        <trans-unit id="6277b0abf49cc8a15335fca67cf4f13cd4eb757f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Gate&lt;/code&gt; Contract</source>
          <target state="translated">&lt;code&gt;Gate&lt;/code&gt; 契約</target>
        </trans-unit>
        <trans-unit id="d6d36f2e60a64411734eb61ff15495a440af767f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Http&lt;/code&gt; Directory</source>
          <target state="translated">&lt;code&gt;Http&lt;/code&gt; ディレクトリ</target>
        </trans-unit>
        <trans-unit id="c4475d0dfd839057e787ff6cde1999e922de21c3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Http&lt;/code&gt; directory contains your controllers, middleware, and form requests. Almost all of the logic to handle requests entering your application will be placed in this directory.</source>
          <target state="translated">&lt;code&gt;Http&lt;/code&gt; ディレクトリは、コントローラ、ミドルウェア、およびフォームの要求が含まれています。アプリケーションに入るリクエストを処理するためのほとんどすべてのロジックは、このディレクトリに配置されます。</target>
        </trans-unit>
        <trans-unit id="0c33071d79534382bee64001d9cceea38c553596" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Illuminate\Contracts\Auth\UserProvider&lt;/code&gt; implementations are only responsible for fetching a &lt;code&gt;Illuminate\Contracts\Auth\Authenticatable&lt;/code&gt; implementation out of a persistent storage system, such as MySQL, Riak, etc. These two interfaces allow the Laravel authentication mechanisms to continue functioning regardless of how the user data is stored or what type of class is used to represent it.</source>
          <target state="translated">&lt;code&gt;Illuminate\Contracts\Auth\UserProvider&lt;/code&gt; 実装では、フェッチのためにのみ責任を負う &lt;code&gt;Illuminate\Contracts\Auth\Authenticatable&lt;/code&gt; これら二つのインタフェースはLaravel認証メカニズムに関係なく機能し続けることを可能にするなどのMySQL、Riakに、のように、永続的なストレージシステムのうちの実装をユーザーデータの保存方法や、それを表すために使用されるクラスのタイプの説明。</target>
        </trans-unit>
        <trans-unit id="438034be0ddb2d7e99a846d2c3dd01fad8394c09" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Illuminate\Contracts\Cache\Factory&lt;/code&gt; and &lt;code&gt;Illuminate\Contracts\Cache\Repository&lt;/code&gt;&lt;a href=&quot;contracts&quot;&gt;contracts&lt;/a&gt; provide access to Laravel's cache services. The &lt;code&gt;Factory&lt;/code&gt; contract provides access to all cache drivers defined for your application. The &lt;code&gt;Repository&lt;/code&gt; contract is typically an implementation of the default cache driver for your application as specified by your &lt;code&gt;cache&lt;/code&gt; configuration file.</source>
          <target state="translated">&lt;code&gt;Illuminate\Contracts\Cache\Factory&lt;/code&gt; と &lt;code&gt;Illuminate\Contracts\Cache\Repository&lt;/code&gt; &lt;a href=&quot;contracts&quot;&gt;契約は&lt;/a&gt; Laravelのキャッシュサービスへのアクセスを提供します。 &lt;code&gt;Factory&lt;/code&gt; 契約は、アプリケーション用に定義されたすべてのキャッシュドライバへのアクセスを提供します。 &lt;code&gt;Repository&lt;/code&gt; 契約は通常、あなたによって指定されたアプリケーションのデフォルトのキャッシュドライバの実装である &lt;code&gt;cache&lt;/code&gt; 設定ファイル。</target>
        </trans-unit>
        <trans-unit id="dc59e103aa4d993f4705bbe1376c30be315aa2f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Illuminate\Contracts\Database\ConnectionInterface&lt;/code&gt; contract's &lt;code&gt;select&lt;/code&gt; and &lt;code&gt;selectOne&lt;/code&gt; method signatures have been updated to accommodate the new &lt;code&gt;$useReadPdo&lt;/code&gt; argument:</source>
          <target state="translated">&lt;code&gt;Illuminate\Contracts\Database\ConnectionInterface&lt;/code&gt; 契約の &lt;code&gt;select&lt;/code&gt; と &lt;code&gt;selectOne&lt;/code&gt; メソッドのシグネチャは、新しい対応するために更新されました &lt;code&gt;$useReadPdo&lt;/code&gt; 引数を：</target>
        </trans-unit>
        <trans-unit id="e851e3d392c082918428c1691b8f8fd1c477b456" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; instance provides a variety of methods for examining the HTTP request for your application and extends the &lt;code&gt;Symfony\Component\HttpFoundation\Request&lt;/code&gt; class. We will discuss a few of the most important methods below.</source>
          <target state="translated">&lt;code&gt;Illuminate\Http\Request&lt;/code&gt; インスタンスは、アプリケーションのためのHTTPリクエストを調べるための様々な方法を提供し、拡張 &lt;code&gt;Symfony\Component\HttpFoundation\Request&lt;/code&gt; クラスを。以下で最も重要な方法のいくつかについて説明します。</target>
        </trans-unit>
        <trans-unit id="2e67abdba47fc36de3b1b205cf6476f427c15fbb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Illuminate\Http\UploadedFile&lt;/code&gt; class provides a &lt;code&gt;fake&lt;/code&gt; method which may be used to generate dummy files or images for testing. This, combined with the &lt;code&gt;Storage&lt;/code&gt; facade's &lt;code&gt;fake&lt;/code&gt; method greatly simplifies the testing of file uploads. For example, you may combine these two features to easily test an avatar upload form:</source>
          <target state="translated">&lt;code&gt;Illuminate\Http\UploadedFile&lt;/code&gt; クラスが提供して &lt;code&gt;fake&lt;/code&gt; テスト用のダミーファイルまたはイメージを生成するために使用することができる方法を。これと &lt;code&gt;Storage&lt;/code&gt; ファサードの &lt;code&gt;fake&lt;/code&gt; メソッドを組み合わせると、ファイルアップロードのテストが大幅に簡略化されます。たとえば、次の2つの機能を組み合わせて、アバターアップロードフォームを簡単にテストできます。</target>
        </trans-unit>
        <trans-unit id="4f13092a86505aa027f49083b28ba9cc0d69da88" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Illuminate\Support\Collection&lt;/code&gt; class provides a fluent, convenient wrapper for working with arrays of data. For example, check out the following code. We'll use the &lt;code&gt;collect&lt;/code&gt; helper to create a new collection instance from the array, run the &lt;code&gt;strtoupper&lt;/code&gt; function on each element, and then remove all empty elements:</source>
          <target state="translated">&lt;code&gt;Illuminate\Support\Collection&lt;/code&gt; クラスは、データの配列を操作するための流暢な、便利なラッパーを提供します。たとえば、次のコードを確認してください。 &lt;code&gt;collect&lt;/code&gt; ヘルパーを使用して、配列から新しいコレクションインスタンスを作成し、各要素に対して &lt;code&gt;strtoupper&lt;/code&gt; 関数を実行してから、すべての空の要素を削除します。</target>
        </trans-unit>
        <trans-unit id="edb2d21a6a6f10dcfa9568dedda94db0583b9e20" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Illuminate\Support\Debug\Dumper&lt;/code&gt; and &lt;code&gt;Illuminate\Support\Debug\HtmlDumper&lt;/code&gt; classes have been removed in favor of using Symfony's native variable dumpers: &lt;code&gt;Symfony\Component\VarDumper\VarDumper&lt;/code&gt; and &lt;code&gt;Symfony\Component\VarDumper\Dumper\HtmlDumper&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Illuminate\Support\Debug\Dumper&lt;/code&gt; と &lt;code&gt;Illuminate\Support\Debug\HtmlDumper&lt;/code&gt; クラスはsymfonyのネイティブ変数ダンプを使用しての賛成で削除されています： &lt;code&gt;Symfony\Component\VarDumper\VarDumper&lt;/code&gt; と &lt;code&gt;Symfony\Component\VarDumper\Dumper\HtmlDumper&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6723b9e70e0caf6c07d1907ca6ff08d51aa53cf6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Jobs&lt;/code&gt; Directory</source>
          <target state="translated">&lt;code&gt;Jobs&lt;/code&gt; ディレクトリ</target>
        </trans-unit>
        <trans-unit id="381abc17d4d6483f033fc1ce2bc7b7964b4792cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Listeners&lt;/code&gt; Directory</source>
          <target state="translated">&lt;code&gt;Listeners&lt;/code&gt; ディレクトリ</target>
        </trans-unit>
        <trans-unit id="0b1714b79fd704dd53c83e0e199b96492db40786" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Mail&lt;/code&gt; Directory</source>
          <target state="translated">&lt;code&gt;Mail&lt;/code&gt; ディレクトリ</target>
        </trans-unit>
        <trans-unit id="d91de83413766bd35fc1d3da9e96feadb8dfeff6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Notifications&lt;/code&gt; Directory</source>
          <target state="translated">&lt;code&gt;Notifications&lt;/code&gt; ディレクトリ</target>
        </trans-unit>
        <trans-unit id="e4aaa6cb4c2bb64ce3ecdd9b1b90622c4c584ab5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Paginator&lt;/code&gt; class does not need to know the total number of items in the result set; however, because of this, the class does not have methods for retrieving the index of the last page. The &lt;code&gt;LengthAwarePaginator&lt;/code&gt; accepts almost the same arguments as the &lt;code&gt;Paginator&lt;/code&gt;; however, it does require a count of the total number of items in the result set.</source>
          <target state="translated">&lt;code&gt;Paginator&lt;/code&gt; クラスは、結果セット内の項目の合計数を知る必要はありません。ただし、このため、このクラスには最後のページのインデックスを取得するためのメソッドがありません。 &lt;code&gt;LengthAwarePaginator&lt;/code&gt; はほぼ同じ引数受け入れ &lt;code&gt;Paginator&lt;/code&gt; 。ただし、結果セット内のアイテムの総数をカウントする必要があります。</target>
        </trans-unit>
        <trans-unit id="a1a77b3f6f28770e9cd870bcbde1f7d890d3f8d1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Policies&lt;/code&gt; Directory</source>
          <target state="translated">&lt;code&gt;Policies&lt;/code&gt; ディレクトリ</target>
        </trans-unit>
        <trans-unit id="aac21db1bc1f2575eae12f3f8806fcfb874ce934" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Providers&lt;/code&gt; Directory</source>
          <target state="translated">&lt;code&gt;Providers&lt;/code&gt; ディレクトリ</target>
        </trans-unit>
        <trans-unit id="0f8311b056e03e6c1479680ccfe5e1de9e782d12" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Providers&lt;/code&gt; directory contains all of the &lt;a href=&quot;providers&quot;&gt;service providers&lt;/a&gt; for your application. Service providers bootstrap your application by binding services in the service container, registering events, or performing any other tasks to prepare your application for incoming requests.</source>
          <target state="translated">&lt;code&gt;Providers&lt;/code&gt; ディレクトリには、すべての含まれている&lt;a href=&quot;providers&quot;&gt;サービスプロバイダ&lt;/a&gt;アプリケーションのを。サービスプロバイダーは、サービスコンテナー内のサービスをバインドしたり、イベントを登録したり、その他のタスクを実行してアプリケーションを受信リクエスト用に準備することにより、アプリケーションをブートストラップします。</target>
        </trans-unit>
        <trans-unit id="443cfe467962becd2cd129a108f865d784ec8407" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ResetsPasswords&lt;/code&gt; Trait</source>
          <target state="translated">&lt;code&gt;ResetsPasswords&lt;/code&gt; 形質</target>
        </trans-unit>
        <trans-unit id="f23db26e2495639dd67917079baa2ac1b32e00b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Route::redirect&lt;/code&gt; Method</source>
          <target state="translated">&lt;code&gt;Route::redirect&lt;/code&gt; する方法</target>
        </trans-unit>
        <trans-unit id="1e80d0aa59442dbcab730cd9b917deef05d8eaf5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Route::redirect&lt;/code&gt; method now returns a &lt;code&gt;302&lt;/code&gt; HTTP status code redirect. The &lt;code&gt;permanentRedirect&lt;/code&gt; method has been added to allow &lt;code&gt;301&lt;/code&gt; redirects.</source>
          <target state="translated">&lt;code&gt;Route::redirect&lt;/code&gt; 方法について返し &lt;code&gt;302&lt;/code&gt; HTTPステータスコードをリダイレクト。 &lt;code&gt;permanentRedirect&lt;/code&gt; の方法を可能にするために追加された &lt;code&gt;301&lt;/code&gt; のリダイレクト。</target>
        </trans-unit>
        <trans-unit id="e50b626625f6c371e01f924ab96dec2879387138" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Rules&lt;/code&gt; Directory</source>
          <target state="translated">&lt;code&gt;Rules&lt;/code&gt; ディレクトリ</target>
        </trans-unit>
        <trans-unit id="ec35fee719a7b891419d0658551b660990f90bee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SendsPasswordResetEmails&lt;/code&gt; Trait</source>
          <target state="translated">&lt;code&gt;SendsPasswordResetEmails&lt;/code&gt; 形質</target>
        </trans-unit>
        <trans-unit id="29be7994e43c14d23d7816a75782bfa34400f6a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ShouldBroadcast&lt;/code&gt; Interface</source>
          <target state="translated">&lt;code&gt;ShouldBroadcast&lt;/code&gt; インタフェース</target>
        </trans-unit>
        <trans-unit id="05ebca06226728ae61f7405e8227db1b6fa6c6b8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ShouldBroadcast&lt;/code&gt; interface requires our event to define a &lt;code&gt;broadcastOn&lt;/code&gt; method. This method is responsible for returning the channels that the event should broadcast on. An empty stub of this method is already defined on generated event classes, so we only need to fill in its details. We only want the creator of the order to be able to view status updates, so we will broadcast the event on a private channel that is tied to the order:</source>
          <target state="translated">&lt;code&gt;ShouldBroadcast&lt;/code&gt; インタフェースを定義するために私たちのイベントが必要です &lt;code&gt;broadcastOn&lt;/code&gt; の方法を。このメソッドは、イベントがブロードキャストする必要があるチャネルを返す必要があります。このメソッドの空のスタブは、生成されたイベントクラスで既に定義されているため、詳細を入力するだけで済みます。注文の作成者のみがステータスの更新を表示できるようにしたいので、注文に関連付けられているプラ​​イベートチャネルでイベントをブロードキャストします。</target>
        </trans-unit>
        <trans-unit id="12da2199f3cf23df9fb289d52b47f641c858bcf4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ShouldBroadcast&lt;/code&gt; interface requires you to implement a single method: &lt;code&gt;broadcastOn&lt;/code&gt;. The &lt;code&gt;broadcastOn&lt;/code&gt; method should return a channel or array of channels that the event should broadcast on. The channels should be instances of &lt;code&gt;Channel&lt;/code&gt;, &lt;code&gt;PrivateChannel&lt;/code&gt;, or &lt;code&gt;PresenceChannel&lt;/code&gt;. Instances of &lt;code&gt;Channel&lt;/code&gt; represent public channels that any user may subscribe to, while &lt;code&gt;PrivateChannels&lt;/code&gt; and &lt;code&gt;PresenceChannels&lt;/code&gt; represent private channels that require &lt;a href=&quot;#authorizing-channels&quot;&gt;channel authorization&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;ShouldBroadcast&lt;/code&gt; の：インタフェースは、単一のメソッドを実装する必要があります &lt;code&gt;broadcastOn&lt;/code&gt; を。 &lt;code&gt;broadcastOn&lt;/code&gt; の方法は、イベントが放送する必要があることチャネルまたはチャネルの配列を返すべきです。チャネルは、 &lt;code&gt;Channel&lt;/code&gt; 、 &lt;code&gt;PrivateChannel&lt;/code&gt; 、または &lt;code&gt;PresenceChannel&lt;/code&gt; のインスタンスである必要があります。 &lt;code&gt;Channel&lt;/code&gt; のインスタンスは、任意のユーザーがサブスクライブできるパブリックチャネルを表し、 &lt;code&gt;PrivateChannels&lt;/code&gt; および &lt;code&gt;PresenceChannels&lt;/code&gt; は、&lt;a href=&quot;#authorizing-channels&quot;&gt;チャネル認証&lt;/a&gt;を必要とするプライベートチャネルを表します。</target>
        </trans-unit>
        <trans-unit id="81e629702c6505fbbe48dc0ececf8e3d8b079a48" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Storage&lt;/code&gt; facade may be used to interact with any of your configured disks. For example, you may use the &lt;code&gt;put&lt;/code&gt; method on the facade to store an avatar on the default disk. If you call methods on the &lt;code&gt;Storage&lt;/code&gt; facade without first calling the &lt;code&gt;disk&lt;/code&gt; method, the method call will automatically be passed to the default disk:</source>
          <target state="translated">&lt;code&gt;Storage&lt;/code&gt; ファサードは、あなたの構成されたディスクのいずれかと対話するために使用することができます。たとえば、デフォルトのディスクにアバターを保存するには、ファサードの &lt;code&gt;put&lt;/code&gt; メソッドを使用できます。あなたは上のメソッドを呼び出す場合は &lt;code&gt;Storage&lt;/code&gt; 最初呼び出すことなく、ファサードを &lt;code&gt;disk&lt;/code&gt; 法を、メソッド呼び出しは、自動的にデフォルトのディスクに渡されます。</target>
        </trans-unit>
        <trans-unit id="0aed306fc392e26d22548f25aeb78e98c7200942" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Storage&lt;/code&gt; facade's &lt;code&gt;fake&lt;/code&gt; method allows you to easily generate a fake disk that, combined with the file generation utilities of the &lt;code&gt;UploadedFile&lt;/code&gt; class, greatly simplifies the testing of file uploads. For example:</source>
          <target state="translated">&lt;code&gt;Storage&lt;/code&gt; ファサードの &lt;code&gt;fake&lt;/code&gt; 方法は、簡単のファイル生成ユーティリティと組み合わせた、という偽のディスクを生成することを可能にする &lt;code&gt;UploadedFile&lt;/code&gt; クラスを、大幅にファイルのアップロードのテストを簡素化します。例えば：</target>
        </trans-unit>
        <trans-unit id="de3dfed6458aafe3fbf565945997542f7e59442b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::orderedUuid&lt;/code&gt; method generates a &quot;timestamp first&quot; UUID that may be efficiently stored in an indexed database column:</source>
          <target state="translated">&lt;code&gt;Str::orderedUuid&lt;/code&gt; 方法は、効率的に索引付けされたデータベースの列に格納することができる「タイムスタンプ最初の」UUIDを生成します。</target>
        </trans-unit>
        <trans-unit id="d0be5769152b18d35c6e57b609f4311cf95635d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Str::uuid&lt;/code&gt; method generates a UUID (version 4):</source>
          <target state="translated">&lt;code&gt;Str::uuid&lt;/code&gt; 方法は、UUID（バージョン4）を生成します。</target>
        </trans-unit>
        <trans-unit id="0f952850031fe39c33de614ec967bd9bbbd37931" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;UploadedFile&lt;/code&gt; class also contains methods for accessing the file's fully-qualified path and its extension. The &lt;code&gt;extension&lt;/code&gt; method will attempt to guess the file's extension based on its contents. This extension may be different from the extension that was supplied by the client:</source>
          <target state="translated">&lt;code&gt;UploadedFile&lt;/code&gt; のクラスは、ファイルの完全修飾パスとその拡張にアクセスするためのメソッドが含まれています。 &lt;code&gt;extension&lt;/code&gt; メソッドは、その内容に基づいてファイルの拡張子を推測しようとします。この拡張機能は、クライアントによって提供された拡張機能とは異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="4dfd4e903db1e6b3c1fcb26d55ccba87393d5c16" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;User&lt;/code&gt; model that is included with your Laravel application includes two helpful methods for authorizing actions: &lt;code&gt;can&lt;/code&gt; and &lt;code&gt;cant&lt;/code&gt;. The &lt;code&gt;can&lt;/code&gt; method receives the action you wish to authorize and the relevant model. For example, let's determine if a user is authorized to update a given &lt;code&gt;Post&lt;/code&gt; model:</source>
          <target state="translated">&lt;code&gt;User&lt;/code&gt; ：あなたのLaravelアプリケーションに含まれているモデルは、アクションを許可するための2つ便利な方法が含ま &lt;code&gt;can&lt;/code&gt; と &lt;code&gt;cant&lt;/code&gt; 。 &lt;code&gt;can&lt;/code&gt; 方法は、あなたが認可したい行動と関連するモデルを受け取ります。たとえば、特定の &lt;code&gt;Post&lt;/code&gt; モデルを更新する権限がユーザーにあるかどうかを判断しましょう。</target>
        </trans-unit>
        <trans-unit id="f366592bf9025a9f3a62a81d31949d49aba929bf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Validator&lt;/code&gt; Contract</source>
          <target state="translated">&lt;code&gt;Validator&lt;/code&gt; 契約</target>
        </trans-unit>
        <trans-unit id="c758be7fae18de0e27eab44ecf4e14e1969562c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VerifyCsrfToken&lt;/code&gt;&lt;a href=&quot;middleware&quot;&gt;middleware&lt;/a&gt;, which is included in the &lt;code&gt;web&lt;/code&gt; middleware group, will automatically verify that the token in the request input matches the token stored in the session.</source>
          <target state="translated">&lt;code&gt;VerifyCsrfToken&lt;/code&gt; の&lt;a href=&quot;middleware&quot;&gt;ミドルウェア&lt;/a&gt;に含まれ、 &lt;code&gt;web&lt;/code&gt; ミドルウェアグループは、自動的に要求入力にトークンがセッションに格納されたトークンと一致することを検証します。</target>
        </trans-unit>
        <trans-unit id="2fceb537c95ee25371936ad38f60594ca173d286" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__&lt;/code&gt; function translates the given translation string or translation key using your &lt;a href=&quot;localization&quot;&gt;localization files&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;__&lt;/code&gt; 機能は、あなたの使用して、指定された翻訳文字列または変換キーを翻訳&lt;a href=&quot;localization&quot;&gt;ローカライズファイルを&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="2af2aecb5d3d174ea33d080bfab188d69f825850" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;abort&lt;/code&gt; function throws &lt;a href=&quot;errors#http-exceptions&quot;&gt;an HTTP exception&lt;/a&gt; which will be rendered by the &lt;a href=&quot;errors#the-exception-handler&quot;&gt;exception handler&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;abort&lt;/code&gt; 機能は、スロー&lt;a href=&quot;errors#http-exceptions&quot;&gt;HTTP例外&lt;/a&gt;によってレンダリングされる&lt;a href=&quot;errors#the-exception-handler&quot;&gt;例外ハンドラを&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="51327f2b2f9ade3688b0bb2e504bab72a1f64180" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;abort&lt;/code&gt; helper will immediately raise an exception which will be rendered by the exception handler. Optionally, you may provide the response text:</source>
          <target state="translated">&lt;code&gt;abort&lt;/code&gt; ヘルパーはすぐに例外ハンドラによってレンダリングされる例外が発生します。オプションで、応答テキストを提供できます。</target>
        </trans-unit>
        <trans-unit id="e4776c7de50efea50d6843ba00650a38cdfbfde8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;abort_if&lt;/code&gt; function throws an HTTP exception if a given boolean expression evaluates to &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;abort_if&lt;/code&gt; 与えられたブール式がと評価された場合の機能は、HTTP例外をスロー &lt;code&gt;true&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="862623613edb876cd49d86fed1cd22d5310a8d15" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;abort_unless&lt;/code&gt; function throws an HTTP exception if a given boolean expression evaluates to &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;abort_unless&lt;/code&gt; のにブール式を評価する与えられた場合、この関数は、HTTP例外をスロー &lt;code&gt;false&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="322bc6834483effc87b86ff8d39e25143d55989a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;action&lt;/code&gt; function generates a URL for the given controller action. You do not need to pass the full namespace of the controller. Instead, pass the controller class name relative to the &lt;code&gt;App\Http\Controllers&lt;/code&gt; namespace:</source>
          <target state="translated">&lt;code&gt;action&lt;/code&gt; 関数は、指定したコントローラのアクションのためのURLを生成します。コントローラの完全な名前空間を渡す必要はありません。代わりに、 &lt;code&gt;App\Http\Controllers&lt;/code&gt; 名前空間に関連するコントローラークラス名を渡します。</target>
        </trans-unit>
        <trans-unit id="389d6316d12a36ba5437e1f0199ca14ddf7a2390" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;add&lt;/code&gt; method will only add the item to the cache if it does not already exist in the cache store. The method will return &lt;code&gt;true&lt;/code&gt; if the item is actually added to the cache. Otherwise, the method will return &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;add&lt;/code&gt; それがすでにキャッシュストアに存在しない場合の方法は、唯一のキャッシュにアイテムを追加します。アイテムが実際にキャッシュに追加された場合、メソッドは &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合、メソッドは &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="88d428bfb7dd390991279d4a6e60e9ec360c8dea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;addRoute&lt;/code&gt; Method</source>
          <target state="translated">&lt;code&gt;addRoute&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="a76c0146fa29decf17a03a3c607d05b12472011c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;addRoute&lt;/code&gt; method of the &lt;code&gt;Illuminate\Routing\Router&lt;/code&gt; class has been changed from &lt;code&gt;protected&lt;/code&gt; to &lt;code&gt;public&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Illuminate\Routing\Router&lt;/code&gt; クラスの &lt;code&gt;addRoute&lt;/code&gt; メソッドが &lt;code&gt;protected&lt;/code&gt; から &lt;code&gt;public&lt;/code&gt; に変更されました。</target>
        </trans-unit>
        <trans-unit id="54f6e0aaa8749e0426714fd1a7912f00a2eca1c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;all&lt;/code&gt; method returns the underlying array represented by the collection:</source>
          <target state="translated">&lt;code&gt;all&lt;/code&gt; メソッドは、コレクションによって表される基本となる配列を返します。</target>
        </trans-unit>
        <trans-unit id="eb7731f7bcbc51d421928e6d1f32e28161e744f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;anticipate&lt;/code&gt; method can be used to provide auto-completion for possible choices. The user can still choose any answer, regardless of the auto-completion hints:</source>
          <target state="translated">&lt;code&gt;anticipate&lt;/code&gt; 方法は、可能な選択肢の自動補完を提供するために使用することができます。オートコンプリートのヒントに関係なく、ユーザーは任意の回答を選択できます。</target>
        </trans-unit>
        <trans-unit id="c2996bbfb45730106103f3999aedc76bf92fc964" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;api.php&lt;/code&gt; file contains routes that the &lt;code&gt;RouteServiceProvider&lt;/code&gt; places in the &lt;code&gt;api&lt;/code&gt; middleware group, which provides rate limiting. These routes are intended to be stateless, so requests entering the application through these routes are intended to be authenticated via tokens and will not have access to session state.</source>
          <target state="translated">&lt;code&gt;api.php&lt;/code&gt; のファイルは、ルートが含まれていること &lt;code&gt;RouteServiceProvider&lt;/code&gt; の中の場所 &lt;code&gt;api&lt;/code&gt; レート制限を提供するミドルウェアグループ、。これらのルートはステートレスであることを目的としているため、これらのルートを介してアプリケーションに入るリクエストは、トークンを介して認証されることを意図しており、セッション状態にアクセスできません。</target>
        </trans-unit>
        <trans-unit id="83cc95853c7483092efc3965712e21e357bd04d8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;app.js&lt;/code&gt; file will load the &lt;code&gt;resources/js/bootstrap.js&lt;/code&gt; file which bootstraps and configures Vue, Axios, jQuery, and all other JavaScript dependencies. If you have additional JavaScript dependencies to configure, you may do so in this file.</source>
          <target state="translated">&lt;code&gt;app.js&lt;/code&gt; ファイルがロードされます &lt;code&gt;resources/js/bootstrap.js&lt;/code&gt; ファイルをどのブートストラップと設定しVueの、Axios、jQueryの、および他のすべてのJavaScript依存関係。構成する追加のJavaScript依存関係がある場合は、このファイルで行うことができます。</target>
        </trans-unit>
        <trans-unit id="f4d0e3dbc11d71ab76d4ffa51077ee18753778f7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;app&lt;/code&gt; Directory</source>
          <target state="translated">&lt;code&gt;app&lt;/code&gt; ディレクトリ</target>
        </trans-unit>
        <trans-unit id="a299ea400a7145d8daa96438acb23717dd9eb0a0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;app&lt;/code&gt; directory contains a variety of additional directories such as &lt;code&gt;Console&lt;/code&gt;, &lt;code&gt;Http&lt;/code&gt;, and &lt;code&gt;Providers&lt;/code&gt;. Think of the &lt;code&gt;Console&lt;/code&gt; and &lt;code&gt;Http&lt;/code&gt; directories as providing an API into the core of your application. The HTTP protocol and CLI are both mechanisms to interact with your application, but do not actually contain application logic. In other words, they are two ways of issuing commands to your application. The &lt;code&gt;Console&lt;/code&gt; directory contains all of your Artisan commands, while the &lt;code&gt;Http&lt;/code&gt; directory contains your controllers, middleware, and requests.</source>
          <target state="translated">&lt;code&gt;app&lt;/code&gt; ディレクトリは、次のような追加のディレクトリの様々な含まれている &lt;code&gt;Console&lt;/code&gt; 、 &lt;code&gt;Http&lt;/code&gt; 、および &lt;code&gt;Providers&lt;/code&gt; 。 &lt;code&gt;Console&lt;/code&gt; および &lt;code&gt;Http&lt;/code&gt; ディレクトリは、アプリケーションのコアにAPIを提供するものと考えてください。 HTTPプロトコルとCLIはどちらもアプリケーションと対話するためのメカニズムですが、実際にはアプリケーションロジックは含まれていません。つまり、アプリケーションにコマンドを発行する2つの方法です。 &lt;code&gt;Console&lt;/code&gt; ながらディレクトリは、あなたの職人コマンドのすべてが含まれている &lt;code&gt;Http&lt;/code&gt; ディレクトリは、あなたのコントローラ、ミドルウェア、および要求が含まれています。</target>
        </trans-unit>
        <trans-unit id="40b4df5fe13ce80d0fb1d7a2f69b424185048fbb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;app&lt;/code&gt; directory, as you might expect, contains the core code of your application. We'll explore this directory in more detail soon; however, almost all of the classes in your application will be in this directory.</source>
          <target state="translated">ご &lt;code&gt;app&lt;/code&gt; 、アプリディレクトリにはアプリケーションのコアコードが含まれています。このディレクトリについては、後で詳しく説明します。ただし、アプリケーションのほとんどすべてのクラスはこのディレクトリにあります。</target>
        </trans-unit>
        <trans-unit id="648bf640cfa04d6d8fd6111d676b9beeda18a679" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;app&lt;/code&gt; function returns the &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt; instance:</source>
          <target state="translated">&lt;code&gt;app&lt;/code&gt; 機能は、返す&lt;a href=&quot;container&quot;&gt;サービスコンテナの&lt;/a&gt;インスタンスを：</target>
        </trans-unit>
        <trans-unit id="107ebf4ba9fa6dcd42c38316765e7d5a00680604" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;app_path&lt;/code&gt; function returns the fully qualified path to the &lt;code&gt;app&lt;/code&gt; directory. You may also use the &lt;code&gt;app_path&lt;/code&gt; function to generate a fully qualified path to a file relative to the application directory:</source>
          <target state="translated">&lt;code&gt;app_path&lt;/code&gt; 機能は、完全修飾パスを返し &lt;code&gt;app&lt;/code&gt; ディレクトリを。 &lt;code&gt;app_path&lt;/code&gt; 関数を使用して、アプリケーションディレクトリを基準としたファイルへの完全修飾パスを生成することもできます。</target>
        </trans-unit>
        <trans-unit id="6f1372cf5f536e24d355fca1618301e293916bbf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array&lt;/code&gt; cast type is particularly useful when working with columns that are stored as serialized JSON. For example, if your database has a &lt;code&gt;JSON&lt;/code&gt; or &lt;code&gt;TEXT&lt;/code&gt; field type that contains serialized JSON, adding the &lt;code&gt;array&lt;/code&gt; cast to that attribute will automatically deserialize the attribute to a PHP array when you access it on your Eloquent model:</source>
          <target state="translated">&lt;code&gt;array&lt;/code&gt; シリアライズJSONとして格納される列を扱うとき、キャスト型は特に有用です。たとえば、データベースに &lt;code&gt;JSON&lt;/code&gt; または &lt;code&gt;TEXT&lt;/code&gt; フィールドタイプがあり、シリアル化されたJSONが含まれている場合、その属性に &lt;code&gt;array&lt;/code&gt; キャストを追加すると、Eloquentモデルで属性にアクセスしたときに、その属性がPHP配列に自動的に逆シリアル化されます。</target>
        </trans-unit>
        <trans-unit id="bb60216bc59a61482182c2b30117f82bd7a670dc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_add&lt;/code&gt; function adds a given key / value pair to an array if the given key doesn't already exist in the array:</source>
          <target state="translated">&lt;code&gt;array_add&lt;/code&gt; 所定のキーが既に配列に存在しない場合、この関数は、配列に指定されたキー/値のペアを追加します。</target>
        </trans-unit>
        <trans-unit id="a2dc1322def33e1e6df81f0af3adfa3c31541891" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_collapse&lt;/code&gt; function collapses an array of arrays into a single array:</source>
          <target state="translated">&lt;code&gt;array_collapse&lt;/code&gt; の機能は、単一のアレイに配列の配列を崩壊します：</target>
        </trans-unit>
        <trans-unit id="8ac29411bb34f7e4236a788ce940946e0006dcd5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_divide&lt;/code&gt; function returns two arrays, one containing the keys, and the other containing the values of the given array:</source>
          <target state="translated">&lt;code&gt;array_divide&lt;/code&gt; の機能は、2つの配列、あるキーを含む、与えられた配列の値を含む他を返します。</target>
        </trans-unit>
        <trans-unit id="4cfa9a362b385c1b27b54233a0bae78bef94a50f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_dot&lt;/code&gt; function flattens a multi-dimensional array into a single level array that uses &quot;dot&quot; notation to indicate depth:</source>
          <target state="translated">&lt;code&gt;array_dot&lt;/code&gt; の機能は使用が深さを示すために表記を「ドット」とシングルレベルアレイに多次元配列を平ら。</target>
        </trans-unit>
        <trans-unit id="a34e88993d6e714fd36ee59579b650b307b291a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_except&lt;/code&gt; function removes the given key / value pairs from an array:</source>
          <target state="translated">&lt;code&gt;array_except&lt;/code&gt; の関数は、配列から指定されたキー/値のペアを削除します。</target>
        </trans-unit>
        <trans-unit id="35f563a196bb635113d2bab1e1b3dd4ed434e60e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_first&lt;/code&gt; function returns the first element of an array passing a given truth test:</source>
          <target state="translated">&lt;code&gt;array_first&lt;/code&gt; 関数は、与えられた真理試験に合格配列の最初の要素を返します。</target>
        </trans-unit>
        <trans-unit id="5374597b385d090ef998ff25e6391877f91f8f90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_flatten&lt;/code&gt; function flattens a multi-dimensional array into a single level array:</source>
          <target state="translated">&lt;code&gt;array_flatten&lt;/code&gt; 機能は、単一レベルの配列に多次元配列を平ら。</target>
        </trans-unit>
        <trans-unit id="b562bec3b78f14b97ea9afacef7a86e82ca376b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_forget&lt;/code&gt; function removes a given key / value pair from a deeply nested array using &quot;dot&quot; notation:</source>
          <target state="translated">&lt;code&gt;array_forget&lt;/code&gt; の機能は、表記を「ドット」を用いて深くネストされた配列から指定されたキー/値のペアを削除します。</target>
        </trans-unit>
        <trans-unit id="b4360116d8d15d276b266a594b19d95165a0250a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_get&lt;/code&gt; function also accepts a default value, which will be returned if the specific key is not found:</source>
          <target state="translated">&lt;code&gt;array_get&lt;/code&gt; 機能は、特定のキーが見つからない場合に返されるデフォルト値を受け入れ：</target>
        </trans-unit>
        <trans-unit id="367846d592be676d07e4e112875bf1a789e14ce5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_get&lt;/code&gt; function retrieves a value from a deeply nested array using &quot;dot&quot; notation:</source>
          <target state="translated">&lt;code&gt;array_get&lt;/code&gt; の機能は、表記を「ドット」を用いて深くネストされた配列から値を取得します。</target>
        </trans-unit>
        <trans-unit id="33e56884be014cc4f829c8e7f50ae5467165a5ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_has&lt;/code&gt; function checks whether a given item or items exists in an array using &quot;dot&quot; notation:</source>
          <target state="translated">&lt;code&gt;array_has&lt;/code&gt; は、所与のアイテムまたはアイテムが「ドット」表記法を使用してアレイ内に存在するかどうかをチェックする機能します。</target>
        </trans-unit>
        <trans-unit id="b77d4d9018f40ff54d7f776e93bcbef5512a1262" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_last&lt;/code&gt; function returns the last element of an array passing a given truth test:</source>
          <target state="translated">&lt;code&gt;array_last&lt;/code&gt; の関数は、与えられた真理試験に合格配列の最後の要素を返します。</target>
        </trans-unit>
        <trans-unit id="b21e05b4256fcea622c95a7d8053c86af90983c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_only&lt;/code&gt; function returns only the specified key / value pairs from the given array:</source>
          <target state="translated">&lt;code&gt;array_only&lt;/code&gt; 関数が戻る指定された配列からのみ指定されたキー/値のペア。</target>
        </trans-unit>
        <trans-unit id="405b2bd931f206a67425442f250df2ce9313be4e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_pluck&lt;/code&gt; function retrieves all of the values for a given key from an array:</source>
          <target state="translated">&lt;code&gt;array_pluck&lt;/code&gt; の関数は、配列から指定されたキーのすべての値を取得します。</target>
        </trans-unit>
        <trans-unit id="7fd1b3999fc11cc5f008283c6302d4c08521e99a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_prepend&lt;/code&gt; function will push an item onto the beginning of an array:</source>
          <target state="translated">&lt;code&gt;array_prepend&lt;/code&gt; の関数は、配列の先頭にアイテムをプッシュします。</target>
        </trans-unit>
        <trans-unit id="0c22ccc5f5b38b638495efb5c239fb4cdbe2e72d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_pull&lt;/code&gt; function returns and removes a key / value pair from an array:</source>
          <target state="translated">&lt;code&gt;array_pull&lt;/code&gt; 関数戻り、アレイからのキー/値のペアを削除します。</target>
        </trans-unit>
        <trans-unit id="7e83b99e7d607b571394acd5f32115e10eb91102" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_random&lt;/code&gt; function returns a random value from an array:</source>
          <target state="translated">&lt;code&gt;array_random&lt;/code&gt; の機能は、アレイからのランダムな値を返します。</target>
        </trans-unit>
        <trans-unit id="6823049f9c7aeb8fca670408b5d56a0a0b037039" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_set&lt;/code&gt; function sets a value within a deeply nested array using &quot;dot&quot; notation:</source>
          <target state="translated">&lt;code&gt;array_set&lt;/code&gt; の機能は、表記を「ドット」を用いて深くネストされた配列内の値を設定します。</target>
        </trans-unit>
        <trans-unit id="77fa88857a475f1e3b5fee8670390af57e4ad41a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_sort&lt;/code&gt; function sorts an array by its values:</source>
          <target state="translated">&lt;code&gt;array_sort&lt;/code&gt; の機能は、その配列を値でソートします。</target>
        </trans-unit>
        <trans-unit id="fee6f249a89ace0014a29cfcee8d6721179d6747" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_sort_recursive&lt;/code&gt; function recursively sorts an array using the &lt;code&gt;sort&lt;/code&gt; function for numeric sub=arrays and &lt;code&gt;ksort&lt;/code&gt; for associative sub-arrays:</source>
          <target state="translated">&lt;code&gt;array_sort_recursive&lt;/code&gt; 関数が再帰的に使用して配列をソートし &lt;code&gt;sort&lt;/code&gt; 数値サブ=配列とする機能を &lt;code&gt;ksort&lt;/code&gt; 連想サブアレイのために：</target>
        </trans-unit>
        <trans-unit id="59d4a4b3d1214a6b120961c589a52c4c1cc8a4b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_where&lt;/code&gt; function filters an array using the given Closure:</source>
          <target state="translated">&lt;code&gt;array_where&lt;/code&gt; の関数は、指定したクロージャを使用してアレイをフィルタリングします。</target>
        </trans-unit>
        <trans-unit id="c6ef8513d6b98dafd58eac0624def8331d272d0f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;array_wrap&lt;/code&gt; function wraps the given value in an array. If the given value is already an array it will not be changed:</source>
          <target state="translated">&lt;code&gt;array_wrap&lt;/code&gt; の機能は、アレイ内の所与の値をラップします。指定された値がすでに配列である場合、変更されません。</target>
        </trans-unit>
        <trans-unit id="c8727a5e3954aeb5c9933b28b03fb06315cbd788" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;assert&lt;/code&gt; Method</source>
          <target state="translated">&lt;code&gt;assert&lt;/code&gt; メソッド</target>
        </trans-unit>
        <trans-unit id="d54eb550941a4de9f2cc8b5a2d3322814b1e61c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;assert&lt;/code&gt; method may make any assertions necessary to verify that the browser is actually on the given page. Completing this method is not necessary; however, you are free to make these assertions if you wish. These assertions will be run automatically when navigating to the page:</source>
          <target state="translated">&lt;code&gt;assert&lt;/code&gt; 方法は、必要なすべてのアサーションは、ブラウザが特定のページに実際にあることを確認するために行うことができます。このメソッドを完了する必要はありません。ただし、必要に応じてこれらのアサーションを自由に作成できます。これらのアサーションは、ページに移動すると自動的に実行されます。</target>
        </trans-unit>
        <trans-unit id="cea1dce9d3092505a05fea575ffe8e176f4fe513" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;assertJson&lt;/code&gt; method converts the response to an array and utilizes &lt;code&gt;PHPUnit::assertArraySubset&lt;/code&gt; to verify that the given array exists within the JSON response returned by the application. So, if there are other properties in the JSON response, this test will still pass as long as the given fragment is present.</source>
          <target state="translated">&lt;code&gt;assertJson&lt;/code&gt; の方法は、アレイへの応答を変換して利用 &lt;code&gt;PHPUnit::assertArraySubset&lt;/code&gt; 指定された配列は、アプリケーションによって返されるJSONレスポンス内に存在することを確認します。そのため、JSON応答に他のプロパティがある場合、指定されたフラグメントが存在する限り、このテストは成功します。</target>
        </trans-unit>
        <trans-unit id="1fd748b0335a20b51b190655cbcb15f1e4095463" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;asset&lt;/code&gt; function generates a URL for an asset using the current scheme of the request (HTTP or HTTPS):</source>
          <target state="translated">&lt;code&gt;asset&lt;/code&gt; 関数は、要求（HTTPまたはHTTPS）の現在のスキームを使用してアセットのURLを生成します。</target>
        </trans-unit>
        <trans-unit id="a783ff6e0e73e37787879198d47d9156f532cb95" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attach&lt;/code&gt; method may be used to attach a file to a &lt;code&gt;file&lt;/code&gt; input element. Like many other input related methods, a full CSS selector is not required. If an exact selector match can't be found, Dusk will search for a file input with matching &lt;code&gt;name&lt;/code&gt; attribute:</source>
          <target state="translated">&lt;code&gt;attach&lt;/code&gt; 方法は、にファイルを添付するために使用することができる &lt;code&gt;file&lt;/code&gt; 入力要素。他の多くの入力関連メソッドと同様に、完全なCSSセレクターは必要ありません。完全に一致するセレクターが見つからない場合、Duskは一致する &lt;code&gt;name&lt;/code&gt; 属性を持つファイル入力を検索します。</target>
        </trans-unit>
        <trans-unit id="07428adb2fe7e7eee1b2dd07cb8605afa283a5b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attachData&lt;/code&gt; method may be used to attach a raw string of bytes as an attachment. For example, you might use this method if you have generated a PDF in memory and want to attach it to the email without writing it to disk. The &lt;code&gt;attachData&lt;/code&gt; method accepts the raw data bytes as its first argument, the name of the file as its second argument, and an array of options as its third argument:</source>
          <target state="translated">&lt;code&gt;attachData&lt;/code&gt; の方法は、添付ファイルとしてバイトの生の列を取り付けるために使用されてもよいです。たとえば、メモリ内にPDFを生成し、それをディスクに書き込まずに電子メールに添付する場合は、この方法を使用できます。 &lt;code&gt;attachData&lt;/code&gt; の方法は、生データは、最初の引数、第2引数としてファイルの名前、およびその三番目の引数としてオプションの配列としてバイト受け付けます。</target>
        </trans-unit>
        <trans-unit id="e0cd0c1802646bc6a5eeef0f0420c1c75ff61849" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attempt&lt;/code&gt; method accepts an array of key / value pairs as its first argument. The values in the array will be used to find the user in your database table. So, in the example above, the user will be retrieved by the value of the &lt;code&gt;email&lt;/code&gt; column. If the user is found, the hashed password stored in the database will be compared with the &lt;code&gt;password&lt;/code&gt; value passed to the method via the array. You should not hash the password specified as the &lt;code&gt;password&lt;/code&gt; value, since the framework will automatically hash the value before comparing it to the hashed password in the database. If the two hashed passwords match an authenticated session will be started for the user.</source>
          <target state="translated">&lt;code&gt;attempt&lt;/code&gt; 方法は、その最初の引数としてのキー/値のペアの配列を受け付けます。配列の値は、データベーステーブルでユーザーを見つけるために使用されます。したがって、上記の例では、ユーザーは &lt;code&gt;email&lt;/code&gt; 列の値によって取得されます。ユーザーが見つかった場合、データベースに保存されているハッシュされた &lt;code&gt;password&lt;/code&gt; は、配列を介してメソッドに渡されたパスワード値と比較されます。フレームワークは値をデータベース内のハッシュされたパスワードと比較する前に自動的にハッシュするため、 &lt;code&gt;password&lt;/code&gt; 値として指定されたパスワードはハッシュしないでください。 2つのハッシュされたパスワードが一致する場合、認証されたセッションがユーザーに対して開始されます。</target>
        </trans-unit>
        <trans-unit id="75c68e6b3426897eff2ddcf86671579c6d7912e4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attempt&lt;/code&gt; method will return &lt;code&gt;true&lt;/code&gt; if authentication was successful. Otherwise, &lt;code&gt;false&lt;/code&gt; will be returned.</source>
          <target state="translated">&lt;code&gt;attempt&lt;/code&gt; 方法は戻ります &lt;code&gt;true&lt;/code&gt; 認証が成功した場合。それ以外の場合は、 &lt;code&gt;false&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="c75d1fcbf96d2c2e783757576d4fa331993c205d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;auth&lt;/code&gt; function returns an &lt;a href=&quot;authentication&quot;&gt;authenticator&lt;/a&gt; instance. You may use it instead of the &lt;code&gt;Auth&lt;/code&gt; facade for convenience:</source>
          <target state="translated">&lt;code&gt;auth&lt;/code&gt; 機能は、戻り&lt;a href=&quot;authentication&quot;&gt;オーセンティケータ&lt;/a&gt;インスタンス。便宜上、 &lt;code&gt;Auth&lt;/code&gt; ファサードの代わりに使用できます。</target>
        </trans-unit>
        <trans-unit id="3bc3e5101eb5465d69f022a34d35d82a348bec99" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;authenticate&lt;/code&gt; method of the &lt;code&gt;Illuminate\Auth\Middleware\Authenticate&lt;/code&gt; middleware has been updated to accept the incoming &lt;code&gt;$request&lt;/code&gt; as its first argument. If you are overriding this method in your own &lt;code&gt;Authenticate&lt;/code&gt; middleware, you should update your middleware's signature:</source>
          <target state="translated">&lt;code&gt;Illuminate\Auth\Middleware\Authenticate&lt;/code&gt; ミドルウェアの &lt;code&gt;authenticate&lt;/code&gt; メソッドが更新され、受信した &lt;code&gt;$request&lt;/code&gt; を最初の引数として受け入れるようになりました。独自の &lt;code&gt;Authenticate&lt;/code&gt; ミドルウェアでこのメソッドをオーバーライドする場合は、ミドルウェアの署名を更新する必要があります。</target>
        </trans-unit>
        <trans-unit id="aacc914d4ce5b5e0cc614b27083d1d3b5b1bd3c3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;auto&lt;/code&gt; strategy adjusts the number of worker processes per queue based on the current workload of the queue. For example, if your &lt;code&gt;notifications&lt;/code&gt; queue has 1,000 waiting jobs while your &lt;code&gt;render&lt;/code&gt; queue is empty, Horizon will allocate more workers to your &lt;code&gt;notifications&lt;/code&gt; queue until it is empty. When the &lt;code&gt;balance&lt;/code&gt; option is set to &lt;code&gt;false&lt;/code&gt;, the default Laravel behavior will be used, which processes queues in the order they are listed in your configuration.</source>
          <target state="translated">&lt;code&gt;auto&lt;/code&gt; 戦略は、キューの現在のワークロードに基づいてキューごとのワーカープロセスの数を調整します。たとえば、 &lt;code&gt;render&lt;/code&gt; キューが空の間に &lt;code&gt;notifications&lt;/code&gt; キューに1,000個の待機中のジョブがある場合、Horizo​​nは空になるまで &lt;code&gt;notifications&lt;/code&gt; キューにさらに多くのワーカーを割り当てます。ときに &lt;code&gt;balance&lt;/code&gt; オプションがに設定されている &lt;code&gt;false&lt;/code&gt; 、デフォルトLaravelの動作では、彼らはあなたの設定にリストされている順番でキューを処理する、使用されます。</target>
        </trans-unit>
        <trans-unit id="d4eb3170129ccff2d868403160bf48d5d3a77b4d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;avg&lt;/code&gt; method returns the &lt;a href=&quot;https://en.wikipedia.org/wiki/Average&quot;&gt;average value&lt;/a&gt; of a given key:</source>
          <target state="translated">&lt;code&gt;avg&lt;/code&gt; 方法を返し&lt;a href=&quot;https://en.wikipedia.org/wiki/Average&quot;&gt;平均値を&lt;/a&gt;所定のキーを：</target>
        </trans-unit>
        <trans-unit id="e24f8d6fd67c88b2183b2d08a6d1cd2291725395" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;back&lt;/code&gt; function generates a &lt;a href=&quot;responses#redirects&quot;&gt;redirect HTTP response&lt;/a&gt; to the user's previous location:</source>
          <target state="translated">&lt;code&gt;back&lt;/code&gt; 関数が生成&lt;a href=&quot;responses#redirects&quot;&gt;リダイレクトHTTPレスポンス&lt;/a&gt;ユーザーの以前の場所にします：</target>
        </trans-unit>
        <trans-unit id="b47e28f97daa975644015a3546d890186a8db9a4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;base_path&lt;/code&gt; function returns the fully qualified path to the project root. You may also use the &lt;code&gt;base_path&lt;/code&gt; function to generate a fully qualified path to a given file relative to the project root directory:</source>
          <target state="translated">&lt;code&gt;base_path&lt;/code&gt; 機能は、プロジェクトのルートへの完全修飾パスを返します。また、 &lt;code&gt;base_path&lt;/code&gt; 関数を使用して、プロジェクトのルートディレクトリを基準に、特定のファイルへの完全修飾パスを生成することもできます。</target>
        </trans-unit>
        <trans-unit id="575d0a9a2334896cacd090ce17df0226ed1f1454" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bcrypt&lt;/code&gt; function &lt;a href=&quot;hashing&quot;&gt;hashes&lt;/a&gt; the given value using Bcrypt. You may use it as an alternative to the &lt;code&gt;Hash&lt;/code&gt; facade:</source>
          <target state="translated">&lt;code&gt;bcrypt&lt;/code&gt; の関数は、&lt;a href=&quot;hashing&quot;&gt;ハッシュ&lt;/a&gt; bcryptのを使用して、指定された値。 &lt;code&gt;Hash&lt;/code&gt; ファサードの代わりとして使用できます。</target>
        </trans-unit>
        <trans-unit id="9fb1d447d05ae452ba08f92b53346774cd31a0f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;before&lt;/code&gt; method of a policy class will not be called if the class doesn't contain a method with a name matching the name of the ability being checked.</source>
          <target state="translated">チェックされる機能の名前と一致する名前のメソッドがクラスに含まれていない場合、ポリシークラスの &lt;code&gt;before&lt;/code&gt; メソッドは呼び出されません。</target>
        </trans-unit>
        <trans-unit id="081e8cbd44fb962622e3869a47967640c2898526" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;belongsTo&lt;/code&gt; relationship allows you to define a default model that will be returned if the given relationship is &lt;code&gt;null&lt;/code&gt;. This pattern is often referred to as the &lt;a href=&quot;https://en.wikipedia.org/wiki/Null_Object_pattern&quot;&gt;Null Object pattern&lt;/a&gt; and can help remove conditional checks in your code. In the following example, the &lt;code&gt;user&lt;/code&gt; relation will return an empty &lt;code&gt;App\User&lt;/code&gt; model if no &lt;code&gt;user&lt;/code&gt; is attached to the post:</source>
          <target state="translated">&lt;code&gt;belongsTo&lt;/code&gt; のの関係を使用すると、一定の関係がある場合に返されるデフォルトのモデルを定義することを可能に &lt;code&gt;null&lt;/code&gt; 。このパターンは、&lt;a href=&quot;https://en.wikipedia.org/wiki/Null_Object_pattern&quot;&gt;Null Objectパターン&lt;/a&gt;と呼ばれることが多く、コード内の条件チェックを削除するのに役立ちます。次の例では、投稿に &lt;code&gt;user&lt;/code&gt; が関連付けられていない場合、 &lt;code&gt;user&lt;/code&gt; リレーションは空の &lt;code&gt;App\User&lt;/code&gt; モデルを返します。</target>
        </trans-unit>
        <trans-unit id="2691914e41e4bdfbdb2fadf3ceeb7672469f1b26" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;between&lt;/code&gt; method may be used to limit the execution of a task based on the time of day:</source>
          <target state="translated">&lt;code&gt;between&lt;/code&gt; 時刻に基づいて、タスクの実行を制限するための方法に使用することができます。</target>
        </trans-unit>
        <trans-unit id="d7560a005145719a932c4ab497933dd373b4ca5e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bindings&lt;/code&gt; And &lt;code&gt;singletons&lt;/code&gt; Properties</source>
          <target state="translated">&lt;code&gt;bindings&lt;/code&gt; と &lt;code&gt;singletons&lt;/code&gt; のプロパティ</target>
        </trans-unit>
        <trans-unit id="556878d4ee5fd23a652f6aab4019b6f8b6cc32e6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;blank&lt;/code&gt; function returns whether the given value is &quot;blank&quot;:</source>
          <target state="translated">&lt;code&gt;blank&lt;/code&gt; 与えられた値は「ブランク」であるかどうかの関数を返します：</target>
        </trans-unit>
        <trans-unit id="8820ead9dfc6b3debbc43b6f04b04b60c46a0c0d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bootstrap&lt;/code&gt; Directory</source>
          <target state="translated">&lt;code&gt;bootstrap&lt;/code&gt; ディレクトリ</target>
        </trans-unit>
        <trans-unit id="b46dc7b4db6394b9d9c795f3d0f6df18a62a8835" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bootstrap&lt;/code&gt; directory contains the &lt;code&gt;app.php&lt;/code&gt; file which bootstraps the framework. This directory also houses a &lt;code&gt;cache&lt;/code&gt; directory which contains framework generated files for performance optimization such as the route and services cache files.</source>
          <target state="translated">&lt;code&gt;bootstrap&lt;/code&gt; ディレクトリが含まれてい &lt;code&gt;app.php&lt;/code&gt; フレームワークをブートストラップファイルを。このディレクトリには、ルートやサービスのキャッシュファイルなど、パフォーマンスを最適化するためにフレームワークが生成したファイルを含む &lt;code&gt;cache&lt;/code&gt; ディレクトリも格納されます。</target>
        </trans-unit>
        <trans-unit id="9ce61cb21bea66446c0d2bc2c82b2537530049e6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;broadcast&lt;/code&gt; channel broadcasts notifications using Laravel's &lt;a href=&quot;broadcasting&quot;&gt;event broadcasting&lt;/a&gt; services, allowing your JavaScript client to catch notifications in realtime. If a notification supports broadcasting, you should define a &lt;code&gt;toBroadcast&lt;/code&gt; method on the notification class. This method will receive a &lt;code&gt;$notifiable&lt;/code&gt; entity and should return a &lt;code&gt;BroadcastMessage&lt;/code&gt; instance. The returned data will be encoded as JSON and broadcast to your JavaScript client. Let's take a look at an example &lt;code&gt;toBroadcast&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;broadcast&lt;/code&gt; Laravelの使用チャンネル放送の通知&lt;a href=&quot;broadcasting&quot;&gt;イベント放送&lt;/a&gt;、サービスをリアルタイムでキャッチ通知にあなたのJavaScriptクライアントを許可します。通知がブロードキャストをサポートしている場合は、通知クラスで &lt;code&gt;toBroadcast&lt;/code&gt; メソッドを定義する必要があります。このメソッドは &lt;code&gt;$notifiable&lt;/code&gt; エンティティを受け取り、 &lt;code&gt;BroadcastMessage&lt;/code&gt; インスタンスを返す必要があります。返されたデータはJSONとしてエンコードされ、JavaScriptクライアントにブロードキャストされます。 &lt;code&gt;toBroadcast&lt;/code&gt; メソッドの例を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="fb8afc6728fe2edc950a642c740965754e6c8adf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;broadcast&lt;/code&gt; function &lt;a href=&quot;broadcasting&quot;&gt;broadcasts&lt;/a&gt; the given &lt;a href=&quot;events&quot;&gt;event&lt;/a&gt; to its listeners:</source>
          <target state="translated">&lt;code&gt;broadcast&lt;/code&gt; 機能は、&lt;a href=&quot;broadcasting&quot;&gt;ブロードキャスト&lt;/a&gt;指定した&lt;a href=&quot;events&quot;&gt;イベントを&lt;/a&gt;そのリスナーに：</target>
        </trans-unit>
        <trans-unit id="7787d617215f7e19a0e1cadbe1f4ddadc299ff5a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cache&lt;/code&gt; function may be used to get values from the &lt;a href=&quot;cache&quot;&gt;cache&lt;/a&gt;. If the given key does not exist in the cache, an optional default value will be returned:</source>
          <target state="translated">&lt;code&gt;cache&lt;/code&gt; 機能は、から値を取得するために使用することができる&lt;a href=&quot;cache&quot;&gt;キャッシュ&lt;/a&gt;。指定されたキーがキャッシュに存在しない場合、オプションのデフォルト値が返されます：</target>
        </trans-unit>
        <trans-unit id="c209d2e0081144bf6b09461f817bb8bab51340c8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;camel_case&lt;/code&gt; function converts the given string to &lt;code&gt;camelCase&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;camel_case&lt;/code&gt; の機能は、指定された文字列を変換し、 &lt;code&gt;camelCase&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="6c759b17977f92730451895dba2eaff66b99f3e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;change&lt;/code&gt; method allows you to modify some existing column types to a new type or modify the column's attributes. For example, you may wish to increase the size of a string column. To see the &lt;code&gt;change&lt;/code&gt; method in action, let's increase the size of the &lt;code&gt;name&lt;/code&gt; column from 25 to 50:</source>
          <target state="translated">&lt;code&gt;change&lt;/code&gt; 方法は、新しいタイプのいくつかの既存の列の型を変更したり、列の属性を変更することができます。たとえば、文字列列のサイズを増やしたい場合があります。 &lt;code&gt;change&lt;/code&gt; メソッドの動作を確認するために、 &lt;code&gt;name&lt;/code&gt; 列のサイズを25から50に増やします。</target>
        </trans-unit>
        <trans-unit id="1019ee04af1f807837e2ee3e1f2f5ef72a68114c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;channel&lt;/code&gt; method accepts two arguments: the name of the channel and a callback which returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; indicating whether the user is authorized to listen on the channel.</source>
          <target state="translated">&lt;code&gt;channel&lt;/code&gt; メソッドは2つの引数を受け入れます。チャネルの名前と、ユーザーがチャネルをリッスンすることを承認されているかどうかを示す &lt;code&gt;true&lt;/code&gt; または &lt;code&gt;false&lt;/code&gt; を返すコールバックです。</target>
        </trans-unit>
        <trans-unit id="4839e3d903cfa95a8e0872483646cc572986fa7e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;channels.php&lt;/code&gt; file is where you may register all of the event broadcasting channels that your application supports.</source>
          <target state="translated">&lt;code&gt;channels.php&lt;/code&gt; のあなたのアプリケーションがサポートすることをイベントの放送チャンネルのすべてを登録しているファイルです。</target>
        </trans-unit>
        <trans-unit id="35707debc3b39735cf36862d754dd01a13787d79" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;charge&lt;/code&gt; method accepts an array as its second argument, allowing you to pass any options you wish to the underlying Stripe / Braintree charge creation. Consult the Stripe or Braintree documentation regarding the options available to you when creating charges:</source>
          <target state="translated">&lt;code&gt;charge&lt;/code&gt; 方法は、あなたが基礎となるストライプ/ブレーントリー充電作成したい任意のオプションを渡すことができ、その第二引数として配列を受け入れます。料金を作成するときに使用できるオプションについては、StripeまたはBraintreeのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="c6b9f331241cc24b30e525ca47a1bed8060da414" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;charge&lt;/code&gt; method will throw an exception if the charge fails. If the charge is successful, the full Stripe / Braintree response will be returned from the method:</source>
          <target state="translated">&lt;code&gt;charge&lt;/code&gt; 電荷が失敗した場合、メソッドは例外をスローします。充電が成功した場合、メソッドから完全なStripe / Braintree応答が返されます。</target>
        </trans-unit>
        <trans-unit id="4c3c2fc43e359c6aeb11405338a842653617f96c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;check&lt;/code&gt; method allows you to verify that a given plain-text string corresponds to a given hash. However, if you are using the &lt;code&gt;LoginController&lt;/code&gt;&lt;a href=&quot;authentication&quot;&gt;included with Laravel&lt;/a&gt;, you will probably not need to use this directly, as this controller automatically calls this method:</source>
          <target state="translated">&lt;code&gt;check&lt;/code&gt; 方法は、あなたが与えられたプレーンテキストの文字列が、指定されたハッシュに対応することを確認することができます。ただし、&lt;a href=&quot;authentication&quot;&gt;Laravel&lt;/a&gt;に含まれている &lt;code&gt;LoginController&lt;/code&gt; を使用している場合、このコントローラーは自動的にこのメソッドを呼び出すため、おそらくこれを直接使用する必要はありません。</target>
        </trans-unit>
        <trans-unit id="518b3fad4d33ee1cdd51ab68f7be46bd9eff83a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;check&lt;/code&gt; method now &lt;strong&gt;optionally&lt;/strong&gt; checks if the algorithm of the hash matches the configured algorithm.</source>
          <target state="translated">&lt;code&gt;check&lt;/code&gt; 方法今&lt;strong&gt;任意に&lt;/strong&gt;チェックハッシュのアルゴリズムは、設定アルゴリズムに一致する場合。</target>
        </trans-unit>
        <trans-unit id="3f62d6300a15f5ebc232fb28110ef236347e0f5c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;chunk&lt;/code&gt; method breaks the collection into multiple, smaller collections of a given size:</source>
          <target state="translated">&lt;code&gt;chunk&lt;/code&gt; メソッドは、指定されたサイズの倍数、小さなコレクションにコレクションを破ります：</target>
        </trans-unit>
        <trans-unit id="9b86d4e71ffd11ee06945f69b943d41689e19416" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;class_basename&lt;/code&gt; returns the class name of the given class with the class' namespace removed:</source>
          <target state="translated">&lt;code&gt;class_basename&lt;/code&gt; は削除クラスの名前空間で指定されたクラスのクラス名を返します。</target>
        </trans-unit>
        <trans-unit id="844b31604c95d98d5daea459f72ce44bec72ce8b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;class_uses_recursive&lt;/code&gt; function returns all traits used by a class, including traits used by all of its parent classes:</source>
          <target state="translated">&lt;code&gt;class_uses_recursive&lt;/code&gt; 関数は、クラスによって使用されるすべての特性を返します。これには、そのすべての親クラスによって使用される特性も含まれます。</target>
        </trans-unit>
        <trans-unit id="145619a31e47f0b86b7fc3cbbb9842d724c1130f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;click&lt;/code&gt; method may be used to &quot;click&quot; on an element matching the given selector:</source>
          <target state="translated">&lt;code&gt;click&lt;/code&gt; メソッドは、指定されたセレクタに一致する要素の「クリック」を使用することができます。</target>
        </trans-unit>
        <trans-unit id="e83e7824edea0e08c363a68ce81ebcd54d0f35e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;close&lt;/code&gt; method, like the &lt;code&gt;open&lt;/code&gt; method, can also usually be disregarded. For most drivers, it is not needed.</source>
          <target state="translated">&lt;code&gt;close&lt;/code&gt; の方法は、同様に &lt;code&gt;open&lt;/code&gt; 方法、また、通常は無視することができます。ほとんどのドライバーでは必要ありません。</target>
        </trans-unit>
        <trans-unit id="a0471ec3d7d54c503719d25bbc175f555b7bf392" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collapse&lt;/code&gt; method collapses a collection of arrays into a single, flat collection:</source>
          <target state="translated">&lt;code&gt;collapse&lt;/code&gt; 方法は、単一のフラットコレクションに配列のコレクションを崩壊します：</target>
        </trans-unit>
        <trans-unit id="0832279b2cd0a2516ce4bcf6799783e7787b1997" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collect&lt;/code&gt; function creates a &lt;a href=&quot;collections&quot;&gt;collection&lt;/a&gt; instance from the given value:</source>
          <target state="translated">&lt;code&gt;collect&lt;/code&gt; 機能は、作成&lt;a href=&quot;collections&quot;&gt;コレクション&lt;/a&gt;与えられた値からインスタンスを：</target>
        </trans-unit>
        <trans-unit id="4049e014c45e16969ece1812caa0336a349f6aa8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;combine&lt;/code&gt; method combines the values of the collection, as keys, with the values of another array or collection:</source>
          <target state="translated">&lt;code&gt;combine&lt;/code&gt; 方法は、別の配列またはコレクションの値と、キーとして、コレクションの値を組み合わせ。</target>
        </trans-unit>
        <trans-unit id="9c4deb726fe55a47613c640b3dec38fdb9e3e397" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;commentable&lt;/code&gt; relation on the &lt;code&gt;Comment&lt;/code&gt; model will return either a &lt;code&gt;Post&lt;/code&gt; or &lt;code&gt;Video&lt;/code&gt; instance, depending on which type of model owns the comment.</source>
          <target state="translated">&lt;code&gt;commentable&lt;/code&gt; の関係 &lt;code&gt;Comment&lt;/code&gt; モデルはどちらかが返されます &lt;code&gt;Post&lt;/code&gt; や &lt;code&gt;Video&lt;/code&gt; のコメントを所有しているモデルのタイプに応じて、インスタンスを。</target>
        </trans-unit>
        <trans-unit id="b74a2845b843645c4074db899ed5446bf5aa0bc6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;composer&lt;/code&gt; method also accepts the &lt;code&gt;*&lt;/code&gt; character as a wildcard, allowing you to attach a composer to all views:</source>
          <target state="translated">&lt;code&gt;composer&lt;/code&gt; 方法も受け入れ &lt;code&gt;*&lt;/code&gt; あなたはすべてのビューに作曲を添付することができ、ワイルドカードなどの文字を：</target>
        </trans-unit>
        <trans-unit id="c48d6106365cd56f1af306993ffbdebd174078f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;concat&lt;/code&gt; method appends the given &lt;code&gt;array&lt;/code&gt; or collection values onto the end of the collection:</source>
          <target state="translated">&lt;code&gt;concat&lt;/code&gt; 方法は、所定の付加 &lt;code&gt;array&lt;/code&gt; コレクションの最後にまたはコレクション値：</target>
        </trans-unit>
        <trans-unit id="5e16790a9fa2211051a7d4feb57ff0755302a27b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;config&lt;/code&gt; Directory</source>
          <target state="translated">&lt;code&gt;config&lt;/code&gt; ディレクトリ</target>
        </trans-unit>
        <trans-unit id="dc83f3b5ed6d0b74ee0070878b100c73f52c0df3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;config&lt;/code&gt; directory, as the name implies, contains all of your application's configuration files. It's a great idea to read through all of these files and familiarize yourself with all of the options available to you.</source>
          <target state="translated">&lt;code&gt;config&lt;/code&gt; 名前が示すように、ディレクトリは、アプリケーションの設定ファイルがすべて含まれています。これらのファイルをすべて読み、使用可能なすべてのオプションをよく理解することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="6bad4bc9d5f4c972a84d033e57b8fa5f19dd90fe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;config&lt;/code&gt; function gets the value of a &lt;a href=&quot;configuration&quot;&gt;configuration&lt;/a&gt; variable. The configuration values may be accessed using &quot;dot&quot; syntax, which includes the name of the file and the option you wish to access. A default value may be specified and is returned if the configuration option does not exist:</source>
          <target state="translated">&lt;code&gt;config&lt;/code&gt; 機能は、の値を取得&lt;a href=&quot;configuration&quot;&gt;、設定&lt;/a&gt;変数を。構成値には、ファイル名とアクセスするオプションを含む「ドット」構文を使用してアクセスできます。デフォルト値を指定でき、構成オプションが存在しない場合に返されます。</target>
        </trans-unit>
        <trans-unit id="853e6d05d2eca963edda985fb93510389ed48ab0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;config_path&lt;/code&gt; function returns the fully qualified path to the &lt;code&gt;config&lt;/code&gt; directory. You may also use the &lt;code&gt;config_path&lt;/code&gt; function to generate a fully qualified path to a given file within the application's configuration directory:</source>
          <target state="translated">&lt;code&gt;config_path&lt;/code&gt; の機能は、完全修飾パスを返す &lt;code&gt;config&lt;/code&gt; ディレクトリを。 &lt;code&gt;config_path&lt;/code&gt; 関数を使用して、アプリケーションの構成ディレクトリ内の特定のファイルへの完全修飾パスを生成することもできます。</target>
        </trans-unit>
        <trans-unit id="dfe4e9c84cfee9fc6a18b1f60e6eb55521fdb696" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;console.php&lt;/code&gt; file is where you may define all of your Closure based console commands. Each Closure is bound to a command instance allowing a simple approach to interacting with each command's IO methods. Even though this file does not define HTTP routes, it defines console based entry points (routes) into your application.</source>
          <target state="translated">&lt;code&gt;console.php&lt;/code&gt; のあなたの閉鎖ベースのコンソールコマンドのすべてを定義することがどこのファイルです。各クロージャーはコマンドインスタンスにバインドされており、各コマンドのIOメソッドと対話する簡単なアプローチを可能にします。このファイルはHTTPルートを定義していませんが、アプリケーションへのコンソールベースのエントリポイント（ルート）を定義しています。</target>
        </trans-unit>
        <trans-unit id="bc957ec76749b4c34a80987f4e0a38b53bba65ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;contains&lt;/code&gt; method determines whether the collection contains a given item:</source>
          <target state="translated">&lt;code&gt;contains&lt;/code&gt; メソッドは、コレクションが指定されたアイテムが含まれているかどうかを決定します。</target>
        </trans-unit>
        <trans-unit id="b8ae9f48cafbd158f32f7ec67f625737be8e6bcc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;contains&lt;/code&gt; method uses &quot;loose&quot; comparisons when checking item values, meaning a string with an integer value will be considered equal to an integer of the same value. Use the &lt;a href=&quot;#method-containsstrict&quot;&gt;&lt;code&gt;containsStrict&lt;/code&gt;&lt;/a&gt; method to filter using &quot;strict&quot; comparisons.</source>
          <target state="translated">&lt;code&gt;contains&lt;/code&gt; 整数値の文字列を意味する、アイテムの値をチェック同じ値の整数に等しく考慮されるときに方法が使用「ルーズ」の比較を。「厳密な」比較を使用してフィルタリングするには、&lt;a href=&quot;#method-containsstrict&quot;&gt; &lt;code&gt;containsStrict&lt;/code&gt; &lt;/a&gt;メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="3a0734964a31271d219019e166807effdb76d326" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cookie&lt;/code&gt; function creates a new &lt;a href=&quot;requests#cookies&quot;&gt;cookie&lt;/a&gt; instance:</source>
          <target state="translated">&lt;code&gt;cookie&lt;/code&gt; 機能は、新規作成し&lt;a href=&quot;requests#cookies&quot;&gt;たクッキーの&lt;/a&gt;インスタンスを：</target>
        </trans-unit>
        <trans-unit id="502c281bf674975ba14b5cce9a3fd2deede94789" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cookie&lt;/code&gt; method also accepts a few more arguments which are used less frequently. Generally, these arguments have the same purpose and meaning as the arguments that would be given to PHP's native &lt;a href=&quot;https://secure.php.net/manual/en/function.setcookie.php&quot;&gt;setcookie&lt;/a&gt; method:</source>
          <target state="translated">&lt;code&gt;cookie&lt;/code&gt; 方法もあまり頻繁に使用されているいくつかのより多くの引数を受け入れます。一般に、これらの引数は、PHPのネイティブの&lt;a href=&quot;https://secure.php.net/manual/en/function.setcookie.php&quot;&gt;setcookie&lt;/a&gt;メソッドに渡される引数と同じ目的と意味を持っています。</target>
        </trans-unit>
        <trans-unit id="25bf8243d539e652d9b0905124785efe25aa543e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cookie&lt;/code&gt; method on response instances allows you to easily attach cookies to the response. For example, you may use the &lt;code&gt;cookie&lt;/code&gt; method to generate a cookie and fluently attach it to the response instance like so:</source>
          <target state="translated">応答インスタンスの &lt;code&gt;cookie&lt;/code&gt; メソッドを使用すると、応答にCookieを簡単に添付できます。たとえば、次のように &lt;code&gt;cookie&lt;/code&gt; メソッドを使用してcookieを生成し、それを応答インスタンスに流暢にアタッチできます。</target>
        </trans-unit>
        <trans-unit id="bfe1d18dd2d122a28ae7be967d3e3f3e0005213c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;copy&lt;/code&gt; method may be used to copy an existing file to a new location on the disk, while the &lt;code&gt;move&lt;/code&gt; method may be used to rename or move an existing file to a new location:</source>
          <target state="translated">&lt;code&gt;copy&lt;/code&gt; しながら方法は、ディスク上の新たな場所に既存のファイルをコピーするために使用することができる &lt;code&gt;move&lt;/code&gt; 方法は、新しい場所に既存のファイルの名前を変更または移動させるために使用されてもよいです。</target>
        </trans-unit>
        <trans-unit id="a901538792c9893649f07e65b78ab30cfeb33562" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;copy&lt;/code&gt; method may be used to copy files and directories to new locations. This can be useful when a particular asset within your &lt;code&gt;node_modules&lt;/code&gt; directory needs to be relocated to your &lt;code&gt;public&lt;/code&gt; folder.</source>
          <target state="translated">&lt;code&gt;copy&lt;/code&gt; 方法は、新しい場所にファイルやディレクトリをコピーするのに使用することができます。これは、 &lt;code&gt;node_modules&lt;/code&gt; ディレクトリ内の特定のアセットを &lt;code&gt;public&lt;/code&gt; フォルダーに再配置する必要がある場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="5ffda6e82da3cc8eb3fed029e8b3f1beb1319abf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;count&lt;/code&gt; method returns the total number of items in the collection:</source>
          <target state="translated">&lt;code&gt;count&lt;/code&gt; 方法は、コレクション内の項目の合計数を返します。</target>
        </trans-unit>
        <trans-unit id="358265776c69e28e004b7d91d075978596360885" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;create&lt;/code&gt; Method</source>
          <target state="translated">&lt;code&gt;create&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="0d5e9f2469b395433bf6392c4681a5ba6bc108a0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;create&lt;/code&gt; method not only creates the model instances but also saves them to the database using Eloquent's &lt;code&gt;save&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;create&lt;/code&gt; 方法は、モデルのインスタンスを作成するだけでなく、雄弁のを使用してデータベースに保存していないだけ &lt;code&gt;save&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="8f7eecd930e07415f3ea79b41077dbbf65c2d55b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;create&lt;/code&gt; method of the &lt;code&gt;RegisterController&lt;/code&gt; is responsible for creating new &lt;code&gt;App\User&lt;/code&gt; records in your database using the &lt;a href=&quot;eloquent&quot;&gt;Eloquent ORM&lt;/a&gt;. You are free to modify this method according to the needs of your database.</source>
          <target state="translated">&lt;code&gt;RegisterController&lt;/code&gt; の &lt;code&gt;create&lt;/code&gt; メソッドは、&lt;a href=&quot;eloquent&quot;&gt;Eloquent ORM&lt;/a&gt;を使用してデータベースに新しい &lt;code&gt;App\User&lt;/code&gt; レコードを作成します。この方法は、データベースのニーズに応じて自由に変更できます。</target>
        </trans-unit>
        <trans-unit id="1b375468cab55cebf428a3d4423897451de1b7dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;create&lt;/code&gt; method, which accepts a Stripe credit card / source token, will begin the subscription as well as update your database with the customer ID and other relevant billing information.</source>
          <target state="translated">&lt;code&gt;create&lt;/code&gt; ストライプクレジットカード/ソース・トークンを受け入れる方法を、サブスクリプションを始めるだけでなく、顧客のIDおよびその他の関連する課金情報を使用してデータベースを更新します。</target>
        </trans-unit>
        <trans-unit id="dc195e5a53e98ed9e719662216a27588926183eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;crossJoin&lt;/code&gt; method cross joins the collection's values among the given arrays or collections, returning a Cartesian product with all possible permutations:</source>
          <target state="translated">&lt;code&gt;crossJoin&lt;/code&gt; メソッドのクロスは、すべての可能な順列とのデカルト積を返す、特定の配列やコレクションの中でコレクションの値を結合します。</target>
        </trans-unit>
        <trans-unit id="b79aa36198a558e60f0566cf53cd764f298d86ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;csrf_field&lt;/code&gt; function generates an HTML &lt;code&gt;hidden&lt;/code&gt; input field containing the value of the CSRF token. For example, using &lt;a href=&quot;blade&quot;&gt;Blade syntax&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;csrf_field&lt;/code&gt; の機能は、HTML生成 &lt;code&gt;hidden&lt;/code&gt; CSRFトークンの値を含む入力フィールド。たとえば、&lt;a href=&quot;blade&quot;&gt;Blade構文&lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="299a6068c735d9a1408032ecebf970b657cab979" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;csrf_token&lt;/code&gt; function retrieves the value of the current CSRF token:</source>
          <target state="translated">&lt;code&gt;csrf_token&lt;/code&gt; 関数は、現在のCSRFトークンの値を取得します。</target>
        </trans-unit>
        <trans-unit id="d9c61e7ea2799a7a4374800a0739f70bba6bd3e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cursor&lt;/code&gt; method allows you to iterate through your database records using a cursor, which will only execute a single query. When processing large amounts of data, the &lt;code&gt;cursor&lt;/code&gt; method may be used to greatly reduce your memory usage:</source>
          <target state="translated">&lt;code&gt;cursor&lt;/code&gt; 方法は、単一のクエリを実行しますカーソルを使用して、データベースのレコードを反復処理することができます。大量のデータを処理する場合、 &lt;code&gt;cursor&lt;/code&gt; 方式を使用してメモリ使用量を大幅に削減できます。</target>
        </trans-unit>
        <trans-unit id="93ec98300e02dfe1149b50fce58ad019591d99a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;data_fill&lt;/code&gt; function sets a missing value within a nested array or object using &quot;dot&quot; notation:</source>
          <target state="translated">&lt;code&gt;data_fill&lt;/code&gt; 機能は、表記を「ドット」を使用して、ネストされたアレイまたはオブジェクト内の欠落している値を設定します。</target>
        </trans-unit>
        <trans-unit id="ee1d952c25655b55a6ed0857e9555f5aad9c2584" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;data_get&lt;/code&gt; function also accepts a default value, which will be returned if the specified key is not found:</source>
          <target state="translated">&lt;code&gt;data_get&lt;/code&gt; の機能も、指定したキーが見つからない場合に返されるデフォルト値を受け入れ：</target>
        </trans-unit>
        <trans-unit id="e0808da32fb0e753fe2f04a5029ad67e0a8c474c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;data_get&lt;/code&gt; function retrieves a value from a nested array or object using &quot;dot&quot; notation:</source>
          <target state="translated">&lt;code&gt;data_get&lt;/code&gt; の機能は、表記を「ドット」を使用して、ネストされたアレイまたはオブジェクトから値を取得します。</target>
        </trans-unit>
        <trans-unit id="efe8dacae9ad6b4933f694001afedc6875a72b02" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;data_set&lt;/code&gt; function sets a value within a nested array or object using &quot;dot&quot; notation:</source>
          <target state="translated">&lt;code&gt;data_set&lt;/code&gt; の機能は、表記を「ドット」を使用して、ネストされたアレイまたはオブジェクト内の値を設定します。</target>
        </trans-unit>
        <trans-unit id="363ab6db27d6e99d06b835c4d9281f4e736c49e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;database&lt;/code&gt; Directory</source>
          <target state="translated">&lt;code&gt;database&lt;/code&gt; ディレクトリ</target>
        </trans-unit>
        <trans-unit id="15a8d6cb0d8ecf0f1bba535206fda1a923caf465" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;database&lt;/code&gt; directory contains your database migrations, model factories, and seeds. If you wish, you may also use this directory to hold an SQLite database.</source>
          <target state="translated">&lt;code&gt;database&lt;/code&gt; ディレクトリには、データベースの移行、モデル工場、種子が含まれています。必要に応じて、このディレクトリを使用してSQLiteデータベースを保持することもできます。</target>
        </trans-unit>
        <trans-unit id="6ffabe8d779fec0779ced29a5e92c3d1d7ca2ea5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;database&lt;/code&gt; notification channel stores the notification information in a database table. This table will contain information such as the notification type as well as custom JSON data that describes the notification.</source>
          <target state="translated">&lt;code&gt;database&lt;/code&gt; 通知チャネルは、データベーステーブル内の通知情報を格納します。このテーブルには、通知タイプや通知を説明するカスタムJSONデータなどの情報が含まれます。</target>
        </trans-unit>
        <trans-unit id="9a510ec19cc2e849cbbb447f860474250bdbff5b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;database_path&lt;/code&gt; function returns the fully qualified path to the &lt;code&gt;database&lt;/code&gt; directory. You may also use the &lt;code&gt;database_path&lt;/code&gt; function to generate a fully qualified path to a given file within the database directory:</source>
          <target state="translated">&lt;code&gt;database_path&lt;/code&gt; の機能は、完全修飾パスを返す &lt;code&gt;database&lt;/code&gt; ディレクトリを。 &lt;code&gt;database_path&lt;/code&gt; 関数を使用して、データベースディレクトリ内の特定のファイルへの完全修飾パスを生成することもできます。</target>
        </trans-unit>
        <trans-unit id="ede3b34c93c7cb7d826ebb899360b386f712c796" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dd&lt;/code&gt; function dumps the given variables and ends execution of the script:</source>
          <target state="translated">&lt;code&gt;dd&lt;/code&gt; 機能は、スクリプトの与えられた変数と終了実行をダンプします。</target>
        </trans-unit>
        <trans-unit id="569d8d255139f576b7a5c194731b01784637dc88" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dd&lt;/code&gt; method dumps the collection's items and ends execution of the script:</source>
          <target state="translated">&lt;code&gt;dd&lt;/code&gt; 方法は、スクリプトのコレクションのアイテムと終了実行をダンプします。</target>
        </trans-unit>
        <trans-unit id="1411634701b70269755f5746f93226c0ad07410f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;debug&lt;/code&gt; option in your &lt;code&gt;config/app.php&lt;/code&gt; configuration file determines how much information about an error is actually displayed to the user. By default, this option is set to respect the value of the &lt;code&gt;APP_DEBUG&lt;/code&gt; environment variable, which is stored in your &lt;code&gt;.env&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;config/app.php&lt;/code&gt; 構成ファイルの &lt;code&gt;debug&lt;/code&gt; オプションは、ユーザーに実際に表示されるエラーに関する情報の量を決定します。デフォルトでは、このオプションは &lt;code&gt;.env&lt;/code&gt; ファイルに格納されている &lt;code&gt;APP_DEBUG&lt;/code&gt; 環境変数の値を尊重するように設定されています。</target>
        </trans-unit>
        <trans-unit id="3d9874028e063af26eae71077b80ced1f75ebc14" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;decrypt&lt;/code&gt; function decrypts the given value using Laravel's &lt;a href=&quot;encryption&quot;&gt;encrypter&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;decrypt&lt;/code&gt; 機能はLaravelの使用して、指定された値を復号化&lt;a href=&quot;encryption&quot;&gt;暗号化器を&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="a660fad70638f0cc4c22d00098e6c52f9c083e1c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;delete&lt;/code&gt; method accepts a single filename or an array of files to remove from the disk:</source>
          <target state="translated">&lt;code&gt;delete&lt;/code&gt; 方法は、単一のファイル名またはディスクから削除するファイルの配列を受け付けます。</target>
        </trans-unit>
        <trans-unit id="f866e87912fdec431da3496fc8553abc55f6f96b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;delete&lt;/code&gt; method should be used to delete records from the database. Like &lt;code&gt;update&lt;/code&gt;, the number of rows affected will be returned:</source>
          <target state="translated">&lt;code&gt;delete&lt;/code&gt; の方法は、データベースからレコードを削除するために使用する必要があります。 &lt;code&gt;update&lt;/code&gt; と同様に、影響を受けた行数が返されます：</target>
        </trans-unit>
        <trans-unit id="1312845cc61840761c3ee0e90e7eda6db699def1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;destroy&lt;/code&gt; method should remove the data associated with the &lt;code&gt;$sessionId&lt;/code&gt; from persistent storage.</source>
          <target state="translated">&lt;code&gt;destroy&lt;/code&gt; 方法は、関連付けられたデータ削除する必要があります &lt;code&gt;$sessionId&lt;/code&gt; の永続ストレージからを。</target>
        </trans-unit>
        <trans-unit id="13e707dc26e25be9e9d0fd93acec764d0762774f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;diff&lt;/code&gt; method compares the collection against another collection or a plain PHP &lt;code&gt;array&lt;/code&gt; based on its values. This method will return the values in the original collection that are not present in the given collection:</source>
          <target state="translated">&lt;code&gt;diff&lt;/code&gt; 方法は、別のコレクションまたはプレーンPHPのに対してコレクションを比較する &lt;code&gt;array&lt;/code&gt; 、その値に基づい。このメソッドは、指定されたコレクションに存在しない元のコレクションの値を返します。</target>
        </trans-unit>
        <trans-unit id="fe0948a160c6eb766d347f5b521622aca4ec0b63" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;diffAssoc&lt;/code&gt; method compares the collection against another collection or a plain PHP &lt;code&gt;array&lt;/code&gt; based on its keys and values. This method will return the key / value pairs in the original collection that are not present in the given collection:</source>
          <target state="translated">&lt;code&gt;diffAssoc&lt;/code&gt; の方法は、別のコレクションまたはプレーンPHPのに対してコレクションを比較する &lt;code&gt;array&lt;/code&gt; のキーと値に基づきます。このメソッドは、指定されたコレクションに存在しない、元のコレクションのキー/値のペアを返します。</target>
        </trans-unit>
        <trans-unit id="8771545db20dfd39f09e615540d5a412cfd464e9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;diffKeys&lt;/code&gt; method compares the collection against another collection or a plain PHP &lt;code&gt;array&lt;/code&gt; based on its keys. This method will return the key / value pairs in the original collection that are not present in the given collection:</source>
          <target state="translated">&lt;code&gt;diffKeys&lt;/code&gt; の方法は、別のコレクションまたはプレーンPHPのに対してコレクションを比較する &lt;code&gt;array&lt;/code&gt; のキーに基づきます。このメソッドは、指定されたコレクションに存在しない、元のコレクションのキー/値のペアを返します。</target>
        </trans-unit>
        <trans-unit id="f756055240ba1063c2048a23a32600184331bba8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;directories&lt;/code&gt; method returns an array of all the directories within a given directory. Additionally, you may use the &lt;code&gt;allDirectories&lt;/code&gt; method to get a list of all directories within a given directory and all of its sub-directories:</source>
          <target state="translated">&lt;code&gt;directories&lt;/code&gt; メソッドは、指定されたディレクトリ内のすべてのディレクトリの配列を返します。さらに、 &lt;code&gt;allDirectories&lt;/code&gt; メソッドを使用して、特定のディレクトリ内のすべてのディレクトリとそのすべてのサブディレクトリのリストを取得できます。</target>
        </trans-unit>
        <trans-unit id="53d01e175389ee481089a69a72e6b2726c9d15a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dispatch&lt;/code&gt; function pushes the given &lt;a href=&quot;queues#creating-jobs&quot;&gt;job&lt;/a&gt; onto the Laravel &lt;a href=&quot;queues&quot;&gt;job queue&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;dispatch&lt;/code&gt; 関数は、与えられたプッシュ&lt;a href=&quot;queues#creating-jobs&quot;&gt;仕事を&lt;/a&gt; Laravelの上に&lt;a href=&quot;queues&quot;&gt;ジョブキュー&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="a78f09173845a84816aaa0f82e2f71e918e154a4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dispatch_now&lt;/code&gt; function runs the given &lt;a href=&quot;queues#creating-jobs&quot;&gt;job&lt;/a&gt; immediately and returns the value from its &lt;code&gt;handle&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;dispatch_now&lt;/code&gt; の関数は、指定した実行し&lt;a href=&quot;queues#creating-jobs&quot;&gt;、ジョブを&lt;/a&gt;すぐにし、そのから値を返す &lt;code&gt;handle&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="12e37a32a78dee36c396bf40a62fe1e8c9cdeac4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;distinct&lt;/code&gt; method allows you to force the query to return distinct results:</source>
          <target state="translated">&lt;code&gt;distinct&lt;/code&gt; 方法は、あなたが明確な結果を返すために、クエリを強制することができます：</target>
        </trans-unit>
        <trans-unit id="eed2948b9ae9e88a2aa59b1ab36db88382f6f966" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;download&lt;/code&gt; method may be used to generate a response that forces the user's browser to download the file at the given path. The &lt;code&gt;download&lt;/code&gt; method accepts a file name as the second argument to the method, which will determine the file name that is seen by the user downloading the file. Finally, you may pass an array of HTTP headers as the third argument to the method:</source>
          <target state="translated">&lt;code&gt;download&lt;/code&gt; 方法は、指定されたパスにファイルをダウンロードするには、ユーザーのブラウザを強制的に応答を生成するために使用することができます。 &lt;code&gt;download&lt;/code&gt; 方法は、ファイルをダウンロードするユーザーによって見られているファイル名を決定します方法、二番目の引数としてファイル名を受け入れます。最後に、メソッドの3番目の引数としてHTTPヘッダーの配列を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="bd9ef0c4f5e547638b126a678eac7147d8e5a7fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;drag&lt;/code&gt; method may be used to drag an element matching the given selector to another element:</source>
          <target state="translated">&lt;code&gt;drag&lt;/code&gt; 方法は、別の要素に指定したセレクタに一致する要素をドラッグするために使用することができます。</target>
        </trans-unit>
        <trans-unit id="3416d21ba17993f6d1dc80a9c0ecbdd76b5583b2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dump&lt;/code&gt; function dumps the given variables:</source>
          <target state="translated">&lt;code&gt;dump&lt;/code&gt; 機能は、与えられた変数をダンプします。</target>
        </trans-unit>
        <trans-unit id="713021b29f1e05aa05d00057dabedf3d698ca1f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dump&lt;/code&gt; method dumps the collection's items:</source>
          <target state="translated">&lt;code&gt;dump&lt;/code&gt; メソッドは、コレクションのアイテムをダンプします。</target>
        </trans-unit>
        <trans-unit id="ab8e84a90a16f03a3c894136ce2b8850856312b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dusk&lt;/code&gt; command accepts any argument that is normally accepted by the PHPUnit test runner, allowing you to only run the tests for a given &lt;a href=&quot;https://phpunit.de/manual/current/en/appendixes.annotations.html#appendixes.annotations.group&quot;&gt;group&lt;/a&gt;, etc:</source>
          <target state="translated">&lt;code&gt;dusk&lt;/code&gt; コマンドが正常にだけ与えられたためにテストを実行できるように、PHPUnitのテストランナーで受け入れられている任意の引数を受け入れ&lt;a href=&quot;https://phpunit.de/manual/current/en/appendixes.annotations.html#appendixes.annotations.group&quot;&gt;グループ&lt;/a&gt;、など：</target>
        </trans-unit>
        <trans-unit id="595b7a2459733a820551fae07660ae2d0ce2924d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;e&lt;/code&gt; function runs PHP's &lt;code&gt;htmlspecialchars&lt;/code&gt; function with the &lt;code&gt;double_encode&lt;/code&gt; option set to &lt;code&gt;true&lt;/code&gt; by default:</source>
          <target state="translated">&lt;code&gt;e&lt;/code&gt; 関数は、PHPの実行さ &lt;code&gt;htmlspecialchars&lt;/code&gt; で機能 &lt;code&gt;double_encode&lt;/code&gt; のに設定オプション &lt;code&gt;true&lt;/code&gt; デフォルト：</target>
        </trans-unit>
        <trans-unit id="39d69717d701416c776d9ae5f1caf5031b9f4368" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;each&lt;/code&gt; method iterates over the items in the collection and passes each item to a callback:</source>
          <target state="translated">&lt;code&gt;each&lt;/code&gt; 方法のコレクション内の項目を反復処理し、コールバックに各項目を渡します。</target>
        </trans-unit>
        <trans-unit id="489a57901a076c4cba26791246c2c1451cf7ec06" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;eachSpread&lt;/code&gt; method iterates over the collection's items, passing each nested item value into the given callback:</source>
          <target state="translated">&lt;code&gt;eachSpread&lt;/code&gt; のメソッドは、指定されたコールバックの中にネストされた各項目の値を渡して、コレクションの項目の上に反復処理します：</target>
        </trans-unit>
        <trans-unit id="eb91f29888a6d6386ace9cac61fdb0e897fee8ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;elements&lt;/code&gt; method of pages allows you to define quick, easy-to-remember shortcuts for any CSS selector on your page. For example, let's define a shortcut for the &quot;email&quot; input field of the application's login page:</source>
          <target state="translated">ページの &lt;code&gt;elements&lt;/code&gt; メソッドを使用すると、ページ上のCSSセレクターにすばやく覚えやすいショートカットを定義できます。たとえば、アプリケーションのログインページの「電子メール」入力フィールドのショートカットを定義してみましょう。</target>
        </trans-unit>
        <trans-unit id="3588815d2dfaf0441b0f82f55fd1c6a75af60deb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;emailOutputTo&lt;/code&gt;, &lt;code&gt;sendOutputTo&lt;/code&gt; and &lt;code&gt;appendOutputTo&lt;/code&gt; methods are exclusive to the &lt;code&gt;command&lt;/code&gt; and &lt;code&gt;exec&lt;/code&gt; methods.</source>
          <target state="translated">&lt;code&gt;emailOutputTo&lt;/code&gt; 、 &lt;code&gt;sendOutputTo&lt;/code&gt; と &lt;code&gt;appendOutputTo&lt;/code&gt; 方法はに排他的である &lt;code&gt;command&lt;/code&gt; と &lt;code&gt;exec&lt;/code&gt; の方法。</target>
        </trans-unit>
        <trans-unit id="7cca0a98b837eb352dcf8a73d9ad8c5c25af86d5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;encrypt&lt;/code&gt; function encrypts the given value using Laravel's &lt;a href=&quot;encryption&quot;&gt;encrypter&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;encrypt&lt;/code&gt; 機能はLaravelの使用して、指定された値を暗号化する&lt;a href=&quot;encryption&quot;&gt;暗号化器を&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="ff5b34d9cf60fac28601ca679095194baccdf6e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ends_with&lt;/code&gt; function determines if the given string ends with the given value:</source>
          <target state="translated">&lt;code&gt;ends_with&lt;/code&gt; の関数は、指定した値と指定された文字列が終了か否かを判断します。</target>
        </trans-unit>
        <trans-unit id="0e8df0261a4290bfb7ad6cfe6647b9260fca3009" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;env&lt;/code&gt; function retrieves the value of an &lt;a href=&quot;configuration#environment-configuration&quot;&gt;environment variable&lt;/a&gt; or returns a default value:</source>
          <target state="translated">&lt;code&gt;env&lt;/code&gt; 関数は値取得し&lt;a href=&quot;configuration#environment-configuration&quot;&gt;、環境変数を&lt;/a&gt;するか、デフォルト値を返します。</target>
        </trans-unit>
        <trans-unit id="fcda578a2786e7b96e7382f52e6b28107db9dec0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;event&lt;/code&gt; function dispatches the given &lt;a href=&quot;events&quot;&gt;event&lt;/a&gt; to its listeners:</source>
          <target state="translated">&lt;code&gt;event&lt;/code&gt; 関数は、指定したディスパッチ&lt;a href=&quot;events&quot;&gt;イベントを&lt;/a&gt;そのリスナーに：</target>
        </trans-unit>
        <trans-unit id="4533d0adb7ee0926a10ea31abd911836f262e23a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;every&lt;/code&gt; method may be used to verify that all elements of a collection pass a given truth test:</source>
          <target state="translated">&lt;code&gt;every&lt;/code&gt; 方法は、コレクションのすべての要素が与えられた真理試験に合格することを確認するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="d4d0764ae5532acac9f7bc0b230a9b79b2a43e96" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;except&lt;/code&gt; method returns all items in the collection except for those with the specified keys:</source>
          <target state="translated">&lt;code&gt;except&lt;/code&gt; メソッドは、指定されたキーを持つものを除くコレクションのすべての項目を返します。</target>
        </trans-unit>
        <trans-unit id="3b1d10ec61e0ffa67c47243e24549530afb0b158" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;exec&lt;/code&gt; method may be used to issue a command to the operating system:</source>
          <target state="translated">&lt;code&gt;exec&lt;/code&gt; の方法は、オペレーティングシステムにコマンドを発行するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="77001c4c16ff6cf5e99358a5c328741d6e574ea0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;exists&lt;/code&gt; method may be used to determine if a file exists on the disk:</source>
          <target state="translated">&lt;code&gt;exists&lt;/code&gt; この方法は、ファイルがディスク上に存在するかどうかを決定するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="b4c142b04ac3b5a86d986f497c883d5388781225" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extend&lt;/code&gt; method allows the modification of resolved services. For example, when a service is resolved, you may run additional code to decorate or configure the service. The &lt;code&gt;extend&lt;/code&gt; method accepts a Closure, which should return the modified service, as its only argument:</source>
          <target state="translated">&lt;code&gt;extend&lt;/code&gt; メソッドは解決サービスを変更できます。たとえば、サービスが解決されたら、追加のコードを実行してサービスを装飾または構成できます。 &lt;code&gt;extend&lt;/code&gt; 方法は、その唯一の引数として、修飾されたサービスを返すべきクロージャを受け付けます。</target>
        </trans-unit>
        <trans-unit id="92aafa4aa45e123e0d45648fe4ab34e127d09a51" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extract&lt;/code&gt; method accepts an array of all libraries or modules that you wish to extract into a &lt;code&gt;vendor.js&lt;/code&gt; file. Using the above snippet as an example, Mix will generate the following files:</source>
          <target state="translated">&lt;code&gt;extract&lt;/code&gt; 方法は、あなたがに抽出したいことをすべてのライブラリやモジュールのアレイ受け付け &lt;code&gt;vendor.js&lt;/code&gt; ファイルを。上記のスニペットを例として使用すると、Mixは次のファイルを生成します。</target>
        </trans-unit>
        <trans-unit id="83d709393aa0b4733f23c202e222ed16f22117b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;factory&lt;/code&gt; function creates a model factory builder for a given class, name, and amount. It can be used while &lt;a href=&quot;database-testing#writing-factories&quot;&gt;testing&lt;/a&gt; or &lt;a href=&quot;seeding#using-model-factories&quot;&gt;seeding&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;factory&lt;/code&gt; 機能は、特定のクラス、名前、および量のモデル工場ビルダーを作成します。&lt;a href=&quot;database-testing#writing-factories&quot;&gt;テスト&lt;/a&gt;または&lt;a href=&quot;seeding#using-model-factories&quot;&gt;シード&lt;/a&gt;中に使用できます。</target>
        </trans-unit>
        <trans-unit id="c84535ae1f2d8dcf411e6224c61ead6a5783c921" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;file&lt;/code&gt; method may be used to display a file, such as an image or PDF, directly in the user's browser instead of initiating a download. This method accepts the path to the file as its first argument and an array of headers as its second argument:</source>
          <target state="translated">&lt;code&gt;file&lt;/code&gt; 方法は、直接ユーザーのブラウザの代わりのダウンロードを開始するには、画像やPDFなどのファイルを表示するために使用することができます。このメソッドは、最初の引数としてファイルへのパスを受け入れ、2番目の引数としてヘッダーの配列を受け入れます。</target>
        </trans-unit>
        <trans-unit id="4e16126a8b67d6a538a8f3ceaee917dc5a3bd544" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;files&lt;/code&gt; method returns an array of all of the files in a given directory. If you would like to retrieve a list of all files within a given directory including all sub-directories, you may use the &lt;code&gt;allFiles&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;files&lt;/code&gt; メソッドは、指定されたディレクトリ内のファイルのすべての配列を返します。すべてのサブディレクトリを含む、特定のディレクトリ内のすべてのファイルのリストを取得する場合は、 &lt;code&gt;allFiles&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="4e08a912734a99c7958876179c8df5f8e18bfb7b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filled&lt;/code&gt; function returns whether the given value is not &quot;blank&quot;:</source>
          <target state="translated">&lt;code&gt;filled&lt;/code&gt; 特定の値が「空白」でないかどうかの関数が返します：</target>
        </trans-unit>
        <trans-unit id="9274ab12b5b55e2191322ae6bc6536bbf6166d95" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filter&lt;/code&gt; method filters the collection using the given callback, keeping only those items that pass a given truth test:</source>
          <target state="translated">&lt;code&gt;filter&lt;/code&gt; メソッドは、指定された真実の試験に合格した項目のみを保ち、与えられたコールバックを使用してコレクションをフィルタリングします。</target>
        </trans-unit>
        <trans-unit id="91fb75980bb748e4dea9e00da4b9f25f7a43db5c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;first&lt;/code&gt; method returns the first element in the collection that passes a given truth test:</source>
          <target state="translated">&lt;code&gt;first&lt;/code&gt; 方法は、与えられた真理テストに合格し、コレクション内の最初の要素を返します。</target>
        </trans-unit>
        <trans-unit id="000b67082af9da863014a33b8f09110c358458db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;firstOrNew&lt;/code&gt; method, like &lt;code&gt;firstOrCreate&lt;/code&gt; will attempt to locate a record in the database matching the given attributes. However, if a model is not found, a new model instance will be returned. Note that the model returned by &lt;code&gt;firstOrNew&lt;/code&gt; has not yet been persisted to the database. You will need to call &lt;code&gt;save&lt;/code&gt; manually to persist it:</source>
          <target state="translated">&lt;code&gt;firstOrNew&lt;/code&gt; のような方法で、 &lt;code&gt;firstOrCreate&lt;/code&gt; は、指定された属性に一致する、データベース内のレコードを検索しようとします。ただし、モデルが見つからない場合は、新しいモデルインスタンスが返されます。 &lt;code&gt;firstOrNew&lt;/code&gt; によって返されるモデルはまだデータベースに永続化されていないことに注意してください。永続化するには、手動で &lt;code&gt;save&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="ce83869743ee1684d1f688e5287d76d9bffce6f0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;firstWhere&lt;/code&gt; method returns the first element in the collection with the given key / value pair:</source>
          <target state="translated">&lt;code&gt;firstWhere&lt;/code&gt; の方法は、指定されたキー/値のペアを持つコレクション内の最初の要素を返します。</target>
        </trans-unit>
        <trans-unit id="a15bbfcc0551a6c465e9968bc1e45cc0727cb5aa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flash&lt;/code&gt; method on the &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; class will flash the current input to the &lt;a href=&quot;session&quot;&gt;session&lt;/a&gt; so that it is available during the user's next request to the application:</source>
          <target state="translated">&lt;code&gt;Illuminate\Http\Request&lt;/code&gt; クラスの &lt;code&gt;flash&lt;/code&gt; メソッドは、&lt;a href=&quot;session&quot;&gt;セッション&lt;/a&gt;への現在の入力をフラッシュし、ユーザーがアプリケーションに次に要求するときに使用できるようにします。</target>
        </trans-unit>
        <trans-unit id="9b8c4eed95102ced52b37f5f5d4f6b13470afea1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flatMap&lt;/code&gt; method iterates through the collection and passes each value to the given callback. The callback is free to modify the item and return it, thus forming a new collection of modified items. Then, the array is flattened by a level:</source>
          <target state="translated">&lt;code&gt;flatMap&lt;/code&gt; の方法は、コレクションを反復処理し、所与のコールバックに各値を渡します。コールバックはアイテムを自由に変更して返すことができ、変更されたアイテムの新しいコレクションを形成します。次に、配列はレベルによってフラット化されます。</target>
        </trans-unit>
        <trans-unit id="a02d3e6876e85c6cd6f8660dae6604b52224334f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flatten&lt;/code&gt; method flattens a multi-dimensional collection into a single dimension:</source>
          <target state="translated">&lt;code&gt;flatten&lt;/code&gt; 方法は、単一のディメンションに多次元コレクションをフラット：</target>
        </trans-unit>
        <trans-unit id="4a33381ea938daec1c787355d50fbc0072cbc121" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flip&lt;/code&gt; method swaps the collection's keys with their corresponding values:</source>
          <target state="translated">&lt;code&gt;flip&lt;/code&gt; 方法は、それらに対応する値で、コレクションのキーを入れ替え：</target>
        </trans-unit>
        <trans-unit id="fb29cc7edfe18e5416f76c7783cd7900e3e58f04" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flush&lt;/code&gt; command may be used to remove all of a model's records from your search indexes:</source>
          <target state="translated">&lt;code&gt;flush&lt;/code&gt; コマンドは、検索インデックスからモデルのすべてのレコードを削除するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="9d6468e20c5d040218bb9747471fac0a06bf3bd4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;folders&lt;/code&gt; property of the &lt;code&gt;Homestead.yaml&lt;/code&gt; file lists all of the folders you wish to share with your Homestead environment. As files within these folders are changed, they will be kept in sync between your local machine and the Homestead environment. You may configure as many shared folders as necessary:</source>
          <target state="translated">&lt;code&gt;Homestead.yaml&lt;/code&gt; ファイルの &lt;code&gt;folders&lt;/code&gt; プロパティには、Homestead環境と共有するすべてのフォルダーが一覧表示されます。これらのフォルダー内のファイルが変更されると、ローカルマシンとHomestead環境との間で同期が維持されます。必要な数の共有フォルダを構成できます。</target>
        </trans-unit>
        <trans-unit id="f5bbafc96aeea452b9b65fb0f953db00cceffcc0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forPage&lt;/code&gt; method returns a new collection containing the items that would be present on a given page number. The method accepts the page number as its first argument and the number of items to show per page as its second argument:</source>
          <target state="translated">&lt;code&gt;forPage&lt;/code&gt; のメソッドは、指定されたページ数で存在するであろうアイテムを含む新しいコレクションを返します。このメソッドは、最初の引数としてページ番号を受け入れ、2番目の引数としてページごとに表示するアイテムの数を受け入れます。</target>
        </trans-unit>
        <trans-unit id="82339ec6fe2a18803287d6742af197a0da3cd54b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forever&lt;/code&gt; method may be used to store an item in the cache permanently. Since these items will not expire, they must be manually removed from the cache using the &lt;code&gt;forget&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;forever&lt;/code&gt; の方法は、恒久的にキャッシュにアイテムを格納するために使用することができます。これらのアイテムは期限切れにならないため、 &lt;code&gt;forget&lt;/code&gt; メソッドを使用して手動でキャッシュから削除する必要があります。</target>
        </trans-unit>
        <trans-unit id="e98ff6b293325320588e8dc259ce3951cdf1da6a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forget&lt;/code&gt; method removes an item from the collection by its key:</source>
          <target state="translated">&lt;code&gt;forget&lt;/code&gt; 方法は、そのキーでコレクションから項目を削除します。</target>
        </trans-unit>
        <trans-unit id="2b96b202d81153b648458634952b7e5b5ec1459c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forget&lt;/code&gt; method will remove a piece of data from the session. If you would like to remove all data from the session, you may use the &lt;code&gt;flush&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;forget&lt;/code&gt; メソッドは、セッションからのデータの一部を削除します。セッションからすべてのデータを削除する場合は、 &lt;code&gt;flush&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="beaa58b6cd6d6a85c1f8707437a1d5e40bfcca6c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;frontControllerPath&lt;/code&gt; Method</source>
          <target state="translated">&lt;code&gt;frontControllerPath&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="51ff410b45877335f46623c17e4b6301c84b30e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;frontControllerPath&lt;/code&gt; method should return the fully qualified path to your application's &quot;front controller&quot;, which is typically your &quot;index.php&quot; file or equivalent:</source>
          <target state="translated">&lt;code&gt;frontControllerPath&lt;/code&gt; の方法は、典型的には、あなたの「index.phpの」ファイルまたは同等であるアプリケーションの「フロントコントローラ」、への完全修飾パスを返す必要があります：</target>
        </trans-unit>
        <trans-unit id="c5d8c0b2b2184ad6042edad29b65c7b3f5ddd99b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;gc&lt;/code&gt; method should destroy all session data that is older than the given &lt;code&gt;$lifetime&lt;/code&gt;, which is a UNIX timestamp. For self-expiring systems like Memcached and Redis, this method may be left empty.</source>
          <target state="translated">&lt;code&gt;gc&lt;/code&gt; メソッドは、指定されたより古いすべてのセッションデータ破壊しなければならない &lt;code&gt;$lifetime&lt;/code&gt; UNIXタイムスタンプです。MemcachedやRedisのような自己満了システムの場合、このメソッドは空のままにすることができます。</target>
        </trans-unit>
        <trans-unit id="14e0e67cb8329a0a09e2060467b1cfa0a9ea105f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get&lt;/code&gt; method also accepts a Closure. After the Closure is executed, Laravel will automatically release the lock:</source>
          <target state="translated">&lt;code&gt;get&lt;/code&gt; メソッドも閉鎖を受け付けます。クロージャーが実行された後、Laravelは自動的にロックを解放します。</target>
        </trans-unit>
        <trans-unit id="5a490abc775998e6b6381f420cee3ae052417e60" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get&lt;/code&gt; method makes a &lt;code&gt;GET&lt;/code&gt; request into the application, while the &lt;code&gt;assertStatus&lt;/code&gt; method asserts that the returned response should have the given HTTP status code. In addition to this simple assertion, Laravel also contains a variety of assertions for inspecting the response headers, content, JSON structure, and more.</source>
          <target state="translated">&lt;code&gt;get&lt;/code&gt; メソッドは、作る &lt;code&gt;GET&lt;/code&gt; ながら、アプリケーションへの要求を &lt;code&gt;assertStatus&lt;/code&gt; する方法が返された応答が与えられたHTTPステータスコードを持つべきであると主張しています。この単純なアサーションに加えて、Laravelには、応答ヘッダー、コンテンツ、JSON構造などを検査するためのさまざまなアサーションも含まれています。</target>
        </trans-unit>
        <trans-unit id="2d0a6833961656b521f54d7e4a9b53c5943a7e77" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get&lt;/code&gt; method may be used to retrieve the contents of a file. The raw string contents of the file will be returned by the method. Remember, all file paths should be specified relative to the &quot;root&quot; location configured for the disk:</source>
          <target state="translated">&lt;code&gt;get&lt;/code&gt; メソッドは、ファイルの内容を取得するために使用することができます。ファイルの生の文字列コンテンツは、メソッドによって返されます。すべてのファイルパスは、ディスクに構成された「ルート」の場所を基準にして指定する必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="acc83ec4bae878e20fa7845475966aca97c14960" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get&lt;/code&gt; method on the &lt;code&gt;Cache&lt;/code&gt; facade is used to retrieve items from the cache. If the item does not exist in the cache, &lt;code&gt;null&lt;/code&gt; will be returned. If you wish, you may pass a second argument to the &lt;code&gt;get&lt;/code&gt; method specifying the default value you wish to be returned if the item doesn't exist:</source>
          <target state="translated">&lt;code&gt;Cache&lt;/code&gt; ファサードの &lt;code&gt;get&lt;/code&gt; メソッドは、キャッシュからアイテムを取得するために使用されます。アイテムがキャッシュに存在しない場合、 &lt;code&gt;null&lt;/code&gt; が返されます。必要に応じて、アイテムが存在しない場合に返すデフォルト値を指定する2番目の引数を &lt;code&gt;get&lt;/code&gt; メソッドに渡すことができます。</target>
        </trans-unit>
        <trans-unit id="a0ebf7536412b1052f400b99bb67619ac25f5cf1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get&lt;/code&gt; method returns an &lt;code&gt;Illuminate\Support\Collection&lt;/code&gt; containing the results where each result is an instance of the PHP &lt;code&gt;stdClass&lt;/code&gt; object. You may access each column's value by accessing the column as a property of the object:</source>
          <target state="translated">&lt;code&gt;get&lt;/code&gt; メソッドは返し &lt;code&gt;Illuminate\Support\Collection&lt;/code&gt; の各結果はPHPのインスタンスである結果含む &lt;code&gt;stdClass&lt;/code&gt; ののオブジェクトを。オブジェクトのプロパティとして列にアクセスすることで、各列の値にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="cfdcab1251d0b713dcb90d1c99f3096aac58ae5c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get&lt;/code&gt; method returns the item at a given key. If the key does not exist, &lt;code&gt;null&lt;/code&gt; is returned:</source>
          <target state="translated">&lt;code&gt;get&lt;/code&gt; メソッドは、指定されたキーで項目を返します。キーが存在しない場合は、 &lt;code&gt;null&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="05b780a84da8c78187ce5dbcfcf5d49f22901318" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;groupBy&lt;/code&gt; and &lt;code&gt;having&lt;/code&gt; methods may be used to group the query results. The &lt;code&gt;having&lt;/code&gt; method's signature is similar to that of the &lt;code&gt;where&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;groupBy&lt;/code&gt; と &lt;code&gt;having&lt;/code&gt; 方法がグループにクエリ結果を使用してもよいです。 &lt;code&gt;having&lt;/code&gt; メソッドのシグネチャは、のと同様である &lt;code&gt;where&lt;/code&gt; の方法。</target>
        </trans-unit>
        <trans-unit id="a1258fef35a429734f855e88dccc5a7c3a7b71b1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;groupBy&lt;/code&gt; method groups the collection's items by a given key:</source>
          <target state="translated">&lt;code&gt;groupBy&lt;/code&gt; 方法グループ与えられたキーによるコレクションの項目：</target>
        </trans-unit>
        <trans-unit id="5ccc3def86aa54b44f6d98bb051cb45bf39abb97" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;handle&lt;/code&gt; method is called when the job is processed by the queue. Note that we are able to type-hint dependencies on the &lt;code&gt;handle&lt;/code&gt; method of the job. The Laravel &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt; automatically injects these dependencies.</source>
          <target state="translated">&lt;code&gt;handle&lt;/code&gt; ジョブがキューによって処理されたときにメソッドが呼び出されます。ジョブの &lt;code&gt;handle&lt;/code&gt; メソッドに対する依存性のタイプヒントを入力できることに注意してください。Laravel &lt;a href=&quot;container&quot;&gt;サービスコンテナは、&lt;/a&gt;これらの依存関係を自動的に挿入します。</target>
        </trans-unit>
        <trans-unit id="4384703b30840cae656e6fefca01441c3078abd2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has&lt;/code&gt; method determines if a given key exists in the collection:</source>
          <target state="translated">&lt;code&gt;has&lt;/code&gt; 特定のキーがコレクション内に存在する場合の方法が決定されます。</target>
        </trans-unit>
        <trans-unit id="ff0f995a7895ab17ff4a69e0507734505aeef484" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has&lt;/code&gt; method may be used to determine if an item exists in the cache. This method will return &lt;code&gt;false&lt;/code&gt; if the value is &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;has&lt;/code&gt; 方法は、項目がキャッシュに存在するかどうかを決定するために使用することができます。このメソッドは、値が &lt;code&gt;null&lt;/code&gt; または &lt;code&gt;false&lt;/code&gt; の場合に &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0f22bebd6d834405a179e345bf7d377551c8dbfd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has&lt;/code&gt; method may be used to determine if any error messages exist for a given field:</source>
          <target state="translated">&lt;code&gt;has&lt;/code&gt; 方法は、任意のエラーメッセージが所与のフィールドのために存在するかどうかを決定するために使用されてもよいです。</target>
        </trans-unit>
        <trans-unit id="3327238d02a0c28d871bdfe0adc844e6f2c36449" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;havingRaw&lt;/code&gt; and &lt;code&gt;orHavingRaw&lt;/code&gt; methods may be used to set a raw string as the value of the &lt;code&gt;having&lt;/code&gt; clause. These methods accept an optional array of bindings as their second argument:</source>
          <target state="translated">&lt;code&gt;havingRaw&lt;/code&gt; と &lt;code&gt;orHavingRaw&lt;/code&gt; 方法はの値として生の文字列を設定するために使用することができる &lt;code&gt;having&lt;/code&gt; 句。これらのメソッドは、2番目の引数としてバインディングのオプションの配列を受け入れます。</target>
        </trans-unit>
        <trans-unit id="7728f8d34b583a7be36486b9688297d2a25b7c20" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;head&lt;/code&gt; function returns the first element in the given array:</source>
          <target state="translated">&lt;code&gt;head&lt;/code&gt; 関数は、与えられた配列の最初の要素を返します。</target>
        </trans-unit>
        <trans-unit id="05af33415b4c3b7716b257dae0debd8a3a4927bf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;here&lt;/code&gt; callback will be executed immediately once the channel is joined successfully, and will receive an array containing the user information for all of the other users currently subscribed to the channel. The &lt;code&gt;joining&lt;/code&gt; method will be executed when a new user joins a channel, while the &lt;code&gt;leaving&lt;/code&gt; method will be executed when a user leaves the channel.</source>
          <target state="translated">&lt;code&gt;here&lt;/code&gt; 、チャネルが正常に接合され、現在のチャンネルに加入し、他のユーザのすべてのユーザー情報を含む配列を受ける後コールバックが直ちに実行されます。 &lt;code&gt;joining&lt;/code&gt; しながら、新しいユーザーは、チャネルに参加したときの方法が実行されます &lt;code&gt;leaving&lt;/code&gt; メソッドは、ユーザーがチャンネルを離れるときに実行されます。</target>
        </trans-unit>
        <trans-unit id="76c0a41a0d873492209796c251f5fbd6811abfdd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;implode&lt;/code&gt; method joins the items in a collection. Its arguments depend on the type of items in the collection. If the collection contains arrays or objects, you should pass the key of the attributes you wish to join, and the &quot;glue&quot; string you wish to place between the values:</source>
          <target state="translated">&lt;code&gt;implode&lt;/code&gt; 方法は、コレクション内の項目を結合します。その引数は、コレクション内のアイテムのタイプによって異なります。コレクションに配列またはオブジェクトが含まれている場合は、結合する属性のキーと、値の間に配置する「接着」文字列を渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="f4822e250c872450bc7438acc16d0c99492ede5a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;inRandomOrder&lt;/code&gt; method may be used to sort the query results randomly. For example, you may use this method to fetch a random user:</source>
          <target state="translated">&lt;code&gt;inRandomOrder&lt;/code&gt; の方法は、ランダムにクエリ結果を並べ替えるために使用することができます。たとえば、このメソッドを使用してランダムなユーザーをフェッチできます。</target>
        </trans-unit>
        <trans-unit id="49ee5baf22df87dbb0462def508532af384fb435" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;increment&lt;/code&gt; and &lt;code&gt;decrement&lt;/code&gt; methods may be used to adjust the value of integer items in the cache. Both of these methods accept an optional second argument indicating the amount by which to increment or decrement the item's value:</source>
          <target state="translated">&lt;code&gt;increment&lt;/code&gt; と &lt;code&gt;decrement&lt;/code&gt; の方法は、キャッシュ内の整数アイテムの値を調整するために使用されてもよいです。これらのメソッドはどちらも、項目の値を増分または減分する量を示すオプションの2番目の引数を受け入れます。</target>
        </trans-unit>
        <trans-unit id="c5916b34f4f4ccaeaa4a014f0896ca93a9b80cc5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;index.php&lt;/code&gt; file loads the Composer generated autoloader definition, and then retrieves an instance of the Laravel application from &lt;code&gt;bootstrap/app.php&lt;/code&gt; script. The first action taken by Laravel itself is to create an instance of the application / &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;index.php&lt;/code&gt; ファイルがロード作曲生成オートローダ定義し、次にからLaravelアプリケーションのインスタンスを取得し &lt;code&gt;bootstrap/app.php&lt;/code&gt; スクリプト。Laravel自体が最初に実行するアクションは、アプリケーション/ &lt;a href=&quot;container&quot;&gt;サービスコンテナの&lt;/a&gt;インスタンスを作成することです。</target>
        </trans-unit>
        <trans-unit id="f9bb5ed2c9355fb93fc6215d87e6d4a485fbe12d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;info&lt;/code&gt; function will write information to the &lt;a href=&quot;errors#logging&quot;&gt;log&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;info&lt;/code&gt; 機能は、に情報を書き込みます&lt;a href=&quot;errors#logging&quot;&gt;ログ&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="917a5357b0d0e81b97a7aac0ff4c8624454338a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;intended&lt;/code&gt; method on the redirector will redirect the user to the URL they were attempting to access before being intercepted by the authentication middleware. A fallback URI may be given to this method in case the intended destination is not available.</source>
          <target state="translated">リダイレクタの &lt;code&gt;intended&lt;/code&gt; メソッドは、認証ミドルウェアによって傍受される前に、ユーザーがアクセスしようとしていたURLにユーザーをリダイレクトします。目的の宛先が利用できない場合に備えて、このメソッドにフォールバックURIを指定できます。</target>
        </trans-unit>
        <trans-unit id="c527f4e7a3c6ddf553c11a92a86bd7e9d5c1535a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;intersect&lt;/code&gt; method removes any values from the original collection that are not present in the given &lt;code&gt;array&lt;/code&gt; or collection. The resulting collection will preserve the original collection's keys:</source>
          <target state="translated">&lt;code&gt;intersect&lt;/code&gt; 法は、所与の中に存在していない元のコレクションから任意の値を削除 &lt;code&gt;array&lt;/code&gt; またはコレクションを。結果のコレクションは、元のコレクションのキーを保持します。</target>
        </trans-unit>
        <trans-unit id="0f59de5191adb2e449fd8099add8017182cb7316" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;intersectByKeys&lt;/code&gt; method removes any keys from the original collection that are not present in the given &lt;code&gt;array&lt;/code&gt; or collection:</source>
          <target state="translated">&lt;code&gt;intersectByKeys&lt;/code&gt; の方法は、所与の中に存在していない元のコレクションから任意のキー削除 &lt;code&gt;array&lt;/code&gt; またはコレクションを：</target>
        </trans-unit>
        <trans-unit id="c934bec6c2d1d68f7f820e8f92b154e0211b1c56" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;invoiceFor&lt;/code&gt; method will create a Stripe invoice which will retry failed billing attempts. If you do not want invoices to retry failed charges, you will need to close them using the Stripe API after the first failed charge.</source>
          <target state="translated">&lt;code&gt;invoiceFor&lt;/code&gt; の方法が失敗した課金再試行しますストライプ請求書を作成します。請求が失敗した請求を再試行しないようにする場合は、最初の失敗した請求後にStripe APIを使用して請求書を閉じる必要があります。</target>
        </trans-unit>
        <trans-unit id="37d3d5c0feb6e800d5c16caebfe19d475d971974" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;is&lt;/code&gt; method allows you to verify that the incoming request path matches a given pattern. You may use the &lt;code&gt;*&lt;/code&gt; character as a wildcard when utilizing this method:</source>
          <target state="translated">&lt;code&gt;is&lt;/code&gt; 方法では、着信要求のパスを指定したパターンに一致することを確認することができます。この方法を使用する場合、 &lt;code&gt;*&lt;/code&gt; 文字をワイルドカードとして使用できます。</target>
        </trans-unit>
        <trans-unit id="a9b6060f5dd0376c515c8cc110de3072a0858952" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isEmpty&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt; if the collection is empty; otherwise, &lt;code&gt;false&lt;/code&gt; is returned:</source>
          <target state="translated">&lt;code&gt;isEmpty&lt;/code&gt; の方法を返し &lt;code&gt;true&lt;/code&gt; コレクションが空の場合は、それ以外の場合は、 &lt;code&gt;false&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="ac441b96f9ec4c0c7f24c1d25784e791eb39223f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isNotEmpty&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt; if the collection is not empty; otherwise, &lt;code&gt;false&lt;/code&gt; is returned:</source>
          <target state="translated">&lt;code&gt;isNotEmpty&lt;/code&gt; のメソッドが返す &lt;code&gt;true&lt;/code&gt; コレクションが空でない場合は、それ以外の場合は、 &lt;code&gt;false&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="9924b55ac36463355a280b755a566cf80bb73fa6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isStaticFile&lt;/code&gt; Method</source>
          <target state="translated">&lt;code&gt;isStaticFile&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="39e7a94265fe52e4f4251e307317e7b59b5fd010" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isStaticFile&lt;/code&gt; method will only be called if the &lt;code&gt;serves&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt; for the incoming request and the request URI is not &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;isStaticFile&lt;/code&gt; の場合、メソッドは、呼び出される &lt;code&gt;serves&lt;/code&gt; 方法戻る &lt;code&gt;true&lt;/code&gt; 着信要求と要求URIのためではありません &lt;code&gt;/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="15385ed1c3901f84deae14c5422690abdec2ff43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isStaticFile&lt;/code&gt; should determine if the incoming request is for a file that is &quot;static&quot;, such as an image or a stylesheet. If the file is static, the method should return the fully qualified path to the static file on disk. If the incoming request is not for a static file, the method should return &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;isStaticFile&lt;/code&gt; は、着信要求は、画像やスタイルシートなどの「静的」であり、ファイルのためのものであるかどうかを判断すべきです。ファイルが静的な場合、メソッドはディスク上の静的ファイルへの完全修飾パスを返す必要があります。着信要求が静的ファイルに対するものでない場合、メソッドは &lt;code&gt;false&lt;/code&gt; を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="a33c3de0a090bc956b4e6bad85bd58d7cb11f6b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;job&lt;/code&gt; method may be used to schedule a &lt;a href=&quot;queues&quot;&gt;queued job&lt;/a&gt;. This method provides a convenient way to schedule jobs without using the &lt;code&gt;call&lt;/code&gt; method to manually create Closures to queue the job:</source>
          <target state="translated">&lt;code&gt;job&lt;/code&gt; 方法は、スケジュールするために使用することができる&lt;a href=&quot;queues&quot;&gt;待機ジョブを&lt;/a&gt;。このメソッドは、 &lt;code&gt;call&lt;/code&gt; メソッドを使用して手動でクロージャを作成し、ジョブをキューに入れずにジョブをスケジュールする便利な方法を提供します。</target>
        </trans-unit>
        <trans-unit id="5335b412f43832cafc082a5778b97c8cdced1dfd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;json&lt;/code&gt; method will automatically set the &lt;code&gt;Content-Type&lt;/code&gt; header to &lt;code&gt;application/json&lt;/code&gt;, as well as convert the given array to JSON using the &lt;code&gt;json_encode&lt;/code&gt; PHP function:</source>
          <target state="translated">&lt;code&gt;json&lt;/code&gt; 方法は、自動的に設定されます &lt;code&gt;Content-Type&lt;/code&gt; にヘッダを &lt;code&gt;application/json&lt;/code&gt; 使用、ならびに変換JSONに指定された配列を &lt;code&gt;json_encode&lt;/code&gt; の PHP関数：</target>
        </trans-unit>
        <trans-unit id="e8a2a0e80c64fe0e8b39e37faabd55e3fda5ac19" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;kebab_case&lt;/code&gt; function converts the given string to &lt;code&gt;kebab-case&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;kebab_case&lt;/code&gt; 関数は、指定された文字列に変換し &lt;code&gt;kebab-case&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="702c03f570a12b0e835688ba1fa3e3da89c1ab26" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;keyBy&lt;/code&gt; method keys the collection by the given key. If multiple items have the same key, only the last one will appear in the new collection:</source>
          <target state="translated">&lt;code&gt;keyBy&lt;/code&gt; のメソッドキー指定したキーによる収集。複数のアイテムに同じキーがある場合、最後のアイテムのみが新しいコレクションに表示されます。</target>
        </trans-unit>
        <trans-unit id="9f2fb0619e765d1a6c2857ddcb5f848564216965" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;keys&lt;/code&gt; method allows you to provide more complex input sequences to a given element than normally allowed by the &lt;code&gt;type&lt;/code&gt; method. For example, you may hold modifier keys entering values. In this example, the &lt;code&gt;shift&lt;/code&gt; key will be held while &lt;code&gt;taylor&lt;/code&gt; is entered into the element matching the given selector. After &lt;code&gt;taylor&lt;/code&gt; is typed, &lt;code&gt;otwell&lt;/code&gt; will be typed without any modifier keys:</source>
          <target state="translated">&lt;code&gt;keys&lt;/code&gt; 方法は、通常で許可されているよりも、あなたが与えられた要素に、より複雑な入力配列を提供することを可能にする &lt;code&gt;type&lt;/code&gt; 方法。たとえば、値を入力する修飾キーを押したままにすることができます。この例では、特定のセレクターに一致する要素に &lt;code&gt;taylor&lt;/code&gt; が入力されている間、 &lt;code&gt;shift&lt;/code&gt; キーが押されます。 &lt;code&gt;taylor&lt;/code&gt; が入力された後、 &lt;code&gt;otwell&lt;/code&gt; は修飾キーなしで入力されます：</target>
        </trans-unit>
        <trans-unit id="b7a77a61d8f74872e01561bda617c55f90804945" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;keys&lt;/code&gt; method returns all of the collection's keys:</source>
          <target state="translated">&lt;code&gt;keys&lt;/code&gt; メソッドは、コレクションのすべてのキーを返します。</target>
        </trans-unit>
        <trans-unit id="f90858417b9bda497590888c39055cd1888cd5c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;last&lt;/code&gt; function returns the last element in the given array:</source>
          <target state="translated">&lt;code&gt;last&lt;/code&gt; 関数は、指定された配列の最後の要素を返します。</target>
        </trans-unit>
        <trans-unit id="5a8105f8db831eaa74390f673122ebb031fa3c39" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;last&lt;/code&gt; method returns the last element in the collection that passes a given truth test:</source>
          <target state="translated">&lt;code&gt;last&lt;/code&gt; 方法は、与えられた真実のテストに合格し、コレクション内の最後の要素を返します。</target>
        </trans-unit>
        <trans-unit id="ae978a251588e8a9a6307f3c0eb27e5d169dcc12" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lastModified&lt;/code&gt; method returns the UNIX timestamp of the last time the file was modified:</source>
          <target state="translated">&lt;code&gt;lastModified&lt;/code&gt; 方法は、ファイルが変更された前回のUNIXタイムスタンプを返します。</target>
        </trans-unit>
        <trans-unit id="5bc48fafd11045ca65ad279ff621677939b3e2bf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;latest&lt;/code&gt; / &lt;code&gt;oldest&lt;/code&gt; Methods</source>
          <target state="translated">&lt;code&gt;latest&lt;/code&gt; / &lt;code&gt;oldest&lt;/code&gt; メソッド</target>
        </trans-unit>
        <trans-unit id="96eb37f79400002bc20fb658233ab58556574c45" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;latest&lt;/code&gt; and &lt;code&gt;oldest&lt;/code&gt; methods allow you to easily order results by date. By default, result will be ordered by the &lt;code&gt;created_at&lt;/code&gt; column. Or, you may pass the column name that you wish to sort by:</source>
          <target state="translated">&lt;code&gt;latest&lt;/code&gt; と &lt;code&gt;oldest&lt;/code&gt; メソッドを使用すると、簡単に結果を日付で注文することができます。デフォルトでは、結果は &lt;code&gt;created_at&lt;/code&gt; 列で並べ替えられます。または、並べ替えに使用する列名を渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="c02b1ac2ad42cfdcf18769a0f290d58e6dac428a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;less&lt;/code&gt; method may be used to compile &lt;a href=&quot;http://lesscss.org/&quot;&gt;Less&lt;/a&gt; into CSS. Let's compile our primary &lt;code&gt;app.less&lt;/code&gt; file to &lt;code&gt;public/css/app.css&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;less&lt;/code&gt; の方法は、コンパイルするために使用することができる&lt;a href=&quot;http://lesscss.org/&quot;&gt;未満を&lt;/a&gt; CSSに。主要な &lt;code&gt;app.less&lt;/code&gt; ファイルを &lt;code&gt;public/css/app.css&lt;/code&gt; にコンパイルしてみましょう。</target>
        </trans-unit>
        <trans-unit id="a763177832951a26649b378ae420a21e55abb80a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;link&lt;/code&gt; command may also be used to serve your Laravel sites. This command is useful if you want to serve a single site in a directory and not the entire directory.</source>
          <target state="translated">&lt;code&gt;link&lt;/code&gt; コマンドはまたあなたのLaravelサイトを提供するために使用することができます。このコマンドは、ディレクトリ全体ではなく、ディレクトリ内の単一のサイトを提供する場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="32cdddec6a2d03838aa86cfbd4325219cea838cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;links&lt;/code&gt; method will render the links to the rest of the pages in the result set. Each of these links will already contain the proper &lt;code&gt;page&lt;/code&gt; query string variable. Remember, the HTML generated by the &lt;code&gt;links&lt;/code&gt; method is compatible with the &lt;a href=&quot;https://getbootstrap.com&quot;&gt;Bootstrap CSS framework&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;links&lt;/code&gt; 方法は、結果セット内のページの残りの部分へのリンクをレンダリングします。これらの各リンクには、適切な &lt;code&gt;page&lt;/code&gt; クエリ文字列変数が既に含まれています。 &lt;code&gt;links&lt;/code&gt; メソッドによって生成されたHTML は、&lt;a href=&quot;https://getbootstrap.com&quot;&gt;Bootstrap CSSフレームワーク&lt;/a&gt;と互換性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="316d29a62775baa1118f80c88eb8e401578feb9a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;logger&lt;/code&gt; function can be used to write a &lt;code&gt;debug&lt;/code&gt; level message to the &lt;a href=&quot;errors#logging&quot;&gt;log&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;logger&lt;/code&gt; 機能を書き込むために使用することができ &lt;code&gt;debug&lt;/code&gt; にレベルのメッセージを&lt;a href=&quot;errors#logging&quot;&gt;ログ&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="d5f928104a09bfa3dcd85406f0e9a9a46d8fcb6e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;macro&lt;/code&gt; function accepts a name as its first argument, and a Closure as its second. The macro's Closure will be executed when calling the macro name from a &lt;code&gt;ResponseFactory&lt;/code&gt; implementation or the &lt;code&gt;response&lt;/code&gt; helper:</source>
          <target state="translated">&lt;code&gt;macro&lt;/code&gt; 機能は、最初の引数として名前、およびその第二のようなクロージャを受け付けます。マクロのClosureは、 &lt;code&gt;ResponseFactory&lt;/code&gt; 実装または &lt;code&gt;response&lt;/code&gt; ヘルパーからマクロ名を呼び出すときに実行されます。</target>
        </trans-unit>
        <trans-unit id="0bc973394687a0e27b6895e6d182d906b20969de" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;make:auth&lt;/code&gt; command will also create a &lt;code&gt;resources/views/layouts&lt;/code&gt; directory containing a base layout for your application. All of these views use the Bootstrap CSS framework, but you are free to customize them however you wish.</source>
          <target state="translated">&lt;code&gt;make:auth&lt;/code&gt; コマンドを実行すると、作成され &lt;code&gt;resources/views/layouts&lt;/code&gt; アプリケーションのための基本レイアウトを含むディレクトリを。これらのビューはすべてBootstrap CSSフレームワークを使用しますが、自由にカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="abf61a4ef7801bd3d04040311c01b50200515b72" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;make:policy&lt;/code&gt; command will generate an empty policy class. If you would like to generate a class with the basic &quot;CRUD&quot; policy methods already included in the class, you may specify a &lt;code&gt;--model&lt;/code&gt; when executing the command:</source>
          <target state="translated">&lt;code&gt;make:policy&lt;/code&gt; コマンドは、空のポリシークラスを生成します。クラスにすでに含まれている基本的な「CRUD」ポリシーメソッドを使用してクラスを生成する場合は、コマンドの実行時に &lt;code&gt;--model&lt;/code&gt; を指定できます。</target>
        </trans-unit>
        <trans-unit id="e71b4aa3cc47cd822534deb36bc06c5272a5a20c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;make&lt;/code&gt; Method</source>
          <target state="translated">&lt;code&gt;make&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="6e2e40b07b14ddb9476cb0dd774fa8cd3969f739" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;makeDirectory&lt;/code&gt; method will create the given directory, including any needed sub-directories:</source>
          <target state="translated">&lt;code&gt;makeDirectory&lt;/code&gt; 方法は、必要なサブディレクトリを含め、指定されたディレクトリを作成します。</target>
        </trans-unit>
        <trans-unit id="e68f73389839c2188b470c3b44d1edcad10b8420" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;map&lt;/code&gt; method iterates through the collection and passes each value to the given callback. The callback is free to modify the item and return it, thus forming a new collection of modified items:</source>
          <target state="translated">&lt;code&gt;map&lt;/code&gt; メソッドは、コレクションを反復処理し、与えられたコールバックに各値を渡します。コールバックはアイテムを自由に変更して返すことができるため、変更されたアイテムの新しいコレクションを形成します。</target>
        </trans-unit>
        <trans-unit id="759002832c8a0c5977d00a8f2a4b1551a93c4e45" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mapInto()&lt;/code&gt; method iterates over the collection, creating a new instance of the given class by passing the value into the constructor:</source>
          <target state="translated">&lt;code&gt;mapInto()&lt;/code&gt; メソッドは、コンストラクタに値を渡すことによって、与えられたクラスの新しいインスタンスを作成し、コレクションにわたって反復します。</target>
        </trans-unit>
        <trans-unit id="245482d5208f4b52be1cc8f9519aa19cab627cf5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mapSpread&lt;/code&gt; method iterates over the collection's items, passing each nested item value into the given callback. The callback is free to modify the item and return it, thus forming a new collection of modified items:</source>
          <target state="translated">&lt;code&gt;mapSpread&lt;/code&gt; のメソッドは、指定されたコールバックの中にネストされた各項目の値を渡して、コレクションの項目の上に反復します。コールバックはアイテムを自由に変更して返すことができるため、変更されたアイテムの新しいコレクションを形成します。</target>
        </trans-unit>
        <trans-unit id="c8d9886e090cbd8ed47061a57e74afc1411ab58d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mapToGroups&lt;/code&gt; method groups the collection's items by the given callback. The callback should return an associative array containing a single key / value pair, thus forming a new collection of grouped values:</source>
          <target state="translated">&lt;code&gt;mapToGroups&lt;/code&gt; は、与えられたコールバックメソッドグループコレクションのアイテムを。コールバックは、単一のキーと値のペアを含む連想配列を返す必要があるため、グループ化された値の新しいコレクションを形成します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
