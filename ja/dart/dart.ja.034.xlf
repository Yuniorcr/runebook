<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="dart">
    <body>
      <group id="dart">
        <trans-unit id="108b0e482cbfba7f888862387a0b4adce08d8aa6" translate="yes" xml:space="preserve">
          <source>IdbFactory.deleteDatabase</source>
          <target state="translated">IdbFactory.deleteDatabase</target>
        </trans-unit>
        <trans-unit id="a3ef27eb7c788fb9cdac706b29338da048a138bd" translate="yes" xml:space="preserve">
          <source>IdbFactory.open</source>
          <target state="translated">IdbFactory.open</target>
        </trans-unit>
        <trans-unit id="c73a676bd2c8b825d94da661528b9983e19cc2e5" translate="yes" xml:space="preserve">
          <source>IdbFactory.supported</source>
          <target state="translated">IdbFactory.supported</target>
        </trans-unit>
        <trans-unit id="5015ac1ec6c1678a62ff18c4010c14262e932163" translate="yes" xml:space="preserve">
          <source>IdbFactory.supportsDatabaseNames</source>
          <target state="translated">IdbFactory.supportsDatabaseNames</target>
        </trans-unit>
        <trans-unit id="295fd4cb60a2061652f906b3f43797e930dd78e2" translate="yes" xml:space="preserve">
          <source>Identical to &lt;code&gt;FileStat.stat(this.path)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FileStat.stat(this.path)&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="e78411f4891460acef2c7fc57963441f878323c2" translate="yes" xml:space="preserve">
          <source>Identical to &lt;code&gt;FileStat.statSync(this.path)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FileStat.statSync(this.path)&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="51dc4bdc04ce7e2b0b2cf581bb6e983ccb6cf972" translate="yes" xml:space="preserve">
          <source>IdleDeadline</source>
          <target state="translated">IdleDeadline</target>
        </trans-unit>
        <trans-unit id="ac48b5b124fecfe7fe02a21a51b8015af695f868" translate="yes" xml:space="preserve">
          <source>IdleDeadline class</source>
          <target state="translated">IdleDeadline クラス</target>
        </trans-unit>
        <trans-unit id="80366f1bf93e0d981287a5b5d1b4ec3e0ca75465" translate="yes" xml:space="preserve">
          <source>IdleDeadline.didTimeout</source>
          <target state="translated">IdleDeadline.didTimeout</target>
        </trans-unit>
        <trans-unit id="9c448c4ba59840c1de022c1032d13d51d3f30ff0" translate="yes" xml:space="preserve">
          <source>IdleDeadline.timeRemaining</source>
          <target state="translated">IdleDeadline.timeRemaining</target>
        </trans-unit>
        <trans-unit id="6de3d1d8064c939894cce256381897f45daf5be8" translate="yes" xml:space="preserve">
          <source>IdleRequestCallback typedef</source>
          <target state="translated">IdleRequestCallback typedef</target>
        </trans-unit>
        <trans-unit id="78eeecc29cd630cd793a69fbe858cf06f673f4e0" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../../dart-core/object/operator_equals&quot;&gt;operator ==&lt;/a&gt; is overridden to use the object state instead, the hash code must also be changed to represent that state.</source>
          <target state="translated">場合&lt;a href=&quot;../../dart-core/object/operator_equals&quot;&gt;、オペレータは==&lt;/a&gt;の代わりにオブジェクトの状態を使用することがオーバーライドされ、ハッシュコードは、その状態を表すように変更されなければなりません。</target>
        </trans-unit>
        <trans-unit id="2e25971ff86a282be249b2b45b95466a7aa3677e" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../filesystementity/path&quot;&gt;path&lt;/a&gt; is a relative path, it will be interpreted relative to the current working directory (see &lt;a href=&quot;../directory/current&quot;&gt;Directory.current&lt;/a&gt;), when used.</source>
          <target state="translated">&lt;a href=&quot;../filesystementity/path&quot;&gt;path&lt;/a&gt;が相対パスの場合、使用すると、現在の作業ディレクトリ（&lt;a href=&quot;../directory/current&quot;&gt;Directory.currentを&lt;/a&gt;参照）を基準にして解釈されます。</target>
        </trans-unit>
        <trans-unit id="41876751f2d5f7f6265b79e94ba455050eaee23a" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../filesystementity/path&quot;&gt;path&lt;/a&gt; is an absolute path, it will be immune to changes to the current working directory.</source>
          <target state="translated">&lt;a href=&quot;../filesystementity/path&quot;&gt;path&lt;/a&gt;が絶対パスの場合、現在の作業ディレクトリへの変更の影響を受けません。</target>
        </trans-unit>
        <trans-unit id="8e22ca27df8f42239d98daa7b9d7543fb29e815f" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../object/operator_equals&quot;&gt;operator ==&lt;/a&gt; is overridden to use the object state instead, the hash code must also be changed to represent that state.</source>
          <target state="translated">場合&lt;a href=&quot;../object/operator_equals&quot;&gt;、オペレータは==&lt;/a&gt;の代わりにオブジェクトの状態を使用することがオーバーライドされ、ハッシュコードは、その状態を表すように変更されなければなりません。</target>
        </trans-unit>
        <trans-unit id="4a0093b7cbafc8d5fb36b93e69fc462acb4bcbee" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../stream-class&quot;&gt;this&lt;/a&gt; is empty or has more than one element, the returned future completes with an error.</source>
          <target state="translated">&lt;a href=&quot;../stream-class&quot;&gt;これ&lt;/a&gt;が空の場合、または複数の要素がある場合、返されたフューチャーはエラーで完了します。</target>
        </trans-unit>
        <trans-unit id="e26aa6cf661c0d13c6af4b834261452766fd6db2" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;cancel&quot;&gt;cancel&lt;/a&gt; is called, the &lt;code&gt;Future&lt;/code&gt; completes with a &lt;a href=&quot;../socketexception-class&quot;&gt;SocketException&lt;/a&gt; error whose message indicates that the connection attempt was cancelled.</source>
          <target state="translated">場合は&lt;a href=&quot;cancel&quot;&gt;、キャンセル&lt;/a&gt;と呼ばれ、 &lt;code&gt;Future&lt;/code&gt; で完了&lt;a href=&quot;../socketexception-class&quot;&gt;のSocketExceptionの&lt;/a&gt;メッセージエラーは、接続の試行がキャンセルされたことを示しています。</target>
        </trans-unit>
        <trans-unit id="66e24a8eb7d83ec3183e11e87b3dcfbb750304bf" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;file/path&quot;&gt;path&lt;/a&gt; is a symbolic link, rather than a file, then the methods of File operate on the ultimate target of the link, except for &lt;a href=&quot;filesystementity/delete&quot;&gt;delete&lt;/a&gt; and &lt;a href=&quot;filesystementity/deletesync&quot;&gt;deleteSync&lt;/a&gt;, which operate on the link.</source>
          <target state="translated">場合は&lt;a href=&quot;file/path&quot;&gt;、パスが&lt;/a&gt;シンボリックリンクではなく、ファイルは、[ファイルの方法はを除き、リンクの究極の目標で動作し&lt;a href=&quot;filesystementity/delete&quot;&gt;、削除&lt;/a&gt;し、&lt;a href=&quot;filesystementity/deletesync&quot;&gt;deleteSync&lt;/a&gt;リンク上で動作します、。</target>
        </trans-unit>
        <trans-unit id="a7ffdcef87e51d743869367938370dd77d105e6b" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;movenext&quot;&gt;moveNext&lt;/a&gt; has been called when the iterator is canceled, its returned future will complete with &lt;code&gt;false&lt;/code&gt; as value, as will all further calls to &lt;a href=&quot;movenext&quot;&gt;moveNext&lt;/a&gt;.</source>
          <target state="translated">場合&lt;a href=&quot;movenext&quot;&gt;MoveNextメソッドは、&lt;/a&gt;反復子がキャンセルされたときに呼ばれてきた、その返された未来はで完了します &lt;code&gt;false&lt;/code&gt; のすべての更なる通話れるように、値として&lt;a href=&quot;movenext&quot;&gt;のMoveNext&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7e4e2a642c087b46bd97fc3fbe65a6898c7edb28" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;operator_equals&quot;&gt;operator ==&lt;/a&gt; is overridden to use the object state instead, the hash code must also be changed to represent that state.</source>
          <target state="translated">場合&lt;a href=&quot;operator_equals&quot;&gt;、オペレータは==&lt;/a&gt;の代わりにオブジェクトの状態を使用することがオーバーライドされ、ハッシュコードは、その状態を表すように変更されなければなりません。</target>
        </trans-unit>
        <trans-unit id="6359ed80bbe1d6df9f508a9067cfcc8d8ec7a80e" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;pausecapability&quot;&gt;pauseCapability&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt;, or it's not the pause capability of the isolate identified by &lt;a href=&quot;controlport&quot;&gt;controlPort&lt;/a&gt;, the pause request is ignored by the receiving isolate.</source>
          <target state="translated">&lt;a href=&quot;pausecapability&quot;&gt;pauseCapability&lt;/a&gt;が &lt;code&gt;null&lt;/code&gt; の場合、または&lt;a href=&quot;controlport&quot;&gt;controlPort&lt;/a&gt;によって識別されたアイソレートの一時停止機能ではない場合、一時停止リクエストは受信側のアイソレートによって無視されます。</target>
        </trans-unit>
        <trans-unit id="23a5465887ffcb0081dc35294784accff6ebe3d8" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;serverheader&quot;&gt;serverHeader&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt;, no &lt;code&gt;Server&lt;/code&gt; header will be added to each response.</source>
          <target state="translated">&lt;a href=&quot;serverheader&quot;&gt;serverHeader&lt;/a&gt;が &lt;code&gt;null&lt;/code&gt; の場合、各応答に &lt;code&gt;Server&lt;/code&gt; ヘッダーは追加されません。</target>
        </trans-unit>
        <trans-unit id="d047b0342610c5da11287d2ea557760a5adecdc6" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;source&quot;&gt;source&lt;/a&gt; is present and is a string, the description will contain (at least a part of) the source. If &lt;a href=&quot;offset&quot;&gt;offset&lt;/a&gt; is also provided, the part of the source included will contain that offset, and the offset will be marked.</source>
          <target state="translated">場合&lt;a href=&quot;source&quot;&gt;源が&lt;/a&gt;存在し、文字列であり、説明はソース（の少なくとも一部）を含有するであろう。場合は&lt;a href=&quot;offset&quot;&gt;オフセットを&lt;/a&gt;も提供され、付属のソースの一部が相殺され、オフセットがマークされることが含まれています。</target>
        </trans-unit>
        <trans-unit id="380d28492396ae4d882387cd7f476f4a00afef48" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;streamconsumer/addstream&quot;&gt;addStream&lt;/a&gt; is called after any of the &lt;a href=&quot;eventsink-class&quot;&gt;EventSink&lt;/a&gt; methods, it'll be delayed until the underlying system has consumed the data added by the &lt;a href=&quot;eventsink-class&quot;&gt;EventSink&lt;/a&gt; methods.</source>
          <target state="translated">&lt;a href=&quot;eventsink-class&quot;&gt;EventSink&lt;/a&gt;メソッドのいずれかの後に&lt;a href=&quot;streamconsumer/addstream&quot;&gt;addStream&lt;/a&gt;が呼び出された場合、基になるシステムが&lt;a href=&quot;eventsink-class&quot;&gt;EventSink&lt;/a&gt;メソッドによって追加されたデータを消費するまで遅延されます。</target>
        </trans-unit>
        <trans-unit id="439852aa428a17eb1c51e6191c7bcb0a4ea251a0" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;terminatecapability&quot;&gt;terminateCapability&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt;, or it's not the terminate capability of the isolate identified by &lt;a href=&quot;controlport&quot;&gt;controlPort&lt;/a&gt;, the kill request is ignored by the receiving isolate.</source>
          <target state="translated">&lt;a href=&quot;terminatecapability&quot;&gt;terminateCapability&lt;/a&gt;が &lt;code&gt;null&lt;/code&gt; の場合、または&lt;a href=&quot;controlport&quot;&gt;controlPort&lt;/a&gt;で識別された分離プログラムの終了機能ではない場合、kill要求は受信側の分離プログラムによって無視されます。</target>
        </trans-unit>
        <trans-unit id="d9212acb08b7f93a6faae4ab0cd179eba6164741" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;timeout&quot;&gt;timeout&lt;/a&gt; is set to 0, then the request will not time out.</source>
          <target state="translated">&lt;a href=&quot;timeout&quot;&gt;タイムアウト&lt;/a&gt;が0に設定されている場合、リクエストはタイムアウトしません。</target>
        </trans-unit>
        <trans-unit id="ec2580729285e7b3bee47acf3c9f75620dd98fa3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Access-Control-Expose-Headers&lt;/code&gt; has not been set to true, only a subset of all the response headers will be returned when calling &lt;code&gt;getAllRequestHeaders&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;Access-Control-Expose-Headers&lt;/code&gt; trueに設定されていない呼び出すときに、すべてのレスポンスヘッダのサブセットのみが返されます &lt;code&gt;getAllRequestHeaders&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="f481dba2db8526a14ae4f75bb5e6b36ff8178ada" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;a&lt;/code&gt; is equal to zero, the vector (&lt;code&gt;b&lt;/code&gt;,&lt;code&gt;a&lt;/code&gt;) is considered parallel to the x-axis, even if &lt;code&gt;b&lt;/code&gt; is also equal to zero. The sign of &lt;code&gt;b&lt;/code&gt; determines the direction of the vector along the x-axis.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; がゼロに等しい場合、ベクトル（ &lt;code&gt;b&lt;/code&gt; 、 &lt;code&gt;a&lt;/code&gt; ）は、 &lt;code&gt;b&lt;/code&gt; もゼロに等しい場合でも、x軸に平行と見なされます。 &lt;code&gt;b&lt;/code&gt; の符号は、x軸に沿ったベクトルの方向を決定します。</target>
        </trans-unit>
        <trans-unit id="b23b777d81c6705337af4da0d52f180f45e04809" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;action&lt;/code&gt; throws, the synchronous exception is not caught by the zone's error handler. Use &lt;a href=&quot;runguarded&quot;&gt;runGuarded&lt;/a&gt; to achieve that.</source>
          <target state="translated">場合は &lt;code&gt;action&lt;/code&gt; スロー、同期例外がゾーンのエラーハンドラによってキャッチされていません。&lt;a href=&quot;runguarded&quot;&gt;それ&lt;/a&gt;を実現するには、runGuardedを使用します。</target>
        </trans-unit>
        <trans-unit id="9d6cd0a5664a490962236d8352afd440c9d3c5af" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;allowInvalid&lt;/code&gt; is not provided, it defaults to the value used to create this &lt;a href=&quot;../asciicodec-class&quot;&gt;AsciiCodec&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;code&gt;allowInvalid&lt;/code&gt; が提供されていない、値がデフォルトになりますが、この作成に使用&lt;a href=&quot;../asciicodec-class&quot;&gt;AsciiCodecを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dc8ef1d755745380391a0eae3380fe80a43dbeb7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;allowInvalid&lt;/code&gt; is not provided, it defaults to the value used to create this &lt;a href=&quot;../latin1codec-class&quot;&gt;Latin1Codec&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;code&gt;allowInvalid&lt;/code&gt; が提供されていない、値がデフォルトになりますが、この作成に使用&lt;a href=&quot;../latin1codec-class&quot;&gt;Latin1Codecを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ac10a837d46e8c07f5efd77d0087843f51c35f72" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;allowInvalid&lt;/code&gt; is true, the &lt;a href=&quot;decode&quot;&gt;decode&lt;/a&gt; method and the converter returned by &lt;a href=&quot;decoder&quot;&gt;decoder&lt;/a&gt; will default to allowing invalid values. If allowing invalid values, the values will be decoded into the Unicode Replacement character (U+FFFD). If not, an exception will be thrown. Calls to the &lt;a href=&quot;decode&quot;&gt;decode&lt;/a&gt; method can choose to override this default.</source>
          <target state="translated">場合 &lt;code&gt;allowInvalid&lt;/code&gt; が真である、&lt;a href=&quot;decode&quot;&gt;復号&lt;/a&gt;方法とによって返さコンバータ&lt;a href=&quot;decoder&quot;&gt;デコーダは&lt;/a&gt;無効な値を可能にデフォルト設定されます。無効な値を許可する場合、値はUnicode置換文字（U + FFFD）にデコードされます。そうでない場合は、例外がスローされます。&lt;a href=&quot;decode&quot;&gt;decode&lt;/a&gt;メソッドの呼び出しは、このデフォルトをオーバーライドすることを選択できます。</target>
        </trans-unit>
        <trans-unit id="9889a452a5df6e13885d4ce91199a108a984007c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;allowInvalid&lt;/code&gt; is true, the &lt;a href=&quot;decode&quot;&gt;decode&lt;/a&gt; method and the converter returned by &lt;a href=&quot;decoder&quot;&gt;decoder&lt;/a&gt; will default to allowing invalid values. Invalid values are decoded into the Unicode Replacement character (U+FFFD). Calls to the &lt;a href=&quot;decode&quot;&gt;decode&lt;/a&gt; method can override this default.</source>
          <target state="translated">場合 &lt;code&gt;allowInvalid&lt;/code&gt; が真である、&lt;a href=&quot;decode&quot;&gt;復号&lt;/a&gt;方法とによって返さコンバータ&lt;a href=&quot;decoder&quot;&gt;デコーダは&lt;/a&gt;無効な値を可能にデフォルト設定されます。無効な値はUnicode置換文字（U + FFFD）にデコードされます。&lt;a href=&quot;decode&quot;&gt;decode&lt;/a&gt;メソッドを呼び出すと、このデフォルトをオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="9748adc69fb85a5febf58f580b4887a904d75bf7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;allowMalformed&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; the decoder replaces invalid (or unterminated) character sequences with the Unicode Replacement character &lt;code&gt;U+FFFD&lt;/code&gt; (�). Otherwise it throws a &lt;a href=&quot;../../dart-core/formatexception-class&quot;&gt;FormatException&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;code&gt;allowMalformed&lt;/code&gt; がある &lt;code&gt;true&lt;/code&gt; デコーダは、Unicode置換文字に無効（または終端されていない）文字列置き換え &lt;code&gt;U+FFFD&lt;/code&gt; を（）。それ以外の場合は、&lt;a href=&quot;../../dart-core/formatexception-class&quot;&gt;FormatExceptionを&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="470ce428179db4c65153e00f5495fbeb99af4de5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;allowMalformed&lt;/code&gt; is not given, it defaults to the &lt;code&gt;allowMalformed&lt;/code&gt; that was used to instantiate &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;allowMalformed&lt;/code&gt; がに与えられていない、それがデフォルト &lt;code&gt;allowMalformed&lt;/code&gt; インスタンス化するために使用された &lt;code&gt;this&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f66bd2d8b2b562568f25efd7fb146a9c59ea696d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;b&lt;/code&gt; is positive, this is the same as &lt;code&gt;atan(b/a)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;b&lt;/code&gt; が正の場合、これは &lt;code&gt;atan(b/a)&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="1b66f8c8b18b30d93dec3dc72ab613ce2eb435fc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;bytes&lt;/code&gt; contains values that are not in the range 0 .. 127, the decoder will eventually throw a &lt;a href=&quot;../../dart-core/formatexception-class&quot;&gt;FormatException&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;bytes&lt;/code&gt; に0〜127の範囲外の値が含まれている場合、デコーダーは最終的に&lt;a href=&quot;../../dart-core/formatexception-class&quot;&gt;FormatExceptionを&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="45c3b60208243b408c74a2a46efbc69ae1039a27" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;bytes&lt;/code&gt; contains values that are not in the range 0 .. 255, the decoder will eventually throw a &lt;a href=&quot;../../dart-core/formatexception-class&quot;&gt;FormatException&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;bytes&lt;/code&gt; に0〜255の範囲外の値が含まれている場合、デコーダーは最終的に&lt;a href=&quot;../../dart-core/formatexception-class&quot;&gt;FormatExceptionを&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="978e61c2d091440145da7b1de09c70a2f22e1776" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;callback&lt;/code&gt; runs successfully, then &lt;code&gt;successCallback&lt;/code&gt; is called. Otherwise, &lt;code&gt;errorCallback&lt;/code&gt; is called.</source>
          <target state="translated">場合は &lt;code&gt;callback&lt;/code&gt; 正常に実行され、その後、 &lt;code&gt;successCallback&lt;/code&gt; が呼び出されました。それ以外の場合は、 &lt;code&gt;errorCallback&lt;/code&gt; が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="c92730f3a077e6a38241892fee911aa19773ef17" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;cancelOnError&lt;/code&gt; is true, only the first error on &lt;code&gt;source&lt;/code&gt; is forwarded to the controller's stream, and the &lt;code&gt;addStream&lt;/code&gt; ends after this. If &lt;code&gt;cancelOnError&lt;/code&gt; is false, all errors are forwarded and only a done event will end the &lt;code&gt;addStream&lt;/code&gt;. If &lt;code&gt;cancelOnError&lt;/code&gt; is omitted, it defaults to false.</source>
          <target state="translated">場合 &lt;code&gt;cancelOnError&lt;/code&gt; が真である、上の唯一の最初のエラー &lt;code&gt;source&lt;/code&gt; 、コントローラのストリームに転送され、 &lt;code&gt;addStream&lt;/code&gt; は、この後に終了します。 &lt;code&gt;cancelOnError&lt;/code&gt; がfalseの場合、すべてのエラーが転送され、doneイベントだけが &lt;code&gt;addStream&lt;/code&gt; を終了します。場合 &lt;code&gt;cancelOnError&lt;/code&gt; は、デフォルトはfalse省略されています。</target>
        </trans-unit>
        <trans-unit id="a0b1d4f899a8e7039bb9f836908ae5ae81b3c383" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;cancelOnError&lt;/code&gt; is true, the subscription is automatically canceled when the first error event is delivered. The default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;cancelOnError&lt;/code&gt; が真である最初のエラーイベントが配信されると、サブスクリプションは自動的にキャンセルされます。デフォルトは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f5f28e591b7c1a846fa99b5d9ea71d81514a0c68" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;caseSensitive&lt;/code&gt; is disabled, then case is ignored.</source>
          <target state="translated">場合は &lt;code&gt;caseSensitive&lt;/code&gt; 無効になっている、そして場合は無視されます。</target>
        </trans-unit>
        <trans-unit id="c3710ed7132322a026c7d184defb5ae53d88d3ec" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;compression&lt;/code&gt; is provided, the &lt;a href=&quot;../websocket-class&quot;&gt;WebSocket&lt;/a&gt; created will be configured to negotiate with the specified &lt;a href=&quot;../compressionoptions-class&quot;&gt;CompressionOptions&lt;/a&gt;. If none is specified then the &lt;a href=&quot;../websocket-class&quot;&gt;WebSocket&lt;/a&gt; will be created with the default &lt;a href=&quot;../compressionoptions-class&quot;&gt;CompressionOptions&lt;/a&gt;.</source>
          <target state="translated">場合は &lt;code&gt;compression&lt;/code&gt; 提供され、&lt;a href=&quot;../websocket-class&quot;&gt;WebSocketを&lt;/a&gt;作成し、指定と交渉するように構成されます&lt;a href=&quot;../compressionoptions-class&quot;&gt;CompressionOptions&lt;/a&gt;。何も指定されていない場合、&lt;a href=&quot;../websocket-class&quot;&gt;WebSocket&lt;/a&gt;はデフォルトの&lt;a href=&quot;../compressionoptions-class&quot;&gt;CompressionOptionsで&lt;/a&gt;作成されます。</target>
        </trans-unit>
        <trans-unit id="7468fb0a19816027df79608be5052f42687118fb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;computation&lt;/code&gt; is omitted the event values will all be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;computation&lt;/code&gt; 省略されているイベントの値がすべてになります &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1cdcf5ca7ad18339aad13a7d9f1d84e54d4cf192" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;computation&lt;/code&gt; is omitted, it will be treated as if &lt;code&gt;computation&lt;/code&gt; was &lt;code&gt;() =&amp;gt; null&lt;/code&gt;, and the future will eventually complete with the &lt;code&gt;null&lt;/code&gt; value.</source>
          <target state="translated">場合 &lt;code&gt;computation&lt;/code&gt; 省略され、かのように扱われる &lt;code&gt;computation&lt;/code&gt; あった &lt;code&gt;() =&amp;gt; null&lt;/code&gt; 、そして将来は、最終的で完了します &lt;code&gt;null&lt;/code&gt; 値。</target>
        </trans-unit>
        <trans-unit id="c11a462ba6ded2db7f13516ddd5833d65b8ff695" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;computation&lt;/code&gt; returns a future, the future returned by this constructor will complete with the value or error of that future.</source>
          <target state="translated">&lt;code&gt;computation&lt;/code&gt; がフューチャーを返す場合、このコンストラクターによって返されるフューチャーは、そのフューチャーの値またはエラーで完了します。</target>
        </trans-unit>
        <trans-unit id="3a9070cddf89e7c25306a88447a349404b1767f7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;constructorName&lt;/code&gt; was created from the empty string, then this method will execute the instance creation expression &lt;em&gt;new c(a1, ..., an, k1: v1, ..., km: vm)&lt;/em&gt; in a scope that has access to the private members of &lt;em&gt;c&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;constructorName&lt;/code&gt; が空の文字列から作成された場合、このメソッドはプライベートにアクセスできるスコープでインスタンス作成式&lt;em&gt;new c（a1、...、an、k1：v1、.​​..、km：vm）&lt;/em&gt;を実行します&lt;em&gt;cの&lt;/em&gt;メンバー。</target>
        </trans-unit>
        <trans-unit id="a9f5b2f84d6f552dd7e5dbe77310006820c7441c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;copy&lt;/code&gt; is true, the data is always copied when added to the list. If it &lt;code&gt;copy&lt;/code&gt; is false, the data is only copied if needed. That means that if the lists are changed after added to the &lt;a href=&quot;../bytesbuilder-class&quot;&gt;BytesBuilder&lt;/a&gt;, it may effect the output. Default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;copy&lt;/code&gt; 真であるリストに追加する場合、データは常にコピーされます。それは場合は &lt;code&gt;copy&lt;/code&gt; 偽で必要に応じて、データのみがコピーされます。つまり、リストが&lt;a href=&quot;../bytesbuilder-class&quot;&gt;BytesBuilder&lt;/a&gt;に追加された後で変更された場合、出力に影響する可能性があります。デフォルトは &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d6956700d47f8b76e81cb0d6acb699ef60cf3a68" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;data&lt;/code&gt; is supplied, the key/value pairs are URI encoded with &lt;a href=&quot;../../dart-core/uri/encodequerycomponent&quot;&gt;Uri.encodeQueryComponent&lt;/a&gt; and converted into an HTTP query string.</source>
          <target state="translated">場合 &lt;code&gt;data&lt;/code&gt; 供給され、キー/値のペアは、URIを用いて符号化され&lt;a href=&quot;../../dart-core/uri/encodequerycomponent&quot;&gt;Uri.encodeQueryComponent&lt;/a&gt;とHTTPクエリ文字列に変換されます。</target>
        </trans-unit>
        <trans-unit id="33f4b5e5194273b34c6605446d555bb9535891d2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;debugName&lt;/code&gt; is provided, the spawned &lt;a href=&quot;../isolate-class&quot;&gt;Isolate&lt;/a&gt; will be identifiable by this name in debuggers and logging.</source>
          <target state="translated">場合 &lt;code&gt;debugName&lt;/code&gt; が提供され、生成された&lt;a href=&quot;../isolate-class&quot;&gt;アイソレートは、&lt;/a&gt;デバッガや伐採で、この名前で識別可能になります。</target>
        </trans-unit>
        <trans-unit id="894883372fea3e6683227f3723dc536fe7312334" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;deep&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, then all of this node's children and descendents are copied as well. If &lt;code&gt;deep&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, then only this node is copied.</source>
          <target state="translated">&lt;code&gt;deep&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; の場合、このノードのすべての子と子孫もコピーされます。 &lt;code&gt;deep&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; の場合、このノードのみがコピーされます。</target>
        </trans-unit>
        <trans-unit id="b0d11eb323d7b419978ab0241e06f012efa880e9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;dotAll&lt;/code&gt; is enabled, then the &lt;code&gt;.&lt;/code&gt; pattern will match &lt;em&gt;all&lt;/em&gt; characters, including line terminators.</source>
          <target state="translated">&lt;code&gt;dotAll&lt;/code&gt; が有効な場合、 &lt;code&gt;.&lt;/code&gt; パターンは、行末記号を含む&lt;em&gt;すべての&lt;/em&gt;文字に一致&lt;em&gt;し&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="05a9d8657aac903c67e4a67e41a67c831d8f71fd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;eagerError&lt;/code&gt; is true, the returned future completes with an error immediately on the first error from one of the futures. Otherwise all futures must complete before the returned future is completed (still with the first error; the remaining errors are silently dropped).</source>
          <target state="translated">場合 &lt;code&gt;eagerError&lt;/code&gt; が trueの場合、返された未来は、先物の1からの最初のエラーですぐにエラーで完了します。それ以外の場合は、返されたフューチャーが完了する前にすべてのフューチャーが完了する必要があります（まだ最初のエラーが残り、残りのエラーは通知なしで削除されます）。</target>
        </trans-unit>
        <trans-unit id="34f5409c52277b34d1c2fe6dd7f3a2cd37c6c452" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;encoding&lt;/code&gt; is not provided and &lt;code&gt;parameters&lt;/code&gt; has a &lt;code&gt;charset&lt;/code&gt; entry, that name is looked up using &lt;a href=&quot;../../dart-convert/encoding/getbyname&quot;&gt;Encoding.getByName&lt;/a&gt;, and if the lookup returns an encoding, that encoding is used to convert &lt;code&gt;content&lt;/code&gt; to bytes. If providing both an &lt;code&gt;encoding&lt;/code&gt; and a charset in &lt;code&gt;parameters&lt;/code&gt;, they should agree, otherwise decoding won't be able to use the charset parameter to determine the encoding.</source>
          <target state="translated">場合 &lt;code&gt;encoding&lt;/code&gt; 設けられていない &lt;code&gt;parameters&lt;/code&gt; 持つ &lt;code&gt;charset&lt;/code&gt; エントリを、その名前を使用して検索され&lt;a href=&quot;../../dart-convert/encoding/getbyname&quot;&gt;Encoding.getByNameを&lt;/a&gt;、ルックアップは、符号化を返す場合、その符号化は、変換のために使用されている &lt;code&gt;content&lt;/code&gt; バイト。 &lt;code&gt;parameters&lt;/code&gt; で &lt;code&gt;encoding&lt;/code&gt; と文字セットの両方を提供する場合、それらは一致する必要があります。そうでない場合、デコードは文字セットパラメータを使用してエンコーディングを決定できません。</target>
        </trans-unit>
        <trans-unit id="e15ce444bf2dd93a408f0a3e155968865946d269" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;end&lt;/code&gt; is omitted, it defaults to the &lt;a href=&quot;../../dart-core/list/length&quot;&gt;length&lt;/a&gt; of this list.</source>
          <target state="translated">場合は &lt;code&gt;end&lt;/code&gt; に、デフォルトを省略された&lt;a href=&quot;../../dart-core/list/length&quot;&gt;長さ&lt;/a&gt;、このリストの。</target>
        </trans-unit>
        <trans-unit id="c89275f93458078348506cf3f45e0ed6b81d5d43" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;end&lt;/code&gt; is omitted, it defaults to the &lt;a href=&quot;length&quot;&gt;length&lt;/a&gt; of this list.</source>
          <target state="translated">場合は &lt;code&gt;end&lt;/code&gt; に、デフォルトを省略された&lt;a href=&quot;length&quot;&gt;長さ&lt;/a&gt;、このリストの。</target>
        </trans-unit>
        <trans-unit id="471a5e122da7d9238e32602e628f06a29710a1b9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;end&lt;/code&gt; is present, &lt;code&gt;end&lt;/code&gt; - &lt;code&gt;start&lt;/code&gt; bytes will be read into &lt;code&gt;buffer&lt;/code&gt;, otherwise up to &lt;code&gt;buffer.length&lt;/code&gt;. If &lt;code&gt;end&lt;/code&gt; == &lt;code&gt;start&lt;/code&gt;, no bytes are read. Returns the number of bytes read.</source>
          <target state="translated">&lt;code&gt;end&lt;/code&gt; が存在する場合、 &lt;code&gt;end&lt;/code&gt; - &lt;code&gt;start&lt;/code&gt; バイトが &lt;code&gt;buffer&lt;/code&gt; に読み込まれ、それ以外の場合は最大 &lt;code&gt;buffer.length&lt;/code&gt; が読み込まれます。 &lt;code&gt;end&lt;/code&gt; == &lt;code&gt;start&lt;/code&gt; の場合、バイトは読み取られません。読み込まれたバイト数を返します。</target>
        </trans-unit>
        <trans-unit id="739efc9fbcb8f8e4c6e4383f513db9059016925f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;end&lt;/code&gt; is present, only up to byte-index &lt;code&gt;end&lt;/code&gt; will be read. Otherwise, until end of file.</source>
          <target state="translated">&lt;code&gt;end&lt;/code&gt; が存在する場合、最大バイトインデックスの &lt;code&gt;end&lt;/code&gt; のみが読み取られます。それ以外の場合は、ファイルの終わりまで。</target>
        </trans-unit>
        <trans-unit id="b648b208ce9194da04adc50da1ebca9cc4168d9a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;equals&lt;/code&gt; is provided, it is used to compare the keys in the table with new keys. If &lt;code&gt;equals&lt;/code&gt; is omitted, the key's own &lt;a href=&quot;../../dart-core/object/operator_equals&quot;&gt;Object.==&lt;/a&gt; is used instead.</source>
          <target state="translated">&lt;code&gt;equals&lt;/code&gt; が指定されている場合は、テーブル内のキーと新しいキーを比較するために使用されます。 &lt;code&gt;equals&lt;/code&gt; を省略した場合は、代わりにキー自体の&lt;a href=&quot;../../dart-core/object/operator_equals&quot;&gt;Object。==&lt;/a&gt;が使用されます。</target>
        </trans-unit>
        <trans-unit id="30eca0fe6c9e0930cdf2eace33fc6703e1642c6d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;equals&lt;/code&gt; or &lt;code&gt;hashCode&lt;/code&gt; are omitted, the set uses the elements' intrinsic &lt;a href=&quot;../../dart-core/object/operator_equals&quot;&gt;Object.==&lt;/a&gt; and &lt;a href=&quot;../../dart-core/object/hashcode&quot;&gt;Object.hashCode&lt;/a&gt;, and &lt;code&gt;isValidKey&lt;/code&gt; is ignored since these operations are assumed to work on all objects.</source>
          <target state="translated">場合は &lt;code&gt;equals&lt;/code&gt; または &lt;code&gt;hashCode&lt;/code&gt; 省略され、セットは、要素の本質的な使用しています&lt;a href=&quot;../../dart-core/object/operator_equals&quot;&gt;。オブジェクトの==&lt;/a&gt;と&lt;a href=&quot;../../dart-core/object/hashcode&quot;&gt;Object.hashCode&lt;/a&gt;、および &lt;code&gt;isValidKey&lt;/code&gt; は、これらの操作は、すべてのオブジェクト上で動作するように想定されているので無視されます。</target>
        </trans-unit>
        <trans-unit id="1b76ccbbb8abe4bb3de92b319297df165e46a0ff" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;equals&lt;/code&gt; or &lt;code&gt;hashCode&lt;/code&gt; are omitted, the set uses the elements' intrinsic &lt;a href=&quot;../../dart-core/object/operator_equals&quot;&gt;Object.==&lt;/a&gt; and &lt;a href=&quot;../../dart-core/object/hashcode&quot;&gt;Object.hashCode&lt;/a&gt;.</source>
          <target state="translated">場合は &lt;code&gt;equals&lt;/code&gt; または &lt;code&gt;hashCode&lt;/code&gt; 省略され、セットは、要素の本質的な使用しています&lt;a href=&quot;../../dart-core/object/operator_equals&quot;&gt;==。オブジェクト&lt;/a&gt;と&lt;a href=&quot;../../dart-core/object/hashcode&quot;&gt;Object.hashCode&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6604db6895d7c5143c27054ca7d7b85391d7c15f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;equals&lt;/code&gt; throws, the data event is replaced by an error event containing the thrown error. The behavior is equivalent to the original stream emitting the error event, and it doesn't change the what the most recently emitted data event is.</source>
          <target state="translated">場合 &lt;code&gt;equals&lt;/code&gt; スロー、データイベントがスローされたエラーを含むエラーイベントに置き換えられています。この動作は、エラーイベントを発行する元のストリームと同等であり、最近発行されたデータイベントの内容は変更されません。</target>
        </trans-unit>
        <trans-unit id="0b391e63b975cb1f78d6af76fce3a3486013fe7c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;error&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, it is replaced by a &lt;a href=&quot;../../dart-core/nullthrownerror-class&quot;&gt;NullThrownError&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;error&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、&lt;a href=&quot;../../dart-core/nullthrownerror-class&quot;&gt;NullThrownErrorに&lt;/a&gt;置き換えられます。</target>
        </trans-unit>
        <trans-unit id="6f1f320a9ae086490654768065c5505191a5b495" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;error&lt;/code&gt; is a &lt;code&gt;Future&lt;/code&gt;, the future itself is used as the error value. If you want to complete with the result of the future, you can use:</source>
          <target state="translated">場合は &lt;code&gt;error&lt;/code&gt; ある &lt;code&gt;Future&lt;/code&gt; 、未来そのものはエラー値として使用されます。将来の結果を完了したい場合は、以下を使用できます。</target>
        </trans-unit>
        <trans-unit id="5d2262d0a2d2bd98dd6ad8f43360b0231128db7d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;errorsAreFatal&lt;/code&gt; is omitted, the platform may choose a default behavior or inherit the current isolate's behavior.</source>
          <target state="translated">場合 &lt;code&gt;errorsAreFatal&lt;/code&gt; が省略され、プラットフォームはデフォルトの動作を選択するか、現在の分離株の振る舞いを継承することができます。</target>
        </trans-unit>
        <trans-unit id="75a0af19839c8af04c29f6a0ffc314abee764d46" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;followLinks&lt;/code&gt; is false, then any symbolic links found are reported as &lt;a href=&quot;../link-class&quot;&gt;Link&lt;/a&gt; objects, rather than as directories or files, and are not recursed into.</source>
          <target state="translated">&lt;code&gt;followLinks&lt;/code&gt; がfalseの場合、見つかったシンボリックリンクは、ディレクトリまたはファイルとしてではなく、&lt;a href=&quot;../link-class&quot;&gt;リンク&lt;/a&gt;オブジェクトとして報告され、再帰されません。</target>
        </trans-unit>
        <trans-unit id="207a7b4ac974ede40b39868a0aa5936cfb787b81" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;followLinks&lt;/code&gt; is true, then working links are reported as directories or files, depending on their type, and links to directories are recursed into. Broken links are reported as &lt;a href=&quot;../link-class&quot;&gt;Link&lt;/a&gt; objects. If a link makes a loop in the file system, then a recursive listing will not follow a link twice in the same recursive descent, but will report it as a &lt;a href=&quot;../link-class&quot;&gt;Link&lt;/a&gt; the second time it is seen.</source>
          <target state="translated">場合 &lt;code&gt;followLinks&lt;/code&gt; が真である場合、作業のリンクは、その種類に応じて、ディレクトリやファイルとして報告され、およびディレクトリへのリンクはに再帰されています。壊れたリンクは&lt;a href=&quot;../link-class&quot;&gt;リンク&lt;/a&gt;オブジェクトとして報告されます。リンクがファイルシステムでループを形成する場合、再帰的リストは同じ再帰的下降でリンクを2回たどることはありませんが、2回目に見たときは&lt;a href=&quot;../link-class&quot;&gt;リンク&lt;/a&gt;として報告します。</target>
        </trans-unit>
        <trans-unit id="b3a33a0c152bfd23fcb61b9e26078ede765b3301" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;followLinks&lt;/code&gt; is true, then working links are reported as directories or files, depending on their type, and links to directories are recursed into. Broken links are reported as &lt;a href=&quot;../link-class&quot;&gt;Link&lt;/a&gt; objects. If a symbolic link makes a loop in the file system, then a recursive listing will not follow a link twice in the same recursive descent, but will report it as a &lt;a href=&quot;../link-class&quot;&gt;Link&lt;/a&gt; the second time it is seen.</source>
          <target state="translated">場合 &lt;code&gt;followLinks&lt;/code&gt; が真である場合、作業のリンクは、その種類に応じて、ディレクトリやファイルとして報告され、およびディレクトリへのリンクはに再帰されています。壊れたリンクは&lt;a href=&quot;../link-class&quot;&gt;リンク&lt;/a&gt;オブジェクトとして報告されます。シンボリックリンクがファイルシステムでループを作成する場合、再帰的リストは同じ再帰的下降でリンクを2回たどることはありませんが、2回目に見られたときは&lt;a href=&quot;../link-class&quot;&gt;リンク&lt;/a&gt;として報告します。</target>
        </trans-unit>
        <trans-unit id="71944e85a57b443b7d03cb1fe9b07ca106d472f7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;followLoops&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, redirect will follow the redirect, even if the URL was already visited. The default value is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;followLoops&lt;/code&gt; がに設定されている &lt;code&gt;true&lt;/code&gt; 、リダイレクトは、URLがすでに訪れた場合でも、リダイレクトに従います。デフォルト値は &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8754377ce8016df64f82715c6c857b6348dd305f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;force&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; (the default) the &lt;a href=&quot;../httpclient-class&quot;&gt;HttpClient&lt;/a&gt; will be kept alive until all active connections are done. If &lt;code&gt;force&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; any active connections will be closed to immediately release all resources. These closed connections will receive an error event to indicate that the client was shut down. In both cases trying to establish a new connection after calling &lt;a href=&quot;close&quot;&gt;close&lt;/a&gt; will throw an exception.</source>
          <target state="translated">場合は &lt;code&gt;force&lt;/code&gt; ある &lt;code&gt;false&lt;/code&gt; （デフォルト）&lt;a href=&quot;../httpclient-class&quot;&gt;のHttpClient&lt;/a&gt;すべてのアクティブな接続が完了するまで生かされます。場合は &lt;code&gt;force&lt;/code&gt; ある &lt;code&gt;true&lt;/code&gt; 任意のアクティブな接続がすぐにすべてのリソースを解放するために閉じられます。これらの閉じられた接続は、クライアントがシャットダウンされたことを示すエラーイベントを受け取ります。どちらの場合も、&lt;a href=&quot;close&quot;&gt;close&lt;/a&gt;を呼び出した後に新しい接続を確立しようとすると、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="23be9aaea52918df17f6e2f695ad2089c0b9eead" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;force&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, active connections will be closed immediately.</source>
          <target state="translated">場合は &lt;code&gt;force&lt;/code&gt; ある &lt;code&gt;true&lt;/code&gt; 、アクティブな接続はすぐに閉じられます。</target>
        </trans-unit>
        <trans-unit id="857e6ab18f993d193bf63be5257066aca7bc3773" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;fractionDigits&lt;/code&gt; equals 0 then the decimal point is omitted. Examples:</source>
          <target state="translated">場合 &lt;code&gt;fractionDigits&lt;/code&gt; が、その後0に等しい小数点が省略されています。例：</target>
        </trans-unit>
        <trans-unit id="1a37306b83e0f9cd84af38f5e2c6fd44e5e06325" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;fractionDigits&lt;/code&gt; is given then it must be an integer satisfying: &lt;code&gt;0 &amp;lt;= fractionDigits &amp;lt;= 20&lt;/code&gt;. In this case the string contains exactly &lt;code&gt;fractionDigits&lt;/code&gt; after the decimal point. Otherwise, without the parameter, the returned string uses the shortest number of digits that accurately represent &lt;a href=&quot;../num-class&quot;&gt;this&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;fractionDigits&lt;/code&gt; を指定する場合は、 &lt;code&gt;0 &amp;lt;= fractionDigits &amp;lt;= 20&lt;/code&gt; を満たす整数である必要があります。この場合、文字列には小数点の後に正確に &lt;code&gt;fractionDigits&lt;/code&gt; が含まれています。それ以外の場合、パラメータなしで、返される文字列は&lt;a href=&quot;../num-class&quot;&gt;this&lt;/a&gt;を正確に表す最短の桁数を使用します。</target>
        </trans-unit>
        <trans-unit id="708a1b1584e6722365dfb09830240cfda35b3238" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;futures&lt;/code&gt; is empty, or if none of its futures complete, the returned future never completes.</source>
          <target state="translated">&lt;code&gt;futures&lt;/code&gt; が空の場合、またはその先物がどれも完了しない場合、返された先物は決して完了しません。</target>
        </trans-unit>
        <trans-unit id="bbebbf69410c975595f141d368198ef7946eb10d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;futures&lt;/code&gt; is empty, the stream closes as soon as possible.</source>
          <target state="translated">場合 &lt;code&gt;futures&lt;/code&gt; 空である、流れはできるだけ早く終了します。</target>
        </trans-unit>
        <trans-unit id="50bc4813c4cb8ad3d30d341df2a8790c7a35dfcd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;generator&lt;/code&gt; is omitted, it defaults to an identity function on integers &lt;code&gt;(int x) =&amp;gt; x&lt;/code&gt;, so it may only be omitted if the type parameter allows integer values. That is, if &lt;code&gt;E&lt;/code&gt; is a super-type of &lt;a href=&quot;../int-class&quot;&gt;int&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;generator&lt;/code&gt; を省略した場合、デフォルトでは整数 &lt;code&gt;(int x) =&amp;gt; x&lt;/code&gt; 恒等関数になるため、typeパラメータで整数値が許可されている場合にのみ省略できます。つまり、 &lt;code&gt;E&lt;/code&gt; が&lt;a href=&quot;../int-class&quot;&gt;intの&lt;/a&gt;スーパータイプである場合。</target>
        </trans-unit>
        <trans-unit id="dad2f8d4c4141e385db22923247592f9f32c2049" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;group&lt;/code&gt; is 0, returns the match of the pattern.</source>
          <target state="translated">&lt;code&gt;group&lt;/code&gt; が0の場合、パターンの一致を返します。</target>
        </trans-unit>
        <trans-unit id="ed8a4542e18b6447556733f8ba50b4e30f89edd9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;hasReflectedType&lt;/code&gt; returns true, returns the corresponding &lt;a href=&quot;../../dart-core/type-class&quot;&gt;Type&lt;/a&gt;. Otherwise, an &lt;a href=&quot;../../dart-core/unsupportederror-class&quot;&gt;UnsupportedError&lt;/a&gt; is thrown.</source>
          <target state="translated">&lt;code&gt;hasReflectedType&lt;/code&gt; がtrueを返す場合、対応する&lt;a href=&quot;../../dart-core/type-class&quot;&gt;Typeを&lt;/a&gt;返します。それ以外の場合は、&lt;a href=&quot;../../dart-core/unsupportederror-class&quot;&gt;UnsupportedError&lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="d54544964fe4b4249079bded055455785b34d527" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;hasReflectedType&lt;/code&gt; returns true, returns the corresponding &lt;a href=&quot;../dart-core/type-class&quot;&gt;Type&lt;/a&gt;. Otherwise, an &lt;a href=&quot;../dart-core/unsupportederror-class&quot;&gt;UnsupportedError&lt;/a&gt; is thrown.</source>
          <target state="translated">&lt;code&gt;hasReflectedType&lt;/code&gt; がtrueを返す場合、対応する&lt;a href=&quot;../dart-core/type-class&quot;&gt;Typeを&lt;/a&gt;返します。それ以外の場合は、&lt;a href=&quot;../dart-core/unsupportederror-class&quot;&gt;UnsupportedError&lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="2ab1c19a10449624a7ee551706e95d9d82869380" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;headers&lt;/code&gt; is provided, there are a number of headers which are controlled by the WebSocket connection process. These headers are:</source>
          <target state="translated">&lt;code&gt;headers&lt;/code&gt; が提供されている場合、WebSocket接続プロセスによって制御されるヘッダーがいくつかあります。これらのヘッダーは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="cb27ec41fb1b2f4b0eb0b0ec8da007ba8a59bc8d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;includeLinkLocal&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, the list of addresses of the returned &lt;a href=&quot;../networkinterface-class&quot;&gt;NetworkInterface&lt;/a&gt;s, may include link local addresses. Default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;includeLinkLocal&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; の場合、返される&lt;a href=&quot;../networkinterface-class&quot;&gt;NetworkInterface&lt;/a&gt;のアドレスのリストには、リンクローカルアドレスが含まれる場合があります。デフォルトは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0020b85c00cf92bb58eabe023b4ddf052a06456a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;includeLoopback&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, the returned list will include the loopback device. Default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;includeLoopback&lt;/code&gt; がある &lt;code&gt;true&lt;/code&gt; 、返されたリストには、ループバックデバイスが含まれます。デフォルトは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="12adad285fdb7c2243cf18a2104dcdae74e7d5b9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;includeParentEnvironment&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, the process's environment will include the parent process's environment, with &lt;code&gt;environment&lt;/code&gt; taking precedence. Default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;includeParentEnvironment&lt;/code&gt; がある &lt;code&gt;true&lt;/code&gt; 、プロセスの環境ではと、親プロセスの環境が含まれます &lt;code&gt;environment&lt;/code&gt; 優先して。デフォルトは &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="600f9bac88875b2c11445a1236b252b09fb035f0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;indent&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, the output is encoded as a single line.</source>
          <target state="translated">場合 &lt;code&gt;indent&lt;/code&gt; ある &lt;code&gt;null&lt;/code&gt; 、出力は、単一のラインとして符号化されます。</target>
        </trans-unit>
        <trans-unit id="a88f9074ea7f7b2a7fc1b7fc11ace2586ffc2748" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;indent&lt;/code&gt; is non-&lt;code&gt;null&lt;/code&gt;, the converter attempts to &quot;pretty-print&quot; the JSON, and uses &lt;code&gt;indent&lt;/code&gt; as the indentation. Otherwise the result has no whitespace outside of string literals. If &lt;code&gt;indent&lt;/code&gt; contains characters that are not valid JSON whitespace characters, the result will not be valid JSON. JSON whitespace characters are space (U+0020), tab (U+0009), line feed (U+000a) and carriage return (U+000d) (&lt;a href=&quot;http://www.ecma-international.org/publications/standards/Ecma-404.htm&quot;&gt;ECMA 404&lt;/a&gt;).</source>
          <target state="translated">もし &lt;code&gt;indent&lt;/code&gt; 非ある &lt;code&gt;null&lt;/code&gt; 、「プリティプリント」JSONに変換しようと、及び使用 &lt;code&gt;indent&lt;/code&gt; インデントとして。それ以外の場合、結果には文字列リテラルの外側に空白はありません。 &lt;code&gt;indent&lt;/code&gt; に有効なJSON空白文字ではない文字が含まれている場合、結果は有効なJSONではなくなります。JSONの空白文字は、スペース（U + 0020）、タブ（U + 0009）、ラインフィード（U + 000a）、キャリッジリターン（U + 000d）（&lt;a href=&quot;http://www.ecma-international.org/publications/standards/Ecma-404.htm&quot;&gt;ECMA 404&lt;/a&gt;）です。</target>
        </trans-unit>
        <trans-unit id="9cdd412b1e4ca59d464a89becc183126642e3d5e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;index&lt;/code&gt; is provided, this method checks if the substring starting at that index starts with a match of &lt;code&gt;pattern&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt; が指定されている場合、このメソッドは、そのインデックスで始まる部分文字列が &lt;code&gt;pattern&lt;/code&gt; 一致で始まるかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="bbb5efbe3c002e264779b32e7e8a4e1a6468f094" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;initialCapacity&lt;/code&gt; is given, prepare the queue for at least that many elements.</source>
          <target state="translated">&lt;code&gt;initialCapacity&lt;/code&gt; が指定されている場合は、少なくともその数の要素のキューを準備します。</target>
        </trans-unit>
        <trans-unit id="72c0fd26461f98dfcc82776516c9367cf0bd2f49" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;isLast&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; closes &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;isLast&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; の場合、 &lt;code&gt;this&lt;/code&gt; 閉じます。</target>
        </trans-unit>
        <trans-unit id="de680eda993f3e19a498ac0e24978a1d7c39477b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;isUtc&lt;/code&gt; is false then the date is in the local time zone.</source>
          <target state="translated">場合 &lt;code&gt;isUtc&lt;/code&gt; が falseで、日付は現地時間帯です。</target>
        </trans-unit>
        <trans-unit id="45b6437fac6aac5b6e1c363fd7278d7f8b957ea9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;isValidKey&lt;/code&gt; is omitted, it defaults to testing if the object is an &lt;code&gt;E&lt;/code&gt; instance. That means that:</source>
          <target state="translated">場合 &lt;code&gt;isValidKey&lt;/code&gt; が試験に省略され、それはデフォルトオブジェクトがある場合 &lt;code&gt;E&lt;/code&gt; のインスタンス。つまり：</target>
        </trans-unit>
        <trans-unit id="ddf86156aa1d68803b71982d051c2ec9feb21af5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;isValidKey&lt;/code&gt; is provided, only values satisfying &lt;code&gt;isValidKey(other)&lt;/code&gt; are compared using the &lt;code&gt;compare&lt;/code&gt; method in the methods mentioned above. If the &lt;code&gt;isValidKey&lt;/code&gt; function returns false for an object, it is assumed to not be in the set.</source>
          <target state="translated">&lt;code&gt;isValidKey&lt;/code&gt; が指定されている場合、 &lt;code&gt;isValidKey(other)&lt;/code&gt; を満たす値のみが、上記のメソッドの &lt;code&gt;compare&lt;/code&gt; メソッドを使用して比較されます。 &lt;code&gt;isValidKey&lt;/code&gt; 関数がオブジェクトに対してfalseを返す場合、セットに含まれていないと見なされます。</target>
        </trans-unit>
        <trans-unit id="16ee1ac1f1f896691c7fe4b1a528f5a7de3d8195" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;iterable&lt;/code&gt; depends on this list in some other way, no guarantees are made.</source>
          <target state="translated">&lt;code&gt;iterable&lt;/code&gt; が他の方法でこのリストに依存している場合、保証はありません。</target>
        </trans-unit>
        <trans-unit id="31904fbe5f94c3d0b42d43b3314c3286daca5e90" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;iterable&lt;/code&gt; is based on this list, its values may change /during/ the &lt;code&gt;setAll&lt;/code&gt; operation.</source>
          <target state="translated">&lt;code&gt;iterable&lt;/code&gt; がこのリストに基づいている場合、その値は &lt;code&gt;setAll&lt;/code&gt; 操作中に/ during /中に変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="2beca22ed1daee964007495474b84d929431b7a2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;iterable&lt;/code&gt; is this list, the operation copies the elements originally in the range from &lt;code&gt;skipCount&lt;/code&gt; to &lt;code&gt;skipCount + (end - start)&lt;/code&gt; to the range &lt;code&gt;start&lt;/code&gt; to &lt;code&gt;end&lt;/code&gt;, even if the two ranges overlap.</source>
          <target state="translated">場合 &lt;code&gt;iterable&lt;/code&gt; 、このリストで、操作コピー本来の範囲内の要素 &lt;code&gt;skipCount&lt;/code&gt; に &lt;code&gt;skipCount + (end - start)&lt;/code&gt; レンジに &lt;code&gt;start&lt;/code&gt; する &lt;code&gt;end&lt;/code&gt; 、二つの範囲が重なっていても。</target>
        </trans-unit>
        <trans-unit id="61b99aecb052dbbe8306b22e785bcf923abf8b50" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;key&lt;/code&gt; is not an instance of &lt;a href=&quot;../dart-core/type-class&quot;&gt;Type&lt;/a&gt;, then this function throws an &lt;a href=&quot;../dart-core/argumenterror-class&quot;&gt;ArgumentError&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; が&lt;a href=&quot;../dart-core/type-class&quot;&gt;Typeの&lt;/a&gt;インスタンスでない場合、この関数は&lt;a href=&quot;../dart-core/argumenterror-class&quot;&gt;ArgumentErrorを&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="066227ba8840006c2a770846316cd11af80469ef" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;key&lt;/code&gt; is not an instance of &lt;a href=&quot;../dart-core/type-class&quot;&gt;Type&lt;/a&gt;, then this function throws an &lt;a href=&quot;../dart-core/argumenterror-class&quot;&gt;ArgumentError&lt;/a&gt;. If &lt;code&gt;key&lt;/code&gt; is the Type for dynamic or a function typedef, throws an &lt;a href=&quot;../dart-core/argumenterror-class&quot;&gt;ArgumentError&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; が&lt;a href=&quot;../dart-core/type-class&quot;&gt;Typeの&lt;/a&gt;インスタンスでない場合、この関数は&lt;a href=&quot;../dart-core/argumenterror-class&quot;&gt;ArgumentErrorを&lt;/a&gt;スローします。場合は &lt;code&gt;key&lt;/code&gt; 動的または関数typedefのタイプがあり、スロー&lt;a href=&quot;../dart-core/argumenterror-class&quot;&gt;例外ArgumentErrorを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2660e7c20f196e4721c60e17f8cf679d5afdc798" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;keys&lt;/code&gt; contains the same object multiple times, the last occurrence overwrites the previous value.</source>
          <target state="translated">&lt;code&gt;keys&lt;/code&gt; に同じオブジェクトが複数回含まれている場合、最後に出現すると以前の値が上書きされます。</target>
        </trans-unit>
        <trans-unit id="e37e0dc97bb55119a1ff32edfa702e4acbe0660d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;length&lt;/code&gt; is provided, it is used as the length of the indexable object, otherwise the length is found as &lt;code&gt;indexable.length&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;length&lt;/code&gt; 提供され、それ以外の長さは以下のように発見され、割出し可能オブジェクトの長さとして使用さ &lt;code&gt;indexable.length&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6b0617b5cae36a1801d3a8de2559ccc66100d78c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;library&lt;/code&gt; is not a &lt;a href=&quot;../librarymirror-class&quot;&gt;LibraryMirror&lt;/a&gt; or if &lt;code&gt;name&lt;/code&gt; is a private identifier and &lt;code&gt;library&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, throws an &lt;a href=&quot;../../dart-core/argumenterror-class&quot;&gt;ArgumentError&lt;/a&gt;. If &lt;code&gt;name&lt;/code&gt; is a private identifier, the symbol returned is with respect to &lt;code&gt;library&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;library&lt;/code&gt; が&lt;a href=&quot;../librarymirror-class&quot;&gt;LibraryMirrorで&lt;/a&gt;はない場合、または &lt;code&gt;name&lt;/code&gt; がプライベート識別子であり、 &lt;code&gt;library&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、&lt;a href=&quot;../../dart-core/argumenterror-class&quot;&gt;ArgumentErrorを&lt;/a&gt;スローします。場合は &lt;code&gt;name&lt;/code&gt; プライベートな識別子であり、返されたシンボルは、に関するものである &lt;code&gt;library&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e5a959292253dd319223d4f33eb11b609e49e932" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;mimeType&lt;/code&gt; and/or &lt;code&gt;parameters&lt;/code&gt; are supplied, they are added to the created URI. If any of these contain characters that are not allowed in the data URI, the character is percent-escaped. If the character is non-ASCII, it is first UTF-8 encoded and then the bytes are percent encoded. An omitted &lt;code&gt;mimeType&lt;/code&gt; in a data URI means &lt;code&gt;text/plain&lt;/code&gt;, just as an omitted &lt;code&gt;charset&lt;/code&gt; parameter defaults to meaning &lt;code&gt;US-ASCII&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;mimeType&lt;/code&gt; および/または &lt;code&gt;parameters&lt;/code&gt; 供給され、それらが作成されたURIに追加されます。これらのいずれかにデータURIで許可されていない文字が含まれている場合、その文字はパーセントでエスケープされます。文字が非ASCIIの場合、最初にUTF-8でエンコードされ、次にバイトがパーセントでエンコードされます。データURIで省略された &lt;code&gt;mimeType&lt;/code&gt; は、省略された &lt;code&gt;charset&lt;/code&gt; パラメータがデフォルトで &lt;code&gt;US-ASCII&lt;/code&gt; を意味するように、 &lt;code&gt;text/plain&lt;/code&gt; を意味します。</target>
        </trans-unit>
        <trans-unit id="3178891f98e870b95f35556e9f79c7a6fc44089c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;mode&lt;/code&gt; is &lt;a href=&quot;../filelock/exclusive-constant&quot;&gt;FileLock.exclusive&lt;/a&gt; or &lt;a href=&quot;../filelock/shared-constant&quot;&gt;FileLock.shared&lt;/a&gt;, an error is signaled if the lock cannot be obtained. If &lt;code&gt;mode&lt;/code&gt; is &lt;a href=&quot;../filelock/blockingexclusive-constant&quot;&gt;FileLock.blockingExclusive&lt;/a&gt; or &lt;a href=&quot;../filelock/blockingshared-constant&quot;&gt;FileLock.blockingShared&lt;/a&gt;, the returned &lt;a href=&quot;../../dart-async/future-class&quot;&gt;Future&lt;/a&gt; is resolved only when the lock has been obtained.</source>
          <target state="translated">場合 &lt;code&gt;mode&lt;/code&gt; ある&lt;a href=&quot;../filelock/exclusive-constant&quot;&gt;FileLock.exclusive&lt;/a&gt;又は&lt;a href=&quot;../filelock/shared-constant&quot;&gt;FileLock.shared&lt;/a&gt;ロックが取得できない場合、エラーが通知されます。場合 &lt;code&gt;mode&lt;/code&gt; ある&lt;a href=&quot;../filelock/blockingexclusive-constant&quot;&gt;FileLock.blockingExclusive&lt;/a&gt;または&lt;a href=&quot;../filelock/blockingshared-constant&quot;&gt;FileLock.blockingShared&lt;/a&gt;、返された&lt;a href=&quot;../../dart-async/future-class&quot;&gt;今後は、&lt;/a&gt;ロックが取得されたときにのみ解決されます。</target>
        </trans-unit>
        <trans-unit id="c76db9cf827818f8119dfcc4427f05778270b85e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;mode&lt;/code&gt; is &lt;a href=&quot;../filelock/exclusive-constant&quot;&gt;FileLock.exclusive&lt;/a&gt; or &lt;a href=&quot;../filelock/shared-constant&quot;&gt;FileLock.shared&lt;/a&gt;, an exception is thrown if the lock cannot be obtained. If &lt;code&gt;mode&lt;/code&gt; is &lt;a href=&quot;../filelock/blockingexclusive-constant&quot;&gt;FileLock.blockingExclusive&lt;/a&gt; or &lt;a href=&quot;../filelock/blockingshared-constant&quot;&gt;FileLock.blockingShared&lt;/a&gt;, the call returns only after the lock has been obtained.</source>
          <target state="translated">場合 &lt;code&gt;mode&lt;/code&gt; ある&lt;a href=&quot;../filelock/exclusive-constant&quot;&gt;FileLock.exclusive&lt;/a&gt;か&lt;a href=&quot;../filelock/shared-constant&quot;&gt;FileLock.shared&lt;/a&gt;ロックが取得できない場合、例外がスローされます。場合 &lt;code&gt;mode&lt;/code&gt; ある&lt;a href=&quot;../filelock/blockingexclusive-constant&quot;&gt;FileLock.blockingExclusive&lt;/a&gt;または&lt;a href=&quot;../filelock/blockingshared-constant&quot;&gt;FileLock.blockingShared&lt;/a&gt;、呼び出しがロックが取得された後にのみ返されます。</target>
        </trans-unit>
        <trans-unit id="b8171b52ff86e888339eaa3de6e2735263d13321" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;mode&lt;/code&gt; is &lt;a href=&quot;../processstartmode/detached-constant&quot;&gt;ProcessStartMode.detached&lt;/a&gt; a detached process will be created. A detached process has no connection to its parent, and can keep running on its own when the parent dies. The only information available from a detached process is its &lt;code&gt;pid&lt;/code&gt;. There is no connection to its &lt;code&gt;stdin&lt;/code&gt;, &lt;code&gt;stdout&lt;/code&gt; or &lt;code&gt;stderr&lt;/code&gt;, nor will the process' exit code become available when it terminates.</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; が&lt;a href=&quot;../processstartmode/detached-constant&quot;&gt;ProcessStartMode.detachedの&lt;/a&gt;場合、分離されたプロセスが作成されます。デタッチされたプロセスは、その親とは接続されていないため、親が死んだときに自力で実行し続けることができます。デタッチされたプロセスから入手できる唯一の情報は、その &lt;code&gt;pid&lt;/code&gt; です。 &lt;code&gt;stdin&lt;/code&gt; 、 &lt;code&gt;stdout&lt;/code&gt; 、または &lt;code&gt;stderr&lt;/code&gt; への接続はなく、プロセスの終了時にプロセスの終了コードが利用可能になることもありません。</target>
        </trans-unit>
        <trans-unit id="27edaca433a4663e1f6720ea97e5dd94028e5d9c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;mode&lt;/code&gt; is &lt;a href=&quot;../processstartmode/detachedwithstdio-constant&quot;&gt;ProcessStartMode.detachedWithStdio&lt;/a&gt; a detached process will be created where the &lt;code&gt;stdin&lt;/code&gt;, &lt;code&gt;stdout&lt;/code&gt; and &lt;code&gt;stderr&lt;/code&gt; are connected. The creator can communicate with the child through these. The detached process will keep running even if these communication channels are closed. The process' exit code will not become available when it terminated.</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; が&lt;a href=&quot;../processstartmode/detachedwithstdio-constant&quot;&gt;ProcessStartMode.detachedWithStdioの&lt;/a&gt;場合は、 &lt;code&gt;stdin&lt;/code&gt; 、 &lt;code&gt;stdout&lt;/code&gt; 、および &lt;code&gt;stderr&lt;/code&gt; が接続されているデタッチプロセスが作成されます。クリエイターはこれらを通じて子供とコミュニケーションをとることができます。分離されたプロセスは、これらの通信チャネルが閉じている場合でも実行を継続します。プロセスが終了しても、プロセスの終了コードは使用できません。</target>
        </trans-unit>
        <trans-unit id="a8fc948717d6d099a54eb04767b87fd74aca9440" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;mode&lt;/code&gt; is &lt;a href=&quot;../processstartmode/normal-constant&quot;&gt;ProcessStartMode.normal&lt;/a&gt; (the default) a child process will be started with &lt;code&gt;stdin&lt;/code&gt;, &lt;code&gt;stdout&lt;/code&gt; and &lt;code&gt;stderr&lt;/code&gt; connected.</source>
          <target state="translated">場合 &lt;code&gt;mode&lt;/code&gt; ある&lt;a href=&quot;../processstartmode/normal-constant&quot;&gt;ProcessStartMode.normal&lt;/a&gt;（デフォルト）子プロセスがで開始される &lt;code&gt;stdin&lt;/code&gt; 、 &lt;code&gt;stdout&lt;/code&gt; と &lt;code&gt;stderr&lt;/code&gt; に接続します。</target>
        </trans-unit>
        <trans-unit id="0f763f9a99d94ab9f649e8c2a9ff99e78d4d99b0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;mode&lt;/code&gt; is provided as either &lt;a href=&quot;../htmlescapemode/attribute-constant&quot;&gt;HtmlEscapeMode.attribute&lt;/a&gt; or &lt;a href=&quot;../htmlescapemode/element-constant&quot;&gt;HtmlEscapeMode.element&lt;/a&gt;, only the corresponding subset of HTML characters are escaped. The default is to escape all HTML characters.</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; が&lt;a href=&quot;../htmlescapemode/attribute-constant&quot;&gt;HtmlEscapeMode.attribute&lt;/a&gt;または&lt;a href=&quot;../htmlescapemode/element-constant&quot;&gt;HtmlEscapeMode.elementの&lt;/a&gt;いずれかとして提供されている場合、対応するHTML文字のサブセットのみがエスケープされます。デフォルトでは、すべてのHTML文字をエスケープします。</target>
        </trans-unit>
        <trans-unit id="7608451364d912e3ad0dcdeecadd9b9977a7dc6d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;multiLine&lt;/code&gt; is enabled, then &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; will match the beginning and end of a &lt;em&gt;line&lt;/em&gt;, in addition to matching beginning and end of input, respectively.</source>
          <target state="translated">場合は &lt;code&gt;multiLine&lt;/code&gt; 有効になっている、そして &lt;code&gt;^&lt;/code&gt; と &lt;code&gt;$&lt;/code&gt; の先頭と末尾に一致します&lt;em&gt;ラインを&lt;/em&gt;それぞれ、入力の開始と終了をマッチングに加えて、。</target>
        </trans-unit>
        <trans-unit id="b8d530d7d0a8f54cca1deac126797e5f113b8334" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;name&lt;/code&gt; is a single identifier that does not start with an underscore, or it is a qualified identifier, or it is an operator name different from &lt;code&gt;unary-&lt;/code&gt;, then the result of &lt;code&gt;const Symbol(name)&lt;/code&gt; is the same instance that the symbol literal created by prefixing &lt;code&gt;#&lt;/code&gt; to the content of &lt;code&gt;name&lt;/code&gt; would evaluate to.</source>
          <target state="translated">場合 &lt;code&gt;name&lt;/code&gt; アンダースコアで始まらない単一の識別子であり、またはそれは修飾識別子であるか、またはそれからオペレータ名異なる &lt;code&gt;unary-&lt;/code&gt; の、結果 &lt;code&gt;const Symbol(name)&lt;/code&gt; シンボルがリテラル作成した同じインスタンスであります &lt;code&gt;name&lt;/code&gt; のコンテンツの前に &lt;code&gt;#&lt;/code&gt; を付けると、評価されます。</target>
        </trans-unit>
        <trans-unit id="a8b5429402f105587732ce238735cdf5afbd7648" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;name&lt;/code&gt; is not declared in the environment, the result is instead &lt;code&gt;defaultValue&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; が環境で宣言されていない場合、結果は代わりに &lt;code&gt;defaultValue&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="3bad4384eb2ff021ecc663053a0f4de4a6f4a958" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;newLength&lt;/code&gt; is greater than the current length, entries are initialized to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;newLength&lt;/code&gt; が現在の長さより大きい場合、エントリは &lt;code&gt;null&lt;/code&gt; に初期化されます。</target>
        </trans-unit>
        <trans-unit id="51332796f04ae1221952a383265a369889a55138" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;newPath&lt;/code&gt; identifies an existing entity of the same type, that entity is replaced. If &lt;code&gt;newPath&lt;/code&gt; identifies an existing entity of a different type, the operation fails and an exception is thrown.</source>
          <target state="translated">&lt;code&gt;newPath&lt;/code&gt; が同じタイプの既存のエンティティを識別する場合、そのエンティティは置き換えられます。 &lt;code&gt;newPath&lt;/code&gt; が異なるタイプの既存のエンティティを識別する場合、操作は失敗し、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="89e3fca4effe76bd4c05eed0d554a3e5762e0167" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;newPath&lt;/code&gt; identifies an existing entity of the same type, that entity is replaced. If &lt;code&gt;newPath&lt;/code&gt; identifies an existing entity of a different type, the operation fails and the future completes with an exception.</source>
          <target state="translated">&lt;code&gt;newPath&lt;/code&gt; が同じタイプの既存のエンティティを識別する場合、そのエンティティは置き換えられます。 &lt;code&gt;newPath&lt;/code&gt; が異なるタイプの既存のエンティティを識別する場合、操作は失敗し、futureは例外で完了します。</target>
        </trans-unit>
        <trans-unit id="703d4706dfcdf542c26a187b77353397feca204d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;newPath&lt;/code&gt; identifies an existing file, that file is replaced. If &lt;code&gt;newPath&lt;/code&gt; identifies an existing directory the operation fails and an exception is thrown.</source>
          <target state="translated">&lt;code&gt;newPath&lt;/code&gt; が既存のファイルを識別する場合、そのファイルは置き換えられます。 &lt;code&gt;newPath&lt;/code&gt; が既存のディレクトリを識別する場合、操作は失敗し、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="57cea46570e02b6d68658270c77e73ae9736f4f9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;newPath&lt;/code&gt; identifies an existing file, that file is replaced. If &lt;code&gt;newPath&lt;/code&gt; identifies an existing directory, the operation fails and the future completes with an exception.</source>
          <target state="translated">&lt;code&gt;newPath&lt;/code&gt; が既存のファイルを識別する場合、そのファイルは置き換えられます。 &lt;code&gt;newPath&lt;/code&gt; が既存のディレクトリを識別する場合、操作は失敗し、futureは例外を伴って完了します。</target>
        </trans-unit>
        <trans-unit id="ea5998bd9f60c8ca2cdc9b9a480d1c6372ed5e00" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;newPath&lt;/code&gt; identifies an existing link, that link is replaced. If &lt;code&gt;newPath&lt;/code&gt; identifies an existing file or directory the operation fails and an exception is thrown.</source>
          <target state="translated">&lt;code&gt;newPath&lt;/code&gt; が既存のリンクを識別する場合、そのリンクは置き換えられます。 &lt;code&gt;newPath&lt;/code&gt; が既存のファイルまたはディレクトリを識別する場合、操作は失敗し、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="be56726c61c0fb2d13903713985b717a2d463250" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;newPath&lt;/code&gt; identifies an existing link, that link is replaced. If &lt;code&gt;newPath&lt;/code&gt; identifies an existing file or directory, the operation fails and the future completes with an exception.</source>
          <target state="translated">&lt;code&gt;newPath&lt;/code&gt; が既存のリンクを識別する場合、そのリンクは置き換えられます。 &lt;code&gt;newPath&lt;/code&gt; が既存のファイルまたはディレクトリを識別する場合、操作は失敗し、futureは例外で完了します。</target>
        </trans-unit>
        <trans-unit id="52c128e6f66f24fae4d5ffcbeb469c7ebf1c116b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;newSet&lt;/code&gt; is provided, it is used to create the new sets returned by &lt;a href=&quot;toset&quot;&gt;toSet&lt;/a&gt;, &lt;a href=&quot;union&quot;&gt;union&lt;/a&gt;, and is also used for &lt;a href=&quot;intersection&quot;&gt;intersection&lt;/a&gt; and &lt;a href=&quot;difference&quot;&gt;difference&lt;/a&gt;. If &lt;code&gt;newSet&lt;/code&gt; is omitted, it defaults to creating a new set using the default &lt;a href=&quot;../set-class&quot;&gt;Set&lt;/a&gt; constructor, and &lt;a href=&quot;intersection&quot;&gt;intersection&lt;/a&gt; and &lt;a href=&quot;difference&quot;&gt;difference&lt;/a&gt; returns an adapted version of calling the same method on the source.</source>
          <target state="translated">&lt;code&gt;newSet&lt;/code&gt; が提供されている場合、これは、&lt;a href=&quot;toset&quot;&gt;toSet&lt;/a&gt;、&lt;a href=&quot;union&quot;&gt;union&lt;/a&gt;によって返される新しいセットを作成するために使用されます。また、&lt;a href=&quot;intersection&quot;&gt;交差&lt;/a&gt;と&lt;a href=&quot;difference&quot;&gt;差分に&lt;/a&gt;も使用されます。 &lt;code&gt;newSet&lt;/code&gt; が省略された場合、デフォルトではデフォルトの&lt;a href=&quot;../set-class&quot;&gt;Set&lt;/a&gt;コンストラクターを使用して新しいセットが作成され、&lt;a href=&quot;intersection&quot;&gt;共通部分&lt;/a&gt;と&lt;a href=&quot;difference&quot;&gt;差分&lt;/a&gt;はソースで同じメソッドを呼び出した適応バージョンを返します。</target>
        </trans-unit>
        <trans-unit id="349280968146ef2fe27a17454da0869b5a49d438" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;null&lt;/code&gt;, the output is encoded as a single line.</source>
          <target state="translated">場合 &lt;code&gt;null&lt;/code&gt; 、出力は、単一のラインとして符号化されます。</target>
        </trans-unit>
        <trans-unit id="dc0b997693df871ae4d7b402a4b564121b8e17d8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;onCancel&lt;/code&gt; is provided, it is called in a similar way to &lt;code&gt;onListen&lt;/code&gt; when the returned stream stops having listener. If it later gets a new listener, the &lt;code&gt;onListen&lt;/code&gt; function is called again.</source>
          <target state="translated">場合 &lt;code&gt;onCancel&lt;/code&gt; が提供され、それはと同様の方法で呼び出された &lt;code&gt;onListen&lt;/code&gt; 返されるストリームは、リスナーを持つ停止したとき。後で新しいリスナーを取得すると、 &lt;code&gt;onListen&lt;/code&gt; 関数が再度呼び出されます。</target>
        </trans-unit>
        <trans-unit id="04bfe564ea8a61b4c204fb71c54a074e06a8e70f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;onError&lt;/code&gt; is not given, and this future completes with an error, the error is forwarded directly to the returned future.</source>
          <target state="translated">場合 &lt;code&gt;onError&lt;/code&gt; 与えられていない、そしてこの将来がエラーで終了し、エラーが返され、将来に直接転送されます。</target>
        </trans-unit>
        <trans-unit id="b046ffd3f231c956e1228788cb163ba7964c75af" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;onError&lt;/code&gt; is provided, and this future completes with an error, the &lt;code&gt;onError&lt;/code&gt; callback is called with that error and its stack trace. The &lt;code&gt;onError&lt;/code&gt; callback must accept either one argument or two arguments where the latter is a &lt;a href=&quot;../../dart-core/stacktrace-class&quot;&gt;StackTrace&lt;/a&gt;. If &lt;code&gt;onError&lt;/code&gt; accepts two arguments, it is called with both the error and the stack trace, otherwise it is called with just the error object. The &lt;code&gt;onError&lt;/code&gt; callback must return a value or future that can be used to complete the returned future, so it must be something assignable to &lt;code&gt;FutureOr&amp;lt;R&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;onError&lt;/code&gt; エラーで完了しており、この将来され、 &lt;code&gt;onError&lt;/code&gt; コールバックは、エラーとそのスタックトレースと呼ばれています。 &lt;code&gt;onError&lt;/code&gt; コールバックは1つの引数または後者は2つの引数のいずれか受け入れなければなりません&lt;a href=&quot;../../dart-core/stacktrace-class&quot;&gt;スタックトレース&lt;/a&gt;。 &lt;code&gt;onError&lt;/code&gt; が 2つの引数を受け入れる場合は、エラーとスタックトレースの両方で呼び出されます。それ以外の場合は、エラーオブジェクトだけで呼び出されます。 &lt;code&gt;onError&lt;/code&gt; それはに何かを割り当て可能でなければなりませんので、コールバックは、返された未来を完了するために使用される値または将来を返さなければなりません &lt;code&gt;FutureOr&amp;lt;R&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f9a238e15dae432466026c0b62efa8deffb2a490" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;onError&lt;/code&gt; is provided, it must have one of the types</source>
          <target state="translated">&lt;code&gt;onError&lt;/code&gt; が提供されている場合、それはタイプの1つでなければなりません</target>
        </trans-unit>
        <trans-unit id="17f11e42a6d08f651f2ef9226776afebe5741e1c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;onListen&lt;/code&gt; is provided, it is called with a subscription-like object that represents the underlying subscription to this stream. It is possible to pause, resume or cancel the subscription during the call to &lt;code&gt;onListen&lt;/code&gt;. It is not possible to change the event handlers, including using &lt;a href=&quot;../streamsubscription/asfuture&quot;&gt;StreamSubscription.asFuture&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;code&gt;onListen&lt;/code&gt; が提供され、それがこのストリームへの根本的なサブスクリプションを表し、サブスクリプションのようなオブジェクトと呼ばれています。 &lt;code&gt;onListen&lt;/code&gt; の呼び出し中にサブスクリプションを一時停止、再開、またはキャンセルすることができます。&lt;a href=&quot;../streamsubscription/asfuture&quot;&gt;StreamSubscription.asFutureの&lt;/a&gt;使用など、イベントハンドラーを変更することはできません。</target>
        </trans-unit>
        <trans-unit id="073d045b20927ed2d827165fbc59f2408c363e92" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;onTimeout&lt;/code&gt; is omitted, a timeout will cause the returned future to complete with a &lt;a href=&quot;../timeoutexception-class&quot;&gt;TimeoutException&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;code&gt;onTimeout&lt;/code&gt; 省略され、タイムアウトが返された未来がで完了するようになります&lt;a href=&quot;../timeoutexception-class&quot;&gt;TimeoutException&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ccff52f4fc05e1ae51b146d9a79b75e1ad7d04f5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;onTimeout&lt;/code&gt; is omitted, a timeout will just put a &lt;a href=&quot;../timeoutexception-class&quot;&gt;TimeoutException&lt;/a&gt; into the error channel of the returned stream. If the call to &lt;code&gt;onTimeout&lt;/code&gt; throws, the error is emitted on the returned stream.</source>
          <target state="translated">場合 &lt;code&gt;onTimeout&lt;/code&gt; 省略され、タイムアウトがちょうど入れます&lt;a href=&quot;../timeoutexception-class&quot;&gt;TimeoutExceptionを&lt;/a&gt;返されたストリームのエラーチャネルに。 &lt;code&gt;onTimeout&lt;/code&gt; の呼び出しがスローすると、返されたストリームでエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="1a77e14728787df3fe6692f552194c473186b9c9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;other&lt;/code&gt; is also a &lt;a href=&quot;../float32x4list-class&quot;&gt;Float32x4List&lt;/a&gt;, the result is a new &lt;a href=&quot;../float32x4list-class&quot;&gt;Float32x4List&lt;/a&gt;, otherwise the result is a normal growable &lt;code&gt;List&amp;lt;Float32x4&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;other&lt;/code&gt; またある&lt;a href=&quot;../float32x4list-class&quot;&gt;Float32x4List&lt;/a&gt;、結果が新しい&lt;a href=&quot;../float32x4list-class&quot;&gt;Float32x4List&lt;/a&gt;、そうでない場合は、結果は正常な成長可能である &lt;code&gt;List&amp;lt;Float32x4&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="10fa9d043a8d1ac872564c47c45abc8167cc0c3a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;other&lt;/code&gt; is also a &lt;a href=&quot;../float64x2list-class&quot;&gt;Float64x2List&lt;/a&gt;, the result is a new &lt;a href=&quot;../float64x2list-class&quot;&gt;Float64x2List&lt;/a&gt;, otherwise the result is a normal growable &lt;code&gt;List&amp;lt;Float64x2&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;other&lt;/code&gt; またある&lt;a href=&quot;../float64x2list-class&quot;&gt;Float64x2List&lt;/a&gt;、結果が新しい&lt;a href=&quot;../float64x2list-class&quot;&gt;Float64x2List&lt;/a&gt;、そうでない場合は、結果は正常な成長可能である &lt;code&gt;List&amp;lt;Float64x2&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ec27b2cca23bc271d7fb8621ab79c7be981de0e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;other&lt;/code&gt; is also a &lt;a href=&quot;../int32x4list-class&quot;&gt;Int32x4List&lt;/a&gt;, the result is a new &lt;a href=&quot;../int32x4list-class&quot;&gt;Int32x4List&lt;/a&gt;, otherwise the result is a normal growable &lt;code&gt;List&amp;lt;Int32x4&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;other&lt;/code&gt; またある&lt;a href=&quot;../int32x4list-class&quot;&gt;Int32x4List&lt;/a&gt;、結果が新しい&lt;a href=&quot;../int32x4list-class&quot;&gt;Int32x4List&lt;/a&gt;、そうでない場合は、結果は正常な成長可能である &lt;code&gt;List&amp;lt;Int32x4&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fbfbd3f2af0f3f74db39fdc8c49843db15cea454" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;other&lt;/code&gt; is also a typed-data list, then the return list will be a typed data list capable of holding both unsigned 8-bit integers and the elements of &lt;code&gt;other&lt;/code&gt;, otherwise it'll be a normal list of integers.</source>
          <target state="translated">場合は &lt;code&gt;other&lt;/code&gt; また、入力されたデータのリストである、戻りリストは、符号なし8ビット整数との要素の両方保持することが可能な型付きデータリストとなり &lt;code&gt;other&lt;/code&gt; 、それ以外の場合は、整数の通常のリストになるでしょう。</target>
        </trans-unit>
        <trans-unit id="ac152565a5cb129e55db2b66b7d6cc51c10c8fcc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;padding&lt;/code&gt; has length different from 1, the result will not have length &lt;code&gt;width&lt;/code&gt;. This may be useful for cases where the padding is a longer string representing a single character, like &lt;code&gt;&quot;&amp;amp;nbsp;&quot;&lt;/code&gt; or &lt;code&gt;&quot;\u{10002}&lt;/code&gt;&quot;. In that case, the user should make sure that &lt;code&gt;this.length&lt;/code&gt; is the correct measure of the strings length.</source>
          <target state="translated">&lt;code&gt;padding&lt;/code&gt; 長さが1と異なる場合、結果の長さは &lt;code&gt;width&lt;/code&gt; にはなりません。これは、パディングが &lt;code&gt;&quot;&amp;amp;nbsp;&quot;&lt;/code&gt; ように単一の文字を表す長い文字列である場合に役立ちます。または &lt;code&gt;&quot;\u{10002}&lt;/code&gt; 」。その場合、ユーザーは &lt;code&gt;this.length&lt;/code&gt; が文字列の長さの正しい尺度であることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="7014e83dbe2ed7e27d38ec3eb1465b2a883aafb1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;path&lt;/code&gt; is a relative path, it will be interpreted relative to the current working directory (see &lt;a href=&quot;../directory/current&quot;&gt;Directory.current&lt;/a&gt;), when used.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; が相対パスの場合、使用すると、現在の作業ディレクトリ（&lt;a href=&quot;../directory/current&quot;&gt;Directory.currentを&lt;/a&gt;参照）を基準にして解釈されます。</target>
        </trans-unit>
        <trans-unit id="82c08ab81047d4065778a2a3f65ee61975cb3086" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;path&lt;/code&gt; is a relative path, it will be interpreted relative to the current working directory (see &lt;a href=&quot;current&quot;&gt;Directory.current&lt;/a&gt;), when used.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; が相対パスの場合、使用すると、現在の作業ディレクトリ（&lt;a href=&quot;current&quot;&gt;Directory.currentを&lt;/a&gt;参照）を基準にして解釈されます。</target>
        </trans-unit>
        <trans-unit id="6c30f34fa3b1540fbea136cf40b416a144a7e789" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;path&lt;/code&gt; is an absolute path, it will be immune to changes to the current working directory.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; が絶対パスの場合、現在の作業ディレクトリへの変更の影響を受けません。</target>
        </trans-unit>
        <trans-unit id="b2097cdf8543d1a3e6c8554e597ded106bbd38bc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;path&lt;/code&gt; is not empty, and it doesn't end in a directory separator, then a slash is added to the returned URI's path. In all other cases, the result is the same as returned by &lt;code&gt;Uri.file&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;path&lt;/code&gt; 空ではなく、それは、ディレクトリの区切りでは終わらない、そしてスラッシュが返されたURIのパスに追加されます。その他の場合はすべて、結果は &lt;code&gt;Uri.file&lt;/code&gt; によって返されるものと同じです。</target>
        </trans-unit>
        <trans-unit id="98bfd612ffdf00d77b86bca8055fd96c313b808d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;persistent&lt;/code&gt; is true, the application will request permission from the user to create lasting storage. This storage cannot be freed without the user's permission. Returns a &lt;a href=&quot;../../dart-async/future-class&quot;&gt;Future&lt;/a&gt; whose value stores a reference to the sandboxed file system for use. Because the file system is sandboxed, applications cannot access file systems created in other web pages.</source>
          <target state="translated">場合は &lt;code&gt;persistent&lt;/code&gt; 真である、アプリケーションは永続的なストレージを作成するために、ユーザーからの許可を要求します。このストレージは、ユーザーの許可なしに解放することはできません。使用するためにサンドボックス化されたファイルシステムへの参照を値に格納する&lt;a href=&quot;../../dart-async/future-class&quot;&gt;Future&lt;/a&gt;を返します。ファイルシステムはサンドボックス化されているため、アプリケーションは他のWebページで作成されたファイルシステムにアクセスできません。</target>
        </trans-unit>
        <trans-unit id="99f0d15eb5607da79b9207299df06d17b5e5814b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;port&lt;/code&gt; has the value &lt;code&gt;0&lt;/code&gt; an ephemeral port will be chosen by the system. The actual port used can be retrieved using the &lt;code&gt;port&lt;/code&gt; getter.</source>
          <target state="translated">&lt;code&gt;port&lt;/code&gt; の値が &lt;code&gt;0&lt;/code&gt; の場合、一時ポートがシステムによって選択されます。実際に使用される &lt;code&gt;port&lt;/code&gt; は、ポートゲッターを使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="cf80a8ca1c0742b9bad65e7affb57715bfd33aa1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;positionalArguments&lt;/code&gt; is null, it's considered an empty list. If &lt;code&gt;namedArguments&lt;/code&gt; is omitted or null, it is considered an empty map.</source>
          <target state="translated">場合 &lt;code&gt;positionalArguments&lt;/code&gt; が nullの場合、それは空のリストと考えられています。 &lt;code&gt;namedArguments&lt;/code&gt; が省略されているかnullの場合、空のマップと見なされます。</target>
        </trans-unit>
        <trans-unit id="c6364de739d3c45753e739645015a6590011ff8d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;protocolSelector&lt;/code&gt; is provided, &lt;code&gt;protocolSelector&lt;/code&gt; will be called to select what protocol to use, if any were provided by the client. &lt;code&gt;protocolSelector&lt;/code&gt; is should return either a &lt;a href=&quot;../../dart-core/string-class&quot;&gt;String&lt;/a&gt; or a &lt;a href=&quot;../../dart-async/future-class&quot;&gt;Future&lt;/a&gt; completing with a &lt;a href=&quot;../../dart-core/string-class&quot;&gt;String&lt;/a&gt;. The &lt;a href=&quot;../../dart-core/string-class&quot;&gt;String&lt;/a&gt; must exist in the list of protocols.</source>
          <target state="translated">場合 &lt;code&gt;protocolSelector&lt;/code&gt; が提供され、 &lt;code&gt;protocolSelector&lt;/code&gt; は、任意のがクライアントによって提供された場合には、使用にどのようなプロトコルを選択するために呼び出されます。 &lt;code&gt;protocolSelector&lt;/code&gt; は、いずれかを返さなければならないである&lt;a href=&quot;../../dart-core/string-class&quot;&gt;文字列&lt;/a&gt;または&lt;a href=&quot;../../dart-async/future-class&quot;&gt;将来&lt;/a&gt;に完成&lt;a href=&quot;../../dart-core/string-class&quot;&gt;ストリング&lt;/a&gt;。&lt;a href=&quot;../../dart-core/string-class&quot;&gt;文字列は、&lt;/a&gt;プロトコルのリストに存在している必要があります。</target>
        </trans-unit>
        <trans-unit id="a6c0819c0107487bf1c5c0ef28a977e0395ca8c5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;radians&lt;/code&gt; is not a finite number, the result is NaN.</source>
          <target state="translated">&lt;code&gt;radians&lt;/code&gt; が有限数でない場合、結果はNaNになります。</target>
        </trans-unit>
        <trans-unit id="9901a9b20bde16b6a62f1b8374edc1f7f3ed8f48" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;recursive&lt;/code&gt; is false, only the last directory in the path is created. If &lt;code&gt;recursive&lt;/code&gt; is true, all non-existing path components are created. If the directory already exists nothing is done.</source>
          <target state="translated">&lt;code&gt;recursive&lt;/code&gt; がfalseの場合、パスの最後のディレクトリのみが作成されます。場合は &lt;code&gt;recursive&lt;/code&gt; 真である、すべての非既存のパスのコンポーネントが作成されます。ディレクトリがすでに存在する場合、何も行われません。</target>
        </trans-unit>
        <trans-unit id="388b6cbe2933c9fae326bc0becafb29abaf1b422" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;recursive&lt;/code&gt; is false, the default, the file is created only if all directories in the path exist. If &lt;code&gt;recursive&lt;/code&gt; is true, all non-existing path components are created.</source>
          <target state="translated">場合は &lt;code&gt;recursive&lt;/code&gt; 偽で、デフォルト値は、ファイルが作成されている場合にのみ、パスが存在内のすべてのディレクトリ。場合は &lt;code&gt;recursive&lt;/code&gt; 真である、すべての非既存のパスのコンポーネントが作成されます。</target>
        </trans-unit>
        <trans-unit id="699640bd3b0b328f478e18adbc4a54660a0bcef4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;recursive&lt;/code&gt; is false, the default, the link is created only if all directories in its path exist. If &lt;code&gt;recursive&lt;/code&gt; is true, all non-existing path components are created. The directories in the path of &lt;code&gt;target&lt;/code&gt; are not affected, unless they are also in &lt;a href=&quot;../filesystementity/path&quot;&gt;path&lt;/a&gt;.</source>
          <target state="translated">場合は &lt;code&gt;recursive&lt;/code&gt; 偽で、デフォルト値は、リンクが作成されている場合にのみ、そのパスが存在内のすべてのディレクトリ。場合は &lt;code&gt;recursive&lt;/code&gt; 真である、すべての非既存のパスのコンポーネントが作成されます。 &lt;code&gt;target&lt;/code&gt; のパスにあるディレクトリは、それらも&lt;a href=&quot;../filesystementity/path&quot;&gt;pathに&lt;/a&gt;ない限り、影響を受けません。</target>
        </trans-unit>
        <trans-unit id="a9b5ee1225c5a466c6575985b3ff3cd4eb1f604c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;recursive&lt;/code&gt; is true, the &lt;a href=&quot;../filesystementity-class&quot;&gt;FileSystemEntity&lt;/a&gt; is deleted even if the type of the &lt;a href=&quot;../filesystementity-class&quot;&gt;FileSystemEntity&lt;/a&gt; doesn't match the content of the file system. This behavior allows &lt;a href=&quot;delete&quot;&gt;delete&lt;/a&gt; to be used to unconditionally delete any file system object.</source>
          <target state="translated">場合は &lt;code&gt;recursive&lt;/code&gt; 真である、&lt;a href=&quot;../filesystementity-class&quot;&gt;FileSystemEntityは&lt;/a&gt;のタイプも削除され&lt;a href=&quot;../filesystementity-class&quot;&gt;FileSystemEntityは、&lt;/a&gt;ファイルシステムの内容と一致していません。この動作により、ファイルシステムオブジェクトを無条件で削除&lt;a href=&quot;delete&quot;&gt;する&lt;/a&gt;ために削除を使用できます。</target>
        </trans-unit>
        <trans-unit id="e0cc2070e5bcaac09b528b086a68279fb42662d4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;recursive&lt;/code&gt; is true, the &lt;a href=&quot;../filesystementity-class&quot;&gt;FileSystemEntity&lt;/a&gt; is deleted even if the type of the &lt;a href=&quot;../filesystementity-class&quot;&gt;FileSystemEntity&lt;/a&gt; doesn't match the content of the file system. This behavior allows &lt;a href=&quot;deletesync&quot;&gt;deleteSync&lt;/a&gt; to be used to unconditionally delete any file system object.</source>
          <target state="translated">場合は &lt;code&gt;recursive&lt;/code&gt; 真である、&lt;a href=&quot;../filesystementity-class&quot;&gt;FileSystemEntityは&lt;/a&gt;のタイプも削除され&lt;a href=&quot;../filesystementity-class&quot;&gt;FileSystemEntityは、&lt;/a&gt;ファイルシステムの内容と一致していません。この動作により、&lt;a href=&quot;deletesync&quot;&gt;deleteSync&lt;/a&gt;を使用して、ファイルシステムオブジェクトを無条件で削除できます。</target>
        </trans-unit>
        <trans-unit id="4a9ba6d20c0f43f3d2569d2e08f9e709362ff57c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;requestClientCertificate&lt;/code&gt; is true, the server will request clients to authenticate with a client certificate. The server will advertise the names of trusted issuers of client certificates, getting them from a &lt;a href=&quot;../securitycontext-class&quot;&gt;SecurityContext&lt;/a&gt;, where they have been set using &lt;a href=&quot;../securitycontext/setclientauthorities&quot;&gt;SecurityContext.setClientAuthorities&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;code&gt;requestClientCertificate&lt;/code&gt; が trueの場合、サーバーは、クライアント証明書で認証するようにクライアントを要求します。サーバーからそれらを取得し、クライアント証明書の信頼された発行者の名前をアドバタイズします&lt;a href=&quot;../securitycontext-class&quot;&gt;SecurityContextが&lt;/a&gt;、彼らが使用して設定されている、&lt;a href=&quot;../securitycontext/setclientauthorities&quot;&gt;SecurityContext.setClientAuthoritiesを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f07265fb5b29e3e34e611dd9c01bdb779a551594" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;resumeSignal&lt;/code&gt; is provided, the stream subscription will undo the pause when the future completes, as if by a call to &lt;a href=&quot;resume&quot;&gt;resume&lt;/a&gt;. If the future completes with an error, the stream will still resume, but the error will be considered unhandled and is passed to &lt;a href=&quot;../zone/handleuncaughterror&quot;&gt;Zone.handleUncaughtError&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;code&gt;resumeSignal&lt;/code&gt; が提供され、将来の完了は、呼び出したかのようにするとき、ストリームのサブスクリプションは、一時停止を取り消します&lt;a href=&quot;resume&quot;&gt;再開する&lt;/a&gt;。futureがエラーで完了した場合でも、ストリームは再開されますが、エラーは未処理と見なされ、&lt;a href=&quot;../zone/handleuncaughterror&quot;&gt;Zone.handleUncaughtErrorに&lt;/a&gt;渡されます。</target>
        </trans-unit>
        <trans-unit id="c06de43b68250166f266385102c5e3470db55cbc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;retainNewlines&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, the returned String will not include the final line terminator. If &lt;code&gt;true&lt;/code&gt;, the returned String will include the line terminator. Default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;retainNewlines&lt;/code&gt; がある &lt;code&gt;false&lt;/code&gt; 、返される文字列は、最終的なラインターミネータは含まれません。場合は &lt;code&gt;true&lt;/code&gt; 、返される文字列は、ラインターミネータが含まれます。デフォルトは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a85db60e4846c317a6e90cf0c5ca9934cf2fdb74" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;reviver&lt;/code&gt; is omitted, it defaults to returning the value argument.</source>
          <target state="translated">場合 &lt;code&gt;reviver&lt;/code&gt; 値の引数を返すには、デフォルトが省略されています。</target>
        </trans-unit>
        <trans-unit id="52bd0ac1e16bab0b1b34f9bc4f1e07cabcd43346" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;runInShell&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, the process will be spawned through a system shell. On Linux and OS X, &lt;code&gt;/bin/sh&lt;/code&gt; is used, while &lt;code&gt;%WINDIR%\system32\cmd.exe&lt;/code&gt; is used on Windows.</source>
          <target state="translated">場合 &lt;code&gt;runInShell&lt;/code&gt; がある &lt;code&gt;true&lt;/code&gt; 、プロセスは、システムシェルを通じて生み出されます。LinuxおよびOS Xでは、 &lt;code&gt;/bin/sh&lt;/code&gt; が使用され、Windowsでは &lt;code&gt;%WINDIR%\system32\cmd.exe&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="bbd7e7824ceed2061addd7e97f0e752809f62665" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;runInShell&lt;/code&gt; is true, the process will be spawned through a system shell. On Linux and OS X, &lt;code&gt;/bin/sh&lt;/code&gt; is used, while &lt;code&gt;%WINDIR%\system32\cmd.exe&lt;/code&gt; is used on Windows.</source>
          <target state="translated">場合 &lt;code&gt;runInShell&lt;/code&gt; が真である、プロセスは、システムシェルを通じて生み出されます。LinuxおよびOS Xでは、 &lt;code&gt;/bin/sh&lt;/code&gt; が使用され、Windowsでは &lt;code&gt;%WINDIR%\system32\cmd.exe&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="a43d4ba2f5aad44367343310d18de73cd9b5f8bf" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;separator&lt;/code&gt; is provided, a &lt;code&gt;write&lt;/code&gt; with the &lt;code&gt;separator&lt;/code&gt; is performed between any two elements of objects`.</source>
          <target state="translated">場合 &lt;code&gt;separator&lt;/code&gt; 設けられている、 &lt;code&gt;write&lt;/code&gt; 付き &lt;code&gt;separator&lt;/code&gt; objects`の任意の二つの要素の間で行われます。</target>
        </trans-unit>
        <trans-unit id="51a947ef361c99fdc550de103dfe0abc36414813" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;shouldAdd&lt;/code&gt; is true, then we always add that &lt;code&gt;value&lt;/code&gt; to the element. If &lt;code&gt;shouldAdd&lt;/code&gt; is false then we always remove &lt;code&gt;value&lt;/code&gt; from the element.</source>
          <target state="translated">場合 &lt;code&gt;shouldAdd&lt;/code&gt; が真である、我々は常にその追加し &lt;code&gt;value&lt;/code&gt; 要素に。場合 &lt;code&gt;shouldAdd&lt;/code&gt; が falseで、我々は常に削除し &lt;code&gt;value&lt;/code&gt; 要素から。</target>
        </trans-unit>
        <trans-unit id="20adf6ece751009908b78b00ae984d72657b244c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;source&lt;/code&gt; and &lt;code&gt;target&lt;/code&gt; is the same list, overlapping source and target ranges are respected so that the target range ends up containing the initial content of the source range. Otherwise the order of element copying is not guaranteed.</source>
          <target state="translated">&lt;code&gt;source&lt;/code&gt; と &lt;code&gt;target&lt;/code&gt; が同じリストである場合、ソース範囲とターゲット範囲が重複しているため、ターゲット範囲にはソース範囲の初期コンテンツが含まれます。それ以外の場合、要素のコピーの順序は保証されません。</target>
        </trans-unit>
        <trans-unit id="c94f51b2b92e28fa0332082c53f849733483e4b6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; are provided, only split the contents of &lt;code&gt;lines.substring(start, end)&lt;/code&gt;. The &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; values must specify a valid sub-range of &lt;code&gt;lines&lt;/code&gt; (&lt;code&gt;0 &amp;lt;= start &amp;lt;= end &amp;lt;= lines.length&lt;/code&gt;).</source>
          <target state="translated">場合 &lt;code&gt;start&lt;/code&gt; と &lt;code&gt;end&lt;/code&gt; 設けられている、唯一の内容を分割する &lt;code&gt;lines.substring(start, end)&lt;/code&gt; 。 &lt;code&gt;start&lt;/code&gt; および &lt;code&gt;end&lt;/code&gt; の値は、有効なサブ範囲を指定しなければならない &lt;code&gt;lines&lt;/code&gt; （ &lt;code&gt;0 &amp;lt;= start &amp;lt;= end &amp;lt;= lines.length&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="b362645a26dfd3bf5d218824847f3af401a0378f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; are provided, only the sub-list of bytes from &lt;code&gt;start&lt;/code&gt; to &lt;code&gt;end&lt;/code&gt; (&lt;code&gt;end&lt;/code&gt; not inclusive) is used as input to the conversion.</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; と &lt;code&gt;end&lt;/code&gt; が指定されている場合、変換の入力として、 &lt;code&gt;start&lt;/code&gt; から &lt;code&gt;end&lt;/code&gt; バイトのサブリスト（ &lt;code&gt;end&lt;/code&gt; は含まれません）のみが使用されます。</target>
        </trans-unit>
        <trans-unit id="7d0346d8b596408e550afc8bcc24639a18d8b335" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; are provided, only the substring &lt;code&gt;string.substring(start, end)&lt;/code&gt; is converted.</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; と &lt;code&gt;end&lt;/code&gt; が指定されている場合、部分文字列 &lt;code&gt;string.substring(start, end)&lt;/code&gt; が変換されます。</target>
        </trans-unit>
        <trans-unit id="7f2d7ef1e6dadc26eddb988c70ead16d3812aa39" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; are provided, only the substring &lt;code&gt;string.substring(start, end)&lt;/code&gt; is used as input to the conversion.</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; と &lt;code&gt;end&lt;/code&gt; が指定されている場合、substring &lt;code&gt;string.substring(start, end)&lt;/code&gt; のみが変換への入力として使用されます。</target>
        </trans-unit>
        <trans-unit id="cfc5d203ed7fe6751a6c218accc12e500e3454be" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; are provided, they must specify a valid substring of &lt;code&gt;uri&lt;/code&gt;, and only the substring from &lt;code&gt;start&lt;/code&gt; to &lt;code&gt;end&lt;/code&gt; is parsed as a URI.</source>
          <target state="translated">場合は &lt;code&gt;start&lt;/code&gt; と &lt;code&gt;end&lt;/code&gt; 提供され、彼らは有効なストリングを指定しなければならない &lt;code&gt;uri&lt;/code&gt; 、とだけから部分 &lt;code&gt;start&lt;/code&gt; に &lt;code&gt;end&lt;/code&gt; URIとして解析されます。</target>
        </trans-unit>
        <trans-unit id="b3fac8fd4b1e986eddabb8b7964e7f121fa93ff4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; are provided, they must specify a valid substring of &lt;code&gt;uri&lt;/code&gt;, and only the substring from &lt;code&gt;start&lt;/code&gt; to &lt;code&gt;end&lt;/code&gt; is parsed as a URI. The &lt;code&gt;uri&lt;/code&gt; must not be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;start&lt;/code&gt; と &lt;code&gt;end&lt;/code&gt; 提供され、彼らは有効なストリングを指定しなければならない &lt;code&gt;uri&lt;/code&gt; 、とだけから部分 &lt;code&gt;start&lt;/code&gt; に &lt;code&gt;end&lt;/code&gt; URIとして解析されます。 &lt;code&gt;uri&lt;/code&gt; あってはならない &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e1c098ef4af8bcc4471b230fd4bf0e32a0d01d4b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; is provided, only the values of &lt;code&gt;charCodes&lt;/code&gt; at positions from &lt;code&gt;start&lt;/code&gt; to, but not including, &lt;code&gt;end&lt;/code&gt;, are used. The &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; values must satisfy &lt;code&gt;0 &amp;lt;= start &amp;lt;= end &amp;lt;= charCodes.length&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;start&lt;/code&gt; と &lt;code&gt;end&lt;/code&gt; 提供され、唯一の値 &lt;code&gt;charCodes&lt;/code&gt; 位置でから &lt;code&gt;start&lt;/code&gt; するが、含まない、 &lt;code&gt;end&lt;/code&gt; 、使用されています。 &lt;code&gt;start&lt;/code&gt; と &lt;code&gt;end&lt;/code&gt; の値が満たさなければならない &lt;code&gt;0 &amp;lt;= start &amp;lt;= end &amp;lt;= charCodes.length&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5a6f747fccf06a1afdc883d28b50e42b53d7ef96" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; is not provided, this method searches from the end of the list./Returns</source>
          <target state="translated">場合 &lt;code&gt;start&lt;/code&gt; list./Returnsの終わりから、このメソッドの検索を提供されていません</target>
        </trans-unit>
        <trans-unit id="425624196f9ddb40663b42ea73ee45ef776c998d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; is omitted, it defaults to the start of &lt;code&gt;input&lt;/code&gt;. If &lt;code&gt;end&lt;/code&gt; is omitted, it defaults to the end of &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;start&lt;/code&gt; 開始に省略され、それがデフォルトで &lt;code&gt;input&lt;/code&gt; 。場合は &lt;code&gt;end&lt;/code&gt; の終わりに省略され、デフォルト &lt;code&gt;input&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a0e6df94f2fbd5c1c94bc9d33ecc8b097026a2ea" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; is present, the file will be read from byte-offset &lt;code&gt;start&lt;/code&gt;. Otherwise from the beginning (index 0).</source>
          <target state="translated">場合は &lt;code&gt;start&lt;/code&gt; 存在する場合、ファイルは、バイトオフセットから読み込まれます &lt;code&gt;start&lt;/code&gt; 。それ以外の場合は最初から（インデックス0）。</target>
        </trans-unit>
        <trans-unit id="5639faa14b65b784c0431a5e843e1cc0e3a9ca28" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; is provided, it must be an integer in the range &lt;code&gt;0&lt;/code&gt; .. &lt;code&gt;string.length&lt;/code&gt;. In that case, this patten is tested against the string at the &lt;code&gt;start&lt;/code&gt; position. That is, a &lt;a href=&quot;../match-class&quot;&gt;Match&lt;/a&gt; is returned if the pattern can match a part of the string starting from position &lt;code&gt;start&lt;/code&gt;. Returns &lt;code&gt;null&lt;/code&gt; if the pattern doesn't match.</source>
          <target state="translated">場合 &lt;code&gt;start&lt;/code&gt; 設けられ、それは、範囲内の整数でなければならない &lt;code&gt;0&lt;/code&gt; .. &lt;code&gt;string.length&lt;/code&gt; 。その場合、このパターンは &lt;code&gt;start&lt;/code&gt; 位置のストリングに対してテストされます。つまり、パターンが文字列の &lt;code&gt;start&lt;/code&gt; から始まる部分に一致する場合、&lt;a href=&quot;../match-class&quot;&gt;Match&lt;/a&gt;が返されます。パターンが一致しない場合は &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="29d6150b730963e556e03ab9ad610ce325c46998" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; is provided, matching will start at that index.</source>
          <target state="translated">場合は &lt;code&gt;start&lt;/code&gt; 提供され、マッチングがそのインデックスから開始されます。</target>
        </trans-unit>
        <trans-unit id="e965a778f7b5f3f86d99a1ed7ed608f8c11c0424" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; is provided, only start looking for matches at &lt;code&gt;start&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; が指定されている場合は、startでのみ一致の検索を &lt;code&gt;start&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="aa5aa3d2d54d7c74b3154defe42f03e788b590ac" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;startIndex&lt;/code&gt; is provided, this method matches only at or after that index:</source>
          <target state="translated">&lt;code&gt;startIndex&lt;/code&gt; が指定されている場合、このメソッドはそのインデックス以降でのみ一致します。</target>
        </trans-unit>
        <trans-unit id="7745f08eb674b388408d7e1f47a6af996ecd31bb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sync&lt;/code&gt; is false, the event will always be fired at a later time, after the code adding the event has completed. In that case, no guarantees are given with regard to when multiple listeners get the events, except that each listener will get all events in the correct order. Each subscription handles the events individually. If two events are sent on an async controller with two listeners, one of the listeners may get both events before the other listener gets any. A listener must be subscribed both when the event is initiated (that is, when &lt;a href=&quot;add&quot;&gt;add&lt;/a&gt; is called) and when the event is later delivered, in order to receive the event.</source>
          <target state="translated">場合は &lt;code&gt;sync&lt;/code&gt; 偽でイベントを追加するコードが完了した後に、イベントは常に、後で発射されます。その場合、各リスナーがすべてのイベントを正しい順序で取得することを除いて、複数のリスナーがいつイベントを取得するかについては保証されません。各サブスクリプションは、イベントを個別に処理します。 2つのイベントが2つのリスナーを持つ非同期コントローラーで送信される場合、リスナーの1つが他のリスナーが取得する前に両方のイベントを取得する場合があります。イベントを受信するには、イベントが開始されたとき（つまり、&lt;a href=&quot;add&quot;&gt;add&lt;/a&gt;が呼び出されたとき）とイベントが後で配信されたときの両方で、リスナーをサブスクライブする必要があります。</target>
        </trans-unit>
        <trans-unit id="6091777d69b78761eb04b9eb21c196dc37853a2b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sync&lt;/code&gt; is true, events may be fired directly by the stream's subscriptions during an &lt;a href=&quot;add&quot;&gt;add&lt;/a&gt;, &lt;a href=&quot;adderror&quot;&gt;addError&lt;/a&gt; or &lt;a href=&quot;close&quot;&gt;close&lt;/a&gt; call. The returned stream controller is a &lt;a href=&quot;../synchronousstreamcontroller-class&quot;&gt;SynchronousStreamController&lt;/a&gt;, and must be used with the care and attention necessary to not break the &lt;a href=&quot;../stream-class&quot;&gt;Stream&lt;/a&gt; contract. See &lt;a href=&quot;../completer/completer.sync&quot;&gt;Completer.sync&lt;/a&gt; for some explanations on when a synchronous dispatching can be used. If in doubt, keep the controller non-sync.</source>
          <target state="translated">&lt;code&gt;sync&lt;/code&gt; がtrueの場合、&lt;a href=&quot;add&quot;&gt;add&lt;/a&gt;、&lt;a href=&quot;adderror&quot;&gt;addError&lt;/a&gt;または&lt;a href=&quot;close&quot;&gt;closeの&lt;/a&gt;呼び出し中に、ストリームのサブスクリプションによってイベントが直接発生する可能性があります。返されるストリームコントローラは&lt;a href=&quot;../synchronousstreamcontroller-class&quot;&gt;SynchronousStreamController&lt;/a&gt;であり、&lt;a href=&quot;../stream-class&quot;&gt;ストリーム&lt;/a&gt;コントラクトを壊さないように注意して使用する必要があります。同期ディスパッチを使用できる場合の説明については、&lt;a href=&quot;../completer/completer.sync&quot;&gt;Completer.sync&lt;/a&gt;を参照してください。疑わしい場合は、コントローラを非同期のままにします。</target>
        </trans-unit>
        <trans-unit id="bfee25c27eb1cf0ac6c0b98d9d00d29de3d2aacd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sync&lt;/code&gt; is true, the returned stream controller is a &lt;a href=&quot;../synchronousstreamcontroller-class&quot;&gt;SynchronousStreamController&lt;/a&gt;, and must be used with the care and attention necessary to not break the &lt;a href=&quot;../stream-class&quot;&gt;Stream&lt;/a&gt; contract. If in doubt, use the non-sync version.</source>
          <target state="translated">場合は &lt;code&gt;sync&lt;/code&gt; trueの場合、返されたストリームコントローラがある&lt;a href=&quot;../synchronousstreamcontroller-class&quot;&gt;SynchronousStreamController&lt;/a&gt;、そして壊さないように注意し、必要な注意を払って使用しなければならない&lt;a href=&quot;../stream-class&quot;&gt;ストリーム&lt;/a&gt;の契約を。疑わしい場合は、非同期バージョンを使用してください。</target>
        </trans-unit>
        <trans-unit id="b4cdceefdee8982a059c5d4bbd9b0981b5104896" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;tagName&lt;/code&gt; is not specified then this allows inline styles on all elements. Otherwise tagName limits the styles to the specified elements.</source>
          <target state="translated">&lt;code&gt;tagName&lt;/code&gt; が指定されていない場合、すべての要素でインラインスタイルが許可されます。それ以外の場合、tagNameはスタイルを指定された要素に制限します。</target>
        </trans-unit>
        <trans-unit id="f25a9a31943eaec96a49106c5ab026112ddd3258" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;test&lt;/code&gt; is omitted, it defaults to a function that always returns true. The &lt;code&gt;test&lt;/code&gt; function should not throw, but if it does, it is handled as if the &lt;code&gt;onError&lt;/code&gt; function had thrown.</source>
          <target state="translated">場合は &lt;code&gt;test&lt;/code&gt; 常に真を返す関数に、デフォルトを省略しています。 &lt;code&gt;test&lt;/code&gt; 機能は投げないはずですが、それがない場合は、それがあるかのように扱われる &lt;code&gt;onError&lt;/code&gt; 関数が投げていました。</target>
        </trans-unit>
        <trans-unit id="dad0597a5af5debacb2dc5d41efb19448b2e9718" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;test&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;onError&lt;/code&gt; is called with the error and possibly stack trace, and the returned future is completed with the result of this call in exactly the same way as for &lt;a href=&quot;then&quot;&gt;then&lt;/a&gt;'s &lt;code&gt;onError&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;test&lt;/code&gt; 返され &lt;code&gt;true&lt;/code&gt; 、 &lt;code&gt;onError&lt;/code&gt; エラーと多分スタックトレースと呼ばれ、そして返された未来をとまったく同じ方法で、この呼び出しの結果で終了し&lt;a href=&quot;then&quot;&gt;、その後&lt;/a&gt;の &lt;code&gt;onError&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="184dfacf5c7ab829a57fa4b5b8b3c114f3707197" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;test&lt;/code&gt; returns false, the exception is not handled by this &lt;code&gt;catchError&lt;/code&gt;, and the returned future completes with the same error and stack trace as this future.</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; がfalseを返す場合、例外はこの &lt;code&gt;catchError&lt;/code&gt; によって処理されず、返されたフューチャーはこのフューチャーと同じエラーとスタックトレースで完了します。</target>
        </trans-unit>
        <trans-unit id="32005e2a861163bf8f508748e143fded26457592" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;text&lt;/code&gt; contains characters that are meaningful in regular expressions, the resulting regular expression will match those characters literally. If &lt;code&gt;text&lt;/code&gt; contains no characters that have special meaning in a regular expression, it is returned unmodified.</source>
          <target state="translated">&lt;code&gt;text&lt;/code&gt; に正規表現で意味のある文字が含まれている場合、結果の正規表現はそれらの文字と文字通り一致します。正規表現で特別な意味を持つ文字が &lt;code&gt;text&lt;/code&gt; 含まれていない場合、テキストは変更されずに返されます。</target>
        </trans-unit>
        <trans-unit id="8e4ae78688a36dcbef70a438bf6589e55688ed8a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;this&lt;/code&gt; is not finite (&lt;code&gt;NaN&lt;/code&gt; or infinity), throws an &lt;a href=&quot;../unsupportederror-class&quot;&gt;UnsupportedError&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; が有限（ &lt;code&gt;NaN&lt;/code&gt; または無限大）でない場合は、&lt;a href=&quot;../unsupportederror-class&quot;&gt;UnsupportedErrorを&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="a45669a842cdfb8fe0789c52ad5052fce53a4c66" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;this&lt;/code&gt; was initialized with a reviver, then the parsing operation invokes the reviver on every object or list property that has been parsed. The arguments are the property name (&lt;a href=&quot;../../dart-core/string-class&quot;&gt;String&lt;/a&gt;) or list index (&lt;a href=&quot;../../dart-core/int-class&quot;&gt;int&lt;/a&gt;), and the value is the parsed value. The return value of the reviver is used as the value of that property instead the parsed value.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; がリバイバーで初期化された場合、解析操作は、解析されたすべてのオブジェクトまたはリストプロパティでリバイバーを呼び出します。引数はプロパティ名（&lt;a href=&quot;../../dart-core/string-class&quot;&gt;String&lt;/a&gt;）またはリストインデックス（&lt;a href=&quot;../../dart-core/int-class&quot;&gt;int&lt;/a&gt;）で、値は解析された値です。そのプロパティの値として、解析された値ではなく、リバイバーの戻り値が使用されます。</target>
        </trans-unit>
        <trans-unit id="a3f1d7e0fcf28f6dd40fce90b7a83dd32c3a792a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;toEncodable&lt;/code&gt; is omitted, it defaults to a function that returns the result of calling &lt;code&gt;.toJson()&lt;/code&gt; on the unencodable object.</source>
          <target state="translated">場合 &lt;code&gt;toEncodable&lt;/code&gt; を呼び出した結果を返す関数に省略され、それがデフォルト &lt;code&gt;.toJson()&lt;/code&gt; unencodableオブジェクト上を。</target>
        </trans-unit>
        <trans-unit id="f45aee4bbdaee2ee831ce66a0796bf253269a54b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;toEncodable&lt;/code&gt; is omitted, it defaults to calling &lt;code&gt;.toJson()&lt;/code&gt; on the object.</source>
          <target state="translated">場合 &lt;code&gt;toEncodable&lt;/code&gt; を呼び出すには、そのデフォルトは省略され &lt;code&gt;.toJson()&lt;/code&gt; オブジェクトの上に。</target>
        </trans-unit>
        <trans-unit id="8452b8d39f23fe4ff1fc3adcc403c1e8fac6702e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;type&lt;/code&gt; is either &lt;a href=&quot;../internetaddresstype/ipv4-constant&quot;&gt;InternetAddressType.IPv4&lt;/a&gt; or &lt;a href=&quot;../internetaddresstype/ipv6-constant&quot;&gt;InternetAddressType.IPv6&lt;/a&gt; it will only lookup addresses of the specified type. Default is &lt;a href=&quot;../internetaddresstype/any-constant&quot;&gt;InternetAddressType.any&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;code&gt;type&lt;/code&gt; どちらかである&lt;a href=&quot;../internetaddresstype/ipv4-constant&quot;&gt;InternetAddressType.IPv4&lt;/a&gt;または&lt;a href=&quot;../internetaddresstype/ipv6-constant&quot;&gt;InternetAddressType.IPv6&lt;/a&gt;それは、指定されたタイプの唯一のルックアップアドレスになります。デフォルトは&lt;a href=&quot;../internetaddresstype/any-constant&quot;&gt;InternetAddressType.any&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="94c5a733eec653b7008acd3d71a0751737c986d0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;typeArguments&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; or empty, the constructor is equivalent to calling &lt;a href=&quot;invocation.method&quot;&gt;Invocation.method&lt;/a&gt; with the remaining arguments. All the individual type arguments must be non-null.</source>
          <target state="translated">場合 &lt;code&gt;typeArguments&lt;/code&gt; がある &lt;code&gt;null&lt;/code&gt; または空、コンストラクタが呼び出すのと同じです&lt;a href=&quot;invocation.method&quot;&gt;Invocation.methodを&lt;/a&gt;、残りの引数を持ちます。個々の型引数はすべてnull以外である必要があります。</target>
        </trans-unit>
        <trans-unit id="94d8a2a508c65788d2b195561891d008ca524aae" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;unicode&lt;/code&gt; is enabled, then the pattern is treated as a Unicode pattern as described by the ECMAScript standard.</source>
          <target state="translated">&lt;code&gt;unicode&lt;/code&gt; が有効になっている場合、ECMAScript標準で記述されているように、パターンはUnicodeパターンとして扱われます。</target>
        </trans-unit>
        <trans-unit id="5a2eabf21d99725784ad3b5668e3a78dc1abd228" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;uri&lt;/code&gt; cannot reference a directory this throws &lt;a href=&quot;../../dart-core/unsupportederror-class&quot;&gt;UnsupportedError&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;uri&lt;/code&gt; がディレクトリを参照できない場合、&lt;a href=&quot;../../dart-core/unsupportederror-class&quot;&gt;UnsupportedErrorが&lt;/a&gt;スローされます。</target>
        </trans-unit>
        <trans-unit id="1a712971634d5ad52dfeb80764d1005a02742997" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;uri&lt;/code&gt; cannot reference a file this throws &lt;a href=&quot;../../dart-core/unsupportederror-class&quot;&gt;UnsupportedError&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;uri&lt;/code&gt; がファイルを参照できない場合、これは&lt;a href=&quot;../../dart-core/unsupportederror-class&quot;&gt;UnsupportedErrorを&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="dee5896cc43ad6b0df031a97b8d86a36cb92811d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is a future, the created future waits for the &lt;code&gt;value&lt;/code&gt; future to complete, and then completes with the same result. Since a &lt;code&gt;value&lt;/code&gt; future can complete with an error, so can the future created by &lt;a href=&quot;future.value&quot;&gt;Future.value&lt;/a&gt;, even if the name suggests otherwise.</source>
          <target state="translated">場合 &lt;code&gt;value&lt;/code&gt; 、将来、作成された将来の待機である &lt;code&gt;value&lt;/code&gt; 完全に将来、その後、同じ結果で完了します。以来 &lt;code&gt;value&lt;/code&gt; 将来がエラーで完了することができ、そうすることによって、将来に作成することができます&lt;a href=&quot;future.value&quot;&gt;Future.value&lt;/a&gt;名前がそう示唆しても、。</target>
        </trans-unit>
        <trans-unit id="91acd19b1eae8195c04d1ba6b3f01ccb7a1d10c0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is not a &lt;a href=&quot;../future-class&quot;&gt;Future&lt;/a&gt;, the created future is completed with the &lt;code&gt;value&lt;/code&gt; value, equivalently to &lt;code&gt;new Future&amp;lt;T&amp;gt;.sync(() =&amp;gt; value)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; が&lt;a href=&quot;../future-class&quot;&gt;Future&lt;/a&gt;でない場合、作成されたfutureは &lt;code&gt;value&lt;/code&gt; valueで完了します。これは、 &lt;code&gt;new Future&amp;lt;T&amp;gt;.sync(() =&amp;gt; value)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="723e4ae555a34cada2f2f68ac37145fc5ebf816a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;when&lt;/code&gt; is true, stop the program as if a breakpoint were hit at the following statement.</source>
          <target state="translated">場合 &lt;code&gt;when&lt;/code&gt; 真であるブレークポイントが次の文でヒットしているかのように、プログラムを停止します。</target>
        </trans-unit>
        <trans-unit id="b3529b52056fe0493008b7ed1b54f6bbd09dc33a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;when&lt;/code&gt; is true, stop the program as if a breakpoint were hit at the following statement. &lt;a href=&quot;debugger&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">場合 &lt;code&gt;when&lt;/code&gt; 真であるブレークポイントが次の文でヒットしているかのように、プログラムを停止します。&lt;a href=&quot;debugger&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9a78039282cdde63d953277547566a024146e90f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; are zero, the &quot;rectangle&quot; comprises only the single point &lt;code&gt;(left, top)&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;width&lt;/code&gt; と &lt;code&gt;height&lt;/code&gt; ゼロで、「矩形」は、単一点含む &lt;code&gt;(left, top)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cf96e273737dac3af426791a391c4e7b96432a7a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;width&lt;/code&gt; is already smaller than or equal to &lt;code&gt;this.length&lt;/code&gt;, no padding is added. A negative &lt;code&gt;width&lt;/code&gt; is treated as zero.</source>
          <target state="translated">場合 &lt;code&gt;width&lt;/code&gt; に既に以下である &lt;code&gt;this.length&lt;/code&gt; 、パディングが追加されていません。負の &lt;code&gt;width&lt;/code&gt; はゼロとして扱われます。</target>
        </trans-unit>
        <trans-unit id="1ae6a36bce67d3c4b53522d03d0e6d008a5aa401" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;withTrustedRoots&lt;/code&gt; is passed as &lt;code&gt;true&lt;/code&gt;, the &lt;a href=&quot;../securitycontext-class&quot;&gt;SecurityContext&lt;/a&gt; will be seeded by the trusted root certificates provided as explained below. To obtain a &lt;a href=&quot;../securitycontext-class&quot;&gt;SecurityContext&lt;/a&gt; containing trusted root certificates, &lt;a href=&quot;defaultcontext&quot;&gt;SecurityContext.defaultContext&lt;/a&gt; is usually sufficient, and should be used instead. However, if the &lt;a href=&quot;../securitycontext-class&quot;&gt;SecurityContext&lt;/a&gt; containing the trusted root certificates must be modified per-connection, then &lt;code&gt;withTrustedRoots&lt;/code&gt; should be used.</source>
          <target state="translated">場合 &lt;code&gt;withTrustedRoots&lt;/code&gt; をとして渡される &lt;code&gt;true&lt;/code&gt; 、&lt;a href=&quot;../securitycontext-class&quot;&gt;SecurityContextがは、&lt;/a&gt;以下に説明するように提供信頼できるルート証明書によって播種されます。信頼されたルート証明書を含む&lt;a href=&quot;../securitycontext-class&quot;&gt;SecurityContext&lt;/a&gt;を取得するには、通常&lt;a href=&quot;defaultcontext&quot;&gt;SecurityContext.defaultContext&lt;/a&gt;で十分であり、代わりに使用する必要があります。ただし、信頼されたルート証明書を含む&lt;a href=&quot;../securitycontext-class&quot;&gt;SecurityContext&lt;/a&gt;を接続ごとに変更する必要がある場合は、 &lt;code&gt;withTrustedRoots&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="7a7ffe99baea75a3859b3060a8c9a7b7d759d6dc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;writeHeaders&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, the status line and &lt;a href=&quot;headers&quot;&gt;headers&lt;/a&gt; will be written to the socket before it's detached. If &lt;code&gt;false&lt;/code&gt;, the socket is detached immediately, without any data written to the socket. Default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;writeHeaders&lt;/code&gt; がある &lt;code&gt;true&lt;/code&gt; 、ステータス行と&lt;a href=&quot;headers&quot;&gt;ヘッダは、&lt;/a&gt;それが切り離される前ソケットに書き込まれます。場合は &lt;code&gt;false&lt;/code&gt; を、ソケットはソケットに書き込まれたデータなしで、すぐに切り離されます。デフォルトは &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f928bea98a106344c0d4c3be7265d469c7e5f8a8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;x&lt;/code&gt; is an &lt;a href=&quot;../dart-core/int-class&quot;&gt;int&lt;/a&gt; and &lt;code&gt;exponent&lt;/code&gt; is a non-negative &lt;a href=&quot;../dart-core/int-class&quot;&gt;int&lt;/a&gt;, the result is an &lt;a href=&quot;../dart-core/int-class&quot;&gt;int&lt;/a&gt;, otherwise both arguments are converted to doubles first, and the result is a &lt;a href=&quot;../dart-core/double-class&quot;&gt;double&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;code&gt;x&lt;/code&gt; あり&lt;a href=&quot;../dart-core/int-class&quot;&gt;、INT&lt;/a&gt;及び &lt;code&gt;exponent&lt;/code&gt; 非負である&lt;a href=&quot;../dart-core/int-class&quot;&gt;INT&lt;/a&gt;、結果は&lt;a href=&quot;../dart-core/int-class&quot;&gt;INT&lt;/a&gt;、そうでなければ両方の引数は、第一倍に変換され、結果は&lt;a href=&quot;../dart-core/double-class&quot;&gt;ダブル&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d64df907879a86a49e181814a6e528290e538b52" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;../../dart-core/list-class&quot;&gt;List&lt;/a&gt; or &lt;a href=&quot;../../dart-core/map-class&quot;&gt;Map&lt;/a&gt; contains a reference to itself, directly or through other lists or maps, it cannot be serialized and a &lt;a href=&quot;../jsoncyclicerror-class&quot;&gt;JsonCyclicError&lt;/a&gt; is thrown.</source>
          <target state="translated">&lt;a href=&quot;../../dart-core/list-class&quot;&gt;リスト&lt;/a&gt;または&lt;a href=&quot;../../dart-core/map-class&quot;&gt;マップ&lt;/a&gt;に、それ自体への参照が直接または他のリストまたはマップを通じて含まれている場合、シリアル化できず、&lt;a href=&quot;../jsoncyclicerror-class&quot;&gt;JsonCyclicError&lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="a0017772d01c2ccaef1bfc17f5ad454ee056f145" translate="yes" xml:space="preserve">
          <source>If a bad certificate is received on a connection attempt, the library calls the function that was the value of badCertificateCallback at the time the request is made, even if the value of badCertificateCallback has changed since then.</source>
          <target state="translated">接続試行時に不正な証明書を受信した場合、ライブラリはリクエスト時にbadCertificateCallbackの値が変更されていた場合でも、リクエスト時にbadCertificateCallbackの値であった関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="b4d4ab4f56acb2f628a75ec0dfb0f9cf64811b8e" translate="yes" xml:space="preserve">
          <source>If a call to &lt;code&gt;action&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt; or a &lt;a href=&quot;../future-class&quot;&gt;Future&lt;/a&gt; that completes to &lt;code&gt;false&lt;/code&gt;, iteration ends and the future returned by &lt;a href=&quot;dowhile&quot;&gt;doWhile&lt;/a&gt; is completed with a &lt;code&gt;null&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;action&lt;/code&gt; 呼び出しが &lt;code&gt;false&lt;/code&gt; または &lt;code&gt;false&lt;/code&gt; に完了する&lt;a href=&quot;../future-class&quot;&gt;Future&lt;/a&gt;を返す場合、反復は終了し、&lt;a href=&quot;dowhile&quot;&gt;doWhile&lt;/a&gt;によって返されるfutureは &lt;code&gt;null&lt;/code&gt; 値で完了します。</target>
        </trans-unit>
        <trans-unit id="4549e47b7027525214dc12c8442898d2a7905031" translate="yes" xml:space="preserve">
          <source>If a call to &lt;code&gt;action&lt;/code&gt; throws or a future returned by &lt;code&gt;action&lt;/code&gt; completes with an error, iteration ends and the future returned by &lt;a href=&quot;dowhile&quot;&gt;doWhile&lt;/a&gt; completes with the same error.</source>
          <target state="translated">&lt;code&gt;action&lt;/code&gt; 呼び出しがスローされるか、 &lt;code&gt;action&lt;/code&gt; によって返されたフューチャーがエラーで完了した場合、反復は終了し、&lt;a href=&quot;dowhile&quot;&gt;doWhile&lt;/a&gt;によって返されたフューチャーは同じエラーで完了します。</target>
        </trans-unit>
        <trans-unit id="72415f6303e648e97535970d314161f27c3eb0eb" translate="yes" xml:space="preserve">
          <source>If a char-code value is greater than 16-bits, it is decomposed into a surrogate pair:</source>
          <target state="translated">文字コード値が16ビットより大きい場合は、サロゲートペアに分解されます。</target>
        </trans-unit>
        <trans-unit id="80803d2bdac4647241101f1b3452d663540f920b" translate="yes" xml:space="preserve">
          <source>If a class is annotated with &lt;code&gt;@proxy&lt;/code&gt;, or it implements any class that is annotated, then all member accesses are allowed on an object of that type. As such, it is not a static type warning to access any member of the object which is not implemented by the class, or to call a method with a different number of parameters than it is declared with.</source>
          <target state="translated">クラスに &lt;code&gt;@proxy&lt;/code&gt; で注釈が付けられている場合、またはクラスが注釈付きのクラスを実装している場合、そのタイプのオブジェクトに対するすべてのメンバーアクセスが許可されます。そのため、クラスによって実装されていないオブジェクトのメンバーにアクセスしたり、宣言されているパラメーターとは異なる数のパラメーターを使用してメソッドを呼び出したりすることは、静的な型の警告ではありません。</target>
        </trans-unit>
        <trans-unit id="7051e0c206c2bd60085d1c3a6b817dbff94b6570" translate="yes" xml:space="preserve">
          <source>If a class is deprecated, so is every member of it.</source>
          <target state="translated">クラスが非推奨になった場合、そのクラスのすべてのメンバーも同様に非推奨になります。</target>
        </trans-unit>
        <trans-unit id="d362837a88dac8a595461d1e47ca0e184fe517d9" translate="yes" xml:space="preserve">
          <source>If a class is not intending to implement the feature, it should throw an &lt;a href=&quot;unsupportederror-class&quot;&gt;UnsupportedError&lt;/a&gt; instead. This error is only intended for use during development.</source>
          <target state="translated">クラスが機能を実装するつもりがない場合は、代わりに&lt;a href=&quot;unsupportederror-class&quot;&gt;UnsupportedError&lt;/a&gt;をスローする必要があります。このエラーは、開発中の使用のみを目的としています。</target>
        </trans-unit>
        <trans-unit id="b3f94c1f65b57c1da5926289c1d009ae878b66a5" translate="yes" xml:space="preserve">
          <source>If a done event occurs before the value is found, the future completes with a &lt;a href=&quot;../../dart-core/rangeerror-class&quot;&gt;RangeError&lt;/a&gt;.</source>
          <target state="translated">値が見つかる前にdoneイベントが発生した場合、futureは&lt;a href=&quot;../../dart-core/rangeerror-class&quot;&gt;RangeErrorで&lt;/a&gt;完了します。</target>
        </trans-unit>
        <trans-unit id="4962a2278927a05c55f92795ce5fb674b45e9476" translate="yes" xml:space="preserve">
          <source>If a future does not have a successor when it completes with an error, it forwards the error message to the global error-handler. This behavior makes sure that no error is silently dropped. However, it also means that error handlers should be installed early, so that they are present as soon as a future is completed with an error. The following example demonstrates this potential bug:</source>
          <target state="translated">未来がエラーで完了したときに後継者がいない場合、エラーメッセージをグローバルエラーハンドラに転送します。この動作により、エラーが黙って落とされることはありません。しかし、これはまた、エラーハンドラを早期にインストールして、未来がエラーで完了したときにすぐに存在するようにすべきであることを意味します。次の例は、この潜在的なバグを示しています。</target>
        </trans-unit>
        <trans-unit id="5124fe2ef7ce66398023069efbe53cc99bf10a90" translate="yes" xml:space="preserve">
          <source>If a key of &lt;code&gt;newEntries&lt;/code&gt; is already in this map, the corresponding value is overwritten.</source>
          <target state="translated">&lt;code&gt;newEntries&lt;/code&gt; のキーがこのマップにすでにある場合、対応する値は上書きされます。</target>
        </trans-unit>
        <trans-unit id="f1604fbbdf4912186bae0d852af28f2a22d39b73" translate="yes" xml:space="preserve">
          <source>If a key of &lt;code&gt;other&lt;/code&gt; is already in this map, its value is overwritten.</source>
          <target state="translated">&lt;code&gt;other&lt;/code&gt; のキーがすでにこのマップにある場合、その値は上書きされます。</target>
        </trans-unit>
        <trans-unit id="d91fbccb27219d53d1fc52c433d89a742329642b" translate="yes" xml:space="preserve">
          <source>If a library is deprecated, so is every member of it.</source>
          <target state="translated">ライブラリが非推奨になった場合、そのライブラリのすべてのメンバーも非推奨になります。</target>
        </trans-unit>
        <trans-unit id="ede31f467a779e98b46cc27c5d9e811e2f48c312" translate="yes" xml:space="preserve">
          <source>If a library with the same canonicalized uri has already been loaded, the existing library will be returned. (The isolate will not load a new copy of the library.)</source>
          <target state="translated">同じ正規化されたウリを持つライブラリが既にロードされている場合は、既存のライブラリが返されます。(アイソレートはライブラリの新しいコピーをロードしません)。</target>
        </trans-unit>
        <trans-unit id="547550421e5fe7b0eb7ddb10ed1cc2cceb9943f4" translate="yes" xml:space="preserve">
          <source>If a non-future value is returned, the returned future is completed with that value.</source>
          <target state="translated">非未来値が返された場合、返された未来はその値で完結します。</target>
        </trans-unit>
        <trans-unit id="57c5a14e0824a186091e615d0d22013cd5182cb7" translate="yes" xml:space="preserve">
          <source>If a periodic timer with a non-zero duration is delayed too much, so more than one tick should have happened, all but the last tick in the past are considered &quot;missed&quot;, and no callback is invoked for them. The &lt;a href=&quot;tick&quot;&gt;tick&lt;/a&gt; count reflects the number of durations that have passed and not the number of callback invocations that have happened.</source>
          <target state="translated">ゼロ以外の期間の定期的なタイマーの遅延が大きすぎる場合、複数のティックが発生しているはずであり、過去の最後のティックを除くすべてが「欠落」と見なされ、コールバックは呼び出されません。&lt;a href=&quot;tick&quot;&gt;目盛り&lt;/a&gt;カウントが起こったコールバック呼び出しの数を通過していない期間の数を反映しています。</target>
        </trans-unit>
        <trans-unit id="50ff94a0e1e731a1ae693528b6672b15624f5fd9" translate="yes" xml:space="preserve">
          <source>If a proxy requires authentication it is possible to configure the username and password as well. Use the format &lt;code&gt;username:password@hostname:port&lt;/code&gt; to include the username and password. Alternatively the API &lt;a href=&quot;addproxycredentials&quot;&gt;addProxyCredentials&lt;/a&gt; can be used to set credentials for proxies which require authentication.</source>
          <target state="translated">プロキシで認証が​​必要な場合は、ユーザー名とパスワードも設定できます。 &lt;code&gt;username:password@hostname:port&lt;/code&gt; の形式を使用して、ユーザー名とパスワードを含めます。または、API &lt;a href=&quot;addproxycredentials&quot;&gt;addProxyCredentials&lt;/a&gt;を使用して、認証が必要なプロキシの認証情報を設定できます。</target>
        </trans-unit>
        <trans-unit id="1a96c999e62ca99952937ffcd256595c52dedeef" translate="yes" xml:space="preserve">
          <source>If a subclass overrides &lt;a href=&quot;hashcode&quot;&gt;hashCode&lt;/a&gt;, it should override the &lt;a href=&quot;../../dart-core/object/operator_equals&quot;&gt;operator ==&lt;/a&gt; operator as well to maintain consistency.</source>
          <target state="translated">サブクラスが&lt;a href=&quot;hashcode&quot;&gt;hashCodeを&lt;/a&gt;オーバーライドする場合、一貫性を維持するために、&lt;a href=&quot;../../dart-core/object/operator_equals&quot;&gt;演算子==&lt;/a&gt;演算子もオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="9ddf097307e469793c5b0729af7ba9e3f285856f" translate="yes" xml:space="preserve">
          <source>If a subclass overrides &lt;a href=&quot;hashcode&quot;&gt;hashCode&lt;/a&gt;, it should override the &lt;a href=&quot;../object/operator_equals&quot;&gt;operator ==&lt;/a&gt; operator as well to maintain consistency.</source>
          <target state="translated">サブクラスが&lt;a href=&quot;hashcode&quot;&gt;hashCodeを&lt;/a&gt;オーバーライドする場合、一貫性を維持するために、&lt;a href=&quot;../object/operator_equals&quot;&gt;演算子==&lt;/a&gt;演算子もオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="d0ec53f9d29ce2d8024df4c473d3f98acba26055" translate="yes" xml:space="preserve">
          <source>If a subclass overrides &lt;a href=&quot;hashcode&quot;&gt;hashCode&lt;/a&gt;, it should override the &lt;a href=&quot;operator_equals&quot;&gt;operator ==&lt;/a&gt; operator as well to maintain consistency.</source>
          <target state="translated">サブクラスが&lt;a href=&quot;hashcode&quot;&gt;hashCodeを&lt;/a&gt;オーバーライドする場合、一貫性を維持するために、&lt;a href=&quot;operator_equals&quot;&gt;演算子==&lt;/a&gt;演算子もオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="4415259772579cc570842b3c5bba33e9925c5a1c" translate="yes" xml:space="preserve">
          <source>If a subclass overrides the equality operator it should override the &lt;a href=&quot;hashcode&quot;&gt;hashCode&lt;/a&gt; method as well to maintain consistency.</source>
          <target state="translated">サブクラスが等価演算子をオーバーライドする場合は、一貫性を維持するために、&lt;a href=&quot;hashcode&quot;&gt;hashCode&lt;/a&gt;メソッドもオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="9b6664d8677849d6449becdb506e5d74f5c7bf20" translate="yes" xml:space="preserve">
          <source>If a uriPolicy is not specified then the default uriPolicy will be used.</source>
          <target state="translated">uriPolicyが指定されていない場合は、デフォルトのuriPolicyが使用されます。</target>
        </trans-unit>
        <trans-unit id="fbe00c7effd7cbc80c1bb73ac31728822000fcc1" translate="yes" xml:space="preserve">
          <source>If a value is returned, it becomes the result of the original invocation.</source>
          <target state="translated">値が返された場合は、元の呼び出しの結果になります。</target>
        </trans-unit>
        <trans-unit id="20dc6616e6e68f635ab8b7cc25d99c409292376f" translate="yes" xml:space="preserve">
          <source>If a value of any other type is attempted to be serialized, the &lt;code&gt;toEncodable&lt;/code&gt; function provided in the constructor is called with the value as argument. The result, which must be a directly serializable value, is serialized instead of the original value.</source>
          <target state="translated">他のタイプの値をシリアル化しようとすると、コンストラクターで提供される &lt;code&gt;toEncodable&lt;/code&gt; 関数が、その値を引数として呼び出されます。直接シリアライズ可能な値である必要がある結果は、元の値の代わりにシリアライズされます。</target>
        </trans-unit>
        <trans-unit id="c9c9b5b3b3d60596b2e3d621fae841353feb7157" translate="yes" xml:space="preserve">
          <source>If a variable is deprecated, so are its implicit getter and setter.</source>
          <target state="translated">変数が非推奨になった場合、暗黙のゲッターとセッターも同様です。</target>
        </trans-unit>
        <trans-unit id="856f2fe9483be2607d8b83222c325c665b36520f" translate="yes" xml:space="preserve">
          <source>If all accessed elements of &lt;code&gt;source&lt;/code&gt; are actually instances of &lt;code&gt;T&lt;/code&gt;, and if all elements added to the returned set are actually instance of &lt;code&gt;S&lt;/code&gt;, then the returned set can be used as a &lt;code&gt;Set&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;source&lt;/code&gt; アクセスされたすべての要素が実際に &lt;code&gt;T&lt;/code&gt; のインスタンスであり、返されたセットに追加されたすべての要素が実際に &lt;code&gt;S&lt;/code&gt; のインスタンスである場合、返された &lt;code&gt;Set&amp;lt;T&amp;gt;&lt;/code&gt; はSet &amp;lt;T&amp;gt;として使用できます。</target>
        </trans-unit>
        <trans-unit id="9084a806c0d91d8350d9aed22d81b554b80f69cd" translate="yes" xml:space="preserve">
          <source>If all accessed elements of &lt;code&gt;source&lt;/code&gt; are actually instances of &lt;code&gt;T&lt;/code&gt;, and if all elements stored into the returned list are actually instance of &lt;code&gt;S&lt;/code&gt;, then the returned list can be used as a &lt;code&gt;List&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;source&lt;/code&gt; のアクセスされたすべての要素が実際に &lt;code&gt;T&lt;/code&gt; のインスタンスであり、返されたリストに格納されているすべての要素が実際に &lt;code&gt;S&lt;/code&gt; のインスタンスである場合、返された &lt;code&gt;List&amp;lt;T&amp;gt;&lt;/code&gt; はList &amp;lt;T&amp;gt;として使用できます。</target>
        </trans-unit>
        <trans-unit id="03129eed491f699bec8c7414830279fe06a60458" translate="yes" xml:space="preserve">
          <source>If all accessed elements of &lt;code&gt;source&lt;/code&gt; are actually instances of &lt;code&gt;T&lt;/code&gt;, and if all elements stored into the returned queue are actually instance of &lt;code&gt;S&lt;/code&gt;, then the returned queue can be used as a &lt;code&gt;Queue&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;source&lt;/code&gt; アクセスされたすべての要素が実際には &lt;code&gt;T&lt;/code&gt; のインスタンスであり、返されたキューに格納されているすべての要素が実際には &lt;code&gt;S&lt;/code&gt; のインスタンスである場合、返された &lt;code&gt;Queue&amp;lt;T&amp;gt;&lt;/code&gt; はQueue &amp;lt;T&amp;gt;として使用できます。</target>
        </trans-unit>
        <trans-unit id="598b3b33938b8305ac8c85037955547f78c7fccd" translate="yes" xml:space="preserve">
          <source>If all accessed entries of &lt;code&gt;source&lt;/code&gt; are have &lt;code&gt;K2&lt;/code&gt; keys and &lt;code&gt;V2&lt;/code&gt; values and if all entries added to the returned map have &lt;code&gt;K&lt;/code&gt; keys and &lt;code&gt;V&lt;/code&gt;] values, then the returned map can be used as a &lt;code&gt;Map&amp;lt;K2, V2&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">すべてのアクセスエントリ場合 &lt;code&gt;source&lt;/code&gt; 有する &lt;code&gt;K2&lt;/code&gt; キーと &lt;code&gt;V2&lt;/code&gt; の値と返されたマップに追加されたすべてのエントリを持っている場合に &lt;code&gt;K&lt;/code&gt; のキーと &lt;code&gt;V&lt;/code&gt; ]の値を、戻さマップとして使用することができる &lt;code&gt;Map&amp;lt;K2, V2&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="55e9834e32ab427fb47d126bd508749d11d540e2" translate="yes" xml:space="preserve">
          <source>If an IP version 6 (IPv6) address is used, both IP version 6 (IPv6) and version 4 (IPv4) connections will be accepted. To restrict this to version 6 (IPv6) only, use &lt;code&gt;v6Only&lt;/code&gt; to set version 6 only.</source>
          <target state="translated">IPバージョン6（IPv6）アドレスが使用されている場合、IPバージョン6（IPv6）接続とバージョン4（IPv4）接続の両方が受け入れられます。これをバージョン6（IPv6）のみに制限するには、 &lt;code&gt;v6Only&lt;/code&gt; を使用してバージョン6のみを設定します。</target>
        </trans-unit>
        <trans-unit id="ff3fd52d5bbfebcc69854d6375578d2ce38d2c96" translate="yes" xml:space="preserve">
          <source>If an IP version 6 (IPv6) address is used, both IP version 6 (IPv6) and version 4 (IPv4) connections will be accepted. To restrict this to version 6 (IPv6) only, use &lt;code&gt;v6Only&lt;/code&gt; to set version 6 only. However, if the address is &lt;a href=&quot;../internetaddress/loopbackipv6&quot;&gt;InternetAddress.loopbackIPv6&lt;/a&gt;, only IP version 6 (IPv6) connections will be accepted.</source>
          <target state="translated">IPバージョン6（IPv6）アドレスが使用されている場合、IPバージョン6（IPv6）接続とバージョン4（IPv4）接続の両方が受け入れられます。これをバージョン6（IPv6）のみに制限するには、 &lt;code&gt;v6Only&lt;/code&gt; を使用してバージョン6のみを設定します。ただし、アドレスが&lt;a href=&quot;../internetaddress/loopbackipv6&quot;&gt;InternetAddress.loopbackIPv6の&lt;/a&gt;場合、IPバージョン6（IPv6）接続のみが受け入れられます。</target>
        </trans-unit>
        <trans-unit id="1966364740a1709274c1cfad40ed3a6eb9046fa2" translate="yes" xml:space="preserve">
          <source>If an asynchronous method is pending it is also not possible to call any synchronous methods. This will also throw a &lt;a href=&quot;filesystemexception-class&quot;&gt;FileSystemException&lt;/a&gt;.</source>
          <target state="translated">非同期メソッドが保留中の場合、同期メソッドを呼び出すこともできません。これも&lt;a href=&quot;filesystemexception-class&quot;&gt;FileSystemExceptionを&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="b7a2c102c1c6f7914666a30715a2de18b638e197" translate="yes" xml:space="preserve">
          <source>If an error event occurs before the first data event, the returned future is completed with that error.</source>
          <target state="translated">最初のデータイベントの前にエラーイベントが発生した場合、返された未来はそのエラーで完了します。</target>
        </trans-unit>
        <trans-unit id="4afa3b6424d103bf7bcdb525d2d8dcc53ae73829" translate="yes" xml:space="preserve">
          <source>If an error event occurs before the value is found, the future completes with this error.</source>
          <target state="translated">値が見つかる前にエラーイベントが発生した場合、このエラーで未来は終了します。</target>
        </trans-unit>
        <trans-unit id="634d7714b8e7656a13a76ff2931853646b065111" translate="yes" xml:space="preserve">
          <source>If an error occur when trying to join the multicase group an exception is thrown.</source>
          <target state="translated">マルチケースグループに参加しようとしたときにエラーが発生した場合、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="4ee8427e0bb93356536377029d44db78b6cdb131" translate="yes" xml:space="preserve">
          <source>If an error occur when trying to join the multicast group an exception is thrown.</source>
          <target state="translated">マルチキャストグループに参加しようとしたときにエラーが発生した場合、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="b650013e0096b9b3bf4828e07be823981429d072" translate="yes" xml:space="preserve">
          <source>If an error occurs before the response is available, this future will complete with an error.</source>
          <target state="translated">レスポンスが利用可能になる前にエラーが発生した場合、このフューチャーはエラーで終了します。</target>
        </trans-unit>
        <trans-unit id="2e13ea0869aa760283f12c739f8509092142ed60" translate="yes" xml:space="preserve">
          <source>If an error occurs synchronously in &lt;code&gt;body&lt;/code&gt;, then throwing in the &lt;code&gt;onError&lt;/code&gt; handler makes the call to &lt;code&gt;runZone&lt;/code&gt; throw that error, and otherwise the call to &lt;code&gt;runZoned&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;body&lt;/code&gt; で同期的にエラーが発生した場合、 &lt;code&gt;onError&lt;/code&gt; ハンドラーをスローすると、 &lt;code&gt;runZone&lt;/code&gt; の呼び出しによってそのエラーがスローされます。それ以外の場合は、 &lt;code&gt;runZoned&lt;/code&gt; の呼び出しによって &lt;code&gt;null&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="46d0fbd9bd215f5baf521270d33a58b2f306d133" translate="yes" xml:space="preserve">
          <source>If an error occurs, or if this stream ends without finding a match and with no &lt;code&gt;orElse&lt;/code&gt; function provided, the returned future is completed with an error.</source>
          <target state="translated">エラーが発生した場合、または一致が見つからず、 &lt;code&gt;orElse&lt;/code&gt; 関数が指定されていない状態でこのストリームが終了した場合、返されたfutureはエラーで完了します。</target>
        </trans-unit>
        <trans-unit id="e404669c17737d1621864e3ed1172e2559413cb2" translate="yes" xml:space="preserve">
          <source>If an event is added in a setting that isn't known to be another event, it may cause the stream's listener to get that event before the listener is ready to handle it. We promise that after calling &lt;a href=&quot;stream/listen&quot;&gt;Stream.listen&lt;/a&gt;, you won't get any events until the code doing the listen has completed. Calling &lt;a href=&quot;synchronousstreamcontroller/add&quot;&gt;add&lt;/a&gt; in response to a function call of unknown origin may break that promise.</source>
          <target state="translated">別のイベントとして認識されていない設定でイベントが追加された場合、リスナーがイベントを処理する準備ができる前に、ストリームのリスナーがそのイベントを取得する可能性があります。&lt;a href=&quot;stream/listen&quot;&gt;Stream.listen&lt;/a&gt;を呼び出した後は、listenを実行するコードが完了するまでイベントを取得しないことをお約束します。呼び出し&lt;a href=&quot;synchronousstreamcontroller/add&quot;&gt;アドオンを&lt;/a&gt;原因不明の関数呼び出しに応じてしても、その約束を破ることがあります。</target>
        </trans-unit>
        <trans-unit id="e19f510f53abbe430d4dd7bc9b1f89ce2cf94a00" translate="yes" xml:space="preserve">
          <source>If an instance of a class specified in &lt;a href=&quot;metatargets&quot;&gt;metaTargets&lt;/a&gt; is used as metadata annotation on a library, class, field or method, that library, class, field or method is added to the set of targets for reflection.</source>
          <target state="translated">&lt;a href=&quot;metatargets&quot;&gt;metaTargets&lt;/a&gt;で指定されたクラスのインスタンスがライブラリ、クラス、フィールド、またはメソッドのメタデータアノテーションとして使用される場合、そのライブラリ、クラス、フィールド、またはメソッドがリフレクションのターゲットのセットに追加されます。</target>
        </trans-unit>
        <trans-unit id="08037e1e4e4f435abc8c63d75d5a41a4797b0c2f" translate="yes" xml:space="preserve">
          <source>If an isolate is paused more than once using the same capability, only one resume with that capability is needed to end the pause.</source>
          <target state="translated">アイソレートが同じケイパビリティを使用して複数回一時停止された場合、一時停止を終了するには、そのケイパビリティを使用した1回のレジュームのみが必要です。</target>
        </trans-unit>
        <trans-unit id="16ff14744dd32ef83e0107b19d2da5a4019c18e9" translate="yes" xml:space="preserve">
          <source>If an isolate is paused using more than one capability, each pause must be individually ended before the isolate resumes.</source>
          <target state="translated">複数のケイパビリティを使用してアイソレートを一時停止する場合、アイソレートを再開する前に各一時停止を個別に終了させなければなりません。</target>
        </trans-unit>
        <trans-unit id="0bf5a403adec2f5a7a771baf54eea8d678d64212" translate="yes" xml:space="preserve">
          <source>If an object equal to &lt;code&gt;object&lt;/code&gt; is in the set, return it.</source>
          <target state="translated">オブジェクトと等しい &lt;code&gt;object&lt;/code&gt; がセット内にある場合は、それを返します。</target>
        </trans-unit>
        <trans-unit id="da786e5d5468c7e4fb77c6f680a72584915fb63f" translate="yes" xml:space="preserve">
          <source>If an object equal to &lt;code&gt;object&lt;/code&gt; is in the set, return it. &lt;a href=&quot;../dart-core/set/lookup&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">オブジェクトと等しい &lt;code&gt;object&lt;/code&gt; がセット内にある場合は、それを返します。&lt;a href=&quot;../dart-core/set/lookup&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3b093e104e80b947933483d302645403d615768e" translate="yes" xml:space="preserve">
          <source>If an object equal to &lt;code&gt;object&lt;/code&gt; is in the set, return it. &lt;a href=&quot;set/lookup&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">オブジェクトと等しい &lt;code&gt;object&lt;/code&gt; がセット内にある場合は、それを返します。&lt;a href=&quot;set/lookup&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0aec63e35577a5fca3972acee58534fc4dfe14b7" translate="yes" xml:space="preserve">
          <source>If an object equal to &lt;code&gt;object&lt;/code&gt; is in the set, return it. &lt;a href=&quot;setmixin/lookup&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">オブジェクトと等しい &lt;code&gt;object&lt;/code&gt; がセット内にある場合は、それを返します。&lt;a href=&quot;setmixin/lookup&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1ccd13a98a45b8439406e491724290c242afdfec" translate="yes" xml:space="preserve">
          <source>If an object equal to &lt;code&gt;object&lt;/code&gt; is in the set, return it. &lt;a href=&quot;splaytreeset/lookup&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">オブジェクトと等しい &lt;code&gt;object&lt;/code&gt; がセット内にある場合は、それを返します。&lt;a href=&quot;splaytreeset/lookup&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6b8d3ad5314fc38d55cd685517b680ebbe3813c6" translate="yes" xml:space="preserve">
          <source>If an object is serialized more than once, &lt;a href=&quot;convert&quot;&gt;convert&lt;/a&gt; may cache the text for it. In other words, if the content of an object changes after it is first serialized, the new values may not be reflected in the result.</source>
          <target state="translated">オブジェクトが複数回シリアル化されている場合、&lt;a href=&quot;convert&quot;&gt;convert&lt;/a&gt;はそのテキストをキャッシュすることがあります。つまり、オブジェクトのコンテンツが最初にシリアル化された後に変更された場合、新しい値が結果に反映されない可能性があります。</target>
        </trans-unit>
        <trans-unit id="bea05a1180ff8a1d8f8ea68bec2cecb22cb4be4c" translate="yes" xml:space="preserve">
          <source>If an object isn't directly serializable, the serializer calls the &lt;code&gt;toJson&lt;/code&gt; method on the object. If that call fails, the error will be stored in the &lt;a href=&quot;jsonunsupportedobjecterror/cause&quot;&gt;cause&lt;/a&gt; field. If the call returns an object that isn't directly serializable, the &lt;a href=&quot;jsonunsupportedobjecterror/cause&quot;&gt;cause&lt;/a&gt; is null.</source>
          <target state="translated">オブジェクトが直接シリアライズ可能でない場合、シリアライザはオブジェクトの &lt;code&gt;toJson&lt;/code&gt; メソッドを呼び出します。その呼び出しが失敗した場合、エラーは&lt;a href=&quot;jsonunsupportedobjecterror/cause&quot;&gt;原因&lt;/a&gt;フィールドに格納されます。呼び出しが直接シリアル化できないオブジェクトを返す場合、&lt;a href=&quot;jsonunsupportedobjecterror/cause&quot;&gt;原因&lt;/a&gt;はnullです。</target>
        </trans-unit>
        <trans-unit id="bf51f3799572942b937c1ed27188cc04181484f9" translate="yes" xml:space="preserve">
          <source>If any future completes with an error, then the returned future completes with that error. If further futures also complete with errors, those errors are discarded.</source>
          <target state="translated">いずれかの未来がエラーで完了した場合、返された未来はそのエラーで完了します。それ以上の未来もエラーで完了した場合、それらのエラーは破棄されます。</target>
        </trans-unit>
        <trans-unit id="d30968dc7357088aedd8c91ddfe1c7a1ab378344" translate="yes" xml:space="preserve">
          <source>If any of &lt;code&gt;userInfo&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt; or &lt;code&gt;port&lt;/code&gt; are provided, the URI has an authority according to &lt;a href=&quot;hasauthority&quot;&gt;hasAuthority&lt;/a&gt;.</source>
          <target state="translated">いずれかの場合 &lt;code&gt;userInfo&lt;/code&gt; 、 &lt;code&gt;host&lt;/code&gt; または &lt;code&gt;port&lt;/code&gt; 提供され、URIはに応じて権限を有している&lt;a href=&quot;hasauthority&quot;&gt;hasAuthority&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="31a7b86fbd7ddef447d22b2d6c748aa2676ece35" translate="yes" xml:space="preserve">
          <source>If any of these are passed in the &lt;code&gt;headers&lt;/code&gt; map they will be ignored.</source>
          <target state="translated">これらのいずれかが &lt;code&gt;headers&lt;/code&gt; マップで渡された場合、それらは無視されます。</target>
        </trans-unit>
        <trans-unit id="a41c9b66d762b8a937bf20c01d106134a7b5d258" translate="yes" xml:space="preserve">
          <source>If at end of file, -1 is returned.</source>
          <target state="translated">ファイルの末尾にある場合は-1を返す。</target>
        </trans-unit>
        <trans-unit id="6ccbfc5c8b541d7772fef50cc52d6bd1ecb0b6a3" translate="yes" xml:space="preserve">
          <source>If attributeFilter is specified then attributes must be true.</source>
          <target state="translated">attributeFilterが指定されている場合、属性はtrueでなければなりません。</target>
        </trans-unit>
        <trans-unit id="c2587b011279aa13991a26ec11a3861017b35ddb" translate="yes" xml:space="preserve">
          <source>If attributeOldValue is true then attributes must also be true.</source>
          <target state="translated">attributeOldValueが真であれば、属性も真でなければなりません。</target>
        </trans-unit>
        <trans-unit id="f73b5bbbdfd6bb717c982e3311937cf3349a180a" translate="yes" xml:space="preserve">
          <source>If both &lt;code&gt;query&lt;/code&gt; and &lt;code&gt;queryParameters&lt;/code&gt; are omitted or &lt;code&gt;null&lt;/code&gt;, the URI has no query part.</source>
          <target state="translated">&lt;code&gt;query&lt;/code&gt; と &lt;code&gt;queryParameters&lt;/code&gt; の両方が省略されているか &lt;code&gt;null&lt;/code&gt; の場合、URIにはクエリ部分がありません。</target>
        </trans-unit>
        <trans-unit id="734c9c951c2a3714752c18fed25d14d0d7f41c2c" translate="yes" xml:space="preserve">
          <source>If both &lt;code&gt;this&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt; is zero, the result is also zero.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; と &lt;code&gt;other&lt;/code&gt; 両方がゼロの場合、結果もゼロになります。</target>
        </trans-unit>
        <trans-unit id="1fca44623751d2d1149c71a5513c88d41eb23cc1" translate="yes" xml:space="preserve">
          <source>If both operands are &lt;a href=&quot;../int-class&quot;&gt;int&lt;/a&gt;s then &lt;code&gt;a ~/ b&lt;/code&gt; performs the truncating integer division.</source>
          <target state="translated">両方のオペランドが&lt;a href=&quot;../int-class&quot;&gt;int&lt;/a&gt;の場合、a〜 &lt;code&gt;a ~/ b&lt;/code&gt; は切り捨て整数除算を実行します。</target>
        </trans-unit>
        <trans-unit id="abdf3ebd95a748eedfcd193332a2486f396f0edc" translate="yes" xml:space="preserve">
          <source>If both operands are doubles, they are equal if they have the same representation, except that:</source>
          <target state="translated">両方のオペランドが二重になっている場合、それを除いて同じ表現であれば等しくなります。</target>
        </trans-unit>
        <trans-unit id="a9b4e50467608b3ec5cae8b4b1ee373b139c77a8" translate="yes" xml:space="preserve">
          <source>If both operands are integers, they are equal if they have the same value.</source>
          <target state="translated">両方のオペランドが整数の場合、同じ値を持つ場合は等しくなります。</target>
        </trans-unit>
        <trans-unit id="a53d45524270e80d7395b94b67f289dd638397b4" translate="yes" xml:space="preserve">
          <source>If both operands are non-negative, the result is non-negative, otherwise the result is negative.</source>
          <target state="translated">両方のオペランドが非負であれば、結果は非負であり、そうでなければ結果は負です。</target>
        </trans-unit>
        <trans-unit id="b8ad358a032e96bcca43a8684f328c60734493c2" translate="yes" xml:space="preserve">
          <source>If both operands are non-negative, the result is non-negative, otherwise the result us negative.</source>
          <target state="translated">両方のオペランドが非負であれば、結果は非負であり、そうでなければ結果は負です。</target>
        </trans-unit>
        <trans-unit id="eda29f22e9e16a7897fb5288fd4ed26d601ab8b6" translate="yes" xml:space="preserve">
          <source>If calling &lt;a href=&quot;../../dart-core/iterator/movenext&quot;&gt;Iterator.moveNext&lt;/a&gt; on &lt;code&gt;elements.iterator&lt;/code&gt; throws, the stream emits that error and then it closes. If reading &lt;a href=&quot;../../dart-core/iterator/current&quot;&gt;Iterator.current&lt;/a&gt; on &lt;code&gt;elements.iterator&lt;/code&gt; throws, the stream emits that error, but keeps iterating.</source>
          <target state="translated">&lt;code&gt;elements.iterator&lt;/code&gt; で&lt;a href=&quot;../../dart-core/iterator/movenext&quot;&gt;Iterator.moveNext&lt;/a&gt;を呼び出すと、ストリームがそのエラーを発行して閉じます。 &lt;code&gt;elements.iterator&lt;/code&gt; で&lt;a href=&quot;../../dart-core/iterator/current&quot;&gt;Iterator.current&lt;/a&gt;を読み取ると、スローすると、ストリームはそのエラーを発行しますが、繰り返し続けます。</target>
        </trans-unit>
        <trans-unit id="cde68b82b66b78c1ba0e73e43f2c020990d2095a" translate="yes" xml:space="preserve">
          <source>If calling &lt;code&gt;computation&lt;/code&gt; returns a &lt;a href=&quot;../future-class&quot;&gt;Future&lt;/a&gt;, completion of the created future will wait until the returned future completes, and will then complete with the same result.</source>
          <target state="translated">呼び出しの &lt;code&gt;computation&lt;/code&gt; が&lt;a href=&quot;../future-class&quot;&gt;Futureを&lt;/a&gt;返す場合、作成されたfutureの完了は、返されたfutureが完了するまで待機し、その後同じ結果で完了します。</target>
        </trans-unit>
        <trans-unit id="6e1457b98c400ee283b788859f70eefc42cca912" translate="yes" xml:space="preserve">
          <source>If calling &lt;code&gt;computation&lt;/code&gt; returns a &lt;code&gt;Future&amp;lt;T&amp;gt;&lt;/code&gt;, that future is returned.</source>
          <target state="translated">呼び出しの &lt;code&gt;computation&lt;/code&gt; が &lt;code&gt;Future&amp;lt;T&amp;gt;&lt;/code&gt; 返す場合、そのフューチャーが返されます。</target>
        </trans-unit>
        <trans-unit id="4fdcf6284a6c6dcb0bbd12b72a1a3b1ff011e156" translate="yes" xml:space="preserve">
          <source>If calling &lt;code&gt;computation&lt;/code&gt; returns a non-future value, a future is returned which has been completed with that value.</source>
          <target state="translated">&lt;code&gt;computation&lt;/code&gt; 呼び出すと将来の値以外が返される場合、その値で完了したフューチャーが返されます。</target>
        </trans-unit>
        <trans-unit id="7213442183aeb918d71480ab56cc45cb52e7f281" translate="yes" xml:space="preserve">
          <source>If calling &lt;code&gt;computation&lt;/code&gt; returns a non-future value, the returned future is completed with that value.</source>
          <target state="translated">&lt;code&gt;computation&lt;/code&gt; 呼び出すと将来の値が返されない場合、返されたフューチャーはその値で完了します。</target>
        </trans-unit>
        <trans-unit id="87b2f31b5c0be8cab14d78600769fa495fce92e9" translate="yes" xml:space="preserve">
          <source>If calling &lt;code&gt;computation&lt;/code&gt; throws, the created future will complete with the error.</source>
          <target state="translated">呼び出し &lt;code&gt;computation&lt;/code&gt; スローする場合、作成されたフューチャーはエラーで完了します。</target>
        </trans-unit>
        <trans-unit id="a4b2eb34bf0455deab39f3a941df9b0a5699d617" translate="yes" xml:space="preserve">
          <source>If calling &lt;code&gt;computation&lt;/code&gt; throws, the returned future is completed with the error.</source>
          <target state="translated">呼び出し &lt;code&gt;computation&lt;/code&gt; スローした場合、返されたフューチャーはエラーで完了します。</target>
        </trans-unit>
        <trans-unit id="1fffdd901cef1aede38cf3043c360dfca27451f4" translate="yes" xml:space="preserve">
          <source>If character set is not supported &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">文字セットがサポートされていない場合は、 &lt;code&gt;null&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="3629d90a73ecaacaa27aa2be741183cc17f54fe4" translate="yes" xml:space="preserve">
          <source>If characterDataOldValue is true then characterData must be true.</source>
          <target state="translated">characterDataOldValueがtrueの場合、characterDataはtrueでなければなりません。</target>
        </trans-unit>
        <trans-unit id="7d31a444e50e1b291d840c2bfc07eaf510793e0d" translate="yes" xml:space="preserve">
          <source>If disabled, input from to console will not be echoed.</source>
          <target state="translated">無効にした場合、コンソールへの入力はエコーされません。</target>
        </trans-unit>
        <trans-unit id="382eb33890106c811295975b541f1c74fdb3885c" translate="yes" xml:space="preserve">
          <source>If either number is non-zero, the result is the numerically greatest integer dividing both &lt;code&gt;this&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;.</source>
          <target state="translated">いずれかの数値がゼロ以外の場合、結果は &lt;code&gt;this&lt;/code&gt; と &lt;code&gt;other&lt;/code&gt; の両方を除算した数値的に最大の整数になります。</target>
        </trans-unit>
        <trans-unit id="d67f55ed29c9de27fe97856b75a8923601e08375" translate="yes" xml:space="preserve">
          <source>If either operand is a &lt;a href=&quot;../double-class&quot;&gt;double&lt;/a&gt; then the result of the truncating division &lt;code&gt;a ~/ b&lt;/code&gt; is equivalent to &lt;code&gt;(a / b).truncate().toInt()&lt;/code&gt;.</source>
          <target state="translated">一方のオペランドである場合&lt;a href=&quot;../double-class&quot;&gt;、二重&lt;/a&gt;切り捨て除算のその結果 &lt;code&gt;a ~/ b&lt;/code&gt; と同等である &lt;code&gt;(a / b).truncate().toInt()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="24e5f6edd7c45b437566f1152f7ed578c180797f" translate="yes" xml:space="preserve">
          <source>If enabled, characters are delayed until a new-line character is entered. If disabled, characters will be available as typed.</source>
          <target state="translated">有効にすると、改行文字が入力されるまで文字が遅延します。無効にすると、文字は入力された通りに利用可能になります。</target>
        </trans-unit>
        <trans-unit id="28fd8b57db06cb3fea8f09df3a5022ffd6922863" translate="yes" xml:space="preserve">
          <source>If end-of-file is reached after any bytes have been read from stdin, that data is returned without a line terminator. Returns &lt;code&gt;null&lt;/code&gt; if no bytes preceded the end of input.</source>
          <target state="translated">stdinからバイトが読み取られた後でファイルの終わりに達した場合、そのデータは行末記号なしで返されます。入力の終わりの前にバイトがない場合は、 &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="42d7fc3ac9f4bbcefa4c122e752ba48e4f71a2f6" translate="yes" xml:space="preserve">
          <source>If errors are fatal, any uncaught error will terminate the isolate event loop and shut down the isolate.</source>
          <target state="translated">エラーが致命的な場合、捕捉できなかったエラーはisolateイベントループを終了し、isolateをシャットダウンします。</target>
        </trans-unit>
        <trans-unit id="3c816d0eafdc3b3ba1bd8b8a9afee60ab2bad5db" translate="yes" xml:space="preserve">
          <source>If evaluating any of &lt;em&gt;c1, ..., cn&lt;/em&gt; would cause a compilation error the effect is the same as if a non-reflective compilation error had been encountered.</source>
          <target state="translated">&lt;em&gt;c1、...、cnの&lt;/em&gt;いずれかを評価するとコンパイルエラーが発生する場合、その効果は非反射コンパイルエラーが発生した場合と同じです。</target>
        </trans-unit>
        <trans-unit id="2deb93a9ac2dd4b9c226e36c4518de820f9faa16" translate="yes" xml:space="preserve">
          <source>If evaluating the expression causes a compilation error, the effect is the same as if a non-reflective compilation error had been encountered.</source>
          <target state="translated">式を評価することでコンパイルエラーが発生した場合、反射的ではないコンパイルエラーが発生した場合と同じ効果が得られます。</target>
        </trans-unit>
        <trans-unit id="d5bff3731f3661a3ff04e6e76221ab806055ed52" translate="yes" xml:space="preserve">
          <source>If evaluating the expression throws an exception &lt;em&gt;e&lt;/em&gt; (that it does not catch), this method throws &lt;em&gt;e&lt;/em&gt;.</source>
          <target state="translated">式を評価すると例外&lt;em&gt;e&lt;/em&gt;（スローされない）がスローされる場合、このメソッドは&lt;em&gt;eを&lt;/em&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="b2397f23d11145f0cbcd6ab61e884c549ef09566" translate="yes" xml:space="preserve">
          <source>If executing &lt;code&gt;computation&lt;/code&gt; throws, the returned future is completed with the thrown error.</source>
          <target state="translated">&lt;code&gt;computation&lt;/code&gt; スローを実行すると、返されたフューチャーはスローされたエラーで完了します。</target>
        </trans-unit>
        <trans-unit id="5be1e8659520d8c6672c4e7b62fcf70fb8991f4f" translate="yes" xml:space="preserve">
          <source>If input is a string, the &lt;a href=&quot;tostring&quot;&gt;toString&lt;/a&gt; method may represent this offset as a line and character position. The offset should be inside the string, or at the end of the string.</source>
          <target state="translated">入力が文字列の場合、&lt;a href=&quot;tostring&quot;&gt;toString&lt;/a&gt;メソッドはこのオフセットを行と文字の位置として表すことができます。オフセットは文字列の内側、または文字列の最後になければなりません。</target>
        </trans-unit>
        <trans-unit id="095a95416ae1f9297f8ca38f7876ecaa246f56c1" translate="yes" xml:space="preserve">
          <source>If it is &lt;code&gt;true&lt;/code&gt; (and not overridden at the method invocation) &lt;a href=&quot;decode&quot;&gt;decode&lt;/a&gt; and the &lt;a href=&quot;decoder&quot;&gt;decoder&lt;/a&gt; replace invalid (or unterminated) octet sequences with the Unicode Replacement character &lt;code&gt;U+FFFD&lt;/code&gt; (�). Otherwise they throw a &lt;a href=&quot;../../dart-core/formatexception-class&quot;&gt;FormatException&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; の場合（メソッドの呼び出し時にオーバーライドされない場合）、&lt;a href=&quot;decode&quot;&gt;デコード&lt;/a&gt;と&lt;a href=&quot;decoder&quot;&gt;デコーダー&lt;/a&gt;は無効な（または終了していない）オクテットシーケンスをUnicode置換文字 &lt;code&gt;U+FFFD&lt;/code&gt; （）に置き換えます。それ以外の場合は、&lt;a href=&quot;../../dart-core/formatexception-class&quot;&gt;FormatException&lt;/a&gt;をスローします。</target>
        </trans-unit>
        <trans-unit id="d5adbf48e5175318e41f1587de394e766d37f8bf" translate="yes" xml:space="preserve">
          <source>If it is &lt;code&gt;true&lt;/code&gt;, &lt;a href=&quot;convert&quot;&gt;convert&lt;/a&gt; replaces invalid bytes with the Unicode Replacement character &lt;code&gt;U+FFFD&lt;/code&gt; (�). Otherwise it throws a &lt;a href=&quot;../../dart-core/formatexception-class&quot;&gt;FormatException&lt;/a&gt;.</source>
          <target state="translated">もしそうであれば &lt;code&gt;true&lt;/code&gt; 、&lt;a href=&quot;convert&quot;&gt;変換は&lt;/a&gt; Unicodeの置換文字に無効なバイトを置き換え &lt;code&gt;U+FFFD&lt;/code&gt; （）。それ以外の場合は、&lt;a href=&quot;../../dart-core/formatexception-class&quot;&gt;FormatExceptionを&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="33fac95623d997fae12f9c017c9819536f81e052" translate="yes" xml:space="preserve">
          <source>If it is &lt;code&gt;true&lt;/code&gt;&lt;a href=&quot;convert&quot;&gt;convert&lt;/a&gt; replaces invalid (or unterminated) character sequences with the Unicode Replacement character &lt;code&gt;U+FFFD&lt;/code&gt; (�). Otherwise it throws a &lt;a href=&quot;../../dart-core/formatexception-class&quot;&gt;FormatException&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; の場合、&lt;a href=&quot;convert&quot;&gt;convert&lt;/a&gt;は無効な（または終了していない）文字シーケンスをUnicode置換文字 &lt;code&gt;U+FFFD&lt;/code&gt; （）に置き換えます。それ以外の場合は、&lt;a href=&quot;../../dart-core/formatexception-class&quot;&gt;FormatExceptionを&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="8169e731b364dd289084efad1b2c943c25104031" translate="yes" xml:space="preserve">
          <source>If it is known that the remote server requires authentication for all requests, it is advisable to use &lt;a href=&quot;addcredentials&quot;&gt;addCredentials&lt;/a&gt; directly, or manually set the &lt;code&gt;'authorization'&lt;/code&gt; header on the request to avoid the overhead of a failed request, or issues due to missing request payload on retried request.</source>
          <target state="translated">リモートサーバーがすべてのリクエストに対して認証を必要とすることがわかっている場合は、&lt;a href=&quot;addcredentials&quot;&gt;addCredentialsを&lt;/a&gt;直接使用するか、リクエストに &lt;code&gt;'authorization'&lt;/code&gt; ヘッダーを手動で設定して、失敗したリクエストのオーバーヘッド、またはリクエストペイロードの欠落による問題を回避することをお勧めしますリクエストを再試行しました。</target>
        </trans-unit>
        <trans-unit id="8c11f3348fbb19baf0e7dc64413ffe0a49b6a85c" translate="yes" xml:space="preserve">
          <source>If multiple &lt;code&gt;entries&lt;/code&gt; have the same key, later occurrences overwrite the earlier ones.</source>
          <target state="translated">複数の &lt;code&gt;entries&lt;/code&gt; が同じキーを持っている場合、後の出現が前のエントリを上書きします。</target>
        </trans-unit>
        <trans-unit id="7de01bc9ad819e29c449397685bb349e17da04cc" translate="yes" xml:space="preserve">
          <source>If neither &lt;code&gt;equals&lt;/code&gt;, &lt;code&gt;hashCode&lt;/code&gt;, nor &lt;code&gt;isValidKey&lt;/code&gt; is provided, the default &lt;code&gt;isValidKey&lt;/code&gt; instead accepts all keys. The default equality and hashcode operations are assumed to work on all objects.</source>
          <target state="translated">&lt;code&gt;equals&lt;/code&gt; 、 &lt;code&gt;hashCode&lt;/code&gt; 、 &lt;code&gt;isValidKey&lt;/code&gt; のいずれも指定されていない場合、デフォルトの &lt;code&gt;isValidKey&lt;/code&gt; は代わりにすべてのキーを受け入れます。デフォルトの等価操作とハッシュコード操作は、すべてのオブジェクトで機能すると想定されています。</target>
        </trans-unit>
        <trans-unit id="95a3fa5071f6162ee724b4d885447ba0dd0b0df8" translate="yes" xml:space="preserve">
          <source>If neither &lt;code&gt;equals&lt;/code&gt;, &lt;code&gt;hashCode&lt;/code&gt;, nor &lt;code&gt;isValidKey&lt;/code&gt; is provided, the default &lt;code&gt;isValidKey&lt;/code&gt; instead accepts all values. The default equality and hashcode operations are assumed to work on all objects.</source>
          <target state="translated">&lt;code&gt;equals&lt;/code&gt; 、 &lt;code&gt;hashCode&lt;/code&gt; 、 &lt;code&gt;isValidKey&lt;/code&gt; のいずれも指定されていない場合、デフォルトの &lt;code&gt;isValidKey&lt;/code&gt; は代わりにすべての値を受け入れます。デフォルトの等価操作とハッシュコード操作は、すべてのオブジェクトで機能すると想定されています。</target>
        </trans-unit>
        <trans-unit id="a7122fbc04b4040def169fc67896b585b3c497a9" translate="yes" xml:space="preserve">
          <source>If newPath identifies an existing directory, that directory is replaced. If newPath identifies an existing file the operation fails and an exception is thrown.</source>
          <target state="translated">newPath が既存のディレクトリを特定した場合は、そのディレクトリを置換します。newPath が既存のファイルを識別した場合、操作は失敗し、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="c8034979fb74fefab5b38858eebf9baab2ba3cc4" translate="yes" xml:space="preserve">
          <source>If newPath identifies an existing directory, that directory is replaced. If newPath identifies an existing file, the operation fails and the future completes with an exception.</source>
          <target state="translated">newPath が既存のディレクトリを識別した場合は、そのディレクトリが置換されます。newPath が既存のファイルを識別した場合、操作は失敗し、例外を除いて将来は完了します。</target>
        </trans-unit>
        <trans-unit id="c4215676feb28ddda52a57fb2f83f9605c762bf8" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;onError&lt;/code&gt; is supplied, it defaults to a function that throws a &lt;a href=&quot;../formatexception-class&quot;&gt;FormatException&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;onError&lt;/code&gt; が指定されていない場合、デフォルトで&lt;a href=&quot;../formatexception-class&quot;&gt;FormatException&lt;/a&gt;をスローする関数になります。</target>
        </trans-unit>
        <trans-unit id="8ee06e89272cc185d825245a19a970a66c6df977" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;radix&lt;/code&gt; is given then it defaults to 10. In this case, the &lt;code&gt;source&lt;/code&gt; digits may also start with &lt;code&gt;0x&lt;/code&gt;, in which case the number is interpreted as a hexadecimal integer literal, When &lt;code&gt;int&lt;/code&gt; is implemented by 64-bit signed integers, hexadecimal integer literals may represent values larger than 2&lt;sup&gt;63&lt;/sup&gt;, in which case the value is parsed as if it is an &lt;em&gt;unsigned&lt;/em&gt; number, and the resulting value is the corresponding signed integer value.</source>
          <target state="translated">&lt;code&gt;radix&lt;/code&gt; が指定されていない場合、デフォルトは10です。この場合、 &lt;code&gt;source&lt;/code&gt; 数字も &lt;code&gt;0x&lt;/code&gt; で始まる場合があります。この場合、数値は16進整数リテラルとして解釈されます &lt;code&gt;int&lt;/code&gt; が64ビット符号付き整数で実装されている場合、16進整数リテラルは2 &lt;sup&gt;63&lt;/sup&gt;より大きい値を表す場合があります。この場合、値は&lt;em&gt;符号なしの&lt;/em&gt;数値であるかのように解析され、結果の値は対応する符号付き整数値になります。</target>
        </trans-unit>
        <trans-unit id="1070ad12b669f7c131790a3ed3b9b7fc7a474c7d" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;radix&lt;/code&gt; is given then it defaults to 10. In this case, the &lt;code&gt;source&lt;/code&gt; digits may also start with &lt;code&gt;0x&lt;/code&gt;, in which case the number is interpreted as a hexadecimal literal, which effectively means that the &lt;code&gt;0x&lt;/code&gt; is ignored and the radix is instead set to 16.</source>
          <target state="translated">&lt;code&gt;radix&lt;/code&gt; が指定されていない場合、デフォルトは10です。この場合、 &lt;code&gt;source&lt;/code&gt; 数字も &lt;code&gt;0x&lt;/code&gt; で始まる場合があります。この場合、数値は16進リテラルとして解釈されます。これは、実質的に &lt;code&gt;0x&lt;/code&gt; が無視され、基数が代わりに設定されることを意味します16に。</target>
        </trans-unit>
        <trans-unit id="87f0b670b59624ead1d50623b8c19cbcb2029c48" translate="yes" xml:space="preserve">
          <source>If no charset is provided the default of ISO-8859-1 (Latin 1) is be used.</source>
          <target state="translated">文字セットが指定されていない場合は、デフォルトのISO-8859-1 (Latin 1)が使用されます。</target>
        </trans-unit>
        <trans-unit id="974f363331aaf46c5b50b243925583924e92be4c" translate="yes" xml:space="preserve">
          <source>If no charset is provided the default of ISO-8859-1 (Latin 1) will be used.</source>
          <target state="translated">文字セットが指定されていない場合は、デフォルトの ISO-8859-1 (Latin 1)が使用されます。</target>
        </trans-unit>
        <trans-unit id="f97defea6fa0146a468a7534d9b3fb0f9f28f749" translate="yes" xml:space="preserve">
          <source>If no element satisfies &lt;code&gt;test&lt;/code&gt;, the result of invoking the &lt;code&gt;orElse&lt;/code&gt; function is returned. If &lt;code&gt;orElse&lt;/code&gt; is omitted, it defaults to throwing a &lt;a href=&quot;../../dart-core/stateerror-class&quot;&gt;StateError&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; を満たす要素がない場合は、 &lt;code&gt;orElse&lt;/code&gt; 関数を呼び出した結果が返されます。場合 &lt;code&gt;orElse&lt;/code&gt; は投げがデフォルト省略され&lt;a href=&quot;../../dart-core/stateerror-class&quot;&gt;StateErrorを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="04e09cfc74493e3e2a1161d070a6a0b65456d0e1" translate="yes" xml:space="preserve">
          <source>If no element satisfies &lt;code&gt;test&lt;/code&gt;, the result of invoking the &lt;code&gt;orElse&lt;/code&gt; function is returned. If &lt;code&gt;orElse&lt;/code&gt; is omitted, it defaults to throwing a &lt;a href=&quot;../stateerror-class&quot;&gt;StateError&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; を満たす要素がない場合は、 &lt;code&gt;orElse&lt;/code&gt; 関数を呼び出した結果が返されます。場合 &lt;code&gt;orElse&lt;/code&gt; は投げがデフォルト省略され&lt;a href=&quot;../stateerror-class&quot;&gt;StateErrorを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2ea4a58d4e9186a779c28d5fc69ca0bbe2fb3a61" translate="yes" xml:space="preserve">
          <source>If no functions are specified for &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; the default is to use the iterable value itself.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; と &lt;code&gt;value&lt;/code&gt; 関数が指定されていない場合、デフォルトでは反復可能な値自体が使用されます。</target>
        </trans-unit>
        <trans-unit id="b6c40a4baf9ba02119788d267a1673d6f3de012e" translate="yes" xml:space="preserve">
          <source>If no options are specified then this will attempt to scroll the minimum amount needed to bring the element into view.</source>
          <target state="translated">オプションが指定されていない場合は、要素を表示するのに必要な最小限のスクロールを試みます。</target>
        </trans-unit>
        <trans-unit id="a34bfd5d1733819c19b2b2f032358d283849a772" translate="yes" xml:space="preserve">
          <source>If no padding exists, add correct padding if necessary and possible.</source>
          <target state="translated">パディングがない場合は、必要に応じて正しいパディングを追加します。</target>
        </trans-unit>
        <trans-unit id="ec19753b4c05a2ff71d930b3b96cf868bf14d8b3" translate="yes" xml:space="preserve">
          <source>If no such element is found before this stream is done, and a &lt;code&gt;orElse&lt;/code&gt; function is provided, the result of calling &lt;code&gt;orElse&lt;/code&gt; becomes the value of the future. If &lt;code&gt;orElse&lt;/code&gt; throws, the returned future is completed with that error.</source>
          <target state="translated">このストリームが完了する前にそのような要素が見つからず、 &lt;code&gt;orElse&lt;/code&gt; 関数が提供されている場合、 &lt;code&gt;orElse&lt;/code&gt; を呼び出した結果がfutureの値になります。場合 &lt;code&gt;orElse&lt;/code&gt; はスロー、返された未来は、そのエラーで終了しました。</target>
        </trans-unit>
        <trans-unit id="865c874cca3bc7efd7860c4dec350eab58c1c604" translate="yes" xml:space="preserve">
          <source>If no terminal is attached to stdout, a &lt;a href=&quot;../stdoutexception-class&quot;&gt;StdoutException&lt;/a&gt; is thrown. See &lt;a href=&quot;hasterminal&quot;&gt;hasTerminal&lt;/a&gt; for more info.</source>
          <target state="translated">端末がstdoutに接続されていない場合、&lt;a href=&quot;../stdoutexception-class&quot;&gt;StdoutException&lt;/a&gt;がスローされます。詳細は&lt;a href=&quot;hasterminal&quot;&gt;hasTerminal&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="68ce72caa3f4300f7192f22af1c1cb3a7bb0ac83" translate="yes" xml:space="preserve">
          <source>If no unique library exists, an error is thrown.</source>
          <target state="translated">ユニークなライブラリが存在しない場合、エラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="ef967af46533a609fb26d2f7bbf9c4d0602c349c" translate="yes" xml:space="preserve">
          <source>If no values are specified for &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; the default is the identity function.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; と &lt;code&gt;value&lt;/code&gt; 値が指定されていない場合、デフォルトは恒等関数です。</target>
        </trans-unit>
        <trans-unit id="a5aa1449553cb49c0019084da047f29fb5774126" translate="yes" xml:space="preserve">
          <source>If not enabled, the remaining fields have no effect, and the &lt;a href=&quot;compressionoff-constant&quot;&gt;compressionOff&lt;/a&gt; instance can, and should, be reused instead of creating a new instance with compression disabled.</source>
          <target state="translated">有効にしない場合、残りのフィールドは効果がなく、圧縮を無効にして新しいインスタンスを作成する代わりに、&lt;a href=&quot;compressionoff-constant&quot;&gt;compressionOff&lt;/a&gt;インスタンスを再利用できます。</target>
        </trans-unit>
        <trans-unit id="c5365beab610ef19d3d8473ef4d51767da738974" translate="yes" xml:space="preserve">
          <source>If omitted, the &lt;code&gt;isValidKey&lt;/code&gt; function defaults to checking against the type parameter: &lt;code&gt;other is E&lt;/code&gt;.</source>
          <target state="translated">省略した場合、 &lt;code&gt;isValidKey&lt;/code&gt; 関数はデフォルトでtypeパラメーターをチェックします。other &lt;code&gt;other is E&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="2605ed51e85c88ce066e921822c38370c272234c" translate="yes" xml:space="preserve">
          <source>If one operand is a double and the other is an int, they are equal if the double has an integer value (finite with no fractional part) and &lt;code&gt;identical(doubleValue.toInt(), intValue)&lt;/code&gt; is true.</source>
          <target state="translated">一方のオペランドがdoubleでもう一方がintの場合、doubleに整数値（小数部なしの有限 &lt;code&gt;identical(doubleValue.toInt(), intValue)&lt;/code&gt; がtrueであれば、それらは等しくなります。</target>
        </trans-unit>
        <trans-unit id="c124d68043987c060ecc3f9ff28b1c177048adaf" translate="yes" xml:space="preserve">
          <source>If other is also a typed-data floating point number list, the returned list will be a type-data float list capable of containing all the elements of this list and of &lt;code&gt;other&lt;/code&gt;. Otherwise the returned list will be a normal growable &lt;code&gt;List&amp;lt;double&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">otherも型付きデータの浮動小数点数リストである場合、返されるリストは、このリストと &lt;code&gt;other&lt;/code&gt; のすべての要素を含むことができる型データの浮動小数点リストになります。それ以外の場合、返されるリストは通常​​の拡張可能な &lt;code&gt;List&amp;lt;double&amp;gt;&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="180a7c6c09d8c40cddd80c595c8ca8a53f665787" translate="yes" xml:space="preserve">
          <source>If other is also a typed-data integer list, the returned list will be a type-data integer list capable of containing all the elements of this list and of &lt;code&gt;other&lt;/code&gt;. Otherwise the returned list will be a normal growable &lt;code&gt;List&amp;lt;int&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">otherも型付きデータ整数リストである場合、返されるリストは、このリストと &lt;code&gt;other&lt;/code&gt; のすべての要素を含むことができる型データ整数リストになります。それ以外の場合、返されるリストは通常​​の拡張可能な &lt;code&gt;List&amp;lt;int&amp;gt;&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="cc276c461628a800e2e4cdbabd49efe43da6d946" translate="yes" xml:space="preserve">
          <source>If path is a link</source>
          <target state="translated">パスがリンクの場合</target>
        </trans-unit>
        <trans-unit id="c2c321ccc83139a05b761aa1d15091635fff1e6c" translate="yes" xml:space="preserve">
          <source>If present, it specifies a file describing how Dart packages are looked up.</source>
          <target state="translated">存在する場合、Dart パッケージがどのように検索されるかを記述したファイルを指定します。</target>
        </trans-unit>
        <trans-unit id="ae7f02a78b0e51db2e4d769864ece6f4a88eb62d" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;null&lt;/code&gt;, the client has no preference, and the compression can use up to its default maximum window size of 15 bits depending on the server's preference.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; に設定されている場合、クライアントには設定がなく、サーバーの設定に応じて、圧縮はデフォルトの最大ウィンドウサイズである15ビットまで使用できます。</target>
        </trans-unit>
        <trans-unit id="ef23de7cd484bfb9a989f2ef13de0f63e9ffe787" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;null&lt;/code&gt;, the server has no preference, and the compression can use up to its default maximum window size of 15 bits depending on the client's preference.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; に設定されている場合、サーバーには優先順位がなく、クライアントの優先順位に応じて、圧縮はデフォルトの最大ウィンドウサイズである15ビットまで使用できます。</target>
        </trans-unit>
        <trans-unit id="a45df85950df727b96e193c280b8e6d14367065a" translate="yes" xml:space="preserve">
          <source>If several listeners want to listen to a single subscription stream, use &lt;a href=&quot;stream/asbroadcaststream&quot;&gt;asBroadcastStream&lt;/a&gt; to create a broadcast stream on top of the non-broadcast stream.</source>
          <target state="translated">複数のリスナーが単一のサブスクリプションストリームをリッスンする場合は、&lt;a href=&quot;stream/asbroadcaststream&quot;&gt;asBroadcastStream&lt;/a&gt;を使用して、非ブロードキャストストリームの上にブロードキャストストリームを作成します。</target>
        </trans-unit>
        <trans-unit id="07b748de0a3addea6ec769ff931143482777dbdc" translate="yes" xml:space="preserve">
          <source>If so, &lt;a href=&quot;positionalarguments&quot;&gt;positionalArguments&lt;/a&gt; has exactly one positional argument, &lt;a href=&quot;namedarguments&quot;&gt;namedArguments&lt;/a&gt; is empty, and typeArguments is empty.</source>
          <target state="translated">その場合、&lt;a href=&quot;positionalarguments&quot;&gt;positionalArgumentsに&lt;/a&gt;は位置引数が1つだけあり、&lt;a href=&quot;namedarguments&quot;&gt;namedArguments&lt;/a&gt;は空で、typeArgumentsは空です。</target>
        </trans-unit>
        <trans-unit id="c6557992f2e4a0ec89e3ff5a4897a49603835c62" translate="yes" xml:space="preserve">
          <source>If some futures have already completed when &lt;code&gt;Stream.fromFutures&lt;/code&gt; is called, their results will be emitted in some unspecified order.</source>
          <target state="translated">&lt;code&gt;Stream.fromFutures&lt;/code&gt; が呼び出されたときにいくつかのフューチャーがすでに完了している場合、その結果は不特定の順序で出力されます。</target>
        </trans-unit>
        <trans-unit id="6ba34e56c0eb33b33a8af91698e8ae7d7061e8a2" translate="yes" xml:space="preserve">
          <source>If some of the data of the TLS handshake has already been read from the socket this data can be passed in the &lt;code&gt;bufferedData&lt;/code&gt; parameter. This data will be processed before any other data available on the socket.</source>
          <target state="translated">TLSハンドシェイクのデータの一部がすでにソケットから読み取られている場合、このデータを &lt;code&gt;bufferedData&lt;/code&gt; パラメータに渡すことができます。このデータは、ソケットで使用可能な他のデータの前に処理されます。</target>
        </trans-unit>
        <trans-unit id="6011685493b9dc41930b395654170a0f6e43aa7f" translate="yes" xml:space="preserve">
          <source>If specified, &lt;code&gt;responseType&lt;/code&gt; sets the desired response format for the request. By default it is &lt;a href=&quot;../../dart-core/string-class&quot;&gt;String&lt;/a&gt;, but can also be 'arraybuffer', 'blob', 'document', 'json', or 'text'. See also &lt;a href=&quot;responsetype&quot;&gt;HttpRequest.responseType&lt;/a&gt; for more information.</source>
          <target state="translated">指定した場合、 &lt;code&gt;responseType&lt;/code&gt; は要求に必要な応答形式を設定します。デフォルトでは&lt;a href=&quot;../../dart-core/string-class&quot;&gt;String&lt;/a&gt;ですが、「arraybuffer」、「blob」、「document」、「json」、または「text」にすることもできます。詳細については、&lt;a href=&quot;responsetype&quot;&gt;HttpRequest.responseType&lt;/a&gt;もご覧ください。</target>
        </trans-unit>
        <trans-unit id="4209b1fbe4ac1eae5d41d93c12f0517a05436cd5" translate="yes" xml:space="preserve">
          <source>If specified, &lt;code&gt;sendData&lt;/code&gt; will send data in the form of a &lt;a href=&quot;../../dart-typed_data/bytebuffer-class&quot;&gt;ByteBuffer&lt;/a&gt;, &lt;a href=&quot;../blob-class&quot;&gt;Blob&lt;/a&gt;, &lt;a href=&quot;../document-class&quot;&gt;Document&lt;/a&gt;, &lt;a href=&quot;../../dart-core/string-class&quot;&gt;String&lt;/a&gt;, or &lt;a href=&quot;../formdata-class&quot;&gt;FormData&lt;/a&gt; along with the HttpRequest.</source>
          <target state="translated">指定した場合、 &lt;code&gt;sendData&lt;/code&gt; はHttpRequestとともに&lt;a href=&quot;../../dart-typed_data/bytebuffer-class&quot;&gt;ByteBuffer&lt;/a&gt;、&lt;a href=&quot;../blob-class&quot;&gt;Blob&lt;/a&gt;、&lt;a href=&quot;../document-class&quot;&gt;Document&lt;/a&gt;、&lt;a href=&quot;../../dart-core/string-class&quot;&gt;String&lt;/a&gt;、または&lt;a href=&quot;../formdata-class&quot;&gt;FormData&lt;/a&gt;の形式でデータを送信します。</target>
        </trans-unit>
        <trans-unit id="b3bf20613709c9c793d631dfcb8a5c435435f93b" translate="yes" xml:space="preserve">
          <source>If that call throws, the error is emitted on the returned stream.</source>
          <target state="translated">その呼び出しがスローされると、返されたストリームにエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="784327f035e52659c47f2dd8773e2267a8499778" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../../dart-async/future-class&quot;&gt;Future&lt;/a&gt; completes with &lt;code&gt;true&lt;/code&gt; the request will be retried using the updated credentials, however, the retried request will not carry the original request payload. Otherwise response processing will continue normally.</source>
          <target state="translated">場合は&lt;a href=&quot;../../dart-async/future-class&quot;&gt;将来&lt;/a&gt;で完了 &lt;code&gt;true&lt;/code&gt; 要求が更新された資格情報を使用して再試行されます、しかし、再試行要求は、元の要求ペイロードを運ぶことはありません。それ以外の場合、応答処理は通常どおり続行されます。</target>
        </trans-unit>
        <trans-unit id="0fa0db025c7df9fa40eafd486eb5bd5068c996f9" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../../dart-async/future-class&quot;&gt;Future&lt;/a&gt; completes with &lt;code&gt;true&lt;/code&gt; the request will be retried using the updated credentials. Otherwise response processing will continue normally.</source>
          <target state="translated">場合は&lt;a href=&quot;../../dart-async/future-class&quot;&gt;未来&lt;/a&gt;で完了 &lt;code&gt;true&lt;/code&gt; 要求は、更新された資格情報を使用して再試行されます。それ以外の場合、応答処理は通常どおり続行されます。</target>
        </trans-unit>
        <trans-unit id="ed5c6f8f6f0588b44632f64cb9c7d9db63f7390c" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../dart-async/future-class&quot;&gt;Future&lt;/a&gt; completes normally, its result is returned. If the &lt;a href=&quot;../dart-async/future-class&quot;&gt;Future&lt;/a&gt; completes with an error, the error and stack trace are wrapped in an &lt;a href=&quot;../dart-async/asyncerror-class&quot;&gt;AsyncError&lt;/a&gt; and thrown. If a microtask or message handler run during this call results in an unhandled exception, that exception will be propagated as though the microtask or message handler was the only Dart invocation on the stack. That is, unhandled exceptions in a microtask or message handler will skip over stacks suspended in a call to &lt;a href=&quot;waitfor&quot;&gt;waitFor&lt;/a&gt;.</source>
          <target state="translated">場合&lt;a href=&quot;../dart-async/future-class&quot;&gt;今後は&lt;/a&gt;正常に完了し、その結果が返されます。&lt;a href=&quot;../dart-async/future-class&quot;&gt;Futureが&lt;/a&gt;エラーで完了した場合、エラーとスタックトレースは&lt;a href=&quot;../dart-async/asyncerror-class&quot;&gt;AsyncErrorに&lt;/a&gt;ラップされてスローされます。この呼び出し中にマイクロタスクまたはメッセージハンドラーが実行されて未処理の例外が発生した場合、その例外は、マイクロタスクまたはメッセージハンドラーがスタック上の唯一のDart呼び出しであるかのように伝播されます。すなわち、マイクロタスクまたはメッセージハンドラで未処理の例外はへの呼び出しに懸濁スタックスキップされます&lt;a href=&quot;waitfor&quot;&gt;のwaitForを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2269f8f71f2d06fa6c1cfbdc1bba0f6221e3caf7" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../filesystementity-class&quot;&gt;FileSystemEntity&lt;/a&gt; is a directory, and if &lt;code&gt;recursive&lt;/code&gt; is false, the directory must be empty. Otherwise, if &lt;code&gt;recursive&lt;/code&gt; is true, the directory and all sub-directories and files in the directories are deleted. Links are not followed when deleting recursively. Only the link is deleted, not its target.</source>
          <target state="translated">場合&lt;a href=&quot;../filesystementity-class&quot;&gt;FileSystemEntityは&lt;/a&gt;ディレクトリで、あれば &lt;code&gt;recursive&lt;/code&gt; 偽である、ディレクトリが空でなければなりません。それ以外の場合、 &lt;code&gt;recursive&lt;/code&gt; がtrueの場合、ディレクトリとそのディレクトリ内のすべてのサブディレクトリおよびファイルが削除されます。再帰的に削除するとリンクはたどられません。リンクのみが削除され、ターゲットは削除されません。</target>
        </trans-unit>
        <trans-unit id="316f8fe47246030117f05cb699050bb491a77451" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../instancemirror-class&quot;&gt;InstanceMirror&lt;/a&gt; reflects an instance it is meaningful to have a local reference to, we provide access to the actual instance here.</source>
          <target state="translated">&lt;a href=&quot;../instancemirror-class&quot;&gt;InstanceMirror&lt;/a&gt;がローカル参照を持つことが意味のあるインスタンスを反映している場合、ここで実際のインスタンスへのアクセスを提供します。</target>
        </trans-unit>
        <trans-unit id="6d992b7745de91daf58a73625c6c31cb2a5bc628" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../stopwatch-class&quot;&gt;Stopwatch&lt;/a&gt; is currently running, then calling start does nothing.</source>
          <target state="translated">&lt;a href=&quot;../stopwatch-class&quot;&gt;ストップウォッチ&lt;/a&gt;が現在実行中の場合、startを呼び出しても何も起こりません。</target>
        </trans-unit>
        <trans-unit id="6f3c8265d9413588304c445b55d1d83c42da6d66" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;contentlength&quot;&gt;contentLength&lt;/a&gt; of the body isn't 0, and the body isn't being read, any write calls on the &lt;a href=&quot;../httpresponse-class&quot;&gt;HttpResponse&lt;/a&gt; automatically drain the request body.</source>
          <target state="translated">場合&lt;a href=&quot;contentlength&quot;&gt;ん。ContentLength&lt;/a&gt;体のが0ではない、と体が読み込まれていないが、上の任意の書き込み呼び出し&lt;a href=&quot;../httpresponse-class&quot;&gt;HttpResponseには、&lt;/a&gt;自動的にリクエストボディを排出します。</target>
        </trans-unit>
        <trans-unit id="1465825e0964056bdb72835e0938b535ce4cb928" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;instancemirror-class&quot;&gt;InstanceMirror&lt;/a&gt; reflects an instance it is meaningful to have a local reference to, we provide access to the actual instance here. &lt;a href=&quot;instancemirror/reflectee&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;instancemirror-class&quot;&gt;InstanceMirror&lt;/a&gt;がローカル参照を持つことが意味のあるインスタンスを反映している場合、ここで実際のインスタンスへのアクセスを提供します。&lt;a href=&quot;instancemirror/reflectee&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f3a2c7fe07530e3a6ced7c0b3343618dc5e23d30" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Server&lt;/code&gt; header is added here and the &lt;code&gt;serverHeader&lt;/code&gt; is set as well then the value of &lt;code&gt;serverHeader&lt;/code&gt; takes precedence.</source>
          <target state="translated">場合 &lt;code&gt;Server&lt;/code&gt; ヘッダーはここに追加され、 &lt;code&gt;serverHeader&lt;/code&gt; はそれではの値として設定されている &lt;code&gt;serverHeader&lt;/code&gt; が優先されます。</target>
        </trans-unit>
        <trans-unit id="60847f1107d30bb01e8273622b50b65e16f5c302" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;StreamSink&lt;/code&gt; fails with an error, perhaps in response to adding events using &lt;a href=&quot;../eventsink/add&quot;&gt;add&lt;/a&gt;, &lt;a href=&quot;../eventsink/adderror&quot;&gt;addError&lt;/a&gt; or &lt;a href=&quot;close&quot;&gt;close&lt;/a&gt;, the &lt;a href=&quot;done&quot;&gt;done&lt;/a&gt; future will complete with that error.</source>
          <target state="translated">&lt;code&gt;StreamSink&lt;/code&gt; がエラーで失敗した場合、おそらく&lt;a href=&quot;../eventsink/add&quot;&gt;add&lt;/a&gt;、&lt;a href=&quot;../eventsink/adderror&quot;&gt;addError&lt;/a&gt;または&lt;a href=&quot;close&quot;&gt;close&lt;/a&gt;を使用してイベントを追加したことに応答して、&lt;a href=&quot;done&quot;&gt;done&lt;/a&gt;フューチャーはそのエラーで完了します。</target>
        </trans-unit>
        <trans-unit id="134efee1cd3f10e2156045364687510ffbf0b943" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;automaticPackageResolution&lt;/code&gt; parameter is provided, then the location of the package sources in the spawned isolate is automatically determined.</source>
          <target state="translated">&lt;code&gt;automaticPackageResolution&lt;/code&gt; パラメーターが指定されている場合、生成された分離内のパッケージソースの場所は自動的に決定されます。</target>
        </trans-unit>
        <trans-unit id="87ae4f2e8da5373a11b2378b314a07753ef9e83e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;charCode&lt;/code&gt; can be represented by a single UTF-16 code unit, the new string contains a single code unit. Otherwise, the &lt;a href=&quot;length&quot;&gt;length&lt;/a&gt; is 2 and the code units form a surrogate pair. See documentation for &lt;a href=&quot;string.fromcharcodes&quot;&gt;fromCharCodes&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;charCode&lt;/code&gt; が単一のUTF-16コード単位で表現できる場合、新しい文字列には単一のコード単位が含まれます。それ以外の場合、&lt;a href=&quot;length&quot;&gt;長さ&lt;/a&gt;は2で、コード単位はサロゲートペアを形成します。&lt;a href=&quot;string.fromcharcodes&quot;&gt;fromCharCodesの&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="55a439c2c4e1a837db2e55b684e8508ea825ce71" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;checked&lt;/code&gt; parameter is set to &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, the new isolate will run code in checked mode (enabling asserts and type checks), respectively in production mode (disabling asserts and type checks), if possible. If the parameter is omitted, the new isolate will inherit the value from the current isolate.</source>
          <target state="translated">&lt;code&gt;checked&lt;/code&gt; パラメーターが &lt;code&gt;true&lt;/code&gt; または &lt;code&gt;false&lt;/code&gt; に設定されている場合、可能であれば、新しいアイソレートはコードをチェックモード（アサートとタイプチェックを有効にする）、プロダクションモード（アサートとタイプチェックを無効にする）でそれぞれ実行します。パラメータを省略すると、新しい分離菌は現在の分離菌から値を継承します。</target>
        </trans-unit>
        <trans-unit id="05845dab9a079b10e81cff9bf5e8ad9632291c2f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;codeUnits&lt;/code&gt; start with the encoding of a &lt;a href=&quot;../unicodebomcharacterrune-constant&quot;&gt;unicodeBomCharacterRune&lt;/a&gt;, that character is discarded.</source>
          <target state="translated">場合 &lt;code&gt;codeUnits&lt;/code&gt; はのエンコーディングで始まる&lt;a href=&quot;../unicodebomcharacterrune-constant&quot;&gt;unicodeBomCharacterRune&lt;/a&gt;、その文字は破棄されます。</target>
        </trans-unit>
        <trans-unit id="8564a1b617d768aee4a0676779da84b8c1736cd7" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;compare&lt;/code&gt; function is omitted, it defaults to &lt;a href=&quot;../../dart-core/comparable/compare&quot;&gt;Comparable.compare&lt;/a&gt;, and the elements must be comparable.</source>
          <target state="translated">場合は &lt;code&gt;compare&lt;/code&gt; 機能が省略され、そのデフォルト&lt;a href=&quot;../../dart-core/comparable/compare&quot;&gt;Comparable.compare&lt;/a&gt;、および要素は同等でなければなりません。</target>
        </trans-unit>
        <trans-unit id="787738c7bbb7b347bb28fcdf19817f332d6dbdb5" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;errorsAreFatal&lt;/code&gt;, &lt;code&gt;onExit&lt;/code&gt; and/or &lt;code&gt;onError&lt;/code&gt; parameters are provided, the isolate will act as if, respectively, &lt;a href=&quot;seterrorsfatal&quot;&gt;setErrorsFatal&lt;/a&gt;, &lt;a href=&quot;addonexitlistener&quot;&gt;addOnExitListener&lt;/a&gt; and &lt;a href=&quot;adderrorlistener&quot;&gt;addErrorListener&lt;/a&gt; were called with the corresponding parameter and was processed before the isolate starts running.</source>
          <target state="translated">&lt;code&gt;errorsAreFatal&lt;/code&gt; 、 &lt;code&gt;onExit&lt;/code&gt; 、 &lt;code&gt;onError&lt;/code&gt; 、またはその両方のパラメータが指定されている場合、分離はそれぞれ、&lt;a href=&quot;seterrorsfatal&quot;&gt;setErrorsFatal&lt;/a&gt;、&lt;a href=&quot;addonexitlistener&quot;&gt;addOnExitListener&lt;/a&gt;、および&lt;a href=&quot;adderrorlistener&quot;&gt;addErrorListener&lt;/a&gt;が対応するパラメータで呼び出され、分離が実行を開始する前に処理されたかのように動作します。</target>
        </trans-unit>
        <trans-unit id="d84275773a18d6de6c6e01b91d853407b7298b44" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;flush&lt;/code&gt; argument is set to &lt;code&gt;true&lt;/code&gt; data written will be flushed to the file system before returning.</source>
          <target state="translated">場合は &lt;code&gt;flush&lt;/code&gt; 引数に設定されて &lt;code&gt;true&lt;/code&gt; 書き込まれたデータを返す前に、ファイルシステムにフラッシュされます。</target>
        </trans-unit>
        <trans-unit id="d59dfc7a648c7ac9ea79b94eac2d863253dd712b" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;host&lt;/code&gt; argument is passed it will be used as the host name for the TLS handshake. If &lt;code&gt;host&lt;/code&gt; is not passed the host name from the &lt;code&gt;socket&lt;/code&gt; will be used. The &lt;code&gt;host&lt;/code&gt; can be either a &lt;a href=&quot;../../dart-core/string-class&quot;&gt;String&lt;/a&gt; or an &lt;a href=&quot;../internetaddress-class&quot;&gt;InternetAddress&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;host&lt;/code&gt; 引数が渡された場合、それはTLSハンドシェイクのホスト名として使用されます。 &lt;code&gt;host&lt;/code&gt; が渡されない場合、 &lt;code&gt;socket&lt;/code&gt; からのホスト名が使用されます。 &lt;code&gt;host&lt;/code&gt; いずれかになります&lt;a href=&quot;../../dart-core/string-class&quot;&gt;文字列&lt;/a&gt;または&lt;a href=&quot;../internetaddress-class&quot;&gt;たInternetAddress&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="628ac81e865af8937f2203b25900282a1f89ea35" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;packageConfig&lt;/code&gt; parameter is provided, then it is used to find the location of a package resolution configuration file for the spawned isolate.</source>
          <target state="translated">場合 &lt;code&gt;packageConfig&lt;/code&gt; のパラメータが提供され、生成された単離するためのパッケージ解決設定ファイルの場所を見つけるために使用されます。</target>
        </trans-unit>
        <trans-unit id="f3d71c539f3ea414606cb2155a42940cb0b9a2a7" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;paused&lt;/code&gt; parameter is set to &lt;code&gt;true&lt;/code&gt;, the isolate will start up in a paused state, as if by an initial call of &lt;code&gt;isolate.pause(isolate.pauseCapability)&lt;/code&gt;. To resume the isolate, call &lt;code&gt;isolate.resume(isolate.pauseCapability)&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;paused&lt;/code&gt; パラメータがに設定されている &lt;code&gt;true&lt;/code&gt; 、分離株は、最初の呼び出したかのように、一時停止状態で起動します &lt;code&gt;isolate.pause(isolate.pauseCapability)&lt;/code&gt; 。分離を再開するには、 &lt;code&gt;isolate.resume(isolate.pauseCapability)&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="6b0884c431da5b144625853063068c2bba2eda86" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;paused&lt;/code&gt; parameter is set to &lt;code&gt;true&lt;/code&gt;, the isolate will start up in a paused state, just before calling the &lt;code&gt;entryPoint&lt;/code&gt; function with the &lt;code&gt;message&lt;/code&gt;, as if by an initial call of &lt;code&gt;isolate.pause(isolate.pauseCapability)&lt;/code&gt;. To resume the isolate, call &lt;code&gt;isolate.resume(isolate.pauseCapability)&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;paused&lt;/code&gt; パラメータがに設定されている &lt;code&gt;true&lt;/code&gt; 、分離株は、単に呼び出す前に、一時停止状態で起動します &lt;code&gt;entryPoint&lt;/code&gt; を持つ関数を &lt;code&gt;message&lt;/code&gt; の最初の呼び出しによってかのように、 &lt;code&gt;isolate.pause(isolate.pauseCapability)&lt;/code&gt; 。分離を再開するには、 &lt;code&gt;isolate.resume(isolate.pauseCapability)&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="aff6bd514f2a679dbf5b3996a8f42483de9e54b9" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;resumeCapability&lt;/code&gt; is not one that has previously been used to pause the isolate, or it has already been used to resume from that pause, the resume call has no effect.</source>
          <target state="translated">&lt;code&gt;resumeCapability&lt;/code&gt; が以前に分離を一時停止するために使用されたものではない場合、またはその一時停止から再開するためにすでに使用されている場合、resume呼び出しは効果がありません。</target>
        </trans-unit>
        <trans-unit id="33f796192c266336b658ba9ebd728d00c8790d50" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;socket&lt;/code&gt; already has a subscription, pass the existing subscription in the &lt;code&gt;subscription&lt;/code&gt; parameter. The &lt;a href=&quot;secure&quot;&gt;secure&lt;/a&gt; operation will take over the subscription by replacing the handlers with it own secure processing. The caller must not touch this subscription anymore. Passing a paused subscription is an error.</source>
          <target state="translated">&lt;code&gt;socket&lt;/code&gt; すでにサブスクリプションを持っている場合は、 &lt;code&gt;subscription&lt;/code&gt; パラメータで既存のサブスクリプションを渡します。&lt;a href=&quot;secure&quot;&gt;安全な&lt;/a&gt;操作は、それ自身のセキュアな処理でハンドラを置き換えることによって、サブスクリプションを引き継ぎます。発信者は、このサブスクリプションに触れないでください。一時停止したサブスクリプションを渡すとエラーになります。</target>
        </trans-unit>
        <trans-unit id="6d189e5b47f367ceb36e6c0c83dbceff6558fa25" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;socket&lt;/code&gt; already has a subscription, pass the existing subscription in the &lt;code&gt;subscription&lt;/code&gt; parameter. The &lt;a href=&quot;secureserver&quot;&gt;secureServer&lt;/a&gt; operation will take over the subscription by replacing the handlers with it own secure processing. The caller must not touch this subscription anymore. Passing a paused subscription is an error.</source>
          <target state="translated">&lt;code&gt;socket&lt;/code&gt; すでにサブスクリプションを持っている場合は、 &lt;code&gt;subscription&lt;/code&gt; パラメータで既存のサブスクリプションを渡します。&lt;a href=&quot;secureserver&quot;&gt;secureServerの&lt;/a&gt;操作は、それ自身のセキュアな処理でハンドラを置き換えることによって、サブスクリプションを引き継ぎます。発信者は、このサブスクリプションに触れないでください。一時停止したサブスクリプションを渡すとエラーになります。</target>
        </trans-unit>
        <trans-unit id="79ad9ce4cebd294d5b446e2fcf7f538d1a449479" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;socket&lt;/code&gt; already has a subscription, this subscription will no longer receive and events. In most cases calling &lt;code&gt;pause&lt;/code&gt; on this subscription before starting TLS handshake is the right thing to do.</source>
          <target state="translated">&lt;code&gt;socket&lt;/code&gt; すでにサブスクリプションを持っている場合、このサブスクリプションはイベントを受信しなくなります。ほとんどの場合、TLSハンドシェイクを開始する前にこのサブスクリプションで &lt;code&gt;pause&lt;/code&gt; を呼び出すことは正しいことです。</target>
        </trans-unit>
        <trans-unit id="d1920c2d147245aef5cb56ced7eb21c97a1ac97d" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;source&lt;/code&gt; string does not contain a valid integer literal, optionally prefixed by a sign, a &lt;a href=&quot;../formatexception-class&quot;&gt;FormatException&lt;/a&gt; is thrown (unless the deprecated &lt;code&gt;onError&lt;/code&gt; parameter is used, see below).</source>
          <target state="translated">場合 &lt;code&gt;source&lt;/code&gt; 文字列が有効な整数リテラルを含まない任意に記号を前置、&lt;a href=&quot;../formatexception-class&quot;&gt;FormatExceptionは&lt;/a&gt;（推奨されない限り、スローされる &lt;code&gt;onError&lt;/code&gt; パラメーターが使用され、以下を参照のこと）。</target>
        </trans-unit>
        <trans-unit id="2ed610f3f0ac3929378b593fdb239dc06b277f31" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;source&lt;/code&gt; string is not a valid double literal, the &lt;code&gt;onError&lt;/code&gt; is called with the &lt;code&gt;source&lt;/code&gt; as argument, and its return value is used instead. If no &lt;code&gt;onError&lt;/code&gt; is provided, a &lt;a href=&quot;../formatexception-class&quot;&gt;FormatException&lt;/a&gt; is thrown instead.</source>
          <target state="translated">&lt;code&gt;source&lt;/code&gt; 文字列が有効なdoubleリテラルではない場合、 &lt;code&gt;onError&lt;/code&gt; は &lt;code&gt;source&lt;/code&gt; を引数として呼び出され、その戻り値が代わりに使用されます。 &lt;code&gt;onError&lt;/code&gt; が指定されていない場合は、代わりに&lt;a href=&quot;../formatexception-class&quot;&gt;FormatException&lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="bf45bcf40b505be2c64001cb700b530c07fb46ca" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;test&lt;/code&gt; function throws, the data event is dropped and the error is emitted on the returned stream instead.</source>
          <target state="translated">場合 &lt;code&gt;test&lt;/code&gt; 関数はスロー、データイベントは廃棄され、エラーが代わりに返されたストリームに放出されます。</target>
        </trans-unit>
        <trans-unit id="161da963d6e0fe5105bc4ff148b594e95b425d09" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;url&lt;/code&gt; contains user information this will be passed as basic authentication when setting up the connection.</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; にユーザー情報が含まれている場合、これは接続の設定時に基本認証として渡されます。</target>
        </trans-unit>
        <trans-unit id="3ba9fcbe8dd5bffcd7f8fca82d5327799ca55057" translate="yes" xml:space="preserve">
          <source>If the MIME type representation in the URI text contains URI escapes, they are unescaped in the returned string.</source>
          <target state="translated">URI テキストの MIME タイプ表現に URI エスケープが含まれている場合、返される文字列ではそれらはエスケープされません。</target>
        </trans-unit>
        <trans-unit id="28474efb5e156634e85bc6b3d2ae90375073386d" translate="yes" xml:space="preserve">
          <source>If the RPC was successful, use &lt;a href=&quot;serviceextensionresponse/result&quot;&gt;ServiceExtensionResponse.result&lt;/a&gt;, otherwise use &lt;a href=&quot;serviceextensionresponse/serviceextensionresponse.error&quot;&gt;ServiceExtensionResponse.error&lt;/a&gt;.</source>
          <target state="translated">RPCが成功した場合は、使用&lt;a href=&quot;serviceextensionresponse/result&quot;&gt;ServiceExtensionResponse.result&lt;/a&gt;、そうでない場合は使用&lt;a href=&quot;serviceextensionresponse/serviceextensionresponse.error&quot;&gt;ServiceExtensionResponse.errorを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="257df6e3e06a69436280394fad226d3181e990c4" translate="yes" xml:space="preserve">
          <source>If the URI cannot be converted to a file path calling this throws &lt;a href=&quot;../unsupportederror-class&quot;&gt;UnsupportedError&lt;/a&gt;.</source>
          <target state="translated">URIを呼び出してファイルパスに変換できない場合、これは&lt;a href=&quot;../unsupportederror-class&quot;&gt;UnsupportedErrorを&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="b9c278becdcc63214dfbb91d3d64a33d493b8c28" translate="yes" xml:space="preserve">
          <source>If the URI ends with a slash (i.e. the last path component is empty) the returned file path will also end with a slash.</source>
          <target state="translated">URIがスラッシュで終わる場合(つまり最後のパスコンポーネントが空の場合)、返されるファイルパスもスラッシュで終わります。</target>
        </trans-unit>
        <trans-unit id="511a2e421cca3fa4ed5b446777c30d476cfd1a3b" translate="yes" xml:space="preserve">
          <source>If the URI is absolute the path starts with a path separator unless Windows semantics is used and the first path segment is a drive letter. When Windows semantics is used a host component in the uri in interpreted as a file server and a UNC path is returned.</source>
          <target state="translated">URIが絶対パスの場合、Windowsセマンティクスが使用され、最初のパスセグメントがドライブレターでない限り、パスはパスセパレータで始まります。Windowsセマンティクスが使用されている場合、URIのホストコンポーネントはファイルサーバとして解釈され、UNCパスが返されます。</target>
        </trans-unit>
        <trans-unit id="d7ae3f190d12d4f25604935e3c7482a196cac360" translate="yes" xml:space="preserve">
          <source>If the URI is not a file URI calling this throws &lt;a href=&quot;../unsupportederror-class&quot;&gt;UnsupportedError&lt;/a&gt;.</source>
          <target state="translated">URIがファイルURIを呼び出していない場合、これは&lt;a href=&quot;../unsupportederror-class&quot;&gt;UnsupportedErrorを&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="51a706b576bf65ee21e4550409c44995647ad1ff" translate="yes" xml:space="preserve">
          <source>If the absolute value of &lt;code&gt;this&lt;/code&gt; is greater or equal to &lt;code&gt;10^21&lt;/code&gt; then this methods returns an exponential representation computed by &lt;code&gt;this.toStringAsExponential()&lt;/code&gt;. Otherwise the result is the closest string representation with exactly &lt;code&gt;fractionDigits&lt;/code&gt; digits after the decimal point. If &lt;code&gt;fractionDigits&lt;/code&gt; equals 0 then the decimal point is omitted.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; の絶対値が &lt;code&gt;10^21&lt;/code&gt; 以上の場合、このメソッドは &lt;code&gt;this.toStringAsExponential()&lt;/code&gt; によって計算された指数表現を返します。それ以外の場合、結果は小数点の後にちょうど &lt;code&gt;fractionDigits&lt;/code&gt; 桁を含む最も近い文字列表現です。場合 &lt;code&gt;fractionDigits&lt;/code&gt; が、その後0に等しい小数点が省略されています。</target>
        </trans-unit>
        <trans-unit id="393ea8be203a5aad680039095d7a08f9b4e2ab2d" translate="yes" xml:space="preserve">
          <source>If the address in &lt;code&gt;address&lt;/code&gt; is not a numeric IPv4 (dotted-decimal notation) or IPv6 (hexadecimal representation). address &lt;a href=&quot;../../dart-core/argumenterror-class&quot;&gt;ArgumentError&lt;/a&gt; is thrown.</source>
          <target state="translated">アドレス場合 &lt;code&gt;address&lt;/code&gt; 数字のIPv4（ドット付き十進表記）またはIPv6（16進表記）ではありません。アドレス&lt;a href=&quot;../../dart-core/argumenterror-class&quot;&gt;ArgumentError&lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="a84daa06cf058c779e89bfda639282d0287faf3e" translate="yes" xml:space="preserve">
          <source>If the argument &lt;code&gt;flush&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, the data written will be flushed to the file system before the returned future completes.</source>
          <target state="translated">引数 &lt;code&gt;flush&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; に設定されている場合、書き込まれたデータは、返されたfutureが完了する前にファイルシステムにフラッシュされます。</target>
        </trans-unit>
        <trans-unit id="932a10b6024864568482519b11918f2e0d04f809" translate="yes" xml:space="preserve">
          <source>If the attributes cannot be set, throws a &lt;a href=&quot;../filesystemexception-class&quot;&gt;FileSystemException&lt;/a&gt;.</source>
          <target state="translated">属性を設定できない場合は、&lt;a href=&quot;../filesystemexception-class&quot;&gt;FileSystemExceptionを&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="140b1a9a632136a0480f464713d91a27c85e3cff" translate="yes" xml:space="preserve">
          <source>If the call fails, completes the future with a &lt;a href=&quot;../filestat-class&quot;&gt;FileStat&lt;/a&gt; object with &lt;code&gt;.type&lt;/code&gt; set to &lt;a href=&quot;../filesystementitytype/notfound-constant&quot;&gt;FileSystemEntityType.notFound&lt;/a&gt; and the other fields invalid.</source>
          <target state="translated">呼び出しが失敗した場合、 &lt;code&gt;.type&lt;/code&gt; が&lt;a href=&quot;../filesystementitytype/notfound-constant&quot;&gt;FileSystemEntityType.notFoundに&lt;/a&gt;設定され、他のフィールドが無効な&lt;a href=&quot;../filestat-class&quot;&gt;FileStat&lt;/a&gt;オブジェクトでフューチャを完了します。</target>
        </trans-unit>
        <trans-unit id="157c6e604cac25be562e2fa7cf5e6b9c73882d4b" translate="yes" xml:space="preserve">
          <source>If the call fails, returns a &lt;a href=&quot;../filestat-class&quot;&gt;FileStat&lt;/a&gt; object with &lt;code&gt;.type&lt;/code&gt; set to &lt;a href=&quot;../filesystementitytype/notfound-constant&quot;&gt;FileSystemEntityType.notFound&lt;/a&gt; and the other fields invalid.</source>
          <target state="translated">呼び出しが失敗した場合、 &lt;code&gt;.type&lt;/code&gt; が&lt;a href=&quot;../filesystementitytype/notfound-constant&quot;&gt;FileSystemEntityType.notFoundに&lt;/a&gt;設定され、その他のフィールドが無効な&lt;a href=&quot;../filestat-class&quot;&gt;FileStat&lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="e31554fb180a8b583cd972833a985cafc2515207" translate="yes" xml:space="preserve">
          <source>If the call returns &lt;code&gt;null&lt;/code&gt;, no further action is taken for the elements.</source>
          <target state="translated">呼び出しが &lt;code&gt;null&lt;/code&gt; を返す場合、要素に対してそれ以上のアクションは実行されません。</target>
        </trans-unit>
        <trans-unit id="338cdcaf4407d56de44b596dcceca0d9170feed4" translate="yes" xml:space="preserve">
          <source>If the call to &lt;code&gt;action&lt;/code&gt; returns a &lt;a href=&quot;../future-class&quot;&gt;Future&lt;/a&gt;, &lt;code&gt;f2&lt;/code&gt;, then completion of &lt;code&gt;f&lt;/code&gt; is delayed until &lt;code&gt;f2&lt;/code&gt; completes. If &lt;code&gt;f2&lt;/code&gt; completes with an error, that will be the result of &lt;code&gt;f&lt;/code&gt; too. The value of &lt;code&gt;f2&lt;/code&gt; is always ignored.</source>
          <target state="translated">呼び出した場合は &lt;code&gt;action&lt;/code&gt; 返す&lt;a href=&quot;../future-class&quot;&gt;の未来を&lt;/a&gt;、 &lt;code&gt;f2&lt;/code&gt; は、その後の完成 &lt;code&gt;f&lt;/code&gt; がするまで延期される &lt;code&gt;f2&lt;/code&gt; 完了します。 &lt;code&gt;f2&lt;/code&gt; がエラーで完了した場合、それも &lt;code&gt;f&lt;/code&gt; の結果です。 &lt;code&gt;f2&lt;/code&gt; の値は常に無視されます。</target>
        </trans-unit>
        <trans-unit id="dc1efc4e769571b02211fcab7cad5ab85bcd455f" translate="yes" xml:space="preserve">
          <source>If the call to &lt;code&gt;action&lt;/code&gt; throws, then &lt;code&gt;f&lt;/code&gt; is completed with the thrown error.</source>
          <target state="translated">&lt;code&gt;action&lt;/code&gt; の呼び出しがスローされた場合、 &lt;code&gt;f&lt;/code&gt; はスローされたエラーで完了します。</target>
        </trans-unit>
        <trans-unit id="1fd565379f6bf25591c6b844f35ee0d5feae7c92" translate="yes" xml:space="preserve">
          <source>If the callback returns a &lt;a href=&quot;../future-class&quot;&gt;Future&lt;/a&gt;, the future returned by &lt;code&gt;then&lt;/code&gt; will be completed with the same result as the future returned by the callback.</source>
          <target state="translated">コールバックが&lt;a href=&quot;../future-class&quot;&gt;Futureを&lt;/a&gt;返す場合、 &lt;code&gt;then&lt;/code&gt; によって返されたフューチャーは、コールバックによって返されたフューチャーと同じ結果で完了します。</target>
        </trans-unit>
        <trans-unit id="83b97101cff88aaac942fb075d4ed7347b77c4a8" translate="yes" xml:space="preserve">
          <source>If the callback returns true, the secure connection is accepted and the &lt;code&gt;Future&amp;lt;HttpClientRequest&amp;gt;&lt;/code&gt; that was returned from the call making the request completes with a valid HttpRequest object. If the callback returns false, the &lt;code&gt;Future&amp;lt;HttpClientRequest&amp;gt;&lt;/code&gt; completes with an exception.</source>
          <target state="translated">コールバックがtrueを返す場合、安全な接続が受け入れられ、要求を行う呼び出しから返された &lt;code&gt;Future&amp;lt;HttpClientRequest&amp;gt;&lt;/code&gt; が有効なHttpRequestオブジェクトで完了します。コールバックがfalseを返す場合、 &lt;code&gt;Future&amp;lt;HttpClientRequest&amp;gt;&lt;/code&gt; は例外を出して完了します。</target>
        </trans-unit>
        <trans-unit id="0d314d0bc420620258f7f84a9dd99162046d23d6" translate="yes" xml:space="preserve">
          <source>If the caller wishes to manually uncompress the body of the response, it should consult the value of the &lt;code&gt;Content-Encoding&lt;/code&gt; HTTP header to see what type of compression has been applied. See &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-14.11&quot;&gt;tools.ietf.org/html/rfc2616#section-14.11&lt;/a&gt; for more information.</source>
          <target state="translated">呼び出し元が手動で応答の本文を解凍する場合は、 &lt;code&gt;Content-Encoding&lt;/code&gt; HTTPヘッダーの値を調べて、適用されている圧縮の種類を確認する必要があります。詳細については、&lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-14.11&quot;&gt;tools.ietf.org / html / rfc2616＃section-14.11&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c9a0efdb8f1789b15351cbac3e442b8f9abaca6e" translate="yes" xml:space="preserve">
          <source>If the conditions are not detectable before calling a function, the called function should not throw an &lt;code&gt;Error&lt;/code&gt;. It may still throw a value, but the caller will have to catch the thrown value, effectively making it an alternative result rather than an error. The thrown object can choose to implement &lt;a href=&quot;exception-class&quot;&gt;Exception&lt;/a&gt; to document that it represents an exceptional, but not erroneous, occurrence, but it has no other effect than documentation.</source>
          <target state="translated">関数を呼び出す前に条件が検出できない場合、呼び出された関数は &lt;code&gt;Error&lt;/code&gt; をスローしてはなりません。それでも値をスローする場合がありますが、呼び出し側はスローされた値をキャッチする必要があるため、エラーではなく代替結果になります。スローされたオブジェクトは、&lt;a href=&quot;exception-class&quot;&gt;例外&lt;/a&gt;を実装することを選択して、それが例外的ではあるが誤った発生ではないことを文書化できますが、文書化以外の効果はありません。</target>
        </trans-unit>
        <trans-unit id="126d894c11e0729aa0d82fcb22c3b20afd5a4901" translate="yes" xml:space="preserve">
          <source>If the consumer stops listening because of some error preventing it from continuing, it may report this error in the returned future, otherwise it will just complete the future with &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">継続を妨げる何らかのエラーのためにコンシューマーがリッスンを停止した場合、コンシューマーは返されたフューチャーでこのエラーを報告する場合があり &lt;code&gt;null&lt;/code&gt; 。それ以外の場合は、フューチャーをnullで完了するだけです。</target>
        </trans-unit>
        <trans-unit id="406d10a803028bfc3d6512614dc00cffdbd5b461" translate="yes" xml:space="preserve">
          <source>If the content is Base64 encoded, it will be decoded to bytes and then decoded to a string using &lt;code&gt;encoding&lt;/code&gt;. If encoding is omitted, the value of a &lt;code&gt;charset&lt;/code&gt; parameter is used if it is recognized by &lt;a href=&quot;../../dart-convert/encoding/getbyname&quot;&gt;Encoding.getByName&lt;/a&gt;, otherwise it defaults to the &lt;a href=&quot;../../dart-convert/ascii-constant&quot;&gt;ascii&lt;/a&gt; encoding, which is the default encoding for data URIs that do not specify an encoding.</source>
          <target state="translated">コンテンツがBase64でエンコードされている場合、バイトにデコードされてから、 &lt;code&gt;encoding&lt;/code&gt; を使用して文字列にデコードされます。エンコーディングが省略されている場合、 &lt;code&gt;charset&lt;/code&gt; パラメータの値は&lt;a href=&quot;../../dart-convert/encoding/getbyname&quot;&gt;Encoding.getByName&lt;/a&gt;によって認識された場合に使用されます。それ以外の場合は、デフォルトで&lt;a href=&quot;../../dart-convert/ascii-constant&quot;&gt;ascii&lt;/a&gt;エンコーディングに設定されます。これは、エンコーディングを指定しないデータURIのデフォルトのエンコーディングです。</target>
        </trans-unit>
        <trans-unit id="064bfca7a604d029636a7004d8a225fc96645b52" translate="yes" xml:space="preserve">
          <source>If the content is not Base64 encoded, it will first have percent-escapes converted to bytes and then the character codes and byte values are decoded using &lt;code&gt;encoding&lt;/code&gt;.</source>
          <target state="translated">コンテンツがBase64でエンコードされていない場合、最初にパーセントエスケープがバイトに変換され、次に &lt;code&gt;encoding&lt;/code&gt; を使用して文字コードとバイト値がデコードされます。</target>
        </trans-unit>
        <trans-unit id="86a7adabc10aabd96971adbb176b3aeae0afb375" translate="yes" xml:space="preserve">
          <source>If the content length needs to be set, it must be set before the body is written to. Setting the content length after writing to the body will throw a &lt;code&gt;StateError&lt;/code&gt;.</source>
          <target state="translated">コンテンツの長さを設定する必要がある場合は、本文を書き込む前に設定する必要があります。本文への書き込み後にコンテンツの長さを設定すると、 &lt;code&gt;StateError&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="aad31bc853e81022c3a90dab28608711a81384b0" translate="yes" xml:space="preserve">
          <source>If the content was changed and not only the attributes, &lt;a href=&quot;contentchanged&quot;&gt;contentChanged&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">属性だけでなくコンテンツが変更された場合、&lt;a href=&quot;contentchanged&quot;&gt;contentChanged&lt;/a&gt;は &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b7a8c6199ffe410724dbd229e7a32a0331d714a3" translate="yes" xml:space="preserve">
          <source>If the content was changed and not only the attributes, &lt;a href=&quot;filesystemmodifyevent/contentchanged&quot;&gt;contentChanged&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">属性だけでなくコンテンツが変更された場合、&lt;a href=&quot;filesystemmodifyevent/contentchanged&quot;&gt;contentChanged&lt;/a&gt;は &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="fa1c45d7b26672502f16a936c5937e5ea7044da2" translate="yes" xml:space="preserve">
          <source>If the context where the text will be inserted is known in more detail, it's possible to omit escaping some characters (like quotes when not inside an attribute value).</source>
          <target state="translated">テキストが挿入される文脈がより詳細に分かっている場合は、一部の文字(属性値の中にない場合の引用符のようなもの)をエスケープすることを省略することができます。</target>
        </trans-unit>
        <trans-unit id="6e328dae0b1cbe999c0302d61791fb59c4d2668b" translate="yes" xml:space="preserve">
          <source>If the controller is closed, the &quot;done&quot; event might not have been delivered yet, but it has been scheduled, and it is too late to add more events.</source>
          <target state="translated">コントローラが閉じている場合、「完了」イベントはまだ配信されていないかもしれませんが、スケジュールされていて、イベントを追加するには遅すぎます。</target>
        </trans-unit>
        <trans-unit id="517648577c1e489f52905c1545de38fd78265431" translate="yes" xml:space="preserve">
          <source>If the conversion throws, or returns a value that is not directly serializable, a &lt;a href=&quot;../jsonunsupportedobjecterror-class&quot;&gt;JsonUnsupportedObjectError&lt;/a&gt; exception is thrown. If the call throws, the error is caught and stored in the &lt;a href=&quot;../jsonunsupportedobjecterror-class&quot;&gt;JsonUnsupportedObjectError&lt;/a&gt;'s &lt;code&gt;cause&lt;/code&gt; field.</source>
          <target state="translated">変換がスローするか、直接シリアル化できない値を返す場合、&lt;a href=&quot;../jsonunsupportedobjecterror-class&quot;&gt;JsonUnsupportedObjectError&lt;/a&gt;例外がスローされます。呼び出しがスローすると、エラーがキャッチされ、&lt;a href=&quot;../jsonunsupportedobjecterror-class&quot;&gt;JsonUnsupportedObjectError&lt;/a&gt;の &lt;code&gt;cause&lt;/code&gt; フィールドに格納されます。</target>
        </trans-unit>
        <trans-unit id="19177a0434532064ce856631dd6dafe2ee56c669" translate="yes" xml:space="preserve">
          <source>If the data is Base64 encoded, it will be decoded to bytes.</source>
          <target state="translated">データがBase64エンコードされている場合は、バイトにデコードされます。</target>
        </trans-unit>
        <trans-unit id="058bc39e38542e095dcf8c82b560a3f531e64628" translate="yes" xml:space="preserve">
          <source>If the data is not Base64 encoded, it will be decoded by unescaping percent-escaped characters and returning byte values of each unescaped character. The bytes will not be, e.g., UTF-8 decoded.</source>
          <target state="translated">データがBase64エンコードされていない場合は、パーセントエスケープされた文字をアンエスケープし、各アンエスケープされた文字のバイト値を返すことでデコードされます。バイトは、例えば UTF-8 デコードされたものではありません。</target>
        </trans-unit>
        <trans-unit id="5148d5f4af1ddee616b26f4d26d880114c4b6635" translate="yes" xml:space="preserve">
          <source>If the default validation behavior is too restrictive then a new NodeValidator should be created, either extending or wrapping a default validator and overriding the validation APIs.</source>
          <target state="translated">デフォルトのバリデーションの動作があまりにも制限されている場合は、新しいノードバリデータを作成し、デフォルトのバリデータを拡張するかラップしてバリデーションAPIをオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="d180cf1519d829408109a45697f947823cd22454" translate="yes" xml:space="preserve">
          <source>If the deprecated use is inside a library, class or method which is itself deprecated, the tool should not bother the user about it. A deprecated feature is expected to use other deprecated features.</source>
          <target state="translated">非推奨の使用が、それ自体が非推奨のライブラリ、クラス、メソッドの中にある場合、ツールはそれについてユーザを悩ませるべきではありません。非推奨の機能は、他の非推奨の機能を使うことが期待されます。</target>
        </trans-unit>
        <trans-unit id="2b2f366dffc131bf441ce2b1faa165ae87a7eb7c" translate="yes" xml:space="preserve">
          <source>If the directory cannot be created an exception is thrown.</source>
          <target state="translated">ディレクトリを作成できない場合は例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="40230ae10fcedfa285853c9b24a7b0ce48ec345a" translate="yes" xml:space="preserve">
          <source>If the distance between &lt;code&gt;a.x&lt;/code&gt; and &lt;code&gt;b.x&lt;/code&gt; is not representable (which can happen if one or both is a double), the actual right edge might be slightly off from &lt;code&gt;max(a.x, b.x)&lt;/code&gt;. Similar for the y-coordinates and the bottom edge.</source>
          <target state="translated">&lt;code&gt;a.x&lt;/code&gt; と &lt;code&gt;b.x&lt;/code&gt; 間の距離が表現できない場合（一方または両方がdoubleの場合に発生する可能性があります）、実際の右端が &lt;code&gt;max(a.x, b.x)&lt;/code&gt; からわずかにずれている可能性があります。Y座標と下端についても同様です。</target>
        </trans-unit>
        <trans-unit id="bb04b3974748fff8d8433aec016c37d7fdf30040" translate="yes" xml:space="preserve">
          <source>If the duration is 0 or less, it completes no sooner than in the next event-loop iteration, after all microtasks have run.</source>
          <target state="translated">持続時間が0以下の場合は、すべてのマイクロタスクが実行された後、次のイベントループの反復よりも早く終了しません。</target>
        </trans-unit>
        <trans-unit id="8cbfb0bc0cb83acdb01390c9d515053e7c1eb370" translate="yes" xml:space="preserve">
          <source>If the encoding is standardized, this is the lower-case version of one of the IANA official names for the character set (see &lt;a href=&quot;http://www.iana.org/assignments/character-sets/character-sets.xml&quot;&gt;http://www.iana.org/assignments/character-sets/character-sets.xml&lt;/a&gt;)</source>
          <target state="translated">エンコーディングが標準化されている場合、これは文字セットのIANA公式名の1つを小文字にしたものです（&lt;a href=&quot;http://www.iana.org/assignments/character-sets/character-sets.xml&quot;&gt;http://www.iana.org/assignments/character-sets/character-sets.xmlを参照&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="ab926b9571934e69344f3f0b90f553e9f8155cb4" translate="yes" xml:space="preserve">
          <source>If the equality operator and &lt;a href=&quot;comparable/compareto&quot;&gt;compareTo&lt;/a&gt; disagree, the comparison operators should follow the equality operator, and will likely also disagree with &lt;a href=&quot;comparable/compareto&quot;&gt;compareTo&lt;/a&gt;. Otherwise they should match the &lt;a href=&quot;comparable/compareto&quot;&gt;compareTo&lt;/a&gt; method, so that &lt;code&gt;a &amp;lt; b&lt;/code&gt; iff &lt;code&gt;a.compareTo(b) &amp;lt; 0&lt;/code&gt;.</source>
          <target state="translated">等値演算子と&lt;a href=&quot;comparable/compareto&quot;&gt;compareToが&lt;/a&gt;一致しない場合、比較演算子は等値演算子の後に続く必要があり、&lt;a href=&quot;comparable/compareto&quot;&gt;compareTo&lt;/a&gt;とも一致しない可能性があります。それ以外の場合は、&lt;a href=&quot;comparable/compareto&quot;&gt;compareTo&lt;/a&gt;メソッドと一致するため、 &lt;code&gt;a &amp;lt; b&lt;/code&gt; iff &lt;code&gt;a.compareTo(b) &amp;lt; 0&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="257d799e66da54e0404672a4896362b5958484ff" translate="yes" xml:space="preserve">
          <source>If the equality relation used by the set is not identity, then the returned object may not be &lt;em&gt;identical&lt;/em&gt; to &lt;code&gt;object&lt;/code&gt;. Some set implementations may not be able to implement this method. If the &lt;a href=&quot;contains&quot;&gt;contains&lt;/a&gt; method is computed, rather than being based on an actual object instance, then there may not be a specific object instance representing the set element.</source>
          <target state="translated">セットで使用する等号関係がアイデンティティでない場合は、返されるオブジェクトは、できない場合があり&lt;em&gt;、同一&lt;/em&gt;の &lt;code&gt;object&lt;/code&gt; 。一部のセット実装では、このメソッドを実装できない場合があります。場合&lt;a href=&quot;contains&quot;&gt;含ま&lt;/a&gt;方法ではなく、実際のオブジェクトのインスタンスに基づいてされるよりも、計算され、次いで、セット要素を表す特定のオブジェクトインスタンスが存在しなくてもよいです。</target>
        </trans-unit>
        <trans-unit id="9ffb70ea0978a6589a07e568e80810763067896a" translate="yes" xml:space="preserve">
          <source>If the error is intercepted, the &lt;code&gt;onError&lt;/code&gt; function can decide what to do with it. It can throw if it wants to raise a new (or the same) error, or simply return to make this stream forget the error. If the received &lt;code&gt;error&lt;/code&gt; value is thrown again by the &lt;code&gt;onError&lt;/code&gt; function, it acts like a &lt;code&gt;rethrow&lt;/code&gt; and it is emitted along with its original stack trace, not the stack trace of the &lt;code&gt;throw&lt;/code&gt; inside &lt;code&gt;onError&lt;/code&gt;.</source>
          <target state="translated">エラーがインターセプトされた場合、 &lt;code&gt;onError&lt;/code&gt; 関数はそれをどう処理するかを決定できます。新しい（または同じ）エラーを発生させたい場合はスローするか、単に戻ってこのストリームにエラーを忘れさせます。受信した場合 &lt;code&gt;error&lt;/code&gt; 値は、再びスローさ &lt;code&gt;onError&lt;/code&gt; 機能、それはのような役割を果たし &lt;code&gt;rethrow&lt;/code&gt; し、それを元のスタックトレース、ないのスタックトレースと一緒に放出される &lt;code&gt;throw&lt;/code&gt; 内部 &lt;code&gt;onError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="466506800b166f395f0684d7769ae63ce0f1d24e" translate="yes" xml:space="preserve">
          <source>If the event is an error event or a done event, it is emitted directly by the returned stream.</source>
          <target state="translated">イベントがエラーイベントや完了イベントの場合は、返されたストリームから直接出力されます。</target>
        </trans-unit>
        <trans-unit id="9800e7ee977b2ed4fd6019e8ff49d4583ccde8e9" translate="yes" xml:space="preserve">
          <source>If the executable environment does not support &lt;a href=&quot;script&quot;&gt;script&lt;/a&gt;, the URI is empty.</source>
          <target state="translated">実行可能環境が&lt;a href=&quot;script&quot;&gt;scriptを&lt;/a&gt;サポートしていない場合、URIは空です。</target>
        </trans-unit>
        <trans-unit id="f836b951baca2c8b813d91fd2b928394d55c1013" translate="yes" xml:space="preserve">
          <source>If the expression evaluates to a result &lt;em&gt;r&lt;/em&gt;, this method returns the result of calling &lt;a href=&quot;../reflect&quot;&gt;reflect&lt;/a&gt;(&lt;em&gt;r&lt;/em&gt;).</source>
          <target state="translated">式が結果&lt;em&gt;rに&lt;/em&gt;評価される場合、このメソッドは、&lt;a href=&quot;../reflect&quot;&gt;reflect&lt;/a&gt;（&lt;em&gt;r&lt;/em&gt;）を呼び出した結果を返します。</target>
        </trans-unit>
        <trans-unit id="cda0c09089f2dac38ea7fcd0bc35e1d8cf3a4838" translate="yes" xml:space="preserve">
          <source>If the first event is an error, the returned future is completed with that error.</source>
          <target state="translated">最初のイベントがエラーの場合、返された未来はそのエラーで終了します。</target>
        </trans-unit>
        <trans-unit id="57eb70b3e2ccbeb3694d878bf4fb9d8f8a780637" translate="yes" xml:space="preserve">
          <source>If the first part of the data URI is empty, it defaults to &lt;code&gt;text/plain&lt;/code&gt;.</source>
          <target state="translated">データURIの最初の部分が空の場合、デフォルトで &lt;code&gt;text/plain&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="4e3cbec8144140b64d992ee4552ad8018ffe6d0c" translate="yes" xml:space="preserve">
          <source>If the future never completes, the stream will not produce any events.</source>
          <target state="translated">未来が完成しなければ、ストリームではイベントは発生しません。</target>
        </trans-unit>
        <trans-unit id="5a036de858604409f7441944491ce7de4a9529b2" translate="yes" xml:space="preserve">
          <source>If the height or width of this canvas element is 0, then 'data:' is returned, representing no data.</source>
          <target state="translated">この canvas 要素の高さまたは幅が 0 の場合は、データがないことを表す 'data:' が返されます。</target>
        </trans-unit>
        <trans-unit id="9b497fb32bfd99060ba9c02efd52665452b136c3" translate="yes" xml:space="preserve">
          <source>If the hint can be parameterized, an extra &lt;a href=&quot;pragma/options&quot;&gt;options&lt;/a&gt; object can be added as well.</source>
          <target state="translated">ヒントをパラメーター化できる場合は、追加の&lt;a href=&quot;pragma/options&quot;&gt;オプション&lt;/a&gt;オブジェクトも追加できます。</target>
        </trans-unit>
        <trans-unit id="37c430a29af14f0256cf16c079d7dfe99a121001" translate="yes" xml:space="preserve">
          <source>If the host is an IP version 6 address, the surrounding &lt;code&gt;[&lt;/code&gt; and &lt;code&gt;]&lt;/code&gt; is removed.</source>
          <target state="translated">ホストがIPバージョン6アドレスの場合、周囲の &lt;code&gt;[&lt;/code&gt; および &lt;code&gt;]&lt;/code&gt; が削除されます。</target>
        </trans-unit>
        <trans-unit id="4a48113e333c1ecb67207d2b6519fa68ba7e28e2" translate="yes" xml:space="preserve">
          <source>If the image is larger than canvas will allow, the image will be clipped to fit the available space.</source>
          <target state="translated">画像がキャンバスの許容範囲よりも大きい場合は、画像は利用可能なスペースに合わせて切り取られます。</target>
        </trans-unit>
        <trans-unit id="83f1892bd08df7e44406b93e113ba647cec637c0" translate="yes" xml:space="preserve">
          <source>If the input fits in &lt;code&gt;width&lt;/code&gt; bits without truncation, the result is the same as the input. The minimum width needed to avoid truncation of &lt;code&gt;x&lt;/code&gt; is given by &lt;code&gt;x.bitLength&lt;/code&gt;, i.e.</source>
          <target state="translated">入力が切り捨てなしで &lt;code&gt;width&lt;/code&gt; ビットに収まる場合、結果は入力と同じです。 &lt;code&gt;x&lt;/code&gt; の切り捨てを回避するために必要な最小幅は、 &lt;code&gt;x.bitLength&lt;/code&gt; によって指定されます。つまり、</target>
        </trans-unit>
        <trans-unit id="b0bf247dd2c946af55e0e4614e193946b269b60a" translate="yes" xml:space="preserve">
          <source>If the input value fits in &lt;code&gt;width&lt;/code&gt; bits without truncation, the result is the same as the input. The minimum width needed to avoid truncation of &lt;code&gt;x&lt;/code&gt; is &lt;code&gt;x.bitLength + 1&lt;/code&gt;, i.e.</source>
          <target state="translated">入力値が切り捨てなしで &lt;code&gt;width&lt;/code&gt; ビットに収まる場合、結果は入力と同じです。 &lt;code&gt;x&lt;/code&gt; の切り捨てを回避するために必要な最小幅は &lt;code&gt;x.bitLength + 1&lt;/code&gt; 。つまり、</target>
        </trans-unit>
        <trans-unit id="8b472a807395b535075d4c49e0a303ba3000ee74" translate="yes" xml:space="preserve">
          <source>If the invocation causes a compilation error the effect is the same as if a non-reflective compilation error had been encountered.</source>
          <target state="translated">呼び出しによってコンパイルエラーが発生した場合は、反射的ではないコンパイルエラーが発生した場合と同じ効果が得られます。</target>
        </trans-unit>
        <trans-unit id="38a243f1746755be72c50453290822b6baab2045" translate="yes" xml:space="preserve">
          <source>If the invocation causes a compilation error, the effect is the same as if a non-reflective compilation error had been encountered.</source>
          <target state="translated">呼び出しによってコンパイルエラーが発生した場合は、反射的ではないコンパイルエラーが発生した場合と同じ効果が得られます。</target>
        </trans-unit>
        <trans-unit id="f18c09ff63b4f1a61980447297699318bef37647" translate="yes" xml:space="preserve">
          <source>If the invocation returns a result &lt;em&gt;r&lt;/em&gt;, this method returns the result of calling &lt;a href=&quot;../reflect&quot;&gt;reflect&lt;/a&gt;(&lt;code&gt;value&lt;/code&gt;).</source>
          <target state="translated">呼び出しが結果&lt;em&gt;rを&lt;/em&gt;返す場合、このメソッドは、&lt;a href=&quot;../reflect&quot;&gt;reflect&lt;/a&gt;（ &lt;code&gt;value&lt;/code&gt; ）を呼び出した結果を返します。</target>
        </trans-unit>
        <trans-unit id="fa3e1b15b198fdc3a864112481cfd27624ed0344" translate="yes" xml:space="preserve">
          <source>If the invocation returns a result &lt;em&gt;r&lt;/em&gt;, this method returns the result of calling &lt;a href=&quot;../reflect&quot;&gt;reflect&lt;/a&gt;(&lt;em&gt;r&lt;/em&gt;).</source>
          <target state="translated">呼び出しが結果&lt;em&gt;rを&lt;/em&gt;返す場合、このメソッドは、&lt;a href=&quot;../reflect&quot;&gt;reflect&lt;/a&gt;（&lt;em&gt;r&lt;/em&gt;）を呼び出した結果を返します。</target>
        </trans-unit>
        <trans-unit id="e9620d99e5e8716a0d61577c5478f036ae046ac3" translate="yes" xml:space="preserve">
          <source>If the invocation throws an exception &lt;em&gt;e&lt;/em&gt; (that it does not catch) this method throws &lt;em&gt;e&lt;/em&gt;.</source>
          <target state="translated">呼び出しが例外&lt;em&gt;e&lt;/em&gt;（スローされない）をスローした場合、このメソッドは&lt;em&gt;eを&lt;/em&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="af3404d2a08237b04d42c799e32be415d47ec4f6" translate="yes" xml:space="preserve">
          <source>If the invocation throws an exception &lt;em&gt;e&lt;/em&gt; (that it does not catch), this method throws &lt;em&gt;e&lt;/em&gt;.</source>
          <target state="translated">呼び出しが例外&lt;em&gt;e&lt;/em&gt;（スローしない）をスローした場合、このメソッドは&lt;em&gt;eを&lt;/em&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="608c66f8af37fbf7f7c159f2ba0b1ef3d3abbf7c" translate="yes" xml:space="preserve">
          <source>If the invoked callback throws, the returned future is completed with the thrown error and a stack trace for the error. In the case of &lt;code&gt;onError&lt;/code&gt;, if the exception thrown is &lt;code&gt;identical&lt;/code&gt; to the error argument to &lt;code&gt;onError&lt;/code&gt;, the throw is considered a rethrow, and the original stack trace is used instead.</source>
          <target state="translated">呼び出されたコールバックがスローした場合、返されたフューチャーはスローされたエラーとエラーのスタックトレースで完了します。以下の場合 &lt;code&gt;onError&lt;/code&gt; スローされた例外がある場合は、 &lt;code&gt;identical&lt;/code&gt; にエラー引数 &lt;code&gt;onError&lt;/code&gt; 、スローが再スローとみなされ、元のスタックトレースが代わりに使用されます。</target>
        </trans-unit>
        <trans-unit id="3e26fc733825800800fb548bbc0c6ca4062b40b0" translate="yes" xml:space="preserve">
          <source>If the isolate has terminated before it can receive this request, no exit message will be sent.</source>
          <target state="translated">このリクエストを受信する前にアイソレートが終了した場合、終了メッセージは送信されません。</target>
        </trans-unit>
        <trans-unit id="34e7d279664b164260bd6a903fc76aaa5fbb65c0" translate="yes" xml:space="preserve">
          <source>If the isolate is alive, it will eventually send &lt;code&gt;response&lt;/code&gt; (defaulting to &lt;code&gt;null&lt;/code&gt;) on the response port.</source>
          <target state="translated">アイソレートが生きている場合、最終的には応答ポートで &lt;code&gt;response&lt;/code&gt; （デフォルトは &lt;code&gt;null&lt;/code&gt; ）を送信します。</target>
        </trans-unit>
        <trans-unit id="1fa7daa8e92bb4205c9f5d476f62a6d45ae23db8" translate="yes" xml:space="preserve">
          <source>If the isolate is spawned in a paused state, use this capability as argument to the &lt;a href=&quot;resume&quot;&gt;resume&lt;/a&gt; method in order to resume the paused isolate.</source>
          <target state="translated">分離が一時停止状態で生成される場合、一時停止した分離を再開するには、この機能を&lt;a href=&quot;resume&quot;&gt;resume&lt;/a&gt;メソッドの引数として使用します。</target>
        </trans-unit>
        <trans-unit id="aaac39c8fb2d5c150cf749a049cb802f96e1baa6" translate="yes" xml:space="preserve">
          <source>If the isolate is using a &lt;a href=&quot;packageroot&quot;&gt;packageRoot&lt;/a&gt; or the isolate has not been setup for package resolution, this getter returns &lt;code&gt;null&lt;/code&gt;, otherwise it returns the package config URI.</source>
          <target state="translated">分離&lt;a href=&quot;packageroot&quot;&gt;プログラムがpackageRoot&lt;/a&gt;を使用しているか、分離プログラムがパッケージ解決用にセットアップされていない場合、このゲッターは &lt;code&gt;null&lt;/code&gt; を返します。それ以外の場合は、パッケージ構成URIを返します。</target>
        </trans-unit>
        <trans-unit id="83faccf62b1a0f33cc06206e1ac8447c8991f45a" translate="yes" xml:space="preserve">
          <source>If the key is not present and &lt;code&gt;ifAbsent&lt;/code&gt; is provided, calls &lt;code&gt;ifAbsent&lt;/code&gt; and adds the key with the returned value to the map.</source>
          <target state="translated">キーが存在せず、 &lt;code&gt;ifAbsent&lt;/code&gt; が指定されている場合、 &lt;code&gt;ifAbsent&lt;/code&gt; を呼び出し、戻り値を含むキーをマップに追加します。</target>
        </trans-unit>
        <trans-unit id="bcd31e6bf8da3ef093b7df043835ee3c56b0a431" translate="yes" xml:space="preserve">
          <source>If the key is present, invokes &lt;code&gt;update&lt;/code&gt; with the current value and stores the new value in the map.</source>
          <target state="translated">キーが存在する場合、現在の値で &lt;code&gt;update&lt;/code&gt; を呼び出し、新しい値をマップに格納します。</target>
        </trans-unit>
        <trans-unit id="e4553146a41023139d6de122fa057484176c52ad" translate="yes" xml:space="preserve">
          <source>If the key was already in the map, its associated value is changed. Otherwise the key/value pair is added to the map.</source>
          <target state="translated">キーがすでにマップ内にある場合は、そのキーに関連付けられた値が変更されます。それ以外の場合は、キーと値のペアがマップに追加されます。</target>
        </trans-unit>
        <trans-unit id="0990e8387c2e430b3d4b2eaa6c0f667375afe091" translate="yes" xml:space="preserve">
          <source>If the library fails to load, the Future will complete with a DeferredLoadException.</source>
          <target state="translated">ライブラリのロードに失敗した場合、FutureはDeferredLoadExceptionで終了します。</target>
        </trans-unit>
        <trans-unit id="0f08c7d7a7cffb72d0482a98a157e7559f09ea9c" translate="yes" xml:space="preserve">
          <source>If the link does not exist, or is not a link, the future completes with a FileSystemException.</source>
          <target state="translated">リンクが存在しない場合や、リンクでない場合は、FileSystemExceptionで未来が終了します。</target>
        </trans-unit>
        <trans-unit id="c040048a286efde0ca0056822c3b3e6e06885e23" translate="yes" xml:space="preserve">
          <source>If the link does not exist, or is not a link, throws a FileSystemException.</source>
          <target state="translated">リンクが存在しない場合、またはリンクでない場合は、FileSystemExceptionをスローします。</target>
        </trans-unit>
        <trans-unit id="563d66ff60752e6fb0a7f5431b8e2e4e49f1d36e" translate="yes" xml:space="preserve">
          <source>If the member is a getter, setter or operator, the named arguments map is always empty.</source>
          <target state="translated">メンバがゲッター、セッター、または演算子の場合、名前付き引数マップは常に空です。</target>
        </trans-unit>
        <trans-unit id="73b68bffd8f4d8d4f59231e4ab951d8269d2909a" translate="yes" xml:space="preserve">
          <source>If the member is a getter, setter or operator, the type argument list is always empty.</source>
          <target state="translated">メンバがゲッター、セッター、または演算子の場合、型の引数リストは常に空です。</target>
        </trans-unit>
        <trans-unit id="b19d67bce47552049ff9528a42a2d6b20b6fa7fa" translate="yes" xml:space="preserve">
          <source>If the member is a getter, the positional arguments list is always empty.</source>
          <target state="translated">メンバがゲッターの場合、位置引数リストは常に空です。</target>
        </trans-unit>
        <trans-unit id="f1043fb75f88225d0639af68dd3290766f94e4c8" translate="yes" xml:space="preserve">
          <source>If the named arguments are omitted, they default to no named arguments.</source>
          <target state="translated">指定された引数を省略した場合は、指定された引数がないことがデフォルトとなります。</target>
        </trans-unit>
        <trans-unit id="42065807feb024937434d298ae2cf79fabf58011" translate="yes" xml:space="preserve">
          <source>If the node already exists in this document, it will be removed from its current parent node, then added to this node.</source>
          <target state="translated">このドキュメントにすでにノードが存在する場合、そのノードは現在の親ノードから削除され、このノードに追加されます。</target>
        </trans-unit>
        <trans-unit id="b73fc542896fb7eea75b9e65b78f0c640ec8d1ff" translate="yes" xml:space="preserve">
          <source>If the number does not fit, clamps to the max (or min) integer.</source>
          <target state="translated">数値が合わない場合は、最大(または最小)整数にクランプします。</target>
        </trans-unit>
        <trans-unit id="ed1b43aa37338d55ebfd80db75573af5fa6db49a" translate="yes" xml:space="preserve">
          <source>If the number is not representable as a &lt;a href=&quot;../double-class&quot;&gt;double&lt;/a&gt;, an approximation is returned. For numerically large integers, the approximation may be infinite.</source>
          <target state="translated">数値が&lt;a href=&quot;../double-class&quot;&gt;double&lt;/a&gt;として表現できない場合、近似値が返されます。数値的に大きな整数の場合、近似は無限になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="1dbc1ecc4b4e906b3de7cef1ae7d3adaabb9ae6c" translate="yes" xml:space="preserve">
          <source>If the object iterated over is changed during the iteration, the behavior is unspecified.</source>
          <target state="translated">反復されたオブジェクトが反復中に変更された場合、動作は不定です。</target>
        </trans-unit>
        <trans-unit id="5c773a56786b3ee74231cb237ca32f829ae02a9f" translate="yes" xml:space="preserve">
          <source>If the operands have the same sign, the result is non-negative, otherwise the result is negative.</source>
          <target state="translated">オペランドが同じ符号を持つ場合、結果は非負、そうでない場合は負となります。</target>
        </trans-unit>
        <trans-unit id="1cc9470fa68bb43d7a7766fa4613d3c995186b1f" translate="yes" xml:space="preserve">
          <source>If the optional &lt;code&gt;timeout&lt;/code&gt; parameter is passed, &lt;a href=&quot;waitfor&quot;&gt;waitFor&lt;/a&gt; throws a &lt;a href=&quot;../dart-async/timeoutexception-class&quot;&gt;TimeoutException&lt;/a&gt; if the &lt;a href=&quot;../dart-async/future-class&quot;&gt;Future&lt;/a&gt; is not completed within the specified period.</source>
          <target state="translated">オプションの場合は &lt;code&gt;timeout&lt;/code&gt; パラメータが渡され、&lt;a href=&quot;waitfor&quot;&gt;のwaitForは&lt;/a&gt;スロー&lt;a href=&quot;../dart-async/timeoutexception-class&quot;&gt;TimeoutExceptionを&lt;/a&gt;場合&lt;a href=&quot;../dart-async/future-class&quot;&gt;今後は&lt;/a&gt;、指定期間内に完了されていません。</target>
        </trans-unit>
        <trans-unit id="036be42253f2370d977d4418fa6eda92160600dc" translate="yes" xml:space="preserve">
          <source>If the parameters of the media type contains a &lt;code&gt;charset&lt;/code&gt; parameter then this returns its value, otherwise it returns &lt;code&gt;US-ASCII&lt;/code&gt;, which is the default charset for data URIs. If the value contain non-ASCII percent escapes, they are decoded as UTF-8.</source>
          <target state="translated">メディアタイプのパラメータに &lt;code&gt;charset&lt;/code&gt; パラメータが含まれている場合は、その値が返されます。それ以外の場合は、データURIのデフォルトの文字セットである &lt;code&gt;US-ASCII&lt;/code&gt; が返されます。値に非ASCIIパーセントエスケープが含まれている場合、それらはUTF-8としてデコードされます。</target>
        </trans-unit>
        <trans-unit id="c793470ea280a18210b1b028ee51442bf0816f4f" translate="yes" xml:space="preserve">
          <source>If the path passed is not a valid file path, an error is thrown.</source>
          <target state="translated">渡されたパスが有効なファイルパスでない場合は、エラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="97d4ec43618acdfdb0735b4552b970eede1537db" translate="yes" xml:space="preserve">
          <source>If the path starts with a path separator, an absolute URI (with the &lt;code&gt;file&lt;/code&gt; scheme and an empty authority) is created. Otherwise a relative URI reference with no scheme or authority is created. One exception from this rule is that when Windows semantics is used and the path starts with a drive letter followed by a colon (&quot;:&quot;) and a path separator, then an absolute URI is created.</source>
          <target state="translated">パスがパス区切り文字で始まる場合、絶対URI（ &lt;code&gt;file&lt;/code&gt; スキームと空の権限を持つ）が作成されます。それ以外の場合、スキームや権限のない相対URI参照が作成されます。この規則の1つの例外は、Windowsセマンティクスが使用され、パスがドライブ文字で始まり、その後にコロン（ &quot;：&quot;）とパス区切り文字が続く場合、絶対URIが作成されることです。</target>
        </trans-unit>
        <trans-unit id="db94400e3881a76385d6484d888140236bd8402b" translate="yes" xml:space="preserve">
          <source>If the pattern matches the empty string at some point, the next match is found by starting at the previous match's end plus one.</source>
          <target state="translated">パターンがある時点で空の文字列にマッチした場合、次のマッチは、前のマッチの終わりに1を足したところから始まることで発見されます。</target>
        </trans-unit>
        <trans-unit id="0bb58fc33f723cf6cd882b3066dbd8ee6c3da8a5" translate="yes" xml:space="preserve">
          <source>If the persistent connection state needs to be set, it must be set before the body is written to. Setting the persistent connection state after writing to the body will throw a &lt;code&gt;StateError&lt;/code&gt;.</source>
          <target state="translated">永続的な接続状態を設定する必要がある場合は、本体に書き込む前に設定する必要があります。本文への書き込み後に永続的な接続状態を設定すると、 &lt;code&gt;StateError&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="ebeb209f268566d7259ee8c907eaec5dd3864117" translate="yes" xml:space="preserve">
          <source>If the port number is the default port number (zero for unrecognized schemes, with http (80) and https (443) being recognized), then the port is made implicit and omitted from the URI.</source>
          <target state="translated">ポート番号がデフォルトのポート番号(認識されていないスキームの場合は0、http(80)とhttps(443)が認識されている)であれば、ポートは暗黙のものとされ、URIから省略されます。</target>
        </trans-unit>
        <trans-unit id="afa42fe4a0ee068edf3ab8bd0ecf0fd601ff088a" translate="yes" xml:space="preserve">
          <source>If the program cannot provide a cryptographically secure source of random numbers, it throws an &lt;a href=&quot;../../dart-core/unsupportederror-class&quot;&gt;UnsupportedError&lt;/a&gt;.</source>
          <target state="translated">プログラムが暗号で保護された乱数のソースを提供できない場合は、&lt;a href=&quot;../../dart-core/unsupportederror-class&quot;&gt;UnsupportedErrorが&lt;/a&gt;スローされます。</target>
        </trans-unit>
        <trans-unit id="d51f56813b1df452c7845495d7b8f94f6859c474" translate="yes" xml:space="preserve">
          <source>If the qualified name matches a library name, the matching library is the target.</source>
          <target state="translated">資格のある名前がライブラリ名と一致した場合、一致したライブラリが対象となります。</target>
        </trans-unit>
        <trans-unit id="b3cc1a4003bc661a6424e8c3fa9c160749294f46" translate="yes" xml:space="preserve">
          <source>If the reflectee is a function with a declared return type, the returned location gives the position of the function's return type at the reflectee's point of declaration. Otherwise. the returned location gives the position of the function's name at the reflectee's point of declaration.</source>
          <target state="translated">リフレクティが宣言された戻り値の型を持つ関数の場合、戻り値の位置は、リフレクティの宣言点における関数の戻り値の型の位置を示します。そうでない場合は、戻り値の位置は、反射体の宣言時点での関数名の位置になります。</target>
        </trans-unit>
        <trans-unit id="64462a22e2f802e1e408f8a3b7a78483c4cc93c6" translate="yes" xml:space="preserve">
          <source>If the reflectee is a library, class, typedef, function or type variable with associated metadata, the returned location gives the position of the first metadata declaration associated with the reflectee.</source>
          <target state="translated">リフレクティがメタデータが関連付けられたライブラリ、クラス、typedef、関数、または型変数である場合、返される位置は、リフレクティに関連付けられた最初のメタデータ宣言の位置を示します。</target>
        </trans-unit>
        <trans-unit id="3cf3f75052c281306f8211bfa685c08aed187263" translate="yes" xml:space="preserve">
          <source>If the reflectee is a library, the returned location gives the position of the keyword 'library' at the reflectee's point of declaration, if the reflectee is a named library, or the first character of the first line in the compilation unit defining the reflectee if the reflectee is anonymous.</source>
          <target state="translated">リフレクティがライブラリの場合、返された位置は、リフレクティが名前付きライブラリの場合は、リフレクティの宣言点におけるキーワード「library」の位置を、リフレクティが匿名の場合は、リフレクティを定義しているコンパイルユニットの最初の行の最初の文字を与えます。</target>
        </trans-unit>
        <trans-unit id="af1d841a08763d35b7aa0573930a89f3802dd7dc" translate="yes" xml:space="preserve">
          <source>If the reflectee is a typedef the returned location gives the position of the of the keyword 'typedef' at the reflectee's point of declaration.</source>
          <target state="translated">リフレクティが typedef の場合、戻り値の位置は、リフレクティの宣言点でのキーワード「typedef」の位置を表します。</target>
        </trans-unit>
        <trans-unit id="51ba06a8c0f1b5202d62a5295fe06751be7c4e79" translate="yes" xml:space="preserve">
          <source>If the reflectee is a variable, the returned location gives the position of the variable name at its point of declaration.</source>
          <target state="translated">リフレクタが変数の場合、返された位置は、変数名が宣言された時点での変数名の位置を示します。</target>
        </trans-unit>
        <trans-unit id="d6c4309b4a99231863854676a8e147054f9900de" translate="yes" xml:space="preserve">
          <source>If the reflectee is an abstract class, the returned location gives the position of the keyword 'abstract' at the reflectee's point of declaration. Otherwise, if the reflectee is a class, the returned location gives the position of the keyword 'class' at the reflectee's point of declaration.</source>
          <target state="translated">リフレクティが抽象クラスの場合、返される場所は、リフレクティの宣言位置にあるキーワード 'abstract' の位置を指定します。それ以外の場合は、反射体がクラスの場合は、反射体の宣言点におけるキーワード 'class' の位置が返されます。</target>
        </trans-unit>
        <trans-unit id="6703e55e70115442cbded5dc7f7e837a17df0f0d" translate="yes" xml:space="preserve">
          <source>If the reflectee is an invocation of a generic class, the type arguments are the bindings of its type parameters. If the reflectee is the original declaration of a generic, it has no type arguments and this method returns an empty list. If the reflectee is not generic, then it has no type arguments and this method returns an empty list.</source>
          <target state="translated">リフレクティがジェネリック・クラスの呼び出しである場合、型引数はその型パラメータのバインディングです。リフレクティがジェネリックのオリジナル宣言である場合、型引数を持たず、このメソッドは空のリストを返します。リフレクティがジェネリックでない場合は、型引数を持たず、このメソッドは空のリストを返します。</target>
        </trans-unit>
        <trans-unit id="730d2bda9e98353cb6e80c09fe57e4bfa552d9c9" translate="yes" xml:space="preserve">
          <source>If the regexp does match multiple lines, the &quot;^&quot; and &quot;$&quot; characters match the beginning and end of lines. If not, the character match the beginning and end of the input.</source>
          <target state="translated">正規表現が複数行にマッチした場合、&quot;^&quot;と&quot;$&quot;は行の先頭と末尾にマッチします。そうでない場合は、その文字は入力の最初と最後にマッチします。</target>
        </trans-unit>
        <trans-unit id="8af7cd95dbdb7448f023da044ee0d408f80c5ec7" translate="yes" xml:space="preserve">
          <source>If the regular expression is not case sensitive, it will match an input letter with a pattern letter even if the two letters are different case versions of the same letter.</source>
          <target state="translated">正規表現が大文字小文字を区別しない場合、2つの文字が同じ文字の異なる大文字小文字のバージョンであっても、入力された文字とパターン文字が一致します。</target>
        </trans-unit>
        <trans-unit id="f4cc1c88fe9ccc1e96d3acf443299419d2ee39e6" translate="yes" xml:space="preserve">
          <source>If the result of executing &lt;code&gt;computation&lt;/code&gt; throws, the returned future is completed with the error.</source>
          <target state="translated">&lt;code&gt;computation&lt;/code&gt; の実行結果がスローされた場合、返されたフューチャーはエラーで完了します。</target>
        </trans-unit>
        <trans-unit id="64a94a856aa40ac205ae032bdcf709353ee4e64e" translate="yes" xml:space="preserve">
          <source>If the resulting string isn't above 80 characters, more elements are included from the start of the iterable.</source>
          <target state="translated">結果の文字列が80文字を超えていない場合は、イテレート可能な文字列の先頭からさらに多くの要素が含まれます。</target>
        </trans-unit>
        <trans-unit id="7e86ddf384c7b3dc8f707b72948fea4ba32c134c" translate="yes" xml:space="preserve">
          <source>If the returned target is a relative path, it is relative to the directory containing the link.</source>
          <target state="translated">返されるターゲットが相対パスの場合は、リンクを含むディレクトリからの相対パスとなります。</target>
        </trans-unit>
        <trans-unit id="176219b941f06dd7509a82527d13719474d75036" translate="yes" xml:space="preserve">
          <source>If the returned value is itself a &lt;a href=&quot;../future-class&quot;&gt;Future&lt;/a&gt;, completion of the created future will wait until the returned future completes, and will then complete with the same result.</source>
          <target state="translated">戻り値自体が&lt;a href=&quot;../future-class&quot;&gt;Futureの&lt;/a&gt;場合、作成されたfutureの完了は、返されたfutureが完了するまで待機してから、同じ結果で完了します。</target>
        </trans-unit>
        <trans-unit id="a5eb48103dd7c2bc34134fd0f2857034aa569a3e" translate="yes" xml:space="preserve">
          <source>If the same port has been passed via &lt;a href=&quot;adderrorlistener&quot;&gt;addErrorListener&lt;/a&gt; more than once, only one call to &lt;code&gt;removeErrorListener&lt;/code&gt; is needed to stop it from receiving uncaught errors.</source>
          <target state="translated">同じポートが&lt;a href=&quot;adderrorlistener&quot;&gt;addErrorListener&lt;/a&gt;を介して複数回渡された場合、キャッチされていないエラーを受信しないようにするには、 &lt;code&gt;removeErrorListener&lt;/code&gt; を 1回呼び出すだけで済みます。</target>
        </trans-unit>
        <trans-unit id="da22c33c91bee6c3141542f630c0fd6c60ab5bbf" translate="yes" xml:space="preserve">
          <source>If the same port has been passed via &lt;a href=&quot;addonexitlistener&quot;&gt;addOnExitListener&lt;/a&gt; more than once, only one call to &lt;code&gt;removeOnExitListener&lt;/code&gt; is needed to stop it from receiving exit messages.</source>
          <target state="translated">同じポートを経由して渡された場合&lt;a href=&quot;addonexitlistener&quot;&gt;addOnExitListener&lt;/a&gt;複数回に一つだけのコール &lt;code&gt;removeOnExitListener&lt;/code&gt; が終了メッセージを受信するのを停止するために必要とされています。</target>
        </trans-unit>
        <trans-unit id="54f08bd412b2ad379ba7c68dc71bef1cfd94309b" translate="yes" xml:space="preserve">
          <source>If the script argument on the command line is relative, it is resolved to an absolute URI before fetching the script, and that absolute URI is returned.</source>
          <target state="translated">コマンドラインのスクリプト引数が相対的なものである場合、スクリプトをフェッチする前に絶対 URI に解決され、その絶対 URI が返されます。</target>
        </trans-unit>
        <trans-unit id="890bc30b4c9e7af7e3fe5267c9b31eef34bebb70" translate="yes" xml:space="preserve">
          <source>If the session is being initialized by this call, &lt;code&gt;isNew&lt;/code&gt; is true for the returned session. See &lt;a href=&quot;../httpserver/sessiontimeout&quot;&gt;HttpServer.sessionTimeout&lt;/a&gt; on how to change default timeout.</source>
          <target state="translated">この呼び出しによってセッションが初期化されている場合、返されるセッションでは &lt;code&gt;isNew&lt;/code&gt; がtrueです。デフォルトのタイムアウトを変更する方法については、&lt;a href=&quot;../httpserver/sessiontimeout&quot;&gt;HttpServer.sessionTimeout&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="4990be4ada7b05bd65806a9baa3f3293c914eb3e" translate="yes" xml:space="preserve">
          <source>If the size of the request body is not known in advance, this value is -1.</source>
          <target state="translated">リクエストボディのサイズが事前にわからない場合、この値は-1となる。</target>
        </trans-unit>
        <trans-unit id="9b4567f8a46a0afb97efd4e72c55bd23d916dced" translate="yes" xml:space="preserve">
          <source>If the size of the request is not known in advance set content length to -1, which is also the default.</source>
          <target state="translated">リクエストのサイズが事前にわからない場合は、content length を -1 に設定します。</target>
        </trans-unit>
        <trans-unit id="27d7e27bdf6f6ab2b26ebd35d558878addc88497" translate="yes" xml:space="preserve">
          <source>If the source is a list, the &lt;a href=&quot;copyrange&quot;&gt;copyRange&lt;/a&gt; function is likely to be more efficient.</source>
          <target state="translated">ソースがリストの場合、&lt;a href=&quot;copyrange&quot;&gt;copyRange&lt;/a&gt;関数の方が効率的です。</target>
        </trans-unit>
        <trans-unit id="511dda1a2ef43703900bcba1ece2eac5271ff986" translate="yes" xml:space="preserve">
          <source>If the source is a string and it contains a line break before offset, only the line containing offset will be included, and its line number will also be part of the description. Line and character offsets are 1-based.</source>
          <target state="translated">ソースが文字列で、オフセットの前に改行が含まれている場合は、オフセットを含む行のみが含まれ、その行番号も記述の一部となります。行と文字のオフセットは1を基準とします。</target>
        </trans-unit>
        <trans-unit id="9840aed035e204d06f433857d8770354d35b2f52" translate="yes" xml:space="preserve">
          <source>If the start method is used, the exitCode is available through a future on the Process object (as shown in the example below). If the run method is used, the exitCode is available through a getter on the ProcessResult instance.</source>
          <target state="translated">startメソッドが使用されている場合、exitCodeは、プロセスオブジェクト上のフューチャーを通して利用可能です(以下の例のように)。実行メソッドが使用されている場合、終了コードは、ProcessResultインスタンス上のゲッターを介して取得できます。</target>
        </trans-unit>
        <trans-unit id="3073cc0c3f15485953580bf6ef1660d69775e995" translate="yes" xml:space="preserve">
          <source>If the stream has already been canceled this method has no effect.</source>
          <target state="translated">ストリームが既にキャンセルされている場合、このメソッドは何の効果もありません。</target>
        </trans-unit>
        <trans-unit id="b6c21c7db611cbf285a51fe78d61b6a858781d9f" translate="yes" xml:space="preserve">
          <source>If the stream has not been canceled yet, adds a close-event to the event queue and discards any further incoming messages.</source>
          <target state="translated">ストリームがまだキャンセルされていない場合、イベントキューに close-event を追加し、それ以上の受信メッセージを破棄します。</target>
        </trans-unit>
        <trans-unit id="3133fc855658ca38303945d400d8a764940608cc" translate="yes" xml:space="preserve">
          <source>If the stream is canceled before the controller needs new data the &lt;code&gt;onResume&lt;/code&gt; call might not be executed.</source>
          <target state="translated">コントローラが新しいデータを必要とする前にストリームがキャンセルされた場合、 &lt;code&gt;onResume&lt;/code&gt; 呼び出しが実行されない可能性があります。</target>
        </trans-unit>
        <trans-unit id="f64f61cbbf857a3ccc2d450fadd02f71eb7ff2e4" translate="yes" xml:space="preserve">
          <source>If the string contains leading or trailing whitespace, a new string with no leading and no trailing whitespace is returned:</source>
          <target state="translated">文字列に先頭または末尾に空白が含まれている場合は、先頭も末尾も空白のない新しい文字列が返されます。</target>
        </trans-unit>
        <trans-unit id="9e2bd9c970dd47247b1a3731254862d299588263" translate="yes" xml:space="preserve">
          <source>If the string contains surrogate pairs, they are combined and returned as one integer by this iterator. Unmatched surrogate halves are treated like valid 16-bit code-units.</source>
          <target state="translated">文字列にサロゲートペアが含まれている場合、それらは結合され、このイテレータによって1つの整数として返されます。マッチしていないサロゲートの半分は、有効な16ビットのコード単位として扱われます。</target>
        </trans-unit>
        <trans-unit id="cf4dba69d6ab05b9bf2dfb6384aa70959cd13ead" translate="yes" xml:space="preserve">
          <source>If the subscription is paused more than once, an equal number of resumes must be performed to resume the stream. Calls to &lt;a href=&quot;resume&quot;&gt;resume&lt;/a&gt; and the completion of a &lt;code&gt;resumeSignal&lt;/code&gt; are interchangeable - the &lt;a href=&quot;pause&quot;&gt;pause&lt;/a&gt; which was passed a &lt;code&gt;resumeSignal&lt;/code&gt; may be ended by a call to &lt;a href=&quot;resume&quot;&gt;resume&lt;/a&gt;, and completing the &lt;code&gt;resumeSignal&lt;/code&gt; may end a different &lt;a href=&quot;pause&quot;&gt;pause&lt;/a&gt;.</source>
          <target state="translated">サブスクリプションが複数回一時停止されている場合、ストリームを再開するには、同じ数の再開を実行する必要があります。通話&lt;a href=&quot;resume&quot;&gt;履歴書&lt;/a&gt;との完了 &lt;code&gt;resumeSignal&lt;/code&gt; は互換性があります- &lt;a href=&quot;pause&quot;&gt;一時停止&lt;/a&gt;渡された &lt;code&gt;resumeSignal&lt;/code&gt; はへの呼び出しによって終了してもよい&lt;a href=&quot;resume&quot;&gt;履歴書&lt;/a&gt;、および完成 &lt;code&gt;resumeSignal&lt;/code&gt; は異なる終了しても良い&lt;a href=&quot;pause&quot;&gt;ポーズ&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5654ccc80607ece9a1c5389230192e9455656c22" translate="yes" xml:space="preserve">
          <source>If the supplied &lt;code&gt;equals&lt;/code&gt; or &lt;code&gt;hashCode&lt;/code&gt; functions won't work on all &lt;code&gt;E&lt;/code&gt; objects, and the map will be used in a setting where a non-&lt;code&gt;E&lt;/code&gt; object is passed to, e.g., &lt;code&gt;contains&lt;/code&gt;, then the &lt;code&gt;isValidKey&lt;/code&gt; function should also be supplied.</source>
          <target state="translated">指定された &lt;code&gt;equals&lt;/code&gt; 関数または &lt;code&gt;hashCode&lt;/code&gt; 関数がすべての &lt;code&gt;E&lt;/code&gt; オブジェクトで機能せず、マップが非 &lt;code&gt;E&lt;/code&gt; オブジェクトが渡される設定で使用される場合（たとえば、 &lt;code&gt;contains&lt;/code&gt; ）、 &lt;code&gt;isValidKey&lt;/code&gt; 関数も指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="6cdd4b0d27855667bf41d1b2ed02da3547c6e206" translate="yes" xml:space="preserve">
          <source>If the target of the event is a descendant of the element from which this stream derives then &lt;code&gt;onData&lt;/code&gt; is called before the event propagates down to the target. This is the opposite of bubbling behavior, where the event is first processed for the event target and then bubbles upward.</source>
          <target state="translated">イベントのターゲットがこのストリームの派生元の要素の子孫である場合、イベントがターゲットに伝達される前に &lt;code&gt;onData&lt;/code&gt; が呼び出されます。これは、イベントが最初にイベントターゲットに対して処理され、次に上方にバブルするバブリング動作の逆です。</target>
        </trans-unit>
        <trans-unit id="8fe46f08cabf709257afc66903b60fe7b393db2a" translate="yes" xml:space="preserve">
          <source>If the transformed stream is a broadcast stream, so is the stream returned by the &lt;a href=&quot;bind&quot;&gt;StreamTransformer.bind&lt;/a&gt; method by this transformer.</source>
          <target state="translated">変換されたストリームがブロードキャストストリームの場合、このトランスフォーマによって&lt;a href=&quot;bind&quot;&gt;StreamTransformer.bind&lt;/a&gt;メソッドによって返されるストリームも同様です。</target>
        </trans-unit>
        <trans-unit id="a2545a996848cb3d207a7edfc0cc920a58b3281c" translate="yes" xml:space="preserve">
          <source>If the transformed stream is listened to multiple times, the &lt;code&gt;onListen&lt;/code&gt; callback is called again for each new &lt;a href=&quot;../stream/listen&quot;&gt;Stream.listen&lt;/a&gt; call. This happens whether the stream is a broadcast stream or not, but the call will usually fail for non-broadcast streams.</source>
          <target state="translated">変換されたストリームが複数回リッスンされる場合、新しい&lt;a href=&quot;../stream/listen&quot;&gt;Stream.listen&lt;/a&gt;呼び出しごとに &lt;code&gt;onListen&lt;/code&gt; コールバックが再度呼び出されます。これは、ストリームがブロードキャストストリームであるかどうかに関係なく発生しますが、非ブロードキャストストリームの場合、呼び出しは通常失敗します。</target>
        </trans-unit>
        <trans-unit id="c5dfb1a7f80e2c5f0f7a564ed1974e21eac5bbeb" translate="yes" xml:space="preserve">
          <source>If the type is not a direct subclass of HtmlElement then the extendsTag parameter must be provided.</source>
          <target state="translated">もし型がHtmlElementの直接のサブクラスでない場合は、 extendsTagパラメータを指定しなければなりません。</target>
        </trans-unit>
        <trans-unit id="936732391f5572a8d0d60409ba6fdd9b7d4e9921" translate="yes" xml:space="preserve">
          <source>If the type referred to by the reflectee is a function type &lt;em&gt;F&lt;/em&gt;, the result will be &lt;code&gt;FunctionTypeMirror&lt;/code&gt; reflecting &lt;em&gt;F&lt;/em&gt; which is abstract and has an abstract method &lt;code&gt;call&lt;/code&gt; whose signature corresponds to &lt;em&gt;F&lt;/em&gt;. For instance &lt;code&gt;void f(int)&lt;/code&gt; is the referent for &lt;code&gt;typedef void f(int)&lt;/code&gt;.</source>
          <target state="translated">リフレク&lt;em&gt;ティ&lt;/em&gt;によって参照される型が関数型&lt;em&gt;Fである&lt;/em&gt;場合、結果は&lt;em&gt;F&lt;/em&gt;を反映する &lt;code&gt;FunctionTypeMirror&lt;/code&gt; となり、&lt;em&gt;F&lt;/em&gt;は抽象的で、シグニチャーが&lt;em&gt;Fに&lt;/em&gt;対応する抽象メソッド &lt;code&gt;call&lt;/code&gt; を持ちます。たとえば、 &lt;code&gt;void f(int)&lt;/code&gt; は &lt;code&gt;typedef void f(int)&lt;/code&gt; の参照先です。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="498ba7709e7ac82653b68e7d2933f436e930f584" translate="yes" xml:space="preserve">
          <source>If the type requested is not 'image/png', and the returned value is 'data:image/png', then the requested type is not supported.</source>
          <target state="translated">要求された型が 'imagepng' ではなく、返された値が 'data:imagepng' の場合、要求された型はサポートされていません。</target>
        </trans-unit>
        <trans-unit id="d099cdd98b56afbdf7ae14e71bfe13ef269ef212" translate="yes" xml:space="preserve">
          <source>If the underlying implementation is able to identify the destination of the moved file, &lt;a href=&quot;destination&quot;&gt;destination&lt;/a&gt; will be set. Otherwise, it will be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">基礎となる実装が移動されたファイルの宛先を識別できる場合、&lt;a href=&quot;destination&quot;&gt;宛先&lt;/a&gt;が設定されます。それ以外の場合は &lt;code&gt;null&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="8325650e837130693837d3c74a0116393dd5c441" translate="yes" xml:space="preserve">
          <source>If the underlying implementation is able to identify the destination of the moved file, &lt;a href=&quot;filesystemmoveevent/destination&quot;&gt;destination&lt;/a&gt; will be set. Otherwise, it will be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">基礎となる実装が移動されたファイルの宛先を識別できる場合、&lt;a href=&quot;filesystemmoveevent/destination&quot;&gt;宛先&lt;/a&gt;が設定されます。それ以外の場合は &lt;code&gt;null&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="96fd7cb005f73373a547d06d55b26da3e07bf0aa" translate="yes" xml:space="preserve">
          <source>If the userAgent is set to &lt;code&gt;null&lt;/code&gt;, no default &lt;code&gt;User-Agent&lt;/code&gt; header will be added to each request.</source>
          <target state="translated">userAgentが &lt;code&gt;null&lt;/code&gt; に設定されている場合、デフォルトの &lt;code&gt;User-Agent&lt;/code&gt; ヘッダーは各リクエストに追加されません。</target>
        </trans-unit>
        <trans-unit id="da9b49e35adf5f5e86a9739b95241dc252a8763e" translate="yes" xml:space="preserve">
          <source>If the value is itself a future, the completer will wait for that future to complete, and complete with the same result, whether it is a success or an error.</source>
          <target state="translated">値自体が未来の値である場合、完了者はその未来が完了するのを待ち、それが成功であろうとエラーであろうと同じ結果で完了します。</target>
        </trans-unit>
        <trans-unit id="4c82fb7230d84c89d4c1388cdad00b1ff05387b8" translate="yes" xml:space="preserve">
          <source>If the values contain non-ASCII values or percent escapes, they are decoded as UTF-8.</source>
          <target state="translated">値に非ASCII値やパーセントエスケープが含まれている場合は、UTF-8としてデコードされます。</target>
        </trans-unit>
        <trans-unit id="5d089a74ef57c0c2c748caf5ff058f60909097cd" translate="yes" xml:space="preserve">
          <source>If the web page has any &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; elements, then each &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; has its own &lt;a href=&quot;window-class&quot;&gt;Window&lt;/a&gt; object, which is accessible only to that &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Webページに &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; 要素がある場合、各 &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; には独自の&lt;a href=&quot;window-class&quot;&gt;Window&lt;/a&gt;オブジェクトがあり、その &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; からのみアクセスできます。</target>
        </trans-unit>
        <trans-unit id="39ce9fcf030eda21fe42c2a15e88b55e6b700f0b" translate="yes" xml:space="preserve">
          <source>If the zone specification has a &lt;code&gt;handleUncaughtError&lt;/code&gt; value or the &lt;code&gt;onError&lt;/code&gt; parameter is provided, the zone becomes an error-zone.</source>
          <target state="translated">ゾーン指定に &lt;code&gt;handleUncaughtError&lt;/code&gt; 値があるか、 &lt;code&gt;onError&lt;/code&gt; パラメーターが指定されている場合、ゾーンはエラーゾーンになります。</target>
        </trans-unit>
        <trans-unit id="836b764110efe65043a4dd612360219319a5b402" translate="yes" xml:space="preserve">
          <source>If there have been more calls to &lt;a href=&quot;pause&quot;&gt;pause&lt;/a&gt; than to &lt;a href=&quot;resume&quot;&gt;resume&lt;/a&gt; on this stream subscription, the subscription is paused, and this getter returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">このストリームサブスクリプションで&lt;a href=&quot;resume&quot;&gt;再開&lt;/a&gt;するよりも&lt;a href=&quot;pause&quot;&gt;一時停止の&lt;/a&gt;呼び出しが多い場合、サブスクリプションは一時停止され、このゲッターは &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="5cff90292f86db377c7d0c5c4bd5d795d8967f9b" translate="yes" xml:space="preserve">
          <source>If there is no valid mapping from the package: URI in the current isolate, then this call returns &lt;code&gt;null&lt;/code&gt;. Non-package: URIs are returned unmodified.</source>
          <target state="translated">現在のアイソレートにpackage：URIからの有効なマッピングがない場合、この呼び出しは &lt;code&gt;null&lt;/code&gt; を返します。非パッケージ：URIは変更されずに返されます。</target>
        </trans-unit>
        <trans-unit id="4714273cffbf846116cf9fb59e5330aeb9248b08" translate="yes" xml:space="preserve">
          <source>If this &lt;a href=&quot;../windowbase-class&quot;&gt;WindowBase&lt;/a&gt; has no parent, &lt;a href=&quot;parent&quot;&gt;parent&lt;/a&gt; will return a reference to the &lt;a href=&quot;../windowbase-class&quot;&gt;WindowBase&lt;/a&gt; itself.</source>
          <target state="translated">この&lt;a href=&quot;../windowbase-class&quot;&gt;WindowBase&lt;/a&gt;に親がない場合、&lt;a href=&quot;parent&quot;&gt;parent&lt;/a&gt;は&lt;a href=&quot;../windowbase-class&quot;&gt;WindowBase&lt;/a&gt;自体への参照を返します。</target>
        </trans-unit>
        <trans-unit id="b21a8398ea1dbf83aa911d50ce6c6f2c53f8b1b2" translate="yes" xml:space="preserve">
          <source>If this &lt;a href=&quot;../windowbase-class&quot;&gt;WindowBase&lt;/a&gt; is the topmost &lt;a href=&quot;../windowbase-class&quot;&gt;WindowBase&lt;/a&gt;, &lt;a href=&quot;top&quot;&gt;top&lt;/a&gt; will return a reference to the &lt;a href=&quot;../windowbase-class&quot;&gt;WindowBase&lt;/a&gt; itself.</source>
          <target state="translated">この&lt;a href=&quot;../windowbase-class&quot;&gt;WindowBase&lt;/a&gt;が最上位の&lt;a href=&quot;../windowbase-class&quot;&gt;WindowBaseである&lt;/a&gt;場合、&lt;a href=&quot;top&quot;&gt;top&lt;/a&gt;は&lt;a href=&quot;../windowbase-class&quot;&gt;WindowBase&lt;/a&gt;自体への参照を返します。</target>
        </trans-unit>
        <trans-unit id="bb18bccb5bd2631b1d0929a60fc330c1675fb90d" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Uri&lt;/code&gt; does not have a fragment, it is itself returned.</source>
          <target state="translated">この &lt;code&gt;Uri&lt;/code&gt; フラグメントがない場合は、それ自体が返されます。</target>
        </trans-unit>
        <trans-unit id="5dfda946d640902e8c54de52d56ff9314d6bb541" translate="yes" xml:space="preserve">
          <source>If this CssClassSet corresponds to one element. Returns true if &lt;code&gt;value&lt;/code&gt; was added to the set, otherwise false.</source>
          <target state="translated">このCssClassSetが1つの要素に対応する場合。 &lt;code&gt;value&lt;/code&gt; がセットに追加された場合はtrue 、それ以外の場合はfalseを返します。</target>
        </trans-unit>
        <trans-unit id="1f0bc2152111f73426e0dc603e4f581e619ad788" translate="yes" xml:space="preserve">
          <source>If this class is the result of a mixin application of the form S with M, returns a class mirror on M. Otherwise returns a class mirror on the reflectee.</source>
          <target state="translated">このクラスが S と M の形式のミックスインアプリケーションの結果である場合、M 上のクラスミラーを返します。</target>
        </trans-unit>
        <trans-unit id="9ce45dd64368238c5ce58b0af765e4b2511705a0" translate="yes" xml:space="preserve">
          <source>If this corresponds to many elements, &lt;code&gt;null&lt;/code&gt; is always returned.</source>
          <target state="translated">これが多くの要素に対応する場合、常に &lt;code&gt;null&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="e4f90b03ece531345bb3fa7f436a428fb54578f1" translate="yes" xml:space="preserve">
          <source>If this corresponds to one element, returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;value&lt;/code&gt; is present after the operation, and returns &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;value&lt;/code&gt; is absent after the operation.</source>
          <target state="translated">これが1つの要素に対応する場合、 &lt;code&gt;value&lt;/code&gt; が操作後に存在する場合は &lt;code&gt;true&lt;/code&gt; を返し、 &lt;code&gt;value&lt;/code&gt; が操作後に存在しない場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="c4a85ba5bc3b7bafea79bc6bffb166e6d556956d" translate="yes" xml:space="preserve">
          <source>If this future completes with a value, the returned future completes with the same value.</source>
          <target state="translated">この未来が値で終わる場合、返された未来は同じ値で終わります。</target>
        </trans-unit>
        <trans-unit id="a2b0ef95fc8b639bef0e6462f966088976722e15" translate="yes" xml:space="preserve">
          <source>If this future completes with an error, then &lt;code&gt;test&lt;/code&gt; is first called with the error value.</source>
          <target state="translated">このフューチャーがエラーで完了した場合、 &lt;code&gt;test&lt;/code&gt; は最初にエラー値で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="a7703c65f8ed9b15bbd3e495c8da155464b531df" translate="yes" xml:space="preserve">
          <source>If this future does not complete before &lt;code&gt;timeLimit&lt;/code&gt; has passed, the &lt;code&gt;onTimeout&lt;/code&gt; action is executed instead, and its result (whether it returns or throws) is used as the result of the returned future. The &lt;code&gt;onTimeout&lt;/code&gt; function must return a &lt;code&gt;T&lt;/code&gt; or a &lt;code&gt;Future&amp;lt;T&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;timeLimit&lt;/code&gt; が経過する前にこのフューチャーが完了しない場合は、代わりに &lt;code&gt;onTimeout&lt;/code&gt; アクションが実行され、その結果（戻されるかスローされるか）が戻されたフューチャーの結果として使用されます。 &lt;code&gt;onTimeout&lt;/code&gt; 機能が戻らなければならない &lt;code&gt;T&lt;/code&gt; または &lt;code&gt;Future&amp;lt;T&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bcadc1fd1a5bb53906a66b34d29ebfe049f20426" translate="yes" xml:space="preserve">
          <source>If this is a broadcast stream, the returned stream is a broadcast stream. In that case, the events are only counted from the time the returned stream is listened to.</source>
          <target state="translated">これがブロードキャストストリームであれば、返されたストリームはブロードキャストストリームです。その場合、イベントは返されたストリームがリスンされた時点からのみカウントされます。</target>
        </trans-unit>
        <trans-unit id="30b564dc0f9860935685dc8921146fe771ff7b2b" translate="yes" xml:space="preserve">
          <source>If this is already an integer valued double, including &lt;code&gt;-0.0&lt;/code&gt;, or it is a non-finite double value, the value is returned unmodified.</source>
          <target state="translated">これがすでに &lt;code&gt;-0.0&lt;/code&gt; を含む整数値のdoubleである場合、または非有限のdouble値である場合、値は変更されずに返されます。</target>
        </trans-unit>
        <trans-unit id="b2aaf5ee5b306ff86724e3c6313cd636908dce34" translate="yes" xml:space="preserve">
          <source>If this is already an integer valued double, including &lt;code&gt;-0.0&lt;/code&gt;, or it is not a finite value, the value is returned unmodified.</source>
          <target state="translated">これが既に &lt;code&gt;-0.0&lt;/code&gt; を含む整数値のdoubleであるか、有限値でない場合、値は変更されずに返されます。</target>
        </trans-unit>
        <trans-unit id="393b9ef29fbf63a86603d1a369900a5bfaaf308b" translate="yes" xml:space="preserve">
          <source>If this iterable only contains instances of &lt;code&gt;R&lt;/code&gt;, all operations will work correctly. If any operation tries to access an element that is not an instance of &lt;code&gt;R&lt;/code&gt;, the access will throw instead.</source>
          <target state="translated">このイテラブルに &lt;code&gt;R&lt;/code&gt; のインスタンスのみが含まれている場合、すべての操作は正しく機能します。操作が &lt;code&gt;R&lt;/code&gt; のインスタンスではない要素にアクセスしようとすると、代わりにアクセスがスローされます。</target>
        </trans-unit>
        <trans-unit id="59eccb49729614c1405df77852f2fd0d30e6ab9c" translate="yes" xml:space="preserve">
          <source>If this list contains only instances of &lt;code&gt;R&lt;/code&gt;, all read operations will work correctly. If any operation tries to access an element that is not an instance of &lt;code&gt;R&lt;/code&gt;, the access will throw instead.</source>
          <target state="translated">このリストに &lt;code&gt;R&lt;/code&gt; のインスタンスのみが含まれている場合、すべての読み取り操作は正しく機能します。操作が &lt;code&gt;R&lt;/code&gt; のインスタンスではない要素にアクセスしようとすると、代わりにアクセスがスローされます。</target>
        </trans-unit>
        <trans-unit id="8cfbe8f6531109deaf0e7a786339b0111ba9d49f" translate="yes" xml:space="preserve">
          <source>If this map is already a &lt;code&gt;Map&amp;lt;RK, RV&amp;gt;&lt;/code&gt;, it is returned unchanged.</source>
          <target state="translated">このマップがすでに &lt;code&gt;Map&amp;lt;RK, RV&amp;gt;&lt;/code&gt; である場合、変更されずに返されます。</target>
        </trans-unit>
        <trans-unit id="d239038e84030dde40b7f9bd879ed3bd019fbe1e" translate="yes" xml:space="preserve">
          <source>If this mirror is a &lt;a href=&quot;../classmirror-class&quot;&gt;ClassMirror&lt;/a&gt;, and &lt;code&gt;fieldName&lt;/code&gt; denotes a static method in the corresponding class, the result of the invocation is an instance mirror on a closure corresponding to that method.</source>
          <target state="translated">このミラーが&lt;a href=&quot;../classmirror-class&quot;&gt;ClassMirror&lt;/a&gt;であり、 &lt;code&gt;fieldName&lt;/code&gt; が対応するクラスの静的メソッドを示す場合、呼び出しの結果は、そのメソッドに対応するクロージャーのインスタンスミラーになります。</target>
        </trans-unit>
        <trans-unit id="cee5c2846c986974e40ecba2c15282a2fc3cc3f3" translate="yes" xml:space="preserve">
          <source>If this mirror is a &lt;a href=&quot;../librarymirror-class&quot;&gt;LibraryMirror&lt;/a&gt;, and &lt;code&gt;fieldName&lt;/code&gt; denotes a top-level method in the corresponding library, the result of the invocation is an instance mirror on a closure corresponding to that method.</source>
          <target state="translated">このミラーが&lt;a href=&quot;../librarymirror-class&quot;&gt;LibraryMirror&lt;/a&gt;であり、 &lt;code&gt;fieldName&lt;/code&gt; が対応するライブラリのトップレベルのメソッドを示している場合、呼び出しの結果は、そのメソッドに対応するクロージャーのインスタンスミラーになります。</target>
        </trans-unit>
        <trans-unit id="874846d1c630d91cbd0d267a181080ac6031cefc" translate="yes" xml:space="preserve">
          <source>If this mirror is an &lt;a href=&quot;../instancemirror-class&quot;&gt;InstanceMirror&lt;/a&gt;, and &lt;code&gt;fieldName&lt;/code&gt; denotes an instance method on its reflectee, the result of the invocation is an instance mirror on a closure corresponding to that method.</source>
          <target state="translated">このミラーが&lt;a href=&quot;../instancemirror-class&quot;&gt;InstanceMirror&lt;/a&gt;であり、 &lt;code&gt;fieldName&lt;/code&gt; がリフレクタのインスタンスメソッドを示している場合、呼び出しの結果は、そのメソッドに対応するクロージャのインスタンスミラーになります。</target>
        </trans-unit>
        <trans-unit id="c5e05edf89b72b8fc34e6eef165450d56a4a3310" translate="yes" xml:space="preserve">
          <source>If this object is a &lt;a href=&quot;canvaselement-class&quot;&gt;CanvasElement&lt;/a&gt;, then this element's bitmap is drawn to the canvas.</source>
          <target state="translated">このオブジェクトが&lt;a href=&quot;canvaselement-class&quot;&gt;CanvasElementの&lt;/a&gt;場合、この要素のビットマップがキャンバスに描画されます。</target>
        </trans-unit>
        <trans-unit id="06282493b47f8bfc4c77313ea5c904b85df06473" translate="yes" xml:space="preserve">
          <source>If this object is a &lt;a href=&quot;videoelement-class&quot;&gt;VideoElement&lt;/a&gt;, then the frame at this element's current playback position is drawn to the canvas.</source>
          <target state="translated">このオブジェクトが&lt;a href=&quot;videoelement-class&quot;&gt;VideoElementの&lt;/a&gt;場合、この要素の現在の再生位置にあるフレームがキャンバスに描画されます。</target>
        </trans-unit>
        <trans-unit id="25caf3b9d824321c913357edfe5224ebfd049945" translate="yes" xml:space="preserve">
          <source>If this object is an &lt;a href=&quot;imageelement-class&quot;&gt;ImageElement&lt;/a&gt;, then this element's image is drawn to the canvas. If this element is an animated image, then this element's poster frame is drawn. If this element has no poster frame, then the first frame of animation is drawn.</source>
          <target state="translated">このオブジェクトが&lt;a href=&quot;imageelement-class&quot;&gt;ImageElementの&lt;/a&gt;場合、この要素の画像がキャンバスに描画されます。この要素がアニメーション画像の場合、この要素のポスターフレームが描画されます。この要素にポスターフレームがない場合、アニメーションの最初のフレームが描画されます。</target>
        </trans-unit>
        <trans-unit id="13acc33039fd80bd1519e2b06bd5a3bc8d38e986" translate="yes" xml:space="preserve">
          <source>If this queue contains only instances of &lt;code&gt;R&lt;/code&gt;, all read operations will work correctly. If any operation tries to access an element that is not an instance of &lt;code&gt;R&lt;/code&gt;, the access will throw instead.</source>
          <target state="translated">このキューに &lt;code&gt;R&lt;/code&gt; のインスタンスのみが含まれている場合、すべての読み取り操作は正しく機能します。操作が &lt;code&gt;R&lt;/code&gt; のインスタンスではない要素にアクセスしようとすると、代わりにアクセスがスローされます。</target>
        </trans-unit>
        <trans-unit id="3ae828f3e81aa936b70816ee3ad919c4d75add5a" translate="yes" xml:space="preserve">
          <source>If this set contains only instances of &lt;code&gt;R&lt;/code&gt;, all read operations will work correctly. If any operation tries to access an element that is not an instance of &lt;code&gt;R&lt;/code&gt;, the access will throw instead.</source>
          <target state="translated">このセットに &lt;code&gt;R&lt;/code&gt; のインスタンスのみが含まれている場合、すべての読み取り操作は正しく機能します。操作が &lt;code&gt;R&lt;/code&gt; のインスタンスではない要素にアクセスしようとすると、代わりにアクセスがスローされます。</target>
        </trans-unit>
        <trans-unit id="224f8fd1f3bc018c6d06a87c0bc6e60a621eaaa9" translate="yes" xml:space="preserve">
          <source>If this set contains only keys of type &lt;code&gt;RK&lt;/code&gt; and values of type &lt;code&gt;RV&lt;/code&gt;, all read operations will work correctly. If any operation exposes a non-&lt;code&gt;RK&lt;/code&gt; key or non-&lt;code&gt;RV&lt;/code&gt; value, the operation will throw instead.</source>
          <target state="translated">このセットにタイプ &lt;code&gt;RK&lt;/code&gt; のキーとタイプ &lt;code&gt;RV&lt;/code&gt; の値のみが含まれている場合、すべての読み取り操作は正しく機能します。操作が非 &lt;code&gt;RK&lt;/code&gt; キーまたは非 &lt;code&gt;RV&lt;/code&gt; 値を公開する場合、代わりに操作がスローされます。</target>
        </trans-unit>
        <trans-unit id="dc3902227a18ad6bb136ee6e4d87d3ba2cf1b68a" translate="yes" xml:space="preserve">
          <source>If this stream closes and sends a done event, the &lt;code&gt;onDone&lt;/code&gt; handler is called. If &lt;code&gt;onDone&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, nothing happens.</source>
          <target state="translated">このストリームが閉じてdoneイベントを送信すると、 &lt;code&gt;onDone&lt;/code&gt; ハンドラーが呼び出されます。 &lt;code&gt;onDone&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、何も起こりません。</target>
        </trans-unit>
        <trans-unit id="379efb78de57e45714f7b2c5be27f027df49694e" translate="yes" xml:space="preserve">
          <source>If this stream emits an error before the first matching element, the returned future is completed with that error, and processing stops.</source>
          <target state="translated">このストリームが最初のマッチング要素の前にエラーを出した場合、返された未来はそのエラーで終了し、処理が停止します。</target>
        </trans-unit>
        <trans-unit id="d9d5e17bef188612cef354937bf7cb9c130faabd" translate="yes" xml:space="preserve">
          <source>If this stream emits an error event, the returned future is completed with that error and processing stops.</source>
          <target state="translated">このストリームがエラーイベントを発した場合、返された未来はそのエラーで完了し、処理が停止します。</target>
        </trans-unit>
        <trans-unit id="6903ca4a5fce830e5fd7e2bdb8284e4be13a72ba" translate="yes" xml:space="preserve">
          <source>If this stream emits an error, or if the call to &lt;code&gt;action&lt;/code&gt; throws, the returned future completes with that error, and processing stops.</source>
          <target state="translated">このストリームでエラーが発生した場合、または &lt;code&gt;action&lt;/code&gt; の呼び出しがスローされた場合、返されたフューチャーはそのエラーで完了し、処理は停止します。</target>
        </trans-unit>
        <trans-unit id="721c0f11d962532fc08d9b5ad42b15277a52c318" translate="yes" xml:space="preserve">
          <source>If this stream emits an error, or if the call to &lt;code&gt;test&lt;/code&gt; throws, the returned future is completed with that error, and processing stops.</source>
          <target state="translated">このストリームでエラーが発生した場合、または &lt;code&gt;test&lt;/code&gt; の呼び出しがスローされた場合、返されたfutureはそのエラーで完了し、処理は停止します。</target>
        </trans-unit>
        <trans-unit id="bed971dc1dac75ff65e46e283cbcfb888958457a" translate="yes" xml:space="preserve">
          <source>If this stream emits an error, or the call to &lt;a href=&quot;../../dart-core/object/operator_equals&quot;&gt;Object.==&lt;/a&gt; throws, the returned future is completed with that error, and processing stops.</source>
          <target state="translated">このストリームでエラーが発生した場合、または&lt;a href=&quot;../../dart-core/object/operator_equals&quot;&gt;Object。==&lt;/a&gt;への呼び出しがスローされた場合、返されたフューチャーはそのエラーで完了し、処理は停止します。</target>
        </trans-unit>
        <trans-unit id="9f48c3d83a9ddce3ed00874409fb7b44bb5b35de" translate="yes" xml:space="preserve">
          <source>If this stream emits an error, or the call to &lt;a href=&quot;../../dart-core/object/tostring&quot;&gt;Object.toString&lt;/a&gt; throws, the returned future is completed with that error, and processing stops.</source>
          <target state="translated">このストリームでエラーが発生した場合、または&lt;a href=&quot;../../dart-core/object/tostring&quot;&gt;Object.toString&lt;/a&gt;の呼び出しがスローされた場合、返されたフューチャーはそのエラーで完了し、処理は停止します。</target>
        </trans-unit>
        <trans-unit id="70281b215d6ec7f0b91bb0bb3d3e396ff71ad15f" translate="yes" xml:space="preserve">
          <source>If this stream emits an error, or the call to &lt;code&gt;combine&lt;/code&gt; throws, the returned future is completed with that error, and processing is stopped.</source>
          <target state="translated">このストリームがエラーを出力した場合、または &lt;code&gt;combine&lt;/code&gt; スローの呼び出しを行った場合、返されたフューチャーはそのエラーで完了し、処理は停止します。</target>
        </trans-unit>
        <trans-unit id="8f35740a068c7540b1eb1db7dc42ad171282f669" translate="yes" xml:space="preserve">
          <source>If this stream emits an error, the returned future is completed with that error, and processing stops.</source>
          <target state="translated">このストリームがエラーを出した場合、返された未来はそのエラーで終了し、処理が停止します。</target>
        </trans-unit>
        <trans-unit id="b3b01e308151a9b025d2d1b3d985c0529fb25fdb" translate="yes" xml:space="preserve">
          <source>If this stream emits fewer than &lt;code&gt;count&lt;/code&gt; data events before being done, the returned stream emits no data events.</source>
          <target state="translated">このストリームが完了する前に &lt;code&gt;count&lt;/code&gt; より少ないデータイベントを発行する場合、返されたストリームはデータイベントを発行しません。</target>
        </trans-unit>
        <trans-unit id="490f162ef2162c6e8434313f74ad3a9a898227e0" translate="yes" xml:space="preserve">
          <source>If this stream ends without finding an element that &lt;code&gt;test&lt;/code&gt; accepts, the returned future is completed with &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; 受け入れる要素が見つからずにこのストリームが終了した場合、返されるfutureは &lt;code&gt;false&lt;/code&gt; で完了します。</target>
        </trans-unit>
        <trans-unit id="3ce4db25ca2ac6d91d247ad170af70a5089ceade" translate="yes" xml:space="preserve">
          <source>If this stream ends without finding an element that &lt;code&gt;test&lt;/code&gt; rejects, the returned future is completed with &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; 拒否する要素が見つからずにこのストリームが終了した場合、返されたfutureは &lt;code&gt;true&lt;/code&gt; で完了します。</target>
        </trans-unit>
        <trans-unit id="2758c0d8269fea8dc50c9f1fdf9e2885a5bbc658" translate="yes" xml:space="preserve">
          <source>If this stream is empty (a done event occurs before the first data event), the returned future completes with an error.</source>
          <target state="translated">このストリームが空の場合(最初のデータイベントの前に done イベントが発生した場合)、返された未来はエラーで終了します。</target>
        </trans-unit>
        <trans-unit id="8937bca2355026dcb26688cfa8f93e3b62c9e104" translate="yes" xml:space="preserve">
          <source>If this stream is empty (the done event is the first event), the returned future completes with an error.</source>
          <target state="translated">このストリームが空の場合(done イベントが最初のイベント)、返された未来はエラーで終了します。</target>
        </trans-unit>
        <trans-unit id="c0a8bb622f0d439107fdfe9de299eb2d88c31c8a" translate="yes" xml:space="preserve">
          <source>If this stream is empty, the returned future is completed with an error. If this stream emits an error, or the call to &lt;code&gt;combine&lt;/code&gt; throws, the returned future is completed with that error, and processing is stopped.</source>
          <target state="translated">このストリームが空の場合、返されたフューチャーはエラーで完了します。このストリームがエラーを出力した場合、または &lt;code&gt;combine&lt;/code&gt; スローの呼び出しを行った場合、返されたフューチャーはそのエラーで完了し、処理は停止します。</target>
        </trans-unit>
        <trans-unit id="e1fc3641a71e389f419edd2b388202370c9e61a2" translate="yes" xml:space="preserve">
          <source>If this stream produces fewer than &lt;code&gt;count&lt;/code&gt; data events before it's done, so will the returned stream.</source>
          <target state="translated">このストリームが生成する前に &lt;code&gt;count&lt;/code&gt; より少ない数のデータイベントを生成する場合、返されるストリームも生成されます。</target>
        </trans-unit>
        <trans-unit id="c887bf5b18c6a979d9ea9e066a0fcf94f8835dd0" translate="yes" xml:space="preserve">
          <source>If this stream sends an error that matches &lt;code&gt;test&lt;/code&gt;, then it is intercepted by the &lt;code&gt;onError&lt;/code&gt; function.</source>
          <target state="translated">このストリームが &lt;code&gt;test&lt;/code&gt; と一致するエラーを送信すると、 &lt;code&gt;onError&lt;/code&gt; 関数によってインターセプトされます。</target>
        </trans-unit>
        <trans-unit id="85213170c804169c2a9ae466eb316e81fd4aedab" translate="yes" xml:space="preserve">
          <source>If this string is empty, the result is an empty list if &lt;code&gt;pattern&lt;/code&gt; matches the empty string, and it is &lt;code&gt;[&quot;&quot;]&lt;/code&gt; if the pattern doesn't match.</source>
          <target state="translated">この文字列が空の場合、 &lt;code&gt;pattern&lt;/code&gt; が空の文字列と一致すると結果は空のリストになり、パターンが一致しない場合は &lt;code&gt;[&quot;&quot;]&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="5dd6d7ebdc6b4fdd8b8b981455085c280c3cbd75" translate="yes" xml:space="preserve">
          <source>If this type is &lt;code&gt;Object&lt;/code&gt;, the superclass will be null.</source>
          <target state="translated">このタイプが &lt;code&gt;Object&lt;/code&gt; の場合、スーパークラスはnullになります。</target>
        </trans-unit>
        <trans-unit id="65be5223c6332bc31ea6581152ac760209a2b229" translate="yes" xml:space="preserve">
          <source>If this type is a generic declaration or an invocation of a generic declaration, the returned list contains mirrors on the type variables declared in the original declaration. Otherwise, the returned list is empty.</source>
          <target state="translated">この型が汎用宣言または汎用宣言の呼び出しである場合、返されるリストには、元の宣言で宣言された型変数のミラーが含まれます。それ以外の場合、返されるリストは空です。</target>
        </trans-unit>
        <trans-unit id="6c86588cdc10deb9583d78a209132d1313edde65" translate="yes" xml:space="preserve">
          <source>If this zone does not contain the value looks up the same key in the parent zone. If the &lt;code&gt;key&lt;/code&gt; is not found returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">このゾーンに値が含まれていない場合は、親ゾーンで同じキーを検索します。 &lt;code&gt;key&lt;/code&gt; が見つからない場合は &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f7ebd5e6beb4d7188f04ab7983c0bd1a2a3f3c4e" translate="yes" xml:space="preserve">
          <source>If used, this method must be the first and only call to &lt;code&gt;this&lt;/code&gt;. It invalidates &lt;code&gt;this&lt;/code&gt;. All further operations must be performed on the result.</source>
          <target state="translated">使用している場合、このメソッドは、最初にして唯一に呼び出す必要があり &lt;code&gt;this&lt;/code&gt; 。これは無効になり &lt;code&gt;this&lt;/code&gt; 。以降の操作はすべて結果に対して実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="a24a68fa813063edd66b243415be407e0d9f4625" translate="yes" xml:space="preserve">
          <source>If using methods like &lt;a href=&quot;../../dart-core/map/operator_get&quot;&gt;operator []&lt;/a&gt;, &lt;a href=&quot;../../dart-core/map/remove&quot;&gt;remove&lt;/a&gt; and &lt;a href=&quot;../../dart-core/map/containskey&quot;&gt;containsKey&lt;/a&gt; together with a custom equality and hashcode, an extra &lt;code&gt;isValidKey&lt;/code&gt; function can be supplied. This function is called before calling &lt;code&gt;equals&lt;/code&gt; or &lt;code&gt;hashCode&lt;/code&gt; with an argument that may not be a &lt;code&gt;K&lt;/code&gt; instance, and if the call returns false, the key is assumed to not be in the set. The &lt;code&gt;isValidKey&lt;/code&gt; function defaults to just testing if the object is a &lt;code&gt;K&lt;/code&gt; instance.</source>
          <target state="translated">&lt;a href=&quot;../../dart-core/map/operator_get&quot;&gt;operator []&lt;/a&gt;、&lt;a href=&quot;../../dart-core/map/remove&quot;&gt;remove&lt;/a&gt;、&lt;a href=&quot;../../dart-core/map/containskey&quot;&gt;containsKey&lt;/a&gt;などのメソッドをカスタムの等価性とハッシュコードとともに使用する場合、追加の &lt;code&gt;isValidKey&lt;/code&gt; 関数を提供できます。この関数は、 &lt;code&gt;K&lt;/code&gt; インスタンスではない可能性がある引数を使用して、 &lt;code&gt;equals&lt;/code&gt; または &lt;code&gt;hashCode&lt;/code&gt; を呼び出す前に呼び出され、呼び出しがfalseを返す場合、キーはセット内にないと見なされます。 &lt;code&gt;isValidKey&lt;/code&gt; だけ試験に機能デフォルトオブジェクトがある場合に &lt;code&gt;K&lt;/code&gt; のインスタンス。</target>
        </trans-unit>
        <trans-unit id="fbd6b3a4ee6fb8fa5b0837780aa0358e7ff61bce" translate="yes" xml:space="preserve">
          <source>If value contains objects that are not directly encodable to a JSON string (a value that is not a number, boolean, string, null, list or a map with string keys), the &lt;code&gt;toEncodable&lt;/code&gt; function is used to convert it to an object that must be directly encodable.</source>
          <target state="translated">JSON文字列に直接エンコードできないオブジェクト（数値、ブール値、文字列、null、リスト、または文字列キーを持つマップではない値）が値に含まれている場合、 &lt;code&gt;toEncodable&lt;/code&gt; 関数を使用して、直接エンコード可能である。</target>
        </trans-unit>
        <trans-unit id="bc1d600a97c5abc710982eaf8cef5c3e2a9d6b6b" translate="yes" xml:space="preserve">
          <source>If you access &lt;a href=&quot;reflectee&quot;&gt;reflectee&lt;/a&gt; when &lt;a href=&quot;hasreflectee&quot;&gt;hasReflectee&lt;/a&gt; is false, an exception is thrown.</source>
          <target state="translated">あなたがアクセスした場合&lt;a href=&quot;reflectee&quot;&gt;reflecteeを&lt;/a&gt;するとき&lt;a href=&quot;hasreflectee&quot;&gt;hasReflecteeが&lt;/a&gt; falseで、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="35e24cd1ac07b2db5c245a776929897a26a0e698" translate="yes" xml:space="preserve">
          <source>If you aren't comfortable with DOM concepts, see the Dart tutorial &lt;a href=&quot;http://www.dartlang.org/docs/tutorials/connect-dart-html/&quot;&gt;Target 2: Connect Dart &amp;amp; HTML&lt;/a&gt;.</source>
          <target state="translated">DOMの概念に慣れていない場合は、Dartチュートリアル&lt;a href=&quot;http://www.dartlang.org/docs/tutorials/connect-dart-html/&quot;&gt;Target 2：Connect Dart＆HTMLを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4e2640ad6cd15cce771f2906faa213f8fba9c47b" translate="yes" xml:space="preserve">
          <source>If you can avoid NaN values, the remaining doubles do have a proper equality relation, and can be used safely.</source>
          <target state="translated">NaN値を避けられるのであれば、残りのダブルスにはきちんとした等比関係があり、安心して使うことができます。</target>
        </trans-unit>
        <trans-unit id="9dea8466aab71b0baf280d2fd084854a9d41a621" translate="yes" xml:space="preserve">
          <source>If you do need to create a Future from scratch &amp;mdash; for example, when you're converting a callback-based API into a Future-based one &amp;mdash; you can use a Completer as follows:</source>
          <target state="translated">Futureを最初から作成する必要がある場合（たとえば、コールバックベースのAPIをFutureベースのAPIに変換する場合）は、次のようにCompleterを使用できます。</target>
        </trans-unit>
        <trans-unit id="89cac1591296d6b7704482f506d49c9512b61e41" translate="yes" xml:space="preserve">
          <source>If you don't want to use the system environment you can use a different one by wrapping the function.</source>
          <target state="translated">システム環境を使いたくない場合は、関数をラップすることで別の環境を使うことができます。</target>
        </trans-unit>
        <trans-unit id="3851fe4a12573de196d93b7ba7adaba66313e72c" translate="yes" xml:space="preserve">
          <source>If you need to later cancel this animation, use &lt;a href=&quot;requestanimationframe&quot;&gt;requestAnimationFrame&lt;/a&gt; instead.</source>
          <target state="translated">後でこのアニメーションをキャンセルする必要がある場合は、代わりに&lt;a href=&quot;requestanimationframe&quot;&gt;requestAnimationFrameを&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="e5432683e84cb47136885953db10c2344a9826e4" translate="yes" xml:space="preserve">
          <source>If you need to stop listening for values before the stream iterator is automatically closed, you must call &lt;a href=&quot;cancel&quot;&gt;cancel&lt;/a&gt; to ensure that the stream is properly closed.</source>
          <target state="translated">ストリームイテレータが自動的に閉じられる前に値のリッスンを停止する必要がある場合は、&lt;a href=&quot;cancel&quot;&gt;cancel&lt;/a&gt;を呼び出して、ストリームが適切に閉じられていることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="4d5cc5063a1a6e9b737d296fa167c99d1ac84bc1" translate="yes" xml:space="preserve">
          <source>If you need to transform an error into a data event, use the more generic &lt;a href=&quot;transform&quot;&gt;Stream.transform&lt;/a&gt; to handle the event by writing a data event to the output sink.</source>
          <target state="translated">エラーをデータイベントに変換する必要がある場合は、より汎用的な&lt;a href=&quot;transform&quot;&gt;Stream.transform&lt;/a&gt;を使用して、データイベントを出力シンクに書き込むことでイベントを処理します。</target>
        </trans-unit>
        <trans-unit id="8ad1862849768b7fdb38344b68a4c300467e13f2" translate="yes" xml:space="preserve">
          <source>If you supply one of &lt;code&gt;equals&lt;/code&gt; and &lt;code&gt;hashCode&lt;/code&gt;, you should generally also to supply the other.</source>
          <target state="translated">&lt;code&gt;equals&lt;/code&gt; と &lt;code&gt;hashCode&lt;/code&gt; のいずれかを指定する場合、通常はもう一方も指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="0e26def2518469ca5b74abc9af9f2ace7d92edca" translate="yes" xml:space="preserve">
          <source>If you want to use a different truth-string than &lt;code&gt;&quot;true&quot;&lt;/code&gt;, you can use the &lt;a href=&quot;bool.fromenvironment&quot;&gt;String.fromEnvironment&lt;/a&gt; constructor directly:</source>
          <target state="translated">&lt;code&gt;&quot;true&quot;&lt;/code&gt; とは異なる真理値文字列を使用する場合は、&lt;a href=&quot;bool.fromenvironment&quot;&gt;String.fromEnvironment&lt;/a&gt;コンストラクターを直接使用できます。</target>
        </trans-unit>
        <trans-unit id="3a814e2fb3ab2ec9f65aef981f3e1f94789b5a5f" translate="yes" xml:space="preserve">
          <source>IirFilterNode</source>
          <target state="translated">IirFilterNode</target>
        </trans-unit>
        <trans-unit id="f8a6afbf4eac834dbe5bff184c0ab539d8585704" translate="yes" xml:space="preserve">
          <source>IirFilterNode class</source>
          <target state="translated">IirFilterNode クラス</target>
        </trans-unit>
        <trans-unit id="d13138c3c04d187249d070e0ba4789fc1b78dd0c" translate="yes" xml:space="preserve">
          <source>IirFilterNode constructor</source>
          <target state="translated">IirFilterNode のコンストラクタ</target>
        </trans-unit>
        <trans-unit id="3d3067f69f521837dd2baf60bd9937084ccdbffe" translate="yes" xml:space="preserve">
          <source>IirFilterNode(</source>
          <target state="translated">IirFilterNode(</target>
        </trans-unit>
        <trans-unit id="2b367a98c97c80769342d0373be5b46400537cd7" translate="yes" xml:space="preserve">
          <source>IirFilterNode.IirFilterNode</source>
          <target state="translated">IirFilterNode.IirFilterNode</target>
        </trans-unit>
        <trans-unit id="70a5b83b9100b5782e76d2b70d1cf1c8b2f6f26d" translate="yes" xml:space="preserve">
          <source>IirFilterNode.getFrequencyResponse</source>
          <target state="translated">IirFilterNode.getFrequencyResponse</target>
        </trans-unit>
        <trans-unit id="0ef9de975cdef9d9d9b896b68103ad59db30e33a" translate="yes" xml:space="preserve">
          <source>ImageBitmap</source>
          <target state="translated">ImageBitmap</target>
        </trans-unit>
        <trans-unit id="c3e12b5d5ec87ac6bb70d12756d7aed2f6415bc5" translate="yes" xml:space="preserve">
          <source>ImageBitmap class</source>
          <target state="translated">ImageBitmap クラス</target>
        </trans-unit>
        <trans-unit id="d0ef406f9f61ca577f188d758aa109fead0b5ca8" translate="yes" xml:space="preserve">
          <source>ImageBitmap.close</source>
          <target state="translated">ImageBitmap.close</target>
        </trans-unit>
        <trans-unit id="5cf57dcf8669982b860431d06057d5836299758a" translate="yes" xml:space="preserve">
          <source>ImageBitmap.height</source>
          <target state="translated">ImageBitmap.height</target>
        </trans-unit>
        <trans-unit id="4ea2645c6f967f0323119ce8124791a8376f8aeb" translate="yes" xml:space="preserve">
          <source>ImageBitmap.width</source>
          <target state="translated">ImageBitmap.width</target>
        </trans-unit>
        <trans-unit id="91a39bdc5a33f203d5c2f138f0da931369fac84f" translate="yes" xml:space="preserve">
          <source>ImageBitmapRenderingContext</source>
          <target state="translated">ImageBitmapRenderingContext</target>
        </trans-unit>
        <trans-unit id="35914efb48a5e8b81c1b4652a929969894f65847" translate="yes" xml:space="preserve">
          <source>ImageBitmapRenderingContext class</source>
          <target state="translated">ImageBitmapRenderingContextクラス</target>
        </trans-unit>
        <trans-unit id="030f99226692f0f3087fbaadbf8358456126939a" translate="yes" xml:space="preserve">
          <source>ImageBitmapRenderingContext.canvas</source>
          <target state="translated">ImageBitmapRenderingContext.canvas</target>
        </trans-unit>
        <trans-unit id="8dcf282e2a54020116d600d91b2efb28cb918414" translate="yes" xml:space="preserve">
          <source>ImageBitmapRenderingContext.transferFromImageBitmap</source>
          <target state="translated">ImageBitmapRenderingContext.transferFromImageBitmap</target>
        </trans-unit>
        <trans-unit id="aafbb46481385d620bc0446430129c002e180e4e" translate="yes" xml:space="preserve">
          <source>ImageButtonInputElement</source>
          <target state="translated">ImageButtonInputElement</target>
        </trans-unit>
        <trans-unit id="812ab3757a6915a33423ff1c1238a25dbdb7ee22" translate="yes" xml:space="preserve">
          <source>ImageButtonInputElement class</source>
          <target state="translated">ImageButtonInputElementクラス</target>
        </trans-unit>
        <trans-unit id="2c24e9280f0a5f56ecd497d9b4b653031f4f08cb" translate="yes" xml:space="preserve">
          <source>ImageButtonInputElement constructor</source>
          <target state="translated">ImageButtonInputElement コンストラクタ</target>
        </trans-unit>
        <trans-unit id="0c4f87921e0df3829ecce3b6ae7862615037b6fb" translate="yes" xml:space="preserve">
          <source>ImageButtonInputElement(</source>
          <target state="translated">ImageButtonInputElement(</target>
        </trans-unit>
        <trans-unit id="01853bb00aba9c12fb2610feb02239b0de692844" translate="yes" xml:space="preserve">
          <source>ImageButtonInputElement.ImageButtonInputElement</source>
          <target state="translated">ImageButtonInputElement.ImageButtonInputElement</target>
        </trans-unit>
        <trans-unit id="80ebe20c4e7e92047fd92ec8c4fd137219c70650" translate="yes" xml:space="preserve">
          <source>ImageButtonInputElement.alt</source>
          <target state="translated">ImageButtonInputElement.alt</target>
        </trans-unit>
        <trans-unit id="21aa100c3cec2b58f2669bd6afd16420e632b07f" translate="yes" xml:space="preserve">
          <source>ImageButtonInputElement.formAction</source>
          <target state="translated">ImageButtonInputElement.formAction</target>
        </trans-unit>
        <trans-unit id="7c243f57686870878a8a2608e18ca3a4ed0b49ec" translate="yes" xml:space="preserve">
          <source>ImageButtonInputElement.formEnctype</source>
          <target state="translated">ImageButtonInputElement.formEnctype</target>
        </trans-unit>
        <trans-unit id="2c5b6bdbb28bd3cdb2daf10152a60af20c9303ef" translate="yes" xml:space="preserve">
          <source>ImageButtonInputElement.formMethod</source>
          <target state="translated">ImageButtonInputElement.formMethod</target>
        </trans-unit>
        <trans-unit id="544e950834cebc65a3424d2e281db3c685a39b4c" translate="yes" xml:space="preserve">
          <source>ImageButtonInputElement.formNoValidate</source>
          <target state="translated">ImageButtonInputElement.formNoValidate</target>
        </trans-unit>
        <trans-unit id="aa0b41c65b2b78bcbe3c531a8c6b9895a1d82cc3" translate="yes" xml:space="preserve">
          <source>ImageButtonInputElement.formTarget</source>
          <target state="translated">ImageButtonInputElement.formTarget</target>
        </trans-unit>
        <trans-unit id="670ff760cc88f3b1c722fc511380368a52fe609a" translate="yes" xml:space="preserve">
          <source>ImageButtonInputElement.height</source>
          <target state="translated">ImageButtonInputElement.height</target>
        </trans-unit>
        <trans-unit id="0dba8761b28c5313e780afa4ef6cc8a60c510d02" translate="yes" xml:space="preserve">
          <source>ImageButtonInputElement.src</source>
          <target state="translated">ImageButtonInputElement.src</target>
        </trans-unit>
        <trans-unit id="51640d31f2c1855f9a618bd74a8eb37765f622eb" translate="yes" xml:space="preserve">
          <source>ImageButtonInputElement.width</source>
          <target state="translated">ImageButtonInputElement.width</target>
        </trans-unit>
        <trans-unit id="8c336bfb3779001748cd68de43ea29f8f4e2569a" translate="yes" xml:space="preserve">
          <source>ImageCapture</source>
          <target state="translated">ImageCapture</target>
        </trans-unit>
        <trans-unit id="7d9daf34ef20615e28689275ec1ea10e221b6514" translate="yes" xml:space="preserve">
          <source>ImageCapture class</source>
          <target state="translated">ImageCapture クラス</target>
        </trans-unit>
        <trans-unit id="7cb133bd8116aee8f298bab484000610190c07eb" translate="yes" xml:space="preserve">
          <source>ImageCapture constructor</source>
          <target state="translated">イメージキャプチャのコンストラクタ</target>
        </trans-unit>
        <trans-unit id="bdce851c14519c5a5c332d0fbc0a6a861414120a" translate="yes" xml:space="preserve">
          <source>ImageCapture(</source>
          <target state="translated">ImageCapture(</target>
        </trans-unit>
        <trans-unit id="9978e0843d8ba70195313c0e4972ef0a0f571600" translate="yes" xml:space="preserve">
          <source>ImageCapture.ImageCapture</source>
          <target state="translated">ImageCapture.ImageCapture</target>
        </trans-unit>
        <trans-unit id="6a695339a52264bb2994df6ecb91dad6e435f6b8" translate="yes" xml:space="preserve">
          <source>ImageCapture.getPhotoCapabilities</source>
          <target state="translated">ImageCapture.getPhotoCapabilities</target>
        </trans-unit>
        <trans-unit id="374d1f58469fe5602933c92421242cc8747d221e" translate="yes" xml:space="preserve">
          <source>ImageCapture.getPhotoSettings</source>
          <target state="translated">ImageCapture.getPhotoSettings</target>
        </trans-unit>
        <trans-unit id="23e126b41711a703f83daf84c1eb49c4c3782628" translate="yes" xml:space="preserve">
          <source>ImageCapture.grabFrame</source>
          <target state="translated">ImageCapture.grabFrame</target>
        </trans-unit>
        <trans-unit id="8c316c8c4e7f8535dddf0dd181268665c6f34dc4" translate="yes" xml:space="preserve">
          <source>ImageCapture.setOptions</source>
          <target state="translated">ImageCapture.setOptions</target>
        </trans-unit>
        <trans-unit id="8fc7753068a1704437db9b0f8e0afc5a1d89f952" translate="yes" xml:space="preserve">
          <source>ImageCapture.takePhoto</source>
          <target state="translated">ImageCapture.takePhoto</target>
        </trans-unit>
        <trans-unit id="662f38ff55d3b6cd765669b3efdb2b563125e981" translate="yes" xml:space="preserve">
          <source>ImageCapture.track</source>
          <target state="translated">ImageCapture.track</target>
        </trans-unit>
        <trans-unit id="682b65e19d67a5e783299b757e21bec2832c6fb5" translate="yes" xml:space="preserve">
          <source>ImageData</source>
          <target state="translated">ImageData</target>
        </trans-unit>
        <trans-unit id="947f5c42b401f6b1fefb62ef7490082fdc356635" translate="yes" xml:space="preserve">
          <source>ImageData class</source>
          <target state="translated">画像データクラス</target>
        </trans-unit>
        <trans-unit id="0bb6b41626c441fbdd66bcdcd5381c894dbfde73" translate="yes" xml:space="preserve">
          <source>ImageData constructor</source>
          <target state="translated">イメージデータビルダ</target>
        </trans-unit>
        <trans-unit id="2540cf7a7a54b09842f9d7e4fc6cd6fe9ebc65fa" translate="yes" xml:space="preserve">
          <source>ImageData(</source>
          <target state="translated">ImageData(</target>
        </trans-unit>
        <trans-unit id="d69a1dd74c8c10ade2c557d080b4213618dd14cf" translate="yes" xml:space="preserve">
          <source>ImageData.ImageData</source>
          <target state="translated">ImageData.ImageData</target>
        </trans-unit>
        <trans-unit id="36a6a7f4f47ce8116630d7d1001ca2096b4e0fc4" translate="yes" xml:space="preserve">
          <source>ImageData.data</source>
          <target state="translated">ImageData.data</target>
        </trans-unit>
        <trans-unit id="6a3421601fdbdd23f2ad9b297dd2f67afe1f549c" translate="yes" xml:space="preserve">
          <source>ImageData.height</source>
          <target state="translated">ImageData.height</target>
        </trans-unit>
        <trans-unit id="ea11043e0fbc10e742c776244499730fa9dedae9" translate="yes" xml:space="preserve">
          <source>ImageData.width</source>
          <target state="translated">ImageData.width</target>
        </trans-unit>
        <trans-unit id="b09bb8217536875cfdc0cf5e6879fe4133d68af6" translate="yes" xml:space="preserve">
          <source>ImageElement</source>
          <target state="translated">ImageElement</target>
        </trans-unit>
        <trans-unit id="f5ece6dcf40a7abfd29929e0147b36c8e70f4f46" translate="yes" xml:space="preserve">
          <source>ImageElement class</source>
          <target state="translated">ImageElement クラス</target>
        </trans-unit>
        <trans-unit id="65ae8ca18a07819d38485cee9b175edcfa3702ab" translate="yes" xml:space="preserve">
          <source>ImageElement constructor</source>
          <target state="translated">ImageElement コンストラクタ</target>
        </trans-unit>
        <trans-unit id="fa0f8b68c5335ef6aec378b86168117f78cf5e6a" translate="yes" xml:space="preserve">
          <source>ImageElement(</source>
          <target state="translated">ImageElement(</target>
        </trans-unit>
        <trans-unit id="4d3fc605431f481c56a835473108a6456936d960" translate="yes" xml:space="preserve">
          <source>ImageElement.ImageElement</source>
          <target state="translated">ImageElement.ImageElement</target>
        </trans-unit>
        <trans-unit id="f1b1b7efcfd5d07fbd4183f5a45542d56ec441fb" translate="yes" xml:space="preserve">
          <source>ImageElement.ImageElement.created</source>
          <target state="translated">ImageElement.ImageElement.created</target>
        </trans-unit>
        <trans-unit id="62fceb5eebe6f8da0a8182101dc3a229576575ac" translate="yes" xml:space="preserve">
          <source>ImageElement.alt</source>
          <target state="translated">ImageElement.alt</target>
        </trans-unit>
        <trans-unit id="a51c7664f227023a1194cb5233f02d0b9b38db6d" translate="yes" xml:space="preserve">
          <source>ImageElement.async</source>
          <target state="translated">ImageElement.async</target>
        </trans-unit>
        <trans-unit id="effc9176ac1dcf678564cfb933ca0e854fb2c4d3" translate="yes" xml:space="preserve">
          <source>ImageElement.complete</source>
          <target state="translated">ImageElement.complete</target>
        </trans-unit>
        <trans-unit id="9a293042588a62570800967f060119aed4ddd8a2" translate="yes" xml:space="preserve">
          <source>ImageElement.created constructor</source>
          <target state="translated">ImageElement.created コンストラクタ</target>
        </trans-unit>
        <trans-unit id="a1bd38ca3e5ee0ea646c96a676bd5380aad776c8" translate="yes" xml:space="preserve">
          <source>ImageElement.created(</source>
          <target state="translated">ImageElement.created(</target>
        </trans-unit>
        <trans-unit id="dfa3bd87654d1c8758291ed5b6af7c8ca491104e" translate="yes" xml:space="preserve">
          <source>ImageElement.crossOrigin</source>
          <target state="translated">ImageElement.crossOrigin</target>
        </trans-unit>
        <trans-unit id="8e7640284c982e9ea1d3ee1b53f26048e30076db" translate="yes" xml:space="preserve">
          <source>ImageElement.currentSrc</source>
          <target state="translated">ImageElement.currentSrc</target>
        </trans-unit>
        <trans-unit id="9f61ff965cd24ce6e6aa5573a68002feb729df91" translate="yes" xml:space="preserve">
          <source>ImageElement.decode</source>
          <target state="translated">ImageElement.decode</target>
        </trans-unit>
        <trans-unit id="3fa2c5ad3f1ca4001b4bc4a0d3175685c38f223c" translate="yes" xml:space="preserve">
          <source>ImageElement.height</source>
          <target state="translated">ImageElement.height</target>
        </trans-unit>
        <trans-unit id="3a7699ab91566857a5c7bd5937c5069b6b239154" translate="yes" xml:space="preserve">
          <source>ImageElement.href</source>
          <target state="translated">ImageElement.href</target>
        </trans-unit>
        <trans-unit id="e3f0e81dfc62f0d73e5241249c832f9ca51a6060" translate="yes" xml:space="preserve">
          <source>ImageElement.isMap</source>
          <target state="translated">ImageElement.isMap</target>
        </trans-unit>
        <trans-unit id="831735729ad268bcd97d32ed63ebdfb5a201625b" translate="yes" xml:space="preserve">
          <source>ImageElement.naturalHeight</source>
          <target state="translated">ImageElement.naturalHeight</target>
        </trans-unit>
        <trans-unit id="35f6757eec0d2f39d71a9bf273ab664fa843868b" translate="yes" xml:space="preserve">
          <source>ImageElement.naturalWidth</source>
          <target state="translated">ImageElement.naturalWidth</target>
        </trans-unit>
        <trans-unit id="76f33c45da9bbd13bb1a6a3cec1fc29e3cf59f82" translate="yes" xml:space="preserve">
          <source>ImageElement.preserveAspectRatio</source>
          <target state="translated">ImageElement.preserveAspectRatio</target>
        </trans-unit>
        <trans-unit id="5a75a7c6008c1a4571a90c51b9cee29cb3b33b28" translate="yes" xml:space="preserve">
          <source>ImageElement.referrerPolicy</source>
          <target state="translated">ImageElement.referrerPolicy</target>
        </trans-unit>
        <trans-unit id="4f8f2bc4184695eb8de8dc3d50cf7430a41242a6" translate="yes" xml:space="preserve">
          <source>ImageElement.sizes</source>
          <target state="translated">ImageElement.sizes</target>
        </trans-unit>
        <trans-unit id="4551d4b99516ccfdc679402a81fa0eb205028358" translate="yes" xml:space="preserve">
          <source>ImageElement.src</source>
          <target state="translated">ImageElement.src</target>
        </trans-unit>
        <trans-unit id="b6211eb0f3dca3e4e8c2be13a0d171d35d63d6cf" translate="yes" xml:space="preserve">
          <source>ImageElement.srcset</source>
          <target state="translated">ImageElement.srcset</target>
        </trans-unit>
        <trans-unit id="35df7ff4fedb1c0d5e8583c77055864dc46b9512" translate="yes" xml:space="preserve">
          <source>ImageElement.useMap</source>
          <target state="translated">ImageElement.useMap</target>
        </trans-unit>
        <trans-unit id="e97dd903393820c0b5458de84085c9841abaa42a" translate="yes" xml:space="preserve">
          <source>ImageElement.width</source>
          <target state="translated">ImageElement.width</target>
        </trans-unit>
        <trans-unit id="db9273f088881e3d0b6542e05e04b4a883649601" translate="yes" xml:space="preserve">
          <source>ImageElement.x</source>
          <target state="translated">ImageElement.x</target>
        </trans-unit>
        <trans-unit id="d73fed4bf7b1129f1d6a2197844948d0b9d0bc19" translate="yes" xml:space="preserve">
          <source>ImageElement.y</source>
          <target state="translated">ImageElement.y</target>
        </trans-unit>
        <trans-unit id="e9abcf39fb800a9ece8bc8c29a682f1d5fc9d106" translate="yes" xml:space="preserve">
          <source>ImmutableListMixin</source>
          <target state="translated">ImmutableListMixin</target>
        </trans-unit>
        <trans-unit id="d98b702361505344e35689ebcaa03b7d9cfc0fc7" translate="yes" xml:space="preserve">
          <source>ImmutableListMixin&amp;lt;</source>
          <target state="translated">ImmutableListMixin&amp;lt;</target>
        </trans-unit>
        <trans-unit id="15faacf4a2bd0ed51a4777a50810f3c22f967b14" translate="yes" xml:space="preserve">
          <source>ImmutableListMixin&amp;lt;E&amp;gt; class</source>
          <target state="translated">ImmutableListMixin &amp;lt;E&amp;gt;クラス</target>
        </trans-unit>
        <trans-unit id="a41781d4440852c1cc48c208c5ad4a13e17be90b" translate="yes" xml:space="preserve">
          <source>ImmutableListMixin&amp;lt;E&amp;gt;.ImmutableListMixin&amp;lt;E&amp;gt;</source>
          <target state="translated">ImmutableListMixin&amp;lt;E&amp;gt;.ImmutableListMixin&amp;lt;E&amp;gt;</target>
        </trans-unit>
        <trans-unit id="3720b1c7a91689a8b231f0d6885388f42257290c" translate="yes" xml:space="preserve">
          <source>ImmutableListMixin&amp;lt;E&amp;gt;.add</source>
          <target state="translated">ImmutableListMixin&amp;lt;E&amp;gt;.add</target>
        </trans-unit>
        <trans-unit id="6debb21f0f96cf585a1a0a8192823722f4bc28a5" translate="yes" xml:space="preserve">
          <source>ImmutableListMixin&amp;lt;E&amp;gt;.addAll</source>
          <target state="translated">ImmutableListMixin&amp;lt;E&amp;gt;.addAll</target>
        </trans-unit>
        <trans-unit id="d612d1aa32f4d877bfc046e9afc9df3a0af90ab0" translate="yes" xml:space="preserve">
          <source>ImmutableListMixin&amp;lt;E&amp;gt;.fillRange</source>
          <target state="translated">ImmutableListMixin&amp;lt;E&amp;gt;.fillRange</target>
        </trans-unit>
        <trans-unit id="96dad476d8fe7ebb64578047327a50b7379f0fc3" translate="yes" xml:space="preserve">
          <source>ImmutableListMixin&amp;lt;E&amp;gt;.insert</source>
          <target state="translated">ImmutableListMixin&amp;lt;E&amp;gt;.insert</target>
        </trans-unit>
        <trans-unit id="77c7f4b230da676e373b7a9e649993d08207c03e" translate="yes" xml:space="preserve">
          <source>ImmutableListMixin&amp;lt;E&amp;gt;.insertAll</source>
          <target state="translated">ImmutableListMixin&amp;lt;E&amp;gt;.insertAll</target>
        </trans-unit>
        <trans-unit id="4c19ef564c4bd2c0fef1c8d1931f2d453490cad9" translate="yes" xml:space="preserve">
          <source>ImmutableListMixin&amp;lt;E&amp;gt;.iterator</source>
          <target state="translated">ImmutableListMixin&amp;lt;E&amp;gt;.iterator</target>
        </trans-unit>
        <trans-unit id="fa2a16a2015f9c121609dcf89ab32935d0ab112c" translate="yes" xml:space="preserve">
          <source>ImmutableListMixin&amp;lt;E&amp;gt;.remove</source>
          <target state="translated">ImmutableListMixin&amp;lt;E&amp;gt;.remove</target>
        </trans-unit>
        <trans-unit id="998fc2826784d1a98397d2747b8f7b4291af9424" translate="yes" xml:space="preserve">
          <source>ImmutableListMixin&amp;lt;E&amp;gt;.removeAt</source>
          <target state="translated">ImmutableListMixin&amp;lt;E&amp;gt;.removeAt</target>
        </trans-unit>
        <trans-unit id="1127b0972275c76d17d4b55c87b8dd9e9b83d970" translate="yes" xml:space="preserve">
          <source>ImmutableListMixin&amp;lt;E&amp;gt;.removeLast</source>
          <target state="translated">ImmutableListMixin&amp;lt;E&amp;gt;.removeLast</target>
        </trans-unit>
        <trans-unit id="3dd4e3147d16c7950245efbfb8c66bf8b324291d" translate="yes" xml:space="preserve">
          <source>ImmutableListMixin&amp;lt;E&amp;gt;.removeRange</source>
          <target state="translated">ImmutableListMixin&amp;lt;E&amp;gt;.removeRange</target>
        </trans-unit>
        <trans-unit id="b049008099ab7bea4b76487ff408b98b0602ceeb" translate="yes" xml:space="preserve">
          <source>ImmutableListMixin&amp;lt;E&amp;gt;.removeWhere</source>
          <target state="translated">ImmutableListMixin&amp;lt;E&amp;gt;.removeWhere</target>
        </trans-unit>
        <trans-unit id="d85af3eb4a5536003ede0af3a20c6aa16416b2ec" translate="yes" xml:space="preserve">
          <source>ImmutableListMixin&amp;lt;E&amp;gt;.replaceRange</source>
          <target state="translated">ImmutableListMixin&amp;lt;E&amp;gt;.replaceRange</target>
        </trans-unit>
        <trans-unit id="a10fa22ad21afbe0e1239488ccd29dd858d2ecc5" translate="yes" xml:space="preserve">
          <source>ImmutableListMixin&amp;lt;E&amp;gt;.retainWhere</source>
          <target state="translated">ImmutableListMixin&amp;lt;E&amp;gt;.retainWhere</target>
        </trans-unit>
        <trans-unit id="ed669be392f97a0e6279d5f45445f7a0e9516a3f" translate="yes" xml:space="preserve">
          <source>ImmutableListMixin&amp;lt;E&amp;gt;.setAll</source>
          <target state="translated">ImmutableListMixin&amp;lt;E&amp;gt;.setAll</target>
        </trans-unit>
        <trans-unit id="b338052bfc4f3d95d7982f1ec93e2fca83645c90" translate="yes" xml:space="preserve">
          <source>ImmutableListMixin&amp;lt;E&amp;gt;.setRange</source>
          <target state="translated">ImmutableListMixin&amp;lt;E&amp;gt;.setRange</target>
        </trans-unit>
        <trans-unit id="64999e84e01f7d6254d070f16f6ab67745b020ba" translate="yes" xml:space="preserve">
          <source>ImmutableListMixin&amp;lt;E&amp;gt;.shuffle</source>
          <target state="translated">ImmutableListMixin&amp;lt;E&amp;gt;.shuffle</target>
        </trans-unit>
        <trans-unit id="f7d5a3d34e500bb1ae4a1e4f03fe0e5da4be58b0" translate="yes" xml:space="preserve">
          <source>ImmutableListMixin&amp;lt;E&amp;gt;.sort</source>
          <target state="translated">ImmutableListMixin&amp;lt;E&amp;gt;.sort</target>
        </trans-unit>
        <trans-unit id="8781d615fd77be9578225c40ac67b9471394cced" translate="yes" xml:space="preserve">
          <source>Implementation</source>
          <target state="translated">Implementation</target>
        </trans-unit>
        <trans-unit id="d767bba37af0b5aaf2d4ccbda89a23455475c94c" translate="yes" xml:space="preserve">
          <source>Implementation note: The default implementation supports &lt;code&gt;max&lt;/code&gt; values between 1 and (1&amp;lt;&amp;lt;32) inclusive.</source>
          <target state="translated">実装メモ：デフォルトの実装では、1から（1 &amp;lt;&amp;lt; 32）までの &lt;code&gt;max&lt;/code&gt; 値がサポートされます。</target>
        </trans-unit>
        <trans-unit id="aaf520c7af4d5842b4985548875bb4c02df31f9a" translate="yes" xml:space="preserve">
          <source>Implementations of &lt;code&gt;Set&lt;/code&gt; using this base should consider also implementing &lt;code&gt;clear&lt;/code&gt; in constant time. The default implementation works by removing every element.</source>
          <target state="translated">このベースを使用する &lt;code&gt;Set&lt;/code&gt; の実装は、一定の時間内に &lt;code&gt;clear&lt;/code&gt; に実装することも考慮する必要があります。デフォルトの実装では、すべての要素が削除されます。</target>
        </trans-unit>
        <trans-unit id="f8d595a8002f0a84cdd1e1976f439e45a75f1b59" translate="yes" xml:space="preserve">
          <source>Implementations of &lt;code&gt;Set&lt;/code&gt; using this mixin should consider also implementing &lt;code&gt;clear&lt;/code&gt; in constant time. The default implementation works by removing every element.</source>
          <target state="translated">このミックスインを使用した &lt;code&gt;Set&lt;/code&gt; の実装では、一定時間内に &lt;code&gt;clear&lt;/code&gt; を実装することも検討する必要があります。デフォルトの実装では、すべての要素が削除されます。</target>
        </trans-unit>
        <trans-unit id="841906625141b870f400b6a29eaf2a379e20022a" translate="yes" xml:space="preserve">
          <source>Implementations of a new asynchronous primitive that converts synchronous errors to asynchronous errors rarely need to invoke &lt;a href=&quot;errorcallback&quot;&gt;errorCallback&lt;/a&gt;, since errors are usually reported through future completers or stream controllers.</source>
          <target state="translated">エラーは通常、将来の&lt;a href=&quot;errorcallback&quot;&gt;コンプリーター&lt;/a&gt;またはストリームコントローラーを介して報告されるため、同期エラーを非同期エラーに変換する新しい非同期プリミティブの実装でerrorCallbackを呼び出す必要はほとんどありません。</target>
        </trans-unit>
        <trans-unit id="a06df23b1cedb4dc70c9b651bb25743eab7c40a0" translate="yes" xml:space="preserve">
          <source>Implemented types</source>
          <target state="translated">実装されているタイプ</target>
        </trans-unit>
        <trans-unit id="3c8caa45dda2aebd5597c14ce2cc0a47635dcb5f" translate="yes" xml:space="preserve">
          <source>Implementers</source>
          <target state="translated">Implementers</target>
        </trans-unit>
        <trans-unit id="bc2ba0bb02405840cc8669eb8aace1a5e2f85dd1" translate="yes" xml:space="preserve">
          <source>Important note: There is substantial divergence in how different browsers handle keycodes and their variants in different locales/keyboard layouts. We provide these constants to help make code processing keys more readable.</source>
          <target state="translated">重要な注意:ロケールやキーボードレイアウトの異なるブラウザでのキーコードやその変種の扱い方には大きな違いがあります。コード処理キーをより読みやすくするために、これらの定数を提供しています。</target>
        </trans-unit>
        <trans-unit id="f6fcc2b5a375356bb726b97c23c05520e3ce841a" translate="yes" xml:space="preserve">
          <source>In Dart2 strong mode, the &lt;code&gt;checked&lt;/code&gt; parameter only controls asserts, but not type checks.</source>
          <target state="translated">Dart2ストロングモードでは、 &lt;code&gt;checked&lt;/code&gt; パラメータはアサートのみを制御し、タイプチェックは制御しません。</target>
        </trans-unit>
        <trans-unit id="593326257a212631a0e8b9dffbff849d54143c5c" translate="yes" xml:space="preserve">
          <source>In IndexedDB, each record is identified by a unique index or key, making data retrieval speedy. You can store structured data, such as images, arrays, and maps using IndexedDB. The standard does not specify size limits for individual data items or for the database itself, but browsers may impose storage limits.</source>
          <target state="translated">IndexedDBでは、各レコードは一意のインデックスやキーで識別されるため、データの検索がスピーディーになります。IndexedDBを使用して、画像、配列、地図などの構造化データを保存することができます。標準では、個々のデータ項目やデータベース自体のサイズ制限は規定されていませんが、ブラウザによってはストレージの制限が課せられる場合があります。</target>
        </trans-unit>
        <trans-unit id="e8d68688607bf01c594a3488bfbe7de2a9f345bf" translate="yes" xml:space="preserve">
          <source>In Unicode mode, UTF-16 surrogate pairs in the original string will be treated as a single code point and will not match separately. Otherwise, the target string will be treated purely as a sequence of individual code units and surrogates will not be treated specially.</source>
          <target state="translated">Unicode モー ド では、 元の文字列内の UTF-16 サ ロ ゲー ト ペアは 1 つの コ ー ド 点 と し て扱われ、 個別には一致 し ません。それ以外の場合は、対象文字列は純粋に個々のコード単位の列として扱われ、サロゲートは特別には扱われません。</target>
        </trans-unit>
        <trans-unit id="e1150c548a83052dc3df797de1aeaa8db686dd27" translate="yes" xml:space="preserve">
          <source>In Unicode mode, the syntax of the RegExp pattern is more restricted, but some pattern features, like Unicode property escapes, are only available in this mode.</source>
          <target state="translated">Unicode モードでは、RegExp パターンの構文はより制限されていますが、Unicode プロパティエスケープのようないくつかのパターン機能は、このモードでのみ利用可能です。</target>
        </trans-unit>
        <trans-unit id="d12c0f7e8d2d5997a66e309a06b1578009d03f1b" translate="yes" xml:space="preserve">
          <source>In a web browser, a &lt;a href=&quot;windowbase-class&quot;&gt;WindowBase&lt;/a&gt; object represents any browser window. This object contains the window's state and its relation to other windows, such as which window opened this window.</source>
          <target state="translated">Webブラウザーでは、&lt;a href=&quot;windowbase-class&quot;&gt;WindowBase&lt;/a&gt;オブジェクトは任意のブラウザーウィンドウを表します。このオブジェクトには、ウィンドウの状態と、他のウィンドウとの関係（このウィンドウを開いたウィンドウなど）が含まれています。</target>
        </trans-unit>
        <trans-unit id="fc647214a23623f7977abecd53ebba6a199aa3bb" translate="yes" xml:space="preserve">
          <source>In a web browser, each window has a &lt;a href=&quot;window-class&quot;&gt;Window&lt;/a&gt; object, but within the context of a script, this object represents only the current window. Each other window, tab, and iframe has its own &lt;a href=&quot;window-class&quot;&gt;Window&lt;/a&gt; object.</source>
          <target state="translated">Webブラウザーでは、各ウィンドウに&lt;a href=&quot;window-class&quot;&gt;Window&lt;/a&gt;オブジェクトがありますが、スクリプトのコンテキスト内では、このオブジェクトは現在のウィンドウのみを表します。他のウィンドウ、タブ、およびiframeには、それぞれ独自の&lt;a href=&quot;window-class&quot;&gt;Window&lt;/a&gt;オブジェクトがあります。</target>
        </trans-unit>
        <trans-unit id="661e4eb8e4ad6948433f97f41ab5663662a04362" translate="yes" xml:space="preserve">
          <source>In accordance with ISO 8601 a week starts with Monday, which has the value 1.</source>
          <target state="translated">ISO 8601に従い、1週間は月曜日から始まりますが、これは値1を持っています。</target>
        </trans-unit>
        <trans-unit id="7f6ee19c7358b411d235a4d20ec3f253e3387b43" translate="yes" xml:space="preserve">
          <source>In addition to DateTime and Duration, dart:core contains the &lt;a href=&quot;stopwatch-class&quot;&gt;Stopwatch&lt;/a&gt; class for measuring elapsed time.</source>
          <target state="translated">DateTimeとDurationに加えて、dart：coreには経過時間を測定するための&lt;a href=&quot;stopwatch-class&quot;&gt;Stopwatch&lt;/a&gt;クラスが含まれています。</target>
        </trans-unit>
        <trans-unit id="174cc17feae3cca1e154eeee54ec19baaec1c572" translate="yes" xml:space="preserve">
          <source>In addition to being used as an instance to access the file system, Directory has a number of static properties, such as &lt;a href=&quot;directory/systemtemp&quot;&gt;systemTemp&lt;/a&gt;, which gets the system's temporary directory, and the getter and setter &lt;a href=&quot;directory/current&quot;&gt;current&lt;/a&gt;, which you can use to access or change the current directory.</source>
          <target state="translated">Directoryには、ファイルシステムにアクセスするためのインスタンスとして使用されるだけでなく、システムの一時ディレクトリを取得する&lt;a href=&quot;directory/systemtemp&quot;&gt;systemTemp&lt;/a&gt;や、現在のファイルにアクセスまたは変更するために使用できるgetterおよびsetter &lt;a href=&quot;directory/current&quot;&gt;current&lt;/a&gt;など、多くの静的プロパティがあります。ディレクトリ。</target>
        </trans-unit>
        <trans-unit id="61ae227c96cfd5779bbaafd75273d8519e8c2be5" translate="yes" xml:space="preserve">
          <source>In addition to converters for common data representations, this library provides support for implementing converters in a way which makes them easy to chain and to use with streams.</source>
          <target state="translated">一般的なデータ表現のためのコンバータに加えて、このライブラリは、コンバータを簡単にチェーン化してストリームで使用できるような方法で実装するためのサポートを提供しています。</target>
        </trans-unit>
        <trans-unit id="93a0eaaca8722817521cc305d09906dfedd0a36e" translate="yes" xml:space="preserve">
          <source>In addition to exists, the &lt;a href=&quot;filesystementity/stat&quot;&gt;stat&lt;/a&gt;, &lt;a href=&quot;directory/rename&quot;&gt;rename&lt;/a&gt;, and other methods, return Futures.</source>
          <target state="translated">に加えて、&lt;a href=&quot;filesystementity/stat&quot;&gt;stat&lt;/a&gt;、&lt;a href=&quot;directory/rename&quot;&gt;rename&lt;/a&gt;、およびその他のメソッドはFuturesを返します。</target>
        </trans-unit>
        <trans-unit id="7f064e0255248310e0b1bf8aa169aa1814d4e3f3" translate="yes" xml:space="preserve">
          <source>In addition to length, the &lt;a href=&quot;filesystementity/exists&quot;&gt;exists&lt;/a&gt;, &lt;a href=&quot;file/lastmodified&quot;&gt;lastModified&lt;/a&gt;, &lt;a href=&quot;filesystementity/stat&quot;&gt;stat&lt;/a&gt;, and other methods, return Futures.</source>
          <target state="translated">長さに加えて、&lt;a href=&quot;filesystementity/exists&quot;&gt;exists&lt;/a&gt;、&lt;a href=&quot;file/lastmodified&quot;&gt;lastModified&lt;/a&gt;、&lt;a href=&quot;filesystementity/stat&quot;&gt;stat&lt;/a&gt;、およびその他のメソッドはFuturesを返します。</target>
        </trans-unit>
        <trans-unit id="77355fbf25f9b00edfcd0862594258116674ab97" translate="yes" xml:space="preserve">
          <source>In addition to these classes, dart:core contains &lt;a href=&quot;iterable-class&quot;&gt;Iterable&lt;/a&gt;, an interface that defines functionality common in collections of objects. Examples include the ability to run a function on each element in the collection, to apply a test to each element, to retrieve an object, and to determine length.</source>
          <target state="translated">これらのクラスに加えて、dart：coreには、オブジェクトのコレクションに共通の機能を定義するインターフェースである&lt;a href=&quot;iterable-class&quot;&gt;Iterable&lt;/a&gt;が含まれています。例には、コレクションの各要素で関数を実行する機能、各要素にテストを適用する機能、オブジェクトを取得する機能、および長さを決定する機能が含まれます。</target>
        </trans-unit>
        <trans-unit id="71636d3d8615490c8291ad4dd2f6668b46e62e1d" translate="yes" xml:space="preserve">
          <source>In all other cases, including when there is no declaration for &lt;code&gt;name&lt;/code&gt;, the result is the &lt;code&gt;defaultValue&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; の宣言がない場合を含め、他のすべてのケースでは、結果は &lt;code&gt;defaultValue&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ebb4bb2268d42d8553221d89be5c1b45cde58790" translate="yes" xml:space="preserve">
          <source>In case of a &lt;code&gt;done&lt;/code&gt; event the future completes with the given &lt;code&gt;futureValue&lt;/code&gt;.</source>
          <target state="translated">以下の場合、 &lt;code&gt;done&lt;/code&gt; イベント未来は与えられたで完了 &lt;code&gt;futureValue&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aa0571b9e7fe2c4cb9065839eb2832842192c360" translate="yes" xml:space="preserve">
          <source>In case of an error the subscription will automatically cancel (even when it was listening with &lt;code&gt;cancelOnError&lt;/code&gt; set to &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">エラーが発生した場合、サブスクリプションは自動的にキャンセルされます（ &lt;code&gt;cancelOnError&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; に設定されてリスニングされていた場合でも）。</target>
        </trans-unit>
        <trans-unit id="174327d7ba1731ccb5eedd742a2c250d329f83e4" translate="yes" xml:space="preserve">
          <source>In contrast to the more general purpose &lt;a href=&quot;../dart-math/rectangle-class&quot;&gt;Rectangle&lt;/a&gt; class, this class's values are mutable, so one can change the height of an element programmatically.</source>
          <target state="translated">より汎用的な&lt;a href=&quot;../dart-math/rectangle-class&quot;&gt;Rectangle&lt;/a&gt;クラスとは対照的に、このクラスの値は変更可能であるため、要素の高さをプログラムで変更できます。</target>
        </trans-unit>
        <trans-unit id="d02e8e986381e5331345f7a23cdb496d818edb6b" translate="yes" xml:space="preserve">
          <source>In either case:</source>
          <target state="translated">どちらにしても</target>
        </trans-unit>
        <trans-unit id="c9c2097cc56bc9ed07930506cc163a3c18b03bbc" translate="yes" xml:space="preserve">
          <source>In general custom implementations of this class should not be necessary and all validation customization should be done in custom NodeValidators, but custom implementations of this class can be created to perform more complex tree sanitization.</source>
          <target state="translated">一般的に、このクラスのカスタム実装は必要なく、すべての検証のカスタマイズはカスタム NodeValidators で行うべきですが、より複雑なツリーのサニタイズを行うためにこのクラスのカスタム実装を作成することもできます。</target>
        </trans-unit>
        <trans-unit id="a80ca40e5db1bd21b1477a7984e6859b78de2fd8" translate="yes" xml:space="preserve">
          <source>In general, customization of validation behavior should be done via the &lt;a href=&quot;nodevalidatorbuilder-class&quot;&gt;NodeValidatorBuilder&lt;/a&gt; class to mitigate the chances of incorrectly implementing validation rules.</source>
          <target state="translated">一般に、検証動作のカスタマイズは、検証ルールを誤って実装する可能性を軽減するために、&lt;a href=&quot;nodevalidatorbuilder-class&quot;&gt;NodeValidatorBuilder&lt;/a&gt;クラスを介して行う必要があります。</target>
        </trans-unit>
        <trans-unit id="edda0861c8e608d9a0b488649e57642f247065fc" translate="yes" xml:space="preserve">
          <source>In most cases the default &lt;a href=&quot;compressionoptions/compressiondefault-constant&quot;&gt;compressionDefault&lt;/a&gt; is sufficient, but in some situations, it might be desirable to use different compression parameters, for example to preserve memory on small devices.</source>
          <target state="translated">ほとんどの場合、デフォルトの&lt;a href=&quot;compressionoptions/compressiondefault-constant&quot;&gt;compressionDefault&lt;/a&gt;で十分ですが、状況によっては、小さなデバイスのメモリを保持するなど、異なる圧縮パラメータを使用することが望ましい場合があります。</target>
        </trans-unit>
        <trans-unit id="9735805970d4b103be0dda7b7cfaff23f2023113" translate="yes" xml:space="preserve">
          <source>In most cases, it is more readable to use &lt;a href=&quot;catcherror&quot;&gt;catchError&lt;/a&gt; separately, possibly with a &lt;code&gt;test&lt;/code&gt; parameter, instead of handling both value and error in a single &lt;a href=&quot;then&quot;&gt;then&lt;/a&gt; call.</source>
          <target state="translated">ほとんどの場合、単一の&lt;a href=&quot;then&quot;&gt;then&lt;/a&gt;呼び出しで値とエラーの両方を処理するのではなく、 &lt;code&gt;test&lt;/code&gt; パラメータを使用して、&lt;a href=&quot;catcherror&quot;&gt;catchErrorを&lt;/a&gt;個別に使用する方が読みやすくなります。</target>
        </trans-unit>
        <trans-unit id="0d1871df6ad7cc99c181943dd8a494fdc7a46443" translate="yes" xml:space="preserve">
          <source>In order to make sure that system resources are freed, the stream must be read to completion or the subscription on the stream must be cancelled.</source>
          <target state="translated">システム リソースが解放されるようにするには、ストリームを完了まで読み込むか、ストリーム上のサブスクリプションをキャンセルする必要があります。</target>
        </trans-unit>
        <trans-unit id="61195eb07d9c2dd9656339a5fa4624ca964b504c" translate="yes" xml:space="preserve">
          <source>In other words, &lt;code&gt;value&lt;/code&gt; must be between -128 and 127, inclusive.</source>
          <target state="translated">つまり、 &lt;code&gt;value&lt;/code&gt; は-128から127の間でなければなりません。</target>
        </trans-unit>
        <trans-unit id="bcd17824846f1109d020c6e7847702fad52ac0cb" translate="yes" xml:space="preserve">
          <source>In other words, &lt;code&gt;value&lt;/code&gt; must be between 0 and 255, inclusive.</source>
          <target state="translated">つまり、 &lt;code&gt;value&lt;/code&gt; は0から255の間でなければなりません。</target>
        </trans-unit>
        <trans-unit id="3accdc604d1bab9fa09a57b1bb86dd98de74d58a" translate="yes" xml:space="preserve">
          <source>In other words, &lt;code&gt;value&lt;/code&gt; must be between 0 and 2&lt;sup&gt;16&lt;/sup&gt; - 1, inclusive.</source>
          <target state="translated">言い換えると、 &lt;code&gt;value&lt;/code&gt; は0と2 &lt;sup&gt;16-1の&lt;/sup&gt;間でなければなりません。</target>
        </trans-unit>
        <trans-unit id="41c858f692282f95327cf3c3c8258ee53f5b11db" translate="yes" xml:space="preserve">
          <source>In other words, &lt;code&gt;value&lt;/code&gt; must be between 0 and 2&lt;sup&gt;32&lt;/sup&gt; - 1, inclusive.</source>
          <target state="translated">言い換えると、 &lt;code&gt;value&lt;/code&gt; は0から2 &lt;sup&gt;32-1の&lt;/sup&gt;間でなければなりません。</target>
        </trans-unit>
        <trans-unit id="377c273d7ca382b29db31cb63a496fb992e2800e" translate="yes" xml:space="preserve">
          <source>In other words, &lt;code&gt;value&lt;/code&gt; must be between 0 and 2&lt;sup&gt;64&lt;/sup&gt; - 1, inclusive.</source>
          <target state="translated">つまり、 &lt;code&gt;value&lt;/code&gt; は0から2 &lt;sup&gt;64-1の&lt;/sup&gt;間でなければなりません。</target>
        </trans-unit>
        <trans-unit id="a0b140c6b189d451b2be7478fb99159d4e03e965" translate="yes" xml:space="preserve">
          <source>In other words, &lt;code&gt;value&lt;/code&gt; must lie between -2&lt;sup&gt;15&lt;/sup&gt; and 2&lt;sup&gt;15&lt;/sup&gt; - 1, inclusive.</source>
          <target state="translated">換言すれば、 &lt;code&gt;value&lt;/code&gt; -2との間になければならない&lt;sup&gt;15&lt;/sup&gt; 2 &lt;sup&gt;15&lt;/sup&gt; 1、包括的に- 。</target>
        </trans-unit>
        <trans-unit id="a8924f48c7385b9d15dda56181bdf10a186427ab" translate="yes" xml:space="preserve">
          <source>In other words, &lt;code&gt;value&lt;/code&gt; must lie between -2&lt;sup&gt;31&lt;/sup&gt; and 2&lt;sup&gt;31&lt;/sup&gt; - 1, inclusive.</source>
          <target state="translated">換言すれば、 &lt;code&gt;value&lt;/code&gt; -2との間になければならない&lt;sup&gt;31&lt;/sup&gt; 2 &lt;sup&gt;31&lt;/sup&gt; 1、包括的に- 。</target>
        </trans-unit>
        <trans-unit id="e0332f356ba205ccc6478c3883f64cf246e121f8" translate="yes" xml:space="preserve">
          <source>In other words, &lt;code&gt;value&lt;/code&gt; must lie between -2&lt;sup&gt;63&lt;/sup&gt; and 2&lt;sup&gt;63&lt;/sup&gt; - 1, inclusive.</source>
          <target state="translated">換言すれば、 &lt;code&gt;value&lt;/code&gt; -2との間になければならない&lt;sup&gt;63&lt;/sup&gt; 2 &lt;sup&gt;63&lt;/sup&gt; 1、包括的に- 。</target>
        </trans-unit>
        <trans-unit id="c798429ed6fda578426821b1fac8fdf405d34954" translate="yes" xml:space="preserve">
          <source>In particular, an implementation may schedule the next callback, e.g., a &lt;code&gt;duration&lt;/code&gt; after either when the previous callback ended, when the previous callback started, or when the previous callback was scheduled for - even if the actual callback was delayed.</source>
          <target state="translated">特に、実装は次のコールバックをスケジュールできます。たとえば、実際のコールバックが遅延した場合でも、前のコールバックが終了したとき、前のコールバックが開始したとき、または前のコールバックがスケジュールされた後の &lt;code&gt;duration&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9358aa585aacb3ac0e716cbd2d9fcd1b89010133" translate="yes" xml:space="preserve">
          <source>In return, each element knows its own place in the linked list, as well as which list it is in. This allows constant time &lt;a href=&quot;linkedlistentry/insertafter&quot;&gt;LinkedListEntry.insertAfter&lt;/a&gt;, &lt;a href=&quot;linkedlistentry/insertbefore&quot;&gt;LinkedListEntry.insertBefore&lt;/a&gt; and &lt;a href=&quot;linkedlistentry/unlink&quot;&gt;LinkedListEntry.unlink&lt;/a&gt; operations when all you have is the element.</source>
          <target state="translated">代わりに、各要素は、リンクリスト内の独自の場所と、それが含まれているリストを&lt;a href=&quot;linkedlistentry/insertafter&quot;&gt;認識してい&lt;/a&gt;ます。これにより、要素がすべてある場合に、一定時間のLinkedListEntry.insertAfter、&lt;a href=&quot;linkedlistentry/insertbefore&quot;&gt;LinkedListEntry.insertBefore&lt;/a&gt;、および&lt;a href=&quot;linkedlistentry/unlink&quot;&gt;LinkedListEntry.unlink&lt;/a&gt;操作が可能になります。</target>
        </trans-unit>
        <trans-unit id="d5ee468b519488474e84fa7d9d86d7a1c10a2e7b" translate="yes" xml:space="preserve">
          <source>In some cases one needs to use the &lt;a href=&quot;inverted&quot;&gt;inverted&lt;/a&gt; codecs to be able to fuse them correctly. That is, the output type of &lt;code&gt;this&lt;/code&gt; (&lt;code&gt;T&lt;/code&gt;) must match the input type of the second codec &lt;code&gt;other&lt;/code&gt;.</source>
          <target state="translated">場合によっては、&lt;a href=&quot;inverted&quot;&gt;反転&lt;/a&gt;コーデックを使用して正しく融合できるようにする必要があります。つまり、 &lt;code&gt;this&lt;/code&gt; （ &lt;code&gt;T&lt;/code&gt; ）の出力タイプは、2番目のコーデック &lt;code&gt;other&lt;/code&gt; の入力タイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="1111ddba95cf23254b257fb4c88a9acd28b1bb83" translate="yes" xml:space="preserve">
          <source>In some cases we say that a future is completed with another future. This is a short way of stating that the future is completed in the same way, with the same value or error, as the other future once that completes. Whenever a function in the core library may complete a future (for example &lt;a href=&quot;completer/complete&quot;&gt;Completer.complete&lt;/a&gt; or &lt;a href=&quot;future/future.value&quot;&gt;new Future.value&lt;/a&gt;), then it also accepts another future and does this work for the developer.</source>
          <target state="translated">場合によっては、未来は別の未来で完了すると言います。これは、フューチャーが完了すると、他のフューチャーと同じように、同じ値またはエラーで同じようにフューチャーが完了することを示す短い方法です。コアライブラリの関数がフューチャーを完了する可能性があるときはいつでも（&lt;a href=&quot;completer/complete&quot;&gt;Completer.complete&lt;/a&gt;や&lt;a href=&quot;future/future.value&quot;&gt;new Future.valueなど&lt;/a&gt;）、別のフューチャーも受け入れ、開発者のためにこの作業を行います。</target>
        </trans-unit>
        <trans-unit id="c04dd84fa120888c7bde17a61af384da84e17532" translate="yes" xml:space="preserve">
          <source>In some scenarios, for example, when minifying Dart code, or when generating JavaScript code from a Dart program, the size and performance of the output can suffer from use of reflection. In those cases, telling the compiler what is used, can have a significant impact.</source>
          <target state="translated">たとえば、Dart コードをミニマイズするときや、Dart プログラムから JavaScript コードを生成するときなど、いくつかのシナリオでは、出力のサイズとパフォーマンスが反射を使用することに悩まされることがあります。このような場合、使用されている内容をコンパイラに伝えることで、大きな影響を与えることができます。</target>
        </trans-unit>
        <trans-unit id="62bd34019e8d5be2c2296086e3b03bd23a5d8e0f" translate="yes" xml:space="preserve">
          <source>In some situations this blocking behavior is undesirable as it does not provide the same non-blocking behavior as dart:io in general exposes. Use the property &lt;a href=&quot;stdout/nonblocking&quot;&gt;nonBlocking&lt;/a&gt; to get an &lt;code&gt;IOSink&lt;/code&gt; which has the non-blocking behavior.</source>
          <target state="translated">一部の状況では、dart：ioが一般的に公開するのと同じ非ブロッキング動作を提供しないため、このブロッキング動作は望ましくありません。プロパティを使用し&lt;a href=&quot;stdout/nonblocking&quot;&gt;ノンブロッキングを&lt;/a&gt;取得するために &lt;code&gt;IOSink&lt;/code&gt; 、非ブロッキング動作を持っています。</target>
        </trans-unit>
        <trans-unit id="0edc66ecdd6e79390f4296f829ad4eda4715606f" translate="yes" xml:space="preserve">
          <source>In some situations, headers are immutable:</source>
          <target state="translated">状況によっては、ヘッダは不変です。</target>
        </trans-unit>
        <trans-unit id="6778270a733f0bbf0784996a3b2cd5dc51383d0d" translate="yes" xml:space="preserve">
          <source>In the above example. &lt;code&gt;reflectableMethod&lt;/code&gt; is marked as reflectable by using the &lt;code&gt;Reflectable&lt;/code&gt; class, which in turn is specified in the &lt;a href=&quot;metatargets&quot;&gt;metaTargets&lt;/a&gt; annotation.</source>
          <target state="translated">上記の例では。 &lt;code&gt;reflectableMethod&lt;/code&gt; は、&lt;a href=&quot;metatargets&quot;&gt;metaTargets&lt;/a&gt;アノテーションで指定されているReflectableクラスを使用して、 &lt;code&gt;Reflectable&lt;/code&gt; としてマークされます。</target>
        </trans-unit>
        <trans-unit id="ff6ff8507b7d4cb88e35a40d9f511d2cc349d3bf" translate="yes" xml:space="preserve">
          <source>In the browser or on Unix-like systems commonly returns abbreviations, such as &quot;CET&quot; or &quot;CEST&quot;. On Windows returns the full name, for example &quot;Pacific Standard Time&quot;.</source>
          <target state="translated">ブラウザやUnixのようなシステムでは、一般的に &quot;CET &quot;や &quot;CEST &quot;のような省略形を返します。Windowsでは、例えば &quot;Pacific Standard Time &quot;のようなフルネームを返します。</target>
        </trans-unit>
        <trans-unit id="3c35a2800088aa4d70509949002ec4cbd8f75c5c" translate="yes" xml:space="preserve">
          <source>In the case of an error, &lt;code&gt;cleanUp&lt;/code&gt; (if provided), is invoked on any non-null result of successful futures. This makes it possible to &lt;code&gt;cleanUp&lt;/code&gt; resources that would otherwise be lost (since the returned future does not provide access to these values). The &lt;code&gt;cleanUp&lt;/code&gt; function is unused if there is no error.</source>
          <target state="translated">エラーが発生した場合、 &lt;code&gt;cleanUp&lt;/code&gt; （提供されている場合）は、futureが成功した場合のnull以外の結果に対して呼び出されます。これにより、他の方法では失われる可能性のあるリソースを &lt;code&gt;cleanUp&lt;/code&gt; できます（返されたフューチャーはこれらの値へのアクセスを提供しないため）。 &lt;code&gt;cleanUp&lt;/code&gt; エラーがない場合、関数は未使用です。</target>
        </trans-unit>
        <trans-unit id="cf9c4e9bf9d8682809130fbeb0dcdbfd2b23fddd" translate="yes" xml:space="preserve">
          <source>In the following code, an HttpServer listens for HTTP requests. When the server receives a request, it uses the HttpRequest object's &lt;code&gt;method&lt;/code&gt; property to dispatch requests.</source>
          <target state="translated">次のコードでは、HttpServerがHTTPリクエストをリッスンします。サーバーはリクエストを受信すると、HttpRequestオブジェクトの &lt;code&gt;method&lt;/code&gt; プロパティを使用してリクエストをディスパッチします。</target>
        </trans-unit>
        <trans-unit id="d087510462d1d62a331e5edf792007c5963d3e56" translate="yes" xml:space="preserve">
          <source>In the following example, the keys and corresponding values of &lt;code&gt;map&lt;/code&gt; are &lt;code&gt;list&lt;/code&gt; values:</source>
          <target state="translated">次の例では、 &lt;code&gt;map&lt;/code&gt; キーと対応する値は &lt;code&gt;list&lt;/code&gt; 値です。</target>
        </trans-unit>
        <trans-unit id="5dfe5328676f0e00932e797d4fac850c081e99f1" translate="yes" xml:space="preserve">
          <source>In the special circumstances when two isolates share the same code and are running in the same process (e.g. isolates created via &lt;a href=&quot;../isolate/spawn&quot;&gt;Isolate.spawn&lt;/a&gt;), it is also possible to send object instances (which would be copied in the process). This is currently only supported by the dartvm. For now, the dart2js compiler only supports the restricted messages described above.</source>
          <target state="translated">2つの分離&lt;a href=&quot;../isolate/spawn&quot;&gt;プログラム&lt;/a&gt;が同じコードを共有し、同じプロセスで実行されている特別な状況（例：Isolate.spawnを介して作成された分離プログラム）では、オブジェクトプロセスを送信することもできます（プロセスでコピーされます）。これは現在、dartvmでのみサポートされています。現時点では、dart2jsコンパイラは上記の制限されたメッセージのみをサポートしています。</target>
        </trans-unit>
        <trans-unit id="7f43d4374730c9c4d52589c7ad085a0c7c80544c" translate="yes" xml:space="preserve">
          <source>In the string representation, lower-case letters are used for digits above '9', with 'a' being 10 an 'z' being 35.</source>
          <target state="translated">文字列表現では、'9'以上の数字には小文字が使用され、'a'は10、'z'は35となります。</target>
        </trans-unit>
        <trans-unit id="2fa3534ade3b3e5a0ae5027db82797ffee539fe8" translate="yes" xml:space="preserve">
          <source>In these situations, the mutating methods throw exceptions.</source>
          <target state="translated">このような状況では、突然変異メソッドは例外をスローします。</target>
        </trans-unit>
        <trans-unit id="1264c232bc0522ecfaa0d209aa945fb855574ace" translate="yes" xml:space="preserve">
          <source>In this case, an error will be thrown if &lt;code&gt;startIndex&lt;/code&gt; is negative or too large.</source>
          <target state="translated">この場合、 &lt;code&gt;startIndex&lt;/code&gt; が負の値または大きすぎる場合、エラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="edd548f970c57d9ff25f9dc05d6997e8532c1a10" translate="yes" xml:space="preserve">
          <source>In this state, the value of the &lt;code&gt;Content-Length&lt;/code&gt; HTTP header, if specified (non-negative), should match the number of bytes produced by the response's byte stream.</source>
          <target state="translated">この状態では、 &lt;code&gt;Content-Length&lt;/code&gt; HTTPヘッダーの値（指定されている場合（負ではない））は、応答のバイトストリームによって生成されたバイト数と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="f69f9b6d2e45999a54a4c544ff4f56bcbd4f6904" translate="yes" xml:space="preserve">
          <source>Incoming client connections are promoted to secure connections, using the server certificate and key set in &lt;code&gt;context&lt;/code&gt;.</source>
          <target state="translated">受信クライアント接続は、 &lt;code&gt;context&lt;/code&gt; 設定されたサーバー証明書とキーを使用して、安全な接続に昇格されます。</target>
        </trans-unit>
        <trans-unit id="cde003d7d5762ee307ea27be2227534cf069163f" translate="yes" xml:space="preserve">
          <source>Incomplete requests, in which all or part of the header is missing, are ignored, and no exceptions or HttpRequest objects are generated for them. Likewise, when writing to an HttpResponse, any &lt;a href=&quot;socket-class&quot;&gt;Socket&lt;/a&gt; exceptions are ignored and any future writes are ignored.</source>
          <target state="translated">ヘッダーのすべてまたは一部が欠落している不完全な要求は無視され、例外やHttpRequestオブジェクトは生成されません。同様に、HttpResponseへの書き込み時には、&lt;a href=&quot;socket-class&quot;&gt;ソケット&lt;/a&gt;例外は無視され、以降の書き込みは無視されます。</target>
        </trans-unit>
        <trans-unit id="ee28b8289a7750f76e7d812a7783f170c73c9d07" translate="yes" xml:space="preserve">
          <source>Increasing this number may lower performance and take up unwanted system resources.</source>
          <target state="translated">この数を増やすと、パフォーマンスが低下したり、不要なシステムリソースを占有したりする可能性があります。</target>
        </trans-unit>
        <trans-unit id="c2df9b932637fe9d32a0f16da1c11873398f873d" translate="yes" xml:space="preserve">
          <source>Index</source>
          <target state="translated">Index</target>
        </trans-unit>
        <trans-unit id="a54061db87b6619476ac27b01b70c0d3bef0598a" translate="yes" xml:space="preserve">
          <source>Index class</source>
          <target state="translated">インデックスクラス</target>
        </trans-unit>
        <trans-unit id="16b64b6cd89d2688f970965b557243592f6f5fb2" translate="yes" xml:space="preserve">
          <source>Index.count</source>
          <target state="translated">Index.count</target>
        </trans-unit>
        <trans-unit id="930925288d12dfa3ec64eb91c751689a64431967" translate="yes" xml:space="preserve">
          <source>Index.get</source>
          <target state="translated">Index.get</target>
        </trans-unit>
        <trans-unit id="8826ab35d416262897c605f9f0c5b480f44f8dc3" translate="yes" xml:space="preserve">
          <source>Index.getAll</source>
          <target state="translated">Index.getAll</target>
        </trans-unit>
        <trans-unit id="adbbd4a741808d734d8aa0cd851a04fabb6deb6a" translate="yes" xml:space="preserve">
          <source>Index.getAllKeys</source>
          <target state="translated">Index.getAllKeys</target>
        </trans-unit>
        <trans-unit id="fef03a8a59c35f102f1d6d724cd66f45dfcb951d" translate="yes" xml:space="preserve">
          <source>Index.getKey</source>
          <target state="translated">Index.getKey</target>
        </trans-unit>
        <trans-unit id="b1e05bcd6a7cd249187a76386abc9674f0d912e7" translate="yes" xml:space="preserve">
          <source>Index.keyPath</source>
          <target state="translated">Index.keyPath</target>
        </trans-unit>
        <trans-unit id="ee591cd4c86198ee0e0af5f873c1af5f15e1a326" translate="yes" xml:space="preserve">
          <source>Index.multiEntry</source>
          <target state="translated">Index.multiEntry</target>
        </trans-unit>
        <trans-unit id="a81409d1833143080fa7467f35ac07337a7dc88b" translate="yes" xml:space="preserve">
          <source>Index.name</source>
          <target state="translated">Index.name</target>
        </trans-unit>
        <trans-unit id="f95841044553628569fd952793beb88a50d2041c" translate="yes" xml:space="preserve">
          <source>Index.objectStore</source>
          <target state="translated">Index.objectStore</target>
        </trans-unit>
        <trans-unit id="3fe82373dbd52b75d725ea696033212ab8259025" translate="yes" xml:space="preserve">
          <source>Index.openCursor</source>
          <target state="translated">Index.openCursor</target>
        </trans-unit>
        <trans-unit id="79e473331b5abb455c822ad2778999d24683f442" translate="yes" xml:space="preserve">
          <source>Index.openKeyCursor</source>
          <target state="translated">Index.openKeyCursor</target>
        </trans-unit>
        <trans-unit id="dc27448cf0743a98e1b5e1788bf2eb9f9a40cd44" translate="yes" xml:space="preserve">
          <source>Index.unique</source>
          <target state="translated">Index.unique</target>
        </trans-unit>
        <trans-unit id="383b324a3291b51f1e54ef9c0d763010fbc5e171" translate="yes" xml:space="preserve">
          <source>IndexError</source>
          <target state="translated">IndexError</target>
        </trans-unit>
        <trans-unit id="49983e01cbf728d4051d785ede718ac2bb70cfc9" translate="yes" xml:space="preserve">
          <source>IndexError class</source>
          <target state="translated">IndexErrorクラス</target>
        </trans-unit>
        <trans-unit id="b43ba23356d4144fd765a98ef8da980ebe717999" translate="yes" xml:space="preserve">
          <source>IndexError constructor</source>
          <target state="translated">インデックスエラーのコンストラクタ</target>
        </trans-unit>
        <trans-unit id="befaf4c2d0a30f2785287ba1062cee8684e7b19e" translate="yes" xml:space="preserve">
          <source>IndexError(</source>
          <target state="translated">IndexError(</target>
        </trans-unit>
        <trans-unit id="1850e50a3fdd99aea3df77c6d88bb5af3f820e99" translate="yes" xml:space="preserve">
          <source>IndexError.IndexError</source>
          <target state="translated">IndexError.IndexError</target>
        </trans-unit>
        <trans-unit id="f9273adb035620d997871eab64c640f645b2a7d9" translate="yes" xml:space="preserve">
          <source>IndexError.end</source>
          <target state="translated">IndexError.end</target>
        </trans-unit>
        <trans-unit id="458e652d1f2d9ff667ca5b56d004e51c58880129" translate="yes" xml:space="preserve">
          <source>IndexError.indexable</source>
          <target state="translated">IndexError.indexable</target>
        </trans-unit>
        <trans-unit id="ef6c509a2d2627035bb02d0e4042528974351fe4" translate="yes" xml:space="preserve">
          <source>IndexError.length</source>
          <target state="translated">IndexError.length</target>
        </trans-unit>
        <trans-unit id="58851ba40b2e9bfe5000b489368a9e82fe4277f8" translate="yes" xml:space="preserve">
          <source>IndexError.start</source>
          <target state="translated">IndexError.start</target>
        </trans-unit>
        <trans-unit id="08990f70466e64df517052400615a6fef3e90775" translate="yes" xml:space="preserve">
          <source>Indicates that file system data can be cleared at any time.</source>
          <target state="translated">ファイルシステムのデータをいつでもクリアできることを示します。</target>
        </trans-unit>
        <trans-unit id="52c455e573e47a243eb2e3a5a78ec81d0adf4640" translate="yes" xml:space="preserve">
          <source>Indicates that file system data can be cleared at any time. &lt;a href=&quot;window/temporary-constant&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">ファイルシステムデータはいつでも消去できることを示します。&lt;a href=&quot;window/temporary-constant&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4bcd552574df37b22c623ee35d8e87b75ef1c0c6" translate="yes" xml:space="preserve">
          <source>Indicates that file system data cannot be cleared unless given user permission.</source>
          <target state="translated">ユーザー権限が与えられていないとファイルシステムのデータをクリアできないことを示します。</target>
        </trans-unit>
        <trans-unit id="09d76287ca73a9873db975de883563af79578bfa" translate="yes" xml:space="preserve">
          <source>Indicates that file system data cannot be cleared unless given user permission. &lt;a href=&quot;window/persistent-constant&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">ユーザーの許可が与えられない限り、ファイルシステムデータを消去できないことを示します。&lt;a href=&quot;window/persistent-constant&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="035d10cea339382ba81f7542ac5299b9b237d069" translate="yes" xml:space="preserve">
          <source>Indicates that loading of &lt;a href=&quot;deferredlibrary/libraryname&quot;&gt;libraryName&lt;/a&gt; is deferred.</source>
          <target state="translated">&lt;a href=&quot;deferredlibrary/libraryname&quot;&gt;libraryNameの&lt;/a&gt;ロードが延期されることを示します。</target>
        </trans-unit>
        <trans-unit id="d53a0db0d8b153246bd06614c2248a28d25a344b" translate="yes" xml:space="preserve">
          <source>Indicates that loading of &lt;a href=&quot;deferredlibrary/libraryname&quot;&gt;libraryName&lt;/a&gt; is deferred. &lt;a href=&quot;deferredlibrary-class&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;deferredlibrary/libraryname&quot;&gt;libraryNameの&lt;/a&gt;ロードが延期されることを示します。&lt;a href=&quot;deferredlibrary-class&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a5b99cea8622e916417f239770ad95c5f0f9ea5d" translate="yes" xml:space="preserve">
          <source>Indicates the document and all subresources have been loaded.</source>
          <target state="translated">ドキュメントとすべてのサブリソースが読み込まれていることを示します。</target>
        </trans-unit>
        <trans-unit id="7b79f78bbe8d49a0282efb4487043043179c418e" translate="yes" xml:space="preserve">
          <source>Indicates the document is finished parsing but is still loading subresources.</source>
          <target state="translated">ドキュメントの解析は終了しましたが、サブリソースの読み込み中であることを示します。</target>
        </trans-unit>
        <trans-unit id="8c7e9ebac0d0f3e48280b4d7c4fe94332c51be92" translate="yes" xml:space="preserve">
          <source>Indicates the document is still loading and parsing.</source>
          <target state="translated">文書がまだ読み込まれ、解析中であることを示します。</target>
        </trans-unit>
        <trans-unit id="04225e4c53e670472d23229f992ffc4b3d7b2dd2" translate="yes" xml:space="preserve">
          <source>Indicates whether the element can be dragged and dropped.</source>
          <target state="translated">要素をドラッグ&amp;ドロップできるかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="963e630364b055b74b95cf5b68cfbffd064c2a2a" translate="yes" xml:space="preserve">
          <source>Indicates whether the element can be dragged and dropped. &lt;a href=&quot;../dart-html/element/draggable&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">要素をドラッグアンドドロップできるかどうかを示します。&lt;a href=&quot;../dart-html/element/draggable&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a2e550a936ae3809599ae18e391e2feabe00e4e9" translate="yes" xml:space="preserve">
          <source>Indicates whether the element can be dragged and dropped. &lt;a href=&quot;element/draggable&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">要素をドラッグアンドドロップできるかどうかを示します。&lt;a href=&quot;element/draggable&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="37f9e65171804b2d389a1c30be18b94607836729" translate="yes" xml:space="preserve">
          <source>Indicates whether the element is not relevant to the page's current state.</source>
          <target state="translated">要素がページの現在の状態に関連していないかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="95f552e85704ee507e7149ad716f90c2ae80faf3" translate="yes" xml:space="preserve">
          <source>Indicates whether the element is not relevant to the page's current state. &lt;a href=&quot;../dart-html/element/hidden&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">要素がページの現在の状態に関連していないかどうかを示します。&lt;a href=&quot;../dart-html/element/hidden&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7867928c61e450bd59adfc27d46b9f402208ba39" translate="yes" xml:space="preserve">
          <source>Indicates whether the element is not relevant to the page's current state. &lt;a href=&quot;element/hidden&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">要素がページの現在の状態に関連していないかどうかを示します。&lt;a href=&quot;element/hidden&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5613b6af548869e7e0a96ce83cecfa6d13e85176" translate="yes" xml:space="preserve">
          <source>Indicates whether this window has been closed.</source>
          <target state="translated">このウィンドウが閉じられたかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="474ac2ffa65bbda3de388d76ea91d54e8e8d4e11" translate="yes" xml:space="preserve">
          <source>Indicates whether this window has been closed. &lt;a href=&quot;window/closed&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このウィンドウが閉じられているかどうかを示します。&lt;a href=&quot;window/closed&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f49816220e8f72a8d0abf50df6624f0132c3be47" translate="yes" xml:space="preserve">
          <source>Indicates whether this window has been closed. &lt;a href=&quot;windowbase/closed&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このウィンドウが閉じられているかどうかを示します。&lt;a href=&quot;windowbase/closed&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3b91d43e2b3eb96d6d0abb73878814a7ac7a9336" translate="yes" xml:space="preserve">
          <source>Indicator of the current state of the request:</source>
          <target state="translated">リクエストの現在の状態を示すインジケータ。</target>
        </trans-unit>
        <trans-unit id="8f97e4c5034d785efb317c83fe71b522b61cbeaa" translate="yes" xml:space="preserve">
          <source>Indicator of the current state of the request: &lt;a href=&quot;httprequest/readystate&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">リクエストの現在の状態のインジケータ：&lt;a href=&quot;httprequest/readystate&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c52f81d2f96062ab40ceb3a73bb2b92e873f7297" translate="yes" xml:space="preserve">
          <source>Individual parts can be larger than the next-bigger unit. For example, &lt;code&gt;hours&lt;/code&gt; can be greater than 23.</source>
          <target state="translated">個々のパーツは、次に大きいユニットより大きくなる場合があります。たとえば、 &lt;code&gt;hours&lt;/code&gt; は23を超える場合があります。</target>
        </trans-unit>
        <trans-unit id="39b5d146e9b48ff915416b048a11f9c59ce85465" translate="yes" xml:space="preserve">
          <source>Information about an &lt;a href=&quot;httprequest-class&quot;&gt;HttpRequest&lt;/a&gt;, &lt;a href=&quot;httpresponse-class&quot;&gt;HttpResponse&lt;/a&gt;, &lt;a href=&quot;httpclientrequest-class&quot;&gt;HttpClientRequest&lt;/a&gt;, or &lt;a href=&quot;httpclientresponse-class&quot;&gt;HttpClientResponse&lt;/a&gt; connection.</source>
          <target state="translated">&lt;a href=&quot;httprequest-class&quot;&gt;HttpRequest&lt;/a&gt;、&lt;a href=&quot;httpresponse-class&quot;&gt;HttpResponse&lt;/a&gt;、&lt;a href=&quot;httpclientrequest-class&quot;&gt;HttpClientRequest&lt;/a&gt;、または&lt;a href=&quot;httpclientresponse-class&quot;&gt;HttpClientResponse&lt;/a&gt;接続に関する情報。</target>
        </trans-unit>
        <trans-unit id="abd9844c219cbd9f5f3ad3b265407b55cbe4c492" translate="yes" xml:space="preserve">
          <source>Information about the client connection.</source>
          <target state="translated">クライアント接続に関する情報。</target>
        </trans-unit>
        <trans-unit id="e074de5e485bd71fd344a1c69772cf52dd6d9c98" translate="yes" xml:space="preserve">
          <source>Information about the client connection. &lt;a href=&quot;httprequest/connectioninfo&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">クライアント接続に関する情報。&lt;a href=&quot;httprequest/connectioninfo&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bcfced1994643d70eed0e7b2290038ca63ed2dd2" translate="yes" xml:space="preserve">
          <source>Information about the environment in which the current program is running.</source>
          <target state="translated">現在のプログラムが実行されている環境に関する情報。</target>
        </trans-unit>
        <trans-unit id="a5c1173b7d0a5e686cb598a55cc63d9d17527c14" translate="yes" xml:space="preserve">
          <source>Information about the environment in which the current program is running. &lt;a href=&quot;platform-class&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">現在のプログラムが実行されている環境に関する情報。&lt;a href=&quot;platform-class&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5cb126362869fb219e2e3aa086ce12b62c377997" translate="yes" xml:space="preserve">
          <source>Information about the screen displaying this window.</source>
          <target state="translated">このウィンドウを表示している画面の情報。</target>
        </trans-unit>
        <trans-unit id="c64fc71ca5e5c7ab798240d38016dc26f862634d" translate="yes" xml:space="preserve">
          <source>Information about the screen displaying this window. &lt;a href=&quot;window/screen&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このウィンドウを表示している画面に関する情報。&lt;a href=&quot;window/screen&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fdaddb9ce367c2ca746a97cc24d2e8817a51f27d" translate="yes" xml:space="preserve">
          <source>Inheritance</source>
          <target state="translated">Inheritance</target>
        </trans-unit>
        <trans-unit id="f13c83f19d7c271e995846aae0242c580d2f8750" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;../../dart-async/stream-class&quot;&gt;Stream&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../dart-async/stream-class&quot;&gt;Stream&lt;/a&gt;から継承されます。</target>
        </trans-unit>
        <trans-unit id="4fc911475b9801e108f8219eb3f9187288164ad6" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;../dart-async/stream-class&quot;&gt;Stream&lt;/a&gt;. &lt;a href=&quot;receiveport/listen&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../dart-async/stream-class&quot;&gt;Stream&lt;/a&gt;から継承されます。&lt;a href=&quot;receiveport/listen&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="40da3298285b34921854a9fa41880f1b0de2e244" translate="yes" xml:space="preserve">
          <source>Initial compression dictionary.</source>
          <target state="translated">初期圧縮辞書。</target>
        </trans-unit>
        <trans-unit id="3fca6cc28cef37b1572d2ec2822552986ec75bd3" translate="yes" xml:space="preserve">
          <source>Initial compression dictionary. &lt;a href=&quot;gzipcodec/dictionary&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">初期圧縮辞書。&lt;a href=&quot;gzipcodec/dictionary&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a5290a4f46c9fce6b0e163bf3fc69714bf2a00d" translate="yes" xml:space="preserve">
          <source>Initial compression dictionary. &lt;a href=&quot;zlibcodec/dictionary&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">初期圧縮辞書。&lt;a href=&quot;zlibcodec/dictionary&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="36cd5f5952d6cf08dc4e0bd96ec3d876212dfffb" translate="yes" xml:space="preserve">
          <source>Initial compression dictionary. &lt;a href=&quot;zlibdecoder/dictionary&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">初期圧縮辞書。&lt;a href=&quot;zlibdecoder/dictionary&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3148d5372aa3544951dc17edfef946b64409e095" translate="yes" xml:space="preserve">
          <source>Initial compression dictionary. &lt;a href=&quot;zlibencoder/dictionary&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">初期圧縮辞書。&lt;a href=&quot;zlibencoder/dictionary&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="79c3368a0815c8a7602da059b64b276ced8c272c" translate="yes" xml:space="preserve">
          <source>Inline-styles are not allowed.</source>
          <target state="translated">インラインスタイルは使用できません。</target>
        </trans-unit>
        <trans-unit id="0051010056ff31291c74e7da4f87c879179ec3d5" translate="yes" xml:space="preserve">
          <source>Input bytes are converted to a string by &lt;code&gt;encoding&lt;/code&gt;. If &lt;code&gt;encoding&lt;/code&gt; is omitted, it defaults to &lt;a href=&quot;../systemencoding-constant&quot;&gt;systemEncoding&lt;/a&gt;.</source>
          <target state="translated">入力バイトは、 &lt;code&gt;encoding&lt;/code&gt; によって文字列に変換されます。場合 &lt;code&gt;encoding&lt;/code&gt; に省略され、それがデフォルト&lt;a href=&quot;../systemencoding-constant&quot;&gt;systemEncoding&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3f37e64e1fb0569e1f9eac1670a8c657e750c404" translate="yes" xml:space="preserve">
          <source>InputDeviceCapabilities</source>
          <target state="translated">InputDeviceCapabilities</target>
        </trans-unit>
        <trans-unit id="f999baabda93261c62e773118fffd81747eea63d" translate="yes" xml:space="preserve">
          <source>InputDeviceCapabilities class</source>
          <target state="translated">InputDeviceCapabilities クラス</target>
        </trans-unit>
        <trans-unit id="7491398ecd4ff93353457282da089b9df39bd76a" translate="yes" xml:space="preserve">
          <source>InputDeviceCapabilities constructor</source>
          <target state="translated">InputDeviceCapabilities のコンストラクタ</target>
        </trans-unit>
        <trans-unit id="d9be887a33c56c7a2cca3be09fc7074f16acc08c" translate="yes" xml:space="preserve">
          <source>InputDeviceCapabilities(</source>
          <target state="translated">InputDeviceCapabilities(</target>
        </trans-unit>
        <trans-unit id="fc54c3c72e12e7a3063638b97dd96759f84015ed" translate="yes" xml:space="preserve">
          <source>InputDeviceCapabilities.InputDeviceCapabilities</source>
          <target state="translated">InputDeviceCapabilities.InputDeviceCapabilities</target>
        </trans-unit>
        <trans-unit id="8801a8bb7b406d600a25ac86b66a4e1a68673b3d" translate="yes" xml:space="preserve">
          <source>InputDeviceCapabilities.firesTouchEvents</source>
          <target state="translated">InputDeviceCapabilities.firesTouchEvents</target>
        </trans-unit>
        <trans-unit id="1a07a45e44f88bdd774932fa5335ba3685430cb6" translate="yes" xml:space="preserve">
          <source>InputElement</source>
          <target state="translated">InputElement</target>
        </trans-unit>
        <trans-unit id="89ab357cf68355756c237a0d9b06f317ce2dc042" translate="yes" xml:space="preserve">
          <source>InputElement class</source>
          <target state="translated">入力要素クラス</target>
        </trans-unit>
        <trans-unit id="1c00406e04ad1401f48e3e22a8899b42308f8876" translate="yes" xml:space="preserve">
          <source>InputElement constructor</source>
          <target state="translated">入力要素のコンストラクタ</target>
        </trans-unit>
        <trans-unit id="71c66c5cab09094421639acb204d9b95b4b46146" translate="yes" xml:space="preserve">
          <source>InputElement(</source>
          <target state="translated">InputElement(</target>
        </trans-unit>
        <trans-unit id="e82dbde22aaad801524513422da21404426687de" translate="yes" xml:space="preserve">
          <source>InputElement.InputElement</source>
          <target state="translated">InputElement.InputElement</target>
        </trans-unit>
        <trans-unit id="7f9408f938b75c82e8b85d16dfb4f615e7297bc0" translate="yes" xml:space="preserve">
          <source>InputElement.InputElement.created</source>
          <target state="translated">InputElement.InputElement.created</target>
        </trans-unit>
        <trans-unit id="787ee9cabb3423442b5eb538ae771a591315093a" translate="yes" xml:space="preserve">
          <source>InputElement.accept</source>
          <target state="translated">InputElement.accept</target>
        </trans-unit>
        <trans-unit id="5baa4a18310705474bcb0da57aad42165d9f42ce" translate="yes" xml:space="preserve">
          <source>InputElement.alt</source>
          <target state="translated">InputElement.alt</target>
        </trans-unit>
        <trans-unit id="84bf347c92138a668ae328b65c59a83db294cf9e" translate="yes" xml:space="preserve">
          <source>InputElement.autocapitalize</source>
          <target state="translated">InputElement.autocapitalize</target>
        </trans-unit>
        <trans-unit id="ea8c43310ffdb813e8495ab5d7070f090f2f2b0e" translate="yes" xml:space="preserve">
          <source>InputElement.autocomplete</source>
          <target state="translated">InputElement.autocomplete</target>
        </trans-unit>
        <trans-unit id="8b0e0cad1e09c9ac7e067e262038602d7dd58e19" translate="yes" xml:space="preserve">
          <source>InputElement.autofocus</source>
          <target state="translated">InputElement.autofocus</target>
        </trans-unit>
        <trans-unit id="0f3d602323c8a4f9aea647d8feb52099999f5fc0" translate="yes" xml:space="preserve">
          <source>InputElement.capture</source>
          <target state="translated">InputElement.capture</target>
        </trans-unit>
        <trans-unit id="f7f6d2df9902c8a7568929b6179732902d382570" translate="yes" xml:space="preserve">
          <source>InputElement.checkValidity</source>
          <target state="translated">InputElement.checkValidity</target>
        </trans-unit>
        <trans-unit id="9d7c382bb811579c3b8c82d5df25a33d2e24d85c" translate="yes" xml:space="preserve">
          <source>InputElement.checked</source>
          <target state="translated">InputElement.checked</target>
        </trans-unit>
        <trans-unit id="7849b2258bafa6dc12ef41c01b327d62973a9c15" translate="yes" xml:space="preserve">
          <source>InputElement.created constructor</source>
          <target state="translated">InputElement.created コンストラクタ</target>
        </trans-unit>
        <trans-unit id="48c2de6d19a8b3f52693bc3e150ed2baa16dab6c" translate="yes" xml:space="preserve">
          <source>InputElement.created(</source>
          <target state="translated">InputElement.created(</target>
        </trans-unit>
        <trans-unit id="3c450f308482ecda04c4b2acf3c76f91dd39f487" translate="yes" xml:space="preserve">
          <source>InputElement.defaultChecked</source>
          <target state="translated">InputElement.defaultChecked</target>
        </trans-unit>
        <trans-unit id="527f7271eb475a8c8c89302e03386b0f4f287c13" translate="yes" xml:space="preserve">
          <source>InputElement.defaultValue</source>
          <target state="translated">InputElement.defaultValue</target>
        </trans-unit>
        <trans-unit id="66f94113d28f82a7bb9e5be856ff223748d2a7c7" translate="yes" xml:space="preserve">
          <source>InputElement.dirName</source>
          <target state="translated">InputElement.dirName</target>
        </trans-unit>
        <trans-unit id="99f0fbc68823aa215770640529dc410cd333bd95" translate="yes" xml:space="preserve">
          <source>InputElement.directory</source>
          <target state="translated">InputElement.directory</target>
        </trans-unit>
        <trans-unit id="c4ffc6dcecc9531edbea530826518f70293d3ecf" translate="yes" xml:space="preserve">
          <source>InputElement.disabled</source>
          <target state="translated">InputElement.disabled</target>
        </trans-unit>
        <trans-unit id="4cf63da545363c587fcf6ecdfd77b88befb5fbd1" translate="yes" xml:space="preserve">
          <source>InputElement.entries</source>
          <target state="translated">InputElement.entries</target>
        </trans-unit>
        <trans-unit id="26ef4a8ac120a330993d8bb9adf7b89ccea66830" translate="yes" xml:space="preserve">
          <source>InputElement.files</source>
          <target state="translated">InputElement.files</target>
        </trans-unit>
        <trans-unit id="bb1f0c44a624e45be4fe186fa8140da54d7015e5" translate="yes" xml:space="preserve">
          <source>InputElement.form</source>
          <target state="translated">InputElement.form</target>
        </trans-unit>
        <trans-unit id="fd94236a93127b572cff7db993d22a00fad7f688" translate="yes" xml:space="preserve">
          <source>InputElement.formAction</source>
          <target state="translated">InputElement.formAction</target>
        </trans-unit>
        <trans-unit id="ce70ed9fff130c5f754d9e22eb7e1ad2c28fb6ea" translate="yes" xml:space="preserve">
          <source>InputElement.formEnctype</source>
          <target state="translated">InputElement.formEnctype</target>
        </trans-unit>
        <trans-unit id="857b9959da1258677e8f8e43e06f6e67edb1a546" translate="yes" xml:space="preserve">
          <source>InputElement.formMethod</source>
          <target state="translated">InputElement.formMethod</target>
        </trans-unit>
        <trans-unit id="6971a4d38478f39ba07282d25abb5ce6bb833210" translate="yes" xml:space="preserve">
          <source>InputElement.formNoValidate</source>
          <target state="translated">InputElement.formNoValidate</target>
        </trans-unit>
        <trans-unit id="5492ab77fd45a8cc6cbc59218ca8ec53ad5bc46d" translate="yes" xml:space="preserve">
          <source>InputElement.formTarget</source>
          <target state="translated">InputElement.formTarget</target>
        </trans-unit>
        <trans-unit id="513f239c481d48c1b8e8c91cfc87f80f592f3631" translate="yes" xml:space="preserve">
          <source>InputElement.height</source>
          <target state="translated">InputElement.height</target>
        </trans-unit>
        <trans-unit id="58de3e48cb405cc105d8fe6ef8dc9f3cab6a70f7" translate="yes" xml:space="preserve">
          <source>InputElement.incremental</source>
          <target state="translated">InputElement.incremental</target>
        </trans-unit>
        <trans-unit id="23ae255b7d8ca6a695bbfe70337d2994b69213c2" translate="yes" xml:space="preserve">
          <source>InputElement.indeterminate</source>
          <target state="translated">InputElement.indeterminate</target>
        </trans-unit>
        <trans-unit id="b8885073cefa143ef5ff7e57c501abb3a005a9ac" translate="yes" xml:space="preserve">
          <source>InputElement.labels</source>
          <target state="translated">InputElement.labels</target>
        </trans-unit>
        <trans-unit id="294fd65c27684fbf9f12411714e0344ddf83a86e" translate="yes" xml:space="preserve">
          <source>InputElement.list</source>
          <target state="translated">InputElement.list</target>
        </trans-unit>
        <trans-unit id="3b90006e1b7d8e5a4eec8b8864d70f171e43550d" translate="yes" xml:space="preserve">
          <source>InputElement.max</source>
          <target state="translated">InputElement.max</target>
        </trans-unit>
        <trans-unit id="c80ab4dfe1df243aa3b17a73fe9ccaa67bacf7b6" translate="yes" xml:space="preserve">
          <source>InputElement.maxLength</source>
          <target state="translated">InputElement.maxLength</target>
        </trans-unit>
        <trans-unit id="54f3f129ed45b21083dcd75e40e826b630792341" translate="yes" xml:space="preserve">
          <source>InputElement.min</source>
          <target state="translated">InputElement.min</target>
        </trans-unit>
        <trans-unit id="ff6b94d6653596ab32e4a3f1e1c015ca84d84aaf" translate="yes" xml:space="preserve">
          <source>InputElement.minLength</source>
          <target state="translated">InputElement.minLength</target>
        </trans-unit>
        <trans-unit id="29b0293814ca8e252968618835d17f09eded107f" translate="yes" xml:space="preserve">
          <source>InputElement.multiple</source>
          <target state="translated">InputElement.multiple</target>
        </trans-unit>
        <trans-unit id="52ee46afa9480731fab31bd237897714b09fcf24" translate="yes" xml:space="preserve">
          <source>InputElement.name</source>
          <target state="translated">InputElement.name</target>
        </trans-unit>
        <trans-unit id="b3d05d11618e12a87acc8cbfd37ddc70d3b83c27" translate="yes" xml:space="preserve">
          <source>InputElement.pattern</source>
          <target state="translated">InputElement.pattern</target>
        </trans-unit>
        <trans-unit id="b693cd640119f3a066001c4aca6779eb85e25f33" translate="yes" xml:space="preserve">
          <source>InputElement.placeholder</source>
          <target state="translated">InputElement.placeholder</target>
        </trans-unit>
        <trans-unit id="88ce06a509a7a7a2a54b12334b3d6e83eaa81230" translate="yes" xml:space="preserve">
          <source>InputElement.readOnly</source>
          <target state="translated">InputElement.readOnly</target>
        </trans-unit>
        <trans-unit id="10f88463f2d018e1fd957a9df8989aa332692ce9" translate="yes" xml:space="preserve">
          <source>InputElement.reportValidity</source>
          <target state="translated">InputElement.reportValidity</target>
        </trans-unit>
        <trans-unit id="ae9a9827e0d247e9aa84f7d292d6f647b61f90b7" translate="yes" xml:space="preserve">
          <source>InputElement.required</source>
          <target state="translated">InputElement.required</target>
        </trans-unit>
        <trans-unit id="0fd4433af90d52caa283af7536192ba630985b91" translate="yes" xml:space="preserve">
          <source>InputElement.select</source>
          <target state="translated">InputElement.select</target>
        </trans-unit>
        <trans-unit id="83e0ad5ebadb49675d6f5c8a2d341244141e415f" translate="yes" xml:space="preserve">
          <source>InputElement.selectionDirection</source>
          <target state="translated">InputElement.selectionDirection</target>
        </trans-unit>
        <trans-unit id="91e11c1527d8a54f3df3dfd081364ea3ff9b2b73" translate="yes" xml:space="preserve">
          <source>InputElement.selectionEnd</source>
          <target state="translated">InputElement.selectionEnd</target>
        </trans-unit>
        <trans-unit id="082bb5007e444f172f97812a406d788cfc0c0ab6" translate="yes" xml:space="preserve">
          <source>InputElement.selectionStart</source>
          <target state="translated">InputElement.selectionStart</target>
        </trans-unit>
        <trans-unit id="f76c1b2e702ac146d55072f6f22b6a4616a56693" translate="yes" xml:space="preserve">
          <source>InputElement.setCustomValidity</source>
          <target state="translated">InputElement.setCustomValidity</target>
        </trans-unit>
        <trans-unit id="2695a1b04e2f7abf05212c64c4f4a2de12e2b955" translate="yes" xml:space="preserve">
          <source>InputElement.setRangeText</source>
          <target state="translated">InputElement.setRangeText</target>
        </trans-unit>
        <trans-unit id="7a799391c7f92a9191bd92ec8db8eace67c951d9" translate="yes" xml:space="preserve">
          <source>InputElement.setSelectionRange</source>
          <target state="translated">InputElement.setSelectionRange</target>
        </trans-unit>
        <trans-unit id="85c1bd92dc22a2e5f59ea55a74f8f693c2d56b12" translate="yes" xml:space="preserve">
          <source>InputElement.size</source>
          <target state="translated">InputElement.size</target>
        </trans-unit>
        <trans-unit id="3dcd7cceea3a11edb217dc0d03cb9d69468ac33e" translate="yes" xml:space="preserve">
          <source>InputElement.src</source>
          <target state="translated">InputElement.src</target>
        </trans-unit>
        <trans-unit id="a3698ac2dff119a1212f2e663859dc2a2e113557" translate="yes" xml:space="preserve">
          <source>InputElement.step</source>
          <target state="translated">InputElement.step</target>
        </trans-unit>
        <trans-unit id="cc7004b5724a831826ba6f3661d6e552328ded3e" translate="yes" xml:space="preserve">
          <source>InputElement.stepDown</source>
          <target state="translated">InputElement.stepDown</target>
        </trans-unit>
        <trans-unit id="50850647f9bc375745f566162e3b4ccc5d748afa" translate="yes" xml:space="preserve">
          <source>InputElement.stepUp</source>
          <target state="translated">InputElement.stepUp</target>
        </trans-unit>
        <trans-unit id="d11e7aeb014e850e3531cd5728b4bd7365a4d284" translate="yes" xml:space="preserve">
          <source>InputElement.type</source>
          <target state="translated">InputElement.type</target>
        </trans-unit>
        <trans-unit id="5474414de6e2fc7ae8cccf511553f28f12c2e823" translate="yes" xml:space="preserve">
          <source>InputElement.validationMessage</source>
          <target state="translated">InputElement.validationMessage</target>
        </trans-unit>
        <trans-unit id="4d357b1cda4244a8b239bf418195a26bb1783df9" translate="yes" xml:space="preserve">
          <source>InputElement.validity</source>
          <target state="translated">InputElement.validity</target>
        </trans-unit>
        <trans-unit id="e0f74a5602e0b330d1ba308747c6493ef0948732" translate="yes" xml:space="preserve">
          <source>InputElement.value</source>
          <target state="translated">InputElement.value</target>
        </trans-unit>
        <trans-unit id="d05909925c84d94592b69456b8af07fe25ec6d07" translate="yes" xml:space="preserve">
          <source>InputElement.valueAsDate</source>
          <target state="translated">InputElement.valueAsDate</target>
        </trans-unit>
        <trans-unit id="08802e90bf05fe2f058568f5e7109df1c0608797" translate="yes" xml:space="preserve">
          <source>InputElement.valueAsNumber</source>
          <target state="translated">InputElement.valueAsNumber</target>
        </trans-unit>
        <trans-unit id="b1bd4d9a6829652c9e5fe59630e01c6f110ec1d3" translate="yes" xml:space="preserve">
          <source>InputElement.width</source>
          <target state="translated">InputElement.width</target>
        </trans-unit>
        <trans-unit id="1c06a6791b06b93c4764b5b7d27498d7194fe5e0" translate="yes" xml:space="preserve">
          <source>InputElement.willValidate</source>
          <target state="translated">InputElement.willValidate</target>
        </trans-unit>
        <trans-unit id="66f12bd3197859cc49d9ec462195ac9f680e6348" translate="yes" xml:space="preserve">
          <source>InputElementBase</source>
          <target state="translated">InputElementBase</target>
        </trans-unit>
        <trans-unit id="0464c2ecf1b9e1ad69af091804e0cb49b55f9b69" translate="yes" xml:space="preserve">
          <source>InputElementBase class</source>
          <target state="translated">InputElementBaseクラス</target>
        </trans-unit>
        <trans-unit id="a8a05be9b82edbe20c4422843849278e72931bf2" translate="yes" xml:space="preserve">
          <source>InputElementBase constructor</source>
          <target state="translated">入力要素ベースのコンストラクタ</target>
        </trans-unit>
        <trans-unit id="29a2c9bd42a2763e1c0f60a5115f28e58df62a9d" translate="yes" xml:space="preserve">
          <source>InputElementBase(</source>
          <target state="translated">InputElementBase(</target>
        </trans-unit>
        <trans-unit id="6311f24ca3c7e79bbbd2c264697c18470e50f3ce" translate="yes" xml:space="preserve">
          <source>InputElementBase.InputElementBase</source>
          <target state="translated">InputElementBase.InputElementBase</target>
        </trans-unit>
        <trans-unit id="c4749486d1295cf331da795af59b19221e89b370" translate="yes" xml:space="preserve">
          <source>InputElementBase.autofocus</source>
          <target state="translated">InputElementBase.autofocus</target>
        </trans-unit>
        <trans-unit id="50939854a17d6c5641ab3d80ca33fef14f005a17" translate="yes" xml:space="preserve">
          <source>InputElementBase.checkValidity</source>
          <target state="translated">InputElementBase.checkValidity</target>
        </trans-unit>
        <trans-unit id="5648980a84591dec6ef8a419978f97d88b4f101c" translate="yes" xml:space="preserve">
          <source>InputElementBase.disabled</source>
          <target state="translated">InputElementBase.disabled</target>
        </trans-unit>
        <trans-unit id="60874799891e4e472137de43873f72a6d506be52" translate="yes" xml:space="preserve">
          <source>InputElementBase.incremental</source>
          <target state="translated">InputElementBase.incremental</target>
        </trans-unit>
        <trans-unit id="d6714663ea3e7c1080fb9ca96454a5dfc0d690d8" translate="yes" xml:space="preserve">
          <source>InputElementBase.indeterminate</source>
          <target state="translated">InputElementBase.indeterminate</target>
        </trans-unit>
        <trans-unit id="ad731d29b9d65df24ffdf98f7ff719ef15b555b2" translate="yes" xml:space="preserve">
          <source>InputElementBase.labels</source>
          <target state="translated">InputElementBase.labels</target>
        </trans-unit>
        <trans-unit id="03c1492a1949215f4fe82541e1a50887781e8772" translate="yes" xml:space="preserve">
          <source>InputElementBase.name</source>
          <target state="translated">InputElementBase.name</target>
        </trans-unit>
        <trans-unit id="95c7e1a7eb3b9f32a194bc99543805703aeea064" translate="yes" xml:space="preserve">
          <source>InputElementBase.setCustomValidity</source>
          <target state="translated">InputElementBase.setCustomValidity</target>
        </trans-unit>
        <trans-unit id="650ae288726291f3c289f61b920393e0ea66e041" translate="yes" xml:space="preserve">
          <source>InputElementBase.validationMessage</source>
          <target state="translated">InputElementBase.validationMessage</target>
        </trans-unit>
        <trans-unit id="53e6a6a8b4201744c461e2b0e07150f267b48215" translate="yes" xml:space="preserve">
          <source>InputElementBase.validity</source>
          <target state="translated">InputElementBase.validity</target>
        </trans-unit>
        <trans-unit id="d3b877f3f0eecff132798a823d17e78221f368f8" translate="yes" xml:space="preserve">
          <source>InputElementBase.value</source>
          <target state="translated">InputElementBase.value</target>
        </trans-unit>
        <trans-unit id="da6377b29c66eb100658ad38e5ec3ab35c7b73da" translate="yes" xml:space="preserve">
          <source>InputElementBase.willValidate</source>
          <target state="translated">InputElementBase.willValidate</target>
        </trans-unit>
        <trans-unit id="fbe8e9eb6838714b8edded8779f16d7d75917ef3" translate="yes" xml:space="preserve">
          <source>Insert an element after this element in this element's linked list.</source>
          <target state="translated">この要素のリンク先リストに、この要素の後に要素を挿入します。</target>
        </trans-unit>
        <trans-unit id="ba739f3cf8a284039c755dfe5cc1a52042d05528" translate="yes" xml:space="preserve">
          <source>Insert an element after this element in this element's linked list. &lt;a href=&quot;linkedlistentry/insertafter&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">この要素のリンクリストで、この要素の後に要素を挿入します。&lt;a href=&quot;linkedlistentry/insertafter&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="795293ab00b9ec13597cd462152c31263d5fdfdc" translate="yes" xml:space="preserve">
          <source>Insert an element before this element in this element's linked list.</source>
          <target state="translated">この要素のリンク先リストに、この要素の前に要素を挿入します。</target>
        </trans-unit>
        <trans-unit id="3c890e76f128521251588dfdea954b4caf99b82b" translate="yes" xml:space="preserve">
          <source>Insert an element before this element in this element's linked list. &lt;a href=&quot;linkedlistentry/insertbefore&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">この要素のリンクリストで、この要素の前に要素を挿入します。&lt;a href=&quot;linkedlistentry/insertbefore&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="289d632eb2ff4143f8956685cf2cdfeb3034bf11" translate="yes" xml:space="preserve">
          <source>Inserts &lt;code&gt;element&lt;/code&gt; into the DOM at the specified location.</source>
          <target state="translated">DOMの指定された場所に &lt;code&gt;element&lt;/code&gt; を挿入します。</target>
        </trans-unit>
        <trans-unit id="c1f0dc093ef0100e069820dd06797519e1a06f90" translate="yes" xml:space="preserve">
          <source>Inserts &lt;code&gt;element&lt;/code&gt; into the DOM at the specified location. &lt;a href=&quot;element/insertadjacentelement&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">DOMの指定された場所に &lt;code&gt;element&lt;/code&gt; を挿入します。&lt;a href=&quot;element/insertadjacentelement&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ae3f5288c3b6e045e3e259dbf78d901676ab0902" translate="yes" xml:space="preserve">
          <source>Inserts &lt;code&gt;element&lt;/code&gt; into the DOM at the specified location. &lt;a href=&quot;svgelement/insertadjacentelement&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">DOMの指定された場所に &lt;code&gt;element&lt;/code&gt; を挿入します。&lt;a href=&quot;svgelement/insertadjacentelement&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f05bf0e3b385aa1e8b805f722e58e6039e364935" translate="yes" xml:space="preserve">
          <source>Inserts all objects of &lt;code&gt;iterable&lt;/code&gt; at position &lt;code&gt;index&lt;/code&gt; in this list.</source>
          <target state="translated">このリストの位置 &lt;code&gt;index&lt;/code&gt; に &lt;code&gt;iterable&lt;/code&gt; オブジェクトをすべて挿入します。</target>
        </trans-unit>
        <trans-unit id="abca8decfbbbe88e4e19c1e8ef3da7140f00e644" translate="yes" xml:space="preserve">
          <source>Inserts all objects of &lt;code&gt;iterable&lt;/code&gt; at position &lt;code&gt;index&lt;/code&gt; in this list. &lt;a href=&quot;../dart-collection/listmixin/insertall&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このリストの位置 &lt;code&gt;index&lt;/code&gt; に &lt;code&gt;iterable&lt;/code&gt; オブジェクトをすべて挿入します。&lt;a href=&quot;../dart-collection/listmixin/insertall&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="12663297aea033c52ebebd48187519194efce66f" translate="yes" xml:space="preserve">
          <source>Inserts all objects of &lt;code&gt;iterable&lt;/code&gt; at position &lt;code&gt;index&lt;/code&gt; in this list. &lt;a href=&quot;../dart-core/list/insertall&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このリストの位置 &lt;code&gt;index&lt;/code&gt; に &lt;code&gt;iterable&lt;/code&gt; オブジェクトをすべて挿入します。&lt;a href=&quot;../dart-core/list/insertall&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="26dc83fbe210cb35392519609a640f0e915090d8" translate="yes" xml:space="preserve">
          <source>Inserts all objects of &lt;code&gt;iterable&lt;/code&gt; at position &lt;code&gt;index&lt;/code&gt; in this list. &lt;a href=&quot;../dart-html/immutablelistmixin/insertall&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このリストの位置 &lt;code&gt;index&lt;/code&gt; に &lt;code&gt;iterable&lt;/code&gt; オブジェクトをすべて挿入します。&lt;a href=&quot;../dart-html/immutablelistmixin/insertall&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1d1ad24faaf78b78ea9ea447803e1d3227a9d95c" translate="yes" xml:space="preserve">
          <source>Inserts all objects of &lt;code&gt;iterable&lt;/code&gt; at position &lt;code&gt;index&lt;/code&gt; in this list. &lt;a href=&quot;immutablelistmixin/insertall&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このリストの位置 &lt;code&gt;index&lt;/code&gt; に &lt;code&gt;iterable&lt;/code&gt; オブジェクトをすべて挿入します。&lt;a href=&quot;immutablelistmixin/insertall&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3509db529a9605874daee86e58c43b9d602e13b2" translate="yes" xml:space="preserve">
          <source>Inserts all objects of &lt;code&gt;iterable&lt;/code&gt; at position &lt;code&gt;index&lt;/code&gt; in this list. &lt;a href=&quot;list/insertall&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このリストの位置 &lt;code&gt;index&lt;/code&gt; に &lt;code&gt;iterable&lt;/code&gt; オブジェクトをすべて挿入します。&lt;a href=&quot;list/insertall&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1801699afe24ae8bce012ccf9179102218d562e8" translate="yes" xml:space="preserve">
          <source>Inserts all objects of &lt;code&gt;iterable&lt;/code&gt; at position &lt;code&gt;index&lt;/code&gt; in this list. &lt;a href=&quot;listmixin/insertall&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このリストの位置 &lt;code&gt;index&lt;/code&gt; に &lt;code&gt;iterable&lt;/code&gt; オブジェクトをすべて挿入します。&lt;a href=&quot;listmixin/insertall&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a89c621c89fc542797fe963109095d5ef6fb67e" translate="yes" xml:space="preserve">
          <source>Inserts all of the nodes into this node directly before refChild.</source>
          <target state="translated">すべてのノードを refChild の直前にこのノードに挿入します。</target>
        </trans-unit>
        <trans-unit id="67bfa28706cb7a9a3b1b19aa3216c4dfbe1476c4" translate="yes" xml:space="preserve">
          <source>Inserts all of the nodes into this node directly before refChild. &lt;a href=&quot;../dart-html/node/insertallbefore&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">すべてのノードをこのノードのrefChildの直前に挿入します。&lt;a href=&quot;../dart-html/node/insertallbefore&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="808585d548f6b8dd568f2507ae134eeabb2a5446" translate="yes" xml:space="preserve">
          <source>Inserts all of the nodes into this node directly before refChild. &lt;a href=&quot;../dart-html/node/insertbefore&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">すべてのノードをこのノードのrefChildの直前に挿入します。&lt;a href=&quot;../dart-html/node/insertbefore&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a70717e941ea6f65234f0f5cc10285b0cf973664" translate="yes" xml:space="preserve">
          <source>Inserts all of the nodes into this node directly before refChild. &lt;a href=&quot;node/insertallbefore&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">すべてのノードをこのノードのrefChildの直前に挿入します。&lt;a href=&quot;node/insertallbefore&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="53e6cd9c948623d91239d2c8b63a847d780557a7" translate="yes" xml:space="preserve">
          <source>Inserts all of the nodes into this node directly before refChild. &lt;a href=&quot;node/insertbefore&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">すべてのノードをこのノードのrefChildの直前に挿入します。&lt;a href=&quot;node/insertbefore&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a87c1c505010aa25b05db8213bc584c6d8cefdda" translate="yes" xml:space="preserve">
          <source>Inserts text into the DOM at the specified location.</source>
          <target state="translated">指定した場所にテキストを DOM に挿入します。</target>
        </trans-unit>
        <trans-unit id="0b98267a302a3af6c473af6da70404650308ac59" translate="yes" xml:space="preserve">
          <source>Inserts text into the DOM at the specified location. &lt;a href=&quot;element/insertadjacenttext&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">DOMの指定された場所にテキストを挿入します。&lt;a href=&quot;element/insertadjacenttext&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ca27a8a5b59eabbe5f5c523871afb6caad6fb9ab" translate="yes" xml:space="preserve">
          <source>Inserts text into the DOM at the specified location. &lt;a href=&quot;svgelement/insertadjacenttext&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">DOMの指定された場所にテキストを挿入します。&lt;a href=&quot;svgelement/insertadjacenttext&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e1a26daddea9079c7a9962bdbd475bbca0747521" translate="yes" xml:space="preserve">
          <source>Inserts the object at position &lt;code&gt;index&lt;/code&gt; in this list.</source>
          <target state="translated">このリストの &lt;code&gt;index&lt;/code&gt; 位置にオブジェクトを挿入します。</target>
        </trans-unit>
        <trans-unit id="d4a466fcdb7d0f487717e82b60cccb2f6ceed648" translate="yes" xml:space="preserve">
          <source>Inserts the object at position &lt;code&gt;index&lt;/code&gt; in this list. &lt;a href=&quot;../dart-collection/listmixin/insert&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このリストの &lt;code&gt;index&lt;/code&gt; 位置にオブジェクトを挿入します。&lt;a href=&quot;../dart-collection/listmixin/insert&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ab171140f7ede7232e5feed080dd635d5f62a890" translate="yes" xml:space="preserve">
          <source>Inserts the object at position &lt;code&gt;index&lt;/code&gt; in this list. &lt;a href=&quot;../dart-core/list/insert&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このリストの &lt;code&gt;index&lt;/code&gt; 位置にオブジェクトを挿入します。&lt;a href=&quot;../dart-core/list/insert&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="367f9b3176019ea609cf3db51bee235b3b4280f9" translate="yes" xml:space="preserve">
          <source>Inserts the object at position &lt;code&gt;index&lt;/code&gt; in this list. &lt;a href=&quot;../dart-html/immutablelistmixin/insert&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このリストの &lt;code&gt;index&lt;/code&gt; 位置にオブジェクトを挿入します。&lt;a href=&quot;../dart-html/immutablelistmixin/insert&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e36b833a9932056af853c6170b2dff58d9ad50c2" translate="yes" xml:space="preserve">
          <source>Inserts the object at position &lt;code&gt;index&lt;/code&gt; in this list. &lt;a href=&quot;immutablelistmixin/insert&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このリストの &lt;code&gt;index&lt;/code&gt; 位置にオブジェクトを挿入します。&lt;a href=&quot;immutablelistmixin/insert&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5df3673e9d9029a3d0c85a1e79be6aff4ad56894" translate="yes" xml:space="preserve">
          <source>Inserts the object at position &lt;code&gt;index&lt;/code&gt; in this list. &lt;a href=&quot;jsarray/insert&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このリストの &lt;code&gt;index&lt;/code&gt; 位置にオブジェクトを挿入します。&lt;a href=&quot;jsarray/insert&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a30d1261badb3e6414946717d03c0e0edca2093b" translate="yes" xml:space="preserve">
          <source>Inserts the object at position &lt;code&gt;index&lt;/code&gt; in this list. &lt;a href=&quot;list/insert&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このリストの &lt;code&gt;index&lt;/code&gt; 位置にオブジェクトを挿入します。&lt;a href=&quot;list/insert&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="682354212537a3c20bd51736a54cfb65c1f8b021" translate="yes" xml:space="preserve">
          <source>Inserts the object at position &lt;code&gt;index&lt;/code&gt; in this list. &lt;a href=&quot;listmixin/insert&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">このリストの &lt;code&gt;index&lt;/code&gt; 位置にオブジェクトを挿入します。&lt;a href=&quot;listmixin/insert&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ba9acc3abc056e12e0be26f1eea479d335744427" translate="yes" xml:space="preserve">
          <source>InstallEvent</source>
          <target state="translated">InstallEvent</target>
        </trans-unit>
        <trans-unit id="b44efaeb95183ba5358edd1580b1de92080b419e" translate="yes" xml:space="preserve">
          <source>InstallEvent class</source>
          <target state="translated">InstallEvent クラス</target>
        </trans-unit>
        <trans-unit id="95dac96741345625f2d71ed884a11c289ceda4bf" translate="yes" xml:space="preserve">
          <source>InstallEvent constructor</source>
          <target state="translated">InstallEvent コンストラクタ</target>
        </trans-unit>
        <trans-unit id="96e030badf54fab2720a54845e85022fd8f36c27" translate="yes" xml:space="preserve">
          <source>InstallEvent(</source>
          <target state="translated">InstallEvent(</target>
        </trans-unit>
        <trans-unit id="e97ea306b2cc4fcbaf07187054c1d39095f884e7" translate="yes" xml:space="preserve">
          <source>InstallEvent.InstallEvent</source>
          <target state="translated">InstallEvent.InstallEvent</target>
        </trans-unit>
        <trans-unit id="bacdea5abecab089a1aeee8621225fdc291a9a04" translate="yes" xml:space="preserve">
          <source>InstallEvent.registerForeignFetch</source>
          <target state="translated">InstallEvent.registerForeignFetch</target>
        </trans-unit>
        <trans-unit id="4237dcd67b56c159efba9df0197302c340d1f69b" translate="yes" xml:space="preserve">
          <source>InstanceMirror</source>
          <target state="translated">InstanceMirror</target>
        </trans-unit>
        <trans-unit id="d466cb96bd1aae1aacad8909f93caf6c61853133" translate="yes" xml:space="preserve">
          <source>InstanceMirror class</source>
          <target state="translated">InstanceMirror クラス</target>
        </trans-unit>
        <trans-unit id="6a7e8c8898d82e1fcd4144b2f1ecb1a189e594ee" translate="yes" xml:space="preserve">
          <source>InstanceMirror constructor</source>
          <target state="translated">InstanceMirror コンストラクタ</target>
        </trans-unit>
        <trans-unit id="d038116a1aee34ded17a69d3b7d52269a64fd0fc" translate="yes" xml:space="preserve">
          <source>InstanceMirror(</source>
          <target state="translated">InstanceMirror(</target>
        </trans-unit>
        <trans-unit id="ba1aa0e44b57749a5b89cc7ba7cfa59b071a7cb3" translate="yes" xml:space="preserve">
          <source>InstanceMirror.InstanceMirror</source>
          <target state="translated">InstanceMirror.InstanceMirror</target>
        </trans-unit>
        <trans-unit id="02fac8d96e67dae1a442c235d024b08a080ae3e5" translate="yes" xml:space="preserve">
          <source>InstanceMirror.hasReflectee</source>
          <target state="translated">InstanceMirror.hasReflectee</target>
        </trans-unit>
        <trans-unit id="5a43ad5adfd282d535aaa0b2730d016122925fdc" translate="yes" xml:space="preserve">
          <source>InstanceMirror.operator ==</source>
          <target state="translated">InstanceMirror.operator ==InstanceMirror.operator</target>
        </trans-unit>
        <trans-unit id="609da887fb73f1024aa96394a53bae689938a356" translate="yes" xml:space="preserve">
          <source>InstanceMirror.reflectee</source>
          <target state="translated">InstanceMirror.reflectee</target>
        </trans-unit>
        <trans-unit id="8b1cb41bf0b19f8c33dcde0cd1e8b400765db976" translate="yes" xml:space="preserve">
          <source>InstanceMirror.type</source>
          <target state="translated">InstanceMirror.type</target>
        </trans-unit>
        <trans-unit id="2634445fd0502516c8591d1858ddff4e63e919f1" translate="yes" xml:space="preserve">
          <source>Instantiates a new &lt;a href=&quot;../asciicodec-class&quot;&gt;AsciiCodec&lt;/a&gt;.</source>
          <target state="translated">新しい&lt;a href=&quot;../asciicodec-class&quot;&gt;AsciiCodecを&lt;/a&gt;インスタンス化します。</target>
        </trans-unit>
        <trans-unit id="c81690b8d27579578baf0abec920c96db738e3e7" translate="yes" xml:space="preserve">
          <source>Instantiates a new &lt;a href=&quot;../latin1codec-class&quot;&gt;Latin1Codec&lt;/a&gt;.</source>
          <target state="translated">新しい&lt;a href=&quot;../latin1codec-class&quot;&gt;Latin1Codecを&lt;/a&gt;インスタンス化します。</target>
        </trans-unit>
        <trans-unit id="959a3a9d8322134f977151abff4fc60d9df4670d" translate="yes" xml:space="preserve">
          <source>Instantiates a new &lt;a href=&quot;../latin1decoder-class&quot;&gt;Latin1Decoder&lt;/a&gt;.</source>
          <target state="translated">新しい&lt;a href=&quot;../latin1decoder-class&quot;&gt;Latin1Decoderを&lt;/a&gt;インスタンス化します。</target>
        </trans-unit>
        <trans-unit id="27799e3eab851a61a5c5fc05d60be8bf3a7393ce" translate="yes" xml:space="preserve">
          <source>Instantiates a new &lt;a href=&quot;../utf8codec-class&quot;&gt;Utf8Codec&lt;/a&gt;.</source>
          <target state="translated">新しい&lt;a href=&quot;../utf8codec-class&quot;&gt;Utf8Codecを&lt;/a&gt;インスタンス化します。</target>
        </trans-unit>
        <trans-unit id="1af96ad2d7c04551c5dc8315688e52fcb3ef825d" translate="yes" xml:space="preserve">
          <source>Instantiates a new &lt;a href=&quot;../utf8decoder-class&quot;&gt;Utf8Decoder&lt;/a&gt;.</source>
          <target state="translated">新しい&lt;a href=&quot;../utf8decoder-class&quot;&gt;Utf8Decoderを&lt;/a&gt;インスタンス化します。</target>
        </trans-unit>
        <trans-unit id="36cc3d587d58dd1efc24bfa00b320939be23251b" translate="yes" xml:space="preserve">
          <source>Instantiates a new &lt;a href=&quot;asciicodec-class&quot;&gt;AsciiCodec&lt;/a&gt;. &lt;a href=&quot;asciicodec/asciicodec&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">新しい&lt;a href=&quot;asciicodec-class&quot;&gt;AsciiCodecを&lt;/a&gt;インスタンス化します。&lt;a href=&quot;asciicodec/asciicodec&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9a3baddc30671b02ff77c2dc513afc4c5f83ee88" translate="yes" xml:space="preserve">
          <source>Instantiates a new &lt;a href=&quot;latin1codec-class&quot;&gt;Latin1Codec&lt;/a&gt;. &lt;a href=&quot;latin1codec/latin1codec&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">新しい&lt;a href=&quot;latin1codec-class&quot;&gt;Latin1Codecを&lt;/a&gt;インスタンス化します。&lt;a href=&quot;latin1codec/latin1codec&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="904d10e3709c379def67caa873147f865c53846b" translate="yes" xml:space="preserve">
          <source>Instantiates a new &lt;a href=&quot;latin1decoder-class&quot;&gt;Latin1Decoder&lt;/a&gt;. &lt;a href=&quot;latin1decoder/latin1decoder&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">新しい&lt;a href=&quot;latin1decoder-class&quot;&gt;Latin1Decoderを&lt;/a&gt;インスタンス化します。&lt;a href=&quot;latin1decoder/latin1decoder&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eb863e056e94d45de6a40cc386cdcf477c4aef75" translate="yes" xml:space="preserve">
          <source>Instantiates a new &lt;a href=&quot;utf8codec-class&quot;&gt;Utf8Codec&lt;/a&gt;. &lt;a href=&quot;utf8codec/utf8codec&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">新しい&lt;a href=&quot;utf8codec-class&quot;&gt;Utf8Codecを&lt;/a&gt;インスタンス化します。&lt;a href=&quot;utf8codec/utf8codec&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e87ed4727143aeb070e0a7b7573ea0d5844fc432" translate="yes" xml:space="preserve">
          <source>Instantiates a new &lt;a href=&quot;utf8decoder-class&quot;&gt;Utf8Decoder&lt;/a&gt;. &lt;a href=&quot;utf8decoder/utf8decoder&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">新しい&lt;a href=&quot;utf8decoder-class&quot;&gt;Utf8Decoderを&lt;/a&gt;インスタンス化します。&lt;a href=&quot;utf8decoder/utf8decoder&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d5bbcacfacda8df000da8fba49108f309746fdb" translate="yes" xml:space="preserve">
          <source>Instead of adding the event to the stream in a later microtask, causing extra latency, the event is instead fired immediately by the synchronous stream controller, as if the stream event was the current event or microtask.</source>
          <target state="translated">イベントを後のマイクロタスクでストリームに追加して余分なレイテンシを発生させる代わりに、ストリームイベントが現在のイベントまたはマイクロタスクであるかのように、イベントは同期ストリームコントローラによって即座に実行されます。</target>
        </trans-unit>
        <trans-unit id="8620b5fa9bd0a1d7fa86af5f5d9182ace61a82b9" translate="yes" xml:space="preserve">
          <source>Instead of limiting the interface to one non-chunked String it accepts partial strings or can be transformed into a byte sink that accepts UTF-8 code units.</source>
          <target state="translated">インターフェイスを 1 つの非チャンク文字列に制限する代わりに、部分的な文字列を受け入れるか、または UTF-8 コード単位を受け入れるバイトシンクに変換することができます。</target>
        </trans-unit>
        <trans-unit id="8f724e881940103db62d147915ed34d1fec849b0" translate="yes" xml:space="preserve">
          <source>Instead of limiting the interface to one non-chunked list of bytes it accepts its input in chunks (themselves being lists of bytes).</source>
          <target state="translated">インターフェイスをチャンクされていないバイトのリストに制限する代わりに、チャンク (それ自体がバイトのリスト)で入力を受け付けます。</target>
        </trans-unit>
        <trans-unit id="8da54aedcaeffae347d201c19b04407f5f60ebea" translate="yes" xml:space="preserve">
          <source>Instead of throwing and immediately catching the &lt;a href=&quot;../formatexception-class&quot;&gt;FormatException&lt;/a&gt;, instead use &lt;a href=&quot;tryparse&quot;&gt;tryParse&lt;/a&gt; to handle a parsing error. Example:</source>
          <target state="translated">&lt;a href=&quot;../formatexception-class&quot;&gt;FormatException&lt;/a&gt;をスローしてすぐにキャッチする代わりに、&lt;a href=&quot;tryparse&quot;&gt;tryParse&lt;/a&gt;を使用して解析エラーを処理します。例：</target>
        </trans-unit>
        <trans-unit id="40bdc4de9fec2a9dcc17e70c1c74d1b225c19b45" translate="yes" xml:space="preserve">
          <source>Int16List</source>
          <target state="translated">Int16List</target>
        </trans-unit>
        <trans-unit id="6f4a53bb09e38dca07f951ed178dce0f1119fa0b" translate="yes" xml:space="preserve">
          <source>Int16List class</source>
          <target state="translated">Int16List クラス</target>
        </trans-unit>
        <trans-unit id="c26c2d3a35747e5a7e61f78179b67136972ee2e1" translate="yes" xml:space="preserve">
          <source>Int16List constructor</source>
          <target state="translated">Int16List コンストラクタ</target>
        </trans-unit>
        <trans-unit id="caa568b77e6b470e2d2a30a4be4fe4c71cdff25b" translate="yes" xml:space="preserve">
          <source>Int16List(</source>
          <target state="translated">Int16List(</target>
        </trans-unit>
        <trans-unit id="46be2b743ed8c985d438366e9a095c1c834c1969" translate="yes" xml:space="preserve">
          <source>Int16List.Int16List</source>
          <target state="translated">Int16List.Int16List</target>
        </trans-unit>
        <trans-unit id="aa246ed90a2bedec7ed126c8a4c86e1056a6bcd7" translate="yes" xml:space="preserve">
          <source>Int16List.Int16List.fromList</source>
          <target state="translated">Int16List.Int16List.fromList</target>
        </trans-unit>
        <trans-unit id="69442e451aafbb499a8af9e83e7408cae742a67a" translate="yes" xml:space="preserve">
          <source>Int16List.Int16List.view</source>
          <target state="translated">Int16List.Int16List.view</target>
        </trans-unit>
        <trans-unit id="eeb73ef2c636d29397fcc72edcac3df74b2d4436" translate="yes" xml:space="preserve">
          <source>Int16List.bytesPerElement</source>
          <target state="translated">Int16List.bytesPerElement</target>
        </trans-unit>
        <trans-unit id="ff921a9f8c8b8fe3e12a62e77cf2e5fd86d354f6" translate="yes" xml:space="preserve">
          <source>Int16List.fromList constructor</source>
          <target state="translated">Int16List.fromList のコンストラクタ</target>
        </trans-unit>
        <trans-unit id="cdf6ec8c6a11b98d88abfc5a0e8fe947b3a04845" translate="yes" xml:space="preserve">
          <source>Int16List.fromList(</source>
          <target state="translated">Int16List.fromList(</target>
        </trans-unit>
        <trans-unit id="2a929811ed08607adc54d5439b2ff8921fc05a4b" translate="yes" xml:space="preserve">
          <source>Int16List.operator +</source>
          <target state="translated">Int16List.operator++演算子</target>
        </trans-unit>
        <trans-unit id="1c5461cc2dd23a8715cf005e78abbfa74010dbfb" translate="yes" xml:space="preserve">
          <source>Int16List.sublist</source>
          <target state="translated">Int16List.sublist</target>
        </trans-unit>
        <trans-unit id="bfd427b5879a22057ecf42458ecbe566a55c067c" translate="yes" xml:space="preserve">
          <source>Int16List.view constructor</source>
          <target state="translated">Int16List.view コンストラクタ</target>
        </trans-unit>
        <trans-unit id="72818228404fca33e525837a779507afbbcf13f8" translate="yes" xml:space="preserve">
          <source>Int16List.view(</source>
          <target state="translated">Int16List.view(</target>
        </trans-unit>
        <trans-unit id="fb6c9081f3b694f3587886a9c5b5c80469be15a7" translate="yes" xml:space="preserve">
          <source>Int32List</source>
          <target state="translated">Int32List</target>
        </trans-unit>
        <trans-unit id="cb7749dc4d82067d517ecbc49673a5abd206e728" translate="yes" xml:space="preserve">
          <source>Int32List class</source>
          <target state="translated">Int32List クラス</target>
        </trans-unit>
        <trans-unit id="d0c16c6ecf55ddbad9b510928a6e2839c4a9fe22" translate="yes" xml:space="preserve">
          <source>Int32List constructor</source>
          <target state="translated">Int32List コンストラクタ</target>
        </trans-unit>
        <trans-unit id="dea78a61b212fe35a7c6e21ec2d69a379f11a1af" translate="yes" xml:space="preserve">
          <source>Int32List(</source>
          <target state="translated">Int32List(</target>
        </trans-unit>
        <trans-unit id="5aa0223abb4116d8ff668455248d73647c0aed07" translate="yes" xml:space="preserve">
          <source>Int32List.Int32List</source>
          <target state="translated">Int32List.Int32List</target>
        </trans-unit>
        <trans-unit id="1f83d457005374c44cde6ed59c21aaddad2617f7" translate="yes" xml:space="preserve">
          <source>Int32List.Int32List.fromList</source>
          <target state="translated">Int32List.Int32List.fromList</target>
        </trans-unit>
        <trans-unit id="dbecfdca3df27e5d6c0fd3146eaa9f133405788c" translate="yes" xml:space="preserve">
          <source>Int32List.Int32List.view</source>
          <target state="translated">Int32List.Int32List.view</target>
        </trans-unit>
        <trans-unit id="2aeae2470f5a9326989383b338dae990fb38c297" translate="yes" xml:space="preserve">
          <source>Int32List.bytesPerElement</source>
          <target state="translated">Int32List.bytesPerElement</target>
        </trans-unit>
        <trans-unit id="55cc58e7868c4b43c23504f8aa4f1a8ce83acf0a" translate="yes" xml:space="preserve">
          <source>Int32List.fromList constructor</source>
          <target state="translated">Int32List.fromList のコンストラクタ</target>
        </trans-unit>
        <trans-unit id="2591ac5eef7ff5d47f189bcbdd9674770c8b7200" translate="yes" xml:space="preserve">
          <source>Int32List.fromList(</source>
          <target state="translated">Int32List.fromList(</target>
        </trans-unit>
        <trans-unit id="406355f2ebacaccb52937e665e18c24c683f07f6" translate="yes" xml:space="preserve">
          <source>Int32List.operator +</source>
          <target state="translated">Int32List.operator++演算子</target>
        </trans-unit>
        <trans-unit id="c8ebee2d0f03ca35ff41388a5a9fc6495d3fb4b0" translate="yes" xml:space="preserve">
          <source>Int32List.sublist</source>
          <target state="translated">Int32List.sublist</target>
        </trans-unit>
        <trans-unit id="9bdfb44a1f18597b6a4f5f05e9c159c692edf151" translate="yes" xml:space="preserve">
          <source>Int32List.view constructor</source>
          <target state="translated">Int32List.view コンストラクタ</target>
        </trans-unit>
        <trans-unit id="5995e05ab53a9f59698ff4b144c408731f349d53" translate="yes" xml:space="preserve">
          <source>Int32List.view(</source>
          <target state="translated">Int32List.view(</target>
        </trans-unit>
        <trans-unit id="ed84eedfc512d77644b5e38cf352835311c6081f" translate="yes" xml:space="preserve">
          <source>Int32x4</source>
          <target state="translated">Int32x4</target>
        </trans-unit>
        <trans-unit id="689a3cf6bb3c9d3464d871975c940e284ee0df89" translate="yes" xml:space="preserve">
          <source>Int32x4 and operations.</source>
          <target state="translated">Int32x4と操作。</target>
        </trans-unit>
        <trans-unit id="f6d438c90a769f0f37bd7d5b6835736b3af9f0f2" translate="yes" xml:space="preserve">
          <source>Int32x4 and operations. &lt;a href=&quot;int32x4-class&quot;&gt;[...]&lt;/a&gt;</source>
          <target state="translated">Int32x4と操作。&lt;a href=&quot;int32x4-class&quot;&gt;[...]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="91d00a015889641e10348217a71b33c697b6bd86" translate="yes" xml:space="preserve">
          <source>Int32x4 class</source>
          <target state="translated">Int32x4 クラス</target>
        </trans-unit>
        <trans-unit id="c9e2ae7dfd45d0ecc22474cfb8caa0208825a5cc" translate="yes" xml:space="preserve">
          <source>Int32x4 constructor</source>
          <target state="translated">Int32x4 コンストラクタ</target>
        </trans-unit>
        <trans-unit id="909bc542e1abbaa26a8a4d53ec1561f3dc6aee07" translate="yes" xml:space="preserve">
          <source>Int32x4 stores 4 32-bit bit-masks in &quot;lanes&quot;. The lanes are &quot;x&quot;, &quot;y&quot;, &quot;z&quot;, and &quot;w&quot; respectively.</source>
          <target state="translated">Int32x4は、4つの32ビットマスクを &quot;レーン &quot;に格納します。レーンはそれぞれ &quot;x&quot;,&quot;y&quot;,&quot;z&quot;,&quot;w &quot;である。</target>
        </trans-unit>
        <trans-unit id="61abd7c349adefae2c419fa32d006856e7764253" translate="yes" xml:space="preserve">
          <source>Int32x4(</source>
          <target state="translated">Int32x4(</target>
        </trans-unit>
        <trans-unit id="54b1f2486e7c57c824e7138ab2171f7e1b05b4e9" translate="yes" xml:space="preserve">
          <source>Int32x4.Int32x4</source>
          <target state="translated">Int32x4.Int32x4</target>
        </trans-unit>
        <trans-unit id="a08ac91f13601123b9f0b62d048b4dc7f5f2f9d3" translate="yes" xml:space="preserve">
          <source>Int32x4.Int32x4.bool</source>
          <target state="translated">Int32x4.Int32x4.bool</target>
        </trans-unit>
        <trans-unit id="c119ee9911268034fafd6ea9d24ee1edb78cf36e" translate="yes" xml:space="preserve">
          <source>Int32x4.Int32x4.fromFloat32x4Bits</source>
          <target state="translated">Int32x4.Int32x4.fromFloat32x4Bits</target>
        </trans-unit>
        <trans-unit id="b894ddd6d931e1367e2b9dcafa2a7dafb9f1b420" translate="yes" xml:space="preserve">
          <source>Int32x4.bool constructor</source>
          <target state="translated">Int32x4.bool コンストラクタ</target>
        </trans-unit>
        <trans-unit id="6d92f57e44625302a66487b3da4dc343e384df5b" translate="yes" xml:space="preserve">
          <source>Int32x4.bool(</source>
          <target state="translated">Int32x4.bool(</target>
        </trans-unit>
        <trans-unit id="7f2dd6ac86f4fff6406b07bde5ba5baba8e249f7" translate="yes" xml:space="preserve">
          <source>Int32x4.flagW</source>
          <target state="translated">Int32x4.flagW</target>
        </trans-unit>
        <trans-unit id="80938510fa480df65ff41148185872b9ae81e1cf" translate="yes" xml:space="preserve">
          <source>Int32x4.flagX</source>
          <target state="translated">Int32x4.flagX</target>
        </trans-unit>
        <trans-unit id="91e8cd23a5e1e583417ceff3e940cb30e6abb258" translate="yes" xml:space="preserve">
          <source>Int32x4.flagY</source>
          <target state="translated">Int32x4.flagY</target>
        </trans-unit>
        <trans-unit id="f0c334fd6946f8e8787916a2ed4d71e89aa7ddf9" translate="yes" xml:space="preserve">
          <source>Int32x4.flagZ</source>
          <target state="translated">Int32x4.flagZ</target>
        </trans-unit>
        <trans-unit id="829ed358e0d62ae0b3a16b474e519e286e9dd701" translate="yes" xml:space="preserve">
          <source>Int32x4.fromFloat32x4Bits constructor</source>
          <target state="translated">Int32x4.fromFloat32x4Bits コンストラクタ</target>
        </trans-unit>
        <trans-unit id="6e324f950ea99871138698915c3e18239d9d0db1" translate="yes" xml:space="preserve">
          <source>Int32x4.fromFloat32x4Bits(</source>
          <target state="translated">Int32x4.fromFloat32x4Bits(</target>
        </trans-unit>
        <trans-unit id="00cdc7d0085f2845c0aaaef702ffb325d5ac4761" translate="yes" xml:space="preserve">
          <source>Int32x4.operator &amp;amp;</source>
          <target state="translated">Int32x4.operator＆</target>
        </trans-unit>
        <trans-unit id="90361eda54f3d3b9e9b7878486872befea7a6d6e" translate="yes" xml:space="preserve">
          <source>Int32x4.operator +</source>
          <target state="translated">Int32x4.演算子+演算子</target>
        </trans-unit>
        <trans-unit id="e2a9b08fc2095fb181878d8d3437f98b05b6c03a" translate="yes" xml:space="preserve">
          <source>Int32x4.operator -</source>
          <target state="translated">Int32x4.operator-演算子</target>
        </trans-unit>
        <trans-unit id="756a5dc3c63287bcaee9e38413193de9d946ff10" translate="yes" xml:space="preserve">
          <source>Int32x4.operator ^</source>
          <target state="translated">Int32x4.operator ^</target>
        </trans-unit>
        <trans-unit id="059569bc8ee39746a5f85a4d30301c7fe9b20a4d" translate="yes" xml:space="preserve">
          <source>Int32x4.operator |</source>
          <target state="translated">Int32x4.演算子</target>
        </trans-unit>
        <trans-unit id="d2e4b6b96d355c63897f386d3034e279ec8db2f1" translate="yes" xml:space="preserve">
          <source>Int32x4.select</source>
          <target state="translated">Int32x4.select</target>
        </trans-unit>
        <trans-unit id="05482bda6ae8f7df0b914f6eb4577d0a2421cfdf" translate="yes" xml:space="preserve">
          <source>Int32x4.shuffle</source>
          <target state="translated">Int32x4.shuffle</target>
        </trans-unit>
        <trans-unit id="874436928bfc795936c539989f7f6340fb183ff9" translate="yes" xml:space="preserve">
          <source>Int32x4.shuffleMix</source>
          <target state="translated">Int32x4.shuffleMix</target>
        </trans-unit>
        <trans-unit id="b8886d61d116c2844a31244a03838502314057b8" translate="yes" xml:space="preserve">
          <source>Int32x4.signMask</source>
          <target state="translated">Int32x4.signMask</target>
        </trans-unit>
        <trans-unit id="6d6773ad58815d729414d218a852d05b20c8aa61" translate="yes" xml:space="preserve">
          <source>Int32x4.w</source>
          <target state="translated">Int32x4.w</target>
        </trans-unit>
        <trans-unit id="9e2e0c6a38adbdfb1de77cb0181d4de821965bd9" translate="yes" xml:space="preserve">
          <source>Int32x4.withFlagW</source>
          <target state="translated">Int32x4.withFlagW</target>
        </trans-unit>
        <trans-unit id="5a5339c1dc035f8e17e15454809d12bf6b0b2d89" translate="yes" xml:space="preserve">
          <source>Int32x4.withFlagX</source>
          <target state="translated">Int32x4.withFlagX</target>
        </trans-unit>
        <trans-unit id="2412d050877f5696acb4a2a9074e7c49c7ada245" translate="yes" xml:space="preserve">
          <source>Int32x4.withFlagY</source>
          <target state="translated">Int32x4.withFlagY</target>
        </trans-unit>
        <trans-unit id="a56767d7a9e75141056a7cf126f558effb0e4119" translate="yes" xml:space="preserve">
          <source>Int32x4.withFlagZ</source>
          <target state="translated">Int32x4.withFlagZ</target>
        </trans-unit>
        <trans-unit id="9a30ca7408c5f86c2fac8fa4d868454ec3993800" translate="yes" xml:space="preserve">
          <source>Int32x4.withW</source>
          <target state="translated">Int32x4.withW</target>
        </trans-unit>
        <trans-unit id="fe3d4d1c3c58e6f223ab68336f01a200330c2343" translate="yes" xml:space="preserve">
          <source>Int32x4.withX</source>
          <target state="translated">Int32x4.withX</target>
        </trans-unit>
        <trans-unit id="99f19ca9b189029fb83b5d081ecd844ce57ac454" translate="yes" xml:space="preserve">
          <source>Int32x4.withY</source>
          <target state="translated">Int32x4.withY</target>
        </trans-unit>
        <trans-unit id="eab3d568492a0537e4680a413b6fcbe6ec856baf" translate="yes" xml:space="preserve">
          <source>Int32x4.withZ</source>
          <target state="translated">Int32x4.withZ</target>
        </trans-unit>
        <trans-unit id="d42f17945a0d593492e38e16e05621b38ac49762" translate="yes" xml:space="preserve">
          <source>Int32x4.wwww</source>
          <target state="translated">Int32x4.wwww</target>
        </trans-unit>
        <trans-unit id="2875b9d0e995ce3f8378e7fbd932bb6547175cff" translate="yes" xml:space="preserve">
          <source>Int32x4.wwwx</source>
          <target state="translated">Int32x4.wwwx</target>
        </trans-unit>
        <trans-unit id="a35e292cb20f9372322b75304417e57959e414e8" translate="yes" xml:space="preserve">
          <source>Int32x4.wwwy</source>
          <target state="translated">Int32x4.wwwy</target>
        </trans-unit>
        <trans-unit id="bd9c5abdc1e43375a2c4edd9a130db646373be11" translate="yes" xml:space="preserve">
          <source>Int32x4.wwwz</source>
          <target state="translated">Int32x4.wwwz</target>
        </trans-unit>
        <trans-unit id="3c4ef4b0076281532e191490994fc177720d9611" translate="yes" xml:space="preserve">
          <source>Int32x4.wwxw</source>
          <target state="translated">Int32x4.wwxw</target>
        </trans-unit>
        <trans-unit id="b6bead664c71e62b37c21bd8ef2c3c3d1dd1cf30" translate="yes" xml:space="preserve">
          <source>Int32x4.wwxx</source>
          <target state="translated">Int32x4.wwxx</target>
        </trans-unit>
        <trans-unit id="5211cdc88e58cbe5571d8c2870caeed09a46c447" translate="yes" xml:space="preserve">
          <source>Int32x4.wwxy</source>
          <target state="translated">Int32x4.wwxy</target>
        </trans-unit>
        <trans-unit id="08f1895c603f98dc232758cdd3a5bbc2eeeab7c0" translate="yes" xml:space="preserve">
          <source>Int32x4.wwxz</source>
          <target state="translated">Int32x4.wwxz</target>
        </trans-unit>
        <trans-unit id="393b705efdeabf1a33cd32e9b864c9b8caf83d5e" translate="yes" xml:space="preserve">
          <source>Int32x4.wwyw</source>
          <target state="translated">Int32x4.wwyw</target>
        </trans-unit>
        <trans-unit id="cd928c4534b1e766b46749d80702d9d1fc727a25" translate="yes" xml:space="preserve">
          <source>Int32x4.wwyx</source>
          <target state="translated">Int32x4.wwyx</target>
        </trans-unit>
        <trans-unit id="b696989a33ae94c1512b832906dbc36a631bc93e" translate="yes" xml:space="preserve">
          <source>Int32x4.wwyy</source>
          <target state="translated">Int32x4.wwyy</target>
        </trans-unit>
        <trans-unit id="5fd850a14b5dc7bc5b3d811f6abad756b0c768d3" translate="yes" xml:space="preserve">
          <source>Int32x4.wwyz</source>
          <target state="translated">Int32x4.wwyz</target>
        </trans-unit>
        <trans-unit id="cef0add865fa4c2a740ebe563aeed2fb80772806" translate="yes" xml:space="preserve">
          <source>Int32x4.wwzw</source>
          <target state="translated">Int32x4.wwzw</target>
        </trans-unit>
        <trans-unit id="cc5127e0354fec6ed191709e6127910d203eeb38" translate="yes" xml:space="preserve">
          <source>Int32x4.wwzx</source>
          <target state="translated">Int32x4.wwzx</target>
        </trans-unit>
        <trans-unit id="4ae73bc82040cff58b01063e4301f53be0b9b05d" translate="yes" xml:space="preserve">
          <source>Int32x4.wwzy</source>
          <target state="translated">Int32x4.wwzy</target>
        </trans-unit>
        <trans-unit id="c5138dfd856cf95d9167797bea3014e4691f6e32" translate="yes" xml:space="preserve">
          <source>Int32x4.wwzz</source>
          <target state="translated">Int32x4.wwzz</target>
        </trans-unit>
        <trans-unit id="5f367ea253dd7252341e1fe418bcf6a7887492c5" translate="yes" xml:space="preserve">
          <source>Int32x4.wxww</source>
          <target state="translated">Int32x4.wxww</target>
        </trans-unit>
        <trans-unit id="ee5f8d21573dabd8d51244d49c656e68338aa723" translate="yes" xml:space="preserve">
          <source>Int32x4.wxwx</source>
          <target state="translated">Int32x4.wxwx</target>
        </trans-unit>
        <trans-unit id="58c2cea3c0831d1bf164f7492d5b7f9ecdca4c1d" translate="yes" xml:space="preserve">
          <source>Int32x4.wxwy</source>
          <target state="translated">Int32x4.wxwy</target>
        </trans-unit>
        <trans-unit id="20533184e7e768a46a712c42c31a2f0480acdfbb" translate="yes" xml:space="preserve">
          <source>Int32x4.wxwz</source>
          <target state="translated">Int32x4.wxwz</target>
        </trans-unit>
        <trans-unit id="e9dd324b7e597f60a54ece0032324be76b383568" translate="yes" xml:space="preserve">
          <source>Int32x4.wxxw</source>
          <target state="translated">Int32x4.wxxw</target>
        </trans-unit>
        <trans-unit id="68df60928f83c6731592590bf9ce965a35db09e0" translate="yes" xml:space="preserve">
          <source>Int32x4.wxxx</source>
          <target state="translated">Int32x4.wxxx</target>
        </trans-unit>
        <trans-unit id="0bb46ccca222c01a446620f3ead3520a190db5c6" translate="yes" xml:space="preserve">
          <source>Int32x4.wxxy</source>
          <target state="translated">Int32x4.wxxy</target>
        </trans-unit>
        <trans-unit id="807b8bfb740c4190306ae13be8e5fe535a28caa1" translate="yes" xml:space="preserve">
          <source>Int32x4.wxxz</source>
          <target state="translated">Int32x4.wxxz</target>
        </trans-unit>
        <trans-unit id="01182f0f9c70579f2e9255f20350ca536c98890d" translate="yes" xml:space="preserve">
          <source>Int32x4.wxyw</source>
          <target state="translated">Int32x4.wxyw</target>
        </trans-unit>
        <trans-unit id="4732257029ad1e63155b5f7f330d8c31efe7f6dc" translate="yes" xml:space="preserve">
          <source>Int32x4.wxyx</source>
          <target state="translated">Int32x4.wxyx</target>
        </trans-unit>
        <trans-unit id="1ede285819acf157430e5e0e0059b9388917b836" translate="yes" xml:space="preserve">
          <source>Int32x4.wxyy</source>
          <target state="translated">Int32x4.wxyy</target>
        </trans-unit>
        <trans-unit id="ac278ced940a2a8d3577767a0aa2501827e417b1" translate="yes" xml:space="preserve">
          <source>Int32x4.wxyz</source>
          <target state="translated">Int32x4.wxyz</target>
        </trans-unit>
        <trans-unit id="1ac1040073c80cf683922049d3fba72c61b50ae0" translate="yes" xml:space="preserve">
          <source>Int32x4.wxzw</source>
          <target state="translated">Int32x4.wxzw</target>
        </trans-unit>
        <trans-unit id="4928ad74e816a9c281d50ab1eeb5063414a3e213" translate="yes" xml:space="preserve">
          <source>Int32x4.wxzx</source>
          <target state="translated">Int32x4.wxzx</target>
        </trans-unit>
        <trans-unit id="0efe5f3b36cc5725df157b81f3af3512bedc0522" translate="yes" xml:space="preserve">
          <source>Int32x4.wxzy</source>
          <target state="translated">Int32x4.wxzy</target>
        </trans-unit>
        <trans-unit id="b53f03645301df9445baa30be771047939cc28bd" translate="yes" xml:space="preserve">
          <source>Int32x4.wxzz</source>
          <target state="translated">Int32x4.wxzz</target>
        </trans-unit>
        <trans-unit id="7e0eef1b4c6f24287f0a249968567ed38053fde2" translate="yes" xml:space="preserve">
          <source>Int32x4.wyww</source>
          <target state="translated">Int32x4.wyww</target>
        </trans-unit>
        <trans-unit id="dea083e8c713499de20597846fb48333bff53453" translate="yes" xml:space="preserve">
          <source>Int32x4.wywx</source>
          <target state="translated">Int32x4.wywx</target>
        </trans-unit>
        <trans-unit id="bc0d443413d3f6bb645064c413e6921bfeca2292" translate="yes" xml:space="preserve">
          <source>Int32x4.wywy</source>
          <target state="translated">Int32x4.wywy</target>
        </trans-unit>
        <trans-unit id="eedce2d92b21b145391a68150f018dee12b2977b" translate="yes" xml:space="preserve">
          <source>Int32x4.wywz</source>
          <target state="translated">Int32x4.wywz</target>
        </trans-unit>
        <trans-unit id="49d8c8cc02b1e6a25673dd46b9ba9020f4778539" translate="yes" xml:space="preserve">
          <source>Int32x4.wyxw</source>
          <target state="translated">Int32x4.wyxw</target>
        </trans-unit>
        <trans-unit id="52520e2d21a1ed123ed487b7ddb85754d56410bd" translate="yes" xml:space="preserve">
          <source>Int32x4.wyxx</source>
          <target state="translated">Int32x4.wyxx</target>
        </trans-unit>
        <trans-unit id="cb19e3a21d45e0b81eed4dcb8f47030e42629857" translate="yes" xml:space="preserve">
          <source>Int32x4.wyxy</source>
          <target state="translated">Int32x4.wyxy</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
