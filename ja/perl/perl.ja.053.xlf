<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="36e9a29c03a85f97a73fdb4948af2e80f1172106" translate="yes" xml:space="preserve">
          <source>file in the current directory and produce a human readable statistics report of the run of your program. Note that this may take a little time.</source>
          <target state="translated">ファイルを作成し、プログラムの実行の統計レポートを作成します。これには少し時間がかかることに注意してください。</target>
        </trans-unit>
        <trans-unit id="96f52b66f84e46bb34a02215fb341b97509c5e30" translate="yes" xml:space="preserve">
          <source>file in the root of the source tree contains a list of every file in the Perl core, as well as a brief description of each file.</source>
          <target state="translated">ファイルには、Perl コアにあるすべてのファイルのリストと、各ファイルの簡単な説明が含まれています。</target>
        </trans-unit>
        <trans-unit id="b673cbcd01d4def188eaf99c0f5395e7788c0ca6" translate="yes" xml:space="preserve">
          <source>file in the same directory.</source>
          <target state="translated">ファイルを同じディレクトリに保存します。</target>
        </trans-unit>
        <trans-unit id="6f6b467769af75e4243142591578a7e4bb1188b7" translate="yes" xml:space="preserve">
          <source>file in the source distribution for information on building Perl to do this.</source>
          <target state="translated">ファイルを参照してください。</target>
        </trans-unit>
        <trans-unit id="677a6abf80153fdb47022fb5cbbc1f632fc61929" translate="yes" xml:space="preserve">
          <source>file in the source distribution for more information).</source>
          <target state="translated">ファイルを参照してください)。</target>
        </trans-unit>
        <trans-unit id="af57901abe1de14cfaf89845262f910e19725878" translate="yes" xml:space="preserve">
          <source>file in the source distribution for more information.</source>
          <target state="translated">ファイルを参照してください。</target>
        </trans-unit>
        <trans-unit id="158decdfc3c0df69f61415a4fe826494641e7975" translate="yes" xml:space="preserve">
          <source>file in the source distribution. You can find out whether you are using perl's malloc by typing &lt;code&gt;perl -V:usemymalloc&lt;/code&gt;.</source>
          <target state="translated">ソースディストリビューションのファイル。 &lt;code&gt;perl -V:usemymalloc&lt;/code&gt; と入力すると、perlのmallocを使用しているかどうかを確認できます。</target>
        </trans-unit>
        <trans-unit id="5dfca435e1e8b0451f90a460985684d26ca313be" translate="yes" xml:space="preserve">
          <source>file into an HFS as binary; don't translate from ASCII to EBCDIC.</source>
          <target state="translated">ファイルをバイナリとして HFS に変換してください。</target>
        </trans-unit>
        <trans-unit id="d6d45ddf0d594d5a72ac9c87b11195208c55a4ad" translate="yes" xml:space="preserve">
          <source>file is a record, keyed on login name, containing information about that user.</source>
          <target state="translated">ファイルは、ログイン名をキーにしたレコードで、そのユーザに関する情報が含まれています。</target>
        </trans-unit>
        <trans-unit id="98fc98a46f0c48f2f43211f0e4fb728e8872c9a7" translate="yes" xml:space="preserve">
          <source>file is devoted to &quot;Networking, Device Control (modems), and Interprocess Communication&quot;, and contains numerous unbundled modules numerous networking modules, Chat and Expect operations, CGI programming, DCE, FTP, IPC, NNTP, Proxy, Ptty, RPC, SNMP, SMTP, Telnet, Threads, and ToolTalk--to name just a few.</source>
          <target state="translated">ファイルは「ネットワーク、デバイス制御(モデム)、プロセス間通信」に特化したもので、多数のアンバンドルされていないモジュール多数のネットワークモジュール、チャットと期待操作、CGI プログラミング、DCE、FTP、IPC、NNTP、プロキシ、Ptty、RPC、SNMP、SMTP、Telnet、スレッド、およびツールトークなどが含まれています。</target>
        </trans-unit>
        <trans-unit id="90c558fdb0f374b7066800555f1845ac44ddeeb6" translate="yes" xml:space="preserve">
          <source>file is required to exist. See &lt;a href=&quot;perlsub&quot;&gt;perlsub&lt;/a&gt;, &lt;a href=&quot;perlobj&quot;&gt;perlobj&lt;/a&gt;, and &lt;a href=&quot;autoloader&quot;&gt;AutoLoader&lt;/a&gt; for details about the AUTOLOAD mechanism.</source>
          <target state="translated">ファイルが存在する必要があります。参照&lt;a href=&quot;perlsub&quot;&gt;はperlsub&lt;/a&gt;、&lt;a href=&quot;perlobj&quot;&gt;perlobjを&lt;/a&gt;、および&lt;a href=&quot;autoloader&quot;&gt;オートローダーを&lt;/a&gt; AUTOLOADメカニズムの詳細については。</target>
        </trans-unit>
        <trans-unit id="61eccd061d3d63ddbaaade6cc88766ed0434f751" translate="yes" xml:space="preserve">
          <source>file makes calls to these XSUBs, it is convenient to have XSUBs installed before the Perl code is defined; for example, this makes prototypes for XSUBs visible to this Perl code. Alternatively, if the &lt;code&gt;BOOT:&lt;/code&gt; section makes calls to Perl functions (or uses Perl variables) defined in the</source>
          <target state="translated">fileはこれらのXSUBを呼び出します。Perlコードを定義する前にXSUBをインストールしておくと便利です。たとえば、これによりXSUBのプロトタイプがこのPerlコードから見えるようになります。または、 &lt;code&gt;BOOT:&lt;/code&gt; セクションが、で定義されたPerl関数を呼び出す（またはPerl変数を使用する）場合</target>
        </trans-unit>
        <trans-unit id="dd9eccaa42877fc3e0e2caf9f63e4bb1b19299b7" translate="yes" xml:space="preserve">
          <source>file may also load in other files in support of the module.) See the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; built-in.</source>
          <target state="translated">fileは、モジュールをサポートする他のファイルにロードすることもできます。）組み込みの &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="267a28875ed91ffaabeb2b24dad8d41b22f633e8" translate="yes" xml:space="preserve">
          <source>file might contain:</source>
          <target state="translated">ファイルが含まれている可能性があります。</target>
        </trans-unit>
        <trans-unit id="133905dd973aa7f0fcaeda5f96f6593d818d2aed" translate="yes" xml:space="preserve">
          <source>file or an accompanying</source>
          <target state="translated">ファイルまたはそれに付随する</target>
        </trans-unit>
        <trans-unit id="b8aa13a41f3257044fa2a29c8a02c9d624aa1e73" translate="yes" xml:space="preserve">
          <source>file or code can be added to the dl_expandspec() function in</source>
          <target state="translated">の dl_expandspec()関数に追加することができます。</target>
        </trans-unit>
        <trans-unit id="8f585ef30f0e02cbf16f980ae3bf5833369d52d4" translate="yes" xml:space="preserve">
          <source>file should be created by running</source>
          <target state="translated">ファイルは</target>
        </trans-unit>
        <trans-unit id="a0d820c11825a25442dbcbf481c8b189b592c7fc" translate="yes" xml:space="preserve">
          <source>file should contain fully qualified filenames, one per line.</source>
          <target state="translated">ファイルには、1行に1つの完全修飾されたファイル名が含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="2a9072b84e18f0455e8e85c7884b4df440048f24" translate="yes" xml:space="preserve">
          <source>file so that the tests are run.</source>
          <target state="translated">ファイルを作成して、テストを実行するようにします。</target>
        </trans-unit>
        <trans-unit id="aa30b918a30cfeb5accba2d72b40237ac697924a" translate="yes" xml:space="preserve">
          <source>file that is a plain C file containing all the bootstrap code to make the modules associated with the libraries available from within perl. If the first argument to &lt;code&gt;writemain()&lt;/code&gt; is a reference to a scalar it is used as the filename to open for output. Any other reference is used as the filehandle to write to. Otherwise output defaults to &lt;code&gt;STDOUT&lt;/code&gt; .</source>
          <target state="translated">ライブラリに関連付けられたモジュールをperl内から利用できるようにするすべてのブートストラップコードを含むプレーンCファイルです。 &lt;code&gt;writemain()&lt;/code&gt; の最初の引数がスカラーへの参照である場合、出力用に開くファイル名として使用されます。その他の参照は、書き込むファイルハンドルとして使用されます。それ以外の場合、出力はデフォルトで &lt;code&gt;STDOUT&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="59ab71ddc047ca4fcee494852b4de731f173e17b" translate="yes" xml:space="preserve">
          <source>file to configure the local Perl installation to use &quot;sloppy&quot; &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat()&lt;/a&gt;&lt;/code&gt; by default. See the documentation for &lt;b&gt;-f&lt;/b&gt; in &lt;a href=&quot;perlrun#Command-Switches&quot;&gt;perlrun&lt;/a&gt; for more information about site customization.</source>
          <target state="translated">ローカルPerlインストールを構成して、デフォルトで「ずさんな」 &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat()&lt;/a&gt;&lt;/code&gt; を使用するファイル。サイトのカスタマイズの詳細については、&lt;a href=&quot;perlrun#Command-Switches&quot;&gt;perlrunの&lt;/a&gt;&lt;b&gt;-f&lt;/b&gt;のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="9cdafb6620520642425a02347d97d86dbab90a86" translate="yes" xml:space="preserve">
          <source>file to flag that a local modification has been made. See</source>
          <target state="translated">ファイルにローカルでの変更が行われたことを示すフラグを立てます。以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="f0708647e117b28524ecdf176c31e9edead4cec9" translate="yes" xml:space="preserve">
          <source>file to load (or arrange to autoload) any additional functionality. For example, although the POSIX module happens to do both dynamic loading and autoloading, the user can say just &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; POSIX&lt;/code&gt; to get it all.</source>
          <target state="translated">追加機能をロードする（または自動ロードするように調整する）ファイル。たとえば、POSIXモジュールはたまたま動的読み込みと自動読み込みの両方を実行しますが、ユーザーは &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; POSIX&lt;/code&gt; を&lt;a href=&quot;functions/use&quot;&gt;使用する&lt;/a&gt;だけですべてを取得できます。</target>
        </trans-unit>
        <trans-unit id="d2dd5e29918493ca16697faf7b974761d05cd305" translate="yes" xml:space="preserve">
          <source>file when available at runtime. Otherwise, they may be embedded in the file itself when the splain package is built. See the</source>
          <target state="translated">ファイルに埋め込まれています。そうでない場合は、splain パッケージがビルドされたときにファイル自体に埋め込まれることがあります。このような場合には</target>
        </trans-unit>
        <trans-unit id="53bcbbac9232962cd3671a74f303a34d97752aca" translate="yes" xml:space="preserve">
          <source>file which can be used to build and install the files required by the extension. The kit should be unpacked into a directory tree &lt;b&gt;not&lt;/b&gt; under the main Perl source directory, and the procedure for building the extension is simply</source>
          <target state="translated">拡張機能が必要とするファイルの構築とインストールに使用できるファイル。キットはメインのPerlソースディレクトリの下では&lt;b&gt;なく&lt;/b&gt;、ディレクトリツリーに解凍する必要があります。拡張機能をビルドする手順は簡単です。</target>
        </trans-unit>
        <trans-unit id="355b6cbe0037bb7d13bd54052c7d011cc9fb5482" translate="yes" xml:space="preserve">
          <source>file which just loads this DLL into memory and supplies command-arguments. The extension DLL cannot link to symbols in</source>
          <target state="translated">ファイルは、このDLLをメモリにロードし、コマンド引数を提供するだけです。拡張DLLは</target>
        </trans-unit>
        <trans-unit id="51b131ee6959894d1a8bea0501e07d2135b16f5f" translate="yes" xml:space="preserve">
          <source>file whose name matches that of the current directory (presumably the 'main'</source>
          <target state="translated">ファイルの名前がカレントディレクトリの名前と一致するもの (おそらく 'main' ファイル)を指定します。</target>
        </trans-unit>
        <trans-unit id="9ef03954ec9f96e79b149a284687feb21c3d5441" translate="yes" xml:space="preserve">
          <source>file will be created.</source>
          <target state="translated">ファイルが作成されます。</target>
        </trans-unit>
        <trans-unit id="1322471bf338ac62ead6e7f95034e3b8cfb0816c" translate="yes" xml:space="preserve">
          <source>file will be saved as</source>
          <target state="translated">ファイルは</target>
        </trans-unit>
        <trans-unit id="6ab7c3be6951679d1c08d5fb53df96b878b66a01" translate="yes" xml:space="preserve">
          <source>file with four arguments. The last stack frame shows that &lt;code&gt;main::pests&lt;/code&gt; was called in scalar context, also from</source>
          <target state="translated">4つの引数を持つファイル。最後のスタックフレームは、 &lt;code&gt;main::pests&lt;/code&gt; がスカラーコンテキストで呼び出されたことも示しています。</target>
        </trans-unit>
        <trans-unit id="08df28525c6d6b2688b6272afd281103b83c1c54" translate="yes" xml:space="preserve">
          <source>file, and adds a HISTORY section to the POD template.</source>
          <target state="translated">ファイルを作成し、POD テンプレートに HISTORY セクションを追加します。</target>
        </trans-unit>
        <trans-unit id="abf04b01c3973801e690a48960dd3ec71dd25997" translate="yes" xml:space="preserve">
          <source>file, but nowadays installation of extensions may be performed automatically, guided by</source>
          <target state="translated">ファイルがありますが、最近では拡張子のインストールは</target>
        </trans-unit>
        <trans-unit id="249895c60b352ab732225e925898a8759d0498f2" translate="yes" xml:space="preserve">
          <source>file, but there may also be dynamically linked executables (often ending in</source>
          <target state="translated">ファイルを使用しますが、動的にリンクされた実行ファイル(多くの場合、末尾が</target>
        </trans-unit>
        <trans-unit id="23a1b92f81efa69e0514609c49a5329525632bba" translate="yes" xml:space="preserve">
          <source>file, indicates the extension which the module's loadable object will have. For example:</source>
          <target state="translated">ファイルは、モジュールのロード可能なオブジェクトが持つ拡張子を示します。例えば</target>
        </trans-unit>
        <trans-unit id="9875327001d234a7c2bcd87bd5760825d877bcf9" translate="yes" xml:space="preserve">
          <source>file, sufficient to give an idea of the sort of output you can expect from this cool tool.</source>
          <target state="translated">このクールなツールから期待できる出力の種類のアイデアを与えるには十分です。</target>
        </trans-unit>
        <trans-unit id="ccb64117f0e5474c5e23b90658818325917344c2" translate="yes" xml:space="preserve">
          <source>file, the</source>
          <target state="translated">ファイルの</target>
        </trans-unit>
        <trans-unit id="ec78705f6deebee296d6a87c3ada8725ec1443d6" translate="yes" xml:space="preserve">
          <source>file, the code there is called.</source>
          <target state="translated">ファイルの中では、そこにあるコードが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="6cc627c6c34838965c80ac74ae88bead1ca081db" translate="yes" xml:space="preserve">
          <source>file, then run</source>
          <target state="translated">ファイルを作成してから、次のように実行します。</target>
        </trans-unit>
        <trans-unit id="7cf6254f0a83d5e2c0b7dbdaa0ae0194f707236e" translate="yes" xml:space="preserve">
          <source>file, they must be defined prior to the call to &lt;code&gt;XSLoader::load()&lt;/code&gt; (or &lt;code&gt;bootstrap()&lt;/code&gt; ).</source>
          <target state="translated">&lt;code&gt;XSLoader::load()&lt;/code&gt; （または &lt;code&gt;bootstrap()&lt;/code&gt; ）を呼び出す前に定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="f221620a131aa17f3450def349ab1f33138a7725" translate="yes" xml:space="preserve">
          <source>file, this uses the &lt;b&gt;h2xs&lt;/b&gt; program (see the Perl source distribution) and your native C compiler. This means that it has a far more likely chance of getting the numbers right.</source>
          <target state="translated">ファイル、これは&lt;b&gt;h2xs&lt;/b&gt;プログラム（Perlソース配布を参照）とネイティブCコンパイラを使用します。これは、数値が正しくなる可能性がはるかに高いことを意味します。</target>
        </trans-unit>
        <trans-unit id="a0fde36f120cf7f39ffe71c18bf903da337bd14d" translate="yes" xml:space="preserve">
          <source>file, typemaps may be embedded verbatim in XS with a heredoc-like syntax. See the documentation on the &lt;code&gt;TYPEMAP:&lt;/code&gt; XS keyword.</source>
          <target state="translated">ファイル、タイプマップは、ヒアドキュメントのような構文でXSにそのまま埋め込むことができます。 &lt;code&gt;TYPEMAP:&lt;/code&gt; XSキーワードのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="a0cbe8a51b42fbc80ce2d1890ee7a76b2e8761c3" translate="yes" xml:space="preserve">
          <source>file, which contains initialization code. For instance, you could make aliases like these (the last one is one people expect to be there):</source>
          <target state="translated">ファイルには初期化コードが含まれています。例えば、以下のようなエイリアスを作ることができます (最後のエイリアスは人々が期待しているものです)。</target>
        </trans-unit>
        <trans-unit id="9883d8e3e0aef34533f4ef8bc6cda135e820b146" translate="yes" xml:space="preserve">
          <source>file, which is available when the perl source tree was fetched with rsync.</source>
          <target state="translated">このファイルは、perlのソースツリーがrsyncでフェッチされたときに利用できるようになります。</target>
        </trans-unit>
        <trans-unit id="e6aac979537532c0337818830a09318816ba289e" translate="yes" xml:space="preserve">
          <source>file, which is part of the source distribution. It describes in detail how to cope with most idiosyncrasies that the &lt;code&gt;Configure&lt;/code&gt; script can't work around for any given system or architecture.</source>
          <target state="translated">ソース配布の一部であるファイル。これは、 &lt;code&gt;Configure&lt;/code&gt; スクリプトが特定のシステムまたはアーキテクチャーで回避できないほとんどの特異性に対処する方法を詳しく説明しています。</target>
        </trans-unit>
        <trans-unit id="bea29006cf40081acae098f338dc7e19880696d5" translate="yes" xml:space="preserve">
          <source>file-dir-perms</source>
          <target state="translated">file-dir-perms</target>
        </trans-unit>
        <trans-unit id="e1ae90fc2f86d79825a96562add0919aed98dd02" translate="yes" xml:space="preserve">
          <source>file.</source>
          <target state="translated">file.</target>
        </trans-unit>
        <trans-unit id="d37e5ef40222df497d411a78995cfe9018b8cde2" translate="yes" xml:space="preserve">
          <source>file. In a version number such as 5.6.1, this is the &lt;code&gt;1&lt;/code&gt; . In</source>
          <target state="translated">ファイル。5.6.1などのバージョン番号では、これは &lt;code&gt;1&lt;/code&gt; です。に</target>
        </trans-unit>
        <trans-unit id="b65e3d6f747152b09cbc7c816a6517a250bb6d18" translate="yes" xml:space="preserve">
          <source>file. In a version number such as 5.6.1, this is the &lt;code&gt;5&lt;/code&gt; . In</source>
          <target state="translated">ファイル。5.6.1などのバージョン番号では、これは &lt;code&gt;5&lt;/code&gt; です。に</target>
        </trans-unit>
        <trans-unit id="ae0873a70bd546976d549f643a1b137884a22193" translate="yes" xml:space="preserve">
          <source>file. In a version number such as 5.6.1, this is the &lt;code&gt;6&lt;/code&gt; . In</source>
          <target state="translated">ファイル。5.6.1などのバージョン番号では、これは &lt;code&gt;6&lt;/code&gt; です。に</target>
        </trans-unit>
        <trans-unit id="fd0d59d1fd485af52ef04dc23d8d156d01a1762f" translate="yes" xml:space="preserve">
          <source>file. In modern times, refers more often to the entire collection of Perl &lt;b&gt;modules&lt;/b&gt; on your system.</source>
          <target state="translated">ファイル。現代では、システム上のPerl &lt;b&gt;モジュールの&lt;/b&gt;コレクション全体を指すことがよくあります。</target>
        </trans-unit>
        <trans-unit id="d4429d5157b51842bb7c36af527e1a0e62e5dd64" translate="yes" xml:space="preserve">
          <source>file. Indeed, this would need a DLL to have different relocations tables for the (different) executables which use this DLL.</source>
          <target state="translated">ファイルを作成する必要があります。確かに、このDLLを使用する(異なる)実行ファイルのために、異なる再配置テーブルを持つDLLが必要になります。</target>
        </trans-unit>
        <trans-unit id="cd6596a3c6c85784602dbc9555ccd5bbcc5945d7" translate="yes" xml:space="preserve">
          <source>file. Pretty nifty, eh?</source>
          <target state="translated">ファイルを かなり気が利いてるだろ?</target>
        </trans-unit>
        <trans-unit id="886f5669d5eb20cd00e3386c4bd84ce57f40ecec" translate="yes" xml:space="preserve">
          <source>file. See the</source>
          <target state="translated">ファイルを参照してください。を参照してください。</target>
        </trans-unit>
        <trans-unit id="cff967df0ce751b54e3e33d0ddfe8d4ee8b9dcd1" translate="yes" xml:space="preserve">
          <source>file. The behaviour is exactly the same as if you called the function, triggering the regular &lt;code&gt;AUTOLOAD&lt;/code&gt; mechanism, but it does not actually execute the autoloaded function.</source>
          <target state="translated">ファイル。動作は、通常の &lt;code&gt;AUTOLOAD&lt;/code&gt; メカニズムをトリガーして関数を呼び出した場合とまったく同じですが、実際にはオートロードされた関数は実行されません。</target>
        </trans-unit>
        <trans-unit id="1650e56be91fe8c73c39a9876ab24e6bd4b51fa7" translate="yes" xml:space="preserve">
          <source>file. The necessary signature information is output to STDOUT by invoking Storable::show_file_magic(). Note that the GNU implementation of the &lt;code&gt;file&lt;/code&gt; utility, version 3.38 or later, is expected to contain support for recognising Storable files out-of-the-box, in addition to other kinds of Perl files.</source>
          <target state="translated">ファイル。Storable :: show_file_magic（）を呼び出すことにより、必要な署名情報がSTDOUTに出力されます。 &lt;code&gt;file&lt;/code&gt; ユーティリティのGNU実装、バージョン3.38以降には、他の種類のPerlファイルに加えて、すぐに使用可能なStorableファイルを認識するためのサポートが含まれることが期待されています。</target>
        </trans-unit>
        <trans-unit id="61e7ce7ab64e3cafea855cb11269abafc89bf07c" translate="yes" xml:space="preserve">
          <source>file. This is normally &quot;cat</source>
          <target state="translated">というファイルを作成します。これは通常、&quot;cat</target>
        </trans-unit>
        <trans-unit id="4463c4c2031fb32ccf482a1651ae7f49557bc017" translate="yes" xml:space="preserve">
          <source>file. Unlike the old mechanism of requiring a translated</source>
          <target state="translated">ファイルを使用します。翻訳された</target>
        </trans-unit>
        <trans-unit id="da259327dd620284dcda81a2eaf00443799ed17a" translate="yes" xml:space="preserve">
          <source>file. You can also find out from within Perl what your $quota and $comment fields mean and whether you have the $expire field by using the &lt;code&gt;Config&lt;/code&gt; module and the values &lt;code&gt;d_pwquota&lt;/code&gt; , &lt;code&gt;d_pwage&lt;/code&gt; , &lt;code&gt;d_pwchange&lt;/code&gt; , &lt;code&gt;d_pwcomment&lt;/code&gt; , and &lt;code&gt;d_pwexpire&lt;/code&gt; . Shadow password files are supported only if your vendor has implemented them in the intuitive fashion that calling the regular C library routines gets the shadow versions if you're running under privilege or if there exists the shadow(3) functions as found in System V (this includes Solaris and Linux). Those systems that implement a proprietary shadow password facility are unlikely to be supported.</source>
          <target state="translated">ファイル。また、Perl内で、 &lt;code&gt;Config&lt;/code&gt; モジュールと値 &lt;code&gt;d_pwquota&lt;/code&gt; 、 &lt;code&gt;d_pwage&lt;/code&gt; 、 &lt;code&gt;d_pwchange&lt;/code&gt; 、 &lt;code&gt;d_pwcomment&lt;/code&gt; 、および &lt;code&gt;d_pwexpire&lt;/code&gt; を使用して、$ quotaおよび$ commentフィールドの意味と$ expireフィールドがあるかどうかを確認できます。シャドウパスワードファイルは、ベンダーが直感的な方法でそれらを実装した場合にのみサポートされます。特権で実行している場合、またはSystem V（これにはSolarisとLinuxが含まれます）。独自のシャドウパスワード機能を実装するシステムはサポートされない可能性があります。</target>
        </trans-unit>
        <trans-unit id="d0998110d4f271571ea799f05b153504a56056c0" translate="yes" xml:space="preserve">
          <source>file:</source>
          <target state="translated">file:</target>
        </trans-unit>
        <trans-unit id="aefd2831e4e83b16bc4333dc8be0ea73f8d8ff26" translate="yes" xml:space="preserve">
          <source>filehandle</source>
          <target state="translated">filehandle</target>
        </trans-unit>
        <trans-unit id="08deae8d9ea9bc0b84f94475d868351830e9f7e7" translate="yes" xml:space="preserve">
          <source>filename</source>
          <target state="translated">filename</target>
        </trans-unit>
        <trans-unit id="51273cbb602a095b8e0888a1f86827452b61e159" translate="yes" xml:space="preserve">
          <source>filename that is derived from the</source>
          <target state="translated">から派生したファイル名</target>
        </trans-unit>
        <trans-unit id="55a8dc68a6dafc9861f00470b88b3a8f33b67345" translate="yes" xml:space="preserve">
          <source>filename, that &lt;code&gt;File::Glob&lt;/code&gt; has matched, and a</source>
          <target state="translated">ファイル名、その &lt;code&gt;File::Glob&lt;/code&gt; が一致し、</target>
        </trans-unit>
        <trans-unit id="ea5bc7a0173b11c7fa46976b8099a074020eb6b0" translate="yes" xml:space="preserve">
          <source>filename.</source>
          <target state="translated">filename.</target>
        </trans-unit>
        <trans-unit id="1f9efe00b56c88909beb04108ce4adadf0af50d0" translate="yes" xml:space="preserve">
          <source>filenames</source>
          <target state="translated">filenames</target>
        </trans-unit>
        <trans-unit id="1a7b0b22acafe05a499f5f0af1a73bf579a1aba1" translate="yes" xml:space="preserve">
          <source>fileno</source>
          <target state="translated">fileno</target>
        </trans-unit>
        <trans-unit id="be9a8f1639eff90098e11a14f2d919c94561e6dd" translate="yes" xml:space="preserve">
          <source>fileno FILEHANDLE</source>
          <target state="translated">ファイル名 ファイルハンドル</target>
        </trans-unit>
        <trans-unit id="a1f13b3bc20a296e08c212be9c56c706c10abc4f" translate="yes" xml:space="preserve">
          <source>files</source>
          <target state="translated">files</target>
        </trans-unit>
        <trans-unit id="b388be505bde2f55d264cc9657c6f4c70e20d1c8" translate="yes" xml:space="preserve">
          <source>files and a low-level in-memory compression/decompression interface.</source>
          <target state="translated">ファイルと低レベルのインメモリ圧縮/解凍インターフェイスを提供します。</target>
        </trans-unit>
        <trans-unit id="27a1b5b9f493074b038677e6c9a5e9cde6916a23" translate="yes" xml:space="preserve">
          <source>files and put them on PATH. You need to put</source>
          <target state="translated">ファイルを作成し、PATHに配置します。に置く必要があります。</target>
        </trans-unit>
        <trans-unit id="2caa24ca9d5f188d5c50fb5a5fb2e547d6ba0f1f" translate="yes" xml:space="preserve">
          <source>files are VMS filesystem directory files, and using them for other purposes could cause unacceptable problems.</source>
          <target state="translated">ファイルは VMS ファイルシステムのディレクトリファイルであり、他の目的で使用すると許容できない問題が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="427695b22f97a52c67dd6d5c62041213ee8fc709" translate="yes" xml:space="preserve">
          <source>files compiled in &lt;code&gt;omf&lt;/code&gt; format to fork(). fork() is needed for exactly three Perl operations:</source>
          <target state="translated">&lt;code&gt;omf&lt;/code&gt; 形式でfork（）にコンパイルされたファイル。fork（）は、正確に3つのPerl操作に必要です。</target>
        </trans-unit>
        <trans-unit id="ab1208e647bd794b2398cd2d95d4a0bd308f646a" translate="yes" xml:space="preserve">
          <source>files contain the source code annotated with relative frequencies of execution indicated by &quot;#&quot; markers. If you want to generate</source>
          <target state="translated">ファイルには、&quot;#&quot;マーカーで示された相対的な実行頻度で注釈が付けられたソースコードが含まれています。ファイルを生成したい場合は</target>
        </trans-unit>
        <trans-unit id="aab2c29cb87b0d1a611af3e38b1fb3b0e11a20ef" translate="yes" xml:space="preserve">
          <source>files for all profiled object files, you can run something like this:</source>
          <target state="translated">ファイルをすべてのプロファイル化されたオブジェクトファイルに対して実行するには、次のようなものを実行します。</target>
        </trans-unit>
        <trans-unit id="4d27a85120b4255575d5d5d33a5886c7a113136a" translate="yes" xml:space="preserve">
          <source>files for you and add them to your</source>
          <target state="translated">ファイルを作成して</target>
        </trans-unit>
        <trans-unit id="b5b1464f45a8b746e864f272ae5c41596a09a85c" translate="yes" xml:space="preserve">
          <source>files found&quot;, regardless of whether we mean &quot;I looked for files, and found</source>
          <target state="translated">ファイルが見つかりました」という意味であるかどうかにかかわらず、「ファイルを探して見つけました</target>
        </trans-unit>
        <trans-unit id="07decdee58d0c1d33749e56763aa93769454d137" translate="yes" xml:space="preserve">
          <source>files in the</source>
          <target state="translated">のファイルを</target>
        </trans-unit>
        <trans-unit id="1d7cbfe8400663a15614d957b460b0feecf69eb8" translate="yes" xml:space="preserve">
          <source>files is also shared by all the processes which use the particular</source>
          <target state="translated">ファイルを使用するすべてのプロセスで共有されます。</target>
        </trans-unit>
        <trans-unit id="4d4aa688e5d49d2a9c1b0f3a8155c37e54f0b092" translate="yes" xml:space="preserve">
          <source>files made by &lt;b&gt;h2ph&lt;/b&gt; will probably end up as extension modules made by &lt;b&gt;h2xs&lt;/b&gt;. (Some</source>
          <target state="translated">&lt;b&gt;h2phで&lt;/b&gt;作成されたファイルは、おそらく&lt;b&gt;h2xsで&lt;/b&gt;作成された拡張モジュールになります。（いくつか</target>
        </trans-unit>
        <trans-unit id="cb028decb4941fe61fcf80bda9cffda3bd62066b" translate="yes" xml:space="preserve">
          <source>files on the command line.</source>
          <target state="translated">ファイルをコマンドラインで実行します。</target>
        </trans-unit>
        <trans-unit id="c33ab37f4ca5c5639d742c86c6cf48dff44045c2" translate="yes" xml:space="preserve">
          <source>files that conform to RFC 1952. This module provides an interface to most of them.</source>
          <target state="translated">ファイルがあります。このモジュールは、それらのほとんどのファイルへのインターフェイスを提供します。</target>
        </trans-unit>
        <trans-unit id="d452d6a65a0281b4e4bcc1bc075531ccf4bd9fd6" translate="yes" xml:space="preserve">
          <source>files that you may find.</source>
          <target state="translated">ファイルを検索してみてください。</target>
        </trans-unit>
        <trans-unit id="439cb8cd85550a2b902e5f2b15d5353f6d69941f" translate="yes" xml:space="preserve">
          <source>files they contain will be installed in the corresponding location in the library. A libscan() method can be used to alter the behaviour. Defining PM in the Makefile.PL will override PMLIBDIRS.</source>
          <target state="translated">ファイルはライブラリ内の対応する場所にインストールされます。libscan()メソッドを使用して動作を変更することができます。Makefile.PLでPMを定義すると、PMLIBDIRSをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="c379c94eaf792e6f79e709146cc93e698613c1b8" translate="yes" xml:space="preserve">
          <source>files to make sure that during the iterations the number of loaded extensions only increases. Rename</source>
          <target state="translated">ファイルを使用して、繰り返しの間にロードされる拡張子の数が増加するだけであることを確認してください。名前の変更</target>
        </trans-unit>
        <trans-unit id="30ea2122d0f6f4e9a816a7c5d8e43b1c1b222abb" translate="yes" xml:space="preserve">
          <source>files will all eventually be converted into standard modules, and the</source>
          <target state="translated">ファイルは、最終的にはすべて標準モジュールに変換され</target>
        </trans-unit>
        <trans-unit id="8191de06b54dd6171d7495a16c973be6284c7b80" translate="yes" xml:space="preserve">
          <source>files will not disrupt the operation of your system even if some intermediate steps are not yet fully working.</source>
          <target state="translated">ファイルを使用することで、一部の中間ステップがまだ完全に動作していなくても、システムの動作に支障をきたすことはありません。</target>
        </trans-unit>
        <trans-unit id="4ae885a410cf2dad03a6fbb0657d09a5484b2021" translate="yes" xml:space="preserve">
          <source>files with a</source>
          <target state="translated">ファイルに</target>
        </trans-unit>
        <trans-unit id="778eac4fa00ee4803f97385a166016f947083dc6" translate="yes" xml:space="preserve">
          <source>files&quot;, for &lt;b&gt;any&lt;/b&gt; value of N) is involved, each translator should make clear what dependencies the number causes in the sentence. In many cases, dependency is limited to words adjacent to the number, in places where you might expect them (&quot;I found the-?PLURAL</source>
          <target state="translated">「ファイル」、Nの&lt;b&gt;任意の&lt;/b&gt;値が含まれる場合、各翻訳者は、番号が文にどのような依存関係をもたらすかを明確にする必要があります。多くの場合、依存関係は、期待する場所で、番号に隣接する単語に限定されます（ &quot;I見つかった</target>
        </trans-unit>
        <trans-unit id="6210e4478406aba2d5a00ca356ca28b7228de1b7" translate="yes" xml:space="preserve">
          <source>files, and do like this</source>
          <target state="translated">ファイルを作成して、このようにします。</target>
        </trans-unit>
        <trans-unit id="7931721f040d6d9bf84e24e0036a60557a51d002" translate="yes" xml:space="preserve">
          <source>files, and so on.</source>
          <target state="translated">などのファイルがあります。</target>
        </trans-unit>
        <trans-unit id="e5aad993eb875ef162fd3bc626825725a1b915d6" translate="yes" xml:space="preserve">
          <source>files, and the one for sending syslog messages with was simply</source>
          <target state="translated">ファイルがあり、syslog メッセージを送信するためのものは単に</target>
        </trans-unit>
        <trans-unit id="ca4cb998d083bfa079522938a9773a928a1d1552" translate="yes" xml:space="preserve">
          <source>files, if you are so inclined. For example:</source>
          <target state="translated">ファイルを作成することができます。例えば</target>
        </trans-unit>
        <trans-unit id="9b323c3c616ea597c711a474ebad52d49cd46553" translate="yes" xml:space="preserve">
          <source>files, though there may be some additional ones, too; check the module documentation) to their final destination: This will most likely be in &lt;code&gt;$ENV{MACPERL}site_lib:&lt;/code&gt; (i.e., &lt;code&gt;HD:MacPerl folder:site_lib:&lt;/code&gt;). You can add new paths to the default &lt;code&gt;@INC&lt;/code&gt; in the Preferences menu item in the MacPerl application (&lt;code&gt;$ENV{MACPERL}site_lib:&lt;/code&gt; is added automagically). Create whatever directory structures are required (i.e., for &lt;code&gt;Some::Module&lt;/code&gt; , create &lt;code&gt;$ENV{MACPERL}site_lib:Some:&lt;/code&gt; and put &lt;code&gt;Module.pm&lt;/code&gt; in that directory).</source>
          <target state="translated">ファイルもありますが、追加のファイルもあります。モジュールのドキュメントを確認して）、最終的な宛先に移動します。これはおそらく &lt;code&gt;$ENV{MACPERL}site_lib:&lt;/code&gt; （つまり、 &lt;code&gt;HD:MacPerl folder:site_lib:&lt;/code&gt; )。MacPerlアプリケーションの[設定]メニュー項目で、デフォルトの &lt;code&gt;@INC&lt;/code&gt; に新しいパスを追加できます（ &lt;code&gt;$ENV{MACPERL}site_lib:&lt;/code&gt; が自動的に追加されます）。必要なディレクトリ構造を作成します（つまり、 &lt;code&gt;Some::Module&lt;/code&gt; 場合は、 &lt;code&gt;$ENV{MACPERL}site_lib:Some:&lt;/code&gt; を &lt;code&gt;Module.pm&lt;/code&gt; 、そのディレクトリにModule.pmを配置します）。</target>
        </trans-unit>
        <trans-unit id="11de103a15b62be4509946ac766ef8a9e3f32603" translate="yes" xml:space="preserve">
          <source>files, using &lt;a href=&quot;../../json/pp&quot;&gt;JSON::PP&lt;/a&gt; and/or &lt;a href=&quot;../../cpan/meta/yaml&quot;&gt;CPAN::Meta::YAML&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../json/pp&quot;&gt;JSON :: PP&lt;/a&gt;または&lt;a href=&quot;../../cpan/meta/yaml&quot;&gt;CPAN :: Meta :: YAML&lt;/a&gt;を使用したファイル。</target>
        </trans-unit>
        <trans-unit id="f49f73299c0603d7951745149cd98cdbc91f8655" translate="yes" xml:space="preserve">
          <source>files, usually.) You might be able to find existing binaries on the CPAN or elsewhere, or you might want to try getting compilers and building it yourself, and then release the binary for other poor souls to use.</source>
          <target state="translated">ファイルを使用することができます)。CPAN や他の場所で既存のバイナリを見つけることができるかもしれませんし、コンパイラを入手して自分でビルドしてみて、他のかわいそうな人たちが使えるようにバイナリをリリースしてみるのもいいかもしれません。</target>
        </trans-unit>
        <trans-unit id="15ea80d8d6144f86dbf55541bd4ce65b0ca34df1" translate="yes" xml:space="preserve">
          <source>files, which normally denote that the distribution must be compiled, and you cannot install it &quot;out of the box.&quot; (See &lt;a href=&quot;#PORTABILITY&quot;&gt;PORTABILITY&lt;/a&gt;.)</source>
          <target state="translated">通常、ディストリビューションをコンパイルする必要があることを示すファイルであり、「そのまま」インストールすることはできません。（&lt;a href=&quot;#PORTABILITY&quot;&gt;移植性を&lt;/a&gt;参照してください。）</target>
        </trans-unit>
        <trans-unit id="71519aea90da85c4823b5f442c8903cd72256cd1" translate="yes" xml:space="preserve">
          <source>files.</source>
          <target state="translated">files.</target>
        </trans-unit>
        <trans-unit id="ee709d77ae70ae8944146df84fff44dbead1854c" translate="yes" xml:space="preserve">
          <source>files. Module names are also capitalized unless they're functioning as pragmas; pragmas are in effect compiler directives, and are sometimes called &quot;pragmatic modules&quot; (or even &quot;pragmata&quot; if you're a classicist).</source>
          <target state="translated">ファイルの中のモジュール名は大文字で表記されます。モジュール名は、プラグマとして機能している場合を除いて大文字で表記されます。プラグマは実質的にコンパイラの指令であり、&quot;pragmatic modules &quot;と呼ばれることもあります (古典主義者なら &quot;pragmata &quot;と呼ばれることもあります)。</target>
        </trans-unit>
        <trans-unit id="bf196c0008a3d3d0e6303e2658913b96b2538c1e" translate="yes" xml:space="preserve">
          <source>files. Sure enough, &lt;code&gt;pp_pack&lt;/code&gt; is in</source>
          <target state="translated">ファイル。案の定、 &lt;code&gt;pp_pack&lt;/code&gt; は</target>
        </trans-unit>
        <trans-unit id="fd375ff2dbfaaa79c8fd66d9bfd74eb5b09323a2" translate="yes" xml:space="preserve">
          <source>files.&quot; This may involve rethinking things that you thought quite clear: should &quot;Edit&quot; on a toolbar be a noun (&quot;editing&quot;) or a verb (&quot;to edit&quot;)? Is there already a conventionalized way to express that menu option, separate from the target language's normal word for &quot;to edit&quot;?</source>
          <target state="translated">ファイルを編集します。ツールバーの「編集」は名詞(「編集」)なのか動詞(「編集する」)なのか?ツールバーの「編集」は名詞 (「編集」)にすべきか、それとも動詞 (「編集する」)にすべきか?</target>
        </trans-unit>
        <trans-unit id="baed7ddf33e423d8322034dacd33429204f936b5" translate="yes" xml:space="preserve">
          <source>files; the function which implements the op with type &lt;code&gt;gvsv&lt;/code&gt; is &lt;code&gt;pp_gvsv&lt;/code&gt; , and so on. As the tree above shows, different ops have different numbers of children: &lt;code&gt;add&lt;/code&gt; is a binary operator, as one would expect, and so has two children. To accommodate the various different numbers of children, there are various types of op data structure, and they link together in different ways.</source>
          <target state="translated">ファイル; タイプ &lt;code&gt;gvsv&lt;/code&gt; のopを実装する関数は &lt;code&gt;pp_gvsv&lt;/code&gt; などです。ショー以上のツリーとして、異なるOPSは子供の数が異なる： &lt;code&gt;add&lt;/code&gt; が予想されるように、バイナリ演算子であり、そしてその2人の子供がいます。さまざまな数の子に対応するために、さまざまなタイプのopデータ構造があり、それらはさまざまな方法で互いにリンクしています。</target>
        </trans-unit>
        <trans-unit id="cc90e0e45db6324d1e1d6e76da3721c953780866" translate="yes" xml:space="preserve">
          <source>filespec</source>
          <target state="translated">filespec</target>
        </trans-unit>
        <trans-unit id="217e7548154a9cebfbe4f04eee4650daa88fb3a4" translate="yes" xml:space="preserve">
          <source>filetest</source>
          <target state="translated">filetest</target>
        </trans-unit>
        <trans-unit id="fab12da300b491251db4d4cab837c426325b988e" translate="yes" xml:space="preserve">
          <source>filetest - Perl pragma to control the filetest permission operators</source>
          <target state="translated">filetest-filetest のパーミッション演算子を制御するための Perl プラグマ</target>
        </trans-unit>
        <trans-unit id="4bb4ca75941b7bbc5bc6a12be44b22fc9c8d234e" translate="yes" xml:space="preserve">
          <source>filter</source>
          <target state="translated">filter</target>
        </trans-unit>
        <trans-unit id="c5e33ff80461fc78c1f3af290398728e01f1bfa0" translate="yes" xml:space="preserve">
          <source>filter_add</source>
          <target state="translated">filter_add</target>
        </trans-unit>
        <trans-unit id="ded8dae5786fb0e9e6ffb657401fd861ba2efe11" translate="yes" xml:space="preserve">
          <source>find</source>
          <target state="translated">find</target>
        </trans-unit>
        <trans-unit id="97e8759313ab4d822858267c34495da81e75e038" translate="yes" xml:space="preserve">
          <source>find a matching line for the given regular expression.</source>
          <target state="translated">与えられた正規表現にマッチする行を見つけます。</target>
        </trans-unit>
        <trans-unit id="58430a5048a5da82822d14d65c74a4bc9ab49671" translate="yes" xml:space="preserve">
          <source>find the old DLLs looking through the old @INC;</source>
          <target state="translated">古い@INCを探して古いDLLを見つけてください。</target>
        </trans-unit>
        <trans-unit id="30215ed24872dbfe789844565956d3a54409bd68" translate="yes" xml:space="preserve">
          <source>find, find2perl.</source>
          <target state="translated">find、find2perl。</target>
        </trans-unit>
        <trans-unit id="7330e2ce4287860f407440b30b1f8fdc8cab5e7e" translate="yes" xml:space="preserve">
          <source>find.exe</source>
          <target state="translated">find.exe</target>
        </trans-unit>
        <trans-unit id="8b7e756fb05cc367d17d2ce9fe6108dc479cc209" translate="yes" xml:space="preserve">
          <source>find_encoding</source>
          <target state="translated">find_encoding</target>
        </trans-unit>
        <trans-unit id="58ed6c11d10c8ac4f332733a593de46f4bc9f3cf" translate="yes" xml:space="preserve">
          <source>find_tests</source>
          <target state="translated">find_tests</target>
        </trans-unit>
        <trans-unit id="da99fbd96d7da581324e8d274e918de0ecd55d2a" translate="yes" xml:space="preserve">
          <source>find_tests_recursive</source>
          <target state="translated">find_tests_recursive</target>
        </trans-unit>
        <trans-unit id="e8477275bbeb018dd1a7162530dfad7676469ad1" translate="yes" xml:space="preserve">
          <source>finds files below the current directory that are not mentioned in the &lt;code&gt;MANIFEST&lt;/code&gt; file. An optional file &lt;code&gt;MANIFEST.SKIP&lt;/code&gt; will be consulted. Any file matching a regular expression in such a file will not be reported as missing in the &lt;code&gt;MANIFEST&lt;/code&gt; file. The list of any extraneous files found is returned, and by default also reported to STDERR.</source>
          <target state="translated">&lt;code&gt;MANIFEST&lt;/code&gt; ファイルに記載されていない現在のディレクトリの下のファイルを検索します。オプションのファイル &lt;code&gt;MANIFEST.SKIP&lt;/code&gt; が参照されます。このようなファイルの正規表現に一致するファイルは、 &lt;code&gt;MANIFEST&lt;/code&gt; ファイルで欠落していると報告されません。見つかった無関係なファイルのリストが返され、デフォルトでSTDERRにも報告されます。</target>
        </trans-unit>
        <trans-unit id="12f0633cd2bf9d027ebe33cf4e97fab090ee8920" translate="yes" xml:space="preserve">
          <source>finds the first perl version where a module has been released by date, and not by version number (as is the default).</source>
          <target state="translated">は、モジュールがリリースされた最初のPerlのバージョンを見つけます。</target>
        </trans-unit>
        <trans-unit id="e0996a37c13d44c3b06074939d43fa3759bd32c1" translate="yes" xml:space="preserve">
          <source>first</source>
          <target state="translated">first</target>
        </trans-unit>
        <trans-unit id="a26bcfab0ce905dd147f83e9681dde77db958515" translate="yes" xml:space="preserve">
          <source>first to get the correct constant definitions. Argument processing and value returned work just like &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt; below. For example:</source>
          <target state="translated">まず、正しい定数定義を取得します。引数の処理と戻り値は、以下の &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt; と同じように機能します。例えば：</target>
        </trans-unit>
        <trans-unit id="145e897d90ef7ace4afaa9f049de00aa57eba3af" translate="yes" xml:space="preserve">
          <source>first to get the correct constant definitions. Argument processing and value returned work just like &lt;code&gt;&lt;a href=&quot;ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt; below. For example:</source>
          <target state="translated">まず、正しい定数定義を取得します。引数の処理と戻り値は、以下の &lt;code&gt;&lt;a href=&quot;ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt; と同じように機能します。例えば：</target>
        </trans-unit>
        <trans-unit id="378e052957d84f2c33d48c7a972325ea574958cf" translate="yes" xml:space="preserve">
          <source>first to get the correct constant definitions. If CMD is &lt;code&gt;IPC_STAT&lt;/code&gt; , then ARG must be a variable that will hold the returned &lt;code&gt;msqid_ds&lt;/code&gt; structure. Returns like &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt;: the undefined value for error, &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt; for zero, or the actual return value otherwise. See also &lt;a href=&quot;perlipc#SysV-IPC&quot;&gt;SysV IPC in perlipc&lt;/a&gt; and the documentation for &lt;code&gt;IPC::SysV&lt;/code&gt; and &lt;code&gt;IPC::Semaphore&lt;/code&gt; .</source>
          <target state="translated">まず、正しい定数定義を取得します。 CMDが &lt;code&gt;IPC_STAT&lt;/code&gt; の場合、ARGは返された &lt;code&gt;msqid_ds&lt;/code&gt; 構造を保持する変数である必要があります。 &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt; のような戻り値：エラーの場合は未定義値、ゼロの &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt; は「0 but true」、それ以外の場合は実際の戻り値。&lt;a href=&quot;perlipc#SysV-IPC&quot;&gt;perlipcのSysV IPC&lt;/a&gt;および &lt;code&gt;IPC::SysV&lt;/code&gt; および &lt;code&gt;IPC::Semaphore&lt;/code&gt; のドキュメントも参照してください。</target>
        </trans-unit>
        <trans-unit id="a2c7fd6c3071f9b71fd6d8d5fda7890def1ac3b6" translate="yes" xml:space="preserve">
          <source>first to get the correct constant definitions. If CMD is &lt;code&gt;IPC_STAT&lt;/code&gt; , then ARG must be a variable that will hold the returned &lt;code&gt;msqid_ds&lt;/code&gt; structure. Returns like &lt;code&gt;&lt;a href=&quot;ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt;: the undefined value for error, &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt; for zero, or the actual return value otherwise. See also &lt;a href=&quot;../perlipc#SysV-IPC&quot;&gt;SysV IPC in perlipc&lt;/a&gt; and the documentation for &lt;code&gt;IPC::SysV&lt;/code&gt; and &lt;code&gt;IPC::Semaphore&lt;/code&gt; .</source>
          <target state="translated">まず、正しい定数定義を取得します。 CMDが &lt;code&gt;IPC_STAT&lt;/code&gt; の場合、ARGは返された &lt;code&gt;msqid_ds&lt;/code&gt; 構造を保持する変数である必要があります。 &lt;code&gt;&lt;a href=&quot;ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt; のような戻り値：エラーの場合は未定義値、ゼロの &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt; は「0 but true」、それ以外の場合は実際の戻り値。&lt;a href=&quot;../perlipc#SysV-IPC&quot;&gt;perlipcのSysV IPC&lt;/a&gt;および &lt;code&gt;IPC::SysV&lt;/code&gt; および &lt;code&gt;IPC::Semaphore&lt;/code&gt; のドキュメントも参照してください。</target>
        </trans-unit>
        <trans-unit id="3751e4145c53dd9bc48b6915068ee5bb12ae1b57" translate="yes" xml:space="preserve">
          <source>first to get the correct constant definitions. If CMD is &lt;code&gt;IPC_STAT&lt;/code&gt; , then ARG must be a variable that will hold the returned &lt;code&gt;shmid_ds&lt;/code&gt; structure. Returns like ioctl: &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; for error; &quot;&lt;code&gt;0&lt;/code&gt; but true&quot; for zero; and the actual return value otherwise. See also &lt;a href=&quot;perlipc#SysV-IPC&quot;&gt;SysV IPC in perlipc&lt;/a&gt; and &lt;code&gt;IPC::SysV&lt;/code&gt; documentation.</source>
          <target state="translated">まず、正しい定数定義を取得します。 CMDが &lt;code&gt;IPC_STAT&lt;/code&gt; の場合、ARGは返された &lt;code&gt;shmid_ds&lt;/code&gt; 構造を保持する変数でなければなりません。 ioctlのような戻り値：エラーの場合は &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。ゼロの場合は「 &lt;code&gt;0&lt;/code&gt; がtrue」。それ以外の場合は実際の戻り値。&lt;a href=&quot;perlipc#SysV-IPC&quot;&gt;perlipcのSysV IPC&lt;/a&gt;および &lt;code&gt;IPC::SysV&lt;/code&gt; ドキュメントも参照してください。</target>
        </trans-unit>
        <trans-unit id="9d7fc0b332f37dfbc8f564414c2571e77cf14161" translate="yes" xml:space="preserve">
          <source>first to get the correct constant definitions. If CMD is &lt;code&gt;IPC_STAT&lt;/code&gt; , then ARG must be a variable that will hold the returned &lt;code&gt;shmid_ds&lt;/code&gt; structure. Returns like ioctl: &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; for error; &quot;&lt;code&gt;0&lt;/code&gt; but true&quot; for zero; and the actual return value otherwise. See also &lt;a href=&quot;../perlipc#SysV-IPC&quot;&gt;SysV IPC in perlipc&lt;/a&gt; and &lt;code&gt;IPC::SysV&lt;/code&gt; documentation.</source>
          <target state="translated">まず、正しい定数定義を取得します。 CMDが &lt;code&gt;IPC_STAT&lt;/code&gt; の場合、ARGは返された &lt;code&gt;shmid_ds&lt;/code&gt; 構造を保持する変数でなければなりません。 ioctlのような戻り値：エラーの場合は &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 。ゼロの場合は「 &lt;code&gt;0&lt;/code&gt; がtrue」。それ以外の場合は実際の戻り値。&lt;a href=&quot;../perlipc#SysV-IPC&quot;&gt;perlipcのSysV IPC&lt;/a&gt;および &lt;code&gt;IPC::SysV&lt;/code&gt; ドキュメントも参照してください。</target>
        </trans-unit>
        <trans-unit id="2b00fe4277d047842c347401b25d7fb9ec09fa55" translate="yes" xml:space="preserve">
          <source>first to get the correct constant definitions. If CMD is IPC_STAT or GETALL, then ARG must be a variable that will hold the returned semid_ds structure or semaphore value array. Returns like &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt;: the undefined value for error, &quot;&lt;code&gt;0 but true&lt;/code&gt;&quot; for zero, or the actual return value otherwise. The ARG must consist of a vector of native short integers, which may be created with &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack(&quot;s!&quot;,(0)x$nsem)&lt;/a&gt;&lt;/code&gt;. See also &lt;a href=&quot;perlipc#SysV-IPC&quot;&gt;SysV IPC in perlipc&lt;/a&gt;, &lt;code&gt;IPC::SysV&lt;/code&gt; , &lt;code&gt;IPC::Semaphore&lt;/code&gt; documentation.</source>
          <target state="translated">まず、正しい定数定義を取得します。 CMDがIPC_STATまたはGETALLの場合、ARGは、返されたsemid_ds構造またはセマフォ値の配列を保持する変数である必要があります。 &lt;code&gt;&lt;a href=&quot;functions/ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt; のような戻り値：エラーの場合は未定義の値、ゼロの &lt;code&gt;0 but true&lt;/code&gt; は「0 but true」、それ以外の場合は実際の戻り値。 ARGは &lt;code&gt;&lt;a href=&quot;functions/pack&quot;&gt;pack(&quot;s!&quot;,(0)x$nsem)&lt;/a&gt;&lt;/code&gt; で作成できるネイティブの短整数のベクトルで構成する必要があります。&lt;a href=&quot;perlipc#SysV-IPC&quot;&gt;perlipcのSysV IPC&lt;/a&gt;、 &lt;code&gt;IPC::SysV&lt;/code&gt; 、 &lt;code&gt;IPC::Semaphore&lt;/code&gt; ドキュメントも参照してください。</target>
        </trans-unit>
        <trans-unit id="5a24b39ae3bde18de4740b7b6dcebb3f0be45ef9" translate="yes" xml:space="preserve">
          <source>first to get the correct constant definitions. If CMD is IPC_STAT or GETALL, then ARG must be a variable that will hold the returned semid_ds structure or semaphore value array. Returns like &lt;code&gt;&lt;a href=&quot;ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt;: the undefined value for error, &quot;&lt;code&gt;0 but true&lt;/code&gt;&quot; for zero, or the actual return value otherwise. The ARG must consist of a vector of native short integers, which may be created with &lt;code&gt;&lt;a href=&quot;pack&quot;&gt;pack(&quot;s!&quot;,(0)x$nsem)&lt;/a&gt;&lt;/code&gt;. See also &lt;a href=&quot;../perlipc#SysV-IPC&quot;&gt;SysV IPC in perlipc&lt;/a&gt;, &lt;code&gt;IPC::SysV&lt;/code&gt; , &lt;code&gt;IPC::Semaphore&lt;/code&gt; documentation.</source>
          <target state="translated">まず、正しい定数定義を取得します。 CMDがIPC_STATまたはGETALLの場合、ARGは、返されたsemid_ds構造またはセマフォ値の配列を保持する変数である必要があります。 &lt;code&gt;&lt;a href=&quot;ioctl&quot;&gt;ioctl&lt;/a&gt;&lt;/code&gt; のような戻り値：エラーの場合は未定義の値、ゼロの &lt;code&gt;0 but true&lt;/code&gt; は「0 but true」、それ以外の場合は実際の戻り値。 ARGは &lt;code&gt;&lt;a href=&quot;pack&quot;&gt;pack(&quot;s!&quot;,(0)x$nsem)&lt;/a&gt;&lt;/code&gt; で作成できるネイティブの短整数のベクトルで構成する必要があります。&lt;a href=&quot;../perlipc#SysV-IPC&quot;&gt;perlipcのSysV IPC&lt;/a&gt;、 &lt;code&gt;IPC::SysV&lt;/code&gt; 、 &lt;code&gt;IPC::Semaphore&lt;/code&gt; ドキュメントも参照してください。</target>
        </trans-unit>
        <trans-unit id="49ec08386604f57003e4f65a95447cf166758d0c" translate="yes" xml:space="preserve">
          <source>first.</source>
          <target state="translated">first.</target>
        </trans-unit>
        <trans-unit id="e2d8c5080c58344ae3e092ffa7174b41237859dc" translate="yes" xml:space="preserve">
          <source>fix/add the documentation in places marked as XXX.</source>
          <target state="translated">XXXと表記されている箇所のドキュメントを修正・追加した。</target>
        </trans-unit>
        <trans-unit id="4806b44e6a47c0f714993e3f33db725c32eee733" translate="yes" xml:space="preserve">
          <source>fixed string</source>
          <target state="translated">固定文字列</target>
        </trans-unit>
        <trans-unit id="460f6688d656ecc17352ddc5160c4103637b29f0" translate="yes" xml:space="preserve">
          <source>fixpath() checks to see whether the result matches the name of a directory in the current default directory and returns a directory or file specification accordingly. &lt;code&gt;$is_dir&lt;/code&gt; can be set to true to force fixpath() to consider the path to be a directory or false to force it to be a file.</source>
          <target state="translated">fixpath（）は、結果が現在のデフォルトディレクトリ内のディレクトリ名と一致するかどうかを確認し、それに応じてディレクトリまたはファイル指定を返します。 &lt;code&gt;$is_dir&lt;/code&gt; をtrueに設定してfixpath（）にパスをディレクトリと見なすように強制するか、falseに設定してパスをファイルと見なすことができます。</target>
        </trans-unit>
        <trans-unit id="fcaf0a226eea82aa6f08b74f39f6e7fe0b3c1f36" translate="yes" xml:space="preserve">
          <source>flag is ignored if present.</source>
          <target state="translated">フラグがある場合は無視されます。</target>
        </trans-unit>
        <trans-unit id="a21a4bf4efddd3eb2fbde75f7b9def7cbd65bf63" translate="yes" xml:space="preserve">
          <source>flag that should be used. It is up to the Makefile to use it.</source>
          <target state="translated">フラグを使用します。これを使うかどうかはMakefile次第です。</target>
        </trans-unit>
        <trans-unit id="efc77c87583a7fd617b14c36ecb0631dce20754d" translate="yes" xml:space="preserve">
          <source>flag) set &lt;code&gt;$Storable::drop_utf8&lt;/code&gt; to some &lt;code&gt;TRUE&lt;/code&gt; value. This is a form of data loss, because with &lt;code&gt;$drop_utf8&lt;/code&gt; true, it becomes impossible to tell whether the original data was the Unicode string, or a series of bytes that happen to be valid utf8.</source>
          <target state="translated">フラグ） &lt;code&gt;$Storable::drop_utf8&lt;/code&gt; を &lt;code&gt;TRUE&lt;/code&gt; 値に設定します。これは、 &lt;code&gt;$drop_utf8&lt;/code&gt; trueの場合、元のデータがUnicode文字列であるか、偶然に有効なutf8である一連のバイトであるかを判別できなくなるため、データ損失の一種です。</target>
        </trans-unit>
        <trans-unit id="2e56274054bba73f6d3e20570a2b39606242abc1" translate="yes" xml:space="preserve">
          <source>flag) the file is marked for deletion when the program ends (equivalent to setting UNLINK to 1). The C</source>
          <target state="translated">フラグ)は、プログラムの終了時にファイルが削除されるようにマークされます(UNLINKを1に設定するのと同じです)。C</target>
        </trans-unit>
        <trans-unit id="b00964a74ab5b43dc149f6150f37132b8386710e" translate="yes" xml:space="preserve">
          <source>flag, described under &lt;a href=&quot;../perlre#Repeated-Patterns-Matching-a-Zero-length-Substring&quot;&gt;Repeated Patterns Matching a Zero-length Substring in perlre&lt;/a&gt;.</source>
          <target state="translated">フラグ&lt;a href=&quot;../perlre#Repeated-Patterns-Matching-a-Zero-length-Substring&quot;&gt;。perlreのゼロ長の部分文字列と一致する繰り返しパターン&lt;/a&gt;で説明しています。</target>
        </trans-unit>
        <trans-unit id="dc1eee3b91ad4bd2f95c8c0fe493b133b9aff43e" translate="yes" xml:space="preserve">
          <source>flag, described under &lt;a href=&quot;perlre#Repeated-Patterns-Matching-a-Zero-length-Substring&quot;&gt;Repeated Patterns Matching a Zero-length Substring in perlre&lt;/a&gt;.</source>
          <target state="translated">フラグ&lt;a href=&quot;perlre#Repeated-Patterns-Matching-a-Zero-length-Substring&quot;&gt;。perlreのゼロ長の部分文字列と一致する繰り返しパターン&lt;/a&gt;で説明しています。</target>
        </trans-unit>
        <trans-unit id="c16186badaffeb7e2d350479d5c4fe91fc0be2e1" translate="yes" xml:space="preserve">
          <source>flags</source>
          <target state="translated">flags</target>
        </trans-unit>
        <trans-unit id="26de20cb1b85911ac6ec9e2e151152c3f4733d9f" translate="yes" xml:space="preserve">
          <source>floating fixed string</source>
          <target state="translated">浮動固定文字列</target>
        </trans-unit>
        <trans-unit id="343bbce1cbdd91393b36ad12a1bc7218d23ffb41" translate="yes" xml:space="preserve">
          <source>floating point type, probably &lt;code&gt;double&lt;/code&gt; , possibly &lt;code&gt;long double&lt;/code&gt;</source>
          <target state="translated">浮動小数点型、おそらく &lt;code&gt;double&lt;/code&gt; 、おそらく &lt;code&gt;long double&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="44126a768ff9192a9ee983931608df1e5c034e7b" translate="yes" xml:space="preserve">
          <source>flock</source>
          <target state="translated">flock</target>
        </trans-unit>
        <trans-unit id="96a4d2949320fcaf0f3caed1725ec5433d5f2461" translate="yes" xml:space="preserve">
          <source>flock FILEHANDLE,OPERATION</source>
          <target state="translated">flock FILEHANDLE,OPERATION</target>
        </trans-unit>
        <trans-unit id="36043af19c6effa7847c37c0709793ab2007a3e9" translate="yes" xml:space="preserve">
          <source>flock(3)</source>
          <target state="translated">flock(3)</target>
        </trans-unit>
        <trans-unit id="3684c9d3c05e7bee19e2728c6a5b2bbccf0cd9c7" translate="yes" xml:space="preserve">
          <source>floor</source>
          <target state="translated">floor</target>
        </trans-unit>
        <trans-unit id="e4706359fc4117d0efea7adb012984601954e2af" translate="yes" xml:space="preserve">
          <source>flush</source>
          <target state="translated">flush</target>
        </trans-unit>
        <trans-unit id="fc2405cf259aa854f1f2dc9e6da77df5d94eab41" translate="yes" xml:space="preserve">
          <source>flush_cache</source>
          <target state="translated">flush_cache</target>
        </trans-unit>
        <trans-unit id="875c51b4de473db82e1886f2144c8c7bf937897b" translate="yes" xml:space="preserve">
          <source>fmt</source>
          <target state="translated">fmt</target>
        </trans-unit>
        <trans-unit id="bb0912ea11851ec2fa5e0d1adba64c0cbd18dbd5" translate="yes" xml:space="preserve">
          <source>fold (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07e409f50b9330ffac652ba4c4f73f76b9b7f935" translate="yes" xml:space="preserve">
          <source>folder for debug builds.</source>
          <target state="translated">フォルダーを使用してデバッグビルドを行います。</target>
        </trans-unit>
        <trans-unit id="8a5391014fcaf19d1b91a6097702ccf27de6f7b5" translate="yes" xml:space="preserve">
          <source>folder if you are doing a release build, else will be copied under</source>
          <target state="translated">フォルダにコピーされます。</target>
        </trans-unit>
        <trans-unit id="d8434826715d3b3aa19ffefdffadb122d01422d6" translate="yes" xml:space="preserve">
          <source>folder.</source>
          <target state="translated">folder.</target>
        </trans-unit>
        <trans-unit id="5c6a2f524b5f96abbe38eb30517335f603e77036" translate="yes" xml:space="preserve">
          <source>folder. Copy this to</source>
          <target state="translated">フォルダにコピーします。にコピーしてください。</target>
        </trans-unit>
        <trans-unit id="0f62951f01fbbdc2f334f6f708a16169257c87f4" translate="yes" xml:space="preserve">
          <source>folder. The Perl interpreter,</source>
          <target state="translated">フォルダーの中にあります。Perl インタプリタ。</target>
        </trans-unit>
        <trans-unit id="f7ac253b1bed9171deb0a7bf46da68b63af1e6cc" translate="yes" xml:space="preserve">
          <source>follow</source>
          <target state="translated">follow</target>
        </trans-unit>
        <trans-unit id="b57181192eaa9baeb7dd3aafb08a3a943a4e074b" translate="yes" xml:space="preserve">
          <source>follow_fast</source>
          <target state="translated">follow_fast</target>
        </trans-unit>
        <trans-unit id="951f120ff31d9ffa4990456740576c71f454fd6f" translate="yes" xml:space="preserve">
          <source>followed by</source>
          <target state="translated">続いて</target>
        </trans-unit>
        <trans-unit id="4642576d8432b870f7e95688217d211d2da42556" translate="yes" xml:space="preserve">
          <source>font</source>
          <target state="translated">font</target>
        </trans-unit>
        <trans-unit id="0beec7b5ea3f0fdbc95d0dd47f3c5bc275da8a33" translate="yes" xml:space="preserve">
          <source>foo</source>
          <target state="translated">foo</target>
        </trans-unit>
        <trans-unit id="8d10f19efa9f682548b227f4537ca1050fe33a49" translate="yes" xml:space="preserve">
          <source>foo.bar.h.baz</source>
          <target state="translated">foo.bar.h.baz</target>
        </trans-unit>
        <trans-unit id="49b0432386a90c0458da3d47b1e69334595bd34b" translate="yes" xml:space="preserve">
          <source>foo.bundle</source>
          <target state="translated">foo.bundle</target>
        </trans-unit>
        <trans-unit id="e55780e6340b6e110e51e79f077052cb086292a3" translate="yes" xml:space="preserve">
          <source>foo.c</source>
          <target state="translated">foo.c</target>
        </trans-unit>
        <trans-unit id="a03e598296581b4cdfea4347092749fd1693bae8" translate="yes" xml:space="preserve">
          <source>foo.cmd</source>
          <target state="translated">foo.cmd</target>
        </trans-unit>
        <trans-unit id="81dc712ebeb6a02772fe26cde104ddcd059404ea" translate="yes" xml:space="preserve">
          <source>foo.exe</source>
          <target state="translated">foo.exe</target>
        </trans-unit>
        <trans-unit id="b309277fe2201344a4f5289f1d5b5d6fe8c5c562" translate="yes" xml:space="preserve">
          <source>foo.o</source>
          <target state="translated">foo.o</target>
        </trans-unit>
        <trans-unit id="c358772eb83ee4237bb92ff1e8490bdd4a511ea8" translate="yes" xml:space="preserve">
          <source>foo.pl</source>
          <target state="translated">foo.pl</target>
        </trans-unit>
        <trans-unit id="a55ff34546a13f83af988e40a760750bd5a64245" translate="yes" xml:space="preserve">
          <source>foo.so</source>
          <target state="translated">foo.so</target>
        </trans-unit>
        <trans-unit id="17cdeaefa5cc6022481c824e15a47a7726f593dd" translate="yes" xml:space="preserve">
          <source>foo/bar</source>
          <target state="translated">foo/bar</target>
        </trans-unit>
        <trans-unit id="a578bd76951afb41ea2c3759cb3bf113d5a9b7af" translate="yes" xml:space="preserve">
          <source>foo/bar/baz.h</source>
          <target state="translated">foo/bar/baz.h</target>
        </trans-unit>
        <trans-unit id="5007e8ffb0ba7e490f79246c68965347b0827cd1" translate="yes" xml:space="preserve">
          <source>foo/bar/h/baz</source>
          <target state="translated">foo/bar/h/baz</target>
        </trans-unit>
        <trans-unit id="a2622f11215921f473ef9793cea9ef67805b92cd" translate="yes" xml:space="preserve">
          <source>foo\bar</source>
          <target state="translated">foo\bar</target>
        </trans-unit>
        <trans-unit id="43eef9a62abb8b1e1654f8a890aae054abffa82b" translate="yes" xml:space="preserve">
          <source>for</source>
          <target state="translated">for</target>
        </trans-unit>
        <trans-unit id="54776cf5a7624f916fd37968e9454399478c0c14" translate="yes" xml:space="preserve">
          <source>for 64 bit development: SUNWarcx, SUNWbtoox, SUNWdplx, SUNWscpux, SUNWsprox, SUNWtoox, SUNWlmsx, SUNWlmx, SUNWlibCx</source>
          <target state="translated">64ビット開発に対応しています。SUNWarcx、SUNWbtoox、SUNWdplx、SUNWscpux、SUNWsprox、SUNWtoox、SUNWlmsx、SUNWlmx、SUNWlibCx</target>
        </trans-unit>
        <trans-unit id="e47d318c2ed322ced9c09e05dcbe1a3eb4fdf11a" translate="yes" xml:space="preserve">
          <source>for &lt;code&gt;Acrobat&lt;/code&gt; are available on CPAN (may be for slightly older version of perl).</source>
          <target state="translated">以下のため &lt;code&gt;Acrobat&lt;/code&gt; CPAN（perlのの少し古いバージョンのためのものであってもよい）でご利用いただけます。</target>
        </trans-unit>
        <trans-unit id="3da00ab22cb8a6da839927fe6ba13e55e8ad73b1" translate="yes" xml:space="preserve">
          <source>for &lt;code&gt;Comments&lt;/code&gt; :</source>
          <target state="translated">以下のための &lt;code&gt;Comments&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c8db700fc65a880f879afdcda89f47e148072b89" translate="yes" xml:space="preserve">
          <source>for &lt;code&gt;Tk::Canvas&lt;/code&gt; , FILE defaults to &lt;code&gt;Canvas&lt;/code&gt; ).</source>
          <target state="translated">以下のため &lt;code&gt;Tk::Canvas&lt;/code&gt; にFILEのデフォルト &lt;code&gt;Canvas&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="47f15245bae49c5fc6f1914b7a024a041e39a03c" translate="yes" xml:space="preserve">
          <source>for FILEHANDLE, or -1 on error. FILEHANDLE may be an expression whose value gives the name of the actual filehandle. If FILEHANDLE is omitted, assumes the file last read.</source>
          <target state="translated">が FILEHANDLE の場合は -1、エラーの場合は -1 を指定します。FILEHANDLEには、実際のファイルハンドルの名前を表す式を指定することができます。FILEHANDLEが省略された場合は、最後に読み込まれたファイルを想定します。</target>
        </trans-unit>
        <trans-unit id="baed82a5e5eb7ea58d60737a409cefc98eb35ca4" translate="yes" xml:space="preserve">
          <source>for Perl manpages in &lt;code&gt;f:/perllib/man/man1/&lt;/code&gt; etc.</source>
          <target state="translated">&lt;code&gt;f:/perllib/man/man1/&lt;/code&gt; などのPerlマンページ用</target>
        </trans-unit>
        <trans-unit id="24ce755711aba974cc1f5a344fc92129ef43aa03" translate="yes" xml:space="preserve">
          <source>for a description of what CPAN is and where to get it if the previous link doesn't work for you.</source>
          <target state="translated">前のリンクがうまくいかない場合は、CPANとは何か、どこで手に入れることができるのかについての説明をご覧ください。</target>
        </trans-unit>
        <trans-unit id="7c7dcdb238f538ff8a21a887cb740dc9333c4d96" translate="yes" xml:space="preserve">
          <source>for a scalar piece of data that a class associates with an object. Other terms that have been used for this concept are &quot;object variable&quot;, &quot;(object) property&quot;, &quot;(object) attribute&quot; and more. Especially &quot;attribute&quot; has some currency among Perl programmer, but that clashes with the &lt;code&gt;attributes&lt;/code&gt; pragma. The term &quot;field&quot; also has some currency in this sense and doesn't seem to conflict with other Perl terminology.</source>
          <target state="translated">クラスがオブジェクトに関連付けるスカラーデータ。この概念に使用されている他の用語には、「オブジェクト変数」、「（オブジェクト）プロパティ」、「（オブジェクト）属性」などがあります。特に「属性」は、Perlプログラマーの間でいくらかの流通があり &lt;code&gt;attributes&lt;/code&gt; が、それは属性プラグマと衝突します。「フィールド」という用語もこの意味でいくつかの通貨を使用しており、他のPerlの用語と競合しないようです。</target>
        </trans-unit>
        <trans-unit id="b13d3db94c0a7e8e9629d1d7b85fc06c814ecf0f" translate="yes" xml:space="preserve">
          <source>for abbreviated and full length days of the week and months of the year,</source>
          <target state="translated">曜日と月の省略形と完全な長さの日を表示します。</target>
        </trans-unit>
        <trans-unit id="c903873c7a2ea3a537f2c88bf1bdea9d5746de1c" translate="yes" xml:space="preserve">
          <source>for actual working usage. Alternatively, we might be able to use a command line option such as -R</source>
          <target state="translated">のようなコマンドラインオプションを使用することもできます。あるいは、-R</target>
        </trans-unit>
        <trans-unit id="878a1026dad14bfef6edfae386949642f277900f" translate="yes" xml:space="preserve">
          <source>for all</source>
          <target state="translated">何れにしても</target>
        </trans-unit>
        <trans-unit id="274b2652ae7bc067d729059f1c2e3db00cc57492" translate="yes" xml:space="preserve">
          <source>for all values of X. They aren't POSIX threads, or DecThreads, or Java's Green threads, or Win32 threads. There are similarities, and the broad concepts are the same, but if you start looking for implementation details you're going to be either disappointed or confused. Possibly both.</source>
          <target state="translated">これらは POSIX スレッドでも DecThreads でもなく、Java の Green スレッドでも Win32 スレッドでもありません。似たようなものがあり、大まかな概念は同じですが、実装の詳細を探し始めると、失望するか混乱するかのどちらかになるでしょう。両方の可能性もあります。</target>
        </trans-unit>
        <trans-unit id="f74684ede1fa66e160d2cca9b02096fdcaee4bf5" translate="yes" xml:space="preserve">
          <source>for an easy way to declare most constants.)</source>
          <target state="translated">を使うと、ほとんどの定数を簡単に宣言できます)。</target>
        </trans-unit>
        <trans-unit id="a6326e4c99720b2fb6b674cb7cc01004c97bfc9c" translate="yes" xml:space="preserve">
          <source>for an example as to how it's currently done.</source>
          <target state="translated">を参照してください。</target>
        </trans-unit>
        <trans-unit id="11290c398260c6076287facecd00b44fb997d324" translate="yes" xml:space="preserve">
          <source>for an example of a situation that warrants the use of this flag.</source>
          <target state="translated">このフラグの使用を保証する状況の例としては</target>
        </trans-unit>
        <trans-unit id="b2fce9d5f88c10b2d2c37f293ac2e456d0a69869" translate="yes" xml:space="preserve">
          <source>for an example of how to use the &quot;eval exec&quot; trick to ask the shell to have Perl run your scripts on those older releases of Unix System Services.</source>
          <target state="translated">古いリリースの Unix System Services 上で Perl にスクリプトを実行させるための &quot;eval exec&quot; トリックの使い方の例をご覧ください。</target>
        </trans-unit>
        <trans-unit id="c8dae76bdacebbbe51a93daa67920deb3b244b0f" translate="yes" xml:space="preserve">
          <source>for an executable file having the name specified, with or without the</source>
          <target state="translated">の有無に関わらず、指定された名前の実行ファイルに対して</target>
        </trans-unit>
        <trans-unit id="d5fdb6811c3b6bac20cddd0e9137683feefd1851" translate="yes" xml:space="preserve">
          <source>for converting strings representing numbers in the respective bases into &lt;code&gt;NV&lt;/code&gt; s. Note that grok_atoUV() doesn't handle negative inputs, or leading whitespace (being purposefully strict).</source>
          <target state="translated">それぞれの基数の数値を表す文字列を &lt;code&gt;NV&lt;/code&gt; に変換します。grok_atoUV（）は負の入力や先行空白（意図的に厳密なもの）を処理しないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="e5c48c63c577e8787ac1145de50675a4cb7998fc" translate="yes" xml:space="preserve">
          <source>for cross-compilation (&quot;foreign&quot;</source>
          <target state="translated">クロスコンパイルのための</target>
        </trans-unit>
        <trans-unit id="451f78e555ef04f6e6031be9242accc951baa7f2" translate="yes" xml:space="preserve">
          <source>for details of an alternative to using these macros.</source>
          <target state="translated">を参照してください。</target>
        </trans-unit>
        <trans-unit id="f4a0096390f552f8cee0fe593153c235401c829c" translate="yes" xml:space="preserve">
          <source>for details on using G_EVAL.</source>
          <target state="translated">G_EVALの使用方法の詳細については</target>
        </trans-unit>
        <trans-unit id="f44cc3d49856296db60e43c79602664815fdf535" translate="yes" xml:space="preserve">
          <source>for details.</source>
          <target state="translated">を参照してください。</target>
        </trans-unit>
        <trans-unit id="49f1eaa8164a0c1f61ab9d895aae415adfde5745" translate="yes" xml:space="preserve">
          <source>for details. In contrast to &lt;code&gt;$!&lt;/code&gt; and &lt;code&gt;$^E&lt;/code&gt; , which are set only if error condition is detected, the variable &lt;code&gt;$?&lt;/code&gt; is set on each &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; or pipe &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt;, overwriting the old value. This is more like &lt;code&gt;$@&lt;/code&gt; , which on every &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval()&lt;/a&gt;&lt;/code&gt; is always set on failure and cleared on success.</source>
          <target state="translated">詳細については。 &lt;code&gt;$!&lt;/code&gt; とは対照的に！ &lt;code&gt;$^E&lt;/code&gt; 、およびエラー条件が検出された場合にのみ設定される変数 &lt;code&gt;$?&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;functions/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; またはパイプの &lt;code&gt;&lt;a href=&quot;functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; ごとに設定され、古い値を上書きします。これは &lt;code&gt;$@&lt;/code&gt; に似ており、すべての &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval()&lt;/a&gt;&lt;/code&gt; で常に失敗時に設定され、成功時にクリアされます。</target>
        </trans-unit>
        <trans-unit id="602c2ea1f44c1efa11e256323f871edef7a639c5" translate="yes" xml:space="preserve">
          <source>for details. Or better yet, you can just use the &lt;code&gt;POSIX::setsid()&lt;/code&gt; function, so you don't have to worry about process groups.</source>
          <target state="translated">詳細については。さらに良いことに、 &lt;code&gt;POSIX::setsid()&lt;/code&gt; 関数を使用するだけでよいので、プロセスグループについて心配する必要はありません。</target>
        </trans-unit>
        <trans-unit id="df9e7dec73b7a6fe5f78805c0238712b36bc459f" translate="yes" xml:space="preserve">
          <source>for each @modules.</source>
          <target state="translated">それぞれの@モジュールに対応しています。</target>
        </trans-unit>
        <trans-unit id="d4f1e1b06e620dd4d6129ea8bd32b231e67a48ff" translate="yes" xml:space="preserve">
          <source>for each indentation level.</source>
          <target state="translated">インデントレベルごとに</target>
        </trans-unit>
        <trans-unit id="2345a046dfb256a0d27b356b37be6ee410e69c0d" translate="yes" xml:space="preserve">
          <source>for each of the &lt;code&gt;CallSavedSub1&lt;/code&gt; lines.</source>
          <target state="translated">&lt;code&gt;CallSavedSub1&lt;/code&gt; 行ごとに。</target>
        </trans-unit>
        <trans-unit id="3ef13b2e1a61c700cbcb2d713c6f1cbe457113b9" translate="yes" xml:space="preserve">
          <source>for example.</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="5c7605979917c90c0e0333a7d81971b1b3943acc" translate="yes" xml:space="preserve">
          <source>for extensive documentation on writing manual pages if you've not done it before and aren't familiar with the conventions.</source>
          <target state="translated">マニュアルページの書き方については、これまでにやったことがなく、規約に慣れていない場合には、幅広いドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="0c5fd130bc0695bba66db67efc8ab89c76e57cea" translate="yes" xml:space="preserve">
          <source>for full description).</source>
          <target state="translated">を参照してください)。</target>
        </trans-unit>
        <trans-unit id="4a2c9af8b32a141189c69b05b099623bc08385eb" translate="yes" xml:space="preserve">
          <source>for further compilations.</source>
          <target state="translated">を参照してください。</target>
        </trans-unit>
        <trans-unit id="878f64ea18bd2bf7cad48c2c0b640c3362fa3d50" translate="yes" xml:space="preserve">
          <source>for further information. Please use &lt;code&gt;perlbug&lt;/code&gt; to submit a problem report in the event that you encounter difficulties.</source>
          <target state="translated">詳細については。問題が発生した場合は、 &lt;code&gt;perlbug&lt;/code&gt; を使用して問題レポートを送信してください。</target>
        </trans-unit>
        <trans-unit id="639595442e6a715ca16594e3931b0eacb3afe88f" translate="yes" xml:space="preserve">
          <source>for host miniperl. If you'll get an error that perl could not find Config.pm somewhere in building process this means something went wrong. Most probably you forgot to specify a cross-compilation when invoking miniperl.exe to Makefile.PL When building an extension for cross-compilation your command line should look like</source>
          <target state="translated">をホストminiperlにインストールしてください。もし、ビルドプロセスのどこかでPerlがConfig.pmを見つけられなかったというエラーが出たら、これは何かが間違っていたことを意味しています。ほとんどの場合、miniperl.exeをMakefile.PLに呼び出すときにクロスコンパイルを指定するのを忘れてしまったのではないでしょうか。 クロスコンパイルのための拡張機能をビルドするとき、コマンドラインは次のようになります。</target>
        </trans-unit>
        <trans-unit id="326d317f014c2a481ac4fa01a7b9c6c2c0f9245e" translate="yes" xml:space="preserve">
          <source>for how to untaint capture variables if that's something you'd like your engine to do as well.</source>
          <target state="translated">を参照してください。</target>
        </trans-unit>
        <trans-unit id="8f022b4abbeaaf15b0b1cc6b32077507ea8248cb" translate="yes" xml:space="preserve">
          <source>for input as UTF-8.</source>
          <target state="translated">UTF-8で入力する場合は、UTF-8で入力します。</target>
        </trans-unit>
        <trans-unit id="298f331649e9329989508ce53e22477f8f925ae1" translate="yes" xml:space="preserve">
          <source>for instrumentation. You can use these in conjunction with kernel-level probes, as well as probes from other providers such as MySQL, in order to diagnose software defects, or even just your application's bottlenecks.</source>
          <target state="translated">インスツルメンテーション用に使用します。カーネルレベルのプローブや MySQL のような他のプロバイダのプローブと組み合わせて使用することで、ソフトウェアの欠陥やアプリケーションのボトルネックを診断することができます。</target>
        </trans-unit>
        <trans-unit id="f065cbd812ee0274ceb1abf40eb86e7bc7a1d6cd" translate="yes" xml:space="preserve">
          <source>for libraries &amp;amp; headers: SUNWhea, SUNWarc, SUNWlibm, SUNWlibms, SUNWdfbh, SUNWcg6h, SUNWxwinc</source>
          <target state="translated">ライブラリとヘッダーの場合：SUNWhea、SUNWarc、SUNWlibm、SUNWlibms、SUNWdfbh、SUNWcg6h、SUNWxwinc</target>
        </trans-unit>
        <trans-unit id="846687f9c899e1bde0461c06038812b8d51bc3d3" translate="yes" xml:space="preserve">
          <source>for libraries &amp;amp; headers: SUNWolinc</source>
          <target state="translated">ライブラリおよびヘッダー用：SUNWolinc</target>
        </trans-unit>
        <trans-unit id="c24d87f9ada82af3b55a4817761e5af71ae7a6cb" translate="yes" xml:space="preserve">
          <source>for miniperl) This is very high-level code, enough to fit on a single screen, and it resembles the code found in &lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt;; most of the real action takes place in</source>
          <target state="translated">miniperlの場合）これは非常に高レベルのコードであり、1つの画面に収まるほど十分であり、&lt;a href=&quot;perlembed&quot;&gt;perlembedに&lt;/a&gt;あるコードに似ています。実際のアクションのほとんどは、</target>
        </trans-unit>
        <trans-unit id="2d391c37be078da6e2845976b82454d298561380" translate="yes" xml:space="preserve">
          <source>for module authors.</source>
          <target state="translated">モジュールの作者のために。</target>
        </trans-unit>
        <trans-unit id="1fcbaea5e863a521bff8b1464ee0594a84a0e2e1" translate="yes" xml:space="preserve">
          <source>for more details).</source>
          <target state="translated">を参照してください)。</target>
        </trans-unit>
        <trans-unit id="0c48df59af2a998f43e95f84634da529279affe9" translate="yes" xml:space="preserve">
          <source>for more details.</source>
          <target state="translated">を参照してください。</target>
        </trans-unit>
        <trans-unit id="d7f3b13f7715e32880c76663ac7585af65bf0d16" translate="yes" xml:space="preserve">
          <source>for more info.</source>
          <target state="translated">詳細はこちらをご覧ください。</target>
        </trans-unit>
        <trans-unit id="c69ab1cb02a10c8a9d2ad711fd82fa9b9e14cca2" translate="yes" xml:space="preserve">
          <source>for more information about the available constants. (Often this means having to look directly at the</source>
          <target state="translated">を参照してください。を直接見る必要があります (多くの場合、これは</target>
        </trans-unit>
        <trans-unit id="7b2b669774e11aa1ed1e27f62ae6bbf8a24d867e" translate="yes" xml:space="preserve">
          <source>for more information on the &lt;code&gt;=encoding&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;=encoding&lt;/code&gt; コマンドの詳細については。</target>
        </trans-unit>
        <trans-unit id="b0cf8d3b30f6f61f1cfb2f257448bf0165378abc" translate="yes" xml:space="preserve">
          <source>for more information.</source>
          <target state="translated">をご覧ください。</target>
        </trans-unit>
        <trans-unit id="2fd5c94d77ccf784226ec8bee81c31d1968a5110" translate="yes" xml:space="preserve">
          <source>for practically the complete duration of the program. This means that control may</source>
          <target state="translated">プログラムの実質的な全期間に亘って。これは、制御が</target>
        </trans-unit>
        <trans-unit id="474c16ce52411aa00554c876eb0e4e5891e1b4a5" translate="yes" xml:space="preserve">
          <source>for probing for various netdb types.</source>
          <target state="translated">様々な netdb のタイプをプロービングするための</target>
        </trans-unit>
        <trans-unit id="dc8d3eaa2198481b88034b48db4a9270c4343fca" translate="yes" xml:space="preserve">
          <source>for reading and writing</source>
          <target state="translated">読み書き用</target>
        </trans-unit>
        <trans-unit id="4762c0079c04663a871fdade52df3b6162287845" translate="yes" xml:space="preserve">
          <source>for some time. See below for more on that.</source>
          <target state="translated">しばらくは それについては以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="cf01bbc29196df439f25d3ef824db778ec5510cb" translate="yes" xml:space="preserve">
          <source>for specifics) and use &lt;code&gt;pwd_mkdb(8)&lt;/code&gt; to install it (see</source>
          <target state="translated">詳細については、 &lt;code&gt;pwd_mkdb(8)&lt;/code&gt; を使用してインストールしてください（「</target>
        </trans-unit>
        <trans-unit id="108b5647ed4cb2b9b0148575693c396fc3914da2" translate="yes" xml:space="preserve">
          <source>for spherical movement.</source>
          <target state="translated">球体運動のための</target>
        </trans-unit>
        <trans-unit id="874931c046e5a8f882c74e3526dc996e0990cf93" translate="yes" xml:space="preserve">
          <source>for testing</source>
          <target state="translated">試験用</target>
        </trans-unit>
        <trans-unit id="3ba2a894777c86469a866202e16daeca36d9484d" translate="yes" xml:space="preserve">
          <source>for that character. The exceptions are platforms where the legacy encoding is some variant of EBCDIC rather than a superset of ASCII; see &lt;a href=&quot;perlebcdic&quot;&gt;perlebcdic&lt;/a&gt;.</source>
          <target state="translated">そのキャラクターのために。例外は、レガシーエンコーディングがASCIIのスーパーセットではなくEBCDICのバリアントであるプラットフォームです。&lt;a href=&quot;perlebcdic&quot;&gt;perlebcdicを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="42b7dedca3b5fb11a2ce7cfbadab151b80140e4e" translate="yes" xml:space="preserve">
          <source>for the Japanese Emperor eras (naturally only defined under Japanese locales).</source>
          <target state="translated">日本の天皇の時代のために(当然日本の地域でのみ定義されています)。</target>
        </trans-unit>
        <trans-unit id="cf1c035251bdae072950dcad3f5471b9244d6444" translate="yes" xml:space="preserve">
          <source>for the affirmative and negative responses and expressions, and</source>
          <target state="translated">肯定的な反応や否定的な反応や表現に対して</target>
        </trans-unit>
        <trans-unit id="dfd883a9aeb77d2a58c426faa0cef9dfd6ffe410" translate="yes" xml:space="preserve">
          <source>for the benefit of any naughty C extension modules that you might want to build later which explicitly reference &quot;lib&quot; rather than taking their value from $Config{ar}.</source>
          <target state="translated">の値を $Config{ar}から取得するのではなく、明示的に &quot;lib&quot; を参照するような、後から作りたいと思うようないたずらな C 拡張モジュールがあった場合のために。</target>
        </trans-unit>
        <trans-unit id="2def7a3c1ac551fd0e8523f9dbae576c74eb0c67" translate="yes" xml:space="preserve">
          <source>for the character code set being used (such as &quot;ISO8859-1&quot;, &quot;cp850&quot;, &quot;koi8-r&quot;, &quot;sjis&quot;, &quot;utf8&quot;, etc.), for the currency string, for the radix character used between the integer and the fractional part of decimal numbers (yes, this is redundant with POSIX::localeconv())</source>
          <target state="translated">使用する文字コードセット (例えば &quot;ISO8859-1&quot;,&quot;cp850&quot;,&quot;koi8-r&quot;,&quot;sjis&quot;,&quot;utf8&quot; など)、通貨文字列、整数部と小数部の間で使用する基数文字 (はい、これは POSIX::localeconv()と重複しています)を指定します。</target>
        </trans-unit>
        <trans-unit id="9474a97c709d5e6cd1b78699a88e5f8eca21395c" translate="yes" xml:space="preserve">
          <source>for the characters, like &quot;uppercase&quot; or &quot;lowercase&quot;, &quot;decimal digit&quot;, or &quot;punctuation&quot;; these properties are independent of the names of the characters. Furthermore, various operations on the characters like uppercasing, lowercasing, and collating (sorting) are defined.</source>
          <target state="translated">大文字、小文字、小数点以下の桁数、句読点など、文字の名前とは独立したプロパティを定義しています。さらに、大文字、小文字、照合(ソート)など、文字に対する様々な操作が定義されています。</target>
        </trans-unit>
        <trans-unit id="7f8ac04edc321591b031f5d6fd19d0fcda170cc8" translate="yes" xml:space="preserve">
          <source>for the date-time, date, and time formats used by the strftime() function (see &lt;a href=&quot;../posix&quot;&gt;POSIX&lt;/a&gt;)</source>
          <target state="translated">strftime（）関数で使用される日付、時刻、日付、および時刻の形式（&lt;a href=&quot;../posix&quot;&gt;POSIXを&lt;/a&gt;参照）</target>
        </trans-unit>
        <trans-unit id="12139071d0e1448dcd4c54069998b8f675f56bf0" translate="yes" xml:space="preserve">
          <source>for the default value.</source>
          <target state="translated">をデフォルト値に設定します。</target>
        </trans-unit>
        <trans-unit id="480309624764453319c3017621265516c970d7a3" translate="yes" xml:space="preserve">
          <source>for the desired language translation. If the &lt;code&gt;POD2::&amp;lt;language_code&amp;gt;&lt;/code&gt; package isn't installed in your system, the switch is ignored. All available translation packages are to be found under the &lt;code&gt;POD2::&lt;/code&gt; namespace. See &lt;a href=&quot;http://search.cpan.org/perldoc/POD2::IT&quot;&gt;POD2::IT&lt;/a&gt; (or &lt;a href=&quot;http://search.cpan.org/perldoc/POD2::FR&quot;&gt;POD2::FR&lt;/a&gt;) to see how to create new localized &lt;code&gt;POD2::*&lt;/code&gt; documentation packages and integrate them into &lt;a href=&quot;pod/perldoc&quot;&gt;Pod::Perldoc&lt;/a&gt;.</source>
          <target state="translated">希望する言語の翻訳。場合 &lt;code&gt;POD2::&amp;lt;language_code&amp;gt;&lt;/code&gt; パッケージがシステムにインストールされていない、スイッチは無視されます。利用可能なすべての翻訳パッケージは、 &lt;code&gt;POD2::&lt;/code&gt; 名前空間の下にあります。新しいローカライズされた &lt;code&gt;POD2::*&lt;/code&gt; ドキュメントパッケージを作成して&lt;a href=&quot;pod/perldoc&quot;&gt;Pod :: &lt;/a&gt;Perldocに統合する方法については、&lt;a href=&quot;http://search.cpan.org/perldoc/POD2::IT&quot;&gt;POD2 :: IT&lt;/a&gt;（または&lt;a href=&quot;http://search.cpan.org/perldoc/POD2::FR&quot;&gt;POD2 :: FR&lt;/a&gt;）を参照してください。</target>
        </trans-unit>
        <trans-unit id="bc43617370e4adca632eb5007eea754efd1e1955" translate="yes" xml:space="preserve">
          <source>for the details.</source>
          <target state="translated">を参照してください。</target>
        </trans-unit>
        <trans-unit id="5c100cb3478538e0537eb9bdb5d78dc28be0bda8" translate="yes" xml:space="preserve">
          <source>for the extension. Then, rebuild</source>
          <target state="translated">延長のために。その後、再構築</target>
        </trans-unit>
        <trans-unit id="81b4d501893288034e99580c3b8ceeae3834297b" translate="yes" xml:space="preserve">
          <source>for the layer below; unlikely to be useful on its own in the global PERLIO environment variable. You perhaps were thinking of &lt;code&gt;:crlf:bytes&lt;/code&gt; or &lt;code&gt;:perlio:bytes&lt;/code&gt;.</source>
          <target state="translated">下のレイヤー; グローバルPERLIO環境変数では、それ自体で役立つとは考えられません。あなたはおそらく &lt;code&gt;:crlf:bytes&lt;/code&gt; または &lt;code&gt;:perlio:bytes&lt;/code&gt; を考えていました。</target>
        </trans-unit>
        <trans-unit id="31598128c6734a648971884730baa74ab197e0a9" translate="yes" xml:space="preserve">
          <source>for the list of such flags. For allowed 0 length strings, this function returns 0; for allowed overlong sequences, the computed code point is returned; for all other allowed malformations, the Unicode REPLACEMENT CHARACTER is returned, as these have no determinable reasonable value.</source>
          <target state="translated">このようなフラグのリストを参照してください。許容される長さ0の文字列に対しては、この関数は0を返します。 許容される長すぎるシーケンスに対しては、計算されたコードポイントが返されます。</target>
        </trans-unit>
        <trans-unit id="ae1de5d5c8ebc50653a4ba5ecdfeb813b535fc33" translate="yes" xml:space="preserve">
          <source>for the locales for which it makes sense to have ante meridiem and post meridiem time formats,</source>
          <target state="translated">子午線前と子午線後の時間フォーマットを持つことが理にかなっているロケールのために。</target>
        </trans-unit>
        <trans-unit id="65916440ef8aba4e67509fc99a78c66a542123a7" translate="yes" xml:space="preserve">
          <source>for the tied array associated with object</source>
          <target state="translated">オブジェクトに関連付けられた紐付き配列に対して</target>
        </trans-unit>
        <trans-unit id="b8d08c215e44cbcda8cb3f64c4aa60ae12f2e7fd" translate="yes" xml:space="preserve">
          <source>for the tied hash</source>
          <target state="translated">タイドハッシュのために</target>
        </trans-unit>
        <trans-unit id="04a3e35b7cadbb4fa307c9bd46313045a9957d7f" translate="yes" xml:space="preserve">
          <source>for the value of a constant that can't be determined because it was optimized away (mnemonic: this happens when a constant is used in &lt;b&gt;v&lt;/b&gt;oid context). The end of the string is marked by a period. The string should be a valid perl expression, generally a constant. Note that unless it's a number, it probably needs to be quoted, and on a command line quotes need to be protected from the shell. Some conventional values include 0, 1, 42, '', 'foo', and 'Useless use of constant omitted' (which may need to be &lt;b&gt;-sv&quot;'Useless use of constant omitted'.&quot;&lt;/b&gt; or something similar depending on your shell). The default is '???'. If you're using B::Deparse on a module or other file that's require'd, you shouldn't use a value that evaluates to false, since the customary true constant at the end of a module will be in void context when the file is compiled as a main program.</source>
          <target state="translated">それが離れて最適化されたため、決定できない一定の値を（ニーモニック：定数で使用される場合に発生&lt;b&gt;V&lt;/b&gt; OIDコンテキスト）。文字列の終わりはピリオドでマークされています。文字列は有効なperl式、通常は定数でなければなりません。数値でない限り、おそらく引用符で囲む必要があり、コマンドラインでは引用符をシェルから保護する必要があることに注意してください。従来の値には、0、1、42、 ''、 'foo'、および '定数の省略の無用な使用'（&lt;b&gt;-sv &quot;'&lt;/b&gt;不要な定数の無用の使用'が必要な場合があり&lt;b&gt;ます。&lt;/b&gt;またはあなたのシェルに応じて同様の何か）。デフォルトは「???」です。必要なモジュールまたはその他のファイルでB :: Deparseを使用している場合、モジュールの最後にある通常のtrue定数は無効なコンテキストになるため、falseと評価される値を使用しないでください。ファイルはメインプログラムとしてコンパイルされます。</target>
        </trans-unit>
        <trans-unit id="4d304cdb150be232005808f70e540581c857f55c" translate="yes" xml:space="preserve">
          <source>for their bug reports, suggestions and contributions.</source>
          <target state="translated">は、バグレポート、提案、貢献のためのものです。</target>
        </trans-unit>
        <trans-unit id="263df7720c87aa7975d1a051e824b09fcbfac2ed" translate="yes" xml:space="preserve">
          <source>for their internal state. This means that</source>
          <target state="translated">は、それらの内部状態に対して これは、以下のことを意味します。</target>
        </trans-unit>
        <trans-unit id="46a9e41fa026c134069dec1a30250ea2782c75bc" translate="yes" xml:space="preserve">
          <source>for this purpose:</source>
          <target state="translated">この目的のために</target>
        </trans-unit>
        <trans-unit id="0b2d94c194600f5de75068077801a3da4a4d3109" translate="yes" xml:space="preserve">
          <source>for tools (sccs, lex, yacc, make, nm, truss, ld, as): SUNWbtool, SUNWsprot, SUNWtoo</source>
          <target state="translated">ツール用 (sccs,lex,yacc,make,nm,truss,ld,as)。SUNWbtool,SUNWsprot,SUNWtoo</target>
        </trans-unit>
        <trans-unit id="44f6691b11d41c6edc6a94eec7bd405298f470f1" translate="yes" xml:space="preserve">
          <source>for usage details. You may also need to use &lt;code&gt;dVAR&lt;/code&gt; in your coding to &quot;declare the global variables&quot; when you are using them. dTHX does this for you automatically.</source>
          <target state="translated">使用法の詳細については。また、コードで &lt;code&gt;dVAR&lt;/code&gt; を使用して、「グローバル変数を宣言する」必要がある場合もあります。dTHXはこれを自動的に行います。</target>
        </trans-unit>
        <trans-unit id="7fdb1518c76508a89c14f30cb635409afa4fae85" translate="yes" xml:space="preserve">
          <source>for what is done during a call to Perl function foo(). To understand what is going on here, one can add a CODE section to this XSUB:</source>
          <target state="translated">Perl の関数 foo()の呼び出し中に何が行われているかを示すために ここで何が行われているかを理解するために、このXSUBにCODEセクションを追加することができます。</target>
        </trans-unit>
        <trans-unit id="58cfb1267bae74a5c7c0bcac4c7ff27de63088c7" translate="yes" xml:space="preserve">
          <source>for years:</source>
          <target state="translated">何年も前から</target>
        </trans-unit>
        <trans-unit id="8cb93439d2b0953ea28618ab23966a9f0bf5f0bf" translate="yes" xml:space="preserve">
          <source>for you on the fly. In fact, if you have a working DynaLoader then there is rarely any need to link in any other extensions statically.</source>
          <target state="translated">にリンクする必要があります。実際、DynaLoaderが動作していれば、他の拡張機能を静的にリンクする必要はほとんどありません。</target>
        </trans-unit>
        <trans-unit id="796040328ead738133e75012e8896869c6e0cade" translate="yes" xml:space="preserve">
          <source>for you, if you're running setgid.</source>
          <target state="translated">setgidを実行している場合は、あなたのために</target>
        </trans-unit>
        <trans-unit id="062b0bd80d39fb0a658384b8d8707fa3571299f6" translate="yes" xml:space="preserve">
          <source>forbid</source>
          <target state="translated">forbid</target>
        </trans-unit>
        <trans-unit id="3391e85ec5e4d13a5f747135612472a0a9b71169" translate="yes" xml:space="preserve">
          <source>force the argument into the integer format. This is applicable to the third and fourth arguments of &lt;code&gt;&lt;a href=&quot;functions/sysread&quot;&gt;sysread&lt;/a&gt;&lt;/code&gt;, for example.</source>
          <target state="translated">引数を整数形式に強制します。これは、たとえば &lt;code&gt;&lt;a href=&quot;functions/sysread&quot;&gt;sysread&lt;/a&gt;&lt;/code&gt; の 3番目と4番目の引数に適用されます。</target>
        </trans-unit>
        <trans-unit id="99e062511c492e2e0b11386f2900b864c6f2c3d6" translate="yes" xml:space="preserve">
          <source>force the argument into the string format. For example, this is applicable to &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt; &quot;%s&quot;, $value&lt;/code&gt; .</source>
          <target state="translated">引数を強制的に文字列形式にします。たとえば、これは &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt; &quot;%s&quot;, $value&lt;/code&gt; 適用されます。</target>
        </trans-unit>
        <trans-unit id="dc4d854401119f472311f5a577a6b77a37d830da" translate="yes" xml:space="preserve">
          <source>force_title</source>
          <target state="translated">force_title</target>
        </trans-unit>
        <trans-unit id="54e98d45ac70c3f4b57ae9fdd4d74b044b3e8b7f" translate="yes" xml:space="preserve">
          <source>forced</source>
          <target state="translated">forced</target>
        </trans-unit>
        <trans-unit id="d400233093bac676f464f89c6ce351493d60026e" translate="yes" xml:space="preserve">
          <source>forcefully breaking the infinite loop</source>
          <target state="translated">強引に無限ループを断ち切る</target>
        </trans-unit>
        <trans-unit id="ac0e479304d9098927a4b0539e3256679607c800" translate="yes" xml:space="preserve">
          <source>forces arguments to integer format. Also shift operations internally use signed integers rather than the default unsigned.</source>
          <target state="translated">は、引数を強制的に整数形式にします。また、シフト操作は内部的にデフォルトの符号なしではなく符号付き整数を使用します。</target>
        </trans-unit>
        <trans-unit id="4d3e8614703ea126434cc11d59e3c7a70c66d624" translate="yes" xml:space="preserve">
          <source>foreach</source>
          <target state="translated">foreach</target>
        </trans-unit>
        <trans-unit id="06d4da32e397df3c8c3ebd7f6595b2f5e12a518d" translate="yes" xml:space="preserve">
          <source>forgiving</source>
          <target state="translated">forgiving</target>
        </trans-unit>
        <trans-unit id="3f673f2a8e0aacb6d0fa4504233f4f284e4a1b4c" translate="yes" xml:space="preserve">
          <source>fork</source>
          <target state="translated">fork</target>
        </trans-unit>
        <trans-unit id="589899c3bf863b841f4664b2c7d1817d700d6bc2" translate="yes" xml:space="preserve">
          <source>fork()</source>
          <target state="translated">fork()</target>
        </trans-unit>
        <trans-unit id="bbd43fe1ecf578b461dad22a438e50427ecc01ff" translate="yes" xml:space="preserve">
          <source>fork() and pipe()</source>
          <target state="translated">フォーク()とパイプ()</target>
        </trans-unit>
        <trans-unit id="096f12472578f5aabab4f4719faf559f0582702d" translate="yes" xml:space="preserve">
          <source>fork() failures in io_* tests</source>
          <target state="translated">io_*テストでの fork()の失敗</target>
        </trans-unit>
        <trans-unit id="87be26f61c8a194cb66f6181213ad17aff024860" translate="yes" xml:space="preserve">
          <source>form of open():</source>
          <target state="translated">open()の形式を使用しています。</target>
        </trans-unit>
        <trans-unit id="785987648f85190cfde9eadc69fc7c46fe8a7433" translate="yes" xml:space="preserve">
          <source>format</source>
          <target state="translated">format</target>
        </trans-unit>
        <trans-unit id="9b645322abcc75a4acb089ae69685c972d102a9f" translate="yes" xml:space="preserve">
          <source>format letter is only useful with &lt;code&gt;A&lt;/code&gt; , &lt;code&gt;a&lt;/code&gt; , or &lt;code&gt;Z&lt;/code&gt; . Packing with a</source>
          <target state="translated">書式文字は &lt;code&gt;A&lt;/code&gt; 、 &lt;code&gt;a&lt;/code&gt; 、または &lt;code&gt;Z&lt;/code&gt; でのみ役立ちます。とのパッキング</target>
        </trans-unit>
        <trans-unit id="3d20fb07de7fbf6f9c8df23996b2094eb16b597b" translate="yes" xml:space="preserve">
          <source>format parameter index</source>
          <target state="translated">フォーマットパラメタインデックス</target>
        </trans-unit>
        <trans-unit id="87177a034f60fb15dc047635c88804903860a11e" translate="yes" xml:space="preserve">
          <source>format to</source>
          <target state="translated">形式にする</target>
        </trans-unit>
        <trans-unit id="9e3a04775b33419624b19cafdd0742bcafef34ff" translate="yes" xml:space="preserve">
          <source>format, and produces a typeset PostScript or text file of the whole lot.</source>
          <target state="translated">フォーマットを使用して、タイプセットされたPostScriptまたはテキストファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="3ca8e680636aad98fc7b6611122bb8d5e883c253" translate="yes" xml:space="preserve">
          <source>format, and to Extended Attributes.</source>
          <target state="translated">形式、および拡張属性に対応しています。</target>
        </trans-unit>
        <trans-unit id="a4253df3a92fb7bf74addafa02b573ba9fe49b6a" translate="yes" xml:space="preserve">
          <source>format. If you have EMX docs installed correctly, you can follow library links (you need to have &lt;code&gt;view emxbook&lt;/code&gt; working by setting &lt;code&gt;EMXBOOK&lt;/code&gt; environment variable as it is described in EMX docs).</source>
          <target state="translated">フォーマット。EMXドキュメントが正しくインストールされている場合は、ライブラリリンクをたどることができます（EMXドキュメントで説明されているように、 &lt;code&gt;EMXBOOK&lt;/code&gt; 環境変数を設定して &lt;code&gt;view emxbook&lt;/code&gt; 機能させる必要があります）。</target>
        </trans-unit>
        <trans-unit id="36774fa84e510be0a6b884a84feb185e6372a75a" translate="yes" xml:space="preserve">
          <source>format: run one of</source>
          <target state="translated">形式:いずれかを実行</target>
        </trans-unit>
        <trans-unit id="b2195f1cc93ce65a93e2dad09a2cac4c128ba02f" translate="yes" xml:space="preserve">
          <source>formatname</source>
          <target state="translated">formatname</target>
        </trans-unit>
        <trans-unit id="9ed669f6c43c499eec9e3ef7f607d986990fa2c8" translate="yes" xml:space="preserve">
          <source>formatnames</source>
          <target state="translated">formatnames</target>
        </trans-unit>
        <trans-unit id="2ce12ec02ae86424bb052211552a086509094dd2" translate="yes" xml:space="preserve">
          <source>formatters</source>
          <target state="translated">formatters</target>
        </trans-unit>
        <trans-unit id="2a197b6192fc35e400c21f05804d35d5bcffeb7d" translate="yes" xml:space="preserve">
          <source>formline</source>
          <target state="translated">formline</target>
        </trans-unit>
        <trans-unit id="69bd16eb340f99e341d2515a68b5f2918baa5f8c" translate="yes" xml:space="preserve">
          <source>formline PICTURE,LIST</source>
          <target state="translated">formline PICTURE,LIST</target>
        </trans-unit>
        <trans-unit id="b7d22c38f54715eba1324c325c9cfbb25521e5e9" translate="yes" xml:space="preserve">
          <source>found cannot be interpreted as a character entity.</source>
          <target state="translated">を文字実体として解釈することはできません。</target>
        </trans-unit>
        <trans-unit id="3f1a166b0b0b51f2bb4def6be2ba7cd9ef811619" translate="yes" xml:space="preserve">
          <source>fpossize.U</source>
          <target state="translated">fpossize.U</target>
        </trans-unit>
        <trans-unit id="d5a491512da658ab80ef05608b149c99f218023b" translate="yes" xml:space="preserve">
          <source>fpostype.U</source>
          <target state="translated">fpostype.U</target>
        </trans-unit>
        <trans-unit id="1eba50aa419e5333f1c6f59c429f205f1fd9aaa0" translate="yes" xml:space="preserve">
          <source>fragment of code built on top of the reusable modules. In these cases the application could invoked as:</source>
          <target state="translated">再利用可能なモジュールの上に構築されたコードの断片です。このような場合、アプリケーションは</target>
        </trans-unit>
        <trans-unit id="31017a722665e4afce586950f42944a6d331dabf" translate="yes" xml:space="preserve">
          <source>fred</source>
          <target state="translated">fred</target>
        </trans-unit>
        <trans-unit id="4ff88aaddbd209d8026924c2cc2836b408698823" translate="yes" xml:space="preserve">
          <source>free</source>
          <target state="translated">free</target>
        </trans-unit>
        <trans-unit id="e08a4420583245434ff235985ea31741d3ac187f" translate="yes" xml:space="preserve">
          <source>freed, although its type is set to all 1's so that it won't inadvertently be assumed to be live during global destruction etc. This function should only be called when REFCNT is zero. Most of the time you'll want to call &lt;code&gt;sv_free()&lt;/code&gt; (or its macro wrapper &lt;code&gt;SvREFCNT_dec&lt;/code&gt; ) instead.</source>
          <target state="translated">解放されましたが、そのタイプはすべて1に設定されていますが、グローバルな破壊などの間に誤ってライブであると想定されません。この関数は、REFCNTがゼロの場合にのみ呼び出す必要があります。ほとんどの場合、代わりに &lt;code&gt;sv_free()&lt;/code&gt; （またはそのマクロラッパー &lt;code&gt;SvREFCNT_dec&lt;/code&gt; ）を呼び出します。</target>
        </trans-unit>
        <trans-unit id="0b1e95cfd9775191a7224d0a218ae79187e80c1d" translate="yes" xml:space="preserve">
          <source>from</source>
          <target state="translated">from</target>
        </trans-unit>
        <trans-unit id="e915b1c2dc4b7b924f40f428d6d33f0636034739" translate="yes" xml:space="preserve">
          <source>from &lt;a href=&quot;http://www.cygwin.com/setup.exe&quot;&gt;http://www.cygwin.com/setup.exe&lt;/a&gt; to install it.</source>
          <target state="translated">&lt;a href=&quot;http://www.cygwin.com/setup.exe&quot;&gt;http://www.cygwin.com/setup.exe&lt;/a&gt;それをインストールします。</target>
        </trans-unit>
        <trans-unit id="3dc6963c76b87bb16e2818e8e03da405c8e30fc1" translate="yes" xml:space="preserve">
          <source>from &lt;code&gt;LIBPATH&lt;/code&gt; (I do not know whether &lt;code&gt;LIBPATHSTRICT&lt;/code&gt; affects this case).</source>
          <target state="translated">&lt;code&gt;LIBPATH&lt;/code&gt; から（ &lt;code&gt;LIBPATHSTRICT&lt;/code&gt; がこのケースに影響するかどうかはわかりません）。</target>
        </trans-unit>
        <trans-unit id="1633c8c5a5e3cf5c00184e1d081fc1108247a6c2" translate="yes" xml:space="preserve">
          <source>from &lt;code&gt;LIBPATH&lt;/code&gt; may affect</source>
          <target state="translated">&lt;code&gt;LIBPATH&lt;/code&gt; 影響を与える可能性があり</target>
        </trans-unit>
        <trans-unit id="18d1bed07b829a29a8257b709ea1fd79c8739f99" translate="yes" xml:space="preserve">
          <source>from NetWare folder on a WinNT command prompt. This will copy the binaries and module files onto the NetWare server under</source>
          <target state="translated">をWinNTコマンドプロンプトでNetWareフォルダから実行します。これにより、バイナリとモジュールファイルが</target>
        </trans-unit>
        <trans-unit id="1081c08286220c354d0ebc4d6abe9317eda48564" translate="yes" xml:space="preserve">
          <source>from Perl's internal form into</source>
          <target state="translated">Perlの内部形式から</target>
        </trans-unit>
        <trans-unit id="b13279498c6a3aadf46ecbe4a4b6157040f9b114" translate="yes" xml:space="preserve">
          <source>from a DTrace action.</source>
          <target state="translated">DTraceのアクションから。</target>
        </trans-unit>
        <trans-unit id="751a6c071398c84e885916adc1ea335570ad1404" translate="yes" xml:space="preserve">
          <source>from a text-mode window is possible too, I have seen cases when this causes degradation of the system stability. Using</source>
          <target state="translated">テキストモードのウィンドウからも可能ですが、システムの安定性が低下するケースを見たことがあります。このような場合には</target>
        </trans-unit>
        <trans-unit id="69035dd795cbff28e9d3525c6439ccb960983f81" translate="yes" xml:space="preserve">
          <source>from an account with write access to the directory entry for /tmp.</source>
          <target state="translated">のディレクトリエントリへの書き込みアクセス権を持つアカウントから</target>
        </trans-unit>
        <trans-unit id="383f2601102e24f4cc975d7d614c17ba5250f8a1" translate="yes" xml:space="preserve">
          <source>from commercial database interfaces to keyboard/screen control and running large web sites.</source>
          <target state="translated">市販のデータベースインターフェースからキーボード/スクリーンコントロール、大規模なWebサイトの運営まで。</target>
        </trans-unit>
        <trans-unit id="94b37d20c375ba2e1acedb7a084c21511f239a5c" translate="yes" xml:space="preserve">
          <source>from my program.</source>
          <target state="translated">私のプログラムから</target>
        </trans-unit>
        <trans-unit id="320fb0300271531cf5948889cd979cc9819a8971" translate="yes" xml:space="preserve">
          <source>from the Cygwin package ( &lt;a href=&quot;http://cygwin.com/&quot;&gt;http://cygwin.com/&lt;/a&gt; )</source>
          <target state="translated">Cygwinパッケージ（&lt;a href=&quot;http://cygwin.com/&quot;&gt;http://cygwin.com/&lt;/a&gt;）から</target>
        </trans-unit>
        <trans-unit id="aaa5e27f0399162e929e60ca6272dbe420e57ea9" translate="yes" xml:space="preserve">
          <source>from the EMX distribution are not suitable for multi-threaded compile (even single-threaded flavor of Perl uses multi-threaded C RTL, for compatibility with XFree86-OS/2). Get a corrected one from</source>
          <target state="translated">EMX ディストリビューションのものはマルチスレッドコンパイルには適していません (Perl のシングルスレッドフレーバでさえ、XFree86-OS/2 との互換性のためにマルチスレッド C RTL を使用しています)。修正されたものを</target>
        </trans-unit>
        <trans-unit id="368e88f7e6e301d2d015d0a32fae528fbc16d251" translate="yes" xml:space="preserve">
          <source>from the NetWare folder on a WinNT command prompt after building NetWare Perl by following steps given above. This will copy all the *.pm files and other required files. Documentation files are not copied. Thus one must first install Windows Perl, Then install NetWare Perl.</source>
          <target state="translated">上記の手順でNetWare Perlをビルドした後、WinNTのコマンドプロンプトでNetWareフォルダから これにより、すべての *.pm ファイルとその他の必要なファイルがコピーされます。ドキュメントファイルはコピーされません。したがって、まず Windows Perl をインストールしてから NetWare Perl をインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="f0c7fd69154be4a7257043ca8e01f99e6e700ca4" translate="yes" xml:space="preserve">
          <source>from the Perl library to another name and hack it to your heart's content. You'll then want to set your &lt;code&gt;PERL5DB&lt;/code&gt; environment variable to say something like this:</source>
          <target state="translated">Perlライブラリから別の名前に変更して、心ゆくまでハックしてください。次に、 &lt;code&gt;PERL5DB&lt;/code&gt; 環境変数を次のように設定します。</target>
        </trans-unit>
        <trans-unit id="dc293ca3b406befd7643093e6e174cebeca27ed6" translate="yes" xml:space="preserve">
          <source>from the SV</source>
          <target state="translated">SVから</target>
        </trans-unit>
        <trans-unit id="9ac48b1e7c71f43c08babd09bb785ae39be9a503" translate="yes" xml:space="preserve">
          <source>from the above location.</source>
          <target state="translated">上記の場所から</target>
        </trans-unit>
        <trans-unit id="bf59bf60ece3adc447ab0b7fbe1ccd9297732ddf" translate="yes" xml:space="preserve">
          <source>from the command line. Examples using various values of &lt;code&gt;n&lt;/code&gt; are shown to give you a feel for the difference between settings. Long though it may be, this is not a complete listing, but only excerpts.</source>
          <target state="translated">コマンドラインから。 &lt;code&gt;n&lt;/code&gt; のさまざまな値を使用した例は、設定間の違いを感じさせるために示されています。長くなるかもしれませんが、これは完全なリストではなく、抜粋です。</target>
        </trans-unit>
        <trans-unit id="81deb62a86562bdf464092e6866a1a2081aadce7" translate="yes" xml:space="preserve">
          <source>from the functions of the layer</source>
          <target state="translated">レイヤーの機能から</target>
        </trans-unit>
        <trans-unit id="b3356f1f8d9f7845992bcf403da5889475561f1b" translate="yes" xml:space="preserve">
          <source>from the parser.</source>
          <target state="translated">をパーサから取得します。</target>
        </trans-unit>
        <trans-unit id="6c945449166ba4b1f2b81c533c7eaaa29d7f8028" translate="yes" xml:space="preserve">
          <source>from the setting up of the filtering:</source>
          <target state="translated">フィルタリングの設定から。</target>
        </trans-unit>
        <trans-unit id="890dfdd429f73d6eaebcc8a839d1daba43eabf5c" translate="yes" xml:space="preserve">
          <source>from the stack.</source>
          <target state="translated">をスタックから取り出します。</target>
        </trans-unit>
        <trans-unit id="c0ca7c24efcc17464d0f67a1a806b45ea9abeeae" translate="yes" xml:space="preserve">
          <source>from the tied array</source>
          <target state="translated">紐付き配列から</target>
        </trans-unit>
        <trans-unit id="645ffe8245878f22793385cf49f9ff3ccebb181c" translate="yes" xml:space="preserve">
          <source>from the tied hash</source>
          <target state="translated">タイドハッシュから</target>
        </trans-unit>
        <trans-unit id="8125472ea2001b2c8c6be29bde074441af1a4d52" translate="yes" xml:space="preserve">
          <source>from within cross-compilation directories.</source>
          <target state="translated">クロスコンパイルディレクトリ内から</target>
        </trans-unit>
        <trans-unit id="a052b55b7369cf6603a8335659cb5cea4c7fbff5" translate="yes" xml:space="preserve">
          <source>from.</source>
          <target state="translated">from.</target>
        </trans-unit>
        <trans-unit id="ea1775cc63779d207ecf4710c553007e18688d16" translate="yes" xml:space="preserve">
          <source>from_hex()/from_bin()/from_oct()</source>
          <target state="translated">from_hex()/from_bin()/from_oct()</target>
        </trans-unit>
        <trans-unit id="5708f2d6e1120815620c96c8821806791a7cc80b" translate="yes" xml:space="preserve">
          <source>from_to</source>
          <target state="translated">from_to</target>
        </trans-unit>
        <trans-unit id="17f3ee5cf07c57ab65e678e71a6e8f105ba92fad" translate="yes" xml:space="preserve">
          <source>fsync(3c)</source>
          <target state="translated">fsync(3c)</target>
        </trans-unit>
        <trans-unit id="7616bb87bd05f6439e3672ba1b2be55d5beb68b3" translate="yes" xml:space="preserve">
          <source>ftp</source>
          <target state="translated">ftp</target>
        </trans-unit>
        <trans-unit id="4f8a5a1309345b21b7eddf63128b6ba916b638a7" translate="yes" xml:space="preserve">
          <source>ftp(1), ftpd(8), RFC 959, RFC 2428, RFC 4217 &lt;a href=&quot;http://www.ietf.org/rfc/rfc959.txt&quot;&gt;http://www.ietf.org/rfc/rfc959.txt&lt;/a&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2428.txt&quot;&gt;http://www.ietf.org/rfc/rfc2428.txt&lt;/a&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc4217.txt&quot;&gt;http://www.ietf.org/rfc/rfc4217.txt&lt;/a&gt;</source>
          <target state="translated">ftp（1）、ftpd（8）、RFC 959、RFC 2428、RFC 4217 &lt;a href=&quot;http://www.ietf.org/rfc/rfc959.txt&quot;&gt;http://www.ietf.org/rfc/rfc959.txt &lt;/a&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2428.txt&quot;&gt;http://www.ietf.org/rfc/rfc2428.txt &lt;/a&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc4217.txt&quot;&gt;http： //www.ietf.org/rfc/rfc4217.txt&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="52e6d8ab88471af82da12a0eae7aab01357e3881" translate="yes" xml:space="preserve">
          <source>full</source>
          <target state="translated">full</target>
        </trans-unit>
        <trans-unit id="4be4b609d8286e5df3a5bc1537ff258787b95892" translate="yes" xml:space="preserve">
          <source>full flush point</source>
          <target state="translated">フルフラッシュポイント</target>
        </trans-unit>
        <trans-unit id="cf72a762bff3f354307c7404319a49142c5b077a" translate="yes" xml:space="preserve">
          <source>full flush points</source>
          <target state="translated">フルフラッシュポイント</target>
        </trans-unit>
        <trans-unit id="99fdb3623cf5c6ad0283ca5c096018dd2f2ff5ad" translate="yes" xml:space="preserve">
          <source>func</source>
          <target state="translated">func</target>
        </trans-unit>
        <trans-unit id="371ecebfd38c7796b8575bdfc4291b880d00c0bc" translate="yes" xml:space="preserve">
          <source>function are still tainted. If this option is used while not in taint-mode, &lt;code&gt;untaint&lt;/code&gt; is a no-op.</source>
          <target state="translated">機能はまだ汚れています。汚染モードでないときにこのオプションを使用すると、 &lt;code&gt;untaint&lt;/code&gt; は何もしません。</target>
        </trans-unit>
        <trans-unit id="921c8607ede78cb6f250bb86e54f6a46f43d416e" translate="yes" xml:space="preserve">
          <source>function calls if platform cannot export data to loaded modules, or if (say) different &quot;threads&quot; might have different values.</source>
          <target state="translated">関数は、プラットフォームがロードされたモジュールにデータをエクスポートできない場合や、(例えば)異なる &quot;スレッド &quot;が異なる値を持つ場合に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="4448cad5d5eeca1f46105fb35f3ee5eacb51c265" translate="yes" xml:space="preserve">
          <source>function has itself been called from another Perl subroutine. The code below illustrates this</source>
          <target state="translated">関数自体が別のPerlのサブルーチンから呼び出されています。以下のコードはこれを説明しています。</target>
        </trans-unit>
        <trans-unit id="c5d3e4aaace1de050cba2dd4997633a2e33549da" translate="yes" xml:space="preserve">
          <source>function in</source>
          <target state="translated">働きかける</target>
        </trans-unit>
        <trans-unit id="c47eacdbb4fe97341345191d25d5b6ccb055471b" translate="yes" xml:space="preserve">
          <source>function indicates how many items have been returned by the Perl subroutine - in this case it will be either 0 or 1.</source>
          <target state="translated">関数は、Perlのサブルーチンが何個の項目を返したかを示します。</target>
        </trans-unit>
        <trans-unit id="e349e3f36a6d04510d3cd84c4c4ef507dda98c60" translate="yes" xml:space="preserve">
          <source>function indicates how many items have been returned by the Perl subroutine--in this case it will be 0.</source>
          <target state="translated">関数は、Perlのサブルーチンによって返された項目の数を示します。</target>
        </trans-unit>
        <trans-unit id="8c86469099745da11426bbfffb10448d05aa4761" translate="yes" xml:space="preserve">
          <source>function indicates how many items have been returned by the Perl subroutine.</source>
          <target state="translated">関数は、Perlのサブルーチンで返された項目の数を示します。</target>
        </trans-unit>
        <trans-unit id="08986a62abd1f7c838a100f32cc3df947fb3c3b6" translate="yes" xml:space="preserve">
          <source>function invoked with G_EVAL|G_SCALAR returns an error, the top of the stack holds the value</source>
          <target state="translated">G_EVAL|G_SCALARで呼び出された関数がエラーを返した場合、スタックの先頭に値が格納されます。</target>
        </trans-unit>
        <trans-unit id="709565f017b462700d7916a3457dc34f4e2a5d87" translate="yes" xml:space="preserve">
          <source>function is available to compute all the</source>
          <target state="translated">関数は、すべての</target>
        </trans-unit>
        <trans-unit id="6f233e4a118de0e40b9d2fd0c788482ab305e8c8" translate="yes" xml:space="preserve">
          <source>function is dependent on what other flags have been specified and whether an error has occurred. Here are all the different cases that can occur:</source>
          <target state="translated">関数は、他にどのようなフラグが指定されているか、そしてエラーが発生したかどうかに依存します。ここでは、発生する可能性のあるすべての異なるケースを示します。</target>
        </trans-unit>
        <trans-unit id="c81b1842c80722098e442b820dc9da37d29cf3b2" translate="yes" xml:space="preserve">
          <source>function is used to remove files safely.</source>
          <target state="translated">関数を使って安全にファイルを削除します。</target>
        </trans-unit>
        <trans-unit id="d49c3bbd015d363f467d2e805c15b881be79308b" translate="yes" xml:space="preserve">
          <source>function lets us evaluate strings of Perl code, so we can define some functions that use it to &quot;specialize&quot; in matches and substitutions:</source>
          <target state="translated">関数はPerlのコードの文字列を評価することができます。</target>
        </trans-unit>
        <trans-unit id="6462d135000aabf5e34046cd89a36e43bfef3724" translate="yes" xml:space="preserve">
          <source>function of this form</source>
          <target state="translated">本式関数</target>
        </trans-unit>
        <trans-unit id="c2898873b6c5a47ad338ff0a0aa6bf3e83cb4fa1" translate="yes" xml:space="preserve">
          <source>function or values returned via the stack) have been freed by one of these methods:</source>
          <target state="translated">関数やスタック経由で返された値)が、これらのメソッドのいずれかによって解放されたことを示しています。</target>
        </trans-unit>
        <trans-unit id="827be83ac4559c1a39c458efa1d64cc14cabe987" translate="yes" xml:space="preserve">
          <source>function returns normally, then the value returned is as specified in the previous sections.</source>
          <target state="translated">関数が正常に返された場合、返される値は前のセクションで指定された通りの値になります。</target>
        </trans-unit>
        <trans-unit id="b63e08a202c99ced87abfc8bdd18a837535981af" translate="yes" xml:space="preserve">
          <source>function template</source>
          <target state="translated">関数テンプレート</target>
        </trans-unit>
        <trans-unit id="839904c508f8afb161daa74821e2d65bc79396eb" translate="yes" xml:space="preserve">
          <source>function to</source>
          <target state="translated">関数を使用して</target>
        </trans-unit>
        <trans-unit id="9614a87de1ec212f6e75e447f14c75736c763f11" translate="yes" xml:space="preserve">
          <source>function to change the mode of the filehandle.</source>
          <target state="translated">関数を使用してファイルハンドルのモードを変更します。</target>
        </trans-unit>
        <trans-unit id="de074845f99b0b7a978c23b445857f36226972ba" translate="yes" xml:space="preserve">
          <source>function you need to check the &lt;code&gt;$@&lt;/code&gt; variable as you would in a normal Perl script.</source>
          <target state="translated">通常のPerlスクリプトと同じように、 &lt;code&gt;$@&lt;/code&gt; 変数をチェックする必要があります。</target>
        </trans-unit>
        <trans-unit id="8714555a0e0a02847ef4168f72b554518068e2a9" translate="yes" xml:space="preserve">
          <source>function). First I'll create a stub exponentiation function in</source>
          <target state="translated">関数)を作成します。)まず、スタブ指数関数を</target>
        </trans-unit>
        <trans-unit id="cac02ec1a476ed80dfd51b02515cb2a3bd581ae2" translate="yes" xml:space="preserve">
          <source>function.</source>
          <target state="translated">function.</target>
        </trans-unit>
        <trans-unit id="7f6cacfa2af13d3c42cecad5f1253e2aa4e36fbf" translate="yes" xml:space="preserve">
          <source>function. Note that directories created with this method default to CLEANUP =&amp;gt; 1.</source>
          <target state="translated">関数。この方法で作成されたディレクトリのデフォルトはCLEANUP =&amp;gt; 1です。</target>
        </trans-unit>
        <trans-unit id="39824aa3670c040b93bf7b0aa04edfe528553280" translate="yes" xml:space="preserve">
          <source>function. The only flag specified this time is G_DISCARD. Because we are passing 2 parameters to the Perl subroutine this time, we have not specified G_NOARGS.</source>
          <target state="translated">関数を使用しています。今回指定したフラグはg_discardのみです。今回はPerlのサブルーチンに2つのパラメータを渡しているので、G_NOARGSは指定していません。</target>
        </trans-unit>
        <trans-unit id="1612e16bda21c762a6fc4ea0f9f049acf4c6d400" translate="yes" xml:space="preserve">
          <source>function. The section</source>
          <target state="translated">関数を使用しています。セクションの</target>
        </trans-unit>
        <trans-unit id="6ffde53f3f67404d2136045c60915165a4911a81" translate="yes" xml:space="preserve">
          <source>function. This has been done to keep the code simpler and ease you into the topic. Wherever possible, if the choice is between using</source>
          <target state="translated">関数を使用しています。これは、コードをよりシンプルにして、このトピックを理解しやすくするために行われています。可能な限り、もし</target>
        </trans-unit>
        <trans-unit id="d02289da5b7668a0d6b47a2dfb3aafcccfa0df0a" translate="yes" xml:space="preserve">
          <source>functioning exec() on OS/2. exec() is emulated by EMX by an asynchronous call while the caller waits for child completion (to pretend that the &lt;code&gt;pid&lt;/code&gt; did not change). This means that 1</source>
          <target state="translated">OS / 2で機能するexec（）。exec（）は、呼び出し元が子の完了を待機している間（ &lt;code&gt;pid&lt;/code&gt; が変更されていないふりをするため）、非同期呼び出しによってEMXによってエミュレートされます。つまり、1</target>
        </trans-unit>
        <trans-unit id="2f887def33825e52ffbcca83446cfd6a6f676ff7" translate="yes" xml:space="preserve">
          <source>functions</source>
          <target state="translated">functions</target>
        </trans-unit>
        <trans-unit id="795602d99bd11f8d6f7100fb870f7bbc5d1f87c9" translate="yes" xml:space="preserve">
          <source>functions &lt;code&gt;deflateInit&lt;/code&gt; , &lt;code&gt;deflateInit2&lt;/code&gt; and &lt;code&gt;deflateSetDictionary&lt;/code&gt; .</source>
          <target state="translated">関数 &lt;code&gt;deflateInit&lt;/code&gt; 、 &lt;code&gt;deflateInit2&lt;/code&gt; および &lt;code&gt;deflateSetDictionary&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fa4a08f2b3c0a224c8a79c1e480d05c64a00f0d7" translate="yes" xml:space="preserve">
          <source>functions have a &lt;code&gt;flags&lt;/code&gt; parameter which is used to pass a bit mask of options to Perl. This bit mask operates identically for each of the functions. The settings available in the bit mask are discussed in &lt;a href=&quot;#FLAG-VALUES&quot;&gt;FLAG VALUES&lt;/a&gt;.</source>
          <target state="translated">関数には、Perlにオプションのビットマスクを渡すために使用される &lt;code&gt;flags&lt;/code&gt; パラメータがあります。このビットマスクは、機能ごとに同じように動作します。ビットマスクで使用可能な設定については、「フラグ&lt;a href=&quot;#FLAG-VALUES&quot;&gt;値」で&lt;/a&gt;説明しています。</target>
        </trans-unit>
        <trans-unit id="4a00c08bf6c283d615113e147ab718cfa6a1b479" translate="yes" xml:space="preserve">
          <source>functions in there. This is because Perl tends to reimplement or abstract standard library functions, so that we know exactly how they're going to operate.</source>
          <target state="translated">関数が入っています。これは、Perlが標準ライブラリの関数を再実装したり、抽象化したりする傾向があるため、それらがどのように動作するかを正確に知ることができるからです。</target>
        </trans-unit>
        <trans-unit id="bbf61031b62bdf087c8809f3227e75d3edcaf3f8" translate="yes" xml:space="preserve">
          <source>functions is one of G_VOID, G_SCALAR, or G_ARRAY, which indicate the call context, OR'ed together with a bit mask of any combination of the other G_* symbols defined below.</source>
          <target state="translated">関数は、G_VOID、G_SCALAR、またはG_ARRAYのいずれかで、コールコンテキストを示し、以下に定義されている他のG_*シンボルの任意の組み合わせのビットマスクと一緒にORされています。</target>
        </trans-unit>
        <trans-unit id="f5a9d69120c616a0ffffa979bf943ce16979ae6c" translate="yes" xml:space="preserve">
          <source>functions or any other Perl internal function.</source>
          <target state="translated">関数やその他のPerlの内部関数を使用することができます。</target>
        </trans-unit>
        <trans-unit id="ed9dda692b625541cd84b16cef88e6b48d1b4400" translate="yes" xml:space="preserve">
          <source>functions place the items returned from by the Perl subroutine on the stack. If you are not interested in these items, then setting this flag will make Perl get rid of them automatically for you. Note that it is still possible to indicate a context to the Perl subroutine by using either G_SCALAR or G_ARRAY.</source>
          <target state="translated">関数は、Perlのサブルーチンから返されたアイテムをスタック上に配置します。もしこれらのアイテムに興味がない場合は、このフラグを設定することでPerlが自動的にアイテムを除去してくれます。G_SCALARやG_ARRAYを使ってPerlサブルーチンのコンテキストを指定することも可能です。</target>
        </trans-unit>
        <trans-unit id="0266b629f6cdab1b7ac306bc735913fc2f7d6ff7" translate="yes" xml:space="preserve">
          <source>functions seem to hang. It also creates a compile time dependency because</source>
          <target state="translated">関数がハングするようです。また、コンパイル時の依存関係が発生します。</target>
        </trans-unit>
        <trans-unit id="cea16ebbf991d186159977779dd22a7b373909bc" translate="yes" xml:space="preserve">
          <source>functions that are used to implement such code, or with &lt;code&gt;eval_sv&lt;/code&gt; . This flag has no effect on the &lt;code&gt;call_*&lt;/code&gt; functions when G_EVAL is not used.</source>
          <target state="translated">このようなコードを実装するために使用される関数、または &lt;code&gt;eval_sv&lt;/code&gt; 。G_EVALが使用されていない場合、このフラグは &lt;code&gt;call_*&lt;/code&gt; 関数に影響を与えません。</target>
        </trans-unit>
        <trans-unit id="d379e01b6d42632318ed90e7edf530ed24a60356" translate="yes" xml:space="preserve">
          <source>functions, but if you think you do, use the &lt;code&gt;JMPENV&lt;/code&gt; stack in</source>
          <target state="translated">関数、しかしもしそうなら、 &lt;code&gt;JMPENV&lt;/code&gt; スタックを</target>
        </trans-unit>
        <trans-unit id="3db3d5d47141e2a7c0f3f30a5874d09bb858106b" translate="yes" xml:space="preserve">
          <source>functions, if the &lt;code&gt;h_errno&lt;/code&gt; variable is supported in C, it will be returned to you via &lt;code&gt;$?&lt;/code&gt; if the function call fails. The &lt;code&gt;@addrs&lt;/code&gt; value returned by a successful call is a list of raw addresses returned by the corresponding library call. In the Internet domain, each address is four bytes long; you can unpack it by saying something like:</source>
          <target state="translated">関数、Cで &lt;code&gt;h_errno&lt;/code&gt; 変数がサポートされている場合、 &lt;code&gt;$?&lt;/code&gt; を介して返されます。関数呼び出しが失敗した場合。 &lt;code&gt;@addrs&lt;/code&gt; の成功した呼び出しによって返される値は、対応するライブラリコールが返す、生のアドレスのリストです。インターネットドメインでは、各アドレスは4バイト長です。次のように言うことで解凍できます：</target>
        </trans-unit>
        <trans-unit id="ab746b3b6e9dbfef3a73f6a20320d7a691c7d497" translate="yes" xml:space="preserve">
          <source>functions, it is assumed by default that parameters are to be passed to the subroutine. If you are not passing any parameters to the Perl subroutine, you can save a bit of time by setting this flag. It has the effect of not creating the &lt;code&gt;@_&lt;/code&gt; array for the Perl subroutine.</source>
          <target state="translated">関数では、デフォルトでパラメータがサブルーチンに渡されることが想定されています。Perlサブルーチンにパラメーターを渡さない場合は、このフラグを設定することで時間を少し節約できます。これは、Perlサブルーチンに対して &lt;code&gt;@_&lt;/code&gt; 配列を作成しないという効果があります。</target>
        </trans-unit>
        <trans-unit id="c12494f4c3370df35c000798cef56281e2f4658e" translate="yes" xml:space="preserve">
          <source>functions, you should use the Perl abstraction layer. Instead of &lt;code&gt;FILE*&lt;/code&gt; types, you need to be handling &lt;code&gt;PerlIO*&lt;/code&gt; types. Don't forget that with the new PerlIO layered I/O abstraction &lt;code&gt;FILE*&lt;/code&gt; types may not even be available. See also the &lt;code&gt;perlapio&lt;/code&gt; documentation for more information about the following functions:</source>
          <target state="translated">関数、Perl抽象化レイヤーを使用する必要があります。 &lt;code&gt;FILE*&lt;/code&gt; タイプの代わりに、 &lt;code&gt;PerlIO*&lt;/code&gt; タイプを処理する必要があります。新しいPerlIOレイヤードI / O抽象化では、 &lt;code&gt;FILE*&lt;/code&gt; タイプが使用できない場合があることを忘れないでください。次の関数の詳細については、 &lt;code&gt;perlapio&lt;/code&gt; のドキュメントも参照してください。</target>
        </trans-unit>
        <trans-unit id="400007d88b6b4566e980b89ce7386d250afbac83" translate="yes" xml:space="preserve">
          <source>functions--Perl still needs to know that there are no parameters.</source>
          <target state="translated">関数--Perl はまだパラメータがないことを知る必要があります。</target>
        </trans-unit>
        <trans-unit id="799a717984947628e35b2d197f737851795530da" translate="yes" xml:space="preserve">
          <source>functions.</source>
          <target state="translated">functions.</target>
        </trans-unit>
        <trans-unit id="8aeff27d06e584e53d098c207eb146d5e5cb60cc" translate="yes" xml:space="preserve">
          <source>further</source>
          <target state="translated">further</target>
        </trans-unit>
        <trans-unit id="54fd1711209fb1c0781092374132c66e79e2241b" translate="yes" xml:space="preserve">
          <source>g</source>
          <target state="translated">g</target>
        </trans-unit>
        <trans-unit id="0724ff6cafe6313a1d579e6f40dda018ed30470b" translate="yes" xml:space="preserve">
          <source>garbage collection</source>
          <target state="translated">ごみ収集</target>
        </trans-unit>
        <trans-unit id="0224d713937ae9873e5c9d553fee79419bb53b1f" translate="yes" xml:space="preserve">
          <source>gawk.exe</source>
          <target state="translated">gawk.exe</target>
        </trans-unit>
        <trans-unit id="719cda6058f8cc7d92194622eac2a5185581aea0" translate="yes" xml:space="preserve">
          <source>gbacon@cs.uah.edu</source>
          <target state="translated">gbacon@cs.uah.edu</target>
        </trans-unit>
        <trans-unit id="027924336fe5581ad022afa8921be2488d4f1fea" translate="yes" xml:space="preserve">
          <source>gbarr@pobox.com</source>
          <target state="translated">gbarr@pobox.com</target>
        </trans-unit>
        <trans-unit id="fce79b7fe1fee3a977fa1bd4efbd9e9a06c29c14" translate="yes" xml:space="preserve">
          <source>gcc</source>
          <target state="translated">gcc</target>
        </trans-unit>
        <trans-unit id="c631fc0fece8ffca9bd2a03e55b12f7ab1b8c9f4" translate="yes" xml:space="preserve">
          <source>gcc 3.2.1 is known to work okay with Perl 5.8.0. However, when optimizing the toke.c gcc likes to have a lot of memory, 256 megabytes seems to be enough. The default setting of the process data section in Tru64 should be one gigabyte, but some sites/setups might have lowered that. The configuration process of Perl checks for too low process limits, and lowers the optimization for the toke.c if necessary, and also gives advice on how to raise the process limits.</source>
          <target state="translated">gcc 3.2.1はPerl 5.8.0でも問題なく動作することが知られています。しかし、toke.cを最適化する際にgccはメモリを多く持ちたがるので、256メガバイトで十分なようです。Tru64のプロセスデータセクションのデフォルト設定は1ギガバイトのはずですが、サイトや設定によってはこれよりも低い値になっているかもしれません。Perlの設定処理では、プロセス制限が低すぎるかどうかをチェックして、必要に応じてtoke.cの最適化を下げたり、プロセス制限を上げるためのアドバイスをしたりしています。</target>
        </trans-unit>
        <trans-unit id="1d338b86cc1870c42005500c205b74129ed859b2" translate="yes" xml:space="preserve">
          <source>gcc has had them for a while with its own syntax, and C99 brought them with a standardized syntax. Don't use the former, and use the latter only if the HAS_C99_VARIADIC_MACROS is defined.</source>
          <target state="translated">gccはしばらくの間、独自の構文でそれらを持っていましたが、C99は標準化された構文でそれらを持ってきました。前者は使わず、後者は HAS_C99_VARIADIC_MACROS が定義されている場合にのみ使用してください。</target>
        </trans-unit>
        <trans-unit id="b67d72ad08b17821bf582bfd1ebf8a965dc18483" translate="yes" xml:space="preserve">
          <source>gcc warnings</source>
          <target state="translated">gcc 警告</target>
        </trans-unit>
        <trans-unit id="0d536b21ff2cc78741262177eb3907f74609a50a" translate="yes" xml:space="preserve">
          <source>gccvers.U</source>
          <target state="translated">gccvers.U</target>
        </trans-unit>
        <trans-unit id="8fdfcfae9d75939f4a247717b6dfdb6366d642fc" translate="yes" xml:space="preserve">
          <source>gcov</source>
          <target state="translated">gcov</target>
        </trans-unit>
        <trans-unit id="8ead6354003c3f4fa80c692081bc8265af11220e" translate="yes" xml:space="preserve">
          <source>gdb</source>
          <target state="translated">gdb</target>
        </trans-unit>
        <trans-unit id="3e8812c9faba2b285bede251c4524c07b3d5d116" translate="yes" xml:space="preserve">
          <source>gdb macro support</source>
          <target state="translated">gdb マクロサポート</target>
        </trans-unit>
        <trans-unit id="34c44a0056555a06edf458ded174ef8a4dd25908" translate="yes" xml:space="preserve">
          <source>gdbm/ndbm.h</source>
          <target state="translated">gdbm/ndbm.h</target>
        </trans-unit>
        <trans-unit id="a9060bd5525711459bfd3fbd9a5d9658cfa6338a" translate="yes" xml:space="preserve">
          <source>ge</source>
          <target state="translated">ge</target>
        </trans-unit>
        <trans-unit id="4f27a42f388e690d52786e3fd902c66debf2d26b" translate="yes" xml:space="preserve">
          <source>gecho.exe</source>
          <target state="translated">gecho.exe</target>
        </trans-unit>
        <trans-unit id="bfe76b3fbe072e730c615d95a89d47e6218fe5fc" translate="yes" xml:space="preserve">
          <source>gen_delimited_pat</source>
          <target state="translated">gen_delimited_pat</target>
        </trans-unit>
        <trans-unit id="6ade8a9fb18699f0a50b3f40e42efbbbdd2b7aba" translate="yes" xml:space="preserve">
          <source>gen_extract_tagged</source>
          <target state="translated">gen_extract_tagged</target>
        </trans-unit>
        <trans-unit id="307ac06b3ab1cd429d0ff8eb90ffc8dbef662632" translate="yes" xml:space="preserve">
          <source>generally has a CPAN-style directory- and file-layout and its own</source>
          <target state="translated">一般的には、CPAN スタイルのディレクトリとファイルレイアウトと、独自の</target>
        </trans-unit>
        <trans-unit id="9e59d42533de13285d6ef99427563967a25bfcf7" translate="yes" xml:space="preserve">
          <source>generate</source>
          <target state="translated">generate</target>
        </trans-unit>
        <trans-unit id="ab3bdf813f715b91bac8c995a9b7d25be4176272" translate="yes" xml:space="preserve">
          <source>generated because you didn't supply a full path to the program; instead, it's generated because you never set your PATH environment variable, or you didn't set it to something that was safe. Because Perl can't guarantee that the executable in question isn't itself going to turn around and execute some other program that is dependent on your PATH, it makes sure you set the PATH.</source>
          <target state="translated">これは、プログラムへのフルパスを提供しなかったために生成されたものです。Perl は、問題の実行ファイルが自分の PATH に依存している他のプログラムを実行しないことを保証できないため、PATH を設定していることを確認します。</target>
        </trans-unit>
        <trans-unit id="21c7bab6d347a6a992c55d509e9f5eb499c67fb8" translate="yes" xml:space="preserve">
          <source>generated during the last phase to</source>
          <target state="translated">に最後のフェーズで生成された</target>
        </trans-unit>
        <trans-unit id="8723fdec7923f984319a7f48ae75fe2ad1e8528e" translate="yes" xml:space="preserve">
          <source>generates a</source>
          <target state="translated">を生成します。</target>
        </trans-unit>
        <trans-unit id="57bac7cdc98280953b42315a7d07bde53ad0c9f8" translate="yes" xml:space="preserve">
          <source>generates this to show that it pads correctly no matter the normalization:</source>
          <target state="translated">はこれを生成して、正規化に関係なく正しくパッドされていることを示します。</target>
        </trans-unit>
        <trans-unit id="46ab68674c742f98c19f5ad2f791e6bb19f73684" translate="yes" xml:space="preserve">
          <source>generic newline</source>
          <target state="translated">ジェネリック改行</target>
        </trans-unit>
        <trans-unit id="5b578520cb03ee7cab636d98aee5f988369cc71a" translate="yes" xml:space="preserve">
          <source>generic object</source>
          <target state="translated">汎用体</target>
        </trans-unit>
        <trans-unit id="c136c9a7f419c40b8be0395212b54e59533bd38c" translate="yes" xml:space="preserve">
          <source>generic regular expression flags, but apply to the operation being performed, like matching or substitution (&lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; respectively).</source>
          <target state="translated">汎用の正規表現フラグですが、マッチングや置換（それぞれ &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; ）などの実行中の操作に適用されます。</target>
        </trans-unit>
        <trans-unit id="783923e57ba5e8f1044632c31fd806ee24814bb5" translate="yes" xml:space="preserve">
          <source>get</source>
          <target state="translated">get</target>
        </trans-unit>
        <trans-unit id="afbf9dd721bf937146f6eb7f47b659d598b110d4" translate="yes" xml:space="preserve">
          <source>get it via &lt;code&gt;Test::Builder-&amp;gt;new&lt;/code&gt; as was previously recommended.</source>
          <target state="translated">以前推奨されていたように、 &lt;code&gt;Test::Builder-&amp;gt;new&lt;/code&gt; から取得します。</target>
        </trans-unit>
        <trans-unit id="cf0461976e8f10e3106bb0a57784a5aa69b9085f" translate="yes" xml:space="preserve">
          <source>getHeaderInfo</source>
          <target state="translated">getHeaderInfo</target>
        </trans-unit>
        <trans-unit id="1258384d48c28bddd9bbd50b9d70908409df7690" translate="yes" xml:space="preserve">
          <source>getaddrinfo() / getnameinfo() ERROR CONSTANTS</source>
          <target state="translated">getaddrinfo()/getnameinfo()ERROR CONSTANTS</target>
        </trans-unit>
        <trans-unit id="9133b4724467f6a78f7953950df15cf88a004132" translate="yes" xml:space="preserve">
          <source>getc</source>
          <target state="translated">getc</target>
        </trans-unit>
        <trans-unit id="c4e82612556939eefc18b3bf2f3199765259daaa" translate="yes" xml:space="preserve">
          <source>getc FILEHANDLE</source>
          <target state="translated">ゲットシーファイルハンドル</target>
        </trans-unit>
        <trans-unit id="972fe37cf223022862061652eca8d48e8b04e2bf" translate="yes" xml:space="preserve">
          <source>getcwd and friends</source>
          <target state="translated">ゲッチュウダーと仲間たち</target>
        </trans-unit>
        <trans-unit id="1058d442c6ea9f1bff587ff814700f9818997cdd" translate="yes" xml:space="preserve">
          <source>getgr*()</source>
          <target state="translated">getgr*()</target>
        </trans-unit>
        <trans-unit id="3d50edb669686034e9ed88561085209d1cb289f3" translate="yes" xml:space="preserve">
          <source>getgrent</source>
          <target state="translated">getgrent</target>
        </trans-unit>
        <trans-unit id="954504809746ac76a9a32e740428b45019a5fd52" translate="yes" xml:space="preserve">
          <source>getgrgid</source>
          <target state="translated">getgrgid</target>
        </trans-unit>
        <trans-unit id="b60810f8d11eb2c9a3efa7f98633218a70269dd9" translate="yes" xml:space="preserve">
          <source>getgrgid GID</source>
          <target state="translated">ゲットグリッドジーアイディー</target>
        </trans-unit>
        <trans-unit id="e4aa6e774d7ea3f9d2c544dbcae24ce80a611567" translate="yes" xml:space="preserve">
          <source>getgrnam</source>
          <target state="translated">getgrnam</target>
        </trans-unit>
        <trans-unit id="d22f502324bf30d000b28c0c7aaf652418bbb026" translate="yes" xml:space="preserve">
          <source>getgrnam NAME</source>
          <target state="translated">ゲットグラムネーム</target>
        </trans-unit>
        <trans-unit id="07055f76300fa326872312db66b3156da49fa52b" translate="yes" xml:space="preserve">
          <source>gethost*()</source>
          <target state="translated">gethost*()</target>
        </trans-unit>
        <trans-unit id="4dde3c56c61e1fbda1f35895a8532062214232d5" translate="yes" xml:space="preserve">
          <source>gethostbyaddr</source>
          <target state="translated">gethostbyaddr</target>
        </trans-unit>
        <trans-unit id="bec2a30a44dabb1eb18ce4184809b5bd266cbf3e" translate="yes" xml:space="preserve">
          <source>gethostbyaddr ADDR,ADDRTYPE</source>
          <target state="translated">gethostbyaddr ADDR,ADDRTYPE</target>
        </trans-unit>
        <trans-unit id="a8f74c0459d3d2216ba2fd322de751d9e34b0c5c" translate="yes" xml:space="preserve">
          <source>gethostbyname</source>
          <target state="translated">gethostbyname</target>
        </trans-unit>
        <trans-unit id="e0a770dd719fac494590a3f33cdf93b9f483c4fa" translate="yes" xml:space="preserve">
          <source>gethostbyname NAME</source>
          <target state="translated">gethostbyname NAME</target>
        </trans-unit>
        <trans-unit id="937d2d6c42d41083b0dec7c240d8aad8a17dc626" translate="yes" xml:space="preserve">
          <source>gethostent</source>
          <target state="translated">gethostent</target>
        </trans-unit>
        <trans-unit id="56432b00323d36e3f548207dddf4294d13b189b0" translate="yes" xml:space="preserve">
          <source>getline</source>
          <target state="translated">getline</target>
        </trans-unit>
        <trans-unit id="6f91045aa50984d817a12aca6ca51d03f30126b8" translate="yes" xml:space="preserve">
          <source>getlogin</source>
          <target state="translated">getlogin</target>
        </trans-unit>
        <trans-unit id="91ff60e15a99fb03ea8d19dc5db62c2f4deb0517" translate="yes" xml:space="preserve">
          <source>getnetbyaddr</source>
          <target state="translated">getnetbyaddr</target>
        </trans-unit>
        <trans-unit id="41bbd33b299262aa62d735776189992ffc2d1190" translate="yes" xml:space="preserve">
          <source>getnetbyaddr ADDR,ADDRTYPE</source>
          <target state="translated">getnetbyaddr ADDR,ADDRTYPE</target>
        </trans-unit>
        <trans-unit id="c78b9db293eecc65f9ca16c0827ab33c9f67007f" translate="yes" xml:space="preserve">
          <source>getnetbyname</source>
          <target state="translated">getnetbyname</target>
        </trans-unit>
        <trans-unit id="ad502ed582347e2101de57bf31cccacd8a27ef6f" translate="yes" xml:space="preserve">
          <source>getnetbyname NAME</source>
          <target state="translated">getnetbyname NAME</target>
        </trans-unit>
        <trans-unit id="cb88c23e4c921c7bf7d07ca1450cb30188eb9972" translate="yes" xml:space="preserve">
          <source>getnetent</source>
          <target state="translated">getnetent</target>
        </trans-unit>
        <trans-unit id="c599e97895231927d5d90ae5decc8b4592066779" translate="yes" xml:space="preserve">
          <source>getopt, getopts - Process single-character switches with switch clustering</source>
          <target state="translated">getopt,getopts-スイッチクラスタリングを用いて一文字スイッチを処理する</target>
        </trans-unit>
        <trans-unit id="98f809f1adf4db9f68b8287b8c8806487d3a946a" translate="yes" xml:space="preserve">
          <source>getpeername</source>
          <target state="translated">getpeername</target>
        </trans-unit>
        <trans-unit id="db643a16f882d6452c34c24fb623da692d1e57c5" translate="yes" xml:space="preserve">
          <source>getpeername SOCKET</source>
          <target state="translated">ゲットユーザー名ソケット</target>
        </trans-unit>
        <trans-unit id="9a8bdc325288ea0b4c62d98ce68549e6f26811b9" translate="yes" xml:space="preserve">
          <source>getpgrp</source>
          <target state="translated">getpgrp</target>
        </trans-unit>
        <trans-unit id="f172989b05597535d8a855945abb21d2771b1bc5" translate="yes" xml:space="preserve">
          <source>getpgrp PID</source>
          <target state="translated">ゲットプルプルPID</target>
        </trans-unit>
        <trans-unit id="760896bcddb7ce1b15ca782f91ef889393abaa62" translate="yes" xml:space="preserve">
          <source>getppid</source>
          <target state="translated">getppid</target>
        </trans-unit>
        <trans-unit id="fc090d3296cb0c0f60fad48e9f907973e5c1ec7a" translate="yes" xml:space="preserve">
          <source>getpriority</source>
          <target state="translated">getpriority</target>
        </trans-unit>
        <trans-unit id="b3ad96216f788e20b31acd3964eb96a56574d416" translate="yes" xml:space="preserve">
          <source>getpriority WHICH,WHO</source>
          <target state="translated">優先度取得 WHICH,WHO</target>
        </trans-unit>
        <trans-unit id="dd0a60d53e744a66ab6456e8fbe67f753d0600ef" translate="yes" xml:space="preserve">
          <source>getpriority(2)</source>
          <target state="translated">getpriority(2)</target>
        </trans-unit>
        <trans-unit id="f1a31e98c628c2db8c009b2bd5f9501c3567a37e" translate="yes" xml:space="preserve">
          <source>getprotobyname</source>
          <target state="translated">getprotobyname</target>
        </trans-unit>
        <trans-unit id="c2e29ea72b9389c6e7974b7a0ed7ad6465f4a6ab" translate="yes" xml:space="preserve">
          <source>getprotobyname NAME</source>
          <target state="translated">getprotobyname NAME</target>
        </trans-unit>
        <trans-unit id="eb45c8ed61867cbcf3b9c9d94864eed445b4fc78" translate="yes" xml:space="preserve">
          <source>getprotobynumber</source>
          <target state="translated">getprotobynumber</target>
        </trans-unit>
        <trans-unit id="364d3adbceafc12b99c88d86f97e8c7e1cb5e700" translate="yes" xml:space="preserve">
          <source>getprotobynumber NUMBER</source>
          <target state="translated">getprotobynumber NUMBER</target>
        </trans-unit>
        <trans-unit id="8f73dd391e1dbd049491fbaa45272799557e1ecd" translate="yes" xml:space="preserve">
          <source>getprotoent</source>
          <target state="translated">getprotoent</target>
        </trans-unit>
        <trans-unit id="264d8f2cf007c39e27afb1401d501e80b70c5091" translate="yes" xml:space="preserve">
          <source>getpw*()</source>
          <target state="translated">getpw*()</target>
        </trans-unit>
        <trans-unit id="4412e33f81c5fcb9d4122fdc1997219278d192b9" translate="yes" xml:space="preserve">
          <source>getpwent</source>
          <target state="translated">getpwent</target>
        </trans-unit>
        <trans-unit id="2bf3a32fe9930ec92ad1cf23e73892b1df2c803b" translate="yes" xml:space="preserve">
          <source>getpwnam</source>
          <target state="translated">getpwnam</target>
        </trans-unit>
        <trans-unit id="5e9f4aa6503b1719f201f2afadccfcab1fb96c64" translate="yes" xml:space="preserve">
          <source>getpwnam NAME</source>
          <target state="translated">ゲプナムネーム</target>
        </trans-unit>
        <trans-unit id="9dfa71fef33acf73fe322e5e017f7d2f6becd899" translate="yes" xml:space="preserve">
          <source>getpwuid</source>
          <target state="translated">getpwuid</target>
        </trans-unit>
        <trans-unit id="4ed9302416f8b39421d3a416ca711b2ca0de5fa2" translate="yes" xml:space="preserve">
          <source>getpwuid UID</source>
          <target state="translated">サウンドUID</target>
        </trans-unit>
        <trans-unit id="03bab46c3b1cf81f77f69f2c3d5d2af181d4fafb" translate="yes" xml:space="preserve">
          <source>gets an input line,</source>
          <target state="translated">入力行を取得します。</target>
        </trans-unit>
        <trans-unit id="a4a18add76636ec13b14dc1bea2f40dedc988990" translate="yes" xml:space="preserve">
          <source>gets the coprocessor control word as an integer.</source>
          <target state="translated">コプロセッサ制御ワードを整数で取得します。</target>
        </trans-unit>
        <trans-unit id="cb2ae4c00ed80439cdeb3559961abd89f844c4b0" translate="yes" xml:space="preserve">
          <source>gets the equivalent of a</source>
          <target state="translated">に相当するものを取得します。</target>
        </trans-unit>
        <trans-unit id="2832b6fc8b9ad7e8df392ed11da7281f9daa2679" translate="yes" xml:space="preserve">
          <source>gets the factory settings back.</source>
          <target state="translated">は工場出荷時の設定を戻します。</target>
        </trans-unit>
        <trans-unit id="3537f6e3589497b9152f983a92f76e93d75f2f8c" translate="yes" xml:space="preserve">
          <source>getservbyname</source>
          <target state="translated">getservbyname</target>
        </trans-unit>
        <trans-unit id="90d57f6b0bb5bd40d3acc01ba253676dd321d493" translate="yes" xml:space="preserve">
          <source>getservbyname NAME,PROTO</source>
          <target state="translated">getservbyname NAME,PROTO</target>
        </trans-unit>
        <trans-unit id="a6ba74a7dd33c90b59ffa93e852ef4e4147ebf8a" translate="yes" xml:space="preserve">
          <source>getservbyport</source>
          <target state="translated">getservbyport</target>
        </trans-unit>
        <trans-unit id="8aef282067018e535a8b3fee36da732611cffd2b" translate="yes" xml:space="preserve">
          <source>getservbyport PORT,PROTO</source>
          <target state="translated">getservbyport PORT,PROTO</target>
        </trans-unit>
        <trans-unit id="77cc3261e8a459c3768e28f3e743314220d57309" translate="yes" xml:space="preserve">
          <source>getservent</source>
          <target state="translated">getservent</target>
        </trans-unit>
        <trans-unit id="ead804d2b4d74dba07a6b100e144a224f9c485f2" translate="yes" xml:space="preserve">
          <source>getsockname</source>
          <target state="translated">getsockname</target>
        </trans-unit>
        <trans-unit id="9a53f0302a0fb7b7c971823b024cb2ff6f0dece1" translate="yes" xml:space="preserve">
          <source>getsockname SOCKET</source>
          <target state="translated">getsockname SOCKET</target>
        </trans-unit>
        <trans-unit id="bc17bfd88bff9588166cbf7c62c55649a1cb154d" translate="yes" xml:space="preserve">
          <source>getsockopt</source>
          <target state="translated">getsockopt</target>
        </trans-unit>
        <trans-unit id="3b85d183c4b965758136b832da51d3639ff60a8b" translate="yes" xml:space="preserve">
          <source>getsockopt SOCKET,LEVEL,OPTNAME</source>
          <target state="translated">getsockopt SOCKET,LEVEL,OPTNAME</target>
        </trans-unit>
        <trans-unit id="53fc441852a90c70f25c2e105138a8e183ea9784" translate="yes" xml:space="preserve">
          <source>getstate</source>
          <target state="translated">getstate</target>
        </trans-unit>
        <trans-unit id="76aa149ffff86f87ed2a01aa65f7b3abb7a51cac" translate="yes" xml:space="preserve">
          <source>getstate()</source>
          <target state="translated">getstate()</target>
        </trans-unit>
        <trans-unit id="1ee0e85af8318773010919d2883acec5058bea15" translate="yes" xml:space="preserve">
          <source>ggh</source>
          <target state="translated">ggh</target>
        </trans-unit>
        <trans-unit id="c4f91cfa24808d10aa2aa6f0197e5e5ffd7551c8" translate="yes" xml:space="preserve">
          <source>gidf.U</source>
          <target state="translated">gidf.U</target>
        </trans-unit>
        <trans-unit id="7f8f544860a6b1d56e60cd3685fa26ea3f5e103b" translate="yes" xml:space="preserve">
          <source>gidsign.U</source>
          <target state="translated">gidsign.U</target>
        </trans-unit>
        <trans-unit id="587c1b4fcbfe4603708082a4a971da75d94d3f72" translate="yes" xml:space="preserve">
          <source>gidsize.U</source>
          <target state="translated">gidsize.U</target>
        </trans-unit>
        <trans-unit id="3220c834c02eed675910bdf47c87ab8a49b52d0b" translate="yes" xml:space="preserve">
          <source>gidtype.U</source>
          <target state="translated">gidtype.U</target>
        </trans-unit>
        <trans-unit id="fa9f22e62229ac79ecee117c88192ee717a9e178" translate="yes" xml:space="preserve">
          <source>give</source>
          <target state="translated">give</target>
        </trans-unit>
        <trans-unit id="e51636622aff0f91f981b9aeb5c5c7e2b7de101a" translate="yes" xml:space="preserve">
          <source>give the same answer.</source>
          <target state="translated">同じ答えを出す</target>
        </trans-unit>
        <trans-unit id="de2e0b962c2ec75ca2332ecffc7d8ed216045718" translate="yes" xml:space="preserve">
          <source>give the string to scan,</source>
          <target state="translated">スキャンする文字列を与えます。</target>
        </trans-unit>
        <trans-unit id="1d71315e40d788175324082b08aeee624501f8d5" translate="yes" xml:space="preserve">
          <source>given</source>
          <target state="translated">given</target>
        </trans-unit>
        <trans-unit id="c290cc922cd0ba455404b4df1c2bffec7f9e72eb" translate="yes" xml:space="preserve">
          <source>given, then the exit status will default to 2 if the verbose level is 0 and will default to 1 otherwise.</source>
          <target state="translated">が与えられた場合、終了ステータスは冗長レベルが 0 の場合は 2 に、そうでない場合は 1 になります。</target>
        </trans-unit>
        <trans-unit id="1e26c016c99b3a59d4b82b83c4eac1438126955f" translate="yes" xml:space="preserve">
          <source>gives a list of constant names. Each can either be a string, which is taken as a C macro name, or a reference to a hash with the following keys</source>
          <target state="translated">は定数名のリストを与えます。それぞれが文字列であり、C マクロ名として扱われるか、以下のキーを持つハッシュへの参照となります。</target>
        </trans-unit>
        <trans-unit id="0a416f0d87d597705cb6921716fe817cadc9105c" translate="yes" xml:space="preserve">
          <source>gives an example of using the G_ARRAY flag and the mechanics of accessing the returned items from the Perl stack.</source>
          <target state="translated">は、G_ARRAY フラグの使用例と、Perl スタックから返されたアイテムにアクセスする仕組みを示しています。</target>
        </trans-unit>
        <trans-unit id="35a76868997be8c05e15e7889322286ba715c414" translate="yes" xml:space="preserve">
          <source>gives conversion flags, and</source>
          <target state="translated">変換フラグを与え</target>
        </trans-unit>
        <trans-unit id="851cebaad5b03115b9d96f6371dd4e2024a8c6b5" translate="yes" xml:space="preserve">
          <source>gives details of how to dispose of these temporaries explicitly and the section</source>
          <target state="translated">のセクションでは、これらのテンポラリを明示的に処分する方法の詳細が示されています。</target>
        </trans-unit>
        <trans-unit id="7d29264df216f2a75a89ebc035663ca9d06d74c8" translate="yes" xml:space="preserve">
          <source>gives output flags.</source>
          <target state="translated">は出力フラグを与えます。</target>
        </trans-unit>
        <trans-unit id="ec6c1ea7227c5196049363e4ea9dfabe111f9d25" translate="yes" xml:space="preserve">
          <source>gives the SV to embed in the op; this function takes ownership of one reference to it.</source>
          <target state="translated">この関数は、オペランドに埋め込むSVを与えます。</target>
        </trans-unit>
        <trans-unit id="bae1e5bbf142ed50a0355edeb7fa93e418f5a045" translate="yes" xml:space="preserve">
          <source>gives the eight bits of &lt;code&gt;op_flags&lt;/code&gt; , and, shifted up eight bits, the eight bits of &lt;code&gt;op_private&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;op_flags&lt;/code&gt; の8ビットを提供し、8ビット上にシフトした &lt;code&gt;op_private&lt;/code&gt; の 8ビットを提供します。</target>
        </trans-unit>
        <trans-unit id="c208b19dcae7346474f82c86a10c7fd71e805c30" translate="yes" xml:space="preserve">
          <source>gives the eight bits of &lt;code&gt;op_flags&lt;/code&gt; , except that &lt;code&gt;OPf_KIDS&lt;/code&gt; will be set automatically if required, and, shifted up eight bits, the eight bits of &lt;code&gt;op_private&lt;/code&gt; , except that the bit with value 1 is automatically set.</source>
          <target state="translated">8ビット与える &lt;code&gt;op_flags&lt;/code&gt; のことを除いて、 &lt;code&gt;OPf_KIDS&lt;/code&gt; が必要に応じて自動的に設定、および、8ビット、8ビットのシフトアップされる &lt;code&gt;op_private&lt;/code&gt; を値1を有するビットが自動的に設定されることを除いて、。</target>
        </trans-unit>
        <trans-unit id="4230da511943d29213b95daee7e1593624ecad3f" translate="yes" xml:space="preserve">
          <source>gives the eight bits of &lt;code&gt;op_flags&lt;/code&gt; , except that &lt;code&gt;OPf_KIDS&lt;/code&gt; will be set automatically if required.</source>
          <target state="translated">&lt;code&gt;op_flags&lt;/code&gt; の8ビットを提供しますが、必要に応じて &lt;code&gt;OPf_KIDS&lt;/code&gt; が自動的に設定されます。</target>
        </trans-unit>
        <trans-unit id="82788ff00395258ecb8e092bf0ce2b4de1ed53d4" translate="yes" xml:space="preserve">
          <source>gives the eight bits of &lt;code&gt;op_flags&lt;/code&gt; , except that &lt;code&gt;OPf_KIDS&lt;/code&gt; will be set automatically, and, shifted up eight bits, the eight bits of &lt;code&gt;op_private&lt;/code&gt; , except that the bit with value 1 is automatically set.</source>
          <target state="translated">&lt;code&gt;OPf_KIDS&lt;/code&gt; が自動的に設定されることを除いて、 &lt;code&gt;op_flags&lt;/code&gt; の8ビットを提供します。8ビット上にシフトすると、値1のビットが自動的に設定されることを除いて、 &lt;code&gt;op_private&lt;/code&gt; の8ビットになります。</target>
        </trans-unit>
        <trans-unit id="3bbcbfb34816b200d713ecd9d2c55d010eca47ca" translate="yes" xml:space="preserve">
          <source>gives the eight bits of &lt;code&gt;op_flags&lt;/code&gt; , except that &lt;code&gt;OPf_KIDS&lt;/code&gt; will be set automatically, and, shifted up eight bits, the eight bits of &lt;code&gt;op_private&lt;/code&gt; , except that the bit with value 1 or 2 is automatically set as required.</source>
          <target state="translated">8ビット与える &lt;code&gt;op_flags&lt;/code&gt; のことを除いて、 &lt;code&gt;OPf_KIDS&lt;/code&gt; を自動的に設定し、8ビット、8ビットのシフトアップされる &lt;code&gt;op_private&lt;/code&gt; を必要に応じて値1又は2を有するビットが自動的に設定されることを除いて、。</target>
        </trans-unit>
        <trans-unit id="d4eb78e198e0d24c0f03e0554a6dbcb42ea7ab52" translate="yes" xml:space="preserve">
          <source>gives the eight bits of &lt;code&gt;op_flags&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;op_flags&lt;/code&gt; の8ビットを提供します。</target>
        </trans-unit>
        <trans-unit id="55a9f2d6c25b9e32ea4df02e8c3a9460aa10843d" translate="yes" xml:space="preserve">
          <source>gives the eight bits of &lt;code&gt;op_flags&lt;/code&gt; . A pad slot is automatically allocated, and is populated with</source>
          <target state="translated">&lt;code&gt;op_flags&lt;/code&gt; の8ビットを提供します。パッドスロットが自動的に割り当てられ、</target>
        </trans-unit>
        <trans-unit id="a2ab6d35d313dae9a25d3de9f0d620900e68a10d" translate="yes" xml:space="preserve">
          <source>gives the eight bits of &lt;code&gt;op_flags&lt;/code&gt; and, shifted up eight bits, the eight bits of &lt;code&gt;op_private&lt;/code&gt; .</source>
          <target state="translated">8ビットの与え &lt;code&gt;op_flags&lt;/code&gt; を 8ビット、8ビットのシフトアップ、および &lt;code&gt;op_private&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="fde89a4f846607a0465b4e18a1fd481f0f2a5f49" translate="yes" xml:space="preserve">
          <source>gives the eight bits of &lt;code&gt;op_flags&lt;/code&gt; for the &lt;code&gt;flip&lt;/code&gt; op and, shifted up eight bits, the eight bits of &lt;code&gt;op_private&lt;/code&gt; for both the &lt;code&gt;flip&lt;/code&gt; and &lt;code&gt;range&lt;/code&gt; ops, except that the bit with value 1 is automatically set.</source>
          <target state="translated">8ビット与える &lt;code&gt;op_flags&lt;/code&gt; のため &lt;code&gt;flip&lt;/code&gt; OPと、8ビット、8ビットのシフトアップ &lt;code&gt;op_private&lt;/code&gt; の両方に &lt;code&gt;flip&lt;/code&gt; および &lt;code&gt;range&lt;/code&gt; 値1を有するビットが自動的に設定されることを除いて、OPS。</target>
        </trans-unit>
        <trans-unit id="f38158b57a887d76320374ccf8cd91f77a57f634" translate="yes" xml:space="preserve">
          <source>gives the eight bits of &lt;code&gt;op_flags&lt;/code&gt; for the &lt;code&gt;leaveloop&lt;/code&gt; op and, shifted up eight bits, the eight bits of &lt;code&gt;op_private&lt;/code&gt; for the &lt;code&gt;leaveloop&lt;/code&gt; op, except that (in both cases) some bits will be set automatically.</source>
          <target state="translated">8ビット与える &lt;code&gt;op_flags&lt;/code&gt; のため &lt;code&gt;leaveloop&lt;/code&gt; の OPと、8ビット、8ビットのシフトアップ &lt;code&gt;op_private&lt;/code&gt; ため &lt;code&gt;leaveloop&lt;/code&gt; のいくつかのビットが自動的に設定される（両方の場合に）ことを除いて、オペアンプを。</target>
        </trans-unit>
        <trans-unit id="618e630190c6bca7780f6bd84b8203bca465ad5f" translate="yes" xml:space="preserve">
          <source>gives the eight bits of &lt;code&gt;op_flags&lt;/code&gt; for the state op.</source>
          <target state="translated">状態op の8ビットの &lt;code&gt;op_flags&lt;/code&gt; を提供します。</target>
        </trans-unit>
        <trans-unit id="635adaaf90890af4c2d8b512354431d92062b6c1" translate="yes" xml:space="preserve">
          <source>gives the eight bits of &lt;code&gt;op_flags&lt;/code&gt; for the top-level op, except that some bits will be set automatically as required.</source>
          <target state="translated">必要に応じて一部のビットが自動的に設定されることを除いて、トップレベルのop の &lt;code&gt;op_flags&lt;/code&gt; の8ビットを提供します。</target>
        </trans-unit>
        <trans-unit id="9418388b07d9bf105a4a081911a663f8f2d31b40" translate="yes" xml:space="preserve">
          <source>gives you much greater flexibility in how you can specify the Perl subroutine.</source>
          <target state="translated">は、Perlのサブルーチンの指定方法をより柔軟にしてくれます。</target>
        </trans-unit>
        <trans-unit id="592aabc7891f995e1e0ab5ee96f18d89cd150cf8" translate="yes" xml:space="preserve">
          <source>gives you read-write access:</source>
          <target state="translated">を使用すると、読み書きアクセスが可能になります。</target>
        </trans-unit>
        <trans-unit id="a5a239505e75d4530b2692a575ce969b6e7937a1" translate="yes" xml:space="preserve">
          <source>glob</source>
          <target state="translated">glob</target>
        </trans-unit>
        <trans-unit id="7fba0aebff5bbeae94e184d13c1f26f33dc8e2eb" translate="yes" xml:space="preserve">
          <source>glob EXPR</source>
          <target state="translated">グロブエクスプリ</target>
        </trans-unit>
        <trans-unit id="3f914a18ca9da01d0ea56660cec7ba52367ef14d" translate="yes" xml:space="preserve">
          <source>glob()</source>
          <target state="translated">glob()</target>
        </trans-unit>
        <trans-unit id="9e37e6714a5e0399452479a62a8f8922c9c28351" translate="yes" xml:space="preserve">
          <source>global data for their results.</source>
          <target state="translated">その結果をグローバルデータで表示しています。</target>
        </trans-unit>
        <trans-unit id="f1680fbe09d9fde500e05d3bda41d7f7658a8c95" translate="yes" xml:space="preserve">
          <source>globbing</source>
          <target state="translated">globbing</target>
        </trans-unit>
        <trans-unit id="83354ba3538ffb5a120efe441a46ad1b4fd5806f" translate="yes" xml:space="preserve">
          <source>globvar.sym</source>
          <target state="translated">globvar.sym</target>
        </trans-unit>
        <trans-unit id="cba756e42549e0df20cb5a30b69230f34dae95c8" translate="yes" xml:space="preserve">
          <source>glue code.</source>
          <target state="translated">グルーコード。</target>
        </trans-unit>
        <trans-unit id="5ee5b10c95b1dd0b1e68943952991929785a7e3c" translate="yes" xml:space="preserve">
          <source>gmon.out</source>
          <target state="translated">gmon.out</target>
        </trans-unit>
        <trans-unit id="7aae514a174630d78b90bee7a6cf7f2e891bddd8" translate="yes" xml:space="preserve">
          <source>gmon.sum</source>
          <target state="translated">gmon.sum</target>
        </trans-unit>
        <trans-unit id="93fc5a3abe299bd0e3301f446d0b1347e78a0ed7" translate="yes" xml:space="preserve">
          <source>gmtime</source>
          <target state="translated">gmtime</target>
        </trans-unit>
        <trans-unit id="f3fbb1d66bf7971ed3bd4278808b94815432e096" translate="yes" xml:space="preserve">
          <source>gmtime EXPR</source>
          <target state="translated">ジーエムタイムエクスプレス</target>
        </trans-unit>
        <trans-unit id="cc74a1c755ab908a83a5fd466b4b5b6aca2aedeb" translate="yes" xml:space="preserve">
          <source>gnuawk.zip</source>
          <target state="translated">gnuawk.zip</target>
        </trans-unit>
        <trans-unit id="c878ce553baa0b50040e454a791b8eb1087d3a96" translate="yes" xml:space="preserve">
          <source>gnufutil.zip</source>
          <target state="translated">gnufutil.zip</target>
        </trans-unit>
        <trans-unit id="7c5c72eada187e9c3280093ed6a7f8353e93de59" translate="yes" xml:space="preserve">
          <source>gnugrep.zip</source>
          <target state="translated">gnugrep.zip</target>
        </trans-unit>
        <trans-unit id="c463bb4ac2095b146aac6d5c1e61bf55f6162f90" translate="yes" xml:space="preserve">
          <source>gnumake.zip</source>
          <target state="translated">gnumake.zip</target>
        </trans-unit>
        <trans-unit id="c373a4b201a8868df3b0f25555fa248d836fb421" translate="yes" xml:space="preserve">
          <source>gnupatch.zip</source>
          <target state="translated">gnupatch.zip</target>
        </trans-unit>
        <trans-unit id="8b7081dfe2cb2965b799bb4738bd4faf3997bc65" translate="yes" xml:space="preserve">
          <source>gnused.zip</source>
          <target state="translated">gnused.zip</target>
        </trans-unit>
        <trans-unit id="87046c81ed5ad6d7aef2f0dd28e385b8b42e69ce" translate="yes" xml:space="preserve">
          <source>gnusutil.zip</source>
          <target state="translated">gnusutil.zip</target>
        </trans-unit>
        <trans-unit id="dbf7120a0375e6d6bb11d835145ba344360ba661" translate="yes" xml:space="preserve">
          <source>gnututil.zip</source>
          <target state="translated">gnututil.zip</target>
        </trans-unit>
        <trans-unit id="535c19397c3ff76340a70fe14d2830780b789ec5" translate="yes" xml:space="preserve">
          <source>go quadratic. (A</source>
          <target state="translated">二次的に行く。(A</target>
        </trans-unit>
        <trans-unit id="361f887b4354f17626ad3da7c78320d7228eb837" translate="yes" xml:space="preserve">
          <source>gofs</source>
          <target state="translated">gofs</target>
        </trans-unit>
        <trans-unit id="51344e2445b5305e316973e98702bb0098aef055" translate="yes" xml:space="preserve">
          <source>goto</source>
          <target state="translated">goto</target>
        </trans-unit>
        <trans-unit id="b67ebe9169d3e28697326c33c082f98db2ed7fb6" translate="yes" xml:space="preserve">
          <source>goto &amp;amp;NAME</source>
          <target state="translated">＆NAMEに移動</target>
        </trans-unit>
        <trans-unit id="eca2fa86bd2c15eff72605b151374ffe7eb3d49a" translate="yes" xml:space="preserve">
          <source>goto EXPR</source>
          <target state="translated">ゴトエクスプレ</target>
        </trans-unit>
        <trans-unit id="ad4a148f91850ac8144069ddc32fc3db3ec6574d" translate="yes" xml:space="preserve">
          <source>goto LABEL</source>
          <target state="translated">goto LABEL</target>
        </trans-unit>
        <trans-unit id="435b88dd3bdf050b8cd70429e67cf90ecb824d77" translate="yes" xml:space="preserve">
          <source>governs when child functions of</source>
          <target state="translated">の子関数が</target>
        </trans-unit>
        <trans-unit id="9db65548458ceb3702db8e78dfac04a651a6e503" translate="yes" xml:space="preserve">
          <source>gpg</source>
          <target state="translated">gpg</target>
        </trans-unit>
        <trans-unit id="f1a2ece7f7c285e69acc44597490390716352d98" translate="yes" xml:space="preserve">
          <source>gprof</source>
          <target state="translated">gprof</target>
        </trans-unit>
        <trans-unit id="4eced8febbb1c5c3c61c123d26417acddcfd31dd" translate="yes" xml:space="preserve">
          <source>gradians. The result is by default wrapped to be inside the [0, {2pi,360,400}[ circle. If you don't want this, supply a true second argument:</source>
          <target state="translated">グラデーションを使用しています。結果はデフォルトでは [0,{2pi,360,400}[circle.これを望まない場合は、第二引数に真の値を与えてください。</target>
        </trans-unit>
        <trans-unit id="338df5dd54a1ae691848a19bfb421003d0264327" translate="yes" xml:space="preserve">
          <source>grammar</source>
          <target state="translated">grammar</target>
        </trans-unit>
        <trans-unit id="9a91b949ab4a8c405f298dadb013e9594e8f9edf" translate="yes" xml:space="preserve">
          <source>grapheme cluster</source>
          <target state="translated">ぶもんぐん</target>
        </trans-unit>
        <trans-unit id="d4a0232eb119bf63107028a13d4f93f968d15cb3" translate="yes" xml:space="preserve">
          <source>grapheme cluster string</source>
          <target state="translated">グラフィーム・クラスター文字列</target>
        </trans-unit>
        <trans-unit id="f1bef4d78d7550419990c6620d617fb6040e4268" translate="yes" xml:space="preserve">
          <source>graphical</source>
          <target state="translated">graphical</target>
        </trans-unit>
        <trans-unit id="d428b33f219bd4fb0cff63cf1182e548df9c46d0" translate="yes" xml:space="preserve">
          <source>great circle distance</source>
          <target state="translated">だいえんきょり</target>
        </trans-unit>
        <trans-unit id="43e73c625e88de3d7609f22cb2103931f389b9c7" translate="yes" xml:space="preserve">
          <source>great circle formulas</source>
          <target state="translated">大円式</target>
        </trans-unit>
        <trans-unit id="4cab44539fc08a95d7233437384487630d0695ef" translate="yes" xml:space="preserve">
          <source>great_circle_bearing</source>
          <target state="translated">great_circle_bearing</target>
        </trans-unit>
        <trans-unit id="db569ac01d4cd7973c4a688c612ed07d6a8dd781" translate="yes" xml:space="preserve">
          <source>great_circle_destination</source>
          <target state="translated">great_circle_destination</target>
        </trans-unit>
        <trans-unit id="2351998ceaddec3b0085a2b2e4aaea71cfe83621" translate="yes" xml:space="preserve">
          <source>great_circle_direction</source>
          <target state="translated">great_circle_direction</target>
        </trans-unit>
        <trans-unit id="38edbd3b8b4ee9b5a6f540dc15a1b767adfa9915" translate="yes" xml:space="preserve">
          <source>great_circle_distance</source>
          <target state="translated">great_circle_distance</target>
        </trans-unit>
        <trans-unit id="564c7c6f9d0adbdd57b2179dfbe61c1a99176eef" translate="yes" xml:space="preserve">
          <source>great_circle_midpoint</source>
          <target state="translated">great_circle_midpoint</target>
        </trans-unit>
        <trans-unit id="9b69eb29ec0ca0010a8f738ba22c5690317b2967" translate="yes" xml:space="preserve">
          <source>great_circle_waypoint</source>
          <target state="translated">great_circle_waypoint</target>
        </trans-unit>
        <trans-unit id="9f3a9b55692647f78ff873c342a2ababe75b5ae4" translate="yes" xml:space="preserve">
          <source>greatly</source>
          <target state="translated">greatly</target>
        </trans-unit>
        <trans-unit id="0793b775d4faa865dcce0ed5ab3d9df20f63a2d9" translate="yes" xml:space="preserve">
          <source>greedy</source>
          <target state="translated">greedy</target>
        </trans-unit>
        <trans-unit id="5727dbee4e9d3d4f4d11c8b6a9579cef8f987d1c" translate="yes" xml:space="preserve">
          <source>gregor@focusresearch.com</source>
          <target state="translated">gregor@focusresearch.com</target>
        </trans-unit>
        <trans-unit id="6f99ebe40786111b7cceba8dccba662029d1e094" translate="yes" xml:space="preserve">
          <source>grep</source>
          <target state="translated">grep</target>
        </trans-unit>
        <trans-unit id="8f04f587820f5859412c44e7c77fdd5a6943c91a" translate="yes" xml:space="preserve">
          <source>grep BLOCK LIST</source>
          <target state="translated">grepブロックリスト</target>
        </trans-unit>
        <trans-unit id="0fa37fffdc4826300e657bc441fb75bc563d53bb" translate="yes" xml:space="preserve">
          <source>grep EXPR,LIST</source>
          <target state="translated">grep EXPR,LIST</target>
        </trans-unit>
        <trans-unit id="90e6bcd0f4bdd02032c283b745589f3a348b7606" translate="yes" xml:space="preserve">
          <source>groff</source>
          <target state="translated">groff</target>
        </trans-unit>
        <trans-unit id="739bd029629243732eb682db005a7541f7509622" translate="yes" xml:space="preserve">
          <source>grok</source>
          <target state="translated">grok</target>
        </trans-unit>
        <trans-unit id="64292b1c2b2e13ead8788fc8a2b8edc8c1db4ecd" translate="yes" xml:space="preserve">
          <source>group</source>
          <target state="translated">group</target>
        </trans-unit>
        <trans-unit id="4cb058f9a77e86a64034e60e8f4468119015ef93" translate="yes" xml:space="preserve">
          <source>grouping</source>
          <target state="translated">grouping</target>
        </trans-unit>
        <trans-unit id="f81b2c4066ff876f98eb619cd7bf6e00ce3555e0" translate="yes" xml:space="preserve">
          <source>groupstype.U</source>
          <target state="translated">groupstype.U</target>
        </trans-unit>
        <trans-unit id="10fda7ae12393f827c12fe6965dbbb003844c8d0" translate="yes" xml:space="preserve">
          <source>grp.h</source>
          <target state="translated">grp.h</target>
        </trans-unit>
        <trans-unit id="d144d2917bc0f5807e38220a7abc237342a42923" translate="yes" xml:space="preserve">
          <source>gsplit.exe</source>
          <target state="translated">gsplit.exe</target>
        </trans-unit>
        <trans-unit id="7ddf988c838812a4318332f2967bbe1035b2db75" translate="yes" xml:space="preserve">
          <source>gt</source>
          <target state="translated">gt</target>
        </trans-unit>
        <trans-unit id="a6be9252cc4fe8d998d733818c2840f3be68af5c" translate="yes" xml:space="preserve">
          <source>guard against.</source>
          <target state="translated">からのガード。</target>
        </trans-unit>
        <trans-unit id="cee993b5004ecd6b70e368a27c652f88b841adb7" translate="yes" xml:space="preserve">
          <source>gunzip $input_filename_or_reference =&amp;gt; $output_filename_or_reference [, OPTS]</source>
          <target state="translated">gunzip $ input_filename_or_reference =&amp;gt; $ output_filename_or_reference [、OPTS]</target>
        </trans-unit>
        <trans-unit id="8cd4706320fd13cb95d032b81bafcd79df08086d" translate="yes" xml:space="preserve">
          <source>gv</source>
          <target state="translated">gv</target>
        </trans-unit>
        <trans-unit id="664d5d3255b53e7b4cfe2e75fee977df3feb8aee" translate="yes" xml:space="preserve">
          <source>gzcat</source>
          <target state="translated">gzcat</target>
        </trans-unit>
        <trans-unit id="ca546e369beecaae3968c126fccb8b5415e4ae84" translate="yes" xml:space="preserve">
          <source>gzip</source>
          <target state="translated">gzip</target>
        </trans-unit>
        <trans-unit id="4ec430c23ed4a3bf7a4a723f0ff73c566e7f96eb" translate="yes" xml:space="preserve">
          <source>gzip $input_filename_or_reference =&amp;gt; $output_filename_or_reference [, OPTS]</source>
          <target state="translated">gzip $ input_filename_or_reference =&amp;gt; $ output_filename_or_reference [、OPTS]</target>
        </trans-unit>
        <trans-unit id="a44a637cb1933109e5a25483cdb1553878f4bcdf" translate="yes" xml:space="preserve">
          <source>gzip on BS2000</source>
          <target state="translated">BS2000でのgzip</target>
        </trans-unit>
        <trans-unit id="685f503c6874f66fc1af9e672de9a3a4a9629081" translate="yes" xml:space="preserve">
          <source>gzip@prep.ai.mit.edu</source>
          <target state="translated">gzip@prep.ai.mit.edu</target>
        </trans-unit>
        <trans-unit id="9c752cd8fc676e8c799524b33fbf43a1081a55f7" translate="yes" xml:space="preserve">
          <source>gzstream</source>
          <target state="translated">gzstream</target>
        </trans-unit>
        <trans-unit id="27d5482eebd075de44389774fce28c69f45c8a75" translate="yes" xml:space="preserve">
          <source>h</source>
          <target state="translated">h</target>
        </trans-unit>
        <trans-unit id="e940889cd9388ef335fa7fe5191b8168c63d122e" translate="yes" xml:space="preserve">
          <source>h2ph</source>
          <target state="translated">h2ph</target>
        </trans-unit>
        <trans-unit id="698a79bf25312a82975b86b4fba718425c53ccb6" translate="yes" xml:space="preserve">
          <source>h2ph - convert .h C header files to .ph Perl header files</source>
          <target state="translated">h2ph-.h C ヘッダファイルを .ph Perl ヘッダファイルに変換する</target>
        </trans-unit>
        <trans-unit id="602a5cc441c79fe0af7566993d7e69f774a7e7f5" translate="yes" xml:space="preserve">
          <source>h2xs</source>
          <target state="translated">h2xs</target>
        </trans-unit>
        <trans-unit id="75500d1040e785f1564d8998d90a25730d220733" translate="yes" xml:space="preserve">
          <source>h2xs - convert .h C header files to Perl extensions</source>
          <target state="translated">h2xs-.h C ヘッダファイルを Perl 拡張子に変換する</target>
        </trans-unit>
        <trans-unit id="065c294362c0fb2f1a524a48a66eafade10f03c7" translate="yes" xml:space="preserve">
          <source>h2xs creates a number of files in the extension directory. The file Makefile.PL is a perl script which will generate a true Makefile to build the extension. We'll take a closer look at it later.</source>
          <target state="translated">h2xs は拡張機能ディレクトリにいくつかのファイルを作成します。Makefile.PLというファイルは、拡張子をビルドするための真のMakefileを生成するperlスクリプトです。後で詳しく見てみましょう。</target>
        </trans-unit>
        <trans-unit id="80e0f1d764e64051153e40f6bd02317535f49b67" translate="yes" xml:space="preserve">
          <source>h2xs looks for header files</source>
          <target state="translated">h2xs はヘッダファイルを探します</target>
        </trans-unit>
        <trans-unit id="372696ee64d9cb18cb7873ba67925afdeba8a92e" translate="yes" xml:space="preserve">
          <source>h:/opt/gnu</source>
          <target state="translated">h:/opt/gnu</target>
        </trans-unit>
        <trans-unit id="fd74da0af9e2c8c1b0ec00cc89159479549c552b" translate="yes" xml:space="preserve">
          <source>h_fcntl.U</source>
          <target state="translated">h_fcntl.U</target>
        </trans-unit>
        <trans-unit id="3993dc648b95ca4d3ce517ecb8ff28b2ecac1523" translate="yes" xml:space="preserve">
          <source>h_sysfile.U</source>
          <target state="translated">h_sysfile.U</target>
        </trans-unit>
        <trans-unit id="d0fc6369b583606ccdcf480890ae1decee9b4cdd" translate="yes" xml:space="preserve">
          <source>hackers who haven't picked up the saner idiom yet. A warning is emitted if the &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; pragma or the &lt;b&gt;-w&lt;/b&gt; command-line flag (that is, the &lt;code&gt;$^W&lt;/code&gt; variable) was set.</source>
          <target state="translated">まだ正気なイディオムを取得していないハッカー。 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; warnings&lt;/code&gt; プラグマまたは&lt;b&gt;-w&lt;/b&gt;コマンドラインフラグ（つまり、 &lt;code&gt;$^W&lt;/code&gt; 変数）が設定されている場合、警告が発行されます。</target>
        </trans-unit>
        <trans-unit id="a2dd7ec666aacd57fc6d0571db038b51deb9fb6e" translate="yes" xml:space="preserve">
          <source>handle</source>
          <target state="translated">handle</target>
        </trans-unit>
        <trans-unit id="4dbe32e9426490ec9ee235e390324e5e32f6aad3" translate="yes" xml:space="preserve">
          <source>handle_code</source>
          <target state="translated">handle_code</target>
        </trans-unit>
        <trans-unit id="cc1e04d836d55aa8a3adb5658f7aed2e3381e675" translate="yes" xml:space="preserve">
          <source>handle_text</source>
          <target state="translated">handle_text</target>
        </trans-unit>
        <trans-unit id="a800dc33c7d05f05be5bcb9aa0ba9d047f262574" translate="yes" xml:space="preserve">
          <source>handy.h</source>
          <target state="translated">handy.h</target>
        </trans-unit>
        <trans-unit id="1d6de760fabe020e649003f43feac222659ac50f" translate="yes" xml:space="preserve">
          <source>happy--and in that particular case Perl still works too because</source>
          <target state="translated">というのも、この場合は Perl も動作するからです。</target>
        </trans-unit>
        <trans-unit id="cae5970fc939e302346d8b50d4fb711b7e515c4b" translate="yes" xml:space="preserve">
          <source>hard</source>
          <target state="translated">hard</target>
        </trans-unit>
        <trans-unit id="1ada4757a96e56e6acfffdd166fde78058e2a390" translate="yes" xml:space="preserve">
          <source>hard realtime</source>
          <target state="translated">ハードリアルタイム</target>
        </trans-unit>
        <trans-unit id="0b53ee4e3f7950633ea465e0be83ff9c67f38ee4" translate="yes" xml:space="preserve">
          <source>harder, because it's easier to code two processes to do one thing than it is to code one process to do two things. (This keep-it-simple principle a cornerstones of the Unix philosophy, and good software engineering as well, which is probably why it's spread to other systems.)</source>
          <target state="translated">なぜなら、2つのことを行うために1つのプロセスをコード化するよりも、1つのことを行うために2つのプロセスをコード化する方が簡単だからです。(この keep-it-simple の原則は、Unix の哲学の礎であり、優れたソフトウェア工学でもあるので、他のシステムにも広まっているのでしょう)。</target>
        </trans-unit>
        <trans-unit id="6e0048a65713986a22cc379cd48a6aeb40b2ae31" translate="yes" xml:space="preserve">
          <source>has &lt;code&gt;CROSS_NAME&lt;/code&gt; macro, and it is used further to refer to your cross-compilation scheme. You could assign a name to it, but this is not necessary, because by default it is assigned after your machine configuration name, such as &quot;wince-sh3-hpc-wce211&quot;, and this is enough to distinguish different builds at the same time. This option could be handy for several different builds on same platform to perform, say, threaded build. In a following example we assume that all required environment variables are set properly for C cross-compiler (a special *.bat file could fit perfectly to this purpose) and your</source>
          <target state="translated">持っている &lt;code&gt;CROSS_NAME&lt;/code&gt; マクロを、あなたのクロスコンパイルスキームを参照するためにさらに使用されています。名前を割り当てることもできますが、デフォルトでは「wince-sh3-hpc-wce211」などのマシン構成名の後に割り当てられるため、これは必要ありません。これは、異なるビルドを同時に区別するのに十分です。 。このオプションは、スレッド化ビルドなど、同じプラットフォームでのいくつかの異なるビルドを実行する場合に便利です。次の例では、必要なすべての環境変数がCクロスコンパイラー（適切な* .batファイルはこの目的に完全に適合します）に正しく設定されていると想定しています。</target>
        </trans-unit>
        <trans-unit id="6dc6baa8cb3a72ed90c05fc388e1f42be0472571" translate="yes" xml:space="preserve">
          <source>has a couple of static variables used in OS/2-specific functions. (Need to be moved to per-thread structure, or serialized?)</source>
          <target state="translated">には OS/2 固有の関数で使われるいくつかの静的変数があります。(スレッド単位の構造体に移動させるか、シリアル化する必要があるか?)</target>
        </trans-unit>
        <trans-unit id="9ff9d11ac08fffd3eb2a477a8f3949a53eecd01a" translate="yes" xml:space="preserve">
          <source>has a different folding in Turkic languages, in which case it is one or more codes (separated by spaces) that, taken in order, give the code points for the case folding for</source>
          <target state="translated">がトルコ語の言語では異なる折り方をしていますが、その場合は、1つ以上のコード(スペースで区切られています)であり、順番に並べることで</target>
        </trans-unit>
        <trans-unit id="629f108077a33b0529ea4d8f63f45393db95dd9e" translate="yes" xml:space="preserve">
          <source>has a high enough REFCNT to survive its use on the stack you need not do any mortalization. If you are not sure then doing an &lt;code&gt;SvREFCNT_inc&lt;/code&gt; and &lt;code&gt;sv_2mortal&lt;/code&gt; , or making a &lt;code&gt;sv_mortalcopy&lt;/code&gt; is safer.</source>
          <target state="translated">スタック上での使用に耐えるのに十分な高さのREFCNTがあり、致命化を行う必要はありません。確信がない場合は、 &lt;code&gt;SvREFCNT_inc&lt;/code&gt; および &lt;code&gt;sv_2mortal&lt;/code&gt; を実行するか、またはsv_mortalcopyを作成する &lt;code&gt;sv_mortalcopy&lt;/code&gt; が安全です。</target>
        </trans-unit>
        <trans-unit id="6d00b5aa4e589c31cb5348ae14a7f94076709d5e" translate="yes" xml:space="preserve">
          <source>has a prototype for shmat.</source>
          <target state="translated">シュマットの原型を持っています。</target>
        </trans-unit>
        <trans-unit id="7697c9bbc19a2dc04c2edd2dc73e4c59dc00a643" translate="yes" xml:space="preserve">
          <source>has always meant to print &quot;pop on over&quot;, even though push is a reserved word. This is generalized to work the same without the enclosing double quotes, so that</source>
          <target state="translated">は、pushが予約語であるにもかかわらず、常に &quot;pop on over &quot;と印刷することを意味していました。これは二重引用符で囲まなくても同じように動作するように一般化されています。</target>
        </trans-unit>
        <trans-unit id="58edfedda1234584c207b47dc68b9ea1c5abc759" translate="yes" xml:space="preserve">
          <source>has been called before the user's &lt;code&gt;wanted()&lt;/code&gt; function is called. This enables fast file checks involving _. Note that this guarantee no longer holds if</source>
          <target state="translated">ユーザーの &lt;code&gt;wanted()&lt;/code&gt; 関数が呼び出される前に呼び出されました。これにより、_を含む高速ファイルチェックが可能になります。この保証は、</target>
        </trans-unit>
        <trans-unit id="97d606ca883cc785329e5840a59c37336a3d8f32" translate="yes" xml:space="preserve">
          <source>has been issued.</source>
          <target state="translated">が発行されました。</target>
        </trans-unit>
        <trans-unit id="2ba06350df430879ef5a2918c15d790af7b15c9a" translate="yes" xml:space="preserve">
          <source>has been removed.</source>
          <target state="translated">が削除されました。</target>
        </trans-unit>
        <trans-unit id="c6399d9ea66f0d9439fe398e1bdf5fb159a6b94b" translate="yes" xml:space="preserve">
          <source>has characters with codepoints above 255), Perl tries to make sense of the situation by trying to downgrade (a copy of) the string back to an eight-bit byte string before calling crypt() (on that copy). If that works, good. If not, crypt() dies with &lt;code&gt;Wide character in &lt;a href=&quot;crypt&quot;&gt;crypt&lt;/a&gt;&lt;/code&gt; .</source>
          <target state="translated">コードポイントが255を超える文字がある場合）、Perlはcrypt（）を（そのコピーで）呼び出す前に、文字列（のコピー）を8ビットのバイト文字列にダウングレードしようとして、状況を理解しようとします。それがうまくいけば、いいです。そうでない場合、crypt（） &lt;code&gt;Wide character in &lt;a href=&quot;crypt&quot;&gt;crypt&lt;/a&gt;&lt;/code&gt; ワイド文字で終了します。</target>
        </trans-unit>
        <trans-unit id="a780493a24216a0fc829ab0df9c6ffa01e95afcf" translate="yes" xml:space="preserve">
          <source>has characters with codepoints above 255), Perl tries to make sense of the situation by trying to downgrade (a copy of) the string back to an eight-bit byte string before calling crypt() (on that copy). If that works, good. If not, crypt() dies with &lt;code&gt;Wide character in &lt;a href=&quot;functions/crypt&quot;&gt;crypt&lt;/a&gt;&lt;/code&gt; .</source>
          <target state="translated">コードポイントが255を超える文字がある場合）、Perlはcrypt（）を（そのコピーで）呼び出す前に、文字列（のコピー）を8ビットのバイト文字列にダウングレードしようとして、状況を理解しようとします。それがうまくいけば、いいです。そうでない場合、crypt（） &lt;code&gt;Wide character in &lt;a href=&quot;functions/crypt&quot;&gt;crypt&lt;/a&gt;&lt;/code&gt; ワイド文字で終了します。</target>
        </trans-unit>
        <trans-unit id="18534d61827e3773a042bd93b04976ece6993c53" translate="yes" xml:space="preserve">
          <source>has its own pair of quotes, which may or may not be bracketing quotes, for example, &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s(foo)(bar)&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;foo&gt;/bar/&lt;/foo&gt;&lt;/a&gt;&lt;/code&gt;. A &lt;code&gt;/e&lt;/code&gt; will cause the replacement portion to be treated as a full-fledged Perl expression and evaluated right then and there. It is, however, syntax checked at compile-time. A second &lt;code&gt;e&lt;/code&gt; modifier will cause the replacement portion to be &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;ed before being run as a Perl expression.</source>
          <target state="translated">独自の引用符のペアがあり、 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s(foo)(bar)&lt;/a&gt;&lt;/code&gt; や &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;foo&gt;/bar/&lt;/foo&gt;&lt;/a&gt;&lt;/code&gt; 。 &lt;code&gt;/e&lt;/code&gt; は置換部分が本格的なPerlの式として扱われ、右を評価し、されるようになります。ただし、これはコンパイル時に構文チェックされます。2番目の &lt;code&gt;e&lt;/code&gt; 修飾子は、Perl式として実行される前に置換部分を &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; します。</target>
        </trans-unit>
        <trans-unit id="42bdb323171ffbcdde789194cbac3276755d5887" translate="yes" xml:space="preserve">
          <source>has its own pair of quotes, which may or may not be bracketing quotes; for example, &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr[aeiouy][yuoiea]&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr(+\-*/)/ABCD/&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">独自の引用符のペアがあり、引用符で囲まれている場合とそうでない場合があります。たとえば、 &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr[aeiouy][yuoiea]&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr(+\-*/)/ABCD/&lt;/a&gt;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="16bf4fa566dd59152b947084035a5a4573061f55" translate="yes" xml:space="preserve">
          <source>has no decomposition; or is one or more codes (separated by spaces) that, taken in order, represent a decomposition for</source>
          <target state="translated">の分解を表す1つ以上のコード(スペースで区切られている)です。</target>
        </trans-unit>
        <trans-unit id="1bcf987b570e867c2d133ac9bfaaddd69128cbe9" translate="yes" xml:space="preserve">
          <source>has no effect.</source>
          <target state="translated">は効果がありません。</target>
        </trans-unit>
        <trans-unit id="148429adeb8f4cc46c11a1386018409be7de6c55" translate="yes" xml:space="preserve">
          <source>has no facilities to intuit that a function</source>
          <target state="translated">を直感的に理解する機能はありません。</target>
        </trans-unit>
        <trans-unit id="7b7abc49afa46637aeac05ec54442eac1162e4f9" translate="yes" xml:space="preserve">
          <source>has proper &quot;MACHINE&quot; parameter set, to, say, &lt;code&gt;wince-mips-pocket-wce300&lt;/code&gt; .</source>
          <target state="translated">たとえば、 &lt;code&gt;wince-mips-pocket-wce300&lt;/code&gt; に適切な &quot;MACHINE&quot;パラメータセットがあります。</target>
        </trans-unit>
        <trans-unit id="d8c35644508d444ab425c9fdb0648f792bea008e" translate="yes" xml:space="preserve">
          <source>has several functions that can be useful. It has versions of the previous two functions that take strings as inputs -- not single numeric code points: &lt;code&gt;uni_to_native()&lt;/code&gt; and &lt;code&gt;native_to_uni()&lt;/code&gt; . If you must look at the individual bytes comprising a UTF-8 encoded string, &lt;code&gt;byte_utf8a_to_utf8n()&lt;/code&gt; takes as input a string of those bytes encoded for an ASCII platform, and returns the equivalent string in the native platform. For example, &lt;code&gt;byte_utf8a_to_utf8n(&quot;\xC2\xA0&quot;)&lt;/code&gt; returns the byte sequence on the current platform that form the UTF-8 for &lt;code&gt;U+00A0&lt;/code&gt; , since &lt;code&gt;&quot;\xC2\xA0&quot;&lt;/code&gt; are the UTF-8 bytes on an ASCII platform for that code point. This function returns &lt;code&gt;&quot;\xC2\xA0&quot;&lt;/code&gt; on an ASCII platform, and &lt;code&gt;&quot;\x80\x41&quot;&lt;/code&gt; on an EBCDIC 1047 one.</source>
          <target state="translated">便利な機能がいくつかあります。文字列を入力として受け取る前の2つの関数のバージョンがあり、単一の数値コードポイントではありません： &lt;code&gt;uni_to_native()&lt;/code&gt; と &lt;code&gt;native_to_uni()&lt;/code&gt; 。 UTF-8エンコードされた文字列を構成する個々のバイトを調べる必要がある場合、 &lt;code&gt;byte_utf8a_to_utf8n()&lt;/code&gt; は、ASCIIプラットフォーム用にエンコードされたそれらのバイトの文字列を入力として受け取り、ネイティブプラットフォームで同等の文字列を返します。例えば、 &lt;code&gt;byte_utf8a_to_utf8n(&quot;\xC2\xA0&quot;)&lt;/code&gt; UTF-8の形成現在のプラットフォーム上でバイトシーケンス戻り &lt;code&gt;U+00A0&lt;/code&gt; のため、 &lt;code&gt;&quot;\xC2\xA0&quot;&lt;/code&gt; ASCIIプラットフォーム上のUTF-8バイトであり、そのためコードポイント。この関数は &lt;code&gt;&quot;\xC2\xA0&quot;&lt;/code&gt; 返しますASCIIプラットフォームではEBCDIC 1047 プラットフォームでは &lt;code&gt;&quot;\x80\x41&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a349bfbe3e39cdf069c08edadd31a683355befa8" translate="yes" xml:space="preserve">
          <source>has the &lt;code&gt;COPHH_KEY_UTF8&lt;/code&gt; bit set, the key octets are interpreted as UTF-8, otherwise they are interpreted as Latin-1.</source>
          <target state="translated">持っている &lt;code&gt;COPHH_KEY_UTF8&lt;/code&gt; のビットがセットされて、キーのオクテットは、そうでない場合、彼らはラテン-1として解釈され、UTF-8として解釈されています。</target>
        </trans-unit>
        <trans-unit id="696aa8510c996de3b01fad6eaf94ca79145005ca" translate="yes" xml:space="preserve">
          <source>has the &lt;code&gt;REFCOUNTED_HE_KEY_UTF8&lt;/code&gt; bit set, the key octets are interpreted as UTF-8, otherwise they are interpreted as Latin-1.</source>
          <target state="translated">持っている &lt;code&gt;REFCOUNTED_HE_KEY_UTF8&lt;/code&gt; のビットがセットされて、キーのオクテットは、そうでない場合、彼らはラテン-1として解釈され、UTF-8として解釈されています。</target>
        </trans-unit>
        <trans-unit id="5abea1f4776d8c8fe7d7b6a9645092797c7f72dd" translate="yes" xml:space="preserve">
          <source>has the bit &lt;code&gt;RV2CVOPCV_MARK_EARLY&lt;/code&gt; set, then the handling of a GV reference is modified. If a GV was examined and its CV slot was found to be empty, then the &lt;code&gt;gv&lt;/code&gt; op has the &lt;code&gt;OPpEARLY_CV&lt;/code&gt; flag set. If the op is not optimised away, and the CV slot is later populated with a subroutine having a prototype, that flag eventually triggers the warning &quot;called too early to check prototype&quot;.</source>
          <target state="translated">ビット &lt;code&gt;RV2CVOPCV_MARK_EARLY&lt;/code&gt; が設定されている場合、GV参照の処理が変更されます。 GVが検査され、そのCVスロットが空であることが判明した場合、 &lt;code&gt;gv&lt;/code&gt; opには &lt;code&gt;OPpEARLY_CV&lt;/code&gt; フラグが設定されています。 opが最適化されていない場合、CVスロットにプロトタイプを持つサブルーチンが後で投入されると、そのフラグは最終的に「プロトタイプをチェックするには早すぎて呼び出されました」という警告をトリガーします。</target>
        </trans-unit>
        <trans-unit id="466cbb0803ca0bbb6345a34c5269a9fb15786c2b" translate="yes" xml:space="preserve">
          <source>has the bit &lt;code&gt;RV2CVOPCV_RETURN_NAME_GV&lt;/code&gt; set, then instead of returning a pointer to the subroutine it returns a pointer to the GV giving the most appropriate name for the subroutine in this context. Normally this is just the &lt;code&gt;CvGV&lt;/code&gt; of the subroutine, but for an anonymous (&lt;code&gt;CvANON&lt;/code&gt; ) subroutine that is referenced through a GV it will be the referencing GV. The resulting &lt;code&gt;GV*&lt;/code&gt; is cast to &lt;code&gt;CV*&lt;/code&gt; to be returned. A null pointer is returned as usual if there is no statically-determinable subroutine.</source>
          <target state="translated">ビット &lt;code&gt;RV2CVOPCV_RETURN_NAME_GV&lt;/code&gt; が設定されている場合、サブルーチンへのポインターを返す代わりに、このコンテキストでのサブルーチンに最も適切な名前を与えるGVへのポインターを返します。通常、これはサブルーチンの &lt;code&gt;CvGV&lt;/code&gt; のみですが、GVを介して参照される匿名（ &lt;code&gt;CvANON&lt;/code&gt; ）サブルーチンの場合は、参照するGVになります。結果の &lt;code&gt;GV*&lt;/code&gt; は &lt;code&gt;CV*&lt;/code&gt; にキャストされて返されます。静的に決定可能なサブルーチンがない場合は、通常どおりnullポインターが返されます。</target>
        </trans-unit>
        <trans-unit id="391db83656d8d5d4e16674d7b5438f29da7eba04" translate="yes" xml:space="preserve">
          <source>has the form</source>
          <target state="translated">けいしきをもつ</target>
        </trans-unit>
        <trans-unit id="8b88dd395e3bc6c4b4b078433b1f0b86a7c6c104" translate="yes" xml:space="preserve">
          <source>has the form &lt;code&gt;&lt;i&gt;SCRIPT&lt;/i&gt;:&lt;i&gt;CNAME&lt;/i&gt;&lt;/code&gt;, then</source>
          <target state="translated">フォームの持つ &lt;code&gt;&lt;i&gt;SCRIPT&lt;/i&gt;:&lt;i&gt;CNAME&lt;/i&gt;&lt;/code&gt; を、その後、</target>
        </trans-unit>
        <trans-unit id="47c7b8a8de7baafab19c48224338206152129e15" translate="yes" xml:space="preserve">
          <source>has the same effect as:</source>
          <target state="translated">と同じ効果があります。</target>
        </trans-unit>
        <trans-unit id="d5c1f673102ff29a26eab5486557db5ffdd805c4" translate="yes" xml:space="preserve">
          <source>has_any_match</source>
          <target state="translated">has_any_match</target>
        </trans-unit>
        <trans-unit id="7a631cdfcb72eabb9141b6ea8b13a039cb476f6b" translate="yes" xml:space="preserve">
          <source>has_inst()</source>
          <target state="translated">has_inst()</target>
        </trans-unit>
        <trans-unit id="b32977509a461c0e088913776fb081827bc3e4a3" translate="yes" xml:space="preserve">
          <source>has_my</source>
          <target state="translated">has_my</target>
        </trans-unit>
        <trans-unit id="624715baea54cd1fbfad45fa2ae481491bd2e007" translate="yes" xml:space="preserve">
          <source>has_valid_subkeys</source>
          <target state="translated">has_valid_subkeys</target>
        </trans-unit>
        <trans-unit id="2346ad27d7568ba9896f1b7da6b5991251debdf2" translate="yes" xml:space="preserve">
          <source>hash</source>
          <target state="translated">hash</target>
        </trans-unit>
        <trans-unit id="a79889e0990c0ebf2ff490d10c0481361d2cc972" translate="yes" xml:space="preserve">
          <source>hash (as opposed to the</source>
          <target state="translated">ハッシュ(</target>
        </trans-unit>
        <trans-unit id="b8eda2e19fbfd6731c62bb194dfdd1f3901ebd22" translate="yes" xml:space="preserve">
          <source>hash exhibited by the overloaded dereference operator). Here is one possible fetching routine:</source>
          <target state="translated">ハッシュは、オーバーロードされた参照元演算子によって表示されます)。ここでは、1つの可能性のあるフェッチルーチンを示します。</target>
        </trans-unit>
        <trans-unit id="4664d7bfa0b65860adaf649122951667b8d001d8" translate="yes" xml:space="preserve">
          <source>hash(3)</source>
          <target state="translated">hash(3)</target>
        </trans-unit>
        <trans-unit id="22179e3a61344aadf7ad517c4bdef1ee60a03325" translate="yes" xml:space="preserve">
          <source>hash_seed() returns the seed bytes used to randomise hash ordering.</source>
          <target state="translated">hash_seed()は、ハッシュの順序をランダムにするためのシードバイトを返します。</target>
        </trans-unit>
        <trans-unit id="25b949a9cbebfd473a42d0a27026b90e88704e9c" translate="yes" xml:space="preserve">
          <source>hash_value() returns the current perl's internal hash value for a given string.</source>
          <target state="translated">hash_value()は、与えられた文字列に対する現在のperlの内部ハッシュ値を返します。</target>
        </trans-unit>
        <trans-unit id="ff87cea4a48b77342a2dbef29133a128abc52679" translate="yes" xml:space="preserve">
          <source>have</source>
          <target state="translated">have</target>
        </trans-unit>
        <trans-unit id="e15e7c68dca1dc6aea5ce176cd5a3f31c996924d" translate="yes" xml:space="preserve">
          <source>have an associated &lt;code&gt;.pm&lt;/code&gt; file. For example, &lt;code&gt;Foo::Bar&lt;/code&gt; is a valid &lt;code&gt;NAME&lt;/code&gt; and there must exist</source>
          <target state="translated">関連する &lt;code&gt;.pm&lt;/code&gt; ファイルがあります。たとえば、 &lt;code&gt;Foo::Bar&lt;/code&gt; は有効な &lt;code&gt;NAME&lt;/code&gt; であり、存在する必要があります</target>
        </trans-unit>
        <trans-unit id="2c8c811fd859c69f236edb1161562f6ca5ce55a0" translate="yes" xml:space="preserve">
          <source>have both a Store and a Fetch method. If only one is present, or neither are present, a fatal error will be thrown.</source>
          <target state="translated">には、Store と Fetch の両方のメソッドがあります。どちらか一方だけが存在する場合や、どちらも存在しない場合は、致命的なエラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="0063bb349f91f04c40702ca63c981b64ca26634a" translate="yes" xml:space="preserve">
          <source>have exactly the same effect, leaving the choice of sort algorithm open.</source>
          <target state="translated">は全く同じ効果があり、ソートアルゴリズムの選択は自由です。</target>
        </trans-unit>
        <trans-unit id="e42d1fc176a08e60d541f3e7a944502221f5ff58" translate="yes" xml:space="preserve">
          <source>have fairly good macro support, but in order to use it you'll need to compile perl with macro definitions included in the debugging information. Using</source>
          <target state="translated">はかなり良いマクロをサポートしていますが、それを使うためにはデバッグ情報に含まれるマクロ定義を使ってPerlをコンパイルする必要があります。デバッグ情報に含まれている</target>
        </trans-unit>
        <trans-unit id="d4bc5baf5b8b8ab1c61579305438c060fb3bf212" translate="yes" xml:space="preserve">
          <source>have influenced the following match, see &lt;a href=&quot;#(%3f%3epattern)&quot;&gt;(?&amp;gt;pattern)&lt;/a&gt;.</source>
          <target state="translated">次の一致に影響を与えました。&lt;a href=&quot;#(%3f%3epattern)&quot;&gt;（？&amp;gt; pattern）を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="753856bab2f8ee7ebe90de827f86c0ed6515bd77" translate="yes" xml:space="preserve">
          <source>have locales that work, using them may be worthwhile for certain specific purposes, as long as you keep in mind the gotchas already mentioned. For example, if the collation for your locales works, it runs faster under locales than under &lt;a href=&quot;unicode/collate&quot;&gt;Unicode::Collate&lt;/a&gt;; and you gain access to such things as the local currency symbol and the names of the months and days of the week. (But to hammer home the point, in v5.16, you get this access without the downsides of locales by using the &lt;code&gt;:not_characters&lt;/code&gt; form of the pragma.)</source>
          <target state="translated">動作するロケールがある場合、それらを使用することは、すでに述べた落とし穴を念頭に置いている限り、特定の特定の目的には価値があるかもしれません。たとえば、ロケールの照合が機能する場合、&lt;a href=&quot;unicode/collate&quot;&gt;Unicode :: Collat​​e&lt;/a&gt;よりもロケールの方が速く実行されます。また、現地通貨記号や月と曜日の名前などにアクセスできます。（ただし、v5.16では、プラグマの &lt;code&gt;:not_characters&lt;/code&gt; 形式を使用することにより、ロケールの不利な点なしにこのアクセスを取得できます。）</target>
        </trans-unit>
        <trans-unit id="4241f4418451f0aa5d3eb55968a42750c9ed854d" translate="yes" xml:space="preserve">
          <source>have the &quot;interesting&quot; effect of clobbering @another_array. (Have you ever noticed how when a programmer says something is &quot;interesting&quot;, that rather than meaning &quot;intriguing&quot;, they're disturbingly more apt to mean that it's &quot;annoying&quot;, &quot;difficult&quot;, or both? :-)</source>
          <target state="translated">は @another_array を「面白い」効果があります。(プログラマが何かを「面白い」と言うとき、「興味をそそられる」という意味ではなく、「うっとうしい」とか「難しい」とか、その両方を意味することが多いことに気づいたことがありますか? :-)</target>
        </trans-unit>
        <trans-unit id="fec7d067ad00a3efc3068446a9c8705c02368e9e" translate="yes" xml:space="preserve">
          <source>have the form &lt;code&gt;&quot;$break_condition\0$action&quot;&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;&quot;$break_condition\0$action&quot;&lt;/code&gt; という形式です。</target>
        </trans-unit>
        <trans-unit id="977b232def9f0778131e789712dc2b1e0595d546" translate="yes" xml:space="preserve">
          <source>have to be overridden, but it may be useful for subclasses to take advantage of them.</source>
          <target state="translated">をオーバーライドしなければなりませんが、サブクラスがそれを利用するのは便利かもしれません。</target>
        </trans-unit>
        <trans-unit id="88e0699d511ac0699272559c235f3396cc5b2061" translate="yes" xml:space="preserve">
          <source>have to return an ARRAY reference, we'll choose a HASH reference to represent our object. A HASH works out well as a generic record type: the &lt;code&gt;{ELEMSIZE}&lt;/code&gt; field will store the maximum element size allowed, and the &lt;code&gt;{ARRAY}&lt;/code&gt; field will hold the true ARRAY ref. If someone outside the class tries to dereference the object returned (doubtless thinking it an ARRAY ref), they'll blow up. This just goes to show you that you should respect an object's privacy.</source>
          <target state="translated">ARRAY参照を返す必要があります。オブジェクトを表すHASH参照を選択します。HASHは一般的なレコードタイプとして適切に機能します。 &lt;code&gt;{ELEMSIZE}&lt;/code&gt; フィールドには許容される最大の要素サイズが格納され、 &lt;code&gt;{ARRAY}&lt;/code&gt; フィールドには真のARRAY参照が保持されます。クラス外の誰かが返されたオブジェクトを逆参照しようとすると（疑いもなくそれをARRAY参照と考えます）、それらは爆発します。これは、オブジェクトのプライバシーを尊重する必要があることを示しています。</target>
        </trans-unit>
        <trans-unit id="16ba572187465e74a3789aefe2e24338ab376422" translate="yes" xml:space="preserve">
          <source>head1-title-regex</source>
          <target state="translated">head1-title-regex</target>
        </trans-unit>
        <trans-unit id="a5f6f588c23efafd4701293fc42c761caa22f2a7" translate="yes" xml:space="preserve">
          <source>head2-title-regex</source>
          <target state="translated">head2-title-regex</target>
        </trans-unit>
        <trans-unit id="594fd1615a341c77829e83ed988f137e1ba96231" translate="yes" xml:space="preserve">
          <source>header</source>
          <target state="translated">header</target>
        </trans-unit>
        <trans-unit id="1493a271a547ef5c6e7d4c8c80c36778d56ee05d" translate="yes" xml:space="preserve">
          <source>heavily hacked by Dominic Dunlop, assisted by the perl5-porters. Prose worked over a bit by Tom Christiansen, and updated by Perl 5 porters.</source>
          <target state="translated">Dominic Dunlop によって激しくハックされ、perl5-porters によって支援されました。Prose は Tom Christiansen が少し作業し、Perl 5 移植者によって更新されました。</target>
        </trans-unit>
        <trans-unit id="20a4be4b8e769bb0544079942db3580ec36edf83" translate="yes" xml:space="preserve">
          <source>heavily on the original &lt;b&gt;pod2man&lt;/b&gt; by Larry Wall and Tom Christiansen.</source>
          <target state="translated">Larry WallとTom Christiansenによるオリジナルの&lt;b&gt;pod2manに&lt;/b&gt;重点を置いています。</target>
        </trans-unit>
        <trans-unit id="48bce0e8ed07daaff3f5043c7261d18cf3dc0318" translate="yes" xml:space="preserve">
          <source>heavily on the original &lt;b&gt;pod2man&lt;/b&gt; by Tom Christiansen &amp;lt;tchrist@mox.perl.com&amp;gt;. The modifications to work with Pod::Simple instead of Pod::Parser were originally contributed by Sean Burke (but I've since hacked them beyond recognition and all bugs are mine).</source>
          <target state="translated">Tom Christiansen &amp;lt;tchrist@mox.perl.com&amp;gt;によるオリジナルの&lt;b&gt;pod2manに&lt;/b&gt;重点を置いています。Pod :: Parserの代わりにPod :: Simpleを使用するための変更は、もともとSean Burkeによって提供されました（しかし、私はそれらを認識できないほどハッキングしており、すべてのバグは私のものです）。</target>
        </trans-unit>
        <trans-unit id="bb387e8e2dcf253777c4b5b9587e2e128d066a74" translate="yes" xml:space="preserve">
          <source>heavily on the original Pod::Text by Tom Christiansen &amp;lt;tchrist@mox.perl.com&amp;gt; and its conversion to Pod::Parser by Brad Appleton &amp;lt;bradapp@enteract.com&amp;gt;.</source>
          <target state="translated">Tom Christiansen &amp;lt;tchrist@mox.perl.com&amp;gt;によるオリジナルのPod :: Textと、Brad Appleton &amp;lt;bradapp@enteract.com&amp;gt;によるPod :: Parserへの変換に重点を置いています。</target>
        </trans-unit>
        <trans-unit id="ce94bd6b0cd33419cc8d0128f9fa951d8984ce46" translate="yes" xml:space="preserve">
          <source>heavily on the original Pod::Text by Tom Christiansen &amp;lt;tchrist@mox.perl.com&amp;gt; and its conversion to Pod::Parser by Brad Appleton &amp;lt;bradapp@enteract.com&amp;gt;. Sean Burke's initial conversion of Pod::Man to use Pod::Simple provided much-needed guidance on how to use Pod::Simple.</source>
          <target state="translated">Tom Christiansen &amp;lt;tchrist@mox.perl.com&amp;gt;によるオリジナルのPod :: Textと、Brad Appleton &amp;lt;bradapp@enteract.com&amp;gt;によるPod :: Parserへの変換に重点を置いています。Sean BurkeによるPod :: Manの最初の変換によるPod :: Simpleの使用は、Pod :: Simpleの使用方法について非常に必要なガイダンスを提供しました。</target>
        </trans-unit>
        <trans-unit id="bb9ffbe0f6035d62ab02ab1bdb18e9943782818f" translate="yes" xml:space="preserve">
          <source>heavy handed way to attempt to prevent a memory resource attack. It's probable that a specific memory limit mechanism will be added to perl in the near future.</source>
          <target state="translated">メモリリソース攻撃を防ぐための強引な方法です。近い将来、特定のメモリ制限機構がperlに追加される可能性が高いです。</target>
        </trans-unit>
        <trans-unit id="dce851d2e8cd8dfaaa484e763a90b3a1aa787fd7" translate="yes" xml:space="preserve">
          <source>hello.pl</source>
          <target state="translated">hello.pl</target>
        </trans-unit>
        <trans-unit id="92005ecf3788faea8346a7919fba0232188561ab" translate="yes" xml:space="preserve">
          <source>help</source>
          <target state="translated">help</target>
        </trans-unit>
        <trans-unit id="7d028eb11250c44cf3a91f8029864283c6ddbf05" translate="yes" xml:space="preserve">
          <source>help! help! help! to see more help, try --man.</source>
          <target state="translated">help! help! help! help! より多くのヘルプを見るには --man を試してください。</target>
        </trans-unit>
        <trans-unit id="6cc80d8f6481bc09d84f75a2afe6506727f57c4a" translate="yes" xml:space="preserve">
          <source>here is the output:</source>
          <target state="translated">こちらが出力です。</target>
        </trans-unit>
        <trans-unit id="94a868df2d957b1d6a385b4b7e09e760e33bbd49" translate="yes" xml:space="preserve">
          <source>here means &quot;a format supported by the C compiler which was used to build perl&quot;.</source>
          <target state="translated">ここでは、「perlをビルドする際に使用されたCコンパイラがサポートするフォーマット」を意味します。</target>
        </trans-unit>
        <trans-unit id="7994ebae30a63934992a16deca856d50596bc1a9" translate="yes" xml:space="preserve">
          <source>hex</source>
          <target state="translated">hex</target>
        </trans-unit>
        <trans-unit id="f39bb5ec820694d035b407948c2ad8190802d797" translate="yes" xml:space="preserve">
          <source>hex EXPR</source>
          <target state="translated">六角演算子</target>
        </trans-unit>
        <trans-unit id="59660da86f7237b4e68663b3e432e620f1a19fee" translate="yes" xml:space="preserve">
          <source>hexadecimal number</source>
          <target state="translated">十六進数</target>
        </trans-unit>
        <trans-unit id="b1db3091c00aa508c2891766b80e6b720d012793" translate="yes" xml:space="preserve">
          <source>hexdump</source>
          <target state="translated">hexdump</target>
        </trans-unit>
        <trans-unit id="d3c9118aee3293d7e73885bc4c93c497b6978dd0" translate="yes" xml:space="preserve">
          <source>hide bugs in your code since important checks (like correctness of prototypes) is moved from compile time to runtime. In particular, if the prototype you specified on &lt;code&gt;autouse&lt;/code&gt; line is wrong, you will not find it out until the corresponding function is executed. This will be very unfortunate for functions which are not always called (note that for such functions &lt;code&gt;autouse&lt;/code&gt; ing gives biggest win, for a workaround see below).</source>
          <target state="translated">重要なチェック（プロトタイプの正確さなど）がコンパイル時からランタイムに移動されるため、コードのバグを非表示にします。特に、 &lt;code&gt;autouse&lt;/code&gt; 行で指定したプロトタイプが間違っている場合、対応する関数が実行されるまで、それを見つけることはできません。これは、常に呼び出されるわけではない関数の場合は非常に残念です（そのような関数の場合、 &lt;code&gt;autouse&lt;/code&gt; が最も効果的です。回避策については、以下を参照してください）。</target>
        </trans-unit>
        <trans-unit id="06436882e1ded64c1da8011847a461313fbef861" translate="yes" xml:space="preserve">
          <source>high surrogate</source>
          <target state="translated">ハイサロゲート</target>
        </trans-unit>
        <trans-unit id="8f83158f4f2d44453e568984a129066afbddf5cf" translate="yes" xml:space="preserve">
          <source>high surrogates</source>
          <target state="translated">ハイサロゲート</target>
        </trans-unit>
        <trans-unit id="01efbb53ac39d93f4f5de1234a97878784ee3cc8" translate="yes" xml:space="preserve">
          <source>higher</source>
          <target state="translated">higher</target>
        </trans-unit>
        <trans-unit id="91de614ff8c1ad5372dec9b108bb24cbfc3712a8" translate="yes" xml:space="preserve">
          <source>hints/</source>
          <target state="translated">hints/</target>
        </trans-unit>
        <trans-unit id="721764243052c90f9b0fccf2aaef935266d07152" translate="yes" xml:space="preserve">
          <source>hints/cygwin.sh</source>
          <target state="translated">hints/cygwin.sh</target>
        </trans-unit>
        <trans-unit id="b187a9ed471ef7465c5d78cc7b4b1846f07ac76d" translate="yes" xml:space="preserve">
          <source>his</source>
          <target state="translated">his</target>
        </trans-unit>
        <trans-unit id="8a3ec055d45e14ea2e917e502516ed7ea3938441" translate="yes" xml:space="preserve">
          <source>holds true for any $x and $y, which justifies calling the two return values of bdiv() the quotient and remainder. The only exception to this rule are when $y == 0 and $x is negative, then the remainder will also be negative. See below under &quot;infinity handling&quot; for the reasoning behind this.</source>
          <target state="translated">は任意の $x と $y に対して真であり、 bdiv()の 2 つの戻り値を商と余りと呼んでいることになります。このルールの唯一の例外は、 $y ==0 で $x が負の場合で、残りも負になります。その理由については、以下の &quot;無限大の処理&quot; を参照ください。</target>
        </trans-unit>
        <trans-unit id="86dd1cf45142e904cb2e99c2721fac3ca198c6ca" translate="yes" xml:space="preserve">
          <source>host</source>
          <target state="translated">host</target>
        </trans-unit>
        <trans-unit id="709381e970d2d669ee1d1b4844a6dde9d9b63c77" translate="yes" xml:space="preserve">
          <source>hostname</source>
          <target state="translated">hostname</target>
        </trans-unit>
        <trans-unit id="abba3508de929934a4e4b5198e00683c2b633bbc" translate="yes" xml:space="preserve">
          <source>hosts</source>
          <target state="translated">hosts</target>
        </trans-unit>
        <trans-unit id="c68251c658712c0be1a040a5a6c232b8a156593f" translate="yes" xml:space="preserve">
          <source>hot spots</source>
          <target state="translated">ホットスポット</target>
        </trans-unit>
        <trans-unit id="0b064373fb4dd7356db6e83ec9c39e31ba9c335c" translate="yes" xml:space="preserve">
          <source>how</source>
          <target state="translated">how</target>
        </trans-unit>
        <trans-unit id="e8c978403f1134e486667ac2b32bed335ed7b01c" translate="yes" xml:space="preserve">
          <source>how it's called</source>
          <target state="translated">いうところの</target>
        </trans-unit>
        <trans-unit id="b627f6833a06ce1cfe32101bbe111bcdfb961fca" translate="yes" xml:space="preserve">
          <source>however you'd like. Bear in mind, however, that each access to a tied array variable requires splitting the environment variable's string anew.</source>
          <target state="translated">を使用することができます。しかし、結びつけられた配列変数にアクセスするたびに、環境変数の文字列を新たに分割する必要があることを覚えておいてください。</target>
        </trans-unit>
        <trans-unit id="950a39b6c2934bb72f2def76c71e88e9c035385f" translate="yes" xml:space="preserve">
          <source>html</source>
          <target state="translated">html</target>
        </trans-unit>
        <trans-unit id="b9e11a6dbea43baf5f29c22e37d9efef0d5c3150" translate="yes" xml:space="preserve">
          <source>html1dir.U</source>
          <target state="translated">html1dir.U</target>
        </trans-unit>
        <trans-unit id="57831e2637c7aadb751e35137b70e73ad17721e7" translate="yes" xml:space="preserve">
          <source>html2text</source>
          <target state="translated">html2text</target>
        </trans-unit>
        <trans-unit id="3f55e3667d4a9c319c471f762e9350122f71313e" translate="yes" xml:space="preserve">
          <source>html3dir.U</source>
          <target state="translated">html3dir.U</target>
        </trans-unit>
        <trans-unit id="029ee05bb05bffcdcefd2efcf6d3795711082816" translate="yes" xml:space="preserve">
          <source>html_charset</source>
          <target state="translated">html_charset</target>
        </trans-unit>
        <trans-unit id="f790a456af6ad05baa3d88f06b8fd949f71badd8" translate="yes" xml:space="preserve">
          <source>html_css</source>
          <target state="translated">html_css</target>
        </trans-unit>
        <trans-unit id="663d982e58e4e4920b43e990265382c6ed18142c" translate="yes" xml:space="preserve">
          <source>html_doctype</source>
          <target state="translated">html_doctype</target>
        </trans-unit>
        <trans-unit id="6b816181e3165918f7bd1c24f53e24af48dc5b5f" translate="yes" xml:space="preserve">
          <source>html_encode_chars</source>
          <target state="translated">html_encode_chars</target>
        </trans-unit>
        <trans-unit id="e8224a47571c2c78ff1e2806d9647dbff1b5e82c" translate="yes" xml:space="preserve">
          <source>html_footer</source>
          <target state="translated">html_footer</target>
        </trans-unit>
        <trans-unit id="278d86942f76e8339c68b682851148f41a4788a3" translate="yes" xml:space="preserve">
          <source>html_h_level</source>
          <target state="translated">html_h_level</target>
        </trans-unit>
        <trans-unit id="f73e0b14223932ac5c096e253df40e269e17968a" translate="yes" xml:space="preserve">
          <source>html_header, html_footer</source>
          <target state="translated">html_header,html_footer</target>
        </trans-unit>
        <trans-unit id="46eda6f5bae3c19d64512fcafcf01da99fac1129" translate="yes" xml:space="preserve">
          <source>html_header_after_title</source>
          <target state="translated">html_header_after_title</target>
        </trans-unit>
        <trans-unit id="b30d87fb80747707aefa43caa2a3f38550eb943b" translate="yes" xml:space="preserve">
          <source>html_header_before_title</source>
          <target state="translated">html_header_before_title</target>
        </trans-unit>
        <trans-unit id="bc7403ab154e410783d5f8d02aa2e22996fdec0e" translate="yes" xml:space="preserve">
          <source>html_header_tags</source>
          <target state="translated">html_header_tags</target>
        </trans-unit>
        <trans-unit id="0beec75efe8b4ce5d87c4f0cdc63c215930b071e" translate="yes" xml:space="preserve">
          <source>html_javascript</source>
          <target state="translated">html_javascript</target>
        </trans-unit>
        <trans-unit id="b33e9c472ae583ea92c01efc04762cfef6138aaa" translate="yes" xml:space="preserve">
          <source>htmlify</source>
          <target state="translated">htmlify</target>
        </trans-unit>
        <trans-unit id="d787f56b080945c1ec0b3343cbf962ca427bb8ef" translate="yes" xml:space="preserve">
          <source>human</source>
          <target state="translated">human</target>
        </trans-unit>
        <trans-unit id="3109328f5e8d26ecfb0267ee264894d15967a6ea" translate="yes" xml:space="preserve">
          <source>humans</source>
          <target state="translated">humans</target>
        </trans-unit>
        <trans-unit id="6b280307ab0af7811706e5a2d42f8dd54fed3121" translate="yes" xml:space="preserve">
          <source>hundreds and hundreds</source>
          <target state="translated">ひゃくひゃく</target>
        </trans-unit>
        <trans-unit id="3460f275d2b1003a79902c36459059b135e4faec" translate="yes" xml:space="preserve">
          <source>hv_store() is from Array::RefElem, Copyright 2000 Gisle Aas.</source>
          <target state="translated">hv_store()は Array::RefElem,Copyright 2000 Gisle Aas からの引用です。</target>
        </trans-unit>
        <trans-unit id="042dc4512fa3d391c5170cf3aa61e6a638f84342" translate="yes" xml:space="preserve">
          <source>i</source>
          <target state="translated">i</target>
        </trans-unit>
        <trans-unit id="a58e85921fac7ebbba3ca499da7c04aca3b78608" translate="yes" xml:space="preserve">
          <source>i'th</source>
          <target state="translated">i'th</target>
        </trans-unit>
        <trans-unit id="f29ffa4f168de30e1c76aa2f54acedf2794181a1" translate="yes" xml:space="preserve">
          <source>i.e</source>
          <target state="translated">i.e</target>
        </trans-unit>
        <trans-unit id="2c3a0ef6ef4316e6e5d1c614dce6be8faad1cb40" translate="yes" xml:space="preserve">
          <source>i.e.</source>
          <target state="translated">i.e.</target>
        </trans-unit>
        <trans-unit id="c8a11663a0a759a3ffa8341f20f86f0e24159359" translate="yes" xml:space="preserve">
          <source>i.e. it is a subroutine declaration without the body of the subroutine. For modules which are not classes, there is no real need for stubs as far as autoloading is concerned.</source>
          <target state="translated">つまり、サブルーチンの本体を持たないサブルーチン宣言です。クラスではないモジュールの場合、オートロードに関してはスタブは必要ありません。</target>
        </trans-unit>
        <trans-unit id="a315488f3d8921e16aa610fa6493167d9d0c0775" translate="yes" xml:space="preserve">
          <source>i:</source>
          <target state="translated">i:</target>
        </trans-unit>
        <trans-unit id="9ac428cbb96e1d6857a555489043e2df8173f9c2" translate="yes" xml:space="preserve">
          <source>i_arpainet.U</source>
          <target state="translated">i_arpainet.U</target>
        </trans-unit>
        <trans-unit id="83315d3448e43dd2fb472ce741d7b6f36fa0e591" translate="yes" xml:space="preserve">
          <source>i_assert.U</source>
          <target state="translated">i_assert.U</target>
        </trans-unit>
        <trans-unit id="8cd2114b8310e1067e520e249c3b2f4fe85fdd34" translate="yes" xml:space="preserve">
          <source>i_bfd.U</source>
          <target state="translated">i_bfd.U</target>
        </trans-unit>
        <trans-unit id="e2620fe35370bf8c8f7c4dece1cb8f974d260231" translate="yes" xml:space="preserve">
          <source>i_crypt.U</source>
          <target state="translated">i_crypt.U</target>
        </trans-unit>
        <trans-unit id="c180970fee3ab2af18a7ffa167a549f7df9d598c" translate="yes" xml:space="preserve">
          <source>i_db.U</source>
          <target state="translated">i_db.U</target>
        </trans-unit>
        <trans-unit id="56b9b1bef81d2ef370318c599c7300f749f4fad3" translate="yes" xml:space="preserve">
          <source>i_dbm.U</source>
          <target state="translated">i_dbm.U</target>
        </trans-unit>
        <trans-unit id="d39c7223a8dcc1baa5038256b8a9ee9b6de736fd" translate="yes" xml:space="preserve">
          <source>i_dirent.U</source>
          <target state="translated">i_dirent.U</target>
        </trans-unit>
        <trans-unit id="0935a25ae0f7e42c1db95e3c31ce4b5e7b9b8c23" translate="yes" xml:space="preserve">
          <source>i_dlfcn.U</source>
          <target state="translated">i_dlfcn.U</target>
        </trans-unit>
        <trans-unit id="e47d8269e4b497b6ac753e8f3fbf81ee50e0e223" translate="yes" xml:space="preserve">
          <source>i_execinfo.U</source>
          <target state="translated">i_execinfo.U</target>
        </trans-unit>
        <trans-unit id="1736c23db4fe75bd349d3f1a8b1c1d663e15ddee" translate="yes" xml:space="preserve">
          <source>i_fcntl.U</source>
          <target state="translated">i_fcntl.U</target>
        </trans-unit>
        <trans-unit id="d13026f67ec1f76b9b0e549b4b4018b47e26f09c" translate="yes" xml:space="preserve">
          <source>i_fenv.U</source>
          <target state="translated">i_fenv.U</target>
        </trans-unit>
        <trans-unit id="3d969bd718a99de22f974408c4c32fe4960f133b" translate="yes" xml:space="preserve">
          <source>i_float.U</source>
          <target state="translated">i_float.U</target>
        </trans-unit>
        <trans-unit id="58d0d5afa75d0099784989141370eb7cec44972d" translate="yes" xml:space="preserve">
          <source>i_fp.U</source>
          <target state="translated">i_fp.U</target>
        </trans-unit>
        <trans-unit id="6fb2cda3c4345ae5e13d716636b22e0fc4712a26" translate="yes" xml:space="preserve">
          <source>i_fp_class.U</source>
          <target state="translated">i_fp_class.U</target>
        </trans-unit>
        <trans-unit id="391d26e85b5e59013c000805cee2f43fb01345af" translate="yes" xml:space="preserve">
          <source>i_gdbm.U</source>
          <target state="translated">i_gdbm.U</target>
        </trans-unit>
        <trans-unit id="69cbf824f890b5d4c7be5cbbcce4ed7059ad1232" translate="yes" xml:space="preserve">
          <source>i_grp.U</source>
          <target state="translated">i_grp.U</target>
        </trans-unit>
        <trans-unit id="926c44f71ab20dd77927fcbb4e94c257ee470679" translate="yes" xml:space="preserve">
          <source>i_ieeefp.U</source>
          <target state="translated">i_ieeefp.U</target>
        </trans-unit>
        <trans-unit id="bf38d8317a509574da6154d792d25386b97cb025" translate="yes" xml:space="preserve">
          <source>i_inttypes.U</source>
          <target state="translated">i_inttypes.U</target>
        </trans-unit>
        <trans-unit id="abf728295c52930a67a902823deea209fcede4e4" translate="yes" xml:space="preserve">
          <source>i_langinfo.U</source>
          <target state="translated">i_langinfo.U</target>
        </trans-unit>
        <trans-unit id="b9b910ad1103732c42d370cb0a897c51d041f0aa" translate="yes" xml:space="preserve">
          <source>i_libutil.U</source>
          <target state="translated">i_libutil.U</target>
        </trans-unit>
        <trans-unit id="73ee3305012aea071c385c5e1dcccef57ba4d48d" translate="yes" xml:space="preserve">
          <source>i_limits.U</source>
          <target state="translated">i_limits.U</target>
        </trans-unit>
        <trans-unit id="824e07110d846cbeb06f0758fa179bdb74c2fdd3" translate="yes" xml:space="preserve">
          <source>i_locale.U</source>
          <target state="translated">i_locale.U</target>
        </trans-unit>
        <trans-unit id="016d06eb5237ee3630517baee88e38fdaa7aa2d0" translate="yes" xml:space="preserve">
          <source>i_machcthr.U</source>
          <target state="translated">i_machcthr.U</target>
        </trans-unit>
        <trans-unit id="0958abf963072e54bdb236b6f31837c99ca1d0f9" translate="yes" xml:space="preserve">
          <source>i_malloc.U</source>
          <target state="translated">i_malloc.U</target>
        </trans-unit>
        <trans-unit id="f5aec7f125bcb5b2675a5f3161e947d5a2f88ef8" translate="yes" xml:space="preserve">
          <source>i_mallocmalloc.U</source>
          <target state="translated">i_mallocmalloc.U</target>
        </trans-unit>
        <trans-unit id="4120dece0f7b7227e4620863e0143cc6302c021f" translate="yes" xml:space="preserve">
          <source>i_math.U</source>
          <target state="translated">i_math.U</target>
        </trans-unit>
        <trans-unit id="4679f11f520b7ca4afcea761d383c4c590ef2167" translate="yes" xml:space="preserve">
          <source>i_memory.U</source>
          <target state="translated">i_memory.U</target>
        </trans-unit>
        <trans-unit id="64d829475a77bb37c0d7454a8da4e77aa8b5c0d2" translate="yes" xml:space="preserve">
          <source>i_mntent.U</source>
          <target state="translated">i_mntent.U</target>
        </trans-unit>
        <trans-unit id="8c25ae75929406cd64a76a05095251ab6ca0a890" translate="yes" xml:space="preserve">
          <source>i_ndbm.U</source>
          <target state="translated">i_ndbm.U</target>
        </trans-unit>
        <trans-unit id="0236abadf95462f038080e267b57c3dcf3425898" translate="yes" xml:space="preserve">
          <source>i_netdb.U</source>
          <target state="translated">i_netdb.U</target>
        </trans-unit>
        <trans-unit id="df013b82c01405068beee96a2552b2a27eb2255e" translate="yes" xml:space="preserve">
          <source>i_neterrno.U</source>
          <target state="translated">i_neterrno.U</target>
        </trans-unit>
        <trans-unit id="c45d3aa849077d2f530276d677f1c76395ea4b9c" translate="yes" xml:space="preserve">
          <source>i_netinettcp.U</source>
          <target state="translated">i_netinettcp.U</target>
        </trans-unit>
        <trans-unit id="55584a377c574fc96803d35163eaee44bceedd3b" translate="yes" xml:space="preserve">
          <source>i_niin.U</source>
          <target state="translated">i_niin.U</target>
        </trans-unit>
        <trans-unit id="0b55f6ffc23cacf539da2d4ac3cb9a5aea2cee03" translate="yes" xml:space="preserve">
          <source>i_poll.U</source>
          <target state="translated">i_poll.U</target>
        </trans-unit>
        <trans-unit id="32197d4f00252a63b5873aa6deb3e42bf49cefd5" translate="yes" xml:space="preserve">
          <source>i_prot.U</source>
          <target state="translated">i_prot.U</target>
        </trans-unit>
        <trans-unit id="e6dd6a19ea71ea01c56f8ed10885d8d0610a2dfa" translate="yes" xml:space="preserve">
          <source>i_pthread.U</source>
          <target state="translated">i_pthread.U</target>
        </trans-unit>
        <trans-unit id="1156c01f440a14966f3780ef8bfdfe8c152017c9" translate="yes" xml:space="preserve">
          <source>i_pwd.U</source>
          <target state="translated">i_pwd.U</target>
        </trans-unit>
        <trans-unit id="3b9aa4b75d8982c7534a2c8bc43ce031e7c7cd7c" translate="yes" xml:space="preserve">
          <source>i_quadmath.U</source>
          <target state="translated">i_quadmath.U</target>
        </trans-unit>
        <trans-unit id="cdff74f1c070d43373270dd9635671fac7f16ac4" translate="yes" xml:space="preserve">
          <source>i_shadow.U</source>
          <target state="translated">i_shadow.U</target>
        </trans-unit>
        <trans-unit id="f30e54c5ea0f390cc57489000e2bc46f667b6a9c" translate="yes" xml:space="preserve">
          <source>i_socks.U</source>
          <target state="translated">i_socks.U</target>
        </trans-unit>
        <trans-unit id="b22f5f5af32582131191811a109f4c2c069eb375" translate="yes" xml:space="preserve">
          <source>i_stdbool.U</source>
          <target state="translated">i_stdbool.U</target>
        </trans-unit>
        <trans-unit id="66565a6943c019db8279560a9a7dc81bd460cb74" translate="yes" xml:space="preserve">
          <source>i_stddef.U</source>
          <target state="translated">i_stddef.U</target>
        </trans-unit>
        <trans-unit id="db16c7fe6118b5a869ec99860280ad212b04f174" translate="yes" xml:space="preserve">
          <source>i_stdint.U</source>
          <target state="translated">i_stdint.U</target>
        </trans-unit>
        <trans-unit id="3656344ab9961bd6d010e0bbcc1000d47494a1dc" translate="yes" xml:space="preserve">
          <source>i_stdlib.U</source>
          <target state="translated">i_stdlib.U</target>
        </trans-unit>
        <trans-unit id="b0433aabd063fb13107fe9b0d4a320c4b0bfa100" translate="yes" xml:space="preserve">
          <source>i_string.U</source>
          <target state="translated">i_string.U</target>
        </trans-unit>
        <trans-unit id="f44bf7dfd358cb943a5d0908526ab0c63d297c1f" translate="yes" xml:space="preserve">
          <source>i_sunmath.U</source>
          <target state="translated">i_sunmath.U</target>
        </trans-unit>
        <trans-unit id="1cf489917d5fca3723b8248b2abc86400d3a4fcc" translate="yes" xml:space="preserve">
          <source>i_sysaccess.U</source>
          <target state="translated">i_sysaccess.U</target>
        </trans-unit>
        <trans-unit id="200c58468d08bb88b3e4805414dd18ee79c9676d" translate="yes" xml:space="preserve">
          <source>i_sysdir.U</source>
          <target state="translated">i_sysdir.U</target>
        </trans-unit>
        <trans-unit id="20c44d629c07b97bc9aee8932026607cdddd0dd2" translate="yes" xml:space="preserve">
          <source>i_sysfile.U</source>
          <target state="translated">i_sysfile.U</target>
        </trans-unit>
        <trans-unit id="7ffea50c2ff188c55ba9a2e994b956245c98f531" translate="yes" xml:space="preserve">
          <source>i_sysioctl.U</source>
          <target state="translated">i_sysioctl.U</target>
        </trans-unit>
        <trans-unit id="31b3e9e15809ee3c37668336fc1b10069668c5e5" translate="yes" xml:space="preserve">
          <source>i_syslog.U</source>
          <target state="translated">i_syslog.U</target>
        </trans-unit>
        <trans-unit id="ab07ee37d72c3bc2e871e634b89bfb861a2f5e3e" translate="yes" xml:space="preserve">
          <source>i_sysmman.U</source>
          <target state="translated">i_sysmman.U</target>
        </trans-unit>
        <trans-unit id="65c8a0af5b8ed7fa517105572ca7a24670f86eed" translate="yes" xml:space="preserve">
          <source>i_sysmode.U</source>
          <target state="translated">i_sysmode.U</target>
        </trans-unit>
        <trans-unit id="dbc4c91fbcdf0ba8772a3e5ec2c42e577ed1e06e" translate="yes" xml:space="preserve">
          <source>i_sysmount.U</source>
          <target state="translated">i_sysmount.U</target>
        </trans-unit>
        <trans-unit id="7aa994b5e08626c36a3d952487fbe3573bc5a7f1" translate="yes" xml:space="preserve">
          <source>i_sysndir.U</source>
          <target state="translated">i_sysndir.U</target>
        </trans-unit>
        <trans-unit id="933d1be445e1047bd2ece1a58026e6bd0885ef69" translate="yes" xml:space="preserve">
          <source>i_sysparam.U</source>
          <target state="translated">i_sysparam.U</target>
        </trans-unit>
        <trans-unit id="2ab6726bdeb622640487a872360a6485a9bfe554" translate="yes" xml:space="preserve">
          <source>i_syspoll.U</source>
          <target state="translated">i_syspoll.U</target>
        </trans-unit>
        <trans-unit id="09ac133f0b9f5671f8cef0d45ecc98bf136b167c" translate="yes" xml:space="preserve">
          <source>i_sysresrc.U</source>
          <target state="translated">i_sysresrc.U</target>
        </trans-unit>
        <trans-unit id="e29d1df493c2bc55e4415f2eb65a8dad836aca59" translate="yes" xml:space="preserve">
          <source>i_syssecrt.U</source>
          <target state="translated">i_syssecrt.U</target>
        </trans-unit>
        <trans-unit id="674c8fac049f5334aa404add4cd8bc2fc259fe05" translate="yes" xml:space="preserve">
          <source>i_sysselct.U</source>
          <target state="translated">i_sysselct.U</target>
        </trans-unit>
        <trans-unit id="0f24e8255070287475eb9511da7c1c1c5ffc7281" translate="yes" xml:space="preserve">
          <source>i_sysstat.U</source>
          <target state="translated">i_sysstat.U</target>
        </trans-unit>
        <trans-unit id="27f539f0ed3118fba5bc8083a4b4b8dff3045159" translate="yes" xml:space="preserve">
          <source>i_sysstatfs.U</source>
          <target state="translated">i_sysstatfs.U</target>
        </trans-unit>
        <trans-unit id="59cd49fb9700f7c34fa6168b427a1693b8e0af16" translate="yes" xml:space="preserve">
          <source>i_sysstatvfs.U</source>
          <target state="translated">i_sysstatvfs.U</target>
        </trans-unit>
        <trans-unit id="91b2a1ab7d098701eb8db59f0b756e945c8cf53a" translate="yes" xml:space="preserve">
          <source>i_systimes.U</source>
          <target state="translated">i_systimes.U</target>
        </trans-unit>
        <trans-unit id="92e6cf68db55dcd8dafed7fec77676fa2eeaa651" translate="yes" xml:space="preserve">
          <source>i_systypes.U</source>
          <target state="translated">i_systypes.U</target>
        </trans-unit>
        <trans-unit id="d5c50730667d9fab0d28efa5a8f5ba83e11757dc" translate="yes" xml:space="preserve">
          <source>i_sysuio.U</source>
          <target state="translated">i_sysuio.U</target>
        </trans-unit>
        <trans-unit id="ef7cf6bf6a62de8bc96cef2c5b804c0331b794ac" translate="yes" xml:space="preserve">
          <source>i_sysun.U</source>
          <target state="translated">i_sysun.U</target>
        </trans-unit>
        <trans-unit id="fe4161ebf21747b6631ceb58321a285801295777" translate="yes" xml:space="preserve">
          <source>i_sysutsname.U</source>
          <target state="translated">i_sysutsname.U</target>
        </trans-unit>
        <trans-unit id="0ade36446e24d52c0d94bfa05b07f6f08e7d9e8c" translate="yes" xml:space="preserve">
          <source>i_sysvfs.U</source>
          <target state="translated">i_sysvfs.U</target>
        </trans-unit>
        <trans-unit id="b8d2b347f84798bb8192a99639770324fc303430" translate="yes" xml:space="preserve">
          <source>i_syswait.U</source>
          <target state="translated">i_syswait.U</target>
        </trans-unit>
        <trans-unit id="dda92135ec295656c14eef2d53f5c28238028c76" translate="yes" xml:space="preserve">
          <source>i_termio.U</source>
          <target state="translated">i_termio.U</target>
        </trans-unit>
        <trans-unit id="1958db4ef017bb9b29fc6a47c2a30212baadf91e" translate="yes" xml:space="preserve">
          <source>i_time.U</source>
          <target state="translated">i_time.U</target>
        </trans-unit>
        <trans-unit id="3f05773061d9dd59f503651bf0137945298d4505" translate="yes" xml:space="preserve">
          <source>i_unistd.U</source>
          <target state="translated">i_unistd.U</target>
        </trans-unit>
        <trans-unit id="049f9baa8bbb8dda226267827c3193edd1766749" translate="yes" xml:space="preserve">
          <source>i_ustat.U</source>
          <target state="translated">i_ustat.U</target>
        </trans-unit>
        <trans-unit id="c8dcefd6454f94d8cde1898111e9249320297c93" translate="yes" xml:space="preserve">
          <source>i_utime.U</source>
          <target state="translated">i_utime.U</target>
        </trans-unit>
        <trans-unit id="1d7444ecc9efce8c3f2474296c6fdaf3da09a2ec" translate="yes" xml:space="preserve">
          <source>i_values.U</source>
          <target state="translated">i_values.U</target>
        </trans-unit>
        <trans-unit id="e59691314cb6326d15ba147fb40c1d2083092103" translate="yes" xml:space="preserve">
          <source>i_varhdr.U</source>
          <target state="translated">i_varhdr.U</target>
        </trans-unit>
        <trans-unit id="8763ec36b8bc94d17b450fd35d1633dfda91cd3e" translate="yes" xml:space="preserve">
          <source>i_vfork.U</source>
          <target state="translated">i_vfork.U</target>
        </trans-unit>
        <trans-unit id="b77bb1320b32802385a961839351812d0858cb43" translate="yes" xml:space="preserve">
          <source>iconv</source>
          <target state="translated">iconv</target>
        </trans-unit>
        <trans-unit id="d449927b7de03e773ea5f978dd6ed56b6666beab" translate="yes" xml:space="preserve">
          <source>iconv(1)</source>
          <target state="translated">iconv(1)</target>
        </trans-unit>
        <trans-unit id="f75c6e2069cb8a08fbec60cedc918d5837b507a3" translate="yes" xml:space="preserve">
          <source>iconv(3)</source>
          <target state="translated">iconv(3)</target>
        </trans-unit>
        <trans-unit id="87ea5dfc8b8e384d848979496e706390b497e547" translate="yes" xml:space="preserve">
          <source>id</source>
          <target state="translated">id</target>
        </trans-unit>
        <trans-unit id="42926da22cad25686b1f1cf16e6872c563f17102" translate="yes" xml:space="preserve">
          <source>id hashes</source>
          <target state="translated">アイディーハッシュ</target>
        </trans-unit>
        <trans-unit id="d3f2311914ceec55ab66ec44608900bd1580bdf1" translate="yes" xml:space="preserve">
          <source>identical</source>
          <target state="translated">identical</target>
        </trans-unit>
        <trans-unit id="fae9fd39301eb7e657d4dad32a828cda5d7399e5" translate="yes" xml:space="preserve">
          <source>identifier</source>
          <target state="translated">identifier</target>
        </trans-unit>
        <trans-unit id="9bd083e8139879ba5abcf6d4ae98ac6dbe414eec" translate="yes" xml:space="preserve">
          <source>identifier (e.g., in HTML, several things all producing the same</source>
          <target state="translated">識別子</target>
        </trans-unit>
        <trans-unit id="1da25888875bf62bb8e847192357583ad4cb5608" translate="yes" xml:space="preserve">
          <source>identifies the GV that the op should reference; calling this function does not transfer ownership of any reference to it.</source>
          <target state="translated">は op が参照すべき GV を識別します。この関数を呼び出しても、その参照の所有権は移転しません。</target>
        </trans-unit>
        <trans-unit id="5936e24c9ba95ef6029449457a15741135e465d5" translate="yes" xml:space="preserve">
          <source>idhash</source>
          <target state="translated">idhash</target>
        </trans-unit>
        <trans-unit id="835510df4b502213c4e8e505291a2c8a1336b4c7" translate="yes" xml:space="preserve">
          <source>idify</source>
          <target state="translated">idify</target>
        </trans-unit>
        <trans-unit id="a82dc2efaa5bdc2531f5452e927fdf44468052d9" translate="yes" xml:space="preserve">
          <source>idus)</source>
          <target state="translated">idus)</target>
        </trans-unit>
        <trans-unit id="46680a665d08484a28860b87789df9db712f8f84" translate="yes" xml:space="preserve">
          <source>ie</source>
          <target state="translated">ie</target>
        </trans-unit>
        <trans-unit id="958f57f57d72a30f329ee5538f21b0257a49a46e" translate="yes" xml:space="preserve">
          <source>if</source>
          <target state="translated">if</target>
        </trans-unit>
        <trans-unit id="af86946c06277caec2f151b2e8ba53bc8f3cabfb" translate="yes" xml:space="preserve">
          <source>if $obj is blessed into package &lt;code&gt;TYPE&lt;/code&gt; or inherits from package &lt;code&gt;TYPE&lt;/code&gt; .</source>
          <target state="translated">$ objがパッケージ &lt;code&gt;TYPE&lt;/code&gt; に祝福されるか、パッケージ &lt;code&gt;TYPE&lt;/code&gt; から継承する場合。</target>
        </trans-unit>
        <trans-unit id="3cdeeaa8dfb9a71fb200109e29ebdaae17a3b192" translate="yes" xml:space="preserve">
          <source>if ( $result-&amp;gt;is_pragma ) { @pragmas = $result-&amp;gt;pragmas; }</source>
          <target state="translated">if（$ result-&amp;gt; is_pragma）{@pragmas = $ result-&amp;gt; pragmas; }</target>
        </trans-unit>
        <trans-unit id="e5639983b6f5c3dc517880622553e35a5a638c9a" translate="yes" xml:space="preserve">
          <source>if - &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; a Perl module if a condition holds (also can &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt; a module)</source>
          <target state="translated">もし- &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; 条件が成立した場合にはPerlモジュールを（もでき &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no&lt;/a&gt;&lt;/code&gt; モジュール）</target>
        </trans-unit>
        <trans-unit id="f459dcbd0b55356a44f7b1a7d108933acd838fa2" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;CLASS&lt;/code&gt; inherits from (or is itself) the name of the package &lt;code&gt;TYPE&lt;/code&gt; or inherits from package &lt;code&gt;TYPE&lt;/code&gt; .</source>
          <target state="translated">もし &lt;code&gt;CLASS&lt;/code&gt; から継承（またはそれ自体である）、パッケージの名前 &lt;code&gt;TYPE&lt;/code&gt; パッケージから、または継承 &lt;code&gt;TYPE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c62f8d5dee1c37c74601b6861e157d09a335939f" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;Module&lt;/code&gt; defines func2() with prototype &lt;code&gt;($;$)&lt;/code&gt;, and func1() has no prototypes. (At least if &lt;code&gt;Module&lt;/code&gt; uses &lt;code&gt;Exporter&lt;/code&gt; 's &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt;, otherwise it is a fatal error.)</source>
          <target state="translated">場合 &lt;code&gt;Module&lt;/code&gt; プロトタイプで関数func2（）を定義します &lt;code&gt;($;$)&lt;/code&gt; 、および関数func1（）はプロトタイプを持っていません。（少なくとも &lt;code&gt;Module&lt;/code&gt; が &lt;code&gt;Exporter&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;functions/import&quot;&gt;import&lt;/a&gt;&lt;/code&gt; 使用する場合、それ以外の場合は致命的なエラーになります。）</target>
        </trans-unit>
        <trans-unit id="12fa715abfb5f63f789bf4b751305d8997fc625e" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;n&lt;/code&gt; is an input parameter.</source>
          <target state="translated">もし &lt;code&gt;n&lt;/code&gt; 個の入力パラメータです。</target>
        </trans-unit>
        <trans-unit id="6938e2717419dc0dec5b71409d70762afa4a0d43" translate="yes" xml:space="preserve">
          <source>if FILEHANDLE is not open. FILEHANDLE may be an expression whose value gives the real filehandle. (Note that this function actually reads a character and then &lt;code&gt;ungetc&lt;/code&gt; s it, so isn't useful in an interactive context.) Do not read from a terminal file (or call &lt;code&gt;&lt;a href=&quot;eof&quot;&gt;eof(FILEHANDLE)&lt;/a&gt;&lt;/code&gt; on it) after end-of-file is reached. File types such as terminals may lose the end-of-file condition if you do.</source>
          <target state="translated">FILEHANDLEが開いていない場合。FILEHANDLEは、その値が実際のファイルハンドルを与える式である場合があります。（この関数は実際に文字を読み取ってから &lt;code&gt;ungetc&lt;/code&gt; するので、インタラクティブなコンテキストでは役に立たないことに注意してください。）ファイルの終わりが終わった後は、端末ファイルから読み取らない（または &lt;code&gt;&lt;a href=&quot;eof&quot;&gt;eof(FILEHANDLE)&lt;/a&gt;&lt;/code&gt; を呼び出す）こと達した。端末などのファイルタイプは、ファイルの終わりの状態を失う可能性があります。</target>
        </trans-unit>
        <trans-unit id="bd9d21c10270173db19ee179bad231879ff3f31f" translate="yes" xml:space="preserve">
          <source>if FILEHANDLE is not open. FILEHANDLE may be an expression whose value gives the real filehandle. (Note that this function actually reads a character and then &lt;code&gt;ungetc&lt;/code&gt; s it, so isn't useful in an interactive context.) Do not read from a terminal file (or call &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof(FILEHANDLE)&lt;/a&gt;&lt;/code&gt; on it) after end-of-file is reached. File types such as terminals may lose the end-of-file condition if you do.</source>
          <target state="translated">FILEHANDLEが開いていない場合。FILEHANDLEは、その値が実際のファイルハンドルを与える式である場合があります。（この関数は実際に文字を読み取ってから &lt;code&gt;ungetc&lt;/code&gt; するので、インタラクティブなコンテキストでは役に立たないことに注意してください。）ファイルの終わりが終わった後は、端末ファイルから読み取らない（または &lt;code&gt;&lt;a href=&quot;functions/eof&quot;&gt;eof(FILEHANDLE)&lt;/a&gt;&lt;/code&gt; を呼び出す）こと達した。端末などのファイルタイプは、ファイルの終わりの状態を失う可能性があります。</target>
        </trans-unit>
        <trans-unit id="8caf7b1404c5b874815cb24cd4bcf62433a24cc0" translate="yes" xml:space="preserve">
          <source>if X did Y&quot; versus &quot;it wouldn't really</source>
          <target state="translated">もしXがYをしたら」対「それは本当にないだろう</target>
        </trans-unit>
        <trans-unit id="a9631eda59537308495925468009d021cb34f210" translate="yes" xml:space="preserve">
          <source>if a &lt;code&gt;BOOT:&lt;/code&gt; section was present in the</source>
          <target state="translated">もし &lt;code&gt;BOOT:&lt;/code&gt; セクションでは、中に存在していました</target>
        </trans-unit>
        <trans-unit id="cbb45c9025da2b47142864039db3fe6fce4a8726" translate="yes" xml:space="preserve">
          <source>if all else fails</source>
          <target state="translated">否が応でも</target>
        </trans-unit>
        <trans-unit id="cabafed9af31268b34797a82319f0252371dc4bf" translate="yes" xml:space="preserve">
          <source>if and only if there is whitespace right after the opening delimiter and whitespace right before the closing delimiter!</source>
          <target state="translated">開始デリミタの直後に空白があり、終了デリミタの直前に空白がある場合に限ります!</target>
        </trans-unit>
        <trans-unit id="f6dc312efedd75ba2e3362006d3fb4ad492fe234" translate="yes" xml:space="preserve">
          <source>if configured for dynamic loading, triggers #define EXT in EXTERN.h</source>
          <target state="translated">ダイナミックロードが設定されている場合、#define EXT in EXTERN.h をトリガします。</target>
        </trans-unit>
        <trans-unit id="797162ab9c556ec5c005acd0a0e59f9c49945592" translate="yes" xml:space="preserve">
          <source>if d_asctime_r is defined.</source>
          <target state="translated">d_asctime_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="a98a33130cbf065d02485984b815b93fbe49f61a" translate="yes" xml:space="preserve">
          <source>if d_crypt_r is defined.</source>
          <target state="translated">d_crypt_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="0836332c262ebc8c572f283a594b54a2aee40480" translate="yes" xml:space="preserve">
          <source>if d_ctermid_r is defined.</source>
          <target state="translated">d_ctermid_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="17f2ce2588a2a72ceee4a48e19427e10f501f479" translate="yes" xml:space="preserve">
          <source>if d_ctime_r is defined.</source>
          <target state="translated">d_ctime_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="d3825e087f57fe640e376f25adf110cc15868455" translate="yes" xml:space="preserve">
          <source>if d_drand48_r is defined.</source>
          <target state="translated">d_drand48_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="d5cb48208d2b2e4e7a7c457d0e5991bdd1e02dc8" translate="yes" xml:space="preserve">
          <source>if d_endgrent_r is defined.</source>
          <target state="translated">d_endgrent_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="205daa4f9b0f38cd78dc46820db344ad5078d89c" translate="yes" xml:space="preserve">
          <source>if d_endhostent_r is defined.</source>
          <target state="translated">d_endhostent_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="63a87b6c6550ffedc5286e2a26706fd0300e95a7" translate="yes" xml:space="preserve">
          <source>if d_endnetent_r is defined.</source>
          <target state="translated">d_endnetent_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="ec1674bc37e3f6bf980ac4f13d09518359f36f50" translate="yes" xml:space="preserve">
          <source>if d_endprotoent_r is defined.</source>
          <target state="translated">d_endprotoent_r が定義されている場合。</target>
        </trans-unit>
        <trans-unit id="ec6ab05168def7d6401c3adbf83ee760772c4822" translate="yes" xml:space="preserve">
          <source>if d_endpwent_r is defined.</source>
          <target state="translated">d_endpwent_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="5d1b567da4d6de2443740d7a04c698916a497480" translate="yes" xml:space="preserve">
          <source>if d_endservent_r is defined.</source>
          <target state="translated">d_endservent_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="06d5286406639bd323243ba79d56cdd8a82fe0d8" translate="yes" xml:space="preserve">
          <source>if d_getgrent_r is defined.</source>
          <target state="translated">d_getgrent_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="282a660fab2977861f54007b1a44b8aab7d65aa2" translate="yes" xml:space="preserve">
          <source>if d_getgrgid_r is defined.</source>
          <target state="translated">d_getgrgid_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="dd7637239cf0fb42d1e7949f8591cbf9b4a1755e" translate="yes" xml:space="preserve">
          <source>if d_getgrnam_r is defined.</source>
          <target state="translated">d_getgrnam_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="f33a192100836c11080b06357a404650a384f4a9" translate="yes" xml:space="preserve">
          <source>if d_gethostbyaddr_r is defined.</source>
          <target state="translated">d_gethostbyaddr_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="f8b900cab761fccff3016dea352181dadf9320bc" translate="yes" xml:space="preserve">
          <source>if d_gethostbyname_r is defined.</source>
          <target state="translated">d_gethostbyname_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="ddc609a897e9cdd581eec7dd4bedb73170888bdd" translate="yes" xml:space="preserve">
          <source>if d_gethostent_r is defined.</source>
          <target state="translated">d_gethostent_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="a25d7c67709b8e91227ebb6a222f62021f93b6c4" translate="yes" xml:space="preserve">
          <source>if d_getlogin_r is defined.</source>
          <target state="translated">d_getlogin_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="6271ab5b4456a6a2a7231b84eb3ebc97cc401da9" translate="yes" xml:space="preserve">
          <source>if d_getnetbyaddr_r is defined.</source>
          <target state="translated">d_getnetbyaddr_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="a2f0f5384f2ab2849384722ce0d89d877893449d" translate="yes" xml:space="preserve">
          <source>if d_getnetbyname_r is defined.</source>
          <target state="translated">d_getnetbyname_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="d2c98f631374e47608fd4bb6eb8caa2b58267366" translate="yes" xml:space="preserve">
          <source>if d_getnetent_r is defined.</source>
          <target state="translated">d_getnetent_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="1a67dec751ad147fdcde408dcec79689489eb212" translate="yes" xml:space="preserve">
          <source>if d_getprotobyname_r is defined.</source>
          <target state="translated">d_getprotobyname_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="3bfc90a15c3954ed32dd931685d533915d3a1ed9" translate="yes" xml:space="preserve">
          <source>if d_getprotobynumber_r is defined.</source>
          <target state="translated">d_getprotobynumber_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="79fc4cce9c7802289a5e96f5e84f6204ae2fde38" translate="yes" xml:space="preserve">
          <source>if d_getprotoent_r is defined.</source>
          <target state="translated">d_getprotoent_r が定義されている場合。</target>
        </trans-unit>
        <trans-unit id="59e6dcd7d000d9a439e091608999c4cc1fa808ac" translate="yes" xml:space="preserve">
          <source>if d_getpwent_r is defined.</source>
          <target state="translated">d_getpwent_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="8c7d982e2d236696589ced99cb2c6e99632e4558" translate="yes" xml:space="preserve">
          <source>if d_getpwnam_r is defined.</source>
          <target state="translated">d_getpwnam_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="76d5cad2904a4412bb45938b6c1a3a7b7d2dcad7" translate="yes" xml:space="preserve">
          <source>if d_getpwuid_r is defined.</source>
          <target state="translated">d_getpwuid_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="d5434ced38ed933f5fdb74c40cbcb2aa72623a63" translate="yes" xml:space="preserve">
          <source>if d_getservbyname_r is defined.</source>
          <target state="translated">d_getservbyname_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="128d3e614b431c14d54994f217f2e06b5703d965" translate="yes" xml:space="preserve">
          <source>if d_getservbyport_r is defined.</source>
          <target state="translated">d_getservbyport_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="d20aa11efd655b35f40abe67ee04c83b2ad906d1" translate="yes" xml:space="preserve">
          <source>if d_getservent_r is defined.</source>
          <target state="translated">d_getservent_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="960993ce7f9278b90d9f8978309eecc141f78d1d" translate="yes" xml:space="preserve">
          <source>if d_getspnam_r is defined.</source>
          <target state="translated">d_getspnam_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="e60fe5704fe4c813c261e082897d8984f82be943" translate="yes" xml:space="preserve">
          <source>if d_gmtime_r is defined.</source>
          <target state="translated">d_gmtime_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="74874479b50cad4e309342dddd2a0de4436d8e08" translate="yes" xml:space="preserve">
          <source>if d_localtime_r is defined.</source>
          <target state="translated">d_localtime_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="36a849edfd2f6d5c5ec4602b4a34af04a6af4816" translate="yes" xml:space="preserve">
          <source>if d_random_r is defined.</source>
          <target state="translated">d_random_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="e26b6f58c6054bab4337917f1f948bdf7cbf9a34" translate="yes" xml:space="preserve">
          <source>if d_readdir64_r is defined.</source>
          <target state="translated">d_readdir64_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="4145c55ec518a48aac6c7821243887d9c776817b" translate="yes" xml:space="preserve">
          <source>if d_readdir_r is defined.</source>
          <target state="translated">d_readdir_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="c428e464733e203116aaeac3b1b0de984f13b9bb" translate="yes" xml:space="preserve">
          <source>if d_setgrent_r is defined.</source>
          <target state="translated">d_setgrent_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="3cbad48abaa3a6d21dbe52c9a9a6eed6c178d799" translate="yes" xml:space="preserve">
          <source>if d_sethostent_r is defined.</source>
          <target state="translated">d_sethostent_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="4f9af6259b8d3eb1fa04ce205b0e396bd6a5f0eb" translate="yes" xml:space="preserve">
          <source>if d_setlocale_r is defined.</source>
          <target state="translated">d_setlocale_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="422f665103a748e51517588254953bcde4f74689" translate="yes" xml:space="preserve">
          <source>if d_setnetent_r is defined.</source>
          <target state="translated">d_setnetent_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="890bfee3a66bf7a9060dc5436f46089ba150da55" translate="yes" xml:space="preserve">
          <source>if d_setprotoent_r is defined.</source>
          <target state="translated">d_setprotoent_r が定義されている場合。</target>
        </trans-unit>
        <trans-unit id="3a1dd69a4c0e7a01d81e29f627e357bf0d557ff5" translate="yes" xml:space="preserve">
          <source>if d_setpwent_r is defined.</source>
          <target state="translated">d_setpwent_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="68c5504f82c59dc37235690e6cefe9ae3a7aa2af" translate="yes" xml:space="preserve">
          <source>if d_setservent_r is defined.</source>
          <target state="translated">d_setservent_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="1f61ef9c7b164614236292b174d166614606304a" translate="yes" xml:space="preserve">
          <source>if d_srand48_r is defined.</source>
          <target state="translated">d_srand48_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="07d3f2e51754022c5035df07ec457bb52889a9ea" translate="yes" xml:space="preserve">
          <source>if d_srandom_r is defined.</source>
          <target state="translated">d_random_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="9b9b1767ea3b5eadb56146c608ba663537074bcc" translate="yes" xml:space="preserve">
          <source>if d_strerror_r is defined.</source>
          <target state="translated">d_strerror_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="8c35e7e98bdd5f269e1b62215c950f1e877789cf" translate="yes" xml:space="preserve">
          <source>if d_tmpnam_r is defined.</source>
          <target state="translated">d_tmpnam_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="0bb75610da2d7670dc9a48ec1e3c533a67a81ac6" translate="yes" xml:space="preserve">
          <source>if d_ttyname_r is defined.</source>
          <target state="translated">d_ttyname_rが定義されている場合。</target>
        </trans-unit>
        <trans-unit id="fd107182cfc8b4f067da203221a332a1e2656c34" translate="yes" xml:space="preserve">
          <source>if defined give snippets of C code to proceed and follow the assignment.</source>
          <target state="translated">定義されている場合は、C言語のコードのスニペットを与えます。</target>
        </trans-unit>
        <trans-unit id="e7406c0a151c8277090e964a85c97c939d25ed2e" translate="yes" xml:space="preserve">
          <source>if everything looks ok (see the next section for test/IVP diagnosis) then:</source>
          <target state="translated">すべてが大丈夫そうであれば(テスト/IVP診断のための次のセクションを参照してください)、その後。</target>
        </trans-unit>
        <trans-unit id="6ca3f15790f21e1d0ee11219030bb89fe5f2d42c" translate="yes" xml:space="preserve">
          <source>if it contains no whitespace: leave it as it is</source>
          <target state="translated">空白を含まない場合はそのままにしてください。</target>
        </trans-unit>
        <trans-unit id="c55bc369fd41e56a35382286d9491fd3edf44b58" translate="yes" xml:space="preserve">
          <source>if it contains quotes: better leave it as it is</source>
          <target state="translated">引用符が含まれている場合は、そのままにしておいた方が良いでしょう。</target>
        </trans-unit>
        <trans-unit id="1dd511d652583de3ec84ad614f026e1799dff8c2" translate="yes" xml:space="preserve">
          <source>if it contains whitespace, then</source>
          <target state="translated">ホワイトスペースが含まれている場合は</target>
        </trans-unit>
        <trans-unit id="ca9dd46f23fbe0c9605dee96e0b7538aee492f61" translate="yes" xml:space="preserve">
          <source>if it starts and ends with the same quote character: leave it as it is</source>
          <target state="translated">同じ引用文字で始まり、同じ引用文字で終わる場合は、そのままにしてください。</target>
        </trans-unit>
        <trans-unit id="e530a5e2473cc133e4ec07f1df33695be27a6f54" translate="yes" xml:space="preserve">
          <source>if it's any issue.</source>
          <target state="translated">何か問題があれば</target>
        </trans-unit>
        <trans-unit id="0d2a577122f3e3626d8a1791197969f17e7f8f6f" translate="yes" xml:space="preserve">
          <source>if it's necessary to preserve the original digest state.</source>
          <target state="translated">元のダイジェスト状態を維持する必要がある場合は</target>
        </trans-unit>
        <trans-unit id="9cf9854f2b9f91e0d531aec268608979ba735c49" translate="yes" xml:space="preserve">
          <source>if it's not inside a &quot;=begin</source>
          <target state="translated">の中にない場合は</target>
        </trans-unit>
        <trans-unit id="f4530306cc39cd8b865013aa0757ac9fc1fcc10e" translate="yes" xml:space="preserve">
          <source>if its object claims to perform the role &lt;code&gt;$role&lt;/code&gt; . By default, this is equivalent to &lt;code&gt;isa&lt;/code&gt; . This method is provided for use by object system extensions that implement roles, like &lt;code&gt;Moose&lt;/code&gt; and &lt;code&gt;Role::Tiny&lt;/code&gt; .</source>
          <target state="translated">そのオブジェクトがロール &lt;code&gt;$role&lt;/code&gt; を実行すると主張する場合。デフォルトでは、 &lt;code&gt;isa&lt;/code&gt; と同じです。このメソッドは、 &lt;code&gt;Moose&lt;/code&gt; や &lt;code&gt;Role::Tiny&lt;/code&gt; などのロールを実装するオブジェクトシステム拡張で使用するために提供されています。</target>
        </trans-unit>
        <trans-unit id="f005aa59c0696e58a0bfc15053012d093bab7f01" translate="yes" xml:space="preserve">
          <source>if no &lt;code&gt;Compress::Zlib&lt;/code&gt; can be loaded, unless explicitly disabled by</source>
          <target state="translated">何の場合は &lt;code&gt;Compress::Zlib&lt;/code&gt; 明示的では無効になっていない限り、ロードすることはできません</target>
        </trans-unit>
        <trans-unit id="901a45bf30cb09afcc520900df5d38e369095126" translate="yes" xml:space="preserve">
          <source>if no extension is present). If not found, it looks for a script with possible extensions added in this order: no extension,</source>
          <target state="translated">拡張モジュールが存在しない場合)。見つからない場合は、拡張子が追加されている可能性のあるスクリプトを探します。</target>
        </trans-unit>
        <trans-unit id="059ef36b421642bc58c00bf9481aeb8934fac48f" translate="yes" xml:space="preserve">
          <source>if not given.</source>
          <target state="translated">が与えられていない場合。</target>
        </trans-unit>
        <trans-unit id="bda498f07467a154605f532c56404269eae7f926" translate="yes" xml:space="preserve">
          <source>if not set.</source>
          <target state="translated">が設定されていなければ</target>
        </trans-unit>
        <trans-unit id="7848b4defb60033b0be0aef7eadbc0fb17cf819b" translate="yes" xml:space="preserve">
          <source>if set, tells to skip the tests that need a terminal. It's actually set automatically by the Makefile, but can also be forced artificially by running 'make test_notty'.</source>
          <target state="translated">が設定されている場合、ターミナルを必要とするテストをスキップします。実際には Makefile によって自動的に設定されますが、'make test_notty' を実行することで人為的に強制的に設定することもできます。</target>
        </trans-unit>
        <trans-unit id="5537299f9efa5e24e80177625da6af10a9a4faa9" translate="yes" xml:space="preserve">
          <source>if shell is required, cf. &lt;a href=&quot;#PERL_SH_DIR&quot;&gt;PERL_SH_DIR&lt;/a&gt;.</source>
          <target state="translated">シェルが必要な場合は、cf。&lt;a href=&quot;#PERL_SH_DIR&quot;&gt;PERL_SH_DIR&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="baaa62c0c4725eb3164ee5cf41027c87fe080ab6" translate="yes" xml:space="preserve">
          <source>if the FQDN cannot be determined.</source>
          <target state="translated">FQDNが判別できない場合。</target>
        </trans-unit>
        <trans-unit id="148caaa57d23432e1e887d0cdbed3f5dc027013f" translate="yes" xml:space="preserve">
          <source>if the connection was closed successfully and the first digit of the response from the server was a '2'.</source>
          <target state="translated">接続が正常に終了し、サーバからのレスポンスの最初の桁が '2' であった場合。</target>
        </trans-unit>
        <trans-unit id="10f21e4057cd19093a58994dc8a8007a51bee7e1" translate="yes" xml:space="preserve">
          <source>if the distribution file containing the module doesn't need updating.</source>
          <target state="translated">モジュールを含むディストリビューションファイルを更新する必要がない場合は</target>
        </trans-unit>
        <trans-unit id="bd1e88c24fdd5ad2917f8a1ae9e58040a0b0ecad" translate="yes" xml:space="preserve">
          <source>if the indentation level is more than 0.</source>
          <target state="translated">インデントレベルが0以上の場合は</target>
        </trans-unit>
        <trans-unit id="0d483303eb8d9da5061e1364b607e9d753170c72" translate="yes" xml:space="preserve">
          <source>if the object is a member of the class in &lt;code&gt;$class&lt;/code&gt; , or a member of a subclass of &lt;code&gt;$class&lt;/code&gt; .</source>
          <target state="translated">オブジェクトが &lt;code&gt;$class&lt;/code&gt; のメンバー、または &lt;code&gt;$class&lt;/code&gt; サブクラスのメンバーである場合。</target>
        </trans-unit>
        <trans-unit id="bf4bdb72ca5bf0c6e26eb084b22b24cf324f54d7" translate="yes" xml:space="preserve">
          <source>if the server desires the article and &lt;code&gt;MESSAGE&lt;/code&gt; was successfully sent,if specified.</source>
          <target state="translated">サーバーが記事を &lt;code&gt;MESSAGE&lt;/code&gt; 、MESSAGEが正常に送信された場合（指定されている場合）</target>
        </trans-unit>
        <trans-unit id="f53b32639c8a5b90b481284915907b526547ab1a" translate="yes" xml:space="preserve">
          <source>if the servers initial response indicated that it will allow posting.</source>
          <target state="translated">サーバの最初の応答が投稿を許可することを示していた場合。</target>
        </trans-unit>
        <trans-unit id="8f671f12bb9e859af0b1bea88b3946ea87581867" translate="yes" xml:space="preserve">
          <source>if the user wishes to build a perl executable with a shared library.</source>
          <target state="translated">ユーザが共有ライブラリを使ってPerlの実行ファイルをビルドしたい場合は</target>
        </trans-unit>
        <trans-unit id="99db7b730a003f8b109e808508f097b3ecbef706" translate="yes" xml:space="preserve">
          <source>if the variable did not exist before the function was called.</source>
          <target state="translated">関数が呼び出される前に変数が存在しなかった場合。</target>
        </trans-unit>
        <trans-unit id="5fcdd839dd72e723b173f78eda011fec0342d34c" translate="yes" xml:space="preserve">
          <source>if we can't auto-make</source>
          <target state="translated">オートメイクができなければ</target>
        </trans-unit>
        <trans-unit id="1e963263239b7164e2f0a418f8c45fd9033b7e4f" translate="yes" xml:space="preserve">
          <source>if you don't have</source>
          <target state="translated">無ければ</target>
        </trans-unit>
        <trans-unit id="18db0d50316aa2bd155961c8e263352184dc284e" translate="yes" xml:space="preserve">
          <source>if you expect to see anything.)</source>
          <target state="translated">何かを期待しているのであれば)</target>
        </trans-unit>
        <trans-unit id="52fcc9c638237d5915e781977eed468e91e00fca" translate="yes" xml:space="preserve">
          <source>if you know the cartesian form of the number, or</source>
          <target state="translated">数の直交形を知っている場合、または</target>
        </trans-unit>
        <trans-unit id="96039412af550602ef27de545373bedcd9cffbba" translate="yes" xml:space="preserve">
          <source>if you like. To create a number using the polar form, use either:</source>
          <target state="translated">を使用してください。極形を使って数値を作成するには、どちらかを使います。</target>
        </trans-unit>
        <trans-unit id="91f3e19bc6ec344eeafe5aa23fee611d8dd253c8" translate="yes" xml:space="preserve">
          <source>if you must open such a filename.</source>
          <target state="translated">そのようなファイル名を開く必要がある場合は</target>
        </trans-unit>
        <trans-unit id="e913477cff674310769299748854bcfc18ccde39" translate="yes" xml:space="preserve">
          <source>if you selected that option at configure time.</source>
          <target state="translated">を選択した場合は、設定時にそのオプションを選択した場合は</target>
        </trans-unit>
        <trans-unit id="eea154f6bcb81a5cecb3f16ae1b93541c612be45" translate="yes" xml:space="preserve">
          <source>if you try to read in the a-diaereses Latin-1 as UTF-8.</source>
          <target state="translated">a-diaeresesのLatin-1をUTF-8として読もうとすると</target>
        </trans-unit>
        <trans-unit id="8992955762e3f187ebb4a563528dcc9a83b7309d" translate="yes" xml:space="preserve">
          <source>if you use something like</source>
          <target state="translated">のように使うと</target>
        </trans-unit>
        <trans-unit id="01b64216a0504c71d38b097f35b47d738f252013" translate="yes" xml:space="preserve">
          <source>if you want to pass different arguments to each test then you should pass a hash of arrays, keyed by the alias for each test:</source>
          <target state="translated">それぞれのテストに異なる引数を渡したい場合は、各テストのエイリアスをキーにした配列のハッシュを渡すべきです。</target>
        </trans-unit>
        <trans-unit id="cfe0a3f1cadea14a8b9fbbdd7f6fea0e9a77683d" translate="yes" xml:space="preserve">
          <source>igit,</source>
          <target state="translated">igit,</target>
        </trans-unit>
        <trans-unit id="a7435c88c9e28048afe539b540a947372853ed86" translate="yes" xml:space="preserve">
          <source>ignore_exit</source>
          <target state="translated">ignore_exit</target>
        </trans-unit>
        <trans-unit id="054fc62f4efaea841c8bfc94a3911eda3b8a11f0" translate="yes" xml:space="preserve">
          <source>illguts</source>
          <target state="translated">illguts</target>
        </trans-unit>
        <trans-unit id="98d34f305aeccaa8204ee68949b020bd071f5315" translate="yes" xml:space="preserve">
          <source>ilya@math.mps.ohio-state.edu</source>
          <target state="translated">ilya@math.mps.ohio-state.edu</target>
        </trans-unit>
        <trans-unit id="1519bc46bfb051be135aec61da427a20695d597e" translate="yes" xml:space="preserve">
          <source>imaginary</source>
          <target state="translated">imaginary</target>
        </trans-unit>
        <trans-unit id="3e7ce50be818f71ac34d25f7af5a87a91f994be1" translate="yes" xml:space="preserve">
          <source>immediately</source>
          <target state="translated">immediately</target>
        </trans-unit>
        <trans-unit id="c90d838f06c83b28753d520976adb77d98a59bc0" translate="yes" xml:space="preserve">
          <source>imode</source>
          <target state="translated">imode</target>
        </trans-unit>
        <trans-unit id="9257ad18b64c3f7597b253a275387e52d9e89aeb" translate="yes" xml:space="preserve">
          <source>implementations, the directory used for the temporary file is not specified in a system include file (C</source>
          <target state="translated">実装では、一時ファイルに使用されるディレクトリはシステムインクルードファイル(C</target>
        </trans-unit>
        <trans-unit id="07f151f1261e1daccf6b3a47034c095132e048bc" translate="yes" xml:space="preserve">
          <source>implemented</source>
          <target state="translated">implemented</target>
        </trans-unit>
        <trans-unit id="09d7304dc0a40d12a940a73706708cbfad2740dc" translate="yes" xml:space="preserve">
          <source>implicit</source>
          <target state="translated">implicit</target>
        </trans-unit>
        <trans-unit id="a907f001046b73d23cac3c205fb7b5240cd31797" translate="yes" xml:space="preserve">
          <source>imply that there is no way to create the Module, but this is a normal state of things, then you can create a</source>
          <target state="translated">モジュールを作成する方法がないことを暗示していますが、これが普通の状態であれば</target>
        </trans-unit>
        <trans-unit id="62fdfbd55d19b2a4671102ad7bca17d875f8207a" translate="yes" xml:space="preserve">
          <source>import</source>
          <target state="translated">import</target>
        </trans-unit>
        <trans-unit id="54435bb42c19a052d45da83757ba061f53957585" translate="yes" xml:space="preserve">
          <source>import &lt;b&gt;AutoLoader&lt;/b&gt;'s AUTOLOAD subroutine. Instead, they should define their own AUTOLOAD subroutines along these lines:</source>
          <target state="translated">&lt;b&gt;AutoLoader&lt;/b&gt;のAUTOLOADサブルーチンをインポートします。代わりに、これらの行に沿って独自のAUTOLOADサブルーチンを定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="4d26d0215c71aea14871dc9730382d9d55b5512f" translate="yes" xml:space="preserve">
          <source>import LIST</source>
          <target state="translated">インポートリスト</target>
        </trans-unit>
        <trans-unit id="c076212a4c980412e47862b0cef9fb1aafe7143e" translate="yes" xml:space="preserve">
          <source>import_extra</source>
          <target state="translated">import_extra</target>
        </trans-unit>
        <trans-unit id="cae60ffe6fc4d29d89311f50e65116959e0ec639" translate="yes" xml:space="preserve">
          <source>important that while you are still testing extensions that you use &quot;&lt;code&gt;make test&lt;/code&gt; &quot;. If you try to run the test script all by itself, you will get a fatal error. Another reason it is important to use &quot;&lt;code&gt;make test&lt;/code&gt; &quot; to run your test script is that if you are testing an upgrade to an already-existing version, using &quot;&lt;code&gt;make test&lt;/code&gt; &quot; ensures that you will test your new extension, not the already-existing version.</source>
          <target state="translated">重要なことは、まだ拡張機能をテストしているときに「 &lt;code&gt;make test&lt;/code&gt; 」を使用することです。テストスクリプトを単独で実行しようとすると、致命的なエラーが発生します。「 &lt;code&gt;make test&lt;/code&gt; 」を使用してテストスクリプトを実行することが重要なもう1つの理由は、既存のバージョンへのアップグレードをテストする場合、「 &lt;code&gt;make test&lt;/code&gt; 」を使用すると、既存の拡張ではなく新しい拡張機能をテストできることです。バージョン。</target>
        </trans-unit>
        <trans-unit id="7a4dc040b3bd93a10b34ab718b97fca78efe0945" translate="yes" xml:space="preserve">
          <source>important that you make sure that any temporaries (i.e., parameters passed to the Perl subroutine and values returned from the subroutine) are disposed of yourself. The section</source>
          <target state="translated">重要なのは、一時的なもの(Perlのサブルーチンに渡されたパラメータやサブルーチンから返された値など)は自分で処分するようにすることです。セクション</target>
        </trans-unit>
        <trans-unit id="163994c28bd8fd98f76a6e8e0109840e51545533" translate="yes" xml:space="preserve">
          <source>important to check the value of &lt;code&gt;$status&lt;/code&gt; after</source>
          <target state="translated">後で &lt;code&gt;$status&lt;/code&gt; の値を確認することが重要です</target>
        </trans-unit>
        <trans-unit id="629d96811afe8f04ef712e72426e98c83e65f9d3" translate="yes" xml:space="preserve">
          <source>important to ensure that it is possible to retrieve all data that you have written when the DBM filter is in place. In practice, this means that whatever transformation is applied to the data in the Store method, the</source>
          <target state="translated">は、DBM フィルタが適用されているときに、書き込んだすべてのデータを取得できるようにすることが重要です。実際には、Storeメソッドでデータにどのような変換が適用されたとしても</target>
        </trans-unit>
        <trans-unit id="af10ef20dd9060bbeead0afbc55381a66af442ef" translate="yes" xml:space="preserve">
          <source>in</source>
          <target state="translated">in</target>
        </trans-unit>
        <trans-unit id="8fe759919069e7e0109e202a984a3c1aba84db03" translate="yes" xml:space="preserve">
          <source>in &quot;=over</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34f1b63fd6eb111f052a135427af96afdac1d2b5" translate="yes" xml:space="preserve">
          <source>in $lh's class's %Lexicon, nor in the superclass %Lexicon hash,</source>
          <target state="translated">は、$lh のクラスの %Lexicon にも、スーパークラスの %Lexicon ハッシュにもありません。</target>
        </trans-unit>
        <trans-unit id="7ff76fca4f3ec38ff4e6a91e243f1118b40437a9" translate="yes" xml:space="preserve">
          <source>in $lh-&amp;gt;maketext(</source>
          <target state="translated">$ lh-&amp;gt; maketext（</target>
        </trans-unit>
        <trans-unit id="01cfc92dce29bc3c83708297a51c390e3a19370d" translate="yes" xml:space="preserve">
          <source>in &amp;lt;a name=&quot;</source>
          <target state="translated">&amp;lt;a name = &quot;</target>
        </trans-unit>
        <trans-unit id="d095cd0c73e5484704401439c3ef1bd37676e8f7" translate="yes" xml:space="preserve">
          <source>in 1645.</source>
          <target state="translated">1645年に</target>
        </trans-unit>
        <trans-unit id="050b1313ea6cccf6bc93f8764b2f4e7b08263e7a" translate="yes" xml:space="preserve">
          <source>in 1995, and updated by Charles Bailey</source>
          <target state="translated">1995年、チャールズ・ベイリーによって更新されました。</target>
        </trans-unit>
        <trans-unit id="c30e293f5d390ccb34f8544c59d89eb1b7fb2df8" translate="yes" xml:space="preserve">
          <source>in 1996.</source>
          <target state="translated">1996年に</target>
        </trans-unit>
        <trans-unit id="4831eb33dbb7cc0ab0d6e18b1f4a4dc2acb9240f" translate="yes" xml:space="preserve">
          <source>in &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt;.</source>
          <target state="translated">中に&lt;a href=&quot;perlguts&quot;&gt;はperlguts&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="16560985d1690aee72d8f1623e6b69d5a5809ad2" translate="yes" xml:space="preserve">
          <source>in &lt;code&gt;=item &lt;i&gt;stuff...&lt;/i&gt;&lt;/code&gt;, you may use formatting codes, as seen here:</source>
          <target state="translated">中 &lt;code&gt;=item &lt;i&gt;stuff...&lt;/i&gt;&lt;/code&gt; ここに見られるように、あなたは、書式設定コードを使用することがあります。</target>
        </trans-unit>
        <trans-unit id="df16d2275989ae2bdab448ff159fb17caf2dc7b2" translate="yes" xml:space="preserve">
          <source>in &lt;code&gt;@INC&lt;/code&gt; .</source>
          <target state="translated">で &lt;code&gt;@INC&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="27406c809499fa37eaba7cf0abd7c0efaf5e9900" translate="yes" xml:space="preserve">
          <source>in &lt;code&gt;BEGINLIBPATH&lt;/code&gt; (older do not), this mess cannot be completely cleaned. (It turns out that as of the beginning of 2002,</source>
          <target state="translated">&lt;code&gt;BEGINLIBPATH&lt;/code&gt; （以前はしないでください）では、この混乱を完全に消去することはできません。（2002年の初めの時点で、</target>
        </trans-unit>
        <trans-unit id="1c137f7e6d265b6c106b8e05f1f36c2699484b5e" translate="yes" xml:space="preserve">
          <source>in &lt;code&gt;PERLLIB&lt;/code&gt; or &lt;code&gt;PERL5LIB&lt;/code&gt; variable. Do not use &lt;code&gt;PERL5LIB&lt;/code&gt; unless you have it set already. See &lt;a href=&quot;perl#ENVIRONMENT&quot;&gt;ENVIRONMENT in perl&lt;/a&gt;.</source>
          <target state="translated">中 &lt;code&gt;PERLLIB&lt;/code&gt; あるいは &lt;code&gt;PERL5LIB&lt;/code&gt; 変数。まだ設定していない場合は、 &lt;code&gt;PERL5LIB&lt;/code&gt; を使用しないでください。&lt;a href=&quot;perl#ENVIRONMENT&quot;&gt;perlのENVIRONMENTを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="173a5ecd76076598194dec3fc13a5f344fe2bd94" translate="yes" xml:space="preserve">
          <source>in &lt;code&gt;_&lt;/code&gt; , and in the second case this still contains the bits of &lt;code&gt;/etc&lt;/code&gt;.</source>
          <target state="translated">で &lt;code&gt;_&lt;/code&gt; 、第2のケースでは、これは依然としてのビット含有する &lt;code&gt;/etc&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7e9abcc2922e9789961a82ca7edd65f8f5c44ef0" translate="yes" xml:space="preserve">
          <source>in &lt;code&gt;m/&lt;i&gt;PATTERN&lt;/i&gt;/&lt;/code&gt;. If &lt;code&gt;&quot;'&quot;&lt;/code&gt; is used as the delimiter, no interpolation is done. Returns a Perl value which may be used instead of the corresponding &lt;code&gt;/&lt;i&gt;STRING&lt;/i&gt;/msixpodualn&lt;/code&gt; expression. The returned value is a normalized version of the original pattern. It magically differs from a string containing the same characters: &lt;code&gt;&lt;a href=&quot;functions/ref&quot;&gt;ref(qr/x/)&lt;/a&gt;&lt;/code&gt; returns &quot;Regexp&quot;; however, dereferencing it is not well defined (you currently get the normalized version of the original pattern, but this may change).</source>
          <target state="translated">&lt;code&gt;m/&lt;i&gt;PATTERN&lt;/i&gt;/&lt;/code&gt; 。場合は &lt;code&gt;&quot;'&quot;&lt;/code&gt; 区切り文字として使用され、何の補間は行われません。対応する &lt;code&gt;/&lt;i&gt;STRING&lt;/i&gt;/msixpodualn&lt;/code&gt; 式の代わりに使用できるPerl値を返します。戻り値は、元のパターンの正規化されたバージョンです。同じ文字を含む文字列とは魔法のように異なります &lt;code&gt;&lt;a href=&quot;functions/ref&quot;&gt;ref(qr/x/)&lt;/a&gt;&lt;/code&gt; は &quot;Regexp&quot;を返します。ただし、それを逆参照することは明確に定義されていません（現在、元のパターンの正規化されたバージョンを取得していますが、これは変更される可能性があります）。</target>
        </trans-unit>
        <trans-unit id="8b9013ca919935154f9e517eb13915b278264100" translate="yes" xml:space="preserve">
          <source>in C section,</source>
          <target state="translated">をCセクションで使用しています。</target>
        </trans-unit>
        <trans-unit id="0d648af3b7b3651c973c881accfc7ac9723955bd" translate="yes" xml:space="preserve">
          <source>in C, but you can always</source>
          <target state="translated">を使用することができます。</target>
        </trans-unit>
        <trans-unit id="135bb38d9374aa8028ffc849b2cc7391d0af3d35" translate="yes" xml:space="preserve">
          <source>in C, you have to pay attention to the endianness of each platform when you pass data to one another.</source>
          <target state="translated">C言語では、お互いにデータを渡すときに各プラットフォームのエンディアン性に注意しなければなりません。</target>
        </trans-unit>
        <trans-unit id="4d0270da09a44801383fea69a40b576ffe65b9e7" translate="yes" xml:space="preserve">
          <source>in EMX's distribution). There is also a different viewer named xview.</source>
          <target state="translated">を使用しています)。xviewという別のビューアもあります。</target>
        </trans-unit>
        <trans-unit id="0c4fd5b8aaccce3de038350696b2c2aab707e1bb" translate="yes" xml:space="preserve">
          <source>in MakeMaker's neatvalue format.</source>
          <target state="translated">をMakeMakerのneatvalue形式で作成します。</target>
        </trans-unit>
        <trans-unit id="a0f0a0f4094f22b3a2a5e765302a168d574bcd2d" translate="yes" xml:space="preserve">
          <source>in Perl 5.10, we have a way of instructing the regex engine not to backtrack, with the usual quantifiers with a &lt;code&gt;+&lt;/code&gt; appended to them. This makes them greedy as well as stingy; once they succeed they won't give anything back to permit another solution. They have the following meanings:</source>
          <target state="translated">Perl 5.10では、通常の量指定子に &lt;code&gt;+&lt;/code&gt; が追加されて、バックトラックしないように正規表現エンジンに指示する方法があります。これは彼らを貪欲に、そしてけちにさせます。彼らが成功すると、彼らは別の解決策を許可するために何も返しません。それらの意味は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="b3f7161707417ee46c1475db2f59058325a543df" translate="yes" xml:space="preserve">
          <source>in Perl can be written as:</source>
          <target state="translated">Perlでは次のように書くことができます。</target>
        </trans-unit>
        <trans-unit id="c8e74d5cd4c06562e43eadeee2289a5f546e7398" translate="yes" xml:space="preserve">
          <source>in Perl.</source>
          <target state="translated">をPerlで使用しています。</target>
        </trans-unit>
        <trans-unit id="b9d17e00c7f6499aef56771d2d19814dd71f6e01" translate="yes" xml:space="preserve">
          <source>in Perl. Because you can use each from the other, combine them as you wish.</source>
          <target state="translated">をPerlで使用することができます。それぞれを使い分けることができるので、好きなように組み合わせてください。</target>
        </trans-unit>
        <trans-unit id="bcd27e3cc8ed5cc6520a74da110ceab99b2fd272" translate="yes" xml:space="preserve">
          <source>in Some_package. So something like this:</source>
          <target state="translated">を使用しています。ということで、こんな感じです。</target>
        </trans-unit>
        <trans-unit id="b85e425d4568afd828ff9d2da1858e8e47f820ba" translate="yes" xml:space="preserve">
          <source>in Unicode.&quot; (This is identical to the semantics of &amp;amp;#</source>
          <target state="translated">Unicodeで」（これは＆＃のセマンティクスと同じです</target>
        </trans-unit>
        <trans-unit id="24078ae9eec31a9f0294414cc70d87691fe83181" translate="yes" xml:space="preserve">
          <source>in XSUB section.</source>
          <target state="translated">をXSUBセクションに追加しました。</target>
        </trans-unit>
        <trans-unit id="f0e5a8ef44993f47cae9ddd9bea6cf8297ad0d2d" translate="yes" xml:space="preserve">
          <source>in a &lt;code&gt;foreach&lt;/code&gt; loop.</source>
          <target state="translated">&lt;code&gt;foreach&lt;/code&gt; ループ。</target>
        </trans-unit>
        <trans-unit id="054794fd4cc03d087f3130288f8c4af3d86db3f2" translate="yes" xml:space="preserve">
          <source>in a makefile) the</source>
          <target state="translated">を使用します)</target>
        </trans-unit>
        <trans-unit id="56dd62e41fd098762bf6b3ec6c7fc5259e59465c" translate="yes" xml:space="preserve">
          <source>in addition to</source>
          <target state="translated">に加えて</target>
        </trans-unit>
        <trans-unit id="a4bc1468e05dc82da3e93e826efb9854decfb0c0" translate="yes" xml:space="preserve">
          <source>in all the processes</source>
          <target state="translated">全工程において</target>
        </trans-unit>
        <trans-unit id="e8b08f59451e464a49e63cf29b06f3f4ec3ac939" translate="yes" xml:space="preserve">
          <source>in any of those lexicons, maketext gives up with</source>
          <target state="translated">これらの辞書では、maketext は</target>
        </trans-unit>
        <trans-unit id="1b5715f385466242b082794ca9f2a33a4b617b45" translate="yes" xml:space="preserve">
          <source>in basic mode.</source>
          <target state="translated">を基本モードで使用します。</target>
        </trans-unit>
        <trans-unit id="e2f874578ecf1c69fb0d66597b2b38c85070dd8f" translate="yes" xml:space="preserve">
          <source>in bytes</source>
          <target state="translated">バイト単位</target>
        </trans-unit>
        <trans-unit id="dce4f70dadd1a05f6527912a8896eb736c9b2220" translate="yes" xml:space="preserve">
          <source>in case you want to see both sets of results. If the first argument is an unblessed hash reference, that is RESULTSHASHREF; otherwise that is COUNT.</source>
          <target state="translated">のように、両方の結果を見たい場合には もし第一引数がblessされていないハッシュ参照であれば、それはRESULTSHASHREFであり、そうでなければCOUNTです。</target>
        </trans-unit>
        <trans-unit id="1b33c2f26043ef1d61732b5b6b9d7bbad54a3230" translate="yes" xml:space="preserve">
          <source>in database tests related to Berkeley DB.</source>
          <target state="translated">バークレーDBに関連するデータベーステストで</target>
        </trans-unit>
        <trans-unit id="fc6873ccd0c33a47d404ce37b923b70021215522" translate="yes" xml:space="preserve">
          <source>in different directories). This usually indicates duplicate occurrences of modules in the</source>
          <target state="translated">のモジュールが異なるディレクトリに存在することを示します)。のモジュールが重複していることを示しています。</target>
        </trans-unit>
        <trans-unit id="2df15dae7d1f083e8d4c62bd139f54a76a666f8e" translate="yes" xml:space="preserve">
          <source>in different directories. This usually indicates duplicate occurrences of modules in the</source>
          <target state="translated">が異なるディレクトリにあることを示しています。これは通常、モジュールが</target>
        </trans-unit>
        <trans-unit id="a0cf5dadc94bda9b8b4294a72610c329c8a416f5" translate="yes" xml:space="preserve">
          <source>in exec mode, or</source>
          <target state="translated">execモードでは</target>
        </trans-unit>
        <trans-unit id="530b390c929b3e5bb3926e6daff2c5201580ba14" translate="yes" xml:space="preserve">
          <source>in modern code so that your code will work with the widest range of Perl interpreters possible, without significant additional work.</source>
          <target state="translated">を最新のコードで使用することで、大幅な追加作業をせずに、可能な限り幅広い Perl インタプリタで動作するようになります。</target>
        </trans-unit>
        <trans-unit id="ad587d2690fb4ab862a01cef39aa2e96c8c5302c" translate="yes" xml:space="preserve">
          <source>in most Perl dists.)</source>
          <target state="translated">ほとんどの Perl ディストーションでは)</target>
        </trans-unit>
        <trans-unit id="660b068be45d224b085bbe7ee434fe60412f2c0b" translate="yes" xml:space="preserve">
          <source>in order for the statement to be true.</source>
          <target state="translated">が真実であるためには</target>
        </trans-unit>
        <trans-unit id="02dda0029076307584b1812ee098cdfce7dd8084" translate="yes" xml:space="preserve">
          <source>in order for the statement to be true:</source>
          <target state="translated">が真実であるためには</target>
        </trans-unit>
        <trans-unit id="3b32b29f1451383dfe114026612852f8a755cffa" translate="yes" xml:space="preserve">
          <source>in order to emulate &lt;b&gt;awk&lt;/b&gt;. (See also the &lt;code&gt;AutoSplit&lt;/code&gt; module, which has nothing to do with the &lt;code&gt;&amp;ndash;a&lt;/code&gt; switch but a lot to do with autoloading.)</source>
          <target state="translated">&lt;b&gt;awk&lt;/b&gt;をエミュレートするため。（ &lt;code&gt;AutoSplit&lt;/code&gt; モジュールも参照してください。これは、 &lt;code&gt;&amp;ndash;a&lt;/code&gt; スイッチとは関係ありませんが、オートローディングとは関係があります。）</target>
        </trans-unit>
        <trans-unit id="ceab5824077ab0ae779bebf99f4cd955f88ef71b" translate="yes" xml:space="preserve">
          <source>in order to keep reasonable dclone() semantics.</source>
          <target state="translated">のセマンティクスを合理的に保つために</target>
        </trans-unit>
        <trans-unit id="68456a0b1a2475014b28892b2f47f8f9d6b013d4" translate="yes" xml:space="preserve">
          <source>in place of</source>
          <target state="translated">かわりに</target>
        </trans-unit>
        <trans-unit id="5a4aca85ce8e582da1aeefe173e74a2d8f3921ee" translate="yes" xml:space="preserve">
          <source>in place to remove the converted part (i.e. the whole sequence unless there is an error). If perlio_ok() is true, SHOULD becomes MUST.</source>
          <target state="translated">を使用して、変換された部分(すなわち、エラーが発生しない限りシーケンス全体)を削除します。perlio_ok()が真の場合、SHOULD は MUST になります。</target>
        </trans-unit>
        <trans-unit id="893632cc391f51d2699881ae4b50222a2d9249fc" translate="yes" xml:space="preserve">
          <source>in place to remove the converted part (i.e. the whole string unless there is an error). If perlio_ok() is true, SHOULD becomes MUST.</source>
          <target state="translated">を使用して、変換された部分 (つまり、エラーが発生しない限り文字列全体)を削除します。perlio_ok()が真の場合、SHOULDはMUSTになります。</target>
        </trans-unit>
        <trans-unit id="8f4fa4129ae8dfbfe22a7e8c8be0587880700b8e" translate="yes" xml:space="preserve">
          <source>in right place and its corresponding Cross.pm.</source>
          <target state="translated">正しい場所で、その対応するCross.pm.</target>
        </trans-unit>
        <trans-unit id="9525342b25aab72af9c3e3b8349833ee1bd01d01" translate="yes" xml:space="preserve">
          <source>in seconds for the whole loop (not divided by the number of rounds).</source>
          <target state="translated">ループ全体を秒単位で表示しています(ラウンド数で割っていません)。</target>
        </trans-unit>
        <trans-unit id="5398e13cc722e770533448244b54c1322d8a48f4" translate="yes" xml:space="preserve">
          <source>in short-lived storage, the corresponding string may be reallocated like this:</source>
          <target state="translated">が短命のストレージにある場合、対応する文字列はこのように再割り当てされることがあります。</target>
        </trans-unit>
        <trans-unit id="7dbbaee181016f9498ac089b73ee206e7f53bdec" translate="yes" xml:space="preserve">
          <source>in that directory to change some of their names, and then build perl (see &lt;a href=&quot;http://search.cpan.org/perldoc/INSTALL&quot;&gt;INSTALL&lt;/a&gt;).</source>
          <target state="translated">そのディレクトリでいくつかの名前を変更してから、perlをビルドします（&lt;a href=&quot;http://search.cpan.org/perldoc/INSTALL&quot;&gt;INSTALLを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="d0ab38a40cb6e84ac22ffec0691592cc254427ed" translate="yes" xml:space="preserve">
          <source>in that place.</source>
          <target state="translated">その場所で</target>
        </trans-unit>
        <trans-unit id="adf01e080984ab8015dac481073f4974eb5c4792" translate="yes" xml:space="preserve">
          <source>in the &quot;pp_ghostent&quot; function, you may ignore it safely. The warning is caused by the reentrant variant of gethostbyaddr() having a slightly different prototype than its non-reentrant variant, but the difference is not really significant here.</source>
          <target state="translated">が &quot;pp_ghostent&quot; 関数の中にある場合は、安全に無視しても構いません。この警告は、gethostbyaddr()のリエントラント variant がリエントラントではない variant とは少し異なるプロトタイプを持っていることに起因していますが、 ここではその違いは実際には重要ではありません。</target>
        </trans-unit>
        <trans-unit id="3ce1efb1fffb547969574fca0b50082e2502b735" translate="yes" xml:space="preserve">
          <source>in the C section of &lt;code&gt;Foo.xs&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Foo.xs&lt;/code&gt; のCセクション</target>
        </trans-unit>
        <trans-unit id="e245e9101df7b345e192328339e708ecb1a4f9ca" translate="yes" xml:space="preserve">
          <source>in the Perl build directory (to make the DLL smaller replace perl5.def with the definition file for the older version of Perl if present).</source>
          <target state="translated">(DLLを小さくするためには、Perl5.defを古いバージョンのPerlの定義ファイルに置き換えてください)。</target>
        </trans-unit>
        <trans-unit id="79a724b2d4d4dbc02ef9e01df0b923e7e9cf2542" translate="yes" xml:space="preserve">
          <source>in the Perl core implement the &quot;unix&quot;, &quot;perlio&quot;, &quot;stdio&quot;, &quot;crlf&quot;, &quot;utf8&quot;, &quot;byte&quot;, &quot;raw&quot;, &quot;pending&quot; layers, and also the &quot;mmap&quot; and &quot;win32&quot; layers if applicable. (The &quot;win32&quot; is currently unfinished and unused, to see what is used instead in Win32, see &lt;a href=&quot;perlio#Querying-the-layers-of-filehandles&quot;&gt;Querying the layers of filehandles in PerlIO&lt;/a&gt; .)</source>
          <target state="translated">Perlコアでは、「unix」、「perlio」、「stdio」、「crlf」、「utf8」、「byte」、「raw」、「pending」レイヤー、さらに「mmap」レイヤーと「win32」レイヤーを実装します該当する場合。（「win32」は現在未完成で未使用です。Win32で何が使用されているかを確認するには&lt;a href=&quot;perlio#Querying-the-layers-of-filehandles&quot;&gt;、PerlIOのファイルハンドルのレイヤーのクエリを&lt;/a&gt;参照してください。）</target>
        </trans-unit>
        <trans-unit id="b835c4c141af9564a1f737e97773d0a6babdfb63" translate="yes" xml:space="preserve">
          <source>in the Perl distribution (installed as &lt;a href=&quot;perlvos&quot;&gt;perlvos&lt;/a&gt;). Perl on VOS can accept either VOS- or Unix-style file specifications as in either of the following:</source>
          <target state="translated">Perlディストリビューション（&lt;a href=&quot;perlvos&quot;&gt;perlvos&lt;/a&gt;としてインストール）。VOS上のPerlは、次のいずれかのように、VOSまたはUnixスタイルのファイル仕様を受け入れることができます。</target>
        </trans-unit>
        <trans-unit id="256ee3e8048eaf6926511c741f194fbc343bf311" translate="yes" xml:space="preserve">
          <source>in the Perl distribution.</source>
          <target state="translated">Perl ディストリビューションでは</target>
        </trans-unit>
        <trans-unit id="e8d1539c6f29e8fba4a478be5d7bb4161172dac9" translate="yes" xml:space="preserve">
          <source>in the Perl library. It initially switches to the &lt;code&gt;DB&lt;/code&gt; package so that the debugger doesn't interfere with variables in the program you are trying to debug. At various points, however, it temporarily switches back to the &lt;code&gt;main&lt;/code&gt; package to evaluate various expressions in the context of the &lt;code&gt;main&lt;/code&gt; package (or wherever you came from). See &lt;a href=&quot;perldebug&quot;&gt;perldebug&lt;/a&gt;.</source>
          <target state="translated">Perlライブラリ内。デバッガーがデバッグしようとしているプログラムの変数に干渉しないように、最初は &lt;code&gt;DB&lt;/code&gt; パッケージに切り替えます。さまざまな点で、しかし、それは一時的にバックに切り替え &lt;code&gt;main&lt;/code&gt; の文脈で様々な表情を評価するために、パッケージ &lt;code&gt;main&lt;/code&gt; パッケージ（またはどこから来ました）。&lt;a href=&quot;perldebug&quot;&gt;perldebugを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="505ac4246d6e1400e9b19493c2ca0ca061e8584e" translate="yes" xml:space="preserve">
          <source>in the Perl source distribution.</source>
          <target state="translated">Perl のソース・ディストリビューションにある</target>
        </trans-unit>
        <trans-unit id="ffef3fbac5cb9a2586d41424338313a7ff2d4865" translate="yes" xml:space="preserve">
          <source>in the Perl source tree, changing the controlling lists contained in the program &lt;code&gt;$Config{privlib}&lt;/code&gt; /</source>
          <target state="translated">Perlソースツリーで、プログラム &lt;code&gt;$Config{privlib}&lt;/code&gt; /に含まれる制御リストを変更する</target>
        </trans-unit>
        <trans-unit id="2e5ad7ee392d0dfb405254e551c9c2ce6a6a6d93" translate="yes" xml:space="preserve">
          <source>in the Perl source tree. Follow the instructions in</source>
          <target state="translated">Perl のソースツリーにあります。の指示に従ってください。</target>
        </trans-unit>
        <trans-unit id="ab7250c2a49610be446173612b3d667a59f1bf54" translate="yes" xml:space="preserve">
          <source>in the Tk::Pod dist, by Nick Ing-Simmons, Slaven Rezic, et al.</source>
          <target state="translated">Tk::Pod distでは、Nick Ing-Simmons,Slaven Rezic,et al.</target>
        </trans-unit>
        <trans-unit id="7c494f88dde4f0057bd0a40f592ac68c05db4819" translate="yes" xml:space="preserve">
          <source>in the Unicode 1.0 standard if one existed for this code point and is different from the current name</source>
          <target state="translated">が存在し、現在の名前とは異なる場合は、Unicode 1.0 標準の</target>
        </trans-unit>
        <trans-unit id="32f883d9320f284aff777ddef8f783c86435c7b5" translate="yes" xml:space="preserve">
          <source>in the XS section of &lt;code&gt;Foo.xs&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;Foo.xs&lt;/code&gt; のXSセクシ​​ョン。</target>
        </trans-unit>
        <trans-unit id="22363fd6069939112bcedf2b6c19ebc1a3a73c4d" translate="yes" xml:space="preserve">
          <source>in the appropriate scope.</source>
          <target state="translated">を適切な範囲で使用してください。</target>
        </trans-unit>
        <trans-unit id="2254e67a77ef0f3c0c8026a5871e6f2aa46d6436" translate="yes" xml:space="preserve">
          <source>in the appropriate scope. See &lt;a href=&quot;../warnings&quot;&gt;warnings&lt;/a&gt; for more info about lexical warnings.</source>
          <target state="translated">適切な範囲で。字句警告の詳細については、&lt;a href=&quot;../warnings&quot;&gt;警告&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="229b419dc953020b39e07dd788b49fb0d5bad221" translate="yes" xml:space="preserve">
          <source>in the buffer, this is neither the number that can be read, nor the amount of memory allocated to the buffer. Rather it is what the operating system and/or implementation happened to &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read()&lt;/a&gt;&lt;/code&gt; (or whatever) last time IO was requested.</source>
          <target state="translated">バッファでは、これは読み取ることができる数でも、バッファに割り当てられたメモリの量でもありません。むしろ、IOが最後に要求されたときに、オペレーティングシステムや実装が &lt;code&gt;&lt;a href=&quot;functions/read&quot;&gt;read()&lt;/a&gt;&lt;/code&gt; （または何でも）に起こったことです。</target>
        </trans-unit>
        <trans-unit id="1502072a1b4778cfc2a9c44e6ec04612af45283b" translate="yes" xml:space="preserve">
          <source>in the current (compiling or executing) pad. Use macro PAD_SV instead of calling this function directly.</source>
          <target state="translated">現在の(コンパイルまたは実行中の)パッドにある この関数を直接呼び出す代わりに、マクロ PAD_SV を使用します。</target>
        </trans-unit>
        <trans-unit id="2493748d8015fee9ebb9fc275fda1979c7a58865" translate="yes" xml:space="preserve">
          <source>in the current (compiling or executing) pad. Use the macro PAD_SETSV() rather than calling this function directly.</source>
          <target state="translated">この関数を直接呼び出すのではなく、マクロ PAD_SETSV()を使用してください。この関数を直接呼び出すのではなく、マクロ PAD_SETSV()を使用してください。</target>
        </trans-unit>
        <trans-unit id="ee619dbfa1c4d46d7659744dcd467d6f1be323b7" translate="yes" xml:space="preserve">
          <source>in the current directory, and if it exists it executes the script with the proper set of perl &lt;code&gt;-I&lt;/code&gt; options.</source>
          <target state="translated">現在のディレクトリにあり、存在する場合は、perl &lt;code&gt;-I&lt;/code&gt; オプションの適切なセットを使用してスクリプトを実行します。</target>
        </trans-unit>
        <trans-unit id="07c1ff4ac7ced43a87a4151c7f4d5044801c67d4" translate="yes" xml:space="preserve">
          <source>in the current directory. The output file, which can be specified, can be interpreted by using the &lt;code&gt;fprofpp&lt;/code&gt; command-line program.</source>
          <target state="translated">現在のディレクトリ。指定可能な出力ファイルは、 &lt;code&gt;fprofpp&lt;/code&gt; コマンドラインプログラムを使用して解釈できます。</target>
        </trans-unit>
        <trans-unit id="b0953eccfec3263617669ec77a5fb2f70f37dc73" translate="yes" xml:space="preserve">
          <source>in the current/native character set&quot;. It always means only &quot;the character represented by codepoint</source>
          <target state="translated">現在の/ネイティブの文字セットの中で &quot;という意味です。これは常に「コードポイント</target>
        </trans-unit>
        <trans-unit id="8227fec770e49bd2c0d0b4c53ada7063015dc2c9" translate="yes" xml:space="preserve">
          <source>in the currently-compiling pad. If the variable is typed, the stash of the class to which it is typed is returned. If not, &lt;code&gt;NULL&lt;/code&gt; is returned.</source>
          <target state="translated">現在コンパイル中のパッド。変数が型指定されている場合は、変数が型指定されているクラスのスタッシュが返されます。そうでない場合は、 &lt;code&gt;NULL&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="7e171cc317a137c6c02e48f08b1f1f1ea44e4ebb" translate="yes" xml:space="preserve">
          <source>in the following triple quoted manner:</source>
          <target state="translated">を以下のように三重引用しています。</target>
        </trans-unit>
        <trans-unit id="6ed71887ac6b4faf50c7cd72791443e3e700d4f8" translate="yes" xml:space="preserve">
          <source>in the hash reference followed by a</source>
          <target state="translated">の後にハッシュ参照の</target>
        </trans-unit>
        <trans-unit id="7df66c3cb622fe6cb30fdafc504705f31dffae11" translate="yes" xml:space="preserve">
          <source>in the install tree (both top one and</source>
          <target state="translated">をインストールツリーに追加します (トップ1と</target>
        </trans-unit>
        <trans-unit id="20a34caf059ae2575312cb350067da2bcc383e15" translate="yes" xml:space="preserve">
          <source>in the main source directory of the Perl distribution.</source>
          <target state="translated">Perl ディストリビューションのメインソースディレクトリにあります。</target>
        </trans-unit>
        <trans-unit id="7d7a0a385bf65f5bef74709b0766c9773bb5cf89" translate="yes" xml:space="preserve">
          <source>in the object body but some other place.</source>
          <target state="translated">はオブジェクト本体ではなく、別の場所で使用します。</target>
        </trans-unit>
        <trans-unit id="44b135967f42537eedcbef715e817df8fc08f6e5" translate="yes" xml:space="preserve">
          <source>in the output, where</source>
          <target state="translated">を出力します。</target>
        </trans-unit>
        <trans-unit id="87147e4f2220a7566d62f6be0d22c2f36ed5fbcc" translate="yes" xml:space="preserve">
          <source>in the public domain&amp;mdash;it&amp;rsquo;s just &lt;b&gt;freely available&lt;/b&gt; and &lt;b&gt;freely redistributable&lt;/b&gt;.</source>
          <target state="translated">パブリックドメインでは、&lt;b&gt;自由に利用でき&lt;/b&gt;、&lt;b&gt;自由に再配布&lt;/b&gt;&lt;b&gt;できます&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="8b7b27b8c0f7c7fd6a7ce59a1b899a91a2e92db4" translate="yes" xml:space="preserve">
          <source>in the return list, but whether it's at the very end or not depends on the input languages. This function works by consulting an internal table that stipulates what common languages are &quot;close&quot; to each other.</source>
          <target state="translated">が戻り値リストの中にありますが、それが最後にあるかどうかは入力言語によって異なります。この関数は、どの共通言語がお互いに「近い」かを規定した内部テーブルを参照することで動作します。</target>
        </trans-unit>
        <trans-unit id="e3843fc61bc70a11b2c17bbe06ec14a749239db1" translate="yes" xml:space="preserve">
          <source>in the root of the QOpenSys file system. On the AS/400 calls to &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; or backticks must use CL syntax.</source>
          <target state="translated">QOpenSysファイルシステムのルート。AS / 400では、 &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; またはバックティックへの呼び出しはCL構文を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="43eebceedbedbdb4c43c4dc7388a0b5073677332" translate="yes" xml:space="preserve">
          <source>in the sense that it is called automatically on every key that is used with the hash. No explicit call is necessary.</source>
          <target state="translated">は、ハッシュと一緒に使用されるすべてのキーに対して自動的に呼び出されるという意味では 明示的な呼び出しは必要ありません。</target>
        </trans-unit>
        <trans-unit id="f120b294f367d270d8635f937edb2fd44ff279fe" translate="yes" xml:space="preserve">
          <source>in the source filters distribution.</source>
          <target state="translated">ソースフィルタの分布の中で</target>
        </trans-unit>
        <trans-unit id="038fcb55a5878f970f8fb9015d4ba0b10ab45a7b" translate="yes" xml:space="preserve">
          <source>in the string the regexp should try to match. To do this, we would use the</source>
          <target state="translated">を正規表現がマッチさせようとする文字列の中に入れます。これを行うには</target>
        </trans-unit>
        <trans-unit id="cba1568da8ae853a5e1c94c37168a93797cc1383" translate="yes" xml:space="preserve">
          <source>in the tied scalar referenced by</source>
          <target state="translated">で参照されるタイドスカラーの</target>
        </trans-unit>
        <trans-unit id="86aa66ede396c9ef3859252c658d0b4609a308f0" translate="yes" xml:space="preserve">
          <source>in the world as &lt;code&gt;\w&lt;/code&gt; . For example, your locale might not think that &lt;code&gt;LATIN SMALL
LETTER ETH&lt;/code&gt; is a letter (unless you happen to speak Icelandic), but Unicode does. Similarly, all the characters that are decimal digits somewhere in the world will match &lt;code&gt;\d&lt;/code&gt; ; this is hundreds, not 10, possible matches. And some of those digits look like some of the 10 ASCII digits, but mean a different number, so a human could easily think a number is a different quantity than it really is. For example, &lt;code&gt;BENGALI DIGIT FOUR&lt;/code&gt; (U+09EA) looks very much like an &lt;code&gt;ASCII DIGIT EIGHT&lt;/code&gt; (U+0038). And, &lt;code&gt;\d+&lt;/code&gt; , may match strings of digits that are a mixture from different writing systems, creating a security issue. &lt;a href=&quot;unicode/ucd#num()&quot;&gt;num() in Unicode::UCD&lt;/a&gt; can be used to sort this out. Or the &lt;code&gt;/a&lt;/code&gt; modifier can be used to force &lt;code&gt;\d&lt;/code&gt; to match just the ASCII 0 through 9.</source>
          <target state="translated">世界では &lt;code&gt;\w&lt;/code&gt; として。たとえば、ロケールによっては、 &lt;code&gt;LATIN SMALL LETTER ETH&lt;/code&gt; 語の小文字のETHが文字であるとは思わない場合があります（アイスランド語を話せない限り）が、Unicodeではそうです。同様に、世界のどこかで10進数であるすべての文字は、 &lt;code&gt;\d&lt;/code&gt; と一致します。これは、10ではなく数百の一致の可能性があります。そして、それらの数字の一部は10 ASCII数字の一部のように見えますが、異なる数字を意味するため、人間は数字が実際の数字とは異なる数量であると簡単に考えることができます。たとえば、 &lt;code&gt;BENGALI DIGIT FOUR&lt;/code&gt; （U + 09EA）は、 &lt;code&gt;ASCII DIGIT EIGHT&lt;/code&gt; （U + 0038）によく似ています。また、 &lt;code&gt;\d+&lt;/code&gt; 、異なる書記体系の混合である数字の文字列と一致する場合があり、セキュリティの問題を引き起こします。&lt;a href=&quot;unicode/ucd#num()&quot;&gt;Unicode :: UCDのnum（）を&lt;/a&gt;使用してこれを整理できます。または、 &lt;code&gt;/a&lt;/code&gt; 修飾子を使用して、 &lt;code&gt;\d&lt;/code&gt; をASCII 0から9だけに一致させることができます。</target>
        </trans-unit>
        <trans-unit id="a1e98f5f5d463ee6e6c42985addac1d60cfd3e89" translate="yes" xml:space="preserve">
          <source>in their names help convert Perl scalars to C types. They're described in &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt; and &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt;.</source>
          <target state="translated">それらの名前には、PerlスカラーをCタイプに変換するのに役立ちます。それらは&lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt;と&lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt;で記述されています。</target>
        </trans-unit>
        <trans-unit id="c4603997044a523093abfecba8192dac5c2840a0" translate="yes" xml:space="preserve">
          <source>in this case), the</source>
          <target state="translated">この場合)では</target>
        </trans-unit>
        <trans-unit id="3e92f78adef3ebd63ca82f39833207c03367af05" translate="yes" xml:space="preserve">
          <source>in this directory, and go ahead with reading docs, like this:</source>
          <target state="translated">このディレクトリの中で、こんな感じでドキュメントを読み進めていきます。</target>
        </trans-unit>
        <trans-unit id="083fcf8cc75d6b4f0af52f5218ecd8aacca44229" translate="yes" xml:space="preserve">
          <source>in this directory, and go ahead with reading docs.</source>
          <target state="translated">このディレクトリの中で、ドキュメントを読み進めてください。</target>
        </trans-unit>
        <trans-unit id="355a514e5a88a6c2e79a8c8dc932e018280fe495" translate="yes" xml:space="preserve">
          <source>in this sense and create a liability to delete the entry when the reference goes out of scope. If you happen to create an entry with an identical key from a string or integer, that will be collected instead. Thus, mixed use of references and plain scalars as field hash keys is not entirely supported.</source>
          <target state="translated">この意味で、参照が範囲外になったときにエントリを削除するための負債を作成します。たまたま文字列や整数から同一のキーを持つエントリを作成した場合、それが代わりに収集されます。このように、フィールドのハッシュキーとしての参照とプレーンスカラの混在使用は完全にサポートされているわけではありません。</target>
        </trans-unit>
        <trans-unit id="a579e8b94ccff43c4b8e2532445fd9ed1402a269" translate="yes" xml:space="preserve">
          <source>in those languages. Each code has at least four hexdigits. Note that this folding does not maintain canonical equivalence without additional processing.</source>
          <target state="translated">これらの言語では 各コードは少なくとも4つの16進数を持っています。この折り畳みは、追加の処理を行わなければ正準等価性を維持しないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="14c61eead0f840ab6c53245d6f222adb64e9e895" translate="yes" xml:space="preserve">
          <source>in which case the appropriate cartesian and exponential components will be parsed from the string and used to create new complex numbers. The imaginary component and the theta, respectively, will default to zero.</source>
          <target state="translated">この場合,適切な直交成分と指数成分が文字列から解析され,新しい複素数を作成するために使用されます.虚数成分とシータはそれぞれデフォルトでゼロになります。</target>
        </trans-unit>
        <trans-unit id="6d8c3130cb37882d8ebae2863371a65643f685db" translate="yes" xml:space="preserve">
          <source>in which case you might as well just use the more customary &lt;code&gt;&quot;||&quot;&lt;/code&gt; operator:</source>
          <target state="translated">その場合、より一般的な &lt;code&gt;&quot;||&quot;&lt;/code&gt; を使用することもできます。オペレーター：</target>
        </trans-unit>
        <trans-unit id="b75142165e1f5759c920ef1203a0ab90078f14ee" translate="yes" xml:space="preserve">
          <source>in which the here document</source>
          <target state="translated">ここでは</target>
        </trans-unit>
        <trans-unit id="87296de66e5117573598311dd71bdd504f65bd11" translate="yes" xml:space="preserve">
          <source>in your LIBPATH, so</source>
          <target state="translated">のように、あなたのLIBPATHの中で</target>
        </trans-unit>
        <trans-unit id="06b97fab4223fbecd3e2d20fd42a7f6613dbee7e" translate="yes" xml:space="preserve">
          <source>in your Perl library directory:</source>
          <target state="translated">Perl ライブラリのディレクトリにある</target>
        </trans-unit>
        <trans-unit id="c6b837bcb0c5ff950e5de27b401f45becb716fd6" translate="yes" xml:space="preserve">
          <source>in your XS code, the XSUBs following this line will not be declared &lt;code&gt;static&lt;/code&gt; . You can later disable this with</source>
          <target state="translated">XSコードでは、この行に続くXSUBは &lt;code&gt;static&lt;/code&gt; として宣言されません。後でこれを無効にすることができます</target>
        </trans-unit>
        <trans-unit id="2fb5d2a234f2bd4dca32c592b4b748398cd3c777" translate="yes" xml:space="preserve">
          <source>in your extension will translate to this when PERL_IMPLICIT_CONTEXT is in effect:</source>
          <target state="translated">の中でPERL_IMPLICIT_CONTEXTが有効になっている場合は、このように変換されます。</target>
        </trans-unit>
        <trans-unit id="8e3f3dedd593db014e3fea21bddfc3ed5a2714b2" translate="yes" xml:space="preserve">
          <source>in your handler could in theory trigger a memory fault and subsequent core dump - see &lt;a href=&quot;#Deferred-Signals-(Safe-Signals)&quot;&gt;Deferred Signals (Safe Signals)&lt;/a&gt; below.</source>
          <target state="translated">ハンドラー内では、理論的にはメモリ障害とそれに続くコアダンプがトリガーされる可能性があります。以下の&lt;a href=&quot;#Deferred-Signals-(Safe-Signals)&quot;&gt;遅延信号（安全な信号）を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="07358819231ad3a89080db5016bc9903986698b8" translate="yes" xml:space="preserve">
          <source>in your package</source>
          <target state="translated">お手元のパッケージに</target>
        </trans-unit>
        <trans-unit id="b5fc806f392b339b7135bdd34d27984a7724362a" translate="yes" xml:space="preserve">
          <source>in your path, then rename</source>
          <target state="translated">をパスに追加してから</target>
        </trans-unit>
        <trans-unit id="f1eabe7ec4401811c7a94080e047c2e9d726fa18" translate="yes" xml:space="preserve">
          <source>in your subclass to automatically inherit the overloading from the parent. If you like, you can change part of the overloading, look at Math::String for an example.</source>
          <target state="translated">を使用して、親からオーバーロードを自動的に継承するようにしてください。オーバーロードの一部を変更したい場合は、Math::String を参照してください。</target>
        </trans-unit>
        <trans-unit id="1c76bb2e45eafdfa85622ad4323e244adec69144" translate="yes" xml:space="preserve">
          <source>in-place</source>
          <target state="translated">in-place</target>
        </trans-unit>
        <trans-unit id="8202e3cba656edf67be27042135efeb0157900c7" translate="yes" xml:space="preserve">
          <source>in-place operation is a little bit broken with short filenames</source>
          <target state="translated">インプレース操作が短いファイル名で少し崩れる</target>
        </trans-unit>
        <trans-unit id="2446e40a8cce0ebfedf9781f1c0a5ce273150325" translate="yes" xml:space="preserve">
          <source>inFile.txt</source>
          <target state="translated">inFile.txt</target>
        </trans-unit>
        <trans-unit id="cc2aa6651a182aad4bad391ea8ada31f6f6a4789" translate="yes" xml:space="preserve">
          <source>inc_version_list.U</source>
          <target state="translated">inc_version_list.U</target>
        </trans-unit>
        <trans-unit id="2a29e5ecd43f80c04c160a77aa6dbbe25f2bac2c" translate="yes" xml:space="preserve">
          <source>include &lt;code&gt;-b&lt;/code&gt; which will summarise the basic block, branch, and function call coverage, and &lt;code&gt;-c&lt;/code&gt; which instead of relative frequencies will use the actual counts. For more information on the use of</source>
          <target state="translated">基本的なブロック、分岐、および関数呼び出しのカバレッジを要約する &lt;code&gt;-b&lt;/code&gt; と、相対頻度の代わりに実際のカウントを使用する &lt;code&gt;-c&lt;/code&gt; を含めます。使用の詳細については</target>
        </trans-unit>
        <trans-unit id="12de9ad02f46bc10069e06dc8f836e9c5e41c836" translate="yes" xml:space="preserve">
          <source>include CV_NAME_NOTQUAL, then the package name will not be included. If the first argument is neither a CV nor a GV, this flag is ignored (subject to change).</source>
          <target state="translated">インクルード CV_NAME_NOTQUAL の場合,パッケージ名はインクルードされません.第1引数がCVでもGVでもない場合,このフラグは無視されます(変更される可能性があります).</target>
        </trans-unit>
        <trans-unit id="6cc03ddd8eeba5b2763002bdb09f34f01fba0c27" translate="yes" xml:space="preserve">
          <source>include file and an appropriate ndbm library exist. Consult the different i_*ndbm variables to find out the actual include location. Sometimes, a system has the header file but not the library. This variable will only be set if the system has both.</source>
          <target state="translated">インクルードファイルと適切な ndbm ライブラリが存在します。実際のインクルード先を知るには、異なる i_*ndbm 変数を参照してください。システムがヘッダファイルを持っていてもライブラリを持っていないことがあります。この変数は、システムが両方を持っている場合にのみ設定されます。</target>
        </trans-unit>
        <trans-unit id="8e6d4cd82023bc6e3668b616672f96913358dd40" translate="yes" xml:space="preserve">
          <source>include file uses real &lt;code&gt;ANSI&lt;/code&gt; C prototypes instead of K&amp;amp;R style function declarations. K&amp;amp;R style declarations are unsupported in C++, so the include file requires special handling when using a C++ compiler and this variable is undefined. Consult the different d_*ndbm_h_uses_prototypes variables to get the same information for alternative</source>
          <target state="translated">インクルードファイルは、K＆Rスタイルの関数宣言ではなく、実際の &lt;code&gt;ANSI&lt;/code&gt; Cプロトタイプを使用します。K＆Rスタイルの宣言はC ++ではサポートされていないため、C ++コンパイラを使用する場合、インクルードファイルには特別な処理が必要であり、この変数は未定義です。別のd_ * ndbm_h_uses_prototypes変数を調べて、代替の同じ情報を取得します</target>
        </trans-unit>
        <trans-unit id="dc68b5fb90c5d6096964c98041507eabd32bcfa3" translate="yes" xml:space="preserve">
          <source>include files.</source>
          <target state="translated">インクルードファイルを使用しています。</target>
        </trans-unit>
        <trans-unit id="01c7ed68f55970624482e9b4f91cf2223db29947" translate="yes" xml:space="preserve">
          <source>includes</source>
          <target state="translated">includes</target>
        </trans-unit>
        <trans-unit id="844b6d1b068ec03a9e6d20cf2dbaf30f682a4b4b" translate="yes" xml:space="preserve">
          <source>includes &lt;code&gt;LEX_KEEP_PREVIOUS&lt;/code&gt; , the current chunk will not be discarded. If the current chunk has not been entirely consumed, then it will not be discarded regardless of the flag.</source>
          <target state="translated">&lt;code&gt;LEX_KEEP_PREVIOUS&lt;/code&gt; が含まれている場合、現在のチャンクは破棄されません。現在のチャンクが完全に消費されていない場合、フラグに関係なく破棄されません。</target>
        </trans-unit>
        <trans-unit id="9b2a98397763ea819b1d1694799d65bb5cb575ea" translate="yes" xml:space="preserve">
          <source>includes &lt;code&gt;LEX_KEEP_PREVIOUS&lt;/code&gt; then the current chunk will not be discarded.</source>
          <target state="translated">&lt;code&gt;LEX_KEEP_PREVIOUS&lt;/code&gt; が含まれている場合、現在のチャンクは破棄されません。</target>
        </trans-unit>
        <trans-unit id="def57a823ca69e3ed3a6bd609b5a44ac67c44744" translate="yes" xml:space="preserve">
          <source>includes &lt;code&gt;PARSE_OPTIONAL&lt;/code&gt; then the expression is optional, otherwise it is mandatory. It is up to the caller to ensure that the dynamic parser state (&lt;a href=&quot;#PL_parser&quot;&gt;PL_parser&lt;/a&gt; et al) is correctly set to reflect the source of the code to be parsed and the lexical context for the expression.</source>
          <target state="translated">&lt;code&gt;PARSE_OPTIONAL&lt;/code&gt; が含まれている場合、式はオプションです。それ以外の場合は必須です。解析されるコードのソースと式の字句コンテキストを反映するように動的パーサー状態（&lt;a href=&quot;#PL_parser&quot;&gt;PL_parserなど&lt;/a&gt;）が正しく設定されていることを確認するのは、呼び出し元の責任です。</target>
        </trans-unit>
        <trans-unit id="52a302dba327bd5a9b2b2f2ceeb2d3cc8b998261" translate="yes" xml:space="preserve">
          <source>includes &lt;code&gt;PARSE_OPTIONAL&lt;/code&gt; then the label is optional, otherwise it is mandatory.</source>
          <target state="translated">&lt;code&gt;PARSE_OPTIONAL&lt;/code&gt; が含まれている場合、ラベルはオプションです。それ以外の場合は必須です。</target>
        </trans-unit>
        <trans-unit id="569394f50b70740460691d4d6935c0e2be944bd6" translate="yes" xml:space="preserve">
          <source>includes the code points &lt;code&gt;\N{U+03}&lt;/code&gt; , &lt;code&gt;\N{U+04}&lt;/code&gt; , ..., &lt;code&gt;\N{U+20}&lt;/code&gt; .</source>
          <target state="translated">コードポイント &lt;code&gt;\N{U+03}&lt;/code&gt; 、 &lt;code&gt;\N{U+04}&lt;/code&gt; 、...、 &lt;code&gt;\N{U+20}&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="d358da965c8d39cbba2bd00e4ea6cee460546243" translate="yes" xml:space="preserve">
          <source>including</source>
          <target state="translated">including</target>
        </trans-unit>
        <trans-unit id="c1702cb589e08807c00b9ed3893c25fc0626325f" translate="yes" xml:space="preserve">
          <source>including any perl header files. (This will probably become the default at some point). That prevents &quot;perlio.h&quot; from attempting to #define stdio functions onto PerlIO functions.</source>
          <target state="translated">を使用することができます。(これは、おそらくある時点でデフォルトになるでしょう)。これにより、&quot;perlio.h &quot;がPerlIO関数に#stdio関数を定義しようとするのを防ぎます。</target>
        </trans-unit>
        <trans-unit id="c33205e21f435515ef9f17d60ae3ffa6d3b5d747" translate="yes" xml:space="preserve">
          <source>including the case</source>
          <target state="translated">事案を含めて</target>
        </trans-unit>
        <trans-unit id="1f533c4957e6f8f2e52611bdcdc2d33420d94af4" translate="yes" xml:space="preserve">
          <source>including the surrounding delimiters</source>
          <target state="translated">周辺の区切りを含めて</target>
        </trans-unit>
        <trans-unit id="87b6280508ba59147b765fcfef334db8e6a0fe83" translate="yes" xml:space="preserve">
          <source>incoming-mail filter will cause the mailer to return the item undelivered, but that's not true everywhere.</source>
          <target state="translated">着信メールフィルタをかけると、メーラーはアイテムを未着のまま返してきますが、これはどこでも当てはまるわけではありません。</target>
        </trans-unit>
        <trans-unit id="54bcc3a7b157f9ff96c1b3bbc244b8ae1a2fcaaf" translate="yes" xml:space="preserve">
          <source>incorporate all these functions in one package. Besides automatically calling the &lt;code&gt;id()&lt;/code&gt; function on every object used as a key, the object is registered with the field hash on first use. Classes based on field hashes are fully garbage-collected and thread safe without further measures.</source>
          <target state="translated">これらすべての機能を1つのパッケージに組み込みます。キーとして使用されるすべてのオブジェクトで &lt;code&gt;id()&lt;/code&gt; 関数を自動的に呼び出すことに加えて、オブジェクトは初回使用時にフィールドハッシュに登録されます。フィールドハッシュに基づくクラスは完全にガベージコレクションされ、スレッドセーフです。</target>
        </trans-unit>
        <trans-unit id="aaec800750ffef77f853ccc7c8c249613e4b2557" translate="yes" xml:space="preserve">
          <source>increases the load time for the application (as well as complexity of the compilation). Since interpreter is in a DLL, the C RTL is basically forced to reside in a DLL as well (otherwise extensions would not be able to use CRT). There are some advantages if you use different flavors of perl, such as running</source>
          <target state="translated">はアプリケーションの負荷時間を増加させます (コンパイルの複雑さと同様に)。インタプリタはDLL内にあるので、基本的にはCのRTLもDLL内に常駐させざるを得ない(そうでなければ拡張機能はCRTを使えない)。異なるフレーバーの perl を使用している場合、いくつかの利点があります。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
