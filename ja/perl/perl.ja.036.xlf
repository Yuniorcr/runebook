<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="23f7b6c9ae09efe5c4f1d8f337c10d106ef5f078" translate="yes" xml:space="preserve">
          <source>Returns a string containing all warnings and errors reported during the last time &lt;code&gt;check&lt;/code&gt; was called.</source>
          <target state="translated">最後に &lt;code&gt;check&lt;/code&gt; が呼び出されたときに報告されたすべての警告とエラーを含む文字列を返します。</target>
        </trans-unit>
        <trans-unit id="4bb3ec99a85a8f7b5cec264a7a5e334619af049f" translate="yes" xml:space="preserve">
          <source>Returns a string describing the version.</source>
          <target state="translated">バージョンを表す文字列を返します。</target>
        </trans-unit>
        <trans-unit id="560ad6773aaeabd86bb34a6abf527b85bf339295" translate="yes" xml:space="preserve">
          <source>Returns a string describing what the SV is a reference to.</source>
          <target state="translated">SV が何を参照しているかを表す文字列を返します。</target>
        </trans-unit>
        <trans-unit id="0bcecd7cffd03491f568a8084530dad173866617" translate="yes" xml:space="preserve">
          <source>Returns a string formatted by the usual &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; conventions of the C library function &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt;. See below for more details and see</source>
          <target state="translated">Cライブラリ関数 &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; の通常の &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; 規則でフォーマットされた文字列を返します。詳細については以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="b6f450b91a33f3ae3689a45cc3e6818d55571ccf" translate="yes" xml:space="preserve">
          <source>Returns a string formatted by the usual &lt;code&gt;&lt;a href=&quot;printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; conventions of the C library function &lt;code&gt;&lt;a href=&quot;sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt;. See below for more details and see</source>
          <target state="translated">Cライブラリ関数 &lt;code&gt;&lt;a href=&quot;sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; の通常の &lt;code&gt;&lt;a href=&quot;printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; 規則でフォーマットされた文字列を返します。詳細については以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="202b7b47ba160cb50028572b7ad28637d3a8c311" translate="yes" xml:space="preserve">
          <source>Returns a string in the form &quot;0x...&quot; representing the value of the internal hash function used by perl on string STR.</source>
          <target state="translated">文字列STRに対してperlが使用する内部ハッシュ関数の値を表す &quot;0x...&quot;という形式の文字列を返します。</target>
        </trans-unit>
        <trans-unit id="87194aea62990f0547030785b90b3212e124a93f" translate="yes" xml:space="preserve">
          <source>Returns a string of the form &quot;AUTHORID/TARBALL&quot;, where AUTHORID is the author's PAUSE ID and TARBALL is the distribution filename.</source>
          <target state="translated">AUTHORID は作者の PAUSE ID、TARBALL はディストリビューションのファイル名です。</target>
        </trans-unit>
        <trans-unit id="cc94fc30ba3cc2fa0b9159254cd41d822eea8bb0" translate="yes" xml:space="preserve">
          <source>Returns a string representation of an opset. Can be handy for debugging.</source>
          <target state="translated">opsetの文字列表現を返します。デバッグに便利です。</target>
        </trans-unit>
        <trans-unit id="1bec116d350d2b93509b7d9dc1bcced2de27bdd3" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the current directory.</source>
          <target state="translated">カレントディレクトリの文字列表現を返します。</target>
        </trans-unit>
        <trans-unit id="4a8af8e750f17ce4e2d96c8eaead548542b60e80" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the current directory. &quot;.&quot; on UNIX.</source>
          <target state="translated">カレントディレクトリの文字列表現を返します。UNIXでは&quot;.&quot;。</target>
        </trans-unit>
        <trans-unit id="77ef3a54abf0fabd7e61dc2cecc7ad7f2abc6542" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the current directory: '[]' or '.'</source>
          <target state="translated">カレントディレクトリの文字列表現を返します。</target>
        </trans-unit>
        <trans-unit id="5277680674388d3bbc7e326522c1cd4452d83dec" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the first existing directory from the following list:</source>
          <target state="translated">以下のリストから最初に存在するディレクトリを文字列で表現したものを返します。</target>
        </trans-unit>
        <trans-unit id="c9b336aabb976a50f79ee5dec6a32ed8fad8410c" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the first writable directory from a list of possible temporary directories. Returns the current directory if no writable temporary directories are found. The list of directories checked depends on the platform; e.g. File::Spec::Unix checks &lt;code&gt;$ENV{TMPDIR}&lt;/code&gt; (unless taint is on) and</source>
          <target state="translated">可能な一時ディレクトリのリストから、最初の書き込み可能なディレクトリの文字列表現を返します。書き込み可能な一時ディレクトリが見つからない場合、現在のディレクトリを返します。チェックされるディレクトリのリストはプラットフォームによって異なります。例File :: Spec :: Unixは &lt;code&gt;$ENV{TMPDIR}&lt;/code&gt; チェックします（汚染がオンでない限り）。</target>
        </trans-unit>
        <trans-unit id="e32b0e0de234365f5abe153e4d7566e0b5a04ddf" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the first writable directory from the following list or '' if none are writable:</source>
          <target state="translated">以下のリストから最初の書き込み可能なディレクトリを文字列で返します。</target>
        </trans-unit>
        <trans-unit id="a0d3d842c919e5a866092e0bb6deec566293781b" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the first writable directory from the following list or the current directory if none from the list are writable:</source>
          <target state="translated">次のリストから最初に書き込み可能なディレクトリを文字列で返します。</target>
        </trans-unit>
        <trans-unit id="eb5e90c022aa5537ad6eb0eff65c63bb424facef" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the null device.</source>
          <target state="translated">NULLデバイスの文字列表現を返します。</target>
        </trans-unit>
        <trans-unit id="33f1afa9f4dc60ddad5ffcb246aaf7b3a56833f3" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the null device. &quot;/dev/null&quot; on UNIX.</source>
          <target state="translated">ヌルデバイスの文字列表現を返します。UNIXでは&quot;/dev/null &quot;です。</target>
        </trans-unit>
        <trans-unit id="a2aaef582976802d1a3c444daa581310d3ea08bc" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the null device: '_NLA0:' or '/dev/null'</source>
          <target state="translated">NULL デバイスの文字列表現 '_NLA0:' または '/dev/null' を返します。</target>
        </trans-unit>
        <trans-unit id="005100788ced89709018dbe6806e675a340ecd90" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the parent directory.</source>
          <target state="translated">親ディレクトリの文字列表現を返します。</target>
        </trans-unit>
        <trans-unit id="05c5bf0bf7df385d9aec918eb3fbeb645de31d72" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the parent directory. &quot;..&quot; on UNIX.</source>
          <target state="translated">親ディレクトリの文字列表現を返します。UNIXでは&quot;...&quot;。</target>
        </trans-unit>
        <trans-unit id="ff31bc8d25cb56e6a34f4a31b112abed632e6889" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the parent directory: '[-]' or '..'</source>
          <target state="translated">親ディレクトリの文字列表現を返します。</target>
        </trans-unit>
        <trans-unit id="e638c79ff93a1833c5c089a4ded7d303efed4d93" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the root directory.</source>
          <target state="translated">ルートディレクトリの文字列表現を返します。</target>
        </trans-unit>
        <trans-unit id="71cf646201c54c8e89f9b5a5e934830f492097b1" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the root directory. &quot;/&quot; on UNIX.</source>
          <target state="translated">ルートディレクトリの文字列表現を返します。UNIXでは&quot;/&quot;です。</target>
        </trans-unit>
        <trans-unit id="cdc12f555b17b9044345b3ba73fb28e2292eddf7" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the root directory: 'SYS$DISK:[000000]' or '/'</source>
          <target state="translated">ルートディレクトリの文字列表現を返します:'SYS$DISK:[000000]または '/'</target>
        </trans-unit>
        <trans-unit id="44ee308f6fe49527fc16e579aa24022a99372f36" translate="yes" xml:space="preserve">
          <source>Returns a string representing the current directory. On Mac OS, this is &quot;:&quot;.</source>
          <target state="translated">カレントディレクトリを表す文字列を返します。Mac OS では &quot;:&quot; です。</target>
        </trans-unit>
        <trans-unit id="1a64c5e445305e29235836bd694f435ebe2a0684" translate="yes" xml:space="preserve">
          <source>Returns a string representing the null device. On Mac OS, this is &quot;Dev:Null&quot;.</source>
          <target state="translated">ヌルデバイスを表す文字列を返します。Mac OSでは「Dev:Null」となります。</target>
        </trans-unit>
        <trans-unit id="0d4b7d54d23fa0e585938662d91a48d86580ab9f" translate="yes" xml:space="preserve">
          <source>Returns a string representing the parent directory. On Mac OS, this is &quot;::&quot;.</source>
          <target state="translated">親ディレクトリを表す文字列を返します。Mac OS では &quot;:::&quot; です。</target>
        </trans-unit>
        <trans-unit id="2bff7ec48659fcec317a6b6e70b50492af0c8f85" translate="yes" xml:space="preserve">
          <source>Returns a string representing the root directory. Under MacPerl, returns the name of the startup volume, since that's the closest in concept, although other volumes aren't rooted there. The name has a trailing &quot;:&quot;, because that's the correct specification for a volume name on Mac OS.</source>
          <target state="translated">ルートディレクトリを表す文字列を返します。MacPerl では、スタートアップボリュームの名前を返します。名前の末尾には&quot;:&quot;が付いていますが、これはMac OS上ではこれが正しいボリューム名の仕様だからです。</target>
        </trans-unit>
        <trans-unit id="00e87eac1f6ad85a2ee1d885214ba3f53277c229" translate="yes" xml:space="preserve">
          <source>Returns a string suitable for feeding to the shell to return all tests in t/ but recursively.</source>
          <target state="translated">シェルに与えるのに適した文字列を返し、t/内のすべてのテストを再帰的に返します。</target>
        </trans-unit>
        <trans-unit id="092043d7a17cb71b26b87e7562f8a3995f950284" translate="yes" xml:space="preserve">
          <source>Returns a string suitable for feeding to the shell to return all tests in t/*.t.</source>
          <target state="translated">t/*.t内のすべてのテストを返すためにシェルに供給するのに適した文字列を返します。</target>
        </trans-unit>
        <trans-unit id="2e967e6e702a424e04f475bad8bee81c8f3ad6ad" translate="yes" xml:space="preserve">
          <source>Returns a string that formats the times in the TIMEDIFF object in the requested STYLE. TIMEDIFF is expected to be a Benchmark object similar to that returned by timediff().</source>
          <target state="translated">TIMEDIFFオブジェクト内の時間を要求されたSTYLEでフォーマットする文字列を返します。TIMEDIFFは、TIMEDIFF()によって返されたものと同様のBenchmarkオブジェクトであることが期待されます。</target>
        </trans-unit>
        <trans-unit id="e800e87b67cf4d6c01edd7f39567b25c80db69ed" translate="yes" xml:space="preserve">
          <source>Returns a textual summary of the major perl configuration values. See also &lt;code&gt;-V&lt;/code&gt; in &lt;a href=&quot;perlrun#Command-Switches&quot;&gt;Command Switches in perlrun&lt;/a&gt;.</source>
          <target state="translated">主要なperl構成値のテキストによる要約を返します。参照してください &lt;code&gt;-V&lt;/code&gt; で&lt;a href=&quot;perlrun#Command-Switches&quot;&gt;コマンドはperlrunにスイッチ&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e7abcb8c5e1de71f1807726c3777d9b9ac4bdd0e" translate="yes" xml:space="preserve">
          <source>Returns a true SV if &lt;code&gt;b&lt;/code&gt; is a true value, or a false SV if &lt;code&gt;b&lt;/code&gt; is 0.</source>
          <target state="translated">&lt;code&gt;b&lt;/code&gt; が真の値の場合は真のSVを返し、 &lt;code&gt;b&lt;/code&gt; が0の場合は偽のSVを返します。</target>
        </trans-unit>
        <trans-unit id="ea7fb5743497b30a6117618897c9900ddf57838e" translate="yes" xml:space="preserve">
          <source>Returns a true or false value indicating, respectively, that alphabetic case is not or is significant when comparing file specifications. Cygwin and Win32 accept an optional drive argument.</source>
          <target state="translated">ファイルの仕様を比較する際に、アルファベットの大文字小文字が重要ではないか、または重要ではないことをそれぞれ示す真または偽の値を返します。CygwinおよびWin32では、オプションのドライブ引数を受け付けます。</target>
        </trans-unit>
        <trans-unit id="92b487d1ec1629983e5ce689a6c3fafc42be7c41" translate="yes" xml:space="preserve">
          <source>Returns a true or false value indicating, respectively, that alphabetic is not or is significant when comparing file specifications.</source>
          <target state="translated">ファイルの仕様を比較する際に、アルファベットが重要ではないか、または重要であるかを、それぞれ真または偽の値を返します。</target>
        </trans-unit>
        <trans-unit id="8791a42bfa4b523a31b985722c6744f37061fdd2" translate="yes" xml:space="preserve">
          <source>Returns a true value (actually the handle itself) if it is present. Returns undef otherwise.</source>
          <target state="translated">存在する場合は真の値(実際にはハンドル自体)を返します。それ以外の場合は undef を返します。</target>
        </trans-unit>
        <trans-unit id="20719096c98ac0e20c43dc76fae3420cbccf672f" translate="yes" xml:space="preserve">
          <source>Returns a true value (actually the reason for skipping) if all tests were skipped.</source>
          <target state="translated">すべてのテストがスキップされた場合、真の値(実際にはスキップの理由)を返します。</target>
        </trans-unit>
        <trans-unit id="04d8db8e32e1e3c49b45953a18f7b66147b5a83b" translate="yes" xml:space="preserve">
          <source>Returns a true value if OBJ is one, and false value otherwise.</source>
          <target state="translated">OBJが1つの場合は真の値を返し、そうでない場合は偽の値を返します。</target>
        </trans-unit>
        <trans-unit id="8ec5b6381f66afb74a4518ac2e2c84eb526cad42" translate="yes" xml:space="preserve">
          <source>Returns a true value if OBJ is ten, and false value otherwise.</source>
          <target state="translated">OBJが10の場合は真の値を返し、そうでない場合は偽の値を返します。</target>
        </trans-unit>
        <trans-unit id="d5f61405c16fae034f5cc703d65aad9549ecde6e" translate="yes" xml:space="preserve">
          <source>Returns a true value if OBJ is two, and false value otherwise.</source>
          <target state="translated">OBJが2つの場合は真の値を返し、そうでない場合は偽の値を返します。</target>
        </trans-unit>
        <trans-unit id="80c27ca3c0799f492bab53b404c5a9484fdd10b9" translate="yes" xml:space="preserve">
          <source>Returns a true value if OBJ is zero, and false value otherwise.</source>
          <target state="translated">OBJが0の場合は真の値を返し、そうでない場合は偽の値を返します。</target>
        </trans-unit>
        <trans-unit id="ced1f839258a2135af524614fee25eec1fb32c29" translate="yes" xml:space="preserve">
          <source>Returns a true value if the given handle has experienced any errors since it was opened or since the last call to &lt;code&gt;clearerr&lt;/code&gt; , or if the handle is invalid. It only returns false for a valid handle with no outstanding errors.</source>
          <target state="translated">指定されたハンドルが開かれてから、または最後に &lt;code&gt;clearerr&lt;/code&gt; が呼び出されてからエラーが発生した場合、またはハンドルが無効な場合は、true値を返します。未解決のエラーのない有効なハンドルに対してのみfalseを返します。</target>
        </trans-unit>
        <trans-unit id="54ca7839e001f459a05bf2c8707fcbddda9f126b" translate="yes" xml:space="preserve">
          <source>Returns a unique identifier for &lt;code&gt;MSGNUM&lt;/code&gt; if given. If &lt;code&gt;MSGNUM&lt;/code&gt; is not given &lt;code&gt;uidl&lt;/code&gt; returns a reference to a hash where the keys are the message numbers and the values are the unique identifiers.</source>
          <target state="translated">指定されて &lt;code&gt;MSGNUM&lt;/code&gt; 場合、MSGNUMの一意の識別子を返します。場合 &lt;code&gt;MSGNUM&lt;/code&gt; は与えられていない &lt;code&gt;uidl&lt;/code&gt; 戻るにキーがメッセージ番号と値が一意識別子であるハッシュへの参照。</target>
        </trans-unit>
        <trans-unit id="5438a38240e1e5d392fba7bf5e299554e4f73a8c" translate="yes" xml:space="preserve">
          <source>Returns a valid temporary filename but does not guarantee that the file will not be opened by someone else.</source>
          <target state="translated">有効な一時ファイル名を返しますが、他の誰かがファイルを開かないことを保証するものではありません。</target>
        </trans-unit>
        <trans-unit id="b70f4bda16a1627b2b96c62bb159cf833ff73717" translate="yes" xml:space="preserve">
          <source>Returns a value of true if the given section and subsection heading titles match any of the currently selected section specifications in effect from prior calls to &lt;b&gt;select()&lt;/b&gt; and &lt;b&gt;add_selection()&lt;/b&gt; (or if there are no explicitly selected/deselected sections).</source>
          <target state="translated">指定されたセクションとサブセクションの見出しのタイトルが、&lt;b&gt;select（）&lt;/b&gt;および&lt;b&gt;add_selection（）&lt;/b&gt;への以前の呼び出しから現在選択されているセクション仕様のいずれかに一致する場合（または明示的に選択または選択解除されたセクションがない場合&lt;b&gt;）&lt;/b&gt;は、trueの値を返します。</target>
        </trans-unit>
        <trans-unit id="13c1b3be29349e8d12e061fe92c283d88a109f76" translate="yes" xml:space="preserve">
          <source>Returns actual bytes read, or -1 on an error.</source>
          <target state="translated">読み込んだ実際のバイト数、エラーの場合は -1 を返します。</target>
        </trans-unit>
        <trans-unit id="c5bebf2996eece42414681984794ddac354b2cac" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;IO::Uncompress::AnyInflate&lt;/code&gt; object on success and undef on failure. The variable &lt;code&gt;$AnyInflateError&lt;/code&gt; will contain an error message on failure.</source>
          <target state="translated">成功すると &lt;code&gt;IO::Uncompress::AnyInflate&lt;/code&gt; オブジェクトを返し、失敗するとundefを返します。変数 &lt;code&gt;$AnyInflateError&lt;/code&gt; には、失敗時のエラーメッセージが含まれます。</target>
        </trans-unit>
        <trans-unit id="a19b4f3d224c77b8b1cadfec1f4f42c3d8e98cb0" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;IO::Uncompress::AnyUncompress&lt;/code&gt; object on success and undef on failure. The variable &lt;code&gt;$AnyUncompressError&lt;/code&gt; will contain an error message on failure.</source>
          <target state="translated">成功すると &lt;code&gt;IO::Uncompress::AnyUncompress&lt;/code&gt; オブジェクトを返し、失敗するとundefを返します。変数 &lt;code&gt;$AnyUncompressError&lt;/code&gt; には、失敗時のエラーメッセージが含まれます。</target>
        </trans-unit>
        <trans-unit id="5a45155b042a961eb0e7ee9a823ec478e805af25" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;IO::Uncompress::Bunzip2&lt;/code&gt; object on success and undef on failure. The variable &lt;code&gt;$Bunzip2Error&lt;/code&gt; will contain an error message on failure.</source>
          <target state="translated">成功すると &lt;code&gt;IO::Uncompress::Bunzip2&lt;/code&gt; オブジェクトを返し、失敗するとundefを返します。変数 &lt;code&gt;$Bunzip2Error&lt;/code&gt; には、失敗した場合のエラーメッセージが含まれます。</target>
        </trans-unit>
        <trans-unit id="cb53d2a7e32eb184e834ea53668850307f4b3189" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;IO::Uncompress::Gunzip&lt;/code&gt; object on success and undef on failure. The variable &lt;code&gt;$GunzipError&lt;/code&gt; will contain an error message on failure.</source>
          <target state="translated">成功すると &lt;code&gt;IO::Uncompress::Gunzip&lt;/code&gt; オブジェクトを返し、失敗するとundefを返します。変数 &lt;code&gt;$GunzipError&lt;/code&gt; には、失敗した場合のエラーメッセージが含まれます。</target>
        </trans-unit>
        <trans-unit id="f60796904c77b8633be7386d5c88b1256b566349" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;IO::Uncompress::Inflate&lt;/code&gt; object on success and undef on failure. The variable &lt;code&gt;$InflateError&lt;/code&gt; will contain an error message on failure.</source>
          <target state="translated">成功すると &lt;code&gt;IO::Uncompress::Inflate&lt;/code&gt; オブジェクトを返し、失敗するとundefを返します。変数 &lt;code&gt;$InflateError&lt;/code&gt; には、失敗時のエラーメッセージが含まれます。</target>
        </trans-unit>
        <trans-unit id="2f2a104a44992f3fb1f0ed5f97b388dc95e082ce" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;IO::Uncompress::RawInflate&lt;/code&gt; object on success and undef on failure. The variable &lt;code&gt;$RawInflateError&lt;/code&gt; will contain an error message on failure.</source>
          <target state="translated">成功すると &lt;code&gt;IO::Uncompress::RawInflate&lt;/code&gt; オブジェクトを返し、失敗するとundefを返します。変数 &lt;code&gt;$RawInflateError&lt;/code&gt; には、失敗時のエラーメッセージが含まれます。</target>
        </trans-unit>
        <trans-unit id="0e95a721c52415064dadcbe635db82471a03534f" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;IO::Uncompress::Unzip&lt;/code&gt; object on success and undef on failure. The variable &lt;code&gt;$UnzipError&lt;/code&gt; will contain an error message on failure.</source>
          <target state="translated">成功すると &lt;code&gt;IO::Uncompress::Unzip&lt;/code&gt; オブジェクトを返し、失敗するとundefを返します。変数 &lt;code&gt;$UnzipError&lt;/code&gt; には、失敗した場合のエラーメッセージが含まれます。</target>
        </trans-unit>
        <trans-unit id="f3f1c9bb441902a5fdf35a5803a9f97377d4402e" translate="yes" xml:space="preserve">
          <source>Returns an SV containing the name of the CV, mainly for use in error reporting. The CV may actually be a GV instead, in which case the returned SV holds the GV's name. Anything other than a GV or CV is treated as a string already holding the sub name, but this could change in the future.</source>
          <target state="translated">CV の名前を含む SV を返します.CVは,実際にはGVである可能性がありますが,その場合は,返されるSVがGVの名前を保持します.GVやCV以外のものは,すでにそのサブの名前を保持している文字列として扱われますが,これは将来的に変更される可能性があります.</target>
        </trans-unit>
        <trans-unit id="c17e6ded81e77cc3c4ed51e5c6e6e24ad493fca6" translate="yes" xml:space="preserve">
          <source>Returns an array of [mnt_dir, mnt_fsname, mnt_type, mnt_opts].</source>
          <target state="translated">mnt_dir,mnt_fsname,mnt_type,mnt_opts]の配列を返します。</target>
        </trans-unit>
        <trans-unit id="7eda9f2373bf66e043e40f6b34f45328c22ad0f1" translate="yes" xml:space="preserve">
          <source>Returns an arrayref which is the linearized MRO of the given class. Uses whichever MRO is currently in effect for that class by default, or the given MRO (either &lt;code&gt;c3&lt;/code&gt; or &lt;code&gt;dfs&lt;/code&gt; if specified as &lt;code&gt;$type&lt;/code&gt; ).</source>
          <target state="translated">指定されたクラスの線形化されたMROであるarrayrefを返します。デフォルトでそのクラスに対して現在有効なMROを使用するか、指定されたMRO（ &lt;code&gt;$type&lt;/code&gt; として指定されている場合は &lt;code&gt;c3&lt;/code&gt; または &lt;code&gt;dfs&lt;/code&gt; のいずれか）を使用します。</target>
        </trans-unit>
        <trans-unit id="86d93bd99672ee0d9f28bac4810f2e0a9f858ce0" translate="yes" xml:space="preserve">
          <source>Returns an empty string per default. Dedicated to overrides from within Makefile.PL after all constants have been defined.</source>
          <target state="translated">デフォルトでは空の文字列を返します。すべての定数が定義された後の Makefile.PL 内からのオーバーライド専用。</target>
        </trans-unit>
        <trans-unit id="27565014fb4428ecce4834fb83146562b2298d8a" translate="yes" xml:space="preserve">
          <source>Returns an empty string per default. Used in Makefile.PLs to add some chunk of text to the Makefile after the object is initialized.</source>
          <target state="translated">デフォルトでは空の文字列を返します。オブジェクトが初期化された後にMakefileにテキストの塊を追加するためにMakefile.PLで使用します。</target>
        </trans-unit>
        <trans-unit id="773ece94435dc9a0d9fb8f6598bb9ba0974097c7" translate="yes" xml:space="preserve">
          <source>Returns an empty string. Can be used in Makefile.PLs to write some text to the Makefile at the end.</source>
          <target state="translated">空の文字列を返します。Makefile.PLで使用して、最後にMakefileにテキストを書き込むことができます。</target>
        </trans-unit>
        <trans-unit id="0ba0e2b37cdb54b95bc084239f7a13f38cd0d1a3" translate="yes" xml:space="preserve">
          <source>Returns an even-sized list of those pairs for which the &lt;code&gt;BLOCK&lt;/code&gt; returned true in list context, or the count of the &lt;b&gt;number of pairs&lt;/b&gt; in scalar context. (Note, therefore, in scalar context that it returns a number half the size of the count of items it would have returned in list context).</source>
          <target state="translated">リストコンテキストで &lt;code&gt;BLOCK&lt;/code&gt; がtrueを返したペアの偶数サイズのリスト、またはスカラーコンテキスト&lt;b&gt;でのペア&lt;/b&gt;の&lt;b&gt;数の&lt;/b&gt;カウントを返します。（したがって、スカラーコンテキストでは、リストコンテキストで返されるアイテムの数の半分のサイズの数を返すことに注意してください）。</target>
        </trans-unit>
        <trans-unit id="4a803084a92423f9bbdc2214f1af73fd1a3aa7f5" translate="yes" xml:space="preserve">
          <source>Returns an individual &lt;code&gt;App::Prove::State::Result::Test&lt;/code&gt; instance for the given test name (usually the filename). Will return a new &lt;code&gt;App::Prove::State::Result::Test&lt;/code&gt; instance if the name is not found.</source>
          <target state="translated">指定されたテスト名（通常はファイル名）の個々の &lt;code&gt;App::Prove::State::Result::Test&lt;/code&gt; インスタンスを返します。名前が見つからない場合、新しい &lt;code&gt;App::Prove::State::Result::Test&lt;/code&gt; インスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="62b15d972fb903972214f5d70085ccda39e072a3" translate="yes" xml:space="preserve">
          <source>Returns an instance the appropriate class for the test token passed in.</source>
          <target state="translated">渡されたテストトークンに対して適切なクラスのインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="9d40f5ac8dac983ee95dd7bfc8356adb764626cf" translate="yes" xml:space="preserve">
          <source>Returns an integer representing the degree of similarity between tags $lang1 and $lang2 (the order of which does not matter), where similarity is the number of common elements on the left, without regard to case and to x/i- alternation.</source>
          <target state="translated">タグ $lang1 と $lang2 の間の類似度を表す整数値を返します(順番は関係ありません)。</target>
        </trans-unit>
        <trans-unit id="e8a66ed5f3634ee37b47145a41066925578dc94a" translate="yes" xml:space="preserve">
          <source>Returns an integer which is incremented every time a real local method in the package &lt;code&gt;$classname&lt;/code&gt; changes, or the local &lt;code&gt;@ISA&lt;/code&gt; of &lt;code&gt;$classname&lt;/code&gt; is modified.</source>
          <target state="translated">パッケージ内の実際の現地方法たびにインクリメントされる整数を返します &lt;code&gt;$classname&lt;/code&gt; 変更、またはローカル &lt;code&gt;@ISA&lt;/code&gt; の &lt;code&gt;$classname&lt;/code&gt; 変更されています。</target>
        </trans-unit>
        <trans-unit id="b574803c8b1e2181ec8e414eb3fa6557fcc86585" translate="yes" xml:space="preserve">
          <source>Returns an item from the queue without dequeuing anything. Defaults to the the head of queue (at index position 0) if no index is specified. Negative index values are supported as with &lt;a href=&quot;../perldata#Subscripts&quot;&gt;arrays&lt;/a&gt; (i.e., -1 is the end of the queue, -2 is next to last, and so on).</source>
          <target state="translated">何もデキューせずにキューからアイテムを返します。インデックスが指定されていない場合、デフォルトでキューの先頭（インデックス位置0）になります。負のインデックス値は&lt;a href=&quot;../perldata#Subscripts&quot;&gt;配列と&lt;/a&gt;同様にサポートされます（つまり、-1はキューの最後、-2は最後から2番目など）。</target>
        </trans-unit>
        <trans-unit id="6dd440f57a2a22171f9e14b2f8c43dc77aa1267f" translate="yes" xml:space="preserve">
          <source>Returns an iterator function that reads the tar file without loading it all in memory. Each time the function is called it will return the next file in the tarball. The files are returned as &lt;code&gt;Archive::Tar::File&lt;/code&gt; objects. The iterator function returns the empty list once it has exhausted the files contained.</source>
          <target state="translated">メモリにすべてを読み込まずにtarファイルを読み取るイテレータ関数を返します。関数が呼び出されるたびに、tarballの次のファイルが返されます。ファイルは &lt;code&gt;Archive::Tar::File&lt;/code&gt; オブジェクトとして返されます。含まれているファイルを使い果たすと、反復関数は空のリストを返します。</target>
        </trans-unit>
        <trans-unit id="39c744632042ee1d8ff098a788f88d056a97923b" translate="yes" xml:space="preserve">
          <source>Returns an list of test names, sorted by run order.</source>
          <target state="translated">テスト名のリストを、実行順に並べて返します。</target>
        </trans-unit>
        <trans-unit id="0f0122de4d083040e8479ad25e16684d7f9b4840" translate="yes" xml:space="preserve">
          <source>Returns an object of type &lt;code&gt;IPC::Msg::stat&lt;/code&gt; which is a sub-class of &lt;code&gt;Class::Struct&lt;/code&gt; . It provides the following fields. For a description of these fields see you system documentation.</source>
          <target state="translated">&lt;code&gt;Class::Struct&lt;/code&gt; サブクラスであるタイプ &lt;code&gt;IPC::Msg::stat&lt;/code&gt; オブジェクトを返します。次のフィールドがあります。これらのフィールドの説明については、システムのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="ee587d40ecd5f70474f52815a34281ab59e7c9b0" translate="yes" xml:space="preserve">
          <source>Returns an object of type &lt;code&gt;IPC::Semaphore::stat&lt;/code&gt; which is a sub-class of &lt;code&gt;Class::Struct&lt;/code&gt; . It provides the following fields. For a description of these fields see your system documentation.</source>
          <target state="translated">&lt;code&gt;Class::Struct&lt;/code&gt; サブクラスであるタイプ &lt;code&gt;IPC::Semaphore::stat&lt;/code&gt; オブジェクトを返します。次のフィールドがあります。これらのフィールドの説明については、システムのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="0c6426cd8a7b7a9e8b6b5d780cbcd8174773b30f" translate="yes" xml:space="preserve">
          <source>Returns an object of type &lt;code&gt;IPC::SharedMem::stat&lt;/code&gt; which is a sub-class of &lt;code&gt;Class::Struct&lt;/code&gt; . It provides the following fields. For a description of these fields see you system documentation.</source>
          <target state="translated">&lt;code&gt;Class::Struct&lt;/code&gt; サブクラスであるタイプ &lt;code&gt;IPC::SharedMem::stat&lt;/code&gt; オブジェクトを返します。次のフィールドがあります。これらのフィールドの説明については、システムのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="f610efd81b9b632576d1d7f64e5eb973c2277760" translate="yes" xml:space="preserve">
          <source>Returns an opaque value that represents the current position of the IO::File, or &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if this is not possible (eg an unseekable stream such as a terminal, pipe or socket). If the fgetpos() function is available in your C library it is used to implements getpos, else perl emulates getpos using C's ftell() function.</source>
          <target state="translated">戻りIO ::ファイルの現在の位置を表し、又は不透明値 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; これが不可能な場合（例えば、端末、パイプ又はソケットとして、例えばunseekableストリーム）。Cライブラリでfgetpos（）関数が使用可能な場合、それはgetposの実装に使用されます。それ以外の場合、perlはCのftell（）関数を使用してgetposをエミュレートします。</target>
        </trans-unit>
        <trans-unit id="f0b7cc80eace1c559eddbadf188c99ddc969aadd" translate="yes" xml:space="preserve">
          <source>Returns an opset containing the listed operators.</source>
          <target state="translated">リストされた演算子を含む演算セットを返します。</target>
        </trans-unit>
        <trans-unit id="d5e92487638153e66141842a1ae28226a70e43f8" translate="yes" xml:space="preserve">
          <source>Returns an opset corresponding to the current opmask.</source>
          <target state="translated">現在の opmask に対応する opset を返します。</target>
        </trans-unit>
        <trans-unit id="f44f54f1b9d5a2c5d0e8a49b190b93d6ca8183c2" translate="yes" xml:space="preserve">
          <source>Returns an opset which contains no operators.</source>
          <target state="translated">演算子を含まない演算セットを返します。</target>
        </trans-unit>
        <trans-unit id="141fbbd5c09415bd719ab00ae84cd140a623e4ab" translate="yes" xml:space="preserve">
          <source>Returns an opset which includes all operators.</source>
          <target state="translated">すべての演算子を含む演算セットを返します。</target>
        </trans-unit>
        <trans-unit id="d8bca58ba2ee164f6d95554d0baaa25d9c405d7d" translate="yes" xml:space="preserve">
          <source>Returns an opset which is the inverse set of the one supplied.</source>
          <target state="translated">指定したものと逆の集合である演算集合を返します。</target>
        </trans-unit>
        <trans-unit id="ac21ef9acae8108ad6f7a5d0d937be30579ecf48" translate="yes" xml:space="preserve">
          <source>Returns an uppercased version of EXPR. This is the internal function implementing the &lt;code&gt;\U&lt;/code&gt; escape in double-quoted strings. It does not attempt to do titlecase mapping on initial letters. See &lt;a href=&quot;#ucfirst&quot;&gt;ucfirst&lt;/a&gt; for that.</source>
          <target state="translated">EXPRの大文字バージョンを返します。これは、二重引用符で囲まれた文字列で &lt;code&gt;\U&lt;/code&gt; エスケープを実装する内部関数です。頭文字のタイトルケースマッピングは行いません。&lt;a href=&quot;#ucfirst&quot;&gt;ucfirst&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="69dc9227494ca43d3cfc46778c8ffc1bef79303d" translate="yes" xml:space="preserve">
          <source>Returns an uppercased version of EXPR. This is the internal function implementing the &lt;code&gt;\U&lt;/code&gt; escape in double-quoted strings. It does not attempt to do titlecase mapping on initial letters. See &lt;a href=&quot;ucfirst&quot;&gt;ucfirst&lt;/a&gt; for that.</source>
          <target state="translated">EXPRの大文字バージョンを返します。これは、二重引用符で囲まれた文字列で &lt;code&gt;\U&lt;/code&gt; エスケープを実装する内部関数です。頭文字のタイトルケースマッピングは行いません。&lt;a href=&quot;ucfirst&quot;&gt;ucfirst&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="f695d908b8bad70e0a01dfa2bc75e5b4c3484347" translate="yes" xml:space="preserve">
          <source>Returns bytes written or -1 on an error.</source>
          <target state="translated">エラーが発生した場合は、書き込まれたバイト数または-1を返します。</target>
        </trans-unit>
        <trans-unit id="e7402bb1f542294caec1afa2185b988aa0eefb95" translate="yes" xml:space="preserve">
          <source>Returns change in number of windows. If &lt;code&gt;cnt&lt;/code&gt; is given, it is incremented by the number of messages retrieved.</source>
          <target state="translated">ウィンドウ数の変化を返します。場合は &lt;code&gt;cnt&lt;/code&gt; 与えられ、それが取り出されたメッセージの数だけインクリメントされます。</target>
        </trans-unit>
        <trans-unit id="baab0a40047a0b9b96def6bef441cce306d32f8a" translate="yes" xml:space="preserve">
          <source>Returns either &lt;code&gt;TODO&lt;/code&gt; or &lt;code&gt;SKIP&lt;/code&gt; if either directive was present for a test line.</source>
          <target state="translated">テスト行にいずれかのディレクティブが存在する場合、 &lt;code&gt;TODO&lt;/code&gt; または &lt;code&gt;SKIP&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f47cc43f85a4d7cd2e2f444b1c97cbb38eed65d0" translate="yes" xml:space="preserve">
          <source>Returns entries from a hash iterator. See &lt;code&gt;hv_iterinit&lt;/code&gt; .</source>
          <target state="translated">ハッシュイテレータからエントリを返します。 &lt;code&gt;hv_iterinit&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="b5389685ef7d9db4f13e68bc30c7a8fe6f00cdee" translate="yes" xml:space="preserve">
          <source>Returns entries from a hash iterator. See &lt;code&gt;hv_iterinit&lt;/code&gt; and &lt;code&gt;hv_iternext&lt;/code&gt; . The &lt;code&gt;flags&lt;/code&gt; value will normally be zero; if HV_ITERNEXT_WANTPLACEHOLDERS is set the placeholders keys (for restricted hashes) will be returned in addition to normal keys. By default placeholders are automatically skipped over. Currently a placeholder is implemented with a value that is &lt;code&gt;&amp;amp;PL_sv_placeholder&lt;/code&gt; . Note that the implementation of placeholders and restricted hashes may change, and the implementation currently is insufficiently abstracted for any change to be tidy.</source>
          <target state="translated">ハッシュイテレータからエントリを返します。 &lt;code&gt;hv_iterinit&lt;/code&gt; および &lt;code&gt;hv_iternext&lt;/code&gt; を参照してください。 &lt;code&gt;flags&lt;/code&gt; 値は、通常はゼロになります。HV_ITERNEXT_WANTPLACEHOLDERSが設定されている場合、通常のキーに加えて（制限されたハッシュの）プレースホルダーキーが返されます。デフォルトでは、プレースホルダーは自動的にスキップされます。現在、プレースホルダーは &lt;code&gt;&amp;amp;PL_sv_placeholder&lt;/code&gt; という値で実装されています。プレースホルダーと制限付きハッシュの実装は変更される可能性があることに注意してください。現在、実装は抽象化されているため、変更を整頓できません。</target>
        </trans-unit>
        <trans-unit id="a93a739a1304b696a52b85e019108732f6bf7466" translate="yes" xml:space="preserve">
          <source>Returns false if the stat information differs or if the link count is greater than 1. Calls croak if there is a security anomaly.</source>
          <target state="translated">stat 情報が異なる場合やリンク数が 1 より大きい場合は false を返します。 セキュリティ上の異常がある場合は croak を呼び出します。</target>
        </trans-unit>
        <trans-unit id="b4d48cb7dd85d6422a4c733c21b385a4179efc4f" translate="yes" xml:space="preserve">
          <source>Returns false indicating that this is a real job rather than a 'spinner'. Spinners are returned when the scheduler still has pending jobs but can't (because of locking) return one right now.</source>
          <target state="translated">これは 'spinner' ではなく本物のジョブであることを示す false を返します。スピナーは、スケジューラがまだ保留中のジョブを持っているにもかかわらず、(ロックがかかっているために)今すぐにジョブを返すことができない場合に返されます。</target>
        </trans-unit>
        <trans-unit id="3f0f4a98ea06f65844fba9a641a25e67bf7f4c86" translate="yes" xml:space="preserve">
          <source>Returns false on error but croaks() if there is a security anomaly. The filehandle is not closed since on some occasions this is not required.</source>
          <target state="translated">エラー時には false を返しますが、セキュリティ上の異常がある場合は croaks()を返します。これが必要ない場合もあるので、ファイルハンドルは閉じません。</target>
        </trans-unit>
        <trans-unit id="1ab1400bb9572c4afc6a8ca43144492eb8661975" translate="yes" xml:space="preserve">
          <source>Returns false on failure.</source>
          <target state="translated">失敗した場合は false を返します。</target>
        </trans-unit>
        <trans-unit id="217e2367fb9a2d3efa5b2f3790dc77b76b206625" translate="yes" xml:space="preserve">
          <source>Returns false, so as to preserve failure.</source>
          <target state="translated">失敗を防ぐために false を返します。</target>
        </trans-unit>
        <trans-unit id="714c47847df2df4e45121d2349ab99ae2dc08615" translate="yes" xml:space="preserve">
          <source>Returns false. Why? Because &lt;code&gt;diag()&lt;/code&gt; is often used in conjunction with a failing test (&lt;code&gt;ok() || diag()&lt;/code&gt; ) it &quot;passes through&quot; the failure.</source>
          <target state="translated">falseを返します。どうして？ &lt;code&gt;diag()&lt;/code&gt; は、失敗したテスト（ &lt;code&gt;ok() || diag()&lt;/code&gt; ）と組み合わせて使用​​されることが多いため、失敗を「通過」します。</target>
        </trans-unit>
        <trans-unit id="30c4aa79e37f4a57ccbcca748998eea1fd22c8c2" translate="yes" xml:space="preserve">
          <source>Returns file position. Optional. Default to be determined.</source>
          <target state="translated">ファイルの位置を返します。オプションです。デフォルトは決定されます。</target>
        </trans-unit>
        <trans-unit id="51714bf33b11ba0200086c21d32b54c81a3c8c9e" translate="yes" xml:space="preserve">
          <source>Returns from a subroutine, &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;do&quot;&gt;do&lt;/a&gt; FILE&lt;/code&gt; with the value given in EXPR. Evaluation of EXPR may be in list, scalar, or void context, depending on how the return value will be used, and the context may vary from one execution to the next (see &lt;a href=&quot;wantarray&quot;&gt;wantarray&lt;/a&gt;). If no EXPR is given, returns an empty list in list context, the undefined value in scalar context, and (of course) nothing at all in void context.</source>
          <target state="translated">EXPRで指定された値を使用して、サブルーチン &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;do&quot;&gt;do&lt;/a&gt; FILE&lt;/code&gt; から戻ります。EXPRの評価は、戻り値の使用方法に応じて、リスト、スカラー、またはvoidコンテキストで行われ、コンテキストは実行ごとに異なる場合があります（&lt;a href=&quot;wantarray&quot;&gt;wantarrayを&lt;/a&gt;参照）。EXPRが指定されていない場合、リストコンテキストでは空のリスト、スカラーコンテキストでは未定義の値を返し、（もちろん）voidコンテキストでは何も返しません。</target>
        </trans-unit>
        <trans-unit id="3a72d1db8163081b6b30ed57914c55833f693f8b" translate="yes" xml:space="preserve">
          <source>Returns from a subroutine, &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; FILE&lt;/code&gt; with the value given in EXPR. Evaluation of EXPR may be in list, scalar, or void context, depending on how the return value will be used, and the context may vary from one execution to the next (see &lt;a href=&quot;#wantarray&quot;&gt;wantarray&lt;/a&gt;). If no EXPR is given, returns an empty list in list context, the undefined value in scalar context, and (of course) nothing at all in void context.</source>
          <target state="translated">EXPRで指定された値を使用して、サブルーチン &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; FILE&lt;/code&gt; から戻ります。EXPRの評価は、戻り値の使用方法に応じて、リスト、スカラー、またはvoidコンテキストで行われ、コンテキストは実行ごとに異なる場合があります（&lt;a href=&quot;#wantarray&quot;&gt;wantarrayを&lt;/a&gt;参照）。EXPRが指定されていない場合、リストコンテキストでは空のリスト、スカラーコンテキストでは未定義の値を返し、（もちろん）voidコンテキストでは何も返しません。</target>
        </trans-unit>
        <trans-unit id="25cf97237f94a7f054c5b5f76f4761c9bfa22841" translate="yes" xml:space="preserve">
          <source>Returns just the filehandle alone when called in scalar context.</source>
          <target state="translated">スカラコンテキストで呼び出された場合、ファイルハンドルだけを返します。</target>
        </trans-unit>
        <trans-unit id="063c2bf6755f0dfe78c195f6e64814029ac9b16f" translate="yes" xml:space="preserve">
          <source>Returns list of extra arguments to give to the link command; the arguments are the same as for prelink(), with addition of array reference to the results of prelink(); this reference is indexed by key &lt;code&gt;prelink_res&lt;/code&gt; .</source>
          <target state="translated">linkコマンドに与える追加の引数のリストを返します。引数はprelink（）と同じですが、prelink（）の結果に配列参照が追加されます。この参照は、キー &lt;code&gt;prelink_res&lt;/code&gt; によって索引付けされます。</target>
        </trans-unit>
        <trans-unit id="934af1d2fdc455f3125756e9f6d5752f62bc6852" translate="yes" xml:space="preserve">
          <source>Returns most significant digit of the response code.</source>
          <target state="translated">応答コードの最上位桁を返します。</target>
        </trans-unit>
        <trans-unit id="a4cbf33d163802b79fa05ca3b5b2b59d30228089" translate="yes" xml:space="preserve">
          <source>Returns non-zero if the last code value was greater than zero and less than 400. This holds true for most command servers. Servers where this does not hold may override this method.</source>
          <target state="translated">最後のコード値が 0 より大きく 400 未満の場合は、0 以外の値を返します。これはほとんどのコマンドサーバで有効です。これが保持されないサーバでは、このメソッドをオーバーライドすることができます。</target>
        </trans-unit>
        <trans-unit id="d3b8a42be1eb6c0144ee87cd3bf27d0b57fd222a" translate="yes" xml:space="preserve">
          <source>Returns not-a-number [C99].</source>
          <target state="translated">not-a-number [C99]を返します。</target>
        </trans-unit>
        <trans-unit id="4487051efaa96f640a93948c10b0ceb316d405f7" translate="yes" xml:space="preserve">
          <source>Returns nothing.</source>
          <target state="translated">何も返しません。</target>
        </trans-unit>
        <trans-unit id="d87a2fd152dcd6ba09ab9c19b3519254c4ff232e" translate="yes" xml:space="preserve">
          <source>Returns one character from STDIN. Identical to Perl's &lt;code&gt;&lt;a href=&quot;functions/getc&quot;&gt;getc()&lt;/a&gt;&lt;/code&gt;, see &lt;a href=&quot;functions/getc&quot;&gt;getc&lt;/a&gt;.</source>
          <target state="translated">STDINから1文字を返します。Perlのと同じです &lt;code&gt;&lt;a href=&quot;functions/getc&quot;&gt;getc()&lt;/a&gt;&lt;/code&gt; 、参照&lt;a href=&quot;functions/getc&quot;&gt;GETC&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c2375116b6abafc2c2c6df8319b3cfdd2f7f853d" translate="yes" xml:space="preserve">
          <source>Returns one line from &lt;code&gt;STDIN&lt;/code&gt; , similar to &amp;lt;&amp;gt;, also known as the &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline()&lt;/a&gt;&lt;/code&gt; function, see &lt;a href=&quot;functions/readline&quot;&gt;readline&lt;/a&gt;.</source>
          <target state="translated">&amp;lt;&amp;gt;と同様に、 &lt;code&gt;STDIN&lt;/code&gt; から1行を返します。これは、 &lt;code&gt;&lt;a href=&quot;functions/readline&quot;&gt;readline()&lt;/a&gt;&lt;/code&gt; 関数とも呼ばれます&lt;a href=&quot;functions/readline&quot;&gt;。readlineを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9dddf180784dc0cd16ce28c5081452103da6dbf4" translate="yes" xml:space="preserve">
          <source>Returns one of</source>
          <target state="translated">のいずれかを返します。</target>
        </trans-unit>
        <trans-unit id="749c2334f29b2b96a440124d9ec5143c2f80d479" translate="yes" xml:space="preserve">
          <source>Returns the</source>
          <target state="translated">戻り値は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="557330f645f04cff83abddfdc4f9adc9c3332136" translate="yes" xml:space="preserve">
          <source>Returns the &quot;type&quot; of a token, such as &lt;code&gt;comment&lt;/code&gt; or &lt;code&gt;test&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;comment&lt;/code&gt; や &lt;code&gt;test&lt;/code&gt; など、トークンの「タイプ」を返します。</target>
        </trans-unit>
        <trans-unit id="3092cfd1a43c21ebf72be5f6bdb5aec039845045" translate="yes" xml:space="preserve">
          <source>Returns the 'dist' target to make an archive for distribution. This target simply checks to make sure the Makefile is up-to-date and depends on $(DIST_DEFAULT).</source>
          <target state="translated">配布用のアーカイブを作成するための 'dist' ターゲットを返します。このターゲットは、Makefile が最新であるかどうかをチェックするだけで、 $(DIST_DEFAULT)に依存します。</target>
        </trans-unit>
        <trans-unit id="644c63c246c363e1c2b2762a7fb9132830ec3365" translate="yes" xml:space="preserve">
          <source>Returns the 'tardist' target which is simply so 'make tardist' works. The real work is done by the dynamically named tardistfile_target() method, tardist should have that as a dependency.</source>
          <target state="translated">これは単純に 'make tardist' が動作するようにした 'tardist' ターゲットを返します。実際の作業は動的に名前が付けられた tardistfile_target()メソッドによって行われます。</target>
        </trans-unit>
        <trans-unit id="c6bda7de8b1dbb955384b2e58142215b10c59cff" translate="yes" xml:space="preserve">
          <source>Returns the 'zipdist' target which is simply so 'make zipdist' works. The real work is done by the dynamically named zipdistfile_target() method, zipdist should have that as a dependency.</source>
          <target state="translated">これは単に 'make zipdist' が動作するようにするためのものです。実際の作業は動的に命名された zipdistfile_target()メソッドによって行われます。</target>
        </trans-unit>
        <trans-unit id="c0e8982ee783013779d97c7331f00522da1ee66a" translate="yes" xml:space="preserve">
          <source>Returns the 3-digit code from the last command. If a command is pending then the value 0 is returned. (See &lt;a href=&quot;#PSEUDO-RESPONSES&quot;&gt;PSEUDO RESPONSES&lt;/a&gt; below.)</source>
          <target state="translated">最後のコマンドから3桁のコードを返します。コマンドが保留中の場合、値0が返されます。（下記の「&lt;a href=&quot;#PSEUDO-RESPONSES&quot;&gt;疑似応答&lt;/a&gt;」を参照してください。）</target>
        </trans-unit>
        <trans-unit id="bf1c168a1ebb8df5eb2d122e19cd7bd0e00bcf56" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;builder&quot;&gt;Test::Builder&lt;/a&gt; object underlying Test::More for you to play with.</source>
          <target state="translated">試してみるためのTest :: Moreの基礎となる&lt;a href=&quot;builder&quot;&gt;Test :: Builder&lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="f5507e12b916a918138b845b088ea21dff7ff3ee" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;Archive::Tar::File&lt;/code&gt; object that was just added, or &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; on failure.</source>
          <target state="translated">追加されたばかりの &lt;code&gt;Archive::Tar::File&lt;/code&gt; オブジェクト、または失敗した場合は &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="3e7afd4cf126138fccad1f937301ab4ad085f958" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;Archive::Tar::File&lt;/code&gt; objects matching the filenames provided. If no filename list was passed, all &lt;code&gt;Archive::Tar::File&lt;/code&gt; objects in the current Tar object are returned.</source>
          <target state="translated">指定されたファイル名に一致する &lt;code&gt;Archive::Tar::File&lt;/code&gt; オブジェクトを返します。ファイル名リストが渡されなかった場合、現在のTarオブジェクト内のすべての &lt;code&gt;Archive::Tar::File&lt;/code&gt; オブジェクトが返されます。</target>
        </trans-unit>
        <trans-unit id="986fa720e3d09a3735810c3a21de46891f4828d6" translate="yes" xml:space="preserve">
          <source>Returns the AV object (i.e. in class B::AV) representing BEGIN blocks.</source>
          <target state="translated">BEGIN ブロックを表す AV オブジェクト (すなわちクラス B::AV)を返します。</target>
        </trans-unit>
        <trans-unit id="a61d7ca2ff81836b68b4bd6b0696a28d3c795627" translate="yes" xml:space="preserve">
          <source>Returns the AV object (i.e. in class B::AV) representing CHECK blocks.</source>
          <target state="translated">CHECKブロックを表すAVオブジェクト(すなわちクラスB::AV)を返します。</target>
        </trans-unit>
        <trans-unit id="84ebbf61627560d00156045e65f11744afbbda08" translate="yes" xml:space="preserve">
          <source>Returns the AV object (i.e. in class B::AV) representing END blocks.</source>
          <target state="translated">ENDブロックを表すAVオブジェクト(すなわちクラスB::AV)を返します。</target>
        </trans-unit>
        <trans-unit id="9c7140959c4fee8329410b704f68b2e8bb6de30b" translate="yes" xml:space="preserve">
          <source>Returns the AV object (i.e. in class B::AV) representing INIT blocks.</source>
          <target state="translated">INITブロックを表すAVオブジェクト(すなわちクラスB::AV)を返します。</target>
        </trans-unit>
        <trans-unit id="4c7726b64a07afedf3cadbf758c4a94739a0b5c1" translate="yes" xml:space="preserve">
          <source>Returns the AV object (i.e. in class B::AV) representing UNITCHECK blocks.</source>
          <target state="translated">UNITCHECK ブロックを表す AV オブジェクト (すなわちクラス B::AV)を返します。</target>
        </trans-unit>
        <trans-unit id="f7a1ec841b04ed28cca7d060727c954136ed545f" translate="yes" xml:space="preserve">
          <source>Returns the AV of the specified Perl global or package array with the given name (so it won't work on lexical variables). &lt;code&gt;flags&lt;/code&gt; are passed to &lt;code&gt;gv_fetchpv&lt;/code&gt; . If &lt;code&gt;GV_ADD&lt;/code&gt; is set and the Perl variable does not exist then it will be created. If &lt;code&gt;flags&lt;/code&gt; is zero and the variable does not exist then NULL is returned.</source>
          <target state="translated">指定された名前の指定されたPerlグローバルまたはパッケージ配列のAVを返します（そのため、レキシカル変数では機能しません）。 &lt;code&gt;flags&lt;/code&gt; は &lt;code&gt;gv_fetchpv&lt;/code&gt; に渡されます。場合 &lt;code&gt;GV_ADD&lt;/code&gt; が設定され、Perlの変数が存在しない、それが作成されます。場合は &lt;code&gt;flags&lt;/code&gt; ゼロで、変数が存在しない、NULLが返されます。</target>
        </trans-unit>
        <trans-unit id="537c3fae1ebf14119d6add6de3bb8c7c62768be8" translate="yes" xml:space="preserve">
          <source>Returns the BigRat as binary string. Works only for integers.</source>
          <target state="translated">BigRatをバイナリ文字列として返します。整数でのみ動作します。</target>
        </trans-unit>
        <trans-unit id="24aa2429417a873bfe983d192714c535f6f41be5" translate="yes" xml:space="preserve">
          <source>Returns the BigRat as hexadecimal string. Works only for integers.</source>
          <target state="translated">BigRatを16進数の文字列として返します。整数でのみ動作します。</target>
        </trans-unit>
        <trans-unit id="ab8db70421e588cfad590ba346078ddb17d6903a" translate="yes" xml:space="preserve">
          <source>Returns the BigRat as octal string. Works only for integers.</source>
          <target state="translated">BigRatを8進数の文字列として返します。整数でのみ動作します。</target>
        </trans-unit>
        <trans-unit id="3c649216dc6938b841f0aeaae7c037cd9226545c" translate="yes" xml:space="preserve">
          <source>Returns the CPAN::Author object of the maintainer who uploaded this distribution</source>
          <target state="translated">このディストリビューションをアップロードしたメンテナの CPAN::Author オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="ed6f1df4390323a945eaf6da29122d9d7d968327" translate="yes" xml:space="preserve">
          <source>Returns the CPAN::Distribution object that contains the current version of this module.</source>
          <target state="translated">このモジュールの現在のバージョンを含む CPAN::Distribution オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="4e65e5e3a2dc703ffc81bfca0637962c4bc721c5" translate="yes" xml:space="preserve">
          <source>Returns the CPU times (like &lt;a href=&quot;../functions/times&quot;&gt;times&lt;/a&gt; when the Parser was created.</source>
          <target state="translated">CPU時間（パーサーが作成された&lt;a href=&quot;../functions/times&quot;&gt;時間&lt;/a&gt;など）を返します。</target>
        </trans-unit>
        <trans-unit id="0b216502674bf502147c6841aea85103e9d2ed72" translate="yes" xml:space="preserve">
          <source>Returns the CPU times (like &lt;a href=&quot;../functions/times&quot;&gt;times&lt;/a&gt; when the end of TAP input was seen.</source>
          <target state="translated">CPU時間を返します（TAP入力の終わりが検出された&lt;a href=&quot;../functions/times&quot;&gt;時間&lt;/a&gt;など）。</target>
        </trans-unit>
        <trans-unit id="d298a8675f08c9497878e3cf97947b2a586539f2" translate="yes" xml:space="preserve">
          <source>Returns the CV of the specified Perl subroutine. &lt;code&gt;flags&lt;/code&gt; are passed to &lt;code&gt;gv_fetchpvn_flags&lt;/code&gt; . If &lt;code&gt;GV_ADD&lt;/code&gt; is set and the Perl subroutine does not exist then it will be declared (which has the same effect as saying &lt;code&gt;sub name;&lt;/code&gt; ). If &lt;code&gt;GV_ADD&lt;/code&gt; is not set and the subroutine does not exist then NULL is returned.</source>
          <target state="translated">指定されたPerlサブルーチンのCVを返します。 &lt;code&gt;flags&lt;/code&gt; は &lt;code&gt;gv_fetchpvn_flags&lt;/code&gt; に渡されます。場合 &lt;code&gt;GV_ADD&lt;/code&gt; が設定され、Perlのサブルーチンは（と言って同じ効果がある、それが宣言されますその後、存在しない &lt;code&gt;sub name;&lt;/code&gt; ）。場合 &lt;code&gt;GV_ADD&lt;/code&gt; が設定されておらず、サブルーチンが存在しない、NULLが返されます。</target>
        </trans-unit>
        <trans-unit id="7bf34184c10fde09175b3280e9b95c75b930e13f" translate="yes" xml:space="preserve">
          <source>Returns the Depth-First Search linearization of @ISA the given stash. The return value is a read-only AV*. &lt;code&gt;level&lt;/code&gt; should be 0 (it is used internally in this function's recursion).</source>
          <target state="translated">指定されたスタッシュの@ISAの深さ優先検索線形化を返します。戻り値は読み取り専用AV *です。 &lt;code&gt;level&lt;/code&gt; は0でなければなりません（この関数の再帰で内部的に使用されます）。</target>
        </trans-unit>
        <trans-unit id="f3bb5670f054717b159feb9b9732555768713ad3" translate="yes" xml:space="preserve">
          <source>Returns the HMAC-SHA-1/224/256/384/512 digest of</source>
          <target state="translated">のHMAC-SHA-1/224/256/384/512ダイジェストを返します。</target>
        </trans-unit>
        <trans-unit id="7b095ea66a5f74c241fda1fcfc0f3782ca0f9c54" translate="yes" xml:space="preserve">
          <source>Returns the HV of the specified Perl hash. &lt;code&gt;flags&lt;/code&gt; are passed to &lt;code&gt;gv_fetchpv&lt;/code&gt; . If &lt;code&gt;GV_ADD&lt;/code&gt; is set and the Perl variable does not exist then it will be created. If &lt;code&gt;flags&lt;/code&gt; is zero and the variable does not exist then NULL is returned.</source>
          <target state="translated">指定されたPerlハッシュのHVを返します。 &lt;code&gt;flags&lt;/code&gt; は &lt;code&gt;gv_fetchpv&lt;/code&gt; に渡されます。場合 &lt;code&gt;GV_ADD&lt;/code&gt; が設定され、Perlの変数が存在しない、それが作成されます。場合は &lt;code&gt;flags&lt;/code&gt; ゼロで、変数が存在しない、NULLが返されます。</target>
        </trans-unit>
        <trans-unit id="7ae648da7903390da1c8863de50aa5f123d2d569" translate="yes" xml:space="preserve">
          <source>Returns the ID of the thread. Thread IDs are unique integers with the main thread in a program being 0, and incrementing by 1 for every thread created.</source>
          <target state="translated">スレッドの ID を返します。スレッドIDは一意の整数で、プログラム内のメインスレッドは0で、作成されるたびに1ずつインクリメントされます。</target>
        </trans-unit>
        <trans-unit id="fc9ab720b7f2a57a3ff28409dc115ce9b93b30f5" translate="yes" xml:space="preserve">
          <source>Returns the IO::File's current position, or -1 on error.</source>
          <target state="translated">IO::Fileの現在位置を返します。</target>
        </trans-unit>
        <trans-unit id="80231f6d9f9c07146e482e2bc9b11ca9b2769858" translate="yes" xml:space="preserve">
          <source>Returns the MRO of the given class (either &lt;code&gt;c3&lt;/code&gt; or &lt;code&gt;dfs&lt;/code&gt; ).</source>
          <target state="translated">指定されたクラス（ &lt;code&gt;c3&lt;/code&gt; または &lt;code&gt;dfs&lt;/code&gt; ）のMROを返します。</target>
        </trans-unit>
        <trans-unit id="c310da04f2c916d16c1dfb8bbad9b9e0d93f55bb" translate="yes" xml:space="preserve">
          <source>Returns the OP's parent. If it has no parent, or if your perl wasn't built with &lt;code&gt;-DPERL_OP_PARENT&lt;/code&gt; , returns NULL.</source>
          <target state="translated">OPの親を返します。親がない場合、またはperlが &lt;code&gt;-DPERL_OP_PARENT&lt;/code&gt; でビルドされていない場合は、NULLを返します。</target>
        </trans-unit>
        <trans-unit id="22478030a1ea2bac8f7f1a2fefee70d7119eb4de" translate="yes" xml:space="preserve">
          <source>Returns the PADLIST object (i.e. in class B::PADLIST) of the global comppadlist. In Perl 5.16 and earlier it returns an AV object (class B::AV).</source>
          <target state="translated">グローバルcomppadlistのPADLISTオブジェクト(クラスB::PADLIST)を返します。Perl 5.16 以前のバージョンでは、AV オブジェクト(クラス B::AV)を返します。</target>
        </trans-unit>
        <trans-unit id="3938ec41dac79cf90f8a35a5402a74b64db5051f" translate="yes" xml:space="preserve">
          <source>Returns the SV (if any) returned by the method, or NULL on failure.</source>
          <target state="translated">メソッドが返した SV (もしあれば)を、失敗した場合は NULL を返します。</target>
        </trans-unit>
        <trans-unit id="d9ae6a3e90556af0a58312f6c8f5a6dfe0531c83" translate="yes" xml:space="preserve">
          <source>Returns the SV at the specified index in the array. The &lt;code&gt;key&lt;/code&gt; is the index. If lval is true, you are guaranteed to get a real SV back (in case it wasn't real before), which you can then modify. Check that the return value is non-null before dereferencing it to a &lt;code&gt;SV*&lt;/code&gt; .</source>
          <target state="translated">配列内の指定されたインデックスにあるSVを返します。 &lt;code&gt;key&lt;/code&gt; インデックスです。lvalがtrueの場合、実際のSVが返されることが保証され（以前にそれがなかった場合）、変更できます。 &lt;code&gt;SV*&lt;/code&gt; に逆参照する前に、戻り値がnullでないことを確認してください。</target>
        </trans-unit>
        <trans-unit id="fc95d995c648f3e5efe5bd8de55e1e4c9f4df2bb" translate="yes" xml:space="preserve">
          <source>Returns the SV object corresponding to the C variable &lt;code&gt;amagic_generation&lt;/code&gt; . As of Perl 5.18, this is just an alias to &lt;code&gt;PL_na&lt;/code&gt; , so its value is meaningless.</source>
          <target state="translated">C変数 &lt;code&gt;amagic_generation&lt;/code&gt; に対応するSVオブジェクトを返します。Perl 5.18以降、これは &lt;code&gt;PL_na&lt;/code&gt; の単なるエイリアスなので、その値は無意味です。</target>
        </trans-unit>
        <trans-unit id="1d704a67336c03147fc7ed90d617645b6b1c51b6" translate="yes" xml:space="preserve">
          <source>Returns the SV object corresponding to the C variable &lt;code&gt;sv_no&lt;/code&gt; .</source>
          <target state="translated">C変数 &lt;code&gt;sv_no&lt;/code&gt; に対応するSVオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="d4836bd4a2981b6da0a9a1a815dbe758c8f4a54f" translate="yes" xml:space="preserve">
          <source>Returns the SV object corresponding to the C variable &lt;code&gt;sv_undef&lt;/code&gt; .</source>
          <target state="translated">C変数 &lt;code&gt;sv_undef&lt;/code&gt; に対応するSVオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="7283b11ced8b29bf19a62b8ac4b5800a68b4bf6b" translate="yes" xml:space="preserve">
          <source>Returns the SV object corresponding to the C variable &lt;code&gt;sv_yes&lt;/code&gt; .</source>
          <target state="translated">C変数 &lt;code&gt;sv_yes&lt;/code&gt; に対応するSVオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="b4eb3a26c49ad7805cf81891436e5c0fbecda4e7" translate="yes" xml:space="preserve">
          <source>Returns the SV of the specified Perl scalar. &lt;code&gt;flags&lt;/code&gt; are passed to &lt;code&gt;gv_fetchpv&lt;/code&gt; . If &lt;code&gt;GV_ADD&lt;/code&gt; is set and the Perl variable does not exist then it will be created. If &lt;code&gt;flags&lt;/code&gt; is zero and the variable does not exist then NULL is returned.</source>
          <target state="translated">指定されたPerlスカラーのSVを返します。 &lt;code&gt;flags&lt;/code&gt; は &lt;code&gt;gv_fetchpv&lt;/code&gt; に渡されます。場合 &lt;code&gt;GV_ADD&lt;/code&gt; が設定され、Perlの変数が存在しない、それが作成されます。場合は &lt;code&gt;flags&lt;/code&gt; ゼロで、変数が存在しない、NULLが返されます。</target>
        </trans-unit>
        <trans-unit id="9142ffc1740fb05792037b696ff2b138014c5d8e" translate="yes" xml:space="preserve">
          <source>Returns the SV which corresponds to the specified key in the hash. The absolute value of &lt;code&gt;klen&lt;/code&gt; is the length of the key. If &lt;code&gt;klen&lt;/code&gt; is negative the key is assumed to be in UTF-8-encoded Unicode. If &lt;code&gt;lval&lt;/code&gt; is set then the fetch will be part of a store. This means that if there is no value in the hash associated with the given key, then one is created and a pointer to it is returned. The &lt;code&gt;SV*&lt;/code&gt; it points to can be assigned to. But always check that the return value is non-null before dereferencing it to an &lt;code&gt;SV*&lt;/code&gt; .</source>
          <target state="translated">ハッシュ内の指定されたキーに対応するSVを返します。 &lt;code&gt;klen&lt;/code&gt; の絶対値はキーの長さです。 &lt;code&gt;klen&lt;/code&gt; が負の場合、キーはUTF-8でエンコードされたUnicodeであると想定されます。場合 &lt;code&gt;lval&lt;/code&gt; 設定され、その後、フェッチは、店舗の一部となります。つまり、指定されたキーに関連付けられたハッシュに値がない場合は、値が作成され、それへのポインタが返されます。 &lt;code&gt;SV*&lt;/code&gt; 、それが指すのに割り当てることができます。ただし、戻り値が &lt;code&gt;SV*&lt;/code&gt; に逆参照される前に、戻り値がnullでないことを常に確認してください。</target>
        </trans-unit>
        <trans-unit id="a8939d4f22418ee3872f0a426602f1b7fd0de83a" translate="yes" xml:space="preserve">
          <source>Returns the Unicode (not-native) code point of the first character in the string &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; which is assumed to be in UTF-8 encoding; &lt;code&gt;&lt;a href=&quot;functions/send&quot;&gt;send&lt;/a&gt;&lt;/code&gt; points to 1 beyond the end of &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;retlen&lt;/code&gt; will be set to the length, in bytes, of that character.</source>
          <target state="translated">文字列 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; の最初の文字のUnicode（ネイティブではない）コードポイントを返します。これは、UTF-8エンコーディングであると見なされます。 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; の終わりを超えて1 &lt;code&gt;&lt;a href=&quot;functions/send&quot;&gt;send&lt;/a&gt;&lt;/code&gt; ポイントを送ります。 &lt;code&gt;retlen&lt;/code&gt; は、その文字の長さ（バイト単位）に設定されます。</target>
        </trans-unit>
        <trans-unit id="af43a95c70ff3a78c17e8ede165581061e57305f" translate="yes" xml:space="preserve">
          <source>Returns the Unicode code point of the first character in the string &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; which is assumed to be in UTF-8 encoding; &lt;code&gt;retlen&lt;/code&gt; will be set to the length, in bytes, of that character.</source>
          <target state="translated">文字列 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; の最初の文字のUnicodeコードポイントを返します。これは、UTF-8エンコーディングであると見なされます。 &lt;code&gt;retlen&lt;/code&gt; は、その文字の長さ（バイト単位）に設定されます。</target>
        </trans-unit>
        <trans-unit id="492c09171260cfe2e532067f792c91bbd4044631" translate="yes" xml:space="preserve">
          <source>Returns the Unix/Posix numeric file descriptor for the handle. Normally &lt;code&gt;PerlIOBase_fileno()&lt;/code&gt; (which just asks next layer down) will suffice for this.</source>
          <target state="translated">ハンドルのUnix / Posix数値ファイル記述子を返します。通常は、 &lt;code&gt;PerlIOBase_fileno()&lt;/code&gt; （次のレイヤーを要求するだけです）で十分です。</target>
        </trans-unit>
        <trans-unit id="278a43bcda9b8d5eb062922e0b9229cb7bea4d53" translate="yes" xml:space="preserve">
          <source>Returns the YAML text of that schema. Dies if something fails.</source>
          <target state="translated">スキーマのYAMLテキストを返します。何かが失敗した場合は終了します。</target>
        </trans-unit>
        <trans-unit id="0ea5aa9d70a1ca00f811ab40cd023520a123329d" translate="yes" xml:space="preserve">
          <source>Returns the absolute value of its argument. If VALUE is omitted, uses &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">引数の絶対値を返します。VALUEを省略すると、 &lt;code&gt;$_&lt;/code&gt; 使用します。</target>
        </trans-unit>
        <trans-unit id="b37d5915c91dfd34321e7faf69a23b4abf6310bf" translate="yes" xml:space="preserve">
          <source>Returns the actual pointer stored in the key slot of the hash entry. The pointer may be either &lt;code&gt;char*&lt;/code&gt; or &lt;code&gt;SV*&lt;/code&gt; , depending on the value of &lt;code&gt;HeKLEN()&lt;/code&gt; . Can be assigned to. The &lt;code&gt;HePV()&lt;/code&gt; or &lt;code&gt;HeSVKEY()&lt;/code&gt; macros are usually preferable for finding the value of a key.</source>
          <target state="translated">ハッシュエントリのキースロットに格納されている実際のポインタを返します。 &lt;code&gt;HeKLEN()&lt;/code&gt; の値に応じて、ポインターは &lt;code&gt;char*&lt;/code&gt; または &lt;code&gt;SV*&lt;/code&gt; いずれかになります。に割り当てることができます。 &lt;code&gt;HePV()&lt;/code&gt; または &lt;code&gt;HeSVKEY()&lt;/code&gt; マクロは、通常、キーの値を求めるために好適です。</target>
        </trans-unit>
        <trans-unit id="e5a802408c554ecadee8ec043662d1413781b7b0" translate="yes" xml:space="preserve">
          <source>Returns the address of the shared memory that has been attached to in a format suitable for use with &lt;code&gt;&lt;a href=&quot;../functions/pack&quot;&gt;pack('P')&lt;/a&gt;&lt;/code&gt;. Returns &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the shared memory has not been attached.</source>
          <target state="translated">接続されている共有メモリのアドレスを &lt;code&gt;&lt;a href=&quot;../functions/pack&quot;&gt;pack('P')&lt;/a&gt;&lt;/code&gt; での使用に適した形式で返します。共有メモリがアタッチされていない場合は、 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f4996d78af5874f47b502316ec30ad85cac81f20" translate="yes" xml:space="preserve">
          <source>Returns the adler32 value for the dictionary.</source>
          <target state="translated">辞書の adler32 の値を返します。</target>
        </trans-unit>
        <trans-unit id="8110545d8490355aa62470c7b4a8c19fede7c3aa" translate="yes" xml:space="preserve">
          <source>Returns the adler32 value for the uncompressed data to date.</source>
          <target state="translated">現在までの非圧縮データの adler32 の値を返します。</target>
        </trans-unit>
        <trans-unit id="210b877f7a2c1fe6cf54c9b7efe9eabb40ff0f65" translate="yes" xml:space="preserve">
          <source>Returns the arctangent of Y/X in the range -PI to PI.</source>
          <target state="translated">Y/Xの-PIからPIまでの範囲内で、Y/Xの三角関数を返します。</target>
        </trans-unit>
        <trans-unit id="7b87d41159fcb5d9bb46a3d4b918a53b817c2f0f" translate="yes" xml:space="preserve">
          <source>Returns the author's ID of the module.</source>
          <target state="translated">モジュールの作者のIDを返します。</target>
        </trans-unit>
        <trans-unit id="fe922d38921730375ec3bda35fa42bccb6c0d784" translate="yes" xml:space="preserve">
          <source>Returns the author's email address</source>
          <target state="translated">作者のメールアドレスを返します</target>
        </trans-unit>
        <trans-unit id="115d31cf996a7c09a0151cf631c1919d8e8d1653" translate="yes" xml:space="preserve">
          <source>Returns the author's name</source>
          <target state="translated">作者の名前を返します</target>
        </trans-unit>
        <trans-unit id="613408706936527cb8b30f75a308a36d14781eab" translate="yes" xml:space="preserve">
          <source>Returns the banner message which the server replied with when the initial connection was made.</source>
          <target state="translated">最初の接続時にサーバが返信したバナーメッセージを返します。</target>
        </trans-unit>
        <trans-unit id="71210f2e62087ea963b73d1f1d105999c2f3ec57" translate="yes" xml:space="preserve">
          <source>Returns the buffer size used to carry out the compression.</source>
          <target state="translated">圧縮の実行に使用したバッファサイズを返します。</target>
        </trans-unit>
        <trans-unit id="d32e46ff68fcb957de232438cd9bacf3b7e170ff" translate="yes" xml:space="preserve">
          <source>Returns the buffer size used to carry out the decompression.</source>
          <target state="translated">解凍に使用したバッファサイズを返します。</target>
        </trans-unit>
        <trans-unit id="3895d01f81623a76c7e95e3e633d7d4cd48a45ef" translate="yes" xml:space="preserve">
          <source>Returns the casefolded version of EXPR. This is the internal function implementing the &lt;code&gt;\F&lt;/code&gt; escape in double-quoted strings.</source>
          <target state="translated">EXPRのケースフォールドバージョンを返します。これは、二重引用符で囲まれた文字列で &lt;code&gt;\F&lt;/code&gt; エスケープを実装する内部関数です。</target>
        </trans-unit>
        <trans-unit id="7478bfde85132ab5287293ffbe4f80921537ea44" translate="yes" xml:space="preserve">
          <source>Returns the character represented by that NUMBER in the character set. For example, &lt;code&gt;&lt;a href=&quot;chr&quot;&gt;chr(65)&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&quot;A&quot;&lt;/code&gt; in either ASCII or Unicode, and chr(0x263a) is a Unicode smiley face.</source>
          <target state="translated">文字セットでそのNUMBERによって表される文字を返します。たとえば、 &lt;code&gt;&lt;a href=&quot;chr&quot;&gt;chr(65)&lt;/a&gt;&lt;/code&gt; はASCIIまたはUnicodeのいずれかで &lt;code&gt;&quot;A&quot;&lt;/code&gt; であり、chr（0x263a）はUnicodeスマイリーフェイスです。</target>
        </trans-unit>
        <trans-unit id="cbc33cdff6a32e384af7664e0f3e3d792d382300" translate="yes" xml:space="preserve">
          <source>Returns the character represented by that NUMBER in the character set. For example, &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr(65)&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&quot;A&quot;&lt;/code&gt; in either ASCII or Unicode, and chr(0x263a) is a Unicode smiley face.</source>
          <target state="translated">文字セットでそのNUMBERによって表される文字を返します。たとえば、 &lt;code&gt;&lt;a href=&quot;functions/chr&quot;&gt;chr(65)&lt;/a&gt;&lt;/code&gt; はASCIIまたはUnicodeのいずれかで &lt;code&gt;&quot;A&quot;&lt;/code&gt; であり、chr（0x263a）はUnicodeスマイリーフェイスです。</target>
        </trans-unit>
        <trans-unit id="eb199f5090a474ebe28f0646c2b3618d0563582d" translate="yes" xml:space="preserve">
          <source>Returns the character used for quoting strings on this platform. This is usually a &lt;code&gt;'&lt;/code&gt; (single quote) on most systems, but some systems use different quotes. For example, &lt;code&gt;Win32&lt;/code&gt; uses &lt;code&gt;&quot;&lt;/code&gt; (double quote).</source>
          <target state="translated">このプラットフォームで文字列を引用するために使用される文字を返します。これは通常、ほとんどのシステムで &lt;code&gt;'&lt;/code&gt; （単一引用符）ですが、一部のシステムでは異なる引用符を使用しています。たとえば、 &lt;code&gt;Win32&lt;/code&gt; は &lt;code&gt;&quot;&lt;/code&gt; （二重引用符）を使用します。</target>
        </trans-unit>
        <trans-unit id="e8448bf8848e22ad03564ea6713f1239f54e36c4" translate="yes" xml:space="preserve">
          <source>Returns the class of an object without the part of the classname preceding the first &lt;code&gt;&quot;::&quot;&lt;/code&gt; . This is used to turn &lt;code&gt;&quot;B::UNOP&quot;&lt;/code&gt; into &lt;code&gt;&quot;UNOP&quot;&lt;/code&gt; for example.</source>
          <target state="translated">最初の &lt;code&gt;&quot;::&quot;&lt;/code&gt; の前にクラス名の部分がないオブジェクトのクラスを返します。これは、たとえば &lt;code&gt;&quot;B::UNOP&quot;&lt;/code&gt; を &lt;code&gt;&quot;UNOP&quot;&lt;/code&gt; に変換するために使用されます。</target>
        </trans-unit>
        <trans-unit id="5264dd1dc2780bd589669333fc619e8c145ba657" translate="yes" xml:space="preserve">
          <source>Returns the clean_subdirs target. This is used by the clean target to call clean on any subdirectories which contain Makefiles.</source>
          <target state="translated">clean_subdirs ターゲットを返します。これは clean ターゲットが Makefiles を含むサブディレクトリに対して clean をコールする際に使用します。</target>
        </trans-unit>
        <trans-unit id="a40f04f61ed94ea46c22a5564f81aa3af8cee02e" translate="yes" xml:space="preserve">
          <source>Returns the compile date (as a string), equivalent to what is shown by &lt;code&gt;perl -V&lt;/code&gt;</source>
          <target state="translated">コンパイル日付を（文字列として）返します。これは、 &lt;code&gt;perl -V&lt;/code&gt; で表示されるものと同等です。</target>
        </trans-unit>
        <trans-unit id="ca2b3208f58937ac730f25a7f1621ad213d12d3e" translate="yes" xml:space="preserve">
          <source>Returns the compression level being used.</source>
          <target state="translated">使用している圧縮レベルを返します。</target>
        </trans-unit>
        <trans-unit id="296dffd4d83e098002d0989a035a14f44c5be0b6" translate="yes" xml:space="preserve">
          <source>Returns the computed hash stored in the hash entry.</source>
          <target state="translated">ハッシュエントリに格納されている計算されたハッシュを返します。</target>
        </trans-unit>
        <trans-unit id="bd4543cfbb9431e0ed34c31843d7ee80a71eeab2" translate="yes" xml:space="preserve">
          <source>Returns the concatenation of all the values returned by the &lt;code&gt;BLOCK&lt;/code&gt; in list context, or the count of the number of items that would have been returned in scalar context.</source>
          <target state="translated">リストコンテキストの &lt;code&gt;BLOCK&lt;/code&gt; によって返されるすべての値の連結、またはスカラーコンテキストで返されるはずだったアイテムの数のカウントを返します。</target>
        </trans-unit>
        <trans-unit id="7697306fa0a13e73fa40eca03fcc22eef02b04a2" translate="yes" xml:space="preserve">
          <source>Returns the content of the META.yml of this distro as a hashref. Note: works only after an attempt has been made to &lt;code&gt;make&lt;/code&gt; the distribution. Returns undef otherwise. Also returns undef if the content of META.yml is not authoritative. (The rules about what exactly makes the content authoritative are still in flux.)</source>
          <target state="translated">このディストリビューションのMETA.ymlのコンテンツをハッシュリファレンスとして返します。注：試みがするためになされた後にのみ機能します &lt;code&gt;make&lt;/code&gt; 分布を。それ以外の場合はundefを返します。META.ymlの内容が信頼できない場合も、undefを返します。（正確にコンテンツを信頼できるものにするルールについては、まだ流動的です。）</target>
        </trans-unit>
        <trans-unit id="9b35a2fe131e688b9db1d3591f5dcf2a62f9e796" translate="yes" xml:space="preserve">
          <source>Returns the contents of $ENV{TMPDIR}, if that directory exits or the current working directory otherwise. Under MacPerl, $ENV{TMPDIR} will contain a path like &quot;MacintoshHD:Temporary Items:&quot;, which is a hidden directory on your startup volume.</source>
          <target state="translated">ENV{TMPDIR}の内容を、そのディレクトリが終了した場合はその内容を、そうでない場合はカレントの作業ディレクトリを返します。MacPerl では、$ENV{TMPDIR}には &quot;MacintoshHD:Temporary Items:&quot; のようなパスが含まれています。</target>
        </trans-unit>
        <trans-unit id="0f161ded5c89a2f214ab3c554c29c2cf54cc25f0" translate="yes" xml:space="preserve">
          <source>Returns the contents of a named buffer of the last successful match. If $all is true, then returns an array ref containing one entry per buffer, otherwise returns the first defined buffer.</source>
          <target state="translated">最後にマッチに成功したときの名前付きバッファの内容を返します。all が真の場合は、バッファごとにひとつのエントリを含む配列 ref を返し、そうでない場合は最初に定義されたバッファを返します。</target>
        </trans-unit>
        <trans-unit id="c481d635318d5270129f3710fa2b63e432d0469d" translate="yes" xml:space="preserve">
          <source>Returns the context of the current pure perl subroutine call. In scalar context, returns the caller's package name if there</source>
          <target state="translated">現在の純粋なPerlサブルーチンコールのコンテキストを返します。スカラコンテキストでは、呼び出し元のパッケージ名を返します。</target>
        </trans-unit>
        <trans-unit id="629a1bf5ae31e2428f6761a91af5e45898a92a1d" translate="yes" xml:space="preserve">
          <source>Returns the cosine of EXPR (expressed in radians). If EXPR is omitted, takes the cosine of &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">EXPRの余弦（ラジアンで表示）を返します。EXPRが省略されている場合は、 &lt;code&gt;$_&lt;/code&gt; コサインを取ります。</target>
        </trans-unit>
        <trans-unit id="382366cbd1645fc7a8be88934fd05350c798da6f" translate="yes" xml:space="preserve">
          <source>Returns the crc32 value for the uncompressed data to date.</source>
          <target state="translated">現在までの非圧縮データの crc32 の値を返します。</target>
        </trans-unit>
        <trans-unit id="96ae9c4a96664dc70dd7bd85d43ba95afc713573" translate="yes" xml:space="preserve">
          <source>Returns the current &lt;code&gt;cutting&lt;/code&gt; state: a boolean-valued scalar which evaluates to true if text from the input file is currently being &quot;cut&quot; (meaning it is</source>
          <target state="translated">現在の &lt;code&gt;cutting&lt;/code&gt; 状態を返します：入力ファイルからのテキストが現在「切り取られている」場合にtrueと評価されるブール値スカラー（つまり</target>
        </trans-unit>
        <trans-unit id="cd1a14517cc73ee3846bc96e07fa9fecd6234b97" translate="yes" xml:space="preserve">
          <source>Returns the current accuracy. For &lt;code&gt;$x-&amp;gt;accuracy()&lt;/code&gt; it will return either the local accuracy, or if not defined, the global. This means the return value represents the accuracy that will be in effect for $x:</source>
          <target state="translated">現在の精度を返します。以下のために &lt;code&gt;$x-&amp;gt;accuracy()&lt;/code&gt; それは地元の精度、または定義されていない場合は、グローバルのいずれかを返します。これは、戻り値が$ xに有効な精度を表すことを意味します。</target>
        </trans-unit>
        <trans-unit id="9ab41cff2a71d5df164ca2f4fc69050a70621047" translate="yes" xml:space="preserve">
          <source>Returns the current content for the in-memory file</source>
          <target state="translated">メモリ内ファイルの現在の内容を返します。</target>
        </trans-unit>
        <trans-unit id="810f5973b59e7cdd5b0d52b6480f5843daebe730" translate="yes" xml:space="preserve">
          <source>Returns the current content for the in-memory file as a scalar reference. Normal users won't need this, but it will save memory if you are dealing with very large data files in your tar archive, since it will pass the contents by reference, rather than make a copy of it first.</source>
          <target state="translated">メモリ内ファイルの現在の内容をスカラー参照として返します。通常のユーザはこれを必要としませんが、非常に大きなデータファイルを tar アーカイブで扱う場合には、最初にコピーを作成するのではなく、内容を参照して渡すので、メモリを節約することができます。</target>
        </trans-unit>
        <trans-unit id="f977f32eb061f0a71d6ca2651f96525fc6d9a70e" translate="yes" xml:space="preserve">
          <source>Returns the current debugging flag for &lt;code&gt;walkoptree&lt;/code&gt; . If the optional DEBUG argument is non-zero, it sets the debugging flag to that. See the description of &lt;code&gt;walkoptree&lt;/code&gt; above for what the debugging flag does.</source>
          <target state="translated">&lt;code&gt;walkoptree&lt;/code&gt; の現在のデバッグフラグを返します。オプションのDEBUG引数がゼロ以外の場合は、デバッグフラグをそれに設定します。デバッグフラグの機能については、上の &lt;code&gt;walkoptree&lt;/code&gt; の説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="401aa41391125b7bdfa5659f72078a7692f72646" translate="yes" xml:space="preserve">
          <source>Returns the current default per-thread stack size. The default is zero, which means the system default stack size is currently in use.</source>
          <target state="translated">現在のデフォルトのスレッドごとのスタックサイズを返します。デフォルトはゼロで、システムのデフォルトのスタックサイズが現在使用されていることを意味します。</target>
        </trans-unit>
        <trans-unit id="2be9304f6344655b4c4dd53810f18f19259018ba" translate="yes" xml:space="preserve">
          <source>Returns the current error string (usually, the last error reported). If a true value was specified, it will give the &lt;code&gt;Carp::longmess&lt;/code&gt; equivalent of the error, in effect giving you a stacktrace.</source>
          <target state="translated">現在のエラー文字列（通常、最後に報告されたエラー）を返します。真の値が指定された場合、 &lt;code&gt;Carp::longmess&lt;/code&gt; と同等のエラーが発生し、事実上スタックトレースが提供されます。</target>
        </trans-unit>
        <trans-unit id="2ec8302516eca5089fb22e9dc7a8a81e81cc5479" translate="yes" xml:space="preserve">
          <source>Returns the current filename and line number for the interior sequence object. If called in a list context, it returns a list of two elements: first the filename, then the line number. If called in a scalar context, it returns a string containing the filename, followed by a colon (':'), followed by the line number.</source>
          <target state="translated">内部シーケンスオブジェクトの現在のファイル名と行番号を返します。リストコンテキストで呼ばれた場合は、2 つの要素からなるリストを返します。スカラコンテキストで呼ばれた場合は、ファイル名の後にコロン(':')を続けて、その後に行番号を含む文字列を返します。</target>
        </trans-unit>
        <trans-unit id="37b6eeba52eff8f31c174b55de2a528ba7738f6f" translate="yes" xml:space="preserve">
          <source>Returns the current filename and line number for the paragraph object. If called in a list context, it returns a list of two elements: first the filename, then the line number. If called in a scalar context, it returns a string containing the filename, followed by a colon (':'), followed by the line number.</source>
          <target state="translated">段落オブジェクトの現在のファイル名と行番号を返します。リストコンテキストで呼び出された場合は、2つの要素のリストを返します。スカラコンテキストで呼び出された場合は、ファイル名の後にコロン (':')を続けて、その後に行番号を含む文字列を返します。</target>
        </trans-unit>
        <trans-unit id="301b27c4f96019f2f8c4ae36f6c0daa0acd40fa1" translate="yes" xml:space="preserve">
          <source>Returns the current floating point rounding mode, one of</source>
          <target state="translated">現在の浮動小数点丸めモードを返します。</target>
        </trans-unit>
        <trans-unit id="f0387df63a5b00558cfcef9815f10187b319abcf" translate="yes" xml:space="preserve">
          <source>Returns the current input filehandle object.</source>
          <target state="translated">現在の入力ファイルハンドルオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="389d6746fc95646c0fcea387d7243321ece3de32" translate="yes" xml:space="preserve">
          <source>Returns the current position</source>
          <target state="translated">現在の位置を返します。</target>
        </trans-unit>
        <trans-unit id="b39864a44dcc985b087ce0a4132e9be9ba1df0dc" translate="yes" xml:space="preserve">
          <source>Returns the current position of the &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; routines on DIRHANDLE. Value may be given to &lt;code&gt;&lt;a href=&quot;functions/seekdir&quot;&gt;seekdir&lt;/a&gt;&lt;/code&gt; to access a particular location in a directory. &lt;code&gt;&lt;a href=&quot;functions/telldir&quot;&gt;telldir&lt;/a&gt;&lt;/code&gt; has the same caveats about possible directory compaction as the corresponding system library routine.</source>
          <target state="translated">DIRHANDLE上の &lt;code&gt;&lt;a href=&quot;functions/readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; ルーチンの現在の位置を返します。 &lt;code&gt;&lt;a href=&quot;functions/seekdir&quot;&gt;seekdir&lt;/a&gt;&lt;/code&gt; に値を指定して、ディレクトリ内の特定の場所にアクセスできます。 &lt;code&gt;&lt;a href=&quot;functions/telldir&quot;&gt;telldir&lt;/a&gt;&lt;/code&gt; には、対応するシステムライブラリルーチンと同じように、可能なディレクトリ圧縮についての警告があります。</target>
        </trans-unit>
        <trans-unit id="7222e4c7a3a8ced2fa61913ad73cf5ff5a8ea68c" translate="yes" xml:space="preserve">
          <source>Returns the current position of the &lt;code&gt;&lt;a href=&quot;readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; routines on DIRHANDLE. Value may be given to &lt;code&gt;&lt;a href=&quot;seekdir&quot;&gt;seekdir&lt;/a&gt;&lt;/code&gt; to access a particular location in a directory. &lt;code&gt;&lt;a href=&quot;telldir&quot;&gt;telldir&lt;/a&gt;&lt;/code&gt; has the same caveats about possible directory compaction as the corresponding system library routine.</source>
          <target state="translated">DIRHANDLE上の &lt;code&gt;&lt;a href=&quot;readdir&quot;&gt;readdir&lt;/a&gt;&lt;/code&gt; ルーチンの現在の位置を返します。 &lt;code&gt;&lt;a href=&quot;seekdir&quot;&gt;seekdir&lt;/a&gt;&lt;/code&gt; に値を指定して、ディレクトリ内の特定の場所にアクセスできます。 &lt;code&gt;&lt;a href=&quot;telldir&quot;&gt;telldir&lt;/a&gt;&lt;/code&gt; には、対応するシステムライブラリルーチンと同じように、可能なディレクトリ圧縮についての警告があります。</target>
        </trans-unit>
        <trans-unit id="c58b4b7839bacdcd78f0ce8300cc1cdc9e5b82f1" translate="yes" xml:space="preserve">
          <source>Returns the current precision. For &lt;code&gt;$x-&amp;gt;precision()&lt;/code&gt; it will return either the local precision of $x, or if not defined, the global. This means the return value represents the prevision that will be in effect for $x:</source>
          <target state="translated">現在の精度を返します。以下のために &lt;code&gt;$x-&amp;gt;precision()&lt;/code&gt; それは$ xの局所的な精度、または定義されていない場合は、グローバルのいずれかを返します。これは、戻り値が$ xに対して有効になる規定を表すことを意味します。</target>
        </trans-unit>
        <trans-unit id="2c348d2f127bac6601e5a42a0e120902e638767c" translate="yes" xml:space="preserve">
          <source>Returns the current priority for a process, a process group, or a user. (See</source>
          <target state="translated">プロセス、プロセスグループ、またはユーザーの現在の優先度を返します。(</target>
        </trans-unit>
        <trans-unit id="e25edb437e0678c7aed490d4fa1cade2a3a6bb2f" translate="yes" xml:space="preserve">
          <source>Returns the current process group for the specified PID. Use a PID of &lt;code&gt;0&lt;/code&gt; to get the current process group for the current process. Will raise an exception if used on a machine that doesn't implement getpgrp(2). If PID is omitted, returns the process group of the current process. Note that the POSIX version of &lt;code&gt;&lt;a href=&quot;functions/getpgrp&quot;&gt;getpgrp&lt;/a&gt;&lt;/code&gt; does not accept a PID argument, so only &lt;code&gt;PID==0&lt;/code&gt; is truly portable.</source>
          <target state="translated">指定されたPIDの現在のプロセスグループを返します。PID &lt;code&gt;0&lt;/code&gt; を使用して、現在のプロセスの現在のプロセスグループを取得します。getpgrp（2）を実装していないマシンで使用すると、例外が発生します。PIDを省略すると、現在のプロセスのプロセスグループを返します。 &lt;code&gt;&lt;a href=&quot;functions/getpgrp&quot;&gt;getpgrp&lt;/a&gt;&lt;/code&gt; のPOSIXバージョンはPID引数を受け入れないため、 &lt;code&gt;PID==0&lt;/code&gt; のみが完全に移植可能であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="19cbb236442174d3d328d82505adcc3440a6be36" translate="yes" xml:space="preserve">
          <source>Returns the current process group for the specified PID. Use a PID of &lt;code&gt;0&lt;/code&gt; to get the current process group for the current process. Will raise an exception if used on a machine that doesn't implement getpgrp(2). If PID is omitted, returns the process group of the current process. Note that the POSIX version of &lt;code&gt;&lt;a href=&quot;getpgrp&quot;&gt;getpgrp&lt;/a&gt;&lt;/code&gt; does not accept a PID argument, so only &lt;code&gt;PID==0&lt;/code&gt; is truly portable.</source>
          <target state="translated">指定されたPIDの現在のプロセスグループを返します。PID &lt;code&gt;0&lt;/code&gt; を使用して、現在のプロセスの現在のプロセスグループを取得します。getpgrp（2）を実装していないマシンで使用すると、例外が発生します。PIDを省略すると、現在のプロセスのプロセスグループを返します。 &lt;code&gt;&lt;a href=&quot;getpgrp&quot;&gt;getpgrp&lt;/a&gt;&lt;/code&gt; のPOSIXバージョンはPID引数を受け入れないため、 &lt;code&gt;PID==0&lt;/code&gt; のみが完全に移植可能であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="fc91437897d6caaf074aaf310cc8b71a9efba0ef" translate="yes" xml:space="preserve">
          <source>Returns the current time. Example:</source>
          <target state="translated">現在の時刻を返します。例。</target>
        </trans-unit>
        <trans-unit id="568b25d7cd87cbaf6286b8da7e742768573264ff" translate="yes" xml:space="preserve">
          <source>Returns the current uncompressed line number. If &lt;code&gt;EXPR&lt;/code&gt; is present it has the effect of setting the line number. Note that setting the line number does not change the current position within the file/buffer being read.</source>
          <target state="translated">現在の非圧縮行番号を返します。 &lt;code&gt;EXPR&lt;/code&gt; が存在する場合、行番号を設定する効果があります。行番号を設定しても、読み取られるファイル/バッファ内の現在の位置は変更されないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="1c7ca6c3d06ba8c8f091422f3579921b1ba88d59" translate="yes" xml:space="preserve">
          <source>Returns the current value of the semaphore &lt;code&gt;SEM&lt;/code&gt; .</source>
          <target state="translated">セマフォ &lt;code&gt;SEM&lt;/code&gt; の現在の値を返します。</target>
        </trans-unit>
        <trans-unit id="fbc79b8bcff16613d3bb8b47a656313f95474a39" translate="yes" xml:space="preserve">
          <source>Returns the current version of state storage.</source>
          <target state="translated">状態保存の現在のバージョンを返します。</target>
        </trans-unit>
        <trans-unit id="7c44a2f225c0656c4984e0204b4d9b37b2725674" translate="yes" xml:space="preserve">
          <source>Returns the current working directory.</source>
          <target state="translated">カレントの作業ディレクトリを返します。</target>
        </trans-unit>
        <trans-unit id="6e49c468b58f004c51887df11de2e77395328246" translate="yes" xml:space="preserve">
          <source>Returns the currently selected filehandle. If FILEHANDLE is supplied, sets the new current default filehandle for output. This has two effects: first, a &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; or a &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; without a filehandle default to this FILEHANDLE. Second, references to variables related to output will refer to this output channel.</source>
          <target state="translated">現在選択されているファイルハンドルを返します。FILEHANDLEが指定されている場合、出力用に新しい現在のデフォルトのファイルハンドルを設定します。これには2つの影響があります。1つ目は、このFILEHANDLEへのデフォルトのファイルハンドルなしの &lt;code&gt;&lt;a href=&quot;functions/write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; です。次に、出力に関連する変数への参照は、この出力チャネルを参照します。</target>
        </trans-unit>
        <trans-unit id="5002587273ce83892d07569c520d1d13bbd5a0a5" translate="yes" xml:space="preserve">
          <source>Returns the currently selected filehandle. If FILEHANDLE is supplied, sets the new current default filehandle for output. This has two effects: first, a &lt;code&gt;&lt;a href=&quot;write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; or a &lt;code&gt;&lt;a href=&quot;print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; without a filehandle default to this FILEHANDLE. Second, references to variables related to output will refer to this output channel.</source>
          <target state="translated">現在選択されているファイルハンドルを返します。FILEHANDLEが指定されている場合、出力用に新しい現在のデフォルトのファイルハンドルを設定します。これには2つの影響があります。1つ目は、このFILEHANDLEへのデフォルトのファイルハンドルなしの &lt;code&gt;&lt;a href=&quot;write&quot;&gt;write&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; です。次に、出力に関連する変数への参照は、この出力チャネルを参照します。</target>
        </trans-unit>
        <trans-unit id="5923554a461f2216ab02bd2082e338016fb58ae3" translate="yes" xml:space="preserve">
          <source>Returns the data which MakeMaker turns into the META.yml file and the META.json file.</source>
          <target state="translated">MakeMakerがMETA.ymlファイルとMETA.jsonファイルに変換したデータを返します。</target>
        </trans-unit>
        <trans-unit id="cf3ebec2434ff5cdedd394ac444cf5c4ec8d5c9e" translate="yes" xml:space="preserve">
          <source>Returns the data, if any, that is present immediately after the compressed data stream once uncompression is complete.</source>
          <target state="translated">圧縮解除が完了した後、圧縮されたデータストリームの直後に存在するデータがあればそれを返します。</target>
        </trans-unit>
        <trans-unit id="5867cb1e4587fc25d5eb63cdf9e0c49bdd800916" translate="yes" xml:space="preserve">
          <source>Returns the data, if any, that is present immediately after the compressed data stream once uncompression is complete. It only makes sense to call this method once the end of the compressed data stream has been encountered.</source>
          <target state="translated">圧縮解除が完了すると、圧縮データストリームの直後に存在するデータを返します。このメソッドを呼び出すのは、圧縮されたデータストリームの終わりに遭遇した場合にのみ意味があります。</target>
        </trans-unit>
        <trans-unit id="ca7ad4546f41d5baf4a4566eb474c608964d4b90" translate="yes" xml:space="preserve">
          <source>Returns the date on the remote server. This date will be in a UNIX time format (seconds since 1970)</source>
          <target state="translated">リモートサーバ上の日付を返します。この日付は、UNIX 時間形式 (1970 年以降の秒数)になります。</target>
        </trans-unit>
        <trans-unit id="62e3785ee4c58ec99d1c8581fa7c9d36014742ac" translate="yes" xml:space="preserve">
          <source>Returns the deflation strategy currently used. Valid values are &lt;code&gt;Z_DEFAULT_STRATEGY&lt;/code&gt; , &lt;code&gt;Z_FILTERED&lt;/code&gt; and &lt;code&gt;Z_HUFFMAN_ONLY&lt;/code&gt; .</source>
          <target state="translated">現在使用されているデフレ戦略を返します。有効な値は &lt;code&gt;Z_DEFAULT_STRATEGY&lt;/code&gt; 、 &lt;code&gt;Z_FILTERED&lt;/code&gt; 、および &lt;code&gt;Z_HUFFMAN_ONLY&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b74cd04d7eeb4c72216a4982acc93abc4513fc13" translate="yes" xml:space="preserve">
          <source>Returns the description of the test, if any. This is the portion after the test number but before the directive.</source>
          <target state="translated">テストの説明があればそれを返します。これは、テスト番号の後で、ディレクティブの前の部分です。</target>
        </trans-unit>
        <trans-unit id="e4e6b2be83f8d33a5aa3a2fee1a42645a4ebc110" translate="yes" xml:space="preserve">
          <source>Returns the difference between two Benchmark times as a Benchmark object suitable for passing to timestr().</source>
          <target state="translated">2つのBenchmark時間の差を、timestr()に渡すのに適したBenchmarkオブジェクトとして返します。</target>
        </trans-unit>
        <trans-unit id="61b2fdc67d2ca33f1adf62666ddf8117fae5cdd2" translate="yes" xml:space="preserve">
          <source>Returns the different types of tokens which this grammar can parse.</source>
          <target state="translated">この文法が解析できるトークンの種類を返します。</target>
        </trans-unit>
        <trans-unit id="990db58c7885c866cc62a909fe1fd15ee853afe2" translate="yes" xml:space="preserve">
          <source>Returns the digest algorithm for this object. The values are 1, 224, 256, 384, 512, 512224, and 512256 for SHA-1, SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, and SHA-512/256, respectively.</source>
          <target state="translated">このオブジェクトのダイジェストアルゴリズムを返します。値は、SHA-1、SHA-224、SHA-256、384、512、512224、512256で、SHA-1、SHA-224、SHA-256、SHA-256、SHA-384、SHA-512、SHA-512、SHA-512/224、SHA-512/256はそれぞれ1、224、256、384、512、512、512256となります。</target>
        </trans-unit>
        <trans-unit id="8f298412e0fd4c8b924547738fa518215dbcf58f" translate="yes" xml:space="preserve">
          <source>Returns the digest encoded as a Base64 string.</source>
          <target state="translated">Base64文字列としてエンコードされたダイジェストを返します。</target>
        </trans-unit>
        <trans-unit id="8dadd7fd9276d3f1c746af1004060c45b877ab3e" translate="yes" xml:space="preserve">
          <source>Returns the digest encoded as a binary string.</source>
          <target state="translated">バイナリ文字列としてエンコードされたダイジェストを返します。</target>
        </trans-unit>
        <trans-unit id="b4edd4a2c8a97d7fda881271014c00cf593e6ffb" translate="yes" xml:space="preserve">
          <source>Returns the digest encoded as a hexadecimal string.</source>
          <target state="translated">16進数文字列としてエンコードされたダイジェストを返します。</target>
        </trans-unit>
        <trans-unit id="0daf1408abc93979de94874fb4786c860c8907d9" translate="yes" xml:space="preserve">
          <source>Returns the directory into which this distribution has been unpacked.</source>
          <target state="translated">このディストリビューションが展開されたディレクトリを返します。</target>
        </trans-unit>
        <trans-unit id="41f80c4d8a32cca7a61a2ef98ffcd3073a4d2a68" translate="yes" xml:space="preserve">
          <source>Returns the distribution filename without any archive suffix. E.g &quot;Foo-Bar-0.01&quot;</source>
          <target state="translated">アーカイブのサフィックスを含まないディストリビューションのファイル名を返します。例:&quot;Foo-Bar-0.01&quot;</target>
        </trans-unit>
        <trans-unit id="2855fccbb327c40b86c61f3ed950206a083798e7" translate="yes" xml:space="preserve">
          <source>Returns the domain that the remote SMTP server identified itself as during connection.</source>
          <target state="translated">接続中にリモートSMTPサーバーが自分自身を識別したドメインを返します。</target>
        </trans-unit>
        <trans-unit id="16c36120af9460aec3cc2b1903075909c2d71c5a" translate="yes" xml:space="preserve">
          <source>Returns the dump of a single scalar without printing. If the second argument is true, the return value does not contain enclosing ticks. Does not handle data structures.</source>
          <target state="translated">印刷せずに1つのスカラのダンプを返します。第2引数が真の場合、戻り値には囲み目盛りは含まれません。データ構造は扱いません。</target>
        </trans-unit>
        <trans-unit id="11b578378f3d405a2621ca9e3ecbd469fe7be940" translate="yes" xml:space="preserve">
          <source>Returns the effective group identifier. Similar to Perl' s builtin variable &lt;code&gt;$(&lt;/code&gt; , see &lt;a href=&quot;perlvar#%24EGID&quot;&gt;$EGID in perlvar&lt;/a&gt;.</source>
          <target state="translated">実効グループ識別子を返します。Perlの組み込み変数 &lt;code&gt;$(&lt;/code&gt; &lt;a href=&quot;perlvar#%24EGID&quot;&gt;に似てい&lt;/a&gt;ます。perlvarの$ EGIDを参照してください。</target>
        </trans-unit>
        <trans-unit id="fbf9d9242d7f4a649796a00a1ff9152de5e8ccba" translate="yes" xml:space="preserve">
          <source>Returns the effective name of a stash, or NULL if there is none. The effective name represents a location in the symbol table where this stash resides. It is updated automatically when packages are aliased or deleted. A stash that is no longer in the symbol table has no effective name. This name is preferable to &lt;code&gt;HvNAME&lt;/code&gt; for use in MRO linearisations and isa caches.</source>
          <target state="translated">stashの実効名を返します。存在しない場合はNULLを返します。実効名は、このスタッシュが存在するシンボルテーブル内の場所を表します。パッケージがエイリアス化または削除されると、自動的に更新されます。シンボルテーブルに存在しないスタッシュには、有効な名前がありません。この名前は、MRO線形化およびisaキャッシュで使用するために &lt;code&gt;HvNAME&lt;/code&gt; よりも望ましいです。</target>
        </trans-unit>
        <trans-unit id="f056d864c5d30d613c81021e2a25b1b55f0fa9d1" translate="yes" xml:space="preserve">
          <source>Returns the effective user identifier. Identical to Perl's builtin &lt;code&gt;$&amp;gt;&lt;/code&gt; variable, see &lt;a href=&quot;perlvar#%24EUID&quot;&gt;$EUID in perlvar&lt;/a&gt;.</source>
          <target state="translated">有効なユーザー識別子を返します。Perlの組み込み &lt;code&gt;$&amp;gt;&lt;/code&gt; 変数と同じです&lt;a href=&quot;perlvar#%24EUID&quot;&gt;。perlvarの$ EUIDを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9a42512df26a9af0a5e28e5981d42b330a2edfe3" translate="yes" xml:space="preserve">
          <source>Returns the entire perl configuration information in the form of the original config.sh shell variable assignment script.</source>
          <target state="translated">perlの設定情報全体を、元のconfig.shシェル変数割り当てスクリプトの形で返します。</target>
        </trans-unit>
        <trans-unit id="eb4161e2e62196817c55ca3f4eabde933f4a749f" translate="yes" xml:space="preserve">
          <source>Returns the entry in the list with the highest numerical value. If the list is empty then &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">数値が最も大きいリストのエントリを返します。リストが空の場合、 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="cee51cb3c3a1af36e40de4701691c54500f8a276" translate="yes" xml:space="preserve">
          <source>Returns the error string for the specified errno. Identical to the string form of &lt;code&gt;$!&lt;/code&gt; , see &lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;$ERRNO in perlvar&lt;/a&gt;.</source>
          <target state="translated">指定されたerrnoのエラー文字列を返します。 &lt;code&gt;$!&lt;/code&gt; の文字列形式と同じです。、&lt;a href=&quot;perlvar#%24ERRNO&quot;&gt;perlvarの$ ERRNOを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="861a7bd187e44e76e3ebbe4819b8629ad50b3874" translate="yes" xml:space="preserve">
          <source>Returns the event mask which represents the events that happened on IO during the last call to &lt;code&gt;poll&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;poll&lt;/code&gt; への最後の呼び出し中にIOで発生したイベントを表すイベントマスクを返します。</target>
        </trans-unit>
        <trans-unit id="842c516cf6fbbca8413e030f19ccfea2ece85184" translate="yes" xml:space="preserve">
          <source>Returns the file descriptor for a filehandle, or undefined if the filehandle is not open. If there is no real file descriptor at the OS level, as can happen with filehandles connected to memory objects via &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; with a reference for the third argument, -1 is returned.</source>
          <target state="translated">ファイルハンドルのファイル記述子を返します。ファイルハンドルが開いていない場合はundefinedを返します。OSレベルで実際のファイル記述子がない場合、 &lt;code&gt;&lt;a href=&quot;functions/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; を介してメモリオブジェクトに接続されたファイルハンドルが3番目の引数の参照で発生する可能性があるため、-1が返されます。</target>
        </trans-unit>
        <trans-unit id="b8e4620189d1043104facd9f1d5508657352dac3" translate="yes" xml:space="preserve">
          <source>Returns the file descriptor for a filehandle, or undefined if the filehandle is not open. If there is no real file descriptor at the OS level, as can happen with filehandles connected to memory objects via &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; with a reference for the third argument, -1 is returned.</source>
          <target state="translated">ファイルハンドルのファイル記述子を返します。ファイルハンドルが開いていない場合はundefinedを返します。OSレベルで実際のファイル記述子がない場合、 &lt;code&gt;&lt;a href=&quot;open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; を介してメモリオブジェクトに接続されたファイルハンドルが3番目の引数の参照で発生する可能性があるため、-1が返されます。</target>
        </trans-unit>
        <trans-unit id="c1461c62fed9d2cb70b8885542758d1fd2ef17b9" translate="yes" xml:space="preserve">
          <source>Returns the file descriptor for the underlying database.</source>
          <target state="translated">データベースのファイルディスクリプタを返します。</target>
        </trans-unit>
        <trans-unit id="e8f20adcdf09867985f35137ad55c8f1eba6e594" translate="yes" xml:space="preserve">
          <source>Returns the filehandle of a temporary file.</source>
          <target state="translated">一時ファイルのファイルハンドルを返します。</target>
        </trans-unit>
        <trans-unit id="06f70c27b3badc241e28918c68390d5fe9f8cb0f" translate="yes" xml:space="preserve">
          <source>Returns the filename of the module found in @INC. The first file found is reported, just as perl itself stops searching @INC once it finds a module.</source>
          <target state="translated">INCで見つかったモジュールのファイル名を返します。perl自身がモジュールを見つけると@INCの検索を停止するのと同じように、最初に見つかったファイルが報告されます。</target>
        </trans-unit>
        <trans-unit id="eead9a74f584bf3fccdf0480645642eb840ae88b" translate="yes" xml:space="preserve">
          <source>Returns the filename of the module found in PERL5LIB or @INC. The first file found is reported. The advantage of this method over &lt;code&gt;inst_file&lt;/code&gt; is that modules that have been tested but not yet installed are included because PERL5LIB keeps track of tested modules.</source>
          <target state="translated">PERL5LIBまたは@INCで見つかったモジュールのファイル名を返します。最初に見つかったファイルが報告されます。 &lt;code&gt;inst_file&lt;/code&gt; に対するこの方法の利点は、PERL5LIBがテスト済みのモジュールを追跡するため、テスト済みでまだインストールされていないモジュールが含まれることです。</target>
        </trans-unit>
        <trans-unit id="c169b09baf652910c9137b2f8cd5dd0d184cfb4b" translate="yes" xml:space="preserve">
          <source>Returns the filename on CPAN that is associated with the module.</source>
          <target state="translated">モジュールに関連付けられたCPAN上のファイル名を返します。</target>
        </trans-unit>
        <trans-unit id="d4625aaf28660b9b639231ba5f0970428e37caf7" translate="yes" xml:space="preserve">
          <source>Returns the first PERL_VERSION where the MODULE was marked as deprecated. Returns &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the MODULE has not been marked as deprecated.</source>
          <target state="translated">MODULEが非推奨としてマークされた最初のPERL_VERSIONを返します。MODULEが非推奨としてマークされていない場合は、 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="4333087024b6d761d001f5f6ca43b62f409e81b8" translate="yes" xml:space="preserve">
          <source>Returns the first pair of values from the list for which the &lt;code&gt;BLOCK&lt;/code&gt; returned true in list context, or an empty list of no such pair was found. In scalar context it returns a simple boolean value, rather than either the key or the value found.</source>
          <target state="translated">リストのコンテキストで &lt;code&gt;BLOCK&lt;/code&gt; がtrueを返したリストから最初の値のペアを返すか、そのようなペアの空のリストが見つかりませんでした。スカラーコンテキストでは、見つかったキーや値ではなく、単純なブール値を返します。</target>
        </trans-unit>
        <trans-unit id="52ed5d36bc10c7fc0651d43e0cea1e3b9a337e34" translate="yes" xml:space="preserve">
          <source>Returns the flags indicating compile-time options that were used to build the zlib library. See the zlib documentation for a description of the flags returned by &lt;code&gt;zlibCompileFlags&lt;/code&gt; .</source>
          <target state="translated">zlibライブラリのビルドに使用されたコンパイル時オプションを示すフラグを返します。 &lt;code&gt;zlibCompileFlags&lt;/code&gt; によって返されるフラグの説明については、zlibのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="fafc52a30958cc2a65b7c327d2f21f623ff74d21" translate="yes" xml:space="preserve">
          <source>Returns the floating seconds between the two times, which should have been returned by &lt;code&gt;gettimeofday()&lt;/code&gt; . If the second argument is omitted, then the current time is used.</source>
          <target state="translated">&lt;code&gt;gettimeofday()&lt;/code&gt; によって返されるはずの2つの時間の間の浮動秒数を返します。2番目の引数を省略すると、現在の時刻が使用されます。</target>
        </trans-unit>
        <trans-unit id="03613a4fafca0a661e31e90b59391eb9ca5e8d98" translate="yes" xml:space="preserve">
          <source>Returns the format if it is valid, NULL if not.</source>
          <target state="translated">フォーマットが有効な場合は NULL を返します。</target>
        </trans-unit>
        <trans-unit id="65033d7a8f9ba51143d61cad9b444105938a8550" translate="yes" xml:space="preserve">
          <source>Returns the full compiler call for C programs and stores the definition in CONST_CCCMD.</source>
          <target state="translated">Cプログラムの完全なコンパイラ呼び出しを返し、その定義をCONST_CCCMDに格納します。</target>
        </trans-unit>
        <trans-unit id="4038313df0e510dc52d21bceee61e65a3a16cbc6" translate="yes" xml:space="preserve">
          <source>Returns the full name of the character indicated by the numeric code. For example,</source>
          <target state="translated">数値コードで示される文字のフルネームを返します。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="ff3d2b908b08a50e0877f9010ffa004e68d21fcb" translate="yes" xml:space="preserve">
          <source>Returns the full path from the tar header; this is basically a concatenation of the &lt;code&gt;prefix&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; fields.</source>
          <target state="translated">tarヘッダーからの絶対パスを返します。これは基本的に、 &lt;code&gt;prefix&lt;/code&gt; と &lt;code&gt;name&lt;/code&gt; フィールドの連結です。</target>
        </trans-unit>
        <trans-unit id="f0c3147a5eefff706461b195d810511d1e6430d4" translate="yes" xml:space="preserve">
          <source>Returns the full path of the first occurrence to the file. Package names (eg 'A::B') are automatically converted to directory names in the selected directory. (eg on unix 'A::B' is converted to 'A/B'). Additionally, '.pm', '.pl' and '.pod' are appended to the search automatically if required.</source>
          <target state="translated">ファイルへの最初に出現したもののフルパスを返します。パッケージ名(例:'A::B')は、選択したディレクトリのディレクトリ名に自動的に変換されます(例:unixでは'A::B'は'A/B'に変換されます)。(例:unix では 'A::B' は 'A/B' に変換されます)。さらに、必要に応じて '.pm','.pl','.pod' が自動的に検索に追加されます。</target>
        </trans-unit>
        <trans-unit id="ee619bd4ffcf121b5599c99a22a41135db997de2" translate="yes" xml:space="preserve">
          <source>Returns the full path to the downloaded file on success, and false on failure.</source>
          <target state="translated">成功した場合はダウンロードしたファイルのフルパスを返し、失敗した場合は false を返します。</target>
        </trans-unit>
        <trans-unit id="45b6a0183e400a3b07be8c3097337e804777f103" translate="yes" xml:space="preserve">
          <source>Returns the full pathname of the current directory.</source>
          <target state="translated">カレントディレクトリのフルパス名を返します。</target>
        </trans-unit>
        <trans-unit id="f87ad3966e4b9144c40f54e6402dcf1a4b2f83af" translate="yes" xml:space="preserve">
          <source>Returns the full pathname to the new directory.</source>
          <target state="translated">新しいディレクトリへのフルパス名を返します。</target>
        </trans-unit>
        <trans-unit id="61c9941bc1311ec2b5a0442e358024e9c55bb1ba" translate="yes" xml:space="preserve">
          <source>Returns the glob which contains the subroutine to call to invoke the method on the &lt;code&gt;stash&lt;/code&gt; . In fact in the presence of autoloading this may be the glob for &quot;AUTOLOAD&quot;. In this case the corresponding variable $AUTOLOAD is already setup.</source>
          <target state="translated">&lt;code&gt;stash&lt;/code&gt; のメソッドを呼び出すために呼び出すサブルーチンを含むグロブを返します。実際、オートロードが存在する場合、これは「AUTOLOAD」のグロブになる可能性があります。この場合、対応する変数$ AUTOLOADはすでに設定されています。</target>
        </trans-unit>
        <trans-unit id="9d487433b7940246f543f885491d71d018b0bec9" translate="yes" xml:space="preserve">
          <source>Returns the glob with the given &lt;code&gt;name&lt;/code&gt; and a defined subroutine or &lt;code&gt;NULL&lt;/code&gt; . The glob lives in the given &lt;code&gt;stash&lt;/code&gt; , or in the stashes accessible via @ISA and UNIVERSAL::.</source>
          <target state="translated">指定された &lt;code&gt;name&lt;/code&gt; と定義されたサブルーチンまたは &lt;code&gt;NULL&lt;/code&gt; を持つグロブを返します。グロブは、指定された &lt;code&gt;stash&lt;/code&gt; 、または@ISAおよびUNIVERSAL ::を介してアクセス可能なstashに存在します。</target>
        </trans-unit>
        <trans-unit id="fef4351018b25a393d9cb64adb970a306dbdda38" translate="yes" xml:space="preserve">
          <source>Returns the hash entry which corresponds to the specified key in the hash. &lt;code&gt;hash&lt;/code&gt; must be a valid precomputed hash number for the given &lt;code&gt;key&lt;/code&gt; , or 0 if you want the function to compute it. IF &lt;code&gt;lval&lt;/code&gt; is set then the fetch will be part of a store. Make sure the return value is non-null before accessing it. The return value when &lt;code&gt;hv&lt;/code&gt; is a tied hash is a pointer to a static location, so be sure to make a copy of the structure if you need to store it somewhere.</source>
          <target state="translated">ハッシュ内の指定されたキーに対応するハッシュエントリを返します。 &lt;code&gt;hash&lt;/code&gt; は、指定された &lt;code&gt;key&lt;/code&gt; に対して有効な事前計算されたハッシュ番号であるか、関数で計算する場合は0でなければなりません。IF &lt;code&gt;lval&lt;/code&gt; 設定され、その後、フェッチは、店舗の一部となります。アクセスする前に、戻り値がnullでないことを確認してください。 &lt;code&gt;hv&lt;/code&gt; がtieされたハッシュである場合の戻り値は静的な場所へのポインタなので、どこかに格納する必要がある場合は、構造のコピーを作成してください。</target>
        </trans-unit>
        <trans-unit id="32614fc90f0a28fbb48c622d08ef281a17449acd" translate="yes" xml:space="preserve">
          <source>Returns the hash reference from the first matching YAML file that the user has deposited in the &lt;code&gt;prefs_dir/&lt;/code&gt; directory. The first succeeding match wins. The files in the &lt;code&gt;prefs_dir/&lt;/code&gt; are processed alphabetically, and the canonical distro name (e.g. AUTHOR/Foo-Bar-3.14.tar.gz) is matched against the regular expressions stored in the $root-&amp;gt;{match}{distribution} attribute value. Additionally all module names contained in a distribution are matched against the regular expressions in the $root-&amp;gt;{match}{module} attribute value. The two match values are ANDed together. Each of the two attributes are optional.</source>
          <target state="translated">ユーザーが &lt;code&gt;prefs_dir/&lt;/code&gt; ディレクトリーに保管した、最初に一致したYAMLファイルからのハッシュ参照を返します。最初に成功した試合が勝利します。 &lt;code&gt;prefs_dir/&lt;/code&gt; 内のファイルはアルファベット順に処理され、正規のディストリビューション名（例：AUTHOR / Foo-Bar-3.14.tar.gz）は、$ root-&amp;gt; {match} {distribution}属性値に格納されている正規表現と照合されます。さらに、配布に含まれるすべてのモジュール名は、$ root-&amp;gt; {match} {module}属性値の正規表現と照合されます。 2つの一致値はANDで結合されます。 2つの属性はそれぞれオプションです。</target>
        </trans-unit>
        <trans-unit id="d089b1e8dbdbbd95886ba11042d00902332c4f2b" translate="yes" xml:space="preserve">
          <source>Returns the hash reference that has been announced by a distribution as the &lt;code&gt;requires&lt;/code&gt; and &lt;code&gt;build_requires&lt;/code&gt; elements. These can be declared either by the &lt;code&gt;META.yml&lt;/code&gt; (if authoritative) or can be deposited after the run of &lt;code&gt;Build.PL&lt;/code&gt; in the file &lt;code&gt;./_build/prereqs&lt;/code&gt; or after the run of &lt;code&gt;Makfile.PL&lt;/code&gt; written as the &lt;code&gt;PREREQ_PM&lt;/code&gt; hash in a comment in the produced &lt;code&gt;Makefile&lt;/code&gt; .</source>
          <target state="translated">ような分布が発表されたハッシュリファレンスを返し &lt;code&gt;requires&lt;/code&gt; して &lt;code&gt;build_requires&lt;/code&gt; の要素を。これらは、いずれかによって宣言することができ &lt;code&gt;META.yml&lt;/code&gt; （権威ある場合）またはの実行後に付着させることができる &lt;code&gt;Build.PL&lt;/code&gt; ファイル内 &lt;code&gt;./_build/prereqs&lt;/code&gt; かの実行後に &lt;code&gt;Makfile.PL&lt;/code&gt; として書か &lt;code&gt;PREREQ_PM&lt;/code&gt; の中のコメントでハッシュ生成された &lt;code&gt;Makefile&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6e9ebf8ea7bb35d267f0cb62310b0886e4d2ed06" translate="yes" xml:space="preserve">
          <source>Returns the highest &lt;code&gt;MSGNUM&lt;/code&gt; of all the messages accessed.</source>
          <target state="translated">アクセスされたすべてのメッセージの最高の &lt;code&gt;MSGNUM&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="9ce35f7f613bd71260c30034c6760ae3d6a9cbcd" translate="yes" xml:space="preserve">
          <source>Returns the highest index in the array. The number of elements in the array is &lt;code&gt;av_top_index(av) + 1&lt;/code&gt; . Returns -1 if the array is empty.</source>
          <target state="translated">配列の最大のインデックスを返します。配列の要素数は &lt;code&gt;av_top_index(av) + 1&lt;/code&gt; です。配列が空の場合は-1を返します。</target>
        </trans-unit>
        <trans-unit id="2670d7ef05ea6b77e23aa1a4696ff750d445dd63" translate="yes" xml:space="preserve">
          <source>Returns the highest installed version of the bundle in either @INC or &lt;code&gt;$CPAN::Config-&amp;gt;{cpan_home}&lt;/code&gt; . Note that this is different from CPAN::Module::inst_file.</source>
          <target state="translated">@INCまたは &lt;code&gt;$CPAN::Config-&amp;gt;{cpan_home}&lt;/code&gt; いずれかでインストールされているバンドルの最も高いバージョンを返します。これはCPAN :: Module :: inst_fileとは異なることに注意してください。</target>
        </trans-unit>
        <trans-unit id="7d854cbfcc6c64b54904b8a051f15a69e6ddaeff" translate="yes" xml:space="preserve">
          <source>Returns the ids of the user's supplementary groups. Similar to Perl's builtin variable &lt;code&gt;$)&lt;/code&gt; , see &lt;a href=&quot;perlvar#%24GID&quot;&gt;$GID in perlvar&lt;/a&gt;.</source>
          <target state="translated">ユーザーの補足グループのIDを返します。Perlの組み込み変数 &lt;code&gt;$)&lt;/code&gt; と同様に&lt;a href=&quot;perlvar#%24GID&quot;&gt;、perlvarの$ GIDを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="62c17f9ab56c19dd8776ed61db008d21dff14d62" translate="yes" xml:space="preserve">
          <source>Returns the integer (but still as floating point) nearest to the argument [C99].</source>
          <target state="translated">引数 [C99]に最も近い整数(ただし、浮動小数点)を返します。</target>
        </trans-unit>
        <trans-unit id="9ac0de93b6553ad32ba9295e6bd7485987a87868" translate="yes" xml:space="preserve">
          <source>Returns the integer portion of EXPR. If EXPR is omitted, uses &lt;code&gt;$_&lt;/code&gt; . You should not use this function for rounding: one because it truncates towards &lt;code&gt;0&lt;/code&gt; , and two because machine representations of floating-point numbers can sometimes produce counterintuitive results. For example, &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int(-6.725/0.025)&lt;/a&gt;&lt;/code&gt; produces -268 rather than the correct -269; that's because it's really more like -268.99999999999994315658 instead. Usually, the &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt;, or the &lt;code&gt;POSIX::floor&lt;/code&gt; and &lt;code&gt;POSIX::ceil&lt;/code&gt; functions will serve you better than will int().</source>
          <target state="translated">EXPRの整数部分を返します。 EXPRが省略されている場合、 &lt;code&gt;$_&lt;/code&gt; 使用します。この関数は丸めに使用しないでください。1つは &lt;code&gt;0&lt;/code&gt; に切り捨てられるため、もう1つは浮動小数点数のマシン表現が直感に反する結果を生成することがあるためです。たとえば、 &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int(-6.725/0.025)&lt;/a&gt;&lt;/code&gt; は、正しい-269ではなく-268を生成します。それは、実際には-268.99999999999994315658のようになっているからです。通常、 &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; 、または &lt;code&gt;POSIX::floor&lt;/code&gt; および &lt;code&gt;POSIX::ceil&lt;/code&gt; 関数は、int（）よりも機能が向上します。</target>
        </trans-unit>
        <trans-unit id="dfa5ef7ea249ae1077fb57cf7217e12518dc83de" translate="yes" xml:space="preserve">
          <source>Returns the integer portion of EXPR. If EXPR is omitted, uses &lt;code&gt;$_&lt;/code&gt; . You should not use this function for rounding: one because it truncates towards &lt;code&gt;0&lt;/code&gt; , and two because machine representations of floating-point numbers can sometimes produce counterintuitive results. For example, &lt;code&gt;&lt;a href=&quot;int&quot;&gt;int(-6.725/0.025)&lt;/a&gt;&lt;/code&gt; produces -268 rather than the correct -269; that's because it's really more like -268.99999999999994315658 instead. Usually, the &lt;code&gt;&lt;a href=&quot;sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt;, or the &lt;code&gt;POSIX::floor&lt;/code&gt; and &lt;code&gt;POSIX::ceil&lt;/code&gt; functions will serve you better than will int().</source>
          <target state="translated">EXPRの整数部分を返します。 EXPRが省略されている場合、 &lt;code&gt;$_&lt;/code&gt; 使用します。この関数は丸めに使用しないでください。1つは &lt;code&gt;0&lt;/code&gt; に切り捨てられるため、もう1つは浮動小数点数のマシン表現が直感に反する結果を生成することがあるためです。たとえば、 &lt;code&gt;&lt;a href=&quot;int&quot;&gt;int(-6.725/0.025)&lt;/a&gt;&lt;/code&gt; は、正しい-269ではなく-268を生成します。それは、実際には-268.99999999999994315658のようになっているからです。通常、 &lt;code&gt;&lt;a href=&quot;sprintf&quot;&gt;sprintf&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; 、または &lt;code&gt;POSIX::floor&lt;/code&gt; および &lt;code&gt;POSIX::ceil&lt;/code&gt; 関数は、int（）よりも機能が向上します。</target>
        </trans-unit>
        <trans-unit id="1383a246e6d34e5863de8dc2235891b42039056e" translate="yes" xml:space="preserve">
          <source>Returns the integer toward zero from the argument [C99].</source>
          <target state="translated">引数[C99]からゼロ方向の整数を返します。</target>
        </trans-unit>
        <trans-unit id="16c734093958bc40ddded22a1e3739aa6b5e201d" translate="yes" xml:space="preserve">
          <source>Returns the key as an &lt;code&gt;SV*&lt;/code&gt; , or &lt;code&gt;NULL&lt;/code&gt; if the hash entry does not contain an &lt;code&gt;SV*&lt;/code&gt; key.</source>
          <target state="translated">戻り値としてキー &lt;code&gt;SV*&lt;/code&gt; 、または &lt;code&gt;NULL&lt;/code&gt; ハッシュエントリが含まれていない場合、 &lt;code&gt;SV*&lt;/code&gt; キーを。</target>
        </trans-unit>
        <trans-unit id="57286d3680e42c6fd1ee76f86624697c1c3e4dae" translate="yes" xml:space="preserve">
          <source>Returns the key as an &lt;code&gt;SV*&lt;/code&gt; . Will create and return a temporary mortal &lt;code&gt;SV*&lt;/code&gt; if the hash entry contains only a &lt;code&gt;char*&lt;/code&gt; key.</source>
          <target state="translated">キーを &lt;code&gt;SV*&lt;/code&gt; として返します。ハッシュエントリに &lt;code&gt;char*&lt;/code&gt; キーのみが含まれる場合、一時的な致命的な &lt;code&gt;SV*&lt;/code&gt; 作成して返します。</target>
        </trans-unit>
        <trans-unit id="1833fd9dff65195d16a1ebc8979c79da203a00f7" translate="yes" xml:space="preserve">
          <source>Returns the key as an &lt;code&gt;SV*&lt;/code&gt; from the current position of the hash iterator. The return value will always be a mortal copy of the key. Also see &lt;code&gt;hv_iterinit&lt;/code&gt; .</source>
          <target state="translated">ハッシュ反復子の現在の位置からキーを &lt;code&gt;SV*&lt;/code&gt; として返します。戻り値は常にキーの致命的なコピーになります。 &lt;code&gt;hv_iterinit&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="cd09cc32c42bd53f61048e9ebb81223343deeeb0" translate="yes" xml:space="preserve">
          <source>Returns the key from the current position of the hash iterator. See &lt;code&gt;hv_iterinit&lt;/code&gt; .</source>
          <target state="translated">ハッシュ反復子の現在の位置からキーを返します。 &lt;code&gt;hv_iterinit&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="613f3207f2ea6d917ddc3db1f409d97d7369fedf" translate="yes" xml:space="preserve">
          <source>Returns the key slot of the hash entry as a &lt;code&gt;char*&lt;/code&gt; value, doing any necessary dereferencing of possibly &lt;code&gt;SV*&lt;/code&gt; keys. The length of the string is placed in &lt;code&gt;len&lt;/code&gt; (this is a macro, so do</source>
          <target state="translated">ハッシュエントリのキースロットを &lt;code&gt;char*&lt;/code&gt; 値として返し、必要に応じて &lt;code&gt;SV*&lt;/code&gt; キーの必要な逆参照を行います。文字列の長さは &lt;code&gt;len&lt;/code&gt; に配置されます（これはマクロなので、</target>
        </trans-unit>
        <trans-unit id="f1d0f5c019ce3eb05a8b98cbb66a0e90c8d32353" translate="yes" xml:space="preserve">
          <source>Returns the label attached to a cop. The flags pointer may be set to &lt;code&gt;SVf_UTF8&lt;/code&gt; or 0.</source>
          <target state="translated">警官に添付されたラベルを返します。フラグポインタは &lt;code&gt;SVf_UTF8&lt;/code&gt; または0に設定できます。</target>
        </trans-unit>
        <trans-unit id="2ea273948872be379b7a1ea9390f0137218504b7" translate="yes" xml:space="preserve">
          <source>Returns the last encountered error as string. Pass it a true value to get the &lt;code&gt;Carp::longmess()&lt;/code&gt; output instead.</source>
          <target state="translated">最後に発生したエラーを文字列として返します。代わりにtrue値を渡して、 &lt;code&gt;Carp::longmess()&lt;/code&gt; 出力を取得します。</target>
        </trans-unit>
        <trans-unit id="028b8442d2b4f7335ece6103fe5456ee9609a42b" translate="yes" xml:space="preserve">
          <source>Returns the last error message generated by zlib.</source>
          <target state="translated">zlib が最後に生成したエラーメッセージを返します。</target>
        </trans-unit>
        <trans-unit id="12f5a1aed52002fee13903cd606de0d685254e32" translate="yes" xml:space="preserve">
          <source>Returns the latest version of this module available on CPAN.</source>
          <target state="translated">CPANで利用可能なこのモジュールの最新バージョンを返します。</target>
        </trans-unit>
        <trans-unit id="c039c10bf6f2af16bc45450d4afb9df7b68b222a" translate="yes" xml:space="preserve">
          <source>Returns the length in</source>
          <target state="translated">長さを</target>
        </trans-unit>
        <trans-unit id="41a52612cbc7e2be685ec3cbf1a3dafe6b1f4a9f" translate="yes" xml:space="preserve">
          <source>Returns the length of the stash's effective name.</source>
          <target state="translated">スタッシュの有効な名前の長さを返します。</target>
        </trans-unit>
        <trans-unit id="963569222dbb77b072cd4bbad2e88491ba58df87" translate="yes" xml:space="preserve">
          <source>Returns the length of the stash's name.</source>
          <target state="translated">スタッシュの名前の長さを返します。</target>
        </trans-unit>
        <trans-unit id="89ec9309768f702c45b063f73c3c38472811452e" translate="yes" xml:space="preserve">
          <source>Returns the length of the string in the SV. Handles magic and type coercion and sets the UTF8 flag appropriately. See also &lt;code&gt;SvCUR&lt;/code&gt; , which gives raw access to the xpv_cur slot.</source>
          <target state="translated">SV内の文字列の長さを返します。魔法と型強制を処理し、UTF8フラグを適切に設定します。xpv_curスロットにそのままアクセスできる &lt;code&gt;SvCUR&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="2df9f2e7b309d465f129ded466c81d5d06e108dd" translate="yes" xml:space="preserve">
          <source>Returns the length of the string which is in the SV. See &lt;code&gt;SvLEN&lt;/code&gt; .</source>
          <target state="translated">SVにある文字列の長さを返します。 &lt;code&gt;SvLEN&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="f2effde579f3aaa3f8cf6fdafe4e1f5838fb8683" translate="yes" xml:space="preserve">
          <source>Returns the length that the decoded string would have without actually decoding it. This will return the same value as &lt;code&gt;&lt;a href=&quot;../functions/length&quot;&gt;length(decode_base64($str))&lt;/a&gt;&lt;/code&gt;, but should be more efficient.</source>
          <target state="translated">実際にデコードせずに、デコードされた文字列の長さを返します。これは &lt;code&gt;&lt;a href=&quot;../functions/length&quot;&gt;length(decode_base64($str))&lt;/a&gt;&lt;/code&gt; と同じ値を返しますが、より効率的です。</target>
        </trans-unit>
        <trans-unit id="8a33baf9547a4472661c0afbec5744eecd89513a" translate="yes" xml:space="preserve">
          <source>Returns the length that the encoded string would have without actually encoding it. This will return the same value as &lt;code&gt;&lt;a href=&quot;../functions/length&quot;&gt;length(encode_base64($bytes))&lt;/a&gt;&lt;/code&gt;, but should be more efficient.</source>
          <target state="translated">実際にエンコードせずにエンコードされた文字列の長さを返します。これは &lt;code&gt;&lt;a href=&quot;../functions/length&quot;&gt;length(encode_base64($bytes))&lt;/a&gt;&lt;/code&gt; と同じ値を返しますが、より効率的です。</target>
        </trans-unit>
        <trans-unit id="1fc6144d11b2a22ce5a6cbd0607959c33ca249d8" translate="yes" xml:space="preserve">
          <source>Returns the link as contents of &lt;code&gt;L&amp;lt;&amp;gt;&lt;/code&gt; . Reciprocal to &lt;b&gt;parse()&lt;/b&gt;.</source>
          <target state="translated">リンクを &lt;code&gt;L&amp;lt;&amp;gt;&lt;/code&gt; コンテンツとして返します。相互リンク&lt;b&gt;解析（） &lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="988ee81ba1078c106143e337b9309d97a5306c83" translate="yes" xml:space="preserve">
          <source>Returns the list of the keys that are legal in a restricted hash but do not have a value associated to them. Thus if 'foo' is a &quot;hidden&quot; key of the %hash it will return false for both &lt;code&gt;&lt;a href=&quot;../functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../functions/exists&quot;&gt;exists&lt;/a&gt;&lt;/code&gt; tests.</source>
          <target state="translated">制限付きハッシュで有効であるが、値が関連付けられていないキーのリストを返します。したがって、 'foo'が％hashの「非表示」キーである場合、 &lt;code&gt;&lt;a href=&quot;../functions/defined&quot;&gt;defined&lt;/a&gt;&lt;/code&gt; テストと &lt;code&gt;&lt;a href=&quot;../functions/exists&quot;&gt;exists&lt;/a&gt;&lt;/code&gt; テストの両方でfalseを返します。</target>
        </trans-unit>
        <trans-unit id="10e1d54e5a4be24e929ad91ea9a240f2f1515f46" translate="yes" xml:space="preserve">
          <source>Returns the list of the keys that are legal in a restricted hash. In the case of an unrestricted hash this is identical to calling keys(%hash).</source>
          <target state="translated">制限付きハッシュで有効なキーのリストを返します。制限されていないハッシュの場合、これは keys(%hash)を呼び出すのと同じです。</target>
        </trans-unit>
        <trans-unit id="c17722e7f3347f219bada8c0cf6e41454bd993e0" translate="yes" xml:space="preserve">
          <source>Returns the literal text of the &lt;code&gt;ok&lt;/code&gt; or &lt;code&gt;not ok&lt;/code&gt; status.</source>
          <target state="translated">&lt;code&gt;ok&lt;/code&gt; または &lt;code&gt;not ok&lt;/code&gt; ステータスのリテラルテキストを返します。</target>
        </trans-unit>
        <trans-unit id="ad7de00c063e5387a4ca0ed4f00b8f52b276e670" translate="yes" xml:space="preserve">
          <source>Returns the location of a Pod file, given a Pod/module/script name (like &quot;Foo::Bar&quot; or &quot;perlvar&quot; or &quot;perldoc&quot;), and an idea of what files/directories to look in. It searches according to the various options set by the accessors above. (For example, if the &lt;code&gt;inc&lt;/code&gt; attribute is on, as it is by default, then the perl @INC directories are implicitly added to the list of directories (if any) that you specify.)</source>
          <target state="translated">ポッド/モジュール/スクリプト名（「Foo :: Bar」、「perlvar」、「perldoc」など）を指定すると、ポッドファイルの場所と、検索するファイル/ディレクトリのアイデアを返します。上記のアクセサによって設定されたさまざまなオプション （たとえば、デフォルトで &lt;code&gt;inc&lt;/code&gt; 属性がオンの場合、perl @INCディレクトリは、指定したディレクトリ（存在する場合）のリストに暗黙的に追加されます。）</target>
        </trans-unit>
        <trans-unit id="4ebd0614c6ffb9a2af844e2360967ef7bcb25b66" translate="yes" xml:space="preserve">
          <source>Returns the location of a pod document given a search directory and a module (e.g. &lt;code&gt;File::Find&lt;/code&gt; ) or script (e.g. &lt;code&gt;perldoc&lt;/code&gt; ) name.</source>
          <target state="translated">検索ディレクトリとモジュール（例： &lt;code&gt;File::Find&lt;/code&gt; ）またはスクリプト（例： &lt;code&gt;perldoc&lt;/code&gt; ）の名前を指定すると、ポッドドキュメントの場所を返します。</target>
        </trans-unit>
        <trans-unit id="5b1f274a82de40cbf58abadb14458c7f8a28f2f4" translate="yes" xml:space="preserve">
          <source>Returns the location of the SV in the string delimited by &lt;code&gt;big&lt;/code&gt; and &lt;code&gt;bigend&lt;/code&gt; . It returns &lt;code&gt;NULL&lt;/code&gt; if the string can't be found. The &lt;code&gt;sv&lt;/code&gt; does not have to be fbm_compiled, but the search will not be as fast then.</source>
          <target state="translated">&lt;code&gt;big&lt;/code&gt; と &lt;code&gt;bigend&lt;/code&gt; で区切られた文字列内のSVの場所を返します。文字列が見つからない場合は &lt;code&gt;NULL&lt;/code&gt; を返します。 &lt;code&gt;sv&lt;/code&gt; fbm_compiledする必要はありませんが、検索は速く、その後のようになりません。</target>
        </trans-unit>
        <trans-unit id="64a8042ee65d8a3ae0a9e9f976fe072ccf40a831" translate="yes" xml:space="preserve">
          <source>Returns the make variant we're generating the Makefile for. This attempts to do some normalization on the information from %Config or the user.</source>
          <target state="translated">Makefile を生成している make バリアントを返します。これは、%Config またはユーザからの情報に対して正規化を試みます。</target>
        </trans-unit>
        <trans-unit id="4e236569973d85c26d367dda953c500f8b575795" translate="yes" xml:space="preserve">
          <source>Returns the message-id of the &quot;current article&quot;.</source>
          <target state="translated">現在の記事のメッセージIDを返します。</target>
        </trans-unit>
        <trans-unit id="8659d6757518a828b16f4ac813a0e6c3cacd4f13" translate="yes" xml:space="preserve">
          <source>Returns the message-id of the article.</source>
          <target state="translated">記事のメッセージIDを返します。</target>
        </trans-unit>
        <trans-unit id="cb6c7941c0b111e87fefb5fc7cca4f11de5edce7" translate="yes" xml:space="preserve">
          <source>Returns the module name of the JSON serializer. This will either be &lt;a href=&quot;../../json/pp&quot;&gt;JSON::PP&lt;/a&gt; or &lt;a href=&quot;http://search.cpan.org/perldoc/JSON&quot;&gt;JSON&lt;/a&gt;. Even if &lt;code&gt;PERL_JSON_BACKEND&lt;/code&gt; is set, this will return &lt;a href=&quot;http://search.cpan.org/perldoc/JSON&quot;&gt;JSON&lt;/a&gt; as further delegation is handled by the &lt;a href=&quot;http://search.cpan.org/perldoc/JSON&quot;&gt;JSON&lt;/a&gt; module. See &lt;a href=&quot;#ENVIRONMENT&quot;&gt;ENVIRONMENT&lt;/a&gt; for details.</source>
          <target state="translated">JSONシリアライザーのモジュール名を返します。これは&lt;a href=&quot;../../json/pp&quot;&gt;JSON :: PP&lt;/a&gt;または&lt;a href=&quot;http://search.cpan.org/perldoc/JSON&quot;&gt;JSONの&lt;/a&gt;いずれかになります。場合でも &lt;code&gt;PERL_JSON_BACKEND&lt;/code&gt; が設定され、これが返されます&lt;a href=&quot;http://search.cpan.org/perldoc/JSON&quot;&gt;JSONを&lt;/a&gt;さらに委任がで扱われるよう&lt;a href=&quot;http://search.cpan.org/perldoc/JSON&quot;&gt;なJSON&lt;/a&gt;モジュール。詳細については、&lt;a href=&quot;#ENVIRONMENT&quot;&gt;環境&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="601fe51433cdf65884cd2aaffc3a6c69698b7864" translate="yes" xml:space="preserve">
          <source>Returns the module name of the YAML serializer. See &lt;a href=&quot;#ENVIRONMENT&quot;&gt;ENVIRONMENT&lt;/a&gt; for details.</source>
          <target state="translated">YAMLシリアライザーのモジュール名を返します。詳細については、&lt;a href=&quot;#ENVIRONMENT&quot;&gt;環境&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="2d18f3bd27de976dd09a3782f7d7c5c4b440d263" translate="yes" xml:space="preserve">
          <source>Returns the most significant digit of the current status code. If a command is pending then &lt;code&gt;CMD_PENDING&lt;/code&gt; is returned.</source>
          <target state="translated">現在のステータスコードの最上位桁を返します。コマンドが保留中の場合、 &lt;code&gt;CMD_PENDING&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="a108dd103a0a5cd8e6a4473612918a69face8b2f" translate="yes" xml:space="preserve">
          <source>Returns the mount type and flags for a specified mount point. A comma-separated string of mntent-&amp;gt;mnt_type (always &quot;system&quot; or &quot;user&quot;), then the mntent-&amp;gt;mnt_opts, where the first is always &quot;binmode&quot; or &quot;textmode&quot;.</source>
          <target state="translated">指定したマウントポイントのマウントタイプとフラグを返します。コンマで区切られたmntent-&amp;gt; mnt_type（常に「system」または「user」）のストリング、次にmntent-&amp;gt; mnt_opts。最初は常に「binmode」または「textmode」です。</target>
        </trans-unit>
        <trans-unit id="09efdfb408434e477aded841b131fd9d43f9ac7d" translate="yes" xml:space="preserve">
          <source>Returns the mro linearisation for the given stash. By default, this will be whatever &lt;code&gt;mro_get_linear_isa_dfs&lt;/code&gt; returns unless some other MRO is in effect for the stash. The return value is a read-only AV*.</source>
          <target state="translated">指定されたスタッシュのmro線形化を返します。デフォルトでは、 &lt;code&gt;mro_get_linear_isa_dfs&lt;/code&gt; に対して他のMROが有効になっていない限り、これはmro_get_linear_isa_dfsが返すものになります。戻り値は読み取り専用AV *です。</target>
        </trans-unit>
        <trans-unit id="dea494c6706252bebec4d7195db034a6c2309ab2" translate="yes" xml:space="preserve">
          <source>Returns the mtime of the test, in seconds from the epoch.</source>
          <target state="translated">テストのmtimeをエポックから秒単位で返します。</target>
        </trans-unit>
        <trans-unit id="a2184020dc9ac4a61ff4df0e43340602c3175d95" translate="yes" xml:space="preserve">
          <source>Returns the multiplicative inverse of &lt;code&gt;$x&lt;/code&gt; modulo &lt;code&gt;$mod&lt;/code&gt; . If</source>
          <target state="translated">戻り値の逆数 &lt;code&gt;$x&lt;/code&gt; モジュロ &lt;code&gt;$mod&lt;/code&gt; 。もし</target>
        </trans-unit>
        <trans-unit id="7190bd6c98a1fb828aaa401dc90fbc0af099715e" translate="yes" xml:space="preserve">
          <source>Returns the name of a lexical sub, otherwise &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">字句サブルーチンの名前を返します。それ以外の場合は &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="67cb9b4002639ad8ccbea767d46c9c7470e80d8b" translate="yes" xml:space="preserve">
          <source>Returns the name of the class used for tracking individual tests. This class should either subclass from &lt;code&gt;App::Prove::State::Result::Test&lt;/code&gt; or provide an identical interface.</source>
          <target state="translated">個々のテストの追跡に使用されるクラスの名前を返します。このクラスは、 &lt;code&gt;App::Prove::State::Result::Test&lt;/code&gt; からサブクラス化するか、同じインターフェースを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="4e0f387e3183348b4afeb859e07825cef057bc74" translate="yes" xml:space="preserve">
          <source>Returns the name of the current builder. Top level builders default to &lt;code&gt;$0&lt;/code&gt; (the name of the executable). Child builders are named via the &lt;code&gt;child&lt;/code&gt; method. If no name is supplied, will be named &quot;Child of $parent-&amp;gt;name&quot;.</source>
          <target state="translated">現在のビルダーの名前を返します。トップレベルのビルダーのデフォルトは &lt;code&gt;$0&lt;/code&gt; （実行可能ファイルの名前）です。子ビルダーは、 &lt;code&gt;child&lt;/code&gt; メソッドを介して名前が付けられます。名前を指定しない場合、「Child of $ parent-&amp;gt; name」という名前になります。</target>
        </trans-unit>
        <trans-unit id="41b56c7efcd427fd3492d55c78d6c32c9077e684" translate="yes" xml:space="preserve">
          <source>Returns the name of the current working directory. See also &lt;a href=&quot;cwd&quot;&gt;Cwd&lt;/a&gt;.</source>
          <target state="translated">現在の作業ディレクトリの名前を返します。&lt;a href=&quot;cwd&quot;&gt;Cwd&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="baece99d59a060f3e4da17808e2b71ecf624ff08" translate="yes" xml:space="preserve">
          <source>Returns the name of the file on the server.</source>
          <target state="translated">サーバ上のファイル名を返します。</target>
        </trans-unit>
        <trans-unit id="8fdc36e986b937123029f6d748c89622624b61fb" translate="yes" xml:space="preserve">
          <source>Returns the name of the input file being read.</source>
          <target state="translated">読み込んでいる入力ファイルの名前を返します。</target>
        </trans-unit>
        <trans-unit id="1fc1e8db08650ad957de971c64144c87c67a05b6" translate="yes" xml:space="preserve">
          <source>Returns the name of the last file stored on the server using the &lt;code&gt;STOU&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;STOU&lt;/code&gt; コマンドを使用してサーバーに保存されている最後のファイルの名前を返します。</target>
        </trans-unit>
        <trans-unit id="a2ee1f5da5c10654163e7e194521a4ddea7cd449" translate="yes" xml:space="preserve">
          <source>Returns the name of the output file being written.</source>
          <target state="translated">書き込まれている出力ファイルの名前を返します。</target>
        </trans-unit>
        <trans-unit id="3e47f5d703adcf47b0e9c112efd8ded3b018369e" translate="yes" xml:space="preserve">
          <source>Returns the name of the temporary directory created.</source>
          <target state="translated">作成された一時ディレクトリの名前を返します。</target>
        </trans-unit>
        <trans-unit id="def4c500995e11bd7fc6da23c7bae31ef0d8faa4" translate="yes" xml:space="preserve">
          <source>Returns the native code point of the first character in the string &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; which is assumed to be in UTF-8 encoding; &lt;code&gt;&lt;a href=&quot;functions/send&quot;&gt;send&lt;/a&gt;&lt;/code&gt; points to 1 beyond the end of &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;*retlen&lt;/code&gt; will be set to the length, in bytes, of that character.</source>
          <target state="translated">文字列 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; の最初の文字のネイティブコードポイントを返します。これは、UTF-8エンコーディングであると見なされます。 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; の終わりを超えて1 &lt;code&gt;&lt;a href=&quot;functions/send&quot;&gt;send&lt;/a&gt;&lt;/code&gt; ポイントを送ります。 &lt;code&gt;*retlen&lt;/code&gt; は、その文字の長さ（バイト単位）に設定されます。</target>
        </trans-unit>
        <trans-unit id="f543bf4c35cf24791ef8462c88410aaee329c4de" translate="yes" xml:space="preserve">
          <source>Returns the native code point of the first character in the string &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; which is assumed to be in UTF-8 encoding; &lt;code&gt;retlen&lt;/code&gt; will be set to the length, in bytes, of that character.</source>
          <target state="translated">文字列 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; の最初の文字のネイティブコードポイントを返します。これは、UTF-8エンコーディングであると見なされます。 &lt;code&gt;retlen&lt;/code&gt; は、その文字の長さ（バイト単位）に設定されます。</target>
        </trans-unit>
        <trans-unit id="0f2afa6341a6574083567d5422a5df3ccc8875e1" translate="yes" xml:space="preserve">
          <source>Returns the natural logarithm (base</source>
          <target state="translated">自然対数 (基底値)を返します。</target>
        </trans-unit>
        <trans-unit id="bac9d9894ddd9718f456f1063ac204406c45c4d2" translate="yes" xml:space="preserve">
          <source>Returns the nearest integer to the argument, according to the current rounding mode (see &lt;a href=&quot;#fegetround&quot;&gt;fegetround&lt;/a&gt;) [C99].</source>
          <target state="translated">現在の丸めモードに従って、引数に最も近い整数を返します（&lt;a href=&quot;#fegetround&quot;&gt;fegetroundを&lt;/a&gt;参照）[C99]。</target>
        </trans-unit>
        <trans-unit id="a6d03e57cd4567e9c5073f1d037dd6ee5948ea19" translate="yes" xml:space="preserve">
          <source>Returns the new position, or &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; on failure. A position of zero is returned as the string &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt;</source>
          <target state="translated">新しい位置を返します。失敗した場合は &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。ゼロの位置は文字列 &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt; として返されます</target>
        </trans-unit>
        <trans-unit id="da5ebf02895ea09558fa52ddd689cb37cd02b884" translate="yes" xml:space="preserve">
          <source>Returns the new position, or the undefined value on failure. A position of zero is returned as the string &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt; ; thus &lt;code&gt;&lt;a href=&quot;functions/sysseek&quot;&gt;sysseek&lt;/a&gt;&lt;/code&gt; returns true on success and false on failure, yet you can still easily determine the new position.</source>
          <target state="translated">新しい位置、または失敗した場合は未定義の値を返します。ゼロの位置は、文字列 &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt; として返されます。したがって、 &lt;code&gt;&lt;a href=&quot;functions/sysseek&quot;&gt;sysseek&lt;/a&gt;&lt;/code&gt; は成功した場合はtrueを返し、失敗した場合はfalseを返しますが、新しい位置を簡単に特定することはできます。</target>
        </trans-unit>
        <trans-unit id="33bae96f20220fca11d5d5a87f212bd820f0fc18" translate="yes" xml:space="preserve">
          <source>Returns the new position, or the undefined value on failure. A position of zero is returned as the string &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt; ; thus &lt;code&gt;&lt;a href=&quot;sysseek&quot;&gt;sysseek&lt;/a&gt;&lt;/code&gt; returns true on success and false on failure, yet you can still easily determine the new position.</source>
          <target state="translated">新しい位置、または失敗した場合は未定義の値を返します。ゼロの位置は、文字列 &lt;code&gt;&quot;0 but true&quot;&lt;/code&gt; として返されます。したがって、 &lt;code&gt;&lt;a href=&quot;sysseek&quot;&gt;sysseek&lt;/a&gt;&lt;/code&gt; は成功した場合はtrueを返し、失敗した場合はfalseを返しますが、新しい位置を簡単に特定することはできます。</target>
        </trans-unit>
        <trans-unit id="c9c7ecc40fd6af76f3ced9a4d4d799db79632915" translate="yes" xml:space="preserve">
          <source>Returns the next character from the input file attached to FILEHANDLE, or the undefined value at end of file or if there was an error (in the latter case &lt;code&gt;$!&lt;/code&gt; is set). If FILEHANDLE is omitted, reads from STDIN. This is not particularly efficient. However, it cannot be used by itself to fetch single characters without waiting for the user to hit enter. For that, try something more like:</source>
          <target state="translated">FILEHANDLEに添付された入力ファイルの次の文字、またはファイルの最後の未定義の値、またはエラーが発生した場合（後者の場合は &lt;code&gt;$!&lt;/code&gt; が設定されます）を返します。FILEHANDLEを省略すると、STDINから読み取ります。これは特に効率的ではありません。ただし、ユーザーがEnterキーを押すのを待たずに、単独で単一の文字をフェッチするために使用することはできません。そのためには、次のようなことを試してください：</target>
        </trans-unit>
        <trans-unit id="0ba81cb9a638e9d555d09818617f5dc9a9283715" translate="yes" xml:space="preserve">
          <source>Returns the next directory entry for a directory opened by &lt;code&gt;&lt;a href=&quot;functions/opendir&quot;&gt;opendir&lt;/a&gt;&lt;/code&gt;. If used in list context, returns all the rest of the entries in the directory. If there are no more entries, returns the undefined value in scalar context and the empty list in list context.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/opendir&quot;&gt;opendir&lt;/a&gt;&lt;/code&gt; によって開かれたディレクトリの次のディレクトリエントリを返します。リストコンテキストで使用すると、ディレクトリ内の残りのエントリがすべて返されます。エントリがない場合は、スカラーコンテキストでは未定義の値を返し、リストコンテキストでは空のリストを返します。</target>
        </trans-unit>
        <trans-unit id="5148c8f92e23d2faa8c6a65ac6aee920f391f96f" translate="yes" xml:space="preserve">
          <source>Returns the next directory entry for a directory opened by &lt;code&gt;&lt;a href=&quot;opendir&quot;&gt;opendir&lt;/a&gt;&lt;/code&gt;. If used in list context, returns all the rest of the entries in the directory. If there are no more entries, returns the undefined value in scalar context and the empty list in list context.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;opendir&quot;&gt;opendir&lt;/a&gt;&lt;/code&gt; によって開かれたディレクトリの次のディレクトリエントリを返します。リストコンテキストで使用すると、ディレクトリ内の残りのエントリがすべて返されます。エントリがない場合は、スカラーコンテキストでは未定義の値を返し、リストコンテキストでは空のリストを返します。</target>
        </trans-unit>
        <trans-unit id="5211b758214a3e671cffde89772c624ecf18b64c" translate="yes" xml:space="preserve">
          <source>Returns the next representable floating point number after &lt;code&gt;x&lt;/code&gt; in the direction of &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y&lt;/a&gt;&lt;/code&gt; [C99].</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y&lt;/a&gt;&lt;/code&gt; の方向で &lt;code&gt;x&lt;/code&gt; の次の表現可能な浮動小数点数を返します[C99]。</target>
        </trans-unit>
        <trans-unit id="95637d8a94c7b2c23f6a0b2531ccd52d6915ac3c" translate="yes" xml:space="preserve">
          <source>Returns the null list for the MacPerl application, since the concept is usually meaningless under Mac OS. But if you're using the MacPerl tool under MPW, it gives back $ENV{Commands} suitably split, as is done in :lib:ExtUtils:MM_Mac.pm.</source>
          <target state="translated">MacPerlアプリケーションのヌルリストを返します。しかし、MPWでMacPerlツールを使っている場合は、 :lib:ExtUtils:MM_Mac.pmで行われているように、適切に分割された$ENV{Commands}を返してくれます。</target>
        </trans-unit>
        <trans-unit id="11b0f8d8da906b843c8b694b9581488fdb8b5f27" translate="yes" xml:space="preserve">
          <source>Returns the number of UTF-8 characters between the UTF-8 pointers &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; .</source>
          <target state="translated">UTF-8ポインター &lt;code&gt;a&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; の間のUTF-8文字数を返します。</target>
        </trans-unit>
        <trans-unit id="bb85472e3b77bee0934e39a40d445532d815833a" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes actually read. On EOF it returns 0 and in the case of an error, -1.</source>
          <target state="translated">実際に読み込んだバイト数を返します。EOFの場合は0を、エラーの場合は-1を返します。</target>
        </trans-unit>
        <trans-unit id="cae35ff2e723caccf4c8ada05d7f356476081286" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes beginning at &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; which form a legal UTF-8 (or UTF-EBCDIC) encoded character, looking no further than &lt;code&gt;e - s&lt;/code&gt; bytes into &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt;. Returns 0 if the sequence starting at &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; through &lt;code&gt;e - 1&lt;/code&gt; is not well-formed UTF-8</source>
          <target state="translated">戻り値から始まるバイト数 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; よりもさらに見ていない、法律上のUTF-8（またはUTF-EBCDIC）エンコードされた文字を形成する &lt;code&gt;e - s&lt;/code&gt; にバイト &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 。 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; から &lt;code&gt;e - 1&lt;/code&gt; までのシーケンスが整形式のUTF-8でない場合は0を返します</target>
        </trans-unit>
        <trans-unit id="75174ddfd486232efb60d582a8b83b5c3b742cc2" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes in the converted string (not including the spares).</source>
          <target state="translated">変換された文字列のバイト数を返します(スペアを含まない)。</target>
        </trans-unit>
        <trans-unit id="88c11762c84d1f08358d14b45267f8562d2a11aa" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes in the converted string.</source>
          <target state="translated">変換された文字列のバイト数を返します。</target>
        </trans-unit>
        <trans-unit id="3add76e354d1acc7e90baad934359228e1bbd96f" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes read before any &amp;lt;CRLF&amp;gt; translation.</source>
          <target state="translated">&amp;lt;CRLF&amp;gt;変換の前に読み取られたバイト数を返します。</target>
        </trans-unit>
        <trans-unit id="38304001d06d1583304e8a4b127b5889da6a60ac" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes read so far.</source>
          <target state="translated">これまでに読み込んだバイト数を返します。</target>
        </trans-unit>
        <trans-unit id="c6d00c06d1d76be8e8f1893de5ecccb4b142785a" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes written before any &amp;lt;CRLF&amp;gt; translation.</source>
          <target state="translated">&amp;lt;CRLF&amp;gt;変換の前に書き込まれたバイト数を返します。</target>
        </trans-unit>
        <trans-unit id="c877b0d9321a27659b38a0779f16c4d6f7be50bc" translate="yes" xml:space="preserve">
          <source>Returns the number of characters in the string in an SV, counting wide UTF-8 bytes as a single character. Handles magic and type coercion.</source>
          <target state="translated">SV 内の文字列の文字数を返します。マジックや型強制に対応しています。</target>
        </trans-unit>
        <trans-unit id="0e7dc8ec42d520f8664de7d9c8a5ab07b4bf4e10" translate="yes" xml:space="preserve">
          <source>Returns the number of digest bits for this object. The values are 160, 224, 256, 384, 512, 224, and 256 for SHA-1, SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224 and SHA-512/256, respectively.</source>
          <target state="translated">このオブジェクトのダイジェストビット数を返します。値は、SHA-1、SHA-224、SHA-256、384、512、224、256で、それぞれSHA-1、SHA-224、SHA-256、SHA-384、SHA-512、SHA-512/224、SHA-512/224、256です。</target>
        </trans-unit>
        <trans-unit id="58e5482055ad776becff57fabacedfac48285db7" translate="yes" xml:space="preserve">
          <source>Returns the number of digits in the decimal representation of the number. In list context, returns the length of the integer and fraction part. For BigInt's, the length of the fraction part will always be 0.</source>
          <target state="translated">数値の10進数表現の桁数を返します。リストコンテキストでは、整数部と小数部の長さを返します。BigInt の場合、小数部の長さは常に 0 となります。</target>
        </trans-unit>
        <trans-unit id="b77d93ca6d9bb32f039ad2172d039d9679dbe239" translate="yes" xml:space="preserve">
          <source>Returns the number of distinct names defined in the pattern used for the last successful match.</source>
          <target state="translated">最後に成功したマッチに使用したパターンで定義されている名前の数を返します。</target>
        </trans-unit>
        <trans-unit id="2d4beed58f26f66976d2d26980a8559d762abfa2" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in the array.</source>
          <target state="translated">配列の要素数を返します。</target>
        </trans-unit>
        <trans-unit id="df16e722c3137a93ad268e13ef0e85e15fe5d5c5" translate="yes" xml:space="preserve">
          <source>Returns the number of files read in scalar context, and a list of &lt;code&gt;Archive::Tar::File&lt;/code&gt; objects in list context.</source>
          <target state="translated">スカラーコンテキストで読み取られたファイルの数、およびリストコンテキストの &lt;code&gt;Archive::Tar::File&lt;/code&gt; オブジェクトのリストを返します。</target>
        </trans-unit>
        <trans-unit id="e76d0167eb4dc83e86b7efc4472b19864a8c6d5c" translate="yes" xml:space="preserve">
          <source>Returns the number of handles that the object will check for when one of the &lt;code&gt;can_&lt;/code&gt; methods is called or the object is passed to the &lt;code&gt;&lt;a href=&quot;../functions/select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; static method.</source>
          <target state="translated">&lt;code&gt;can_&lt;/code&gt; メソッドの1つが呼び出されたとき、またはオブジェクトが &lt;code&gt;&lt;a href=&quot;../functions/select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; staticメソッドに渡されたときに、オブジェクトがチェックするハンドルの数を返します。</target>
        </trans-unit>
        <trans-unit id="fb985a707fab944f8c24283ab158416ea1a522ac" translate="yes" xml:space="preserve">
          <source>Returns the number of hash buckets that happen to be in use. This function is wrapped by the macro &lt;code&gt;HvFILL&lt;/code&gt; .</source>
          <target state="translated">たまたま使用されているハッシュバケットの数を返します。この関数は、マクロ &lt;code&gt;HvFILL&lt;/code&gt; によってラップされています。</target>
        </trans-unit>
        <trans-unit id="4c36f861ad3db4d659e52c582865413664670812" translate="yes" xml:space="preserve">
          <source>Returns the number of items still in the queue. Returns &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the queue has been ended (see below), and there are no more items in the queue.</source>
          <target state="translated">まだキューにあるアイテムの数を返します。キューが終了し（以下を参照）、キューにアイテムがなくなった場合は、 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="d00dee940b5a7f851e498c2a31eab039aa0c0ffe" translate="yes" xml:space="preserve">
          <source>Returns the number of iterations.</source>
          <target state="translated">反復回数を返します。</target>
        </trans-unit>
        <trans-unit id="0dd115724bfc059eb48f89636817e70be2f7297b" translate="yes" xml:space="preserve">
          <source>Returns the number of messages in the mailbox. However if there are no messages on the server the string &lt;code&gt;&quot;0E0&quot;&lt;/code&gt; will be returned. This is will give a true value in a boolean context, but zero in a numeric context.</source>
          <target state="translated">メールボックス内のメッセージ数を返します。ただし、サーバーにメッセージがない場合、文字列 &lt;code&gt;&quot;0E0&quot;&lt;/code&gt; が返されます。これは、ブールコンテキストでは真の値を示しますが、数値コンテキストではゼロを示します。</target>
        </trans-unit>
        <trans-unit id="2bb802c993b1565f12edfe1942e602faebed7b94" translate="yes" xml:space="preserve">
          <source>Returns the number of non-leap seconds since whatever time the system considers to be the epoch, suitable for feeding to &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt;. On most systems the epoch is 00:00:00 UTC, January 1, 1970; a prominent exception being Mac OS Classic which uses 00:00:00, January 1, 1904 in the current local time zone for its epoch.</source>
          <target state="translated">システムがエポックであると見なしたときからのうるう秒以外の秒数を返します。これは、 &lt;code&gt;&lt;a href=&quot;functions/gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;functions/localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; へのフィードに適しています。ほとんどのシステムでは、エポックは1970年1月1日の00:00:00 UTCです。現在のローカルタイムゾーンの1904年1月1日00:00:00をそのエポックに使用するMac OSクラシックは例外です。</target>
        </trans-unit>
        <trans-unit id="662bde2620f3ee7619d37225b183a8442b4c6d25" translate="yes" xml:space="preserve">
          <source>Returns the number of non-leap seconds since whatever time the system considers to be the epoch, suitable for feeding to &lt;code&gt;&lt;a href=&quot;gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt;. On most systems the epoch is 00:00:00 UTC, January 1, 1970; a prominent exception being Mac OS Classic which uses 00:00:00, January 1, 1904 in the current local time zone for its epoch.</source>
          <target state="translated">システムがエポックであると見なしたときからのうるう秒以外の秒数を返します。これは、 &lt;code&gt;&lt;a href=&quot;gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; へのフィードに適しています。ほとんどのシステムでは、エポックは1970年1月1日の00:00:00 UTCです。現在のローカルタイムゾーンの1904年1月1日00:00:00をそのエポックに使用するMac OSクラシックは例外です。</target>
        </trans-unit>
        <trans-unit id="82a0291a92a69c8a33c62fd82a61c84e1ff9b325" translate="yes" xml:space="preserve">
          <source>Returns the number of octets from $buffer that have been successfully saved to be returned on future FILL/READ calls. Optional. Default is to push data into a temporary layer above this one.</source>
          <target state="translated">将来の FILL/READ 呼び出し時に返されるように、$buffer から正常に保存されたオクテット数を返します。省略可能です。デフォルトでは、データをこの上の一時的なレイヤーにプッシュします。</target>
        </trans-unit>
        <trans-unit id="7ab52c3d733611d3fabb7545c94df797da439f07" translate="yes" xml:space="preserve">
          <source>Returns the number of octets from $buffer that have been successfully written.</source>
          <target state="translated">正常に書き込まれた $buffer のオクテット数を返します。</target>
        </trans-unit>
        <trans-unit id="cf5c8b3845cd4fdd2e0cb4812ccb86f72bbe2512" translate="yes" xml:space="preserve">
          <source>Returns the number of octets placed in $buffer (must be less than or equal to $len). Optional. Default is to use FILL instead.</source>
          <target state="translated">buffer に置かれたオクテット数を返します ($len 以下でなければなりません)。省略可能です。デフォルトでは、代わりに FILL を使用します。</target>
        </trans-unit>
        <trans-unit id="fee7858afbaff7dc16cb9b958a05d79fc3c147ad" translate="yes" xml:space="preserve">
          <source>Returns the number of parsers. Parsers are removed from the multiplexer when their input is exhausted.</source>
          <target state="translated">パーサの数を返します。パーサは、入力がなくなるとマルチプレクサから削除されます。</target>
        </trans-unit>
        <trans-unit id="4268fbc1b2eeb24c8765b497975f451cd1c4a2c1" translate="yes" xml:space="preserve">
          <source>Returns the number of processes waiting for the semaphore &lt;code&gt;SEM&lt;/code&gt; to become greater than its current value</source>
          <target state="translated">セマフォ &lt;code&gt;SEM&lt;/code&gt; が現在の値より大きくなるのを待っているプロセスの数を返します。</target>
        </trans-unit>
        <trans-unit id="88269404adb70353c659aa28cf6b5e21e2bd28d4" translate="yes" xml:space="preserve">
          <source>Returns the number of processes waiting for the semaphore &lt;code&gt;SEM&lt;/code&gt; to become zero.</source>
          <target state="translated">セマフォ &lt;code&gt;SEM&lt;/code&gt; がゼロになるのを待っているプロセスの数を返します。</target>
        </trans-unit>
        <trans-unit id="881f9b9bc1fd39a10f83e683ca82a8d742aeed5f" translate="yes" xml:space="preserve">
          <source>Returns the number of tests for a given test suite result.</source>
          <target state="translated">指定したテストスイートの結果に対するテストの数を返します。</target>
        </trans-unit>
        <trans-unit id="813c8498e317e592cb3735e49115edd07c9ad543" translate="yes" xml:space="preserve">
          <source>Returns the number of tests planned, according to the plan. For example, a plan of '1..17' will mean that 17 tests were planned.</source>
          <target state="translated">計画にしたがって計画されたテストの数を返します。例えば、'1...17' という計画は、17回のテストが計画されていたことを意味します。</target>
        </trans-unit>
        <trans-unit id="3f62a51b7d445c7479e59cd7cd311363e35b9b16" translate="yes" xml:space="preserve">
          <source>Returns the number of tests planned. For example, a plan of &lt;code&gt;1..17&lt;/code&gt; will cause this method to return '17'.</source>
          <target state="translated">計画されたテストの数を返します。たとえば、 &lt;code&gt;1..17&lt;/code&gt; のプランでは、このメソッドは '17'を返します。</target>
        </trans-unit>
        <trans-unit id="828b69f875f906af59cfebfa2f9d766028bed463" translate="yes" xml:space="preserve">
          <source>Returns the number of tests which actually were run. Hopefully this will match the number of &lt;code&gt;$parser-&amp;gt;tests_planned&lt;/code&gt; .</source>
          <target state="translated">実際に実行されたテストの数を返します。うまくいけば、これは &lt;code&gt;$parser-&amp;gt;tests_planned&lt;/code&gt; 数と一致します。</target>
        </trans-unit>
        <trans-unit id="1c1af1dcee34c4b6dcddf996ebcb65d0d656b355" translate="yes" xml:space="preserve">
          <source>Returns the number of the decimal digits in the number. The output is a Perl scalar.</source>
          <target state="translated">数値の小数点以下の桁数を返します。出力はPerlのスカラです。</target>
        </trans-unit>
        <trans-unit id="5042b0a93a204c5a793cbaaf65ebaf49f13dc1b7" translate="yes" xml:space="preserve">
          <source>Returns the number of the test, even if the original TAP output did not supply that number.</source>
          <target state="translated">元のTAP出力がその番号を提供していなかった場合でも、テストの番号を返します。</target>
        </trans-unit>
        <trans-unit id="a517ce082141e4f0cc6c00dea94c9725cf43fa5c" translate="yes" xml:space="preserve">
          <source>Returns the number of uncompressed bytes written to &lt;code&gt;$buffer&lt;/code&gt; , zero if eof or a negative number on error.</source>
          <target state="translated">&lt;code&gt;$buffer&lt;/code&gt; に書き込まれた非圧縮バイト数を返します。eofの場合はゼロ、エラーの場合は負の数を返します。</target>
        </trans-unit>
        <trans-unit id="ba3197c4fab1aea1beec1624e01489e167b47d9d" translate="yes" xml:space="preserve">
          <source>Returns the number of uncompressed bytes written, or &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if unsuccessful.</source>
          <target state="translated">書き込まれた非圧縮バイト数を返します。失敗した場合は &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="c9ffb96c993f53ccb8f1f615987845984c3b8222" translate="yes" xml:space="preserve">
          <source>Returns the number of unread chars.</source>
          <target state="translated">未読文字数を返します。</target>
        </trans-unit>
        <trans-unit id="f804bf0367ece8be05ac406880d3ac3ef13d10c3" translate="yes" xml:space="preserve">
          <source>Returns the numeric value of the first character of EXPR. If EXPR is an empty string, returns 0. If EXPR is omitted, uses &lt;code&gt;$_&lt;/code&gt; . (Note</source>
          <target state="translated">EXPRの最初の文字の数値を返します。EXPRが空の文字列の場合は0を返します。EXPRを省略すると &lt;code&gt;$_&lt;/code&gt; 使用します。（注意</target>
        </trans-unit>
        <trans-unit id="fe48d260c4a1908d637c80ad7270fc55e5eff63a" translate="yes" xml:space="preserve">
          <source>Returns the numerical number for the protocol being used on the socket, if known. If the protocol is unknown, as with an AF_UNIX socket, zero is returned.</source>
          <target state="translated">ソケットで使用されているプロトコルが既知の場合、そのソケットの数値を返す。AF_UNIX ソケットのようにプロトコルが不明な場合、0 を返す。</target>
        </trans-unit>
        <trans-unit id="76939a93dfaa37bd7042a86840e76339b42c8f57" translate="yes" xml:space="preserve">
          <source>Returns the numerical number for the socket domain type. For example, for an AF_INET socket the value of &amp;amp;AF_INET will be returned.</source>
          <target state="translated">ソケットドメインタイプの数値を返します。たとえば、AF_INETソケットの場合、＆AF_INETの値が返されます。</target>
        </trans-unit>
        <trans-unit id="0d4ad4d31c2549368486e5f63628667ff1fcafee" translate="yes" xml:space="preserve">
          <source>Returns the numerical number for the socket type. For example, for a SOCK_STREAM socket the value of &amp;amp;SOCK_STREAM will be returned.</source>
          <target state="translated">ソケットタイプの数値を返します。たとえば、SOCK_STREAMソケットの場合、＆SOCK_STREAMの値が返されます。</target>
        </trans-unit>
        <trans-unit id="02715cdde7577d8ebcd7275003732bf58eb9d020" translate="yes" xml:space="preserve">
          <source>Returns the numerical product of all the elements in &lt;code&gt;@list&lt;/code&gt; . If &lt;code&gt;@list&lt;/code&gt; is empty then &lt;code&gt;1&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;@list&lt;/code&gt; 内のすべての要素の数値積を返します。 &lt;code&gt;@list&lt;/code&gt; が空の場合、 &lt;code&gt;1&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="14e18a0badca7cf503234b27166d85615736adc0" translate="yes" xml:space="preserve">
          <source>Returns the numerical sum of all the elements in &lt;code&gt;@list&lt;/code&gt; . For backwards compatibility, if &lt;code&gt;@list&lt;/code&gt; is empty then &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;@list&lt;/code&gt; のすべての要素の合計を返します。下位互換性のために、 &lt;code&gt;@list&lt;/code&gt; が空の場合、 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="c3831814d8a8e59012333ac1ed83f5becc9ec75d" translate="yes" xml:space="preserve">
          <source>Returns the object as a scalar. This will lose some data if the object cannot be represented by a normal Perl scalar (integer or float), so use &lt;a href=&quot;#as_int()%2fas_number()&quot;&gt;as_int()&lt;/a&gt; or &lt;a href=&quot;#as_float()&quot;&gt;as_float()&lt;/a&gt; instead.</source>
          <target state="translated">オブジェクトをスカラーとして返します。オブジェクトが通常のPerlスカラー（整数または浮動小数点）で表現できない場合、これは一部のデータを失うため、代わりに&lt;a href=&quot;#as_int()%2fas_number()&quot;&gt;as_int（）&lt;/a&gt;または&lt;a href=&quot;#as_float()&quot;&gt;as_float（）を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="cfa388f66b6e4485adca42c1ebd6b3383a26f5a6" translate="yes" xml:space="preserve">
          <source>Returns the offset in the bottom pad of the lex or the fake lex. cv is the CV in which to start the search, and seq is the current cop_seq to match against. If warn is true, print appropriate warnings. The out_* vars return values, and so are pointers to where the returned values should be stored. out_capture, if non-null, requests that the innermost instance of the lexical is captured; out_name is set to the innermost matched pad name or fake pad name; out_flags returns the flags normally associated with the PARENT_FAKELEX_FLAGS field of a fake pad name.</source>
          <target state="translated">cv は,検索を開始する CV,seq は,マッチする現在の cop_seq です.warn が真の場合は,適切な警告を表示します.out_*vars は値を返し,返された値が格納されるべき場所へのポインタとなります.out_capture は,非 null の場合は,辞書の一番内側にあるインスタンスのキャプチャを要求します.</target>
        </trans-unit>
        <trans-unit id="71384b7d8016cb7d1aff03eeb51e237ce1600ed5" translate="yes" xml:space="preserve">
          <source>Returns the offset of where the last &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//g&lt;/a&gt;&lt;/code&gt; search left off for the variable in question (&lt;code&gt;$_&lt;/code&gt; is used when the variable is not specified). Note that 0 is a valid match offset. &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; indicates that the search position is reset (usually due to match failure, but can also be because no match has yet been run on the scalar).</source>
          <target state="translated">問題の変数の最後の &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m//g&lt;/a&gt;&lt;/code&gt; 検索が終了した場所のオフセットを返します（変数が指定されていない場合は &lt;code&gt;$_&lt;/code&gt; が使用されます）。0は有効な一致オフセットであることに注意してください。 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; は、検索位置がリセットされたことを示します（通常、一致の失敗が原因ですが、スカラーでまだ一致が実行されていないことが原因である場合もあります）。</target>
        </trans-unit>
        <trans-unit id="66cc4dc5054d673c3da8a7081460cafa3e4cf176" translate="yes" xml:space="preserve">
          <source>Returns the offset of where the last &lt;code&gt;&lt;a href=&quot;m&quot;&gt;m//g&lt;/a&gt;&lt;/code&gt; search left off for the variable in question (&lt;code&gt;$_&lt;/code&gt; is used when the variable is not specified). Note that 0 is a valid match offset. &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; indicates that the search position is reset (usually due to match failure, but can also be because no match has yet been run on the scalar).</source>
          <target state="translated">問題の変数の最後の &lt;code&gt;&lt;a href=&quot;m&quot;&gt;m//g&lt;/a&gt;&lt;/code&gt; 検索が終了した場所のオフセットを返します（変数が指定されていない場合は &lt;code&gt;$_&lt;/code&gt; が使用されます）。0は有効な一致オフセットであることに注意してください。 &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; は、検索位置がリセットされたことを示します（通常、一致の失敗が原因ですが、スカラーでまだ一致が実行されていないことが原因である場合もあります）。</target>
        </trans-unit>
        <trans-unit id="783e80c8529244f11ec8f9f07c22e72429a89029" translate="yes" xml:space="preserve">
          <source>Returns the original line of text which was parsed.</source>
          <target state="translated">解析したテキストの元の行を返します。</target>
        </trans-unit>
        <trans-unit id="72fc8546da5a908dbc3796e28a45b07488c75616" translate="yes" xml:space="preserve">
          <source>Returns the output filehandle object.</source>
          <target state="translated">出力ファイルハンドルオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="60430b499b4b64b22304735760bb5727bfef14af" translate="yes" xml:space="preserve">
          <source>Returns the package name of a stash, or NULL if &lt;code&gt;stash&lt;/code&gt; isn't a stash. See &lt;code&gt;SvSTASH&lt;/code&gt; , &lt;code&gt;CvSTASH&lt;/code&gt; .</source>
          <target state="translated">stashのパッケージ名を返します &lt;code&gt;stash&lt;/code&gt; がstashでない場合はNULLを返します。 &lt;code&gt;SvSTASH&lt;/code&gt; 、 &lt;code&gt;CvSTASH&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="c9fff387ed8c8cc9f10b8ce139430dc3f6589c9c" translate="yes" xml:space="preserve">
          <source>Returns the packed sockaddr address of the other end of the SOCKET connection.</source>
          <target state="translated">SOCKET接続のもう一方の端のパックされたsockaddrアドレスを返します。</target>
        </trans-unit>
        <trans-unit id="89b4231ee691a1a4005bb409d80fced81b7744e2" translate="yes" xml:space="preserve">
          <source>Returns the packed sockaddr address of this end of the SOCKET connection, in case you don't know the address because you have several different IPs that the connection might have come in on.</source>
          <target state="translated">接続先の IP が複数あるためにアドレスがわからない場合に備えて、 SOCKET 接続のこの端の sockaddr アドレスを返します。</target>
        </trans-unit>
        <trans-unit id="c0667351ad0e63a57bb566abac7473bf0fcb555e" translate="yes" xml:space="preserve">
          <source>Returns the pad name as a mortal SV.</source>
          <target state="translated">パッド名を死亡時のSVとして返します。</target>
        </trans-unit>
        <trans-unit id="30f16ac7990a07e134fd7ccd455f37484319b0c2" translate="yes" xml:space="preserve">
          <source>Returns the parent &lt;code&gt;Test::Builder&lt;/code&gt; instance, if any. Only used with child builders for nested TAP.</source>
          <target state="translated">親の &lt;code&gt;Test::Builder&lt;/code&gt; インスタンスがあれば、それを返します。ネストされたTAPの子ビルダーでのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="b3e471fd4c24036dd84d6c7f3be3ccbce8312808" translate="yes" xml:space="preserve">
          <source>Returns the parent OP of o, if it has a parent. Returns NULL otherwise. This function is only available on perls built with &lt;code&gt;-DPERL_OP_PARENT&lt;/code&gt; .</source>
          <target state="translated">親がある場合、oの親OPを返します。それ以外の場合はNULLを返します。この関数は、 &lt;code&gt;-DPERL_OP_PARENT&lt;/code&gt; で構築されたperlでのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="1b72ed6ea351fa7a3d9c61ea32093d26bc16168a" translate="yes" xml:space="preserve">
          <source>Returns the path name to the file on the server which contains the specified message.</source>
          <target state="translated">指定したメッセージを含むサーバ上のファイルへのパス名を返します。</target>
        </trans-unit>
        <trans-unit id="dec3c6352306cfa9beb43e8c29b31607e59b37c0" translate="yes" xml:space="preserve">
          <source>Returns the pathanme to the fifo at the peer end</source>
          <target state="translated">パス名をピアエンドで fifo に返します。</target>
        </trans-unit>
        <trans-unit id="4a63db9f3e3139732db96feb937992356457415d" translate="yes" xml:space="preserve">
          <source>Returns the pathname to the fifo at the local end</source>
          <target state="translated">ローカルエンドの fifo へのパス名を返します。</target>
        </trans-unit>
        <trans-unit id="f8304c2725119f232b821921ec287a53510a44d3" translate="yes" xml:space="preserve">
          <source>Returns the process id of the last process that performed an operation on the semaphore &lt;code&gt;SEM&lt;/code&gt; .</source>
          <target state="translated">セマフォ &lt;code&gt;SEM&lt;/code&gt; で操作を実行した最後のプロセスのプロセスIDを返します。</target>
        </trans-unit>
        <trans-unit id="a30abfb715705790f2643fb7d63590be70980c30" translate="yes" xml:space="preserve">
          <source>Returns the process id of the parent process.</source>
          <target state="translated">親プロセスのプロセスIDを返します。</target>
        </trans-unit>
        <trans-unit id="a24e95431b32943074e6b0e7739f39e159b654d8" translate="yes" xml:space="preserve">
          <source>Returns the process identifier. Identical to Perl's builtin variable &lt;code&gt;$$&lt;/code&gt; , see &lt;a href=&quot;perlvar#%24PID&quot;&gt;$PID in perlvar&lt;/a&gt;.</source>
          <target state="translated">プロセス識別子を返します。Perlの組み込み変数 &lt;code&gt;$$&lt;/code&gt; と同じです&lt;a href=&quot;perlvar#%24PID&quot;&gt;。perlvarの$ PIDを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b236461eeaca748a2b3ad95de81116a2fe96d741" translate="yes" xml:space="preserve">
          <source>Returns the prototype of a function as a string (or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the function has no prototype). FUNCTION is a reference to, or the name of, the function whose prototype you want to retrieve. If FUNCTION is omitted, $_ is used.</source>
          <target state="translated">関数のプロトタイプを文字列として返します（または関数にプロトタイプがない場合は &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; ）。FUNCTIONは、プロトタイプを取得する関数への参照または名前です。FUNCTIONを省略すると、$ _が使用されます。</target>
        </trans-unit>
        <trans-unit id="eb14b93e077b170f79f45700e7bb8c3b8c795487" translate="yes" xml:space="preserve">
          <source>Returns the prototype of a function as a string (or &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the function has no prototype). FUNCTION is a reference to, or the name of, the function whose prototype you want to retrieve. If FUNCTION is omitted, $_ is used.</source>
          <target state="translated">関数のプロトタイプを文字列として返します（または関数にプロトタイプがない場合は &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; ）。FUNCTIONは、プロトタイプを取得する関数への参照または名前です。FUNCTIONを省略すると、$ _が使用されます。</target>
        </trans-unit>
        <trans-unit id="a434e75a0357a748778c7ebac461e4592d53da12" translate="yes" xml:space="preserve">
          <source>Returns the raw value in the SV's IV slot, without checks or conversions. Only use when you are sure SvIOK is true. See also &lt;code&gt;SvIV()&lt;/code&gt; .</source>
          <target state="translated">チェックや変換なしで、SVのIVスロットの生の値を返します。SvIOKがtrueであることが確実な場合にのみ使用してください。 &lt;code&gt;SvIV()&lt;/code&gt; もご覧ください。</target>
        </trans-unit>
        <trans-unit id="8f4e9edd1be6b65ecaf809ad87d2118fc29fbe3c" translate="yes" xml:space="preserve">
          <source>Returns the raw value in the SV's NV slot, without checks or conversions. Only use when you are sure SvNOK is true. See also &lt;code&gt;SvNV()&lt;/code&gt; .</source>
          <target state="translated">チェックや変換を行わずに、SVのNVスロットの生の値を返します。SvNOKがtrueであることが確実な場合にのみ使用してください。 &lt;code&gt;SvNV()&lt;/code&gt; もご覧ください。</target>
        </trans-unit>
        <trans-unit id="d6dd8ebb6b0d5ad2aae103bba8da84b75a8ffa52" translate="yes" xml:space="preserve">
          <source>Returns the raw value in the SV's UV slot, without checks or conversions. Only use when you are sure SvIOK is true. See also &lt;code&gt;SvUV()&lt;/code&gt; .</source>
          <target state="translated">チェックや変換を行わずに、SVのUVスロットに未加工の値を返します。SvIOKがtrueであることが確実な場合にのみ使用してください。 &lt;code&gt;SvUV()&lt;/code&gt; もご覧ください。</target>
        </trans-unit>
        <trans-unit id="94b7d2f8ba8604b5f4a41178258115bbfa2a44d6" translate="yes" xml:space="preserve">
          <source>Returns the realclean_subdirs target. This is used by the realclean target to call realclean on any subdirectories which contain Makefiles.</source>
          <target state="translated">realclean_subdirs ターゲットを返します。これは realclean ターゲットが Makefiles を含むサブディレクトリに対して realclean をコールする際に使用します。</target>
        </trans-unit>
        <trans-unit id="4ac58687ff93e9e124997c224255653c7d53d34d" translate="yes" xml:space="preserve">
          <source>Returns the reference address of a reference $obj. If $obj is not a reference, returns $obj.</source>
          <target state="translated">参照 $obj の参照アドレスを返します。obj が参照でない場合は、$obj を返します。</target>
        </trans-unit>
        <trans-unit id="cfdfe21321198d76b312eaf4cebc6dd9147bcc57" translate="yes" xml:space="preserve">
          <source>Returns the remainder of the FQDN after the</source>
          <target state="translated">の後の残りのFQDNを返します。</target>
        </trans-unit>
        <trans-unit id="691ad0a16b9216b6ca373d7fe2f48a065eda5988" translate="yes" xml:space="preserve">
          <source>Returns the remaining time in the alarm in microseconds, or &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if an error occurred.</source>
          <target state="translated">アラームの残り時間をマイクロ秒単位で返します。エラーが発生した場合は &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="411816d1a113ef6da9e977f72dfb94f0b749f7ac" translate="yes" xml:space="preserve">
          <source>Returns the remaining time in the alarm in seconds, or &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if an error occurred.</source>
          <target state="translated">アラームの残り時間を秒単位で返します。エラーが発生した場合は &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="934d3c76d9239f8ba316060557ce7e19d1235609" translate="yes" xml:space="preserve">
          <source>Returns the result of adding OBJ2 to OBJ1.</source>
          <target state="translated">OBJ1にOBJ2を追加した結果を返します。</target>
        </trans-unit>
        <trans-unit id="0985e11191ccc8ef75f712db00960e57ec19eb9d" translate="yes" xml:space="preserve">
          <source>Returns the result of dividing OBJ1 by OBJ2 and truncating the result to an integer.</source>
          <target state="translated">OBJ1をOBJ2で除算し、その結果を整数に切り捨てた結果を返します。</target>
        </trans-unit>
        <trans-unit id="ede343da45a3982e8cca0190748b0cbeaa826658" translate="yes" xml:space="preserve">
          <source>Returns the result of multiplying OBJ2 and OBJ1.</source>
          <target state="translated">OBJ2とOBJ1を掛け合わせた結果を返します。</target>
        </trans-unit>
        <trans-unit id="6fdfa3ad313771603cd096432bfa11331e25b9ea" translate="yes" xml:space="preserve">
          <source>Returns the result of subtracting OBJ2 by OBJ1. If &lt;code&gt;flag&lt;/code&gt; is false or omitted, OBJ1 might be modified. If &lt;code&gt;flag&lt;/code&gt; is true, OBJ2 might be modified.</source>
          <target state="translated">OBJ2をOBJ1で減算した結果を返します。場合は &lt;code&gt;flag&lt;/code&gt; 偽または省略され、OBJ1が変更される可能性があります。場合は &lt;code&gt;flag&lt;/code&gt; 真である、OBJ2は変更される場合があります。</target>
        </trans-unit>
        <trans-unit id="2f75492cf713678a79f0a1d5e57aa692c5a28a64" translate="yes" xml:space="preserve">
          <source>Returns the result of the last call to the &lt;code&gt;BLOCK&lt;/code&gt; . If &lt;code&gt;@list&lt;/code&gt; is empty then &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned. If &lt;code&gt;@list&lt;/code&gt; only contains one element then that element is returned and &lt;code&gt;BLOCK&lt;/code&gt; is not executed.</source>
          <target state="translated">&lt;code&gt;BLOCK&lt;/code&gt; への最後の呼び出しの結果を返します。 &lt;code&gt;@list&lt;/code&gt; が空の場合、 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; が返されます。 &lt;code&gt;@list&lt;/code&gt; に1つの要素しか含まれていない場合、その要素が返され、 &lt;code&gt;BLOCK&lt;/code&gt; は実行されません。</target>
        </trans-unit>
        <trans-unit id="dd23a6b58f73aa5d163a67f87e6c7280edfa788a" translate="yes" xml:space="preserve">
          <source>Returns the revision number of UTS #10 this module consults, that should correspond with the DUCET incorporated.</source>
          <target state="translated">このモジュールが参照している UTS #10 のリビジョン番号を返します。</target>
        </trans-unit>
        <trans-unit id="cdbb628bb09e88629a54dd3f1600b416756da742" translate="yes" xml:space="preserve">
          <source>Returns the root op (i.e. an object in the appropriate B::OP-derived class) of the main part of the Perl program.</source>
          <target state="translated">Perlプログラムのメイン部分のルートOP(適切なB::OP由来のクラスのオブジェクト)を返します。</target>
        </trans-unit>
        <trans-unit id="f08858eb52cbd19872dd2a91cd76cd7365cadae6" translate="yes" xml:space="preserve">
          <source>Returns the shared memory identifier.</source>
          <target state="translated">共有メモリの識別子を返します。</target>
        </trans-unit>
        <trans-unit id="9103bc997591b4f276dae9dcd284ec32253cd98d" translate="yes" xml:space="preserve">
          <source>Returns the sibling of o, or NULL if there is no sibling</source>
          <target state="translated">o の兄弟姉妹を返します。</target>
        </trans-unit>
        <trans-unit id="9ba0588cfc9bf2485932a5a79df24f172279e9c6" translate="yes" xml:space="preserve">
          <source>Returns the sine of EXPR (expressed in radians). If EXPR is omitted, returns sine of &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">EXPR（ラジアンで表現）の正弦を返します。EXPRが省略された場合、 &lt;code&gt;$_&lt;/code&gt; 正弦を返します。</target>
        </trans-unit>
        <trans-unit id="13b988b656f88a25d6b8534b212c52399ee80bc3" translate="yes" xml:space="preserve">
          <source>Returns the size in bytes for the given file as stored on the remote server.</source>
          <target state="translated">指定したファイルのサイズを、リモートサーバに保存されているものとしてバイト単位で返します。</target>
        </trans-unit>
        <trans-unit id="18e15d217df6a17c8d97da5665c9189954385074" translate="yes" xml:space="preserve">
          <source>Returns the size of the string buffer in the SV, not including any part attributable to &lt;code&gt;SvOOK&lt;/code&gt; . See &lt;code&gt;SvCUR&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;SvOOK&lt;/code&gt; に起因する部分を含まない、SV内の文字列バッファのサイズを返します。 &lt;code&gt;SvCUR&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="deff1a1ce13a811d24a68718da12a4011d78ad85" translate="yes" xml:space="preserve">
          <source>Returns the smallest part of the FQDN which can be used to identify the host.</source>
          <target state="translated">ホストを識別するために使用できるFQDNの最小部分を返します。</target>
        </trans-unit>
        <trans-unit id="52ea7d106b3348445ad7c6d489849aceafa81ac3" translate="yes" xml:space="preserve">
          <source>Returns the stack size for a particular thread. A return value of zero indicates the system default stack size was used for the thread.</source>
          <target state="translated">特定のスレッドのスタックサイズを返します。返り値がゼロの場合は、そのスレッドにシステムのデフォルトのスタックサイズが使用されていることを示します。</target>
        </trans-unit>
        <trans-unit id="6376883dea84f50be2bb934689fe6bef04f6d0f7" translate="yes" xml:space="preserve">
          <source>Returns the starting op of the main part of the Perl program.</source>
          <target state="translated">Perlプログラムのメイン部分の開始オペランドを返します。</target>
        </trans-unit>
        <trans-unit id="d3065df28d2b23358010686a7550749e685f79ba" translate="yes" xml:space="preserve">
          <source>Returns the stash of the CV. A stash is the symbol table hash, containing the package-scoped variables in the package where the subroutine was defined. For more information, see &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt;.</source>
          <target state="translated">CVの隠し場所を返します。stashは、サブルーチンが定義されたパッケージ内のパッケージスコープ変数を含むシンボルテーブルハッシュです。詳細については、&lt;a href=&quot;perlguts&quot;&gt;perlgutsを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a1f0bb6740de7587d6844e1f412c95f92f304e1d" translate="yes" xml:space="preserve">
          <source>Returns the stash of the SV.</source>
          <target state="translated">SV の隠し場所を返します。</target>
        </trans-unit>
        <trans-unit id="f966e8a880ea7511ad99a930a5bdfda30c867abe" translate="yes" xml:space="preserve">
          <source>Returns the stringified form of the values in the list, subject to the configuration options below. The values will be named &lt;code&gt;$VAR&lt;/code&gt;</source>
          <target state="translated">以下の設定オプションに従って、リスト内の値の文字列形式を返します。値は &lt;code&gt;$VAR&lt;/code&gt; という名前になります</target>
        </trans-unit>
        <trans-unit id="dd93cdf43d7b00945abd54f2f9268dfbe9432751" translate="yes" xml:space="preserve">
          <source>Returns the stringified form of the values stored in the object (preserving the order in which they were supplied to &lt;code&gt;new&lt;/code&gt; ), subject to the configuration options below. In a list context, it returns a list of strings corresponding to the supplied values.</source>
          <target state="translated">以下の設定オプションに従って、オブジェクトに格納された値の文字列化された形式を返します（それらが &lt;code&gt;new&lt;/code&gt; に提供された順序を維持します）。リストコンテキストでは、指定された値に対応する文字列のリストを返します。</target>
        </trans-unit>
        <trans-unit id="6ebec182c33fde665bf986502917cab4add7ec8a" translate="yes" xml:space="preserve">
          <source>Returns the sum of two Benchmark times as a Benchmark object suitable for passing to timestr().</source>
          <target state="translated">timestr()に渡すのに適したBenchmarkオブジェクトとして、2つのBenchmark時間の合計を返します。</target>
        </trans-unit>
        <trans-unit id="f6822f634825c2fc618e64dda74ca77d744f1c2a" translate="yes" xml:space="preserve">
          <source>Returns the system identifier for the semaphore set.</source>
          <target state="translated">セマフォセットのシステム識別子を返します。</target>
        </trans-unit>
        <trans-unit id="cb6c1ef855e52f1907c90fb23a471aeeec576f7e" translate="yes" xml:space="preserve">
          <source>Returns the system message queue identifier.</source>
          <target state="translated">システムメッセージキューの識別子を返します。</target>
        </trans-unit>
        <trans-unit id="00b03ab234d7468f6beb3d969a96580e7b637c7a" translate="yes" xml:space="preserve">
          <source>Returns the test plan, if found.</source>
          <target state="translated">テスト計画が見つかった場合、テスト計画を返します。</target>
        </trans-unit>
        <trans-unit id="0abaf4d3a631432f2373c928cd0eeac33b04645f" translate="yes" xml:space="preserve">
          <source>Returns the tests for a given generation. This is a hashref or a hash, depending on context called. The keys to the hash are the individual test names and the value is a hashref with various interesting values. Each k/v pair might resemble something like this:</source>
          <target state="translated">指定した世代のテストを返します。これは、呼び出されたコンテキストに応じて、ハッシュまたはハッシュです。ハッシュのキーは個々のテスト名で、値は様々な興味深い値を持つハッシュrefです。それぞれのk/vのペアは以下のようになります。</target>
        </trans-unit>
        <trans-unit id="18fd0e735c5571e3935fb38043c3d22c834fcdc7" translate="yes" xml:space="preserve">
          <source>Returns the text message returned from the last command. In a scalar context it returns a single string, in a list context it will return each line as a separate element. (See &lt;a href=&quot;#PSEUDO-RESPONSES&quot;&gt;PSEUDO RESPONSES&lt;/a&gt; below.)</source>
          <target state="translated">最後のコマンドから返されたテキストメッセージを返します。スカラーコンテキストでは単一の文字列を返し、リストコンテキストでは各行を個別の要素として返します。（下記の「&lt;a href=&quot;#PSEUDO-RESPONSES&quot;&gt;疑似応答&lt;/a&gt;」を参照してください。）</target>
        </trans-unit>
        <trans-unit id="7c44afcdd39adc1d907085b68dc1328eb7cd3007" translate="yes" xml:space="preserve">
          <source>Returns the thread object to allow for method chaining:</source>
          <target state="translated">メソッドの連結を可能にするためのスレッドオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="f0c5bdaab3901a070c8ff8976040622396c4fc54" translate="yes" xml:space="preserve">
          <source>Returns the total number of bytes compressed bytes input to inflate.</source>
          <target state="translated">インフレーションするために入力された圧縮バイト数の合計を返します。</target>
        </trans-unit>
        <trans-unit id="c4608b14c708e673ffb160c24fbb6c9c9cca1c3c" translate="yes" xml:space="preserve">
          <source>Returns the total number of bytes uncompressed bytes input to deflate.</source>
          <target state="translated">デフレーションするために入力された非圧縮バイト数の合計を返します。</target>
        </trans-unit>
        <trans-unit id="06d2f89d66b6e7fed6561b11134472534b1ff3d6" translate="yes" xml:space="preserve">
          <source>Returns the total number of compressed bytes output from deflate.</source>
          <target state="translated">deflate から出力された圧縮バイト数の合計を返します。</target>
        </trans-unit>
        <trans-unit id="e092ecc1045e3db259589051f70b5ddb29616d9c" translate="yes" xml:space="preserve">
          <source>Returns the total number of items in the tied array associated with object</source>
          <target state="translated">オブジェクトに関連付けられた紐付き配列内のアイテムの総数を返します。</target>
        </trans-unit>
        <trans-unit id="427a725c8edd92830c88e3b37e3c91c03dd17d77" translate="yes" xml:space="preserve">
          <source>Returns the total number of tests run.</source>
          <target state="translated">実行したテストの総数を返します。</target>
        </trans-unit>
        <trans-unit id="1981b6345507b455c470b49283a6ecbb90fc90fa" translate="yes" xml:space="preserve">
          <source>Returns the total number of uncompressed bytes output from inflate.</source>
          <target state="translated">inflate から出力された非圧縮バイト数の合計を返します。</target>
        </trans-unit>
        <trans-unit id="689f1582b0eb5b567883c72791b662055f790c66" translate="yes" xml:space="preserve">
          <source>Returns the type of result, such as &lt;code&gt;comment&lt;/code&gt; or &lt;code&gt;test&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;comment&lt;/code&gt; や &lt;code&gt;test&lt;/code&gt; など、結果のタイプを返します。</target>
        </trans-unit>
        <trans-unit id="6996ea16c99b1393d93a1d7ce3eb9ad6f40d481b" translate="yes" xml:space="preserve">
          <source>Returns the type of the SV. See &lt;code&gt;svtype&lt;/code&gt; .</source>
          <target state="translated">SVのタイプを返します。 &lt;code&gt;svtype&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="cd6b42c4d1a9ea14e0eb7b552f7e0166fc5e5a67" translate="yes" xml:space="preserve">
          <source>Returns the uncompressed file offset.</source>
          <target state="translated">非圧縮ファイルのオフセットを返します。</target>
        </trans-unit>
        <trans-unit id="0b13dba661fcc526017b777ec9f0f6a6fc961688" translate="yes" xml:space="preserve">
          <source>Returns the undefined value if the array is empty, although this may also happen at other times. If ARRAY is omitted, pops the &lt;code&gt;@ARGV&lt;/code&gt; array in the main program, but the &lt;code&gt;@_&lt;/code&gt; array in subroutines, just like &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">配列が空の場合、未定義の値を返しますが、これは他の場合にも発生する可能性があります。ARRAYが省略されている場合、メインプログラムでは &lt;code&gt;@ARGV&lt;/code&gt; 配列がポップされますが、 &lt;code&gt;&lt;a href=&quot;functions/shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; では、 &lt;code&gt;@_&lt;/code&gt; 配列がサブルーチンでポップされます。</target>
        </trans-unit>
        <trans-unit id="e6ccc500f6a9b6dee674b7e4875674f5071805d9" translate="yes" xml:space="preserve">
          <source>Returns the undefined value if the array is empty, although this may also happen at other times. If ARRAY is omitted, pops the &lt;code&gt;@ARGV&lt;/code&gt; array in the main program, but the &lt;code&gt;@_&lt;/code&gt; array in subroutines, just like &lt;code&gt;&lt;a href=&quot;shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">配列が空の場合、未定義の値を返しますが、これは他の場合にも発生する可能性があります。ARRAYが省略されている場合、メインプログラムでは &lt;code&gt;@ARGV&lt;/code&gt; 配列がポップされますが、 &lt;code&gt;&lt;a href=&quot;shift&quot;&gt;shift&lt;/a&gt;&lt;/code&gt; では、 &lt;code&gt;@_&lt;/code&gt; 配列がサブルーチンでポップされます。</target>
        </trans-unit>
        <trans-unit id="f6fdde83d2b8ad29f3a1a2c3bd2bc04ec145f517" translate="yes" xml:space="preserve">
          <source>Returns the user's identifier. Identical to Perl's builtin &lt;code&gt;$&amp;lt;&lt;/code&gt; variable, see &lt;a href=&quot;perlvar#%24UID&quot;&gt;$UID in perlvar&lt;/a&gt;.</source>
          <target state="translated">ユーザーの識別子を返します。Perlの組み込み &lt;code&gt;$&amp;lt;&lt;/code&gt; 変数と同じです&lt;a href=&quot;perlvar#%24UID&quot;&gt;。perlvarの$ UIDを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="85efab0e57c4279f7b5baf43ffb326faed2626c3" translate="yes" xml:space="preserve">
          <source>Returns the user's real group identifier. Similar to Perl's builtin variable &lt;code&gt;$)&lt;/code&gt; , see &lt;a href=&quot;perlvar#%24GID&quot;&gt;$GID in perlvar&lt;/a&gt;.</source>
          <target state="translated">ユーザーの実際のグループ識別子を返します。Perlの組み込み変数 &lt;code&gt;$)&lt;/code&gt; と同様に&lt;a href=&quot;perlvar#%24GID&quot;&gt;、perlvarの$ GIDを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="0f1e01fc4f899b71104441ca6cde6b2bc0d8e11e" translate="yes" xml:space="preserve">
          <source>Returns the value from the current position of the hash iterator. See &lt;code&gt;hv_iterkey&lt;/code&gt; .</source>
          <target state="translated">ハッシュ反復子の現在の位置から値を返します。 &lt;code&gt;hv_iterkey&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="52fd08e361909d4be5dbfd42ddda55c8051f004d" translate="yes" xml:space="preserve">
          <source>Returns the value of &lt;code&gt;$num&lt;/code&gt; taken to the power &lt;code&gt;$exp&lt;/code&gt; in the modulus &lt;code&gt;$mod&lt;/code&gt; using binary exponentiation. &lt;code&gt;bmodpow&lt;/code&gt; is far superior to writing</source>
          <target state="translated">バイナリ累乗を使用して、法 &lt;code&gt;$mod&lt;/code&gt; &lt;code&gt;$exp&lt;/code&gt; の累乗 &lt;code&gt;$num&lt;/code&gt; の値を返します。 &lt;code&gt;bmodpow&lt;/code&gt; は書くよりはるかに優れています</target>
        </trans-unit>
        <trans-unit id="3b09599e7e883f641c6cc99b4d5d6382e5376f16" translate="yes" xml:space="preserve">
          <source>Returns the value of EXPR with all the ASCII non-&quot;word&quot; characters backslashed. (That is, all ASCII characters not matching &lt;code&gt;/[A-Za-z_0-9]/&lt;/code&gt; will be preceded by a backslash in the returned string, regardless of any locale settings.) This is the internal function implementing the &lt;code&gt;\Q&lt;/code&gt; escape in double-quoted strings. (See below for the behavior on non-ASCII code points.)</source>
          <target state="translated">ASCIIの「単語」以外のすべての文字にバックスラッシュを付けたEXPRの値を返します。（つまり、 &lt;code&gt;/[A-Za-z_0-9]/&lt;/code&gt; に一致しないすべてのASCII文字は、ロケール設定に関係なく、返される文字列でバックスラッシュが前に付きます。）これは、 &lt;code&gt;\Q&lt;/code&gt; エスケープをdoubleで実装する内部関数です-引用された文字列。（非ASCIIコードポイントの動作については、以下を参照してください。）</target>
        </trans-unit>
        <trans-unit id="2d400c54fe42741adfb28f14ca6863c2eec3b9ba" translate="yes" xml:space="preserve">
          <source>Returns the value of EXPR with the first character in uppercase (titlecase in Unicode). This is the internal function implementing the &lt;code&gt;\u&lt;/code&gt; escape in double-quoted strings.</source>
          <target state="translated">最初の文字を大文字（Unicodeではタイトルケース）でEXPRの値を返します。これは、二重引用符で囲まれた文字列で &lt;code&gt;\u&lt;/code&gt; エスケープを実装する内部関数です。</target>
        </trans-unit>
        <trans-unit id="95ceac0c306dd626f5ab7cda760028cad6d8817d" translate="yes" xml:space="preserve">
          <source>Returns the value of EXPR with the first character lowercased. This is the internal function implementing the &lt;code&gt;\l&lt;/code&gt; escape in double-quoted strings.</source>
          <target state="translated">最初の文字を小文字にしてEXPRの値を返します。これは、二重引用符で囲まれた文字列で &lt;code&gt;\l&lt;/code&gt; エスケープを実装する内部関数です。</target>
        </trans-unit>
        <trans-unit id="7c53e13d60d27926fdd5b2424eee55ad7bc1748d" translate="yes" xml:space="preserve">
          <source>Returns the value of a symbolic link, if symbolic links are implemented. If not, raises an exception. If there is a system error, returns the undefined value and sets &lt;code&gt;$!&lt;/code&gt; (errno). If EXPR is omitted, uses &lt;code&gt;$_&lt;/code&gt; .</source>
          <target state="translated">シンボリックリンクが実装されている場合、シンボリックリンクの値を返します。そうでない場合は、例外が発生します。システムエラーがある場合、未定義の値を返し、 &lt;code&gt;$!&lt;/code&gt; を設定します。（errno）。EXPRが省略されている場合は、 &lt;code&gt;$_&lt;/code&gt; 使用します。</target>
        </trans-unit>
        <trans-unit id="2375760a832779382294e9fa907c5d3e3ad7f675" translate="yes" xml:space="preserve">
          <source>Returns the value of an ASCII-range hex digit and advances the string pointer. Behaviour is only well defined when isXDIGIT(*str) is true.</source>
          <target state="translated">ASCII範囲の16進数の値を返し、文字列ポインタを進めます。isXDIGIT(*str)が真の場合のみ動作が定義されます。</target>
        </trans-unit>
        <trans-unit id="c7b80e8466f98eb2c40b79beaca15b258d25281c" translate="yes" xml:space="preserve">
          <source>Returns the value of errno.</source>
          <target state="translated">errnoの値を返します。</target>
        </trans-unit>
        <trans-unit id="9adec3509ce8f9ad18ba22035f03aad2a0b1e785" translate="yes" xml:space="preserve">
          <source>Returns the value of the IV,</source>
          <target state="translated">IV の値を返します。</target>
        </trans-unit>
        <trans-unit id="a67d21554f8528cd56f302014c728725b03d27a7" translate="yes" xml:space="preserve">
          <source>Returns the value of the object's reference count.</source>
          <target state="translated">オブジェクトの参照カウントの値を返します。</target>
        </trans-unit>
        <trans-unit id="ed600390a736f758647014b404d8da9e8f3672f0" translate="yes" xml:space="preserve">
          <source>Returns the value of the specified environment variable. The same information is available through the &lt;code&gt;%ENV&lt;/code&gt; array.</source>
          <target state="translated">指定された環境変数の値を返します。同じ情報は、 &lt;code&gt;%ENV&lt;/code&gt; 配列でも利用できます。</target>
        </trans-unit>
        <trans-unit id="a2b158779c21c22f9687811637ee298f2a0a92bb" translate="yes" xml:space="preserve">
          <source>Returns the value slot (type &lt;code&gt;SV*&lt;/code&gt; ) stored in the hash entry. Can be assigned to.</source>
          <target state="translated">ハッシュエントリに格納されている値スロット（タイプ &lt;code&gt;SV*&lt;/code&gt; ）を返します。に割り当てることができます。</target>
        </trans-unit>
        <trans-unit id="f304fc671c17ec909353d9d852ad6f9b8756324c" translate="yes" xml:space="preserve">
          <source>Returns the value used by the constructor, and passed to IO::Socket::INET, to connect to the host.</source>
          <target state="translated">コンストラクタで使用され、IO::Socket::INETに渡され、ホストに接続するために使用される値を返します。</target>
        </trans-unit>
        <trans-unit id="44ebf4dd62b1de35d6b110fc2c3bf137a56f04b5" translate="yes" xml:space="preserve">
          <source>Returns the values of the input in a random order</source>
          <target state="translated">入力の値をランダムな順序で返します。</target>
        </trans-unit>
        <trans-unit id="aae391a8019cffd16e88e8c77d6ee4981b00cb05" translate="yes" xml:space="preserve">
          <source>Returns the values of the semaphore set as an array.</source>
          <target state="translated">セマフォのセットの値を配列で返します。</target>
        </trans-unit>
        <trans-unit id="3fa727c04d26ffd29634f2a1d3e06d3d49642e86" translate="yes" xml:space="preserve">
          <source>Returns the version number (a string) of the Unicode Standard which the &lt;code&gt;table&lt;/code&gt; file used by the collator object is based on. If the table does not include a version line (starting with &lt;code&gt;@version&lt;/code&gt; ), returns &lt;code&gt;&quot;unknown&quot;&lt;/code&gt; .</source>
          <target state="translated">collat​​orオブジェクトが使用する &lt;code&gt;table&lt;/code&gt; ファイルが基づくUnicode標準のバージョン番号（文字列）を返します。テーブルに（ &lt;code&gt;@version&lt;/code&gt; で始まる）バージョン行が含まれていない場合、 &lt;code&gt;&quot;unknown&quot;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="c43991c04c0c1372a551cb8ce01e6a866bc87957" translate="yes" xml:space="preserve">
          <source>Returns the version number of UTS #10 this module consults, that should correspond with the DUCET incorporated.</source>
          <target state="translated">このモジュールが参照している UTS #10 のバージョン番号を返します。</target>
        </trans-unit>
        <trans-unit id="df2014ff2454fb3c77163e1b8bb40e5c6fa511b5" translate="yes" xml:space="preserve">
          <source>Returns the version number of the available module in readable format.</source>
          <target state="translated">利用可能なモジュールのバージョン番号を読み取り可能な形式で返します。</target>
        </trans-unit>
        <trans-unit id="37862cfa298d82ed45105eae51b8f01143f37444" translate="yes" xml:space="preserve">
          <source>Returns the version number of the installed module in readable format.</source>
          <target state="translated">インストールされているモジュールのバージョン番号を読み取り可能な形式で返します。</target>
        </trans-unit>
        <trans-unit id="6984540058ab0766dafaf794c5a7db314a164bd0" translate="yes" xml:space="preserve">
          <source>Returns the version of the underlying bzip2 library.</source>
          <target state="translated">bzip2 ライブラリのバージョンを返します。</target>
        </trans-unit>
        <trans-unit id="1d2fb973769b42e32f64b5b9e7e5484fe7f157f7" translate="yes" xml:space="preserve">
          <source>Returns the version of the zlib library.</source>
          <target state="translated">zlibライブラリのバージョンを返します。</target>
        </trans-unit>
        <trans-unit id="7d63e1e041bf6c2b63dc17e62e16171c075c7660" translate="yes" xml:space="preserve">
          <source>Returns the wall-clock time when the Parser was created.</source>
          <target state="translated">パーサーが作成された時の壁時計の時間を返します。</target>
        </trans-unit>
        <trans-unit id="6a5155335fff92a3cb435faf1ea8f2b5273df9bb" translate="yes" xml:space="preserve">
          <source>Returns the wall-clock time when the end of TAP input was seen.</source>
          <target state="translated">TAP 入力の終了を見た時の壁時計の時刻を返します。</target>
        </trans-unit>
        <trans-unit id="ed2e4f04106b910dc53430cf4bfefc37bd047fe7" translate="yes" xml:space="preserve">
          <source>Returns true if</source>
          <target state="translated">の場合は真を返します。</target>
        </trans-unit>
        <trans-unit id="4da324a95fbc80c5b9fe720971dc0126ec92b091" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;$ref&lt;/code&gt; is a weak reference.</source>
          <target state="translated">&lt;code&gt;$ref&lt;/code&gt; が弱参照の場合はtrueを返します。</target>
        </trans-unit>
        <trans-unit id="47aeb6d44fb13be59145db7788f8704196e2d02b" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;$var&lt;/code&gt; is readonly.</source>
          <target state="translated">&lt;code&gt;$var&lt;/code&gt; が読み取り専用の場合、trueを返します。</target>
        </trans-unit>
        <trans-unit id="f95d2b325ed0e71c04b8d53f29a9fcbf4645953b" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;&amp;lt;$self-&lt;/code&gt; make&amp;gt;&amp;gt; is the given type; possibilities are:</source>
          <target state="translated">&lt;code&gt;&amp;lt;$self-&lt;/code&gt; make &amp;gt;&amp;gt;が指定されたタイプの場合、trueを返します。可能性は：</target>
        </trans-unit>
        <trans-unit id="6640c925e7db6ea286cf7fbbe8c1821aa2b2b7ed" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;Archive::Tar&lt;/code&gt; can extract &lt;code&gt;bzip2&lt;/code&gt; compressed archives</source>
          <target state="translated">&lt;code&gt;Archive::Tar&lt;/code&gt; が &lt;code&gt;bzip2&lt;/code&gt; 圧縮アーカイブを抽出できる場合、trueを返します</target>
        </trans-unit>
        <trans-unit id="097a09a0980755f5b5aaee6c4ea94d3ded8c2f1c" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;Archive::Tar&lt;/code&gt; can extract &lt;code&gt;zlib&lt;/code&gt; compressed archives</source>
          <target state="translated">&lt;code&gt;Archive::Tar&lt;/code&gt; が &lt;code&gt;zlib&lt;/code&gt; 圧縮アーカイブを抽出できる場合、trueを返します</target>
        </trans-unit>
        <trans-unit id="53f4c5181323486757b7012ccc41933f9e15252b" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;Compress::Zlib&lt;/code&gt; is available. Note that this does not mean that &lt;code&gt;Compress::Zlib&lt;/code&gt; is being used: see &lt;a href=&quot;#gzip_external&quot;&gt;gzip_external&lt;/a&gt; and &lt;a href=&quot;http://search.cpan.org/perldoc/gzip_used&quot;&gt;gzip_used&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Compress::Zlib&lt;/code&gt; が使用可能な場合はtrueを返します。これは &lt;code&gt;Compress::Zlib&lt;/code&gt; が使用されていることを意味しないことに注意してください&lt;a href=&quot;#gzip_external&quot;&gt;。gzip_external&lt;/a&gt;および&lt;a href=&quot;http://search.cpan.org/perldoc/gzip_used&quot;&gt;gzip_usedを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="20bf1d834149c96f974797ae3b16c138792ec181" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;arg&lt;/code&gt; is subject to overloading of some operations.</source>
          <target state="translated">&lt;code&gt;arg&lt;/code&gt; が一部の操作のオーバーロードの影響を受ける場合はtrueを返します。</target>
        </trans-unit>
        <trans-unit id="e2615132d98702c39aee2818f6b4d6e992a35f89" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;make&lt;/code&gt; can handle (probably by quoting) dependencies that contain a space. Currently known true for GNU make, false for BSD pmake derivative.</source>
          <target state="translated">&lt;code&gt;make&lt;/code&gt; がスペースを含む依存関係を（おそらく引用によって）処理できる場合は trueを返します。現在、GNU makeではtrue、BSD pmake派生ではfalseと呼ばれています。</target>
        </trans-unit>
        <trans-unit id="a64ae7a302c259faf3a91bf8054b43f98292b3d6" translate="yes" xml:space="preserve">
          <source>Returns true if C, XS, MYEXTLIB or similar objects exist within this object that need a compiler. Does not descend into subdirectories as needs_linking() does.</source>
          <target state="translated">C、XS、MYEXTLIB、または類似のオブジェクトがこのオブジェクト内に存在し、コンパイラを必要としている場合に真を返します。needs_linking()のようにサブディレクトリに降順することはありません。</target>
        </trans-unit>
        <trans-unit id="e2a943d4344737fedde0486fc361844b04fbfab3" translate="yes" xml:space="preserve">
          <source>Returns true if MODULE is marked as deprecated in PERL_VERSION. If PERL_VERSION is omitted, it defaults to the current version of Perl.</source>
          <target state="translated">PERL_VERSION で MODULE が deprecated とマークされている場合に true を返します。PERL_VERSION が省略された場合は、現在の Perl のバージョンがデフォルトとなります。</target>
        </trans-unit>
        <trans-unit id="9ddf8ac076f87248553a1744aa4c9f8d19563b6f" translate="yes" xml:space="preserve">
          <source>Returns true if MODULE was bundled with the specified version of Perl. You can optionally specify a minimum version of the module, and can also specify a version of Perl. If a version of Perl isn't specified, &lt;code&gt;is_core()&lt;/code&gt; will use the numeric version of Perl that is running (ie &lt;code&gt;$]&lt;/code&gt; ).</source>
          <target state="translated">MODULEが指定されたバージョンのPerlにバンドルされている場合はtrueを返します。オプションで、モジュールの最小バージョンを指定でき、Perlのバージョンも指定できます。Perlのバージョンが指定されていない場合、 &lt;code&gt;is_core()&lt;/code&gt; は実行中のPerlの数値バージョン（つまり &lt;code&gt;$]&lt;/code&gt; ）を使用します。</target>
        </trans-unit>
        <trans-unit id="c50f3867b6c57790c9d0ffb22d4f984c8e12beaf" translate="yes" xml:space="preserve">
          <source>Returns true if a backtrace could be retrieved, false if not.</source>
          <target state="translated">バックトレースが取得できた場合は true、取得できなかった場合は false を返します。</target>
        </trans-unit>
        <trans-unit id="1b44016bfcbe04b6586f1a44576dbe6c5dd811ca" translate="yes" xml:space="preserve">
          <source>Returns true if a thread is still running (i.e., if its entry point function has not yet finished or exited).</source>
          <target state="translated">スレッドがまだ実行中の場合(つまり、エントリポイント関数がまだ終了していないか終了していない場合)に真を返します。</target>
        </trans-unit>
        <trans-unit id="dcd6286ed136ef27ce6f021e3f240e0d956cc9d3" translate="yes" xml:space="preserve">
          <source>Returns true if all copies succeeded, false otherwise.</source>
          <target state="translated">すべてのコピーが成功した場合は true、そうでない場合は false を返します。</target>
        </trans-unit>
        <trans-unit id="c484acc777160fa213787bde200b697b5e359b72" translate="yes" xml:space="preserve">
          <source>Returns true if all moves succeeded, false otherwise.</source>
          <target state="translated">すべての手が成功した場合はtrueを、そうでない場合はfalseを返します。</target>
        </trans-unit>
        <trans-unit id="0de48b342093ad5d26eae4ecf7389dda0a98fe8a" translate="yes" xml:space="preserve">
          <source>Returns true if implementation has a buffer, and can return pointer to whole buffer and its size. Used by perl for &lt;b&gt;-T&lt;/b&gt; / &lt;b&gt;-B&lt;/b&gt; tests. Other uses would be very obscure...</source>
          <target state="translated">実装にバッファがある場合はtrueを返し、バッファ全体へのポインタとそのサイズを返すことができます。perlが&lt;b&gt;-T&lt;/b&gt; / &lt;b&gt;-B&lt;/b&gt;テストに使用します。他の用途は非常に不明瞭です...</target>
        </trans-unit>
        <trans-unit id="10a3a96d5fac5f6ce937d9b2bf9324cc77950396" translate="yes" xml:space="preserve">
          <source>Returns true if implementation has all the interfaces required to allow perl's &lt;code&gt;sv_gets&lt;/code&gt; to &quot;bypass&quot; normal IO mechanism. This can vary from handle to handle.</source>
          <target state="translated">perlの &lt;code&gt;sv_gets&lt;/code&gt; が通常のIOメカニズムを「バイパス」できるようにするために必要なすべてのインターフェースが実装にある場合はtrueを返します。これはハンドルごとに異なります。</target>
        </trans-unit>
        <trans-unit id="e1a0c9d61807bdca034a1ddbe7a877069a3e72f0" translate="yes" xml:space="preserve">
          <source>Returns true if o has a sibling</source>
          <target state="translated">o に兄弟がある場合に true を返します。</target>
        </trans-unit>
        <trans-unit id="da60c4762a50d2388782db8a105b48bd656d3e40" translate="yes" xml:space="preserve">
          <source>Returns true if perl thinks &lt;code&gt;$var&lt;/code&gt; is a number. See &lt;a href=&quot;../perlapi#looks_like_number&quot;&gt;looks_like_number in perlapi&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;$var&lt;/code&gt; が数値であるとperlが判断した場合にtrueを返します。&lt;a href=&quot;../perlapi#looks_like_number&quot;&gt;perlapiのlooks_like_numberを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1cd5069f1020afc9a12639bf7ffb4954393da1cb" translate="yes" xml:space="preserve">
          <source>Returns true if some new text was added to the buffer, or false if the buffer has reached the end of the input text.</source>
          <target state="translated">バッファに新しいテキストが追加された場合は true、入力テキストがバッファの終端に達した場合は false を返します。</target>
        </trans-unit>
        <trans-unit id="5bf6c266e6971bff3c0632523caf0469c2fae0a5" translate="yes" xml:space="preserve">
          <source>Returns true if successful.</source>
          <target state="translated">成功した場合はtrueを返します。</target>
        </trans-unit>
        <trans-unit id="61d51461172eed59e4390319f9a62c6f1c196914" translate="yes" xml:space="preserve">
          <source>Returns true if the &lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; method has been called.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../functions/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; メソッドが呼び出された場合はtrueを返します。</target>
        </trans-unit>
        <trans-unit id="0efca7dadde7431809e7bd764986970c8e6ed89a" translate="yes" xml:space="preserve">
          <source>Returns true if the SV has a true value by Perl's rules. Use the &lt;code&gt;SvTRUE&lt;/code&gt; macro instead, which may call &lt;code&gt;sv_true()&lt;/code&gt; or may instead use an in-line version.</source>
          <target state="translated">Perlのルールにより、SVにtrue値がある場合はtrueを返します。代わりに &lt;code&gt;SvTRUE&lt;/code&gt; マクロを使用します。これは、 &lt;code&gt;sv_true()&lt;/code&gt; を呼び出すか、代わりにインラインバージョンを使用します。</target>
        </trans-unit>
        <trans-unit id="c788f1858dc6c04f02a0039b15605291ddd9b724" translate="yes" xml:space="preserve">
          <source>Returns true if the SV has get magic or overloading. If either is true then the scalar is active data, and has the potential to return a new value every time it is accessed. Hence you must be careful to only read it once per user logical operation and work with that returned value. If neither is true then the scalar's value cannot change unless written to.</source>
          <target state="translated">SV が get magic またはオーバーロードしている場合に true を返します。どちらかが真の場合、スカラーはアクティブなデータであり、アクセスされるたびに新しい値を返す可能性があります。そのため、ユーザーの論理操作ごとに一度だけスカラーを読み込んで、その戻り値を使って処理するように注意しなければなりません。どちらも真でない場合は、スカラの値は書き込まれない限り変更できません。</target>
        </trans-unit>
        <trans-unit id="f516034ddab4dc82ec24aa62a130edf02e5ef266" translate="yes" xml:space="preserve">
          <source>Returns true if the argument is &lt;code&gt;NaN&lt;/code&gt; (not-a-number) [C99].</source>
          <target state="translated">引数が &lt;code&gt;NaN&lt;/code&gt; （非数）[C99]の場合、trueを返します。</target>
        </trans-unit>
        <trans-unit id="b203b18b3c4abc08a3fe30ef9a1a52388c595620" translate="yes" xml:space="preserve">
          <source>Returns true if the argument is a compiled regular expression as returned by &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt;, false if it is not.</source>
          <target state="translated">引数が &lt;code&gt;&lt;a href=&quot;functions/qr&quot;&gt;qr//&lt;/a&gt;&lt;/code&gt; によって返されるコンパイル済み正規表現である場合はtrueを返し、そうでない場合はfalseを返します。</target>
        </trans-unit>
        <trans-unit id="a935c230a2ab8bc372e69c5ed9a2f7ffc933c1a8" translate="yes" xml:space="preserve">
          <source>Returns true if the argument is a finite number (that is, not an infinity, or the not-a-number) [C99].</source>
          <target state="translated">引数が有限数であれば真を返します(無限大ではなく、非数でもありません)[C99]。</target>
        </trans-unit>
        <trans-unit id="1f10c37fb922fab58eefa878c1a15696e8ebfad8" translate="yes" xml:space="preserve">
          <source>Returns true if the argument is an infinity (positive or negative) [C99].</source>
          <target state="translated">引数が無限大(正または負)であれば真を返します[C99]。</target>
        </trans-unit>
        <trans-unit id="92ae4d0a491f5c0e34207aef83ac4ea519198664" translate="yes" xml:space="preserve">
          <source>Returns true if the argument is normal (that is, not a subnormal/denormal, and not an infinity, or a not-a-number) [C99].</source>
          <target state="translated">引数が正規値であれば真を返します(つまり、亜正規値/正規値ではなく、無限大でもなく、数でもない)[C99]。</target>
        </trans-unit>
        <trans-unit id="2be5c07f18b17fd28aa02070537cb445b797d23a" translate="yes" xml:space="preserve">
          <source>Returns true if the context of the currently executing subroutine or &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; is looking for a list value. Returns false if the context is looking for a scalar. Returns the undefined value if the context is looking for no value (void context).</source>
          <target state="translated">現在実行中のサブルーチンまたは &lt;code&gt;&lt;a href=&quot;eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; のコンテキストがリスト値を探している場合は、trueを返します。コンテキストがスカラーを探している場合はfalseを返します。コンテキストが値を検索しない場合（ボイドコンテキスト）、未定義の値を返します。</target>
        </trans-unit>
        <trans-unit id="2a7d0b45afa62d6038916062a47dfbc62ef8ba5f" translate="yes" xml:space="preserve">
          <source>Returns true if the context of the currently executing subroutine or &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; is looking for a list value. Returns false if the context is looking for a scalar. Returns the undefined value if the context is looking for no value (void context).</source>
          <target state="translated">現在実行中のサブルーチンまたは &lt;code&gt;&lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt;&lt;/code&gt; のコンテキストがリスト値を探している場合は、trueを返します。コンテキストがスカラーを探している場合はfalseを返します。コンテキストが値を検索しない場合（ボイドコンテキスト）、未定義の値を返します。</target>
        </trans-unit>
        <trans-unit id="b91850a84bf1d1a3bd747c97a1a7c21e57479110" translate="yes" xml:space="preserve">
          <source>Returns true if the current system has a working C compiler and linker, false otherwise. To determine this, we actually compile and link a sample C library. The sample will be compiled in the system tempdir or, if that fails for some reason, in the current directory.</source>
          <target state="translated">現在のシステムが動作するCコンパイラとリンカを持っている場合はtrueを返し、そうでない場合はfalseを返します。これを判断するために、実際にサンプルの C ライブラリをコンパイルしてリンクします。サンプルは、システムの tempdir にコンパイルされますが、何らかの理由で失敗した場合はカレントディレクトリにコンパイルされます。</target>
        </trans-unit>
        <trans-unit id="482c217957cb2df6d53192611a5e7bdb0a875970" translate="yes" xml:space="preserve">
          <source>Returns true if the effective name is in UTF8 encoding.</source>
          <target state="translated">有効な名前が UTF8 エンコーディングの場合に true を返します。</target>
        </trans-unit>
        <trans-unit id="501a38d82aa91865b220249a5d3fc899775d9f9a" translate="yes" xml:space="preserve">
          <source>Returns true if the element indexed by &lt;code&gt;key&lt;/code&gt; has been initialized.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; インデックス付けされた要素が初期化されている場合はtrueを返します。</target>
        </trans-unit>
        <trans-unit id="ca177cc07bd654ccfe210837313135cb5faa9fcf" translate="yes" xml:space="preserve">
          <source>Returns true if the end of the compressed input stream has been reached.</source>
          <target state="translated">圧縮された入力ストリームの終端に達した場合に真を返します。</target>
        </trans-unit>
        <trans-unit id="f14991dbb147f0859d05ca33c75a7818dab41ebf" translate="yes" xml:space="preserve">
          <source>Returns true if the file is of type &lt;code&gt;&lt;a href=&quot;../../functions/socket&quot;&gt;socket&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">ファイルのタイプが &lt;code&gt;&lt;a href=&quot;../../functions/socket&quot;&gt;socket&lt;/a&gt;&lt;/code&gt; 場合にtrueを返します</target>
        </trans-unit>
        <trans-unit id="e84bc7aca66344ab87212c76ad0d61c5d25dce9c" translate="yes" xml:space="preserve">
          <source>Returns true if the file is of type &lt;code&gt;&lt;a href=&quot;../../functions/symlink&quot;&gt;symlink&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">ファイルのタイプが &lt;code&gt;&lt;a href=&quot;../../functions/symlink&quot;&gt;symlink&lt;/a&gt;&lt;/code&gt; 場合、trueを返します。</target>
        </trans-unit>
        <trans-unit id="9a4e465b07f3a887e61b71ecbebaa7046ff62288" translate="yes" xml:space="preserve">
          <source>Returns true if the file is of type &lt;code&gt;Label&lt;/code&gt; . Should not happen after a successful &lt;code&gt;&lt;a href=&quot;../../functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ファイルのタイプが &lt;code&gt;Label&lt;/code&gt; の場合、trueを返します。 &lt;code&gt;&lt;a href=&quot;../../functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; が成功した後には発生しません。</target>
        </trans-unit>
        <trans-unit id="8fadb1152307ad9882e2623beb98970efa2d1559" translate="yes" xml:space="preserve">
          <source>Returns true if the file is of type &lt;code&gt;LongLink&lt;/code&gt; . Should not happen after a successful &lt;code&gt;&lt;a href=&quot;../../functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ファイルのタイプが &lt;code&gt;LongLink&lt;/code&gt; の場合はtrueを返します。 &lt;code&gt;&lt;a href=&quot;../../functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; が成功した後には発生しません。</target>
        </trans-unit>
        <trans-unit id="65a383e821293bb49c0e77aee65012ba2b77181d" translate="yes" xml:space="preserve">
          <source>Returns true if the file is of type &lt;code&gt;blockdev&lt;/code&gt;</source>
          <target state="translated">ファイルのタイプが &lt;code&gt;blockdev&lt;/code&gt; の場合はtrueを返します</target>
        </trans-unit>
        <trans-unit id="d0fc6e1fdd4accd7b45ff2752baf317c2e3349d6" translate="yes" xml:space="preserve">
          <source>Returns true if the file is of type &lt;code&gt;chardev&lt;/code&gt;</source>
          <target state="translated">ファイルのタイプが &lt;code&gt;chardev&lt;/code&gt; の場合、trueを返します</target>
        </trans-unit>
        <trans-unit id="77b87462e692c2a96239770207e882160a6928c2" translate="yes" xml:space="preserve">
          <source>Returns true if the file is of type &lt;code&gt;dir&lt;/code&gt;</source>
          <target state="translated">ファイルのタイプが &lt;code&gt;dir&lt;/code&gt; の場合はtrueを返します</target>
        </trans-unit>
        <trans-unit id="41b75950efa0534211d7f43a4ddc09117b32dc5f" translate="yes" xml:space="preserve">
          <source>Returns true if the file is of type &lt;code&gt;fifo&lt;/code&gt;</source>
          <target state="translated">ファイルのタイプが &lt;code&gt;fifo&lt;/code&gt; の場合はtrueを返します</target>
        </trans-unit>
        <trans-unit id="f1e8727692877d59f462990af248fafaf24c5f32" translate="yes" xml:space="preserve">
          <source>Returns true if the file is of type &lt;code&gt;file&lt;/code&gt;</source>
          <target state="translated">ファイルのタイプが &lt;code&gt;file&lt;/code&gt; 場合にtrueを返します</target>
        </trans-unit>
        <trans-unit id="09714c06b0880005fc6ca97a5c9cf509aca601f8" translate="yes" xml:space="preserve">
          <source>Returns true if the file is of type &lt;code&gt;hardlink&lt;/code&gt;</source>
          <target state="translated">ファイルのタイプが &lt;code&gt;hardlink&lt;/code&gt; 場合はtrueを返します</target>
        </trans-unit>
        <trans-unit id="6409db86dba4e87c8ab21a510400dea6d8787df5" translate="yes" xml:space="preserve">
          <source>Returns true if the file type is &lt;code&gt;unknown&lt;/code&gt;</source>
          <target state="translated">ファイルの種類が &lt;code&gt;unknown&lt;/code&gt; 場合はtrueを返します</target>
        </trans-unit>
        <trans-unit id="7ba7b5973acb913d07d03e97b45a59c7943aaaea" translate="yes" xml:space="preserve">
          <source>Returns true if the first &lt;code&gt;len&lt;/code&gt; bytes of string &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; form a valid UTF-8 string, false otherwise. If &lt;code&gt;len&lt;/code&gt; is 0, it will be calculated using &lt;code&gt;strlen(s)&lt;/code&gt; (which means if you use this option, that &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; can't have embedded &lt;code&gt;NUL&lt;/code&gt; characters and has to have a terminating &lt;code&gt;NUL&lt;/code&gt; byte). Note that all characters being ASCII constitute 'a valid UTF-8 string'.</source>
          <target state="translated">文字列 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 最初の &lt;code&gt;len&lt;/code&gt; バイトが有効なUTF-8文字列を形成する場合はtrueを返し、それ以外の場合はfalseを返します。 &lt;code&gt;len&lt;/code&gt; が0の場合、 &lt;code&gt;strlen(s)&lt;/code&gt; を使用して計算されます（つまり、このオプションを使用する場合、 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; は &lt;code&gt;NUL&lt;/code&gt; 文字を埋め込むことができず、 &lt;code&gt;NUL&lt;/code&gt; バイトで終了する必要があります）。ASCIIであるすべての文字は「有効なUTF-8文字列」を構成することに注意してください。</target>
        </trans-unit>
        <trans-unit id="8f757b0a6c8ccae7fc0d8912d332c5dafe558105" translate="yes" xml:space="preserve">
          <source>Returns true if the given OP is not a NULL pointer and if it is of the given type or used to be before being replaced by an OP of type OP_NULL.</source>
          <target state="translated">与えられたOPがNULLポインタではなく、OP_NULL型のOPに置換される前のOPが与えられた型であるか、以前に使用されていたものである場合に真を返します。</target>
        </trans-unit>
        <trans-unit id="c2e85dd861c1c8dede97792bec3acf5f219b3646" translate="yes" xml:space="preserve">
          <source>Returns true if the given OP is not a NULL pointer and if it is of the given type.</source>
          <target state="translated">与えられたOPがNULLポインタではなく、与えられた型であれば真を返します。</target>
        </trans-unit>
        <trans-unit id="d92bb35f426b979014ecf29e128d9930f1c3628d" translate="yes" xml:space="preserve">
          <source>Returns true if the given cygwin path is binary mounted, false if the path is mounted in textmode.</source>
          <target state="translated">指定したcygwinパスがバイナリでマウントされている場合はtrueを返し、パスがテキストモードでマウントされている場合はfalseを返します。</target>
        </trans-unit>
        <trans-unit id="8d954f00f7f76782153e5ef886e7f5ee8e1bd978" translate="yes" xml:space="preserve">
          <source>Returns true if the handle is currently positioned at end of file?</source>
          <target state="translated">ハンドルが現在ファイルの末尾に配置されているかどうか?</target>
        </trans-unit>
        <trans-unit id="94fc47898ea7d99f0d0e4310469547b1a4e62980" translate="yes" xml:space="preserve">
          <source>Returns true if the hash and its keys are locked.</source>
          <target state="translated">ハッシュとその鍵がロックされている場合に真を返します。</target>
        </trans-unit>
        <trans-unit id="ba0e26b1eb6e089c1f70b6233f48370e7e8ba3d1" translate="yes" xml:space="preserve">
          <source>Returns true if the hash and its keys are unlocked.</source>
          <target state="translated">ハッシュとそのキーがロックされていない場合に true を返します。</target>
        </trans-unit>
        <trans-unit id="0febcbce5882975e24bfdc812b8bb09fccb4cebe" translate="yes" xml:space="preserve">
          <source>Returns true if the leading len bytes of the strings s1 and s2 are the same case-insensitively in the current locale; false otherwise.</source>
          <target state="translated">文字列 s1 と s2 の先頭の len バイトが、現在のロケールで大文字小文字を区別せずに同じである場合に true を返します。</target>
        </trans-unit>
        <trans-unit id="a8dce8bfb1803e74ae42c62ae214fadaa06271c0" translate="yes" xml:space="preserve">
          <source>Returns true if the leading len bytes of the strings s1 and s2 are the same case-insensitively; false otherwise. Uppercase and lowercase ASCII range bytes match themselves and their opposite case counterparts. Non-cased and non-ASCII range bytes match only themselves.</source>
          <target state="translated">文字列 s1 と s2 の先頭の len バ イ ト が大文字小文字を区別せずに同じであれば true を返し、そうでなければ false を返します。大文字と小文字のASCII範囲のバイトは、それ自身と反対の大文字と小文字の対応にマッチします。大文字以外のASCII範囲バイトと非ASCII範囲バイトは、それ自身にのみマッチします。</target>
        </trans-unit>
        <trans-unit id="fd3339cf5d76cf048c809d61f14cdd493d30b803" translate="yes" xml:space="preserve">
          <source>Returns true if the leading portions of the strings &lt;code&gt;s1&lt;/code&gt; and &lt;code&gt;s2&lt;/code&gt; (either or both of which may be in UTF-8) are the same case-insensitively; false otherwise. How far into the strings to compare is determined by other input parameters.</source>
          <target state="translated">文字列 &lt;code&gt;s1&lt;/code&gt; および &lt;code&gt;s2&lt;/code&gt; （どちらかまたは両方がUTF-8である可能性がある）の先頭部分が大文字と小文字を区別せずに同じである場合、trueを返します。それ以外の場合はfalse。比較する文字列までの距離は、他の入力パラメーターによって決定されます。</target>
        </trans-unit>
        <trans-unit id="b11a86d7be35a30e62a79e23f089d0e569d33fd9" translate="yes" xml:space="preserve">
          <source>Returns true if the module is installed and in a usable state. Only useful for a handful of modules that are used internally. See the source for details.</source>
          <target state="translated">モジュールがインストールされており、使用可能な状態にある場合に true を返します。内部的に使用される一握りのモジュールにのみ有用です。詳細はソースを参照ください。</target>
        </trans-unit>
        <trans-unit id="87bfa5f9def05bede19f7c99d788c408eb2a3bfa" translate="yes" xml:space="preserve">
          <source>Returns true if the module is installed. Used to load all modules into the running CPAN.pm that are considered optional. The config variable &lt;code&gt;dontload_list&lt;/code&gt; intercepts the &lt;code&gt;has_inst()&lt;/code&gt; call such that an optional module is not loaded despite being available. For example, the following command will prevent &lt;code&gt;YAML.pm&lt;/code&gt; from being loaded:</source>
          <target state="translated">モジュールがインストールされている場合はtrueを返します。オプションと見なされる実行中のCPAN.pmにすべてのモジュールをロードするために使用されます。設定変数 &lt;code&gt;dontload_list&lt;/code&gt; は &lt;code&gt;has_inst()&lt;/code&gt; 呼び出しをインターセプトし、オプションのモジュールが利用可能であってもロードされないようにします。たとえば、次のコマンドは &lt;code&gt;YAML.pm&lt;/code&gt; が読み込まれないようにします。</target>
        </trans-unit>
        <trans-unit id="7eee243e5a583ec6622e9b64dd2d67609ae2e73b" translate="yes" xml:space="preserve">
          <source>Returns true if the name is in UTF8 encoding.</source>
          <target state="translated">名前のエンコーディングが UTF8 の場合に true を返します。</target>
        </trans-unit>
        <trans-unit id="a2b4fda3ea5d9e4d976704d93ca66eb8a3351df4" translate="yes" xml:space="preserve">
          <source>Returns true if the object currently refers to a opened file.</source>
          <target state="translated">オブジェクトが現在開いているファイルを参照している場合に true を返します。</target>
        </trans-unit>
        <trans-unit id="3369d3f65732b59f904e9d9c53a8772585d61185" translate="yes" xml:space="preserve">
          <source>Returns true if the object currently refers to a opened file/buffer.</source>
          <target state="translated">オブジェクトが現在オープンされているファイル/バッファを参照している場合に true を返します。</target>
        </trans-unit>
        <trans-unit id="539179b9dd3e4b1a906b0e8dd80de73320ce32b0" translate="yes" xml:space="preserve">
          <source>Returns true if the object is currently a valid file descriptor, false otherwise.</source>
          <target state="translated">オブジェクトが現在有効なファイルディスクリプタである場合はtrueを、そうでない場合はfalseを返します。</target>
        </trans-unit>
        <trans-unit id="e08ec5a9f31000deb0ace03b0535b4364054ab29" translate="yes" xml:space="preserve">
          <source>Returns true if the shared memory segment has been removed or marked for removal.</source>
          <target state="translated">共有メモリセグメントが削除された場合、または削除のマークが付けられた場合に true を返します。</target>
        </trans-unit>
        <trans-unit id="ff4b6dfb8f1e3eba5bbe7f880a14258acb306aae" translate="yes" xml:space="preserve">
          <source>Returns true if the subtest passed, false otherwise.</source>
          <target state="translated">サブテストが合格した場合はtrueを、そうでない場合はfalseを返します。</target>
        </trans-unit>
        <trans-unit id="6f55049328363a9874e1574f1c2a89fcaaf95a63" translate="yes" xml:space="preserve">
          <source>Returns true if the supplied filename (not POD module) contains some Pod documentation. =head1 SUPPORT</source>
          <target state="translated">与えられたファイル名(PODモジュールではありません)にPodの文書が含まれている場合はtrueを返します。</target>
        </trans-unit>
        <trans-unit id="8bf1df015583028faecbc0c2066cffa4f4e2f58c" translate="yes" xml:space="preserve">
          <source>Returns true if the supplied filename (not POD module) contains some pod information.</source>
          <target state="translated">与えられたファイル名(POD モジュールではありません)にポッドの情報が含まれている場合に true を返します。</target>
        </trans-unit>
        <trans-unit id="67e7d95677937f6371a7ae035ad1bb5355e9cfac" translate="yes" xml:space="preserve">
          <source>Returns true if the supplied opset looks like a valid opset (is the right length etc) otherwise it returns false. If an optional second parameter is true then verify_opset will croak on an invalid opset instead of returning false.</source>
          <target state="translated">与えられた opset が有効な opset のように見える (正しい長さなど)場合は true を返し、そうでない場合は false を返します。オプションの二番目のパラメータが true の場合は、 verify_opset は false を返す代わりに無効なオペセットを返します。</target>
        </trans-unit>
        <trans-unit id="ff3a5ae2a7c5ec548bc217496727410856563318" translate="yes" xml:space="preserve">
          <source>Returns true if the test is currently inside a TODO block.</source>
          <target state="translated">テストが現在 TODO ブロック内にある場合に true を返します。</target>
        </trans-unit>
        <trans-unit id="53bcaf8624bb2f76465d64879f1e0f8560b5117c" translate="yes" xml:space="preserve">
          <source>Returns true if the thread has been detached.</source>
          <target state="translated">スレッドが切り離された場合に true を返します。</target>
        </trans-unit>
        <trans-unit id="c8cabc0a16d49869bcf8a3223837dac51f7716e1" translate="yes" xml:space="preserve">
          <source>Returns true if the thread has finished running, is not detached and has not yet been joined. In other words, the thread is ready to be joined, and a call to &lt;code&gt;$thr-&amp;gt;join()&lt;/code&gt; will not</source>
          <target state="translated">スレッドの実行が終了し、デタッチされておらず、まだ参加していない場合は、trueを返します。言い換えると、スレッドは参加する準備ができており、 &lt;code&gt;$thr-&amp;gt;join()&lt;/code&gt; 呼び出しは</target>
        </trans-unit>
        <trans-unit id="c70320728c813de1f906ffb6bab649b0487d4ff5" translate="yes" xml:space="preserve">
          <source>Returns true if we currently have &lt;code&gt;IO::String&lt;/code&gt; support loaded.</source>
          <target state="translated">現在 &lt;code&gt;IO::String&lt;/code&gt; サポートがロードされている場合はtrueを返します。</target>
        </trans-unit>
        <trans-unit id="d6f9b9b08d05dd0d99ab33c1c933d761aa3bd2b2" translate="yes" xml:space="preserve">
          <source>Returns true if we currently have &lt;code&gt;perlio&lt;/code&gt; support loaded.</source>
          <target state="translated">現在 &lt;code&gt;perlio&lt;/code&gt; サポートがロードされている場合はtrueを返します。</target>
        </trans-unit>
        <trans-unit id="2f872207c69edd1c37c7274b4519565d78bc2219" translate="yes" xml:space="preserve">
          <source>Returns true if we have the ability to load XS.</source>
          <target state="translated">XS を読み込む機能がある場合に true を返します。</target>
        </trans-unit>
        <trans-unit id="bf1c9c76e4876814ca746fd7fab74303fe7011a6" translate="yes" xml:space="preserve">
          <source>Returns true if within a retrieve operation (via STORABLE_thaw hook).</source>
          <target state="translated">(STORABLE_thawフックを経由して)リトリーブ操作内であれば真を返します。</target>
        </trans-unit>
        <trans-unit id="e1844983342fa7ed4a41ed51002bb4a591e82ded" translate="yes" xml:space="preserve">
          <source>Returns true if within a store operation (via STORABLE_freeze hook).</source>
          <target state="translated">ストア操作内であれば(STORABLE_freezeフックを介して)真を返します。</target>
        </trans-unit>
        <trans-unit id="d65382a8c176da2d2ec3d0b82d52770ffe9a51bb" translate="yes" xml:space="preserve">
          <source>Returns true iff $lang1 and $lang2 are acceptable variant tags representing the same language-form.</source>
          <target state="translated">lang1 と $lang2 が同じ言語形式を表す variant タグである場合に true を返します。</target>
        </trans-unit>
        <trans-unit id="062e4d2f5e9b3ae16a476c3d729f9d8ea61bd474" translate="yes" xml:space="preserve">
          <source>Returns true iff $lang1 is a formally valid language tag.</source>
          <target state="translated">lang1が正式に有効な言語タグである場合にtrueを返します。</target>
        </trans-unit>
        <trans-unit id="1565fd32dd5c80d8c591abf0f76e7f99bea2a25f" translate="yes" xml:space="preserve">
          <source>Returns true iff language tag $lang1 represents a subform of language tag $lang2.</source>
          <target state="translated">言語タグ $lang1 が言語タグ $lang2 のサブフォームを表している場合に true を返します。</target>
        </trans-unit>
        <trans-unit id="7f01916a2ad34fd19ed8834c20e91c5211486bcb" translate="yes" xml:space="preserve">
          <source>Returns true iff the first &lt;code&gt;len&lt;/code&gt; bytes of the string &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; are the same regardless of the UTF-8 encoding of the string (or UTF-EBCDIC encoding on EBCDIC machines). That is, if they are UTF-8 invariant. On ASCII-ish machines, all the ASCII characters and only the ASCII characters fit this definition. On EBCDIC machines, the ASCII-range characters are invariant, but so also are the C1 controls and &lt;code&gt;\c?&lt;/code&gt; (which isn't in the ASCII range on EBCDIC).</source>
          <target state="translated">文字列 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 最初の &lt;code&gt;len&lt;/code&gt; バイトが文字列の UTF-8エンコーディング（またはEBCDICマシンのUTF-EBCDICエンコーディング）に関係なく同じである場合にtrueを返します。つまり、UTF-8が不変である場合です。ASCII系のマシンでは、すべてのASCII文字とASCII文字のみがこの定義に適合します。EBCDICマシンでは、ASCII範囲の文字は不変ですが、C1コントロールと &lt;code&gt;\c?&lt;/code&gt; も不変です。（EBCDICのASCII範囲にはありません）。</target>
        </trans-unit>
        <trans-unit id="a4f85750c5f0e01ab8dc4e6498b24f2bca333f09" translate="yes" xml:space="preserve">
          <source>Returns true indicating that is a 'spinner' job. Spinners are returned when the scheduler still has pending jobs but can't (because of locking) return one right now.</source>
          <target state="translated">スピナー」ジョブであることを示す真を返します。スピナーは、スケジューラがまだ保留中のジョブを持っているにもかかわらず、(ロックがかかっているために)今すぐにジョブを返すことができない場合に返されます。</target>
        </trans-unit>
        <trans-unit id="97933bd1be8d825799757357878cf512221b1701" translate="yes" xml:space="preserve">
          <source>Returns true on error, sets $^E. Expects expr() be a call of &lt;code&gt;Dos*&lt;/code&gt; -style API.</source>
          <target state="translated">エラー時にtrueを返し、$ ^ Eを設定します。expr（）は &lt;code&gt;Dos*&lt;/code&gt; スタイルのAPIの呼び出しであると想定しています。</target>
        </trans-unit>
        <trans-unit id="8ceb8d13f6ae573893d38c5a6162e5e97774290d" translate="yes" xml:space="preserve">
          <source>Returns true on error, sets $^E. Expects expr() be a call of &lt;code&gt;Win*&lt;/code&gt; -style API.</source>
          <target state="translated">エラー時にtrueを返し、$ ^ Eを設定します。expr（）は、 &lt;code&gt;Win*&lt;/code&gt; スタイルのAPIの呼び出しであると想定しています。</target>
        </trans-unit>
        <trans-unit id="38295b5e4d38ce7ed8e3ef4714791772130b3211" translate="yes" xml:space="preserve">
          <source>Returns true on platforms where &lt;code&gt;prelink()&lt;/code&gt; should be called during linking, and false otherwise.</source>
          <target state="translated">リンク中に &lt;code&gt;prelink()&lt;/code&gt; を呼び出す必要があるプラットフォームではtrueを返し、それ以外の場合はfalseを返します。</target>
        </trans-unit>
        <trans-unit id="b9b4c7399dc86d0b22d9394410f2e2b91c8f9d5a" translate="yes" xml:space="preserve">
          <source>Returns true on success and false on failure.</source>
          <target state="translated">成功した場合はtrue、失敗した場合はfalseを返します。</target>
        </trans-unit>
        <trans-unit id="308c40c428bfb468dbabf3ecef1477c66240dd0d" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure</source>
          <target state="translated">成功した場合はtrue、失敗した場合はfalseを返します。</target>
        </trans-unit>
        <trans-unit id="c4a3610619264a8a6a93918c4a76acf89e8f7382" translate="yes" xml:space="preserve">
          <source>Returns true on success, false on failure.</source>
          <target state="translated">成功した場合はtrue、失敗した場合はfalseを返します。</target>
        </trans-unit>
        <trans-unit id="e64c41ac0505688c9c07dbd4ea1c1aa2a87b911e" translate="yes" xml:space="preserve">
          <source>Returns true on success, otherwise 0.</source>
          <target state="translated">成功した場合はtrueを、そうでない場合は0を返します。</target>
        </trans-unit>
        <trans-unit id="40405f8c197d6636052d305e55694c6907d75eae" translate="yes" xml:space="preserve">
          <source>Returns true on success.</source>
          <target state="translated">成功したらtrueを返します。</target>
        </trans-unit>
        <trans-unit id="38441271f310a9d9ec3653eae2301f8b2ed546f3" translate="yes" xml:space="preserve">
          <source>Returns true or false if &lt;code&gt;bigint&lt;/code&gt; is in effect in the current scope.</source>
          <target state="translated">現在のスコープで &lt;code&gt;bigint&lt;/code&gt; が有効な場合、trueまたはfalseを返します。</target>
        </trans-unit>
        <trans-unit id="2f88b6f329909127f9de26a3ecb92cef04fef9f6" translate="yes" xml:space="preserve">
          <source>Returns true or false if &lt;code&gt;bignum&lt;/code&gt; is in effect in the current scope.</source>
          <target state="translated">現在のスコープで &lt;code&gt;bignum&lt;/code&gt; が有効な場合、trueまたはfalseを返します。</target>
        </trans-unit>
        <trans-unit id="070335e3f7f1c54fd9a40504d8c28f973d89d7c8" translate="yes" xml:space="preserve">
          <source>Returns true or false if &lt;code&gt;bigrat&lt;/code&gt; is in effect in the current scope.</source>
          <target state="translated">現在のスコープで &lt;code&gt;bigrat&lt;/code&gt; が有効な場合、trueまたはfalseを返します。</target>
        </trans-unit>
        <trans-unit id="7b06bde566fc1edd59560961d2214a698d16d2be" translate="yes" xml:space="preserve">
          <source>Returns true, if the argument is likely to be a command.</source>
          <target state="translated">引数がコマンドである可能性が高い場合、trueを返します。</target>
        </trans-unit>
        <trans-unit id="b1c6719c0ce90334223ac6cf5038fe11bb944ede" translate="yes" xml:space="preserve">
          <source>Returns undef on failure.</source>
          <target state="translated">失敗した場合は undef を返します。</target>
        </trans-unit>
        <trans-unit id="121317dfcd16cb713d71cfb208b7ac4c244d8d29" translate="yes" xml:space="preserve">
          <source>Returns undef upon failure.</source>
          <target state="translated">失敗した場合は undef を返します。</target>
        </trans-unit>
        <trans-unit id="00afc5bb2af4a1a4377898de222c6c5572366b55" translate="yes" xml:space="preserve">
          <source>Returns undef where unavailable.</source>
          <target state="translated">利用できない場合は undef を返します。</target>
        </trans-unit>
        <trans-unit id="9116fcc653f355fbfd6e7abd2f61495440b47db1" translate="yes" xml:space="preserve">
          <source>Returns what evaluating the hash in scalar context yields.</source>
          <target state="translated">スカラコンテキストでハッシュを評価した結果を返します。</target>
        </trans-unit>
        <trans-unit id="7f59a49ed0b62250e67916f34c02bf313c90233c" translate="yes" xml:space="preserve">
          <source>Returns whether the &lt;code&gt;char *&lt;/code&gt; value returned by &lt;code&gt;HePV&lt;/code&gt; is encoded in UTF-8, doing any necessary dereferencing of possibly &lt;code&gt;SV*&lt;/code&gt; keys. The value returned will be 0 or non-0, not necessarily 1 (or even a value with any low bits set), so &lt;b&gt;do not&lt;/b&gt; blindly assign this to a &lt;code&gt;bool&lt;/code&gt; variable, as &lt;code&gt;bool&lt;/code&gt; may be a typedef for &lt;code&gt;char&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;HePV&lt;/code&gt; によって返される &lt;code&gt;char *&lt;/code&gt; 値がUTF-8でエンコードされているかどうかを返し、 &lt;code&gt;SV*&lt;/code&gt; キーの必要な逆参照を実行します。返される値は0になり、または非0、必ずしも1（または任意の下位ビットが設定された偶数値）、そう&lt;b&gt;ない&lt;/b&gt;盲目的にこれを割り当てる &lt;code&gt;bool&lt;/code&gt; として、変数 &lt;code&gt;bool&lt;/code&gt; のtypedefであってもよい &lt;code&gt;char&lt;/code&gt; 。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="30353ca4e138694a3683e69ccd73f7116d965f39" translate="yes" xml:space="preserve">
          <source>Returns whether we can use IPv6.</source>
          <target state="translated">IPv6を利用できるかどうかを返します。</target>
        </trans-unit>
        <trans-unit id="4d0c52a5d31bdfe1d4347d2ead869da2d86188ce" translate="yes" xml:space="preserve">
          <source>Returns whether we can use SSL.</source>
          <target state="translated">SSLを利用できるかどうかを返します。</target>
        </trans-unit>
        <trans-unit id="6426421c03bcc5cb547f5467c8362c00ef8e22d0" translate="yes" xml:space="preserve">
          <source>Returns zero for positive arguments, non-zero for negative arguments [C99].</source>
          <target state="translated">正の引数には0を、負の引数には0以外の値を返します[C99]。</target>
        </trans-unit>
        <trans-unit id="51ec5507e7b335d374fda130a376742c555fbb10" translate="yes" xml:space="preserve">
          <source>Returns: a Benchmark object.</source>
          <target state="translated">戻り値:Benchmark オブジェクト。</target>
        </trans-unit>
        <trans-unit id="c32b14c79752da5b732e7d8002dd6ef9e28bc920" translate="yes" xml:space="preserve">
          <source>Reversing by codepoint messes up diacritics, mistakenly converting &lt;code&gt;cr&amp;egrave;me br&amp;ucirc;l&amp;eacute;e&lt;/code&gt; into &lt;code&gt;&amp;eacute;el̂urb em̀erc&lt;/code&gt; instead of into &lt;code&gt;e&amp;eacute;l&amp;ucirc;rb em&amp;egrave;rc&lt;/code&gt; ; so reverse by grapheme instead. Both these approaches work right no matter what normalization the string is in:</source>
          <target state="translated">誤って変換し、発音区別符号アップコードポイント台無しによって反転 &lt;code&gt;cr&amp;egrave;me br&amp;ucirc;l&amp;eacute;e&lt;/code&gt; に &lt;code&gt;&amp;eacute;el̂urb em̀erc&lt;/code&gt; の代わりに &lt;code&gt;e&amp;eacute;l&amp;ucirc;rb em&amp;egrave;rc&lt;/code&gt; 。代わりに書記素で逆にします。これらのアプローチはどちらも、文字列の正規化に関係なく正しく機能します。</target>
        </trans-unit>
        <trans-unit id="fab68fc82b2d76300ca1ff4f061653f085942faf" translate="yes" xml:space="preserve">
          <source>Reverts all config variables to the state in the saved config file.</source>
          <target state="translated">すべての設定変数を保存された設定ファイルの状態に戻します。</target>
        </trans-unit>
        <trans-unit id="cfb99563fa9591b9f08855877fac0944a4d84097" translate="yes" xml:space="preserve">
          <source>Review &lt;a href=&quot;https://github.com/perl-doc-cats/perlfaq/wiki&quot;&gt;https://github.com/perl-doc-cats/perlfaq/wiki&lt;/a&gt;. If you don't find your suggestion create an issue or pull request against &lt;a href=&quot;https://github.com/perl-doc-cats/perlfaq&quot;&gt;https://github.com/perl-doc-cats/perlfaq&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/perl-doc-cats/perlfaq/wiki&quot;&gt;https://github.com/perl-doc-cats/perlfaq/wikiを&lt;/a&gt;確認してください。提案が見つからない場合は、&lt;a href=&quot;https://github.com/perl-doc-cats/perlfaq&quot;&gt;https：//github.com/perl-doc-cats/perlfaq&lt;/a&gt;に対して問題またはプルリクエストを作成してください。</target>
        </trans-unit>
        <trans-unit id="19fea591d81ec109c5e8a664f51c134758a0bc2e" translate="yes" xml:space="preserve">
          <source>Reviewed and assisted by Dean Roehrich, Ilya Zakharevich, Andreas Koenig, and Tim Bunce.</source>
          <target state="translated">ディーン・ローリッヒ、イリヤ・ザハレヴィッチ、アンドレアス・ケーニッヒ、ティム・バンセが校閲・編集を担当。</target>
        </trans-unit>
        <trans-unit id="929c73f5eedbf3154e748357f0580d5f7e560c43" translate="yes" xml:space="preserve">
          <source>Revision date</source>
          <target state="translated">改定日</target>
        </trans-unit>
        <trans-unit id="824932735c91a154350323ceaf339e097128258a" translate="yes" xml:space="preserve">
          <source>Reworked internals to support better interface to dodgey fields than normal Perl function provides. Added pw_has() field. Improved documentation.</source>
          <target state="translated">通常の Perl 関数が提供するよりも優れたドッジィーフィールドのインターフェイスをサポートするために内部をリワークしました。pw_has()フィールドを追加。ドキュメントの改良。</target>
        </trans-unit>
        <trans-unit id="07d1a72358d59f7b4d4684920a771ff936958fa1" translate="yes" xml:space="preserve">
          <source>Reworked slightly by J&amp;ouml;rg Walter &amp;lt;jwalt@cpan.org&amp;lt;gt&amp;gt; to be more concise about thread-safety of Perl code.</source>
          <target state="translated">J&amp;ouml;rgWalter &amp;lt;jwalt@cpan.org &amp;lt;gt&amp;gt;によって若干変更され、Perlコードのスレッドセーフについてより簡潔になりました。</target>
        </trans-unit>
        <trans-unit id="fdae908bfca6992fc8d75e0a1098919e5fb5b715" translate="yes" xml:space="preserve">
          <source>Reworked to use the Opcode module and other changes added by Tim Bunce.</source>
          <target state="translated">Tim Bunceが追加したOpcodeモジュールとその他の変更を使用するためにリワークされました。</target>
        </trans-unit>
        <trans-unit id="9a6773ad96db7ff026e4c199bf72c8ee8b865fad" translate="yes" xml:space="preserve">
          <source>Ricardo Signes &amp;lt;rjbs@cpan.org&amp;gt;</source>
          <target state="translated">Ricardo Signes &amp;lt;rjbs@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1fc1fcb411d385d33c3130c930f5dc3a9067d61c" translate="yes" xml:space="preserve">
          <source>Richard Clamp &amp;lt;richardc@unixbeard.net&amp;gt;</source>
          <target state="translated">リチャードクランプ&amp;lt;richardc@unixbeard.net&amp;gt;</target>
        </trans-unit>
        <trans-unit id="fe4cb18a025be706350b49a51923b7821e811358" translate="yes" xml:space="preserve">
          <source>Richard Foley &amp;lt;richard.foley@rfi.net&amp;gt; Copyright (c) 2000</source>
          <target state="translated">Richard Foley &amp;lt;richard.foley@rfi.net&amp;gt; Copyright（c）2000</target>
        </trans-unit>
        <trans-unit id="e1621bb814a3d14c116734bfded333de0dc42d57" translate="yes" xml:space="preserve">
          <source>Richard Foley &amp;lt;richard.foley@rfi.net&amp;gt; Copyright (c) 2008</source>
          <target state="translated">Richard Foley &amp;lt;richard.foley@rfi.net&amp;gt; Copyright（c）2008</target>
        </trans-unit>
        <trans-unit id="c16204821e2dd5a287a6a98bb45f40432a7482ea" translate="yes" xml:space="preserve">
          <source>Richard Soderberg &amp;lt;perl AT crystalflame DOT net&amp;gt; - Helping me out tons, trying to find reasons for races and other weird bugs!</source>
          <target state="translated">Richard Soderberg &amp;lt;perl AT crystalflame DOT net&amp;gt;-たくさんの人を助け、人種やその他の奇妙なバグの理由を見つけようとしています！</target>
        </trans-unit>
        <trans-unit id="f5d7d8269406c8e21373049c7ceaa20731866c88" translate="yes" xml:space="preserve">
          <source>Right operand is a Regexp:</source>
          <target state="translated">右のオペランドはRegexpです。</target>
        </trans-unit>
        <trans-unit id="ea4e5ca2c4529b1027635ef20230ed7f5749f550" translate="yes" xml:space="preserve">
          <source>Right shifting usually amounts to dividing $x by $n ** $y and truncating the result:</source>
          <target state="translated">右シフトは通常、$xを$n **$yで割って結果を切り捨てます。</target>
        </trans-unit>
        <trans-unit id="8e1238f1c2f8917ffa9df1be7d82e7d4cdcc7dc7" translate="yes" xml:space="preserve">
          <source>Right. Very funny. Don't do that.</source>
          <target state="translated">そうだな 面白い そんなことしないで</target>
        </trans-unit>
        <trans-unit id="07379953779572b23ed2558fd2e31c298c5068ac" translate="yes" xml:space="preserve">
          <source>Robbins, Kay. A., and Steven Robbins. Practical Unix Programming: A Guide to Concurrency, Communication, and Multithreading. Prentice-Hall, 1996.</source>
          <target state="translated">ロビンス ケイ A.とスティーブン・ロビンス。実用的な Unix プログラミング。並行処理、通信、マルチスレッドへのガイド。Prentice-Hall,1996.</target>
        </trans-unit>
        <trans-unit id="283cadc3a8f78bdaf7355a81e1ffd7e734bb292c" translate="yes" xml:space="preserve">
          <source>Rocco Caputo &amp;lt;troc AT netrus DOT net&amp;gt;</source>
          <target state="translated">Rocco Caputo &amp;lt;troc AT netrus DOTネット&amp;gt;</target>
        </trans-unit>
        <trans-unit id="18b0ae2f88a1cdcee8653b904e7092b3bed1b39e" translate="yes" xml:space="preserve">
          <source>Roderick Schertler &amp;lt;roderick@gate.net&amp;gt; - for various inputs</source>
          <target state="translated">Roderick Schertler &amp;lt;roderick@gate.net&amp;gt;-さまざまな入力用</target>
        </trans-unit>
        <trans-unit id="80b2caecfb2619b070c732f75696c89aa8660329" translate="yes" xml:space="preserve">
          <source>Role::Tiny</source>
          <target state="translated">Role::Tiny</target>
        </trans-unit>
        <trans-unit id="47dcc27d6e87ece8baebe7e3877a261a5467093d" translate="yes" xml:space="preserve">
          <source>Roles</source>
          <target state="translated">Roles</target>
        </trans-unit>
        <trans-unit id="3d757a7fd958e02d8192c9ff566f2078fa44423b" translate="yes" xml:space="preserve">
          <source>Roles are an alternative to inheritance for providing polymorphism. Let's assume we have two classes, &lt;code&gt;Radio&lt;/code&gt; and &lt;code&gt;Computer&lt;/code&gt; . Both of these things have on/off switches. We want to model that in our class definitions.</source>
          <target state="translated">ロールは、ポリモーフィズムを提供するための継承の代替手段です。 &lt;code&gt;Radio&lt;/code&gt; と &lt;code&gt;Computer&lt;/code&gt; の 2つのクラスがあるとします。これらの両方にオン/オフスイッチがあります。それをクラス定義でモデル化したいと思います。</target>
        </trans-unit>
        <trans-unit id="ea66d675e76bfd310bd11c0a9dec9414bd6a3dcb" translate="yes" xml:space="preserve">
          <source>Ronald J Kimball &amp;lt;rjk@linguist.dartmouth.edu&amp;gt;</source>
          <target state="translated">ロナルドJキンボール&amp;lt;rjk@linguist.dartmouth.edu&amp;gt;</target>
        </trans-unit>
        <trans-unit id="8fc1558ed2b47cf9f8046e73d3d9fa1d782da453" translate="yes" xml:space="preserve">
          <source>Roughly, if you ever found yourself writing this</source>
          <target state="translated">大まかに言えば、もしあなたがこれを書いていることに気がついたら</target>
        </trans-unit>
        <trans-unit id="d5be650afe095d1b86854feefb8666a3c565045c" translate="yes" xml:space="preserve">
          <source>Round $x to accuracy &lt;code&gt;$A&lt;/code&gt; or precision &lt;code&gt;$P&lt;/code&gt; using the round mode &lt;code&gt;$round_mode&lt;/code&gt; .</source>
          <target state="translated">ラウンドモード &lt;code&gt;$round_mode&lt;/code&gt; を使用して、$ xを精度 &lt;code&gt;$A&lt;/code&gt; または精度 &lt;code&gt;$P&lt;/code&gt; 丸めます。</target>
        </trans-unit>
        <trans-unit id="ed14e07529b686f58007f5e3da9ec33b810ef68c" translate="yes" xml:space="preserve">
          <source>Round $x towards minus infinity (i.e., set $x to the largest integer less than or equal to $x). This is a no-op in BigInt, but changes $x in BigFloat, if $x is not an integer.</source>
          <target state="translated">x をマイナス無限大に向けて丸めます (つまり、$x を $x 以下の最大の整数に設定します)。これは、BigInt では無効ですが、BigFloat では $x が整数でない場合に $x を変更します。</target>
        </trans-unit>
        <trans-unit id="d3965d97c158aff3589c25015271155450961486" translate="yes" xml:space="preserve">
          <source>Round $x towards plus infinity (i.e., set $x to the smallest integer greater than or equal to $x). This is a no-op in BigInt, but changes $x in BigFloat, if $x is not an integer.</source>
          <target state="translated">x をプラス無限大に向けて丸めます (つまり、$x を $x 以上の最小の整数に設定します)。これは、BigInt では無効ですが、BigFloat では $x が整数でない場合に $x を変更します。</target>
        </trans-unit>
        <trans-unit id="837550e6bb9bc5af84ed93a65b16832db1430f55" translate="yes" xml:space="preserve">
          <source>Round $x towards zero. This is a no-op in BigInt, but changes $x in BigFloat, if $x is not an integer.</source>
          <target state="translated">x をゼロに向けて丸めます。これはBigIntでは無効ですが、BigFloatでは$xが整数でない場合は$xを変更します。</target>
        </trans-unit>
        <trans-unit id="710080b52565cfdf0681e86d481627d9918f12a9" translate="yes" xml:space="preserve">
          <source>Round trip safe. A character decoded to Unicode encodes back to the same byte sequence. Most characters have this flag.</source>
          <target state="translated">往復安全。Unicodeにデコードされた文字は、同じバイト列にエンコードされます。ほとんどの文字にはこのフラグがあります。</target>
        </trans-unit>
        <trans-unit id="905cc3792492961c10eb158788a7c9f956d57aa5" translate="yes" xml:space="preserve">
          <source>Rounding</source>
          <target state="translated">Rounding</target>
        </trans-unit>
        <trans-unit id="f751763a4b1d62eba85a96b8eb7876a818d572fe" translate="yes" xml:space="preserve">
          <source>Rounding in financial applications can have serious implications, and the rounding method used should be specified precisely. In these cases, it probably pays not to trust whichever system of rounding is being used by Perl, but instead to implement the rounding function you need yourself.</source>
          <target state="translated">金融アプリケーションにおける丸めは深刻な意味を持つことがあり、使用される丸め方法は正確に指定されなければなりません。このような場合には、Perl が使用している丸めのシステムを信用するのではなく、必要な丸め関数を自分で実装するのが得策でしょう。</target>
        </trans-unit>
        <trans-unit id="6698eae5d6b2b4ddcea946ace93c25b4e6ef6c3a" translate="yes" xml:space="preserve">
          <source>Rounding in financial applications can have serious implications, and the rounding method used should be specified precisely. In these cases, it probably pays not to trust whichever system rounding is being used by Perl, but to instead implement the rounding function you need yourself.</source>
          <target state="translated">金融アプリケーションにおける丸めは深刻な意味を持つことがあり、使用される丸め方法は正確に指定されなければなりません。このような場合には、Perl が使用しているシステムの丸めを信用するのではなく、必要な丸め関数を自分で実装するのが得策でしょう。</target>
        </trans-unit>
        <trans-unit id="f4268fe614cfe304ddeb1b291f77cb218846bf0c" translate="yes" xml:space="preserve">
          <source>Rounding mode R</source>
          <target state="translated">丸めモード R</target>
        </trans-unit>
        <trans-unit id="801086876b0b5e84b716b6aedf1f8228ba8acfbd" translate="yes" xml:space="preserve">
          <source>Rounds to an integer.</source>
          <target state="translated">整数に丸めます。</target>
        </trans-unit>
        <trans-unit id="bf85833d7405feeeec7667a69742fbf41e8e6700" translate="yes" xml:space="preserve">
          <source>Rounds to the $scale'th place left from the '.', counting from the dot. The first digit is numbered 1.</source>
          <target state="translated">ドットから数えて$scaleの左端に丸めます。1桁目は1になります。</target>
        </trans-unit>
        <trans-unit id="90e22860991a8aeaac612a499d65ebd6f21eef25" translate="yes" xml:space="preserve">
          <source>Rounds to the $scale'th place right from the '.', counting from the dot.</source>
          <target state="translated">'.' から右にある $scale'th の位置に丸めて、点から数えます。</target>
        </trans-unit>
        <trans-unit id="4958256b98544f9414f9fae8ee3b737198f6fcdd" translate="yes" xml:space="preserve">
          <source>Rpcb1.xsh</source>
          <target state="translated">Rpcb1.xsh</target>
        </trans-unit>
        <trans-unit id="153d87d3f8ea09dd979152152155f13a48dbfd40" translate="yes" xml:space="preserve">
          <source>Rudimentary per-package memory usage dump. Calculates total size of strings found in variables in the package. This does not include lexicals in a module's file scope, or lost in closures.</source>
          <target state="translated">初歩的なパッケージごとのメモリ使用量のダンプ。パッケージ内の変数で見つかった文字列の合計サイズを計算します。これには、モジュールのファイルスコープ内の辞書やクロージャで失われたものは含まれません。</target>
        </trans-unit>
        <trans-unit id="bb11a8e3f8712e36e7cd9d1c615a4e3dbb03336a" translate="yes" xml:space="preserve">
          <source>Rules</source>
          <target state="translated">Rules</target>
        </trans-unit>
        <trans-unit id="82ade16083a700a9e567305fb686d47ae9d18b6d" translate="yes" xml:space="preserve">
          <source>Rules data structure</source>
          <target state="translated">ルールデータ構造</target>
        </trans-unit>
        <trans-unit id="9225115841543de7d5a9513dca793003c049ec1b" translate="yes" xml:space="preserve">
          <source>Rules examples</source>
          <target state="translated">ルール例</target>
        </trans-unit>
        <trans-unit id="36b2207b593443540c54328adf8c73e48c5a2841" translate="yes" xml:space="preserve">
          <source>Rules resolution</source>
          <target state="translated">ルール決議</target>
        </trans-unit>
        <trans-unit id="b1b392607deaf29a7e81453e069b7c07a32a6b18" translate="yes" xml:space="preserve">
          <source>Run</source>
          <target state="translated">Run</target>
        </trans-unit>
        <trans-unit id="2ed293065b44f042c95a5ac523d0194821e21e25" translate="yes" xml:space="preserve">
          <source>Run &quot;&lt;code&gt;h2xs -A -n Mytest&lt;/code&gt; &quot;. This creates a directory named Mytest, possibly under ext/ if that directory exists in the current working directory. Several files will be created under the Mytest dir, including MANIFEST, Makefile.PL, lib/Mytest.pm, Mytest.xs, t/Mytest.t, and Changes.</source>
          <target state="translated">&quot; &lt;code&gt;h2xs -A -n Mytest&lt;/code&gt; &quot;を実行します。これにより、Mytestという名前のディレクトリが作成されます。現在の作業ディレクトリにそのディレクトリが存在する場合は、ext /の下にある可能性があります。MANIFEST、Makefile.PL、lib / Mytest.pm、Mytest.xs、t / Mytest.t、Changesなど、いくつかのファイルがMytest dirの下に作成されます。</target>
        </trans-unit>
        <trans-unit id="40b1680590a9e17c0525f4e29f165cce74b8cecd" translate="yes" xml:space="preserve">
          <source>Run &quot;&lt;code&gt;make test&lt;/code&gt; &quot; and all should be well. There are some warnings on missing tests for the Mytest2::mylib extension, but you can ignore them.</source>
          <target state="translated">「 &lt;code&gt;make test&lt;/code&gt; 」を実行すると、すべて正常に動作するはずです。Mytest2 :: mylib拡張機能のテストが不足しているという警告がいくつかありますが、無視してかまいません。</target>
        </trans-unit>
        <trans-unit id="c5ac738ea9d0004f5e399473d8c37b59f41ce4ca" translate="yes" xml:space="preserve">
          <source>Run &quot;&lt;code&gt;make test&lt;/code&gt; &quot; and notice that Perl dies with a fatal error. Perl won't let you change the value of constants!</source>
          <target state="translated">「 &lt;code&gt;make test&lt;/code&gt; 」を実行すると、Perlが致命的なエラーで終了することに注意してください。Perlは定数の値を変更させません！</target>
        </trans-unit>
        <trans-unit id="d0ecfb9954902261408d81dec22ab79badcc0b55" translate="yes" xml:space="preserve">
          <source>Run &amp;lt;n&amp;gt; (default 9) parallel jobs.</source>
          <target state="translated">&amp;lt;n&amp;gt;（デフォルト9）並列ジョブを実行します。</target>
        </trans-unit>
        <trans-unit id="5ebe6d216897e8da269fdd9d77d3781c9acd0c04" translate="yes" xml:space="preserve">
          <source>Run Configure with -Duseithreads which will configure Perl with the Perl 5.8.0 &quot;interpreter threads&quot;, see &lt;a href=&quot;threads&quot;&gt;threads&lt;/a&gt;.</source>
          <target state="translated">Perlの5.8.0「インタプリタスレッド」でPerlを設定します-Duseithreadsと実行の設定は、参照&lt;a href=&quot;threads&quot;&gt;スレッドを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="021a32a69e29cd7390a0b00ca84ffca5411ecab1" translate="yes" xml:space="preserve">
          <source>Run Perl standard test scripts with statistics</source>
          <target state="translated">統計情報を使ってPerl標準のテストスクリプトを実行する</target>
        </trans-unit>
        <trans-unit id="132b74943d953fced136da3d16fb7652fc817fff" translate="yes" xml:space="preserve">
          <source>Run Perl test scripts with color</source>
          <target state="translated">Perl のテストスクリプトをカラーで実行する</target>
        </trans-unit>
        <trans-unit id="1d5731cf909147c22f4afe5b6cd77d3b2a5b25fb" translate="yes" xml:space="preserve">
          <source>Run Tk while prompting (with ReadLine).</source>
          <target state="translated">プロンプトを出しながら(ReadLineで)Tkを実行します。</target>
        </trans-unit>
        <trans-unit id="8b4aade5fb1327e0cd83ef6aded2d84741d502f5" translate="yes" xml:space="preserve">
          <source>Run all tests in normal order</source>
          <target state="translated">すべてのテストを通常の順序で実行する</target>
        </trans-unit>
        <trans-unit id="e6617249c8dc884cd3653e230bd6a061c75a4ccf" translate="yes" xml:space="preserve">
          <source>Run all tests in normal order. Multple options may be specified, so to run all tests with the failures from last time first:</source>
          <target state="translated">すべてのテストを通常の順序で実行します。複数のオプションを指定することができるので、前回の失敗を最初にしてすべてのテストを実行します。</target>
        </trans-unit>
        <trans-unit id="b29e50dd26d0d667426a2c9c5cc5cdb059d02781" translate="yes" xml:space="preserve">
          <source>Run any tests with todos.</source>
          <target state="translated">todosで任意のテストを実行します。</target>
        </trans-unit>
        <trans-unit id="a478fdca867e1e2d00738df21d08640b80cc45e3" translate="yes" xml:space="preserve">
          <source>Run automagically; convert &lt;b&gt;headerfiles&lt;/b&gt;, as well as any &lt;b&gt;.h&lt;/b&gt; files which they include. This option will search for &lt;b&gt;.h&lt;/b&gt; files in all directories which your C compiler ordinarily uses. &lt;b&gt;-a&lt;/b&gt; and &lt;b&gt;-r&lt;/b&gt; are mutually exclusive.</source>
          <target state="translated">自動的に実行します。&lt;b&gt;headerfilesと&lt;/b&gt;、それらに含まれる&lt;b&gt;.h&lt;/b&gt;ファイルを変換します。このオプションは、Cコンパイラが通常使用するすべてのディレクトリで&lt;b&gt;.h&lt;/b&gt;ファイルを検索します。&lt;b&gt;-a&lt;/b&gt;と&lt;b&gt;-r&lt;/b&gt;は相互に排他的です。</target>
        </trans-unit>
        <trans-unit id="e48d34e0fb300e987c588be4615fe8a461781363" translate="yes" xml:space="preserve">
          <source>Run by O'Reilly Media (the publisher of &lt;a href=&quot;perlbook&quot;&gt;the Camel Book&lt;/a&gt;, among other Perl-related literature), perl.com provides current Perl news, articles, and resources for Perl developers as well as a directory of other useful websites.</source>
          <target state="translated">O'Reilly Media（&lt;a href=&quot;perlbook&quot;&gt;Camel Bookの&lt;/a&gt;発行者、その他のPerl関連の文献）が運営するperl.comは、Perl開発者向けの最新のPerlニュース、記事、リソース、およびその他の便利なWebサイトのディレクトリを提供しています。</target>
        </trans-unit>
        <trans-unit id="326960afc55d724212ac1930fb4269abdb59d10d" translate="yes" xml:space="preserve">
          <source>Run cmd in a subprocess (reads from DB::IN, writes to DB::OUT) See &lt;code&gt;o shellBang&lt;/code&gt; , also. Note that the user's current shell (well, their &lt;code&gt;$ENV{SHELL}&lt;/code&gt; variable) will be used, which can interfere with proper interpretation of exit status or signal and coredump information.</source>
          <target state="translated">サブプロセスでcmdを実行します（DB :: INから読み取り、DB :: OUTに書き込みます） &lt;code&gt;o shellBang&lt;/code&gt; も参照してください。ユーザーの現在のシェル（まあ、それらの &lt;code&gt;$ENV{SHELL}&lt;/code&gt; 変数）が使用されることに注意してください。これは、終了ステータスまたはシグナルおよびコアダンプ情報の適切な解釈に干渉する可能性があります。</target>
        </trans-unit>
        <trans-unit id="eb24057fedbca0dcb021765da26b416b33187ba9" translate="yes" xml:space="preserve">
          <source>Run h2xs, overwriting older autogenerated files:</source>
          <target state="translated">h2xs を実行して,古い自動生成ファイルを上書きします.</target>
        </trans-unit>
        <trans-unit id="16aea89e863e124d187a74fdbeac06b4be6038c5" translate="yes" xml:space="preserve">
          <source>Run in the same order as last time</source>
          <target state="translated">前回と同じ順番で実行</target>
        </trans-unit>
        <trans-unit id="b4429b64fc5881f2fabca157076445de7d127a35" translate="yes" xml:space="preserve">
          <source>Run it with the flavor of Perl (</source>
          <target state="translated">Perl のフレーバーで実行します (</target>
        </trans-unit>
        <trans-unit id="347675fe350031dfd280ae83b6e21090e95f3292" translate="yes" xml:space="preserve">
          <source>Run it, Run it:</source>
          <target state="translated">走れ、走れ。</target>
        </trans-unit>
        <trans-unit id="d147275c88800a63e231e45f2c38ff73c3aa8d51" translate="yes" xml:space="preserve">
          <source>Run only the failed tests from last time</source>
          <target state="translated">前回失敗したテストだけを実行する</target>
        </trans-unit>
        <trans-unit id="a25befa25096ae64e47bee7ddc24245960a98020" translate="yes" xml:space="preserve">
          <source>Run only the passed tests from last time</source>
          <target state="translated">前回の合格したテストだけを実行する</target>
        </trans-unit>
        <trans-unit id="4d959cffbfdddc280822defcb6f79363ecf38f04" translate="yes" xml:space="preserve">
          <source>Run only the passed tests from last time. Useful to make sure that no new problems have been introduced.</source>
          <target state="translated">前回合格したテストだけを実行する。新たな問題が発生していないことを確認するのに便利です。</target>
        </trans-unit>
        <trans-unit id="cbd76170a9102754749c68ddd809939c528d45ff" translate="yes" xml:space="preserve">
          <source>Run only the tests that failed on the last run.</source>
          <target state="translated">前回の実行で失敗したテストだけを実行してください。</target>
        </trans-unit>
        <trans-unit id="ebe6589f33506756f449cc0f8dffe352f935e46d" translate="yes" xml:space="preserve">
          <source>Run recursively; if any of &lt;b&gt;headerfiles&lt;/b&gt; are directories, then run</source>
          <target state="translated">再帰的に実行します。&lt;b&gt;ヘッダーファイルの&lt;/b&gt;いずれかがディレクトリである場合は、実行します</target>
        </trans-unit>
        <trans-unit id="4d703a042a216c55e2d0e661b30e14e4754b587e" translate="yes" xml:space="preserve">
          <source>Run test scripts with statistics</source>
          <target state="translated">統計を用いたテストスクリプトの実行</target>
        </trans-unit>
        <trans-unit id="3d77737445a9bcee2270f1793080b381688d576f" translate="yes" xml:space="preserve">
          <source>Run test tests in fastest to slowest order.</source>
          <target state="translated">テストテストを速い順から遅い順に実行します。</target>
        </trans-unit>
        <trans-unit id="d983e0b42fe98913127be263fea7fcc1061fc81c" translate="yes" xml:space="preserve">
          <source>Run the autobundle command for your old perl and optionally rename the resulting bundle file (e.g. Bundle/mybundle.pm), install the new perl with the Configure option prefix, e.g.</source>
          <target state="translated">古い perl 用の autobundle コマンドを実行し、結果として得られるバンドルファイルの名前をオプションで変更し (例:Bundle/mybundle.pm)、新しい perl を Configure オプションのプレフィックスを付けてインストールします。</target>
        </trans-unit>
        <trans-unit id="b902930e9608e1708152e8271d3ed6bc10e108c3" translate="yes" xml:space="preserve">
          <source>Run the debugger command, piping DB::OUT into your current pager.</source>
          <target state="translated">DB::OUT を現在のページャーに配管して、デバッガコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="2e6dfab3126ed8f08d6e193e0c7874ae7cc3053e" translate="yes" xml:space="preserve">
          <source>Run the following command at the command prompt:</source>
          <target state="translated">コマンドプロンプトで以下のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="923312cc1522105a4d6b517a1f05c9d1e5b835ca" translate="yes" xml:space="preserve">
          <source>Run the named tests and display a summary of result. Tests will be run in the order found.</source>
          <target state="translated">指定されたテストを実行し、結果の概要を表示します。テストは見つかった順に実行されます。</target>
        </trans-unit>
        <trans-unit id="13bec37d48429c19b3c97f27f5e6093e330bf0b4" translate="yes" xml:space="preserve">
          <source>Run the new code against the same logfile, as above, to check the new time.</source>
          <target state="translated">上記と同じログファイルに対して新しいコードを実行して、新しい時刻を確認します。</target>
        </trans-unit>
        <trans-unit id="344fe785e4b01bb1a9823c27a947942df830fbcf" translate="yes" xml:space="preserve">
          <source>Run the program with the given arguments.</source>
          <target state="translated">与えられた引数でプログラムを実行します。</target>
        </trans-unit>
        <trans-unit id="b04d438f75db5b58c7668b6c858a25848fc19c67" translate="yes" xml:space="preserve">
          <source>Run the same tests as the last time the state was saved. This makes it possible, for example, to recreate the ordering of a shuffled test.</source>
          <target state="translated">前回状態を保存したときと同じテストを実行します。これにより、例えば、シャッフルされたテストの順序を再現することが可能になります。</target>
        </trans-unit>
        <trans-unit id="615587743f9be2b0898b636b95c48f5366220b40" translate="yes" xml:space="preserve">
          <source>Run the test suite with the</source>
          <target state="translated">でテストスイートを実行します。</target>
        </trans-unit>
        <trans-unit id="8ab2804c16c9e2f16adcf494a79aa4071b8d2940" translate="yes" xml:space="preserve">
          <source>Run the tests in newest to oldest order based on the modification times of the test scripts.</source>
          <target state="translated">テストスクリプトの修正時間に基づいて、新しい順から古い順にテストを実行します。</target>
        </trans-unit>
        <trans-unit id="276857a4a89b1b42f09b42c1a1d021db70aa0067" translate="yes" xml:space="preserve">
          <source>Run the tests in newest to oldest order.</source>
          <target state="translated">新しい順から古い順にテストを実行します。</target>
        </trans-unit>
        <trans-unit id="187026222974971fb5d64e60df0fc344ecab04e0" translate="yes" xml:space="preserve">
          <source>Run the tests in oldest to newest order.</source>
          <target state="translated">テストを古い順から新しい順に実行します。</target>
        </trans-unit>
        <trans-unit id="e37276fad9d46f08b5b3740bb8681d41e48d7322" translate="yes" xml:space="preserve">
          <source>Run the tests in slowest to fastest order.</source>
          <target state="translated">テストを遅い順から早い順に実行します。</target>
        </trans-unit>
        <trans-unit id="99e8e6b9895108b7d033db82aba32483ab5e7dcd" translate="yes" xml:space="preserve">
          <source>Run the tests in slowest to fastest order. This is useful in conjunction with the &lt;code&gt;-j&lt;/code&gt; parallel testing switch to ensure that your slowest tests start running first.</source>
          <target state="translated">テストを最も遅い順序から最も速い順序で実行します。これは &lt;code&gt;-j&lt;/code&gt; 並列テストスイッチと組み合わせて使用すると、最も遅いテストが最初に実行されることを確認するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="c2992040d44efab3ec014c23b10fdc73d1c5a258" translate="yes" xml:space="preserve">
          <source>Run the tests ordered by number of todos.</source>
          <target state="translated">トドの数で順番にテストを実行します。</target>
        </trans-unit>
        <trans-unit id="dcd2ba91cbdef101a4e551d876a6bbe03f610cc3" translate="yes" xml:space="preserve">
          <source>Run the tests that most recently failed first</source>
          <target state="translated">直近で失敗したテストを最初に実行します。</target>
        </trans-unit>
        <trans-unit id="22a661e4b1cc97884aa5c7ad00e644aff3fe8d32" translate="yes" xml:space="preserve">
          <source>Run the tests that most recently failed first. The last failure time of each test is stored. The &lt;code&gt;hot&lt;/code&gt; option causes tests to be run in most-recent- failure order.</source>
          <target state="translated">最後に失敗したテストを最初に実行します。各テストの最後の失敗時刻が保存されます。 &lt;code&gt;hot&lt;/code&gt; オプションは、テストが最もrecent-障害順序で実行されます。</target>
        </trans-unit>
        <trans-unit id="b751d8ce33b82a72966b78a2fe594e60073f52f4" translate="yes" xml:space="preserve">
          <source>Run the tests under verbose mode so you can see what tests were run, and debug output.</source>
          <target state="translated">冗長モードでテストを実行すると、どのようなテストが実行されたかを確認したり、出力をデバッグしたりすることができます。</target>
        </trans-unit>
        <trans-unit id="64d909ee99215528f8bb65aee45be2b7c215e564" translate="yes" xml:space="preserve">
          <source>Run the torture tests as well as the normal set.</source>
          <target state="translated">通常のセットと同様に拷問テストを実行してください。</target>
        </trans-unit>
        <trans-unit id="d71365267480825eaa78ea5cd3ecc4ed182988c9" translate="yes" xml:space="preserve">
          <source>Run these code snippets to get a quick feel for the behavior of this module. When you are through with these examples, you may want to add or change the various configuration variables described above, to see their behavior. (See the testsuite in the Data::Dumper distribution for more examples.)</source>
          <target state="translated">これらのコードスニペットを実行して、このモジュールの動作を素早く理解してください。これらの例が終わったら、上で説明した様々な設定変数を追加したり変更したりして、その動作を見てみましょう。(より多くの例については Data::Dumper ディストリビューションの testsuite を参照してください)。</target>
        </trans-unit>
        <trans-unit id="36c64406909c9d8d65152eea12aba242a2f308b8" translate="yes" xml:space="preserve">
          <source>Run those test scripts that have been modified since the last test run.</source>
          <target state="translated">前回のテスト実行後に変更されたテストスクリプトを実行します。</target>
        </trans-unit>
        <trans-unit id="d65232ea421c0a08d384c464e7edc6b231264df7" translate="yes" xml:space="preserve">
          <source>Run until the end of the current function, then stop again.</source>
          <target state="translated">現在の関数が終了するまで実行し、再び停止します。</target>
        </trans-unit>
        <trans-unit id="9402341f966b1f2237c237df2a33a29de914171b" translate="yes" xml:space="preserve">
          <source>Run until the next breakpoint.</source>
          <target state="translated">次のブレークポイントまで実行します。</target>
        </trans-unit>
        <trans-unit id="cb99206f9621cf0baa39b3455a1ac0d1fb5b7c1b" translate="yes" xml:space="preserve">
          <source>Run-time Output</source>
          <target state="translated">ランタイム出力</target>
        </trans-unit>
        <trans-unit id="3835d25772e88988c981fd235e2e007d564bb224" translate="yes" xml:space="preserve">
          <source>Run-time Overloading</source>
          <target state="translated">実行時のオーバーロード</target>
        </trans-unit>
        <trans-unit id="73989d9c59264da08a15dba21c7d58237a91f08f" translate="yes" xml:space="preserve">
          <source>Running</source>
          <target state="translated">Running</target>
        </trans-unit>
        <trans-unit id="a4157a9dab9bc4703b677fbf1666829ae51b08f6" translate="yes" xml:space="preserve">
          <source>Running &quot;&lt;code&gt;make test&lt;/code&gt; &quot; should now print out that all nine tests are okay.</source>
          <target state="translated">「 &lt;code&gt;make test&lt;/code&gt; 」を実行すると、9つのテストすべてが問題ないことが出力されます。</target>
        </trans-unit>
        <trans-unit id="acb2d381f62f6e9ccdd680091fe04a4f981c57a1" translate="yes" xml:space="preserve">
          <source>Running B::Concise::compile()</source>
          <target state="translated">B::Concise::compile()の実行</target>
        </trans-unit>
        <trans-unit id="f0e8ef3ad21e46856efdf6639102c115914f4c23" translate="yes" xml:space="preserve">
          <source>Running Perl Scripts</source>
          <target state="translated">Perl スクリプトの実行</target>
        </trans-unit>
        <trans-unit id="448aca736dc491b373a3bffd1cb8148803168aed" translate="yes" xml:space="preserve">
          <source>Running Perl programs</source>
          <target state="translated">実行中のPerlプログラム</target>
        </trans-unit>
        <trans-unit id="3ca8f02052bacd5ffc869e5f86246ee326790af1" translate="yes" xml:space="preserve">
          <source>Running it produces the error in question:</source>
          <target state="translated">これを実行すると、問題のエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="f113af52a808286796ebc41b9efb541559f87c11" translate="yes" xml:space="preserve">
          <source>Running it produces this output:</source>
          <target state="translated">これを実行すると、このような出力が得られます。</target>
        </trans-unit>
        <trans-unit id="d38bbafeb6c120aa99d66722d9256164881ad731" translate="yes" xml:space="preserve">
          <source>Running ppport.h</source>
          <target state="translated">ppport.hを実行する</target>
        </trans-unit>
        <trans-unit id="be64280ade23e74f60a4ce8d57444019c4382156" translate="yes" xml:space="preserve">
          <source>Running tests</source>
          <target state="translated">テストの実行</target>
        </trans-unit>
        <trans-unit id="976e0b62f0992bb63dac57b4ef7d1e39b7fced97" translate="yes" xml:space="preserve">
          <source>Running tests by hand</source>
          <target state="translated">手作業でテストを実行する</target>
        </trans-unit>
        <trans-unit id="9288568c58b86cfa31ab840046652ac62749b9c2" translate="yes" xml:space="preserve">
          <source>Running the &lt;code&gt;harness&lt;/code&gt; is painful because of the many failing Unicode-related tests will output megabytes of failure messages, but if one patiently waits, one gets these results:</source>
          <target state="translated">ユニコード関連のテストの多くが失敗するため、 &lt;code&gt;harness&lt;/code&gt; 実行するのは大変ですが、辛抱強く待つと、次のような結果になります。</target>
        </trans-unit>
        <trans-unit id="8f4fca91d05d5a91f846d5e3bb38f85ccda92848" translate="yes" xml:space="preserve">
          <source>Running the code gives us our results:</source>
          <target state="translated">コードを実行すると、結果が得られます。</target>
        </trans-unit>
        <trans-unit id="298ce7341da07a876349a3e21fbfee6edd26611a" translate="yes" xml:space="preserve">
          <source>Running the profiled version of Perl will cause profile output to be generated. For each source file an accompanying</source>
          <target state="translated">プロファイル化されたバージョンの Perl を実行すると、プロファイル出力が生成されます。各ソースファイルには、それに付随する</target>
        </trans-unit>
        <trans-unit id="9d3ce8fa0731f61c84ffe2d9bfa287832f73b234" translate="yes" xml:space="preserve">
          <source>Running the test suite in SunOS 4.1 is a bit tricky since the</source>
          <target state="translated">SunOS 4.1でテストスイートを実行するのは少し厄介です。</target>
        </trans-unit>
        <trans-unit id="ba601cc1eca875455c950799ee630fdc36657e74" translate="yes" xml:space="preserve">
          <source>Running this program produces the following output:</source>
          <target state="translated">このプログラムを実行すると、以下のような出力が得られます。</target>
        </trans-unit>
        <trans-unit id="ba6290730e5261e657d8ab4b0945945b52af6d06" translate="yes" xml:space="preserve">
          <source>Running this same process as a &lt;code&gt;Schwarzian Transform&lt;/code&gt; it is possible to eliminate the input and output arrays for storing all the data, and work on the input directly as it arrives too. Otherwise, the code looks fairly similar:</source>
          <target state="translated">これと同じプロセスを &lt;code&gt;Schwarzian Transform&lt;/code&gt; として実行すると、すべてのデータを格納するための入力配列と出力配列を削除し、入力が到着しても直接操作することができます。それ以外の場合、コードはかなり似ています。</target>
        </trans-unit>
        <trans-unit id="c99795b0ad2b8f6ce5eb458b619b71027a25a260" translate="yes" xml:space="preserve">
          <source>Running under the &lt;code&gt;&amp;ndash;T&lt;/code&gt; switch, marking all external data as suspect and refusing to use it with system commands. See Camel chapter 20, &amp;ldquo;Security&amp;rdquo;.</source>
          <target state="translated">&lt;code&gt;&amp;ndash;T&lt;/code&gt; スイッチの下で実行し、すべての外部データを疑わしいものとしてマークし、システムコマンドでの使用を拒否します。Camelの第20章「セキュリティ」を参照してください。</target>
        </trans-unit>
        <trans-unit id="f8cde9834f650e063d400cc9ef89fc044ff61626" translate="yes" xml:space="preserve">
          <source>Runs a &lt;code&gt;make&lt;/code&gt; on the distribution associated with this module.</source>
          <target state="translated">このモジュールに関連付けられたディストリビューションで &lt;code&gt;make&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="ef7beb2e98a633700558f628bbef52293537360e" translate="yes" xml:space="preserve">
          <source>Runs a &lt;code&gt;perldoc&lt;/code&gt; on this module.</source>
          <target state="translated">このモジュールで &lt;code&gt;perldoc&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="203a6f0990a5e3d73b37486df63370d540b212f2" translate="yes" xml:space="preserve">
          <source>Runs a &lt;code&gt;readme&lt;/code&gt; on the distribution associated with this module.</source>
          <target state="translated">このモジュールに関連付けられているディストリビューションで &lt;code&gt;readme&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="4cb53d21c3faaa60d712747f2aa9c43958382b5a" translate="yes" xml:space="preserve">
          <source>Runs a &lt;code&gt;test&lt;/code&gt; on the distribution associated with this module.</source>
          <target state="translated">このモジュールに関連付けられているディストリビューションで &lt;code&gt;test&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="54b3d63665a8b2545742aa75f4e10bb696c3ca15" translate="yes" xml:space="preserve">
          <source>Runs a clean on the distribution associated with this module.</source>
          <target state="translated">このモジュールに関連するディストリビューションのクリーンアップを実行します。</target>
        </trans-unit>
        <trans-unit id="7481337f98a4521e76d8e62c2472f27b0ef4936d" translate="yes" xml:space="preserve">
          <source>Runs a cvs_import on the distribution associated with this module.</source>
          <target state="translated">このモジュールに関連付けられたディストリビューションに対して cvs_import を実行します.</target>
        </trans-unit>
        <trans-unit id="f6afcf4e11da7f66d018bb65aab69f1ee5b92dec" translate="yes" xml:space="preserve">
          <source>Runs a get on the distribution associated with this module.</source>
          <target state="translated">このモジュールに関連付けられたディストリビューションの取得を実行します。</target>
        </trans-unit>
        <trans-unit id="31130a723db7cca107881803b18536b8caa450ae" translate="yes" xml:space="preserve">
          <source>Runs a tardist first and uuencodes the tarfile.</source>
          <target state="translated">tardistを最初に実行し、tarファイルをuuencodeします。</target>
        </trans-unit>
        <trans-unit id="5fe942298de68e1416635017ad15368a86af0bdf" translate="yes" xml:space="preserve">
          <source>Runs all the given &lt;code&gt;@test_files&lt;/code&gt; (just like &lt;code&gt;runtests()&lt;/code&gt; ) but doesn't generate the final report. During testing, progress information will be written to the currently selected output filehandle (usually &lt;code&gt;STDOUT&lt;/code&gt; ), or to the filehandle given by the &lt;code&gt;out&lt;/code&gt; parameter. The</source>
          <target state="translated">（ &lt;code&gt;runtests()&lt;/code&gt; と同様に）指定されたすべての &lt;code&gt;@test_files&lt;/code&gt; を実行しますが、最終的なレポートは生成しません。テスト中、進捗情報は現在選択されている出力ファイルハンドル（通常は &lt;code&gt;STDOUT&lt;/code&gt; ）、または &lt;code&gt;out&lt;/code&gt; パラメータで指定されたファイルハンドルに書き込まれます。の</target>
        </trans-unit>
        <trans-unit id="6dacfc94bc7a00fd8176e7a38504744a4951f65a" translate="yes" xml:space="preserve">
          <source>Runs an &lt;code&gt;install&lt;/code&gt; on the distribution associated with this module.</source>
          <target state="translated">このモジュールに関連付けられたディストリビューションで &lt;code&gt;install&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="3cb9753fd8412766e708598d8f8b0a6237ec39da" translate="yes" xml:space="preserve">
          <source>Runs an interactive configuration dialog for matching variables. Without argument runs the dialog over all supported config variables. To specify a MATCH the argument must be enclosed by slashes.</source>
          <target state="translated">変数を一致させるための対話的な設定ダイアログを実行します。引数を指定しない場合は、サポートされている全ての設定変数に対してダイアログを実行します。MATCHを指定するには、引数をスラッシュで囲む必要があります。</target>
        </trans-unit>
        <trans-unit id="429f486dc0c3f35135f4234db94197e212d8160c" translate="yes" xml:space="preserve">
          <source>Runs the supplied command and includes its output into the current XS document. &lt;code&gt;INCLUDE_COMMAND&lt;/code&gt; assigns special meaning to the &lt;code&gt;$^X&lt;/code&gt; token in that it runs the same perl interpreter that is running &lt;code&gt;xsubpp&lt;/code&gt; :</source>
          <target state="translated">指定されたコマンドを実行し、その出力を現在のXSドキュメントに含めます。 &lt;code&gt;INCLUDE_COMMAND&lt;/code&gt; は、 &lt;code&gt;xsubpp&lt;/code&gt; を実行しているのと同じperlインタープリターを実行するという点で、 &lt;code&gt;$^X&lt;/code&gt; トークンに特別な意味を割り当てます。</target>
        </trans-unit>
        <trans-unit id="fbe649f94aca783e56d7207473071c2e11f49842" translate="yes" xml:space="preserve">
          <source>Runs the tests on @ARGV via Test::Harness passing through the $verbose flag. Any @test_libs will be unshifted onto the test's @INC.</source>
          <target state="translated">Test::Harness経由で@ARGV上で$verboseフラグを通したテストを実行します。test_libs はテストの @INC にアンシフトされます。</target>
        </trans-unit>
        <trans-unit id="cf845777b1ba4ed44be135f0aa292db074e7ce96" translate="yes" xml:space="preserve">
          <source>Runtime debugging</source>
          <target state="translated">ランタイムデバッグ</target>
        </trans-unit>
        <trans-unit id="5f8daabe1c3305061a303ad921d48e240dec05ca" translate="yes" xml:space="preserve">
          <source>Runtime require of both modules and files</source>
          <target state="translated">実行時にはモジュールとファイルの両方を必要とします。</target>
        </trans-unit>
        <trans-unit id="8fc591fdc47c99524c9038fddd8cc8299faabc5e" translate="yes" xml:space="preserve">
          <source>Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;, based</source>
          <target state="translated">Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;、ベース</target>
        </trans-unit>
        <trans-unit id="5744fe01693afab781f83e6c4f4f645a19bfc91f" translate="yes" xml:space="preserve">
          <source>Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;, with large portions of this documentation taken from the documentation of the original &lt;b&gt;pod2man&lt;/b&gt; implementation by Larry Wall and Tom Christiansen.</source>
          <target state="translated">Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;。このドキュメントの大部分は、Larry WallとTom Christiansenによる元の&lt;b&gt;pod2man&lt;/b&gt;実装のドキュメントから取られています。</target>
        </trans-unit>
        <trans-unit id="ccf4b9bc92d7f944555e33cae0a6ad8a3c2bde6c" translate="yes" xml:space="preserve">
          <source>Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;.</source>
          <target state="translated">Russ Allbery &amp;lt;rra@stanford.edu&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="02aa629c8b16cd17a44f3a0efec2feed43937642" translate="yes" xml:space="preserve">
          <source>S</source>
          <target state="translated">S</target>
        </trans-unit>
        <trans-unit id="7d21195005ef117e310a2370051226757a91d1fc" translate="yes" xml:space="preserve">
          <source>S&amp;eacute;bastien Aperghis-Tramoni &lt;code&gt;&amp;lt;saper@cpan.org&amp;gt;&lt;/code&gt;</source>
          <target state="translated">セバスチャンアペルギストラモニ &lt;code&gt;&amp;lt;saper@cpan.org&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="689837fee911a3abe7f6a22d5e5632351df4b07a" translate="yes" xml:space="preserve">
          <source>S-regex</source>
          <target state="translated">S-regex</target>
        </trans-unit>
        <trans-unit id="79e42ced841472bde049b15b6714ebb3f6a91886" translate="yes" xml:space="preserve">
          <source>SADAHIRO Tomoyuki &amp;lt;SADAHIRO@cpan.org&amp;gt;</source>
          <target state="translated">貞弘智之&amp;lt;SADAHIRO@cpan.org&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1c1a149ffa7e57a787cea83ed6a3a2c0ffa35345" translate="yes" xml:space="preserve">
          <source>SCALAR by Tassilo von Parseval &amp;lt;</source>
          <target state="translated">SCALAR by Tassilo von Parseval &amp;lt;</target>
        </trans-unit>
        <trans-unit id="43993ba468ce32a67952244d9e5192667e84cd03" translate="yes" xml:space="preserve">
          <source>SCALAR objects have the weirdest looking &lt;code&gt;&lt;a href=&quot;../functions/bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt; workaround.</source>
          <target state="translated">SCALARオブジェクトには、奇妙に見える &lt;code&gt;&lt;a href=&quot;../functions/bless&quot;&gt;bless&lt;/a&gt;&lt;/code&gt; 回避策があります。</target>
        </trans-unit>
        <trans-unit id="8add1ce4b3b0f237cb257bfdfad785395ef1e5bc" translate="yes" xml:space="preserve">
          <source>SCALAR, UNTIE and DESTROY</source>
          <target state="translated">スカラー、アンタイ、デストロイ</target>
        </trans-unit>
        <trans-unit id="59c76652af2d2c360a807543951673bfa19a4bab" translate="yes" xml:space="preserve">
          <source>SCALAR_CACHE, LIST_CACHE</source>
          <target state="translated">SCALAR_CACHE、LIST_CACHE</target>
        </trans-unit>
        <trans-unit id="46ab5a918078b88865c34d46d45763f78a5cc2a8" translate="yes" xml:space="preserve">
          <source>SCRIPT</source>
          <target state="translated">SCRIPT</target>
        </trans-unit>
        <trans-unit id="e003ea419cd6d683b3dc245b907e737d9db1ae18" translate="yes" xml:space="preserve">
          <source>SCRIPTNAME</source>
          <target state="translated">SCRIPTNAME</target>
        </trans-unit>
        <trans-unit id="0f0ba912c0054dc78bfcf20fe7b6e50703bcd2fb" translate="yes" xml:space="preserve">
          <source>SDBM_File</source>
          <target state="translated">SDBM_File</target>
        </trans-unit>
        <trans-unit id="28e149b5061e0e199eeb8ad29d19c2b452c7308d" translate="yes" xml:space="preserve">
          <source>SDBM_File - Tied access to sdbm files</source>
          <target state="translated">SDBM_File-sdbm ファイルへのアクセスに関連付けられています。</target>
        </trans-unit>
        <trans-unit id="8588b248d51f71630f790c3eb34cf84896c594a3" translate="yes" xml:space="preserve">
          <source>SDBM_File optionally exports the following constants:</source>
          <target state="translated">SDBM_Fileは、オプションで以下の定数をエクスポートする。</target>
        </trans-unit>
        <trans-unit id="1faeb0377926bf58af76c255c58712a5d3e6ec90" translate="yes" xml:space="preserve">
          <source>SDBM_File works properly on VMS. It has, however, one minor difference. The database directory file created has a</source>
          <target state="translated">SDBM_FileはVMS上では正常に動作する。しかし、1つだけ小さな違いがあります。作成されたデータベースディレクトリファイルには</target>
        </trans-unit>
        <trans-unit id="1952101e9f51419b4802f5cf2205dbe7f82c6050" translate="yes" xml:space="preserve">
          <source>SDK support</source>
          <target state="translated">サポートSDK</target>
        </trans-unit>
        <trans-unit id="0b5c47070a456be30ed273d884c5ec6f4e9bab40" translate="yes" xml:space="preserve">
          <source>SEARCHLIST</source>
          <target state="translated">SEARCHLIST</target>
        </trans-unit>
        <trans-unit id="76cc8b48c61108caae8462edc037736919e97499" translate="yes" xml:space="preserve">
          <source>SECONDARY METHODS</source>
          <target state="translated">第二の方法</target>
        </trans-unit>
        <trans-unit id="2f94587f40525a0a8a732b6707107d4fbdffb1c1" translate="yes" xml:space="preserve">
          <source>SECTION SPECIFICATIONS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a7b77e1bff2cdf175f16e6d7ba96ce707ec6d1f" translate="yes" xml:space="preserve">
          <source>SECURITY</source>
          <target state="translated">SECURITY</target>
        </trans-unit>
        <trans-unit id="12713ecff9f1245e64977a8fa414c57fa087a008" translate="yes" xml:space="preserve">
          <source>SECURITY ADVICE</source>
          <target state="translated">セキュリティ・アドバイス</target>
        </trans-unit>
        <trans-unit id="bfd285ce31ccc93ae218db34512d55c8fef1bf03" translate="yes" xml:space="preserve">
          <source>SECURITY CONSIDERATIONS</source>
          <target state="translated">SECURITY CONSIDERATIONS</target>
        </trans-unit>
        <trans-unit id="c06a8de7571099d0932997aba5af14fa479ee594" translate="yes" xml:space="preserve">
          <source>SECURITY MECHANISMS AND CONCERNS</source>
          <target state="translated">セキュリティ・メカニズムと懸念事項</target>
        </trans-unit>
        <trans-unit id="23221788445fd727530d1bc6254db2bce93ad328" translate="yes" xml:space="preserve">
          <source>SECURITY VULNERABILITY CONTACT INFORMATION</source>
          <target state="translated">SECURITY VULNERABILITY CONTACT INFORMATION</target>
        </trans-unit>
        <trans-unit id="1c956b4275eeb6f3263c0bd524a24f06a31af248" translate="yes" xml:space="preserve">
          <source>SECURITY WARNING</source>
          <target state="translated">セキュリティ警告</target>
        </trans-unit>
        <trans-unit id="2545989a050467477ac52f135227af914644a6f6" translate="yes" xml:space="preserve">
          <source>SEE ALSO</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a514a40dba849cc960ceb2766c69bf6dbfac5efe" translate="yes" xml:space="preserve">
          <source>SETTING UP</source>
          <target state="translated">セットアップ</target>
        </trans-unit>
        <trans-unit id="ea891f207d532669ff9b90ec72a7baa4f36f053a" translate="yes" xml:space="preserve">
          <source>SEVERE errors may be trapped using the modern interface. If the they are not trapped, or the old interface is used, such an error will cause the program will halt.</source>
          <target state="translated">最新のインタフェースを使用していると、重大なエラーがトラップされることがあります。トラップされていない場合や古いインターフェイスを使用している場合は、そのようなエラーはプログラムを停止させる原因となります。</target>
        </trans-unit>
        <trans-unit id="4a0522194695bd9bef8665629020d38d138bbf60" translate="yes" xml:space="preserve">
          <source>SHOULD</source>
          <target state="translated">SHOULD</target>
        </trans-unit>
        <trans-unit id="f284419b463720e759d9bd38bb7313ae06f0c7a4" translate="yes" xml:space="preserve">
          <source>SHUT_RD, SHUT_RDWR, SHUT_WR</source>
          <target state="translated">SHUT_RD,SHUT_RDWR,SHUT_WR</target>
        </trans-unit>
        <trans-unit id="14aa89a719ec7122c2ce360f693449bd2b19b4bb" translate="yes" xml:space="preserve">
          <source>SIDE EFFECTS</source>
          <target state="translated">副作用</target>
        </trans-unit>
        <trans-unit id="e131851088ee5bd4a8d05eac73ba1e1c34fea115" translate="yes" xml:space="preserve">
          <source>SIGCHLD handlers require some special care. If a second child dies while in the signal handler caused by the first death, we won't get another signal. So must loop here else we will leave the unreaped child as a zombie. And the next time two children die we get another zombie. And so on.</source>
          <target state="translated">SIGCHLDハンドラにはいくつかの特別な注意が必要です。最初の死によってシグナルハンドラの中で2番目の子が死んだ場合、次のシグナルは得られません。そのため、ここでループしなければならないのですが、そうしないと、再生されていない子はゾンビのままになってしまいます。次に2人の子供が死んだ時は別のゾンビが出てくる このようにして...</target>
        </trans-unit>
        <trans-unit id="6c516a9cdc9c6a2dc636e4dc4edef8cf15c9a35e" translate="yes" xml:space="preserve">
          <source>SIGN</source>
          <target state="translated">SIGN</target>
        </trans-unit>
        <trans-unit id="289e7cb687cf889ca955ad085551ec3d6e9b0f5c" translate="yes" xml:space="preserve">
          <source>SIGNAL</source>
          <target state="translated">SIGNAL</target>
        </trans-unit>
        <trans-unit id="e4c348d27951fa0e0b6f3964c9a0317f5c5fdfc5" translate="yes" xml:space="preserve">
          <source>SIGNAL HANDLERS</source>
          <target state="translated">シグナルハンドラ</target>
        </trans-unit>
        <trans-unit id="95d9f548097dbe6158b3add5ee8ac2dff325c1b4" translate="yes" xml:space="preserve">
          <source>SIGNAL LISTS</source>
          <target state="translated">シグナルリスト</target>
        </trans-unit>
        <trans-unit id="c7919905bf1f940e4f07557025388777dc3f0680" translate="yes" xml:space="preserve">
          <source>SIGNAL may be either a signal name (a string) or a signal number. A signal name may start with a &lt;code&gt;SIG&lt;/code&gt; prefix, thus &lt;code&gt;FOO&lt;/code&gt; and &lt;code&gt;SIGFOO&lt;/code&gt; refer to the same signal. The string form of SIGNAL is recommended for portability because the same signal may have different numbers in different operating systems.</source>
          <target state="translated">SIGNALは、シグナル名（文字列）またはシグナル番号のいずれかです。シグナル名は &lt;code&gt;SIG&lt;/code&gt; プレフィックスで始まる場合があるため、 &lt;code&gt;FOO&lt;/code&gt; と &lt;code&gt;SIGFOO&lt;/code&gt; は同じシグナルを参照します。文字列形式のSIGNALは、移植性のために推奨されます。これは、同じ信号でも、オペレーティングシステムによって異なる番号になる可能性があるためです。</target>
        </trans-unit>
        <trans-unit id="45d7ab163c3519f034360b9f8c15583993072de3" translate="yes" xml:space="preserve">
          <source>SIMPLE (REAL) ARGUMENTS, COMPLEX RESULTS</source>
          <target state="translated">単純な(現実の)主張、複雑な結果</target>
        </trans-unit>
        <trans-unit id="36fb236688433f7ba1fe71d8334a5881c26945e8" translate="yes" xml:space="preserve">
          <source>SINGLE</source>
          <target state="translated">SINGLE</target>
        </trans-unit>
        <trans-unit id="9551f9ebadb6b8874f0a09d6fd17dc9a6313f20f" translate="yes" xml:space="preserve">
          <source>SINGLE OCTET TABLES</source>
          <target state="translated">シングルオクテットテーブル</target>
        </trans-unit>
        <trans-unit id="88087292ed82e26f3eb824d0bffc05ccf7a30f8d" translate="yes" xml:space="preserve">
          <source>SIZE</source>
          <target state="translated">SIZE</target>
        </trans-unit>
        <trans-unit id="ef55ad765ee655a35542a988358cf7b9367f4896" translate="yes" xml:space="preserve">
          <source>SOCKETS</source>
          <target state="translated">SOCKETS</target>
        </trans-unit>
        <trans-unit id="d9d19b4d1282cc807176ba014d065344ca6bbd6f" translate="yes" xml:space="preserve">
          <source>SOCK_NONBLOCK. SOCK_CLOEXEC</source>
          <target state="translated">SOCK_NONBLOCKです。SOCK_CLOEXEC</target>
        </trans-unit>
        <trans-unit id="df29c59e479c0271bf7e9c0ad92c8237cad6f2e0" translate="yes" xml:space="preserve">
          <source>SOCK_STREAM, SOCK_DGRAM, SOCK_RAW, ...</source>
          <target state="translated">SOCK_STREAM,SOCK_DGRAM,SOCK_RAW,...</target>
        </trans-unit>
        <trans-unit id="a78809e52bb535d4af719afc8ed332b56e8e1f89" translate="yes" xml:space="preserve">
          <source>SOLARIS-SPECIFIC MODULES.</source>
          <target state="translated">SOLARIS-SPECIFIC MODULES.</target>
        </trans-unit>
        <trans-unit id="9c600da6a371817a1804028bdc065e60095ceee4" translate="yes" xml:space="preserve">
          <source>SOLARIS-SPECIFIC PROBLEMS WITH MODULES.</source>
          <target state="translated">SOLARIS-SPECIFIC PROBLEMES WITH MODULES.</target>
        </trans-unit>
        <trans-unit id="17c8bdf0e5e4e0187b930b3d9bfb3544bfba93c1" translate="yes" xml:space="preserve">
          <source>SOL_SOCKET</source>
          <target state="translated">SOL_SOCKET</target>
        </trans-unit>
        <trans-unit id="11691e308bd0d9194f09e5e1e6a5cfb98fc37a2c" translate="yes" xml:space="preserve">
          <source>SORTING</source>
          <target state="translated">SORTING</target>
        </trans-unit>
        <trans-unit id="e9ae0ed784fa4b84ae7b592fd74578fd81749524" translate="yes" xml:space="preserve">
          <source>SOURCE</source>
          <target state="translated">SOURCE</target>
        </trans-unit>
        <trans-unit id="b1381d371061209491819eb2609a01de24fdb853" translate="yes" xml:space="preserve">
          <source>SOURCE CODE STATIC ANALYSIS</source>
          <target state="translated">ソースコード統計解析</target>
        </trans-unit>
        <trans-unit id="c8f16f5a1f1356b3650bb7ab2c5f8f37d42461c3" translate="yes" xml:space="preserve">
          <source>SOURCE HANDLERS</source>
          <target state="translated">ソース取扱店</target>
        </trans-unit>
        <trans-unit id="9836d9fa982da4ba0a76274027dfcf4145f8ed19" translate="yes" xml:space="preserve">
          <source>SO_ACCEPTCONN, SO_BROADCAST, SO_ERROR, ...</source>
          <target state="translated">SO_ACCEPTCONN,SO_BROADCAST,SO_ERROR,...</target>
        </trans-unit>
        <trans-unit id="5cca89f9409718b1da6907e6e93572d06c40ca6d" translate="yes" xml:space="preserve">
          <source>SPECIAL NOTES</source>
          <target state="translated">特記事項</target>
        </trans-unit>
        <trans-unit id="5869ad2af52d01c61e6d7c2327c37cf5db83ed34" translate="yes" xml:space="preserve">
          <source>SPECIAL VARIABLES</source>
          <target state="translated">スペシャルバリエーション</target>
        </trans-unit>
        <trans-unit id="265ffc5673e34f04cd058a9e47b2f3fc4118c0e5" translate="yes" xml:space="preserve">
          <source>SPEED</source>
          <target state="translated">SPEED</target>
        </trans-unit>
        <trans-unit id="92288c56bc2d9ae8d3ddd7aea35d68f216ba8209" translate="yes" xml:space="preserve">
          <source>STACKS</source>
          <target state="translated">STACKS</target>
        </trans-unit>
        <trans-unit id="3cd0e3397d7d517e68e7d898e8d530d51a211c50" translate="yes" xml:space="preserve">
          <source>STANDARDS OF CONDUCT</source>
          <target state="translated">行動規範</target>
        </trans-unit>
        <trans-unit id="7196e7c29d205cf35657781e59674fc592b0e1d5" translate="yes" xml:space="preserve">
          <source>START</source>
          <target state="translated">START</target>
        </trans-unit>
        <trans-unit id="0580918dfe727b503f118df4dfa837d1d97b8afb" translate="yes" xml:space="preserve">
          <source>STAT</source>
          <target state="translated">STAT</target>
        </trans-unit>
        <trans-unit id="459c448fab4f45a0006af647b52de2148f3245b8" translate="yes" xml:space="preserve">
          <source>STATIC becomes &quot;static&quot; in C, and may be #define'd to nothing in some configurations in the future.</source>
          <target state="translated">STATIC は C 言語では &quot;static&quot; になり、将来的にはいくつかの設定では何も定義されないようになるかもしれません。</target>
        </trans-unit>
        <trans-unit id="152beb2de4a9191bf00c402b86c178a1e96b8bde" translate="yes" xml:space="preserve">
          <source>STDIN. If you open a pipe</source>
          <target state="translated">STDINです。パイプを開くと</target>
        </trans-unit>
        <trans-unit id="d49edcaca803885dd3d3de3582a20b0a8ac42bbc" translate="yes" xml:space="preserve">
          <source>STDIO</source>
          <target state="translated">STDIO</target>
        </trans-unit>
        <trans-unit id="6717a5443e936a38121877fb3474d434376f157d" translate="yes" xml:space="preserve">
          <source>STDLIB</source>
          <target state="translated">STDLIB</target>
        </trans-unit>
        <trans-unit id="9276851877b23012083cb17a9b38f356b1fd2912" translate="yes" xml:space="preserve">
          <source>STDOUT.</source>
          <target state="translated">STDOUT.</target>
        </trans-unit>
        <trans-unit id="9d268d2e24eca6fdbe8751403875b5d409cc2bab" translate="yes" xml:space="preserve">
          <source>STORABLE SUPPORT</source>
          <target state="translated">安定したサポート</target>
        </trans-unit>
        <trans-unit id="927396a1c407c35ce234da193b181423ab846b07" translate="yes" xml:space="preserve">
          <source>STORAGE</source>
          <target state="translated">STORAGE</target>
        </trans-unit>
        <trans-unit id="da5aba16204ebd88821d2bbf3642268c4231fb1f" translate="yes" xml:space="preserve">
          <source>STRING</source>
          <target state="translated">STRING</target>
        </trans-unit>
        <trans-unit id="e004a975375cfcdf1578fc0ef7c035457310c786" translate="yes" xml:space="preserve">
          <source>STRING-OFFSET</source>
          <target state="translated">STRING-OFFSET</target>
        </trans-unit>
        <trans-unit id="d39d4197672a8a5a8b01bc20bee3ed97b2ee0de2" translate="yes" xml:space="preserve">
          <source>STRUCTURE MANIPULATORS</source>
          <target state="translated">構造制御装置</target>
        </trans-unit>
        <trans-unit id="88d861b852455a77bedc56d5051d1494e3427dc1" translate="yes" xml:space="preserve">
          <source>STYLE can be any of 'all', 'none', 'noc', 'nop' or 'auto'. 'all' shows each of the 5 times available ('wallclock' time, user time, system time, user time of children, and system time of children). 'noc' shows all except the two children times. 'nop' shows only wallclock and the two children times. 'auto' (the default) will act as 'all' unless the children times are both zero, in which case it acts as 'noc'. 'none' prevents output.</source>
          <target state="translated">STYLEは'all'、'none'、'noc'、'nop'、'auto'のいずれかである。all' は利用可能な5つの時間('wallclock'時間、ユーザ時間、システム時間、子供のユーザ時間、子供のシステム時間)をそれぞれ表示する。noc' は、2つの子供の時間を除くすべての時間を表示します。'nop' は壁時計と子供2人の時間のみを表示します。auto' (デフォルト)は、子供の時刻が両方ともゼロでない限り、'all' として動作し、その場合は 'noc' として動作する。none' は出力を防ぎます。</target>
        </trans-unit>
        <trans-unit id="f785aa60eb1687828109026f7c1556afeb4bb5ca" translate="yes" xml:space="preserve">
          <source>SUBCHAR</source>
          <target state="translated">SUBCHAR</target>
        </trans-unit>
        <trans-unit id="d5529482d8b56979cf6f3c8ce6edeba18392ec47" translate="yes" xml:space="preserve">
          <source>SUBCLASSING</source>
          <target state="translated">SUBCLASSING</target>
        </trans-unit>
        <trans-unit id="41007eab9a3f59844238f520d3b3fbe3574e4ec5" translate="yes" xml:space="preserve">
          <source>SUBVERSION</source>
          <target state="translated">SUBVERSION</target>
        </trans-unit>
        <trans-unit id="78da15466bc22ba4c2064f6819f0ee327ab6981d" translate="yes" xml:space="preserve">
          <source>SUGGESTED ADDITIONS</source>
          <target state="translated">推奨される追加機能</target>
        </trans-unit>
        <trans-unit id="1450844d24f350ba57985fb7baa645d1b3c9ba65" translate="yes" xml:space="preserve">
          <source>SUMMARY</source>
          <target state="translated">SUMMARY</target>
        </trans-unit>
        <trans-unit id="7ba6b2cd3c556610f9bf6f732ed3dc1225ebaf0f" translate="yes" xml:space="preserve">
          <source>SUPER QUICK PATCH GUIDE</source>
          <target state="translated">スーパークイックパッチガイド</target>
        </trans-unit>
        <trans-unit id="0e5b114f4724be24326da9743475bcb96c13f24e" translate="yes" xml:space="preserve">
          <source>SUPPORT</source>
          <target state="translated">SUPPORT</target>
        </trans-unit>
        <trans-unit id="1b8d4eee010f24ac16595341e950461ca5a3d3c5" translate="yes" xml:space="preserve">
          <source>SUPPORT STATUS</source>
          <target state="translated">サポート状況</target>
        </trans-unit>
        <trans-unit id="71646130bf9009d21884a40db0eb3e646eeba733" translate="yes" xml:space="preserve">
          <source>SUPPORTED CODE SETS</source>
          <target state="translated">サポートされているコードセット</target>
        </trans-unit>
        <trans-unit id="20f08435befa244d15b9abb7ce29315ba6bffd6b" translate="yes" xml:space="preserve">
          <source>SUSv3 issue 6, IEEE Std 1003.1, 2004 edition, &lt;a href=&quot;http://www.opengroup.org/onlinepubs/000095399/basedefs/syslog.h.html&quot;&gt;http://www.opengroup.org/onlinepubs/000095399/basedefs/syslog.h.html&lt;/a&gt;</source>
          <target state="translated">SUSv3発行6、IEEE Std 1003.1、2004年版、&lt;a href=&quot;http://www.opengroup.org/onlinepubs/000095399/basedefs/syslog.h.html&quot;&gt;http：&lt;/a&gt; //www.opengroup.org/onlinepubs/000095399/basedefs/syslog.h.html</target>
        </trans-unit>
        <trans-unit id="7b5c5ccc00f6f2dea45c028134844e08294c70f1" translate="yes" xml:space="preserve">
          <source>SV Flags</source>
          <target state="translated">SVフラッグ</target>
        </trans-unit>
        <trans-unit id="41d145450f8d5d05c4883a59c3e33bb73bbc87e8" translate="yes" xml:space="preserve">
          <source>SV Manipulation Functions</source>
          <target state="translated">SV操作機能</target>
        </trans-unit>
        <trans-unit id="0cb2c0f60120ed03f422bd6a37739838c8afb9ce" translate="yes" xml:space="preserve">
          <source>SV, there are eight routines:</source>
          <target state="translated">SV、8つのルーチンがあります。</target>
        </trans-unit>
        <trans-unit id="3236c7e44f8f9dbf237dbf7ecffd22d6b088623b" translate="yes" xml:space="preserve">
          <source>SV-Body Allocation</source>
          <target state="translated">SVボディの割り当て</target>
        </trans-unit>
        <trans-unit id="846d9529fb9f3b7b94dbe63d0869250da5e8c08a" translate="yes" xml:space="preserve">
          <source>SV-RELATED CLASSES</source>
          <target state="translated">SV 関連クラス</target>
        </trans-unit>
        <trans-unit id="602ec148a2bdfca7c0a3c4ab4bf15e8c72bc3fca" translate="yes" xml:space="preserve">
          <source>SV-bodies are similar, but they use arena-sets by default, which separate the link and info from the arena itself, and reclaim the 1st slot in the arena. SV-bodies are further described later.</source>
          <target state="translated">SV-bodyも似たようなものですが、デフォルトではアリーナセットを使用しており、リンクや情報をアリーナ自体から分離し、アリーナの1番スロットを再生します。SV-bodyについては後述します。</target>
        </trans-unit>
        <trans-unit id="fcd62da02a3398df0ea64cfb6d4ceaebc2e3a756" translate="yes" xml:space="preserve">
          <source>SVN uses a simple integer for $Revision$ so you can adapt it for your $VERSION like so:</source>
          <target state="translated">SVN は $Revision$ に単純な整数を使用しているので、次のように $VERSION に合わせて適応させることができます。</target>
        </trans-unit>
        <trans-unit id="a2f35854bf09b97bdf55f2c138c6b37ff40b32bd" translate="yes" xml:space="preserve">
          <source>SVt_PVGV represents a typeglob. If !SvFAKE(sv), then it is a real, incoercible typeglob. If SvFAKE(sv), then it is a scalar to which a typeglob has been assigned. Assigning to it again will stop it from being a typeglob. SVt_PVLV represents a scalar that delegates to another scalar behind the scenes. It is used, e.g., for the return value of &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;&lt;/code&gt; and for tied hash and array elements. It can hold any scalar value, including a typeglob. SVt_REGEXP is for regular expressions. SVt_INVLIST is for Perl core internal use only.</source>
          <target state="translated">SVt_PVGVは型グロブを表します。！SvFAKE（sv）の場合、それは実際の非強制型グロブです。SvFAKE（sv）の場合、タイプグロブが割り当てられているスカラーです。再度割り当てると、タイプグロブでなくなります。SVt_PVLVは、舞台裏で別のスカラーに委任するスカラーを表します。これは、たとえば、 &lt;code&gt;&lt;a href=&quot;functions/substr&quot;&gt;substr&lt;/a&gt;&lt;/code&gt; の戻り値や、結合ハッシュおよび配列要素に使用されます。タイプグロブを含む任意のスカラー値を保持できます。SVt_REGEXPは正規表現用です。SVt_INVLISTはPerlコアの内部使用専用です。</target>
        </trans-unit>
        <trans-unit id="e1b54a9af41d4561f6c66399c7eb7425f92860f5" translate="yes" xml:space="preserve">
          <source>SVt_PVIO is for I/O objects, SVt_PVFM for formats, SVt_PVCV for subroutines, SVt_PVHV for hashes and SVt_PVAV for arrays.</source>
          <target state="translated">SVt_PVIO は I/O オブジェクト、SVt_PVFM はフォーマット、SVt_PVCV はサブルーチン、SVt_PVHV はハッシュ、SVt_PVAV は配列です。</target>
        </trans-unit>
        <trans-unit id="da6136a42687f177a60f91d4eb2271eae2d7a6fe" translate="yes" xml:space="preserve">
          <source>SVt_PVMG represents a &quot;normal&quot; scalar (not a typeglob, regular expression, or delegate). Since most scalars do not need all the internal fields of a PVMG, we save memory by allocating smaller structs when possible. All the other types are just simpler forms of SVt_PVMG, with fewer internal fields. SVt_NULL can only hold undef. SVt_IV can hold undef, an integer, or a reference. (SVt_RV is an alias for SVt_IV, which exists for backward compatibility.) SVt_NV can hold any of those or a double. SVt_PV can only hold undef or a string. SVt_PVIV is a superset of SVt_PV and SVt_IV. SVt_PVNV is similar. SVt_PVMG can hold anything SVt_PVNV can hold, but it can, but does not have to, be blessed or magical.</source>
          <target state="translated">SVt_PVMG は「通常の」スカラ(タイプグローブ、正規表現、デリゲートではない)を表します。ほとんどのスカラは PVMG のすべての内部フィールドを必要としないので、可能な限り小さな構造体を割り当てることでメモリを節約しています。他のすべての型は SVt_PVMG のよりシンプルな形で、内部フィールドが少ないだけです。SVt_NULL は undef のみを保持できます。SVt_IV は undef、整数、または参照を保持できます。(SVt_RV は SVt_IV のエイリアスであり、下位互換性のために存在します。)SVt_NV はこれらのいずれか、または double を保持することができます。SVt_PV は undef か文字列のみを保持できます。SVt_PVIV は SVt_PV と SVt_IV のスーパーセットです。SVt_PVNV も同様です。SVt_PVMG は SVt_PVNV が保持できるものなら何でも保持できますが、祝福されたものや魔法のものである必要はありません。</target>
        </trans-unit>
        <trans-unit id="a7a5d6a90a5b581314432609a1aaaae6f408bf9a" translate="yes" xml:space="preserve">
          <source>SYNOPSIS</source>
          <target state="translated">SYNOPSIS</target>
        </trans-unit>
        <trans-unit id="ba535e00f2cea4dffdea53b50104764a5aca819d" translate="yes" xml:space="preserve">
          <source>SYNOPSIS (HMAC-SHA)</source>
          <target state="translated">SYNOPSIS (HMAC-SHA)</target>
        </trans-unit>
        <trans-unit id="0a0dbd67fd1a8a9e460081aa85aa8c11647d6ba7" translate="yes" xml:space="preserve">
          <source>SYNOPSYS</source>
          <target state="translated">SYNOPSYS</target>
        </trans-unit>
        <trans-unit id="4365133368e505044b85d8816d51802800113e75" translate="yes" xml:space="preserve">
          <source>SYNTAX</source>
          <target state="translated">SYNTAX</target>
        </trans-unit>
        <trans-unit id="263688edc9561b0e7849790fe7b9019315fd50b7" translate="yes" xml:space="preserve">
          <source>SYS$SHARE</source>
          <target state="translated">SYS$SHARE</target>
        </trans-unit>
        <trans-unit id="25cf338ba4e9f22e025039bf3c275a868be00bfe" translate="yes" xml:space="preserve">
          <source>SYS$TIMEZONE_DIFFERENTIAL</source>
          <target state="translated">SYS$TIMEZONE_DIFFERENTIAL</target>
        </trans-unit>
        <trans-unit id="c35cdf82bdfbb49c501122d2828eee3ef5797946" translate="yes" xml:space="preserve">
          <source>SYSTEM CONFIGURATION</source>
          <target state="translated">SYSTEM CONFIGURATION</target>
        </trans-unit>
        <trans-unit id="f9198a48ddaa8ff0ec23ff200f540f506ae3ddb4" translate="yes" xml:space="preserve">
          <source>Sadly, &lt;code&gt;lynx&lt;/code&gt; doesn't support any options to return a different exit code on non-&lt;code&gt;200 OK&lt;/code&gt; status, giving us no way to tell the difference between a 'successful' fetch and a custom error page.</source>
          <target state="translated">悲しいことに、 &lt;code&gt;lynx&lt;/code&gt; は &lt;code&gt;200 OK&lt;/code&gt; 以外のステータスで異なる終了コードを返すオプションをサポートしていないため、「成功した」フェッチとカスタムエラーページの違いを区別する方法がありません。</target>
        </trans-unit>
        <trans-unit id="7254bc87b66c696df03eacde41a89426aec5ce13" translate="yes" xml:space="preserve">
          <source>Sadly, even though the calling interface for &lt;code&gt;setlocale()&lt;/code&gt; has been standardized, names of locales and the directories where the configuration resides have not been. The basic form of the name is</source>
          <target state="translated">悲しいことに、 &lt;code&gt;setlocale()&lt;/code&gt; の呼び出しインターフェースは標準化されていますが、ロケールの名前と構成が存在するディレクトリは統一されていません。名前の基本的な形は</target>
        </trans-unit>
        <trans-unit id="9525ae1781bb71fc767a9bab4b6f299ac5cc8c5d" translate="yes" xml:space="preserve">
          <source>Safe</source>
          <target state="translated">Safe</target>
        </trans-unit>
        <trans-unit id="c092b73f2d08889d224aaac1dfe39e9c3ec18a07" translate="yes" xml:space="preserve">
          <source>Safe - Compile and execute code in restricted compartments</source>
          <target state="translated">安全-制限されたコンパートメントでコードをコンパイルして実行します。</target>
        </trans-unit>
        <trans-unit id="81516db1154dd2dc31bd7cb4e79b8345e2747962" translate="yes" xml:space="preserve">
          <source>Safe Pipe Opens</source>
          <target state="translated">安全なパイプが開く</target>
        </trans-unit>
        <trans-unit id="8ae4c57642b69daa8411a88b64b74e8c1614ca44" translate="yes" xml:space="preserve">
          <source>Safe signals is the default behavior, and the old, immediate, unsafe signalling behavior is only in effect in the following situations:</source>
          <target state="translated">安全なシグナルはデフォルトの動作であり、古い即時の安全でないシグナリング動作は、以下の状況でのみ有効です。</target>
        </trans-unit>
        <trans-unit id="426fc0d823d8ce8d11a2788b68d9d04c1d7cac53" translate="yes" xml:space="preserve">
          <source>Safe signals must be in effect to use the &lt;code&gt;-&amp;gt;kill()&lt;/code&gt; signalling method. See &lt;a href=&quot;#Unsafe-signals&quot;&gt;Unsafe signals&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;code&gt;-&amp;gt;kill()&lt;/code&gt; シグナリングメソッドを使用するには、安全なシグナルが有効になっている必要があります。詳細については、&lt;a href=&quot;#Unsafe-signals&quot;&gt;安全でない信号&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="60ccef5a9b25d5a0bde44f8d971b0cef4aaf45b1" translate="yes" xml:space="preserve">
          <source>Safe ways to lock a database</source>
          <target state="translated">データベースをロックする安全な方法</target>
        </trans-unit>
        <trans-unit id="d3439f3ace2bccf44cb18d9ce2a33f4cb7456e7e" translate="yes" xml:space="preserve">
          <source>Safely Storing Static Data in XS</source>
          <target state="translated">XSにおける静的データの安全な保存</target>
        </trans-unit>
        <trans-unit id="3ab4d69c0a0b9d592cb5a7085cb5c887e9e3e59f" translate="yes" xml:space="preserve">
          <source>Safety net</source>
          <target state="translated">セーフティネット</target>
        </trans-unit>
        <trans-unit id="5e45447f5171516fe0acb7993b2e08eb58a883bf" translate="yes" xml:space="preserve">
          <source>Said of a &lt;b&gt;function&lt;/b&gt; that happily receives an indeterminate number of &lt;b&gt;actual arguments&lt;/b&gt;.</source>
          <target state="translated">言っ&lt;b&gt;機能&lt;/b&gt;喜んの不確定数受け取る&lt;b&gt;実引数を&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="a14b6b23e4ce9693d49b5f5cbe13c14753c55987" translate="yes" xml:space="preserve">
          <source>Said of a program that runs with the privileges of its &lt;b&gt;owner&lt;/b&gt; rather than (as is usually the case) the privileges of whoever is running it. Also describes the bit in the mode word (&lt;b&gt;permission bits&lt;/b&gt;) that controls the feature. This bit must be explicitly set by the owner to enable this feature, and the program must be carefully written not to give away more privileges than it ought to.</source>
          <target state="translated">（通常そうであるように）それを実行している人の特権ではなく、その&lt;b&gt;所有者&lt;/b&gt;の特権で実行されるプログラムのことです。また、機能を制御するモードワードの&lt;b&gt;ビット&lt;/b&gt;（&lt;b&gt;許可ビット&lt;/b&gt;）についても説明します。この機能を有効にするには、所有者がこのビットを明示的に設定する必要があります。また、プログラムは、必要以上の特権を与えないように注意深く作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="30d1861158149b44eddb9b4f4bf93da6c465ed88" translate="yes" xml:space="preserve">
          <source>Said of data derived from the grubby hands of a user, and thus unsafe for a secure program to rely on. Perl does taint checks if you run a &lt;b&gt;setuid&lt;/b&gt; (or &lt;b&gt;setgid&lt;/b&gt;) program, or if you use the &lt;code&gt;&amp;ndash;T&lt;/code&gt; switch.</source>
          <target state="translated">ユーザーの汚い手から得られたデータで、安全なプログラムが依存するのは危険です。Perlは、&lt;b&gt;setuid&lt;/b&gt;（または&lt;b&gt;setgid&lt;/b&gt;）プログラムを実行したかどうか、または &lt;code&gt;&amp;ndash;T&lt;/code&gt; スイッチを使用したかどうかを汚染チェックします。</target>
        </trans-unit>
        <trans-unit id="5e56fc30bcecbd35bd1cc38f0496ee99dc529906" translate="yes" xml:space="preserve">
          <source>Said of events or activities whose relative temporal ordering is indeterminate because too many things are going on at once. Hence, an asynchronous event is one you didn&amp;rsquo;t know when to expect.</source>
          <target state="translated">一度に行われていることが多すぎるために、相対的な時間的順序が不確定であるイベントまたはアクティビティについて述べています。したがって、非同期イベントは、いつ予期すべきかわからなかったイベントです。</target>
        </trans-unit>
        <trans-unit id="d54d1114ba4c663a3e4fa480f2bddaa86d60d57a" translate="yes" xml:space="preserve">
          <source>Said of quantifiers and groups in patterns that refuse to give up anything once they&amp;rsquo;ve gotten their mitts on it. Catchier and easier to say than the even more formal</source>
          <target state="translated">いったんミトンを手に入れたら、何かをあきらめることを拒否するパターンの数量詞とグループについて述べました。よりフォーマルなものよりもキャッチーで言いやすい</target>
        </trans-unit>
        <trans-unit id="f34b8818028305e4c77c915b3fa571ae8296f8df" translate="yes" xml:space="preserve">
          <source>Same as $ctx-&amp;gt;digest, but will return the digest as a base64 encoded string.</source>
          <target state="translated">$ ctx-&amp;gt; digestと同じですが、ダイジェストをbase64エンコードされた文字列として返します。</target>
        </trans-unit>
        <trans-unit id="f1896d17ac713c86bd5e735d6ed3009cef2fb611" translate="yes" xml:space="preserve">
          <source>Same as $ctx-&amp;gt;digest, but will return the digest in hexadecimal form.</source>
          <target state="translated">$ ctx-&amp;gt; digestと同じですが、ダイジェストを16進形式で返します。</target>
        </trans-unit>
        <trans-unit id="321e50212902338e1f8d07475551f6c1b21cf1cd" translate="yes" xml:space="preserve">
          <source>Same as $md5-&amp;gt;digest, but will return the digest as a base64 encoded string. The length of the returned string will be 22 and it will only contain characters from this set: 'A'..'Z', 'a'..'z', '0'..'9', '+' and '/'.</source>
          <target state="translated">$ md5-&amp;gt; digestと同じですが、base64エンコードされた文字列としてダイジェストを返します。返される文字列の長さは22で、このセットの文字のみが含まれます： 'A' .. 'Z'、 'a' .. 'z'、 '0' .. '9'、 '+'および「/」。</target>
        </trans-unit>
        <trans-unit id="cf30f8e6bb8aec6a7d65f80317c122a59e54ddbe" translate="yes" xml:space="preserve">
          <source>Same as $md5-&amp;gt;digest, but will return the digest in hexadecimal form. The length of the returned string will be 32 and it will only contain characters from this set: '0'..'9' and 'a'..'f'.</source>
          <target state="translated">$ md5-&amp;gt; digestと同じですが、ダイジェストを16進形式で返します。返される文字列の長さは32で、このセットの文字のみが含まれます： '0' .. '9'および 'a' .. 'f'。</target>
        </trans-unit>
        <trans-unit id="adc31e09a43f709f9a62052f6bf654a631be9c55" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#av_top_index&quot;&gt;av_top_index&lt;/a&gt;. Note that, unlike what the name implies, it returns the highest index in the array, so to get the size of the array you need to use &lt;code&gt;av_len(av) + 1&lt;/code&gt; . This is unlike &lt;a href=&quot;#sv_len&quot;&gt;sv_len&lt;/a&gt;, which returns what you would expect.</source>
          <target state="translated">&lt;a href=&quot;#av_top_index&quot;&gt;av_top_indexと&lt;/a&gt;同じです。名前が意味するものとは異なり、配列の最大のインデックスを返すため、配列のサイズを取得するには &lt;code&gt;av_len(av) + 1&lt;/code&gt; を使用する必要があることに注意してください。これは、期待どおりの結果を返す&lt;a href=&quot;#sv_len&quot;&gt;sv_len&lt;/a&gt;とは異なります。</target>
        </trans-unit>
        <trans-unit id="bd00e5b4a628549dfb2a56fc60eeae52a5492154" translate="yes" xml:space="preserve">
          <source>Same as &lt;b&gt;#targarg&lt;/b&gt;, but followed by the COP sequence numbers that delimit the variable's lifetime (or 'end' for a variable in an open scope) for a variable.</source>
          <target state="translated">&lt;b&gt;#targarg&lt;/b&gt;と同じ&lt;b&gt;です&lt;/b&gt;が、変数のライフタイム（またはオープンスコープ内の変数の「end」）を区切るCOPシーケンス番号が続きます。</target>
        </trans-unit>
        <trans-unit id="b333ea2d5eb991eb18e1fe085e7827d0861784dd" translate="yes" xml:space="preserve">
          <source>Same as &lt;b&gt;setuid&lt;/b&gt;, only having to do with giving away &lt;b&gt;group&lt;/b&gt; privileges.</source>
          <target state="translated">&lt;b&gt;setuid&lt;/b&gt;と同じですが、&lt;b&gt;グループ&lt;/b&gt;特権を与えることだけが必要です。</target>
        </trans-unit>
        <trans-unit id="dd2c1685765b164ff8c757696e79f8ef8a05da80" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;$dumper-&amp;gt;dumpValue([$value1, $value2]);&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;$dumper-&amp;gt;dumpValue([$value1, $value2]);&lt;/code&gt; 同じです。。</target>
        </trans-unit>
        <trans-unit id="4b66d989845a614c7ee96f117c157deaa3d7d272" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;-C 1&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;-C 1&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="17ff6b0adea1652a2ecbb3b63ae65d9ce56e642c" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; {$DB::OUT} expr&lt;/code&gt; in the current package. In particular, because this is just Perl's own &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; function, this means that nested data structures and objects are not dumped, unlike with the &lt;code&gt;x&lt;/code&gt; command.</source>
          <target state="translated">現在のパッケージの &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt; {$DB::OUT} expr&lt;/code&gt; と同じです。特に、これは単なるPerl独自の &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print&lt;/a&gt;&lt;/code&gt; 関数であるため、 &lt;code&gt;x&lt;/code&gt; コマンドとは異なり、ネストされたデータ構造とオブジェクトはダンプされません。</target>
        </trans-unit>
        <trans-unit id="5bded8b49632c2bc354dee454e68ddb3343b94b2" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;GLOB_NOCHECK&lt;/code&gt; but it only returns the pattern if it does not contain any of the special characters &quot;*&quot;, &quot;?&quot; or &quot;[&quot;. &lt;code&gt;NOMAGIC&lt;/code&gt; is provided to simplify implementing the historic csh(1) globbing behaviour and should probably not be used anywhere else.</source>
          <target state="translated">&lt;code&gt;GLOB_NOCHECK&lt;/code&gt; と同じですが、特殊文字「*」、「？」が含まれていない場合にのみパターンを返します。または「[」。 &lt;code&gt;NOMAGIC&lt;/code&gt; は、歴史的なcsh（1）グロビング動作の実装を簡素化するために提供されており、おそらく他の場所では使用しないでください。</target>
        </trans-unit>
        <trans-unit id="8fa53f872690857788d9b7f7b09c9f41522d38cb" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;S{0,1}&lt;/code&gt; , &lt;code&gt;S{0,BIG_NUMBER}&lt;/code&gt; , &lt;code&gt;S{1,BIG_NUMBER}&lt;/code&gt; respectively.</source>
          <target state="translated">同じ &lt;code&gt;S{0,1}&lt;/code&gt; 、 &lt;code&gt;S{0,BIG_NUMBER}&lt;/code&gt; 、 &lt;code&gt;S{1,BIG_NUMBER}&lt;/code&gt; それぞれ。</target>
        </trans-unit>
        <trans-unit id="d73739841976f1a7dcb32427273c9847bcee05cc" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;S{0,1}?&lt;/code&gt;, &lt;code&gt;S{0,BIG_NUMBER}?&lt;/code&gt;, &lt;code&gt;S{1,BIG_NUMBER}?&lt;/code&gt; respectively.</source>
          <target state="translated">&lt;code&gt;S{0,1}?&lt;/code&gt; 同じ？、 &lt;code&gt;S{0,BIG_NUMBER}?&lt;/code&gt; 、 &lt;code&gt;S{1,BIG_NUMBER}?&lt;/code&gt; それぞれ。</target>
        </trans-unit>
        <trans-unit id="b501d45522ee6fcbd27a8e6421a481de4730d35b" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;V currentpackage [vars]&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;V currentpackage [vars]&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="fc9732600b3f4ba496b226be29f8d7502bec183b" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;av_top_index()&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;av_top_index()&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="ed15951528f9a3b1693795d231b59c334e96fd72" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;av_top_index()&lt;/code&gt; . Deprecated, use &lt;code&gt;av_top_index()&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;av_top_index()&lt;/code&gt; と同じです。代わりに、 &lt;code&gt;av_top_index()&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="5fd79a44452154dcd5bee2f1f88ca1f0be978a80" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;can_read&lt;/code&gt; except check for handles that can be written to.</source>
          <target state="translated">&lt;code&gt;can_read&lt;/code&gt; 可能なハンドルをチェックすることを除いて、can_readと同じです。</target>
        </trans-unit>
        <trans-unit id="86717aa28434827c3cce31e46810aad20494d04b" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;can_read&lt;/code&gt; except check for handles that have an exception condition, for example pending out-of-band data.</source>
          <target state="translated">&lt;code&gt;can_read&lt;/code&gt; と同じですが、保留状態の帯域外データなど、例外条件を持つハンドルをチェックします。</target>
        </trans-unit>
        <trans-unit id="cf9b7e48710259527983c11a42b3d64277049fd5" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;nlst&lt;/code&gt; but using the &lt;code&gt;LIST&lt;/code&gt; command</source>
          <target state="translated">&lt;code&gt;nlst&lt;/code&gt; と同じですが、 &lt;code&gt;LIST&lt;/code&gt; コマンドを使用します</target>
        </trans-unit>
        <trans-unit id="07e6b1de2aca7aeabbbb74cb40cd6fb12115b1a3" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;stor&lt;/code&gt; but using the &lt;code&gt;STOU&lt;/code&gt; command. The name of the unique file which was created on the server will be available via the &lt;code&gt;unique_name&lt;/code&gt; method after the data connection has been closed.</source>
          <target state="translated">&lt;code&gt;stor&lt;/code&gt; と同じですが、 &lt;code&gt;STOU&lt;/code&gt; コマンドを使用します。サーバー上に作成された一意のファイルの名前は、データ接続が閉じられた後、 &lt;code&gt;unique_name&lt;/code&gt; メソッドを介して利用できます。</target>
        </trans-unit>
        <trans-unit id="050cdf215abb00fa4b1a92a37d95bcdab6cdf803" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;sv_insert&lt;/code&gt; , but the extra &lt;code&gt;flags&lt;/code&gt; are passed to the &lt;code&gt;SvPV_force_flags&lt;/code&gt; that applies to &lt;code&gt;bigstr&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;sv_insert&lt;/code&gt; と同じですが、追加の &lt;code&gt;flags&lt;/code&gt; が &lt;code&gt;SvPV_force_flags&lt;/code&gt; に適用される &lt;code&gt;bigstr&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="4948ae2952aeaa54a9b08b1d52d0aebd89300fe8" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;|dbcmd&lt;/code&gt; but DB::OUT is temporarily &lt;code&gt;&lt;a href=&quot;functions/select&quot;&gt;select&lt;/a&gt;&lt;/code&gt;ed as well.</source>
          <target state="translated">&lt;code&gt;|dbcmd&lt;/code&gt; 同じですが、DB :: OUTも一時的に &lt;code&gt;&lt;a href=&quot;functions/select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; れます。</target>
        </trans-unit>
        <trans-unit id="17cd3b097f00891c15503e0ba808355b9776ae01" translate="yes" xml:space="preserve">
          <source>Same as B::RV::RV, except that it will die() if the PV isn't a reference.</source>
          <target state="translated">B::RV::RV と同じですが、PV が参照でない場合は die()します。</target>
        </trans-unit>
        <trans-unit id="12731699524953733ca1ae6acee18e5d893ae3c5" translate="yes" xml:space="preserve">
          <source>Same as INST_LIB for architecture dependent files.</source>
          <target state="translated">アーキテクチャ依存のファイルについては INST_LIB と同じです。</target>
        </trans-unit>
        <trans-unit id="768d60df579e4e0017be429538ddb9929b0ad58b" translate="yes" xml:space="preserve">
          <source>Same as Setswana.</source>
          <target state="translated">セツワナと同じ。</target>
        </trans-unit>
        <trans-unit id="0c4eef73f645ae4e5c46bde75fc207d5bc51e18d" translate="yes" xml:space="preserve">
          <source>Same as SvREFCNT_dec, but can only be used if you know</source>
          <target state="translated">SvREFCNT_decと同じですが、以下のことがわかっている場合にのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="fef013ae4d66be03935dc3bf20b53909c95a6d83" translate="yes" xml:space="preserve">
          <source>Same as SvREFCNT_inc, but can only be used if you don't need the return value, and you know that</source>
          <target state="translated">SvREFCNT_inc と同じですが、戻り値を必要としない場合にのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="426f8f6410e7d89c64463478b80b9be327e690b5" translate="yes" xml:space="preserve">
          <source>Same as SvREFCNT_inc, but can only be used if you don't need the return value. The macro doesn't need to return a meaningful value.</source>
          <target state="translated">SvREFCNT_inc と同じですが、戻り値を必要としない場合にのみ使用できます。マクロは意味のある値を返す必要はありません。</target>
        </trans-unit>
        <trans-unit id="a620762017f73057c46b448ecd94ff355974e200" translate="yes" xml:space="preserve">
          <source>Same as SvREFCNT_inc, but can only be used if you know</source>
          <target state="translated">SvREFCNT_inc と同じですが、使用できるのは</target>
        </trans-unit>
        <trans-unit id="fee188b770ede281dc6a3c41613f42a22ba1ccc7" translate="yes" xml:space="preserve">
          <source>Same as SvREFCNT_inc, but can only be used with expressions without side effects. Since we don't have to store a temporary value, it's faster.</source>
          <target state="translated">SvREFCNT_incと同じですが、副作用のない式でしか使えません。一時的な値を格納する必要がないので、より高速です。</target>
        </trans-unit>
        <trans-unit id="2595b6980871a8b0471d922ed4278fe547a4ef91" translate="yes" xml:space="preserve">
          <source>Same as SvREFCNT_inc_simple, but can only be used if you don't need the return value. The macro doesn't need to return a meaningful value.</source>
          <target state="translated">SvREFCNT_inc_simple と同じですが、戻り値を必要としない場合にのみ使用できます。マクロは意味のある値を返す必要はありません。</target>
        </trans-unit>
        <trans-unit id="5e0ebce8c721dcc08adc0d78215a69aae80cdf74" translate="yes" xml:space="preserve">
          <source>Same as SvREFCNT_inc_simple, but can only be used if you know</source>
          <target state="translated">SvREFCNT_inc_simple と同じですが、以下を知っている場合にのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="e8b04bf629db3203ee704935da9b218f8fca2c72" translate="yes" xml:space="preserve">
          <source>Same as T_INOUT, but the filehandle that is returned from C to Perl can only be used for reading (mode &lt;code&gt;&amp;lt;&lt;/code&gt; ).</source>
          <target state="translated">T_INOUTと同じですが、CからPerlに返されるファイルハンドルは読み取り（モード &lt;code&gt;&amp;lt;&lt;/code&gt; ）にのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="a42b3ecf40946781fcdeda5f632a6ee1faa496c6" translate="yes" xml:space="preserve">
          <source>Same as T_INOUT, but the filehandle that is returned from C to Perl is set to use the open mode &lt;code&gt;+&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">T_INOUTと同じですが、CからPerlに返されるファイルハンドルは、オープンモード &lt;code&gt;+&amp;gt;&lt;/code&gt; を使用するように設定されています。</target>
        </trans-unit>
        <trans-unit id="e2f46714a4ca062dc49faadfa76cc1f276656ec9" translate="yes" xml:space="preserve">
          <source>Same as digest_file(), but return the digest as a base64 encoded string.</source>
          <target state="translated">digest_file()と同じですが、ダイジェストを base64 エンコードされた文字列として返します。</target>
        </trans-unit>
        <trans-unit id="b8221d65ea0f84a8082261e35b336ff6ae782ce3" translate="yes" xml:space="preserve">
          <source>Same as digest_file(), but return the digest in hex form.</source>
          <target state="translated">digest_file()と同じですが、ダイジェストを 16 進数で返します。</target>
        </trans-unit>
        <trans-unit id="34cacc2ec86aa6ca9b2faa2d99bfd159b89a57fd" translate="yes" xml:space="preserve">
          <source>Same as for PERL_LIB, but for architecture dependent files.</source>
          <target state="translated">PERL_LIBと同じですが、アーキテクチャに依存するファイルの場合。</target>
        </trans-unit>
        <trans-unit id="00de2894d4cedb1815bb8821b2b4d0231c867bf6" translate="yes" xml:space="preserve">
          <source>Same as gv_fetchmeth_pvn(), but looks for autoloaded subroutines too. Returns a glob for the subroutine.</source>
          <target state="translated">gv_fetchmeth_pvn()と同じですが、オートロードされたサブルーチンも探します。サブルーチンのグロブを返します。</target>
        </trans-unit>
        <trans-unit id="ede508d134d237d64d45e3e62801dcc9fa897bc3" translate="yes" xml:space="preserve">
          <source>Same as gv_init_pvn(), but takes a nul-terminated string for the name instead of separate char * and length parameters.</source>
          <target state="translated">gv_init_pvn()と同じですが、 char*と length パラメータを別々にするのではなく、名前にヌル文字で終わる文字列を使用します。</target>
        </trans-unit>
        <trans-unit id="381c253197f4086597faaea267515867c533575c" translate="yes" xml:space="preserve">
          <source>Same as gv_init_pvn(), but takes an SV * for the name instead of separate char * and length parameters. &lt;code&gt;flags&lt;/code&gt; is currently unused.</source>
          <target state="translated">gv_init_pvn（）と同じですが、個別のchar *パラメータとlengthパラメータではなく、名前にSV *を使用します。 &lt;code&gt;flags&lt;/code&gt; は現在使用されていません。</target>
        </trans-unit>
        <trans-unit id="5aeb2ed424e87338cd58b8bbceb6777011cc76bf" translate="yes" xml:space="preserve">
          <source>Same as macro for the depend attribute.</source>
          <target state="translated">depend属性のマクロと同じです。</target>
        </trans-unit>
        <trans-unit id="a2753a525f040c2e927f132ecc56578c6fe59a69" translate="yes" xml:space="preserve">
          <source>Same as md5(), but will return the digest as a base64 encoded string. The length of the returned string will be 22 and it will only contain characters from this set: 'A'..'Z', 'a'..'z', '0'..'9', '+' and '/'.</source>
          <target state="translated">md5()と同じですが、ダイジェストを base64 エンコードされた文字列として返します。返される文字列の長さは 22 で、このセットの文字のみを含みます。A'...Z','a'...z','0'...9','+' および '/' です。</target>
        </trans-unit>
        <trans-unit id="ffef2f77f0642531d955ceb8e1d9f30caf01a8de" translate="yes" xml:space="preserve">
          <source>Same as md5(), but will return the digest in hexadecimal form. The length of the returned string will be 32 and it will only contain characters from this set: '0'..'9' and 'a'..'f'.</source>
          <target state="translated">md5()と同じですが、ダイジェストを 16 進数で返します。返される文字列の長さは32で、このセットの文字のみが含まれます。'0'...9' および 'a'...f' です。</target>
        </trans-unit>
        <trans-unit id="f9e83cb51ae17520eb72ee7373b3bb693bd3e680" translate="yes" xml:space="preserve">
          <source>Same as previously, except that a suffix is added to the template after the `X' translation. Useful for ensuring that a temporary filename has a particular extension when needed by other applications. But see the WARNING at the end.</source>
          <target state="translated">X' 変換の後にサフィックスがテンプレートに追加されることを除けば、前と同じである。他のアプリケーションで必要とされるときに一時的なファイル名が特定の拡張子を持っていることを確実にするのに便利です。ただし、最後の警告を参照してください。</target>
        </trans-unit>
        <trans-unit id="cffdae28cf613c2b709759b1b9e3abe7266b1ef0" translate="yes" xml:space="preserve">
          <source>Same as put but appends to the file on the remote server.</source>
          <target state="translated">put と同じですが、リモートサーバ上のファイルに追加します。</target>
        </trans-unit>
        <trans-unit id="701195d933e2174a2321ba9b4568da7c8fec78cc" translate="yes" xml:space="preserve">
          <source>Same as put but uses the &lt;code&gt;STOU&lt;/code&gt; command.</source>
          <target state="translated">putと同じですが、 &lt;code&gt;STOU&lt;/code&gt; コマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="86da614b9aa4e21631bf016f7e54338d618a642b" translate="yes" xml:space="preserve">
          <source>Same as the PERL_CORE parameter. The parameter overrides this.</source>
          <target state="translated">PERL_COREパラメータと同じです。このパラメータはこれを上書きします。</target>
        </trans-unit>
        <trans-unit id="e9b188f1869bbf1477040a87a90bf4df89cd9059" translate="yes" xml:space="preserve">
          <source>Same remark as above applies. Additionally, if this directory is not one of directories on @INC (and @INC is influenced by &lt;code&gt;PERLLIB_PREFIX&lt;/code&gt; ), you need to put this directory and subdirectory</source>
          <target state="translated">上記と同じ注意が適用されます。さらに、このディレクトリが@INCのディレクトリの1つではない場合（および@INCはPERLLIB_PREFIXの影響を &lt;code&gt;PERLLIB_PREFIX&lt;/code&gt; ）、このディレクトリとサブディレクトリを配置する必要があります。</target>
        </trans-unit>
        <trans-unit id="e597ac886abacfd0992bb21191156be2f19d9a09" translate="yes" xml:space="preserve">
          <source>Same remark as for</source>
          <target state="translated">と同じ発言</target>
        </trans-unit>
        <trans-unit id="fe6a6f88454c592600be80925db301a7cbcc92b0" translate="yes" xml:space="preserve">
          <source>Same terms as Perl.</source>
          <target state="translated">Perlと同じ用語です。</target>
        </trans-unit>
        <trans-unit id="2ac79dcdaa1e2309a1fab775d426f56238e5ad3c" translate="yes" xml:space="preserve">
          <source>Same thing, but this time using the macro corresponding to &lt;code&gt;LOCAL0&lt;/code&gt; :</source>
          <target state="translated">同じことですが、今回は &lt;code&gt;LOCAL0&lt;/code&gt; に対応するマクロを使用します。</target>
        </trans-unit>
        <trans-unit id="11e08dfb51a6c565ef7f28f608d749bcea3e1912" translate="yes" xml:space="preserve">
          <source>Same thing, if you are really sure it is UTF-8</source>
          <target state="translated">同じこと、本当にUTF-8であると確信しているならば</target>
        </trans-unit>
        <trans-unit id="40cfdb43915ff314d9bb8743e68eca6619969325" translate="yes" xml:space="preserve">
          <source>Same, but in a specific locale.</source>
          <target state="translated">同じだが、特定の場所で</target>
        </trans-unit>
        <trans-unit id="4905f1529c823d05e3e370cdc7c6defe47ff89ce" translate="yes" xml:space="preserve">
          <source>Sample Plugin</source>
          <target state="translated">サンプルプラグイン</target>
        </trans-unit>
        <trans-unit id="b161c83401520548013d7cc9cbbdfa41e7b4cfb2" translate="yes" xml:space="preserve">
          <source>Sample code in the</source>
          <target state="translated">のサンプルコード</target>
        </trans-unit>
        <trans-unit id="35d8ede57f6e8012d47776f1169df3e4ba33d0d4" translate="yes" xml:space="preserve">
          <source>Save a label into a &lt;code&gt;cop_hints_hash&lt;/code&gt; . You need to set flags to &lt;code&gt;SVf_UTF8&lt;/code&gt; for a utf-8 label.</source>
          <target state="translated">ラベルを &lt;code&gt;cop_hints_hash&lt;/code&gt; に保存します。utf-8ラベルのフラグを &lt;code&gt;SVf_UTF8&lt;/code&gt; に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="0359c0571d78475449c07e73a9debddd961179d8" translate="yes" xml:space="preserve">
          <source>Save a pad slot (used to restore after an iteration)</source>
          <target state="translated">パッドスロットの保存(反復後のリストアに使用</target>
        </trans-unit>
        <trans-unit id="b316567714310524f1206ebce538bba96fa589b1" translate="yes" xml:space="preserve">
          <source>Save and restore selected file handle</source>
          <target state="translated">選択したファイルハンドルの保存と復元</target>
        </trans-unit>
        <trans-unit id="d076e982abbbcf014b673c9e65a8d95251455ac0" translate="yes" xml:space="preserve">
          <source>Save source code lines into &lt;code&gt;@{&quot;_&amp;lt;$filename&quot;}&lt;/code&gt; .</source>
          <target state="translated">ソースコード行を &lt;code&gt;@{&quot;_&amp;lt;$filename&quot;}&lt;/code&gt; 保存します。</target>
        </trans-unit>
        <trans-unit id="8943ff1bfba89ddb28ec1c80c1950a342495e0f1" translate="yes" xml:space="preserve">
          <source>Save stack</source>
          <target state="translated">スタックの保存</target>
        </trans-unit>
        <trans-unit id="919cd7a10b9f8c408a41299ba67656e3aed96881" translate="yes" xml:space="preserve">
          <source>Save the current pad in the given context block structure.</source>
          <target state="translated">与えられたコンテキストブロック構造体に現在のパッドを保存します。</target>
        </trans-unit>
        <trans-unit id="9dfd9cc2125ff0c4b78c83937c1d7a8f97ebf8d1" translate="yes" xml:space="preserve">
          <source>Save the current pad then set it to null.</source>
          <target state="translated">現在のパッドを保存してから、それをヌルに設定します。</target>
        </trans-unit>
        <trans-unit id="2e3eac961a008d0de718654d13d767b1f0a60d2f" translate="yes" xml:space="preserve">
          <source>Save the current pad to the local variable opad, then make the current pad equal to npad</source>
          <target state="translated">現在のパッドをローカル変数 opad に保存し、現在のパッドを npad と等しくします。</target>
        </trans-unit>
        <trans-unit id="6069707b65587cd0c4611efa1bc57e483008913e" translate="yes" xml:space="preserve">
          <source>Save the state on exit.</source>
          <target state="translated">終了時に状態を保存します。</target>
        </trans-unit>
        <trans-unit id="be2f62debbdb3162148e615df694537e06e4dd97" translate="yes" xml:space="preserve">
          <source>Save the state on exit. The state is stored in a file called</source>
          <target state="translated">終了時にステートを保存します。状態は</target>
        </trans-unit>
        <trans-unit id="469a06af599c9bb8a4ea455a09ece66c7f10bfdd" translate="yes" xml:space="preserve">
          <source>Save the test results. Should be called after all tests have run.</source>
          <target state="translated">テスト結果を保存します。すべてのテストが実行された後に呼び出されるべきです。</target>
        </trans-unit>
        <trans-unit id="8a898e2f0f9dbc1708c8c365ee9ed73e85942904" translate="yes" xml:space="preserve">
          <source>Saves all config variables to the current config file (CPAN/Config.pm or CPAN/MyConfig.pm that was loaded at start).</source>
          <target state="translated">すべてのコンフィグ変数を現在のコンフィグファイル(CPAN/Config.pmまたは起動時に読み込まれたCPAN/MyConfig.pm)に保存します。</target>
        </trans-unit>
        <trans-unit id="6f36c48737f3987b460b62ee4ed57c9e8844ae2b" translate="yes" xml:space="preserve">
          <source>Saves or restores the internal state. When called with no arguments, returns a 3-element list: number of blocks processed, a 16-byte internal state buffer, then up to 63 bytes of unprocessed data. When passed those same arguments, restores the state. This is only useful for specialised operations.</source>
          <target state="translated">内部状態を保存または復元します。引数なしで呼ばれた場合、3つの要素のリストを返します。処理されたブロック数、16バイトの内部状態バッファ、そして最大63バイトの未処理データです。同じ引数を渡すと、状態を復元します。これは特殊な処理を行う場合にのみ有用です。</target>
        </trans-unit>
        <trans-unit id="66487db7153fb72329118b454dd0d2ddccc1050a" translate="yes" xml:space="preserve">
          <source>Saves the original stack mark for the XSUB. See &lt;code&gt;ORIGMARK&lt;/code&gt; .</source>
          <target state="translated">XSUBの元のスタックマークを保存します。 &lt;code&gt;ORIGMARK&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="9ffbbb1a8f837ab41cce503e56c95dc0e7394a98" translate="yes" xml:space="preserve">
          <source>Say for example you want to interface to a library which allows asynchronous file i/o. In this case you may be able to register a callback whenever a read operation has completed. To be of any use we want to be able to call separate Perl subroutines for each file that is opened. As it stands, the error handler example above would not be adequate as it allows only a single callback to be defined at any time. What we require is a means of storing the mapping between the opened file and the Perl subroutine we want to be called for that file.</source>
          <target state="translated">例えば、非同期のファイル入出力を可能にするライブラリにインターフェースを提供したいとします。この場合、読み込み操作が完了するたびにコールバックを登録することができるかもしれません。このような場合、ファイルを開くたびに別々の Perl サブルーチンを呼び出すことができるようにする必要があります。このままでは、上記のエラーハンドラの例では、いつでも1つのコールバックしか定義できないので、適切ではありません。私たちが必要とするのは、オープンされたファイルと、そのファイルに対して呼び出されたいPerlサブルーチンとの間のマッピングを保存する手段です。</target>
        </trans-unit>
        <trans-unit id="baa19f1b44eb2b392a69c65427e59d2abdd91bc8" translate="yes" xml:space="preserve">
          <source>Say the Perl subroutine in the previous section was called in a scalar context, like this</source>
          <target state="translated">先ほどのPerlのサブルーチンがスカラコンテキストで呼び出されたとします。</target>
        </trans-unit>
        <trans-unit id="e0565efe29b7ae5b91f77178993c686f84ba177b" translate="yes" xml:space="preserve">
          <source>Say the i/o library has a function &lt;code&gt;asynch_read&lt;/code&gt; which associates a C function &lt;code&gt;ProcessRead&lt;/code&gt; with a file handle &lt;code&gt;fh&lt;/code&gt; --this assumes that it has also provided some routine to open the file and so obtain the file handle.</source>
          <target state="translated">ライブラリOのI /機能があると言う &lt;code&gt;asynch_read&lt;/code&gt; C関数関連付け &lt;code&gt;ProcessRead&lt;/code&gt; をファイルハンドルと &lt;code&gt;fh&lt;/code&gt; -このことは、それはまた、ファイルを開いて、そのファイルハンドルを取得するために、いくつかのルーチンを提供していることを前提としています。</target>
        </trans-unit>
        <trans-unit id="a215b51b4ba88f6072caaad7e52e02dce8c50f4d" translate="yes" xml:space="preserve">
          <source>Say you have a zip file, &lt;code&gt;file1.zip&lt;/code&gt; , that only contains a single member, you can read it and write the uncompressed data to the file &lt;code&gt;file1.txt&lt;/code&gt; like this.</source>
          <target state="translated">メンバーが1つだけのzipファイル &lt;code&gt;file1.zip&lt;/code&gt; があるとします。このファイルを &lt;code&gt;file1.txt&lt;/code&gt; て、非圧縮データをファイルfile1.txtに書き込むことができます。</target>
        </trans-unit>
        <trans-unit id="eda1fb6298984843c947e829a5ac8ec6f967d016" translate="yes" xml:space="preserve">
          <source>Say you need to interoperate with a legacy C application that stores keys as C ints and the values and null terminated UTF-8 strings. Here is how you would set that up</source>
          <target state="translated">レガシーCアプリケーションとの相互運用が必要だとしましょう。以下のように設定します。</target>
        </trans-unit>
        <trans-unit id="ec67546682546ac7030cc97a1719c04309ba84e6" translate="yes" xml:space="preserve">
          <source>Say you want to pass your Perl source through the C preprocessor before execution. As it happens, the source filters distribution comes with a C preprocessor filter module called Filter::cpp.</source>
          <target state="translated">Perl のソースを実行前に C プリプロセッサに通したいとします。たまたまですが、ソースフィルタのディストリビューションには Filter::cpp という C プリプロセッサのフィルタモジュールが付属しています。</target>
        </trans-unit>
        <trans-unit id="1a26d9bc1ddfa461c88c744318b63af9d71c8a3a" translate="yes" xml:space="preserve">
          <source>Say you wanted to include a lot of debugging code in your Perl script during development, but you didn't want it available in the released product. Source filters offer a solution. In order to keep the example simple, let's say you wanted the debugging output to be controlled by an environment variable, &lt;code&gt;DEBUG&lt;/code&gt; . Debugging code is enabled if the variable exists, otherwise it is disabled.</source>
          <target state="translated">たとえば、開発中にPerlスクリプトに多くのデバッグコードを含めたいが、リリースされた製品で利用できないようにしたいとします。ソースフィルターはソリューションを提供します。例を簡単にするために、デバッグ出力を環境変数 &lt;code&gt;DEBUG&lt;/code&gt; で制御したいとします。変数が存在する場合、デバッグコードは有効になり、存在しない場合は無効になります。</target>
        </trans-unit>
        <trans-unit id="b5eb3a639d927b2cd0c565a8f3c729b51f32b624" translate="yes" xml:space="preserve">
          <source>Saying &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; Math::Complex;&lt;/code&gt; exports many mathematical routines in the caller environment and even overrides some (&lt;code&gt;&lt;a href=&quot;../functions/sqrt&quot;&gt;sqrt&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../functions/log&quot;&gt;log&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../functions/atan2&quot;&gt;atan2&lt;/a&gt;&lt;/code&gt;). This is construed as a feature by the Authors, actually... ;-)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; Math::Complex;&lt;/code&gt; &lt;a href=&quot;../functions/use&quot;&gt;使用する&lt;/a&gt;と言います。呼び出し元の環境で多くの数学ルーチンをエクスポートし、一部をオーバーライドします（ &lt;code&gt;&lt;a href=&quot;../functions/sqrt&quot;&gt;sqrt&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;../functions/log&quot;&gt;log&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;../functions/atan2&quot;&gt;atan2&lt;/a&gt;&lt;/code&gt; ）。これは作者による機能と解釈され、実際には... ;-)</target>
        </trans-unit>
        <trans-unit id="155b29a848ba5b16897da887f3debf4d01094d0c" translate="yes" xml:space="preserve">
          <source>Saying &lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; Math::Trig;&lt;/code&gt; exports many mathematical routines in the caller environment and even overrides some (&lt;code&gt;&lt;a href=&quot;../functions/sin&quot;&gt;sin&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../functions/cos&quot;&gt;cos&lt;/a&gt;&lt;/code&gt;). This is construed as a feature by the Authors, actually... ;-)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/use&quot;&gt;use&lt;/a&gt; Math::Trig;&lt;/code&gt; &lt;a href=&quot;../functions/use&quot;&gt;使用する&lt;/a&gt;と言います。呼び出し元の環境で多くの数学ルーチンをエクスポートし、一部を上書きします（ &lt;code&gt;&lt;a href=&quot;../functions/sin&quot;&gt;sin&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;../functions/cos&quot;&gt;cos&lt;/a&gt;&lt;/code&gt; ）。これは作者による機能と解釈され、実際には... ;-)</target>
        </trans-unit>
        <trans-unit id="57194b243a92a7e8e15ddea54dbe790768bcd41b" translate="yes" xml:space="preserve">
          <source>Scalar context, independent iterator context fixes (GSAR 15-SEP-97)</source>
          <target state="translated">スカラーコンテキスト、独立イテレータコンテキストの修正 (GSAR 15-SEP-97)</target>
        </trans-unit>
        <trans-unit id="034c18b70c248b69dc13cd87a11cf2b429364e5c" translate="yes" xml:space="preserve">
          <source>Scalar or list context propagates downward into the 2nd or 3rd argument, whichever is selected.</source>
          <target state="translated">スカラーまたはリストのコンテキストは、第2引数または第3引数のいずれかが選択された方に下方に伝搬されます。</target>
        </trans-unit>
        <trans-unit id="45f7bfd92fa471419ef42bd6d0c9eafee00c1e2d" translate="yes" xml:space="preserve">
          <source>Scalar true/false (or less/equal/greater) result is never tainted.</source>
          <target state="translated">スカラー真/偽(または、より少ない/等しい/より大きい)の結果は決して汚染されません。</target>
        </trans-unit>
        <trans-unit id="566d600f0de91b778dff9482940e6debc2bef1a5" translate="yes" xml:space="preserve">
          <source>Scalar true/false result never tainted.</source>
          <target state="translated">スカラー真/偽の結果は決して汚染されていません。</target>
        </trans-unit>
        <trans-unit id="981f79763f9c9f7ec32732d722b06d4a72b03531" translate="yes" xml:space="preserve">
          <source>Scalar value constructors</source>
          <target state="translated">スカラー値のコンストラクタ</target>
        </trans-unit>
        <trans-unit id="d2aaf6d5a76dde30ec6ce5eeb523012d7281b427" translate="yes" xml:space="preserve">
          <source>Scalar values</source>
          <target state="translated">スカラー値</target>
        </trans-unit>
        <trans-unit id="c929255e3d198943a72a41224719746cb0fbe821" translate="yes" xml:space="preserve">
          <source>Scalar values are a bit different, since:</source>
          <target state="translated">スカラー値はちょっと違うからね。</target>
        </trans-unit>
        <trans-unit id="46ab62d3cf82170d59effe5077d3216d782d76ec" translate="yes" xml:space="preserve">
          <source>Scalar values are always named with '$', even when referring to a scalar that is part of an array or a hash. The '$' symbol works semantically like the English word &quot;the&quot; in that it indicates a single value is expected.</source>
          <target state="translated">スカラ値は、配列やハッシュの一部であるスカラを参照する場合でも、常に '$' で命名されます。この '$' 記号は、意味的には英語の &quot;the&quot; のように動作し、単一の値が期待されることを示します。</target>
        </trans-unit>
        <trans-unit id="8c149d9f35dc486d4c4d21248b0b6791d6afa112" translate="yes" xml:space="preserve">
          <source>Scalar values can be strings, integers or floating point numbers, and Perl will automatically convert between them as required. There is no need to pre-declare your variable types, but you have to declare them using the &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; keyword the first time you use them. (This is one of the requirements of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict;&lt;/code&gt; .)</source>
          <target state="translated">スカラー値は文字列、整数、または浮動小数点数にすることができ、Perlは必要に応じてそれらの間で自動的に変換します。変数の型を事前に宣言する必要はありませんが、初めて使用するときには &lt;code&gt;&lt;a href=&quot;functions/my&quot;&gt;my&lt;/a&gt;&lt;/code&gt; キーワードを使用して宣言する必要があります。（これは &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; strict;&lt;/code&gt; &lt;a href=&quot;functions/use&quot;&gt;使用&lt;/a&gt;の要件の1つです。）</target>
        </trans-unit>
        <trans-unit id="586b63769083cde82554c2e7d8cb7b2cb7593ae5" translate="yes" xml:space="preserve">
          <source>Scalar values can be used in various ways:</source>
          <target state="translated">スカラー値は様々な方法で使用することができます。</target>
        </trans-unit>
        <trans-unit id="9b46a906ec84de23014636bd09feffd935370288" translate="yes" xml:space="preserve">
          <source>Scalar variables normally contain only one type of value, an integer, double, pointer, or reference. Perl will automatically convert the actual scalar data from the stored type into the requested type.</source>
          <target state="translated">スカラー変数は通常、整数、double、ポインタ、参照のいずれか1つの型の値のみを含みます。Perl は、保存されている型から要求された型に実際のスカラーデータを自動的に変換します。</target>
        </trans-unit>
        <trans-unit id="4757d832b960c0fac31f8d9d7a4ffc1b693ecf00" translate="yes" xml:space="preserve">
          <source>Scalar::Util</source>
          <target state="translated">Scalar::Util</target>
        </trans-unit>
        <trans-unit id="ea60bce9f15316fe98c9f903cd4f86402a71e67b" translate="yes" xml:space="preserve">
          <source>Scalar::Util - A selection of general-utility scalar subroutines</source>
          <target state="translated">Scalar::Util-汎用的なスカラーサブルーチンのセレクション</target>
        </trans-unit>
        <trans-unit id="1a772b28b4bca42287e990293bcc006277412dc6" translate="yes" xml:space="preserve">
          <source>Scalars are already passed by reference, so you can modify scalar arguments without using this mechanism by referring explicitly to &lt;code&gt;$_[0]&lt;/code&gt; etc. You can modify all the elements of an array by passing all the elements as scalars, but you have to use the &lt;code&gt;*&lt;/code&gt; mechanism (or the equivalent reference mechanism) to &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt;, or change the size of an array. It will certainly be faster to pass the typeglob (or reference).</source>
          <target state="translated">スカラーは既に参照によって渡されているため、 &lt;code&gt;$_[0]&lt;/code&gt; などを明示的に参照することにより、このメカニズムを使用せずにスカラー引数を変更できます。すべての要素をスカラーとして渡すことにより、配列のすべての要素を変更できますが、配列のサイズを &lt;code&gt;&lt;a href=&quot;functions/push&quot;&gt;push&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;functions/pop&quot;&gt;pop&lt;/a&gt;&lt;/code&gt; 、または変更する &lt;code&gt;*&lt;/code&gt; メカニズム（または同等の参照メカニズム）。typeglob（または参照）を渡す方が確かに高速です。</target>
        </trans-unit>
        <trans-unit id="f45e57cd25bc46859bbe54787b208157d09c7fc5" translate="yes" xml:space="preserve">
          <source>Scalars aren't necessarily one thing or another. There's no place to declare a scalar variable to be of type &quot;string&quot;, type &quot;number&quot;, type &quot;reference&quot;, or anything else. Because of the automatic conversion of scalars, operations that return scalars don't need to care (and in fact, cannot care) whether their caller is looking for a string, a number, or a reference. Perl is a contextually polymorphic language whose scalars can be strings, numbers, or references (which includes objects). Although strings and numbers are considered pretty much the same thing for nearly all purposes, references are strongly-typed, uncastable pointers with builtin reference-counting and destructor invocation.</source>
          <target state="translated">スカラは必ずしも一つのものではありません。スカラ変数の型を「string」、「number」、「reference」などと宣言する場所はない。スカラは自動的に変換されるので、スカラを返す操作は、呼び出し元が文字列を探しているのか、数値を探しているのか、参照を探しているのかを気にする必要はありません(実際には気にすることはできません)。Perlは文脈上の多相性を持つ言語で、スカラーは文字列、数値、参照(オブジェクトを含む)のいずれかになります。文字列と数値はほぼすべての目的のためにほぼ同じものと考えられていますが、参照は強力な型付けがされており、組み込みの参照カウントとデストラクタ呼び出し機能を備えたキャスト不可能なポインタです。</target>
        </trans-unit>
        <trans-unit id="953ae63d2cdb294f5e639e7eecef9f77d955c57c" translate="yes" xml:space="preserve">
          <source>Scalars holding numbers may also be passed, but note that non-integer numbers may already have lost precision due to the conversion to float. Quote your input if you want BigInt to see all the digits:</source>
          <target state="translated">数値を保持するスカラも渡すことができますが、整数ではない数値は float への変換により既に精度が失われている可能性があることに注意してください。BigInt にすべての桁を表示させたい場合は、入力を引用してください。</target>
        </trans-unit>
        <trans-unit id="d44a7e1989e932a1f263afd20c2951408fa65160" translate="yes" xml:space="preserve">
          <source>Scalars that contain only ASCII and are marked as UTF-8 are sometimes a drag to your program. If you recognize such a situation, just remove the UTF8 flag:</source>
          <target state="translated">ASCIIのみを含み、UTF-8と表記されているスカラは、プログラムの足を引っ張ることがあります。そのような状況を認識した場合は、UTF8フラグを削除するだけです。</target>
        </trans-unit>
        <trans-unit id="5c0df7bcd9f773b37cd0565bb6449d0e72c38539" translate="yes" xml:space="preserve">
          <source>Scalars, arrays and hashes are documented more fully in &lt;a href=&quot;perldata&quot;&gt;perldata&lt;/a&gt;.</source>
          <target state="translated">スカラー、配列、ハッシュについては、&lt;a href=&quot;perldata&quot;&gt;perldata&lt;/a&gt;で詳しく説明しています。</target>
        </trans-unit>
        <trans-unit id="6edc7768be61f0a36d519e17270ba48e820babe9" translate="yes" xml:space="preserve">
          <source>Scan and skip for a numeric decimal separator (radix).</source>
          <target state="translated">数値の10進数セパレータ(基数)をスキャンしてスキップします。</target>
        </trans-unit>
        <trans-unit id="b447752f185cdad2017fcfb4683c08e101844aba" translate="yes" xml:space="preserve">
          <source>Scans &lt;code&gt;$buffer&lt;/code&gt; until it reaches either a</source>
          <target state="translated">&lt;code&gt;$buffer&lt;/code&gt; いずれかに到達するまでスキャンします</target>
        </trans-unit>
        <trans-unit id="f9cc97efd39c36ca8aea6dc3fbaf8c549242a820" translate="yes" xml:space="preserve">
          <source>Scans the directory structure and initializes DIR, XS, XS_FILES, C, C_FILES, O_FILES, H, H_FILES, PL_FILES, EXE_FILES.</source>
          <target state="translated">ディレクトリ構造をスキャンし、DIR、XS、XS_FILES、C、C_FILES、O_FILES、H、H_FILES、PL_FILES、EXE_FILESを初期化します。</target>
        </trans-unit>
        <trans-unit id="8b3e0206445d84e0c05bdf3f7e512c348e7dd63c" translate="yes" xml:space="preserve">
          <source>Scans the frames back by depth + skip, then drops the skip innermost, returning at most depth frames.</source>
          <target state="translated">深さ+スキップで戻ってきたフレームをスキャンし、スキップを最奥に落とし、最も深さのあるフレームで戻ります。</target>
        </trans-unit>
        <trans-unit id="898d348def33a95c917edb2b47a3656695cfe3f4" translate="yes" xml:space="preserve">
          <source>Schedule tests during parallel testing</source>
          <target state="translated">並行テスト中にテストをスケジュールする</target>
        </trans-unit>
        <trans-unit id="f1767826d4933a0055c5d47e6c08999b74948c31" translate="yes" xml:space="preserve">
          <source>Schema verification with &lt;code&gt;Kwalify&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Kwalify&lt;/code&gt; によるスキーマ検証</target>
        </trans-unit>
        <trans-unit id="dd0e72bd36c98d5abde3acf0b83adc65065c30a6" translate="yes" xml:space="preserve">
          <source>Schema verification with Kwalify</source>
          <target state="translated">Kwalifyによるスキーマ検証</target>
        </trans-unit>
        <trans-unit id="cc72d54e23e8e30e4e1d63e248c21ce7335655bd" translate="yes" xml:space="preserve">
          <source>Scratchpads</source>
          <target state="translated">Scratchpads</target>
        </trans-unit>
        <trans-unit id="ca1a20b78474d4ab643effd1fc473b3dd0822f75" translate="yes" xml:space="preserve">
          <source>Scratchpads and recursion</source>
          <target state="translated">スクラッチパッドと再帰</target>
        </trans-unit>
        <trans-unit id="48b52f6e45afb6430e381c2398fc1596c6ef5cbf" translate="yes" xml:space="preserve">
          <source>Script Portability on Cygwin</source>
          <target state="translated">Cygwinでのスクリプトの移植性</target>
        </trans-unit>
        <trans-unit id="381e3298b2b8f6caeb2208b57d805ada38402f0b" translate="yes" xml:space="preserve">
          <source>Scripts</source>
          <target state="translated">Scripts</target>
        </trans-unit>
        <trans-unit id="ad3f4b3b7f509de9f3b3d367a1f94cdc356a1e32" translate="yes" xml:space="preserve">
          <source>Scripts are matched with the regular-expression construct &lt;code&gt;\p{...}&lt;/code&gt; (e.g. &lt;code&gt;\p{Tibetan}&lt;/code&gt; matches characters of the Tibetan script), while &lt;code&gt;\p{Blk=...}&lt;/code&gt; is used for blocks (e.g. &lt;code&gt;\p{Blk=Tibetan}&lt;/code&gt; matches any of the 256 code points in the Tibetan block).</source>
          <target state="translated">スクリプトは正規表現のコンストラクト &lt;code&gt;\p{...}&lt;/code&gt; と照合され（たとえば、 &lt;code&gt;\p{Tibetan}&lt;/code&gt; はチベット語の文字と一致します）、 &lt;code&gt;\p{Blk=...}&lt;/code&gt; はブロック（たとえば &lt;code&gt;\p{Blk=Tibetan}&lt;/code&gt; は、チベット語ブロックの256個のコードポイントのいずれかに一致します。</target>
        </trans-unit>
        <trans-unit id="1abe3e573b15fe96d066363e71021c0a77f61490" translate="yes" xml:space="preserve">
          <source>Scripts starting with #!/usr/bin/perl should work if you have /QOpenSys/usr/bin/perl symlinked to your perl binary. This will not work if you've done a setuid/setgid or have environment variable PASE_EXEC_QOPENSYS=&quot;N&quot;. If you have V5R1, you'll need to get the latest PTFs to have this feature. Scripts starting with #!/QOpenSys/perl/bin/perl should always work.</source>
          <target state="translated">/QOpenSys/usr/bin/perlがPerlバイナリにシンボリックリンクされていれば、#!/usr/bin/perlで始まるスクリプトは動作するはずです。setuid/setgid を行っていたり、環境変数 PASE_EXEC_QOPENSYS=&quot;N&quot; を設定している場合は動作しません。V5R1をお持ちの方は、最新のPTFを取得しないとこの機能は使えません。で始まるスクリプトは、#!/QOpenSys/perl/bin/perl で始まるスクリプトは常に動作するはずです。</target>
        </trans-unit>
        <trans-unit id="d6e8754d3cda956d2814749461fe8e0c09c0829d" translate="yes" xml:space="preserve">
          <source>Sean M. Burke</source>
          <target state="translated">ショーン・M・バーク</target>
        </trans-unit>
        <trans-unit id="d838b0b9eb490114353a37b37fd534deb835813a" translate="yes" xml:space="preserve">
          <source>Sean M. Burke &lt;code&gt;sburke@cpan.org&lt;/code&gt;</source>
          <target state="translated">ショーンM.バーク &lt;code&gt;sburke@cpan.org&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a4a4c9d21a83d403cf6abf74d07de221f606bec9" translate="yes" xml:space="preserve">
          <source>Sean M. Burke, sburke@cpan.org</source>
          <target state="translated">ショーン・M・バーク sburke@cpan.org</target>
        </trans-unit>
        <trans-unit id="157f5589fc268213aaeb57461931db7a967e393a" translate="yes" xml:space="preserve">
          <source>Search @INC for the pod and also the &lt;code&gt;scriptdir&lt;/code&gt; defined in the &lt;a href=&quot;../config&quot;&gt;Config&lt;/a&gt; module.</source>
          <target state="translated">@INCでポッドを検索し、&lt;a href=&quot;../config&quot;&gt;Config&lt;/a&gt;モジュールで定義されている &lt;code&gt;scriptdir&lt;/code&gt; も検索します。</target>
        </trans-unit>
        <trans-unit id="d473edf4f992769d896ded0aee42c81af7bdef8c" translate="yes" xml:space="preserve">
          <source>Search along a &lt;code&gt;refcounted_he&lt;/code&gt; chain for an entry with the key specified by</source>
          <target state="translated">&lt;code&gt;refcounted_he&lt;/code&gt; チェーンに沿って、次で指定されたキーを持つエントリを検索します</target>
        </trans-unit>
        <trans-unit id="0425f1949b3efb097e0af51ce6a638737fa1a8d0" translate="yes" xml:space="preserve">
          <source>Search and replace</source>
          <target state="translated">検索と入れ替え</target>
        </trans-unit>
        <trans-unit id="91aaba48038a8793d6d8ec9d13575e3f72353702" translate="yes" xml:space="preserve">
          <source>Search and replace is performed using &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s/regex/replacement/modifiers&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;replacement&lt;/code&gt; is a Perl double-quoted string that replaces in the string whatever is matched with the &lt;code&gt;regex&lt;/code&gt; . The operator &lt;code&gt;=~&lt;/code&gt; is also used here to associate a string with &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt;. If matching against &lt;code&gt;$_&lt;/code&gt; , the &lt;code&gt;$_ =~&lt;/code&gt; can be dropped. If there is a match, &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; returns the number of substitutions made; otherwise it returns false. Here are a few examples:</source>
          <target state="translated">検索と置換は &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s/regex/replacement/modifiers&lt;/a&gt;&lt;/code&gt; を使用して実行されます。 &lt;code&gt;replacement&lt;/code&gt; 文字列の置き換えがと一致するものは何でもすることをPerlの二重引用符で囲まれた文字列で &lt;code&gt;regex&lt;/code&gt; 。演算子 &lt;code&gt;=~&lt;/code&gt; は、ここでも文字列を &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; に関連付けるために使用されます。 &lt;code&gt;$_&lt;/code&gt; と一致する場合、 &lt;code&gt;$_ =~&lt;/code&gt; を削除できます。一致がある場合、 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s///&lt;/a&gt;&lt;/code&gt; は行われた置換の数を返します。それ以外の場合はfalseを返します。以下にいくつかの例を示します。</target>
        </trans-unit>
        <trans-unit id="8176a17b3ec2ee1e141881712cc1e6f85341c1e2" translate="yes" xml:space="preserve">
          <source>Search and replace or tr</source>
          <target state="translated">検索して置き換えるか、またはtr</target>
        </trans-unit>
        <trans-unit id="20bccd1860b2ff784dc0dd9e3496ebcb95342ff2" translate="yes" xml:space="preserve">
          <source>Search backwards for pattern; final ? is optional. The search is case-insensitive by default.</source>
          <target state="translated">パターンを逆方向に検索します。デフォルトでは、検索は大文字小文字を区別しません。</target>
        </trans-unit>
        <trans-unit id="712e0a5a32c85d5d676dd22914dfa6472338302c" translate="yes" xml:space="preserve">
          <source>Search for PODs in the current Perl interpreter's</source>
          <target state="translated">現在の Perl インタプリタの</target>
        </trans-unit>
        <trans-unit id="149ca8cdb14351a33bdb87598c22f991df3653d9" translate="yes" xml:space="preserve">
          <source>Search for PODs in the current Perl interpreter's installation &lt;b&gt;scriptdir&lt;/b&gt;. This is taken from the local &lt;a href=&quot;../config&quot;&gt;Config&lt;/a&gt; module.</source>
          <target state="translated">現在のPerlインタープリターのインストール&lt;b&gt;scriptdir&lt;/b&gt;でPODを検索します。これは、ローカルの&lt;a href=&quot;../config&quot;&gt;構成&lt;/a&gt;モジュールから取得されます。</target>
        </trans-unit>
        <trans-unit id="6091da1a30ccbeddbf689bdb94636baedb98b8b8" translate="yes" xml:space="preserve">
          <source>Search forwards for pattern (a Perl regex); final / is optional. The search is case-insensitive by default.</source>
          <target state="translated">パターン(Perlの正規表現)を前方に検索します。検索はデフォルトでは大文字小文字を区別しません。</target>
        </trans-unit>
        <trans-unit id="b078d5b07dff8d9c3414352d2c8b1e8766374ab7" translate="yes" xml:space="preserve">
          <source>Search path for ModuleName.a archives. Default path is &lt;code&gt;@INC&lt;/code&gt; . Library archives are expected to be found as</source>
          <target state="translated">ModuleName.aアーカイブの検索パス。デフォルトのパスは &lt;code&gt;@INC&lt;/code&gt; です。ライブラリアーカイブは、</target>
        </trans-unit>
        <trans-unit id="7ba4c83bebd38d6c9ef98df13ee7c93324a9f85b" translate="yes" xml:space="preserve">
          <source>Search::Dict</source>
          <target state="translated">Search::Dict</target>
        </trans-unit>
        <trans-unit id="159c02c52328a5c3d8f1f6d33f4619174fc4d3fd" translate="yes" xml:space="preserve">
          <source>Search::Dict - look - search for key in dictionary file</source>
          <target state="translated">Search::Dict-look-辞書ファイルのキーを検索する</target>
        </trans-unit>
        <trans-unit id="cb274b582ed470bcbc679792fd0efcf47c827828" translate="yes" xml:space="preserve">
          <source>Searches a string for a pattern match, and in scalar context returns true if it succeeds, false if it fails. If no string is specified via the &lt;code&gt;=~&lt;/code&gt; or &lt;code&gt;!~&lt;/code&gt; operator, the &lt;code&gt;$_&lt;/code&gt; string is searched. (The string specified with &lt;code&gt;=~&lt;/code&gt; need not be an lvalue--it may be the result of an expression evaluation, but remember the &lt;code&gt;=~&lt;/code&gt; binds rather tightly.) See also &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;.</source>
          <target state="translated">文字列からパターンマッチを検索し、スカラーコンテキストでは、成功した場合はtrueを返し、失敗した場合はfalseを返します。 &lt;code&gt;=~&lt;/code&gt; または &lt;code&gt;!~&lt;/code&gt; 演算子を介して文字列が指定されていない場合、 &lt;code&gt;$_&lt;/code&gt; 文字列が検索されます。（ &lt;code&gt;=~&lt;/code&gt; 指定された文字列は左辺値である必要はありません。これは、式の評価の結果である可能性がありますが、 &lt;code&gt;=~&lt;/code&gt; バインドはややきついです。）&lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="01609669c2084e3949064f2044ad67fc03ade780" translate="yes" xml:space="preserve">
          <source>Searches a string for a pattern, and if found, replaces that pattern with the replacement text and returns the number of substitutions made. Otherwise it returns false (specifically, the empty string).</source>
          <target state="translated">文字列からパターンを検索し、見つかった場合には、そのパターンを置換テキストで置き換え、置換された数を返します。それ以外の場合は false (具体的には空の文字列)を返します。</target>
        </trans-unit>
        <trans-unit id="a9dce8c565339549241ce0f3e41d601fb3d4880b" translate="yes" xml:space="preserve">
          <source>Seasoned &lt;b&gt;sed&lt;/b&gt; programmers should take note of the following:</source>
          <target state="translated">ベテランの&lt;b&gt;sed&lt;/b&gt;プログラマは、次の点に注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="b2b7c5f0762186ebbe1bd303994e0861cc28e489" translate="yes" xml:space="preserve">
          <source>Second is the &quot;large file compilation environment&quot;, described in lfcompile(5). According to the man page,</source>
          <target state="translated">2つ目は lfcompile(5)に記載されている「大規模ファイルのコンパイル環境」です。マニュアルページによると</target>
        </trans-unit>
        <trans-unit id="1da21f35eb86e1a8bb31daf3e166d2e2032a9f8a" translate="yes" xml:space="preserve">
          <source>Second problem: there must be a syntax so that the same subroutine declarations and calls can pass a structure as their first argument, or pass nothing. To solve this, the subroutines are named and declared in a particular way. Here's a typical start of a static function used within the Perl guts:</source>
          <target state="translated">第二の問題:同じサブルーチンの宣言と呼び出しが、第一引数に構造体を渡すことも、何も渡さないこともできるような構文が必要です。これを解決するために、サブルーチンは特定の方法で名前を付けて宣言されます。ここでは、Perlのガット内で使用される静的関数の典型的な始まりを示します。</target>
        </trans-unit>
        <trans-unit id="d4dd029c6590c127bd82515d97b74688e28135c8" translate="yes" xml:space="preserve">
          <source>Second, if using the listed commands you see something &lt;b&gt;exactly&lt;/b&gt; (prefix matches do not count and case usually counts) like &quot;En_US&quot; without the quotes, then you should be okay because you are using a locale name that should be installed and available in your system. In this case, see &lt;a href=&quot;#Permanently-fixing-your-system's-locale-configuration&quot;&gt;Permanently fixing your system's locale configuration&lt;/a&gt;.</source>
          <target state="translated">第二に、あなたが何かを見記載されているコマンド使用している場合&lt;b&gt;、正確に&lt;/b&gt;あなたがあなたのロケールにインストールする必要があります名前と利用可能なを使用しているため、あなたは大丈夫でなければなりません、引用符なし（プレフィックス一致はカウントされませんし、ケースは通常、カウント）は「en_US」のようなことはシステム。この場合は、&lt;a href=&quot;#Permanently-fixing-your-system's-locale-configuration&quot;&gt;システムのロケール設定&lt;/a&gt;を完全に修正するをご覧ください。</target>
        </trans-unit>
        <trans-unit id="0f926debd74642042072112400fb8e27254214f5" translate="yes" xml:space="preserve">
          <source>Second, the new &lt;code&gt;(?PARNO)&lt;/code&gt; refers to the sub-pattern in the particular capture group given by &lt;code&gt;PARNO&lt;/code&gt; . In the following regex, the first capture group finds (and remembers) the balanced text, and you need that same pattern within the first buffer to get past the nested text. That's the recursive part. The &lt;code&gt;(?1)&lt;/code&gt; uses the pattern in the outer capture group as an independent part of the regex.</source>
          <target state="translated">次に、新しい &lt;code&gt;(?PARNO)&lt;/code&gt; は、 &lt;code&gt;PARNO&lt;/code&gt; によって指定された特定のキャプチャグループ内のサブパターンを指します。次の正規表現では、最初のキャプチャグループがバランスの取れたテキストを検索（および記憶）します。ネストされたテキストを通過するには、最初のバッファー内に同じパターンが必要です。それが再帰的な部分です。 &lt;code&gt;(?1)&lt;/code&gt; 正規表現の独立部品として外側キャプチャグループ内のパターンを使用します。</target>
        </trans-unit>
        <trans-unit id="30470a6ac50aeafc982e0aa947ff8346f98bec87" translate="yes" xml:space="preserve">
          <source>Second, we create a new tied hash each time the hash syntax is used. This allows us not to worry about a possibility of a reference loop, which would lead to a memory leak.</source>
          <target state="translated">第二に、ハッシュ構文が使用されるたびに新しいタイドハッシュを作成します。これにより、メモリリークにつながる参照ループの可能性を心配する必要がなくなります。</target>
        </trans-unit>
        <trans-unit id="0f94865fdffc02738a231b5c96d59404dc8257a9" translate="yes" xml:space="preserve">
          <source>Second, when classes are well encapsulated, they become easier to subclass. Ideally, a subclass uses the same APIs to access object data that its parent class uses. In reality, subclassing sometimes involves violating encapsulation, but a good API can minimize the need to do this.</source>
          <target state="translated">第二に、クラスがうまくカプセル化されていると、サブクラスを作るのが簡単になります。理想的には、サブクラスは親クラスが使用するのと同じAPIを使用してオブジェクトデータにアクセスします。実際には、サブクラス化はカプセル化に違反することもありますが、優れたAPIを使用すれば、その必要性を最小限に抑えることができます。</target>
        </trans-unit>
        <trans-unit id="1957a7a78ef8a058a21c4bb4fffe79261487e0e1" translate="yes" xml:space="preserve">
          <source>Secondly, there is a hard-wired limit (in this case 3) to the number of callbacks that can exist simultaneously. The only way to increase the limit is by modifying the code to add more functions and then recompiling. None the less, as long as the number of functions is chosen with some care, it is still a workable solution and in some cases is the only one available.</source>
          <target state="translated">第二に、同時に存在できるコールバックの数にはハードワイヤードの制限があります(この場合は3)。制限数を増やす唯一の方法は、コードを修正してより多くの関数を追加し、再コンパイルすることです。それでも、関数の数に注意して選択している限り、これはまだ実行可能な解決策であり、場合によってはこれが唯一の解決策となることもあります。</target>
        </trans-unit>
        <trans-unit id="77568c91a4005c80b85e07eded864156aa3ade19" translate="yes" xml:space="preserve">
          <source>Section 5 of CPAN's</source>
          <target state="translated">CPANの第5節</target>
        </trans-unit>
        <trans-unit id="26953313a3fcd73212535356659ea498185826b3" translate="yes" xml:space="preserve">
          <source>Section ordering varies, although NAME must always be the first section (you'll break some man page systems otherwise), and NAME, SYNOPSIS, DESCRIPTION, and OPTIONS generally always occur first and in that order if present. In general, SEE ALSO, AUTHOR, and similar material should be left for last. Some systems also move WARNINGS and NOTES to last. The order given above should be reasonable for most purposes.</source>
          <target state="translated">セクションの順序は様々ですが、NAMEは常に最初のセクションでなければなりませんが(そうしないといくつかのman pageシステムが壊れてしまいます)、NAME,SYNOPSIS,DESCRIPTION,OPTIONSは一般的には常に最初に、そして存在する場合はその順序で書かれます。一般的には、See ALSO、AUTHOR、および同様の内容は最後に残すべきです。いくつかのシステムでは、警告と注釈を最後に移動させることもあります。上記の順序は、ほとんどの目的のためには妥当なものであるべきである。</target>
        </trans-unit>
        <trans-unit id="f25ce1b8a399bd8621a57427a20039b4b13935db" translate="yes" xml:space="preserve">
          <source>Security</source>
          <target state="translated">Security</target>
        </trans-unit>
        <trans-unit id="81d78e545bd3a736da1afe1a0a7207c7d44d30f7" translate="yes" xml:space="preserve">
          <source>Security Bugs</source>
          <target state="translated">セキュリティバグ</target>
        </trans-unit>
        <trans-unit id="c582e980afaacab4d25850669d3019f76eb55523" translate="yes" xml:space="preserve">
          <source>Security Implications of Unicode</source>
          <target state="translated">ユニコードのセキュリティへの影響</target>
        </trans-unit>
        <trans-unit id="5bf0e79ff05f1ce749dc53266bc353f163fb157d" translate="yes" xml:space="preserve">
          <source>Security problems</source>
          <target state="translated">セキュリティ上の問題</target>
        </trans-unit>
        <trans-unit id="e03e4e146e9017e89a80cbc3ccdcf528aeccd0c2" translate="yes" xml:space="preserve">
          <source>Sed Traps</source>
          <target state="translated">セドトラップ</target>
        </trans-unit>
        <trans-unit id="ce3df4d818316dd10c7bca5ae8539c894dc07dbb" translate="yes" xml:space="preserve">
          <source>See</source>
          <target state="translated">See</target>
        </trans-unit>
        <trans-unit id="3dc8ef7cce56914fea40d1a846d9d17ce65d4086" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#%24%3f&quot;&gt;$?&lt;/a&gt; for a description of the encoding of the Unix value to produce a native VMS status containing it.</source>
          <target state="translated">参照してください&lt;a href=&quot;#%24%3f&quot;&gt;$を？&lt;/a&gt;それを含むネイティブVMSステータスを生成するためのUnix値のエンコーディングについては、</target>
        </trans-unit>
        <trans-unit id="e3a615c4d743ebe05c6698fe24ee2738441f777a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#%24%5eV&quot;&gt;$^V&lt;/a&gt; for a representation of the Perl version as a &lt;a href=&quot;version&quot;&gt;version&lt;/a&gt; object, which allows more flexible string comparisons.</source>
          <target state="translated">より柔軟な文字列比較を可能にする&lt;a href=&quot;version&quot;&gt;バージョン&lt;/a&gt;オブジェクトとしてのPerlバージョンの表現については、&lt;a href=&quot;#%24%5eV&quot;&gt;$ ^ V&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="f5c4312bfbd997d7021c16cb642d0d0f0b8927c7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#%2fx&quot;&gt;/x&lt;/a&gt; for another way to have comments in patterns.</source>
          <target state="translated">パターンにコメントを付ける別の方法については、&lt;a href=&quot;#%2fx&quot;&gt;/ x&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="fd59b9a8679a0100d8220fe2c0d02d9e16f259a2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#(*SKIP)&quot;&gt;(*SKIP)&lt;/a&gt; for more details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#(*SKIP)&quot;&gt;（* SKIP）&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b7d48087051d931d791f967ec5d5ea3ce9bb1cba" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#BUGS&quot;&gt;BUGS&lt;/a&gt; for the circumstances in which the behavior differs from that described above.</source>
          <target state="translated">上記の動作とは異なる状況については、&lt;a href=&quot;#BUGS&quot;&gt;バグ&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="da18bfb3150711a07386cdf3494de4add4c29c5d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Beyond-Unicode-code-points&quot;&gt;Beyond Unicode code points&lt;/a&gt; for special considerations when matching Unicode properties against non-Unicode code points.</source>
          <target state="translated">Unicodeプロパティを非Unicodeコードポイントと照合する際の特別な考慮事項については、&lt;a href=&quot;#Beyond-Unicode-code-points&quot;&gt;「Unicodeコードポイント&lt;/a&gt;を超えて」を参照してください。</target>
        </trans-unit>
        <trans-unit id="d36f9be4eca1ce27f465834779627dc0abc422e6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Blocks-versus-Scripts&quot;&gt;Blocks versus Scripts&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Blocks-versus-Scripts&quot;&gt;ブロック対スクリプトを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="82fe1dd4332f5aa3192be363adc37ec0e102169c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#COMPATIBILITY&quot;&gt;COMPATIBILITY&lt;/a&gt; for the versions of Term::ANSIColor that introduced particular features and the versions of Perl that included them.</source>
          <target state="translated">特定の機能を導入したTerm :: ANSIColorのバージョンと、それらを含むPerlのバージョンについては、&lt;a href=&quot;#COMPATIBILITY&quot;&gt;互換性&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="01324509104c95010c37d83e2a9b0d89c4ae1472" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#CUSTOM-ALIASES&quot;&gt;CUSTOM ALIASES&lt;/a&gt; above for restrictions on</source>
          <target state="translated">上の制限については、上記の&lt;a href=&quot;#CUSTOM-ALIASES&quot;&gt;カスタムエイリアスを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b29fc8b5779a3a961738b69765d188e1e77e2418" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Capture-groups&quot;&gt;Capture groups&lt;/a&gt; below for details.</source>
          <target state="translated">詳細については、以下の&lt;a href=&quot;#Capture-groups&quot;&gt;キャプチャグループを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="42d897bd6009af34b566e1b063cb729a21cabbfd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Caveats&quot;&gt;Caveats&lt;/a&gt; for remarks on how commands are parsed and their limitations.</source>
          <target state="translated">コマンドの解析方法とその制限についての&lt;a href=&quot;#Caveats&quot;&gt;注意&lt;/a&gt;事項については、警告を参照してください。</target>
        </trans-unit>
        <trans-unit id="2529b1bbb4cb9bd268f2471b3af1f6bf2544fda1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Centralized-management-of-resources&quot;&gt;Centralized management of resources&lt;/a&gt; for additional details.</source>
          <target state="translated">詳細について&lt;a href=&quot;#Centralized-management-of-resources&quot;&gt;は、リソースの一元管理を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b0d608eaff9fc2d5fda41c89a06afb0e93e74b1b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Changing-the-BTREE-sort-order&quot;&gt;Changing the BTREE sort order&lt;/a&gt; for an example of using the &lt;code&gt;compare&lt;/code&gt; template.</source>
          <target state="translated">&lt;code&gt;compare&lt;/code&gt; テンプレートの使用例については&lt;a href=&quot;#Changing-the-BTREE-sort-order&quot;&gt;、BTREEソート順の変更を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="697d7d5ea9a46415162262fa3a5975d249dd3463" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Deferred-Writing&quot;&gt;Deferred Writing&lt;/a&gt;, below.</source>
          <target state="translated">以下の&lt;a href=&quot;#Deferred-Writing&quot;&gt;据え置き書き込みを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="6646def3e55c6c16682534051cece8c01a8afaa3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#EXAMPLE&quot;&gt;EXAMPLE&lt;/a&gt; below for a more complete example.</source>
          <target state="translated">より完全な例については、以下の&lt;a href=&quot;#EXAMPLE&quot;&gt;例を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="bf409a63c99af27e22c018e6065e6f150ada234e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Example-4%3a-Using-filter_del&quot;&gt;Example 4: Using filter_del&lt;/a&gt; for details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#Example-4%3a-Using-filter_del&quot;&gt;例4：filter_delの使用&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="fbd7b2d9bda5bb15fb80642ca4e1486942d59d02" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Extended-Patterns&quot;&gt;Extended Patterns&lt;/a&gt; below for details.</source>
          <target state="translated">詳細については、以下の&lt;a href=&quot;#Extended-Patterns&quot;&gt;拡張パターンを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8d17871c3ac0073ed5220689da11af40928a963e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Further-Resources&quot;&gt;Further Resources&lt;/a&gt; for how to find all these names and numeric codes.</source>
          <target state="translated">これらすべての名前と数値コードを見つける方法については、&lt;a href=&quot;#Further-Resources&quot;&gt;その他のリソース&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="7a47ce09f053dcaab42113b6af18f9dae5d5d068" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#How-Perl-Chooses-an-Operator-Implementation&quot;&gt;How Perl Chooses an Operator Implementation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#How-Perl-Chooses-an-Operator-Implementation&quot;&gt;Perlが演算子の実装&lt;/a&gt;を選択する方法を参照してください。</target>
        </trans-unit>
        <trans-unit id="64f5f0910d5ebda4dc132ab2bf8b411cf50e5398" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#I%2fO-Operators&quot;&gt;I/O Operators&lt;/a&gt; for more discussion.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#I%2fO-Operators&quot;&gt;I / Oオペレーター&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c1f584feebfe576b999765fed59db5431c20da25" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#In-Memory-Databases&quot;&gt;In Memory Databases&lt;/a&gt; for a discussion on the use of &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; in place of a filename.</source>
          <target state="translated">ファイル名の代わりに &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; を使用する方法については、&lt;a href=&quot;#In-Memory-Databases&quot;&gt;インメモリデータベース&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ed6d7d5b46237ab1bfbb7cdc2df2d3f94335ca44" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Input&quot;&gt;Input&lt;/a&gt; for more info on accepted input formats.</source>
          <target state="translated">受け入れられる入力形式の詳細については、&lt;a href=&quot;#Input&quot;&gt;入力&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="d14b703a54eb99c944b45318383220f44655c4b9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#KNOWN-BUGS&quot;&gt;KNOWN BUGS&lt;/a&gt; for a known-bug with &lt;code&gt;pairmap&lt;/code&gt; , and a workaround.</source>
          <target state="translated">参照してください。&lt;a href=&quot;#KNOWN-BUGS&quot;&gt;既知のバグ&lt;/a&gt;と既知のバグのために &lt;code&gt;pairmap&lt;/code&gt; 、および回避策。</target>
        </trans-unit>
        <trans-unit id="4d41685efc41efc4161ad099493a7baa3375996d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#LIMITATIONS&quot;&gt;LIMITATIONS&lt;/a&gt; for caveats related to passing objects via queues.</source>
          <target state="translated">キューを介してオブジェクトを渡すことに関連する警告については、&lt;a href=&quot;#LIMITATIONS&quot;&gt;制限&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="81bb2f60f99bb31682143a641130d9d08a0bcb37" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Locking%3a-The-Trouble-with-fd&quot;&gt;Locking: The Trouble with fd&lt;/a&gt; for an explanation for why you should not use &lt;code&gt;fd&lt;/code&gt; to lock your database.</source>
          <target state="translated">&lt;code&gt;fd&lt;/code&gt; を使用してデータベースをロックするべきではない理由については、「&lt;a href=&quot;#Locking%3a-The-Trouble-with-fd&quot;&gt;ロック：fd&lt;/a&gt;に関するトラブル」を参照してください。</target>
        </trans-unit>
        <trans-unit id="a1435fd615006ca2ca2a068d620ebf63df37e4f1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Misfeatures&quot;&gt;Misfeatures&lt;/a&gt; for details.</source>
          <target state="translated">詳細は&lt;a href=&quot;#Misfeatures&quot;&gt;Misfeatures&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="58d0e20526f31ba7307453ef32cf9b232482fb74" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Named-Unary-Operators&quot;&gt;Named Unary Operators&lt;/a&gt; for more discussion of this.</source>
          <target state="translated">この詳細については、&lt;a href=&quot;#Named-Unary-Operators&quot;&gt;名前付き単項演算子&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="1deb57eded4764562d600d45db1e77dd6a893842" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#PARSING-OPTIONS&quot;&gt;PARSING OPTIONS&lt;/a&gt; for more information on the name and meaning of each parse-option currently recognized.</source>
          <target state="translated">現在認識されている各解析オプションの名前と意味の詳細については、&lt;a href=&quot;#PARSING-OPTIONS&quot;&gt;PARSING OPTIONS&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="802f8d1c0614b0c5ba97ddf4d846b72f51fe2467" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Performance-issues&quot;&gt;Performance issues&lt;/a&gt; above for the serious performance implications of using this variable (even once) in your code.</source>
          <target state="translated">この変数をコードで（一度でも）使用することによる深刻なパフォーマンスへの影響については、上記の&lt;a href=&quot;#Performance-issues&quot;&gt;パフォーマンスの問題を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e0721d3a583f622706bb6fd9d55e25e76e7c9c08" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Performance-issues&quot;&gt;Performance issues&lt;/a&gt; above.</source>
          <target state="translated">上記の&lt;a href=&quot;#Performance-issues&quot;&gt;パフォーマンスの問題を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="012cca9376c3d6fc72832cdaf6a1953876b6418e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Rules&quot;&gt;Rules&lt;/a&gt; for detailed loading rule.</source>
          <target state="translated">詳細な読み込みルールについては、&lt;a href=&quot;#Rules&quot;&gt;ルール&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="e0c7190e276dd1123e2d20bfc38a0252bb4583e1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#SYNOPSIS&quot;&gt;SYNOPSIS&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#SYNOPSIS&quot;&gt;概要を&lt;/a&gt;見る</target>
        </trans-unit>
        <trans-unit id="44e2b75cc42cb4c89209bef33f45eded56856cc9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Special-Keys-for-use-overload&quot;&gt;Special Keys for use overload&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Special-Keys-for-use-overload&quot;&gt;オーバーロードの使用&lt;/a&gt;については、特殊キーを参照してください。</target>
        </trans-unit>
        <trans-unit id="8783b870d4a4c36fbb9d72d08404624811961c63" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#THREAD-CONTEXT&quot;&gt;THREAD CONTEXT&lt;/a&gt; for more details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#THREAD-CONTEXT&quot;&gt;スレッドコンテキスト&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="98abc0c6869dfeaa370f845365c578913d06663d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Text-mode-filehandles&quot;&gt;Text-mode filehandles&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#Text-mode-filehandles&quot;&gt;テキストモードのファイルハンドルを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1dd5546a5583c5aabbe7a399944669fbe743c078" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#The-LimitOutput-option&quot;&gt;The LimitOutput option&lt;/a&gt; for a discussion on why &lt;code&gt;LimitOutput&lt;/code&gt; is needed and how to use it.</source>
          <target state="translated">&lt;code&gt;LimitOutput&lt;/code&gt; が必要な理由とその使用方法については、&lt;a href=&quot;#The-LimitOutput-option&quot;&gt;LimitOutputオプション&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="5a04db2897769ec8be9b6e15d301b0fd351331da" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#The-UTF8-flag&quot;&gt;The UTF8 flag&lt;/a&gt; below.</source>
          <target state="translated">以下&lt;a href=&quot;#The-UTF8-flag&quot;&gt;のUTF8フラグを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="6df4e7ffdc66da3528db2677bd950579d6d17583" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#The-untie()-Gotcha&quot;&gt;The untie() Gotcha&lt;/a&gt; for more details.</source>
          <target state="translated">詳細については&lt;a href=&quot;#The-untie()-Gotcha&quot;&gt;、untie（）Gotcha&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="6e3c912519f7e9d0616e33d41fa8cbbc6ac73acd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Understanding-the-Magic-of-Tied-Hashes-and-Arrays&quot;&gt;Understanding the Magic of Tied Hashes and Arrays&lt;/a&gt; for more information on how to use the array access functions on tied arrays.</source>
          <target state="translated">&lt;a href=&quot;#Understanding-the-Magic-of-Tied-Hashes-and-Arrays&quot;&gt;結合&lt;/a&gt;配列で配列アクセス関数を使用する方法の詳細については、結合ハッシュと配列の魔法についてを参照してください。</target>
        </trans-unit>
        <trans-unit id="28d606a69fa12e18007cdee15b06bccffc4ee71d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Understanding-the-Magic-of-Tied-Hashes-and-Arrays&quot;&gt;Understanding the Magic of Tied Hashes and Arrays&lt;/a&gt; for more information on how to use the hash access functions on tied hashes.</source>
          <target state="translated">&lt;a href=&quot;#Understanding-the-Magic-of-Tied-Hashes-and-Arrays&quot;&gt;結合&lt;/a&gt;ハッシュでハッシュアクセス関数を使用する方法の詳細については、結合ハッシュと配列の魔法についてを参照してください。</target>
        </trans-unit>
        <trans-unit id="8574bac2e52b1f51dde3adc91743277ad06ddf1b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Unicode-Character-Properties&quot;&gt;Unicode Character Properties&lt;/a&gt; for more details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#Unicode-Character-Properties&quot;&gt;Unicode文字のプロパティ&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="203a3d29f8f05d571a4e10025074d6770fd09885" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#autochomp&quot;&gt;autochomp&lt;/a&gt;, above.</source>
          <target state="translated">上記の&lt;a href=&quot;#autochomp&quot;&gt;autochompを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="6ad27be42bc92f62a41dd4b63858ed5bb05bb0d1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#cond_signal-VARIABLE&quot;&gt;cond_signal VARIABLE&lt;/a&gt;, above.</source>
          <target state="translated">上記の&lt;a href=&quot;#cond_signal-VARIABLE&quot;&gt;cond_signal VARIABLEを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="43619f99edd9a06b65c218c077a415499c62dd22" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#extract_quotelike&quot;&gt;extract_quotelike&lt;/a&gt; for a (partial) solution to this problem.</source>
          <target state="translated">この問題の（部分的な）解決策については、&lt;a href=&quot;#extract_quotelike&quot;&gt;extract_quotelike&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a1c0215be7ce9711980d458716ac64d44747b272" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#gv_fetchmethod_autoload&quot;&gt;gv_fetchmethod_autoload&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#gv_fetchmethod_autoload&quot;&gt;gv_fetchmethod_autoloadを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="6d09c097e5834c91b3461437cdd59127a1114c7b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#mblen&quot;&gt;mblen&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#mblen&quot;&gt;mblenを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="90821f3f4f5fe72a6ebc3f0f884b46c92488c075" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#new&quot;&gt;new&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#new&quot;&gt;新しいを&lt;/a&gt;見る</target>
        </trans-unit>
        <trans-unit id="d57baf16b4d09759bff717ffa26a6bb8887776db" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#newCONSTSUB_flags&quot;&gt;newCONSTSUB_flags&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#newCONSTSUB_flags&quot;&gt;newCONSTSUB_flagsを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ecf00f996d4f157c12b443d968d7b0b66f8cac29" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#pack&quot;&gt;pack&lt;/a&gt; for more examples and notes.</source>
          <target state="translated">その他の例と注意事項については、&lt;a href=&quot;#pack&quot;&gt;パック&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="f1e61b3f3e66fd760583cb51239cfcf62659998f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#seek&quot;&gt;seek&lt;/a&gt; for some details about mixing reading and writing.</source>
          <target state="translated">読み書きの混合についての詳細は&lt;a href=&quot;#seek&quot;&gt;seek&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="6859925b573c3bde89aa6c7a189f1b102a55949e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../file/globmapper&quot;&gt;File::GlobMapper&lt;/a&gt; for more details.</source>
          <target state="translated">詳細は&lt;a href=&quot;../../file/globmapper&quot;&gt;File :: GlobMapper&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="8cad30a790e2f07c488b20b392de1346cd1bbf83" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../compress/faq#Compressed-files-and-Net%3a%3aFTP&quot;&gt;IO::Compress::FAQ&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../compress/faq#Compressed-files-and-Net%3a%3aFTP&quot;&gt;IO :: Compress :: FAQを&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="a75373c931961b818d9b5eb330cc1e2c76e391d2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../cpan/meta/spec&quot;&gt;CPAN::Meta::Spec&lt;/a&gt; for the list of options.</source>
          <target state="translated">オプションのリストについては、&lt;a href=&quot;../cpan/meta/spec&quot;&gt;CPAN :: Meta :: Spec&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="4a8fe6cc2e4ded44502e94b8532be8a853b69e54" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../h2xs&quot;&gt;h2xs&lt;/a&gt;, &lt;a href=&quot;http://search.cpan.org/perldoc/ppport.h&quot;&gt;ppport.h&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../h2xs&quot;&gt;h2xs&lt;/a&gt;、&lt;a href=&quot;http://search.cpan.org/perldoc/ppport.h&quot;&gt;ppport.hを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c059550545e55864295e27980cc6659740de60d6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../harness&quot;&gt;TAP::Harness&lt;/a&gt; for an example of its use.</source>
          <target state="translated">使用例については、&lt;a href=&quot;../harness&quot;&gt;TAP :: Harness&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="622442b7292c83ca7f0aefb63a8ee718715cb692" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../io/compress/gzip&quot;&gt;IO::Compress::Gzip&lt;/a&gt; for an alternative way to carry out in-memory gzip compression.</source>
          <target state="translated">インメモリgzip圧縮を実行する別の方法については、&lt;a href=&quot;../io/compress/gzip&quot;&gt;IO :: Compress :: Gzip&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="d433aa954c81682466e97c55c6954b291775bc9d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../io/uncompress/gunzip&quot;&gt;IO::Uncompress::Gunzip&lt;/a&gt; for an alternative way to carry out in-memory gzip uncompression.</source>
          <target state="translated">インメモリgzip解凍を実行する別の方法については、&lt;a href=&quot;../io/uncompress/gunzip&quot;&gt;IO :: Uncompress :: Gunzip&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="af42a5136f23e17fd08461caee6d19a5bb00d2cf" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../ipc/open2&quot;&gt;IPC::Open2&lt;/a&gt;, &lt;a href=&quot;../ipc/open3&quot;&gt;IPC::Open3&lt;/a&gt;, and &lt;a href=&quot;../perlipc#Bidirectional-Communication-with-Another-Process&quot;&gt;Bidirectional Communication with Another Process in perlipc&lt;/a&gt; for examples of such things.</source>
          <target state="translated">そのような例については、&lt;a href=&quot;../ipc/open2&quot;&gt;IPC :: Open2&lt;/a&gt;、&lt;a href=&quot;../ipc/open3&quot;&gt;IPC :: Open3&lt;/a&gt;、およびperlipcの&lt;a href=&quot;../perlipc#Bidirectional-Communication-with-Another-Process&quot;&gt;別のプロセス&lt;/a&gt;との双方向通信を参照してください。</target>
        </trans-unit>
        <trans-unit id="03da0f84566af40e837487ef03fd238bed94716c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../manifest&quot;&gt;ExtUtils::Manifest&lt;/a&gt; for more details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;../manifest&quot;&gt;ExtUtils :: Manifest&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="3647958f60e89397bf2bde781bed08d1308313a3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../memoize&quot;&gt;Memoize&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../memoize&quot;&gt;メモ化を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9f9a12130707b8ca02375cde805042b1c33c74c5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../more&quot;&gt;Test::More&lt;/a&gt; for an example of its use.</source>
          <target state="translated">その使用例については、&lt;a href=&quot;../more&quot;&gt;Test :: More&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="e0555c7f4dc92917b2979a0e0cdf513034e3b1d1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perlfork&quot;&gt;perlfork&lt;/a&gt; for more details.</source>
          <target state="translated">詳細は&lt;a href=&quot;../perlfork&quot;&gt;perlfork&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c8939879cdfd7836cc7736c3828ed69b009572b5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perlform&quot;&gt;perlform&lt;/a&gt; for many details and examples.</source>
          <target state="translated">多くの詳細と例については、&lt;a href=&quot;../perlform&quot;&gt;perlform&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="77785e75b0d6c740bbf27cc27866df83e8b43ec8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perlfunc&quot;&gt;perlfunc&lt;/a&gt; for complete descriptions of each of the following supported &lt;code&gt;IO::Handle&lt;/code&gt; methods, which are just front ends for the corresponding built-in functions:</source>
          <target state="translated">対応する組み込み関数のフロントエンドにすぎない、サポートされている次の &lt;code&gt;IO::Handle&lt;/code&gt; メソッドの詳細については、&lt;a href=&quot;../perlfunc&quot;&gt;perlfunc&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="7fc5cef92e449ab26391ca99deebb87709a4330f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perlfunc&quot;&gt;perlfunc&lt;/a&gt; for complete descriptions of each of the following supported &lt;code&gt;IO::Seekable&lt;/code&gt; methods, which are just front ends for the corresponding built-in functions:</source>
          <target state="translated">サポートされている次の各 &lt;code&gt;IO::Seekable&lt;/code&gt; メソッドの詳細については、&lt;a href=&quot;../perlfunc&quot;&gt;perlfunc&lt;/a&gt;を参照してください。これらのメソッドは、対応する組み込み関数のフロントエンドにすぎません。</target>
        </trans-unit>
        <trans-unit id="19572da817ef7827b83221364edd09ae1ad10d56" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perlfunc&quot;&gt;perlfunc&lt;/a&gt; for complete descriptions of each of the following supported &lt;code&gt;IO::Socket&lt;/code&gt; methods, which are just front ends for the corresponding built-in functions:</source>
          <target state="translated">対応する組み込み関数のフロントエンドにすぎない、サポートされている次の &lt;code&gt;IO::Socket&lt;/code&gt; メソッドの詳細については、&lt;a href=&quot;../perlfunc&quot;&gt;perlfunc&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="8bbc75f5bfe996251241d0713b66327344e9f40f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perliol&quot;&gt;perliol&lt;/a&gt; for detailed info on PerlIO.</source>
          <target state="translated">PerlIOの詳細については、&lt;a href=&quot;../perliol&quot;&gt;perliol&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="5f225e5a27c859287b167abbb13baa484ef8b512" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perlipc&quot;&gt;perlipc&lt;/a&gt; for an example of socketpair use. Perl 5.8 and later will emulate socketpair using IP sockets to localhost if your system implements sockets but not socketpair.</source>
          <target state="translated">socketpairの使用例については、&lt;a href=&quot;../perlipc&quot;&gt;perlipc&lt;/a&gt;を参照してください。システムがソケットを実装し、ソケットペアを実装しない場合、Perl 5.8以降はlocalhostへのIPソケットを使用してソケットペアをエミュレートします。</target>
        </trans-unit>
        <trans-unit id="0e9a322055c7540bb7740a0fe4b76cdb071a6093" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perlipc#Safe-Pipe-Opens&quot;&gt;Safe Pipe Opens in perlipc&lt;/a&gt; for more examples of this.</source>
          <target state="translated">この例については&lt;a href=&quot;../perlipc#Safe-Pipe-Opens&quot;&gt;、perlipc&lt;/a&gt;での安全なパイプのオープンをご覧ください。</target>
        </trans-unit>
        <trans-unit id="ebbc0f9a40727535ec701d451803ad593388a76c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perlipc#Signals&quot;&gt;Signals in perlipc&lt;/a&gt; for more details.</source>
          <target state="translated">詳細について&lt;a href=&quot;../perlipc#Signals&quot;&gt;は、perlipcの信号を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="fb73966eabe36b1530522691d1fc3dc07b25b69f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perlmod#Packages&quot;&gt;Packages in perlmod&lt;/a&gt; for more information about packages, modules, and classes. See &lt;a href=&quot;../perlsub&quot;&gt;perlsub&lt;/a&gt; for other scoping issues.</source>
          <target state="translated">パッケージ、モジュール、クラスの詳細について&lt;a href=&quot;../perlmod#Packages&quot;&gt;は、perlmodのパッケージを&lt;/a&gt;参照してください。その他のスコープの問題については&lt;a href=&quot;../perlsub&quot;&gt;perlsub&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="985bdd70e55c9ed9f5ad2560ba4334b7b81af83f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perlmod#Perl-Modules&quot;&gt;Perl Modules in perlmod&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../perlmod#Perl-Modules&quot;&gt;perlmodのPerlモジュールを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="82c97792d9e42a35fd44809c775603ba881dcc7a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perlmodlib&quot;&gt;perlmodlib&lt;/a&gt; for a list of standard modules and pragmas. See &lt;a href=&quot;../perlrun&quot;&gt;perlrun&lt;/a&gt; for the &lt;code&gt;-M&lt;/code&gt; and &lt;code&gt;-m&lt;/code&gt; command-line options to Perl that give &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; functionality from the command-line.</source>
          <target state="translated">標準モジュールとプラグマのリストについては、&lt;a href=&quot;../perlmodlib&quot;&gt;perlmodlib&lt;/a&gt;を参照してください。コマンドラインから機能を &lt;code&gt;&lt;a href=&quot;use&quot;&gt;use&lt;/a&gt;&lt;/code&gt; ようにする Perl の &lt;code&gt;-M&lt;/code&gt; および &lt;code&gt;-m&lt;/code&gt; コマンドラインオプションについては、&lt;a href=&quot;../perlrun&quot;&gt;perlrun&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="d51f7ba23fb3c9f5084207833d54cc6415991442" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perlop&quot;&gt;perlop&lt;/a&gt; for more details on unary operators and the comma operator.</source>
          <target state="translated">単項演算子とコンマ演算子の詳細については、&lt;a href=&quot;../perlop&quot;&gt;perlop&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="7a0898ea362c4e60952c0b4d9ad478988aec328c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perlopentut&quot;&gt;perlopentut&lt;/a&gt; for a kinder, gentler explanation of opening files.</source>
          <target state="translated">ファイルを開くことについてのより親切で穏やかな説明については、&lt;a href=&quot;../perlopentut&quot;&gt;perlopentut&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="f66d62e04ba999c41f9836e2ffee1a58bbb165d6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perlpacktut&quot;&gt;perlpacktut&lt;/a&gt; for an introduction to this function.</source>
          <target state="translated">この関数の&lt;a href=&quot;../perlpacktut&quot;&gt;概要&lt;/a&gt;については、perlpacktutを参照してください。</target>
        </trans-unit>
        <trans-unit id="c7404bd4f3b36a82a8b877fe66842b0804d56e6f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perlsub&quot;&gt;perlsub&lt;/a&gt; and &lt;a href=&quot;../perlref&quot;&gt;perlref&lt;/a&gt; for details about subroutines and references; see &lt;a href=&quot;../attributes&quot;&gt;attributes&lt;/a&gt; and &lt;a href=&quot;../attribute/handlers&quot;&gt;Attribute::Handlers&lt;/a&gt; for more information about attributes.</source>
          <target state="translated">参照&lt;a href=&quot;../perlsub&quot;&gt;はperlsub&lt;/a&gt;と&lt;a href=&quot;../perlref&quot;&gt;perlrefを&lt;/a&gt;サブルーチンと参照の詳細については、&lt;a href=&quot;../attributes&quot;&gt;属性の&lt;/a&gt;詳細については、属性および&lt;a href=&quot;../attribute/handlers&quot;&gt;Attribute :: Handlers&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="5ba1ad28ebe02a00f832bdafdafe5695e8a238c4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perlunicode&quot;&gt;perlunicode&lt;/a&gt; for more about Unicode.</source>
          <target state="translated">Unicodeの詳細については、&lt;a href=&quot;../perlunicode&quot;&gt;perlunicode&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="74f668202e69ad1f37f65a34698e6ab00d881acf" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perlvar&quot;&gt;perlvar&lt;/a&gt; for complete descriptions of each of the following supported &lt;code&gt;IO::Handle&lt;/code&gt; methods. All of them return the previous value of the attribute and takes an optional single argument that when given will set the value. If no argument is given the previous value is unchanged (except for $io-&amp;gt;autoflush will actually turn ON autoflush by default).</source>
          <target state="translated">以下のサポートされている &lt;code&gt;IO::Handle&lt;/code&gt; メソッドの詳細については、&lt;a href=&quot;../perlvar&quot;&gt;perlvar&lt;/a&gt;を参照してください。それらのすべては、属性の以前の値を返し、オプションで単一の引数を取り、指定された場合に値を設定します。引数が指定されていない場合、以前の値は変更されません（$ io-&amp;gt; autoflushがデフォルトで自動フラッシュを実際にオンにする場合を除きます）。</target>
        </trans-unit>
        <trans-unit id="b682446acb0b848355149be92f806f8de129a27b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../perlvar&quot;&gt;perlvar&lt;/a&gt; for details on setting &lt;code&gt;%SIG&lt;/code&gt; entries and for more examples. See the Carp module for other kinds of warnings using its carp() and cluck() functions.</source>
          <target state="translated">参照&lt;a href=&quot;../perlvar&quot;&gt;はperlvar&lt;/a&gt;の設定の詳細については、 &lt;code&gt;%SIG&lt;/code&gt; エントリをし、より多くの例のために。 carp（）およびcluck（）関数を使用した他の種類の警告については、Carpモジュールを参照してください。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
