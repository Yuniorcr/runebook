<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="npm">
    <body>
      <group id="npm">
        <trans-unit id="6ab11015b9ffb90c214e00fc9515812e398c07e4" translate="yes" xml:space="preserve">
          <source>How to View the Tokens On Your Account</source>
          <target state="translated">アカウントのトークンを表示する方法</target>
        </trans-unit>
        <trans-unit id="90b1dd88f8fa2f9b2343f05c37cd9b6b50027689" translate="yes" xml:space="preserve">
          <source>How to Work with Authentication Tokens</source>
          <target state="translated">認証トークンの使い方</target>
        </trans-unit>
        <trans-unit id="673620e4b50d0fc02b3dba9012c9a5e2568a5d18" translate="yes" xml:space="preserve">
          <source>How to Work with Scoped Packages</source>
          <target state="translated">スコープされたパッケージでの作業方法</target>
        </trans-unit>
        <trans-unit id="14158b744f89a40269d633be39ad0257d7e6899b" translate="yes" xml:space="preserve">
          <source>How to add an OTP to a command</source>
          <target state="translated">コマンドにOTPを追加する方法</target>
        </trans-unit>
        <trans-unit id="a9349e085f4c18ea3a27f076942898248bd51c34" translate="yes" xml:space="preserve">
          <source>How to create a new authentication token</source>
          <target state="translated">新しい認証トークンの作成方法</target>
        </trans-unit>
        <trans-unit id="d186fdcab1f6f579c2c179f85aa64cd4bf739636" translate="yes" xml:space="preserve">
          <source>How to find a Linux &lt;a href=&quot;https://opensource.com/life/17/10/top-terminal-emulators&quot;&gt;terminal emulators&lt;/a&gt;.</source>
          <target state="translated">Linux &lt;a href=&quot;https://opensource.com/life/17/10/top-terminal-emulators&quot;&gt;ターミナルエミュレータ&lt;/a&gt;を見つける方法。</target>
        </trans-unit>
        <trans-unit id="a07587e2f28434616b34c21ee30aeca32f8d2d2b" translate="yes" xml:space="preserve">
          <source>How to require two-factor authentication for package publishing and settings modification</source>
          <target state="translated">パッケージの公開や設定変更時に二要素認証を要求する方法</target>
        </trans-unit>
        <trans-unit id="acf6bfb265b52eb8550477c2849b0b022bb8b257" translate="yes" xml:space="preserve">
          <source>How to uninstall global packages</source>
          <target state="translated">グローバルパッケージをアンインストールする方法</target>
        </trans-unit>
        <trans-unit id="5e38d24dd03a6bc0635eccbdc2f1bc6b7c363b37" translate="yes" xml:space="preserve">
          <source>How to use Apple's terminal &lt;a href=&quot;https://support.apple.com/guide/terminal/welcome/mac&quot;&gt;Terminal&lt;/a&gt;.</source>
          <target state="translated">Appleのターミナル&lt;a href=&quot;https://support.apple.com/guide/terminal/welcome/mac&quot;&gt;Terminal&lt;/a&gt;の使い方。</target>
        </trans-unit>
        <trans-unit id="8b7daeb663dc57c0c6ab4b570a8db7b365cbc7b9" translate="yes" xml:space="preserve">
          <source>How to use Microsoft Windows &lt;a href=&quot;https://docs.microsoft.com/en-us/powershell&quot;&gt;PowerShell&lt;/a&gt;.</source>
          <target state="translated">Microsoft Windows &lt;a href=&quot;https://docs.microsoft.com/en-us/powershell&quot;&gt;PowerShellの&lt;/a&gt;使用方法。</target>
        </trans-unit>
        <trans-unit id="1111dcf70795702662c29733ae3831616cc857de" translate="yes" xml:space="preserve">
          <source>How to use Semantic Versioning</source>
          <target state="translated">セマンティックバージョニングの使い方</target>
        </trans-unit>
        <trans-unit id="a334026f09fc3d21a92a0113f4b35a6d604fef71" translate="yes" xml:space="preserve">
          <source>However, if &lt;code&gt;app&lt;/code&gt;'s &lt;code&gt;package.json&lt;/code&gt; contains:</source>
          <target state="translated">ただし、 &lt;code&gt;app&lt;/code&gt; の &lt;code&gt;package.json&lt;/code&gt; に以下が含まれている場合：</target>
        </trans-unit>
        <trans-unit id="59d7e0dc24226896cd7fdbb7d61db8304a348469" translate="yes" xml:space="preserve">
          <source>However, if B@0.0.2 is published, then a fresh &lt;code&gt;npm install A&lt;/code&gt; will install:</source>
          <target state="translated">ただし、B @ 0.0.2が公開されている場合は、新しい &lt;code&gt;npm install A&lt;/code&gt; がインストールされます。</target>
        </trans-unit>
        <trans-unit id="7ee263e6656c3ba2cae64587fae330085711ca38" translate="yes" xml:space="preserve">
          <source>However, please consider upgrading to the latest version of npm. To do this, type:</source>
          <target state="translated">ただし、最新版のnpmにアップグレードすることを検討してください。これを行うには、次のようにタイプします。</target>
        </trans-unit>
        <trans-unit id="d1e4a8e0b07ccc63f3b9140667bb7bf676a868f9" translate="yes" xml:space="preserve">
          <source>However, this doesn't work as you would expect, because you want the npm install to occur when you run &lt;code&gt;docker build&lt;/code&gt;, and in this instance, &lt;code&gt;ENV&lt;/code&gt; variables aren't used, they are set for runtime only.</source>
          <target state="translated">ただし、これは期待どおりには機能しません。これは、 &lt;code&gt;docker build&lt;/code&gt; を実行するときにnpmのインストールを実行したいためです。この場合、 &lt;code&gt;ENV&lt;/code&gt; 変数は使用されず、ランタイムのみに設定されます。</target>
        </trans-unit>
        <trans-unit id="9ead980df83b76ac399687609ff1e4d56f1ff6ae" translate="yes" xml:space="preserve">
          <source>Hyphen Ranges &lt;code&gt;X.Y.Z - A.B.C&lt;/code&gt;</source>
          <target state="translated">ハイフン範囲 &lt;code&gt;X.Y.Z - A.B.C&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2fb7470dd3d7658ae825e021f3317a74d702c439" translate="yes" xml:space="preserve">
          <source>I don't want my package published in the official registry. It's private.</source>
          <target state="translated">自分のパッケージを公式レジストリに公開したくない。非公開なんだから。</target>
        </trans-unit>
        <trans-unit id="0d198fcbc8a0fb3e48a8a3c4bf2d393d175b1ade" translate="yes" xml:space="preserve">
          <source>I fixed this issue for several of my colleagues by running the following two commands:</source>
          <target state="translated">以下の2つのコマンドを実行することで、何人かの同僚のこの問題を修正しました。</target>
        </trans-unit>
        <trans-unit id="a716980353c9dcc1a9950bbb104934297c3fb4d1" translate="yes" xml:space="preserve">
          <source>IMPORTANT VERSION NOTE: these examples assume &lt;code&gt;npm@2.6.1&lt;/code&gt; or later. For older versions of &lt;code&gt;npm&lt;/code&gt;, you must specify &lt;code&gt;--depth 0&lt;/code&gt; to get the behavior described below.</source>
          <target state="translated">重要なバージョン注：これらの例では、 &lt;code&gt;npm@2.6.1&lt;/code&gt; 以降を想定しています。古いバージョンの &lt;code&gt;npm&lt;/code&gt; の場合、-- &lt;code&gt;--depth 0&lt;/code&gt; を指定して、以下で説明する動作を取得する必要があります。</target>
        </trans-unit>
        <trans-unit id="0270ca97abe5bddc53ed95fb7179da4406621a18" translate="yes" xml:space="preserve">
          <source>INTRODUCTION</source>
          <target state="translated">INTRODUCTION</target>
        </trans-unit>
        <trans-unit id="8872d98c3f5db4cb2a8d9a1cf104cdacfd29a522" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;#&amp;lt;commit-ish&amp;gt;&lt;/code&gt; is provided, it will be used to clone exactly that commit. If the commit-ish has the format &lt;code&gt;#semver:&amp;lt;semver&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;semver&amp;gt;&lt;/code&gt; can be any valid semver range or exact version, and npm will look for any tags or refs matching that range in the remote repository, much as it would for a registry dependency. If neither &lt;code&gt;#&amp;lt;commit-ish&amp;gt;&lt;/code&gt; or &lt;code&gt;#semver:&amp;lt;semver&amp;gt;&lt;/code&gt; is specified, then &lt;code&gt;master&lt;/code&gt; is used.</source>
          <target state="translated">場合は &lt;code&gt;#&amp;lt;commit-ish&amp;gt;&lt;/code&gt; 提供され、コミットその正確クローンに使用されます。commit-ishの形式が &lt;code&gt;#semver:&amp;lt;semver&amp;gt;&lt;/code&gt; の場合、 &lt;code&gt;&amp;lt;semver&amp;gt;&lt;/code&gt; は任意の有効なsemver範囲または正確なバージョンにすることができ、npmは、リモートリポジトリ内の場合と同様に、リモートリポジトリでその範囲に一致するタグまたは参照を検索しますレジストリの依存関係。どちらの場合は &lt;code&gt;#&amp;lt;commit-ish&amp;gt;&lt;/code&gt; または &lt;code&gt;#semver:&amp;lt;semver&amp;gt;&lt;/code&gt; が指定され、その後、 &lt;code&gt;master&lt;/code&gt; 使用されています。</target>
        </trans-unit>
        <trans-unit id="f2ed09d0ba71c3c9967aefc493ec0627dba3f51a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--auth-type=sso&lt;/code&gt;, the type of SSO type to use.</source>
          <target state="translated">もし &lt;code&gt;--auth-type=sso&lt;/code&gt; を使用するSSOタイプの、タイプ。</target>
        </trans-unit>
        <trans-unit id="22c6b7f8eebb652a7ac0bd781a8f9fe734e0eef7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--scope&lt;/code&gt; is provided, this will find the credentials for the registry connected to that scope, if set.</source>
          <target state="translated">場合 &lt;code&gt;--scope&lt;/code&gt; が提供され、これはそのスコープに接続されているレジストリの資格情報は、設定されている場合があります。</target>
        </trans-unit>
        <trans-unit id="8ef7e251354c8b82d68f45122c7dd6a2b8aa12c4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-g&lt;/code&gt; is specified, this will be the value of the global prefix. See &lt;code&gt;&lt;a href=&quot;../misc/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; for more detail.</source>
          <target state="translated">&lt;code&gt;-g&lt;/code&gt; が指定されている場合、これはグローバルプレフィックスの値になります。詳細については、 &lt;code&gt;&lt;a href=&quot;../misc/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="57951890111475265c8e420c0c683853e35f57d6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;app&lt;/code&gt;'s &lt;code&gt;package.json&lt;/code&gt; contains:</source>
          <target state="translated">&lt;code&gt;app&lt;/code&gt; の &lt;code&gt;package.json&lt;/code&gt; に以下が含まれている場合：</target>
        </trans-unit>
        <trans-unit id="a6065df661d05aecba3e8805559f8f5e71e3c3fc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;preshrinkwrap&lt;/code&gt;, &lt;code&gt;shrinkwrap&lt;/code&gt; or &lt;code&gt;postshrinkwrap&lt;/code&gt; are in the &lt;code&gt;scripts&lt;/code&gt; property of the &lt;code&gt;package.json&lt;/code&gt;, they will be executed in order. &lt;code&gt;preshrinkwrap&lt;/code&gt; and &lt;code&gt;shrinkwrap&lt;/code&gt; are executed before the shrinkwrap, &lt;code&gt;postshrinkwrap&lt;/code&gt; is executed afterwards. These scripts run for both &lt;code&gt;package-lock.json&lt;/code&gt; and &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt;. For example to run some postprocessing on the generated file:</source>
          <target state="translated">場合 &lt;code&gt;preshrinkwrap&lt;/code&gt; 、 &lt;code&gt;shrinkwrap&lt;/code&gt; や &lt;code&gt;postshrinkwrap&lt;/code&gt; をしている &lt;code&gt;scripts&lt;/code&gt; のプロパティ &lt;code&gt;package.json&lt;/code&gt; 、彼らは順番に実行されます。 &lt;code&gt;preshrinkwrap&lt;/code&gt; と &lt;code&gt;shrinkwrap&lt;/code&gt; 、シュリンクラップの前に実行されている &lt;code&gt;postshrinkwrap&lt;/code&gt; がその後に実行されます。これらのスクリプトは、 &lt;code&gt;package-lock.json&lt;/code&gt; と &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; の両方で実行されます。たとえば、生成されたファイルに対して後処理を実行するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="4d8c80f3f73fc1893161e9eb736731f1543ea793" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;preversion&lt;/code&gt;, &lt;code&gt;version&lt;/code&gt;, or &lt;code&gt;postversion&lt;/code&gt; are in the &lt;code&gt;scripts&lt;/code&gt; property of the package.json, they will be executed as part of running &lt;code&gt;npm version&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;preversion&lt;/code&gt; 、 &lt;code&gt;version&lt;/code&gt; 、または &lt;code&gt;postversion&lt;/code&gt; はしている &lt;code&gt;scripts&lt;/code&gt; package.jsonのプロパティ、彼らが実行しているの一部として実行される &lt;code&gt;npm version&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ea4f3ebc7a95684333a35810954531fa24fd5c2c" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;node_modules&lt;/code&gt; is already present, it will be automatically removed before &lt;code&gt;npm ci&lt;/code&gt; begins its install.</source>
          <target state="translated">&lt;code&gt;node_modules&lt;/code&gt; がすでに存在する場合は、 &lt;code&gt;npm ci&lt;/code&gt; がインストールを開始する前に自動的に削除されます。</target>
        </trans-unit>
        <trans-unit id="48660032ce5ebff886c23d1291e752901844ca6e" translate="yes" xml:space="preserve">
          <source>If a block needs to wrap to the next line, use a curly brace. Don't use it if it doesn't.</source>
          <target state="translated">ブロックが次の行まで折り返す必要がある場合は、中括弧を使用します。そうでない場合は使用しないでください。</target>
        </trans-unit>
        <trans-unit id="4f53ece0fd8c9886cb9243933cd34f18899c789e" translate="yes" xml:space="preserve">
          <source>If a command is specified, then it is run in the subshell, which then immediately terminates.</source>
          <target state="translated">コマンドを指定した場合、そのコマンドはサブシェルで実行され、直ちに終了します。</target>
        </trans-unit>
        <trans-unit id="bc20cef50268ef04512194f809a0019ad3b1d3ba" translate="yes" xml:space="preserve">
          <source>If a dependency can be used, but you would like npm to proceed if it cannot be found or fails to install, then you may put it in the &lt;code&gt;optionalDependencies&lt;/code&gt; object. This is a map of package name to version or url, just like the &lt;code&gt;dependencies&lt;/code&gt; object. The difference is that build failures do not cause installation to fail.</source>
          <target state="translated">依存関係を使用できても、それが見つからない場合やインストールに失敗した場合にnpmを続行したい場合は、 &lt;code&gt;optionalDependencies&lt;/code&gt; オブジェクトに配置できます。これは、 &lt;code&gt;dependencies&lt;/code&gt; オブジェクトと同じように、パッケージ名のバージョンまたはURLへのマップです。違いは、ビルドが失敗してもインストールが失敗しないことです。</target>
        </trans-unit>
        <trans-unit id="15ddce337798f4f86fc21b875cc17226310eb1ae" translate="yes" xml:space="preserve">
          <source>If a fix does not exist, you may want to suggest changes that address the vulnerability to the package maintainer in a pull or merge request on the package repository.</source>
          <target state="translated">修正方法が存在しない場合は、パッケージリポジトリのプルリクエストやマージリクエストでパッケージメンテナに脆弱性に対処する変更を提案するとよいでしょう。</target>
        </trans-unit>
        <trans-unit id="df4df570198852a61194e155bf30682ab5cc9bbe" translate="yes" xml:space="preserve">
          <source>If a fix exists but packages that depend on the package with the vulnerability have not been updated to include the fixed version, you may want to open a pull or merge request on the dependent package repository to use the fixed version.</source>
          <target state="translated">修正プログラムが存在するにもかかわらず、脆弱性のあるパッケージに依存しているパッケージが修正版を含むように更新されていない場合は、依存パッケージのリポジトリでプルリクエストやマージリクエストを開いて修正版を使うようにするとよいでしょう。</target>
        </trans-unit>
        <trans-unit id="3d7c9a024312fcb2da25315e60a6118fbd36aac1" translate="yes" xml:space="preserve">
          <source>If a package references to another package with a git URL, npm depends on a preinstalled git.</source>
          <target state="translated">パッケージがgit URLで他のパッケージを参照している場合、npmはプリインストールされているgitに依存します。</target>
        </trans-unit>
        <trans-unit id="27f0c9667d26852d6311c55e15f62c9739f73490" translate="yes" xml:space="preserve">
          <source>If a package would be saved at install time by the use of &lt;code&gt;--save&lt;/code&gt;, &lt;code&gt;--save-dev&lt;/code&gt;, or &lt;code&gt;--save-optional&lt;/code&gt;, then also put it in the &lt;code&gt;bundleDependencies&lt;/code&gt; list.</source>
          <target state="translated">インストール時に &lt;code&gt;--save&lt;/code&gt; 、-- &lt;code&gt;--save-dev&lt;/code&gt; 、または &lt;code&gt;--save-optional&lt;/code&gt; を使用してパッケージを保存する場合は、 &lt;code&gt;bundleDependencies&lt;/code&gt; リストにも追加します。</target>
        </trans-unit>
        <trans-unit id="56f6800a3b8eed6f2655d8b06bfa1bec6a9ce6c7" translate="yes" xml:space="preserve">
          <source>If a package's name begins with &lt;code&gt;@&lt;/code&gt;, then it is a &lt;strong&gt;scoped package&lt;/strong&gt;. The scope is everything in between the &lt;code&gt;@&lt;/code&gt; and the slash.</source>
          <target state="translated">パッケージの名前が &lt;code&gt;@&lt;/code&gt; で始まる場合は、&lt;strong&gt;スコープパッケージ&lt;/strong&gt;です。スコープは、 &lt;code&gt;@&lt;/code&gt; とスラッシュの間のすべてです。</target>
        </trans-unit>
        <trans-unit id="f18210906ab2558250fa33da8dca3949efcf3889" translate="yes" xml:space="preserve">
          <source>If a package's name begins with &lt;code&gt;@&lt;/code&gt;, then it is a scoped package. The scope is everything in between the &lt;code&gt;@&lt;/code&gt; and the slash.</source>
          <target state="translated">パッケージの名前が &lt;code&gt;@&lt;/code&gt; で始まる場合は、スコープパッケージです。スコープは、 &lt;code&gt;@&lt;/code&gt; とスラッシュの間のすべてです。</target>
        </trans-unit>
        <trans-unit id="1c4489b94e704e265d6f7ca56daa52f4d972fab4" translate="yes" xml:space="preserve">
          <source>If a partial version is provided as the first version in the inclusive range, then the missing pieces are replaced with zeroes.</source>
          <target state="translated">部分バージョンが包含範囲の最初のバージョンとして提供されている場合、欠落している部分はゼロに置き換えられます。</target>
        </trans-unit>
        <trans-unit id="0436481924c294bc5fd874a221e130da05eac9fd" translate="yes" xml:space="preserve">
          <source>If a partial version is provided as the second version in the inclusive range, then all versions that start with the supplied parts of the tuple are accepted, but nothing that would be greater than the provided tuple parts.</source>
          <target state="translated">包含範囲内の2番目のバージョンとして部分的なバージョンが提供された場合、タプルの提供された部分から始まるすべてのバージョンが受け入れられますが、提供されたタプルの部分よりも大きいものは受け入れられません。</target>
        </trans-unit>
        <trans-unit id="8ee1e7cf814d87aca3e0e5ea712f6e5b9838e776" translate="yes" xml:space="preserve">
          <source>If a project is going to be shared with others, it should start at &lt;code&gt;1.0.0&lt;/code&gt;, (though some projects on npm don't follow this rule).</source>
          <target state="translated">プロジェクトを他のユーザーと共有する場合、プロジェクトは &lt;code&gt;1.0.0&lt;/code&gt; から開始する必要があります（ただし、npmの一部のプロジェクトはこのルールに従っていません）。</target>
        </trans-unit>
        <trans-unit id="eb03d55c50238960b490fcf51b8fd71bfcae6ba0" translate="yes" xml:space="preserve">
          <source>If a project specifies git urls for dependencies these are shown in parentheses after the name@version to make it easier for users to recognize potential forks of a project.</source>
          <target state="translated">プロジェクトが依存関係のための git urls を指定している場合は、name@version の後に括弧をつけて表示することで、ユーザーがプロジェクトのフォークの可能性を認識しやすくします。</target>
        </trans-unit>
        <trans-unit id="5680893cbbd86d1b4604336b685fb5b36fddb68a" translate="yes" xml:space="preserve">
          <source>If a suitable version exists at the target location in the tree already, then it will be left untouched, but the other duplicates will be deleted.</source>
          <target state="translated">ツリー内の目的の場所に適切なバージョンが既に存在する場合、それはそのままにされますが、他の重複したものは削除されます。</target>
        </trans-unit>
        <trans-unit id="c44df5e08784adf253f0193f59c87cf10a9d5137" translate="yes" xml:space="preserve">
          <source>If a term starts with &lt;code&gt;/&lt;/code&gt;, then it's interpreted as a regular expression and supports standard JavaScript RegExp syntax. A trailing &lt;code&gt;/&lt;/code&gt; will be ignored in this case. (Note that many regular expression characters must be escaped or quoted in most shells.)</source>
          <target state="translated">用語が &lt;code&gt;/&lt;/code&gt; で始まる場合、正規表現として解釈され、標準のJavaScript RegExp構文をサポートします。この場合、末尾の &lt;code&gt;/&lt;/code&gt; は無視されます。（ほとんどのシェルでは、多くの正規表現文字をエスケープまたは引用符で囲む必要があることに注意してください。）</target>
        </trans-unit>
        <trans-unit id="20fc3038ec0e74393eb977b772dbde9536c74be9" translate="yes" xml:space="preserve">
          <source>If a url is provided, it will be used by the &lt;code&gt;npm bugs&lt;/code&gt; command.</source>
          <target state="translated">URLが指定されている場合、それは &lt;code&gt;npm bugs&lt;/code&gt; コマンドで使用されます。</target>
        </trans-unit>
        <trans-unit id="0f73dfd15f43780934bce4eb36b585671d6b010c" translate="yes" xml:space="preserve">
          <source>If a version has a prerelease tag (for example, &lt;code&gt;1.2.3-alpha.3&lt;/code&gt;) then it will only be allowed to satisfy comparator sets if at least one comparator with the same &lt;code&gt;[major, minor, patch]&lt;/code&gt; tuple also has a prerelease tag.</source>
          <target state="translated">バージョンにプレリリースタグ（たとえば、 &lt;code&gt;1.2.3-alpha.3&lt;/code&gt; ）がある場合、同じ &lt;code&gt;[major, minor, patch]&lt;/code&gt; タプルを持つ少なくとも1つのコンパレータにもプレリリースタグがある場合にのみ、コンパレータセットを満たすことが許可されます。。</target>
        </trans-unit>
        <trans-unit id="9b4929cadfd908e20c25fc75db0a9941a9877fb4" translate="yes" xml:space="preserve">
          <source>If a version range is provided, then data will be printed for every matching version of the package. This will show which version of jsdom was required by each matching version of yui3:</source>
          <target state="translated">バージョン範囲が指定されている場合は、一致するパッケージのバージョンごとにデータが出力されます。これは、一致するyui3の各バージョンで必要とされたjsdomのバージョンを表示します。</target>
        </trans-unit>
        <trans-unit id="0f2e4f0b4924de3f7090997ba5e40815fd37fa79" translate="yes" xml:space="preserve">
          <source>If both &lt;code&gt;package-lock.json&lt;/code&gt; and &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; are present in the root of a package, &lt;code&gt;package-lock.json&lt;/code&gt; will be completely ignored.</source>
          <target state="translated">&lt;code&gt;package-lock.json&lt;/code&gt; と &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; の両方がパッケージのルートに存在する場合、 &lt;code&gt;package-lock.json&lt;/code&gt; は完全に無視されます。</target>
        </trans-unit>
        <trans-unit id="a3b78a4d89fe55d6a91ad719fbd39a1d95e11922" translate="yes" xml:space="preserve">
          <source>If called from a non-prerelease version, the &lt;code&gt;prerelease&lt;/code&gt; will work the same as &lt;code&gt;prepatch&lt;/code&gt;. It increments the patch version, then makes a prerelease. If the input version is already a prerelease it simply increments it.</source>
          <target state="translated">プレリリース以外のバージョンから呼び出された場合、 &lt;code&gt;prerelease&lt;/code&gt; は &lt;code&gt;prepatch&lt;/code&gt; と同じように機能します。パッチバージョンを増分し、プレリリースを作成します。入力バージョンがすでにプレリリースである場合は、単純に増分します。</target>
        </trans-unit>
        <trans-unit id="d6b890a67153d0584c110f65f4ece5d7500121c6" translate="yes" xml:space="preserve">
          <source>If dependencies in the package lock do not match those in &lt;code&gt;package.json&lt;/code&gt;, &lt;code&gt;npm ci&lt;/code&gt; will exit with an error, instead of updating the package lock.</source>
          <target state="translated">パッケージロックの依存関係が &lt;code&gt;package.json&lt;/code&gt; の依存関係と一致しない場合、 &lt;code&gt;npm ci&lt;/code&gt; はパッケージロックを更新する代わりにエラーで終了します。</target>
        </trans-unit>
        <trans-unit id="569701b17684cb74444fe56580d01b59275f64a5" translate="yes" xml:space="preserve">
          <source>If false, never shows colors. If &lt;code&gt;&quot;always&quot;&lt;/code&gt; then always shows colors. If true, then only prints color codes for tty file descriptors.</source>
          <target state="translated">falseの場合、色は表示されません。 &lt;code&gt;&quot;always&quot;&lt;/code&gt; 場合、常に色が表示されます。trueの場合、ttyファイル記述子のカラーコードのみを印刷します。</target>
        </trans-unit>
        <trans-unit id="1507092bca4d6154b6af0d6d45fe0716c8766503" translate="yes" xml:space="preserve">
          <source>If false, then help-search will just list out the help topics found.</source>
          <target state="translated">falseの場合は、ヘルプ検索は見つかったヘルプトピックをリストアップするだけです。</target>
        </trans-unit>
        <trans-unit id="c4bf2d25cf4f1f895a14c4ba9b1c337fb457e53f" translate="yes" xml:space="preserve">
          <source>If it doesn't, here we'll look at the problems with this workflow when running &lt;code&gt;npm install&lt;/code&gt; inside a Docker container.</source>
          <target state="translated">そうでない場合は、Dockerコンテナ内で &lt;code&gt;npm install&lt;/code&gt; を実行したときのこのワークフローの問題を確認します。</target>
        </trans-unit>
        <trans-unit id="bc3a311453961b2bc241472ae5610b10709cc07b" translate="yes" xml:space="preserve">
          <source>If it isn't set to &lt;code&gt;&amp;lt;X&amp;gt;:\Users\&amp;lt;user&amp;gt;\AppData\Roaming\npm&lt;/code&gt;, you can run the below command to correct it:</source>
          <target state="translated">&lt;code&gt;&amp;lt;X&amp;gt;:\Users\&amp;lt;user&amp;gt;\AppData\Roaming\npm&lt;/code&gt; に設定されていない場合は、次のコマンドを実行して修正できます。</target>
        </trans-unit>
        <trans-unit id="c003d5cfe7d05bbd855b747051eb95b1870dda03" translate="yes" xml:space="preserve">
          <source>If multiple fields are requested, than each of them are prefixed with the field name.</source>
          <target state="translated">複数のフィールドが要求された場合は、それぞれのフィールド名の前にフィールド名を付けます。</target>
        </trans-unit>
        <trans-unit id="9e95e4277eabe125f10a4c42a239ce0911860221" translate="yes" xml:space="preserve">
          <source>If multiple single-character shorthands are strung together, and the resulting combination is unambiguously not some other configuration param, then it is expanded to its various component pieces. For example:</source>
          <target state="translated">複数の1文字の速記語が連結されていて、その結果の組み合わせが他の設定パラメータではないことが明確な場合は、それが様々な構成要素に展開されます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="0a26483186b5606c608a05e67cd9371220326022" translate="yes" xml:space="preserve">
          <source>If no arguments are supplied, then npm packs the current package folder.</source>
          <target state="translated">引数を与えなければ、npm は現在のパッケージフォルダをパックします。</target>
        </trans-unit>
        <trans-unit id="3c40aa5bf6a71b95208f2744cf0a772260354967" translate="yes" xml:space="preserve">
          <source>If no package name is specified, all packages in the specified location (global or local) will be updated.</source>
          <target state="translated">パッケージ名を指定しない場合は、指定した場所 (グローバルまたはローカル)のすべてのパッケージが更新されます。</target>
        </trans-unit>
        <trans-unit id="6649998c77c7d50428133f88e4ef304ab6eb0eba" translate="yes" xml:space="preserve">
          <source>If no package root is found, then the current folder is used.</source>
          <target state="translated">パッケージのルートが見つからない場合は、現在のフォルダが使用されます。</target>
        </trans-unit>
        <trans-unit id="1bf0ab6e625197cbbb498914873193ce82f38923" translate="yes" xml:space="preserve">
          <source>If no security vulnerabilities are found, this means that packages with known vulnerabilities were not found in your package dependency tree. Since the advisory database can be updated at any time, we recommend regularly running &lt;code&gt;npm audit&lt;/code&gt; manually, or adding &lt;code&gt;npm audit&lt;/code&gt; to your continuous integration process.</source>
          <target state="translated">セキュリティの脆弱性が見つからない場合、これは既知の脆弱性を持つパッケージがパッケージの依存関係ツリーで見つからなかったことを意味します。アドバイザリデータベースはいつでも更新できるため、定期的に &lt;code&gt;npm audit&lt;/code&gt; 手動で実行するか、継続的な統合プロセスに &lt;code&gt;npm audit&lt;/code&gt; を追加することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="bb5819f29eac27bda216ceca44b343dde89ee773" translate="yes" xml:space="preserve">
          <source>If no version is specified, or if all versions are removed then the root package entry is removed from the registry entirely.</source>
          <target state="translated">バージョンが指定されていない場合や、すべてのバージョンが削除された場合は、レジストリからルートパッケージのエントリが完全に削除されます。</target>
        </trans-unit>
        <trans-unit id="9d2454300690b0f722ffb3792162d2e5e5672018" translate="yes" xml:space="preserve">
          <source>If npm was invoked with root privileges, then it will change the uid to the user account or uid specified by the &lt;code&gt;user&lt;/code&gt; config, which defaults to &lt;code&gt;nobody&lt;/code&gt;. Set the &lt;code&gt;unsafe-perm&lt;/code&gt; flag to run scripts with root privileges.</source>
          <target state="translated">npmがroot権限で呼び出された場合、uidはユーザーアカウントまたは &lt;code&gt;user&lt;/code&gt; 設定で指定されたuidに変更されます。デフォルトは &lt;code&gt;nobody&lt;/code&gt; です。 &lt;code&gt;unsafe-perm&lt;/code&gt; フラグを設定して、root権限でスクリプトを実行します。</target>
        </trans-unit>
        <trans-unit id="7400638fa7134524147705d44337374ef3a99399" translate="yes" xml:space="preserve">
          <source>If one of the packages npm tries to install is a native node module and requires compiling of C++ Code, npm will use &lt;a href=&quot;https://github.com/TooTallNate/node-gyp&quot;&gt;node-gyp&lt;/a&gt; for that task. For a Unix system, &lt;a href=&quot;https://github.com/TooTallNate/node-gyp&quot;&gt;node-gyp&lt;/a&gt; needs Python, make and a buildchain like GCC. On Windows, Python and Microsoft Visual Studio C++ are needed. Python 3 is not supported by &lt;a href=&quot;https://github.com/TooTallNate/node-gyp&quot;&gt;node-gyp&lt;/a&gt;. For more information visit &lt;a href=&quot;https://github.com/TooTallNate/node-gyp&quot;&gt;the node-gyp repository&lt;/a&gt; and the &lt;a href=&quot;https://github.com/TooTallNate/node-gyp/wiki&quot;&gt;node-gyp Wiki&lt;/a&gt;.</source>
          <target state="translated">npmがインストールしようとしているパッケージの1つがネイティブノードモジュールであり、C ++コードのコンパイルが必要な場合、npmはそのタスクに&lt;a href=&quot;https://github.com/TooTallNate/node-gyp&quot;&gt;node-gyp&lt;/a&gt;を使用します。Unixシステムの場合、&lt;a href=&quot;https://github.com/TooTallNate/node-gyp&quot;&gt;node-gypに&lt;/a&gt;はPython、make、およびGCCのようなビルドチェーンが必要です。Windowsでは、PythonおよびMicrosoft Visual Studio C ++が必要です。Python 3は&lt;a href=&quot;https://github.com/TooTallNate/node-gyp&quot;&gt;node-gyp&lt;/a&gt;ではサポートされていません。詳細について&lt;a href=&quot;https://github.com/TooTallNate/node-gyp&quot;&gt;は、node-gypリポジトリ&lt;/a&gt;と&lt;a href=&quot;https://github.com/TooTallNate/node-gyp/wiki&quot;&gt;node-gyp Wikiにアクセスしてください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fc864e3b6bab6389bd387a987ccf3be36b875576" translate="yes" xml:space="preserve">
          <source>If only a single file is provided, then it's installed such that it is the result from &lt;code&gt;man &amp;lt;pkgname&amp;gt;&lt;/code&gt;, regardless of its actual filename. For example:</source>
          <target state="translated">単一のファイルのみが提供されている場合は、実際のファイル名に関係なく、 &lt;code&gt;man &amp;lt;pkgname&amp;gt;&lt;/code&gt; の結果になるようにインストールされます。例えば：</target>
        </trans-unit>
        <trans-unit id="b869b809f6a2500b405e0aa198795a77f1057b96" translate="yes" xml:space="preserve">
          <source>If only a single string field for a single version is output, then it will not be colorized or quoted, so as to enable piping the output to another command. If the field is an object, it will be output as a JavaScript object literal.</source>
          <target state="translated">単一バージョンの文字列フィールドのみが出力された場合は、別のコマンドへのパイピングを可能にするために、色付けや引用符付けは行われません。フィールドがオブジェクトの場合は、JavaScriptのオブジェクトリテラルとして出力されます。</target>
        </trans-unit>
        <trans-unit id="054c1fce7352d2a625eb25fbc22cd025f44ef473" translate="yes" xml:space="preserve">
          <source>If only one result is found, then it will show that help topic.</source>
          <target state="translated">結果が 1 つしか見つからない場合は、そのヘルプ トピックが表示されます。</target>
        </trans-unit>
        <trans-unit id="de6fe34de375ee6f1e79646682c56c1427521391" translate="yes" xml:space="preserve">
          <source>If run in a git repo, it will also create a version commit and tag. This behavior is controlled by &lt;code&gt;git-tag-version&lt;/code&gt; (see below), and can be disabled on the command line by running &lt;code&gt;npm --no-git-tag-version version&lt;/code&gt;. It will fail if the working directory is not clean, unless the &lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--force&lt;/code&gt; flag is set.</source>
          <target state="translated">gitリポジトリで実行すると、バージョンコミットとタグも作成されます。この動作は &lt;code&gt;git-tag-version&lt;/code&gt; （以下を参照）によって制御され、 &lt;code&gt;npm --no-git-tag-version version&lt;/code&gt; を実行してコマンドラインで無効にすることができます。 &lt;code&gt;-f&lt;/code&gt; または &lt;code&gt;--force&lt;/code&gt; フラグが設定されていない限り、作業ディレクトリがクリーンでない場合は失敗します。</target>
        </trans-unit>
        <trans-unit id="1d16c5bd45666faa46ba1509357c1c2d53c6ffb0" translate="yes" xml:space="preserve">
          <source>If security vulnerabilities are found and updates are available, you can either:</source>
          <target state="translated">セキュリティ上の脆弱性が発見され、アップデートが可能になった場合は、どちらかの方法があります。</target>
        </trans-unit>
        <trans-unit id="77251400860c48bbdeb844524e55c1243775ff50" translate="yes" xml:space="preserve">
          <source>If security vulnerabilities are found, but no patches are available, the audit report will provide information about the vulnerability so you can investigate further.</source>
          <target state="translated">セキュリティ上の脆弱性が発見されたが、パッチが利用できない場合は、監査報告書に脆弱性に関する情報が記載されるので、さらに調査することができます。</target>
        </trans-unit>
        <trans-unit id="5801cfbc2b83ca70d368b7d4385d952af355e54e" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;&quot;warn-only&quot;&lt;/code&gt;, never modify &lt;code&gt;PATH&lt;/code&gt; but print a warning if &lt;code&gt;npm&lt;/code&gt; thinks that you may want to run it with &lt;code&gt;true&lt;/code&gt;, e.g. because the &lt;code&gt;node&lt;/code&gt; executable in the &lt;code&gt;PATH&lt;/code&gt; is not the one &lt;code&gt;npm&lt;/code&gt; was invoked with.</source>
          <target state="translated">もしセットに &lt;code&gt;&quot;warn-only&quot;&lt;/code&gt; 、修正することはありません &lt;code&gt;PATH&lt;/code&gt; をしかし場合に警告を印刷する &lt;code&gt;npm&lt;/code&gt; あなたがそれを実行したいことを考えて &lt;code&gt;true&lt;/code&gt; 、例えばので、 &lt;code&gt;node&lt;/code&gt; で実行可能な &lt;code&gt;PATH&lt;/code&gt; がない1つの &lt;code&gt;npm&lt;/code&gt; で呼び出されました。</target>
        </trans-unit>
        <trans-unit id="8c9013120c34758241328606ee598ba22585389b" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;auto&lt;/code&gt;, only add that directory to the &lt;code&gt;PATH&lt;/code&gt; environment variable if the &lt;code&gt;node&lt;/code&gt; executable with which &lt;code&gt;npm&lt;/code&gt; was invoked and the one that is found first on the &lt;code&gt;PATH&lt;/code&gt; are different.</source>
          <target state="translated">&lt;code&gt;auto&lt;/code&gt; に設定されている場合、 &lt;code&gt;npm&lt;/code&gt; が呼び出された実行可能 &lt;code&gt;node&lt;/code&gt; と &lt;code&gt;PATH&lt;/code&gt; で最初に見つかったノード実行可能ファイルが異なる場合にのみ、 &lt;code&gt;PATH&lt;/code&gt; 環境変数にそのディレクトリを追加します。</target>
        </trans-unit>
        <trans-unit id="ac147944fd81371dc1e2d679055f62ac504b2484" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;false&lt;/code&gt;, never modify &lt;code&gt;PATH&lt;/code&gt; with that.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; に設定した場合は、それを使用して &lt;code&gt;PATH&lt;/code&gt; を変更しないでください。</target>
        </trans-unit>
        <trans-unit id="0028dd3405a76ed1528c1600c1754285bfb1c39d" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;true&lt;/code&gt;, add the directory in which the current &lt;code&gt;node&lt;/code&gt; executable resides to the &lt;code&gt;PATH&lt;/code&gt; environment variable when running scripts, even if that means that &lt;code&gt;npm&lt;/code&gt; will invoke a different &lt;code&gt;node&lt;/code&gt; executable than the one which it is running.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; に設定した場合、スクリプトを実行するときに、現在の &lt;code&gt;node&lt;/code&gt; 実行可能ファイルが存在するディレクトリを &lt;code&gt;PATH&lt;/code&gt; 環境変数に追加します。これは、 &lt;code&gt;npm&lt;/code&gt; が実行中の &lt;code&gt;node&lt;/code&gt; 実行可能ファイルとは異なるノード実行可能ファイルを呼び出すことを意味します。</target>
        </trans-unit>
        <trans-unit id="aadbb350b17afe724523ee3f2e3038c5226fdb4a" translate="yes" xml:space="preserve">
          <source>If set to false, then ignore &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; files when installing. This will also prevent &lt;em&gt;writing&lt;/em&gt;&lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; if &lt;code&gt;save&lt;/code&gt; is true.</source>
          <target state="translated">falseに設定した場合、インストール時に &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; ファイルを無視します。これ &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; 、 &lt;code&gt;save&lt;/code&gt; がtrueの場合、npm-shrinkwrap.jsonの&lt;em&gt;書き込み&lt;/em&gt;も防止されます。</target>
        </trans-unit>
        <trans-unit id="e39fa49ee4061936e6e40c3e00da5a5dd742b83e" translate="yes" xml:space="preserve">
          <source>If set to false, then ignore &lt;code&gt;package-lock.json&lt;/code&gt; files when installing. This will also prevent &lt;em&gt;writing&lt;/em&gt;&lt;code&gt;package-lock.json&lt;/code&gt; if &lt;code&gt;save&lt;/code&gt; is true.</source>
          <target state="translated">falseに設定した場合、インストール時に &lt;code&gt;package-lock.json&lt;/code&gt; ファイルを無視します。これ &lt;code&gt;package-lock.json&lt;/code&gt; 、 &lt;code&gt;save&lt;/code&gt; がtrueの場合、package-lock.jsonの&lt;em&gt;書き込み&lt;/em&gt;も防止されます。</target>
        </trans-unit>
        <trans-unit id="c9114da8dfc7cb9581eb626f22e1a555ad3f41c8" translate="yes" xml:space="preserve">
          <source>If set to true, it will update only the &lt;code&gt;package-lock.json&lt;/code&gt;, instead of checking &lt;code&gt;node_modules&lt;/code&gt; and downloading dependencies.</source>
          <target state="translated">trueに設定すると、それだけで更新する &lt;code&gt;package-lock.json&lt;/code&gt; 代わりにチェックする、 &lt;code&gt;node_modules&lt;/code&gt; をして依存関係をダウンロードします。</target>
        </trans-unit>
        <trans-unit id="f15141c832294834e815a97158b834354f8a54d8" translate="yes" xml:space="preserve">
          <source>If set to true, then npm will stubbornly refuse to install (or even consider installing) any package that claims to not be compatible with the current Node.js version.</source>
          <target state="translated">true に設定すると、現在の Node.js のバージョンと互換性がないと主張するパッケージのインストールを npm が頑なに拒否します (あるいはインストールを検討することさえも)。</target>
        </trans-unit>
        <trans-unit id="cf733046b8742d5c68de251d2fab75b162855c6d" translate="yes" xml:space="preserve">
          <source>If set to true, then the &lt;code&gt;npm version&lt;/code&gt; command will commit the new package version using &lt;code&gt;-S&lt;/code&gt; to add a signature.</source>
          <target state="translated">trueに設定すると、 &lt;code&gt;npm version&lt;/code&gt; コマンドは &lt;code&gt;-S&lt;/code&gt; を使用して新しいパッケージバージョンをコミットし、署名を追加します。</target>
        </trans-unit>
        <trans-unit id="57a1bf4e27267e37abfb1070df3eb3f0fd3d8039" translate="yes" xml:space="preserve">
          <source>If set to true, then the &lt;code&gt;npm version&lt;/code&gt; command will tag the version using &lt;code&gt;-s&lt;/code&gt; to add a signature.</source>
          <target state="translated">trueに設定すると、 &lt;code&gt;npm version&lt;/code&gt; コマンドは &lt;code&gt;-s&lt;/code&gt; を使用してバージョンにタグを付け、署名を追加します。</target>
        </trans-unit>
        <trans-unit id="8f8eed91582837e4e882b1d3d7ced8f8128a5df9" translate="yes" xml:space="preserve">
          <source>If set, alters the prefix used when tagging a new version when performing a version increment using &lt;code&gt;npm-version&lt;/code&gt;. To remove the prefix altogether, set it to the empty string: &lt;code&gt;&quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">設定されている場合、 &lt;code&gt;npm-version&lt;/code&gt; を使用してバージョンの増分を実行するときに、新しいバージョンにタグを付けるときに使用されるプレフィックスを変更します。プレフィックスを完全に削除するには、プレフィックスを空の文字列 &lt;code&gt;&quot;&quot;&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="7e3d26e76680cd83b71bd3591244d5b2a8b41d6e" translate="yes" xml:space="preserve">
          <source>If someone is planning on downloading and using your module in their program, then they probably don't want or need to download and build the external test or documentation framework that you use.</source>
          <target state="translated">もし誰かがあなたのモジュールをダウンロードして自分のプログラムで使おうと計画しているのであれば、あなたが使う外部テストやドキュメントのフレームワークをダウンロードして構築する必要はないでしょう。</target>
        </trans-unit>
        <trans-unit id="1a163bca1a67e9765074e705fd66d7418d24a9bb" translate="yes" xml:space="preserve">
          <source>If specified, save configuration indicating that all requests to the given registry should include authorization information. Useful for private registries. Can be used with &lt;code&gt;--registry&lt;/code&gt; and / or &lt;code&gt;--scope&lt;/code&gt;, e.g.</source>
          <target state="translated">指定されている場合、指定されたレジストリーへのすべての要求に許可情報が含まれるべきであることを示す構成を保存します。プライベートレジストリに役立ちます。 &lt;code&gt;--registry&lt;/code&gt; および/または &lt;code&gt;--scope&lt;/code&gt; とともに使用できます。例：</target>
        </trans-unit>
        <trans-unit id="c857172dfd36dae227e73a2d3392843801682f6a" translate="yes" xml:space="preserve">
          <source>If specified, the user and login credentials given will be associated with the specified scope. See &lt;code&gt;&lt;a href=&quot;../misc/scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt;. You can use both at the same time, e.g.</source>
          <target state="translated">指定された場合、指定されたユーザーおよびログイン資格情報は、指定されたスコープに関連付けられます。 &lt;code&gt;&lt;a href=&quot;../misc/scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt; を参照してください。両方を同時に使用できます。</target>
        </trans-unit>
        <trans-unit id="b21663fe93f8c189bc8c5557172407f8fc38905b" translate="yes" xml:space="preserve">
          <source>If specified, you will be logged out of the specified scope. See &lt;code&gt;&lt;a href=&quot;../misc/scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">指定した場合、指定したスコープからログアウトします。 &lt;code&gt;&lt;a href=&quot;../misc/scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="516127b76e58349d0c25460299bdd91b34f98e7a" translate="yes" xml:space="preserve">
          <source>If supplied a topic, then show the appropriate documentation page.</source>
          <target state="translated">トピックを提供した場合は、適切なドキュメント ページを表示します。</target>
        </trans-unit>
        <trans-unit id="f38c1bf71a339f1eb2e4a09c4b7aa312c58abe34" translate="yes" xml:space="preserve">
          <source>If supplied with &lt;code&gt;-m&lt;/code&gt; or &lt;code&gt;--message&lt;/code&gt; config option, npm will use it as a commit message when creating a version commit. If the &lt;code&gt;message&lt;/code&gt; config contains &lt;code&gt;%s&lt;/code&gt; then that will be replaced with the resulting version number. For example:</source>
          <target state="translated">付属の場合は &lt;code&gt;-m&lt;/code&gt; もしくは &lt;code&gt;--message&lt;/code&gt; 設定オプションバージョンコミットを作成するときに、NPMは、コミットメッセージとして使用します。 &lt;code&gt;message&lt;/code&gt; に &lt;code&gt;%s&lt;/code&gt; が含まれている場合は、結果のバージョン番号に置き換えられます。例えば：</target>
        </trans-unit>
        <trans-unit id="34a2c6a42794efcbe35cb8741d73df26150cce1e" translate="yes" xml:space="preserve">
          <source>If that doesn't work, or if you require more drastic measures, continue reading.</source>
          <target state="translated">それでもダメな場合や、もっと抜本的な対策が必要な場合は、続きを読んでみてください。</target>
        </trans-unit>
        <trans-unit id="b168aefa5cda7c70c137b4773b26d91be93d1930" translate="yes" xml:space="preserve">
          <source>If that's not the problem, or if you are seeing the message &lt;code&gt;&quot;may not mix password_sha and pbkdf2&quot;&lt;/code&gt;, then</source>
          <target state="translated">これが問題ではない場合、または &lt;code&gt;&quot;may not mix password_sha and pbkdf2&quot;&lt;/code&gt; というメッセージが表示される場合は、</target>
        </trans-unit>
        <trans-unit id="d739a7ccdd64d491088df2c34a364622fe7033ed" translate="yes" xml:space="preserve">
          <source>If the --json flag is given, the outputted fields will be JSON.</source>
          <target state="translated">jsonフラグが与えられた場合、出力されるフィールドはJSONになります。</target>
        </trans-unit>
        <trans-unit id="b53c2cf4d34bb2dec2d488bf6d245ce1ea84c384" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;--dry-run&lt;/code&gt; flag is used then no changes will actually be made.</source>
          <target state="translated">&lt;code&gt;--dry-run&lt;/code&gt; フラグが使用されている場合、実際には変更は行われません。</target>
        </trans-unit>
        <trans-unit id="8027155297514027c4973159ba7bc8d114abd24f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;--json&lt;/code&gt; flag is used then the changes &lt;code&gt;npm prune&lt;/code&gt; made (or would have made with &lt;code&gt;--dry-run&lt;/code&gt;) are printed as a JSON object.</source>
          <target state="translated">場合 &lt;code&gt;--json&lt;/code&gt; フラグが使用される変更 &lt;code&gt;npm prune&lt;/code&gt; 製の（またはで作られたであろう &lt;code&gt;--dry-run&lt;/code&gt; ）JSONオブジェクトとして印刷されます。</target>
        </trans-unit>
        <trans-unit id="45c82d46d54ce0520b99c5269f1d7281f93745bf" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;--production&lt;/code&gt; flag is specified or the &lt;code&gt;NODE_ENV&lt;/code&gt; environment variable is set to &lt;code&gt;production&lt;/code&gt;, this command will remove the packages specified in your &lt;code&gt;devDependencies&lt;/code&gt;. Setting &lt;code&gt;--no-production&lt;/code&gt; will negate &lt;code&gt;NODE_ENV&lt;/code&gt; being set to &lt;code&gt;production&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;--production&lt;/code&gt; のフラグが指定されているか &lt;code&gt;NODE_ENV&lt;/code&gt; の環境変数がに設定されている &lt;code&gt;production&lt;/code&gt; は、このコマンドは、あなたに指定されたパッケージが削除されます &lt;code&gt;devDependencies&lt;/code&gt; を。設定 &lt;code&gt;--no-production&lt;/code&gt; 否定されます &lt;code&gt;NODE_ENV&lt;/code&gt; がに設定されている &lt;code&gt;production&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3304eaff4cd5de029e1fa7549bebbb531d834536" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;-g&lt;/code&gt; flag is specified, this command will update globally installed packages.</source>
          <target state="translated">&lt;code&gt;-g&lt;/code&gt; フラグが指定されている場合、このコマンドはグローバルにインストールされたパッケージを更新します。</target>
        </trans-unit>
        <trans-unit id="54ccf51c907e90a208c5b75075c2890facbe09b8" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;color&lt;/code&gt; config is set to true, then this stream will receive colored output if it is a TTY.</source>
          <target state="translated">場合は &lt;code&gt;color&lt;/code&gt; 設定がtrueに設定されていることがTTYであれば、このストリームは、着色出力を受け取ることになります。</target>
        </trans-unit>
        <trans-unit id="97cc62f1ff1bb295869a65b6ef574c653194a607" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;global&lt;/code&gt; configuration is set to true, then npm will install packages &quot;globally&quot;.</source>
          <target state="translated">場合は &lt;code&gt;global&lt;/code&gt; 設定がtrueに設定され、その後、NPM「グローバル」のパッケージをインストールします。</target>
        </trans-unit>
        <trans-unit id="06fccde2c7402bfd28bb85e8f9d4a0de2eb0460c" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;sign-git-tag&lt;/code&gt; config is set, then the tag will be signed using the &lt;code&gt;-s&lt;/code&gt; flag to git. Note that you must have a default GPG key set up in your git config for this to work properly. For example:</source>
          <target state="translated">場合 &lt;code&gt;sign-git-tag&lt;/code&gt; 設定が設定され、その後、タグは使用して署名される &lt;code&gt;-s&lt;/code&gt; のgitにフラグを。これが正しく機能するためには、git構成でデフォルトのGPGキーを設定する必要があることに注意してください。例えば：</target>
        </trans-unit>
        <trans-unit id="1dfd7e3d94fac0b3be3b3803f4339ba6dec94e52" translate="yes" xml:space="preserve">
          <source>If the argument to &lt;code&gt;npm help&lt;/code&gt; is not a known help topic, then it will call &lt;code&gt;help-search&lt;/code&gt;. It is rarely if ever necessary to call this command directly.</source>
          <target state="translated">&lt;code&gt;npm help&lt;/code&gt; への引数が既知のヘルプトピックでない場合、 &lt;code&gt;help-search&lt;/code&gt; を呼び出します。このコマンドを直接呼び出す必要がある場合はめったにありません。</target>
        </trans-unit>
        <trans-unit id="eeb4e1c38e89af6e627dbd8029284c6f5562049f" translate="yes" xml:space="preserve">
          <source>If the dependence were on &lt;code&gt;^0.4.0&lt;/code&gt;:</source>
          <target state="translated">依存関係が &lt;code&gt;^0.4.0&lt;/code&gt; 依存している場合：</target>
        </trans-unit>
        <trans-unit id="e773d6d3395c054171482f4f4040694d220fac02" translate="yes" xml:space="preserve">
          <source>If the error persists, perhaps the published package is corrupt. Contact the package owner and have them publish a new version of the package.</source>
          <target state="translated">エラーが続く場合は、公開されているパッケージが壊れている可能性があります。パッケージの所有者に連絡して、新しいバージョンのパッケージを公開してもらってください。</target>
        </trans-unit>
        <trans-unit id="29c162a34a23f70f987df2eb0e53ecbb79fa1f94" translate="yes" xml:space="preserve">
          <source>If the filename doesn't start with the package name, then it's prefixed. So, this:</source>
          <target state="translated">ファイル名がパッケージ名で始まらない場合は、それがプレフィックスになります。だから、これは</target>
        </trans-unit>
        <trans-unit id="772700574f19d1992b817fe55ee672e22ff335ca" translate="yes" xml:space="preserve">
          <source>If the initializer is omitted (by just calling &lt;code&gt;npm init&lt;/code&gt;), init will fall back to legacy init behavior. It will ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on existing fields, dependencies, and options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use &lt;code&gt;-y&lt;/code&gt;/&lt;code&gt;--yes&lt;/code&gt; to skip the questionnaire altogether. If you pass &lt;code&gt;--scope&lt;/code&gt;, it will create a scoped package.</source>
          <target state="translated">初期化子が省略されている場合（ &lt;code&gt;npm init&lt;/code&gt; を呼び出すだけ）、initはレガシーinitの動作にフォールバックします。たくさんの質問をして、package.jsonを書いてくれます。既存のフィールド、依存関係、および選択されたオプションに基づいて合理的な推測を試みます。これは厳密に追加されるため、すでに設定されているフィールドと値を保持します。 &lt;code&gt;-y&lt;/code&gt; / &lt;code&gt;--yes&lt;/code&gt; を使用して、アンケートを完全にスキップすることもできます。 &lt;code&gt;--scope&lt;/code&gt; を渡すと、スコープ付きパッケージが作成されます。</target>
        </trans-unit>
        <trans-unit id="e5452d5b478c647ad3417acf2adecae30eb6baa6" translate="yes" xml:space="preserve">
          <source>If the package being installed contains a &lt;code&gt;prepare&lt;/code&gt; script, its &lt;code&gt;dependencies&lt;/code&gt; and &lt;code&gt;devDependencies&lt;/code&gt; will be installed, and the prepare script will be run, before the package is packaged and installed.</source>
          <target state="translated">インストールされるパッケージに &lt;code&gt;prepare&lt;/code&gt; スクリプトが含まれている場合、その &lt;code&gt;dependencies&lt;/code&gt; と &lt;code&gt;devDependencies&lt;/code&gt; がインストールされ、パッケージがパッケージ化されてインストールされる前に準備スクリプトが実行されます。</target>
        </trans-unit>
        <trans-unit id="e4c05a8dcf36400604e5172e048f2fec3b451c31" translate="yes" xml:space="preserve">
          <source>If the recommended action is a potential breaking change (semantic version major change), it will be followed by a SEMVER WARNING. If the package with the vulnerability has changed its API, you may need to make additional changes to your package's code.</source>
          <target state="translated">推奨されているアクションが潜在的な破損の変更 (セマンティックバージョンのメジャーな変更)である場合は、SEMVER WARNING の後に続きます。脆弱性を持つパッケージが API を変更した場合、パッケージのコードに追加の変更を加える必要があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="0f6bda95111aab60dc88aa27fdbb83ff20d5de51" translate="yes" xml:space="preserve">
          <source>If the repository makes use of submodules, those submodules will be cloned as well.</source>
          <target state="translated">リポジトリがサブモジュールを利用している場合、それらのサブモジュールも同様にクローンされます。</target>
        </trans-unit>
        <trans-unit id="4d7a9bcc2b51b8993f6450338e4afea7fd658505" translate="yes" xml:space="preserve">
          <source>If the same package is specified multiple times, then the file will be overwritten the second time.</source>
          <target state="translated">同じパッケージを複数回指定した場合は、2回目に上書きされます。</target>
        </trans-unit>
        <trans-unit id="33e951364eb681b51faff91fd67ae068b37aa257" translate="yes" xml:space="preserve">
          <source>If the script exits with a code other than 0, then this will abort the process.</source>
          <target state="translated">スクリプトが 0 以外のコードで終了すると、処理が中断されます。</target>
        </trans-unit>
        <trans-unit id="119469bea1208457263f524257bab468b42eca94" translate="yes" xml:space="preserve">
          <source>If the specified configuration param resolves unambiguously to a known configuration parameter, then it is expanded to that configuration parameter. For example:</source>
          <target state="translated">指定された設定パラメータが既知の設定パラメータに明確に解決された場合は、その設定パラメータに展開されます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="368f4b54ccda2bd01004e82bb77bd077ccb86962" translate="yes" xml:space="preserve">
          <source>If the topic does not exist, or if multiple terms are provided, then run the &lt;code&gt;help-search&lt;/code&gt; command to find a match. Note that, if &lt;code&gt;help-search&lt;/code&gt; finds a single subject, then it will run &lt;code&gt;help&lt;/code&gt; on that topic, so unique matches are equivalent to specifying a topic name.</source>
          <target state="translated">トピックが存在しない場合、または複数の用語が提供されている場合は、 &lt;code&gt;help-search&lt;/code&gt; コマンドを実行して一致を検索します。 &lt;code&gt;help-search&lt;/code&gt; が単一の件名を見つけると、そのトピックに対して &lt;code&gt;help&lt;/code&gt; を実行するため、一意の一致はトピック名を指定することと同等であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="d1923e6b4dd54ff75bfacac13ef5ff7c4cdfe303" translate="yes" xml:space="preserve">
          <source>If the version range matches multiple versions, than each printed value will be prefixed with the version it applies to.</source>
          <target state="translated">バージョン範囲が複数のバージョンに一致する場合、各印刷値の先頭には、それが適用されるバージョンが付けられます。</target>
        </trans-unit>
        <trans-unit id="b7c44ed92b65fd520b96593649a561e937c87560" translate="yes" xml:space="preserve">
          <source>If there is a &lt;code&gt;binding.gyp&lt;/code&gt; file in the root of your package and you have not defined an &lt;code&gt;install&lt;/code&gt; or &lt;code&gt;preinstall&lt;/code&gt; script, npm will default the &lt;code&gt;install&lt;/code&gt; command to compile using node-gyp.</source>
          <target state="translated">ある場合 &lt;code&gt;binding.gyp&lt;/code&gt; のパッケージのルートにあるファイルと、あなたが定義されていない &lt;code&gt;install&lt;/code&gt; または &lt;code&gt;preinstall&lt;/code&gt; スクリプト、NPMは、デフォルト設定されます &lt;code&gt;install&lt;/code&gt; ノード-GYPを使用してコンパイルするコマンドを。</target>
        </trans-unit>
        <trans-unit id="a84f15606e6279439c0c55ea27e7ea04118994c4" translate="yes" xml:space="preserve">
          <source>If there is a &lt;code&gt;binding.gyp&lt;/code&gt; file in the root of your package and you haven't defined your own &lt;code&gt;install&lt;/code&gt; or &lt;code&gt;preinstall&lt;/code&gt; scripts, npm will default the &lt;code&gt;install&lt;/code&gt; command to compile using node-gyp.</source>
          <target state="translated">ある場合 &lt;code&gt;binding.gyp&lt;/code&gt; のパッケージのルートにあるファイルと、あなた自身の定義されていない &lt;code&gt;install&lt;/code&gt; または &lt;code&gt;preinstall&lt;/code&gt; スクリプトを、NPMは、デフォルト設定されます &lt;code&gt;install&lt;/code&gt; ノード-GYPを使用してコンパイルするコマンドを。</target>
        </trans-unit>
        <trans-unit id="667be7754ac5577c69cadbfef184ebd9ce595483" translate="yes" xml:space="preserve">
          <source>If there is a &lt;code&gt;package.json&lt;/code&gt; file, npm installs the latest version that satisfies the &lt;a href=&quot;semantic-versioning&quot;&gt;semver rule&lt;/a&gt; declared in &lt;code&gt;package.json&lt;/code&gt;.</source>
          <target state="translated">ある場合は &lt;code&gt;package.json&lt;/code&gt; のファイルは、NPMは満足していること、最新バージョンをインストール&lt;a href=&quot;semantic-versioning&quot;&gt;semverルールが&lt;/a&gt;で宣言さ &lt;code&gt;package.json&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="0cfd7cefa2a35142d025a8f4bfc0cf472cce4d68" translate="yes" xml:space="preserve">
          <source>If there is a &lt;code&gt;server.js&lt;/code&gt; file in the root of your package, then npm will default the &lt;code&gt;start&lt;/code&gt; command to &lt;code&gt;node server.js&lt;/code&gt;.</source>
          <target state="translated">パッケージのルートに &lt;code&gt;server.js&lt;/code&gt; ファイルがある場合、npmはデフォルトで &lt;code&gt;start&lt;/code&gt; コマンドを &lt;code&gt;node server.js&lt;/code&gt; 設定します。</target>
        </trans-unit>
        <trans-unit id="d9cde2f9e426855593a69c4ed2a77df9ef120403" translate="yes" xml:space="preserve">
          <source>If there is a list of things separated by commas, and it wraps across multiple lines, put the comma at the start of the next line, directly below the token that starts the list. Put the final token in the list on a line by itself. For example:</source>
          <target state="translated">カンマで区切られたリストがあり、それが複数行に渡って折り返されている場合は、次の行の先頭にカンマを置き、リストを開始するトークンの直下に置きます。リストの最後のトークンは、それ自身で1行に置きます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="ea6a5c0c437001d1c20347ea451de019bdea31b7" translate="yes" xml:space="preserve">
          <source>If there is an &lt;code&gt;AUTHORS&lt;/code&gt; file in the root of your package, npm will treat each line as a &lt;code&gt;Name &amp;lt;email&amp;gt; (url)&lt;/code&gt; format, where email and url are optional. Lines which start with a &lt;code&gt;#&lt;/code&gt; or are blank, will be ignored.</source>
          <target state="translated">パッケージのルートに &lt;code&gt;AUTHORS&lt;/code&gt; ファイルがある場合、npmは各行を &lt;code&gt;Name &amp;lt;email&amp;gt; (url)&lt;/code&gt; 形式として扱います。ここで、emailとurlはオプションです。 &lt;code&gt;#&lt;/code&gt; で始まる行または空白行は無視されます。</target>
        </trans-unit>
        <trans-unit id="b9b1ee86cf6c00870622898eb09df4f4fc1602d3" translate="yes" xml:space="preserve">
          <source>If there is no &lt;code&gt;package.json&lt;/code&gt; file in the local directory, the latest version of the package is installed.</source>
          <target state="translated">ローカルディレクトリに &lt;code&gt;package.json&lt;/code&gt; ファイルがない場合は、パッケージの最新バージョンがインストールされます。</target>
        </trans-unit>
        <trans-unit id="2f65e04a93249793473b13da11b68a2ac781c0f1" translate="yes" xml:space="preserve">
          <source>If there is no description field in the &lt;code&gt;package.json&lt;/code&gt;, npm uses the first line of the &lt;code&gt;README.md&lt;/code&gt; or README instead. The description helps people find your package when searching npm, so it's definitely useful to make a custom description in the &lt;code&gt;package.json&lt;/code&gt; to make your package easier to find.</source>
          <target state="translated">&lt;code&gt;package.json&lt;/code&gt; に説明フィールドがない場合、npmは代わりに &lt;code&gt;README.md&lt;/code&gt; またはREADMEの最初の行を使用します。説明はnpmを検索するときに人々がパッケージを見つけやすくするため、 &lt;code&gt;package.json&lt;/code&gt; でカスタムの説明を作成してパッケージを見つけやすくすることは間違いなく役立ちます。</target>
        </trans-unit>
        <trans-unit id="893b172dbeed2128ba399b90e2b97e9bbaaae7bd" translate="yes" xml:space="preserve">
          <source>If these are the only versions of A, B, and C available in the registry, then a normal &lt;code&gt;npm install A&lt;/code&gt; will install:</source>
          <target state="translated">これらがレジストリで使用可能なA、B、Cのバージョンのみである場合、通常の &lt;code&gt;npm install A&lt;/code&gt; がインストールされます。</target>
        </trans-unit>
        <trans-unit id="bd34f051b9c9a859450c67bf19666fde0bae57f6" translate="yes" xml:space="preserve">
          <source>If this does not fix the problem, then you may have an SSL-intercepting proxy. (For example, &lt;a href=&quot;https://github.com/npm/npm/issues/7439#issuecomment-76024878&quot;&gt;https://github.com/npm/npm/issues/7439#issuecomment-76024878&lt;/a&gt;)</source>
          <target state="translated">これで問題が解決しない場合は、SSLインターセプトプロキシを使用している可能性があります。（例&lt;a href=&quot;https://github.com/npm/npm/issues/7439#issuecomment-76024878&quot;&gt;：https://github.com/npm/npm/issues/7439#issuecomment-76024878&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="a79baa1501dccf6b25b412dbc3770db8b062019d" translate="yes" xml:space="preserve">
          <source>If this is spelled &lt;code&gt;&quot;bundleDependencies&quot;&lt;/code&gt;, then that is also honored.</source>
          <target state="translated">これが &lt;code&gt;&quot;bundleDependencies&quot;&lt;/code&gt; と綴られている場合、それも受け入れられます。</target>
        </trans-unit>
        <trans-unit id="c421165ddb1a6419d5003582c3db54908923c3b4" translate="yes" xml:space="preserve">
          <source>If this is the workflow you need, please read the &lt;a href=&quot;ci-server-config&quot;&gt;CI Server Config doc&lt;/a&gt;. If that works with your system, then, perfect.</source>
          <target state="translated">これが必要なワークフローである場合は、&lt;a href=&quot;ci-server-config&quot;&gt;CIサーバー構成ドキュメント&lt;/a&gt;をお読みください。それがあなたのシステムでうまくいけば、完璧です。</target>
        </trans-unit>
        <trans-unit id="1e4d7f2ef1ffa50ec522f7fd6ae732bcbfe18a49" translate="yes" xml:space="preserve">
          <source>If true then this dependency is either a development dependency ONLY of the top level module or a transitive dependency of one. This is false for dependencies that are both a development dependency of the top level and a transitive dependency of a non-development dependency of the top level.</source>
          <target state="translated">真の場合、この依存関係は、トップレベルのモジュールのみの開発依存関係か、そのモジュールの遷移依存関係のいずれかになります。これは、トップ・レベルの開発依存関係と、トップ・レベルの非開発依存関係の遷移依存関係の両方である依存関係の場合は偽です。</target>
        </trans-unit>
        <trans-unit id="847edbadfd6b4bc213d23dfd84bac7ecd8f2a6c6" translate="yes" xml:space="preserve">
          <source>If true then this dependency is either an optional dependency ONLY of the top level module or a transitive dependency of one. This is false for dependencies that are both an optional dependency of the top level and a transitive dependency of a non-optional dependency of the top level.</source>
          <target state="translated">true の場合、この依存関係は、トップレベルのモジュールのみのオプション依存関係か、またはその 1 つの遷移依存関係のいずれかになります。これは、トップレベルのオプション依存関係と、トップレベルの非オプション依存関係の推移的依存関係の両方を持つ依存関係の場合は、false です。</target>
        </trans-unit>
        <trans-unit id="97302a8193d4df9faf5d703d554ae99a3c6bce4d" translate="yes" xml:space="preserve">
          <source>If true, npm does not run scripts specified in package.json files.</source>
          <target state="translated">true の場合、npm は package.json ファイルに指定されたスクリプトを実行しません。</target>
        </trans-unit>
        <trans-unit id="71217e7d13f6c3f9fedb66de20a207e57c1e3521" translate="yes" xml:space="preserve">
          <source>If true, npm will not exit with an error code when &lt;code&gt;run-script&lt;/code&gt; is invoked for a script that isn't defined in the &lt;code&gt;scripts&lt;/code&gt; section of &lt;code&gt;package.json&lt;/code&gt;. This option can be used when it's desirable to optionally run a script when it's present and fail if the script fails. This is useful, for example, when running scripts that may only apply for some builds in an otherwise generic CI setup.</source>
          <target state="translated">trueの場合、 &lt;code&gt;package.json&lt;/code&gt; の &lt;code&gt;scripts&lt;/code&gt; セクションで定義されていないスクリプトに対して &lt;code&gt;run-script&lt;/code&gt; が呼び出されても、npmはエラーコードで終了しません。このオプションは、スクリプトが存在するときにオプションでスクリプトを実行し、スクリプトが失敗した場合に失敗することが望ましい場合に使用できます。これは、たとえば、それ以外は一般的なCIセットアップで一部のビルドにのみ適用されるスクリプトを実行する場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="48fa6d3ae081b7072f03cec51012a8d76055beb2" translate="yes" xml:space="preserve">
          <source>If true, npm will not run &lt;code&gt;prepublish&lt;/code&gt; scripts.</source>
          <target state="translated">trueの場合、npmは &lt;code&gt;prepublish&lt;/code&gt; スクリプトを実行しません。</target>
        </trans-unit>
        <trans-unit id="a97d0d42f767ae2439db8d72d940d5d52069cb64" translate="yes" xml:space="preserve">
          <source>If true, output the npm version and exit successfully.</source>
          <target state="translated">true の場合は npm のバージョンを出力して正常終了します。</target>
        </trans-unit>
        <trans-unit id="0c8ffe463cfefa1c15217938a83af12e93fbc6fb" translate="yes" xml:space="preserve">
          <source>If true, output the npm version as well as node's &lt;code&gt;process.versions&lt;/code&gt; map, and exit successfully.</source>
          <target state="translated">trueの場合、npmバージョンとノードの &lt;code&gt;process.versions&lt;/code&gt; マップを出力して、正常に終了します。</target>
        </trans-unit>
        <trans-unit id="482ab4dc98e250c781a2b31a38fd73269a40a16c" translate="yes" xml:space="preserve">
          <source>If true, staleness checks for cached data will be bypassed, but missing data will be requested from the server. To force full offline mode, use &lt;code&gt;--offline&lt;/code&gt;.</source>
          <target state="translated">trueの場合、キャッシュされたデータの古さのチェックはバイパスされますが、欠落データはサーバーから要求されます。完全オフラインモードを強制するには、--offlineを使用し &lt;code&gt;--offline&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="99d31c13e8774050efe9372ae0a24480160b7743" translate="yes" xml:space="preserve">
          <source>If true, staleness checks for cached data will be forced, making the CLI look for updates immediately even for fresh package data.</source>
          <target state="translated">true の場合、キャッシュされたデータのスタールネスチェックが強制的に行われ、新鮮なパッケージデータであっても CLI がすぐに更新を探すようになります。</target>
        </trans-unit>
        <trans-unit id="8837d2a03ecd12ef334628291c3c105ae2ef292d" translate="yes" xml:space="preserve">
          <source>If true, success/failure metrics will be reported to the registry stored in &lt;code&gt;metrics-registry&lt;/code&gt;. These requests contain the number of successful and failing runs of the npm CLI and the time period overwhich those counts were gathered. No identifying information is included in these requests.</source>
          <target state="translated">trueの場合、成功/失敗のメトリックは、 &lt;code&gt;metrics-registry&lt;/code&gt; に格納されているレジストリに報告されます。これらのリクエストには、npm CLIの成功および失敗した実行の数と、それらのカウントが収集された期間が含まれています。これらのリクエストには識別情報は含まれていません。</target>
        </trans-unit>
        <trans-unit id="cbe9de4ed765d2ab2b06336ab288ccafa0e44b2f" translate="yes" xml:space="preserve">
          <source>If true, the &quot;long&quot; flag will cause help-search to output context around where the terms were found in the documentation.</source>
          <target state="translated">trueの場合、&quot;long &quot;フラグは、ヘルプ検索で用語がドキュメント内で見つかった場所のコンテキストを出力します。</target>
        </trans-unit>
        <trans-unit id="2a894db3106bead10e64cce9398683074fafb9c7" translate="yes" xml:space="preserve">
          <source>If true, then local installs will link if there is a suitable globally installed package.</source>
          <target state="translated">true の場合、グローバルにインストールされている適切なパッケージがあれば、ローカルのインストールはリンクされます。</target>
        </trans-unit>
        <trans-unit id="f0d14086145ef1a7585e26a5ef6703ec42c89b5a" translate="yes" xml:space="preserve">
          <source>If true, this is the bundled dependency and will be installed by the parent module. When installing, this module will be extracted from the parent module during the extract phase, not installed as a separate dependency.</source>
          <target state="translated">true の場合、これはバンドルされた依存関係であり、親モジュールによってインストールされます。インストール時には、このモジュールは抽出フェーズで親モジュールから抽出され、別個の依存関係としてはインストールされません。</target>
        </trans-unit>
        <trans-unit id="5282a1f9a5e49fe38dc4f9f3fdd1765afd97a951" translate="yes" xml:space="preserve">
          <source>If true, writes an &lt;code&gt;npm-debug&lt;/code&gt; log to &lt;code&gt;_logs&lt;/code&gt; and timing information to &lt;code&gt;_timing.json&lt;/code&gt;, both in your cache. &lt;code&gt;_timing.json&lt;/code&gt; is a newline delimited list of JSON objects. You can quickly view it with this &lt;a href=&quot;https://www.npmjs.com/package/json&quot;&gt;json&lt;/a&gt; command line: &lt;code&gt;json -g &amp;lt; ~/.npm/_timing.json&lt;/code&gt;.</source>
          <target state="translated">trueの場合、 &lt;code&gt;npm-debug&lt;/code&gt; ログを &lt;code&gt;_logs&lt;/code&gt; に書き込み、タイミング情報をキャッシュ内の &lt;code&gt;_timing.json&lt;/code&gt; に書き込みます。 &lt;code&gt;_timing.json&lt;/code&gt; は、JSONオブジェクトの改行区切りリストです。次の&lt;a href=&quot;https://www.npmjs.com/package/json&quot;&gt;json&lt;/a&gt;コマンドラインですばやく表示できます： &lt;code&gt;json -g &amp;lt; ~/.npm/_timing.json&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a26ed1bb7557dcfaeaedcb2665e8277262dbfdd7" translate="yes" xml:space="preserve">
          <source>If value is omitted, then it sets it to &quot;true&quot;.</source>
          <target state="translated">値が省略された場合は &quot;true &quot;に設定されます。</target>
        </trans-unit>
        <trans-unit id="d9c4614e0149bcf2af97ab3d47ae5b43c707377e" translate="yes" xml:space="preserve">
          <source>If we define a package.json like this:</source>
          <target state="translated">このようにpackage.jsonを定義すると</target>
        </trans-unit>
        <trans-unit id="bd374dbe9cd6eb4747863c6511879069a1534a71" translate="yes" xml:space="preserve">
          <source>If we see that the package's publisher is intentionally misleading others by misusing your registered mark without permission, we will transfer the package name to you. Otherwise, we will contact the package publisher and ask them to clear up any confusion with changes to their package's &lt;code&gt;README&lt;/code&gt; file or metadata.</source>
          <target state="translated">パッケージの発行元が登録商標を不正に使用することにより、意図的に他のユーザーに誤解を与えていると判断した場合は、パッケージ名を転送します。それ以外の場合は、パッケージ発行元に連絡して、パッケージの &lt;code&gt;README&lt;/code&gt; ファイルまたはメタデータの変更による混乱を解消するよう依頼します。</target>
        </trans-unit>
        <trans-unit id="23c3a2535c6d83e32e30a73a30009b54ba7c5b13" translate="yes" xml:space="preserve">
          <source>If you also want to be able to easily install it elsewhere after packing it up into a tarball.</source>
          <target state="translated">また、タールボールに詰めてから他の場所に簡単にインストールできるようにしたい場合。</target>
        </trans-unit>
        <trans-unit id="3bff4422bec68858ccc988dd7a3621c833b579ef" translate="yes" xml:space="preserve">
          <source>If you are entering what seems to be a valid OTP but you see an error, be sure that you are using the correct authenticator account. In the screen shot below, the current account in Authy was set incorrectly because the developer had multiple npm test accounts. This will cause the OTP to fail. Also, as stated earlier, when you reset 2fa after it has been disabled, the authenticator might create a second account with the same name. Please see the authenticator documentation to delete the old account.</source>
          <target state="translated">有効な OTP を入力しているように見えるが、エラーが表示される場合は、正しい認証アカウントを使用していることを確認してください。下のスクリーンショットでは、開発者が複数の npm テストアカウントを持っていたため、Authy の現在のアカウントが正しく設定されていませんでした。これが原因でOTPが失敗してしまいます。また、前述の通り、2faを無効にした後にリセットすると、認証機能が同じ名前の2つ目のアカウントを作成してしまうことがあります。古いアカウントを削除するには、認証機能のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="23261baf86d70c5ed07747b1e46d416d8bc69aaa" translate="yes" xml:space="preserve">
          <source>If you are having trouble with &lt;code&gt;npm install&lt;/code&gt;, use the &lt;code&gt;-verbose&lt;/code&gt; option to see more details.</source>
          <target state="translated">&lt;code&gt;npm install&lt;/code&gt; で問題が発生した場合は、 &lt;code&gt;-verbose&lt;/code&gt; オプションを使用して詳細を確認してください。</target>
        </trans-unit>
        <trans-unit id="b832c4f9a5486f3c304fe863acdf931cc155db26" translate="yes" xml:space="preserve">
          <source>If you are logged out, login normally using your login and npm password. When prompted for an OTP, enter a recovery code. (Note that this might create a second authenticator account with the same npm account name. Be sure to use the newly created account.)</source>
          <target state="translated">ログアウトしている場合は、ログインと npm のパスワードを使って通常通りログインします。OTP の入力を求められたら、リカバリーコードを入力します。(これにより、同じ npm アカウント名で 2 つ目の認証アカウントが作成される可能性があることに注意してください。必ず新しく作成したアカウントを使用してください)。</target>
        </trans-unit>
        <trans-unit id="53f5e6386b89712ad03efe73dc8da3a6218fa474" translate="yes" xml:space="preserve">
          <source>If you are using a license that hasn't been assigned an SPDX identifier, or if you are using a custom license, use a string value like this one:</source>
          <target state="translated">SPDX 識別子が割り当てられていないライセンスを使用している場合、またはカスタムライセンスを使用している場合は、このような文字列値を使用します。</target>
        </trans-unit>
        <trans-unit id="fbfebe42ed6c4c634dcce3dbd44a3d8d4810c681" translate="yes" xml:space="preserve">
          <source>If you are using deployment servers or testing with Continuous Intergration servers, you'll need a way to download your private packages to those servers. These are the steps:</source>
          <target state="translated">デプロイメントサーバを使用している場合や、Continuous Intergration サーバを使用してテストを行う場合は、プライベートパッケージをそれらのサーバにダウンロードする方法が必要になります。以下にその手順を示します。</target>
        </trans-unit>
        <trans-unit id="45ccd7c7d00589cb11b56f16a27c5d73958dac16" translate="yes" xml:space="preserve">
          <source>If you are using npm version 5.2 or greater, explore &lt;a href=&quot;https://www.npmjs.com/package/npx&quot;&gt;npx&lt;/a&gt; as an alternative way to run global commands, especially if you just need a command occassionally. Click &lt;a href=&quot;https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b&quot;&gt;here&lt;/a&gt; to read an excellent article about npx.</source>
          <target state="translated">npmバージョン5.2以降を使用している場合は、グローバルコマンドを実行する別の方法として&lt;a href=&quot;https://www.npmjs.com/package/npx&quot;&gt;npx&lt;/a&gt;を調べてください。特に、たまにコマンドが必要なだけの場合に役立ちます。npxに関する優れた記事を読むには、ここをクリック&lt;a href=&quot;https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b&quot;&gt;し&lt;/a&gt;てください。</target>
        </trans-unit>
        <trans-unit id="5cd268469e15a660cf52aad0ebf7382c746acb34" translate="yes" xml:space="preserve">
          <source>If you are using version 2.6.0 or less</source>
          <target state="translated">バージョン2.6.0以下をお使いの場合</target>
        </trans-unit>
        <trans-unit id="121c8478d588883faca9c20fc696eb5fb752173f" translate="yes" xml:space="preserve">
          <source>If you ask npm to install a package and don't tell it a specific version, then it will install the specified tag.</source>
          <target state="translated">npmにパッケージのインストールを依頼して、特定のバージョンを教えなければ、指定したタグをインストールしてくれます。</target>
        </trans-unit>
        <trans-unit id="105ffb4ded9b92363d8eac2a42d7d24108678c32" translate="yes" xml:space="preserve">
          <source>If you can not install it locally, you'll have problems trying to publish it. Or, worse yet, you'll be able to publish it, but you'll be publishing a broken or pointless package. So don't do that.</source>
          <target state="translated">ローカルにインストールできない場合、それを公開しようとすると問題が発生します。あるいは、もっと悪いことに、公開はできても、壊れたパッケージや無意味なパッケージを公開することになるでしょう。だから、そんなことはしないようにしましょう。</target>
        </trans-unit>
        <trans-unit id="75292446e69aa1504c1bc32a371068b32b1490c3" translate="yes" xml:space="preserve">
          <source>If you cannot locate the device that provided second-factor authentication:</source>
          <target state="translated">第二要素認証を提供したデバイスが見つからない場合。</target>
        </trans-unit>
        <trans-unit id="39aaa0035119a8b16199c9d7368118dadc59fcb7" translate="yes" xml:space="preserve">
          <source>If you choose to share your packages publicly, there is no cost. To use and share private packages, you need to upgrade your account. To share with others, create organizations, called &lt;strong&gt;npm Orgs&lt;/strong&gt;, and invite others to work with you, privately (for a fee) or publicly (for free). Or you can sign up for a custom, private type of npm for your company, called &lt;strong&gt;npmE&lt;/strong&gt; for npm Enterprise.</source>
          <target state="translated">パッケージを公開で共有することを選択した場合、費用はかかりません。プライベートパッケージを使用して共有するには、アカウントをアップグレードする必要があります。他の人と共有するには、&lt;strong&gt;npm Orgs&lt;/strong&gt;と呼ばれる組織を作成し、個人的に（有料で）または公的に（無料で）一緒に働くように他の人を招待します。または、npm Enterpriseの&lt;strong&gt;npmE&lt;/strong&gt;と呼ばれる、会社のカスタムのプライベートタイプのnpmにサインアップすることもできます。</target>
        </trans-unit>
        <trans-unit id="decaa67cb4fdd5f95ab3e60e8c7c46f665d53599" translate="yes" xml:space="preserve">
          <source>If you depend on modules that define executable scripts, like test suites, then those executables will be added to the &lt;code&gt;PATH&lt;/code&gt; for executing the scripts. So, if your package.json has this:</source>
          <target state="translated">テストスイートなどの実行可能スクリプトを定義するモジュールに依存している場合、それらの実行可能ファイルは、スクリプトを実行するための &lt;code&gt;PATH&lt;/code&gt; に追加されます。したがって、package.jsonに次のように設定すると、</target>
        </trans-unit>
        <trans-unit id="55889859e8aaa5ed5ecee9cadba6d9838a4bb49b" translate="yes" xml:space="preserve">
          <source>If you do not want to fix the vulnerability or update the dependent package yourself, open an issue in the package or dependent package issue tracker.</source>
          <target state="translated">脆弱性を修正したり、依存パッケージを自分で更新したりしたくない場合は、パッケージや依存パッケージのイシュートラッカーで問題を開いてください。</target>
        </trans-unit>
        <trans-unit id="9e5eafa9f6959edac93507abe5ee9296634383e6" translate="yes" xml:space="preserve">
          <source>If you enable 2-factor authorization, you will need to enter the second factor at various points as you use npm. This table explains these details.</source>
          <target state="translated">2ファクタ認証を有効にすると、npmを使用する際に様々なポイントで2番目のファクタを入力する必要があります。この表では、これらの詳細を説明します。</target>
        </trans-unit>
        <trans-unit id="9574168b04aeed8927594be7bcadb72733fc1046" translate="yes" xml:space="preserve">
          <source>If you enable 2FA in &lt;strong&gt;auth-and-writes&lt;/strong&gt; mode, which is the default, npm will require an OTP when you:</source>
          <target state="translated">あなたが2FAを有効にした場合&lt;strong&gt;のauth-と-書き込み&lt;/strong&gt;、NPMは、OTPが必要になりますデフォルトでモードを、ときに：</target>
        </trans-unit>
        <trans-unit id="671836e5446c85a10d8e36d151a3d675b0a0655b" translate="yes" xml:space="preserve">
          <source>If you enable 2FA in &lt;strong&gt;auth-only&lt;/strong&gt; mode, npm will require an OTP when you:</source>
          <target state="translated">&lt;strong&gt;認証専用&lt;/strong&gt;モードで2FA を有効にすると、次の場合にnpmでOTPが必要になります。</target>
        </trans-unit>
        <trans-unit id="7f35951f206532f0dfd9e6ae85ec4930716fb3bd" translate="yes" xml:space="preserve">
          <source>If you expect to create many package.json files, you might wish to customize the questions asked during the init process, so that the files always contain key information that you expect. You can customize the fields as well as the questions that are asked.</source>
          <target state="translated">多くの package.json ファイルを作成することを想定しているのであれば、init プロセスで質問される質問をカスタマイズして、ファイルには常に期待通りのキー情報が含まれるようにしたいと思うかもしれません。質問される質問だけでなく、フィールドもカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="e5f322d852e02a5542874aa97079f9b983ddcfd4" translate="yes" xml:space="preserve">
          <source>If you get an &lt;code&gt;EAUDITNOLOCK&lt;/code&gt; error, make sure your package has a &lt;code&gt;package.json&lt;/code&gt; file, then create the package lock file by running &lt;code&gt;npm i --package-lock-only&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;EAUDITNOLOCK&lt;/code&gt; エラーが発生した場合は、パッケージに &lt;code&gt;package.json&lt;/code&gt; ファイルがあることを確認してから、 &lt;code&gt;npm i --package-lock-only&lt;/code&gt; を実行してパッケージロックファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="6c1463bcf012c225e8344abb6eed774e8940b318" translate="yes" xml:space="preserve">
          <source>If you get an &lt;code&gt;EAUDITNOPJSON&lt;/code&gt; error, create a &lt;code&gt;package.json&lt;/code&gt; file by following the steps in &quot;&lt;a href=&quot;using-a-package.json&quot;&gt;Working with package.json&lt;/a&gt;&quot;.</source>
          <target state="translated">&lt;code&gt;EAUDITNOPJSON&lt;/code&gt; エラーが発生した場合は、「&lt;a href=&quot;using-a-package.json&quot;&gt;package.jsonの操作&lt;/a&gt;」の手順に従って、 &lt;code&gt;package.json&lt;/code&gt; ファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="4c3d8de527b674c9926b3220ca95cc67bf82b0c5" translate="yes" xml:space="preserve">
          <source>If you get an EACCES error, &lt;a href=&quot;fixing-npm-permissions&quot;&gt;see this chapter about permissions&lt;/a&gt;.</source>
          <target state="translated">EACCESエラーが発生した場合&lt;a href=&quot;fixing-npm-permissions&quot;&gt;は、権限に関するこの章を参照してください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9916d05971dd0fefe86babe05b44c0959554143a" translate="yes" xml:space="preserve">
          <source>If you had not properly installed &lt;code&gt;lodash&lt;/code&gt;, you would receive this error:</source>
          <target state="translated">&lt;code&gt;lodash&lt;/code&gt; を適切にインストールしなかった場合、次のエラーが表示されます。</target>
        </trans-unit>
        <trans-unit id="c0fb95a38ab8fca6614bee49401d08ff778e5a7f" translate="yes" xml:space="preserve">
          <source>If you had the following Dockerfile:</source>
          <target state="translated">以下のようなDockerfileを持っていたとします。</target>
        </trans-unit>
        <trans-unit id="1b221f13e7c43c2767e71b923fca7e941b432da6" translate="yes" xml:space="preserve">
          <source>If you have a &lt;code&gt;package.json&lt;/code&gt; file in your directory and you run &lt;code&gt;npm install&lt;/code&gt;, npm will look at the dependencies that are listed in that file and download the latest versions, using semantic versioning.</source>
          <target state="translated">あなたが持っている場合は &lt;code&gt;package.json&lt;/code&gt; のディレクトリ内のファイルを、あなたが実行して &lt;code&gt;npm install&lt;/code&gt; 、NPMは、そのファイルにリストされている依存関係を見ていきますとセマンティックバージョニングを使用して、最新バージョンをダウンロードしてください。</target>
        </trans-unit>
        <trans-unit id="c3125c3ef77cd14fed53be9c090f7a2f92cb6aba" translate="yes" xml:space="preserve">
          <source>If you have a single executable, and its name should be the name of the package, then you can just supply it as a string. For example:</source>
          <target state="translated">単一の実行ファイルがあり、その名前がパッケージの名前でなければならない場合は、それを文字列で与えればいいのです。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="02812420ae02e5a567321cb4cc783ba6088eb40c" translate="yes" xml:space="preserve">
          <source>If you have already set up two-factor authentication, you will be asked for a one-time password when you login. Please see &lt;a href=&quot;using-two-factor-authentication&quot;&gt;the chapter about two-factor authentication&lt;/a&gt; if you need more information.</source>
          <target state="translated">すでに2要素認証を設定している場合は、ログイン時にワンタイムパスワードの入力を求められます。詳細について&lt;a href=&quot;using-two-factor-authentication&quot;&gt;は、2要素認証に関する章を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="dda151904e25a7de541faad4fdb3575d5759052b" translate="yes" xml:space="preserve">
          <source>If you have dependencies you only need to use during local development, follow the same instructions as above but use the attribute called &lt;code&gt;devDependencies&lt;/code&gt;.</source>
          <target state="translated">ローカル開発中にのみ使用する必要がある依存関係がある場合は、上記と同じ手順に従いますが、 &lt;code&gt;devDependencies&lt;/code&gt; という属性を使用します。</target>
        </trans-unit>
        <trans-unit id="915b24e6b3c88e68cdcf2ea0e8b6aacdc0b3efe3" translate="yes" xml:space="preserve">
          <source>If you have enabled 2FA auth-and-writes, you will need to send the OTP from the command line for certain commands to work. To do this, append &lt;code&gt;--otp=123456&lt;/code&gt; (where &lt;em&gt;123456&lt;/em&gt; is the code generated by your authenticator) at the end of the command. Here are a few examples:</source>
          <target state="translated">2FA auth-and-writesを有効にしている場合、特定のコマンドを機能させるには、コマンドラインからOTPを送信する必要があります。これを行うには、コマンドの最後に &lt;code&gt;--otp=123456&lt;/code&gt; （&lt;em&gt;123456&lt;/em&gt;はオーセンティケーターによって生成されたコード）を追加します。以下にいくつかの例を示します。</target>
        </trans-unit>
        <trans-unit id="c2d6b20a8fba1238fd3e231c39918c37d8bd866c" translate="yes" xml:space="preserve">
          <source>If you have enabled two-factor authentication on your profile, you have implemented an additional layer of security.</source>
          <target state="translated">プロファイルで 2 要素認証を有効にしている場合は、セキュリティの追加レイヤーを実装したことになります。</target>
        </trans-unit>
        <trans-unit id="c2716e805b0992004367076eb5a6a8bce6472beb" translate="yes" xml:space="preserve">
          <source>If you have misplaced both the device that provided second-factor authentication and your recovery codes, we may be unable to help you recover your account. If you have any questions, please &lt;a href=&quot;https://www.npmjs.com/support&quot;&gt;contact support&lt;/a&gt;.</source>
          <target state="translated">二要素認証を提供するデバイスと回復コードの両方を紛失した場合は、アカウントの回復をサポートできない場合があります。ご不明な点がございましたら、&lt;a href=&quot;https://www.npmjs.com/support&quot;&gt;サポートまでお問い合わせ&lt;/a&gt;ください。</target>
        </trans-unit>
        <trans-unit id="2a9a06f351fc91a0aff3aa9f94c2c818354987bc" translate="yes" xml:space="preserve">
          <source>If you have set up two-factor authentication, you will be prompted for an npm password, followed by an OTP. npm will display this table:</source>
          <target state="translated">二要素認証を設定している場合は、npm のパスワードと OTP の入力を求められます。</target>
        </trans-unit>
        <trans-unit id="027ef904bcbb1d6c06dc2490e61fccd4cfbb3a4b" translate="yes" xml:space="preserve">
          <source>If you have set up two-factor authentication, you will be prompted for your npm password, followed by an OTP. npm will display this table:</source>
          <target state="translated">二要素認証を設定している場合は、npm のパスワードの入力と OTP の入力を求められます。</target>
        </trans-unit>
        <trans-unit id="937e90df47ace5958b4396cdecb7da33bafc0e99" translate="yes" xml:space="preserve">
          <source>If you have starred a lot of neat things and want to find them again quickly this command lets you do just that.</source>
          <target state="translated">あなたがたくさんのきちんとしたものに星をつけていて、それらを素早く見つけたい場合は、このコマンドを使うことでそれが可能になります。</target>
        </trans-unit>
        <trans-unit id="8072da340d98889b61ef06fdbd54f271b88d397d" translate="yes" xml:space="preserve">
          <source>If you have two-factor authentication enabled then you'll have to pass in an otp with &lt;code&gt;--otp&lt;/code&gt; when making access changes.</source>
          <target state="translated">2要素認証を有効にしている場合は、アクセスを変更するときに--otpを &lt;code&gt;--otp&lt;/code&gt; してotpを渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="ef705d86635b78e88d347db5a31a3865f140b279" translate="yes" xml:space="preserve">
          <source>If you have two-factor authentication enabled with &lt;code&gt;auth-and-writes&lt;/code&gt; then you'll need to include an otp on the command line when changing ownership with &lt;code&gt;--otp&lt;/code&gt;.</source>
          <target state="translated">あなたが二要素認証をして有効にした場合 &lt;code&gt;auth-and-writes&lt;/code&gt; 、その後、あなたはとの所有権変更時にコマンドラインでOTPを含める必要があります &lt;code&gt;--otp&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="6b1293a3246afb78ae554eed294c9190acf12893" translate="yes" xml:space="preserve">
          <source>If you installed npm with the node.js installer, after doing one of the previous steps, do the following.</source>
          <target state="translated">npmをnode.jsのインストーラーでインストールした場合は、前の手順のいずれかを行った後、以下のようにします。</target>
        </trans-unit>
        <trans-unit id="14ab03766c8995ed87922ee555f2d12d05b98bb0" translate="yes" xml:space="preserve">
          <source>If you installed things &lt;em&gt;with&lt;/em&gt; npm, then your best bet is to uninstall them with npm first, and then install them again once you have a proper install. This can help find any symlinks that are lying around:</source>
          <target state="translated">あなたは、物事インストールした場合&lt;em&gt;との&lt;/em&gt; NPMをあなたが適切にインストールしたら、その後、あなたの最善の策は、最初のNPMでそれらをアンインストールし、再度それらをインストールすることです。これは、周りにあるシンボリックリンクを見つけるのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="1665d6bd6d512f0b6b0ae676a212aff1b2fe21f1" translate="yes" xml:space="preserve">
          <source>If you just want to get started exploring npm, using the Node.js installation method is fastest. If you are an advanced developer ready to jump in and work with versions, use the node version manager. If you aren't sure, please read this chapter before you decide. You can always change how you run npm in the future.</source>
          <target state="translated">npm の探索を始めたいだけなら、Node.js のインストール方法を使うのが一番早いです。もしあなたが上級の開発者で、バージョンを扱う準備ができているのであれば、ノードのバージョンマネージャを使用してください。よくわからない場合は、この章を読んでから決めてください。npm の実行方法はいつでも将来的に変更することができます。</target>
        </trans-unit>
        <trans-unit id="9a8934cb6094ca71a0bf5bed0dbc2d9778d78e18" translate="yes" xml:space="preserve">
          <source>If you just want to write a node program, and/or,</source>
          <target state="translated">ノードプログラムを書くだけなら、および/または。</target>
        </trans-unit>
        <trans-unit id="e9944b13dc35c30c5086cd916cb70d1470c697d2" translate="yes" xml:space="preserve">
          <source>If you need both, then install it in both places, or use &lt;code&gt;npm link&lt;/code&gt;.</source>
          <target state="translated">両方が必要な場合は、両方にインストールするか、 &lt;code&gt;npm link&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="29d0042993d3e95d8d373e6823694c5b8d55b9fb" translate="yes" xml:space="preserve">
          <source>If you need to perform operations on your package before it is used, in a way that is not dependent on the operating system or architecture of the target system, use a &lt;code&gt;prepublish&lt;/code&gt; script. This includes tasks such as:</source>
          <target state="translated">パッケージを使用する &lt;code&gt;prepublish&lt;/code&gt; に、オペレーティングシステムやターゲットシステムのアーキテクチャに依存しない方法で操作を実行する必要がある場合は、事前公開スクリプトを使用します。これには、次のようなタスクが含まれます。</target>
        </trans-unit>
        <trans-unit id="7fa13f64bfe4344a2ddbf7a4a77541e65b43737e" translate="yes" xml:space="preserve">
          <source>If you plan to publish your package, the &lt;em&gt;most&lt;/em&gt; important things in your package.json are the name and version fields as they will be required. The name and version together form an identifier that is assumed to be completely unique. Changes to the package should come along with changes to the version. If you don't plan to publish your package, the name and version fields are optional.</source>
          <target state="translated">パッケージを公開する場合、package.jsonで&lt;em&gt;最も&lt;/em&gt;重要なのは、名前とバージョンフィールドが必要になるためです。名前とバージョンは、完全に一意であると見なされる識別子を形成します。パッケージの変更は、バージョンの変更に伴って発生します。パッケージを公開する予定がない場合、名前とバージョンのフィールドはオプションです。</target>
        </trans-unit>
        <trans-unit id="e76bd9d23330eb37eefd80fa4d9229b80d7919bf" translate="yes" xml:space="preserve">
          <source>If you see a message like this one:</source>
          <target state="translated">このようなメッセージを見たら</target>
        </trans-unit>
        <trans-unit id="199ea873b0b79761c18ef87d6bfa2d6a2a283947" translate="yes" xml:space="preserve">
          <source>If you see an &lt;code&gt;EACCES&lt;/code&gt; error when you try to install a package globally, read this chapter. This error can often be avoided if you change the directory where npm is installed. To do this, either:</source>
          <target state="translated">あなたが表示された場合 &lt;code&gt;EACCES&lt;/code&gt; のあなたは世界的にパッケージをインストールしようとすると、エラーが、この章をお読みください。npmがインストールされているディレクトリを変更すると、このエラーを回避できることがよくあります。これを行うには、次のいずれかを実行します。</target>
        </trans-unit>
        <trans-unit id="741bd162cedf3853b813f43c4fb9c6863f60e158" translate="yes" xml:space="preserve">
          <source>If you see bad behavior like this, please report it to &lt;a href=&quot;../cdn-cgi/l/email-protection#e78685929482a789978a8d94c984888a&quot;&gt;abuse@npmjs.com&lt;/a&gt; right away. &lt;strong&gt;You are never expected to resolve abusive behavior on your own. We are here to help.&lt;/strong&gt;</source>
          <target state="translated">このような悪い動作が見られる場合は、すぐに&lt;a href=&quot;../cdn-cgi/l/email-protection#e78685929482a789978a8d94c984888a&quot;&gt;abuse@npmjs.comに&lt;/a&gt;報告してください。&lt;strong&gt;虐待的な行動を自分で解決することは決して期待されていません。私たちがお手伝いします。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="92da02bfd39bbcc97dffac573e6d0f2496e73deb" translate="yes" xml:space="preserve">
          <source>If you set &lt;code&gt;&quot;private&quot;: true&lt;/code&gt; in your package.json, then npm will refuse to publish it.</source>
          <target state="translated">package.jsonで &lt;code&gt;&quot;private&quot;: true&lt;/code&gt; を設定すると、npmはそれを公開しません。</target>
        </trans-unit>
        <trans-unit id="656ffcca351a7defb87675c2e7500ee1d730942d" translate="yes" xml:space="preserve">
          <source>If you set up continuous replication from the official CouchDB, and then set your internal CouchDB as the registry config, then you'll be able to read any published packages, in addition to your private ones, and by default will only publish internally.</source>
          <target state="translated">あなたは、公式CouchDBから継続的なレプリケーションを設定し、レジストリの設定として内部CouchDBを設定した場合、あなたのプライベートなものに加えて、任意の公開されたパッケージを読み取ることができるようになりますし、デフォルトでは、内部的にのみ公開されます。</target>
        </trans-unit>
        <trans-unit id="adc17630beff680f5a5987b4113d80380d565e5c" translate="yes" xml:space="preserve">
          <source>If you specify a &lt;code&gt;bin&lt;/code&gt; directory in &lt;code&gt;directories.bin&lt;/code&gt;, all the files in that folder will be added.</source>
          <target state="translated">あなたが指定した場合 &lt;code&gt;bin&lt;/code&gt; ディレクトリを &lt;code&gt;directories.bin&lt;/code&gt; 、そのフォルダ内のすべてのファイルが追加されます。</target>
        </trans-unit>
        <trans-unit id="e4bc9d9ac13b19d3bf6bdb50831e1faa786cd02a" translate="yes" xml:space="preserve">
          <source>If you specify an &quot;engines&quot; field, then npm will require that &quot;node&quot; be somewhere on that list. If &quot;engines&quot; is omitted, then npm will just assume that it works on node.</source>
          <target state="translated">engines&quot; フィールドを指定した場合、npm はそのリストのどこかに &quot;node&quot; があることを要求します。もし &quot;engines&quot; が省略された場合、npm は &quot;node&quot; で動作すると仮定します。</target>
        </trans-unit>
        <trans-unit id="91d6d287ed3947c2bf286ffc0451d83d3bbc77f3" translate="yes" xml:space="preserve">
          <source>If you then want to publish a package for the whole world to see, you can simply override the &lt;code&gt;--registry&lt;/code&gt; option for that &lt;code&gt;publish&lt;/code&gt; command.</source>
          <target state="translated">その後、全世界に公開するためにパッケージを公開する場合は、その &lt;code&gt;publish&lt;/code&gt; コマンドの &lt;code&gt;--registry&lt;/code&gt; オプションをオーバーライドするだけです。</target>
        </trans-unit>
        <trans-unit id="97c86c5d57e8d2de410b086ae4046c2095a67e0c" translate="yes" xml:space="preserve">
          <source>If you think another npm publisher is infringing your trademark, such as by using a confusingly similar package name, email &lt;a href=&quot;../cdn-cgi/l/email-protection#a2c3c0d7d1c7e2ccd2cfc8d18cc1cdcf&quot;&gt;abuse@npmjs.com&lt;/a&gt; with a link to the package or user account on &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;https://www.npmjs.com/&lt;/a&gt;. Attach a copy of your trademark registration certificate.</source>
          <target state="translated">他のnpmパブリッシャーが、紛らわしく似たパッケージ名を使用するなどして商標を侵害していると思われる場合は、&lt;a href=&quot;https://www.npmjs.com/&quot;&gt;https：&lt;/a&gt;&lt;a href=&quot;../cdn-cgi/l/email-protection#a2c3c0d7d1c7e2ccd2cfc8d18cc1cdcf&quot;&gt;//www.npmjs.com/&lt;/a&gt;のパッケージまたはユーザーアカウントへのリンクをabuse@npmjs.comにメールで送信してください。商標登録証明書のコピーを添付してください。</target>
        </trans-unit>
        <trans-unit id="a6326a259f56747209d0c54596e4cdb35e5ef68d" translate="yes" xml:space="preserve">
          <source>If you try to run a script without having a &lt;code&gt;node_modules&lt;/code&gt; directory and it fails, you will be given a warning to run &lt;code&gt;npm install&lt;/code&gt;, just in case you've forgotten.</source>
          <target state="translated">&lt;code&gt;node_modules&lt;/code&gt; ディレクトリがなくてもスクリプトを実行しようとして失敗した場合、念の &lt;code&gt;npm install&lt;/code&gt; 、npm installを実行するよう警告が表示されます。</target>
        </trans-unit>
        <trans-unit id="876fef396348f1989f7e39448e324d6460f9dadc" translate="yes" xml:space="preserve">
          <source>If you use &lt;code&gt;npm init&lt;/code&gt; to initialize your packages, you can pass in your scope like this:</source>
          <target state="translated">&lt;code&gt;npm init&lt;/code&gt; を使用してパッケージを初期化する場合は、次のようにスコープを渡すことができます。</target>
        </trans-unit>
        <trans-unit id="c3798cbc2aee0fba2d5e669292b2ac8b5d548148" translate="yes" xml:space="preserve">
          <source>If you use &lt;code&gt;npm init&lt;/code&gt;, you can add your scope as an option to that command.</source>
          <target state="translated">&lt;code&gt;npm init&lt;/code&gt; を使用する場合は、スコープをそのコマンドのオプションとして追加できます。</target>
        </trans-unit>
        <trans-unit id="43b4e74d7a7af6dcfab9990fbed0dfc2e4fe7848" translate="yes" xml:space="preserve">
          <source>If you use the same scope all the time, you will probably want to set this option in your &lt;a href=&quot;../files/npmrc&quot;&gt;&lt;code&gt;.npmrc&lt;/code&gt;&lt;/a&gt; file.</source>
          <target state="translated">常に同じスコープを使用する場合は、このオプションを&lt;a href=&quot;../files/npmrc&quot;&gt; &lt;code&gt;.npmrc&lt;/code&gt; &lt;/a&gt;ファイルで設定することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="2facef8921e4cf8ab46f41d9740d0b0d5bda40c9" translate="yes" xml:space="preserve">
          <source>If you use the same scope most of the time, you'll probably want to set it in your default configuration instead.</source>
          <target state="translated">ほとんどの場合に同じスコープを使用しているのであれば、代わりにデフォルトの設定で設定した方が良いでしょう。</target>
        </trans-unit>
        <trans-unit id="0184d3d8820b906525165d7264545a61034f395a" translate="yes" xml:space="preserve">
          <source>If you want to add information for the author field, use the following format (email and website are both optional):</source>
          <target state="translated">著者欄に情報を追加したい場合は、以下のフォーマットを使用してください(メールとウェブサイトはどちらも任意です)。</target>
        </trans-unit>
        <trans-unit id="5ee0721f964683fe949fb368e7bbe3048ee2f8a6" translate="yes" xml:space="preserve">
          <source>If you want to contribute to npm (which is very encouraged), you should make your code conform to npm's style.</source>
          <target state="translated">npm に貢献したいのであれば (これは非常に推奨されています)、コードを npm のスタイルに合わせるべきです。</target>
        </trans-unit>
        <trans-unit id="e6aff41b09f0f80dbd0e4287c9985703eb8b6c81" translate="yes" xml:space="preserve">
          <source>If you want to depend on the package from your own module, then install it &lt;a href=&quot;installing-npm-packages-locally&quot;&gt;locally&lt;/a&gt;. This is the choice you would use if you are using require statements, for example.</source>
          <target state="translated">独自のモジュールのパッケージに依存したい場合は、&lt;a href=&quot;installing-npm-packages-locally&quot;&gt;ローカルに&lt;/a&gt;インストールしてください。これは、たとえばrequireステートメントを使用している場合に使用する選択です。</target>
        </trans-unit>
        <trans-unit id="2274876d4daccd411c2a379e148d1f1e46c50764" translate="yes" xml:space="preserve">
          <source>If you want to depend on the package from your own module, using something like Node.js' &lt;code&gt;require&lt;/code&gt;, then you want to install locally. This is &lt;code&gt;npm install&lt;/code&gt;'s default behavior.</source>
          <target state="translated">Node.js ' &lt;code&gt;require&lt;/code&gt; のようなものを使用して、独自のモジュールからのパッケージに依存したい場合は、ローカルにインストールする必要があります。これは &lt;code&gt;npm install&lt;/code&gt; のデフォルトの動作です。</target>
        </trans-unit>
        <trans-unit id="a5aae1b0d5ff6f55b20c707ea2eef104d0e3f1ab" translate="yes" xml:space="preserve">
          <source>If you want to double check that your package will include only the files you intend it to when published, you can run the &lt;code&gt;npm pack&lt;/code&gt; command locally which will generate a tarball in the working directory, the same way it does for publishing.</source>
          <target state="translated">公開時に意図したファイルのみがパッケージに含まれていることを再確認したい場合は、 &lt;code&gt;npm pack&lt;/code&gt; コマンドをローカルで実行して、公開の場合と同じように作業ディレクトリにtarballを生成できます。</target>
        </trans-unit>
        <trans-unit id="de8a8f17cd3bf60cceb26f48963496a2fd408188" translate="yes" xml:space="preserve">
          <source>If you want to give access to someone, they need to be subscribed to private packages as well. Once they are, you can give them read or read-write access. Or, you can set up an npm Org to give them access through Orgs and teams. Please refer to the online npm Orgs book for details.</source>
          <target state="translated">誰かにアクセス権を与えたい場合、その人も同様にプライベート・パッケージに加入している必要があります。加入していれば、その人に読み書きのアクセス権を与えることができます。あるいは、npm Org を設定して Orgs や team を通してアクセスを許可することもできます。詳細はオンラインの npm Orgs ブックを参照してください。</target>
        </trans-unit>
        <trans-unit id="f32077d0c722aca65a9120350241835391c310ae" translate="yes" xml:space="preserve">
          <source>If you want to know if a version satisfies or does not satisfy a range, use the &lt;code&gt;satisfies(version, range)&lt;/code&gt; function.</source>
          <target state="translated">バージョンが範囲を満たすかどうかを知りたい場合は、 &lt;code&gt;satisfies(version, range)&lt;/code&gt; 関数を使用します。</target>
        </trans-unit>
        <trans-unit id="d974ca7fe4ae0c77bb8b8cfe16d629c9d5df6559" translate="yes" xml:space="preserve">
          <source>If you want to run a make command, you can do so. This works just fine:</source>
          <target state="translated">makeコマンドを実行したい場合は、これを実行します。これだけでも十分に動作します。</target>
        </trans-unit>
        <trans-unit id="cabdcdaebcf7df6b879f0a090c8d4587ebffba75" translate="yes" xml:space="preserve">
          <source>If you want to run a specific script at a specific lifecycle event for ALL packages, then you can use a hook script.</source>
          <target state="translated">すべてのパッケージの特定のライフサイクルイベントで特定のスクリプトを実行したい場合は、フックスクリプトを使うことができます。</target>
        </trans-unit>
        <trans-unit id="2e85bf1bd263f0ce71dbc4636182b6de78a9a41d" translate="yes" xml:space="preserve">
          <source>If you want to try the next, unreleased version of npm to test that packages you have created will work with the planned next release of npm, use this command:</source>
          <target state="translated">次のリリース予定の npm で作成したパッケージが動作するかどうかをテストするために、次のリリース予定の npm を試したい場合は、このコマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="65cbe3d65d5ea496100adfd10901c2409ee70836" translate="yes" xml:space="preserve">
          <source>If you want to use a package as a command line tool, (such as grunt CLI), then &lt;a href=&quot;installing-npm-packages-globally&quot;&gt;install it globally&lt;/a&gt;.</source>
          <target state="translated">パッケージをコマンドラインツール（grunt CLIなど）として使用する場合は、&lt;a href=&quot;installing-npm-packages-globally&quot;&gt;グローバルにインストールし&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="2a9dd764335690de59f29e9e2d14f1ed4cc1ccee" translate="yes" xml:space="preserve">
          <source>If you want to use a package as a command line tool, then install it globally. This way, it works no matter which directory is current. This is the choice you would use if you were installing grunt, for example.</source>
          <target state="translated">パッケージをコマンドラインツールとして使いたい場合は、グローバルにインストールしてください。この方法では、カレントディレクトリがどのディレクトリであっても動作します。これは、例えば grunt をインストールする場合の選択です。</target>
        </trans-unit>
        <trans-unit id="7e02200bc9ca3d20c644bfe03a6cb8cd40c54b2c" translate="yes" xml:space="preserve">
          <source>If you were starting with a package 1.0.4, this is how you would specify the ranges:</source>
          <target state="translated">パッケージ 1.0.4 から始める場合は、このように範囲を指定します。</target>
        </trans-unit>
        <trans-unit id="22a4a7df9c1181bd324fe2d1398abdbf80dd8524" translate="yes" xml:space="preserve">
          <source>If you wish to &lt;code&gt;require()&lt;/code&gt; a package, then install it locally.</source>
          <target state="translated">パッケージを &lt;code&gt;require()&lt;/code&gt; したい場合は、ローカルにインストールします。</target>
        </trans-unit>
        <trans-unit id="219386ead7e59b4231d8468c0389ff76eb986735" translate="yes" xml:space="preserve">
          <source>If you wish, you may associate a scope with a registry; see below.</source>
          <target state="translated">必要に応じて、スコープをレジストリに関連付けることができます。</target>
        </trans-unit>
        <trans-unit id="e55eb200e04fa5a2d343fa313b1200cf931bd57e" translate="yes" xml:space="preserve">
          <source>If you would like to contribute, but don't know what to work on, read the contributing guidelines and check the issues list.</source>
          <target state="translated">投稿したいけど、何に取り組めばいいのかわからないという方は、投稿ガイドラインを読んで課題一覧を確認してみましょう。</target>
        </trans-unit>
        <trans-unit id="f3d98a9ab90fe60a526572145bd795e0468df564" translate="yes" xml:space="preserve">
          <source>If you would prefer to have your own private registry, so that you can develop packages internally that are not shared publicly, consider &lt;a href=&quot;https://www.npmjs.com/enterprise&quot;&gt;npm Enterprise&lt;/a&gt;.</source>
          <target state="translated">独自にプライベートレジストリを用意して、パブリックに共有されないパッケージを内部で開発できるようにしたい場合は、&lt;a href=&quot;https://www.npmjs.com/enterprise&quot;&gt;npm Enterpriseを&lt;/a&gt;検討してください。</target>
        </trans-unit>
        <trans-unit id="86c2852b954984116b2935ddff97c3ad2337dd40" translate="yes" xml:space="preserve">
          <source>If you're experiencing issues while using a version of node which is unsupported or unstable (odd numbered versions e.g. 0.7.x, 0.9.x, 0.11.x), it's very possible your issue will be fixed by simply using the &lt;a href=&quot;https://github.com/nodejs/LTS&quot;&gt;LTS&lt;/a&gt; version of node.</source>
          <target state="translated">サポートされていないか不安定なバージョンのノード（奇数番号のバージョン、たとえば0.7.x、0.9.x、0.11.x）を使用しているときに問題が発生する場合は、&lt;a href=&quot;https://github.com/nodejs/LTS&quot;&gt;LTS&lt;/a&gt;バージョンを使用するだけで問題が解決する可能性があります。ノード。</target>
        </trans-unit>
        <trans-unit id="3410edb229a97da8b3cf442aed556e43c2deba40" translate="yes" xml:space="preserve">
          <source>If you're on Windows and you have a broken installation, the easiest thing to do is to reinstall node from the official installer (see &lt;a href=&quot;try-the-latest-stable-version-of-npm#upgrading-on-windows&quot;&gt;this note about installing the latest stable version&lt;/a&gt;).</source>
          <target state="translated">Windowsを使用していて、インストールが壊れている場合、最も簡単な方法は、公式インストーラーからノードを再インストールすることです（&lt;a href=&quot;try-the-latest-stable-version-of-npm#upgrading-on-windows&quot;&gt;最新の安定バージョンのインストールに関するこの注を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="713b08500f14e3fdafa018e50a92d460abcf4f72" translate="yes" xml:space="preserve">
          <source>If you're using Linux, choose one of these options:</source>
          <target state="translated">Linuxを使用している場合は、これらのオプションのいずれかを選択してください。</target>
        </trans-unit>
        <trans-unit id="332671b438fa51d658eb9f22b7681b41213fa992" translate="yes" xml:space="preserve">
          <source>If you're using OS X or Windows, use one of the installers from the &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;Node.js download page&lt;/a&gt;. Be sure to install the version labeled &lt;strong&gt;LTS&lt;/strong&gt;. Other versions have not yet been tested with npm.</source>
          <target state="translated">OS XまたはWindowsを使用している場合は、&lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;Node.jsダウンロードページの&lt;/a&gt;インストーラーのいずれかを使用します。&lt;strong&gt;LTS&lt;/strong&gt;というラベルのバージョンを必ずインストールしてください。他のバージョンは、npmでまだテストされていません。</target>
        </trans-unit>
        <trans-unit id="e547daea57a266838810e7a746fc8ce199a4c3c6" translate="yes" xml:space="preserve">
          <source>If you're using a common license such as BSD-2-Clause or MIT, add a current SPDX license identifier for the license you're using, like this:</source>
          <target state="translated">BSD-2-ClauseやMITなどの共通ライセンスを使用している場合は、以下のように、使用しているライセンスの現在のSPDXライセンス識別子を追加してください。</target>
        </trans-unit>
        <trans-unit id="4cbb736c9aadb466ef997b0d942008cb25421bdd" translate="yes" xml:space="preserve">
          <source>If you're using npm private packages in an environment where you're not directly able to log in, such as inside a &lt;a href=&quot;ci-server-config&quot;&gt;CI Server&lt;/a&gt; or a &lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt; container, you'll need to get and export an npm token as an environment variable. That token should look like &lt;code&gt;NPM_TOKEN=00000000-0000-0000-0000-000000000000&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;ci-server-config&quot;&gt;CIサーバー&lt;/a&gt;や&lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt;コンテナー内など、直接ログインできない環境でnpmプライベートパッケージを使用している場合は、npmトークンを取得して環境変数としてエクスポートする必要があります。そのトークンは &lt;code&gt;NPM_TOKEN=00000000-0000-0000-0000-000000000000&lt;/code&gt; のようになります。</target>
        </trans-unit>
        <trans-unit id="3a065650b95372263a9b06a8a31c71ddcd2a3e91" translate="yes" xml:space="preserve">
          <source>If you're using npm to develop and publish your code, check out the following help topics:</source>
          <target state="translated">npm を使ってコードを開発して公開している場合は、以下のヘルプトピックを確認してください。</target>
        </trans-unit>
        <trans-unit id="5ab08f0c695d080c2410071c56f74081307d3a60" translate="yes" xml:space="preserve">
          <source>If you've disabled package-locks then extraneous modules will not be removed and it's up to you to run &lt;code&gt;npm prune&lt;/code&gt; from time-to-time to remove them.</source>
          <target state="translated">パッケージロックを無効にした場合、無関係なモジュールは削除されず、 &lt;code&gt;npm prune&lt;/code&gt; を時々実行してそれらを削除するのはあなた次第です。</target>
        </trans-unit>
        <trans-unit id="9215bedc685f7c1ab884b4a2281c47c11092c3ff" translate="yes" xml:space="preserve">
          <source>If you've read through &lt;a href=&quot;intro&quot;&gt;Working with private packages&lt;/a&gt;, you'll know that in order to use private packages, you need to be &lt;a href=&quot;../cli/adduser&quot;&gt;logged in&lt;/a&gt; to npm via the npm CLI.</source>
          <target state="translated">&lt;a href=&quot;intro&quot;&gt;プライベートパッケージの操作&lt;/a&gt;を読んだことがあれば、プライベートパッケージを使用するには、npm CLIを介してnpmに&lt;a href=&quot;../cli/adduser&quot;&gt;ログイン&lt;/a&gt;する必要があることがわかります。</target>
        </trans-unit>
        <trans-unit id="5dfc4cbb19f2d71708ca04ed3ba3698598d76a3c" translate="yes" xml:space="preserve">
          <source>If your account is not paid, then attempts to publish scoped packages will fail with an HTTP 402 status code (logically enough), unless you use &lt;code&gt;--access=public&lt;/code&gt;.</source>
          <target state="translated">アカウントに支払いがない場合、-- &lt;code&gt;--access=public&lt;/code&gt; を使用しない限り、スコープ付きパッケージを公開しようとすると、HTTP 402ステータスコード（論理的に十分）で失敗します。</target>
        </trans-unit>
        <trans-unit id="7d640b973354a7ee41343c929fe8f9987700374d" translate="yes" xml:space="preserve">
          <source>If your code only runs on certain cpu architectures, you can specify which ones.</source>
          <target state="translated">あなたのコードが特定の CPU アーキテクチャでのみ動作する場合は、そのアーキテクチャを指定することができます。</target>
        </trans-unit>
        <trans-unit id="37590539e87325af18b8a11166dd84d2de618bcd" translate="yes" xml:space="preserve">
          <source>If your linked package is scoped (see &lt;code&gt;&lt;a href=&quot;../misc/scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt;) your link command must include that scope, e.g.</source>
          <target state="translated">リンクされたパッケージがスコープされている場合（ &lt;code&gt;&lt;a href=&quot;../misc/scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt; を参照）、リンクコマンドにはそのスコープを含める必要があります。</target>
        </trans-unit>
        <trans-unit id="d93a24ef7a2e589f3f035181fbd19fb60dddde63" translate="yes" xml:space="preserve">
          <source>If your module is meant to be used client-side the browser field should be used instead of the main field. This is helpful to hint users that it might rely on primitives that aren't available in Node.js modules. (e.g. &lt;code&gt;window&lt;/code&gt;)</source>
          <target state="translated">モジュールをクライアント側で使用する場合は、メインフィールドの代わりにブラウザフィールドを使用する必要があります。これは、Node.jsモジュールでは使用できないプリミティブに依存している可能性があることをユーザーに示唆するのに役立ちます。（例： &lt;code&gt;window&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="20de205251c7fb0eab572d4760b4fc38d422f3b5" translate="yes" xml:space="preserve">
          <source>If your npm is broken</source>
          <target state="translated">npmが壊れている場合</target>
        </trans-unit>
        <trans-unit id="256f6514781021701e9c8dba53a6d6895a22b57e" translate="yes" xml:space="preserve">
          <source>If your package is licensed under multiple common licenses, use an &lt;a href=&quot;https://www.npmjs.com/package/spdx&quot;&gt;SPDX license expression syntax version 2.0 string&lt;/a&gt;, like this:</source>
          <target state="translated">パッケージが複数の共通ライセンスの下でライセンスされている場合は、次のように&lt;a href=&quot;https://www.npmjs.com/package/spdx&quot;&gt;SPDXライセンス式構文バージョン2.0文字列を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="228c184509701b2e9584737807486a220473f015" translate="yes" xml:space="preserve">
          <source>If, given the structure of your project, you find &lt;code&gt;.npmignore&lt;/code&gt; to be a maintenance headache, you might instead try populating the &lt;code&gt;files&lt;/code&gt; property of &lt;code&gt;package.json&lt;/code&gt;, which is an array of file or directory names that should be included in your package. Sometimes a whitelist is easier to manage than a blacklist.</source>
          <target state="translated">プロジェクトの構造を &lt;code&gt;.npmignore&lt;/code&gt; して、.npmignoreがメンテナンスの頭痛の種であることがわかった場合は、代わりに、 &lt;code&gt;package.json&lt;/code&gt; の &lt;code&gt;files&lt;/code&gt; プロパティを入力してみてください。これは、パッケージに含める必要があるファイル名またはディレクトリ名の配列です。ホワイトリストはブラックリストよりも管理が簡単な場合があります。</target>
        </trans-unit>
        <trans-unit id="73db89d3b35febac1cbfab179556c5c73c862a84" translate="yes" xml:space="preserve">
          <source>Illegal content.</source>
          <target state="translated">違法な内容。</target>
        </trans-unit>
        <trans-unit id="102c69297ad0d0f888686af4f52f660158842b00" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;package.json&lt;/code&gt;:</source>
          <target state="translated">で &lt;code&gt;package.json&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="2f04070eb780444be5bbdc03a31232731a144341" translate="yes" xml:space="preserve">
          <source>In a &lt;code&gt;require&lt;/code&gt; statement:</source>
          <target state="translated">で &lt;code&gt;require&lt;/code&gt; 声明：</target>
        </trans-unit>
        <trans-unit id="4bea6b48fdfd5d1c6244fc77e673c09e4734a0aa" translate="yes" xml:space="preserve">
          <source>In addition to the shell's pre-existing &lt;code&gt;PATH&lt;/code&gt;, &lt;code&gt;npm run&lt;/code&gt; adds &lt;code&gt;node_modules/.bin&lt;/code&gt; to the &lt;code&gt;PATH&lt;/code&gt; provided to scripts. Any binaries provided by locally-installed dependencies can be used without the &lt;code&gt;node_modules/.bin&lt;/code&gt; prefix. For example, if there is a &lt;code&gt;devDependency&lt;/code&gt; on &lt;code&gt;tap&lt;/code&gt; in your package, you should write:</source>
          <target state="translated">シェルの既存の &lt;code&gt;PATH&lt;/code&gt; に加えて、 &lt;code&gt;npm run&lt;/code&gt; は &lt;code&gt;node_modules/.bin&lt;/code&gt; をスクリプトに提供された &lt;code&gt;PATH&lt;/code&gt; に追加します。ローカルにインストールされた依存関係によって提供されるバイナリは、 &lt;code&gt;node_modules/.bin&lt;/code&gt; プレフィックスなしで使用できます。たとえば、パッケージに &lt;code&gt;devDependency&lt;/code&gt; on &lt;code&gt;tap&lt;/code&gt; がある場合は、次のように記述する必要があります。</target>
        </trans-unit>
        <trans-unit id="1dc06c00b9a131155723fde264cb18f1931d96dd" translate="yes" xml:space="preserve">
          <source>In addition, developers can use an nvm to test their applications on multiple versions of npm. The nvm enables you to easily switch npm as well as node versions. This makes it easier to ensure that your applications work for most users, even if they are using other versions of npm. If you decide to install a version manager, use the instructions for the version manager you select to learn how to switch versions, and to learn how to keep up-to-date with the latest version of npm.</source>
          <target state="translated">さらに、開発者は nvm を使って複数のバージョンの npm でアプリケーションをテストすることができます。nvm を使うと、ノードのバージョンと同様に npm を簡単に切り替えることができます。これにより、ほとんどのユーザが他のバージョンの npm を使っている場合でも、アプリケーションが簡単に動作するようになります。バージョンマネージャをインストールする場合は、選択したバージョンマネージャの説明書を使って、バージョンの切り替え方や npm の最新バージョンを維持する方法を学んでください。</target>
        </trans-unit>
        <trans-unit id="3e6afecef6680019d979c074a1f20fe4e624c014" translate="yes" xml:space="preserve">
          <source>In almost every case so far, the parties involved have been able to reach an amicable resolution without any major intervention. Most people really do want to be reasonable, and are probably not even aware that they're in your way.</source>
          <target state="translated">これまでのところ、ほとんどすべてのケースで、当事者は大きな介入をすることなく、円満な解決に到達することができました。ほとんどの人は本当に合理的でありたいと思っていて、あなたの邪魔をしていることに気がついていないのかもしれません。</target>
        </trans-unit>
        <trans-unit id="920e41229bacb5640d47b76a1f5eb171f12e4887" translate="yes" xml:space="preserve">
          <source>In cases where you need to preserve npm packages locally or have them available through a single file download, you can bundle the packages in a tarball file by specifying the package names in the &lt;code&gt;bundledDependencies&lt;/code&gt; array and executing &lt;code&gt;npm pack&lt;/code&gt;.</source>
          <target state="translated">npmパッケージをローカルに保存する必要がある場合、または単一のファイルのダウンロードで使用できるようにする必要がある場合は、 &lt;code&gt;bundledDependencies&lt;/code&gt; 配列でパッケージ名を指定して &lt;code&gt;npm pack&lt;/code&gt; を実行することにより、パッケージをtarballファイルにバンドルできます。</target>
        </trans-unit>
        <trans-unit id="c133b6b1cb018018601581396589c11f3c7510ab" translate="yes" xml:space="preserve">
          <source>In front of a leading &lt;code&gt;(&lt;/code&gt; or &lt;code&gt;[&lt;/code&gt; at the start of the line. This prevents the expression from being interpreted as a function call or property access, respectively.</source>
          <target state="translated">先頭の前 &lt;code&gt;(&lt;/code&gt; または &lt;code&gt;[&lt;/code&gt; 行の先頭にある。これにより、式が関数呼び出しまたはプロパティアクセスとして解釈されないようにします。</target>
        </trans-unit>
        <trans-unit id="b9b1c0406cc448831d6674cc7e4fdb5a8633faba" translate="yes" xml:space="preserve">
          <source>In global mode (ie, with &lt;code&gt;-g&lt;/code&gt; or &lt;code&gt;--global&lt;/code&gt; appended to the command), it installs the current package context (ie, the current working directory) as a global package.</source>
          <target state="translated">グローバルモード（つまり、コマンドに &lt;code&gt;-g&lt;/code&gt; または &lt;code&gt;--global&lt;/code&gt; が追加されている）では、現在のパッケージコンテキスト（つまり、現在の作業ディレクトリ）をグローバルパッケージとしてインストールします。</target>
        </trans-unit>
        <trans-unit id="7d3fd7d1ec9eac2dcdf13577c18ff5feb1e53bdb" translate="yes" xml:space="preserve">
          <source>In global mode (ie, with &lt;code&gt;-g&lt;/code&gt; or &lt;code&gt;--global&lt;/code&gt; appended to the command), it uninstalls the current package context as a global package.</source>
          <target state="translated">グローバルモード（つまり、コマンドに &lt;code&gt;-g&lt;/code&gt; または &lt;code&gt;--global&lt;/code&gt; が追加されている）では、現在のパッケージコンテキストをグローバルパッケージとしてアンインストールします。</target>
        </trans-unit>
        <trans-unit id="30661e1e79fd25877be468e4b8ba2c5fd7fd3bbb" translate="yes" xml:space="preserve">
          <source>In most cases, this will install the version of the modules tagged as &lt;code&gt;latest&lt;/code&gt; on the npm registry.</source>
          <target state="translated">ほとんどの場合、これはnpmレジストリで &lt;code&gt;latest&lt;/code&gt; としてタグ付けされたモジュールのバージョンをインストールします。</target>
        </trans-unit>
        <trans-unit id="1a215cb3081bdb0d78defc05b6d835eabf557a1c" translate="yes" xml:space="preserve">
          <source>In normal operation with package-locks enabled, extraneous modules are pruned automatically when modules are installed and you'll only need this command with the &lt;code&gt;--production&lt;/code&gt; flag.</source>
          <target state="translated">パッケージロックが有効になっている通常の操作では、モジュールがインストールされると無関係なモジュールが自動的にプルーニングされ、このコマンドに必要なのは &lt;code&gt;--production&lt;/code&gt; フラグを指定した場合のみです。</target>
        </trans-unit>
        <trans-unit id="d6666c0289b6c457cf5abdf7ea6b0210fce16fbb" translate="yes" xml:space="preserve">
          <source>In order to create teams and manage team membership, you must be a &lt;em&gt;team admin&lt;/em&gt; under the given organization. Listing teams and team memberships may be done by any member of the organizations.</source>
          <target state="translated">チームを作成してチームメンバーシップを&lt;em&gt;管理&lt;/em&gt;するには、指定した組織の&lt;em&gt;チーム管理者&lt;/em&gt;である必要があります。チームとチームメンバーシップの一覧表示は、組織の任意のメンバーが行うことができます。</target>
        </trans-unit>
        <trans-unit id="c99f1823824f0ad191feaf8aa69e302ec9a6fd70" translate="yes" xml:space="preserve">
          <source>In order to ensure that potentially sensitive information is not included in the audit data bundle, some dependencies may have their names (and sometimes versions) replaced with opaque non-reversible identifiers. It is done for the following dependency types:</source>
          <target state="translated">機密性の高い情報が監査データバンドルに含まれないようにするために、一部の依存関係では、その名前(場合によってはバージョン)を不透明な非可逆的識別子に置き換えることがあります。これは、以下の依存関係タイプに対して行われます。</target>
        </trans-unit>
        <trans-unit id="023d2d71a870c01e2680981e2eb12fa9ecc87218" translate="yes" xml:space="preserve">
          <source>In order to install private packages, you may think that we could just add a line before we run &lt;code&gt;npm install&lt;/code&gt;, using the &lt;a href=&quot;https://docs.docker.com/engine/reference/builder/#env&quot;&gt;ENV parameter&lt;/a&gt;:</source>
          <target state="translated">プライベートパッケージをインストールするために、&lt;a href=&quot;https://docs.docker.com/engine/reference/builder/#env&quot;&gt;ENVパラメータ&lt;/a&gt;を使用して、 &lt;code&gt;npm install&lt;/code&gt; を実行する前に行を追加できると思うかもしれません。</target>
        </trans-unit>
        <trans-unit id="1f5409733d3c2da36907eb399cad5da97477431e" translate="yes" xml:space="preserve">
          <source>In package directory, run</source>
          <target state="translated">パッケージディレクトリで</target>
        </trans-unit>
        <trans-unit id="0bfd06fe136b0bb982a349fcd32b6c89459f697d" translate="yes" xml:space="preserve">
          <source>In particular, npm has two modes of operation:</source>
          <target state="translated">特に npm には 2 つの動作モードがあります。</target>
        </trans-unit>
        <trans-unit id="600e9261c7a9f17f26c76d10aa21cbf6b72e87c7" translate="yes" xml:space="preserve">
          <source>In short, the main differences between using &lt;code&gt;npm install&lt;/code&gt; and &lt;code&gt;npm ci&lt;/code&gt; are:</source>
          <target state="translated">つまり、 &lt;code&gt;npm install&lt;/code&gt; と &lt;code&gt;npm ci&lt;/code&gt; の主な違いは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="e0684ca86550375447c1d12a9d3ab59ba2d7fb1c" translate="yes" xml:space="preserve">
          <source>In some cases, you want to express the compatibility of your package with a host tool or library, while not necessarily doing a &lt;code&gt;require&lt;/code&gt; of this host. This is usually referred to as a &lt;em&gt;plugin&lt;/em&gt;. Notably, your module may be exposing a specific interface, expected and specified by the host documentation.</source>
          <target state="translated">場合によっては、パッケージのホストツールまたはライブラリとの互換性を表現する &lt;code&gt;require&lt;/code&gt; がありますが、このホストの要件を必ずしも満たす必要はありません。これは通常、&lt;em&gt;プラグイン&lt;/em&gt;と呼ばれ&lt;em&gt;ます&lt;/em&gt;。特に、あなたのモジュールは特定のインターフェースを公開している可能性があり、ホストのドキュメントによって期待され、指定されています。</target>
        </trans-unit>
        <trans-unit id="69d52e1102f15474a1d6b1d66b2c4e2b5f85b885" translate="yes" xml:space="preserve">
          <source>In that file, add a function as a property of the &lt;code&gt;exports&lt;/code&gt; object. This will make the function available to other code.</source>
          <target state="translated">そのファイルで、関数を &lt;code&gt;exports&lt;/code&gt; オブジェクトのプロパティとして追加します。これにより、関数が他のコードで使用できるようになります。</target>
        </trans-unit>
        <trans-unit id="ed2ccfabbd923fca634c0c802c4680b9f3bcca61" translate="yes" xml:space="preserve">
          <source>In the code above, I am appending &lt;code&gt;\\?\&lt;/code&gt; to the current directory absolute path. This will actually force the Windows API to allow an increase in the MAX_PATH variable (normally capped at 260). Read more about &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa365247%28v=vs.85%29.aspx#maxpath&quot;&gt;max path&lt;/a&gt;. This is happening during the sharedfolder creation which is intentionally handled by VBoxManage and not Vagrant's &quot;synced_folder&quot; method. The last bit is pretty self-explanatory; we create the new shared folder and then make sure it's mounted each time the machine is accessed or touched since Vagrant likes to reload its mounts/shared folders on each load.</source>
          <target state="translated">上記のコードでは、現在のディレクトリの絶対パスに &lt;code&gt;\\?\&lt;/code&gt; を追加しています。これにより、実際にはWindows APIがMAX_PATH変数（通常は上限が260）の増加を許可するようになります。&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa365247%28v=vs.85%29.aspx#maxpath&quot;&gt;最大パスの&lt;/a&gt;詳細をご覧ください。これは、Vagrantの「synced_folder」メソッドではなく、VBoxManageによって意図的に処理される共有フォルダーの作成中に発生します。最後のビットは一目瞭然です。Vagrantは各ロードでマウント/共有フォルダーをリロードするのが好きなので、新しい共有フォルダーを作成し、マシンがアクセスまたはタッチされるたびにマウントされることを確認します。</target>
        </trans-unit>
        <trans-unit id="b22eba1dfad6b5c5805e6648c5bde3860bf16b24" translate="yes" xml:space="preserve">
          <source>In the context of a Node program, the &lt;code&gt;module&lt;/code&gt; is also the thing that was loaded &lt;em&gt;from&lt;/em&gt; a file. For example, in the following program:</source>
          <target state="translated">Nodeプログラムのコンテキストでは、 &lt;code&gt;module&lt;/code&gt; はファイル&lt;em&gt;から&lt;/em&gt;ロードさ&lt;em&gt;れ&lt;/em&gt;たものでもあります。たとえば、次のプログラムでは：</target>
        </trans-unit>
        <trans-unit id="d4472d8c2b685da9bed1a91addad6ed8b72bc7b9" translate="yes" xml:space="preserve">
          <source>In the dependent package repository, open a pull or merge request to update the version of the vulnerable package to a version with a fix.</source>
          <target state="translated">依存パッケージリポジトリで、脆弱性のあるパッケージのバージョンを修正したバージョンに更新するためのプルまたはマージリクエストを開きます。</target>
        </trans-unit>
        <trans-unit id="67d9d4c943e9e05c5d2edf7f246cc421e3365780" translate="yes" xml:space="preserve">
          <source>In the future, this information may be used in other creative ways.</source>
          <target state="translated">将来的には、この情報は他の創造的な方法で使用される可能性があります。</target>
        </trans-unit>
        <trans-unit id="c69afc6a84394721e4b5bba9b335999424fbbef8" translate="yes" xml:space="preserve">
          <source>In the output:</source>
          <target state="translated">アウトプットでは</target>
        </trans-unit>
        <trans-unit id="43f4e7a53fc606039d9b12abe3bab43f11186b35" translate="yes" xml:space="preserve">
          <source>In the package or dependent package issue tracker, open an issue and include information from the audit report, including the vulnerability report from the &quot;More info&quot; field.</source>
          <target state="translated">パッケージまたは依存パッケージの問題追跡では、問題を開き、「詳細情報」フィールドの脆弱性レポートを含む監査レポートからの情報を含めます。</target>
        </trans-unit>
        <trans-unit id="6fe0731078a5c1b8598e0b9292d45dbf070bd7f1" translate="yes" xml:space="preserve">
          <source>In the package repository, open a pull or merge request to make the fix on the package repository.</source>
          <target state="translated">パッケージリポジトリで、パッケージリポジトリ上で修正を行うためのプルまたはマージリクエストを開きます。</target>
        </trans-unit>
        <trans-unit id="bd6f154ed9e2653ff7cd0b73be56ba18590a36f9" translate="yes" xml:space="preserve">
          <source>In the root of your package, do this:</source>
          <target state="translated">パッケージのルートでは、このようにします。</target>
        </trans-unit>
        <trans-unit id="c7822a9b9e2f412ba3ed00580e778b51e2d85b6c" translate="yes" xml:space="preserve">
          <source>In this case, &lt;code&gt;&lt;a href=&quot;dedupe&quot;&gt;npm-dedupe&lt;/a&gt;&lt;/code&gt; will transform the tree to:</source>
          <target state="translated">この場合、 &lt;code&gt;&lt;a href=&quot;dedupe&quot;&gt;npm-dedupe&lt;/a&gt;&lt;/code&gt; はツリーを次のように変換します。</target>
        </trans-unit>
        <trans-unit id="f7c597d7ae842dac775ee53127af885495cbbc96" translate="yes" xml:space="preserve">
          <source>In this case, it's best to map these additional items in a &lt;code&gt;devDependencies&lt;/code&gt; object.</source>
          <target state="translated">この場合、これらの追加項目を &lt;code&gt;devDependencies&lt;/code&gt; オブジェクトにマップするのが最善です。</target>
        </trans-unit>
        <trans-unit id="9a6ece42a360b96028203c2de1cd05dc968e4d22" translate="yes" xml:space="preserve">
          <source>In this case, running &lt;code&gt;npm update&lt;/code&gt; will install &lt;code&gt;dep1@1.1.2&lt;/code&gt;. Even though the &lt;code&gt;latest&lt;/code&gt; tag points to &lt;code&gt;1.2.2&lt;/code&gt;, this version does not satisfy &lt;code&gt;~1.1.1&lt;/code&gt;, which is equivalent to &lt;code&gt;&amp;gt;=1.1.1 &amp;lt;1.2.0&lt;/code&gt;. So the highest-sorting version that satisfies &lt;code&gt;~1.1.1&lt;/code&gt; is used, which is &lt;code&gt;1.1.2&lt;/code&gt;.</source>
          <target state="translated">この場合、 &lt;code&gt;npm update&lt;/code&gt; を実行すると &lt;code&gt;dep1@1.1.2&lt;/code&gt; がインストールされます。 &lt;code&gt;latest&lt;/code&gt; タグは &lt;code&gt;1.2.2&lt;/code&gt; を指していますが、このバージョンは &lt;code&gt;~1.1.1&lt;/code&gt; 満たしていません。これは &lt;code&gt;&amp;gt;=1.1.1 &amp;lt;1.2.0&lt;/code&gt; と同等です。したがって、 &lt;code&gt;~1.1.1&lt;/code&gt; を満たす最高のソートバージョン、つまり &lt;code&gt;1.1.2&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="4c110815303257806c2d243b125868ea820e17e5" translate="yes" xml:space="preserve">
          <source>In this case, we might expect a folder structure like this:</source>
          <target state="translated">この場合、このようなフォルダ構造になることが予想されます。</target>
        </trans-unit>
        <trans-unit id="9ee5fc2bc10de85e2f7df8445a07862a5a7cfcb6" translate="yes" xml:space="preserve">
          <source>Incidentally, if you would prefer that packages not be installed to your roaming profile (because you have a quota on your shared network, or it makes logging in or out from a domain sluggish), you can put it in your local app data instead:</source>
          <target state="translated">ちなみに、ローミングプロファイルにパッケージをインストールしないようにしたい場合(共有ネットワークにノルマがあったり、ドメインからのログインやログアウトが遅くなったりするため)は、代わりにローカルアプリのデータに入れておくといいでしょう。</target>
        </trans-unit>
        <trans-unit id="55a1b783e72c5a61ef2d849d50d2bce7a04ef479" translate="yes" xml:space="preserve">
          <source>Include Documentation (readme.md)</source>
          <target state="translated">ドキュメントを含める (readme.md)</target>
        </trans-unit>
        <trans-unit id="c9ec7fcf0ce1c005cbdd2ae9ab39e1773e6bf368" translate="yes" xml:space="preserve">
          <source>Indentation</source>
          <target state="translated">Indentation</target>
        </trans-unit>
        <trans-unit id="ab946da3413cdb7986cdb7d1c34302e61a4ac30f" translate="yes" xml:space="preserve">
          <source>Indicates that the install was done with the environment variable &lt;code&gt;NODE_PRESERVE_SYMLINKS&lt;/code&gt; enabled. The installer should insist that the value of this property match that environment variable.</source>
          <target state="translated">環境変数 &lt;code&gt;NODE_PRESERVE_SYMLINKS&lt;/code&gt; を有効にしてインストールが行われたことを示します。インストーラーは、このプロパティの値がその環境変数と一致することを要求する必要があります。</target>
        </trans-unit>
        <trans-unit id="c926cf8547ff2539eedc32dd8fe6261692e27783" translate="yes" xml:space="preserve">
          <source>Indicates that you don't want npm to make any changes and that it should only report what it would have done. This can be passed into any of the commands that modify your local installation, eg, &lt;code&gt;install&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, &lt;code&gt;dedupe&lt;/code&gt;, &lt;code&gt;uninstall&lt;/code&gt;. This is NOT currently honored by some network related commands, eg &lt;code&gt;dist-tags&lt;/code&gt;, &lt;code&gt;owner&lt;/code&gt;, etc.</source>
          <target state="translated">npmによる変更を望まないこと、およびnpmが何をしたかを報告するだけであることを示します。これは、ローカルインストールを変更するコマンド（ &lt;code&gt;install&lt;/code&gt; 、 &lt;code&gt;update&lt;/code&gt; 、 &lt;code&gt;dedupe&lt;/code&gt; 、 &lt;code&gt;uninstall&lt;/code&gt; など)に渡すことができます。これは現在、一部のネットワーク関連コマンド（ &lt;code&gt;dist-tags&lt;/code&gt; 、 &lt;code&gt;owner&lt;/code&gt; など）では受け入れられません。</target>
        </trans-unit>
        <trans-unit id="39e28bf0989e4234d6938ed341cb5de9215a9b1c" translate="yes" xml:space="preserve">
          <source>Inspect the env to determine where to put things. For instance, if the &lt;code&gt;npm_config_binroot&lt;/code&gt; environment variable is set to &lt;code&gt;/home/user/bin&lt;/code&gt;, then don't try to install executables into &lt;code&gt;/usr/local/bin&lt;/code&gt;. The user probably set it up that way for a reason.</source>
          <target state="translated">envを調べて、どこに置くかを決定します。たとえば、 &lt;code&gt;npm_config_binroot&lt;/code&gt; 環境変数が &lt;code&gt;/home/user/bin&lt;/code&gt; に設定されている場合は、実行可能ファイルを &lt;code&gt;/usr/local/bin&lt;/code&gt; にインストールしないでください。ユーザーはおそらくその理由でそのように設定しました。</target>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">Install</target>
        </trans-unit>
        <trans-unit id="6b5c145a6bce3b69c546f01cff677b85c74c30aa" translate="yes" xml:space="preserve">
          <source>Install &lt;code&gt;dev-dependencies&lt;/code&gt; along with packages.</source>
          <target state="translated">パッケージとともに &lt;code&gt;dev-dependencies&lt;/code&gt; をインストールします。</target>
        </trans-unit>
        <trans-unit id="ccf25b1b26120c3c1106d4085aa6f09c5dfd8c88" translate="yes" xml:space="preserve">
          <source>Install Lodash</source>
          <target state="translated">ロダッシュの設置</target>
        </trans-unit>
        <trans-unit id="7141ddecf1521195ee23a54ca7d0e182f29e87eb" translate="yes" xml:space="preserve">
          <source>Install a package called &lt;code&gt;lodash&lt;/code&gt;. Confirm that it ran successfully by listing the contents of the &lt;code&gt;node_modules&lt;/code&gt; directory and seeing a directory called &lt;code&gt;lodash&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;lodash&lt;/code&gt; というパッケージをインストールします。それは内容リストすることで正常に実行されたことを確認し &lt;code&gt;node_modules&lt;/code&gt; のディレクトリをと呼ばれるディレクトリを見 &lt;code&gt;lodash&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="daab255b11723ab28edd13e1f0b5c2f92e7af229" translate="yes" xml:space="preserve">
          <source>Install a package called &lt;code&gt;lodash&lt;/code&gt;. Confirm that it ran successfully by listing the contents of the &lt;code&gt;node_modules&lt;/code&gt; directory, where you should see a directory called &lt;code&gt;lodash&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;lodash&lt;/code&gt; というパッケージをインストールします。 &lt;code&gt;node_modules&lt;/code&gt; ディレクトリの内容を一覧表示して、正常に実行されたことを確認します。 &lt;code&gt;lodash&lt;/code&gt; というディレクトリが表示されます。</target>
        </trans-unit>
        <trans-unit id="cf863402fa035e9fa30835bebaa0bdfaf9736101" translate="yes" xml:space="preserve">
          <source>Install a package that is sitting on the filesystem. Note: if you just want to link a dev directory into your npm root, you can do this more easily by using &lt;code&gt;npm link&lt;/code&gt;.</source>
          <target state="translated">ファイルシステム上にあるパッケージをインストールします。注：devディレクトリをnpmルートにリンクするだけの場合は、 &lt;code&gt;npm link&lt;/code&gt; を使用することで、これをより簡単に行うことができます。</target>
        </trans-unit>
        <trans-unit id="d04e289b8877f209b7a2ec868f0418e05d1d551c" translate="yes" xml:space="preserve">
          <source>Install a package.</source>
          <target state="translated">パッケージをインストールします。</target>
        </trans-unit>
        <trans-unit id="bb9709a44ef41350b6e1d47070cb73a8437531f0" translate="yes" xml:space="preserve">
          <source>Install a project with a clean slate.</source>
          <target state="translated">クリーンな状態でプロジェクトをインストールします。</target>
        </trans-unit>
        <trans-unit id="0f07764ee1d7595c20f4541dcdf96b03a18799d2" translate="yes" xml:space="preserve">
          <source>Install a version of the package matching the specified version range. This will follow the same rules for resolving dependencies described in &lt;code&gt;&lt;a href=&quot;../files/package.json&quot;&gt;package.json&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">指定されたバージョン範囲に一致するパッケージのバージョンをインストールします。これは、 &lt;code&gt;&lt;a href=&quot;../files/package.json&quot;&gt;package.json&lt;/a&gt;&lt;/code&gt; で説明されている依存関係を解決するための同じルールに従います。</target>
        </trans-unit>
        <trans-unit id="0aa371dd5a553c6e4d334178da28c3547ace7684" translate="yes" xml:space="preserve">
          <source>Install it &lt;strong&gt;globally&lt;/strong&gt; if you're going to run it on the command line.</source>
          <target state="translated">コマンドラインで実行する場合は、&lt;strong&gt;グローバルに&lt;/strong&gt;インストールしてください。</target>
        </trans-unit>
        <trans-unit id="c1ef7760f5400ec98acb48ffe6a8955346a1d5b3" translate="yes" xml:space="preserve">
          <source>Install it &lt;strong&gt;locally&lt;/strong&gt; if you're going to &lt;code&gt;require()&lt;/code&gt; it.</source>
          <target state="translated">&lt;code&gt;require()&lt;/code&gt; する場合は、&lt;strong&gt;ローカルに&lt;/strong&gt;インストールしてください。</target>
        </trans-unit>
        <trans-unit id="0e3ae7d340cd5d6118fab28b40d85f02e81d01f4" translate="yes" xml:space="preserve">
          <source>Install npm &amp;amp; manage npm versions</source>
          <target state="translated">npmのインストールとnpmバージョンの管理</target>
        </trans-unit>
        <trans-unit id="ba703cade7e55eac3689188606364be7af94fd82" translate="yes" xml:space="preserve">
          <source>Install npm from a terminal console.</source>
          <target state="translated">ターミナルコンソールからnpmをインストールします。</target>
        </trans-unit>
        <trans-unit id="607a14863d7c761a2944f0c9b1511a8d957cb63a" translate="yes" xml:space="preserve">
          <source>Install the dependencies in the local node_modules folder.</source>
          <target state="translated">ローカルのnode_modulesフォルダに依存関係をインストールします。</target>
        </trans-unit>
        <trans-unit id="614cd878b6f0da8f135c854fd6329b05324c9dc0" translate="yes" xml:space="preserve">
          <source>Install the latest msi from &lt;a href=&quot;https://nodejs.org/en/download&quot;&gt;https://nodejs.org/en/download&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://nodejs.org/en/download&quot;&gt;https://nodejs.org/en/download&lt;/a&gt;から最新のmsiをインストールします</target>
        </trans-unit>
        <trans-unit id="799d7b201a6325929254cf2a50b219abd1d73680" translate="yes" xml:space="preserve">
          <source>Install the latest package from &lt;a href=&quot;https://nodejs.org/en/download&quot;&gt;https://nodejs.org/en/download&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://nodejs.org/en/download&quot;&gt;https://nodejs.org/en/download&lt;/a&gt;から最新のパッケージをインストールします</target>
        </trans-unit>
        <trans-unit id="4cd5c29815d08cef50683621a18dbb82dbc67f1d" translate="yes" xml:space="preserve">
          <source>Install the package at &lt;code&gt;https://bitbucket.org/bitbucketname/bitbucketrepo&lt;/code&gt; by attempting to clone it using &lt;code&gt;git&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;git&lt;/code&gt; を使用してクローンを作成し、 &lt;code&gt;https://bitbucket.org/bitbucketname/bitbucketrepo&lt;/code&gt; にパッケージをインストールします。</target>
        </trans-unit>
        <trans-unit id="5982c219bc0b15ae84452dd51027dbe8d5c50d3a" translate="yes" xml:space="preserve">
          <source>Install the package at &lt;code&gt;https://gist.github.com/gistID&lt;/code&gt; by attempting to clone it using &lt;code&gt;git&lt;/code&gt;. The GitHub username associated with the gist is optional and will not be saved in &lt;code&gt;package.json&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;git&lt;/code&gt; を使用してクローンを作成することにより、 &lt;code&gt;https://gist.github.com/gistID&lt;/code&gt; にパッケージをインストールします。gistに関連付けられたGitHubユーザー名はオプションであり、 &lt;code&gt;package.json&lt;/code&gt; に保存されません。</target>
        </trans-unit>
        <trans-unit id="52b67d2695b13f27172b946ca9a54c3eeaa96166" translate="yes" xml:space="preserve">
          <source>Install the package at &lt;code&gt;https://github.com/githubname/githubrepo&lt;/code&gt; by attempting to clone it using &lt;code&gt;git&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;git&lt;/code&gt; を使用してクローンを作成し、 &lt;code&gt;https://github.com/githubname/githubrepo&lt;/code&gt; にパッケージをインストールします。</target>
        </trans-unit>
        <trans-unit id="baf62fcb31003b56dcd543e6d4b386ce9844dadf" translate="yes" xml:space="preserve">
          <source>Install the package at &lt;code&gt;https://gitlab.com/gitlabname/gitlabrepo&lt;/code&gt; by attempting to clone it using &lt;code&gt;git&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;git&lt;/code&gt; を使用してクローンを作成し、 &lt;code&gt;https://gitlab.com/gitlabname/gitlabrepo&lt;/code&gt; にパッケージをインストールします。</target>
        </trans-unit>
        <trans-unit id="157aa4043c316b4a3ac95acac005ab0a973f8350" translate="yes" xml:space="preserve">
          <source>Install the package in the directory as a symlink in the current project. Its dependencies will be installed before it's linked. If &lt;code&gt;&amp;lt;folder&amp;gt;&lt;/code&gt; sits inside the root of your project, its dependencies may be hoisted to the toplevel &lt;code&gt;node_modules&lt;/code&gt; as they would for other types of dependencies.</source>
          <target state="translated">現在のプロジェクトのシンボリックリンクとしてディレクトリにパッケージをインストールします。依存関係はリンクされる前にインストールされます。 &lt;code&gt;&amp;lt;folder&amp;gt;&lt;/code&gt; がプロジェクトのルート内にある場合、その依存関係は、他のタイプの依存関係の場合と同様に、トップレベルの &lt;code&gt;node_modules&lt;/code&gt; に引き上げられることがあります。</target>
        </trans-unit>
        <trans-unit id="5a8fd002f71a6544b1cdf6a44a11ab75b940fcb9" translate="yes" xml:space="preserve">
          <source>Install the specified version of the package. This will fail if the version has not been published to the registry.</source>
          <target state="translated">指定したバージョンのパッケージをインストールします。バージョンがレジストリに公開されていない場合は失敗します。</target>
        </trans-unit>
        <trans-unit id="cddac272afa570d719448e7bc8e1ad0533bf4925" translate="yes" xml:space="preserve">
          <source>Install the version of the package that is referenced by the specified tag. If the tag does not exist in the registry data for that package, then this will fail.</source>
          <target state="translated">指定したタグで参照されているパッケージのバージョンをインストールします。そのパッケージのレジストリデータにタグが存在しない場合は失敗します。</target>
        </trans-unit>
        <trans-unit id="ff0365187eef07ae6db647930f168c806bf3ee31" translate="yes" xml:space="preserve">
          <source>Installing a Package</source>
          <target state="translated">パッケージのインストール</target>
        </trans-unit>
        <trans-unit id="ea0bbebde8e855aa8f57db9e7c7c2749852369d2" translate="yes" xml:space="preserve">
          <source>Installing a single package</source>
          <target state="translated">単一パッケージのインストール</target>
        </trans-unit>
        <trans-unit id="c8c898343e5dca91b2500ba5f6bb300861368794" translate="yes" xml:space="preserve">
          <source>Installing all packages</source>
          <target state="translated">すべてのパッケージのインストール</target>
        </trans-unit>
        <trans-unit id="b19e62e549d6abd6efa2974927553d53a292d89b" translate="yes" xml:space="preserve">
          <source>Installing npm from the Node.js site</source>
          <target state="translated">Node.jsのサイトからnpmをインストールする</target>
        </trans-unit>
        <trans-unit id="73d6112ff7751cc4d1a55037242f6562d50ff66b" translate="yes" xml:space="preserve">
          <source>Installing private packages</source>
          <target state="translated">プライベートパッケージのインストール</target>
        </trans-unit>
        <trans-unit id="48b437208df7e1a1d79343dcba2344015bc30b92" translate="yes" xml:space="preserve">
          <source>Installing scoped packages</source>
          <target state="translated">スコープされたパッケージのインストール</target>
        </trans-unit>
        <trans-unit id="8c96f7c03f05c3f83504aa4ed97ccbf89a4673c3" translate="yes" xml:space="preserve">
          <source>Installing with tags</source>
          <target state="translated">タグを使ったインストール</target>
        </trans-unit>
        <trans-unit id="6a8059cf2aeb983229ecb130c811f40d0a61e690" translate="yes" xml:space="preserve">
          <source>Installs the package from the hosted git provider, cloning it with &lt;code&gt;git&lt;/code&gt;. For a full git remote url, only that URL will be attempted.</source>
          <target state="translated">でそれをクローニングし、ホストされているgitのプロバイダからパッケージをインストールします &lt;code&gt;git&lt;/code&gt; の。完全なgitリモートURLの場合、そのURLのみが試行されます。</target>
        </trans-unit>
        <trans-unit id="5a66b9b945295de0ea81d4dfb263f96720405bf1" translate="yes" xml:space="preserve">
          <source>Instead of steps 2-4, you can use the corresponding ENV variable (e.g. if you don't want to modify &lt;code&gt;~/.profile&lt;/code&gt;):</source>
          <target state="translated">手順2〜4の代わりに、対応するENV変数を使用できます（たとえば、 &lt;code&gt;~/.profile&lt;/code&gt; を変更したくない場合）。</target>
        </trans-unit>
        <trans-unit id="c4f0a1672650c31206545ae866dbd661b72b1b05" translate="yes" xml:space="preserve">
          <source>Invalid JSON</source>
          <target state="translated">無効なJSON</target>
        </trans-unit>
        <trans-unit id="95ae015eef7a5a664d7d865b820369e073ddf6b3" translate="yes" xml:space="preserve">
          <source>Is there a website or something to see package docs and such?</source>
          <target state="translated">パッケージのドキュメントとかが見れるサイトとかないのかな?</target>
        </trans-unit>
        <trans-unit id="3696b8de52cbec587919622eed888189ee3c43b2" translate="yes" xml:space="preserve">
          <source>It cannot be set from the command line, but if you are using npm programmatically, you may wish to send logs to somewhere other than stderr.</source>
          <target state="translated">コマンドラインからは設定できませんが、プログラム的にnpmを使用している場合は、標準エラー以外の場所にログを送りたい場合があります。</target>
        </trans-unit>
        <trans-unit id="b2b8216ed783d10ac97d9cece5452721a3d3c35e" translate="yes" xml:space="preserve">
          <source>It does not necessarily need to match your github repository name.</source>
          <target state="translated">必ずしも github リポジトリ名と一致する必要はありません。</target>
        </trans-unit>
        <trans-unit id="6312476b5ab53e443859ff197c4d33e9b64d5e51" translate="yes" xml:space="preserve">
          <source>It is &lt;em&gt;not&lt;/em&gt; the path to a certificate file (and there is no &quot;certfile&quot; option).</source>
          <target state="translated">これは証明書ファイルへのパスではあり&lt;em&gt;ません&lt;/em&gt;（「certfile」オプションはありません）。</target>
        </trans-unit>
        <trans-unit id="c391efef90683ad671d2800be3e90e90b27fd53d" translate="yes" xml:space="preserve">
          <source>It is &lt;em&gt;not&lt;/em&gt; the path to a key file (and there is no &quot;keyfile&quot; option).</source>
          <target state="translated">これはキーファイルへのパスではあり&lt;em&gt;ません&lt;/em&gt;（「keyfile」オプションはありません）。</target>
        </trans-unit>
        <trans-unit id="f14a6af6c56e464ae3f6022b3845466f7683dfda" translate="yes" xml:space="preserve">
          <source>It is allowed to both blacklist, and whitelist, although there isn't any good reason to do this.</source>
          <target state="translated">ブラックリスト化とホワイトリスト化の両方が認められていますが、これを行うには良い理由があるわけではありません。</target>
        </trans-unit>
        <trans-unit id="0d21fda1dfc7e7a0739a7e26c274c1c6b6645543" translate="yes" xml:space="preserve">
          <source>It is extremely configurable to support a wide variety of use cases. Most commonly, it is used to publish, discover, install, and develop node programs.</source>
          <target state="translated">さまざまなユースケースをサポートするための設定が非常に可能です。最も一般的には、ノードプログラムの公開、発見、インストール、開発に使用されます。</target>
        </trans-unit>
        <trans-unit id="0e329d02cedd93bc2394713aa002a694a8eda7ed" translate="yes" xml:space="preserve">
          <source>It is highly recommended you commit the generated package lock to source control: this will allow anyone else on your team, your deployments, your CI/continuous integration, and anyone else who runs &lt;code&gt;npm install&lt;/code&gt; in your package source to get the exact same dependency tree that you were developing on. Additionally, the diffs from these changes are human-readable and will inform you of any changes npm has made to your &lt;code&gt;node_modules&lt;/code&gt;, so you can notice if any transitive dependencies were updated, hoisted, etc.</source>
          <target state="translated">生成されたパッケージロックをソース管理にコミットすることを強くお勧めします。これにより、チームの他のすべてのユーザー、デプロイメント、CI /継続的インテグレーション、およびパッケージソースで &lt;code&gt;npm install&lt;/code&gt; を実行するすべてのユーザーがまったく同じ依存関係ツリーを取得できますあなたが開発していたこと。さらに、これらの変更の差分は人間が読める形式であり、npmが &lt;code&gt;node_modules&lt;/code&gt; に加えた変更を通知します。これにより、推移的な依存関係が更新されたり、巻き上げられたりしたかどうかを確認できます。</target>
        </trans-unit>
        <trans-unit id="7fa575a825fa2f5b8f0cb07d2335ddfd6fc2a10f" translate="yes" xml:space="preserve">
          <source>It is still your program's responsibility to handle the lack of the dependency. For example, something like this:</source>
          <target state="translated">依存関係の欠如を処理するのは、やはりあなたのプログラムの責任です。例えば、次のようなものです。</target>
        </trans-unit>
        <trans-unit id="241816bf6d401487d6c9415ec6353a3ce60c96bd" translate="yes" xml:space="preserve">
          <source>It should generally be called during installation, but if you need to run it directly, run:</source>
          <target state="translated">通常はインストール中に呼び出されるはずですが、直接実行する必要がある場合は実行してください。</target>
        </trans-unit>
        <trans-unit id="c4245e3acc2d772effaa7e57af89255710a3d475" translate="yes" xml:space="preserve">
          <source>It should look like this:</source>
          <target state="translated">こんな感じになるはずです。</target>
        </trans-unit>
        <trans-unit id="4d37d93ec683d8da41559e97e8eec57f8c082148" translate="yes" xml:space="preserve">
          <source>It will also install missing packages. As with all commands that install packages, the &lt;code&gt;--dev&lt;/code&gt; flag will cause &lt;code&gt;devDependencies&lt;/code&gt; to be processed as well.</source>
          <target state="translated">不足しているパッケージもインストールします。パッケージをインストールするすべてのコマンドと同様に、 &lt;code&gt;--dev&lt;/code&gt; フラグを指定すると、 &lt;code&gt;devDependencies&lt;/code&gt; も処理されます。</target>
        </trans-unit>
        <trans-unit id="f0147c4e5a71812ce4a6d4a4cf8d36752b11dc35" translate="yes" xml:space="preserve">
          <source>It will never write to &lt;code&gt;package.json&lt;/code&gt; or any of the package-locks: installs are essentially frozen.</source>
          <target state="translated">&lt;code&gt;package.json&lt;/code&gt; やパッケージロックに書き込むことはありません。インストールは基本的にフリーズされています。</target>
        </trans-unit>
        <trans-unit id="55f4f46341e86975976e077b58da610bf83b1e7a" translate="yes" xml:space="preserve">
          <source>It will print out extraneous, missing, and invalid packages.</source>
          <target state="translated">不要なパッケージ、不足しているパッケージ、無効なパッケージを印刷します。</target>
        </trans-unit>
        <trans-unit id="ee906bc1869c9a69c2a280ee0d4e949df294bca8" translate="yes" xml:space="preserve">
          <source>It works on version ranges as well as specific versions, so you can do something like this:</source>
          <target state="translated">特定のバージョンだけでなく、バージョン範囲でも動作するので、こんなことができます。</target>
        </trans-unit>
        <trans-unit id="194263e8bf81ddc50161b2a43dd0407d6c6d7674" translate="yes" xml:space="preserve">
          <source>It's a boolean thing. Starring repeatedly has no additional effect.</source>
          <target state="translated">ブール型のものです。主演を繰り返しても追加効果はありません。</target>
        </trans-unit>
        <trans-unit id="1a7e45651633f6a0c1525b488841e087d22f9ded" translate="yes" xml:space="preserve">
          <source>It's a good practice to periodically update the packages your application depends on. Then, if the original developers have improved their code, your code will be improved as well.</source>
          <target state="translated">アプリケーションが依存しているパッケージを定期的に更新するのは良い習慣です。そうすれば、オリジナルの開発者がコードを改良していれば、あなたのコードも改良されるでしょう。</target>
        </trans-unit>
        <trans-unit id="8b5832ff66828eb0519ea63cb0bbdfb27d976412" translate="yes" xml:space="preserve">
          <source>It's important to communicate the extent of changes in a new release of code, because sometimes updates can break code that a package needs (called &lt;em&gt;dependencies&lt;/em&gt;).&lt;strong&gt;Semantic versioning&lt;/strong&gt; (semver) is a standard that was designed to solve this problem.</source>
          <target state="translated">コードの新しいリリースでの変更の範囲を伝えることは重要です。更新によって、パッケージに必要なコード（&lt;em&gt;依存関係&lt;/em&gt;と呼ばれる）が壊れる場合があるためです。&lt;strong&gt;セマンティックバージョニング&lt;/strong&gt;（semver）は、この問題を解決するために設計された標準です。</target>
        </trans-unit>
        <trans-unit id="1b1d93ca4e5e88459b39a6243b2f173db5c15403" translate="yes" xml:space="preserve">
          <source>It's most likely a temporary npm registry glitch. Check &lt;a href=&quot;http://status.npmjs.org/&quot;&gt;npm server status&lt;/a&gt; and try again later.</source>
          <target state="translated">それはおそらく一時的なnpmレジストリの不具合です。&lt;a href=&quot;http://status.npmjs.org/&quot;&gt;npmサーバーのステータス&lt;/a&gt;を確認し、後で再試行してください。</target>
        </trans-unit>
        <trans-unit id="2eb229d091ef9849888ef6e26b35d82b6f95179e" translate="yes" xml:space="preserve">
          <source>Just use &lt;code&gt;npm install&lt;/code&gt; now to do what &lt;code&gt;npm bundle&lt;/code&gt; used to do.</source>
          <target state="translated">&lt;code&gt;npm install&lt;/code&gt; を使用して、 &lt;code&gt;npm bundle&lt;/code&gt; が実行していたことを実行してください。</target>
        </trans-unit>
        <trans-unit id="081b5910405557139dad3722866934240516df09" translate="yes" xml:space="preserve">
          <source>Keep lines shorter than 80 characters. It's better for lines to be too short than to be too long. Break up long lists, objects, and other statements onto multiple lines.</source>
          <target state="translated">行は80文字以下にしましょう。行は長すぎるよりも短すぎる方が良いです。長いリストやオブジェクト、その他のステートメントを複数行に分割します。</target>
        </trans-unit>
        <trans-unit id="970e8b9e29e1e8c963db29df7421731e6c38cab3" translate="yes" xml:space="preserve">
          <source>Keeping files &lt;em&gt;out&lt;/em&gt; of your package</source>
          <target state="translated">パッケージ&lt;em&gt;から&lt;/em&gt;ファイルを除外する</target>
        </trans-unit>
        <trans-unit id="0398ccd0f49298b10a3d76a47800d2ebecd49859" translate="yes" xml:space="preserve">
          <source>LICENSE</source>
          <target state="translated">LICENSE</target>
        </trans-unit>
        <trans-unit id="cd8d65b4f5643b453d307cad0df67f3e14f86306" translate="yes" xml:space="preserve">
          <source>Lastly, the &lt;code&gt;npm_lifecycle_event&lt;/code&gt; environment variable is set to whichever stage of the cycle is being executed. So, you could have a single script used for different parts of the process which switches based on what's currently happening.</source>
          <target state="translated">最後に、 &lt;code&gt;npm_lifecycle_event&lt;/code&gt; 環境変数は、サイクルの実行されているステージに設定されます。したがって、現在起こっていることに基づいて切り替わるプロセスのさまざまな部分に使用される単一のスクリプトを持つことができます。</target>
        </trans-unit>
        <trans-unit id="378cbbf54cbb2e3f3bd201f02c1b946ec3601eba" translate="yes" xml:space="preserve">
          <source>Learn More</source>
          <target state="translated">詳細はこちら</target>
        </trans-unit>
        <trans-unit id="e1848775ca94a3fc45d1b3841d78a2b3d15633f0" translate="yes" xml:space="preserve">
          <source>Learn about Paid Accounts and Billing</source>
          <target state="translated">有料アカウントと請求書について学ぶ</target>
        </trans-unit>
        <trans-unit id="824d76b124e6289f372e2ff6bcba91e8939343bd" translate="yes" xml:space="preserve">
          <source>Learn more</source>
          <target state="translated">詳細はこちら</target>
        </trans-unit>
        <trans-unit id="dc74abcb89e3631e26ef0e404afc42f268f107a9" translate="yes" xml:space="preserve">
          <source>Learn more about npm Orgs and npmE</source>
          <target state="translated">npm Orgs と npmE の詳細はこちら</target>
        </trans-unit>
        <trans-unit id="aefefbf8f6ff608bbff3e72ec45255f5167b1607" translate="yes" xml:space="preserve">
          <source>Less-common operating systems</source>
          <target state="translated">一般的ではないオペレーティングシステム</target>
        </trans-unit>
        <trans-unit id="dec5b634b11b3a7572db5704ddd434fef451b300" translate="yes" xml:space="preserve">
          <source>Levels of Authentication</source>
          <target state="translated">認証レベル</target>
        </trans-unit>
        <trans-unit id="189c373ef03614b1c26e224e7051a975e595615f" translate="yes" xml:space="preserve">
          <source>Licensed under the npm License.</source>
          <target state="translated">npmライセンスでライセンスされています。</target>
        </trans-unit>
        <trans-unit id="a344c80294f2be4237b01d237315036177d831f4" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;npm publish&lt;/code&gt;, &lt;code&gt;npm install &amp;lt;pkg&amp;gt;&lt;/code&gt; will use the &lt;code&gt;latest&lt;/code&gt; tag by default. To override this behavior, use &lt;code&gt;npm install &amp;lt;pkg&amp;gt;@&amp;lt;tag&amp;gt;&lt;/code&gt;. The following example will install the &lt;code&gt;somepkg&lt;/code&gt; at the version that has been tagged with &lt;code&gt;beta&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;npm publish&lt;/code&gt; と同様に、 &lt;code&gt;npm install &amp;lt;pkg&amp;gt;&lt;/code&gt; はデフォルトで &lt;code&gt;latest&lt;/code&gt; タグを使用します。この動作を上書きするには、 &lt;code&gt;npm install &amp;lt;pkg&amp;gt;@&amp;lt;tag&amp;gt;&lt;/code&gt; ます。次の例では、インストールされます &lt;code&gt;somepkg&lt;/code&gt; をでタグ付けされたバージョンで &lt;code&gt;beta&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a1d879967e91b5c9e27268483670365af5fdc917" translate="yes" xml:space="preserve">
          <source>Like the &lt;code&gt;os&lt;/code&gt; option, you can also blacklist architectures:</source>
          <target state="translated">&lt;code&gt;os&lt;/code&gt; オプションと同様に、アーキテクチャをブラックリストに登録することもできます。</target>
        </trans-unit>
        <trans-unit id="7a1df51d9e0c1d18f670491070a67cff73ddc8be" translate="yes" xml:space="preserve">
          <source>Limit access according to IP address ranges (CIDR).</source>
          <target state="translated">IPアドレスの範囲(CIDR)に応じてアクセスを制限します。</target>
        </trans-unit>
        <trans-unit id="5cddfa331f728925f0bc1c7d4b5912bae645f09f" translate="yes" xml:space="preserve">
          <source>Limitations of npm's Install Algorithm</source>
          <target state="translated">npm のインストールアルゴリズムの限界</target>
        </trans-unit>
        <trans-unit id="7f8bbf7842296926f7c99107eb9e0b491abb832c" translate="yes" xml:space="preserve">
          <source>Line Length</source>
          <target state="translated">ラインの長さ</target>
        </trans-unit>
        <trans-unit id="c0edcf17b4e155a08b3ceb08e375ceb11e5daece" translate="yes" xml:space="preserve">
          <source>Lines in &lt;code&gt;.npmrc&lt;/code&gt; files are interpreted as comments when they begin with a &lt;code&gt;;&lt;/code&gt; or &lt;code&gt;#&lt;/code&gt; character. &lt;code&gt;.npmrc&lt;/code&gt; files are parsed by &lt;a href=&quot;https://github.com/npm/ini&quot;&gt;npm/ini&lt;/a&gt;, which specifies this comment syntax.</source>
          <target state="translated">&lt;code&gt;.npmrc&lt;/code&gt; ファイルの行は、 &lt;code&gt;;&lt;/code&gt; で始まる場合はコメントとして解釈されます。または &lt;code&gt;#&lt;/code&gt; 文字。 &lt;code&gt;.npmrc&lt;/code&gt; ファイルは、このコメント構文を指定する&lt;a href=&quot;https://github.com/npm/ini&quot;&gt;npm / ini&lt;/a&gt;によって解析されます。</target>
        </trans-unit>
        <trans-unit id="43a38c5c39d12757e8f4b537b377aec28e159fed" translate="yes" xml:space="preserve">
          <source>Link Packages</source>
          <target state="translated">リンクパッケージ</target>
        </trans-unit>
        <trans-unit id="83ad8510bbd3f22363d068e1c96f82fd0fcccd31" translate="yes" xml:space="preserve">
          <source>Linux</source>
          <target state="translated">Linux</target>
        </trans-unit>
        <trans-unit id="a5f8b8024514bc12fb5b69e83b96669f6fae3fb8" translate="yes" xml:space="preserve">
          <source>Linux &lt;a href=&quot;https://opensource.com/life/17/10/top-terminal-emulators&quot;&gt;terminal emulators&lt;/a&gt;.</source>
          <target state="translated">Linuxの&lt;a href=&quot;https://opensource.com/life/17/10/top-terminal-emulators&quot;&gt;ターミナルエミュレータ&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9d232b168ff2bb3df0df8d7f20524664ad0af51b" translate="yes" xml:space="preserve">
          <source>List all your active hooks:</source>
          <target state="translated">アクティブなフックをすべてリストアップします。</target>
        </trans-unit>
        <trans-unit id="90e7b5cc7728f3ef6300b73b866011c9d941b97b" translate="yes" xml:space="preserve">
          <source>List installed packages.</source>
          <target state="translated">インストールされているパッケージを一覧表示します。</target>
        </trans-unit>
        <trans-unit id="69386e6feda589e758cd6ea2aba12e05e9374727" translate="yes" xml:space="preserve">
          <source>List packages in the global install prefix instead of in the current project.</source>
          <target state="translated">現在のプロジェクトではなく、グローバルインストールのプレフィックスにあるパッケージを一覧表示します。</target>
        </trans-unit>
        <trans-unit id="afca28127a93471796f9d472860a243ae82fd69b" translate="yes" xml:space="preserve">
          <source>List your active hooks for the &lt;code&gt;lodash&lt;/code&gt; package:</source>
          <target state="translated">&lt;code&gt;lodash&lt;/code&gt; パッケージのアクティブなフックをリストします。</target>
        </trans-unit>
        <trans-unit id="2d92d74afa45a8f33514e7319f790476a1de4d7b" translate="yes" xml:space="preserve">
          <source>Local Paths</source>
          <target state="translated">ローカルパス</target>
        </trans-unit>
        <trans-unit id="c0fc689d37e8097e71bbc581773a78bd39fa4d9a" translate="yes" xml:space="preserve">
          <source>Local install (default): puts stuff in &lt;code&gt;./node_modules&lt;/code&gt; of the current package root.</source>
          <target state="translated">ローカルインストール（デフォルト）：現在のパッケージルートの &lt;code&gt;./node_modules&lt;/code&gt; にコンテンツを配置します。</target>
        </trans-unit>
        <trans-unit id="a8fbc7260f2f5c48464f9272ec65e3be323b5a38" translate="yes" xml:space="preserve">
          <source>Local mode is the default. Use &lt;code&gt;-g&lt;/code&gt; or &lt;code&gt;--global&lt;/code&gt; on any command to operate in global mode instead.</source>
          <target state="translated">ローカルモードがデフォルトです。代わりに、任意のコマンドで &lt;code&gt;-g&lt;/code&gt; または &lt;code&gt;--global&lt;/code&gt; を使用して、グローバルモードで操作します。</target>
        </trans-unit>
        <trans-unit id="140fcb60756d84ab832cba1bc60c6c59e75c9f59" translate="yes" xml:space="preserve">
          <source>Lock down dependency versions for publication.</source>
          <target state="translated">依存関係のあるバージョンを公開するためにロックダウンします。</target>
        </trans-unit>
        <trans-unit id="6e6dfe890ed3ce6ed364dc0e631ba2da2ef2e926" translate="yes" xml:space="preserve">
          <source>Log in at &lt;a href=&quot;https://npmjs.com/&quot;&gt;https://npmjs.com/&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://npmjs.com/&quot;&gt;https://npmjs.com/に&lt;/a&gt;ログインします</target>
        </trans-unit>
        <trans-unit id="b57512a2190fed0720375a8625f1a812427f5b33" translate="yes" xml:space="preserve">
          <source>Log in to &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;https://www.npmjs.com/&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.npmjs.com/&quot;&gt;https://www.npmjs.com/に&lt;/a&gt;ログインします。</target>
        </trans-unit>
        <trans-unit id="3b3cf18d30ddf76fb2bbe3c87d3f27fbfe1b96ef" translate="yes" xml:space="preserve">
          <source>Log in to npm again after upgrading to the most recent version.</source>
          <target state="translated">最新版にアップグレードした後、再度npmにログイン。</target>
        </trans-unit>
        <trans-unit id="803ac5852055683270618a9807d65d7e2ae8635f" translate="yes" xml:space="preserve">
          <source>Log in to the email account you used to sign up for an npm user account.</source>
          <target state="translated">npmユーザーアカウントのサインアップに使用したメールアカウントにログインします。</target>
        </trans-unit>
        <trans-unit id="961cee42aeb9a8088ff3c8da32a749d7bce46b38" translate="yes" xml:space="preserve">
          <source>Log out of the registry.</source>
          <target state="translated">レジストリからログアウトします。</target>
        </trans-unit>
        <trans-unit id="57003616863fe634c645e342ee9080681e419c5f" translate="yes" xml:space="preserve">
          <source>Logging</source>
          <target state="translated">Logging</target>
        </trans-unit>
        <trans-unit id="c4ccf6576fde0ec3b5e35239ee0d23802effcebc" translate="yes" xml:space="preserve">
          <source>Logging is done using the &lt;a href=&quot;https://github.com/npm/npmlog&quot;&gt;npmlog&lt;/a&gt; utility.</source>
          <target state="translated">ロギングは&lt;a href=&quot;https://github.com/npm/npmlog&quot;&gt;npmlog&lt;/a&gt;ユーティリティを使用して行われます。</target>
        </trans-unit>
        <trans-unit id="6d87d2d6ecfc0713342a748998d225b0128a9bfa" translate="yes" xml:space="preserve">
          <source>Login to npm from a terminal</source>
          <target state="translated">ターミナルからnpmにログイン</target>
        </trans-unit>
        <trans-unit id="7db8accfae845d2e2127df2ab64f5b5e1d59c225" translate="yes" xml:space="preserve">
          <source>Login to npmjs.com.</source>
          <target state="translated">npmjs.comにログインします。</target>
        </trans-unit>
        <trans-unit id="6b7995c0fe3cecb206964ac95467756397bbbdd5" translate="yes" xml:space="preserve">
          <source>Login to the &lt;a href=&quot;http://www.npmjs.com&quot;&gt;website&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.npmjs.com&quot;&gt;ウェブサイトに&lt;/a&gt;ログインします。</target>
        </trans-unit>
        <trans-unit id="be607f3497326d3e3f97ddbd6ceaafb65876deb4" translate="yes" xml:space="preserve">
          <source>Login to the terminal with your new username.</source>
          <target state="translated">新しいユーザー名でターミナルにログインします。</target>
        </trans-unit>
        <trans-unit id="749b7eb417b00854a79112e6519775198dc6bc3c" translate="yes" xml:space="preserve">
          <source>Look for lines defining the &lt;code&gt;tmp&lt;/code&gt; config variable. If you find more than one, remove all but one of them.</source>
          <target state="translated">&lt;code&gt;tmp&lt;/code&gt; 構成変数を定義する行を探します。複数ある場合は、1つを除いてすべて削除します。</target>
        </trans-unit>
        <trans-unit id="a124947cbd2d1d92b47e027274c3269ff0c7a84b" translate="yes" xml:space="preserve">
          <source>Low</source>
          <target state="translated">Low</target>
        </trans-unit>
        <trans-unit id="94de303bbef8935622224c5db48199c807ab7d71" translate="yes" xml:space="preserve">
          <source>Maintenance</source>
          <target state="translated">Maintenance</target>
        </trans-unit>
        <trans-unit id="d5401031f5981cdc7a45c7abadf244e14ddd0e1e" translate="yes" xml:space="preserve">
          <source>Major releases: &lt;code&gt;*&lt;/code&gt; or &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">メジャーリリース： &lt;code&gt;*&lt;/code&gt; または &lt;code&gt;x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cfb1aaee48deb8398f9291b3b77d67836304cab3" translate="yes" xml:space="preserve">
          <source>Make a directory for global installations:</source>
          <target state="translated">グローバルインストール用のディレクトリを作成します。</target>
        </trans-unit>
        <trans-unit id="b23dbe8d3003d5d6321833f2b961031f5b2369d0" translate="yes" xml:space="preserve">
          <source>Make a new directory outside of your project.</source>
          <target state="translated">プロジェクトの外に新しいディレクトリを作成します。</target>
        </trans-unit>
        <trans-unit id="ef0307e3bec4025dd4abce491f5b211deb461563" translate="yes" xml:space="preserve">
          <source>Make sure you have a package-lock and an up-to-date install:</source>
          <target state="translated">パッケージロックと最新のインストールを確認してください。</target>
        </trans-unit>
        <trans-unit id="9909b436e6c4462b822f086bedcff0ccd6e061f0" translate="yes" xml:space="preserve">
          <source>Makes sure that a package will be saved into &lt;code&gt;dependencies&lt;/code&gt; specifically. This is useful if a package already exists in &lt;code&gt;devDependencies&lt;/code&gt; or &lt;code&gt;optionalDependencies&lt;/code&gt;, but you want to move it to be a production dep. This is also the default behavior if &lt;code&gt;--save&lt;/code&gt; is true, and neither &lt;code&gt;--save-dev&lt;/code&gt; or &lt;code&gt;--save-optional&lt;/code&gt; are true.</source>
          <target state="translated">特に &lt;code&gt;dependencies&lt;/code&gt; パッケージが保存されることを確認します。これは、パッケージが &lt;code&gt;devDependencies&lt;/code&gt; または &lt;code&gt;optionalDependencies&lt;/code&gt; に既に存在しているが、それを本番の依存関係に移動したい場合に役立ちます。 &lt;code&gt;--save&lt;/code&gt; がtrueで、 &lt;code&gt;--save-dev&lt;/code&gt; と &lt;code&gt;--save-optional&lt;/code&gt; のどちらもtrueでない場合、これはデフォルトの動作でもあります。</target>
        </trans-unit>
        <trans-unit id="edaf6744b7d194b2b843015a992ed308f687b673" translate="yes" xml:space="preserve">
          <source>Makes various commands more forceful.</source>
          <target state="translated">様々な命令をより強力にします。</target>
        </trans-unit>
        <trans-unit id="d06c896a156681776da08e30a2b4b3cc13b2cef2" translate="yes" xml:space="preserve">
          <source>Malware (that is, a package designed to exploit or harm the machine on which it is installed).</source>
          <target state="translated">マルウェア(つまり、インストールされているマシンを悪用したり、危害を加えたりするために設計されたパッケージ)。</target>
        </trans-unit>
        <trans-unit id="2f5d775aa0181626a04012b46513160150426cce" translate="yes" xml:space="preserve">
          <source>Man Pages</source>
          <target state="translated">男のページ</target>
        </trans-unit>
        <trans-unit id="31f1a6b6b3280129cc1debe252835cc6d4abffbd" translate="yes" xml:space="preserve">
          <source>Man files must end with a number, and optionally a &lt;code&gt;.gz&lt;/code&gt; suffix if they are compressed. The number dictates which man section the file is installed into.</source>
          <target state="translated">Manファイルは数字で終了する必要があり、圧縮されている場合はオプションで &lt;code&gt;.gz&lt;/code&gt; サフィックスが必要です。番号は、ファイルがインストールされるmanセクションを指定します。</target>
        </trans-unit>
        <trans-unit id="7c0972681b949b9880cb678f8315a66b0534e6e6" translate="yes" xml:space="preserve">
          <source>Man pages are not installed on Windows systems.</source>
          <target state="translated">Windowsシステムにはマンページはインストールされていません。</target>
        </trans-unit>
        <trans-unit id="7f52b6d62bb060105ae88b94a90c917799feb8a8" translate="yes" xml:space="preserve">
          <source>Manage multiple versions of code and code dependencies.</source>
          <target state="translated">複数のバージョンのコードとコードの依存関係を管理します。</target>
        </trans-unit>
        <trans-unit id="a1527f63df97358f6e76b1baee447ee975663e6b" translate="yes" xml:space="preserve">
          <source>Manage organization teams and team memberships.</source>
          <target state="translated">組織のチームやチームメンバーの管理</target>
        </trans-unit>
        <trans-unit id="c6e797838ecebd85349209ccb29334e127eab35a" translate="yes" xml:space="preserve">
          <source>Manage ownership of published packages.</source>
          <target state="translated">公開されたパッケージの所有権を管理します。</target>
        </trans-unit>
        <trans-unit id="a79705d655bef1bb08805959e88d87ac783dc6fd" translate="yes" xml:space="preserve">
          <source>Manage package owners.</source>
          <target state="translated">パッケージの所有者を管理します。</target>
        </trans-unit>
        <trans-unit id="ebbc318770998702113a1d3b0932bca2cc60d366" translate="yes" xml:space="preserve">
          <source>Manage registry hooks.</source>
          <target state="translated">レジストリフックを管理します。</target>
        </trans-unit>
        <trans-unit id="f3118392a44a51a5a4180efb519b46691bb2df48" translate="yes" xml:space="preserve">
          <source>Manage the npm configuration files.</source>
          <target state="translated">npmの設定ファイルを管理します。</target>
        </trans-unit>
        <trans-unit id="2d67d6fd7a63555711c77f0c52ce2af7a88ddc96" translate="yes" xml:space="preserve">
          <source>Manage your authentication tokens.</source>
          <target state="translated">認証トークンを管理します。</target>
        </trans-unit>
        <trans-unit id="4492225642e24713eb4a5f19219d47e57aeb6d6d" translate="yes" xml:space="preserve">
          <source>Management of teams and team memberships is done with the &lt;code&gt;npm team&lt;/code&gt; command.</source>
          <target state="translated">チームとチームメンバーシップの管理は、 &lt;code&gt;npm team&lt;/code&gt; コマンドで行われます。</target>
        </trans-unit>
        <trans-unit id="4ac8ba54bf8ad781663d9fa54f681549cc5e6757" translate="yes" xml:space="preserve">
          <source>Managing dependency versions</source>
          <target state="translated">依存関係のバージョンを管理する</target>
        </trans-unit>
        <trans-unit id="1fa69039d9d66c6cab6302d7ea1568e8b97347b1" translate="yes" xml:space="preserve">
          <source>Manipulates packages cache.</source>
          <target state="translated">パッケージのキャッシュを操作します。</target>
        </trans-unit>
        <trans-unit id="5f8d3c1bea27c2d0177d6cf092d68be6bbf3d519" translate="yes" xml:space="preserve">
          <source>Manually editing your &lt;code&gt;package.json&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;package.json&lt;/code&gt; を手動で編集する</target>
        </trans-unit>
        <trans-unit id="50602b7750a2d32b059e406df4920695792d7c69" translate="yes" xml:space="preserve">
          <source>Many &lt;code&gt;ENOENT&lt;/code&gt; / &lt;code&gt;ENOTEMPTY&lt;/code&gt; errors in output</source>
          <target state="translated">出力に多数の &lt;code&gt;ENOENT&lt;/code&gt; / &lt;code&gt;ENOTEMPTY&lt;/code&gt; エラー</target>
        </trans-unit>
        <trans-unit id="8449f99e42cee6d30a66da4df57a53309c48908d" translate="yes" xml:space="preserve">
          <source>Many authors treat a &lt;code&gt;0.x&lt;/code&gt; version as if the &lt;code&gt;x&lt;/code&gt; were the major &quot;breaking-change&quot; indicator.</source>
          <target state="translated">多くの著者は、 &lt;code&gt;x&lt;/code&gt; が主要な「重大な変更」インジケータであるかのように &lt;code&gt;0.x&lt;/code&gt; バージョンを扱います。</target>
        </trans-unit>
        <trans-unit id="c14db5bd53785fc0432dd768270b209b63795e8a" translate="yes" xml:space="preserve">
          <source>Many packages are made up of other packages. These packages are called dependencies.</source>
          <target state="translated">多くのパッケージは他のパッケージで構成されています。これらのパッケージは依存関係と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="069b433dace16a975d4f56c71855d2822aff50f9" translate="yes" xml:space="preserve">
          <source>Mark your favorite packages.</source>
          <target state="translated">お気に入りのパッケージに印をつけてください。</target>
        </trans-unit>
        <trans-unit id="abd90dc84d47d22fad06031021764b39a0f1ec14" translate="yes" xml:space="preserve">
          <source>Max depth for checking dependency tree.</source>
          <target state="translated">依存関係ツリーをチェックするための最大深度。</target>
        </trans-unit>
        <trans-unit id="b6ad6dd73ee71b3ca27002a7eb3a88400fc555ef" translate="yes" xml:space="preserve">
          <source>Max display depth of the dependency tree.</source>
          <target state="translated">依存関係ツリーの最大表示深度。</target>
        </trans-unit>
        <trans-unit id="e86d6956c2fad54938e3bc8f2087e0ec793c9ed8" translate="yes" xml:space="preserve">
          <source>Microsoft Windows</source>
          <target state="translated">マイクロソフトウィンドウズ</target>
        </trans-unit>
        <trans-unit id="1923d7678401edbc9d0ef180ddee624c6b442c23" translate="yes" xml:space="preserve">
          <source>Microsoft Windows:</source>
          <target state="translated">マイクロソフトのWindows。</target>
        </trans-unit>
        <trans-unit id="bd071d790f4d4091da0abc822e22c3a6ebfdba72" translate="yes" xml:space="preserve">
          <source>Minor releases: &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;1.x&lt;/code&gt; or &lt;code&gt;^1.0.4&lt;/code&gt;</source>
          <target state="translated">マイナーリリース： &lt;code&gt;1&lt;/code&gt; または &lt;code&gt;1.x&lt;/code&gt; または &lt;code&gt;^1.0.4&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="24f673384016837404021aa7068193e2ac26cb79" translate="yes" xml:space="preserve">
          <source>Misplaced recovery codes</source>
          <target state="translated">リカバリーコードの誤植</target>
        </trans-unit>
        <trans-unit id="d91d104f0a175000efaf17a93ed0d66bc169b9b7" translate="yes" xml:space="preserve">
          <source>Misplaced second factor device</source>
          <target state="translated">第二因子デバイスの位置を間違えた</target>
        </trans-unit>
        <trans-unit id="ea8b09c2354b17c2a83673437d6380be0e7b8c73" translate="yes" xml:space="preserve">
          <source>Moderate</source>
          <target state="translated">Moderate</target>
        </trans-unit>
        <trans-unit id="35f825672d0a24aed938740930e0566684454981" translate="yes" xml:space="preserve">
          <source>Modify package distribution tags.</source>
          <target state="translated">パッケージの配布タグを変更します。</target>
        </trans-unit>
        <trans-unit id="2d1c60a1f9b37390ed9f023f57840cbd87b62778" translate="yes" xml:space="preserve">
          <source>Module ecosystems are most vibrant and powerful when they are as self-directed as possible. If an admin one day deletes something you had worked on, then that is going to make most people quite upset, regardless of the justification. When humans solve their problems by talking to other humans with respect, everyone has the chance to end up feeling good about the interaction.</source>
          <target state="translated">モジュールの生態系は、可能な限り自己管理されているときに最も活気があり、パワフルになります。ある日管理者があなたの作業していたものを削除したとしたら、正当な理由に関わらず、ほとんどの人はかなり動揺するでしょう。人間が他の人間に敬意を持って話しかけることで問題を解決するとき、誰もがその相互作用について良い感じで終わるチャンスがある。</target>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="523685e0bc791231099a78553e5b45a4d7e39427" translate="yes" xml:space="preserve">
          <source>Monitor your package access</source>
          <target state="translated">パッケージのアクセスを監視する</target>
        </trans-unit>
        <trans-unit id="22ffffbccfcf501db363d7084eeed3e3deb28b71" translate="yes" xml:space="preserve">
          <source>More Information</source>
          <target state="translated">詳細情報</target>
        </trans-unit>
        <trans-unit id="3aedbb644674df00b2e14dbd5ce02ca69d95257c" translate="yes" xml:space="preserve">
          <source>More Severe Uninstalling</source>
          <target state="translated">よりシビアなアンインストール</target>
        </trans-unit>
        <trans-unit id="59842d981c57fb9cc87deffb5fe760f6cbaebe00" translate="yes" xml:space="preserve">
          <source>More info</source>
          <target state="translated">詳細情報</target>
        </trans-unit>
        <trans-unit id="9ce0f31e74ace086fd663a894b1716ef4926639a" translate="yes" xml:space="preserve">
          <source>More info at &lt;code&gt;&lt;a href=&quot;../cli/link&quot;&gt;npm-link&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../cli/link&quot;&gt;npm-link&lt;/a&gt;&lt;/code&gt; で詳細をご覧ください。</target>
        </trans-unit>
        <trans-unit id="e86bbab59fbe9102e8a4e29954c2bd404c16389d" translate="yes" xml:space="preserve">
          <source>More on version numbers and ranges at &lt;a href=&quot;../misc/semver&quot;&gt;semver&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../misc/semver&quot;&gt;semverの&lt;/a&gt;バージョン番号と範囲の詳細。</target>
        </trans-unit>
        <trans-unit id="9ecccfac6085017c24818c7f8158dec34d23e2b5" translate="yes" xml:space="preserve">
          <source>More than you probably want to know about npm configuration.</source>
          <target state="translated">npm の設定について知りたいと思う以上のことがあります。</target>
        </trans-unit>
        <trans-unit id="394cd92d15286594de054c0eb3b0b4676eafe314" translate="yes" xml:space="preserve">
          <source>Most npm packages are modules</source>
          <target state="translated">ほとんどの npm パッケージはモジュール</target>
        </trans-unit>
        <trans-unit id="beb8aff6591b3a8af05d835cb52458ef103dd922" translate="yes" xml:space="preserve">
          <source>Multiple CAs can be trusted by specifying an array of certificates:</source>
          <target state="translated">証明書の配列を指定することで、複数の認証局を信頼することができます。</target>
        </trans-unit>
        <trans-unit id="e1b8b6742083c9b1ae87f3d5791b8e988f9b098a" translate="yes" xml:space="preserve">
          <source>Multiple fields may be specified, and will be printed one after another. For example, to get all the contributor names and email addresses, you can do this:</source>
          <target state="translated">複数のフィールドを指定することができ、次々と出力されます。例えば、すべての投稿者の名前とメールアドレスを取得するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="a8ad860c15810cce0e7beac1c91da3ab2cb22c47" translate="yes" xml:space="preserve">
          <source>NOTE</source>
          <target state="translated">NOTE</target>
        </trans-unit>
        <trans-unit id="8c6abbe86b9a3dd54d847c73d2fcb02c7646f939" translate="yes" xml:space="preserve">
          <source>NOTE:</source>
          <target state="translated">NOTE:</target>
        </trans-unit>
        <trans-unit id="c3e95528d9db5a0991cec32b9c9b766cf3042244" translate="yes" xml:space="preserve">
          <source>NOTE: If a package has been upgraded to a version newer than &lt;code&gt;latest&lt;/code&gt;, it will be &lt;em&gt;downgraded&lt;/em&gt;.</source>
          <target state="translated">注：パッケージは、より新しいバージョンにアップグレードされている場合は &lt;code&gt;latest&lt;/code&gt; 、それがされます&lt;em&gt;格下げ&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="8785ac5526aa1571431e17d5eaa60427c1d5e016" translate="yes" xml:space="preserve">
          <source>NOTE: The &lt;code&gt;--production&lt;/code&gt; flag has no particular meaning when adding a dependency to a project.</source>
          <target state="translated">注：プロジェクトに依存関係を追加する場合、 &lt;code&gt;--production&lt;/code&gt; フラグは特に意味がありません。</target>
        </trans-unit>
        <trans-unit id="3c33a18bf0f64942642f8ded887d568653de995f" translate="yes" xml:space="preserve">
          <source>NVM</source>
          <target state="translated">NVM</target>
        </trans-unit>
        <trans-unit id="e3a7efbc51bec139aa7b340813d5076f1eb756b4" translate="yes" xml:space="preserve">
          <source>Navigate to the package on which you want to require a second factor to publish or modify settings.</source>
          <target state="translated">設定を公開または変更するために第2の要因を必要とするパッケージに移動します。</target>
        </trans-unit>
        <trans-unit id="01e2ac43f10525d310490ecf92eb82faf3ace473" translate="yes" xml:space="preserve">
          <source>New packages must not have uppercase letters in the name.</source>
          <target state="translated">新しいパッケージは、名前に大文字を入れてはいけません。</target>
        </trans-unit>
        <trans-unit id="df07607c5a1150056babf50b7b9edc67b5ec48f2" translate="yes" xml:space="preserve">
          <source>Next, in some other location, &lt;code&gt;npm link package-name&lt;/code&gt; will create a symbolic link from globally-installed &lt;code&gt;package-name&lt;/code&gt; to &lt;code&gt;node_modules/&lt;/code&gt; of the current folder.</source>
          <target state="translated">次に、他の場所で、 &lt;code&gt;npm link package-name&lt;/code&gt; は、グローバルにインストールされた &lt;code&gt;package-name&lt;/code&gt; から現在のフォルダーの &lt;code&gt;node_modules/&lt;/code&gt; へのシンボリックリンクを作成します。</target>
        </trans-unit>
        <trans-unit id="86bd72c2d3ed62eb1411e563b9bae3f3dfa4c2e8" translate="yes" xml:space="preserve">
          <source>Next, npm will display a QR code:</source>
          <target state="translated">次に、npmではQRコードが表示されます。</target>
        </trans-unit>
        <trans-unit id="a148b95bc1d1c2be33b7770a2c140be57dc17055" translate="yes" xml:space="preserve">
          <source>No compatible version found</source>
          <target state="translated">互換性のあるバージョンが見つかりませんでした。</target>
        </trans-unit>
        <trans-unit id="7a930c09280e9a1c5391c11e3fb039250d8eaeec" translate="yes" xml:space="preserve">
          <source>No git</source>
          <target state="translated">ノー・ジット・ノー・ジット・ノー・ジット・ノー・ジット・ノー</target>
        </trans-unit>
        <trans-unit id="889f912e88769d9794a8fa34339974b664067f1d" translate="yes" xml:space="preserve">
          <source>No security vulnerabilities found</source>
          <target state="translated">セキュリティ上の脆弱性が見つからない</target>
        </trans-unit>
        <trans-unit id="13d0e5aa3de3eeac5cc0aff9a59b926601f99511" translate="yes" xml:space="preserve">
          <source>No space</source>
          <target state="translated">スペースなし</target>
        </trans-unit>
        <trans-unit id="e0a65bdb903733827b95f0b660a610e455fb405c" translate="yes" xml:space="preserve">
          <source>No, but it's way easier. Basically, yes, you do, or you have to effectively implement the entire CouchDB API anyway.</source>
          <target state="translated">いいえ、しかし、それははるかに簡単です。基本的には、はい、あなたが行うか、またはあなたが効果的にとにかく全体のCouchDB APIを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="3ec5982a9aed5bae99c63ae929d0edba8795dbff" translate="yes" xml:space="preserve">
          <source>No. If you want things to be public, then publish them into the public registry using npm. What little security there is would be for nought otherwise.</source>
          <target state="translated">もし公開したいのであれば、npm を使ってパブリックレジストリに公開してください。そうでなければ、セキュリティはほとんど意味がありません。</target>
        </trans-unit>
        <trans-unit id="957f23e716b64fea27c34d4f579712c8d7c97c33" translate="yes" xml:space="preserve">
          <source>Node Modules</source>
          <target state="translated">ノードモジュール</target>
        </trans-unit>
        <trans-unit id="bf3cf4930b4cce29cca5456dd760c30afede7996" translate="yes" xml:space="preserve">
          <source>Node.js and git must be executable by npm.</source>
          <target state="translated">Node.jsとgitはnpmで実行できる必要があります。</target>
        </trans-unit>
        <trans-unit id="b6739f6167dca340a90d5a1a6b1dce40c73bb710" translate="yes" xml:space="preserve">
          <source>Node.js and npm have very specific definitions of packages and modules, which are easy to mix up. We'll discuss those definitions here, make them distinct, and explain why certain default files are named the way they are.</source>
          <target state="translated">Node.js と npm には、パッケージとモジュールの定義が非常に特殊で、混同しやすいです。ここでは、これらの定義について説明し、それらを区別し、デフォルトのファイル名がなぜそのように命名されているのかを説明します。</target>
        </trans-unit>
        <trans-unit id="24d5478de80c92fce65c557fcd15d27eb169a867" translate="yes" xml:space="preserve">
          <source>Node.js has lots of versions, and its development is very active. As a good practice to manage the various versions, we recommend that you use a version manager for your Node.js installation. There are many great options, here are a few:</source>
          <target state="translated">Node.jsにはたくさんのバージョンがあり、開発が活発に行われています。様々なバージョンを管理するための良い習慣として、Node.jsのインストールにバージョンマネージャを使用することをお勧めします。多くの素晴らしいオプションがありますが、ここではいくつかをご紹介します。</target>
        </trans-unit>
        <trans-unit id="345d988d788bbbf3d09e0543603f7851750b7687" translate="yes" xml:space="preserve">
          <source>Node.js modules are a type of package that can be published to npm. To create a new module, start by creating a &lt;code&gt;package.json&lt;/code&gt; file.</source>
          <target state="translated">Node.jsモジュールは、npmに公開できるパッケージの一種です。新しいモジュールを作成するには、まず &lt;code&gt;package.json&lt;/code&gt; ファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="8662457a910936cb92d189fe53e594c7b2fad6ad" translate="yes" xml:space="preserve">
          <source>Not found / Server error</source>
          <target state="translated">見つかりませんでした/サーバーエラー</target>
        </trans-unit>
        <trans-unit id="b5a70a1d147c54b3102d1c2b6ee90e551b00c331" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;package-name&lt;/code&gt; is taken from &lt;code&gt;package.json&lt;/code&gt;, not from directory name.</source>
          <target state="translated">&lt;code&gt;package-name&lt;/code&gt; は、ディレクトリ名からではなく、 &lt;code&gt;package.json&lt;/code&gt; から取得されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="a384ea278a742edb3736c0dd7ad3160738f8f08f" translate="yes" xml:space="preserve">
          <source>Note that everything in the directory will be included unless it is ignored by a local &lt;code&gt;.gitignore&lt;/code&gt; or &lt;code&gt;.npmignore&lt;/code&gt; file. To learn how to use these commands, see &lt;a href=&quot;../misc/developers&quot;&gt;&lt;code&gt;npm-developers&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ローカルの &lt;code&gt;.gitignore&lt;/code&gt; または &lt;code&gt;.npmignore&lt;/code&gt; ファイルによって無視されない限り、ディレクトリ内のすべてが含まれることに注意してください。これらのコマンドの使用方法については、&lt;a href=&quot;../misc/developers&quot;&gt; &lt;code&gt;npm-developers&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d797867d1e18133733f55e0e3fe7b42c465db186" translate="yes" xml:space="preserve">
          <source>Note that git requires you to have set up GPG keys in your git configs for this to work properly.</source>
          <target state="translated">この機能を正しく動作させるには、git の設定で GPG キーを設定しておく必要があることに注意しましょう。</target>
        </trans-unit>
        <trans-unit id="366b6992f06c32dda037ef8d80fbb1c4d8d2d1fa" translate="yes" xml:space="preserve">
          <source>Note that if the &lt;code&gt;@&lt;/code&gt; symbol is omitted, in either case, npm will instead attempt to install from GitHub; see &lt;code&gt;&lt;a href=&quot;../cli/install&quot;&gt;npm-install&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">場合という注意 &lt;code&gt;@&lt;/code&gt; 記号が省略され、いずれの場合には、NPMが代わりのGitHubからインストールしようとします。 &lt;code&gt;&lt;a href=&quot;../cli/install&quot;&gt;npm-install&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="91790161e9735fed1c20d81fc1c267047235d9dd" translate="yes" xml:space="preserve">
          <source>Note that in this case, you are referring to the directory name, &lt;code&gt;node-redis&lt;/code&gt;, rather than the package name &lt;code&gt;redis&lt;/code&gt;.</source>
          <target state="translated">この場合、パッケージ名 &lt;code&gt;redis&lt;/code&gt; ではなく、ディレクトリ名 &lt;code&gt;node-redis&lt;/code&gt; を参照していることに注意してください。</target>
        </trans-unit>
        <trans-unit id="89902ad423f54674432985ace6cb7c8b8677f97f" translate="yes" xml:space="preserve">
          <source>Note that most version ranges must be put in quotes so that your shell will treat it as a single argument.</source>
          <target state="translated">ほとんどのバージョン範囲は引用符で括らなければならないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="eaaa4818f226f9b6b09f58d5e4fe43f0b62699fa" translate="yes" xml:space="preserve">
          <source>Note that pretty much &lt;strong&gt;everything in that folder will be exposed&lt;/strong&gt; by default. So, if you have secret stuff in there, use a &lt;code&gt;.npmignore&lt;/code&gt; file to list out the globs to ignore, or publish from a fresh checkout.</source>
          <target state="translated">&lt;strong&gt;そのフォルダ内の&lt;/strong&gt;ほとんど&lt;strong&gt;すべてが&lt;/strong&gt;デフォルト&lt;strong&gt;で公開&lt;/strong&gt;さ&lt;strong&gt;れることに&lt;/strong&gt;注意してください。したがって、そこに秘密のものがある場合は、 &lt;code&gt;.npmignore&lt;/code&gt; ファイルを使用して無視するグロブをリストするか、新しいチェックアウトから公開します。</target>
        </trans-unit>
        <trans-unit id="fb2935df12654818f82e322ffba0f488fdea77b3" translate="yes" xml:space="preserve">
          <source>Note that read-only defaults to &lt;em&gt;false&lt;/em&gt;.</source>
          <target state="translated">読み取り専用のデフォルトは&lt;em&gt;falseで&lt;/em&gt;あることに注意してください。</target>
        </trans-unit>
        <trans-unit id="f1a759f3319c84f4b3229a15ea92031b6769f690" translate="yes" xml:space="preserve">
          <source>Note that read-only is set to &lt;em&gt;true&lt;/em&gt;.</source>
          <target state="translated">読み取り専用が&lt;em&gt;trueに&lt;/em&gt;設定されていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="59df403baf5c5486d7b4cff640f57e4481c3ed7d" translate="yes" xml:space="preserve">
          <source>Note that starting lines with &lt;code&gt;-&lt;/code&gt; and &lt;code&gt;+&lt;/code&gt; also should be prefixed with a semicolon, but this is much less common.</source>
          <target state="translated">&lt;code&gt;-&lt;/code&gt; と &lt;code&gt;+&lt;/code&gt; で始まる行にもセミコロンを付ける必要がありますが、これは一般的ではありません。</target>
        </trans-unit>
        <trans-unit id="e0afd55f15a0206d6a77cf799df866ee3c0a3aa8" translate="yes" xml:space="preserve">
          <source>Note that the &quot;restart&quot; script is run &lt;strong&gt;in addition to&lt;/strong&gt; the &quot;stop&quot; and &quot;start&quot; scripts, not instead of them.</source>
          <target state="translated">「restart」スクリプトは、「stop」および「start」スクリプト&lt;strong&gt;に加えて&lt;/strong&gt;実行さ&lt;strong&gt;れ&lt;/strong&gt;、それらの代わりに実行さ&lt;strong&gt;れ&lt;/strong&gt;ないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="985d014ee687f5d1871a7d71584cdcd5a112ed23" translate="yes" xml:space="preserve">
          <source>Note that the package is &lt;em&gt;not&lt;/em&gt; automatically rebuilt afterwards, so be sure to use &lt;code&gt;npm rebuild &amp;lt;pkg&amp;gt;&lt;/code&gt; if you make any changes.</source>
          <target state="translated">パッケージは後で自動的に再構築され&lt;em&gt;ない&lt;/em&gt;ことに注意してください。変更を行う場合は、必ず &lt;code&gt;npm rebuild &amp;lt;pkg&amp;gt;&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="2fa36575ef04eed597461514f0d5f04a790e3288" translate="yes" xml:space="preserve">
          <source>Note that there is only one level of access. Either you can modify a package, or you can't. Future versions may contain more fine-grained access levels, but that is not implemented at this time.</source>
          <target state="translated">アクセスのレベルは一つしかないことに注意してください。パッケージを変更できるか、できないかのどちらかです。将来のバージョンでは、より細かいアクセスレベルが追加されるかもしれませんが、 現時点では実装されていません。</target>
        </trans-unit>
        <trans-unit id="cb3a316375b08fe8d3ce7c2b6ac12ac5c8675065" translate="yes" xml:space="preserve">
          <source>Note that these script files don't have to be nodejs or even javascript programs. They just have to be some kind of executable file.</source>
          <target state="translated">これらのスクリプトファイルはnodejsやjavascriptプログラムである必要はないことに注意してください。ある種の実行可能なファイルでなければなりません。</target>
        </trans-unit>
        <trans-unit id="852ec0524e4f85cb7dc934c8a1e1a4549c9d0431" translate="yes" xml:space="preserve">
          <source>Note that this is only necessary for globally-installed packages. Local installs are completely contained within a project's &lt;code&gt;node_modules&lt;/code&gt; folder. Delete that folder, and everything is gone (unless a package's install script is particularly ill-behaved).</source>
          <target state="translated">これは、グローバルにインストールされたパッケージにのみ必要であることに注意してください。ローカルインストールは、プロジェクトの &lt;code&gt;node_modules&lt;/code&gt; フォルダーに完全に含まれています。そのフォルダーを削除すると、すべてがなくなります（パッケージのインストールスクリプトが特に不適切な動作をする場合を除きます）。</target>
        </trans-unit>
        <trans-unit id="3fcfea55624714d903cf641e1146778070b6e9e7" translate="yes" xml:space="preserve">
          <source>Note that this means that local installs can cause things to be installed into the global space at the same time. The link is only done if one of the two conditions are met:</source>
          <target state="translated">これは、ローカルにインストールすると、同時にグローバル空間にインストールされることがあることを意味しています。リンクは、2つの条件のいずれかが満たされた場合にのみ行われます。</target>
        </trans-unit>
        <trans-unit id="9d7fa676a41da66c9ba69f7f965e01f75c85fc6a" translate="yes" xml:space="preserve">
          <source>Note that this only applies to the root of the project that you're running npm in. It has no effect when your module is published. For example, you can't publish a module that forces itself to install globally, or in a different location.</source>
          <target state="translated">これは npm を実行しているプロジェクトのルートにのみ適用されることに注意してください。モジュールが公開されたときには何の影響もありません。たとえば、グローバルに、あるいは別の場所に強制的にインストールされるモジュールを公開することはできません。</target>
        </trans-unit>
        <trans-unit id="06ded5150d36316c12d236a1932afedf2fbf7a2b" translate="yes" xml:space="preserve">
          <source>Note that this operation transforms the dependency tree, but will never result in new modules being installed.</source>
          <target state="translated">この操作は依存関係ツリーを変換しますが、新しいモジュールがインストールされることはないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="575ebb0f3be64a8119d8056ba03982cd5ce6477b" translate="yes" xml:space="preserve">
          <source>Note that you must be the package owner to deprecate something. See the &lt;code&gt;owner&lt;/code&gt; and &lt;code&gt;adduser&lt;/code&gt; help topics.</source>
          <target state="translated">何かを非推奨にするには、パッケージの所有者でなければならないことに注意してください。 &lt;code&gt;owner&lt;/code&gt; および &lt;code&gt;adduser&lt;/code&gt; のヘルプトピックを参照してください。</target>
        </trans-unit>
        <trans-unit id="e088c22b668e190e1db82511d4c03c3ecdfbaa0d" translate="yes" xml:space="preserve">
          <source>Note that you must have a default GPG key set up in your git config for this to work properly.</source>
          <target state="translated">これを正しく動作させるには、git の設定でデフォルトの GPG キーを設定しておかなければならないことに注意しましょう。</target>
        </trans-unit>
        <trans-unit id="47aad156b765d07ddd9cf30888de33974a2752a6" translate="yes" xml:space="preserve">
          <source>Note that, since ranges may be non-contiguous, a version might not be greater than a range, less than a range, &lt;em&gt;or&lt;/em&gt; satisfy a range! For example, the range &lt;code&gt;1.2 &amp;lt;1.2.9 || &amp;gt;2.0.0&lt;/code&gt; would have a hole from &lt;code&gt;1.2.9&lt;/code&gt; until &lt;code&gt;2.0.0&lt;/code&gt;, so the version &lt;code&gt;1.2.10&lt;/code&gt; would not be greater than the range (because &lt;code&gt;2.0.1&lt;/code&gt; satisfies, which is higher), nor less than the range (since &lt;code&gt;1.2.8&lt;/code&gt; satisfies, which is lower), and it also does not satisfy the range.</source>
          <target state="translated">範囲は隣接していない場合があるため、バージョンは範囲を超えたり、範囲を下回っ&lt;em&gt;たり&lt;/em&gt;、範囲を満たすことはありません。たとえば、範囲 &lt;code&gt;1.2 &amp;lt;1.2.9 || &amp;gt;2.0.0&lt;/code&gt; は &lt;code&gt;1.2.9&lt;/code&gt; から &lt;code&gt;2.0.0&lt;/code&gt; までの穴があるため、バージョン &lt;code&gt;1.2.10&lt;/code&gt; は範囲よりも大きくなりません（ &lt;code&gt;2.0.1&lt;/code&gt; が満たすため、より高いため）。また、範囲よりも小さくなりません（ &lt;code&gt;1.2.8&lt;/code&gt; 以降）.8は満たされます（低い方）。また、範囲を満たしていません。</target>
        </trans-unit>
        <trans-unit id="ba3eaab4f9e48e90d05f2f374b761ff364719ca8" translate="yes" xml:space="preserve">
          <source>Note: Even if you delete the &lt;code&gt;.npmrc&lt;/code&gt; file, it'll be kept in the commit history - to clean your secret up entirely make sure to squash them.</source>
          <target state="translated">注： &lt;code&gt;.npmrc&lt;/code&gt; ファイルを削除しても、それはコミット履歴に保持されます-シークレットを完全にクリーンアップするために、必ずそれらを圧縮してください。</target>
        </trans-unit>
        <trans-unit id="621bcd990afed5c414acb7c6f1d076495222026f" translate="yes" xml:space="preserve">
          <source>Note: Many of the steps that you can take from the browser can also be taken directly from the Command Line Interface. Skip &lt;a href=&quot;#related-cli-commands&quot;&gt;here&lt;/a&gt; to learn more.</source>
          <target state="translated">注：ブラウザーから実行できる手順の多くは、コマンドラインインターフェースから直接実行することもできます。詳細については、&lt;a href=&quot;#related-cli-commands&quot;&gt;ここ&lt;/a&gt;をスキップしてください。</target>
        </trans-unit>
        <trans-unit id="8b0bc4a7372a39f9d74ac4b3b1b2a467790e6560" translate="yes" xml:space="preserve">
          <source>Note: if you do not include the @-symbol on your scope name, npm will interpret this as a GitHub repository instead, see below. Scopes names must also be followed by a slash.</source>
          <target state="translated">注意:スコープ名に @-symbol を付けないと、npm はこれを GitHub リポジトリとして解釈します。スコープ名の後にはスラッシュをつけなければなりません。</target>
        </trans-unit>
        <trans-unit id="12c0656aa81249c8efa9d7db4b70263842c5269b" translate="yes" xml:space="preserve">
          <source>Note: if you installed the package as a &quot;devDependency&quot; (i.e. with &lt;code&gt;--save-dev&lt;/code&gt;) then &lt;code&gt;--save&lt;/code&gt; won't remove it from &lt;code&gt;package.json&lt;/code&gt;. You have to use &lt;code&gt;--save-dev&lt;/code&gt; to uninstall it.</source>
          <target state="translated">注：「devDependency」としてパッケージをインストールした場合（つまりと &lt;code&gt;--save-dev&lt;/code&gt; の）その後、 &lt;code&gt;--save&lt;/code&gt; はからそれを削除しません &lt;code&gt;package.json&lt;/code&gt; 。アンインストールするには、 &lt;code&gt;--save-dev&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="cd4ed9e77f7593d2f6659a9aee2f138ff92c17d7" translate="yes" xml:space="preserve">
          <source>Note: this concerns npm's code not the specific packages that you can download from the npm registry.</source>
          <target state="translated">注意:これは npm レジストリからダウンロードできる特定のパッケージではなく、npm のコードに関係しています。</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="733d377725600721d5aacd21f8b8bf3f6fd0fd21" translate="yes" xml:space="preserve">
          <source>Notice that you need to use underscores instead of dashes, so &lt;code&gt;--allow-same-version&lt;/code&gt; would become &lt;code&gt;npm_config_allow_same_version=true&lt;/code&gt;.</source>
          <target state="translated">ダッシュの代わりにアンダースコアを使用する必要があることに注意してください。そのため、 &lt;code&gt;--allow-same-version&lt;/code&gt; は &lt;code&gt;npm_config_allow_same_version=true&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="9ab4a3a8d8f3e1179c7fdcdcb9864852da374102" translate="yes" xml:space="preserve">
          <source>Notice the URL:</source>
          <target state="translated">URLに注目してください。</target>
        </trans-unit>
        <trans-unit id="18956a8d22e00fe5f6d86680bf32ba49c056488c" translate="yes" xml:space="preserve">
          <source>Noting all these &lt;code&gt;package&lt;/code&gt; possibilities, it follows that even if you never publish your package to the public registry, you can still get a lot of benefits of using npm:</source>
          <target state="translated">これらすべての &lt;code&gt;package&lt;/code&gt; 可能性に注意すると、パッケージを公開レジストリに公開しない場合でも、npmを使用することで多くの利点を得ることができます。</target>
        </trans-unit>
        <trans-unit id="0e861b94b1fcf7f5d47f72afa46494d46dd6784e" translate="yes" xml:space="preserve">
          <source>Now that you know what npm is, and a bit about how to use it, it's time to get started.</source>
          <target state="translated">これで npm とは何か、そして使い方が少しわかったので、いよいよ始めましょう。</target>
        </trans-unit>
        <trans-unit id="1613f18cf87cf18e1771dfad8347c718e1582802" translate="yes" xml:space="preserve">
          <source>Now, any changes to ~/projects/node-redis will be reflected in ~/projects/node-bloggy/node_modules/node-redis/. Note that the link should be to the package name, not the directory name for that package.</source>
          <target state="translated">これで、~/projects/node-redisへの変更は、~/projects/node-bloggy/node_modules/node-redis/に反映されます。リンクはパッケージのディレクトリ名ではなく、パッケージ名になることに注意してください。</target>
        </trans-unit>
        <trans-unit id="da83b69aa1df96677c77e0a118b8b06909f8d83a" translate="yes" xml:space="preserve">
          <source>Number of items to limit search results to. Will not apply at all to legacy searches.</source>
          <target state="translated">検索結果を制限する項目の数。レガシー検索には全く適用されません。</target>
        </trans-unit>
        <trans-unit id="0027afcffb283d39db21bf62fd8fc1a10d471c12" translate="yes" xml:space="preserve">
          <source>Number of ms to wait for cache lock files to expire.</source>
          <target state="translated">キャッシュロックファイルの有効期限が切れるまでの待ち時間をミリ秒単位で指定します。</target>
        </trans-unit>
        <trans-unit id="57611c8a914a41b5fe018e3ee9f9a6cc98c93d47" translate="yes" xml:space="preserve">
          <source>Number of times to retry to acquire a lock on cache folder lockfiles.</source>
          <target state="translated">キャッシュフォルダlockfilesのロックを取得するための再試行回数。</target>
        </trans-unit>
        <trans-unit id="cb02d669bf11eaf6ad8133486d34249ce97fdad4" translate="yes" xml:space="preserve">
          <source>OS/X or Windows</source>
          <target state="translated">オーエスエックスまたはウィンドウズ</target>
        </trans-unit>
        <trans-unit id="feb3522a4038f71f091c69d4b18145fccb3da91a" translate="yes" xml:space="preserve">
          <source>OUTPUT</source>
          <target state="translated">OUTPUT</target>
        </trans-unit>
        <trans-unit id="280984d3916a07d19632507daacb0fc119727bc6" translate="yes" xml:space="preserve">
          <source>Objects are flattened following this format, so if you had &lt;code&gt;{&quot;scripts&quot;:{&quot;install&quot;:&quot;foo.js&quot;}}&lt;/code&gt; in your package.json, then you'd see this in the script:</source>
          <target state="translated">オブジェクトはこの形式に従ってフラット化されるため、package.jsonに &lt;code&gt;{&quot;scripts&quot;:{&quot;install&quot;:&quot;foo.js&quot;}}&lt;/code&gt; がある場合、スクリプトに次のように表示されます。</target>
        </trans-unit>
        <trans-unit id="c62facc2e298672ec4cf056efbfc72173043cb1d" translate="yes" xml:space="preserve">
          <source>Occasionally, two separate npm install will create package locks that cause merge conflicts in source control systems. As of &lt;code&gt;npm@5.7.0&lt;/code&gt;, these conflicts can be resolved by manually fixing any &lt;code&gt;package.json&lt;/code&gt; conflicts, and then running &lt;code&gt;npm install [--package-lock-only]&lt;/code&gt; again. npm will automatically resolve any conflicts for you and write a merged package lock that includes all the dependencies from both branches in a reasonable tree. If &lt;code&gt;--package-lock-only&lt;/code&gt; is provided, it will do this without also modifying your local &lt;code&gt;node_modules/&lt;/code&gt;.</source>
          <target state="translated">場合によっては、2つの別々のnpmインストールがパッケージロックを作成し、ソース管理システムでマージの競合を引き起こします。以下のよう &lt;code&gt;npm@5.7.0&lt;/code&gt; 、これらの競合は手動で固定することにより解決することができ &lt;code&gt;package.json&lt;/code&gt; の競合を、次に実行 &lt;code&gt;npm install [--package-lock-only]&lt;/code&gt; 再び。 npmは競合を自動的に解決し、合理的なツリーの両方のブランチからのすべての依存関係を含むマージされたパッケージロックを書き込みます。場合 &lt;code&gt;--package-lock-only&lt;/code&gt; 提供され、それはまた、あなたの地元の変更せずにこれを行います &lt;code&gt;node_modules/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c8693b51db1542299c2092599ed7533de4222e05" translate="yes" xml:space="preserve">
          <source>Often, there are dozens or even hundreds of packages with similar names and/or similar purposes. To help you decide the best ones to explore, each package has been ranked according to four criteria using the &lt;strong&gt;npms analyzer&lt;/strong&gt;:</source>
          <target state="translated">多くの場合、類似した名前や類似の目的を持つパッケージが数十、さらには数百存在します。探索するのに最適なパッケージを決定するのに役立つように、各パッケージは&lt;strong&gt;npmsアナライザー&lt;/strong&gt;を使用して4つの基準に従ってランク付けされてい&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="938b698818fe6271146be738a0850f0717553c39" translate="yes" xml:space="preserve">
          <source>On the &lt;a href=&quot;https://npmjs.com&quot;&gt;npm public registry&lt;/a&gt;, find the dependent package and navigate to its repository. For more information on finding packages, see &quot;&lt;a href=&quot;searching-for-packages&quot;&gt;How to find and select packages&lt;/a&gt;&quot;.</source>
          <target state="translated">上の&lt;a href=&quot;https://npmjs.com&quot;&gt;NPM公共のレジストリ&lt;/a&gt;、そのリポジトリへの依存パッケージとナビゲートを見つけます。パッケージの検索の詳細については、「パッケージ&lt;a href=&quot;searching-for-packages&quot;&gt;を検索して選択する方法&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="f05caab1dcc9396b249cb807d027094409b07174" translate="yes" xml:space="preserve">
          <source>On the &lt;a href=&quot;https://npmjs.com&quot;&gt;npm public registry&lt;/a&gt;, find the package with the vulnerability or the dependent package that needs an update. For more information on finding packages, see &quot;&lt;a href=&quot;searching-for-packages&quot;&gt;How to find and select packages&lt;/a&gt;&quot;.</source>
          <target state="translated">上の&lt;a href=&quot;https://npmjs.com&quot;&gt;NPM公共のレジストリ&lt;/a&gt;、脆弱性や更新が必要な依存パッケージとパッケージを見つけます。パッケージの検索の詳細については、「パッケージ&lt;a href=&quot;searching-for-packages&quot;&gt;を検索して選択する方法&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="cc8ae2816ec61c33b027be638416186eb4aad7a7" translate="yes" xml:space="preserve">
          <source>On the &lt;a href=&quot;https://npmjs.com&quot;&gt;npm public registry&lt;/a&gt;, find the package with the vulnerability. For more information on finding packages, see &quot;&lt;a href=&quot;searching-for-packages&quot;&gt;How to find and select packages&lt;/a&gt;&quot;.</source>
          <target state="translated">上の&lt;a href=&quot;https://npmjs.com&quot;&gt;NPM公共のレジストリ&lt;/a&gt;、脆弱性を持つパッケージを見つけます。パッケージの検索の詳細については、「パッケージ&lt;a href=&quot;searching-for-packages&quot;&gt;を検索して選択する方法&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="71653400caf43068d482b46e1495f7893c7cc08a" translate="yes" xml:space="preserve">
          <source>On the command line, navigate to your package directory by typing &lt;code&gt;cd path/to/your-package-name&lt;/code&gt; and pressing &lt;strong&gt;Enter&lt;/strong&gt;.</source>
          <target state="translated">コマンドラインで &lt;code&gt;cd path/to/your-package-name&lt;/code&gt; と&lt;strong&gt;入力し、Enterキー&lt;/strong&gt;を押して、パッケージディレクトリに移動します。</target>
        </trans-unit>
        <trans-unit id="71b0d36e275b7ad63fc105965f1e3071c5e67bf5" translate="yes" xml:space="preserve">
          <source>On the command line:</source>
          <target state="translated">コマンドラインで</target>
        </trans-unit>
        <trans-unit id="c499755c3bb06e4e9ee14d42a0a3f18e9c33250d" translate="yes" xml:space="preserve">
          <source>On the next screen, choose the level of 2FA you want.</source>
          <target state="translated">次の画面で、希望する2FAのレベルを選択します。</target>
        </trans-unit>
        <trans-unit id="b7c4e416e9be67ea18c61426bb7192e11b541e87" translate="yes" xml:space="preserve">
          <source>Once a package is published with a given name and version, that specific name and version combination can never be used again, even if it is removed with &lt;a href=&quot;unpublish&quot;&gt;npm-unpublish&lt;/a&gt;.</source>
          <target state="translated">パッケージが特定の名前とバージョンで公開されると、その特定の名前とバージョンの組み合わせは、たとえ&lt;a href=&quot;unpublish&quot;&gt;npm-unpublish&lt;/a&gt;で削除されても、二度と使用できません。</target>
        </trans-unit>
        <trans-unit id="7b290bf2312b292d96a19971d2ced27f8d54328b" translate="yes" xml:space="preserve">
          <source>Once a scope is associated with a registry, any &lt;code&gt;npm install&lt;/code&gt; for a package with that scope will request packages from that registry instead. Any &lt;code&gt;npm publish&lt;/code&gt; for a package name that contains the scope will be published to that registry instead.</source>
          <target state="translated">スコープがレジストリに関連付けられると、そのスコープを持つパッケージの &lt;code&gt;npm install&lt;/code&gt; は、代わりにそのレジストリからパッケージを要求します。どれ &lt;code&gt;npm publish&lt;/code&gt; 範囲が代わりにそのレジストリに公開されます含まれているパッケージ名に。</target>
        </trans-unit>
        <trans-unit id="7f8e3a765148a90d1ec1302e2851f5629ffc8aaa" translate="yes" xml:space="preserve">
          <source>Once it's published, you should see it on the website with a private flag.</source>
          <target state="translated">一度公開されたら、私有地の旗を掲げたサイトで見るべきだと思います。</target>
        </trans-unit>
        <trans-unit id="3a5f79304a00d1dd5c79ca6fa8249b31ac4fc2ee" translate="yes" xml:space="preserve">
          <source>Once the fix is merged and the package has been updated in the npm public registry, update your copy of the package that depends on the package with the fix.</source>
          <target state="translated">修正がマージされ、パッケージが npm パブリックレジストリで更新されたら、その修正が適用されたパッケージに依存するパッケージのコピーを更新してください。</target>
        </trans-unit>
        <trans-unit id="ba2ad45d9badfda427524865583c8073b58bad78" translate="yes" xml:space="preserve">
          <source>Once the package is in &lt;code&gt;node_modules&lt;/code&gt;, you can use it in your code. For example, if you are creating a Node.js module, you can &lt;code&gt;require&lt;/code&gt; it.</source>
          <target state="translated">パッケージが &lt;code&gt;node_modules&lt;/code&gt; にあると、コードで使用できます。たとえば、Node.jsモジュールを作成している場合は、それを &lt;code&gt;require&lt;/code&gt; できます。</target>
        </trans-unit>
        <trans-unit id="1deff37b07d9ff5badafbb7ef19c78ac4815c197" translate="yes" xml:space="preserve">
          <source>Once the pull or merge request is merged and the package has been updated in the &lt;a href=&quot;https://npmjs.com&quot;&gt;npm public registry&lt;/a&gt;, update your copy of the package with &lt;code&gt;npm update&lt;/code&gt;.</source>
          <target state="translated">プルまたはマージ要求がマージされ、パッケージが&lt;a href=&quot;https://npmjs.com&quot;&gt;npmパブリックレジストリ&lt;/a&gt;で更新されたら、パッケージのコピーを &lt;code&gt;npm update&lt;/code&gt; で更新します。</target>
        </trans-unit>
        <trans-unit id="b35153f2d3143efc108482c1868be5e7b1d48592" translate="yes" xml:space="preserve">
          <source>Once you are logged in, type &lt;code&gt;npm profile disable-2fa&lt;/code&gt; and enter your npm password if prompted.</source>
          <target state="translated">ログインしたら、 &lt;code&gt;npm profile disable-2fa&lt;/code&gt; と入力し、プロンプトが表示されたらnpmパスワードを入力します。</target>
        </trans-unit>
        <trans-unit id="7722a25f0d6e003cc5e64d817fa7180e61fd56d5" translate="yes" xml:space="preserve">
          <source>Once you have installed 2FA, you will need to enter an OTP for security-relevant commands. For example, whenever you use the command &lt;code&gt;npm profile set&lt;/code&gt; you will need to enter an OTP before you can set or change a value, such as your fullname:</source>
          <target state="translated">2FAをインストールしたら、セキュリティ関連のコマンドのOTPを入力する必要があります。たとえば、コマンド &lt;code&gt;npm profile set&lt;/code&gt; を使用する場合は常に、フルネームなどの値を設定または変更する前に、OTPを入力する必要があります。</target>
        </trans-unit>
        <trans-unit id="a7e7c9117b05e50435fe8169a7be208ca8bde48d" translate="yes" xml:space="preserve">
          <source>Once your &lt;code&gt;package.json&lt;/code&gt; file is created, you'll want to create the file that will be loaded when your module is required. The default name for this file is &lt;code&gt;index.js&lt;/code&gt;.</source>
          <target state="translated">あなたいったん &lt;code&gt;package.json&lt;/code&gt; のファイルが作成され、あなたのモジュールが必要とされたときにロードされるファイルを作成したいと思います。このファイルのデフォルト名は &lt;code&gt;index.js&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="79c32b8ace5597cd700e362577b644adb74e002b" translate="yes" xml:space="preserve">
          <source>One key detail about &lt;code&gt;package-lock.json&lt;/code&gt; is that it cannot be published, and it will be ignored if found in any place other than the toplevel package. It shares a format with &lt;a href=&quot;shrinkwrap.json&quot;&gt;npm-shrinkwrap.json&lt;/a&gt;, which is essentially the same file, but allows publication. This is not recommended unless deploying a CLI tool or otherwise using the publication process for producing production packages.</source>
          <target state="translated">&lt;code&gt;package-lock.json&lt;/code&gt; に関する重要な詳細の1つは、公開できないことであり、最上位パッケージ以外の場所で見つかると無視されます。&lt;a href=&quot;shrinkwrap.json&quot;&gt;npm-shrinkwrap.json&lt;/a&gt;と形式を共有します。これは基本的に同じファイルですが、公開できます。これは、CLIツールをデプロイするか、本番パッケージを作成するための公開プロセスを使用しない限り、お勧めできません。</target>
        </trans-unit>
        <trans-unit id="e1f9ade8f1931814bc2b36c2d3b3ba90ffc12777" translate="yes" xml:space="preserve">
          <source>One of the things that has changed in npm is that we now use auth tokens to authenticate in the CLI. To generate an auth token, use &lt;code&gt;npm token create&lt;/code&gt;.</source>
          <target state="translated">npmで変更された点の1つは、CLIでの認証に認証トークンを使用するようになったことです。認証トークンを生成するには、 &lt;code&gt;npm token create&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="6ffd866f3f9724b908b77c2913f632b51e0e975a" translate="yes" xml:space="preserve">
          <source>One thing we noticed is that the &lt;code&gt;.gitconfig&lt;/code&gt; used is not always the one expected so if you are on a machine that modified the home path to a shared drive, you need to ensure that your &lt;code&gt;.gitconfig&lt;/code&gt; is the same on both your shared drive and in &lt;code&gt;c:\users\[your user]\&lt;/code&gt;</source>
          <target state="translated">気づいたことの1つは、使用される &lt;code&gt;.gitconfig&lt;/code&gt; が常に期待されるものではないため、共有ドライブへのホームパスを変更したマシンを使用している &lt;code&gt;.gitconfig&lt;/code&gt; は、共有ドライブと共有ドライブの両方で.gitconfigが同じであることを確認する必要があります。で &lt;code&gt;c:\users\[your user]\&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="564e720a6c033ec5330b75b805790bca1c13d80a" translate="yes" xml:space="preserve">
          <source>Only relevant when specified explicitly on the command line.</source>
          <target state="translated">コマンドラインで明示的に指定された場合にのみ関連します。</target>
        </trans-unit>
        <trans-unit id="0788006144621f681c838854bbb1c1a58c5ecfc5" translate="yes" xml:space="preserve">
          <source>Only works if there is already a package.json file present.</source>
          <target state="translated">既に package.json ファイルが存在する場合にのみ動作します。</target>
        </trans-unit>
        <trans-unit id="2c5d28c68b424eb08f7b688a242968a6979bdcc8" translate="yes" xml:space="preserve">
          <source>Open an issue in the package or dependent package issue tracker</source>
          <target state="translated">パッケージや依存パッケージのイシュートラッカーで問題を開く</target>
        </trans-unit>
        <trans-unit id="54cc3ec8a08aca3efd35894beabab3f6db48943c" translate="yes" xml:space="preserve">
          <source>Open or create a &lt;code&gt;~/.profile&lt;/code&gt; file and add this line:</source>
          <target state="translated">&lt;code&gt;~/.profile&lt;/code&gt; ファイルを開くか作成して、次の行を追加します。</target>
        </trans-unit>
        <trans-unit id="1eb18e7eb437b66656db94f7a9f29cc9e1789966" translate="yes" xml:space="preserve">
          <source>Open package repository page in the browser.</source>
          <target state="translated">ブラウザでパッケージリポジトリのページを開きます。</target>
        </trans-unit>
        <trans-unit id="0e41ddec2939f2055b00f8f9f32f3b92711ea450" translate="yes" xml:space="preserve">
          <source>Open the email titled &lt;em&gt;Welcome to npm&lt;/em&gt; (search &lt;em&gt;All Mail&lt;/em&gt; in case the email doesn't appear in the inbox).</source>
          <target state="translated">&lt;em&gt;Welcome to npm&lt;/em&gt;というタイトルのメールを開きます（メールが受信トレイに表示されない場合は、[ &lt;em&gt;すべてのメール]&lt;/em&gt;を検索してください）。</target>
        </trans-unit>
        <trans-unit id="71461fce6032e89a6af49731e911be952a9c9acf" translate="yes" xml:space="preserve">
          <source>Opens the config file in an editor. Use the &lt;code&gt;--global&lt;/code&gt; flag to edit the global config.</source>
          <target state="translated">エディターで構成ファイルを開きます。使用 &lt;code&gt;--global&lt;/code&gt; グローバル設定を編集するためのフラグを。</target>
        </trans-unit>
        <trans-unit id="88407d0b8ae332bec10adad4ccc441ffd955cb69" translate="yes" xml:space="preserve">
          <source>Opens the package folder in the default editor (or whatever you've configured as the npm &lt;code&gt;editor&lt;/code&gt; config -- see &lt;code&gt;&lt;a href=&quot;../misc/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">デフォルトのエディター（またはnpm &lt;code&gt;editor&lt;/code&gt; 構成として構成したもの、 &lt;code&gt;&lt;a href=&quot;../misc/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; を参照）でパッケージフォルダーを開きます。</target>
        </trans-unit>
        <trans-unit id="2b035283ec32dd405774c42f373bdc3ab4420ca9" translate="yes" xml:space="preserve">
          <source>Operates in &quot;global&quot; mode, so that packages are installed into the &lt;code&gt;prefix&lt;/code&gt; folder instead of the current working directory. See &lt;code&gt;&lt;a href=&quot;../files/folders&quot;&gt;npm-folders&lt;/a&gt;&lt;/code&gt; for more on the differences in behavior.</source>
          <target state="translated">「グローバル」モードで動作するため、パッケージは現在の作業ディレクトリではなく、 &lt;code&gt;prefix&lt;/code&gt; フォルダーにインストールされます。動作の違いの詳細については、 &lt;code&gt;&lt;a href=&quot;../files/folders&quot;&gt;npm-folders&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="5193a46114f37a26c24bcb5dc7a99da2f7f66210" translate="yes" xml:space="preserve">
          <source>Optimal</source>
          <target state="translated">Optimal</target>
        </trans-unit>
        <trans-unit id="1fcd26a5d101992273a5d424d98f422c5387bd7f" translate="yes" xml:space="preserve">
          <source>Option 1 or 2</source>
          <target state="translated">オプション1または2</target>
        </trans-unit>
        <trans-unit id="a22544d8fac65d3f41b8b3690a7e553c8f1fda30" translate="yes" xml:space="preserve">
          <source>Option 1: &lt;a href=&quot;http://superuser.com/questions/284342/what-are-path-and-other-environment-variables-and-how-can-i-set-or-use-them&quot;&gt;edit your Windows installation's &lt;code&gt;PATH&lt;/code&gt;&lt;/a&gt; to put &lt;code&gt;%appdata%\npm&lt;/code&gt; before &lt;code&gt;%ProgramFiles%\nodejs&lt;/code&gt;. Remember that you'll need to restart &lt;code&gt;cmd.exe&lt;/code&gt; (and potentially restart Windows) when you make changes to &lt;code&gt;PATH&lt;/code&gt; or how npm is installed.</source>
          <target state="translated">オプション1：&lt;a href=&quot;http://superuser.com/questions/284342/what-are-path-and-other-environment-variables-and-how-can-i-set-or-use-them&quot;&gt;Windowsインストールの &lt;code&gt;PATH&lt;/code&gt; &lt;/a&gt;を編集して、 &lt;code&gt;%appdata%\npm&lt;/code&gt; を &lt;code&gt;%ProgramFiles%\nodejs&lt;/code&gt; 前に配置します。 &lt;code&gt;PATH&lt;/code&gt; またはnpmのインストール方法を変更するときは、 &lt;code&gt;cmd.exe&lt;/code&gt; を再起動する必要があることに注意してください（Windows を再起動することもあります）。</target>
        </trans-unit>
        <trans-unit id="ec838084a2985970c73711ce3388fb0abc134000" translate="yes" xml:space="preserve">
          <source>Option 2: remove both of</source>
          <target state="translated">選択肢2:両方を削除する</target>
        </trans-unit>
        <trans-unit id="f6c646b8baff10d0903b4dd8c67449ef710a6785" translate="yes" xml:space="preserve">
          <source>Option 3</source>
          <target state="translated">オプション3</target>
        </trans-unit>
        <trans-unit id="da89a2f58d34e4ffb832ce70e081af577b8dbb22" translate="yes" xml:space="preserve">
          <source>Option 3: Navigate to &lt;code&gt;%ProgramFiles%\nodejs\node_modules\npm&lt;/code&gt; and copy the &lt;code&gt;npmrc&lt;/code&gt;file to another folder or the desktop. Then open &lt;code&gt;cmd.exe&lt;/code&gt; and run the following commands:</source>
          <target state="translated">オプション3： &lt;code&gt;%ProgramFiles%\nodejs\node_modules\npm&lt;/code&gt; し、 &lt;code&gt;npmrc&lt;/code&gt; ファイルを別のフォルダーまたはデスクトップにコピーします。次に、 &lt;code&gt;cmd.exe&lt;/code&gt; を開き、次のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="ee00e88a7eb0731ee7af9f9a65ca3031bcba3186" translate="yes" xml:space="preserve">
          <source>Option One: Reinstall with a Node Version Manager</source>
          <target state="translated">オプション 1:ノードのバージョンマネージャを使って再インストールする</target>
        </trans-unit>
        <trans-unit id="cc44c170a7366d1cf2eb2eebd3d1238c32403ca9" translate="yes" xml:space="preserve">
          <source>Option Two: Change npm's Default Directory</source>
          <target state="translated">オプション 2:npm のデフォルトディレクトリを変更する</target>
        </trans-unit>
        <trans-unit id="4d517faf904464b61bcc912a9bac7cdac12719da" translate="yes" xml:space="preserve">
          <source>Options to pass through to Node.js via the &lt;code&gt;NODE_OPTIONS&lt;/code&gt; environment variable. This does not impact how npm itself is executed but it does impact how lifecycle scripts are called.</source>
          <target state="translated">&lt;code&gt;NODE_OPTIONS&lt;/code&gt; 環境変数を介してNode.jsに渡すオプション。これはnpm自体の実行方法には影響しませんが、ライフサイクルスクリプトの呼び出し方法には影響します。</target>
        </trans-unit>
        <trans-unit id="61249b8e40e81315c6d40e9382f514757e73dffd" translate="yes" xml:space="preserve">
          <source>Or in &lt;code&gt;package.json&lt;/code&gt;:</source>
          <target state="translated">または &lt;code&gt;package.json&lt;/code&gt; で：</target>
        </trans-unit>
        <trans-unit id="1ccf0a5acf58188318b2dc7cb52603ca5c821178" translate="yes" xml:space="preserve">
          <source>Or upgrade to the most recent release:</source>
          <target state="translated">または、最新のリリースにアップグレードしてください。</target>
        </trans-unit>
        <trans-unit id="a4ff151293fe6d0b455ac2d7373ceb9542c491dd" translate="yes" xml:space="preserve">
          <source>Or you can install npm in the terminal console, as explained below, then come back to these steps.</source>
          <target state="translated">または、以下に説明するように、ターミナルコンソールにnpmをインストールして、これらの手順に戻ってくることができます。</target>
        </trans-unit>
        <trans-unit id="52c6807a7513d678b7dc028be32672763740995d" translate="yes" xml:space="preserve">
          <source>Or you can shorten that all into a single string, and npm will parse it for you:</source>
          <target state="translated">あるいは、それをすべて1つの文字列に短縮することもでき、npmがパースしてくれます。</target>
        </trans-unit>
        <trans-unit id="bc7fb3510b2886d583071c96abafa79248ff2e04" translate="yes" xml:space="preserve">
          <source>Or, if that fails, get the npm source code, and do:</source>
          <target state="translated">または、それが失敗した場合は、npmのソースコードを取得して、実行します。</target>
        </trans-unit>
        <trans-unit id="687b69ce89fed20c8a7e1a988ee7ca1a9569c45f" translate="yes" xml:space="preserve">
          <source>Or, if you are working in another tab on the web, you can click the Tokens tab:</source>
          <target state="translated">または、ウェブ上の別のタブで作業している場合は、「トークン」タブをクリックします。</target>
        </trans-unit>
        <trans-unit id="613f13f4bba04ff8e0bb5f1436aaf05270d108f9" translate="yes" xml:space="preserve">
          <source>Organization creation and management of team admins and &lt;em&gt;organization&lt;/em&gt; members is done through the website, not the npm CLI.</source>
          <target state="translated">チーム管理者と&lt;em&gt;組織&lt;/em&gt;メンバーの組織の作成と管理は、npm CLIではなくWebサイトを介して行われます。</target>
        </trans-unit>
        <trans-unit id="434b9b26e861a500ef98c0455e63a683adb5c8f4" translate="yes" xml:space="preserve">
          <source>Other things forbidden by the npm &lt;a href=&quot;https://www.npmjs.com/policies/conduct&quot;&gt;Code of Conduct&lt;/a&gt; such as hateful language, pornographic content, or harassment.</source>
          <target state="translated">悪意のある言葉、ポルノコンテンツ、嫌がらせなど、npm &lt;a href=&quot;https://www.npmjs.com/policies/conduct&quot;&gt;行動規範で&lt;/a&gt;禁止されているその他の事柄。</target>
        </trans-unit>
        <trans-unit id="6addd0caad3cbb3a406fd7b8db58e85deef9a364" translate="yes" xml:space="preserve">
          <source>Output parseable results from commands that write to standard output. For &lt;code&gt;npm search&lt;/code&gt;, this will be tab-separated table format.</source>
          <target state="translated">標準出力に書き込むコマンドから解析可能な結果を​​出力します。 &lt;code&gt;npm search&lt;/code&gt; 、これはタブ区切りのテーブル形式になります。</target>
        </trans-unit>
        <trans-unit id="03d39f7cb3ea3c7d198dc5e8c9e2ee9280f22dab" translate="yes" xml:space="preserve">
          <source>Output search results as a JSON array.</source>
          <target state="translated">検索結果をJSON配列として出力します。</target>
        </trans-unit>
        <trans-unit id="8858018772a12454bbbc4f161bfdddd266054fd1" translate="yes" xml:space="preserve">
          <source>Output search results as lines with tab-separated columns.</source>
          <target state="translated">検索結果をタブ区切りの列を持つ行として出力します。</target>
        </trans-unit>
        <trans-unit id="e39aa0147e2c1ccfe5c4b460e2eeaee3df318218" translate="yes" xml:space="preserve">
          <source>PREPUBLISH AND PREPARE</source>
          <target state="translated">PREPUBLISHとPREPARE</target>
        </trans-unit>
        <trans-unit id="64ae0efa4ecf6712c9bb96d5b026f94653c2db16" translate="yes" xml:space="preserve">
          <source>PURPOSE</source>
          <target state="translated">PURPOSE</target>
        </trans-unit>
        <trans-unit id="7431e3df243c5be33cffa0b28ca2a76b93f0538c" translate="yes" xml:space="preserve">
          <source>Package</source>
          <target state="translated">Package</target>
        </trans-unit>
        <trans-unit id="9938ef626722ec75dc17f20a6afc43c055a2b244" translate="yes" xml:space="preserve">
          <source>Package linking is a two-step process.</source>
          <target state="translated">パッケージのリンクは2段階のプロセスです。</target>
        </trans-unit>
        <trans-unit id="3bfd646ecdd5c7f814af23b84aed7db1a1ca86c8" translate="yes" xml:space="preserve">
          <source>Package scripts run in an environment where many pieces of information are made available regarding the setup of npm and the current state of the process.</source>
          <target state="translated">パッケージスクリプトは、npm の設定やプロセスの現状について多くの情報が公開されている環境で実行されます。</target>
        </trans-unit>
        <trans-unit id="0daa30da3be42fb768a2c93f3cebe832a124b1ff" translate="yes" xml:space="preserve">
          <source>Packages are dropped into the &lt;code&gt;node_modules&lt;/code&gt; folder under the &lt;code&gt;prefix&lt;/code&gt;. When installing locally, this means that you can &lt;code&gt;require(&quot;packagename&quot;)&lt;/code&gt; to load its main module, or &lt;code&gt;require(&quot;packagename/lib/path/to/sub/module&quot;)&lt;/code&gt; to load other modules.</source>
          <target state="translated">パッケージは、 &lt;code&gt;prefix&lt;/code&gt; 下の &lt;code&gt;node_modules&lt;/code&gt; フォルダーにドロップされます。ローカルにインストールする場合、これはメインモジュールをロードする &lt;code&gt;require(&quot;packagename&quot;)&lt;/code&gt; 、または他のモジュールをロード &lt;code&gt;require(&quot;packagename/lib/path/to/sub/module&quot;)&lt;/code&gt; できることを意味します。</target>
        </trans-unit>
        <trans-unit id="d1aac566feba43d0caff57ae0df3062a098440f1" translate="yes" xml:space="preserve">
          <source>Packages that incorporate the package shown in some way are called dependents.</source>
          <target state="translated">表示されているパッケージを何らかの形で組み込んだパッケージを依存パッケージと呼びます。</target>
        </trans-unit>
        <trans-unit id="c161241bf6a6912c6038f93faa97e38de6bda996" translate="yes" xml:space="preserve">
          <source>Parts of the Package Page:</source>
          <target state="translated">パッケージページのパーツ。</target>
        </trans-unit>
        <trans-unit id="030e2fc703f77b9a2294653f54ecb8395783abb6" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;-s&lt;/code&gt; flag to git to sign the tag.</source>
          <target state="translated">タグに署名するには、 &lt;code&gt;-s&lt;/code&gt; フラグをgitに渡します。</target>
        </trans-unit>
        <trans-unit id="51ddbc7e4f00078a03f1d5c03a03d604b0df590a" translate="yes" xml:space="preserve">
          <source>Patch releases: &lt;code&gt;1.0&lt;/code&gt; or &lt;code&gt;1.0.x&lt;/code&gt; or &lt;code&gt;~1.0.4&lt;/code&gt;</source>
          <target state="translated">パッチリリース： &lt;code&gt;1.0&lt;/code&gt; または &lt;code&gt;1.0.x&lt;/code&gt; または &lt;code&gt;~1.0.4&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f7d2512b1dcb2da4e700ea8540f007c35e9d9df0" translate="yes" xml:space="preserve">
          <source>Patched in</source>
          <target state="translated">パッチングされた</target>
        </trans-unit>
        <trans-unit id="a31fe1c4e4cb42a93034a693997afe809bbb1699" translate="yes" xml:space="preserve">
          <source>Patches welcome!</source>
          <target state="translated">パッチ歓迎</target>
        </trans-unit>
        <trans-unit id="519e39132bb98418cc0483cc446ccf5f3c8dcffe" translate="yes" xml:space="preserve">
          <source>Path</source>
          <target state="translated">Path</target>
        </trans-unit>
        <trans-unit id="0451965d3c672c2aef08cf799ca6df04b261ddb5" translate="yes" xml:space="preserve">
          <source>Per-Package Config Settings</source>
          <target state="translated">パッケージごとの設定</target>
        </trans-unit>
        <trans-unit id="8cf7a5b9d60c9a59836e2bbb4ca1c36c1808b834" translate="yes" xml:space="preserve">
          <source>Per-project config file</source>
          <target state="translated">プロジェクトごとの設定ファイル</target>
        </trans-unit>
        <trans-unit id="d3588790ad118c22dc3e54cee5d97f45b5d0a783" translate="yes" xml:space="preserve">
          <source>Per-user config file</source>
          <target state="translated">ユーザごとの設定ファイル</target>
        </trans-unit>
        <trans-unit id="edf849b7ccc3e6f712b350de8caab0468e0edd46" translate="yes" xml:space="preserve">
          <source>Permissions Errors</source>
          <target state="translated">パーミッションエラー</target>
        </trans-unit>
        <trans-unit id="37b41feedc57beb47575c404f0820bb45edd5607" translate="yes" xml:space="preserve">
          <source>Permissions checks</source>
          <target state="translated">パーミッションチェック</target>
        </trans-unit>
        <trans-unit id="6191327cec734f41a774ec7f5c4814eb252d61ea" translate="yes" xml:space="preserve">
          <source>Ping npm registry.</source>
          <target state="translated">npmのレジストリをPingします。</target>
        </trans-unit>
        <trans-unit id="b9d250304583d0829bfae8dffeeb3a95cc8d7f5b" translate="yes" xml:space="preserve">
          <source>Ping the configured or given npm registry and verify authentication. If it works it will output something like:</source>
          <target state="translated">設定された、または与えられた npm レジストリを Ping して認証を確認します。うまくいけば、以下のような出力が出てきます。</target>
        </trans-unit>
        <trans-unit id="5a5f10ce6c1ccb2e07fa8ee19d58a27b1f79a83e" translate="yes" xml:space="preserve">
          <source>Place an executable file at &lt;code&gt;node_modules/.hooks/{eventname}&lt;/code&gt;, and it'll get run for all packages when they are going through that point in the package lifecycle for any packages installed in that root.</source>
          <target state="translated">実行可能ファイルを &lt;code&gt;node_modules/.hooks/{eventname}&lt;/code&gt; に配置すると、そのルートにインストールされているパッケージのパッケージライフサイクルのそのポイントを通過するときに、すべてのパッケージに対して実行されます。</target>
        </trans-unit>
        <trans-unit id="f9670883dc83700abe04b0eb716abdfdcb98f770" translate="yes" xml:space="preserve">
          <source>Please clean up logs when they are no longer helpful. In particular, logging the same object over and over again is not helpful. Logs should report what's happening so that it's easier to track down where a fault occurs.</source>
          <target state="translated">役に立たなくなったログはクリーンアップしてください。特に、同じオブジェクトを何度も何度も記録することは役に立ちません。ログは、障害が発生した場所を簡単に追跡できるように、何が起こっているかを報告する必要があります。</target>
        </trans-unit>
        <trans-unit id="7ba7eb6fbbda40df962e670f0349c48868e1fb15" translate="yes" xml:space="preserve">
          <source>Please make sure that your file(s) referenced in &lt;code&gt;bin&lt;/code&gt; starts with &lt;code&gt;#!/usr/bin/env node&lt;/code&gt;, otherwise the scripts are started without the node executable!</source>
          <target state="translated">&lt;code&gt;bin&lt;/code&gt; で参照されているファイルが &lt;code&gt;#!/usr/bin/env node&lt;/code&gt; で始まっていることを確認してください。そうでない場合、ノード実行可能ファイルなしでスクリプトが開始されます。</target>
        </trans-unit>
        <trans-unit id="16af75375ba5f3822f56b4fbbe4dfd4176ab0b88" translate="yes" xml:space="preserve">
          <source>Please refer to the &lt;a href=&quot;../cli/profile&quot;&gt;command line documentation&lt;/a&gt; for more details and examples.</source>
          <target state="translated">詳細と例については、&lt;a href=&quot;../cli/profile&quot;&gt;コマンドラインのドキュメント&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="947caf58522bb320b47240afd3cf0aaab6b259ec" translate="yes" xml:space="preserve">
          <source>Please refer to the Orgs book for details about how to create and assign teams, and work with Orgs scopes.</source>
          <target state="translated">チームの作り方やアサインの仕方、Orgsスコープを使った仕事の進め方などはOrgs本を参考にしてください。</target>
        </trans-unit>
        <trans-unit id="c8a14bc0401e12d3eac54c2c45d9d97acc02ca0c" translate="yes" xml:space="preserve">
          <source>Please see the discussions in &lt;a href=&quot;../getting-started/installing-node&quot;&gt;Chapter 2&lt;/a&gt; and &lt;a href=&quot;../getting-started/fixing-npm-permissions&quot;&gt;Chapter 3&lt;/a&gt; about ways to avoid permissions errors.</source>
          <target state="translated">権限エラーを回避する方法については、&lt;a href=&quot;../getting-started/installing-node&quot;&gt;第2章&lt;/a&gt;と&lt;a href=&quot;../getting-started/fixing-npm-permissions&quot;&gt;第3 &lt;/a&gt;章の説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="be6c200feb205f8ceb9451117a5930415ac0abb9" translate="yes" xml:space="preserve">
          <source>Popularity</source>
          <target state="translated">Popularity</target>
        </trans-unit>
        <trans-unit id="92238540743ff9110cbe207b17c37906f937403c" translate="yes" xml:space="preserve">
          <source>Positional arguments are &lt;code&gt;name@version-range&lt;/code&gt; identifiers, which will limit the results to only the paths to the packages named. Note that nested packages will &lt;em&gt;also&lt;/em&gt; show the paths to the specified packages. For example, running &lt;code&gt;npm ls promzard&lt;/code&gt; in npm's source tree will show:</source>
          <target state="translated">定位置引数は &lt;code&gt;name@version-range&lt;/code&gt; 識別子であり、結果は指定されたパッケージへのパスのみに制限されます。ネストされたパッケージには、指定されたパッケージへのパス&lt;em&gt;も&lt;/em&gt;表示されることに注意してください。たとえば、npmのソースツリーで &lt;code&gt;npm ls promzard&lt;/code&gt; を実行すると、次のように表示されます。</target>
        </trans-unit>
        <trans-unit id="e73da856eae6be601452870aadfe7e5565a34409" translate="yes" xml:space="preserve">
          <source>Possible temporary npm registry glitch, or corrupted local server cache. Run &lt;code&gt;npm cache clean&lt;/code&gt; and/or try again later.</source>
          <target state="translated">一時的なnpmレジストリの不具合、またはローカルサーバーキャッシュの破損の可能性があります。 &lt;code&gt;npm cache clean&lt;/code&gt; を実行するか、後で再試行してください。</target>
        </trans-unit>
        <trans-unit id="a8bc382020aaaa716a496826f97b0c9d436c31a9" translate="yes" xml:space="preserve">
          <source>Preparation</source>
          <target state="translated">Preparation</target>
        </trans-unit>
        <trans-unit id="c682f92411e2be58789b8ad67d36bbe717fb97e2" translate="yes" xml:space="preserve">
          <source>Prerelease Identifiers</source>
          <target state="translated">プレリリース識別子</target>
        </trans-unit>
        <trans-unit id="f97f6ce6ce107b043cd07a59e8111b68ef0c4df5" translate="yes" xml:space="preserve">
          <source>Prerelease Tags</source>
          <target state="translated">プレリリースタグ</target>
        </trans-unit>
        <trans-unit id="f82e16c42d12fee4cbbe90c013d50ff55c5bd90c" translate="yes" xml:space="preserve">
          <source>Prevents throwing an error when &lt;code&gt;npm version&lt;/code&gt; is used to set the new version to the same value as the current version.</source>
          <target state="translated">&lt;code&gt;npm version&lt;/code&gt; を使用して新しいバージョンを現在のバージョンと同じ値に設定するときにエラーがスローされるのを防ぎます。</target>
        </trans-unit>
        <trans-unit id="e33a581ed5a89cbc7253015521fec58120d4df97" translate="yes" xml:space="preserve">
          <source>Print the &lt;code&gt;username&lt;/code&gt; config to standard output.</source>
          <target state="translated">印刷 &lt;code&gt;username&lt;/code&gt; を標準出力に設定します。</target>
        </trans-unit>
        <trans-unit id="cf006bc206d0613883d6fe5ad1f7e59838e24c33" translate="yes" xml:space="preserve">
          <source>Print the effective &lt;code&gt;node_modules&lt;/code&gt; folder to standard out.</source>
          <target state="translated">有効な &lt;code&gt;node_modules&lt;/code&gt; フォルダーを標準出力に出力します。</target>
        </trans-unit>
        <trans-unit id="b47626782a6802dac6a98fa89f8492bafef6c30d" translate="yes" xml:space="preserve">
          <source>Print the folder where npm will install executables.</source>
          <target state="translated">npmが実行ファイルをインストールするフォルダを表示します。</target>
        </trans-unit>
        <trans-unit id="ca15560dded8df24ffdb21c853c3677ee9201210" translate="yes" xml:space="preserve">
          <source>Print the local prefix to standard out. This is the closest parent directory to contain a package.json file unless &lt;code&gt;-g&lt;/code&gt; is also specified.</source>
          <target state="translated">ローカルプレフィックスを標準出力に出力します。これは、 &lt;code&gt;-g&lt;/code&gt; も指定されていない限り、package.jsonファイルを含む最も近い親ディレクトリです。</target>
        </trans-unit>
        <trans-unit id="441558197d776dc70e167d8b6d4dee4e813b7680" translate="yes" xml:space="preserve">
          <source>Prior to npm 3.0.0, this feature was used to treat this package as if the user had set &lt;code&gt;engine-strict&lt;/code&gt;. It is no longer used.</source>
          <target state="translated">npm 3.0.0より前のバージョンでは、この機能は、ユーザーが &lt;code&gt;engine-strict&lt;/code&gt; を設定したかのようにこのパッケージを処理するために使用されていました。使用されなくなりました。</target>
        </trans-unit>
        <trans-unit id="2ae01676b4173108166e13b8e5a1d2d438c07f6d" translate="yes" xml:space="preserve">
          <source>Prior to version 0.3, npm used shim files for executables and node modules. To track those down, you can do the following:</source>
          <target state="translated">バージョン 0.3 より前の npm では、実行ファイルとノードモジュールに shim ファイルを使用していました。それらを追跡するには、以下のようにします。</target>
        </trans-unit>
        <trans-unit id="29dc927e969f7d106692fe8bb8a1284a43e2f287" translate="yes" xml:space="preserve">
          <source>Private packages</source>
          <target state="translated">プライベートパッケージ</target>
        </trans-unit>
        <trans-unit id="13b687d9149b4816fa210aba30641a3c468a4c03" translate="yes" xml:space="preserve">
          <source>Provide a facility for users to &quot;time-travel&quot; to previous states of &lt;code&gt;node_modules&lt;/code&gt; without having to commit the directory itself.</source>
          <target state="translated">ユーザーがディレクトリ自体をコミットする &lt;code&gt;node_modules&lt;/code&gt; なく、node_modulesの以前の状態に「タイムトラベル」する機能を提供します。</target>
        </trans-unit>
        <trans-unit id="03b77ce939f90dd8c1351c10723aa3b00b50e804" translate="yes" xml:space="preserve">
          <source>Public scoped modules are free and don't require a paid subscription. To publish a public scoped module, set the access option when publishing it. This option will remain set for all subsequent publishes.</source>
          <target state="translated">パブリックスコープされたモジュールは無料で、有料のサブスクリプションを必要としません。パブリックスコープされたモジュールを公開するには、公開時にアクセスオプションを設定します。このオプションは、その後のすべての公開で設定されたままになります。</target>
        </trans-unit>
        <trans-unit id="f35b6ed0f4a0ef56580cdcc620f073994a24a45c" translate="yes" xml:space="preserve">
          <source>Publish a package and adjust package access</source>
          <target state="translated">パッケージの発行とパッケージのアクセス調整</target>
        </trans-unit>
        <trans-unit id="e4a1c135518dbcc0aea6e61fced76a323e458e2c" translate="yes" xml:space="preserve">
          <source>Publish a package.</source>
          <target state="translated">パッケージを公開します。</target>
        </trans-unit>
        <trans-unit id="603ae84595295e339f0eb12e31e10b05b8c91bf3" translate="yes" xml:space="preserve">
          <source>Publish your package</source>
          <target state="translated">パッケージを公開する</target>
        </trans-unit>
        <trans-unit id="71335a7cd3dd795aadd46a508c84dd4985336205" translate="yes" xml:space="preserve">
          <source>Publish your package to npm.</source>
          <target state="translated">npmにパッケージを公開します。</target>
        </trans-unit>
        <trans-unit id="5304864bc3a599d0534613e0e47a5c2939f79a3d" translate="yes" xml:space="preserve">
          <source>Publish!</source>
          <target state="translated">Publish!</target>
        </trans-unit>
        <trans-unit id="72eab2e090e547c64453b019e9bd06900b2de547" translate="yes" xml:space="preserve">
          <source>Publishes a package to the registry so that it can be installed by name. All files in the package directory are included if no local &lt;code&gt;.gitignore&lt;/code&gt; or &lt;code&gt;.npmignore&lt;/code&gt; file exists. If both files exist and a file is ignored by &lt;code&gt;.gitignore&lt;/code&gt; but not by &lt;code&gt;.npmignore&lt;/code&gt; then it will be included. See &lt;code&gt;&lt;a href=&quot;../misc/developers&quot;&gt;npm-developers&lt;/a&gt;&lt;/code&gt; for full details on what's included in the published package, as well as details on how the package is built.</source>
          <target state="translated">名前でインストールできるように、パッケージをレジストリに公開します。ローカルの &lt;code&gt;.gitignore&lt;/code&gt; または &lt;code&gt;.npmignore&lt;/code&gt; ファイルが存在しない場合、パッケージディレクトリ内のすべてのファイルが含まれます。両方のファイルが存在すると、ファイルがによって無視されている場合は &lt;code&gt;.gitignore&lt;/code&gt; ではなくにより &lt;code&gt;.npmignore&lt;/code&gt; それが含まれます。参照してください。 &lt;code&gt;&lt;a href=&quot;../misc/developers&quot;&gt;npm-developers&lt;/a&gt;&lt;/code&gt; フル公開したパッケージに含まれている内容の詳細だけでなく、パッケージが構築されている方法の詳細については。</target>
        </trans-unit>
        <trans-unit id="338b45a6751558a0e49cb2d757f64736adc58f12" translate="yes" xml:space="preserve">
          <source>Publishing</source>
          <target state="translated">Publishing</target>
        </trans-unit>
        <trans-unit id="a696d79c632aa321f17800b7af4dd97e93985a84" translate="yes" xml:space="preserve">
          <source>Publishing a Scoped Package</source>
          <target state="translated">スコープされたパッケージの発行</target>
        </trans-unit>
        <trans-unit id="71977c7066692ff3dc6ff885758f722ac622e5e3" translate="yes" xml:space="preserve">
          <source>Publishing a package sets the &lt;code&gt;latest&lt;/code&gt; tag to the published version unless the &lt;code&gt;--tag&lt;/code&gt; option is used. For example, &lt;code&gt;npm publish --tag=beta&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--tag&lt;/code&gt; オプションを使用しない限り、パッケージを公開すると、 &lt;code&gt;latest&lt;/code&gt; タグが公開済みのバージョンに設定されます。たとえば、 &lt;code&gt;npm publish --tag=beta&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="e67986398b2039742efa52fdbebb65f68ac05acd" translate="yes" xml:space="preserve">
          <source>Publishing private scoped packages to the npm registry</source>
          <target state="translated">スコープされたプライベートパッケージを npm レジストリに公開する</target>
        </trans-unit>
        <trans-unit id="9ca05ffbde1319be662f37b83ea167e24d8abded" translate="yes" xml:space="preserve">
          <source>Publishing public scoped packages to the primary npm registry</source>
          <target state="translated">public scoped されたパッケージをプライマリ npm レジストリに公開する</target>
        </trans-unit>
        <trans-unit id="44409d170fe0c07037be9262a5077034af7a052e" translate="yes" xml:space="preserve">
          <source>Publishing scoped packages</source>
          <target state="translated">スコープされたパッケージの出版</target>
        </trans-unit>
        <trans-unit id="39e2d84660ea8208a9c112d5301a3208aa35561b" translate="yes" xml:space="preserve">
          <source>Publishing with tags</source>
          <target state="translated">タグでの発行</target>
        </trans-unit>
        <trans-unit id="ec5a5c4535a32a0f51364b08a7b62982d5da8cd1" translate="yes" xml:space="preserve">
          <source>Publishing your package</source>
          <target state="translated">パッケージの公開</target>
        </trans-unit>
        <trans-unit id="3b7c592ce26b362a8cb7d56275a63b69ed6e2a7b" translate="yes" xml:space="preserve">
          <source>Publishing your package is easy.</source>
          <target state="translated">パッケージの公開は簡単です。</target>
        </trans-unit>
        <trans-unit id="9211150328914c8290df3beacac4171cfea346cc" translate="yes" xml:space="preserve">
          <source>Put a description in it. It's a string. This helps people discover your package, as it's listed in &lt;code&gt;npm search&lt;/code&gt;.</source>
          <target state="translated">説明を入れてください。文字列です。これは、 &lt;code&gt;npm search&lt;/code&gt; にリストされているため、ユーザーがパッケージを見つけやすくなります。</target>
        </trans-unit>
        <trans-unit id="2729206da88984c37bc54a95ea39e5dbb3fc5229" translate="yes" xml:space="preserve">
          <source>Put a single space in front of &lt;code&gt;(&lt;/code&gt; for anything other than a function call. Also use a single space wherever it makes things more readable.</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt; 関数呼び出し以外の場合は、前にスペースを1つ入れます。読みやすくするために、スペースを1つ入れます。</target>
        </trans-unit>
        <trans-unit id="9338e063b35a3cb3409101d5bf3d5f352af9f287" translate="yes" xml:space="preserve">
          <source>Put example scripts in here. Someday, it might be exposed in some clever way.</source>
          <target state="translated">ここにスクリプトの例を入れてください。いつか、何か巧妙な方法で晒されるかもしれません。</target>
        </trans-unit>
        <trans-unit id="fc044658d31d7f73131da503668b60d3a43f05a2" translate="yes" xml:space="preserve">
          <source>Put keywords in it. It's an array of strings. This helps people discover your package as it's listed in &lt;code&gt;npm search&lt;/code&gt;.</source>
          <target state="translated">その中にキーワードを入れてください。文字列の配列です。これは、 &lt;code&gt;npm search&lt;/code&gt; にリストされているパッケージを人々が見つけやすくなります。</target>
        </trans-unit>
        <trans-unit id="a36ff2400edf4c56584f66c2b25aefc7d63361aa" translate="yes" xml:space="preserve">
          <source>Put markdown files in here. Eventually, these will be displayed nicely, maybe, someday.</source>
          <target state="translated">ここにマークダウンファイルを入れます。いずれは、これらがきれいに表示されるようになるでしょう、多分、いつか。</target>
        </trans-unit>
        <trans-unit id="0bacbc929b76ca5ff0c3889719040eb7ea888a27" translate="yes" xml:space="preserve">
          <source>Put your tests in here. It is currently not exposed, but it might be in the future.</source>
          <target state="translated">ここにテストを入れてください。現在は公開されていませんが、将来的には公開されるかもしれません。</target>
        </trans-unit>
        <trans-unit id="f6918f654ffe0ef25601e865fd9182b4dd6b2fca" translate="yes" xml:space="preserve">
          <source>Putting &lt;code&gt;--foo bar&lt;/code&gt; on the command line sets the &lt;code&gt;foo&lt;/code&gt; configuration parameter to &lt;code&gt;&quot;bar&quot;&lt;/code&gt;. A &lt;code&gt;--&lt;/code&gt; argument tells the cli parser to stop reading flags. Using &lt;code&gt;--flag&lt;/code&gt; without specifying any value will set the value to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">置く &lt;code&gt;--foo bar&lt;/code&gt; コマンドラインでは設定 &lt;code&gt;foo&lt;/code&gt; に設定パラメータを &lt;code&gt;&quot;bar&quot;&lt;/code&gt; 。 &lt;code&gt;--&lt;/code&gt; 引数は、フラグの読み取りを停止するには、CLIパーサーに指示します。値を指定せずに &lt;code&gt;--flag&lt;/code&gt; を使用すると、値が &lt;code&gt;true&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="775741f842f6068953f429c27fdce7967ae3a17c" translate="yes" xml:space="preserve">
          <source>Putting all this together, here is a Backus-Naur grammar for ranges, for the benefit of parser authors:</source>
          <target state="translated">これらをまとめて、パーサ作成者のために、範囲のためのBackus-Naur文法を以下に示します。</target>
        </trans-unit>
        <trans-unit id="6eaea0b5450e4ceeeed978fc728b525522e66d5b" translate="yes" xml:space="preserve">
          <source>Putting empty packages in the registry. Packages must have SOME functionality. It can be silly, but it can't be nothing. (See also: squatting.)</source>
          <target state="translated">空のパッケージをレジストリに入れる。パッケージは何らかの機能を持っていなければなりません。くだらないかもしれませんが、何もないわけにはいきません。(スクワットも参照)。</target>
        </trans-unit>
        <trans-unit id="a60f2c73604f623449f263e78f5857849ad5e429" translate="yes" xml:space="preserve">
          <source>Quality</source>
          <target state="translated">Quality</target>
        </trans-unit>
        <trans-unit id="5fdb74d83ff81599a2bd0edd2f33ef59b80e51ac" translate="yes" xml:space="preserve">
          <source>Quick Summary</source>
          <target state="translated">クイックサマリー</target>
        </trans-unit>
        <trans-unit id="7b0257ce75add65485cb879a8ababbebc2270b68" translate="yes" xml:space="preserve">
          <source>Quotes</source>
          <target state="translated">Quotes</target>
        </trans-unit>
        <trans-unit id="69e27356ef629022720d868ab0c0e3394775b6c1" translate="yes" xml:space="preserve">
          <source>README</source>
          <target state="translated">README</target>
        </trans-unit>
        <trans-unit id="8ffa1146c71db97f92e2f04607f075869b2b30ec" translate="yes" xml:space="preserve">
          <source>REASONING</source>
          <target state="translated">REASONING</target>
        </trans-unit>
        <trans-unit id="a06eea77afe4e20d4af0161bcbb6170637b1c5fb" translate="yes" xml:space="preserve">
          <source>REMOVED.</source>
          <target state="translated">REMOVED.</target>
        </trans-unit>
        <trans-unit id="00f84e61df3304e4d4cc63dbd5398b43c47b3dd0" translate="yes" xml:space="preserve">
          <source>Random Errors--One Place to Start</source>
          <target state="translated">ランダムエラー--スタート地点</target>
        </trans-unit>
        <trans-unit id="d37aaa06ae51debd50b272abf3e29c575f6a1b90" translate="yes" xml:space="preserve">
          <source>Range Grammar</source>
          <target state="translated">範囲文法</target>
        </trans-unit>
        <trans-unit id="0d5fda95e3940bc09dc1ccc22666813c0b54f73d" translate="yes" xml:space="preserve">
          <source>Ranges</source>
          <target state="translated">Ranges</target>
        </trans-unit>
        <trans-unit id="3726d231560ea4a99fd7cbd09152945cbbc17c57" translate="yes" xml:space="preserve">
          <source>Read &lt;a href=&quot;using-a-package.json&quot;&gt;Working with package.json&lt;/a&gt; to be sure that the details you want are reflected in your package.</source>
          <target state="translated">「&lt;a href=&quot;using-a-package.json&quot;&gt;package.jsonの操作」&lt;/a&gt;を読んで、必要な詳細がパッケージに反映されていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="cb74a3c46d545e9c4aa160486ce705c0e8a677f2" translate="yes" xml:space="preserve">
          <source>Read this chapter to learn how to manage security tokens.</source>
          <target state="translated">この章を読んで、セキュリティトークンの管理方法を学びます。</target>
        </trans-unit>
        <trans-unit id="81a4890eecc5af37ec537c39d5e3a487fb7aed64" translate="yes" xml:space="preserve">
          <source>Rebuild a package.</source>
          <target state="translated">パッケージを再構築します。</target>
        </trans-unit>
        <trans-unit id="19bd88c7e8c28b65c9f58c8da6fb56e865324c08" translate="yes" xml:space="preserve">
          <source>Rebuild bundled dependencies after installation.</source>
          <target state="translated">インストール後にバンドルされている依存関係を再構築します。</target>
        </trans-unit>
        <trans-unit id="28fbb69071032e6bd0df9082bd0e6fa16bddfaa0" translate="yes" xml:space="preserve">
          <source>Recommended action</source>
          <target state="translated">推奨される行動</target>
        </trans-unit>
        <trans-unit id="3d1faa346890414aae83db9ce4ff763a8b27c40e" translate="yes" xml:space="preserve">
          <source>Recovery Codes</source>
          <target state="translated">リカバリーコード</target>
        </trans-unit>
        <trans-unit id="f88bf3149d10d2985ac9d430c9f3deeff9aef6da" translate="yes" xml:space="preserve">
          <source>Red means there's a newer version matching your semver requirements, so you should update now.</source>
          <target state="translated">赤色は、あなたのsemverの要件に合った新しいバージョンがあることを意味しますので、今すぐアップデートする必要があります。</target>
        </trans-unit>
        <trans-unit id="942250cb4d738283096a0d1ae67bbf54d254450a" translate="yes" xml:space="preserve">
          <source>Reduce duplication.</source>
          <target state="translated">重複を減らす。</target>
        </trans-unit>
        <trans-unit id="34dffb34be8d7aedab2ee142e712f5f8019cf181" translate="yes" xml:space="preserve">
          <source>Reinstall npm with a version manager (recommended),</source>
          <target state="translated">バージョンマネージャを使ってnpmを再インストールします(推奨)。</target>
        </trans-unit>
        <trans-unit id="251d99a0bedf4b3fd84e5b3ff32555627213306b" translate="yes" xml:space="preserve">
          <source>Related CLI commands</source>
          <target state="translated">関連する CLI コマンド</target>
        </trans-unit>
        <trans-unit id="cb1cfc493bb4063c79f82067a5b41487a1d0116d" translate="yes" xml:space="preserve">
          <source>Remove a hook:</source>
          <target state="translated">フックを外します。</target>
        </trans-unit>
        <trans-unit id="be9cbe035fc5c71f6fa7302ee809ca7589ff06a7" translate="yes" xml:space="preserve">
          <source>Remove a package from the registry.</source>
          <target state="translated">レジストリからパッケージを削除します。</target>
        </trans-unit>
        <trans-unit id="803efb1f652b80e7ade86586a25e22f0fdd4982f" translate="yes" xml:space="preserve">
          <source>Remove a package.</source>
          <target state="translated">パッケージを取り出します。</target>
        </trans-unit>
        <trans-unit id="50ea3d1ff6f28257ca869ba3410b650a7d021848" translate="yes" xml:space="preserve">
          <source>Remove extraneous packages.</source>
          <target state="translated">不要なパッケージを削除します。</target>
        </trans-unit>
        <trans-unit id="f5c25f3507bb492b7a6c1ad09029a1d69b51010a" translate="yes" xml:space="preserve">
          <source>Remove failed installs.</source>
          <target state="translated">失敗したインストールを削除します。</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">Requirements</target>
        </trans-unit>
        <trans-unit id="6f14e7af29a52f6e4b4fa60975b240a3de59e42a" translate="yes" xml:space="preserve">
          <source>Requiring scoped packages</source>
          <target state="translated">スコープされたパッケージを必要とする</target>
        </trans-unit>
        <trans-unit id="5758d92b4feb44f4d97c472c8ed207553779d221" translate="yes" xml:space="preserve">
          <source>Resetting your password from the web</source>
          <target state="translated">ウェブからパスワードをリセットする</target>
        </trans-unit>
        <trans-unit id="5334d0e5224264b7595be971666a86f74f80c22e" translate="yes" xml:space="preserve">
          <source>Resolving &lt;code&gt;EAUDITNOPJSON&lt;/code&gt; and &lt;code&gt;EAUDITNOLOCK&lt;/code&gt; errors</source>
          <target state="translated">&lt;code&gt;EAUDITNOPJSON&lt;/code&gt; および &lt;code&gt;EAUDITNOLOCK&lt;/code&gt; エラーの解決</target>
        </trans-unit>
        <trans-unit id="0278f0a93afd957bbb92683839b53960420a035c" translate="yes" xml:space="preserve">
          <source>Resolving lockfile conflicts</source>
          <target state="translated">ロックファイルの競合の解決</target>
        </trans-unit>
        <trans-unit id="c2e82ccba337094cd7e1611cc9d5e611941a2727" translate="yes" xml:space="preserve">
          <source>Restart a package.</source>
          <target state="translated">パッケージを再起動します。</target>
        </trans-unit>
        <trans-unit id="b642b6a7371cccba46578bd10a825f85e37a5b5b" translate="yes" xml:space="preserve">
          <source>Restrict code to specific developers.</source>
          <target state="translated">特定の開発者にコードを制限する。</target>
        </trans-unit>
        <trans-unit id="fadc5799f95af8ed3024bf0c3c82c00185de1256" translate="yes" xml:space="preserve">
          <source>Review the Contents</source>
          <target state="translated">内容を見直す</target>
        </trans-unit>
        <trans-unit id="ffd073c4d4b57bdffaf63feb9479af9d72b5537b" translate="yes" xml:space="preserve">
          <source>Review the Package Directory</source>
          <target state="translated">パッケージディレクトリを確認する</target>
        </trans-unit>
        <trans-unit id="d2675500dacfeaca07a2342d4f73263439a3b526" translate="yes" xml:space="preserve">
          <source>Review the audit report and run recommended commands or investigate further if needed.</source>
          <target state="translated">監査報告書を確認し、推奨されるコマンドを実行したり、必要に応じてさらに調査したりします。</target>
        </trans-unit>
        <trans-unit id="6f4c47e1d7a407b026342316216e9d6036ae3c46" translate="yes" xml:space="preserve">
          <source>Review the package.json File</source>
          <target state="translated">package.jsonファイルを確認する</target>
        </trans-unit>
        <trans-unit id="bf287e33d3bc42ae80ccf434b3f8e24d42bbeaa8" translate="yes" xml:space="preserve">
          <source>Review the security advisory in the &quot;More info&quot; field for mitigating factors that may allow you to continue using the package with the vulnerability in limited cases. For example, the vulnerability may only exist when the code is used on specific operating systems, or when a specific function is called.</source>
          <target state="translated">詳細情報」欄のセキュリティ勧告を確認して、限られたケースでは脆弱性のあるパッケージの使用を継続できるようにするための緩和要因を確認してください。例えば、特定のオペレーティングシステムでコードを使用した場合や、特定の関数が呼び出された場合にのみ脆弱性が存在する可能性があります。</target>
        </trans-unit>
        <trans-unit id="32cf9117bf9b638b577e6d082f1188885b4c4e74" translate="yes" xml:space="preserve">
          <source>Reviewing and acting on the security audit report</source>
          <target state="translated">セキュリティ監査報告書の見直しと対応</target>
        </trans-unit>
        <trans-unit id="70dc787cf45c2a4d11dc23c626b114dd4a7ed3f7" translate="yes" xml:space="preserve">
          <source>Revoke access:</source>
          <target state="translated">アクセスを取り消します。</target>
        </trans-unit>
        <trans-unit id="753d0ce1a5d1bed1ba6e32a27f233dfd120438e9" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;audit fix&lt;/code&gt; without modifying &lt;code&gt;node_modules&lt;/code&gt;, but still updating the pkglock:</source>
          <target state="translated">&lt;code&gt;node_modules&lt;/code&gt; を変更せずに &lt;code&gt;audit fix&lt;/code&gt; を実行しますが、それでもpkglockを更新します。</target>
        </trans-unit>
        <trans-unit id="2172715246782b3ff6669a4ad0df825b0c412f98" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;node test.js&lt;/code&gt;. The message sent to the console.log should appear.</source>
          <target state="translated">&lt;code&gt;node test.js&lt;/code&gt; 実行します。console.logに送信されたメッセージが表示されます。</target>
        </trans-unit>
        <trans-unit id="5433c15f712918179100e2d9992cfdb99a3c0474" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;npm ci&lt;/code&gt; in that project</source>
          <target state="translated">そのプロジェクトで &lt;code&gt;npm ci&lt;/code&gt; を実行する</target>
        </trans-unit>
        <trans-unit id="b1ce5622333ea59b0fcd764f042a0c2ba3ff08be" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;npm config ls -l&lt;/code&gt; to see a set of configuration parameters that are internal to npm, and are defaults if nothing else is specified.</source>
          <target state="translated">&lt;code&gt;npm config ls -l&lt;/code&gt; を実行して、npmの内部にある一連の構成パラメーターを確認します。他に何も指定されていない場合はデフォルトです。</target>
        </trans-unit>
        <trans-unit id="d31771d0b1d506b3af7e5c6c0a8d4f05569f31a3" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;npm help&lt;/code&gt; to get a list of available commands.</source>
          <target state="translated">&lt;code&gt;npm help&lt;/code&gt; を実行して、使用可能なコマンドのリストを取得します。</target>
        </trans-unit>
        <trans-unit id="3ec1a5beee738f7c71a610942212d88c3dbb10cb" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;npm install &amp;lt;package&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;npm install &amp;lt;package&amp;gt;&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="defef9b4d70ca33f8b0e34ad4bbc16d7250e6f6f" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;npm outdated&lt;/code&gt;. There should not be any results.</source>
          <target state="translated">&lt;code&gt;npm outdated&lt;/code&gt; を実行します。結果はありません。</target>
        </trans-unit>
        <trans-unit id="0b2fe025ca20e7bafa70c64e3fcac3c777548cd1" translate="yes" xml:space="preserve">
          <source>Run a security audit.</source>
          <target state="translated">セキュリティ監査を実行してください。</target>
        </trans-unit>
        <trans-unit id="02bc6d53ae0cb0474b7b1a30d9ed18f7011372ef" translate="yes" xml:space="preserve">
          <source>Run arbitrary package scripts.</source>
          <target state="translated">任意のパッケージスクリプトを実行します。</target>
        </trans-unit>
        <trans-unit id="6c25cd961ec153b833b84e944e2151d9563f3651" translate="yes" xml:space="preserve">
          <source>Run git commit hooks when committing the version change.</source>
          <target state="translated">バージョン変更をコミットする際に git commit フックを実行します。</target>
        </trans-unit>
        <trans-unit id="996f9a2189e51e8f28f2cace98faa0a654393392" translate="yes" xml:space="preserve">
          <source>Run git commit hooks when using the &lt;code&gt;npm version&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;npm version&lt;/code&gt; コマンドを使用する場合は、git commitフックを実行します。</target>
        </trans-unit>
        <trans-unit id="d38ada0c12b427ff61f1f02a2cce43164ef969d7" translate="yes" xml:space="preserve">
          <source>Run packages without downloading using &lt;a href=&quot;https://www.npmjs.com/package/npx&quot;&gt;npx&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.npmjs.com/package/npx&quot;&gt;npx&lt;/a&gt;を使用してダウンロードせずにパッケージを実行します。</target>
        </trans-unit>
        <trans-unit id="01a824c744d252f63507fe2dd761e47b72240165" translate="yes" xml:space="preserve">
          <source>Run the &lt;code&gt;npm audit fix&lt;/code&gt; subcommand to automatically install compatible updates to vulnerable dependencies.</source>
          <target state="translated">&lt;code&gt;npm audit fix&lt;/code&gt; サブコマンドを実行して、脆弱な依存関係への互換性のある更新を自動的にインストールします。</target>
        </trans-unit>
        <trans-unit id="596122604dfa24a3d366e3366e6ecbb199bd1234" translate="yes" xml:space="preserve">
          <source>Run the &lt;code&gt;postversion&lt;/code&gt; script. Use it to clean up the file system or automatically push the commit and/or tag.</source>
          <target state="translated">&lt;code&gt;postversion&lt;/code&gt; スクリプトを実行します。これを使用してファイルシステムをクリーンアップするか、コミットやタグを自動的にプッシュします。</target>
        </trans-unit>
        <trans-unit id="dc61f5d19f2ae5325a0b571f3f3f4b497d2d3475" translate="yes" xml:space="preserve">
          <source>Run the &lt;code&gt;preversion&lt;/code&gt; script. These scripts have access to the old &lt;code&gt;version&lt;/code&gt; in package.json. A typical use would be running your full test suite before deploying. Any files you want added to the commit should be explicitly added using &lt;code&gt;git add&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;preversion&lt;/code&gt; スクリプトを実行します。これらのスクリプトは、package.json の古い &lt;code&gt;version&lt;/code&gt; にアクセスできます。典型的な使用法は、デプロイする前に完全なテストスイートを実行することです。コミットに追加したいファイルは、 &lt;code&gt;git add&lt;/code&gt; を使用して明示的に追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="1cdc4e506d77cff50fb14c1e4e801d2a51235e5e" translate="yes" xml:space="preserve">
          <source>Run the &lt;code&gt;version&lt;/code&gt; script. These scripts have access to the new &lt;code&gt;version&lt;/code&gt; in package.json (so they can incorporate it into file headers in generated files for example). Again, scripts should explicitly add generated files to the commit using &lt;code&gt;git add&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;version&lt;/code&gt; スクリプトを実行します。これらのスクリプトは、package.json の新しい &lt;code&gt;version&lt;/code&gt; にアクセスできます（たとえば、生成されたファイルのファイルヘッダーに組み込むことができます）。繰り返しになりますが、スクリプトは &lt;code&gt;git add&lt;/code&gt; を使用して、生成されたファイルを明示的にコミットに追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="849654052acfef795fefa2251cdd4eb7c63f0759" translate="yes" xml:space="preserve">
          <source>Run the code using &lt;code&gt;node index.js&lt;/code&gt;. It should output &lt;code&gt;[2, 3]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;node index.js&lt;/code&gt; を使用してコードを実行します。 &lt;code&gt;[2, 3]&lt;/code&gt; を出力する必要があります。</target>
        </trans-unit>
        <trans-unit id="cbda27eaf8bb4b9acaf49a1a191402170c5642d0" translate="yes" xml:space="preserve">
          <source>Run the recommended commands individually to install updates to vulnerable dependencies. (Some updates may be semver-breaking changes; for more information, see &quot;&lt;a href=&quot;#SEMVER-warnings&quot;&gt;SEMVER warnings&lt;/a&gt;&quot;.)</source>
          <target state="translated">推奨されるコマンドを個別に実行して、脆弱な依存関係の更新をインストールします。（一部の更新は、半壊的な変更になる可能性があります。詳細については、「&lt;a href=&quot;#SEMVER-warnings&quot;&gt;SEMVER警告&lt;/a&gt;」を参照してください。）</target>
        </trans-unit>
        <trans-unit id="161f30847f2a9c7ed9e12341ebe9f6b86eaf44d5" translate="yes" xml:space="preserve">
          <source>Run this in a package directory to bump the version and write the new data back to &lt;code&gt;package.json&lt;/code&gt;, &lt;code&gt;package-lock.json&lt;/code&gt;, and, if present, &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt;.</source>
          <target state="translated">これをパッケージディレクトリで実行してバージョンをバンプし、新しいデータを &lt;code&gt;package.json&lt;/code&gt; 、 &lt;code&gt;package-lock.json&lt;/code&gt; 、および存在する場合は &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; に書き込みます。</target>
        </trans-unit>
        <trans-unit id="aeccf3af3b11369d9e8273f12883b9abb0e08295" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;npm audit&lt;/code&gt; will produce a report of security vulnerabilities with the affected package name, vulnerability severity and description, path, and other information, and, if available, commands to apply patches to resolve vulnerabilities. For more information on the fields in the audit report, see &quot;&lt;a href=&quot;about-audit-reports&quot;&gt;About audit reports&lt;/a&gt;&quot;</source>
          <target state="translated">&lt;code&gt;npm audit&lt;/code&gt; を実行すると、影響を受けるパッケージ名、脆弱性の重大度と説明、パス、その他の情報、および利用可能な場合は脆弱性を解決するためのパッチを適用するコマンドを含む、セキュリティの脆弱性のレポートが作成されます。監査レポートのフィールドの詳細&lt;a href=&quot;about-audit-reports&quot;&gt;について&lt;/a&gt;は、「監査レポートについて」を参照してください。</target>
        </trans-unit>
        <trans-unit id="09f08209ec1ee26ab4ed8ffb4da2bd47673e8fca" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;npm init&lt;/code&gt; with this file in your home directory would output a &lt;code&gt;package.json&lt;/code&gt; that included these lines:</source>
          <target state="translated">このファイルをホームディレクトリに置いて &lt;code&gt;npm init&lt;/code&gt; を実行すると、次の行を含む &lt;code&gt;package.json&lt;/code&gt; が出力されます。</target>
        </trans-unit>
        <trans-unit id="e70460a4819a4de89196854be7090308b426bea6" translate="yes" xml:space="preserve">
          <source>Running a security audit with &lt;code&gt;npm audit&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;npm audit&lt;/code&gt; セキュリティ監査の実行</target>
        </trans-unit>
        <trans-unit id="e4c4aed1ea336bcdbc25d0d607bca83832226781" translate="yes" xml:space="preserve">
          <source>Runtime Variables</source>
          <target state="translated">ランタイム変数</target>
        </trans-unit>
        <trans-unit id="45ce997598f3a0fe48d7002b2a4c9c8d557c0d91" translate="yes" xml:space="preserve">
          <source>SCRUBBING</source>
          <target state="translated">SCRUBBING</target>
        </trans-unit>
        <trans-unit id="505f7ca14d99f6178bd8d7ce7b3ab5341d142db0" translate="yes" xml:space="preserve">
          <source>SEMVER warnings</source>
          <target state="translated">SEMVERの警告</target>
        </trans-unit>
        <trans-unit id="6c8cd7f7cc5f1cecdc088f77927e073347bb2128" translate="yes" xml:space="preserve">
          <source>SSL Error</source>
          <target state="translated">SSLエラー</target>
        </trans-unit>
        <trans-unit id="0002d7a3199f285f2649675a114b250418c2ee9c" translate="yes" xml:space="preserve">
          <source>SSL-intercepting proxy</source>
          <target state="translated">エスエスエルインターセプトプロキシ</target>
        </trans-unit>
        <trans-unit id="461090c1cb4caac6b164733fc122184c69fc580d" translate="yes" xml:space="preserve">
          <source>Save installed packages to a package.json file as &lt;code&gt;devDependencies&lt;/code&gt;.</source>
          <target state="translated">インストールされたパッケージを &lt;code&gt;devDependencies&lt;/code&gt; としてpackage.jsonファイルに保存します。</target>
        </trans-unit>
        <trans-unit id="aa8c5eff71339751171085ff8863488befd8338a" translate="yes" xml:space="preserve">
          <source>Save installed packages to a package.json file as dependencies.</source>
          <target state="translated">インストールされたパッケージを依存関係としてpackage.jsonファイルに保存します。</target>
        </trans-unit>
        <trans-unit id="bfbee82ad63372420061183be5379622e06c593a" translate="yes" xml:space="preserve">
          <source>Save installed packages to a package.json file as optionalDependencies.</source>
          <target state="translated">インストールされたパッケージをpackage.jsonファイルにoptionalDependenciesとして保存します。</target>
        </trans-unit>
        <trans-unit id="38ce359dda7732c411a4fbb528cac0f8d057d98c" translate="yes" xml:space="preserve">
          <source>Save it in the project directory with the name &lt;strong&gt;readme.md&lt;/strong&gt;</source>
          <target state="translated">プロジェクトを&lt;strong&gt;readme.md&lt;/strong&gt;という名前でプロジェクトディレクトリに保存します。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f9fed0b950e10979783c95bf0e0bc9c9e3d4ed7e" translate="yes" xml:space="preserve">
          <source>Scan the QR code, or enter the number displayed just below the QR code.</source>
          <target state="translated">QRコードをスキャンするか、QRコードのすぐ下に表示されている数字を入力してください。</target>
        </trans-unit>
        <trans-unit id="f16f612d9b15b722f3a8982edbbf6f6f30c56da2" translate="yes" xml:space="preserve">
          <source>Scan your project for vulnerabilities and automatically install any compatible updates to vulnerable dependencies:</source>
          <target state="translated">プロジェクトの脆弱性をスキャンし、脆弱性のある依存関係に互換性のあるアップデートを自動的にインストールします。</target>
        </trans-unit>
        <trans-unit id="823959e593d652ad33e51d38a49a1456d183f38f" translate="yes" xml:space="preserve">
          <source>Scan your project for vulnerabilities and just show the details, without fixing anything:</source>
          <target state="translated">プロジェクトの脆弱性をスキャンして、何も修正せずに詳細を表示するだけ。</target>
        </trans-unit>
        <trans-unit id="0d2e9d8e0e86679a6324a4203e29bba1396833f9" translate="yes" xml:space="preserve">
          <source>Scope is optional and follows the usual rules for &lt;code&gt;&lt;a href=&quot;../misc/scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">スコープはオプションであり、 &lt;code&gt;&lt;a href=&quot;../misc/scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt; の通常のルールに従います。</target>
        </trans-unit>
        <trans-unit id="c9c2b4956e38e45e991c3b3c3a00c0de8a2a4bf4" translate="yes" xml:space="preserve">
          <source>Scoped packages &lt;em&gt;default to restricted&lt;/em&gt;, but you can either publish them as public using &lt;code&gt;npm publish --access=public&lt;/code&gt;, or set their access as public using &lt;code&gt;npm access public&lt;/code&gt; after the initial publish.</source>
          <target state="translated">スコープ&lt;em&gt;指定された&lt;/em&gt;パッケージは&lt;em&gt;デフォルトで制限されて&lt;/em&gt;いますが、 &lt;code&gt;npm publish --access=public&lt;/code&gt; を使用してそれらをパブリックとして公開するか、最初の公開後に &lt;code&gt;npm access public&lt;/code&gt; を使用してそれらのアクセスをパブリックとして設定できます。</target>
        </trans-unit>
        <trans-unit id="80c304ef918b448f1d30b9168377a0d283cb2c19" translate="yes" xml:space="preserve">
          <source>Scoped packages are installed the same way, except they are grouped together in a sub-folder of the relevant &lt;code&gt;node_modules&lt;/code&gt; folder with the name of that scope prefix by the @ symbol, e.g. &lt;code&gt;npm install @myorg/package&lt;/code&gt; would place the package in &lt;code&gt;{prefix}/node_modules/@myorg/package&lt;/code&gt;. See &lt;code&gt;&lt;a href=&quot;../misc/scope&quot;&gt;scope&lt;/a&gt;&lt;/code&gt; for more details.</source>
          <target state="translated">スコープ指定されたパッケージは同じ方法でインストールされますが、それらは関連する &lt;code&gt;node_modules&lt;/code&gt; フォルダーのサブフォルダーにグループ化され、@記号でそのスコーププレフィックスの名前が付けられます。たとえば、 &lt;code&gt;npm install @myorg/package&lt;/code&gt; はパッケージを &lt;code&gt;{prefix}/node_modules/@myorg/package&lt;/code&gt; 配置します/ node_modules / @ myorg / package。詳細については、 &lt;code&gt;&lt;a href=&quot;../misc/scope&quot;&gt;scope&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="b80ed383c74cd4ab9d8be06981af701ecac36358" translate="yes" xml:space="preserve">
          <source>Scoped packages are installed to a sub-folder of the regular installation folder, e.g. if your other packages are installed in &lt;code&gt;node_modules/packagename&lt;/code&gt;, scoped modules will be installed in &lt;code&gt;node_modules/@myorg/packagename&lt;/code&gt;. The scope folder (&lt;code&gt;@myorg&lt;/code&gt;) is simply the name of the scope preceded by an &lt;code&gt;@&lt;/code&gt; symbol, and can contain any number of scoped packages.</source>
          <target state="translated">スコープパッケージは通常のインストールフォルダーのサブフォルダーにインストールされます。たとえば、他のパッケージが &lt;code&gt;node_modules/packagename&lt;/code&gt; にインストールされている場合、スコープモジュールは &lt;code&gt;node_modules/@myorg/packagename&lt;/code&gt; インストールされます。スコープフォルダー（ &lt;code&gt;@myorg&lt;/code&gt; ）は、単に &lt;code&gt;@&lt;/code&gt; 記号が前に付いたスコープの名前であり、任意の数のスコープパッケージを含めることができます。</target>
        </trans-unit>
        <trans-unit id="d0a832b3277f5fdd71f4d9a8a1273be78056a1ba" translate="yes" xml:space="preserve">
          <source>Scoped packages can be published and installed as of &lt;code&gt;npm@2&lt;/code&gt; and are supported by the primary npm registry. Unscoped packages can depend on scoped packages and vice versa. The npm client is backwards-compatible with unscoped registries, so it can be used to work with scoped and unscoped registries at the same time.</source>
          <target state="translated">スコープ指定されたパッケージは &lt;code&gt;npm@2&lt;/code&gt; 時点で公開およびインストールでき、プライマリnpmレジストリでサポートされています。対象範囲外のパッケージは、対象範囲のパッケージに依存する場合があり、その逆の場合もあります。npmクライアントは、対象範囲外のレジストリーとの下位互換性があるため、範囲指定されたレジストリーと対象範囲外のレジストリーを同時に操作するために使用できます。</target>
        </trans-unit>
        <trans-unit id="878d5c700fa44486c3998bc7469344ee5cc3084d" translate="yes" xml:space="preserve">
          <source>Scoped packages can be published from the CLI as of &lt;code&gt;npm@2&lt;/code&gt; and can be published to any registry that supports them, including the primary npm registry.</source>
          <target state="translated">スコープ指定されたパッケージは、 &lt;code&gt;npm@2&lt;/code&gt; 時点でCLIから公開でき、プライマリnpmレジストリを含む、それらをサポートする任意のレジストリに公開できます。</target>
        </trans-unit>
        <trans-unit id="1ddac0f111c52f1d09db58fbda7b8ddad5247900" translate="yes" xml:space="preserve">
          <source>Scoped packages.</source>
          <target state="translated">スコープされたパッケージ。</target>
        </trans-unit>
        <trans-unit id="1ba211012575aed0a5d55955443227cd6ac1626b" translate="yes" xml:space="preserve">
          <source>Scopes are a way of grouping related packages together, and also affect a few things about the way npm treats the package.</source>
          <target state="translated">スコープは関連するパッケージをグループ化する方法であり、npm のパッケージの扱い方にも影響を与えます。</target>
        </trans-unit>
        <trans-unit id="ca8317edd1da691b6bda94ee280f7dd92f5f0a15" translate="yes" xml:space="preserve">
          <source>Scopes are used to group related packages together, and to create a namespace, like a domain, for npm modules. This is explained in more detail &lt;a href=&quot;../misc/scope&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">スコープは、関連するパッケージをグループ化し、npmモジュールのドメインなどの名前空間を作成するために使用されます。これについては、&lt;a href=&quot;../misc/scope&quot;&gt;ここで&lt;/a&gt;詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="56a715f95dcd56820a7212bb502da11a366e7562" translate="yes" xml:space="preserve">
          <source>Scopes can be associated with a separate registry. This allows you to seamlessly use a mix of packages from the primary npm registry and one or more private registries, such as npm Enterprise.</source>
          <target state="translated">スコープは別のレジストリに関連付けることができます。これにより、プライマリの npm レジストリと npm Enterprise などのプライベートレジストリのパッケージをシームレスに混在させて使用することができます。</target>
        </trans-unit>
        <trans-unit id="ec497fe085268834a26703d8be2dbf4791f1f3f7" translate="yes" xml:space="preserve">
          <source>Scopes have a many-to-one relationship with registries: one registry can host multiple scopes, but a scope only ever points to one registry.</source>
          <target state="translated">スコープはレジストリと多対一の関係にあります。1 つのレジストリは複数のスコープをホストすることができますが、スコープは 1 つのレジストリしかポイントしません。</target>
        </trans-unit>
        <trans-unit id="4b3e65d81adb9a9a93c8a062ff261cf8db4d928e" translate="yes" xml:space="preserve">
          <source>Scripts are run by passing the line as a script argument to &lt;code&gt;sh&lt;/code&gt;.</source>
          <target state="translated">スクリプトを実行するには、行をスクリプト引数として &lt;code&gt;sh&lt;/code&gt; に渡します。</target>
        </trans-unit>
        <trans-unit id="4566538bd91d1cab1b125a700e9e073346d1271d" translate="yes" xml:space="preserve">
          <source>Scripts are run from the root of the module, regardless of what your current working directory is when you call &lt;code&gt;npm run&lt;/code&gt;. If you want your script to use different behavior based on what subdirectory you're in, you can use the &lt;code&gt;INIT_CWD&lt;/code&gt; environment variable, which holds the full path you were in when you ran &lt;code&gt;npm run&lt;/code&gt;.</source>
          <target state="translated">スクリプトは、 &lt;code&gt;npm run&lt;/code&gt; を呼び出したときの現在の作業ディレクトリに関係なく、モジュールのルートから実行されます。現在のサブディレクトリに基づいてスクリプトで異なる動作を使用したい場合は、 &lt;code&gt;INIT_CWD&lt;/code&gt; 環境変数を使用できます。この環境変数は、 &lt;code&gt;npm run&lt;/code&gt; を実行したときの完全なパスを保持します。</target>
        </trans-unit>
        <trans-unit id="194f4eaa95ef3a0e6ca0c7940ed7c37ca9c8444a" translate="yes" xml:space="preserve">
          <source>Scroll down to the Security section:</source>
          <target state="translated">下にスクロールしてセキュリティセクションに移動します。</target>
        </trans-unit>
        <trans-unit id="1ea7081717da773c2044f2fc4df050dd2e8a4c2e" translate="yes" xml:space="preserve">
          <source>Search also allows targeting of maintainers in search results, by prefixing their npm username with &lt;code&gt;=&lt;/code&gt;.</source>
          <target state="translated">検索では、npmユーザー名の前に &lt;code&gt;=&lt;/code&gt; を付けることで、検索結果でメンテナーをターゲットにすることもできます。</target>
        </trans-unit>
        <trans-unit id="13754a90c4af0c594d930e06c12e7ba0993453ac" translate="yes" xml:space="preserve">
          <source>Search for packages.</source>
          <target state="translated">パッケージを検索します。</target>
        </trans-unit>
        <trans-unit id="efdc6b1b12a9c4af49266a7bd4f39d11b3521e91" translate="yes" xml:space="preserve">
          <source>Search npm help documentation.</source>
          <target state="translated">npm のヘルプドキュメントを検索します。</target>
        </trans-unit>
        <trans-unit id="ee375c06a9da05fc11f2ea9acc1e5c12bb61bb2b" translate="yes" xml:space="preserve">
          <source>Search the registry for packages matching the search terms. &lt;code&gt;npm search&lt;/code&gt; performs a linear, incremental, lexically-ordered search through package metadata for all files in the registry. If color is enabled, it will further highlight the matches in the results.</source>
          <target state="translated">レジストリを検索して、検索用語に一致するパッケージを探します。 &lt;code&gt;npm search&lt;/code&gt; は、レジストリ内のすべてのファイルのパッケージメタデータを介して、線形のインクリメンタルな語彙順の検索を実行します。色が有効になっている場合、結果の一致がさらに強調表示されます。</target>
        </trans-unit>
        <trans-unit id="7e514d294a2d2b2309310795bb0cca3fb3a679f5" translate="yes" xml:space="preserve">
          <source>Search the specified registry for modules. If you have configured npm to point to a different default registry, such as your internal private module repository, &lt;code&gt;npm search&lt;/code&gt; will default to that registry when searching. Pass a different registry url such as the default above in order to override this setting.</source>
          <target state="translated">指定されたレジストリーでモジュールを検索します。内部のプライベートモジュールリポジトリなどの別のデフォルトレジストリを指すようにnpmを構成している場合、 &lt;code&gt;npm search&lt;/code&gt; は検索時にデフォルトでそのレジストリを使用します。この設定を上書きするには、上記のデフォルトなどの別のレジストリURLを渡します。</target>
        </trans-unit>
        <trans-unit id="0001446edd628547fcc10370d040ec918c912963" translate="yes" xml:space="preserve">
          <source>Searches the local package tree and attempts to simplify the overall structure by moving dependencies further up the tree, where they can be more effectively shared by multiple dependent packages.</source>
          <target state="translated">ローカルのパッケージツリーを検索し、依存関係をツリーのさらに上に移動させて全体の構造を単純化します。</target>
        </trans-unit>
        <trans-unit id="2a2688cc05e5bbd30eadc6166edec3cc1b4883d6" translate="yes" xml:space="preserve">
          <source>Second, a user who has opted into using a prerelease version has clearly indicated the intent to use &lt;em&gt;that specific&lt;/em&gt; set of alpha/beta/rc versions. By including a prerelease tag in the range, the user is indicating that they are aware of the risk. However, it is still not appropriate to assume that they have opted into taking a similar risk on the &lt;em&gt;next&lt;/em&gt; set of prerelease versions.</source>
          <target state="translated">次に、プレリリースバージョンの使用を選択したユーザーが&lt;em&gt;、特定&lt;/em&gt;のalpha / beta / rcバージョンのセットを使用する意図を明確に示しています。範囲にプレリリースタグを含めることで、ユーザーはリスクを認識していることを示しています。ただし、&lt;em&gt;次の&lt;/em&gt;一連のプレリリースバージョンで同様のリスクを取ることを選択したと想定することは依然として適切ではありません。</target>
        </trans-unit>
        <trans-unit id="4038eb9e4d24e941073fa3a0af29971f59601939" translate="yes" xml:space="preserve">
          <source>Security vulnerabilities found requiring manual review</source>
          <target state="translated">セキュリティ上の脆弱性が発見され、手動でのレビューが必要</target>
        </trans-unit>
        <trans-unit id="fadeca695d3adbb81ef61a8116592c44f28d2a37" translate="yes" xml:space="preserve">
          <source>Security vulnerabilities found with suggested updates</source>
          <target state="translated">提案されたアップデートで発見されたセキュリティ上の脆弱性</target>
        </trans-unit>
        <trans-unit id="e5476e575cdf7b111fa68f17052225e456894c87" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../cli/dist-tag&quot;&gt;this CLI doc&lt;/a&gt; for more about tags. See &lt;a href=&quot;semantic-versioning&quot;&gt;Chapter 13&lt;/a&gt; for more about semantic versioning.</source>
          <target state="translated">タグの詳細については、&lt;a href=&quot;../cli/dist-tag&quot;&gt;このCLIドキュメント&lt;/a&gt;を参照してください。セマンティックバージョニングの詳細については、&lt;a href=&quot;semantic-versioning&quot;&gt;第13章を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f3418a57e134606990630d3a207036ba556e5b6b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../files/folders&quot;&gt;npm-folders&lt;/a&gt; for a more detailed description of the specific folder structures that npm creates.</source>
          <target state="translated">npmが作成する特定のフォルダー構造の詳細については、&lt;a href=&quot;../files/folders&quot;&gt;npm-foldersを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3ce690cc7d2e281be7684af285aac0e027240382" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../files/npmrc&quot;&gt;npmrc&lt;/a&gt; for more details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;../files/npmrc&quot;&gt;npmrc&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="5f00afd2e8b38ce0ca9809032453f5d6a06a1b1c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../files/npmrc&quot;&gt;npmrc&lt;/a&gt; for more information about the npmrc files.</source>
          <target state="translated">参照してください&lt;a href=&quot;../files/npmrc&quot;&gt;npmrc&lt;/a&gt; npmrcファイルの詳細については。</target>
        </trans-unit>
        <trans-unit id="57cea681ddfc20d5c1233fc589edfe5d508428d2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../files/package.json&quot;&gt;package.json&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;../files/package.json&quot;&gt;package.json&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="3e6dc483383cbdcf6738ff185852960f381b6eac" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../misc/semver&quot;&gt;semver&lt;/a&gt; for more details about specifying version ranges.</source>
          <target state="translated">バージョン範囲の指定の詳細については、&lt;a href=&quot;../misc/semver&quot;&gt;semver&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="0707efc68640f87de0d2a2f841e0b1caa7b6a5a7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/npm/npm/issues/10074&quot;&gt;https://github.com/npm/npm/issues/10074&lt;/a&gt; for a much lengthier justification, with further reading, for this change.</source>
          <target state="translated">この変更の詳細な説明とともに、より長い根拠については、&lt;a href=&quot;https://github.com/npm/npm/issues/10074&quot;&gt;https：//github.com/npm/npm/issues/10074&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="19351099f8b78be668a399f00bdfa227ede489ef" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/npm/npm/issues/6641#issuecomment-72984009&quot;&gt;https://github.com/npm/npm/issues/6641#issuecomment-72984009&lt;/a&gt; for the history of this issue.</source>
          <target state="translated">この問題の履歴については、&lt;a href=&quot;https://github.com/npm/npm/issues/6641#issuecomment-72984009&quot;&gt;https：//github.com/npm/npm/issues/6641#issuecomment-72984009&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="29cd4927b63197fb4cf96f991305d5c68fd8d759" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/npm/npm/issues/7590&quot;&gt;https://github.com/npm/npm/issues/7590&lt;/a&gt; for more about this unusual problem.</source>
          <target state="translated">この異常な問題の詳細については、&lt;a href=&quot;https://github.com/npm/npm/issues/7590&quot;&gt;https：//github.com/npm/npm/issues/7590&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="5f693a3ddb191c5db96b0443a0a2b2dd0d3bfa67" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;../cli/cache&quot;&gt;npm-cache&lt;/a&gt;&lt;/code&gt;. Cache files are stored in &lt;code&gt;~/.npm&lt;/code&gt; on Posix, or &lt;code&gt;%AppData%/npm-cache&lt;/code&gt; on Windows.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../cli/cache&quot;&gt;npm-cache&lt;/a&gt;&lt;/code&gt; を参照してください。キャッシュファイルは、Posixでは &lt;code&gt;~/.npm&lt;/code&gt; 、Windowsでは &lt;code&gt;%AppData%/npm-cache&lt;/code&gt; に保存されます。</target>
        </trans-unit>
        <trans-unit id="b5ccac1ce444a2b70960cada2b65850e809beacf" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;../files/folders&quot;&gt;npm-folders&lt;/a&gt;&lt;/code&gt; to learn about where npm puts stuff.</source>
          <target state="translated">npmがデータを置く場所については、 &lt;code&gt;&lt;a href=&quot;../files/folders&quot;&gt;npm-folders&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="49465df7df0ca1acb679873a0928ca746da2dacc" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;../files/package.json&quot;&gt;package.json&lt;/a&gt;&lt;/code&gt; for details about what goes in that file. At the very least, you need:</source>
          <target state="translated">参照してください。 &lt;code&gt;&lt;a href=&quot;../files/package.json&quot;&gt;package.json&lt;/a&gt;&lt;/code&gt; そのファイルに何が起こるのかの詳細については。少なくとも、次のものが必要です。</target>
        </trans-unit>
        <trans-unit id="bedb2691da570e501d5f5f151bce353b13376c7a" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;../files/package.json&quot;&gt;package.json&lt;/a&gt;&lt;/code&gt; for more info on what goes in the package.json file.</source>
          <target state="translated">package.jsonファイルの内容の詳細については、 &lt;code&gt;&lt;a href=&quot;../files/package.json&quot;&gt;package.json&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="cb25437c987a6a9b5e87b069cf89c95e539334d1" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;../misc/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../misc/scripts&quot;&gt;npm-scripts&lt;/a&gt;&lt;/code&gt; for more on package configs.</source>
          <target state="translated">パッケージ構成の詳細については、 &lt;code&gt;&lt;a href=&quot;../misc/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;../misc/scripts&quot;&gt;npm-scripts&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="ed148c47542cb4a11ca50df8bea9445ad65cae1a" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;../misc/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; for a more thorough discussion of the mechanisms involved.</source>
          <target state="translated">関連するメカニズムの詳細については、 &lt;code&gt;&lt;a href=&quot;../misc/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="d7a7e4fd7be754d6bcd9381e25d67e27e4d6868c" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;../misc/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; for much much more information.</source>
          <target state="translated">詳細については、 &lt;code&gt;&lt;a href=&quot;../misc/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="068f68ccdeabb962c6d4cc649b709b21a7a8721d" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;../misc/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; to see the list of config options that can be overridden.</source>
          <target state="translated">参照してください。 &lt;code&gt;&lt;a href=&quot;../misc/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; 上書きすることができます設定オプションのリストを表示します。</target>
        </trans-unit>
        <trans-unit id="c04e818840e61d31f0c2a2f3a6cb9ce5d1d0ef59" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;../misc/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt;. Many of the configuration params have some effect on installation, since that's most of what npm does.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../misc/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; を参照してください。npmが行うことの大部分は、構成パラメーターの多くがインストールに影響を与えるためです。</target>
        </trans-unit>
        <trans-unit id="c77a0f4fdb21cad28bac1e43bd4200002075bd9b" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;../misc/scripts&quot;&gt;npm-scripts&lt;/a&gt;&lt;/code&gt; to find out more about writing package scripts.</source>
          <target state="translated">パッケージスクリプトの記述の詳細については、 &lt;code&gt;&lt;a href=&quot;../misc/scripts&quot;&gt;npm-scripts&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="67373bb92cd7ecbf243edb9d60ad6f00f86a6052" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">も参照してください。</target>
        </trans-unit>
        <trans-unit id="6728a06fce96e2a69edad909a90fcb0a1b34f88f" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;ca&lt;/code&gt; config.</source>
          <target state="translated">&lt;code&gt;ca&lt;/code&gt; config も参照してください。</target>
        </trans-unit>
        <trans-unit id="0ccc534308ffd27ed7a94c40e6ac006ec11cb53b" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;strict-ssl&lt;/code&gt; config.</source>
          <target state="translated">&lt;code&gt;strict-ssl&lt;/code&gt; config も参照してください。</target>
        </trans-unit>
        <trans-unit id="98e0825802523b60a2deba5c1cd4763160f508a3" translate="yes" xml:space="preserve">
          <source>See npm's Laurie Voss on &lt;a href=&quot;https://www.youtube.com/watch?v=JIJZnF_L5KI&quot;&gt;&quot;Stuff Everybody Knows Except You&quot;&lt;/a&gt; if you are feeling overwhelmed in your dev learning. It will make you realize you are not alone!</source>
          <target state="translated">開発者の学習に圧倒されていると感じている場合は、npmのLaurie Vossが&lt;a href=&quot;https://www.youtube.com/watch?v=JIJZnF_L5KI&quot;&gt;「あなた以外の誰もが知っ&lt;/a&gt;ているもの」を参照してください。それはあなたが一人ではないことに気づかせます！</target>
        </trans-unit>
        <trans-unit id="591e65ab472c75b1d3a933bdf1e9d717966dffec" translate="yes" xml:space="preserve">
          <source>See packages available to a specific team:</source>
          <target state="translated">特定のチームで利用可能なパッケージを参照してください。</target>
        </trans-unit>
        <trans-unit id="6ad24e0052ca68e941e5c370a80605d1d742eafc" translate="yes" xml:space="preserve">
          <source>See the git man page for details.</source>
          <target state="translated">詳細はgit manのページを参照してください。</target>
        </trans-unit>
        <trans-unit id="ac00eb12650f8b2e083455b7e72d4b5918324395" translate="yes" xml:space="preserve">
          <source>See the section about Windows &lt;a href=&quot;try-the-latest-stable-version-of-npm&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Windowsのについてのセクションを参照してください&lt;a href=&quot;try-the-latest-stable-version-of-npm&quot;&gt;ここに&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="539ba302f8356567804f6034c3dfd652213febfb" translate="yes" xml:space="preserve">
          <source>See what org packages a team member can access:</source>
          <target state="translated">チームメンバーがアクセスできるオルグパッケージをご覧ください。</target>
        </trans-unit>
        <trans-unit id="5ca88775fad03496e5af93c42e34fe100f9baf43" translate="yes" xml:space="preserve">
          <source>See what version of node you're running:</source>
          <target state="translated">実行しているノードのバージョンを確認します。</target>
        </trans-unit>
        <trans-unit id="4bbca8c99f7afd58feab59adcec7558736a39d32" translate="yes" xml:space="preserve">
          <source>See what version of npm you're running:</source>
          <target state="translated">実行している npm のバージョンを確認してください。</target>
        </trans-unit>
        <trans-unit id="f92990449aaa4629e74d755d40bef0ba93bf28b3" translate="yes" xml:space="preserve">
          <source>Select &quot;Agree to the End User License Agreement and the Privacy Policy&quot;.</source>
          <target state="translated">エンドユーザーライセンス契約とプライバシーポリシーに同意する」を選択します。</target>
        </trans-unit>
        <trans-unit id="1158dc6391ca1c282b0274da233e5b47974ab44c" translate="yes" xml:space="preserve">
          <source>Semicolons</source>
          <target state="translated">Semicolons</target>
        </trans-unit>
        <trans-unit id="00c42c3e7de3724fc6d9fb808c873dc974a206f5" translate="yes" xml:space="preserve">
          <source>Semver for Consumers</source>
          <target state="translated">消費者のためのセンバー</target>
        </trans-unit>
        <trans-unit id="ab2e24b7e0c535895ee385225e666cff18980438" translate="yes" xml:space="preserve">
          <source>Semver for Publishers</source>
          <target state="translated">出版社のためのセンバー</target>
        </trans-unit>
        <trans-unit id="24e61b13031486e9c2915dce86beec039fd97ebe" translate="yes" xml:space="preserve">
          <source>Send emails, write blogs, blab in IRC.</source>
          <target state="translated">メールを送ったり、ブログを書いたり、IRCでおしゃべりしたり。</target>
        </trans-unit>
        <trans-unit id="c4e4024d87e4b8bdde0ad0e16112a99835e697f1" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;&quot;private&quot;: true&lt;/code&gt; in your package.json to prevent it from being published at all, or &lt;code&gt;&quot;publishConfig&quot;:{&quot;registry&quot;:&quot;http://my-internal-registry.local&quot;}&lt;/code&gt; to force it to be published only to your internal registry.</source>
          <target state="translated">package.jsonで &lt;code&gt;&quot;private&quot;: true&lt;/code&gt; 設定してまったく公開されないようにするか、 &lt;code&gt;&quot;publishConfig&quot;:{&quot;registry&quot;:&quot;http://my-internal-registry.local&quot;}&lt;/code&gt; で強制的に公開します。内部レジストリにのみ。</target>
        </trans-unit>
        <trans-unit id="afadf66105c2d424d96277bb9e9c03761f5c0891" translate="yes" xml:space="preserve">
          <source>Set access level on published packages.</source>
          <target state="translated">公開されているパッケージのアクセスレベルを設定します。</target>
        </trans-unit>
        <trans-unit id="afaebb0269791d5c0781aa977de680df01ce01ca" translate="yes" xml:space="preserve">
          <source>Set the NODE_ENV=&quot;production&quot; for lifecycle scripts.</source>
          <target state="translated">ライフサイクルスクリプトのNODE_ENV=&quot;production &quot;を設定します。</target>
        </trans-unit>
        <trans-unit id="5c6dc23f781a0702df54026e1d55aa04252179b4" translate="yes" xml:space="preserve">
          <source>Set the tmp folder somewhere with more space: &lt;code&gt;npm config set tmp /path/to/big/drive/tmp&lt;/code&gt; or</source>
          <target state="translated">tmpフォルダーを、よりスペースのある場所に設定します &lt;code&gt;npm config set tmp /path/to/big/drive/tmp&lt;/code&gt; または</target>
        </trans-unit>
        <trans-unit id="14a2082247f85aa92c14e01f8a0b6ca326567197" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;&quot;browser&quot;&lt;/code&gt; to view html help content in the default web browser.</source>
          <target state="translated">&lt;code&gt;&quot;browser&quot;&lt;/code&gt; に設定すると、デフォルトのWebブラウザーでHTMLヘルプコンテンツが表示されます。</target>
        </trans-unit>
        <trans-unit id="2b8a559c9272e2572044f52cbf786cbb8e4c4960" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;false&lt;/code&gt; to suppress the progress bar.</source>
          <target state="translated">プログレスバーを非表示にするには、 &lt;code&gt;false&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="e5a44fd5277da40d24adb1fb317fbbc257d64850" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;null&lt;/code&gt; to only allow &quot;known&quot; registrars, or to a specific CA cert to trust only that specific signing authority.</source>
          <target state="translated">「既知の」レジストラのみを許可する場合は &lt;code&gt;null&lt;/code&gt; に、特定の署名機関のみを信頼する場合は特定のCA証明書に設定します。</target>
        </trans-unit>
        <trans-unit id="92b3bf68c92e27291ee1f0677f4bdfce91fe452f" translate="yes" xml:space="preserve">
          <source>Set to false to have it not do this. This can be used to work around the fact that some file systems don't support symlinks, even on ostensibly Unix systems.</source>
          <target state="translated">これを行わないようにするには false に設定します。これは、表向きはUnixシステムであっても、シンボリックリンクをサポートしていないファイルシステムがあるという事実を回避するために使うことができます。</target>
        </trans-unit>
        <trans-unit id="139facd4b364d5d20809bbef59ead372c68d4ab3" translate="yes" xml:space="preserve">
          <source>Set to false to suppress the update notification when using an older version of npm than the latest.</source>
          <target state="translated">falseに設定すると、最新版よりも古いバージョンのnpmを使用している場合に更新通知を抑制します。</target>
        </trans-unit>
        <trans-unit id="9f7bb44dcff69f30546131c82c29d240a7f10555" translate="yes" xml:space="preserve">
          <source>Set to show short usage output (like the -H output) instead of complete help when doing &lt;code&gt;&lt;a href=&quot;../cli/help&quot;&gt;npm-help&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../cli/help&quot;&gt;npm-help&lt;/a&gt;&lt;/code&gt; を実行するときに、完全なヘルプではなく、短い使用法の出力（-H出力など）を表示するように設定します。</target>
        </trans-unit>
        <trans-unit id="16987c383ebd923f1d5b421a524fc920e9d5165a" translate="yes" xml:space="preserve">
          <source>Set to true to run in &quot;production&quot; mode.</source>
          <target state="translated">trueに設定すると、&quot;production &quot;モードで実行されます。</target>
        </trans-unit>
        <trans-unit id="02a624fc66a10ac7aa1ba2e63b69da0cc8ba04fc" translate="yes" xml:space="preserve">
          <source>Set to true to suppress the UID/GID switching when running package scripts. If set explicitly to false, then installing as a non-root user will fail.</source>
          <target state="translated">true に設定すると、パッケージスクリプトの実行時に UID/GID の切り替えを抑制します。明示的に false に設定した場合、非 root ユーザとしてインストールすると失敗します。</target>
        </trans-unit>
        <trans-unit id="7d74a6ca9091dbe07ae9ffcfce5959ddf3eb500b" translate="yes" xml:space="preserve">
          <source>Set up Two-Factor Authentication</source>
          <target state="translated">二要素認証の設定</target>
        </trans-unit>
        <trans-unit id="5810f608b34f2961495bba4487be42102aede40e" translate="yes" xml:space="preserve">
          <source>Set up a custom &lt;a href=&quot;../files/npmrc&quot;&gt;&lt;code&gt;.npmrc&lt;/code&gt;&lt;/a&gt; file in your project folder. Use this to authenticate the CI or deployment server with npm.</source>
          <target state="translated">プロジェクトフォルダーにカスタム&lt;a href=&quot;../files/npmrc&quot;&gt; &lt;code&gt;.npmrc&lt;/code&gt; &lt;/a&gt;ファイルを設定します。これを使用して、CIまたはデプロイメントサーバーをnpmで認証します。</target>
        </trans-unit>
        <trans-unit id="66277ac5082cf2c36d95089ef351ef483cc8bd44" translate="yes" xml:space="preserve">
          <source>Set up a project-specific .npmrc file.</source>
          <target state="translated">プロジェクト固有の .npmrc ファイルを設定します。</target>
        </trans-unit>
        <trans-unit id="f85de56ec473570ab17d3271f643b8a7856bd7db" translate="yes" xml:space="preserve">
          <source>Sets a User-Agent to the request header</source>
          <target state="translated">リクエストヘッダーにUser-Agentを設定します。</target>
        </trans-unit>
        <trans-unit id="68abd901953f7ef065bb08bf1ee578acd1a995bc" translate="yes" xml:space="preserve">
          <source>Sets the config key to the value.</source>
          <target state="translated">コンフィグキーを値に設定します。</target>
        </trans-unit>
        <trans-unit id="88f581f1e4865b65dc39097a4ef1fe5bbd2d100c" translate="yes" xml:space="preserve">
          <source>Setting up Your Profile from the Web</source>
          <target state="translated">ウェブからプロフィールを設定する</target>
        </trans-unit>
        <trans-unit id="5a2aa3d7af35dca44faa50a4cab86801973a95fa" translate="yes" xml:space="preserve">
          <source>Setting up a project-specific .npmrc file</source>
          <target state="translated">プロジェクト固有の .npmrc ファイルの設定</target>
        </trans-unit>
        <trans-unit id="66c40d93a2e3e880224cbbfeffde4790ac199db9" translate="yes" xml:space="preserve">
          <source>Setting up environment variables</source>
          <target state="translated">環境変数の設定</target>
        </trans-unit>
        <trans-unit id="265cac77c2a718274b5fd059a0f9e0a32d851eab" translate="yes" xml:space="preserve">
          <source>Setting up your package</source>
          <target state="translated">パッケージの設定</target>
        </trans-unit>
        <trans-unit id="de314fa0c9d9e359b633f2fdab4659c886fe5986" translate="yes" xml:space="preserve">
          <source>Severity</source>
          <target state="translated">Severity</target>
        </trans-unit>
        <trans-unit id="50f658dfae2e844e5c2537abd17c07b2174a1ee3" translate="yes" xml:space="preserve">
          <source>Share code with any npm user, any where.</source>
          <target state="translated">任意のnpmユーザーと、任意の場所でコードを共有します。</target>
        </trans-unit>
        <trans-unit id="6230b86d3e21a933c301f7b26875030a34f1cbe5" translate="yes" xml:space="preserve">
          <source>Sharing access from the CLI</source>
          <target state="translated">CLIからのアクセスを共有する</target>
        </trans-unit>
        <trans-unit id="6570379c9051481e9acc5d844560d6a0db92c331" translate="yes" xml:space="preserve">
          <source>Sharing access from the web</source>
          <target state="translated">ウェブからのアクセスを共有する</target>
        </trans-unit>
        <trans-unit id="7d2bada589e0b8f9633057dc287e02695f3b8642" translate="yes" xml:space="preserve">
          <source>Shorthands and Other CLI Niceties</source>
          <target state="translated">速記語とその他のCLIニッチェー</target>
        </trans-unit>
        <trans-unit id="50608625215edcf3e895a754978c7b167b82054c" translate="yes" xml:space="preserve">
          <source>Show all the config settings. Use &lt;code&gt;-l&lt;/code&gt; to also show defaults. Use &lt;code&gt;--json&lt;/code&gt; to show the settings in json format.</source>
          <target state="translated">すべての構成設定を表示します。デフォルトも表示するには、 &lt;code&gt;-l&lt;/code&gt; を使用します。 &lt;code&gt;--json&lt;/code&gt; を使用して、設定をjson形式で表示します。</target>
        </trans-unit>
        <trans-unit id="f86f68d53730dcb2d989ecfc6a2584eda40184e0" translate="yes" xml:space="preserve">
          <source>Show extended information in &lt;code&gt;npm ls&lt;/code&gt; and &lt;code&gt;npm search&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;npm ls&lt;/code&gt; および &lt;code&gt;npm search&lt;/code&gt; に拡張情報を表示します。</target>
        </trans-unit>
        <trans-unit id="4aea8dcffd47c6faeaa90777b00d2cad5a33b18c" translate="yes" xml:space="preserve">
          <source>Show extended information.</source>
          <target state="translated">拡張された情報を表示します。</target>
        </trans-unit>
        <trans-unit id="b9f788a4689fd91b9f0e5796cdc5ffb9f8fa5638" translate="yes" xml:space="preserve">
          <source>Show information in JSON format.</source>
          <target state="translated">情報をJSON形式で表示します。</target>
        </trans-unit>
        <trans-unit id="23e7dd597dcb23113fa12f9737745deeeb31c2a3" translate="yes" xml:space="preserve">
          <source>Show parseable output instead of tree view.</source>
          <target state="translated">ツリービューの代わりにパース可能な出力を表示します。</target>
        </trans-unit>
        <trans-unit id="335dc1dd3528fd5184ae2cd97d35001dde9bdbbf" translate="yes" xml:space="preserve">
          <source>Show the description in &lt;code&gt;npm search&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;npm search&lt;/code&gt; 説明を表示する</target>
        </trans-unit>
        <trans-unit id="fc3a34b0ab50c48e1dadc3f510b4033d4f6f50b0" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;npm@1.1.71&lt;/code&gt;, the npm CLI has run the &lt;code&gt;prepublish&lt;/code&gt; script for both &lt;code&gt;npm publish&lt;/code&gt; and &lt;code&gt;npm install&lt;/code&gt;, because it's a convenient way to prepare a package for use (some common use cases are described in the section below). It has also turned out to be, in practice, &lt;a href=&quot;https://github.com/npm/npm/issues/10074&quot;&gt;very confusing&lt;/a&gt;. As of &lt;code&gt;npm@4.0.0&lt;/code&gt;, a new event has been introduced, &lt;code&gt;prepare&lt;/code&gt;, that preserves this existing behavior. A &lt;em&gt;new&lt;/em&gt; event, &lt;code&gt;prepublishOnly&lt;/code&gt; has been added as a transitional strategy to allow users to avoid the confusing behavior of existing npm versions and only run on &lt;code&gt;npm publish&lt;/code&gt; (for instance, running the tests one last time to ensure they're in good shape).</source>
          <target state="translated">以来 &lt;code&gt;npm@1.1.71&lt;/code&gt; 、NPMのCLIは、実行された &lt;code&gt;prepublish&lt;/code&gt; 両方のためのスクリプト &lt;code&gt;npm publish&lt;/code&gt; して &lt;code&gt;npm install&lt;/code&gt; 、使用のためにパッケージを準備するための便利な方法だから（いくつかの一般的な使用例は、以下のセクションで説明されています）、。また、実際には&lt;a href=&quot;https://github.com/npm/npm/issues/10074&quot;&gt;非常に混乱していることがわかりました&lt;/a&gt;。とおり &lt;code&gt;npm@4.0.0&lt;/code&gt; 、新しいイベントは、導入された &lt;code&gt;prepare&lt;/code&gt; この既存の動作を維持しています、。&lt;em&gt;新しい&lt;/em&gt;イベント、 &lt;code&gt;prepublishOnly&lt;/code&gt; は、ユーザーが既存のNPMバージョンの混乱行動を避けるだけで実行できるように移行戦略として追加されている &lt;code&gt;npm publish&lt;/code&gt; （たとえば、最後にもう一度テストを実行して、状態が良好であることを確認します）。</target>
        </trans-unit>
        <trans-unit id="eb9a50fd9c9ed736cfb51fbea951455f2aa96af2" translate="yes" xml:space="preserve">
          <source>Since foo depends directly on &lt;code&gt;bar@1.2.3&lt;/code&gt; and &lt;code&gt;baz@1.2.3&lt;/code&gt;, those are installed in foo's &lt;code&gt;node_modules&lt;/code&gt; folder.</source>
          <target state="translated">fooは &lt;code&gt;bar@1.2.3&lt;/code&gt; および &lt;code&gt;baz@1.2.3&lt;/code&gt; に直接依存しているため、これらはfooの &lt;code&gt;node_modules&lt;/code&gt; フォルダーにインストールされます。</target>
        </trans-unit>
        <trans-unit id="1742667130787e11105a741bd00dc714f73df603" translate="yes" xml:space="preserve">
          <source>Since npm and node.js products are managed by different entities, updates and maintenance can become complex. Also, the Node.js installation process installs npm in a directory that only has local permissions. This can cause permissions errors when you attempt to run packages globally.</source>
          <target state="translated">npmとnode.jsの製品は異なる事業体で管理されているため、更新やメンテナンスが複雑になることがあります。また、node.jsのインストールプロセスでは、ローカルのパーミッションしかないディレクトリにnpmをインストールします。このため、グローバルにパッケージを実行しようとするとパーミッションエラーが発生することがあります。</target>
        </trans-unit>
        <trans-unit id="dab40f38db8576f498762633cc7833ce2173eeaa" translate="yes" xml:space="preserve">
          <source>Skip updating &lt;code&gt;devDependencies&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;devDependencies&lt;/code&gt; の更新をスキップ：</target>
        </trans-unit>
        <trans-unit id="9d10e3d30daf74708d27ff2f8ef786c8e1e0468e" translate="yes" xml:space="preserve">
          <source>So sad to see you go.</source>
          <target state="translated">あなたが逝ってしまうのを見るのはとても悲しいです。</target>
        </trans-unit>
        <trans-unit id="18a0269765b430ec3ad1d182d72ebea91527582e" translate="yes" xml:space="preserve">
          <source>So, &lt;code&gt;node-foo&lt;/code&gt; and &lt;code&gt;bar-js&lt;/code&gt; are bad names. &lt;code&gt;foo&lt;/code&gt; or &lt;code&gt;bar&lt;/code&gt; are better.</source>
          <target state="translated">したがって、 &lt;code&gt;node-foo&lt;/code&gt; と &lt;code&gt;bar-js&lt;/code&gt; は悪い名前です。 &lt;code&gt;foo&lt;/code&gt; または &lt;code&gt;bar&lt;/code&gt; の方が優れています。</target>
        </trans-unit>
        <trans-unit id="e572f16838fcd87f7931770dabebfd87ab778369" translate="yes" xml:space="preserve">
          <source>So, when you install myapp, it'll create a symlink from the &lt;code&gt;cli.js&lt;/code&gt; script to &lt;code&gt;/usr/local/bin/myapp&lt;/code&gt;.</source>
          <target state="translated">したがって、myappをインストールすると、 &lt;code&gt;cli.js&lt;/code&gt; スクリプトから &lt;code&gt;/usr/local/bin/myapp&lt;/code&gt; へのシンボリックリンクが作成されます。</target>
        </trans-unit>
        <trans-unit id="b415b077f5f381d3ed958da1dd305810dcc37144" translate="yes" xml:space="preserve">
          <source>So, why is it the &lt;code&gt;node_modules&lt;/code&gt; folder, but &lt;code&gt;package.json&lt;/code&gt; file? Why not &lt;code&gt;node_packages&lt;/code&gt; or &lt;code&gt;module.json&lt;/code&gt;?</source>
          <target state="translated">では、なぜ &lt;code&gt;node_modules&lt;/code&gt; フォルダーで、 &lt;code&gt;package.json&lt;/code&gt; ファイルなのでしょうか。 &lt;code&gt;node_packages&lt;/code&gt; または &lt;code&gt;module.json&lt;/code&gt; を使用しないのはなぜですか？</target>
        </trans-unit>
        <trans-unit id="16fe17d85e879e305e475a4e186e7fa35ac6885d" translate="yes" xml:space="preserve">
          <source>So, you've decided to use npm to develop (and maybe publish/deploy) your project.</source>
          <target state="translated">さて、あなたは npm を使ってプロジェクトを開発することにしました (そしておそらく公開/デプロイすることになるでしょう)。</target>
        </trans-unit>
        <trans-unit id="379d8333e2a56f51fdc40c8e4a7e282e2d90c27c" translate="yes" xml:space="preserve">
          <source>Some examples of good semicolon usage:</source>
          <target state="translated">セミコロンの上手な使い方の例をいくつかご紹介します。</target>
        </trans-unit>
        <trans-unit id="8b920904a0223353e5df169614a06089a6fd4aec" translate="yes" xml:space="preserve">
          <source>Some of you may be installing from private package registries for your project or company. That's great! Others of you may be following tutorials or StackOverflow questions in an effort to troubleshoot problems you may be having. Sometimes, this may entail changing the registry you're pointing at. This part of &lt;code&gt;npm doctor&lt;/code&gt; just lets you, and maybe whoever's helping you with support, know that you're not using the default registry.</source>
          <target state="translated">プロジェクトまたは会社のプライベートパッケージレジストリからインストールしている人もいます。それは素晴らしいことです！あなたの他の人は、あなたが抱えているかもしれない問題をトラブルシューティングするために、チュートリアルやStackOverflowの質問に従うかもしれません。時々、これはあなたが指しているレジストリを変更することを伴うかもしれません。 &lt;code&gt;npm doctor&lt;/code&gt; この部分では、デフォルトのレジストリーを使用していないことを、あなたや、おそらくサポートを手伝っている人なら誰でも知っているだけです。</target>
        </trans-unit>
        <trans-unit id="290a7db2d48ad6781d1ce0954b9e7accebae7df4" translate="yes" xml:space="preserve">
          <source>Some old packages used license objects or a &quot;licenses&quot; property containing an array of license objects:</source>
          <target state="translated">古いパッケージの中には、ライセンスオブジェクトや、ライセンスオブジェクトの配列を含む &quot;license&quot; プロパティを使用しているものがあります。</target>
        </trans-unit>
        <trans-unit id="9559f12fdf75d989b7efb349588f9474f78e2ee9" translate="yes" xml:space="preserve">
          <source>Some packages, e.g., &lt;code&gt;cli&lt;/code&gt; packages, only contain an executable command-line interface and don't provide a &lt;code&gt;main&lt;/code&gt; field for use in Node.js programs. These packages are &lt;em&gt;not&lt;/em&gt; modules.</source>
          <target state="translated">一部のパッケージ（ &lt;code&gt;cli&lt;/code&gt; パッケージなど）には、実行可能なコマンドラインインターフェイスのみが含まれ、Node.jsプログラムで使用するための &lt;code&gt;main&lt;/code&gt; フィールドが提供されていません。これらのパッケージはモジュールではあり&lt;em&gt;ません&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="2c4a9ce4504d6496bf2f58b837514e16cc8f33aa" translate="yes" xml:space="preserve">
          <source>Some rules:</source>
          <target state="translated">いくつかのルールがあります。</target>
        </trans-unit>
        <trans-unit id="ab8027c42a3e4a4ec351025ffd9d73b8537fb0f0" translate="yes" xml:space="preserve">
          <source>Some special files and directories are also included or excluded regardless of whether they exist in the &lt;code&gt;files&lt;/code&gt; array (see below).</source>
          <target state="translated">一部の特殊なファイルとディレクトリも、 &lt;code&gt;files&lt;/code&gt; 配列に存在するかどうかに関係なく含まれるか除外されます（以下を参照）。</target>
        </trans-unit>
        <trans-unit id="df05ca475a94c08945d811b7d1f827fd9a8222d7" translate="yes" xml:space="preserve">
          <source>Some strange issues can be resolved by simply running &lt;code&gt;npm cache clean&lt;/code&gt; and trying again.</source>
          <target state="translated">いくつかの奇妙な問題は、単に &lt;code&gt;npm cache clean&lt;/code&gt; を実行して再試行することで解決できます。</target>
        </trans-unit>
        <trans-unit id="e45e2198c6fe853dd33e3483b61c046aff369935" translate="yes" xml:space="preserve">
          <source>Some things are not allowed, and will be removed without discussion if they are brought to the attention of the npm registry admins, including but not limited to:</source>
          <target state="translated">許可されていないものもあり、npm レジストリ管理者の注意を引いた場合には、議論することなく削除されます。</target>
        </trans-unit>
        <trans-unit id="ef8dcc1c86c90749467ebc246d62598ab86609ad" translate="yes" xml:space="preserve">
          <source>Some tips:</source>
          <target state="translated">いくつかのヒント。</target>
        </trans-unit>
        <trans-unit id="6de5210323650ba55741dbf10ca75fe4b22ebd62" translate="yes" xml:space="preserve">
          <source>Sometimes &lt;code&gt;npm login&lt;/code&gt; fails for no obvious reason. The first thing to do is to log in at &lt;a href=&quot;https://www.npmjs.com/login&quot;&gt;https://www.npmjs.com/login&lt;/a&gt; and check that your e-mail address on &lt;code&gt;npmjs.com&lt;/code&gt; matches the email address you are giving to &lt;code&gt;npm login&lt;/code&gt;.</source>
          <target state="translated">明確な理由なしに &lt;code&gt;npm login&lt;/code&gt; が失敗することがあります。最初に、&lt;a href=&quot;https://www.npmjs.com/login&quot;&gt;https：&lt;/a&gt; &lt;code&gt;npmjs.com&lt;/code&gt; &lt;code&gt;npm login&lt;/code&gt; 、npmjs.comの電子メールアドレスがnpm loginに指定した電子メールアドレスと一致することを確認します。</target>
        </trans-unit>
        <trans-unit id="2ac8fccd6d72d933eeec4dbb850080ebf5754af9" translate="yes" xml:space="preserve">
          <source>Sometimes npm's cache gets confused. You can reset it using:</source>
          <target state="translated">時々 npm のキャッシュが混乱することがあります。を使ってリセットすることができます。</target>
        </trans-unit>
        <trans-unit id="d5eb88d1fd2bf56ab626e0f88cda10eab94d1048" translate="yes" xml:space="preserve">
          <source>Space-separated options that are always passed to search.</source>
          <target state="translated">検索に常に渡されるスペースで区切られたオプション。</target>
        </trans-unit>
        <trans-unit id="70a962d5f4c5fe21884909eea2082cceae85b51b" translate="yes" xml:space="preserve">
          <source>Space-separated options that limit the results from search.</source>
          <target state="translated">検索結果を制限するスペース区切りのオプション。</target>
        </trans-unit>
        <trans-unit id="62d84b3e858a9d42d65f1c031ec0717618db1cda" translate="yes" xml:space="preserve">
          <source>Spawn a subshell in the directory of the installed package specified.</source>
          <target state="translated">指定したインストール済みパッケージのディレクトリでサブシェルを起動します。</target>
        </trans-unit>
        <trans-unit id="4cd77af3bfa7548fd01e4df4a921c9ddc1e6b4b3" translate="yes" xml:space="preserve">
          <source>Special: package.json &quot;config&quot; object</source>
          <target state="translated">特殊:package.json &quot;config&quot; オブジェクト</target>
        </trans-unit>
        <trans-unit id="17b526ea8726560ff4ea9e8cc395adb507306eef" translate="yes" xml:space="preserve">
          <source>Specifics of npm's package.json handling.</source>
          <target state="translated">npmのpackage.jsonの取り扱いについて。</target>
        </trans-unit>
        <trans-unit id="1a4792e020a671e7f06167b2a94fdca2d76ad2ec" translate="yes" xml:space="preserve">
          <source>Specifies an inclusive set.</source>
          <target state="translated">包含集合を指定します。</target>
        </trans-unit>
        <trans-unit id="a1b12704d9ab73c6e1153c68221cfe56e0167606" translate="yes" xml:space="preserve">
          <source>Specify either a single file or an array of filenames to put in place for the &lt;code&gt;man&lt;/code&gt; program to find.</source>
          <target state="translated">&lt;code&gt;man&lt;/code&gt; プログラムが見つけるために配置する単一のファイルまたはファイル名の配列を指定します。</target>
        </trans-unit>
        <trans-unit id="3cd3e3848e507ae8521b28d6a853fb3120e39e61" translate="yes" xml:space="preserve">
          <source>Specify the name in the appropriate line of the package.json file.</source>
          <target state="translated">package.jsonファイルの該当行に名前を指定します。</target>
        </trans-unit>
        <trans-unit id="5404b67dcb5a809651a780ab32ecfd9a0b444302" translate="yes" xml:space="preserve">
          <source>Specify the place where your code lives. This is helpful for people who want to contribute. If the git repo is on GitHub, then the &lt;code&gt;npm docs&lt;/code&gt; command will be able to find you.</source>
          <target state="translated">コードが存在する場所を指定します。これは、貢献したい人に役立ちます。git repoがGitHubにある場合は、 &lt;code&gt;npm docs&lt;/code&gt; コマンドで見つけることができます。</target>
        </trans-unit>
        <trans-unit id="2a192b050b999dcd1fbd0420f1fd95687d073824" translate="yes" xml:space="preserve">
          <source>Specifying Dependencies</source>
          <target state="translated">依存関係の指定</target>
        </trans-unit>
        <trans-unit id="44e272686c94a62c10f92ba1b97cf5bf7397cec7" translate="yes" xml:space="preserve">
          <source>Standard glob patterns work.</source>
          <target state="translated">標準的なグロブパターンが動作します。</target>
        </trans-unit>
        <trans-unit id="b91b020f3d49bc77ae8d87cb17fbd177902879fa" translate="yes" xml:space="preserve">
          <source>Start a package.</source>
          <target state="translated">パッケージを開始します。</target>
        </trans-unit>
        <trans-unit id="31bab51b38e5fa829e2bbbed4d9e60fd8b11a6fe" translate="yes" xml:space="preserve">
          <source>Starting at the $PWD, npm will walk up the folder tree checking for a folder that contains either a &lt;code&gt;package.json&lt;/code&gt; file, or a &lt;code&gt;node_modules&lt;/code&gt; folder. If such a thing is found, then that is treated as the effective &quot;current directory&quot; for the purpose of running npm commands. (This behavior is inspired by and similar to git's .git-folder seeking logic when running git commands in a working dir.)</source>
          <target state="translated">$ PWDから始めて、npmは、 &lt;code&gt;package.json&lt;/code&gt; ファイルまたは &lt;code&gt;node_modules&lt;/code&gt; フォルダーのいずれかを含むフォルダーをチェックして、フォルダーツリーを上に移動します。そのようなものが見つかった場合、それはnpmコマンドを実行するための有効な「現在のディレクトリ」として扱われます。（この動作は、作業ディレクトリでgitコマンドを実行する際のgitの.git-folder seekingロジックに触発され、類似しています。）</target>
        </trans-unit>
        <trans-unit id="00336f0016b0995d8ea0e0723f193850c76f6e21" translate="yes" xml:space="preserve">
          <source>Starting from this page, you can:</source>
          <target state="translated">このページからスタートして</target>
        </trans-unit>
        <trans-unit id="01948183f955b9a158eb3bb33780a8a858685db2" translate="yes" xml:space="preserve">
          <source>Stop a package.</source>
          <target state="translated">パッケージを止めて</target>
        </trans-unit>
        <trans-unit id="8a579a103e0bb53b5472695d1d582bfd3e9350dd" translate="yes" xml:space="preserve">
          <source>Strict-mode Comparators and Ranges will be strict about the SemVer strings that they parse.</source>
          <target state="translated">ストリクトモードのコンパレータとレンジは、それらがパースするSemVer文字列に厳密に対応します。</target>
        </trans-unit>
        <trans-unit id="72ac40a33691bb643b4f63de5e22b41d926cc23c" translate="yes" xml:space="preserve">
          <source>Sub-commands</source>
          <target state="translated">Sub-commands</target>
        </trans-unit>
        <trans-unit id="31f210aa90d0b5ea7f1bc668f3a17428012f176c" translate="yes" xml:space="preserve">
          <source>Success! You will see your Profile page, with a message confirming that you set up tfa, plus an indicator in the Security section of the page.</source>
          <target state="translated">成功です。プロフィールページが表示され、tfaを設定したことを確認するメッセージと、ページのセキュリティセクションに表示されるインジケーターが表示されます。</target>
        </trans-unit>
        <trans-unit id="e93d25a89237109efe710129cb5f71f9edd94eca" translate="yes" xml:space="preserve">
          <source>Super admin, controls billing &amp;amp; adding people to the org.</source>
          <target state="translated">特権管理者、請求の管理と組織へのユーザーの追加を制御します。</target>
        </trans-unit>
        <trans-unit id="e49593000e08f6f611b7c940124f673aabe2a0ad" translate="yes" xml:space="preserve">
          <source>Support tracker</source>
          <target state="translated">サポートトラッカー</target>
        </trans-unit>
        <trans-unit id="0b601ca6758ebd1d8605c3b792e17c565452a286" translate="yes" xml:space="preserve">
          <source>Suppose &lt;code&gt;app&lt;/code&gt; has a caret dependency on a version below &lt;code&gt;1.0.0&lt;/code&gt;, for example:</source>
          <target state="translated">たとえば、 &lt;code&gt;app&lt;/code&gt; が &lt;code&gt;1.0.0&lt;/code&gt; より前のバージョンにキャレット依存関係があるとします。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="a488748d2f9d4ce75a0ae8e0239a303d77f6bae7" translate="yes" xml:space="preserve">
          <source>Switch to the new directory (&lt;code&gt;cd&lt;/code&gt;)</source>
          <target state="translated">新しいディレクトリに切り替えます（ &lt;code&gt;cd&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="5d99e6d229b0cf936f822fa066ae63a0998884b2" translate="yes" xml:space="preserve">
          <source>Switching from private to public</source>
          <target state="translated">私立から公立への切り替え</target>
        </trans-unit>
        <trans-unit id="55056c5beb2c1fabad4b6b6e756cc470c5b5276c" translate="yes" xml:space="preserve">
          <source>Symlink a package folder.</source>
          <target state="translated">パッケージフォルダをシンリンクします。</target>
        </trans-unit>
        <trans-unit id="36c0630a340d2960affa1c4d2360b0e2c06793fb" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">Synopsis</target>
        </trans-unit>
        <trans-unit id="5ff57f4185e884322f43c9c59da60f12f41285ea" translate="yes" xml:space="preserve">
          <source>TL;DR</source>
          <target state="translated">TL;DR</target>
        </trans-unit>
        <trans-unit id="b582cb81020b987501727a1e00901dfef2d4eb1d" translate="yes" xml:space="preserve">
          <source>TRADEMARKS</source>
          <target state="translated">TRADEMARKS</target>
        </trans-unit>
        <trans-unit id="84ffaab6978a0c797fb9db5d3cb2942ba2c5d7b5" translate="yes" xml:space="preserve">
          <source>Tab Completion for npm.</source>
          <target state="translated">npmのタブ完成。</target>
        </trans-unit>
        <trans-unit id="bb92d44d0ccaeecf83135db09bd647da761688ae" translate="yes" xml:space="preserve">
          <source>Tag the commit when using the &lt;code&gt;npm version&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;npm version&lt;/code&gt; コマンドを使用するときにコミットにタグを付けます。</target>
        </trans-unit>
        <trans-unit id="2a5a5b21ce7b54e64830f5652029e160724d1dea" translate="yes" xml:space="preserve">
          <source>Tags can be used to provide an alias instead of version numbers.</source>
          <target state="translated">タグは、バージョン番号の代わりにエイリアスを提供するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="fd9e609a51ebd4e27df04c01fb1f5dcb23725d4f" translate="yes" xml:space="preserve">
          <source>Tags must share a namespace with version numbers, because they are specified in the same slot: &lt;code&gt;npm install &amp;lt;pkg&amp;gt;@&amp;lt;version&amp;gt;&lt;/code&gt; vs &lt;code&gt;npm install &amp;lt;pkg&amp;gt;@&amp;lt;tag&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">タグは、同じスロットで指定されるため、バージョン番号と名前空間を共有する必要があります： &lt;code&gt;npm install &amp;lt;pkg&amp;gt;@&amp;lt;version&amp;gt;&lt;/code&gt; vs &lt;code&gt;npm install &amp;lt;pkg&amp;gt;@&amp;lt;tag&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="33889246aa7f99998efa450d3fc5f8e5238571fb" translate="yes" xml:space="preserve">
          <source>Tags that can be interpreted as valid semver ranges will be rejected. For example, &lt;code&gt;v1.4&lt;/code&gt; cannot be used as a tag, because it is interpreted by semver as &lt;code&gt;&amp;gt;=1.4.0 &amp;lt;1.5.0&lt;/code&gt;. See &lt;a href=&quot;https://github.com/npm/npm/issues/6082&quot;&gt;https://github.com/npm/npm/issues/6082&lt;/a&gt;.</source>
          <target state="translated">有効なサーバー範囲として解釈できるタグは拒否されます。たとえば、 &lt;code&gt;v1.4&lt;/code&gt; はsemverによって &lt;code&gt;&amp;gt;=1.4.0 &amp;lt;1.5.0&lt;/code&gt; として解釈されるため、タグとして使用できません。&lt;a href=&quot;https://github.com/npm/npm/issues/6082&quot;&gt;https://github.com/npm/npm/issues/6082を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8d69238d5536901dfc66ed563b7bb7f6a2fcbcb6" translate="yes" xml:space="preserve">
          <source>Take a look at &lt;a href=&quot;https://github.com/npm/npm/issues/5920&quot;&gt;issue #5920&lt;/a&gt;. &lt;s&gt;We're working on fixing this one, but it's a fairly subtle race condition and it's taking us a little time. You might try moving your &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; file out of the way until we have this fixed.&lt;/s&gt; This has been fixed in versions of npm newer than &lt;code&gt;npm@2.1.5&lt;/code&gt;, so update to &lt;code&gt;npm@latest&lt;/code&gt;.</source>
          <target state="translated">見てください&lt;a href=&quot;https://github.com/npm/npm/issues/5920&quot;&gt;、問題の＃5920を&lt;/a&gt;。&lt;s&gt;この問題の修正に取り組んでいますが、かなり微妙な競合状態であり、少し時間がかかります。これが修正されるまで、 &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; ファイルを邪魔にならない場所に移動してみてください。&lt;/s&gt;これは、 &lt;code&gt;npm@latest&lt;/code&gt; &lt;code&gt;npm@2.1.5&lt;/code&gt; より新しいバージョンのnpmで修正されているため、npm @ latestに更新してください。</target>
        </trans-unit>
        <trans-unit id="4e5c1cb438afe66a7a3ce7f0162632afd0f40816" translate="yes" xml:space="preserve">
          <source>Take the following example:</source>
          <target state="translated">次のような例を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="8a0e8e494e7070c78570742f79367f4f4b963847" translate="yes" xml:space="preserve">
          <source>Tarball requirements:</source>
          <target state="translated">タールボールの必要条件。</target>
        </trans-unit>
        <trans-unit id="174c47e3e075719f606ec35ee2629a8c076d33c2" translate="yes" xml:space="preserve">
          <source>Team Admins create teams</source>
          <target state="translated">チーム管理者がチームを作る</target>
        </trans-unit>
        <trans-unit id="02228791531b38c7cfaaff22cd7cc611aee4998e" translate="yes" xml:space="preserve">
          <source>Team admin, manages team membership &amp;amp; package access.</source>
          <target state="translated">チーム管理者、チームメンバーシップとパッケージアクセスを管理します。</target>
        </trans-unit>
        <trans-unit id="23f877a8e1a60e3876b7ca5c175629b159d1ecfd" translate="yes" xml:space="preserve">
          <source>Teams must always be fully qualified with the organization/scope they belong to when operating on them, separated by a colon (&lt;code&gt;:&lt;/code&gt;). That is, if you have a &lt;code&gt;developers&lt;/code&gt; team on a &lt;code&gt;foo&lt;/code&gt; organization, you must always refer to that team as &lt;code&gt;foo:developers&lt;/code&gt; in these commands.</source>
          <target state="translated">チームは、常に彼らはそれらを操作するときに属している組織/スコープで完全に修飾する必要があり、コロンで区切られました（ &lt;code&gt;:&lt;/code&gt; ）。つまり、 &lt;code&gt;foo&lt;/code&gt; 組織に &lt;code&gt;developers&lt;/code&gt; チームがある場合、これらのコマンドでは常にそのチームを &lt;code&gt;foo:developers&lt;/code&gt; として参照する必要があります。</target>
        </trans-unit>
        <trans-unit id="4e03e7416d6a19c1b4a7883ca93b2d9e803c102c" translate="yes" xml:space="preserve">
          <source>Tell people where the bulk of your library is. Nothing special is done with the lib folder in any way, but it's useful meta info.</source>
          <target state="translated">あなたのライブラリの大部分がどこにあるかを人々に教えてあげましょう。libフォルダは何も特別なことはしていませんが、便利なメタ情報です。</target>
        </trans-unit>
        <trans-unit id="7537529b55c11cb2b0825280114c70f81383d5f2" translate="yes" xml:space="preserve">
          <source>Tell the world how easy it is to install your program!</source>
          <target state="translated">あなたのプログラムをインストールするのがいかに簡単かを世界に伝えてください!</target>
        </trans-unit>
        <trans-unit id="d94e89ad77541aa69303a9049a7d0165584b43d0" translate="yes" xml:space="preserve">
          <source>Tells npm to create symlinks (or &lt;code&gt;.cmd&lt;/code&gt; shims on Windows) for package executables.</source>
          <target state="translated">パッケージ実行可能ファイルのシンボリックリンク（Windowsでは &lt;code&gt;.cmd&lt;/code&gt; シム）を作成するようnpmに指示します。</target>
        </trans-unit>
        <trans-unit id="47b67f9715f5d3dfa64f8b7d3daa3b43428dcee7" translate="yes" xml:space="preserve">
          <source>Temp Files</source>
          <target state="translated">テンプファイル</target>
        </trans-unit>
        <trans-unit id="d1d0b6c8321c7137bed9cf3b99c9a462b1fbc8b2" translate="yes" xml:space="preserve">
          <source>Temp files are given a unique folder under this root for each run of the program, and are deleted upon successful exit.</source>
          <target state="translated">テンポファイルは、プログラムを実行するたびにこのルートの下に固有のフォルダが与えられ、正常終了時に削除されます。</target>
        </trans-unit>
        <trans-unit id="c55f7a215b7d38cd89969fd49a28a5e0d543fa33" translate="yes" xml:space="preserve">
          <source>Temporary files are stored by default in the folder specified by the &lt;code&gt;tmp&lt;/code&gt; config, which defaults to the TMPDIR, TMP, or TEMP environment variables, or &lt;code&gt;/tmp&lt;/code&gt; on Unix and &lt;code&gt;c:\windows\temp&lt;/code&gt; on Windows.</source>
          <target state="translated">一時ファイルは、デフォルトでは &lt;code&gt;tmp&lt;/code&gt; 構成で指定されたフォルダに保存されます。デフォルトでは、TMPDIR、TMP、またはTEMP環境変数、UNIXでは &lt;code&gt;/tmp&lt;/code&gt; 、Windowsでは &lt;code&gt;c:\windows\temp&lt;/code&gt; れています。</target>
        </trans-unit>
        <trans-unit id="8f65cd82819b9cb9c8a40223fb833f16fb93ed44" translate="yes" xml:space="preserve">
          <source>Terminals, Editors, and Git (For Beginners)</source>
          <target state="translated">端末、エディタ、Git (初心者向け)</target>
        </trans-unit>
        <trans-unit id="640ab2bae07bedc4c163f679a746f7ab7fb5d1fa" translate="yes" xml:space="preserve">
          <source>Test</source>
          <target state="translated">Test</target>
        </trans-unit>
        <trans-unit id="ddd1e13d77925c11c47b93b059fb1a66ff9dacea" translate="yes" xml:space="preserve">
          <source>Test a package.</source>
          <target state="translated">パッケージをテストします。</target>
        </trans-unit>
        <trans-unit id="5d3e2372695f63ce0c53a4f4135db20d5ae16db5" translate="yes" xml:space="preserve">
          <source>Test:</source>
          <target state="translated">Test:</target>
        </trans-unit>
        <trans-unit id="b57a8b88b9abda4373b255cb36e6c9c513adb80e" translate="yes" xml:space="preserve">
          <source>Test: Download a package globally without using &lt;code&gt;sudo&lt;/code&gt;.</source>
          <target state="translated">テスト： &lt;code&gt;sudo&lt;/code&gt; を使用せずにパッケージをグローバルにダウンロードします。</target>
        </trans-unit>
        <trans-unit id="3f75fff83a4030acd3e1ba318f90f6e9fa278965" translate="yes" xml:space="preserve">
          <source>Test: Go to &lt;code&gt;https://npmjs.com/package/&amp;lt;package&amp;gt;&lt;/code&gt;. The package number should be updated.</source>
          <target state="translated">テスト： &lt;code&gt;https://npmjs.com/package/&amp;lt;package&amp;gt;&lt;/code&gt; : //npmjs.com/package/ &amp;lt;package&amp;gt;に移動します。パッケージ番号を更新する必要があります。</target>
        </trans-unit>
        <trans-unit id="4b6491b7900c341a5c6a1d5232b836ef39e3d0ea" translate="yes" xml:space="preserve">
          <source>Testing whether your &lt;code&gt;.npmignore&lt;/code&gt; or &lt;code&gt;files&lt;/code&gt; config works</source>
          <target state="translated">テストあなたのかどうか &lt;code&gt;.npmignore&lt;/code&gt; や &lt;code&gt;files&lt;/code&gt; コンフィグ作品</target>
        </trans-unit>
        <trans-unit id="926a30a992fa2c5821f595ea7154167dc66b11d4" translate="yes" xml:space="preserve">
          <source>That is, it first creates a global link, and then links the global installation target into your project's &lt;code&gt;node_modules&lt;/code&gt; folder.</source>
          <target state="translated">つまり、最初にグローバルリンクを作成し、次にグローバルインストールターゲットをプロジェクトの &lt;code&gt;node_modules&lt;/code&gt; フォルダーにリンクします。</target>
        </trans-unit>
        <trans-unit id="128d8fc0fac0779a573be4b3b9c5edbb29b6e124" translate="yes" xml:space="preserve">
          <source>That is, the dependency from B to C is satisfied by the fact that A already caused C to be installed at a higher level. D is still installed at the top level because nothing conflicts with it.</source>
          <target state="translated">つまり、BからCへの依存関係は、AがすでにCを上位レベルにインストールする原因となったことで満たされています。Dは、それと競合するものが何もないので、まだ最上位レベルにインストールされています。</target>
        </trans-unit>
        <trans-unit id="4f5f7676b16d3556154b15b5aa1dcda8e85874fc" translate="yes" xml:space="preserve">
          <source>That'll show you that it's working. If you'd rather just create a symlink package that points to your working directory, then do this:</source>
          <target state="translated">これで動作していることがわかります。作業ディレクトリを指すシンボリックリンクパッケージを作成したいのであれば、次のようにしてください。</target>
        </trans-unit>
        <trans-unit id="8480d52dfc80da298ed71fd43f8eee28979df914" translate="yes" xml:space="preserve">
          <source>The &quot;author&quot; is one person. &quot;contributors&quot; is an array of people. A &quot;person&quot; is an object with a &quot;name&quot; field and optionally &quot;url&quot; and &quot;email&quot;, like this:</source>
          <target state="translated">&quot;投稿者 &quot;は一人の人間。&quot;contributors&quot; は人の配列です。&quot;person &quot;は、&quot;name &quot;フィールドとオプションで &quot;url &quot;と &quot;email &quot;を持つオブジェクトで、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="96d96e3440209eade05af995f515f152778950fe" translate="yes" xml:space="preserve">
          <source>The &quot;factor&quot; config for the &lt;code&gt;retry&lt;/code&gt; module to use when fetching packages.</source>
          <target state="translated">パッケージを取得するときに使用する &lt;code&gt;retry&lt;/code&gt; モジュールの「要素」構成。</target>
        </trans-unit>
        <trans-unit id="a5024c3b0f27377c294ae649a475f6988516f057" translate="yes" xml:space="preserve">
          <source>The &quot;maxTimeout&quot; config for the &lt;code&gt;retry&lt;/code&gt; module to use when fetching packages.</source>
          <target state="translated">パッケージのフェッチ時に使用する &lt;code&gt;retry&lt;/code&gt; モジュールの「maxTimeout」構成。</target>
        </trans-unit>
        <trans-unit id="3b82a55dc88607120ed82ebc45abddcd36a1194e" translate="yes" xml:space="preserve">
          <source>The &quot;minTimeout&quot; config for the &lt;code&gt;retry&lt;/code&gt; module to use when fetching packages.</source>
          <target state="translated">パッケージをフェッチするときに使用する &lt;code&gt;retry&lt;/code&gt; モジュールの「minTimeout」構成。</target>
        </trans-unit>
        <trans-unit id="3c3f559eeaa97ab227e8b9bcd1ce3c52eb2e7467" translate="yes" xml:space="preserve">
          <source>The &quot;prerelease identifier&quot; to use as a prefix for the &quot;prerelease&quot; part of a semver. Like the &lt;code&gt;rc&lt;/code&gt; in &lt;code&gt;1.2.0-rc.8&lt;/code&gt;.</source>
          <target state="translated">サーバーの「プレリリース」部分の接頭辞として使用する「プレリリース識別子」。同様に &lt;code&gt;rc&lt;/code&gt; で &lt;code&gt;1.2.0-rc.8&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e5e22cb84752173fb0057459badcee977fe63967" translate="yes" xml:space="preserve">
          <source>The &quot;retries&quot; config for the &lt;code&gt;retry&lt;/code&gt; module to use when fetching packages from the registry.</source>
          <target state="translated">レジストリからパッケージをフェッチするときに使用する &lt;code&gt;retry&lt;/code&gt; モジュールの「再試行」構成。</target>
        </trans-unit>
        <trans-unit id="c5557624740983f3e50cd3fa8ec468f75be37c33" translate="yes" xml:space="preserve">
          <source>The &quot;scripts&quot; property is a dictionary containing script commands that are run at various times in the lifecycle of your package. The key is the lifecycle event, and the value is the command to run at that point.</source>
          <target state="translated">scripts」プロパティは、パッケージのライフサイクルの様々なタイミングで実行されるスクリプトコマンドを含むディクショナリです。キーはライフサイクルイベントで、値はその時点で実行されるコマンドです。</target>
        </trans-unit>
        <trans-unit id="73cf326169431c79f77a8d4671781a61458fcbd0" translate="yes" xml:space="preserve">
          <source>The &quot;umask&quot; value to use when setting the file creation mode on files and folders.</source>
          <target state="translated">ファイルやフォルダにファイル作成モードを設定する際に使用する「umask」の値。</target>
        </trans-unit>
        <trans-unit id="9cdef443c321734d146aeada90b4fa46bb664b4c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../cli/audit&quot;&gt;&lt;code&gt;npm audit&lt;/code&gt;&lt;/a&gt; command submits a description of the dependencies configured in your package to your default registry and asks for a report of known vulnerabilities. &lt;code&gt;npm audit&lt;/code&gt; checks direct dependencies, devDependencies, bundledDependencies, and optionalDependencies, but does not check peerDependencies.</source>
          <target state="translated">&lt;a href=&quot;../cli/audit&quot;&gt; &lt;code&gt;npm audit&lt;/code&gt; &lt;/a&gt;コマンドがデフォルトのレジストリにあなたのパッケージで構成された依存関係の記述を提出し、既知の脆弱性の報告を要求します。 &lt;code&gt;npm audit&lt;/code&gt; は、直接の依存関係、devDependencies、bundledDependencies、optionalDependenciesをチェックしますが、peerDependenciesはチェックしません。</target>
        </trans-unit>
        <trans-unit id="1b1fa12ad96f58b016768eac8401870424778cce" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../cli/npm&quot;&gt;&lt;em&gt;CLI&lt;/em&gt;&lt;/a&gt; runs from a terminal. This is how most developers interact with npm.</source>
          <target state="translated">&lt;a href=&quot;../cli/npm&quot;&gt;&lt;em&gt;CLIは&lt;/em&gt;&lt;/a&gt;、端末から実行されます。これは、ほとんどの開発者がnpmと対話する方法です。</target>
        </trans-unit>
        <trans-unit id="fe6d2b36cd53a346dfb821a9ce9967d426897f23" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../misc/registry&quot;&gt;&lt;em&gt;registry&lt;/em&gt;&lt;/a&gt; is a large public database of JavaScript software and the meta-information surrounding it.</source>
          <target state="translated">&lt;a href=&quot;../misc/registry&quot;&gt;&lt;em&gt;レジストリは、&lt;/em&gt;&lt;/a&gt; JavaScriptのソフトウェアとそれを取り巻くメタ情報の大規模な公共データベースです。</target>
        </trans-unit>
        <trans-unit id="76c84863e7b247b3298cd2f9370fccdeb6060f0b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;ci-server-config#getting-an-authentication-token&quot;&gt;Getting an Authentication Token&lt;/a&gt; should help you generate that token.</source>
          <target state="translated">&lt;a href=&quot;ci-server-config#getting-an-authentication-token&quot;&gt;認証トークン&lt;/a&gt;の取得は、そのトークンを生成するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="3c8cf6ba3828884244f4c79d585d715d30df6cc3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--dry-run&lt;/code&gt; argument will report in the usual way what the install would have done without actually installing anything.</source>
          <target state="translated">&lt;code&gt;--dry-run&lt;/code&gt; 引数は、インストールは実際には何もインストールすることなく行っているだろうか通常の方法で報告します。</target>
        </trans-unit>
        <trans-unit id="874b434c63948e0e98eaba93328fc5ff163e85f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--global-style&lt;/code&gt; argument will cause npm to install the package into your local &lt;code&gt;node_modules&lt;/code&gt; folder with the same layout it uses with the global &lt;code&gt;node_modules&lt;/code&gt; folder. Only your direct dependencies will show in &lt;code&gt;node_modules&lt;/code&gt; and everything they depend on will be flattened in their &lt;code&gt;node_modules&lt;/code&gt; folders. This obviously will eliminate some deduping.</source>
          <target state="translated">&lt;code&gt;--global-style&lt;/code&gt; 引数は、NPMがローカルにパッケージをインストールするようになります &lt;code&gt;node_modules&lt;/code&gt; それはグローバルで使用するのと同じレイアウトでフォルダ &lt;code&gt;node_modules&lt;/code&gt; のフォルダ。直接の依存関係のみが &lt;code&gt;node_modules&lt;/code&gt; に表示され、依存するものはすべて &lt;code&gt;node_modules&lt;/code&gt; フォルダーにフラット化されます。これは明らかに一部の重複排除を排除します。</target>
        </trans-unit>
        <trans-unit id="99982c42b4afffda71539c95ee1e06ad08cf5e51" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--ignore-scripts&lt;/code&gt; argument will cause npm to not execute any scripts defined in the package.json. See &lt;code&gt;&lt;a href=&quot;../misc/scripts&quot;&gt;npm-scripts&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--ignore-scripts&lt;/code&gt; 引数は、NPMがpackage.jsonで定義された任意のスクリプトを実行しなくなります。 &lt;code&gt;&lt;a href=&quot;../misc/scripts&quot;&gt;npm-scripts&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="b070bb50f7e2f32a3a68c6810eea8c5a6a0f5029" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--legacy-bundling&lt;/code&gt; argument will cause npm to install the package such that versions of npm prior to 1.4, such as the one included with node 0.8, can install the package. This eliminates all automatic deduping.</source>
          <target state="translated">&lt;code&gt;--legacy-bundling&lt;/code&gt; 引数は、NPMが1.4より前のNPMのバージョンは、そのようなノード0.8に含まれる1つとして、パッケージをインストールすることができるように、パッケージをインストールします。これにより、すべての自動重複除外が排除されます。</target>
        </trans-unit>
        <trans-unit id="aa1dd22c5088f4738c2889d8c18d08d8663fc4d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--link&lt;/code&gt; argument will cause npm to link global installs into the local space in some cases.</source>
          <target state="translated">&lt;code&gt;--link&lt;/code&gt; 引数は、NPMは、いくつかのケースではローカル空間にグローバルインストールをリンクさせる原因となります。</target>
        </trans-unit>
        <trans-unit id="e2c523678bb5aab6fdf93995a8f9610cb5ea99a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--no-audit&lt;/code&gt; argument can be used to disable sending of audit reports to the configured registries. See &lt;code&gt;&lt;a href=&quot;audit&quot;&gt;npm-audit&lt;/a&gt;&lt;/code&gt; for details on what is sent.</source>
          <target state="translated">&lt;code&gt;--no-audit&lt;/code&gt; 引数が設定されレジストリに監査報告書の送信を無効にするために使用することができます。参照してください。 &lt;code&gt;&lt;a href=&quot;audit&quot;&gt;npm-audit&lt;/a&gt;&lt;/code&gt; 送られているものについての詳細を。</target>
        </trans-unit>
        <trans-unit id="3666a26e7d393d45b96768b4fa6986145e375832" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--no-bin-links&lt;/code&gt; argument will prevent npm from creating symlinks for any binaries the package might contain.</source>
          <target state="translated">&lt;code&gt;--no-bin-links&lt;/code&gt; 引数は、パッケージが含まれている場合があります任意のバイナリのシンボリックリンクを作成するから、NPMを防ぐことができます。</target>
        </trans-unit>
        <trans-unit id="4beab201a683510ce3fe2c519dba78d36852d687" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--no-optional&lt;/code&gt; argument will prevent optional dependencies from being installed.</source>
          <target state="translated">&lt;code&gt;--no-optional&lt;/code&gt; 引数には、インストールされるオプションの依存関係を防ぐことができます。</target>
        </trans-unit>
        <trans-unit id="223d5d0e54979b4f658495963e2670ad3f817b78" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--no-package-lock&lt;/code&gt; argument will prevent npm from creating a &lt;code&gt;package-lock.json&lt;/code&gt; file. When running with package-lock's disabled npm will not automatically prune your node modules when installing.</source>
          <target state="translated">&lt;code&gt;--no-package-lock&lt;/code&gt; 引数は、作成から、NPMを防ぐことができます &lt;code&gt;package-lock.json&lt;/code&gt; ファイルを。パッケージロックを無効にして実行すると、npmはインストール時にノードモジュールを自動的にプルーニングしません。</target>
        </trans-unit>
        <trans-unit id="d199715dc7b1b9074047228664cb5627c0043f9e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--no-shrinkwrap&lt;/code&gt; argument, which will ignore an available package lock or shrinkwrap file and use the package.json instead.</source>
          <target state="translated">&lt;code&gt;--no-shrinkwrap&lt;/code&gt; 利用可能なパッケージのロックまたはシュリンクラップファイルを無視し、代わりにpackage.jsonを使用する引数。</target>
        </trans-unit>
        <trans-unit id="5a46bb5de38b5fcbe6ac8b938e2b05464cb90d41" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--nodedir=/path/to/node/source&lt;/code&gt; argument will allow npm to find the node source code so that npm can compile native modules.</source>
          <target state="translated">&lt;code&gt;--nodedir=/path/to/node/source&lt;/code&gt; 引数は、NPMがネイティブモジュールをコンパイルできるように、NPMがノードのソースコードを見つけることができるようになります。</target>
        </trans-unit>
        <trans-unit id="676156fe77a72ac92f9d0cd2ddc0a971aac06fc3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--only={prod[uction]|dev[elopment]}&lt;/code&gt; argument will cause either only &lt;code&gt;devDependencies&lt;/code&gt; or only non-&lt;code&gt;devDependencies&lt;/code&gt; to be installed regardless of the &lt;code&gt;NODE_ENV&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--only={prod[uction]|dev[elopment]}&lt;/code&gt; 引数は、いずれかの原因となり &lt;code&gt;devDependencies&lt;/code&gt; のみ非 &lt;code&gt;devDependencies&lt;/code&gt; 関わらずインストールする &lt;code&gt;NODE_ENV&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="4e05d21cd4baf251e98b12d7b8142d183765c1e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--package-lock-only&lt;/code&gt; argument will only update the &lt;code&gt;package-lock.json&lt;/code&gt;, instead of checking &lt;code&gt;node_modules&lt;/code&gt; and downloading dependencies.</source>
          <target state="translated">&lt;code&gt;--package-lock-only&lt;/code&gt; 引数がのみ更新される &lt;code&gt;package-lock.json&lt;/code&gt; 代わりにチェックする、 &lt;code&gt;node_modules&lt;/code&gt; をして依存関係をダウンロードします。</target>
        </trans-unit>
        <trans-unit id="40fbaee081d3b3346e128eaf320ad2cd90022698" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--save-prod&lt;/code&gt; and &lt;code&gt;--save-dev&lt;/code&gt; install flags</source>
          <target state="translated">&lt;code&gt;--save-prod&lt;/code&gt; と &lt;code&gt;--save-dev&lt;/code&gt; のインストールフラグ</target>
        </trans-unit>
        <trans-unit id="b683d396a855b2293185ac6a482e995df64fc71f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--tag&lt;/code&gt; argument will apply to all of the specified install targets. If a tag with the given name exists, the tagged version is preferred over newer versions.</source>
          <target state="translated">&lt;code&gt;--tag&lt;/code&gt; 引数は、ターゲットをインストールし、指定のすべてに適用されます。指定された名前のタグが存在する場合、タグ付けされたバージョンが新しいバージョンよりも優先されます。</target>
        </trans-unit>
        <trans-unit id="d79cc56e1f2b2c8059335a0fbf93c50d231bbbf4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--force&lt;/code&gt; argument will force npm to fetch remote resources even if a local copy exists on disk.</source>
          <target state="translated">&lt;code&gt;-f&lt;/code&gt; または &lt;code&gt;--force&lt;/code&gt; の引数は、ローカルコピーがディスク上に存在する場合でも、リモートリソースを取得するためにNPMを強制します。</target>
        </trans-unit>
        <trans-unit id="469331f6785f570a6286653e82cff946e1244080" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-g&lt;/code&gt; or &lt;code&gt;--global&lt;/code&gt; argument will cause npm to install the package globally rather than locally. See &lt;code&gt;&lt;a href=&quot;../files/folders&quot;&gt;npm-folders&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-g&lt;/code&gt; または &lt;code&gt;--global&lt;/code&gt; 引数は、グローバルではなくローカルにパッケージをインストールするためにNPMが発生します。 &lt;code&gt;&lt;a href=&quot;../files/folders&quot;&gt;npm-folders&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="9ed0b218ee9eb06a0e06a593e0a1dceaa5968c80" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;commit-ish&lt;/code&gt; can be any tag, sha, or branch which can be supplied as an argument to &lt;code&gt;git checkout&lt;/code&gt;. The default is &lt;code&gt;master&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;commit-ish&lt;/code&gt; 引数として供給することができる任意のタグ、SHA、またはブランチすることができ &lt;code&gt;git checkout&lt;/code&gt; 。デフォルトは &lt;code&gt;master&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="624ca5253f9d4a816e193c1bf5b1e33f8a19705f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;env&lt;/code&gt; script is a special built-in command that can be used to list environment variables that will be available to the script at runtime. If an &quot;env&quot; command is defined in your package, it will take precedence over the built-in.</source>
          <target state="translated">&lt;code&gt;env&lt;/code&gt; スクリプトは、実行時にスクリプトを利用できるようになりますリストの環境変数に使用することができます組み込みコマンド特殊です。「env」コマンドがパッケージで定義されている場合、組み込みコマンドよりも優先されます。</target>
        </trans-unit>
        <trans-unit id="b4d70052cedabf2d5cfbf7c4f45ee545aa4e9e5d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;newversion&lt;/code&gt; argument should be a valid semver string, a valid second argument to &lt;a href=&quot;https://github.com/npm/node-semver#functions&quot;&gt;semver.inc&lt;/a&gt; (one of &lt;code&gt;patch&lt;/code&gt;, &lt;code&gt;minor&lt;/code&gt;, &lt;code&gt;major&lt;/code&gt;, &lt;code&gt;prepatch&lt;/code&gt;, &lt;code&gt;preminor&lt;/code&gt;, &lt;code&gt;premajor&lt;/code&gt;, &lt;code&gt;prerelease&lt;/code&gt;), or &lt;code&gt;from-git&lt;/code&gt;. In the second case, the existing version will be incremented by 1 in the specified field. &lt;code&gt;from-git&lt;/code&gt; will try to read the latest git tag, and use that as the new npm version.</source>
          <target state="translated">&lt;code&gt;newversion&lt;/code&gt; 引数は、有効なsemver文字列に有効な第二引数でなければなりません&lt;a href=&quot;https://github.com/npm/node-semver#functions&quot;&gt;semver.inc&lt;/a&gt;（の1 &lt;code&gt;patch&lt;/code&gt; 、 &lt;code&gt;minor&lt;/code&gt; 、 &lt;code&gt;major&lt;/code&gt; 、 &lt;code&gt;prepatch&lt;/code&gt; 、 &lt;code&gt;preminor&lt;/code&gt; 、 &lt;code&gt;premajor&lt;/code&gt; 、 &lt;code&gt;prerelease&lt;/code&gt; ）、または &lt;code&gt;from-git&lt;/code&gt; 。2番目のケースでは、既存のバージョンは、指定されたフィールドで1ずつ増加します。 &lt;code&gt;from-git&lt;/code&gt; は最新のgitタグを読み取ろうとし、それを新しいnpmバージョンとして使用します。</target>
        </trans-unit>
        <trans-unit id="b1657f4b9d3cb2b1f003add5e3c28acc2aa5db7b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;next&lt;/code&gt; tag is used by some projects to identify the upcoming version.</source>
          <target state="translated">&lt;code&gt;next&lt;/code&gt; のタグは、今後のバージョンを識別するために、いくつかのプロジェクトで使用されています。</target>
        </trans-unit>
        <trans-unit id="66eaedb22fe4a28e8311cfe9bddc4e2ebc68077d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;node_modules&lt;/code&gt; folder is the place Node.js looks for modules. (See &lt;a href=&quot;#what-is-a-module&quot;&gt;&quot;What is a &lt;code&gt;module&lt;/code&gt;?&quot;&lt;/a&gt;, above.)</source>
          <target state="translated">&lt;code&gt;node_modules&lt;/code&gt; フォルダには、モジュールのルックスNode.jsの場所です。（上記の&lt;a href=&quot;#what-is-a-module&quot;&gt;「&lt;/a&gt; &lt;code&gt;module&lt;/code&gt; とは？」を参照してください。）</target>
        </trans-unit>
        <trans-unit id="3e0607e7ee5e982b2024225f0a3d860e01bea434" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;npm bundle&lt;/code&gt; command has been removed in 1.0, for the simple reason that it is no longer necessary, as the default behavior is now to install packages into the local space.</source>
          <target state="translated">&lt;code&gt;npm bundle&lt;/code&gt; コマンドは、デフォルトの動作はローカル空間にパッケージをインストールするために、今あるとして、それは、もはや必要であるという単純な理由のために、1.0で削除されました。</target>
        </trans-unit>
        <trans-unit id="e5f2fa84eba7f837751cccf80d2ef98b7926e3df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;npm config&lt;/code&gt; command can be used to update and edit the contents of the user and global npmrc files.</source>
          <target state="translated">&lt;code&gt;npm config&lt;/code&gt; コマンドは、ユーザーとグローバルnpmrcファイルの内容を更新し、編集するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="8cfe29e501678ce53644ef8c3dec6460545fc281" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;package.json&lt;/code&gt; file defines the package. (See &lt;a href=&quot;#what-is-a-package&quot;&gt;&quot;What is a &lt;code&gt;package&lt;/code&gt;?&quot;&lt;/a&gt;, above.)</source>
          <target state="translated">&lt;code&gt;package.json&lt;/code&gt; のファイルは、パッケージを定義します。（上記の&lt;a href=&quot;#what-is-a-package&quot;&gt;「&lt;/a&gt; &lt;code&gt;package&lt;/code&gt; とは？」を参照してください。）</target>
        </trans-unit>
        <trans-unit id="63eb40c04f3182ddae5a2acd2fceac3c8cf2717e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prefix&lt;/code&gt; config defaults to the location where node is installed. On most systems, this is &lt;code&gt;/usr/local&lt;/code&gt;. On Windows, it's &lt;code&gt;%AppData%\npm&lt;/code&gt;. On Unix systems, it's one level up, since node is typically installed at &lt;code&gt;{prefix}/bin/node&lt;/code&gt; rather than &lt;code&gt;{prefix}/node.exe&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prefix&lt;/code&gt; ノードがインストールされている場所へのデフォルトをコンフィグ ほとんどのシステムでは、これは &lt;code&gt;/usr/local&lt;/code&gt; です。Windowsでは、 &lt;code&gt;%AppData%\npm&lt;/code&gt; です。Unixシステムでは、nodeは通常 &lt;code&gt;{prefix}/node.exe&lt;/code&gt; ではなく &lt;code&gt;{prefix}/bin/node&lt;/code&gt; にインストールされるため、1レベル上になります。</target>
        </trans-unit>
        <trans-unit id="c4f661a47aa419309c0e4e8307a70f8cbbba301b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prepare&lt;/code&gt; script will be run before publishing, so that users can consume the functionality without requiring them to compile it themselves. In dev mode (ie, locally running &lt;code&gt;npm install&lt;/code&gt;), it'll run this script as well, so that you can test it easily.</source>
          <target state="translated">&lt;code&gt;prepare&lt;/code&gt; スクリプトは、ユーザーがそれ自体をコンパイルするためにそれらを必要とせずに機能を消費することができるように、公開する前に実行されます。開発モード（つまり、ローカルで &lt;code&gt;npm install&lt;/code&gt; を実行）では、このスクリプトも実行されるため、簡単にテストできます。</target>
        </trans-unit>
        <trans-unit id="61ac15b589c129732299ea7f46aea3cdcff32f65" translate="yes" xml:space="preserve">
          <source>The Certificate Authority signing certificate that is trusted for SSL connections to the registry. Values should be in PEM format (Windows calls it &quot;Base-64 encoded X.509 (.CER)&quot;) with newlines replaced by the string &quot;\n&quot;. For example:</source>
          <target state="translated">レジストリへのSSL接続で信頼される認証局の署名証明書。値は PEM 形式 (Windows では &quot;Base-64 エンコードされた X.509 (.CER)&quot; と呼んでいます)で、改行を &quot;\n&quot; という文字列に置き換えてください。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="86a9945426c4f491c49993a6688c619b7b643db3" translate="yes" xml:space="preserve">
          <source>The CommonJS &lt;a href=&quot;http://wiki.commonjs.org/wiki/Packages/1.0&quot;&gt;Packages&lt;/a&gt; spec details a few ways that you can indicate the structure of your package using a &lt;code&gt;directories&lt;/code&gt; object. If you look at &lt;a href=&quot;https://registry.npmjs.org/npm/latest&quot;&gt;npm's package.json&lt;/a&gt;, you'll see that it has directories for doc, lib, and man.</source>
          <target state="translated">CommonJS &lt;a href=&quot;http://wiki.commonjs.org/wiki/Packages/1.0&quot;&gt;Packages&lt;/a&gt;仕様では、 &lt;code&gt;directories&lt;/code&gt; オブジェクトを使用してパッケージの構造を示すことができるいくつかの方法が詳しく説明されています。あなたが見れば&lt;a href=&quot;https://registry.npmjs.org/npm/latest&quot;&gt;NPMのpackage.json&lt;/a&gt;、あなたはそれがドキュメント、LIB、および男性用のディレクトリを持っていることがわかります。</target>
        </trans-unit>
        <trans-unit id="65af71a4348a499ddc80aab92041879184002557" translate="yes" xml:space="preserve">
          <source>The Dockerfile that takes advantage of this has a few more lines in it than our example earlier that allows us to use the &lt;code&gt;.npmrc&lt;/code&gt; file and the &lt;code&gt;ARG&lt;/code&gt; parameter.</source>
          <target state="translated">これを利用する &lt;code&gt;.npmrc&lt;/code&gt; には、前の例よりも数行多いため、.npmrcファイルと &lt;code&gt;ARG&lt;/code&gt; パラメーターを使用できます。</target>
        </trans-unit>
        <trans-unit id="081d1c346720e480869b373f132f00d6b4824ad7" translate="yes" xml:space="preserve">
          <source>The IP address of the local interface to use when making connections to the npm registry. Must be IPv4 in versions of Node prior to 0.12.</source>
          <target state="translated">npm レジストリへの接続時に使用するローカルインターフェースの IP アドレス。0.12 より前のバージョンの Node では IPv4 でなければなりません。</target>
        </trans-unit>
        <trans-unit id="6f6b4c3d120d53062975b8ff991936bcb8f17a8a" translate="yes" xml:space="preserve">
          <source>The JavaScript Package Registry.</source>
          <target state="translated">JavaScriptパッケージレジストリ。</target>
        </trans-unit>
        <trans-unit id="a3eb8270cc8404e75d26a8c63424410e0c50cb94" translate="yes" xml:space="preserve">
          <source>The Node installer installs, directly into the npm folder, a special piece of Windows-specific configuration that tells npm where to install global packages. When npm is used to install itself, it is supposed to copy this special &lt;code&gt;builtin&lt;/code&gt; configuration into the new install. There was a bug in some versions of npm that kept this from working, so you may need to go in and fix that up by hand. Run the following command to see where npm will install global packages to verify it is correct.</source>
          <target state="translated">Nodeインストーラーは、npmフォルダーに直接インストールします。これは、グローバルパッケージをインストールする場所をnpmに指示するWindows固有の構成の特別な部分です。npmを使用してそれ自体をインストールする場合、この特別な &lt;code&gt;builtin&lt;/code&gt; 構成を新しいインストールにコピーする必要があります。npmの一部のバージョンには、これが機能しないバグがあったため、手動で修正する必要がある場合があります。次のコマンドを実行して、npmがグローバルパッケージをインストールする場所を確認し、それが正しいことを確認します。</target>
        </trans-unit>
        <trans-unit id="5097f9240f6bb597ecc3f2767f65420b985d7b2f" translate="yes" xml:space="preserve">
          <source>The Package Page</source>
          <target state="translated">パッケージのページ</target>
        </trans-unit>
        <trans-unit id="2ab8405f1142db7a06949725727b3aca99abb233" translate="yes" xml:space="preserve">
          <source>The README displayed on the site will not be updated unless a new version of your package is published, so you need to run &lt;code&gt;npm version patch&lt;/code&gt; and &lt;code&gt;npm publish&lt;/code&gt; to update the documentation displayed on the site.</source>
          <target state="translated">サイトに表示されるREADMEは、パッケージの新しいバージョンが公開されない限り更新されないため、 &lt;code&gt;npm version patch&lt;/code&gt; および &lt;code&gt;npm publish&lt;/code&gt; を実行して、サイトに表示されるドキュメントを更新する必要があります。</target>
        </trans-unit>
        <trans-unit id="b0a6406ba5c5147ce935f5e77900206fb7cccf86" translate="yes" xml:space="preserve">
          <source>The UID to set to when running package scripts as root.</source>
          <target state="translated">root でパッケージスクリプトを実行する際に設定する UID。</target>
        </trans-unit>
        <trans-unit id="8f40166806959347d7eaef4599cb4484d60a42a1" translate="yes" xml:space="preserve">
          <source>The URL should be a publicly available (perhaps read-only) url that can be handed directly to a VCS program without any modification. It should not be a url to an html project page that you put in your browser. It's for computers.</source>
          <target state="translated">URL は、公開されている (おそらく読み取り専用の)URL でなければなりません。ブラウザに入れたhtmlプロジェクトページへのURLであってはなりません。それはコンピュータのためのものです。</target>
        </trans-unit>
        <trans-unit id="b1b2c0c57cbbfb07083e55cc7194e410837cc99e" translate="yes" xml:space="preserve">
          <source>The actual shell your script is run within is platform dependent. By default, on Unix-like systems it is the &lt;code&gt;/bin/sh&lt;/code&gt; command, on Windows it is the &lt;code&gt;cmd.exe&lt;/code&gt;. The actual shell referred to by &lt;code&gt;/bin/sh&lt;/code&gt; also depends on the system. As of &lt;a href=&quot;https://github.com/npm/npm/releases/tag/v5.1.0&quot;&gt;&lt;code&gt;npm@5.1.0&lt;/code&gt;&lt;/a&gt; you can customize the shell with the &lt;code&gt;script-shell&lt;/code&gt; configuration.</source>
          <target state="translated">スクリプトが実行される実際のシェルはプラットフォームに依存します。デフォルトでは、Unixライクなシステムでは &lt;code&gt;/bin/sh&lt;/code&gt; コマンド、Windowsでは &lt;code&gt;cmd.exe&lt;/code&gt; です。 &lt;code&gt;/bin/sh&lt;/code&gt; によって参照される実際のシェルもシステムによって異なります。以下のよう&lt;a href=&quot;https://github.com/npm/npm/releases/tag/v5.1.0&quot;&gt; &lt;code&gt;npm@5.1.0&lt;/code&gt; &lt;/a&gt;あなたがシェルをカスタマイズすることができ &lt;code&gt;script-shell&lt;/code&gt; 設定。</target>
        </trans-unit>
        <trans-unit id="bc2b71ae75e33d571ea24c1e966026bfbc479525" translate="yes" xml:space="preserve">
          <source>The advantage of doing these things at &lt;code&gt;prepublish&lt;/code&gt; time is that they can be done once, in a single place, thus reducing complexity and variability. Additionally, this means that:</source>
          <target state="translated">公開 &lt;code&gt;prepublish&lt;/code&gt; これらのことを行うことの利点は、それらを1か所で1回で実行できるため、複雑さとばらつきを減らすことができることです。さらに、これは次のことを意味します。</target>
        </trans-unit>
        <trans-unit id="6038da20e7ec59c10339ba65b93516572c4648be" translate="yes" xml:space="preserve">
          <source>The age of the cache, in seconds, before another registry request is made if using legacy search endpoint.</source>
          <target state="translated">レガシー検索エンドポイントを使用している場合、別のレジストリリクエストが行われる前のキャッシュの年齢を秒単位で指定します。</target>
        </trans-unit>
        <trans-unit id="4aec7bc720dd05f042865f5b72ca2cf33b1c77ac" translate="yes" xml:space="preserve">
          <source>The age of the cache, in seconds, before another registry request is made.</source>
          <target state="translated">レジストリ要求が行われる前のキャッシュの年齢を秒単位で表示します。</target>
        </trans-unit>
        <trans-unit id="435d21576429c419032da292ca40f88a542b651a" translate="yes" xml:space="preserve">
          <source>The arguments will only be passed to the script specified after &lt;code&gt;npm run&lt;/code&gt; and not to any pre or post script.</source>
          <target state="translated">引数は &lt;code&gt;npm run&lt;/code&gt; 後に指定されたスクリプトにのみ渡され、前後のスクリプトには渡されません。</target>
        </trans-unit>
        <trans-unit id="d9e6b6813ec3189ad4e369cf9b160fe123880b77" translate="yes" xml:space="preserve">
          <source>The audit command submits a description of the dependencies configured in your project to your default registry and asks for a report of known vulnerabilities. The report returned includes instructions on how to act on this information.</source>
          <target state="translated">監査コマンドは、プロジェクトで構成されている依存関係の説明をデフォルトのレジストリに提出し、既知の脆弱性のレポートを要求します。返されたレポートには、この情報をどのように処理するかの指示が含まれています。</target>
        </trans-unit>
        <trans-unit id="3a2211451eb489871d8fe1b1ff059bdf50fbdeb1" translate="yes" xml:space="preserve">
          <source>The base URL of the npm package registry.</source>
          <target state="translated">npm パッケージレジストリのベース URL。</target>
        </trans-unit>
        <trans-unit id="1c15877462f00719a859329bf8af095ead24487e" translate="yes" xml:space="preserve">
          <source>The base URL of the npm package registry. If &lt;code&gt;scope&lt;/code&gt; is also specified, it takes precedence.</source>
          <target state="translated">npmパッケージレジストリのベースURL。 &lt;code&gt;scope&lt;/code&gt; も指定されている場合は、それが優先されます。</target>
        </trans-unit>
        <trans-unit id="3387c63eed0d8556e5640563423cf249e06fb877" translate="yes" xml:space="preserve">
          <source>The base URL of the npm package registry. If &lt;code&gt;scope&lt;/code&gt; is also specified, this registry will only be used for packages with that scope. &lt;code&gt;scope&lt;/code&gt; defaults to the scope of the project directory you're currently in, if any. See &lt;code&gt;&lt;a href=&quot;../misc/scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">npmパッケージレジストリのベースURL。 &lt;code&gt;scope&lt;/code&gt; も指定されている場合、このレジストリはそのスコープのパッケージにのみ使用されます。 &lt;code&gt;scope&lt;/code&gt; のデフォルトは、現在のプロジェクトディレクトリのスコープです（存在する場合）。 &lt;code&gt;&lt;a href=&quot;../misc/scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="ea03b0cb1cd3f200daf1ecff911bec44085bacbe" translate="yes" xml:space="preserve">
          <source>The best way to manage locally installed npm packages is to create a &lt;code&gt;package.json&lt;/code&gt; file.</source>
          <target state="translated">ローカルにインストールされたnpmパッケージを管理する最良の方法は、 &lt;code&gt;package.json&lt;/code&gt; ファイルを作成することです。</target>
        </trans-unit>
        <trans-unit id="12eff052aa388eec557bd5301854dc5d8eeaba7d" translate="yes" xml:space="preserve">
          <source>The browser that is called by the &lt;code&gt;npm bugs&lt;/code&gt; command to open websites.</source>
          <target state="translated">Webサイトを開くために &lt;code&gt;npm bugs&lt;/code&gt; コマンドによって呼び出されるブラウザー。</target>
        </trans-unit>
        <trans-unit id="4c59b56d7d4d88bb66e03c49c656f968b1218842" translate="yes" xml:space="preserve">
          <source>The browser that is called by the &lt;code&gt;npm docs&lt;/code&gt; command to open websites.</source>
          <target state="translated">&lt;code&gt;npm docs&lt;/code&gt; コマンドによってWebサイトを開くために呼び出されるブラウザー。</target>
        </trans-unit>
        <trans-unit id="b4468dadffe999f8b73514eb718cdadb8bad8973" translate="yes" xml:space="preserve">
          <source>The browser that is called by the &lt;code&gt;npm repo&lt;/code&gt; command to open websites.</source>
          <target state="translated">Webサイトを開くために &lt;code&gt;npm repo&lt;/code&gt; コマンドによって呼び出されるブラウザー。</target>
        </trans-unit>
        <trans-unit id="ad8291e0dae37630d1e64f47ef084380aa568a4f" translate="yes" xml:space="preserve">
          <source>The callback should always be the last argument in the list. Its first argument is the Error or null.</source>
          <target state="translated">コールバックは常にリストの最後の引数でなければなりません。その最初の引数は Error または null です。</target>
        </trans-unit>
        <trans-unit id="2320ff1fa157ed2a8ca8662c0605a2ea7b0de244" translate="yes" xml:space="preserve">
          <source>The command to delete a token is:</source>
          <target state="translated">トークンを削除するコマンドは</target>
        </trans-unit>
        <trans-unit id="17630bda840281d3783a14f8794889ce5a5029da" translate="yes" xml:space="preserve">
          <source>The command to run for &lt;code&gt;npm edit&lt;/code&gt; or &lt;code&gt;npm config edit&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;npm edit&lt;/code&gt; または &lt;code&gt;npm config edit&lt;/code&gt; で実行するコマンド。</target>
        </trans-unit>
        <trans-unit id="dbf5a23e661a33e80ed72ad7bc0863c0bb37c528" translate="yes" xml:space="preserve">
          <source>The command to use for git commands. If git is installed on the computer, but is not in the &lt;code&gt;PATH&lt;/code&gt;, then set this to the full path to the git binary.</source>
          <target state="translated">gitコマンドに使用するコマンド。gitがコンピューターにインストールされているが &lt;code&gt;PATH&lt;/code&gt; にはない場合は、これをgitバイナリーへの絶対パスに設定します。</target>
        </trans-unit>
        <trans-unit id="3cae97d07a75b25d20f430372768105937034dcb" translate="yes" xml:space="preserve">
          <source>The config file to read for global config options.</source>
          <target state="translated">グローバルコンフィグオプションのために読み込むコンフィグファイル。</target>
        </trans-unit>
        <trans-unit id="1f66b6d25ee8de625c31496955e767941ae78bdd" translate="yes" xml:space="preserve">
          <source>The deduplication algorithm walks the tree, moving each dependency as far up in the tree as possible, even if duplicates are not found. This will result in both a flat and deduplicated tree.</source>
          <target state="translated">重複排除アルゴリズムは、重複が見つからなくても、各依存関係を可能な限りツリーの上に移動させながらツリーを探索します。これにより、平坦なツリーと重複排除されたツリーの両方が得られます。</target>
        </trans-unit>
        <trans-unit id="1401fb62356585f36e5fe1c3a38ac194bdaa161d" translate="yes" xml:space="preserve">
          <source>The default setting for new tokens is full-permission.</source>
          <target state="translated">新しいトークンのデフォルト設定はフルパーミッションです。</target>
        </trans-unit>
        <trans-unit id="98d1f9ca0fb9f3c611eea6d27b61bbb406ce6e6f" translate="yes" xml:space="preserve">
          <source>The default version is &quot;latest&quot; if unspecified.</source>
          <target state="translated">デフォルトのバージョンは、指定しない場合は &quot;最新版 &quot;です。</target>
        </trans-unit>
        <trans-unit id="c83669c694bf9ce15555fc056f43202f1066c2bf" translate="yes" xml:space="preserve">
          <source>The dependencies of this dependency, exactly as at the top level.</source>
          <target state="translated">この依存関係の依存関係は、トップレベルと全く同じです。</target>
        </trans-unit>
        <trans-unit id="68c7b1a73279dfcc73097bac56d1ef55b848ce4b" translate="yes" xml:space="preserve">
          <source>The depth to go when recursing directories for &lt;code&gt;npm ls&lt;/code&gt;, &lt;code&gt;npm cache ls&lt;/code&gt;, and &lt;code&gt;npm outdated&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;npm ls&lt;/code&gt; 、 &lt;code&gt;npm cache ls&lt;/code&gt; 、および &lt;code&gt;npm outdated&lt;/code&gt; ディレクトリを再帰的に古くするときに行く深さ。</target>
        </trans-unit>
        <trans-unit id="41fff03cdef55a327cc7b2c216ba144dfbc645b2" translate="yes" xml:space="preserve">
          <source>The description of the vulnerability. For example, &quot;Denial of service&quot;.</source>
          <target state="translated">脆弱性の説明。例えば、「サービス拒否」など。</target>
        </trans-unit>
        <trans-unit id="656ac6f95a3d74510468c36c0b8daa1bd9f515d5" translate="yes" xml:space="preserve">
          <source>The developer will be able to access packages based on the teams they are on. Access is either read-write or read-only.</source>
          <target state="translated">開発者は、所属するチームに基づいてパッケージにアクセスできるようになります。アクセスは読み書きまたは読み取り専用です。</target>
        </trans-unit>
        <trans-unit id="a947085d51250fa82367d9322a92fe3a65c74918" translate="yes" xml:space="preserve">
          <source>The directories that npm uses, &lt;code&gt;node_modules&lt;/code&gt; (both locally and globally), exist and can be written by the current user.</source>
          <target state="translated">npmが使用するディレクトリ、 &lt;code&gt;node_modules&lt;/code&gt; （ローカルとグローバルの両方）が存在し、現在のユーザーが書き込むことができます。</target>
        </trans-unit>
        <trans-unit id="8d9e15ad02608432fa09bee6d7c2a7566d38ccb6" translate="yes" xml:space="preserve">
          <source>The easier (and more awesome) way to add dependencies to your &lt;code&gt;package.json&lt;/code&gt; is to do so from the command line, flagging the &lt;code&gt;npm install&lt;/code&gt; command with either &lt;code&gt;--save-prod&lt;/code&gt; (assumed by default) or &lt;code&gt;--save-dev&lt;/code&gt;, depending on how you'd like to use that dependency.</source>
          <target state="translated">あなたに依存関係を追加する簡単な（そしてもっとすごい）方法 &lt;code&gt;package.json&lt;/code&gt; は低迷、コマンドラインからそうすることである &lt;code&gt;npm install&lt;/code&gt; のいずれかを使用してコマンドを &lt;code&gt;--save-prod&lt;/code&gt; （デフォルトでは仮定）、または &lt;code&gt;--save-dev&lt;/code&gt; の、依存しますその依存関係をどのように使用するかについて。</target>
        </trans-unit>
        <trans-unit id="817f0d4299f26a50744477ba786bf5df51113967" translate="yes" xml:space="preserve">
          <source>The easiest way is to replicate the couch database, and use the same (or similar) design doc to implement the APIs.</source>
          <target state="translated">最も簡単な方法は、カウチデータベースを複製し、APIを実装するために同じ(または類似した)デザインのdocを使用することです。</target>
        </trans-unit>
        <trans-unit id="4aa7842b1f3d8e363f930f607d9a31c83f43a934" translate="yes" xml:space="preserve">
          <source>The exact order of execution is as follows:</source>
          <target state="translated">正確な実行順序は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="fd16ca1fbd99ec13b56c9fd64463d34346e936ca" translate="yes" xml:space="preserve">
          <source>The file in the &quot;main&quot; field</source>
          <target state="translated">メイン」フィールドのファイル</target>
        </trans-unit>
        <trans-unit id="e8f6abbdd531ddeffd04878719ff326a060afe25" translate="yes" xml:space="preserve">
          <source>The filename &lt;em&gt;must&lt;/em&gt; use &lt;code&gt;.tar&lt;/code&gt;, &lt;code&gt;.tar.gz&lt;/code&gt;, or &lt;code&gt;.tgz&lt;/code&gt; as the extension.</source>
          <target state="translated">ファイル名に&lt;em&gt;は&lt;/em&gt;、拡張子として &lt;code&gt;.tar&lt;/code&gt; 、 &lt;code&gt;.tar.gz&lt;/code&gt; 、または &lt;code&gt;.tgz&lt;/code&gt; を使用する&lt;em&gt;必要があり&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="766e6a00f7539dd0ea0f43ba04ef93f87420c82d" translate="yes" xml:space="preserve">
          <source>The following git environment variables are recognized by npm and will be added to the environment when running git:</source>
          <target state="translated">以下のgit環境変数はnpmで認識され、gitを実行すると環境に追加されます。</target>
        </trans-unit>
        <trans-unit id="ff4f7e12799fb6e3d2826c75d368f7981f853797" translate="yes" xml:space="preserve">
          <source>The following paths and files are never ignored, so adding them to &lt;code&gt;.npmignore&lt;/code&gt; is pointless:</source>
          <target state="translated">次のパスとファイルは決して無視されないため、それらを &lt;code&gt;.npmignore&lt;/code&gt; に追加しても意味がありません。</target>
        </trans-unit>
        <trans-unit id="904fda8b0fac02d5c794e3d3d0a3f22cd8ba9e5e" translate="yes" xml:space="preserve">
          <source>The following screen shot demonstrates these steps:</source>
          <target state="translated">以下のスクリーンショットは、これらの手順を示しています。</target>
        </trans-unit>
        <trans-unit id="f2ff9bb10a197eaf115fc5d0892ff8cf85e46c23" translate="yes" xml:space="preserve">
          <source>The following screen shot shows where the menu is if you want to explore the website, set up your profile, and get started right away:</source>
          <target state="translated">以下のスクリーンショットは、ウェブサイトを探索し、プロフィールを設定し、すぐに始めたい場合のメニューがどこにあるかを示しています。</target>
        </trans-unit>
        <trans-unit id="181cec331142b836f851c2fe0bd6dabc5627d4e3" translate="yes" xml:space="preserve">
          <source>The following shorthands are parsed on the command-line:</source>
          <target state="translated">以下の速記語はコマンドラインで解析されます。</target>
        </trans-unit>
        <trans-unit id="9c90b8ec2841e4127632b0669579e0d89b6f6dbe" translate="yes" xml:space="preserve">
          <source>The following table explains the token list.</source>
          <target state="translated">以下、トークンリストについて説明します。</target>
        </trans-unit>
        <trans-unit id="1ae8faa8eed22ae91503922e81ebc1473eed144c" translate="yes" xml:space="preserve">
          <source>The four relevant files are:</source>
          <target state="translated">関連するファイルは4つ。</target>
        </trans-unit>
        <trans-unit id="89d33250cb191fe59ca4071c90c9730501affba4" translate="yes" xml:space="preserve">
          <source>The group to use when running package scripts in global mode as the root user.</source>
          <target state="translated">グローバルモードでパッケージスクリプトをrootユーザとして実行する際に使用するグループです。</target>
        </trans-unit>
        <trans-unit id="f58b2dd5771fdbb7a93e2118b23439e865ce7189" translate="yes" xml:space="preserve">
          <source>The hook &lt;code&gt;id&lt;/code&gt; used by &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;rm&lt;/code&gt; are the IDs listed in &lt;code&gt;npm hook ls&lt;/code&gt; for that particular hook.</source>
          <target state="translated">&lt;code&gt;update&lt;/code&gt; および &lt;code&gt;rm&lt;/code&gt; で使用されるフック &lt;code&gt;id&lt;/code&gt; は、その特定のフックの &lt;code&gt;npm hook ls&lt;/code&gt; リストされているID です。</target>
        </trans-unit>
        <trans-unit id="f0c118a09758424652dfb8beed756a6049c7f33f" translate="yes" xml:space="preserve">
          <source>The host architecture is determined by &lt;code&gt;process.arch&lt;/code&gt;</source>
          <target state="translated">ホストアーキテクチャは、 &lt;code&gt;process.arch&lt;/code&gt; によって決定されます。</target>
        </trans-unit>
        <trans-unit id="c5eef749a5354a088676b173955f904711f925f4" translate="yes" xml:space="preserve">
          <source>The host operating system is determined by &lt;code&gt;process.platform&lt;/code&gt;</source>
          <target state="translated">ホストオペレーティングシステムは、 &lt;code&gt;process.platform&lt;/code&gt; によって決定されます。</target>
        </trans-unit>
        <trans-unit id="531917f9cffb5fdf890363f2887b8bb4db896d23" translate="yes" xml:space="preserve">
          <source>The init command is transformed to a corresponding &lt;code&gt;npx&lt;/code&gt; operation as follows:</source>
          <target state="translated">initコマンドは、次のように対応する &lt;code&gt;npx&lt;/code&gt; 操作に変換されます。</target>
        </trans-unit>
        <trans-unit id="890ef5293f552476f09b11cded6dde35f532fa07" translate="yes" xml:space="preserve">
          <source>The location of npm's cache directory. See &lt;code&gt;&lt;a href=&quot;../cli/cache&quot;&gt;npm-cache&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">npmのキャッシュディレクトリの場所。 &lt;code&gt;&lt;a href=&quot;../cli/cache&quot;&gt;npm-cache&lt;/a&gt;&lt;/code&gt; を参照してください</target>
        </trans-unit>
        <trans-unit id="caeef139e21b12e2c4540b30ddf767c19b368df1" translate="yes" xml:space="preserve">
          <source>The location of user-level configuration settings.</source>
          <target state="translated">ユーザーレベルの構成設定の場所。</target>
        </trans-unit>
        <trans-unit id="3044e5c0c82d60776d2b4958e57fb912069c184e" translate="yes" xml:space="preserve">
          <source>The location to install global items. If set on the command line, then it forces non-global commands to run in the specified folder.</source>
          <target state="translated">グローバルアイテムをインストールする場所。コマンドラインで設定した場合、グローバル以外のコマンドを指定したフォルダで強制的に実行させます。</target>
        </trans-unit>
        <trans-unit id="bbe3ff600e402dbb69ada9d6eee24ab25c624cc1" translate="yes" xml:space="preserve">
          <source>The main field is a module ID that is the primary entry point to your program. That is, if your package is named &lt;code&gt;foo&lt;/code&gt;, and a user installs it, and then does &lt;code&gt;require(&quot;foo&quot;)&lt;/code&gt;, then your main module's exports object will be returned.</source>
          <target state="translated">メインフィールドは、プログラムへの主要なエントリポイントであるモジュールIDです。つまり、パッケージの名前が &lt;code&gt;foo&lt;/code&gt; で、ユーザーがパッケージをインストールしてから &lt;code&gt;require(&quot;foo&quot;)&lt;/code&gt; を実行すると、メインモジュールのエクスポートオブジェクトが返されます。</target>
        </trans-unit>
        <trans-unit id="9b28b412c6ead8634bc49a9a0075fac8edf0ebf4" translate="yes" xml:space="preserve">
          <source>The maximum number of connections to use per origin (protocol/host/port combination). Passed to the &lt;code&gt;http&lt;/code&gt;&lt;code&gt;Agent&lt;/code&gt; used to make the request.</source>
          <target state="translated">オリジンごとに使用する接続の最大数（プロトコル/ホスト/ポートの組み合わせ）。リクエストを行うために使用される &lt;code&gt;http&lt;/code&gt; &lt;code&gt;Agent&lt;/code&gt; 渡されます。</target>
        </trans-unit>
        <trans-unit id="22cda19943230bada1fe3f4d7dd6ca1820ff4ee6" translate="yes" xml:space="preserve">
          <source>The maximum number of log files to store.</source>
          <target state="translated">保存するログファイルの最大数。</target>
        </trans-unit>
        <trans-unit id="7779767828629a8b1a1de7d18da1d1fd94dca69b" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;.inc&lt;/code&gt; takes an additional &lt;code&gt;identifier&lt;/code&gt; string argument that will append the value of the string as a prerelease identifier:</source>
          <target state="translated">メソッド &lt;code&gt;.inc&lt;/code&gt; は、プレリリース識別子として文字列の値を追加する追加の &lt;code&gt;identifier&lt;/code&gt; 文字列引数を受け取ります。</target>
        </trans-unit>
        <trans-unit id="72dbe0179720463ea366edb7fc6fd2e4d4e83863" translate="yes" xml:space="preserve">
          <source>The minimum level of vulnerability for &lt;code&gt;npm audit&lt;/code&gt; to exit with a non-zero exit code.</source>
          <target state="translated">&lt;code&gt;npm audit&lt;/code&gt; がゼロ以外の終了コードで終了する脆弱性の最小レベル。</target>
        </trans-unit>
        <trans-unit id="a7f9de7cda37ca1d6af45767e0633cff722ccbf3" translate="yes" xml:space="preserve">
          <source>The module that the package with the vulnerability depends on.</source>
          <target state="translated">脆弱性を持つパッケージが依存しているモジュール。</target>
        </trans-unit>
        <trans-unit id="d37b5e6f15d750ad084aa1839076c27ec3e4621d" translate="yes" xml:space="preserve">
          <source>The module tree described by the package lock is reproduced. This means reproducing the structure described in the file, using the specific files referenced in &quot;resolved&quot; if available, falling back to normal package resolution using &quot;version&quot; if one isn't.</source>
          <target state="translated">パッケージロックで記述されたモジュールツリーを再現します。これは、ファイルに記述されている構造を再現することを意味し、&quot;resolve&quot; で参照されている特定のファイルがあればそれを使用し、なければ &quot;version&quot; を使用して通常のパッケージの解像度にフォールバックします。</target>
        </trans-unit>
        <trans-unit id="ced44275a08def978e9a777b87adbda8e22804d3" translate="yes" xml:space="preserve">
          <source>The name can't start with a dot or an underscore.</source>
          <target state="translated">名前の先頭にドットやアンダースコアを付けることはできません。</target>
        </trans-unit>
        <trans-unit id="8d4be5f3ffdb929c39981c59617ddfed24fbf174" translate="yes" xml:space="preserve">
          <source>The name ends up being part of a URL, an argument on the command line, and a folder name. Therefore, the name can't contain any non-URL-safe characters.</source>
          <target state="translated">名前は、URL、コマンドラインの引数、フォルダ名の一部になります。したがって、名前にはURLセーフでない文字を含めることはできません。</target>
        </trans-unit>
        <trans-unit id="924085891a487ba1e84e638855e4e74d6cb6e644" translate="yes" xml:space="preserve">
          <source>The name is what your thing is called.</source>
          <target state="translated">あなたのものの名前は何と呼ばれているのか。</target>
        </trans-unit>
        <trans-unit id="aaa63814afced2c494fcc32c84aea3356418cd95" translate="yes" xml:space="preserve">
          <source>The name must be less than or equal to 214 characters. This includes the scope for scoped packages.</source>
          <target state="translated">名前は214文字以下でなければなりません。これには、スコープされたパッケージのスコープも含まれます。</target>
        </trans-unit>
        <trans-unit id="225b224747a212e99da2345d52c5b9bc50f10558" translate="yes" xml:space="preserve">
          <source>The name of the package that contains the vulnerability.</source>
          <target state="translated">脆弱性を含むパッケージの名前。</target>
        </trans-unit>
        <trans-unit id="d203e38f716adcf1e693a9d10569dc0c3088a945" translate="yes" xml:space="preserve">
          <source>The name of the package this is a package-lock for. This must match what's in &lt;code&gt;package.json&lt;/code&gt;.</source>
          <target state="translated">これがパッケージロックの対象となるパッケージの名前。これは &lt;code&gt;package.json&lt;/code&gt; の内容と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="e79d3f28fa5fd1c774388ab79c0b8dacc3c77bf5" translate="yes" xml:space="preserve">
          <source>The name will probably be passed as an argument to require(), so it should be something short, but also reasonably descriptive.</source>
          <target state="translated">名前はおそらく require()の引数として渡されるでしょうから、短いものであるべきですが、それなりに説明的なものでなければなりません。</target>
        </trans-unit>
        <trans-unit id="ac151ac06bbe0e6d8b52217c5c1fe1df05f721db" translate="yes" xml:space="preserve">
          <source>The next chapter explains how to install npm. After you install npm, you will use a terminal console to download packages. This is explained in later chapters.</source>
          <target state="translated">次の章では、npmのインストール方法を説明します。npmをインストールしたら、ターミナルコンソールを使ってパッケージをダウンロードします。これについては後の章で説明します。</target>
        </trans-unit>
        <trans-unit id="8d06421bc5c51e19040e6aa2d0eb1f6ae3904d5d" translate="yes" xml:space="preserve">
          <source>The node version to use when checking a package's &lt;code&gt;engines&lt;/code&gt; map.</source>
          <target state="translated">パッケージの &lt;code&gt;engines&lt;/code&gt; マップをチェックするときに使用するノードバージョン。</target>
        </trans-unit>
        <trans-unit id="8a27614d0e88de1555ad5c78811af4d9417c2341" translate="yes" xml:space="preserve">
          <source>The non-reversible identifiers are a sha256 of a session-specific UUID and the value being replaced, ensuring a consistent value within the payload that is different between runs.</source>
          <target state="translated">非可逆的な識別子は、セッション固有のUUIDと置換される値のsha256であり、実行間で異なるペイロード内の一貫した値を保証します。</target>
        </trans-unit>
        <trans-unit id="a2a5a195eb441aec870786edfe0275445f3fef6c" translate="yes" xml:space="preserve">
          <source>The npm cache exists, and the package tarballs within it aren't corrupt.</source>
          <target state="translated">npm キャッシュは存在し、その中の tarball パッケージは壊れていません。</target>
        </trans-unit>
        <trans-unit id="d207a6d4c5b23b1e12686f188e05bd2f772db9e2" translate="yes" xml:space="preserve">
          <source>The npm cache is strictly a cache: it should not be relied upon as a persistent and reliable data store for package data. npm makes no guarantee that a previously-cached piece of data will be available later, and will automatically delete corrupted contents. The primary guarantee that the cache makes is that, if it does return data, that data will be exactly the data that was inserted.</source>
          <target state="translated">npm のキャッシュはあくまでもキャッシュであり、パッケージデータの永続的で信頼性の高いデータストアとして信頼すべきものではありません。 npm は、以前にキャッシュされたデータが後で利用可能になることを保証せず、破損したコンテンツを自動的に削除します。キャッシュが主に保証するのは、もしデータを返したとしても、そのデータが挿入されたデータと正確に一致するということです。</target>
        </trans-unit>
        <trans-unit id="01de449c9653f0b31fab2e417ee19b598245d82b" translate="yes" xml:space="preserve">
          <source>The npm config files.</source>
          <target state="translated">npmの設定ファイルです。</target>
        </trans-unit>
        <trans-unit id="ddbeb18d24361c229e34e04f3236d666c9ffdb2a" translate="yes" xml:space="preserve">
          <source>The npm registry does not try to correlate the information in these headers with any authenticated accounts that may be used in the same requests.</source>
          <target state="translated">npm レジストリは、これらのヘッダの情報と、同じリクエストで使用される可能性のある認証済みアカウントとの関連付けを試みません。</target>
        </trans-unit>
        <trans-unit id="c017372e76b295e125fe30feb86acd2c110d08e8" translate="yes" xml:space="preserve">
          <source>The number of ms before cache folder lockfiles are considered stale.</source>
          <target state="translated">キャッシュフォルダのロックファイルが古いとみなされるまでのミリ秒数。</target>
        </trans-unit>
        <trans-unit id="f256d0b310ccacfeda313bbb54a752748c950be5" translate="yes" xml:space="preserve">
          <source>The official public npm registry is at &lt;a href=&quot;https://registry.npmjs.org/&quot;&gt;https://registry.npmjs.org/&lt;/a&gt;. It is powered by a CouchDB database, of which there is a public mirror at &lt;a href=&quot;https://skimdb.npmjs.com/registry&quot;&gt;https://skimdb.npmjs.com/registry&lt;/a&gt;. The code for the couchapp is available at &lt;a href=&quot;https://github.com/npm/npm-registry-couchapp&quot;&gt;https://github.com/npm/npm-registry-couchapp&lt;/a&gt;.</source>
          <target state="translated">公式の公開npmレジストリは&lt;a href=&quot;https://registry.npmjs.org/&quot;&gt;https://registry.npmjs.org/にあります&lt;/a&gt;。CouchDBデータベースを利用しており、&lt;a href=&quot;https://skimdb.npmjs.com/registry&quot;&gt;https：//skimdb.npmjs.com/registryに&lt;/a&gt;公開ミラーがあります。couchappのコードは&lt;a href=&quot;https://github.com/npm/npm-registry-couchapp&quot;&gt;https://github.com/npm/npm-registry-couchapp&lt;/a&gt;で入手できます。</target>
        </trans-unit>
        <trans-unit id="fbe36bafd9f7a1d5c3d02b8f2f8f5968d4f146bb" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;files&lt;/code&gt; field is an array of file patterns that describes the entries to be included when your package is installed as a dependency. File patterns follow a similar syntax to &lt;code&gt;.gitignore&lt;/code&gt;, but reversed: including a file, directory, or glob pattern (&lt;code&gt;*&lt;/code&gt;, &lt;code&gt;**/*&lt;/code&gt;, and such) will make it so that file is included in the tarball when it's packed. Omitting the field will make it default to &lt;code&gt;[&quot;*&quot;]&lt;/code&gt;, which means it will include all files.</source>
          <target state="translated">オプションの &lt;code&gt;files&lt;/code&gt; フィールドは、パッケージが依存関係としてインストールされるときに含まれるエントリを記述するファイルパターンの配列です。ファイルパターンは &lt;code&gt;.gitignore&lt;/code&gt; と同様の構文に従いますが、逆になります。ファイル、ディレクトリ、またはグロブパターン（ &lt;code&gt;*&lt;/code&gt; 、 &lt;code&gt;**/*&lt;/code&gt; など）を含めると、ファイルがパックされたときにtarballに含まれるようになります。フィールドを省略すると、デフォルトで &lt;code&gt;[&quot;*&quot;]&lt;/code&gt; になります。つまり、すべてのファイルが含まれます。</target>
        </trans-unit>
        <trans-unit id="c9bd0c5b12efbecf59f18b7ecedda74ffb026ad5" translate="yes" xml:space="preserve">
          <source>The package contents should reside in a subfolder inside the tarball (usually it is called &lt;code&gt;package/&lt;/code&gt;). npm strips one directory layer when installing the package (an equivalent of &lt;code&gt;tar x --strip-components=1&lt;/code&gt; is run).</source>
          <target state="translated">パッケージの内容は、tarball内のサブフォルダーに常駐する必要があります（通常、 &lt;code&gt;package/&lt;/code&gt; と呼ばれます）。npmは、パッケージのインストール時に1つのディレクトリレイヤーを &lt;code&gt;tar x --strip-components=1&lt;/code&gt; ます（tar x --strip-components = 1に相当するものが実行されます）。</target>
        </trans-unit>
        <trans-unit id="c7a1c761f02818d99cf5b00ce8a09e149e7e9f96" translate="yes" xml:space="preserve">
          <source>The package is not already installed globally, or</source>
          <target state="translated">パッケージがグローバルにインストールされていないか</target>
        </trans-unit>
        <trans-unit id="7da3f673b988e46b03dcc1c1556673e42a65a4df" translate="yes" xml:space="preserve">
          <source>The package must contain a &lt;code&gt;package.json&lt;/code&gt; file with &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;version&lt;/code&gt; properties.</source>
          <target state="translated">パッケージには、 &lt;code&gt;name&lt;/code&gt; と &lt;code&gt;version&lt;/code&gt; プロパティを含む &lt;code&gt;package.json&lt;/code&gt; ファイルが含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="0835e7c9ad6b78e1354ef995a30ca6441931e6e2" translate="yes" xml:space="preserve">
          <source>The package name can be optionally prefixed with a scope. See &lt;code&gt;&lt;a href=&quot;../misc/scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt;. The scope must be preceded by an @-symbol and followed by a slash.</source>
          <target state="translated">オプションで、パッケージ名の前にスコープを付けることができます。 &lt;code&gt;&lt;a href=&quot;../misc/scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt; を参照してください。スコープの前には@記号があり、その後にスラッシュが必要です。</target>
        </trans-unit>
        <trans-unit id="37ceff0dc9931da7b49be36503ae665194c14c21" translate="yes" xml:space="preserve">
          <source>The package will be removed from listings on the site within a few minutes of making it private.</source>
          <target state="translated">パッケージは非公開にしてから数分でサイトのリスティングから削除されます。</target>
        </trans-unit>
        <trans-unit id="cd8d1bccb23f58bbd972fba7b3d5c6f77d216adc" translate="yes" xml:space="preserve">
          <source>The package.json &quot;config&quot; keys are overwritten in the environment if there is a config param of &lt;code&gt;&amp;lt;name&amp;gt;[@&amp;lt;version&amp;gt;]:&amp;lt;key&amp;gt;&lt;/code&gt;. For example, if the package.json has this:</source>
          <target state="translated">&lt;code&gt;&amp;lt;name&amp;gt;[@&amp;lt;version&amp;gt;]:&amp;lt;key&amp;gt;&lt;/code&gt; パラメーターがある場合、package.json &quot;config&quot;キーは環境で上書きされます。たとえば、package.jsonに次のような場合：</target>
        </trans-unit>
        <trans-unit id="04334ee9c160b44e1dc91f20944c2f1803c42b1d" translate="yes" xml:space="preserve">
          <source>The package.json File</source>
          <target state="translated">package.jsonファイル</target>
        </trans-unit>
        <trans-unit id="b697535570b02d55c6572fa72a1b5be12ba3839c" translate="yes" xml:space="preserve">
          <source>The package.json fields are tacked onto the &lt;code&gt;npm_package_&lt;/code&gt; prefix. So, for instance, if you had &lt;code&gt;{&quot;name&quot;:&quot;foo&quot;, &quot;version&quot;:&quot;1.2.5&quot;}&lt;/code&gt; in your package.json file, then your package scripts would have the &lt;code&gt;npm_package_name&lt;/code&gt; environment variable set to &quot;foo&quot;, and the &lt;code&gt;npm_package_version&lt;/code&gt; set to &quot;1.2.5&quot;. You can access these variables in your code with &lt;code&gt;process.env.npm_package_name&lt;/code&gt; and &lt;code&gt;process.env.npm_package_version&lt;/code&gt;, and so on for other fields.</source>
          <target state="translated">package.jsonフィールドは &lt;code&gt;npm_package_&lt;/code&gt; プレフィックスに追加されます。したがって、たとえば、package.jsonファイルに &lt;code&gt;{&quot;name&quot;:&quot;foo&quot;, &quot;version&quot;:&quot;1.2.5&quot;}&lt;/code&gt; がある場合、パッケージスクリプトでは &lt;code&gt;npm_package_name&lt;/code&gt; 環境変数が &quot;foo&quot;に設定されます。そして &lt;code&gt;npm_package_version&lt;/code&gt; は「1.2.5」に設定します。他のフィールドについては、コード内で &lt;code&gt;process.env.npm_package_name&lt;/code&gt; および &lt;code&gt;process.env.npm_package_version&lt;/code&gt; などを使用してこれらの変数にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="802f4781b985eef7776f1c283e1080abda840c8b" translate="yes" xml:space="preserve">
          <source>The path to the code that contains the vulnerability.</source>
          <target state="translated">脆弱性を含むコードへのパス。</target>
        </trans-unit>
        <trans-unit id="1e620ff2fae333f1325a2521f35f69cb53a2f3a6" translate="yes" xml:space="preserve">
          <source>The presence of a package lock changes the installation behavior such that:</source>
          <target state="translated">パッケージロックがあると、インストールの動作が変わります。</target>
        </trans-unit>
        <trans-unit id="1ea7dd04ff070eb43aa2884edd3481a5ee1b9c1f" translate="yes" xml:space="preserve">
          <source>The primary npm registry, &lt;code&gt;registry.npmjs.com&lt;/code&gt;, or another service that uses the registry API, is available.</source>
          <target state="translated">プライマリnpmレジストリ &lt;code&gt;registry.npmjs.com&lt;/code&gt; またはレジストリAPIを使用する別のサービスが利用可能です。</target>
        </trans-unit>
        <trans-unit id="707f3c058524a5a65c8ca2b32b8db9b2e0105259" translate="yes" xml:space="preserve">
          <source>The program to use to view help content.</source>
          <target state="translated">ヘルプコンテンツを表示するために使用するプログラムです。</target>
        </trans-unit>
        <trans-unit id="e6c2f65f573cd49594bbeaf9f38f0153e80a7e9e" translate="yes" xml:space="preserve">
          <source>The project &lt;strong&gt;must&lt;/strong&gt; have an existing &lt;code&gt;package-lock.json&lt;/code&gt; or &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt;.</source>
          <target state="translated">このプロジェクトは、&lt;strong&gt;必要があり&lt;/strong&gt;、既存の持っている &lt;code&gt;package-lock.json&lt;/code&gt; または &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b06b4c078fa7c2dceae074827cec8432c8de5cdb" translate="yes" xml:space="preserve">
          <source>The purpose for this behavior is twofold. First, prerelease versions frequently are updated very quickly, and contain many breaking changes that are (by the author's design) not yet fit for public consumption. Therefore, by default, they are excluded from range matching semantics.</source>
          <target state="translated">この動作の目的は2つあります。第一に、プレリリース版は頻繁に非常に迅速に更新され、(作者の設計によって)まだ一般消費には適していない多くの破壊的な変更が含まれています。そのため、デフォルトでは、それらは範囲マッチングのセマンティクスから除外されます。</target>
        </trans-unit>
        <trans-unit id="325c5946ddd62d8878a09f28825bd3c599cbe68c" translate="yes" xml:space="preserve">
          <source>The range &lt;code&gt;1.2.7 || &amp;gt;=1.2.9 &amp;lt;2.0.0&lt;/code&gt; would match the versions &lt;code&gt;1.2.7&lt;/code&gt;, &lt;code&gt;1.2.9&lt;/code&gt;, and &lt;code&gt;1.4.6&lt;/code&gt;, but not the versions &lt;code&gt;1.2.8&lt;/code&gt; or &lt;code&gt;2.0.0&lt;/code&gt;.</source>
          <target state="translated">範囲 &lt;code&gt;1.2.7 || &amp;gt;=1.2.9 &amp;lt;2.0.0&lt;/code&gt; バージョン一致し &lt;code&gt;1.2.7&lt;/code&gt; 、 &lt;code&gt;1.2.9&lt;/code&gt; および &lt;code&gt;1.4.6&lt;/code&gt; はなく、バージョン &lt;code&gt;1.2.8&lt;/code&gt; または &lt;code&gt;2.0.0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="be2f49fab5b3d5f5fb56dec08d654fe83582f26d" translate="yes" xml:space="preserve">
          <source>The readme file is created by the package developer. If done well, it explains the purpose of the package, and how to use it.</source>
          <target state="translated">readme ファイルはパッケージ開発者によって作成されます。うまくいけば、パッケージの目的や使い方を説明してくれます。</target>
        </trans-unit>
        <trans-unit id="7e949b5c0cab13fc1b44fb683c8942d1ea6a5616" translate="yes" xml:space="preserve">
          <source>The recommended use-case for &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; is applications deployed through the publishing process on the registry: for example, daemons and command-line tools intended as global installs or &lt;code&gt;devDependencies&lt;/code&gt;. It's strongly discouraged for library authors to publish this file, since that would prevent end users from having control over transitive dependency updates.</source>
          <target state="translated">&lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; の推奨されるユースケースは、レジストリの公開プロセスを通じてデプロイされたアプリケーションです。たとえば、グローバルインストールまたは &lt;code&gt;devDependencies&lt;/code&gt; を目的としたデーモンやコマンドラインツールです。ライブラリの作成者がこのファイルを公開することは強くお勧めしません。エンドユーザーが推移的な依存関係の更新を制御できないためです。</target>
        </trans-unit>
        <trans-unit id="1e2413acac0a2b86aa89824837e669a7eede9735" translate="yes" xml:space="preserve">
          <source>The recovery procedure is explained below.</source>
          <target state="translated">以下、回復の手順を説明します。</target>
        </trans-unit>
        <trans-unit id="0096058edfb5a1e4a18f19b29c58e0e55033d9ce" translate="yes" xml:space="preserve">
          <source>The registry URL used is determined by the scope of the package (see &lt;code&gt;&lt;a href=&quot;scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt;). If no scope is specified, the default registry is used, which is supplied by the &lt;code&gt;registry&lt;/code&gt; config parameter. See &lt;code&gt;&lt;a href=&quot;../cli/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../files/npmrc&quot;&gt;npmrc&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; for more on managing npm's configuration.</source>
          <target state="translated">使用されるレジストリURLは、パッケージのスコープによって決定されます（ &lt;code&gt;&lt;a href=&quot;scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt; を参照）。スコープが指定されていない場合、デフォルトのレジストリーが使用されます。これは、 &lt;code&gt;registry&lt;/code&gt; configパラメーターによって提供されます。npmの構成管理の詳細については、 &lt;code&gt;&lt;a href=&quot;../cli/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;../files/npmrc&quot;&gt;npmrc&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="a3939408bbfae593730dd72d20cffb52684e34a1" translate="yes" xml:space="preserve">
          <source>The registry you installed from is no longer available, or allows mutation of versions (unlike the primary npm registry), and a different version of a package exists under the same version number now.</source>
          <target state="translated">インストール元のレジストリが利用できなくなったか、バージョンの変異を許可している (プライマリの npm レジストリとは異なります)ため、異なるバージョンのパッケージが同じバージョン番号の下に存在していることになります。</target>
        </trans-unit>
        <trans-unit id="559e5c229b145c643f469b3ce510d7341ca8cafe" translate="yes" xml:space="preserve">
          <source>The registry you want to send cli metrics to if &lt;code&gt;send-metrics&lt;/code&gt; is true.</source>
          <target state="translated">&lt;code&gt;send-metrics&lt;/code&gt; がtrueの場合にcliメトリックを送信するレジストリ。</target>
        </trans-unit>
        <trans-unit id="666df3062df256cef99167f2b17611c095d94c85" translate="yes" xml:space="preserve">
          <source>The root cache folder.</source>
          <target state="translated">ルートキャッシュフォルダ。</target>
        </trans-unit>
        <trans-unit id="ed9a2781d98bba491623fb04817b10f26ccb5faa" translate="yes" xml:space="preserve">
          <source>The scope is optional and follows the usual rules for &lt;code&gt;&lt;a href=&quot;../misc/scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">スコープはオプションであり、 &lt;code&gt;&lt;a href=&quot;../misc/scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt; の通常のルールに従います。</target>
        </trans-unit>
        <trans-unit id="0e6aa8591762c7a597f8099ea3c554f10effabf4" translate="yes" xml:space="preserve">
          <source>The second line is the equivalent of doing:</source>
          <target state="translated">2行目は「する」ことに相当します。</target>
        </trans-unit>
        <trans-unit id="60a2a840ccc50f59dd9c59ef8b0aee3c9287767f" translate="yes" xml:space="preserve">
          <source>The semantic version range that describes which versions contain a fix for the vulnerability.</source>
          <target state="translated">どのバージョンに脆弱性の修正が含まれているかを記述した意味的なバージョン範囲です。</target>
        </trans-unit>
        <trans-unit id="1b4b668b40c2e51fa515ec5287c49bbc597981a9" translate="yes" xml:space="preserve">
          <source>The semantic versioner for npm.</source>
          <target state="translated">npm 用のセマンティックバージョナー。</target>
        </trans-unit>
        <trans-unit id="fbe530a06042228d2c8a0cb5856ee7abaad61c18" translate="yes" xml:space="preserve">
          <source>The severity of the vulnerability, determined by the impact and exploitability of the vulnerability in its most common use case.</source>
          <target state="translated">脆弱性の深刻度は、最も一般的なユースケースにおける脆弱性の影響度と悪用可能性によって決定されます。</target>
        </trans-unit>
        <trans-unit id="f5097eaac6451577b3a4a3bbda94587cc8e99adb" translate="yes" xml:space="preserve">
          <source>The shared secret will be sent along to the URL endpoint so you can verify the request came from your own configured hook.</source>
          <target state="translated">共有されたシークレットは URL エンドポイントに送られるので、リクエストが自分の設定したフックから来たことを確認できます。</target>
        </trans-unit>
        <trans-unit id="30a7ebf312f4ceb49f4e7fab5eb3641fe7aaf004" translate="yes" xml:space="preserve">
          <source>The shell to run for the &lt;code&gt;npm explore&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;npm explore&lt;/code&gt; コマンドで実行するシェル。</target>
        </trans-unit>
        <trans-unit id="76c1c67027051beb641c45fe3e8fab5867b2a449" translate="yes" xml:space="preserve">
          <source>The shell to use for scripts run with the &lt;code&gt;npm run&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;npm run&lt;/code&gt; コマンドで実行されるスクリプトに使用するシェル。</target>
        </trans-unit>
        <trans-unit id="a9a2f29747cf28fbd7beb5fe162efdb801fcb2fd" translate="yes" xml:space="preserve">
          <source>The simplest way to avoid semver problems with tags is to use tags that do not begin with a number or the letter &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">タグに関するいくつかの問題を回避する最も簡単な方法は、数字または文字 &lt;code&gt;v&lt;/code&gt; で始まらないタグ​​を使用することです。</target>
        </trans-unit>
        <trans-unit id="a561a9ddcba2426edc04e285887cac38cbc9daed" translate="yes" xml:space="preserve">
          <source>The string that starts all the debugging log output.</source>
          <target state="translated">すべてのデバッグログ出力を開始する文字列。</target>
        </trans-unit>
        <trans-unit id="f66d25750206f6ec2e1aa2db778f68e14f901519" translate="yes" xml:space="preserve">
          <source>The super admin is the only person who can add users to the org because it impacts the monthly bill. The super admin will use the website to manage membership. Every org has a &lt;code&gt;developers&lt;/code&gt; team that all users are automatically added to.</source>
          <target state="translated">特権管理者は、毎月の請求に影響するため、組織にユーザーを追加できる唯一の人です。特権管理者は、ウェブサイトを使用してメンバーシップを管理します。すべての組織には、すべてのユーザーが自動的に追加される &lt;code&gt;developers&lt;/code&gt; チームがあります。</target>
        </trans-unit>
        <trans-unit id="f17731aa104655b3c9c267b933a3fc18b2eb8b9a" translate="yes" xml:space="preserve">
          <source>The synopsis above loads the completions into your current shell. Adding it to your ~/.bashrc or ~/.zshrc will make the completions available everywhere:</source>
          <target state="translated">上のシノプシスは、現在のシェルに補完をロードします。これを ~/.bashrc や ~/.zshrc に追加すると、どこでも補完が利用できるようになります。</target>
        </trans-unit>
        <trans-unit id="1ead263200558cf5afddb7e97f5d0eb408f1639b" translate="yes" xml:space="preserve">
          <source>The team admin is the person who manages team creation, team membership, and package access for teams. The team admin grants package access to teams, not individuals.</source>
          <target state="translated">チーム管理者は、チームの作成、チームメンバーシップ、チームのパッケージアクセスを管理する人です。チーム管理者は、個人ではなくチームにパッケージアクセスを許可します。</target>
        </trans-unit>
        <trans-unit id="436a611a2e0e43ff49c3793780e640475430f423" translate="yes" xml:space="preserve">
          <source>The token is not derived from your password, but changing your password will invalidate all tokens. The token will be valid until the password is changed. You can also invalidate a single token by logging out on a machine that is logged in with that token.</source>
          <target state="translated">トークンはパスワードから派生したものではありませんが、パスワードを変更するとすべてのトークンが無効になります。トークンは、パスワードが変更されるまで有効です。また、そのトークンでログインしているマシンでログアウトすることで、1つのトークンを無効にすることもできます。</target>
        </trans-unit>
        <trans-unit id="7209e1ab85f12bd0f869231592507b455056ba97" translate="yes" xml:space="preserve">
          <source>The tree is walked and any missing dependencies are installed in the usual fashion.</source>
          <target state="translated">ツリーが歩かれ、不足している依存関係は通常の方法でインストールされます。</target>
        </trans-unit>
        <trans-unit id="901a4e762caa7812f1008ebe29b6e595ce51ff59" translate="yes" xml:space="preserve">
          <source>The tree shown is the logical dependency tree, based on package dependencies, not the physical layout of your node_modules folder.</source>
          <target state="translated">表示されているツリーは、パッケージの依存関係に基づく論理的な依存関係ツリーであり、node_modulesフォルダの物理的なレイアウトではありません。</target>
        </trans-unit>
        <trans-unit id="91d481d638cade3bfeeeda3e13f6433f710db02a" translate="yes" xml:space="preserve">
          <source>The url to the project homepage.</source>
          <target state="translated">プロジェクトのホームページへのURL。</target>
        </trans-unit>
        <trans-unit id="3929799d0a19d05c1e8a3aa08955b9b5f8c01a19" translate="yes" xml:space="preserve">
          <source>The url to your project's issue tracker and / or the email address to which issues should be reported. These are helpful for people who encounter issues with your package.</source>
          <target state="translated">あなたのプロジェクトのイシュートラッカーへのURL、および/または問題が報告されるべき電子メールのアドレスです。これらは、あなたのパッケージで問題が発生したときに役立ちます。</target>
        </trans-unit>
        <trans-unit id="34b0b3dc9483237c15e23719e8cdd7b65870f304" translate="yes" xml:space="preserve">
          <source>The username, password, and email are read in from prompts.</source>
          <target state="translated">ユーザー名、パスワード、メールはプロンプトから読み込まれます。</target>
        </trans-unit>
        <trans-unit id="542f55a20577b1bd7f2e7b5677fac1af8a89ef15" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;npm init&lt;/code&gt; should use by default for the package author's email.</source>
          <target state="translated">値 &lt;code&gt;npm init&lt;/code&gt; は、デフォルトでパッケージ作成者の電子メールに使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="9ddb785f8e73da89fbc62ae3da9bb4d53cf27641" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;npm init&lt;/code&gt; should use by default for the package author's homepage.</source>
          <target state="translated">値 &lt;code&gt;npm init&lt;/code&gt; は、デフォルトでパッケージ作成者のホームページに使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="12f69f86bcde9d4c15acc7fcd919187887c941f4" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;npm init&lt;/code&gt; should use by default for the package author's name.</source>
          <target state="translated">値 &lt;code&gt;npm init&lt;/code&gt; は、デフォルトでパッケージ作成者の名前に使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="7ea162733b47518881f1ee8ac35ee87f82f0d8ad" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;npm init&lt;/code&gt; should use by default for the package license.</source>
          <target state="translated">値 &lt;code&gt;npm init&lt;/code&gt; は、デフォルトでパッケージライセンスに使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="5e938bee267dfa2c942de7ecae952efd6db6542e" translate="yes" xml:space="preserve">
          <source>The value that &lt;code&gt;npm init&lt;/code&gt; should use by default for the package version number, if not already set in package.json.</source>
          <target state="translated">値 &lt;code&gt;npm init&lt;/code&gt; すでにpackage.jsonに設定されていない場合は、パッケージのバージョン番号にデフォルトで使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="3262aca4feb9e7d5f88a9f66895415561511d6ba" translate="yes" xml:space="preserve">
          <source>The version of the package this is a package-lock for. This must match what's in &lt;code&gt;package.json&lt;/code&gt;.</source>
          <target state="translated">これがパッケージロックであるパッケージのバージョン。これは &lt;code&gt;package.json&lt;/code&gt; の内容と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="ca820b1c00068405b707b0523177e17868ea28de" translate="yes" xml:space="preserve">
          <source>The welcome message has links to helpful resources; you might want to flag it for later reference.</source>
          <target state="translated">ウェルカムメッセージには有用なリソースへのリンクがあります。</target>
        </trans-unit>
        <trans-unit id="2229e2aee127ce204a467ac0cfded102f8700e13" translate="yes" xml:space="preserve">
          <source>Then &lt;code&gt;npm update&lt;/code&gt; will install &lt;code&gt;dep1@0.4.1&lt;/code&gt;, because that is the highest-sorting version that satisfies &lt;code&gt;^0.4.0&lt;/code&gt; (&lt;code&gt;&amp;gt;= 0.4.0 &amp;lt;0.5.0&lt;/code&gt;)</source>
          <target state="translated">次に、 &lt;code&gt;npm update&lt;/code&gt; は &lt;code&gt;dep1@0.4.1&lt;/code&gt; をインストールします。これは、 &lt;code&gt;^0.4.0&lt;/code&gt; （ &lt;code&gt;&amp;gt;= 0.4.0 &amp;lt;0.5.0&lt;/code&gt; ）を満たす最も高いソートバージョンであるためです。</target>
        </trans-unit>
        <trans-unit id="ae6a4d7cb01dc3e67960c5080562e924035de7d8" translate="yes" xml:space="preserve">
          <source>Then &lt;code&gt;npm update&lt;/code&gt; will install &lt;code&gt;dep1@1.2.2&lt;/code&gt;, because &lt;code&gt;1.2.2&lt;/code&gt; is &lt;code&gt;latest&lt;/code&gt; and &lt;code&gt;1.2.2&lt;/code&gt; satisfies &lt;code&gt;^1.1.1&lt;/code&gt;.</source>
          <target state="translated">次に、 &lt;code&gt;1.2.2&lt;/code&gt; が &lt;code&gt;latest&lt;/code&gt; あり、 &lt;code&gt;1.2.2&lt;/code&gt; が &lt;code&gt;^1.1.1&lt;/code&gt; 満たすため、 &lt;code&gt;npm update&lt;/code&gt; は &lt;code&gt;dep1@1.2.2&lt;/code&gt; をインストールします。</target>
        </trans-unit>
        <trans-unit id="78c1b60bb64c343bf8092563acf190118600a330" translate="yes" xml:space="preserve">
          <source>Then go into the node-repl, and try using require(&quot;my-thing&quot;) to bring in your module's main module.</source>
          <target state="translated">それからnode-replに入って、require(&quot;my-thing&quot;)を使ってモジュールのメインモジュールを導入してみてください。</target>
        </trans-unit>
        <trans-unit id="41c4956c52a9e102eb2b215d8bea52527bf3f432" translate="yes" xml:space="preserve">
          <source>Then include a file named &lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt; at the top level of the package.</source>
          <target state="translated">次に、パッケージの最上位に &lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt; という名前のファイルを含めます。</target>
        </trans-unit>
        <trans-unit id="47997e7d7bdd4f7cbd4932dbe6ce4accf3fd4161" translate="yes" xml:space="preserve">
          <source>Then you can check in the &lt;a href=&quot;../files/npmrc&quot;&gt;&lt;code&gt;.npmrc&lt;/code&gt;&lt;/a&gt; file, replacing your token with the environment variable.</source>
          <target state="translated">次に、&lt;a href=&quot;../files/npmrc&quot;&gt; &lt;code&gt;.npmrc&lt;/code&gt; &lt;/a&gt;ファイルをチェックインして、トークンを環境変数に置き換えます。</target>
        </trans-unit>
        <trans-unit id="9894f0ca73f13327c0779c9a1569a914ead3e20a" translate="yes" xml:space="preserve">
          <source>There are a few things that you need to do above the simple steps that your users will do to install your program.</source>
          <target state="translated">あなたのユーザーがあなたのプログラムをインストールするために行う簡単なステップの上に、あなたがする必要があるいくつかのことがあります。</target>
        </trans-unit>
        <trans-unit id="e91d83768505bced45095c83b9060d73c30bc285" translate="yes" xml:space="preserve">
          <source>There are additional resources for beginners and for everyone at the end of this chapter in the &quot;Learn More&quot; section.</source>
          <target state="translated">この章の最後の「もっと詳しく」には、初心者向けの追加リソースと、みんなのためのリソースがあります。</target>
        </trans-unit>
        <trans-unit id="e1c1a11e380a4f3a26c31bd9924e5a0f626552c6" translate="yes" xml:space="preserve">
          <source>There are several settings that you can use in the new token. Please see this &lt;a href=&quot;../getting-started/working_with_tokens&quot;&gt;doc&lt;/a&gt; for details.</source>
          <target state="translated">新しいトークンで使用できる設定がいくつかあります。詳細については、この&lt;a href=&quot;../getting-started/working_with_tokens&quot;&gt;ドキュメント&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="cea595242b6d9737506ca7d3fc2f9ce5012a4cac" translate="yes" xml:space="preserve">
          <source>There are some very rare and pathological edge-cases where a cycle can cause npm to try to install a never-ending tree of packages. Here is the simplest case:</source>
          <target state="translated">非常に稀で病的なエッジケースがあり、そのサイクルによって npm が無限に続くパッケージのツリーをインストールしようとすることがあります。ここに最も単純なケースがあります。</target>
        </trans-unit>
        <trans-unit id="f63ee96b3ad67d6780e295e796b912d1d387ce2d" translate="yes" xml:space="preserve">
          <source>There are three levels of org users:</source>
          <target state="translated">orgユーザーには3つのレベルがあります。</target>
        </trans-unit>
        <trans-unit id="f5bee0534c6f9bb2a0de1f990c02daa01b064916" translate="yes" xml:space="preserve">
          <source>There are two basic ways to create a package.json file.</source>
          <target state="translated">package.jsonファイルを作成するには、基本的に2つの方法があります。</target>
        </trans-unit>
        <trans-unit id="cd4747399abfb3c1cd76a0a0544e9b48296a1504" translate="yes" xml:space="preserve">
          <source>There are two levels of authentication, &lt;em&gt;&lt;strong&gt;auth-only&lt;/strong&gt;&lt;/em&gt; and &lt;em&gt;&lt;strong&gt;auth-and-writes&lt;/strong&gt;&lt;/em&gt;.</source>
          <target state="translated">認証には、&lt;em&gt;&lt;strong&gt;auth-only&lt;/strong&gt;&lt;/em&gt;と&lt;em&gt;&lt;strong&gt;auth-and-writesの&lt;/strong&gt;&lt;/em&gt; 2つのレベルがあり&lt;em&gt;&lt;strong&gt;ます&lt;/strong&gt;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="222abb41d8c271554b2c8ac41c6bb4a33f2f9632" translate="yes" xml:space="preserve">
          <source>There are two main commands:</source>
          <target state="translated">主に2つのコマンドがあります。</target>
        </trans-unit>
        <trans-unit id="44c65e0bc288743fc0090892e4b479905348a656" translate="yes" xml:space="preserve">
          <source>There are two ways to install npm packages: locally or globally. Choose which kind of installation to use based on how you want to use the package.</source>
          <target state="translated">npm パッケージをインストールするには、ローカルとグローバルの 2 つの方法があります。パッケージをどのように使いたいかに応じて、どちらのインストール方法を使うかを選択してください。</target>
        </trans-unit>
        <trans-unit id="f76c4bb8aee7179c5132d53a4f786447f0061dda" translate="yes" xml:space="preserve">
          <source>There is currently no method exposed through npm to inspect or directly manage the contents of this cache. In order to access it, &lt;code&gt;cacache&lt;/code&gt; must be used directly.</source>
          <target state="translated">現在、このキャッシュの内容を検査または直接管理するためのnpmを通じて公開されるメソッドはありません。アクセスするには、 &lt;code&gt;cacache&lt;/code&gt; を直接使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="168bdd4395c5e0196d9aa6f64ea3b08100050e83" translate="yes" xml:space="preserve">
          <source>There is nothing special about the way Node treats scope folders. This simply requires the &lt;code&gt;mypackage&lt;/code&gt; module in the folder named &lt;code&gt;@myorg&lt;/code&gt;.</source>
          <target state="translated">Nodeがスコープフォルダーを処理する方法については、特別なことは何もありません。これには、 &lt;code&gt;@myorg&lt;/code&gt; という名前のフォルダーに &lt;code&gt;mypackage&lt;/code&gt; モジュールが必要です。</target>
        </trans-unit>
        <trans-unit id="056811685601e94a316aaea43434807672079179" translate="yes" xml:space="preserve">
          <source>There is plenty of room on the registry.</source>
          <target state="translated">登記簿には余裕があります。</target>
        </trans-unit>
        <trans-unit id="2979ebe51075c229a4def0f53c216e2ee22e955e" translate="yes" xml:space="preserve">
          <source>There sometimes arise cases where a user publishes a module, and then later, some other user wants to use that name. Here are some common ways that happens (each of these is based on actual events.)</source>
          <target state="translated">あるユーザがモジュールを公開した後、後になって他のユーザがその名前を使いたいと言ってくることがあります。以下にそのようなことが起こる一般的な方法をいくつか紹介します (それぞれの方法は実際のイベントに基づいています)。</target>
        </trans-unit>
        <trans-unit id="ca92da9acb9651a8eae3f374ed626c4b776241a1" translate="yes" xml:space="preserve">
          <source>These are just a few examples of ways developers use npm. If you'd like to add a bullet point, comment &lt;a href=&quot;https://github.com/npm/docs/issues/944&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">これらは、開発者がnpmを使用する方法のほんの一例です。箇条書きを追加する場合は、&lt;a href=&quot;https://github.com/npm/docs/issues/944&quot;&gt;ここ&lt;/a&gt;にコメントしてください。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
