<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="">
    <body>
      <group id="">
        <trans-unit id="0780ee4d3037396c7a7d02ffc89566e4dde2acc5" translate="yes" xml:space="preserve">
          <source>Other metadata keys that may be set for compatibility with Graphite are &lt;code&gt;'retentions'&lt;/code&gt; , &lt;code&gt;'xFilesFacter'&lt;/code&gt;, and &lt;code&gt;'aggregationMethod'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe82d0a5b19af2624cc25dc854a7c538510956c1" translate="yes" xml:space="preserve">
          <source>Others use an Include directive in the &lt;code&gt;httpd.conf&lt;/code&gt; file like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0ea33f66182e01ea38bf415fe76dcd402aa73c2" translate="yes" xml:space="preserve">
          <source>Otherwise, you can use packages for your distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6078c62e63f1e1882bcd86a1fedb1ee827820223" translate="yes" xml:space="preserve">
          <source>Out of all metrics passed, draws only the N metrics with the highest maximum value in the time period specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c319d30a4dc737eb2d63ac6a808c7afc2d1b94f" translate="yes" xml:space="preserve">
          <source>Overrides the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="ef5bd47984e5b1517db95bb58d7504f60f17df5a" translate="yes" xml:space="preserve">
          <source>POOL_MAX_WORKERS</source>
          <target state="translated">POOL_MAX_WORKERS</target>
        </trans-unit>
        <trans-unit id="89503dc7d9c28a5246b04d7f88815f78b3ee84de" translate="yes" xml:space="preserve">
          <source>Passing alignToFrom=true will instead create buckets starting at the from time. In this case, the bucket for 22:32 depends on the from time. If from=6:30 then the 1hour bucket for 22:32 is 22:30-23:30.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad2357c1392cc603083b9549f5ecfd674bfe704" translate="yes" xml:space="preserve">
          <source>Paths also support the following wildcards, which allows you to identify more than one metric in a single path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ef3e8fe79a500112696b5a36dda62b92692b37e" translate="yes" xml:space="preserve">
          <source>Paths and Wildcards</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16edb06ababf9e5dc0f36c15b1343ca45a160c44" translate="yes" xml:space="preserve">
          <source>Paul J. Davis&amp;rsquo;s &lt;a href=&quot;http://pypi.python.org/pypi/bucky&quot;&gt;Bucky&lt;/a&gt; service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5136ae1b5bfe9175a6ed64915e648bdc240443a7" translate="yes" xml:space="preserve">
          <source>Pencil</source>
          <target state="translated">Pencil</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
        <trans-unit id="0072fb502bd7bc3c4888bd3892e67a4644f825a7" translate="yes" xml:space="preserve">
          <source>Performs a Holt-Winters forecast using the series as input data and plots the area between the upper and lower bands of the predicted forecast deviations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="243af494bf0a4e3a4b5aa019026b3369ff64d61d" translate="yes" xml:space="preserve">
          <source>Performs a Holt-Winters forecast using the series as input data and plots the positive or negative deviation of the series data from the forecast.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4c6633721ae3dcb6719c4ea641994da21498346" translate="yes" xml:space="preserve">
          <source>Performs a Holt-Winters forecast using the series as input data and plots upper and lower bands with the predicted forecast deviations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ada877e6b1f3fed9d187f9f7fefe62d288fb9b" translate="yes" xml:space="preserve">
          <source>Performs a Holt-Winters forecast using the series as input data. Data from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e4998c056483008c59c8bffd4f492d6b6dedb0" translate="yes" xml:space="preserve">
          <source>Performs a query to alias the metrics in seriesList.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c64e8caf40fda7abc99ef7fb0acd07bb5fd29f7" translate="yes" xml:space="preserve">
          <source>Please post any feature requests or bug reports to the &lt;a href=&quot;https://github.com/graphite-project/graphite-web/issues&quot;&gt;GitHub Issues&lt;/a&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f79a28423ed1ae0232efb54ad41227d0955084f3" translate="yes" xml:space="preserve">
          <source>Point</source>
          <target state="translated">Point</target>
        </trans-unit>
        <trans-unit id="2346b215003749197b67af50b6145fedfcd0b979" translate="yes" xml:space="preserve">
          <source>Polymur</source>
          <target state="translated">Polymur</target>
        </trans-unit>
        <trans-unit id="d982048d572052d439989ab8cdf678adcdf6856b" translate="yes" xml:space="preserve">
          <source>Portions of that manual are based on &lt;a href=&quot;https://github.com/brutasse/graphite-api/blob/master/docs/deployment.rst&quot;&gt;Graphite-API deployment manual&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bf8313fe694dfe3a17a350e45d7aad374771f63" translate="yes" xml:space="preserve">
          <source>Positional arguments can be used instead of named ones:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28a788327e8f9765b445cd01278c661b214a40fc" translate="yes" xml:space="preserve">
          <source>Possible values: carbon_ch, fnv1a_ch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84f61cbbb1995f9f44d2f835e4723f56ca065242" translate="yes" xml:space="preserve">
          <source>Post-Install Tasks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="887a36ceed9c22153a349556abb790c09b0c2335" translate="yes" xml:space="preserve">
          <source>Prefix for internal carbon statistics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be499a5cf7cd09b49bbbb5968e88bbdd519fd70c" translate="yes" xml:space="preserve">
          <source>Provide a list of HTTP headers that you want forwarded on from this host when making a request to a remote webapp server in CLUSTER_SERVERS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c0fca320f27b028245227b89786822c1f2dcb13" translate="yes" xml:space="preserve">
          <source>Provides options for:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87349f66d960c921b0bc27b9548b3f6025e85fd2" translate="yes" xml:space="preserve">
          <source>Provides the URL for rendering this graph, suitable for copying and pasting. Note that changing this URL does not affect the chart it came from, i.e. this is not a mechanism for editing the chart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b7dca59be9727e2f9e2e5071d1dd4fa6635ea6b" translate="yes" xml:space="preserve">
          <source>Pull requests for new features or bugfixes should come with tests to demonstrate that your feature or fix actually works. Tests are located in the &lt;code&gt;webapp/tests&lt;/code&gt; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28609c8164f957638b02d964e6891e031e3dc7ed" translate="yes" xml:space="preserve">
          <source>Puts a title at the top of the graph, center aligned. If unset, no title is displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fddfc9916563dac87580161a7b982af5fee25f1" translate="yes" xml:space="preserve">
          <source>Python 2.7 or greater (including experimental Python3 support)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="777785bed7b96e306a829e6f5b979e550de4550c" translate="yes" xml:space="preserve">
          <source>Python2. The Graphite webapp is built on the &lt;a href=&quot;http://www.djangoproject.com/&quot;&gt;Django&lt;/a&gt; web framework and uses the ExtJS javascript GUI toolkit. The graph rendering is done using the Cairo graphics library. The backend and database are written in pure Python.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc6835ce045ca407e1aa42cf034a40b2dc968c7d" translate="yes" xml:space="preserve">
          <source>Querying</source>
          <target state="translated">Querying</target>
        </trans-unit>
        <trans-unit id="ee4165a85d914a5c3d2e51705b7122bb68f7e18b" translate="yes" xml:space="preserve">
          <source>Querying Events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c074e98554f565f8455c45c790bd9fcd85ba58b" translate="yes" xml:space="preserve">
          <source>RELATIVE_TIME is a length of time since the current time. It is always preceded by a minus sign ( - ) and followed by a unit of time. Valid units of time:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a416b6e08119c3144d360e80a2dd99c1750b5eaa" translate="yes" xml:space="preserve">
          <source>REMOTE_EXCLUDE_LOCAL</source>
          <target state="translated">REMOTE_EXCLUDE_LOCAL</target>
        </trans-unit>
        <trans-unit id="b5d581a2e0a24e9460653a22771a43d66f9b1319" translate="yes" xml:space="preserve">
          <source>REMOTE_RENDERING</source>
          <target state="translated">REMOTE_RENDERING</target>
        </trans-unit>
        <trans-unit id="ae1d2d0002411882ff6dcbad08dd7d7e52ba9853" translate="yes" xml:space="preserve">
          <source>REMOTE_RENDER_CONNECT_TIMEOUT</source>
          <target state="translated">REMOTE_RENDER_CONNECT_TIMEOUT</target>
        </trans-unit>
        <trans-unit id="65c74172b574f395f1d97cfc696173de7d70c47a" translate="yes" xml:space="preserve">
          <source>REMOTE_RETRY_DELAY</source>
          <target state="translated">REMOTE_RETRY_DELAY</target>
        </trans-unit>
        <trans-unit id="d199f16652d3777c2e845080ed5a61ef2eefc2be" translate="yes" xml:space="preserve">
          <source>REMOTE_STORE_FORWARD_HEADERS</source>
          <target state="translated">REMOTE_STORE_FORWARD_HEADERS</target>
        </trans-unit>
        <trans-unit id="bbd0d4093f1bce55b5fa29c0bb78232725f76e58" translate="yes" xml:space="preserve">
          <source>REMOTE_STORE_MERGE_RESULTS</source>
          <target state="translated">REMOTE_STORE_MERGE_RESULTS</target>
        </trans-unit>
        <trans-unit id="a15e2b1851ded4a6ee06b6a0beeef9281b082c3e" translate="yes" xml:space="preserve">
          <source>REMOTE_STORE_USE_POST</source>
          <target state="translated">REMOTE_STORE_USE_POST</target>
        </trans-unit>
        <trans-unit id="3fd5ce34da5020572d48f2c195c8a3f1395cfb35" translate="yes" xml:space="preserve">
          <source>REMOTE_USER_BACKEND</source>
          <target state="translated">REMOTE_USER_BACKEND</target>
        </trans-unit>
        <trans-unit id="7962b955d51ee884419c404785db709417d899ff" translate="yes" xml:space="preserve">
          <source>REMOTE_USER_MIDDLEWARE</source>
          <target state="translated">REMOTE_USER_MIDDLEWARE</target>
        </trans-unit>
        <trans-unit id="96421550f0171a9db99f232fe8af9ac14dc10141" translate="yes" xml:space="preserve">
          <source>RENDERING_HOSTS</source>
          <target state="translated">RENDERING_HOSTS</target>
        </trans-unit>
        <trans-unit id="d719b6b0a04200a0dc803133aef4befc1f84c4cd" translate="yes" xml:space="preserve">
          <source>RGB Value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4900d181cdf134756acd4410fe14973c2460a7d" translate="yes" xml:space="preserve">
          <source>RGB can be passed directly in the format #RRGGBB[AA] where RR, GG, and BB are 2-digit hex vaules for red, green and blue, respectively. AA is an optional addition describing the opacity (&amp;ldquo;alpha&amp;rdquo;). Where FF is fully opaque, 00 fully transparent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff2ff3a9dbc1eacafad56724cb3f6303b739b9d" translate="yes" xml:space="preserve">
          <source>RRD support: &lt;a href=&quot;http://oss.oetiker.ch/rrdtool/prog/rrdpython.en.html&quot;&gt;python-rrdtool&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd5de4e96a5a55e296e81350dc2e8e1395c78805" translate="yes" xml:space="preserve">
          <source>RRD_DIR</source>
          <target state="translated">RRD_DIR</target>
        </trans-unit>
        <trans-unit id="873252d8e6da3be60a8828881b9eddd907542ae3" translate="yes" xml:space="preserve">
          <source>Rather than a timestamp being inferred from its position in the archive, timestamps are stored with each point. The timestamps are used during data retrieval to check the validity of the data point. If a timestamp does not match the expected value for its position relative to the beginning of the requested series, it is known to be out of date and a null value is returned</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a6bd3abd467b22f6bb58cb9090385ed170f4844" translate="yes" xml:space="preserve">
          <source>Re-ordering Graphs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="365857586e1c7993ca5537c1dc7618dbccc4f94e" translate="yes" xml:space="preserve">
          <source>Redis TagDB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d1f1ad4c8dead4d2b31a7e1f39e4a2c4d4c0a30" translate="yes" xml:space="preserve">
          <source>Redis database to use with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00cc927d1274473de1534c5a32b084966c00fdfc" translate="yes" xml:space="preserve">
          <source>Redis host to use with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83cd1c7e24862053e5ae9332c99bef2c7a941add" translate="yes" xml:space="preserve">
          <source>Redis port to use with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb449f1487fb5cbb794d53b6bf07053e5c4ac3ec" translate="yes" xml:space="preserve">
          <source>Reduction is performed by matching the reduceNode in each series against the list of reduceMatchers. Then each series is passed to the reduceFunction as arguments in the order given by reduceMatchers. The reduceFunction should yield a single series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afde6c00f187973f28add14d14beff966daa1653" translate="yes" xml:space="preserve">
          <source>Regular expression conditions are treated as being anchored at the start of the value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2331615562093508a8277208999478c2b1e1981c" translate="yes" xml:space="preserve">
          <source>Relay rules are used to send certain metrics to a certain backend. This is handled by the carbon-relay system. It must be running for relaying to work. You can use a regular expression to select the metrics and define the servers to which they should go with the servers line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ea4af908fe06688dd3fc02035189b08293c5074" translate="yes" xml:space="preserve">
          <source>Release Notes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b56a69a06b6072bd1e4501b804a11a58a8bd573b" translate="yes" xml:space="preserve">
          <source>Reload nginx to use the new configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="380b0cd73ae3858c5747e858c6b0647324b9ac02" translate="yes" xml:space="preserve">
          <source>Remember, setting up a new database requires running &lt;code&gt;PYTHONPATH=$GRAPHITE_ROOT/webapp django-admin.py migrate --settings=graphite.settings --run-syncdb&lt;/code&gt; to create the initial schema.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4799fca6cc8d50e4a97a1d642cbcfb6bd5b73321" translate="yes" xml:space="preserve">
          <source>RemoteUserBackend</source>
          <target state="translated">RemoteUserBackend</target>
        </trans-unit>
        <trans-unit id="f22dbff7c7bece539940b5cdab384996cb33e66e" translate="yes" xml:space="preserve">
          <source>Removes data above the given threshold from the series or list of series provided. Values above this threshold are assigned a value of None.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e31fb7675c1af24975e05abc9a5de2a0ea800571" translate="yes" xml:space="preserve">
          <source>Removes data above the nth percentile from the series or list of series provided. Values above this percentile are assigned a value of None.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f751f72d3f43c67ce86f38d9bc790973b0420543" translate="yes" xml:space="preserve">
          <source>Removes data below the given threshold from the series or list of series provided. Values below this threshold are assigned a value of None.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d454d2d73cad155a59becd39fb7ba15556af988c" translate="yes" xml:space="preserve">
          <source>Removes data below the nth percentile from the series or list of series provided. Values below this percentile are assigned a value of None.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b8adb060c74fe72bc7f8fb160d944c418aa8abc" translate="yes" xml:space="preserve">
          <source>Removes series lying inside an average percentile interval</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e5078d2bb46f75681736340a2c1f6f877412057" translate="yes" xml:space="preserve">
          <source>Removes series that do not have an value lying in the x-percentile of all the values at a moment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dcfc4f5d3868d5d8aeef7b7c852a396c3c6f89a" translate="yes" xml:space="preserve">
          <source>Removing All Graphs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aff0cb3606cebc5dc7834c8e58b53177ea92c71" translate="yes" xml:space="preserve">
          <source>Removing Series from the TagDB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fba68058e8d0521f38d25ae275661cb6961b7574" translate="yes" xml:space="preserve">
          <source>Render caching: &lt;a href=&quot;http://memcached.org/&quot;&gt;memcached&lt;/a&gt; and &lt;a href=&quot;https://www.tummy.com/software/python-memcached/&quot;&gt;python-memcache&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47313516cac074502ac6f0f6cccd5e119095fb02" translate="yes" xml:space="preserve">
          <source>Render graphs of this data on demand</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcbcb7315e162e01fc9b6a9fd610b776939a9f1a" translate="yes" xml:space="preserve">
          <source>Renders the data as a json object suitable for passing to a &lt;a href=&quot;http://code.shutterstock.com/rickshaw/tutorial/introduction.html&quot;&gt;Rickshaw&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b47efbfbe1e87bc120181cc25f43ea192335dfe3" translate="yes" xml:space="preserve">
          <source>Renders the data as a json object suitable for passing to a &lt;a href=&quot;http://dygraphs.com/data.html&quot;&gt;Dygraph&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="097de8ac2eff35734aea3b68fe8783ae4b1cc6db" translate="yes" xml:space="preserve">
          <source>Renders the data as a json object. The &lt;a href=&quot;#jsonp&quot;&gt;jsonp&lt;/a&gt; option can be used to wrap this data in a named call for cross-domain access</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ae9fada8244e7ab332275b98c4646396c83bca3" translate="yes" xml:space="preserve">
          <source>Renders the data in a CSV format suitable for import into a spreadsheet or for processing in a script</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64b2f6ef7a7bd66b0ce51400f8c8ed46b95257d3" translate="yes" xml:space="preserve">
          <source>Renders the data in a custom line-delimited format. Targets are output one per line and are of the format &lt;code&gt;&amp;lt;target name&amp;gt;,&amp;lt;start timestamp&amp;gt;,&amp;lt;end timestamp&amp;gt;,&amp;lt;series step&amp;gt;|[data]*&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94a27f433630a9aba5a78a46417b983360515911" translate="yes" xml:space="preserve">
          <source>Renders the graph as SVG markup of size determined by &lt;a href=&quot;#width&quot;&gt;width&lt;/a&gt; and &lt;a href=&quot;#height&quot;&gt;height&lt;/a&gt;. Metadata about the drawn graph is saved as an embedded script with the variable &lt;code&gt;metadata&lt;/code&gt; being set to an object describing the graph</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14063bba940591657c56188b4a319e809b051a59" translate="yes" xml:space="preserve">
          <source>Renders the graph as a PDF of size determined by &lt;a href=&quot;#width&quot;&gt;width&lt;/a&gt; and &lt;a href=&quot;#height&quot;&gt;height&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a134552f0bec4837594fe82558d32759bf7cd86" translate="yes" xml:space="preserve">
          <source>Renders the graph as a PNG image of size determined by &lt;a href=&quot;#width&quot;&gt;width&lt;/a&gt; and &lt;a href=&quot;#height&quot;&gt;height&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bee03023258146024625cd4eaa7bb0d775e1f94" translate="yes" xml:space="preserve">
          <source>Restart apache:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00db3f37f485f20bd0931aab609fae16f61bfaf3" translate="yes" xml:space="preserve">
          <source>Results are limited to 100 by default, this can be overridden by passing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7906a9e0c1e0250090dddda4fd334c6fcfc3a7a5" translate="yes" xml:space="preserve">
          <source>Retrieval Behavior</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ebb647951d82866fae0f7a12e6bf4061b96a19" translate="yes" xml:space="preserve">
          <source>Return the average</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="788f410aae2020b6b23c1e7e38ed0908f9381a78" translate="yes" xml:space="preserve">
          <source>Return the maximum</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e9e74d6219656f3715736cc90c8bc81c8c47a96" translate="yes" xml:space="preserve">
          <source>Return the minimum</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30cf7106d73a58f3d893cce4c01704690a94427f" translate="yes" xml:space="preserve">
          <source>Returns a Python &lt;a href=&quot;http://docs.python.org/library/pickle.html&quot;&gt;pickle&lt;/a&gt; (serialized Python object). The response will have the MIME type &amp;lsquo;application/pickle&amp;rsquo;. The pickled object is a list of dictionaries with the keys: &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt;, &lt;code&gt;step&lt;/code&gt;, and &lt;code&gt;values&lt;/code&gt; as below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a777adda1fb2208ca7d465e82d92c2cb5ca14e8f" translate="yes" xml:space="preserve">
          <source>Returns a SeriesList of series matching all the specified tag expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c044c11d9e01a4daed1d88fc4c59e9d20a43416" translate="yes" xml:space="preserve">
          <source>Returns a random walk starting at 0. This is great for testing when there is no real data in whisper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40d7f3ebec1f535715d708bafca9894481f33676" translate="yes" xml:space="preserve">
          <source>Returns a seriesList of all series that have tag1 set to value1, AND do not have tag2 set to value2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe5abd2dc0c2825d86fa89a903247bac0fcbe03" translate="yes" xml:space="preserve">
          <source>Returns a seriesList where 1 is specified for non-null values, and 0 is specified for null values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="315666a8835fa791c3864b67e9aadd8341f0a8e5" translate="yes" xml:space="preserve">
          <source>Returns all events tagged as &amp;ldquo;tag-one&amp;rdquo; and &amp;ldquo;tag-two&amp;rdquo; and the second one returns all events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4ed1748f822233b84424f279edaf79dd657d451" translate="yes" xml:space="preserve">
          <source>Returns factor and offset of linear regression function by least squares method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68f2630175f76fd871d4c6d4c1370af1698ddfad" translate="yes" xml:space="preserve">
          <source>Returns n-percent of each series in the seriesList.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a3de414d6e7bb9d36cabb80e85d5320bb5c4207" translate="yes" xml:space="preserve">
          <source>Returns the following text:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e02221d811bc889b8f453d4f52a4a05cd9948c44" translate="yes" xml:space="preserve">
          <source>Returns the metrics sorted according to the specified function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dec454a2f8d857fa9989817ea45ba1d74f99371" translate="yes" xml:space="preserve">
          <source>Returns the number of events at this point in time. Usable with drawAsInfinite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b42299db139467a74fba04b428b7eb7e64da6269" translate="yes" xml:space="preserve">
          <source>Rewrite rules allow you to rewrite metric names using Python regular expressions. Note that unlike some other config files, any time this file is modified it will take effect automatically. This requires the carbon-aggregator service to be running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d32b5207355b6ac71b0f8f0d472e8f2db034e2d" translate="yes" xml:space="preserve">
          <source>Rocksteady</source>
          <target state="translated">Rocksteady</target>
        </trans-unit>
        <trans-unit id="45255f8cf508804738fec18dd2f13800e1346f1c" translate="yes" xml:space="preserve">
          <source>Rollup Aggregation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37019785aa4d9fa1dd06a321abba2d48bd55b8a" translate="yes" xml:space="preserve">
          <source>Running Carbon Within Virtualenv</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15fb2a17389ac8a325ec451383a31428c4753016" translate="yes" xml:space="preserve">
          <source>Running Django&amp;rsquo;s &lt;code&gt;django-admin.py&lt;/code&gt; within a virtualenv requires using the full path of the virtualenv:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cead83fd3e85f0f9179c9f167c21c83a6ad540c7" translate="yes" xml:space="preserve">
          <source>Running Graphite-web Within Virtualenv</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e0883db26345cee9aa196cedada38c2dbef49be" translate="yes" xml:space="preserve">
          <source>Running the tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0efe3f8ef37fd8d206378fe9aa43014ca4c4e39" translate="yes" xml:space="preserve">
          <source>Running the webapp with mod_wsgi as URL-prefixed application (Apache)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e74a63a92e848936a6950b0be9e699331741970" translate="yes" xml:space="preserve">
          <source>Runs series names through a regex search/replace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="576956b5291ac38d04ef5f82cc974286a857f0b2" translate="yes" xml:space="preserve">
          <source>SECRET_KEY</source>
          <target state="translated">SECRET_KEY</target>
        </trans-unit>
        <trans-unit id="3663004cc9e1af8f120e41d2b224dc89b68ef220" translate="yes" xml:space="preserve">
          <source>SSC Serv</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeab9294f3a362f47d45fad14bc57cb061174d5f" translate="yes" xml:space="preserve">
          <source>STANDARD_DIRS</source>
          <target state="translated">STANDARD_DIRS</target>
        </trans-unit>
        <trans-unit id="142c3decd8c7a569681c4a07e53ec4d86166b354" translate="yes" xml:space="preserve">
          <source>STATIC_ROOT</source>
          <target state="translated">STATIC_ROOT</target>
        </trans-unit>
        <trans-unit id="71d17fdde5505be9df2817a3fdd5bb20cc5867be" translate="yes" xml:space="preserve">
          <source>STORAGE_DIR</source>
          <target state="translated">STORAGE_DIR</target>
        </trans-unit>
        <trans-unit id="2a6b87d81b7d8b07b60f22c819f61a7252f7ec40" translate="yes" xml:space="preserve">
          <source>STORAGE_FINDERS</source>
          <target state="translated">STORAGE_FINDERS</target>
        </trans-unit>
        <trans-unit id="1737c7600a39ca855346b12e240b4d3e018139e3" translate="yes" xml:space="preserve">
          <source>Same as the derivative function above, but ignores datapoints that trend down. Useful for counters that increase for a long time, then wrap or reset. (Such as if a network interface is destroyed and recreated by unloading and re-loading a kernel module, common with USB / WiFi cards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5a97af9a5eeffc8897e68ec20b34e7a8336ffb0" translate="yes" xml:space="preserve">
          <source>Saving the Dashboard</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b414bdcb7b98eddf425fb46c6be79a2318b8e8c" translate="yes" xml:space="preserve">
          <source>Scales</source>
          <target state="translated">Scales</target>
        </trans-unit>
        <trans-unit id="43ddf283f03fda4643fe2db02659e6fb64a89999" translate="yes" xml:space="preserve">
          <source>Search Page</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fb1db527825d2996e37c655e5dec49d4da80c09" translate="yes" xml:space="preserve">
          <source>Seconds</source>
          <target state="translated">Seconds</target>
        </trans-unit>
        <trans-unit id="ce3df4d818316dd10c7bca5ae8539c894dc07dbb" translate="yes" xml:space="preserve">
          <source>See</source>
          <target state="translated">See</target>
        </trans-unit>
        <trans-unit id="6a4d31f25d4fd58106ac8ae56f99c962ab5473fc" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#bgcolor&quot;&gt;bgcolor&lt;/a&gt; for a list of color names and details on formatting this parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5569f0196c3de65c242a13b566de5ace65c59fd0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#bgcolor&quot;&gt;bgcolor&lt;/a&gt; for valid color names and formats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf8b00ed3d4dbe48c41d0783736553175ad4d312" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#majorgridlinecolor&quot;&gt;majorGridLineColor&lt;/a&gt;, and &lt;a href=&quot;#minorgridlinecolor&quot;&gt;minorGridLineColor&lt;/a&gt; for further control of colors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd8f34a9e90bcce12fb872ae68faaa8e31ea54e8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#term-resolution&quot;&gt;resolution&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a1c148f7bde9f70001475d89b7250869dbd253" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#term-series&quot;&gt;series&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b1744f44f5842557e6062b843014f9b6e19b225" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;install-source#carbon-custom-location-source&quot;&gt;Installing Carbon in a Custom Location&lt;/a&gt; for details of locations and available arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e74fe4ecbeac40f1434f734397ddac6f395375a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;install-source#graphite-web-custom-location-source&quot;&gt;Installing Graphite-web in a Custom Location&lt;/a&gt; for details on default locations and available arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da558d6d0007575cf71d4ea1cdeebd9e285a7706" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;render_api#paths-and-wildcards&quot;&gt;Paths and Wildcards&lt;/a&gt; for further information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30020c6013fb981f710277a32d0ebbbcf4e5beba" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;tags#querying-tagged-series&quot;&gt;querying tagged series&lt;/a&gt; for more detail on using &lt;a href=&quot;functions#graphite.render.functions.seriesByTag&quot;&gt;seriesByTag&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ce8382bd4eef9f3d8228f165676bf89e6ef1d1a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;tags#querying-tagged-series&quot;&gt;querying tagged series&lt;/a&gt; for more detail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d8243a2c0e464492c9d563c4f92c56ae3421bcc" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73d99c4b67113da984732f64f096cbb0e3e370c9" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#height&quot;&gt;height&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe43041bca9cb2fdc16c1f8a3379e2bb769c4212" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#width&quot;&gt;width&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9252debdfd41c3da4ef167c4eb4281e3ee12a047" translate="yes" xml:space="preserve">
          <source>See later for ways of customizing the graph, including adding multiple metric series, changing axes, adding titles and legends etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acc2c52c24a5f8259e0f2ce1e052d9cf22c641ab" translate="yes" xml:space="preserve">
          <source>See the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97319377746f5106e8b139482e368daeec3d40ab" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;functions#graphite.render.functions.setXFilesFactor&quot;&gt;xFilesFactor&lt;/a&gt; function for more information on the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b952f26128fd17be867e77b962181456fc53a70" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://code.google.com/p/modwsgi/wiki/InstallationInstructions&quot;&gt;mod_wsgi InstallationInstructions&lt;/a&gt; for installation instructions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d0bae2ab19ce4541ca0440da28d443cde932165" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://code.google.com/p/modwsgi/wiki/QuickConfigurationGuide&quot;&gt;mod_wsgi QuickConfigurationGuide&lt;/a&gt; for an overview of configurations and &lt;a href=&quot;https://code.google.com/p/modwsgi/wiki/ConfigurationDirectives&quot;&gt;mod_wsgi ConfigurationDirectives&lt;/a&gt; to see all configuration directives</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4e31d37316299e26d0bf35fc75504582fa56779" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://docs.djangoproject.com/en/dev/ref/settings/#databases&quot;&gt;Django documentation&lt;/a&gt; for full documentation of the DATABASES setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e23a80c618bf54afbda9ce7bfd06554350a9bc8" translate="yes" xml:space="preserve">
          <source>See: &lt;a href=&quot;#data-display-formats&quot;&gt;Data Display Formats&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14ce8fe731f7a1c525ecea808a231220d2a61d7b" translate="yes" xml:space="preserve">
          <source>See: &lt;a href=&quot;#from-until&quot;&gt;from / until&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72695ec9bf82749638267057db25aed5e3243243" translate="yes" xml:space="preserve">
          <source>Selecting the &lt;em&gt;Dashboard | New&lt;/em&gt; menu item removes the association between the current dashboard on the screen and its saved version (if any), which means that you&amp;rsquo;ll need to use &lt;em&gt;Dashboard | Save As&lt;/em&gt; to save it again. Note that it doesn&amp;rsquo;t clear the contents of the dashboard, i.e. the graphs - use &lt;em&gt;Remove All&lt;/em&gt; to achieve this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0166be3a73f6171426147c4368e709f1ff2db399" translate="yes" xml:space="preserve">
          <source>Sensu</source>
          <target state="translated">Sensu</target>
        </trans-unit>
        <trans-unit id="817716094d1baafba2a40bd9a8a66060f9f22432" translate="yes" xml:space="preserve">
          <source>Series can be deleted via HTTP POST to the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f44ddefe5f64f3076b89a344beb062c67ee7d046" translate="yes" xml:space="preserve">
          <source>Series can be submitted via HTTP POST using command-line tools such as &lt;code&gt;curl&lt;/code&gt; or with a variety of HTTP programming libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a4b8dc06165f8520242173d624e585db7b15d52" translate="yes" xml:space="preserve">
          <source>Set the LDAP server here or alternately in &lt;code&gt;LDAP_URI&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="593dcfded930df12b347dc2cff30fc9ed6bce28d" translate="yes" xml:space="preserve">
          <source>Set the LDAP server port here or alternately in &lt;code&gt;LDAP_URI&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34c9db475f724ab14c4f87032fed5b4054ebafbe" translate="yes" xml:space="preserve">
          <source>Set the URL_PREFIX when deploying graphite-web to a non-root location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdc94aa9e4a437ffdd594b7273e593da21584139" translate="yes" xml:space="preserve">
          <source>Set the default short date format. See strftime(3) for supported sequences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69a8cea0318b5b9f45d9ebe6697ac68368c71929" translate="yes" xml:space="preserve">
          <source>Set the maximum numbers of datapoints for each series returned when using json content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f17e83aa33e2a82a791d5c044cf3cc3593e6e8" translate="yes" xml:space="preserve">
          <source>Set the unit system for compacting Y-axis values (e.g. 23,000,000 becomes 23M). Value can be one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35a582290912f408b161522e8d802eaa281318f2" translate="yes" xml:space="preserve">
          <source>Set this to the list of memcached hosts. Ex: &lt;code&gt;['10.10.10.10:11211', '10.10.10.11:11211', '10.10.10.12:11211']&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f033e8f10e94567cde89c3e0d51127da27513cf3" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;django.core.mail.backends.dummy.EmailBackend&lt;/code&gt; to drop emails on the floor and effectively disable email features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="590911b08bb09ad82339ce591a406c9356333cee" translate="yes" xml:space="preserve">
          <source>Set to disable caching of rendered images</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33db93beab586aaccc2defae21d9c134b650ffd0" translate="yes" xml:space="preserve">
          <source>Set to prevent fetching from remote Graphite servers, only returning metrics which are accessible locally</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="170ea0f98fffdfb5d9cfdf0e541aceab3ea28576" translate="yes" xml:space="preserve">
          <source>Set your local timezone. Timezone is specified using &lt;a href=&quot;http://en.wikipedia.org/wiki/Zoneinfo#Names_of_time_zones&quot;&gt;zoneinfo names&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e1080e4331b89520fe25eb2a8fa1e44be97d429" translate="yes" xml:space="preserve">
          <source>Sets the LDAP query to return a user object where &lt;code&gt;%s&lt;/code&gt; substituted with the user id. E.g. &lt;code&gt;(username=%s)&lt;/code&gt; or &lt;code&gt;(sAMAccountName=%s)&lt;/code&gt; (Active Directory).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b364d917af4ed2680aaced05572fda634bea8750" translate="yes" xml:space="preserve">
          <source>Sets the LDAP search base. E.g. &lt;code&gt;OU=users,DC=mycompany,DC=com&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c76a191d9ce41a0cc14070d4fe31dbfbb029c31" translate="yes" xml:space="preserve">
          <source>Sets the LDAP server URI. E.g. &lt;code&gt;ldaps://ldap.mycompany.com:636&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e29d92c6b6c13b8c5c3bad2ee6b2df7d3f950a" translate="yes" xml:space="preserve">
          <source>Sets the alpha (transparency) value of filled areas when using an &lt;a href=&quot;#areamode&quot;&gt;areaMode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5db2d4829fdb7750b1ce2718d529f1d595010d5" translate="yes" xml:space="preserve">
          <source>Sets the background color of the graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d584a7006d4fa13121ba3e57347f78327e6bd83" translate="yes" xml:space="preserve">
          <source>Sets the base LDAP user to bind to the server with. E.g. &lt;code&gt;CN=some_readonly_account,DC=mycompany,DC=com&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474cca1bded8f2a222ce063b2f77a409771a79da" translate="yes" xml:space="preserve">
          <source>Sets the color of the major grid lines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="438117d39a6dadbc1ec4ff10f7989742065f9d51" translate="yes" xml:space="preserve">
          <source>Sets the color of the minor grid lines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b979e11b1bb824690aa2863658e4ded32c033a3" translate="yes" xml:space="preserve">
          <source>Sets the default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c1eaa84a79e322a751d3d182bef4fc411727f4" translate="yes" xml:space="preserve">
          <source>Sets the foreground color. This only affects the title, legend text, and axis labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a81a1d3693e54210f9268c8c1d845f298b077d14" translate="yes" xml:space="preserve">
          <source>Sets the height of the generated graph image in pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ec065536bd22e0b3f43a873fae14db1af003e3d" translate="yes" xml:space="preserve">
          <source>Sets the line drawing behavior. Takes one of the following parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d78eb0128874c2070a33030279fb1fce1127d32c" translate="yes" xml:space="preserve">
          <source>Sets the minimum pixel-step to use between datapoints drawn. Any value below this will trigger a point consolidation of the series at render time. The default value of &lt;code&gt;1&lt;/code&gt; combined with the default lineWidth of &lt;code&gt;1.2&lt;/code&gt; will cause a minimal amount of line overlap between close-together points. To disable render-time point consolidation entirely, set this to &lt;code&gt;0&lt;/code&gt; though note that series with more points than there are pixels in the graph area (e.g. a few month&amp;rsquo;s worth of per-minute data) will look very &amp;lsquo;smooshed&amp;rsquo; as there will be a good deal of line overlap. In response, one may use &lt;a href=&quot;#linewidth&quot;&gt;lineWidth&lt;/a&gt; to compensate for this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fea461b2a03595d4efe715faa58e4980e58b164" translate="yes" xml:space="preserve">
          <source>Sets the number of minor grid lines per major line on the y-axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbcf4eabbd5294e028e4442dc3a8bbf845dbf8dd" translate="yes" xml:space="preserve">
          <source>Sets the password of the base LDAP user to bind to the server with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2977592897b62efc20561b87d12a83e1c8e1e346" translate="yes" xml:space="preserve">
          <source>Sets the preferred number of intermediate values to display on the Y-axis (Y values between the minimum and maximum). Note that Graphite will ultimately choose what values (and how many) to display based on a &amp;lsquo;pretty&amp;rsquo; factor, which tries to maintain a sensible scale (e.g. preferring intermediary values like 25%,50%,75% over 33.3%,66.6%). To explicitly set the Y-axis values, see &lt;a href=&quot;#ystep&quot;&gt;yStep&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b2148a70b5ceb28276cdc0818b367b665561f2e" translate="yes" xml:space="preserve">
          <source>Sets the side of the graph on which to render the Y-axis. Accepts values of &lt;code&gt;left&lt;/code&gt; or &lt;code&gt;right&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bec152752482b107933a21bcf3a8f5cf6607c1b2" translate="yes" xml:space="preserve">
          <source>Sets the time format used when displaying the X-axis. See &lt;a href=&quot;http://docs.python.org/library/datetime.html#datetime.date.strftime&quot;&gt;datetime.date.strftime()&lt;/a&gt; for format specification details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8504a82a1cf1513d1197328581ab6d5ed20c8c1" translate="yes" xml:space="preserve">
          <source>Sets the type of graph to be rendered. Currently there are only two graph types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3ef1da177bb235570885f44476837b96256e9db" translate="yes" xml:space="preserve">
          <source>Sets the way lines are rendered, e.g. sloped, staircase, connected, and how the value &lt;code&gt;None&lt;/code&gt; is rendered. See &lt;a href=&quot;render_api#param-linemode&quot;&gt;lineMode&lt;/a&gt; and &lt;a href=&quot;render_api#param-drawnullaszero&quot;&gt;drawNullAsZero&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="067c52b06b7d42b06fbe7d16102d5363262cb76f" translate="yes" xml:space="preserve">
          <source>Sets the width of the generated graph image in pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f5c588044f26b45437d03d65de64a048c90a792" translate="yes" xml:space="preserve">
          <source>Setting the Time Range</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f92a3af25635d033ad44c1d68ccd27fdec68c0f" translate="yes" xml:space="preserve">
          <source>Setting up a development environment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ad677e2da85095d12fd25f88ca43ad5333ef526" translate="yes" xml:space="preserve">
          <source>Several installation options exist:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae67106b9f72947ed5a9c129f9025a5aee28dc51" translate="yes" xml:space="preserve">
          <source>Seyren</source>
          <target state="translated">Seyren</target>
        </trans-unit>
        <trans-unit id="12f3d42fbcf5e59cedc41341d20c6ae985117b4d" translate="yes" xml:space="preserve">
          <source>Sharing a Dashboard</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="329f6a88d78e4e58973f485e2df8ccff5679efff" translate="yes" xml:space="preserve">
          <source>Shinken</source>
          <target state="translated">Shinken</target>
        </trans-unit>
        <trans-unit id="fd612b45cd24ebdcae20ddbe5a135c0eb65031c1" translate="yes" xml:space="preserve">
          <source>Short Alias: avg()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4bd694e4d679ce1e12672cca002422e2436dfce" translate="yes" xml:space="preserve">
          <source>Short Alias: randomWalk()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83713d1765f54cda79fb50d0ed40d48a4678d559" translate="yes" xml:space="preserve">
          <source>Short Alias: sin()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb4132a75538b8d48384310f27ee80ccd2d8c08f" translate="yes" xml:space="preserve">
          <source>Short Alias: time()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f557717146190bd3e41cb5e75b8cbc25b5421b7d" translate="yes" xml:space="preserve">
          <source>Short form: &lt;code&gt;map()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfd391bd703a301d7d0fb98e39adce7fca463b27" translate="yes" xml:space="preserve">
          <source>Short form: &lt;code&gt;reduce()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="763cbdc02d55d1b46ac7ec287e82cc6e3e204abe" translate="yes" xml:space="preserve">
          <source>Short form: sum()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97bfd989029e0be60817dcb0e5041102a4d3f226" translate="yes" xml:space="preserve">
          <source>Short form: xFilesFactor()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6360572f8cf7162abd9a2d5ca791161f508fc1c8" translate="yes" xml:space="preserve">
          <source>Simple lightweight Windows Service that collects Performance Counter metrics and sends them over to the Graphite server. Configured via .NET xml application configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc533875963064677492e135eaff406b429ee4ad" translate="yes" xml:space="preserve">
          <source>Skyline</source>
          <target state="translated">Skyline</target>
        </trans-unit>
        <trans-unit id="d2f22b9965830f7446c7f6f49f85b6eb9372f1f4" translate="yes" xml:space="preserve">
          <source>Slice labels are not shown</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f73b72fb58c474e7240d0d182c276b128cbd87bb" translate="yes" xml:space="preserve">
          <source>Slice labels are reported as a percent of the whole</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c21c497b19a6646123d886806b0fdb707ea6851" translate="yes" xml:space="preserve">
          <source>Slice labels are reported with the original values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5133a585e46c0af1ae55faf9a3bc70fd9be43b69" translate="yes" xml:space="preserve">
          <source>Slice values below this minimum will not have their labels rendered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cb8dc1de4cc39576c98cd2ddd297a8978bf5385" translate="yes" xml:space="preserve">
          <source>Slices: Precision and Fragmentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="328bc953cf6708961d5b2dd64fd5ed64d2166c11" translate="yes" xml:space="preserve">
          <source>Slope line mode draws a line from each point to the next. Periods with Null values will not be drawn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="864a74b4a70b24a37a8b121e24001853664d6b88" translate="yes" xml:space="preserve">
          <source>Smarter version of summarize.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52927753ddced6f1969d90f535498f1d1f74e3a4" translate="yes" xml:space="preserve">
          <source>Snort IDS/IPS can be configured to generate a rich set of metrics about network traffic. Presently there are more than 130 metrics available. Snort2graphite will pick up the most recent data from your snort.stats file and send all the metrics into Graphite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f01d9b1aaef16e46db8900555304397b26908733" translate="yes" xml:space="preserve">
          <source>Sorts the list of metrics by the lowest value across the time period specified, including only series that have a maximum value greater than 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="890540359074bb75874f3b2ab4d38a97221d61a9" translate="yes" xml:space="preserve">
          <source>Sorts the list of metrics in descending order by the maximum value across the time period specified. Useful with the &amp;amp;areaMode=all parameter, to keep the lowest value lines visible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5130a65ba3528c2feef123c76dec71565a7adb1" translate="yes" xml:space="preserve">
          <source>Sorts the list of metrics in descending order by the sum of values across the time period specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee613cbb4d334feb48275f15a2f1cb6787414830" translate="yes" xml:space="preserve">
          <source>Specifically, Graphite is designed to handle numeric time-series data. For example, Graphite would be good at graphing stock prices because they are numbers that change over time. Whether it&amp;rsquo;s a few data points, or dozens of performance metrics from thousands of servers, then Graphite is for you. As a bonus, you don&amp;rsquo;t necessarily know the names of those things in advance (who wants to maintain such huge configuration?); you simply send a metric name, a timestamp, and a value, and Graphite takes care of the rest!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9427711478b9b8d25a0dcebc6a6426e522d5a9f" translate="yes" xml:space="preserve">
          <source>Specifying &amp;lsquo;average&amp;rsquo; instead will return the mean for each bucket, which can be more useful when the value is a gauge that represents a certain value in time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d79ce1e1602a252078cafd646fac0f712106dc7" translate="yes" xml:space="preserve">
          <source>SqlToGraphite</source>
          <target state="translated">SqlToGraphite</target>
        </trans-unit>
        <trans-unit id="126e0e98ae0124fcf03141de25d79226c3025d96" translate="yes" xml:space="preserve">
          <source>Staircase draws a flat line for the duration of a time period and then a vertical line up or down to the next value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f51f6e56fc1fa263546ea8ed9e8749ec30549b" translate="yes" xml:space="preserve">
          <source>Starting Carbon</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ba59a4dcd28d85457a8a8bdd886d613215b7399" translate="yes" xml:space="preserve">
          <source>Step 1 - Plan a Naming Hierarchy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ad597b02f4070ba843584be580a895d18d4fc8c" translate="yes" xml:space="preserve">
          <source>Step 2 - Configure your Data Retention</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6df9e3c43f0e842416657441eeb1fc2968a17b1b" translate="yes" xml:space="preserve">
          <source>Step 3 - Understanding the Graphite Message Format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13681180ef927d418a13435b9390debdf81b6feb" translate="yes" xml:space="preserve">
          <source>Storage Backend Alternates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd67efae57709a027782346c3b5774f810d834e" translate="yes" xml:space="preserve">
          <source>Storage Overview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6149b41f8724f0b2d234d358f2603fdcd6ad432d" translate="yes" xml:space="preserve">
          <source>Store numeric time-series data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9115108de37cb5b9038dc23dbdcf22f2689912f1" translate="yes" xml:space="preserve">
          <source>Structured Metrics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62d843f7c23a2488a2b61b819c69602de9409974" translate="yes" xml:space="preserve">
          <source>Subtracts series 2 through n from series 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aac19259b13c2b1d3c1e8dd0cfd81be0a588ed7" translate="yes" xml:space="preserve">
          <source>Such a rollup plugin exists in Ceres that aggregates data points in a way that is similar behavior of Whisper archives. Where multiple data points are collapsed and written to a lower precision slice, and data points outside of the set slice retentions are trimmed. By default, an average function is used, however alternative methods can be chosen by changing the metadata.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f24931a7ad76a71514d41d23393cc1ce3f09d4a6" translate="yes" xml:space="preserve">
          <source>Summarize the data into interval buckets of a certain size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17a6eba635f6bdfafce32600b3995aa2aa0382f2" translate="yes" xml:space="preserve">
          <source>Supported aggregation functions: &lt;code&gt;average&lt;/code&gt;, &lt;code&gt;median&lt;/code&gt;, &lt;code&gt;sum&lt;/code&gt;, &lt;code&gt;min&lt;/code&gt;, &lt;code&gt;max&lt;/code&gt;, &lt;code&gt;diff&lt;/code&gt;, &lt;code&gt;stddev&lt;/code&gt;, &lt;code&gt;range&lt;/code&gt;, &lt;code&gt;multiply&lt;/code&gt; &amp;amp; &lt;code&gt;last&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54658b410b5c1168e86b1be1f3c5fd7fd3cfe111" translate="yes" xml:space="preserve">
          <source>Supported operators: &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt; &amp;amp; &lt;code&gt;&amp;lt;=&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="050704834163ccf2341eb1666c344e77323cbc8e" translate="yes" xml:space="preserve">
          <source>TAGDB</source>
          <target state="translated">TAGDB</target>
        </trans-unit>
        <trans-unit id="fe6635de654184e6578cbb44533c10c59efccbec" translate="yes" xml:space="preserve">
          <source>TAGDB = &amp;lsquo;graphite.tags.redis.RedisTagDB&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a38c12307843d3856ed7b0641cc39612d4ff8f38" translate="yes" xml:space="preserve">
          <source>TAGDB_REDIS_DB</source>
          <target state="translated">TAGDB_REDIS_DB</target>
        </trans-unit>
        <trans-unit id="80d2382292ccd3907d317f6980722225b77b17c3" translate="yes" xml:space="preserve">
          <source>TAGDB_REDIS_HOST</source>
          <target state="translated">TAGDB_REDIS_HOST</target>
        </trans-unit>
        <trans-unit id="4cdbd0372aa02b2cf63883de60fe08a424c3da2f" translate="yes" xml:space="preserve">
          <source>TAGDB_REDIS_PORT</source>
          <target state="translated">TAGDB_REDIS_PORT</target>
        </trans-unit>
        <trans-unit id="f5b60f26fd4d365850316283a6c657edfbc8a7e5" translate="yes" xml:space="preserve">
          <source>TAG_UPDATE_INTERVAL</source>
          <target state="translated">TAG_UPDATE_INTERVAL</target>
        </trans-unit>
        <trans-unit id="6b57395beb39c3ffc943543953b45e91708a3db5" translate="yes" xml:space="preserve">
          <source>THe minimum of non-null points in the series</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06ab7b78bcb3b42fe287076472abc28e88de637d" translate="yes" xml:space="preserve">
          <source>TIME_ZONE</source>
          <target state="translated">TIME_ZONE</target>
        </trans-unit>
        <trans-unit id="01fec3d79b405b29395be751478d4ee918dd1970" translate="yes" xml:space="preserve">
          <source>Tag database driver to use, other options include</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2fcc5ea4b82c694a0e280f83c2179deb46aa766" translate="yes" xml:space="preserve">
          <source>Tag support requires Graphite webapp &amp;amp; carbon version 1.1.1 or newer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e68406ddc6812a5a1fb58b1540be6665da713a35" translate="yes" xml:space="preserve">
          <source>Tagged Series</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e649d3307b4a10942a684fcba688087111f34b0e" translate="yes" xml:space="preserve">
          <source>Tags expressions are strings, and may have the following formats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d2d49678652f06f61c7490d6d3fb7d1a6cd11b6" translate="yes" xml:space="preserve">
          <source>Tags specifiers are strings, and may have the following formats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1c289f1f9181a5407ee33d2d24b9414ba987149" translate="yes" xml:space="preserve">
          <source>Takes a dividend metric and a divisor metric and draws the division result. A constant may &lt;em&gt;not&lt;/em&gt; be passed. To divide by a constant, use the scale() function (which is essentially a multiplication operation) and use the inverse of the dividend. (Division by 8 = multiplication by 1/8 or 0.125)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67239cfb092d912e7e803ec55f380b062c933ee4" translate="yes" xml:space="preserve">
          <source>Takes a float F, followed by a label (in double quotes) and a color. (See &lt;code&gt;bgcolor&lt;/code&gt; in the &lt;a href=&quot;render_api&quot;&gt;Render API&lt;/a&gt; for valid color names &amp;amp; formats.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc80278416d69ff85bb25167ba5c5dce1d7d0e5" translate="yes" xml:space="preserve">
          <source>Takes a float F.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95158606c1e07b1c1ba8097ded9ad38aa3272f3c" translate="yes" xml:space="preserve">
          <source>Takes a floating point number between 0.0 and 1.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d50a2f61bd2e8e66cc24c505da9fa6652d5a32d3" translate="yes" xml:space="preserve">
          <source>Takes a list of seriesLists and reduces it to a list of series by means of the reduceFunction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b8709884d307e6248024a419e2a41ba3c594a2a" translate="yes" xml:space="preserve">
          <source>Takes a metric or a wildcard seriesList, followed by a regular expression in double quotes. Excludes metrics that don&amp;rsquo;t match the regular expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dd9258c992535168e62615a4e30c816b2f1ca77" translate="yes" xml:space="preserve">
          <source>Takes a metric or a wildcard seriesList, followed by a regular expression in double quotes. Excludes metrics that match the regular expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80352f4c97ae145e199d05533653934f22585951" translate="yes" xml:space="preserve">
          <source>Takes a metric or wildcard seriesList and counts up the number of non-null values. This is useful for understanding the number of metrics that have data at a given point in time (i.e. to count which servers are alive).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3325fe4e11950b2377de8c1751f43e9008dfd202" translate="yes" xml:space="preserve">
          <source>Takes a metric or wildcard seriesList and draws a horizontal line based on the function applied to each series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1585140ff67f065f143310868a55e68060a7eb65" translate="yes" xml:space="preserve">
          <source>Takes a metric or wildcard seriesList and replaces null values with the value specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5822a44f9f5dffb24ad3f06b8c3d452420e6ad27" translate="yes" xml:space="preserve">
          <source>Takes a series list and modifies the aliases to provide column aligned output with Current, Max, and Min values in the style of cacti. Optionally takes a &amp;ldquo;system&amp;rdquo; value to apply unit formatting in the same style as the Y-axis, or a &amp;ldquo;unit&amp;rdquo; string to append an arbitrary unit suffix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d89624685eda79541e7acaa6d68ac1d669007978" translate="yes" xml:space="preserve">
          <source>Takes a series of average values and a series of weights and produces a weighted average for all values. The corresponding values should share one or more zero-indexed nodes and/or tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33667ba081d72930547a17f02f17b433f7fbe5a9" translate="yes" xml:space="preserve">
          <source>Takes a series of values and a window size and produces an exponential moving average utilizing the following formula:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1daa85fb9229fc2ad9ddd9c3053403f4d6b52371" translate="yes" xml:space="preserve">
          <source>Takes a seriesList and applies an alias derived from one or more &amp;ldquo;node&amp;rdquo; portion/s of the target name or tags. Node indices are 0 indexed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d4a0d3177495ecf458fce2e7ea43ac1f3f701d" translate="yes" xml:space="preserve">
          <source>Takes a seriesList and applies an alias derived from one or more tags and/or nodes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b2381244f6e31d5faada6968c184ada29d36a20" translate="yes" xml:space="preserve">
          <source>Takes a seriesList and applies an alias derived from the base metric name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f95a37c905e6c64a2c429f31e15b2953d5494cad" translate="yes" xml:space="preserve">
          <source>Takes a seriesList and applies some complicated function (described by a string), replacing templates with unique prefixes of keys from the seriesList (the key is all nodes up to the index given as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81d810d9d9abce15e343ac911c312c81a1c0c8aa" translate="yes" xml:space="preserve">
          <source>Takes a seriesList and maps it to a list of seriesList. Each seriesList has the given mapNodes in common.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad843ffa82bf8206ead3b4ab1c6a0ac790ede99" translate="yes" xml:space="preserve">
          <source>Takes a serieslist and maps a callback to subgroups within as defined by a common node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9b711b84ef3f8fcaed2e3411c4bc3edcef8b55e" translate="yes" xml:space="preserve">
          <source>Takes a serieslist and maps a callback to subgroups within as defined by multiple nodes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f80e8c48547b2e78f0ae1c540b176cb3a389ec2f" translate="yes" xml:space="preserve">
          <source>Takes a serieslist and maps a callback to subgroups within as defined by multiple tags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4720f318c6af88cc900c12bbf93a20c07041a6b3" translate="yes" xml:space="preserve">
          <source>Takes a timestamp string ts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06443eaa4cf0b1489c359dbbf1371c2d5e41ddeb" translate="yes" xml:space="preserve">
          <source>Takes a wildcard seriesList, and a second fallback metric. If the wildcard does not match any series, draws the fallback metric.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba26064c8773010d71697cdd45a5d4142561a8ef" translate="yes" xml:space="preserve">
          <source>Takes a wildcard seriesList. Distills down a set of inputs into the range of the series</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eb5cc682e9513b0fc1848ecc6038ec98daf8005" translate="yes" xml:space="preserve">
          <source>Takes an arbitrary number of seriesLists and adds them to a single seriesList. This is used to pass multiple seriesLists to a function which only takes one</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afda4d5d7ba6697a47b8cf27ccf3fff5d836bd82" translate="yes" xml:space="preserve">
          <source>Takes an arbitrary number of seriesLists and returns unique series, filtered by name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03e5edaf18ce8f63b3ca6a62d80bd36999a9b088" translate="yes" xml:space="preserve">
          <source>Takes any floating point or integer (negative numbers do not error but will cause no line to be drawn). Changes the width of the line in pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e51111ace21878d163966809436bfe74e874b113" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard metric, followed by a quoted string with the time to start the line and another quoted string with the time to end the line. The start and end times are inclusive. See &lt;code&gt;from / until&lt;/code&gt; in the &lt;a href=&quot;render_api&quot;&gt;Render API&lt;/a&gt; for examples of time formats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bf826c9f2247bb6c6a763de7fb69203b1e028c9" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList and a consolidation function name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="764b8b2c67392c2e2f2d52773ae862b32e5e6e07" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList and a string in quotes. Appends a value to the metric name in the legend. Currently one or several of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb62d428c4b323d650b70f022ff02fafd1832185" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList and a string in quotes. Prints the string instead of the metric name in the legend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42aaa4e86de4b29fe4cbb990fce6f1d83ca4892f" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList and an xFilesFactor value between 0 and 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1ea87bf97ff21a9b99f64f0a302aaefa05dcbe8" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList and applies the mathematical abs function to each datapoint transforming it to its absolute value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27654f7ebffcfc49de67e40e4be12d3d59af1732" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList and change them so they are stacked. This is a way of stacking just a couple of metrics without having to use the stacked area mode (that stacks everything). By means of this a mixed stacked and non stacked graph can be made</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59bdee519fc4c355724050522468af9c84812e19" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList and returns &amp;ldquo;value per seconds&amp;rdquo; where seconds is a last argument to this functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33f5ec11c304b401b8cedaa67b66f54c7f980c06" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList followed by 1 or 2 integers. Assume that the metric name is a list or array, with each element separated by dots. Prints n - length elements of the array (if only one integer n is passed) or n - m elements of the array (if two integers n and m are passed). The list starts with element 0 and ends with element (length - 1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fa9f9e8f674dc24a6ffeb35e3afbd1912b16a53" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList followed by a consolidation function, an operator and a threshold. Draws only the metrics which match the filter expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8311e0039412f7b07e0de62f1db9187ad51d01bc" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList followed by a constant n. Draws only the metrics with a maximum value above n.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d770f05749e8ea839cf27a388e69b16af9a9dec" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList followed by a constant n. Draws only the metrics with a maximum value below n.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77541b58f9d2a1ea5aaa9e7470a4e631bd2451cf" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList followed by a constant n. Draws only the metrics with a minimum value above n.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1bd5569389b676ed0e69e213f9c086158e88981" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList followed by a constant n. Draws only the metrics with a minimum value below n.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1c0ae9e65681b02b670c6f028654ef468bc00b1" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList followed by a constant, and adds the constant to each datapoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e6cb0406ec9e7780524f391ee04a59ef82350db" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList followed by a constant, and multiplies the datapoint by the constant provided at each point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ecf63c881fe6f807ee8407732193b52ca5e6a4" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList followed by a constant, and raises the datapoint by the power of the constant provided at each point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ab1800133ebb590667c60acbb833d54e9fef50" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList followed by a number N of datapoints or a quoted string with a length of time like &amp;lsquo;1hour&amp;rsquo; or &amp;lsquo;5min&amp;rsquo; (See &lt;code&gt;from /
until&lt;/code&gt; in the &lt;a href=&quot;render_api&quot;&gt;Render API&lt;/a&gt; for examples of time formats), and an xFilesFactor value to specify how many points in the window must be non-null for the output to be considered valid. Graphs the average of the preceeding datapoints for each point on the graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4ffa550599922b113818a879187c3a0b4b9b9b7" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList followed by a number N of datapoints or a quoted string with a length of time like &amp;lsquo;1hour&amp;rsquo; or &amp;lsquo;5min&amp;rsquo; (See &lt;code&gt;from /
until&lt;/code&gt; in the &lt;a href=&quot;render_api&quot;&gt;Render API&lt;/a&gt; for examples of time formats), and an xFilesFactor value to specify how many points in the window must be non-null for the output to be considered valid. Graphs the maximum of the preceeding datapoints for each point on the graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b07666187ddd3eda057d70040a2e6d9f28eee4db" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList followed by a number N of datapoints or a quoted string with a length of time like &amp;lsquo;1hour&amp;rsquo; or &amp;lsquo;5min&amp;rsquo; (See &lt;code&gt;from /
until&lt;/code&gt; in the &lt;a href=&quot;render_api&quot;&gt;Render API&lt;/a&gt; for examples of time formats), and an xFilesFactor value to specify how many points in the window must be non-null for the output to be considered valid. Graphs the median of the preceeding datapoints for each point on the graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2decbee2152c5fb78dd100f73d53e47052693014" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList followed by a number N of datapoints or a quoted string with a length of time like &amp;lsquo;1hour&amp;rsquo; or &amp;lsquo;5min&amp;rsquo; (See &lt;code&gt;from /
until&lt;/code&gt; in the &lt;a href=&quot;render_api&quot;&gt;Render API&lt;/a&gt; for examples of time formats), and an xFilesFactor value to specify how many points in the window must be non-null for the output to be considered valid. Graphs the minimum of the preceeding datapoints for each point on the graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2d6374df75d3c89d2f6a14452d7994617aa10c5" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList followed by a number N of datapoints or a quoted string with a length of time like &amp;lsquo;1hour&amp;rsquo; or &amp;lsquo;5min&amp;rsquo; (See &lt;code&gt;from /
until&lt;/code&gt; in the &lt;a href=&quot;render_api&quot;&gt;Render API&lt;/a&gt; for examples of time formats), and an xFilesFactor value to specify how many points in the window must be non-null for the output to be considered valid. Graphs the sum of the preceeding datapoints for each point on the graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe8e171fc5c521394f785e40366b4bd37ab3ca2" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList followed by an aggregation function and an optional &lt;code&gt;reverse&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="571585c2305c135107f26f19d515eeb133f9a17a" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList followed by an integer N and an aggregation function. Out of all metrics passed, draws only the N metrics with the highest aggregated value over the time period specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7433891d14d426d269813518d1a6649e2cbdb76a" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList followed by an integer N and an aggregation function. Out of all metrics passed, draws only the N metrics with the lowest aggregated value over the time period specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48ee26cb1dd2e5be57c1f790d140fd2d7af447bd" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList followed by an integer N.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5b95c47110b4d1b2e134b47655c0472bc057283" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList followed by an integer N. Draw the Standard Deviation of all metrics passed for the past N datapoints. If the ratio of null points in the window is greater than windowTolerance, skip the calculation. The default for windowTolerance is 0.1 (up to 10% of points in the window can be missing). Note that if this is set to 0.0, it will cause large gaps in the output anywhere a single point is missing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c477af7f509f4efab6e9ebca64b43920222858e8" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList followed by an integer N. Draws the N most deviant metrics. To find the deviants, the standard deviation (sigma) of each series is taken and ranked. The top N standard deviations are returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a073bf6521609c9f48f66d634fef2162527e7b99" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList followed by an integer N. Out of all metrics passed, draws only the N metrics with the highest value at the end of the time period specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d87ab42ef786fff50dbcec40682311c2789fc6de" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList followed by an integer N. Out of all metrics passed, draws only the N metrics with the lowest value at the end of the time period specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe3d0461a47d41e7565b9604ac9697058ef54bbf" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList followed by an integer N. Out of all metrics passed, draws only the bottom N metrics with the lowest average value for the time period specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce58a119eb5fb1cb1a4392cdb2ca77f1fe28d265" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList followed by an integer N. Out of all metrics passed, draws only the metrics whose value is above N at the end of the time period specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f54e6d4ca0e3b25e87f1b641704434201cf5491" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList followed by an integer N. Out of all metrics passed, draws only the metrics whose value is below N at the end of the time period specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9413477a08604959090b6c74bedfd511311af07c" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList followed by an integer N. Out of all metrics passed, draws only the metrics with an average value above N for the time period specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0318cf7631611e1152c8329ae06c2cfdd5a1e124" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList followed by an integer N. Out of all metrics passed, draws only the metrics with an average value below N for the time period specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b0a63a2423b0c39669ded273bdfa879322424aa" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList followed by an integer N. Out of all metrics passed, draws only the top N metrics with the highest average value for the time period specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52fd96310cd56efbb2ca185ac4e5cc309d812658" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList optionally followed by a precision, and rounds each datapoint to the specified precision.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8688f501091d8f41d958613feaca3449f8929ae9" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList, a base, and draws the y-axis in logarithmic format. If base is omitted, the function defaults to base 10.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1179b5de7596cc6a74e51fccd7b4f30989df0fe" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList, a number N of datapoints or a quoted string with a length of time like &amp;lsquo;1hour&amp;rsquo; or &amp;lsquo;5min&amp;rsquo; (See &lt;code&gt;from /
until&lt;/code&gt; in the &lt;a href=&quot;render_api&quot;&gt;Render API&lt;/a&gt; for examples of time formats), a function to apply to the points in the window to produce the output, and an xFilesFactor value to specify how many points in the window must be non-null for the output to be considered valid. Graphs the output of the function for the preceeding datapoints for each point on the graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5de6298eaad026fb71a9d455c1dba3ae66ba098" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList, and computes the square root of each datapoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddc036bb2018dca1f46f6980383338208db36ffe" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList, and inverts each datapoint (i.e. 1/x).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0b30968c5f323382a6794b9475a89e1a2a80e9d" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList, and optionally a limit to the number of &amp;lsquo;None&amp;rsquo; values to skip over. Continues the line with the last received value when gaps (&amp;lsquo;None&amp;rsquo; values) appear in your data, rather than breaking your line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4879cfe6b7e386d5226d407372e7926a99f3656d" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList, followed by a float F.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70ae3b240ae8049cb679ed245824c1d45c261c16" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList, followed by a quoted string with the length of time (See &lt;code&gt;from / until&lt;/code&gt; in the &lt;a href=&quot;render_api&quot;&gt;Render API&lt;/a&gt; for examples of time formats).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20c3813408e7f384242af216caf026a057bc6cfd" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList, followed by a quoted string with the length of time (See &lt;code&gt;from / until&lt;/code&gt; in the &lt;a href=&quot;render_api&quot;&gt;Render API&lt;/a&gt; for examples of time formats). Also takes a start multiplier and end multiplier for the length of time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feec3af9baf2b85f534d95cec54b7608fb2afd0c" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList, followed by a quoted string with the time to start the line and another quoted string with the time to end the line. The start and end times are inclusive (default range is from to until). See &lt;code&gt;from / until&lt;/code&gt; in the &lt;a href=&quot;render_api&quot;&gt;Render API&lt;/a&gt; for examples of time formats. Datapoints in the range is used to regression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3212ddea9a1323f11f4343d766864566227e7b1" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36ce20060fad61c6cc81192ac311c660bc859962" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList. Draws the average value of all metrics passed at each time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f7e819ba7e3002f221680b00f33bcd5782bfb50" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList. Draws the standard deviation of all metrics passed at each time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f75efaec4f76a0040d8c1a47acbe8e8a3a2039c9" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList. For each datapoint from each metric passed in, pick the maximum value and graph it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9938f607cbc50ebe3a604728e28f3833fbbd68ee" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList. For each datapoint from each metric passed in, pick the minimum value and graph it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="749eb800261df5e0ccb8803181a15a04c34edea3" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList. If the value is zero, draw the line at 0. If the value is above zero, draw the line at infinity. If the value is null or less than zero, do not draw the line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e181230629fca9863c67b6c4a01a1846627f8c1" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList. Out of all metrics passed, draws only the metrics with not empty data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83bdadc8a5924f84cdb66e7a66009a77f403c622" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList. Output 1 when the value changed, 0 when null or the same</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2638e9e4f564eaa54b5947e683e61d257c22ce33" translate="yes" xml:space="preserve">
          <source>Takes one metric or a wildcard seriesList. Sorts the list of metrics by the metric name using either alphabetical order or natural sorting. Natural sorting allows names containing numbers to be sorted more naturally, e.g: - Alphabetical sorting: server1, server11, server12, server2 - Natural sorting: server1, server2, server11, server12</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="369571b420d3e900c1a4e9d79c8529beed3a2614" translate="yes" xml:space="preserve">
          <source>Takes one or more comma-separated color names or RGB values (see bgcolor for a list of color names) and uses that list in order as the colors of the lines. If more lines / metrics are drawn than colors passed, the list is reused in order. Any RGB value can also have an optional transparency (00 being fully transparent, FF being opaque), as shown in the second example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbfce6e25f0989d0e45a3ff952c40d3618db8be8" translate="yes" xml:space="preserve">
          <source>Takes two or more series and multiplies their points. A constant may not be used. To multiply by a constant, use the scale() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27124e12eb3389b076e50487026a018ce9d8f218" translate="yes" xml:space="preserve">
          <source>Takes two or more series and pows their points. A constant line may be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b50dbd8cee68988303e6bed7ab6f7077b9845c8" translate="yes" xml:space="preserve">
          <source>Targets-io</source>
          <target state="translated">Targets-io</target>
        </trans-unit>
        <trans-unit id="4310a044bf66835e24a3f045c437ab047244a057" translate="yes" xml:space="preserve">
          <source>Tasseo</source>
          <target state="translated">Tasseo</target>
        </trans-unit>
        <trans-unit id="773b8a4c227bb531a604ef52e6b6342c1b46cb48" translate="yes" xml:space="preserve">
          <source>Telegraf is an agent written in Go for collecting, processing, aggregating, and writing metrics. It also supports metric output to Graphite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55e116d3eba8b4568003d345eafd92dfa606b0a4" translate="yes" xml:space="preserve">
          <source>Template components such as &amp;lt;env&amp;gt; will match everything up to the next dot. To match metric multiple components including the dots, use &amp;lt;&amp;lt;metric&amp;gt;&amp;gt; in the input template:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6e3439c699cbf427e4af8b95ad3967162d762b5" translate="yes" xml:space="preserve">
          <source>Terminal tool for displaying Graphite metrics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84a05594d0a83f9538d2cba9579e92a49beaf311" translate="yes" xml:space="preserve">
          <source>Terphite</source>
          <target state="translated">Terphite</target>
        </trans-unit>
        <trans-unit id="c4e1b74630ccc65d071407774c9ce69517d795a0" translate="yes" xml:space="preserve">
          <source>Tessera</source>
          <target state="translated">Tessera</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">The</target>
        </trans-unit>
        <trans-unit id="8f7dd462a7d0a484b7b9091851c03074432f802b" translate="yes" xml:space="preserve">
          <source>The /graphite is needed for Django to create the correct URLs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3094f447e3f736faa6f5ebbec1624b5a2b3806be" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;functions#graphite.render.functions.seriesByTag&quot;&gt;seriesByTag&lt;/a&gt; function supports specifying any number of tag expressions to refine the list of matches. When multiple tag expressions are specified, only series that match all the expressions will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c67efcd77fc8fd344edf1994ac46d4cd14be1d3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.apache.org/licenses/LICENSE-2.0.html&quot;&gt;Apache 2.0 License&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b1109d97dcd630810968b69174337b1868cb092" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.group&lt;/code&gt; attribute is the group name as a string, the &lt;code&gt;.params&lt;/code&gt; attribute is a list of parameter definitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8530a3493aa3464a951e222bf9f8ddf5c984209" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TAGDB_HTTP_URL&lt;/code&gt; is required. &lt;code&gt;TAGDB_HTTP_USER&lt;/code&gt; and &lt;code&gt;TAGDB_HTTP_PASSWORD&lt;/code&gt; are optional and if specified will be used to send a Basic Authorization header in all requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee99341a147b700cc032c60cc86fda6f8e3e8158" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[aggregator-cache]&lt;/code&gt; section defines listener and destination host/ports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="922f4d191e9b8c98b114818a28a70f743ffbe58b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[aggregator]&lt;/code&gt; section defines listener and destination host/ports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a404cf4c9515b74d70adb354d694f33bb1474f72" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[cache]&lt;/code&gt; section tells &lt;code&gt;carbon-cache.py&lt;/code&gt; what ports (2003/2004/7002), protocols (newline delimited, pickle) and transports (TCP/UDP) to listen on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d195f423fcf312cbe70db138fe62105ba5ca799" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[relay]&lt;/code&gt; section defines listener host/ports and a &lt;code&gt;RELAY_METHOD&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86052f96fa281ebbea541fe6ab7086092fd8e975" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;local_settings.py.example&lt;/code&gt; shipped with Graphite-web imports &lt;code&gt;app_settings.py&lt;/code&gt; into the namespace to allow further customization of Django. This allows the setting or customization of standard &lt;a href=&quot;https://docs.djangoproject.com/en/dev/ref/settings/&quot;&gt;Django settings&lt;/a&gt; and the installation and configuration of additional &lt;a href=&quot;https://docs.djangoproject.com/en/dev/topics/http/middleware/&quot;&gt;middleware&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69cf8cf66be9fbe6839dbe9f402ef3a89703011b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;retentions&lt;/code&gt; line is saying that each datapoint represents 10 seconds, and we want to keep enough datapoints so that they add up to 14 days of data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80232de85d088dbb3e3c98ae330ffbe9d3aecda3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;set&lt;/code&gt; parameter accepts an optional &lt;code&gt;union&lt;/code&gt; or &lt;code&gt;intersection&lt;/code&gt; argument to determine the behavior for filtering sets of tags (i.e. inclusive or exclusive). By default, Graphite uses a &amp;ldquo;lazy union&amp;rdquo; that will return any matching events for a given tag in a list of tags. This behavior is not intuitive and will therefore be deprecated in a future release.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="578d21c22475461166cba66a446a156b8e245690" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;target&lt;/code&gt; metrics can use a special &lt;code&gt;template&lt;/code&gt; function which allows the metric paths to contain variables. Values for these variables can be provided via the &lt;code&gt;template&lt;/code&gt; query parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="672c42b0a92dcdd221a53d5d09ae3d393d300baf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;target&lt;/code&gt; parameter specifies a path identifying one or several metrics, optionally with functions acting on those metrics. Paths are documented below, while functions are listed on the &lt;a href=&quot;functions&quot;&gt;Functions&lt;/a&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db36483bfbe6ee4e1d6c4a9ad051fe98e91b177e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;xFilesFactor&lt;/code&gt; line is saying that a minimum of 10% of the slots in the previous retention level must have values for next retention level to contain an aggregate. The &lt;code&gt;aggregationMethod&lt;/code&gt; line is saying that the aggregate function to use is &lt;code&gt;min&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a1f8d94871d99c6f1bc42c94c238dd55406aace" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Dashboard | Edit Dashboard&lt;/em&gt; menu item shows a JSON (JavaScript Object Notation) representation of the current dashboard and all its graphs in an editor dialog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d074912e6fdff600efd1bbec07179d93ed94a59" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Graph Operations&lt;/em&gt; menu button is used to perform miscellaneous actions on the graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7bab7bf421f991d55bb272b81136dc7b07ccb81" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Graphs | Resize&lt;/em&gt; menu item and the Gear menu button allow all graphs on the dashboard to be set to a specified size. You can either choose one of the preset sizes, or select &lt;em&gt;Custom&lt;/em&gt; and enter your own width and height (in pixels).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a7fe6b522b7df40649124fed46d533a6427ba14" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Render Options&lt;/em&gt; menu button is used to set options that apply to the whole graph, rather than just the selected metric.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f3e3188e17a05580b2e224e0b532fc192021c48" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Share&lt;/em&gt; menu button shows a URL for the dashboard, allowing others to access it directly. This first warns you that your dashboard must be saved, then presents the URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0df5ff1dc58c8466825fe957b495328be6d2edab" translate="yes" xml:space="preserve">
          <source>The Basic Idea</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c30c417cfe6a21c9ebe166977fecbc8a2188a069" translate="yes" xml:space="preserve">
          <source>The Carbon Daemons</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26b6c73acec93032176fb17a13cb91ffd1bfe6cc" translate="yes" xml:space="preserve">
          <source>The Ceres Database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c22636934f6a786b7f98f22af6a2c348a732932a" translate="yes" xml:space="preserve">
          <source>The Constant is calculated as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a86059ba54d619ec4f88fe644a1a19fca490919" translate="yes" xml:space="preserve">
          <source>The Dashboard User Interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cea8496c4e704749288516a42bc37ab11e80769f" translate="yes" xml:space="preserve">
          <source>The Dashboard interface is the tool of choice for displaying more than one graph at a time, with all graphs showing the same time range. Unless you&amp;rsquo;re using the HTTP interface to embed graphs in your own applications or web pages, this is the Graphite interface you&amp;rsquo;ll use most often. It&amp;rsquo;s certainly the interface that will be of most use to operations staff.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f061b6d8cd5dfd21ce2f768b8e24e94032687c9b" translate="yes" xml:space="preserve">
          <source>The HTTP api provides 2 endpoints to support auto-completion of tags and values based on the series which match a provided set of tag expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28caac2fbc7bbeade848edec64719644e66c372f" translate="yes" xml:space="preserve">
          <source>The HTTP(S) TagDB is used to delegate all tag operations to an external server that implements the Graphite tagging HTTP API. It can be used in clustered graphite scenarios, or with custom data stores. It is selected by setting &lt;code&gt;TAGDB='graphite.tags.http.HttpTagDB'&lt;/code&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a13c74896739fedb3c6277a84f2422bc5f0048f3" translate="yes" xml:space="preserve">
          <source>The Local TagDB stores tag information in tables inside the graphite-web database. It supports SQLite, MySQL and Postgres, and is enabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f683b989c19e6a14421cda796b3ce330fa258a5" translate="yes" xml:space="preserve">
          <source>The Redis TagDB will store the tag information on a Redis server, and is selected by setting &lt;code&gt;TAGDB='graphite.tags.redis.RedisTagDB'&lt;/code&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95de9d2e9a2bb83de04a38369bf50b2f47d4bc16" translate="yes" xml:space="preserve">
          <source>The Render URL API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b090ca30b0224289ec1af0ad9c2adcc55090d4cf" translate="yes" xml:space="preserve">
          <source>The Update button does not save your changes - you&amp;rsquo;ll need to use &lt;em&gt;Save&lt;/em&gt; or &lt;em&gt;Save As&lt;/em&gt; to do this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6bb5b31cd2aed435cd6e34fb95e40daef028907" translate="yes" xml:space="preserve">
          <source>The Whisper Database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="907432017c081e3208e731b59e80c19619593a5e" translate="yes" xml:space="preserve">
          <source>The aggregation parameters are kept separate from the retention parameters because the former depends on the type of data being collected and the latter depends on volume and importance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f66fb18cd54a7fd6240ed0cd75868286edc3826" translate="yes" xml:space="preserve">
          <source>The alignToFrom boolean parameter has been replaced by alignTo and no longer has any effect. Alignment can be to years, months, weeks, days, hours, and minutes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83cd1ccf14fbf7eda09cd31ac996afa79ee8015e" translate="yes" xml:space="preserve">
          <source>The architecture in a nutshell</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="308b0971827986724061405c14b390d08f5f6bd2" translate="yes" xml:space="preserve">
          <source>The asterisk (&lt;code&gt;*&lt;/code&gt;) matches zero or more characters. It is non-greedy, so you can have more than one within a single path element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="472ec072a169d8651e601b59d9bd7f6935114d8a" translate="yes" xml:space="preserve">
          <source>The average of non-null points in the series</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="464bee9e88bbc5b0047f3225ea5d4323600279cc" translate="yes" xml:space="preserve">
          <source>The base directory for the Graphite install. This setting is used to shift the Graphite install from the default base directory which keeping the &lt;a href=&quot;install#default-installation-layout&quot;&gt;default layout&lt;/a&gt;. The paths derived from this setting can be individually overridden as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f29ebb412321feb543f99b8543586696b56c09b" translate="yes" xml:space="preserve">
          <source>The base directory from which WHISPER_DIR, RRD_DIR, CERES_DIR, LOG_DIR, and INDEX_FILE default paths are referenced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62749746210c23431bb3339ba3a7b5cb6a61d556" translate="yes" xml:space="preserve">
          <source>The configuration files must then all be added to &lt;code&gt;/usr/local/apache2/conf/vhosts.d/&lt;/code&gt;. Still others may not help handle this at all and you must add the configuration to your http.conf file directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c427f0550b178ead14e766370b590dcb114d5c9d" translate="yes" xml:space="preserve">
          <source>The data sent must be in the following format: &lt;code&gt;&amp;lt;metric path&amp;gt; &amp;lt;metric value&amp;gt; &amp;lt;metric timestamp&amp;gt;&lt;/code&gt;. Carbon will then help translate this line of text into a metric that the web interface and Whisper understand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cb456888c42497eeb5a51b0deed5a5daaf3b7d3" translate="yes" xml:space="preserve">
          <source>The datapoints is a list of points found in the database for the required interval. There must be &lt;code&gt;(end - start) / step&lt;/code&gt; points in the dataset even if the database has gaps: gaps can be filled with &lt;code&gt;None&lt;/code&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="539622d22b3611e1a0d2bdec661bbb3d138ab211" translate="yes" xml:space="preserve">
          <source>The default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52293def294d2c67c15e4f549f6f15f87182636f" translate="yes" xml:space="preserve">
          <source>The default finder reads data from a Whisper database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f33192ba0853c0ec3c9346c86378a4627f61f9c" translate="yes" xml:space="preserve">
          <source>The default graphite setup consists of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dc7a58027570de627fbdc4cfbbeb6b99004a7a5" translate="yes" xml:space="preserve">
          <source>The default settings (above) will connect to a local Redis server on the default port, and use the default database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ab2d843fbcd2877cde2a66c0d5703f6b5c84f9" translate="yes" xml:space="preserve">
          <source>The directory to write Graphite-web&amp;rsquo;s log files. This directory must be writable by the user running the Graphite-web webapp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10840636e453f773121468263906ca2e306786c3" translate="yes" xml:space="preserve">
          <source>The disadvantage of a purely hierarchical system is that it is very difficult to make changes to the hierarchy, since anything querying Graphite will also need to be updated. Additionally, there is no built-in description of the meaning of any particular element in the hierarchy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da4012556ad300f92adb02cd4a91be6cc82ed79c" translate="yes" xml:space="preserve">
          <source>The easiest way to poll JMX metrics and write them to Graphite. This tool runs as a Docker container, polling your JMX every X seconds and writing the metrics to Graphite. Requires a minimum of configuration to get started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c582a99f1cb1856beea9aaec77bc5349d0f312f" translate="yes" xml:space="preserve">
          <source>The example defaults are sane, but they may not meet your information resolution needs or storage limitations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67c7111a233f8e71543df4c6805135722f67ebba" translate="yes" xml:space="preserve">
          <source>The first pattern that matches the metric name is used, similar to &lt;code&gt;storage-schemas.conf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="360c6ccdd5a21f9238828e22e79346beffa44c3b" translate="yes" xml:space="preserve">
          <source>The first pattern that matches the metric name is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb5933a2dfc0d1406ef4d00b4ef62749b4f0da97" translate="yes" xml:space="preserve">
          <source>The first period EMA uses a simple moving average for its value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0486f64a165a8acf8d07ccca1e2e754e66fc4400" translate="yes" xml:space="preserve">
          <source>The following configures the Django database settings. Graphite uses the database for storing user profiles, dashboards, and for the Events functionality. Graphite uses an SQLite database file located at &lt;code&gt;STORAGE_DIR/graphite.db&lt;/code&gt; by default. If running multiple Graphite-web instances, a database such as PostgreSQL or MySQL is required so that all instances may share the same data source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1321b5b9dc1e83a43f76fa06d4ec3f83bd2e67ca" translate="yes" xml:space="preserve">
          <source>The following parameters influence the install location:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df88d2f6608d6ef506f1e7b708a827363cccd52c" translate="yes" xml:space="preserve">
          <source>The following will do:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb0da0e61d9e06ff3a31cbacdd20ff1e17354f8c" translate="yes" xml:space="preserve">
          <source>The following will return the rate of 5XX&amp;rsquo;s per service:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11c747ba3b8d34bd7bb71abd22f277ee3ff7c260" translate="yes" xml:space="preserve">
          <source>The form of each line in this file should be as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe2e8aa1f8332e12e0329c761570baaa8b06e4f9" translate="yes" xml:space="preserve">
          <source>The format is as a set of key-value pairs separated by ampersands, like a query string. The keys and values come from &lt;a href=&quot;render_api&quot;&gt;The Render URL API&lt;/a&gt; and they&amp;rsquo;re all available. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="354d8003d236390d5f2a86a2b24332bff69a3097" translate="yes" xml:space="preserve">
          <source>The format of the schemas file is easiest to demonstrate with an example. Let&amp;rsquo;s say we&amp;rsquo;ve written a script to collect system load data from various servers, the naming scheme will be like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53db59f47cfc9e9cbab244363a3dc3dfe99b73cf" translate="yes" xml:space="preserve">
          <source>The function used to consolidate points can be set using the &lt;a href=&quot;functions#graphite.render.functions.consolidateBy&quot;&gt;consolidateBy&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed235598ca7ec076a8b389849abcd2711d525659" translate="yes" xml:space="preserve">
          <source>The functions are grouped as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28256f069416e1dc2394cbb287add34cadd06f5d" translate="yes" xml:space="preserve">
          <source>The functions are grouped in the menu, as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19faa6381237e4104b43e8dc70bdcf909e810cb3" translate="yes" xml:space="preserve">
          <source>The general idea is that the pickled data forms a list of multi-level tuples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e461c9a9c4c4b52d8e90064d0655ad360013ef9" translate="yes" xml:space="preserve">
          <source>The graphite webapp provides a &lt;code&gt;/render&lt;/code&gt; endpoint for generating graphs and retrieving raw data. This endpoint accepts various arguments via query string parameters. These parameters are separated by an ampersand (&lt;code&gt;&amp;amp;&lt;/code&gt;) and are supplied in the format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6a19b218de2c0b6183e34987352b55c562f5072" translate="yes" xml:space="preserve">
          <source>The items in the list of metrics can be edited in place. Double-click the item, edit as required, then hit Enter to complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4da9721a71308fcb1e5e26c84b1a251fde6171a4" translate="yes" xml:space="preserve">
          <source>The label would be printed as &amp;ldquo;hostname.avgUpdateTime&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d3f5debced83e1f84cfaa87df78e480178bd9e8" translate="yes" xml:space="preserve">
          <source>The last menu item is &lt;em&gt;Remove Outer Call&lt;/em&gt;, which removes the outer-most function on the current metric.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="833016f661590cadd4e815f3c33aee1ecd3e4749" translate="yes" xml:space="preserve">
          <source>The latest source tarballs for Graphite-web, Carbon, and Whisper may be fetched from the Graphite project &lt;a href=&quot;https://launchpad.net/graphite/+download&quot;&gt;download page&lt;/a&gt; or the latest development branches may be cloned from the &lt;a href=&quot;http://github.com/graphite-project&quot;&gt;Github project page&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67d0c1f35f2a6185ff8fcb05fca9f88a27c49ada" translate="yes" xml:space="preserve">
          <source>The list of IP addresses and ports of remote Graphite webapps in a cluster. Each of these servers should have local access to metric data to serve. Ex: [&amp;ldquo;10.0.2.2:80&amp;rdquo;, &amp;ldquo;&lt;a href=&quot;http://10.0.2.3:80?format=pickle&amp;amp;local=1&quot;&gt;http://10.0.2.3:80?format=pickle&amp;amp;local=1&lt;/a&gt;&amp;rdquo;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d43d70e03d97d0f124dabf7e5742f224d5a4d32" translate="yes" xml:space="preserve">
          <source>The list of directories searched for data files. By default, this is the value of WHISPER_DIR and RRD_DIR (if rrd support is detected). If this setting is defined, the WHISPER_DIR, CERES_DIR, and RRD_DIR settings have no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fec0182244e14de98341aec1b7385344df75d6bc" translate="yes" xml:space="preserve">
          <source>The location of Ceres data files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4392d76c5bcaad2c5db1e5be07e06bd759474dd" translate="yes" xml:space="preserve">
          <source>The location of Graphite-web&amp;rsquo;s static content. This defaults to &lt;code&gt;static/&lt;/code&gt; three parent directories up from &lt;code&gt;settings.py&lt;/code&gt;. In the &lt;a href=&quot;install#default-installation-layout&quot;&gt;default layout&lt;/a&gt; this is &lt;code&gt;/opt/graphite/static&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96a4ee5ad1f242eadaf29b9d89c080af3f96c9e0" translate="yes" xml:space="preserve">
          <source>The location of RRD data files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41baf5886e71a1c178089e2267512dca150c3274" translate="yes" xml:space="preserve">
          <source>The location of Whisper data files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="091a75039ec5aa539787887073d00d94ac0fc657" translate="yes" xml:space="preserve">
          <source>The location of additional Graphite-web configuration files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed8fc9bed40f12d7ce85a2af17c6fee5f252a146" translate="yes" xml:space="preserve">
          <source>The location of the Graphite-web Dashboard configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0957e44f472a3f12ed836ca993b73f471d7ea68" translate="yes" xml:space="preserve">
          <source>The location of the Graphite-web Graph Template configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="530956512cc4ca183eaef826357187a62e96df56" translate="yes" xml:space="preserve">
          <source>The location of the search index file. This file is generated by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b7a960b46815a2361bacb9cca8ba7400a9e6984" translate="yes" xml:space="preserve">
          <source>The maximum number of worker threads that should be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4195a34bc31f1bc34a6766f0ab9d03c778da569" translate="yes" xml:space="preserve">
          <source>The maximum of non-null points in the series</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b229e54a25ac434d9ccb098cfbbd267c98195578" translate="yes" xml:space="preserve">
          <source>The method of running Graphite-web within Virtualenv depends on the WSGI server used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="124e858963d06cb4352706ee3566a3918ef4595f" translate="yes" xml:space="preserve">
          <source>The most common settings to manipulate are &lt;code&gt;INSTALLED_APPS&lt;/code&gt;, &lt;code&gt;MIDDLEWARE&lt;/code&gt;, and &lt;code&gt;AUTHENTICATION_BACKENDS&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adb72d83a49151a787f370e97ec3afbdf757b9fe" translate="yes" xml:space="preserve">
          <source>The name &lt;code&gt;[garbage_collection]&lt;/code&gt; is mainly for documentation purposes, and will show up in &lt;code&gt;creates.log&lt;/code&gt; when metrics matching this section are created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aea74b0f5d4904f6a3cda2fab273a73006f8ed3b" translate="yes" xml:space="preserve">
          <source>The number of datapoints retained in a &lt;a href=&quot;#term-series&quot;&gt;series&lt;/a&gt;. Alternatively: The length of time datapoints are stored in a series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a3929b86963215772bc1107228989934878b3fc" translate="yes" xml:space="preserve">
          <source>The number of seconds per datapoint in a &lt;a href=&quot;#term-series&quot;&gt;series&lt;/a&gt;. Series are created with a resolution which determines how often a &lt;a href=&quot;#term-datapoint&quot;&gt;datapoint&lt;/a&gt; may be stored. This resolution is represented as the number of seconds in time that each datapoint covers. A series which stores one datapoint per minute has a resolution of 60 seconds. Similarly, a series which stores one datapoint per second has a resolution of 1 second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07898524c1f2f7ac65c1e183f870aa23d6d9dd90" translate="yes" xml:space="preserve">
          <source>The output series would have keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cf2fae0968ce5a8823c7237c66f8b1d4d6466da" translate="yes" xml:space="preserve">
          <source>The pattern above will match any metric that ends with &lt;code&gt;.min&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a50d10f09d857dadb8b66c536a6e87bfd399c1e" translate="yes" xml:space="preserve">
          <source>The patterns are regular expressions, as opposed to the wildcards used in the URL API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef004b6b585b84fc6adb1c43f4e727e49335017" translate="yes" xml:space="preserve">
          <source>The pickle protocol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e317d5732cbe814d6058306c04290f42d6ae50d" translate="yes" xml:space="preserve">
          <source>The pickle protocol is a much more efficient take on the plaintext protocol, and supports sending batches of metrics to Carbon in one go.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56aff5070f61e121c6db5ebe17b1a03610cb2488" translate="yes" xml:space="preserve">
          <source>The plaintext protocol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68debf124fdf5d3b8f816289fb5f114e090f7279" translate="yes" xml:space="preserve">
          <source>The plaintext protocol is the most straightforward protocol supported by Carbon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b85b1c743b9583f32665fef80e3facbf34d6d022" translate="yes" xml:space="preserve">
          <source>The provided expressions are used to filter the results, so that the suggested list of tags will only include tags that occur in series matching the expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="978bac7dbd5b07dfeeaa4443d90ce3c80e715815" translate="yes" xml:space="preserve">
          <source>The recommended workflow is to use &lt;a href=&quot;http://www.virtualenv.org/&quot;&gt;virtualenv&lt;/a&gt; / &lt;a href=&quot;http://virtualenvwrapper.readthedocs.io/&quot;&gt;virtualenvwrapper&lt;/a&gt; to isolate projects between each other. This document uses virtualenv as the lowest common denominator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5432128e8e5db7dcfce9e489a8ae8ba6a9bae5e9" translate="yes" xml:space="preserve">
          <source>The regular expression pattern will match any metric that ends with &lt;code&gt;garbageCollections&lt;/code&gt;. For example, &lt;code&gt;com.acmeCorp.instance01.jvm.memory.garbageCollections&lt;/code&gt; would match, but &lt;code&gt;com.acmeCorp.instance01.jvm.memory.garbageCollections.full&lt;/code&gt; would not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684221677379931837c2a064390dbe2983ecfcce" translate="yes" xml:space="preserve">
          <source>The resulting list of series are aliased so that they can easily be nested in other functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5670972dae924f52139efa43d649df1cc4a19f28" translate="yes" xml:space="preserve">
          <source>The retentions line can specify multiple retentions. Each retention of &lt;code&gt;frequency:history&lt;/code&gt; is separated by a comma.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a774b875e4f566229ed0f41cf1eb13c1aeca6a84" translate="yes" xml:space="preserve">
          <source>The second reason whisper was written is performance. RRDtool is very fast; in fact it is much faster than whisper. But the problem with RRD (at the time whisper was written) was that RRD only allowed you to insert a single value into a database at a time, while whisper was written to allow the insertion of multiple data points at once, compacting them into a single write operation. This improves performance drastically under high load because Graphite operates on many many files, and with such small operations being done (write a few bytes here, a few over there, etc) the bottleneck is caused by the &lt;em&gt;number of I/O operations&lt;/em&gt;. Consider the scenario where Graphite is receiving 100,000 distinct metric values each minute; in order to sustain that load Graphite must be able to write that many data points to disk each minute. But assume that your underlying storage can only handle 20,000 I/O operations per minute. With RRD (at the time whisper was written), there was no chance of keeping up. But with whisper, we can keep caching the incoming data until we accumulate say 10 minutes worth of data for a given metric, then instead of doing 10 I/O operations to write those 10 data points, whisper can do it in one operation. The reason I have kept mentioning &amp;ldquo;at the time whisper was written&amp;rdquo; is that RRD now supports this behavior. However Graphite will continue to use whisper as long as the first issue still exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e4e514ea61543a3672ed877ba5ed90ba9367de5" translate="yes" xml:space="preserve">
          <source>The sections are applied in order from the top (first) and bottom (last), similar to &lt;code&gt;storage-schemas.conf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1b89d9e7a58d5305abe6203068283f38ebcc37c" translate="yes" xml:space="preserve">
          <source>The sections are applied in order from the top (first) and bottom (last).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e461bc65955589958f1d0420de5b5670996bed4" translate="yes" xml:space="preserve">
          <source>The series in seriesList will be aliased by first translating the series names using the search &amp;amp; replace parameters, then using the last value of the resulting series to construct the alias using sprintf-style syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bcd170871753f32fa420e95acca7a0895044e95" translate="yes" xml:space="preserve">
          <source>The setting supports multiple values, meaning you can read data from both a Whisper database and a Ceres database:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="383e55f4301d41525354fc3327b3e55a425c8c7c" translate="yes" xml:space="preserve">
          <source>The simplest way to show more than one metric on a graph is to add each as a separate graph, and then combine the graphs. To combine 2 graphs, drag one over the other and then wait until the target graph shows &amp;ldquo;Drop to Merge&amp;rdquo;. Drop the graph, and the target graph will now show all metrics from both graphs. Repeat for as many metrics as required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e30657292ef4fe2d22ce0e188a07c78484205c3" translate="yes" xml:space="preserve">
          <source>The target param can also be repeated to graph multiple related metrics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1646833bbca2deeb0341c6b20f52001808212dbf" translate="yes" xml:space="preserve">
          <source>The time in seconds for the rendered graph to be cached (only relevant if memcached is configured)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d474985e97ec23568d46bb1fc3a9e9f17973182" translate="yes" xml:space="preserve">
          <source>The timestamp is the number of seconds since the UNIX Epoch (01-01-1970). The data value is parsed by the Python &lt;a href=&quot;http://docs.python.org/library/functions.html#float&quot;&gt;float()&lt;/a&gt; function and as such behaves in the same way for special strings such as &lt;code&gt;'inf'&lt;/code&gt;. Maximum and minimum values are determined by the Python interpreter&amp;rsquo;s allowable range for float values which can be found by executing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24a84d116892aa3300c41b177572269eab8f4647" translate="yes" xml:space="preserve">
          <source>The total retention time of the database is determined by the archive with the highest retention as the time period covered by each archive is overlapping (see &lt;a href=&quot;#multi-archive-storage-and-retrieval-behavior&quot;&gt;Multi-Archive Storage and Retrieval Behavior&lt;/a&gt;). That is, a pair of archives with retentions of 1 month and 1 year will not provide 13 months of data storage as may be guessed. Instead, it will provide 1 year of storage - the length of its longest archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="830ed770637c303377fd013a5f084ae18f615ac4" translate="yes" xml:space="preserve">
          <source>The type of aggregation to use to calculate slices of a pie when &lt;code&gt;graphType=pie&lt;/code&gt;. One of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cdac48a89a7a1f7dd87115c03a34560e89b5760" translate="yes" xml:space="preserve">
          <source>The version Python used to compile mod_wsgi must match the Python installed in the virtualenv (generally the system Python)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f27a72d5314b11478093ba57286a2937cb15d668" translate="yes" xml:space="preserve">
          <source>The whitelist functionality allows any of the carbon daemons to only accept metrics that are explicitly whitelisted and/or to reject blacklisted metrics. The functionality can be enabled in carbon.conf with the &lt;code&gt;USE_WHITELIST&lt;/code&gt; flag. This can be useful when too many metrics are being sent to a Graphite instance or when there are metric senders sending useless or invalid metrics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cd93303f04c9e4e03a4278e035ca3e8aedac15d" translate="yes" xml:space="preserve">
          <source>Then create the file &lt;code&gt;wsgi.py&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8eecaa6c9e2892bf2310a1eb21cbab8466b11ed" translate="yes" xml:space="preserve">
          <source>Then create the graphite.wsgi. (You can find example of graphite.wsgi file on the &lt;a href=&quot;https://github.com/graphite-project/graphite-web/blob/master/conf/graphite.wsgi.example&quot;&gt;conf&lt;/a&gt; directory of source ditribution):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37950838c38483c1dbd5d08fd8c077af0dd74991" translate="yes" xml:space="preserve">
          <source>Then create the uWSGI file for Graphite-web in &lt;code&gt;/etc/uwsgi/apps-available/graphite.ini&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d630c8269ebb30c31e9b755cdc5548be34ee4980" translate="yes" xml:space="preserve">
          <source>Then you should be able to run the graphite development server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5068c426481f4737b83078e888db67258fa12fd" translate="yes" xml:space="preserve">
          <source>There are also several other dependencies required for additional features:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d250a8faa2bc302dc0456b8bc3f703eb7b21220e" translate="yes" xml:space="preserve">
          <source>There are many tools that interact with Graphite. See the &lt;a href=&quot;tools&quot;&gt;Tools&lt;/a&gt; page for some choices of tools that may be used to feed Graphite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ba7c9e9fc8c5891986885cf26d656ed6cbffbf" translate="yes" xml:space="preserve">
          <source>There are multiple formats for these functions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b9a92341de31084269e3f809a24d071a7f66fea" translate="yes" xml:space="preserve">
          <source>There are multiple ways to expose the Graphite webapp. The following stack configurations exist:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6c2e4689647f8875c3526f0241f74984cc06623" translate="yes" xml:space="preserve">
          <source>There are some tools and APIs which can help you get your data into Carbon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e8c09e5f3e58e5ce4e3c1bef3d505ae3c08985" translate="yes" xml:space="preserve">
          <source>There can be many sections in this file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c0bcd75813929d7c93781284b01715748a5d1d2" translate="yes" xml:space="preserve">
          <source>There currently is no tarball available for Ceres, it must be cloned from the &lt;a href=&quot;http://github.com/graphite-project&quot;&gt;Github project page&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e89a17052e0291f9d049ab0df44e78940082fcbd" translate="yes" xml:space="preserve">
          <source>There is an example &lt;code&gt;example-graphite-vhost.conf&lt;/code&gt; file in the examples directory of the graphite web source code. You can use this to configure apache. Different distributions have different ways of configuring Apache. Please refer to your distribution&amp;rsquo;s documentation on the subject.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="465180e26a91a7cc1726ff8335adc1232fa156c8" translate="yes" xml:space="preserve">
          <source>There is currently no support in Ceres for handling slices with mixed resolutions in the same way that is done with Whisper archives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf20d658352a2bc50354c3ab7bde6993bf6b5a5c" translate="yes" xml:space="preserve">
          <source>There is no &lt;code&gt;retentions&lt;/code&gt; line. Instead, there are &lt;code&gt;xFilesFactor&lt;/code&gt; and/or &lt;code&gt;aggregationMethod&lt;/code&gt; lines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b7f9b741fcccc5d17afd23a22ca85bab9fb4ad" translate="yes" xml:space="preserve">
          <source>There sure is! Here it is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59cace55f4d5071520b2dd2a8e5e64556c23c516" translate="yes" xml:space="preserve">
          <source>Therry</source>
          <target state="translated">Therry</target>
        </trans-unit>
        <trans-unit id="f536958fef9b1848b0f1ad8ad8df7abbdc85bd43" translate="yes" xml:space="preserve">
          <source>These are optional parameters that specify the relative or absolute time period to graph. &lt;code&gt;from&lt;/code&gt; specifies the beginning, &lt;code&gt;until&lt;/code&gt; specifies the end. If &lt;code&gt;from&lt;/code&gt; is omitted, it defaults to 24 hours ago. If &lt;code&gt;until&lt;/code&gt; is omitted, it defaults to the current time (now).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="625c1487223885aa6024fe6906005c203a8b6b59" translate="yes" xml:space="preserve">
          <source>These are set at the time the first metric is sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="348ecb6ae3e49c12b58db8bdb884b08c1fac25ff" translate="yes" xml:space="preserve">
          <source>These rules would strip off a suffix of _sum or _avg from any metric names after aggregation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474a8cef75a02c64ae7490d1ec6a9a38fe344c81" translate="yes" xml:space="preserve">
          <source>These settings configure Django&amp;rsquo;s email functionality which is used for emailing rendered graphs. See the &lt;a href=&quot;https://docs.djangoproject.com/en/dev/topics/email/&quot;&gt;Django documentation&lt;/a&gt; for further detail on these settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b5472d9799d8458c505b55571d241e00a562772" translate="yes" xml:space="preserve">
          <source>These settings configure a custom LDAP authentication backend provided by Graphite. Additional settings to the ones below are configurable setting the LDAP module&amp;rsquo;s global options using &lt;code&gt;ldap.set_option&lt;/code&gt;. See the &lt;a href=&quot;http://python-ldap.org/&quot;&gt;module documentation&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9336ad01f2d617ae579bce58e141afb1dffb914" translate="yes" xml:space="preserve">
          <source>These settings configure the Graphite webapp for clustered use. When &lt;code&gt;CLUSTER_SERVERS&lt;/code&gt; is set, metric browse and render requests will cause the webapp to query other webapps in CLUSTER_SERVERS for matching metrics. Graphite can either merge responses or choose the best response if more than one cluster server returns the same series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2edd341bd50644d27065f0be7a25f22b67e2927d" translate="yes" xml:space="preserve">
          <source>These settings configure the location of Graphite-web&amp;rsquo;s additional configuration files, static content, and data. These need to be adjusted if Graphite-web is installed outside of the &lt;a href=&quot;install#default-installation-layout&quot;&gt;default installation layout&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14f2ef29d76bff6451c4d4d7305b624e16a063c3" translate="yes" xml:space="preserve">
          <source>These settings control who is allowed to save and delete dashboards. By default anyone can perform these actions, but by setting DASHBOARD_REQUIRE_AUTHENTICATION, users must at least be logged in to do so. The other two settings allow further restriction of who is able to perform these actions. Users who are not suitably authorized will still be able to use and change dashboards, but will not be able to save changes or delete dashboards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c6ce8ae2de4b15c3870883c68396883cbe0a21" translate="yes" xml:space="preserve">
          <source>These settings insert additional backends to the &lt;a href=&quot;https://docs.djangoproject.com/en/dev/ref/settings/#authentication-backends&quot;&gt;AUTHENTICATION_BACKENDS&lt;/a&gt; and &lt;a href=&quot;https://docs.djangoproject.com/en/dev/ref/settings/#std:setting-MIDDLEWARE&quot;&gt;MIDDLEWARE settings&lt;/a&gt;. Additional authentication schemes are possible by manipulating these lists directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36e9e6fa4c70e00296a25d2dc1257c2b36609c58" translate="yes" xml:space="preserve">
          <source>They would all go into the same aggregation buffer and after 60 seconds the aggregate metric &lt;code&gt;prod.applications.apache.all.requests&lt;/code&gt; would be calculated by summing their values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21ce1e11a01287e15f29823709f5bc3ff91014d1" translate="yes" xml:space="preserve">
          <source>This can be change by setting &lt;code&gt;GRAPHITE_SETTINGS_MODULE&lt;/code&gt; environment variable. For example in a wsgi file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe965fc4fa25f95e32b6b19baa5b2aa36e1a62d7" translate="yes" xml:space="preserve">
          <source>This can be done via the &lt;code&gt;STORAGE_FINDERS&lt;/code&gt; setting. This setting is a list of paths to finder implementations. Its default value is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d74b2dc46c30884a49a08e20a2e854b7f1a7c75" translate="yes" xml:space="preserve">
          <source>This class method is responsible for initializing and returning the finder object(s) as a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5542dadc8d69728b8998bb697e67816347eda108" translate="yes" xml:space="preserve">
          <source>This collects static files for graphite-web and external apps (namely, the Django admin app) and puts them in a directory that needs to be available under the &lt;code&gt;/static/&lt;/code&gt; URL of your web server. To configure Apache:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb8444b8e7ca9344c09922d3a7fcbb111ecb68bc" translate="yes" xml:space="preserve">
          <source>This complements &lt;a href=&quot;#graphite.render.functions.aggregateWithWildcards&quot;&gt;&lt;code&gt;aggregateWithWildcards&lt;/code&gt;&lt;/a&gt; which takes a list of wildcard nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73708a3de5deb100df03ec41ee9eaf1fe5bc9cb0" translate="yes" xml:space="preserve">
          <source>This complements &lt;a href=&quot;#graphite.render.functions.groupByNodes&quot;&gt;&lt;code&gt;groupByNodes&lt;/code&gt;&lt;/a&gt; which takes a list of nodes that must match in each group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7021973493a22ada2800c5b8b0dea93b85f6f27b" translate="yes" xml:space="preserve">
          <source>This complements other time-displacement functions such as timeShift and timeSlice, in that this function is indifferent about the step intervals being shifted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93a2b0fca10153ad1bfbbf962cf893e2e9b0852c" translate="yes" xml:space="preserve">
          <source>This computes the change in server free space as a percentage of the previous free space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="effd5c193e39e3bc655e595455449e9b31a0f7db" translate="yes" xml:space="preserve">
          <source>This configuration file details retention rates for storing metrics. It matches metric paths to patterns, and tells whisper what frequency and history of datapoints to store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="143c782f25a996909b7550f888fadd61ad41e512" translate="yes" xml:space="preserve">
          <source>This directory doesn&amp;rsquo;t even exist once you&amp;rsquo;ve installed graphite. It needs to be populated with the following command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="717e2309a8ff1d0965a278cce4198ef73b937279" translate="yes" xml:space="preserve">
          <source>This endpoint returns a list of the canonicalized paths, in the same order they are specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b7564334f8bc1415a615afcc4541f6b21d447ef" translate="yes" xml:space="preserve">
          <source>This endpoint returns the canonicalized version of the path, with the tags sorted in alphabetical order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bfe08a63aeef053ed90f43426f87fcebc7e2ded" translate="yes" xml:space="preserve">
          <source>This example sets the aggregation for the test.wsp to max. (The location of the python script depends on your installation)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79064563d45aac8e421e1ea507b24f843878ee46" translate="yes" xml:space="preserve">
          <source>This file defines how to aggregate data to lower-precision retentions. The format is similar to &lt;code&gt;storage-schemas.conf&lt;/code&gt;. Important notes before continuing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b886c7e16f649657a0c49dfbe00f88cf6b724662" translate="yes" xml:space="preserve">
          <source>This file is optional. If it is not present, defaults will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c1e7ce7852ea738c333e1aed5fa7e7c917b823c" translate="yes" xml:space="preserve">
          <source>This function assumes the values in each time series represent hits per second. It calculates hits per some larger interval such as per day or per hour. This function is like summarize(), except that it compensates automatically for different time scales (so that a similar graph results from using either fine-grained or coarse-grained records) and handles rarely-occurring events gracefully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fd16bac8db0e7bd5dbe346b1f977fc8a91ee3a8" translate="yes" xml:space="preserve">
          <source>This function can be used with aggregation functions &lt;code&gt;average&lt;/code&gt;, &lt;code&gt;median&lt;/code&gt;, &lt;code&gt;sum&lt;/code&gt;, &lt;code&gt;min&lt;/code&gt;, &lt;code&gt;max&lt;/code&gt;, &lt;code&gt;diff&lt;/code&gt;, &lt;code&gt;stddev&lt;/code&gt;, &lt;code&gt;count&lt;/code&gt;, &lt;code&gt;range&lt;/code&gt;, &lt;code&gt;multiply&lt;/code&gt; &amp;amp; &lt;code&gt;last&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08f45a4cac1deda457489313c09baa5a4d2b0a0b" translate="yes" xml:space="preserve">
          <source>This function can be used with all aggregation functions supported by &lt;a href=&quot;#graphite.render.functions.aggregate&quot;&gt;&lt;code&gt;aggregate&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;average&lt;/code&gt;, &lt;code&gt;median&lt;/code&gt;, &lt;code&gt;sum&lt;/code&gt;, &lt;code&gt;min&lt;/code&gt;, &lt;code&gt;max&lt;/code&gt;, &lt;code&gt;diff&lt;/code&gt;, &lt;code&gt;stddev&lt;/code&gt;, &lt;code&gt;range&lt;/code&gt; &amp;amp; &lt;code&gt;multiply&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8fe5728989d7f0211ffd14e197f11bdbc1917a5" translate="yes" xml:space="preserve">
          <source>This function does not normalize for periods of time, as a true derivative would. Instead see the perSecond() function to calculate a rate of change over time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4d9ecc3d4ec696eff3760847e5c4101ed4dabe1" translate="yes" xml:space="preserve">
          <source>This function is not very useful alone. It should be used with &lt;a href=&quot;#graphite.render.functions.reduceSeries&quot;&gt;&lt;code&gt;reduceSeries()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a0745e80630b3d0de330f5596d4aa579eff0d55" translate="yes" xml:space="preserve">
          <source>This function returns a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a077279d111e16fe1ea50d8aeebdd590bc1fb85b" translate="yes" xml:space="preserve">
          <source>This is an alias for &lt;a href=&quot;#graphite.render.functions.aggregate&quot;&gt;&lt;code&gt;aggregate&lt;/code&gt;&lt;/a&gt; with aggregation &lt;code&gt;average&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef5b936d783ff4c7313cec8f0c61952b8e916b15" translate="yes" xml:space="preserve">
          <source>This is an alias for &lt;a href=&quot;#graphite.render.functions.aggregate&quot;&gt;&lt;code&gt;aggregate&lt;/code&gt;&lt;/a&gt; with aggregation &lt;code&gt;diff&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fd6559ddd671c83b3972f3475dd607d41662d09" translate="yes" xml:space="preserve">
          <source>This is an alias for &lt;a href=&quot;#graphite.render.functions.aggregate&quot;&gt;&lt;code&gt;aggregate&lt;/code&gt;&lt;/a&gt; with aggregation &lt;code&gt;max&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd0dea9c791f280aa049885a0c3ed82b2d0e0318" translate="yes" xml:space="preserve">
          <source>This is an alias for &lt;a href=&quot;#graphite.render.functions.aggregate&quot;&gt;&lt;code&gt;aggregate&lt;/code&gt;&lt;/a&gt; with aggregation &lt;code&gt;min&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b49862a775b8a16e0d16cd37d78abb6e12b0877e" translate="yes" xml:space="preserve">
          <source>This is an alias for &lt;a href=&quot;#graphite.render.functions.aggregate&quot;&gt;&lt;code&gt;aggregate&lt;/code&gt;&lt;/a&gt; with aggregation &lt;code&gt;multiply&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1046bbddbb36a3caa27aba3942b973a6b17b6014" translate="yes" xml:space="preserve">
          <source>This is an alias for &lt;a href=&quot;#graphite.render.functions.aggregate&quot;&gt;&lt;code&gt;aggregate&lt;/code&gt;&lt;/a&gt; with aggregation &lt;code&gt;rangeOf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b27455ff9623eeba3ffa6fd4441b7ebe181e16f5" translate="yes" xml:space="preserve">
          <source>This is an alias for &lt;a href=&quot;#graphite.render.functions.aggregate&quot;&gt;&lt;code&gt;aggregate&lt;/code&gt;&lt;/a&gt; with aggregation &lt;code&gt;stddev&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6d06ab2511c9d8b572bcb2e29d1486f4132919b" translate="yes" xml:space="preserve">
          <source>This is an alias for &lt;a href=&quot;#graphite.render.functions.aggregate&quot;&gt;&lt;code&gt;aggregate&lt;/code&gt;&lt;/a&gt; with aggregation &lt;code&gt;sum&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39d2075cece0549994ccf710a1e5b2c96c03a31" translate="yes" xml:space="preserve">
          <source>This is an alias for &lt;a href=&quot;#graphite.render.functions.aggregateWithWildcards&quot;&gt;&lt;code&gt;aggregateWithWildcards&lt;/code&gt;&lt;/a&gt; with aggregation &lt;code&gt;average&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf52379aa181fb24132ee5b528e0b62c3346137e" translate="yes" xml:space="preserve">
          <source>This is an alias for &lt;a href=&quot;#graphite.render.functions.aggregateWithWildcards&quot;&gt;&lt;code&gt;aggregateWithWildcards&lt;/code&gt;&lt;/a&gt; with aggregation &lt;code&gt;multiply&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce2a6ba3cd5bac1b6f95a8c6cceb2bbf5ced5837" translate="yes" xml:space="preserve">
          <source>This is an alias for &lt;a href=&quot;#graphite.render.functions.aggregateWithWildcards&quot;&gt;&lt;code&gt;aggregateWithWildcards&lt;/code&gt;&lt;/a&gt; with aggregation &lt;code&gt;sum&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c6dc4e9c8a9e67780e617ff744c50bb388cdf9c" translate="yes" xml:space="preserve">
          <source>This is an alias for &lt;a href=&quot;#graphite.render.functions.aliasByNode&quot;&gt;&lt;code&gt;aliasByNode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24ee4d8d299d559a776069aecfe7597cd5942554" translate="yes" xml:space="preserve">
          <source>This is an alias for &lt;a href=&quot;#graphite.render.functions.highest&quot;&gt;&lt;code&gt;highest&lt;/code&gt;&lt;/a&gt; with aggregation &lt;code&gt;average&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed46e71ed1a40453323efe9d2f20ef9a1a9fed80" translate="yes" xml:space="preserve">
          <source>This is an alias for &lt;a href=&quot;#graphite.render.functions.highest&quot;&gt;&lt;code&gt;highest&lt;/code&gt;&lt;/a&gt; with aggregation &lt;code&gt;current&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f27755c5c54de17a9a5e0bfe9878f7bfcc484c66" translate="yes" xml:space="preserve">
          <source>This is an alias for &lt;a href=&quot;#graphite.render.functions.highest&quot;&gt;&lt;code&gt;highest&lt;/code&gt;&lt;/a&gt; with aggregation &lt;code&gt;max&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc62d68afe8c1daa33cf37a6ffeac5d4feacd9d1" translate="yes" xml:space="preserve">
          <source>This is an alias for &lt;a href=&quot;#graphite.render.functions.lowest&quot;&gt;&lt;code&gt;lowest&lt;/code&gt;&lt;/a&gt; with aggregation &lt;code&gt;average&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="750afecc517981c3acfaf831ebb4867735749fce" translate="yes" xml:space="preserve">
          <source>This is an alias for &lt;a href=&quot;#graphite.render.functions.lowest&quot;&gt;&lt;code&gt;lowest&lt;/code&gt;&lt;/a&gt; with aggregation &lt;code&gt;current&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de175d5a3e9f7d1527fcade2ffc93e13e0cb2566" translate="yes" xml:space="preserve">
          <source>This is an alias for using &lt;a href=&quot;#graphite.render.functions.groupByNodes&quot;&gt;&lt;code&gt;groupByNodes&lt;/code&gt;&lt;/a&gt; with a single node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c74830fdd70ce73c9bdb8cddb27fd7bf9cad9cd" translate="yes" xml:space="preserve">
          <source>This is portable, fast and easy to use. Or use instructions below for installation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d5e5a9a1b066f29964cfbf10854b65c470d61d5" translate="yes" xml:space="preserve">
          <source>This is the main config file, and defines the settings for each Carbon daemon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad1f367cdebfdb5a1969633a52d9e76f5a23cd2b" translate="yes" xml:space="preserve">
          <source>This is the opposite of the integral function. This is useful for taking a running total metric and calculating the delta between subsequent data points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae2246cab2d952a079ef77be959041b6d6550ef7" translate="yes" xml:space="preserve">
          <source>This key is used for salting of hashes used in auth tokens, CRSF middleware, cookie storage, etc. This should be set identically among all nodes if used behind a load balancer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a8a04d0d912e20b5eec45f65e052d9082648c72" translate="yes" xml:space="preserve">
          <source>This means that there is no way to back-fill data in an RRD series. Whisper does not have this limitation, and this makes importing historical data into Graphite much more simple and easy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e87797a3e1db81cc85da352ebce6a535ade4d539" translate="yes" xml:space="preserve">
          <source>This method follows the same semantics as &lt;code&gt;find_node()&lt;/code&gt; but accepts a list of queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a1b7ae68f29597637e80c1247eb815a5b4eb0fa" translate="yes" xml:space="preserve">
          <source>This method is only used when &lt;code&gt;tags = True&lt;/code&gt; is specified in the class definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d3cd8f53c4debd2db1ddf9c913b1087c41c4e2b" translate="yes" xml:space="preserve">
          <source>This method is responsible for loading data for render requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="057dbf61ea1a5a23eb893b07f9e03ac948fb7f53" translate="yes" xml:space="preserve">
          <source>This method should return all node paths that the finder is aware of as a list of strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e3236d766193f901740ee5cb928ca8faa1ac4e" translate="yes" xml:space="preserve">
          <source>This pushes the onus of aggregating values to fit into the finest precision archive to the user rather than the database. It also means that updates are written immediately into the finest precision archive rather than being staged first for aggregation and written later (during a subsequent write operation) as they are in RRD.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="968a280c8bdc0f48504db62ede0263ef64566322" translate="yes" xml:space="preserve">
          <source>This retention is set at the time the first metric is sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ce226cc147865a3a153912c3dd04f162c30872d" translate="yes" xml:space="preserve">
          <source>This section aims at documenting the last item: configuring graphite-web to read data from a custom storage layer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12178f8b7630de2d1a6c17b49d46f6478598bc23" translate="yes" xml:space="preserve">
          <source>This section explains the options available when viewing an existing dashboard. Once you&amp;rsquo;ve defined the dashboards you need, you&amp;rsquo;ll spend most of your time in this mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89418e201fb9b4ee1455bcf32b2a87e21f3d7000" translate="yes" xml:space="preserve">
          <source>This setting controls whether https is used to communicate between cluster members that don&amp;rsquo;t have an explicit protocol specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30aea49c447c92c047fb4bbb0f2b9c0ec05390bf" translate="yes" xml:space="preserve">
          <source>This setting enables POST queries instead of GET for remote requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccb8cafff690c9c8bde3a8a18cac553daf5b497a" translate="yes" xml:space="preserve">
          <source>This shifts all samples later by an integer number of steps. This can be used for custom derivative calculations, among other things. Note: this will pad the early end of the data with None for every step shifted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c33412b120315aa9bd468e0a621b9f1e4bf1260" translate="yes" xml:space="preserve">
          <source>This starts the main Carbon daemon in the background. Now is a good time to check the logs, located in &lt;code&gt;/opt/graphite/storage/log/carbon-cache/&lt;/code&gt; for any errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9970aba95218e5c34396333c304c0927fabd0ea" translate="yes" xml:space="preserve">
          <source>This will add metrics together and return the sum at each datapoint. (See integral for a sum over time)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88e5161cda1caeb47a13740f7ab794dd62eef8bd" translate="yes" xml:space="preserve">
          <source>This will cache any queries between 0 seconds and 2 hours for 1 minute, any queries between 2 and 6 hours for 2 minutes, and anything greater than 6 hours for 3 minutes. If the policy is empty or undefined, everything will be cached for DEFAULT_CACHE_DURATION.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5f5d2cb64cd17f77689234b451162314b077bb5" translate="yes" xml:space="preserve">
          <source>This will capture any received metrics that match &amp;lsquo;regex-pattern&amp;rsquo; and rewrite the matched portion of the text with &amp;lsquo;replacement-text&amp;rsquo;. The &amp;lsquo;regex-pattern&amp;rsquo; must be a valid Python regular expression, and the &amp;lsquo;replacement-text&amp;rsquo; can be any value. You may also use capture groups:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51b00dc770336cdaa83121c906a82bcd25f5bd6" translate="yes" xml:space="preserve">
          <source>This will capture any received metrics that match &lt;code&gt;input_pattern&lt;/code&gt; for calculating an aggregate metric. The calculation will occur every &lt;code&gt;frequency&lt;/code&gt; seconds using a valid &lt;code&gt;method&lt;/code&gt;. The name of the aggregate metric will be derived from &lt;code&gt;output_template&lt;/code&gt; filling in any captured fields from &lt;code&gt;input_pattern&lt;/code&gt;. Any metric that will arrive to &lt;code&gt;carbon-aggregator&lt;/code&gt; will proceed to its output untouched unless it is overridden by some rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e6b3c282e8e18d75990dfb65158d79cc3c84a2f" translate="yes" xml:space="preserve">
          <source>This will do the same as integral() funcion, except resetting the total to 0 at the given time in the parameter &amp;ldquo;from&amp;rdquo; Useful for finding totals per hour/day/week/..</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4033d7a94e19509587e977ad00554781bd96939a" translate="yes" xml:space="preserve">
          <source>This will draw one or more metrics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="543b17d1044ca4266e4a28e9689d105388d6019d" translate="yes" xml:space="preserve">
          <source>This will run the tests for all configurations declared in the &lt;code&gt;tox.ini&lt;/code&gt; file at the root of the repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ffc5231434aff4f4a54559554dd1f47f245eb20" translate="yes" xml:space="preserve">
          <source>This will show the sum over time, sort of like a continuous addition function. Useful for finding totals or trends in metrics that are collected per minute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2858a61f20088cfddb49d0850e9292f6228aa620" translate="yes" xml:space="preserve">
          <source>This would be the equivalent of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d141d7e6e6c1e5ec7ae089c3b4c9245277f056e8" translate="yes" xml:space="preserve">
          <source>This would create a series named &amp;ldquo;The.time.series&amp;rdquo; that contains in Y the same value (in seconds) as X. Accepts optional second argument as &amp;lsquo;step&amp;rsquo; parameter (default step is 60 sec)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc4568b1116d3df7d6b01d4489e5436bd015c8e" translate="yes" xml:space="preserve">
          <source>This would create a series named &amp;ldquo;The.time.series&amp;rdquo; that contains points where x(t) == t.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f7c522c996c67703dee1b34cb97700f57df11c" translate="yes" xml:space="preserve">
          <source>This would create a series named &amp;ldquo;The.time.series&amp;rdquo; that contains points where x(t) == x(t-1)+random()-0.5, and x(0) == 0. Accepts optional second argument as &amp;lsquo;step&amp;rsquo; parameter (default step is 60 sec)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bb5ab85a7f354f6a6bfe298235a3e677b72447c" translate="yes" xml:space="preserve">
          <source>This would create a series named &amp;ldquo;The.time.series&amp;rdquo; that contains sin(x)*2. Accepts optional second argument as &amp;lsquo;amplitude&amp;rsquo; parameter (default amplitude is 1) Accepts optional third argument as &amp;lsquo;step&amp;rsquo; parameter (default step is 60 sec)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43320d81ff24e8fc582b7a1a216126448f271e01" translate="yes" xml:space="preserve">
          <source>This would only display interfaces which at one point sent less than 1000 packets/min.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00ad28ad19c410b2faf74a6613cd54b7eae65c4b" translate="yes" xml:space="preserve">
          <source>This would only display interfaces which has a peak throughput higher than 1000 packets/min.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="622f3b827a280d206b6e0b483ac4c377cf54c323" translate="yes" xml:space="preserve">
          <source>This would only display interfaces which sent less than 1000 packets/min.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="215e01915cc26020ffe451310cd39af018a0ed9e" translate="yes" xml:space="preserve">
          <source>This would only display interfaces which sent more than 1000 packets/min.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13172948afdfa85eacfa65f9d24077ab27342d72" translate="yes" xml:space="preserve">
          <source>This would show the sum of all requests handled per minute (provided requestsHandled are collected once a minute). If metrics with different retention rates are combined, the coarsest metric is graphed, and the sum of the other metrics is averaged for the metrics with finer retention rates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb8b0406a5f6b48b41f11204712257ea138719c9" translate="yes" xml:space="preserve">
          <source>This would start at zero on the left side of the graph, adding the sales each minute, and show the evolution of sales per day during the last 10 days.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f2e26e068267ea9b12f39156b1b9f067a7081ae" translate="yes" xml:space="preserve">
          <source>This would start at zero on the left side of the graph, adding the sales each minute, and show the total sales for the time period selected at the right side, (time now, or the time specified by &amp;lsquo;&amp;amp;until=&amp;rsquo;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37346f0ba205ce6caf1e4973fb74f3a4482bfa6" translate="yes" xml:space="preserve">
          <source>This would take any page that didn&amp;rsquo;t have values and supply negative 1 as a default. Any other numeric value may be used as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="306f8c8dbe92770c986112407f39c0b49ca836e4" translate="yes" xml:space="preserve">
          <source>Time Series Alerting Framework. Can use Graphite as time series source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb6fc2ee30149982cbf78b3f456dcdd82aa040bf" translate="yes" xml:space="preserve">
          <source>Time in seconds to blacklist a webapp after a timed-out request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4503159c69b1ce86635e15af8f909e725bc819ec" translate="yes" xml:space="preserve">
          <source>Time to cache remote metric find results in seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3b9d0533a8494625de6186b602a27a28a5872d3" translate="yes" xml:space="preserve">
          <source>Time zone to convert all times into.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f54721841310941b1bd4ed3b7e270174aed778b4" translate="yes" xml:space="preserve">
          <source>Timeout for carbon-cache cache queries in seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1fdf2d6cc59db8780724d4ccbe7c80bb9a23cf3" translate="yes" xml:space="preserve">
          <source>Timeout for data fetches in seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d511a2bd685017046dd60f02c7d9a9d9c94ec59" translate="yes" xml:space="preserve">
          <source>Timeout for find requests (metric browsing) in seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a85b3efe1f107c2a329c1f56dc393a8f9acecc" translate="yes" xml:space="preserve">
          <source>TimeseriesWidget</source>
          <target state="translated">TimeseriesWidget</target>
        </trans-unit>
        <trans-unit id="d19ceca501465c339e3bcf2bc0d8ff02bb697d6c" translate="yes" xml:space="preserve">
          <source>Tip</source>
          <target state="translated">Tip</target>
        </trans-unit>
        <trans-unit id="e21cef0dae16659ce2288309b358d2c2366bc3f9" translate="yes" xml:space="preserve">
          <source>To add a new graph directly, you select a metric series in the completer or browser tree, and a graph for that value is added to the end of the dashboard. Alternatively, if a graph for that metric series already exists on the dashboard, it will be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1428d9a8f614376a4a5a2ebc339811bb7fc9f08" translate="yes" xml:space="preserve">
          <source>To add multiple series with a single HTTP request, use the &lt;code&gt;/tags/tagMultiSeries&lt;/code&gt; endpoint, which support multiple &lt;code&gt;path&lt;/code&gt; parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54141341585f42c4f4c714da97483f88290b9877" translate="yes" xml:space="preserve">
          <source>To address these issues, Graphite also supports using tags to describe your metrics, which makes it much simpler to design the initial structure and to evolve it over time. A tagged series is made up of a name and a set of tags, like &amp;ldquo;disk.used;datacenter=dc1;rack=a1;server=web01&amp;rdquo;. In that example, the series name is &amp;ldquo;disk.used&amp;rdquo; and the tags are &amp;ldquo;datacenter&amp;rdquo; = &amp;ldquo;dc1&amp;rdquo;, &amp;ldquo;rack&amp;rdquo; = &amp;ldquo;a1&amp;rdquo;, and &amp;ldquo;server&amp;rdquo; = &amp;ldquo;web01&amp;rdquo;. When series are named this way they can be selected using the &lt;a href=&quot;functions#graphite.render.functions.seriesByTag&quot;&gt;seriesByTag&lt;/a&gt; function as described in &lt;a href=&quot;tags&quot;&gt;Graphite Tag Support&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29960dceafaac3dc07cb3b618626e3c624636609" translate="yes" xml:space="preserve">
          <source>To begin graphing specific metrics, pass one or more &lt;a href=&quot;#target&quot;&gt;target&lt;/a&gt; parameters and specify a time window for the graph via &lt;a href=&quot;#from-until&quot;&gt;from / until&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dbd8c81eefda9f218ad0c6513e2a6230495d800" translate="yes" xml:space="preserve">
          <source>To change a graph on the dashboard, click on it. This will display a pop-up containing the following sections:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dd4eb78638d102be5da176411485b18e6a13812" translate="yes" xml:space="preserve">
          <source>To change the default timezone, edit &lt;code&gt;webapp/graphite/local_settings.py&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="984083343c847c91953503006eea185844d44374" translate="yes" xml:space="preserve">
          <source>To customize a single metric element, you select the element in the metric list, then use the menu items on the &lt;em&gt;Apply Function&lt;/em&gt; menu button to apply functions to the metric element. Note that each metric element in the list may include multiple metric series, e.g. if the path includes wildcards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc5997666536c965f284a13568d6a4c8b8997364" translate="yes" xml:space="preserve">
          <source>To delete a dashboard, open the Finder (using the &lt;em&gt;Dashboard | Finder&lt;/em&gt; menu item), select the dashboard to delete in the list, and click &lt;em&gt;Delete&lt;/em&gt;. Note that you may need to be logged in as a user with appropriate permissions to do this, depending on the configuration of Graphite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74b2462dda24e89cf51cfa8400d4085f01394043" translate="yes" xml:space="preserve">
          <source>To delete multiple series at once pass multiple &lt;code&gt;path&lt;/code&gt; parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="863f639c86727673278281f8bbcd1a86f5552fe6" translate="yes" xml:space="preserve">
          <source>To diff a series and a constant, one should use offset instead of (or in addition to) diffSeries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24a750d5fe6c21398ca4b6cb0c105b2d9d969082" translate="yes" xml:space="preserve">
          <source>To enter tagged series into Graphite, they should be passed to Carbon by appending the tags to the series name:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f59a5d118aa0421d043a59b2d9e18b55cae20d6" translate="yes" xml:space="preserve">
          <source>To filter by prefix:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3fc3fdee6b13d29ec5ba2a40fb26b59bd27e354" translate="yes" xml:space="preserve">
          <source>To get a list of available functions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6acf493f47fc8798a7186f77bf9d400f94c44d99" translate="yes" xml:space="preserve">
          <source>To get a list of defined tags:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cd4e7b1095eba58dec53620924dfac22e230d42" translate="yes" xml:space="preserve">
          <source>To get a list of values for a specific tag:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1435e57e69225652fcdf6f0a2c26b4c7466b764f" translate="yes" xml:space="preserve">
          <source>To get an auto-complete list of tags:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd8a7e3f47acce230ab9e3ac7af491d2766d9a7a" translate="yes" xml:space="preserve">
          <source>To get an auto-complete list of values for a specified tag:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05b7811e45c0e14b0bcc0c0046e3137cd2e9ce7d" translate="yes" xml:space="preserve">
          <source>To get the definition of a specific function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0566c6b2c579a727c8ea4ab8b80010b484834bd6" translate="yes" xml:space="preserve">
          <source>To get the percentage of disk used for each server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10b8679274cc644cb78310ab3c4ff10799dc5b84" translate="yes" xml:space="preserve">
          <source>To install Carbon into the system-wide site-packages directory with scripts in &lt;code&gt;/usr/bin&lt;/code&gt; and storage and configuration in &lt;code&gt;/usr/share/graphite&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5a39f2ec37cbbf10bc3392df78215f446d48faa" translate="yes" xml:space="preserve">
          <source>To install Graphite in the &lt;a href=&quot;install#default-installation-layout&quot;&gt;default location&lt;/a&gt;, &lt;code&gt;/opt/graphite/&lt;/code&gt;, create a virtualenv in &lt;code&gt;/opt/graphite&lt;/code&gt; and activate it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30e2721a11f41df8a4795a07f60b4cea75b897d6" translate="yes" xml:space="preserve">
          <source>To install Graphite in the &lt;a href=&quot;install#default-installation-layout&quot;&gt;default location&lt;/a&gt;, &lt;code&gt;/opt/graphite/&lt;/code&gt;, simply execute &lt;code&gt;python setup.py install&lt;/code&gt; as root in each of the project directories for Graphite-web, Carbon, Whisper, and Ceres.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70c6b9d6125032521c5c215dd6b0f37a3336af4b" translate="yes" xml:space="preserve">
          <source>To install Graphite in the &lt;a href=&quot;install#default-installation-layout&quot;&gt;default location&lt;/a&gt;, &lt;code&gt;/opt/graphite/&lt;/code&gt;, simply execute as root:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4da051317767163242aee14907be5a7b195a7fc" translate="yes" xml:space="preserve">
          <source>To install from source activate the virtualenv and see the instructions for &lt;a href=&quot;install-source#graphite-web-custom-location-source&quot;&gt;graphite-web&lt;/a&gt; and &lt;a href=&quot;install-source#carbon-custom-location-source&quot;&gt;carbon&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3380a1833454f537bc9d49f6d5ea4e23b48b632c" translate="yes" xml:space="preserve">
          <source>To install the Graphite-web code into the system-wide site-packages directory with scripts in &lt;code&gt;/usr/bin&lt;/code&gt; and storage configuration, and content in &lt;code&gt;/usr/share/graphite&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0636765425a6690aad26d7ef4bbdaee92880b691" translate="yes" xml:space="preserve">
          <source>To load a packaged function plugin module, add it to the &lt;code&gt;FUNCTION_PLUGINS&lt;/code&gt; setting:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcfccf96b385113f9724bd68b5bbc21a2927c96e" translate="yes" xml:space="preserve">
          <source>To manipulate these settings, ensure &lt;code&gt;app_settings.py&lt;/code&gt; is imported as such:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b28bd0fd2c1df623f63cfce36dc9e4261ac30f" translate="yes" xml:space="preserve">
          <source>To remove all graphs on the current dashboard, use the &lt;em&gt;Graphs | Remove All&lt;/em&gt; menu item or the red cross menu button. This asks for confirmation, and also gives you the option to skip confirmation in future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dbfb20cb413cee51f47d88cf6a953b75cff2150" translate="yes" xml:space="preserve">
          <source>To run the tests for the Python and Django versions of your virtualenv:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdd903fdbd8a9574caaf1ae36379002c4f57f562" translate="yes" xml:space="preserve">
          <source>To set a relative time range, click the &lt;em&gt;Relative Time Range&lt;/em&gt; menu button, and enter the time range to display (value and units, e.g. &amp;ldquo;6 hours&amp;rdquo;). By default, this time range ends at the current time, as shown by &amp;ldquo;Now&amp;rdquo; in the &amp;ldquo;Until&amp;rdquo; units field. However, you can move the time range back by entering your own value and units in the &amp;ldquo;Until&amp;rdquo; fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3d252c7575ca7ade3ff3dd784f61cdd439bb89f" translate="yes" xml:space="preserve">
          <source>To set an absolute time range, click the &lt;em&gt;Absolute Time range&lt;/em&gt; menu button, and set the start and end dates and times (all are required). Dates can be selected using the calendar picker or entered directly in US format (mm/dd/yyyy), while times can be selected from the dropdown or entered in 12 or 24 hour format (e.g. &amp;ldquo;5:00 PM&amp;rdquo;, &amp;ldquo;17:00&amp;rdquo;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0877b049bef97a5fef07741722873cb7f8e2a939" translate="yes" xml:space="preserve">
          <source>To set up a new database and create the initial schema, run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a11e9af05a5724ab9e33d5140c6e8b4394b19d3" translate="yes" xml:space="preserve">
          <source>To support accurate aggregation from higher to lower resolution archives, the precision of a longer retention archive must be divisible by precision of next lower retention archive. For example, an archive with 1 data point every 60 seconds can have a lower-resolution archive following it with a resolution of 1 data point every 300 seconds because 60 cleanly divides 300. In contrast, a 180 second precision (3 minutes) could not be followed by a 600 second precision (10 minutes) because the ratio of points to be propagated from the first archive to the next would be 3 1/3 and Whisper will not do partial point interpolation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75e82aeb4c2331d83ffd120490093a09ab47a5a5" translate="yes" xml:space="preserve">
          <source>To the Apache &lt;a href=&quot;http://code.google.com/p/modwsgi/&quot;&gt;mod_wsgi&lt;/a&gt; config, add the root of the virtualenv as &lt;code&gt;WSGIPythonHome&lt;/code&gt;, &lt;code&gt;/opt/graphite&lt;/code&gt; in this example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b24764a48bc438b5759f592be4b0311d55d5b4c" translate="yes" xml:space="preserve">
          <source>To verify that the api is running and able to generate images, open &lt;code&gt;http://GRAPHITE_HOST:GRAPHITE_PORT/render&lt;/code&gt; in a browser. The api should return a simple 330x250 image with the text &amp;ldquo;No Data&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e1015ab818a65c695da72466f0b951f8521efaa" translate="yes" xml:space="preserve">
          <source>Tools That Work With Graphite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea627f8ee28519a09b024254b900d47c7456046" translate="yes" xml:space="preserve">
          <source>Tornado</source>
          <target state="translated">Tornado</target>
        </trans-unit>
        <trans-unit id="a3a9585378dc9bcf0da07c3e60f351c3372ff0a2" translate="yes" xml:space="preserve">
          <source>Triggers the creation of &lt;code&gt;cache.log&lt;/code&gt; which logs timings for remote calls to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5050bab05e976f6b6081d134932ba5f54c4f4d5b" translate="yes" xml:space="preserve">
          <source>Triggers the creation of &lt;code&gt;rendering.log&lt;/code&gt; which logs timings for calls to the &lt;a href=&quot;render_api&quot;&gt;The Render URL API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5476633e75355b67ef0b8b78405a297608d7c81a" translate="yes" xml:space="preserve">
          <source>Try Graphite in Docker and have it running in seconds:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c7976655acaf69572813e0624a4fdd3c1c72e8c" translate="yes" xml:space="preserve">
          <source>Try to detect when a cluster server is localhost and don&amp;rsquo;t forward queries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="079769f9e054f8164cedd1f3a43fa17c98f67f3e" translate="yes" xml:space="preserve">
          <source>URL_PREFIX</source>
          <target state="translated">URL_PREFIX</target>
        </trans-unit>
        <trans-unit id="b701dc3163db84693e0e7b02cec027b41b6ecb2c" translate="yes" xml:space="preserve">
          <source>USE_LDAP_AUTH</source>
          <target state="translated">USE_LDAP_AUTH</target>
        </trans-unit>
        <trans-unit id="fffea9362be078654913e49b257d34935a8f9390" translate="yes" xml:space="preserve">
          <source>USE_REMOTE_USER_AUTHENTICATION</source>
          <target state="translated">USE_REMOTE_USER_AUTHENTICATION</target>
        </trans-unit>
        <trans-unit id="5998fc3da44102c478a9ac2df370dd51866e804f" translate="yes" xml:space="preserve">
          <source>USE_WORKER_POOL</source>
          <target state="translated">USE_WORKER_POOL</target>
        </trans-unit>
        <trans-unit id="baa04c6bb2bf5036f4223a1fe87a29213d1d1432" translate="yes" xml:space="preserve">
          <source>Unfortunately, native Graphite on Windows is completely unsupported, but you can run Graphite on Windows in &lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt; or the &lt;a href=&quot;install-synthesize&quot;&gt;Installing via Synthesize&lt;/a&gt; article will help you set up a Vagrant VM that will run Graphite. In order to leverage this, you will need to install &lt;a href=&quot;https://www.vagrantup.com/&quot;&gt;Vagrant&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b935ab337145efdeadda28cae18aa89a845e36" translate="yes" xml:space="preserve">
          <source>Unit</source>
          <target state="translated">Unit</target>
        </trans-unit>
        <trans-unit id="8379194d4b207b9532fa900da661f65edb217ab9" translate="yes" xml:space="preserve">
          <source>Unsurprisingly, this sets the title for the graph. See &lt;a href=&quot;render_api#param-title&quot;&gt;title&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="4c7340407964f9467e2ad3dd71aa8da2c9bfa1ee" translate="yes" xml:space="preserve">
          <source>Use binary units (powers of 1024) - Ki, Mi, Gi, Ti, Pi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e0c2cb873478c537c6088f4c31a32ffc3793f1" translate="yes" xml:space="preserve">
          <source>Use si units (powers of 1000) - K, M, G, T, P</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f42f06d6e7b2658e9cda73fe84cd8b3dc7979d38" translate="yes" xml:space="preserve">
          <source>Use the &lt;em&gt;Dashboard | Finder&lt;/em&gt; menu item to select the dashboard to open.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d482215cbae7e07f36244a28ba1e938584f09a" translate="yes" xml:space="preserve">
          <source>Use time units (milliseconds) - s, m, H, D, M, Y</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50175e74544951b5a36786203a3eb7eb876992f6" translate="yes" xml:space="preserve">
          <source>Use time units (seconds) - m, H, D, M, Y</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0311e673cce13eb4d635481b1d090b7a6ddf0e5c" translate="yes" xml:space="preserve">
          <source>Used to get numerical data out of the webapp instead of an image. Can be set to true, false, csv. Affects all &lt;code&gt;&amp;amp;targets&lt;/code&gt; passed in the URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db5ef504b5a9e6bc7e3d586acc4d2a9b196b6ad" translate="yes" xml:space="preserve">
          <source>Used to specify a template from &lt;code&gt;graphTemplates.conf&lt;/code&gt; to use for default colors and graph styles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4223218c4ae2fc00edd348b06d654245c014f24" translate="yes" xml:space="preserve">
          <source>Useful for comparing a metric against itself at a past periods or correcting data stored at an offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d665edd4f4621064d33909e3f1ad2e2ea0939d7c" translate="yes" xml:space="preserve">
          <source>Useful for displaying on/off metrics, such as exit codes. (0 = success, anything else = failure.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8f30daacf773b2534e1710d6068307119506657" translate="yes" xml:space="preserve">
          <source>Useful for filtering out a part of a series of data from a wider range of data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0c57b7fdd41228e84a66038ec99502253625fd6" translate="yes" xml:space="preserve">
          <source>Useful for highlighting a single metric out of many, or having multiple line widths in one graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07eccaa408c107d0c26a3676f3144622b0050864" translate="yes" xml:space="preserve">
          <source>Useful for looking at history, or feeding into averageSeries or stddevSeries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="245b50cccfbe9f72e53cd413d0d178c2a53b1d9d" translate="yes" xml:space="preserve">
          <source>Useful in conjunction with derivative or integral function if you want to normalize its result to a known resolution for arbitrary retentions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e4200e9c202515d06e4fd0bcdc0abfc1cb64bb" translate="yes" xml:space="preserve">
          <source>Useful to compare different series where the values in each series may be higher or lower on average but you&amp;rsquo;re only interested in the relative difference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c161b17c8e0bdbd2ca67454aa573335f862cbb8e" translate="yes" xml:space="preserve">
          <source>Using AMQP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee94511af0893c25749ed3884e2accc7f0f9a75c" translate="yes" xml:space="preserve">
          <source>Using The Composer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14bfa1385cc0a857d90678a6fb8a1dc486afc121" translate="yes" xml:space="preserve">
          <source>Using the Composer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97d5c48a850dc8b9c68e3851ff8a21f3423759fb" translate="yes" xml:space="preserve">
          <source>Utilities for managing graphite clusters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="677ae6f5730a10d929757ce188a10cd47018b15a" translate="yes" xml:space="preserve">
          <source>Valid function names are &amp;lsquo;sum&amp;rsquo;, &amp;lsquo;average&amp;rsquo;, &amp;lsquo;min&amp;rsquo;, &amp;lsquo;max&amp;rsquo;, &amp;lsquo;first&amp;rsquo; &amp;amp; &amp;lsquo;last&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dd2b66aaa9f70693b8282df1a1d8db97d8eddd2" translate="yes" xml:space="preserve">
          <source>Validation of metrics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cedb0ceba11fbf560bf1cdf0b1b8db126b8a185f" translate="yes" xml:space="preserve">
          <source>Versioned Graphite releases can be installed via &lt;a href=&quot;http://pypi.python.org/pypi/pip&quot;&gt;pip&lt;/a&gt;. When installing with pip, installation of Python package dependencies will automatically be attempted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74240a612d930829b4a47c3fa3ab0d50814307ab" translate="yes" xml:space="preserve">
          <source>Very light caching proxy for graphite metrics with additional features:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9f569979058bba39a6508c525f36f9862265bb" translate="yes" xml:space="preserve">
          <source>Very. Even under heavy load, where the number of metrics coming in each time interval is much greater than the rate at which your storage system can perform I/O operations and lots of data points are being cached in the storage pipeline (see previous question for explanation), Graphite still draws real-time graphs. The trick is that when the Graphite webapp receives a request to draw a graph, it simultaneously retrieves data off the disk as well as from the pre-storage cache (which may be distributed if you have multiple backend servers) and combines the two sources of data to create a real-time graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32844708937ff0584df201f30bd5a964b8bb6987" translate="yes" xml:space="preserve">
          <source>Viewing a Dashboard</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d175985b87dd9f620aa960059c730b4a35e3bcb5" translate="yes" xml:space="preserve">
          <source>Visualization</source>
          <target state="translated">Visualization</target>
        </trans-unit>
        <trans-unit id="3ff3666446051eac25ddd349e96e4c8d882b044f" translate="yes" xml:space="preserve">
          <source>WHISPER_DIR</source>
          <target state="translated">WHISPER_DIR</target>
        </trans-unit>
        <trans-unit id="e9c45563358e813f157ba81b33143542165ba84e" translate="yes" xml:space="preserve">
          <source>Warning</source>
          <target state="translated">Warning</target>
        </trans-unit>
        <trans-unit id="abdf2de7bc8c600e1f0fdcef61d9532dd44bdbe5" translate="yes" xml:space="preserve">
          <source>We will use dedicated log files for nginx when serving Graphite:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f5de00cdfd27f9360ec4eaf8a186262517d8b39" translate="yes" xml:space="preserve">
          <source>Webapp Database Setup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d75266a53b99ce4d80d337862ea1edd8ba1b1a1" translate="yes" xml:space="preserve">
          <source>Weeks</source>
          <target state="translated">Weeks</target>
        </trans-unit>
        <trans-unit id="af2d1e8db21309831ca5effe59de540136117373" translate="yes" xml:space="preserve">
          <source>What Graphite does not do is collect data for you, however there are some &lt;a href=&quot;tools&quot;&gt;tools&lt;/a&gt; out there that know how to send data to graphite. Even though it often requires a little code, &lt;a href=&quot;feeding-carbon&quot;&gt;sending data&lt;/a&gt; to Graphite is very simple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0972248c7b9dfd4cdab7cc05c61e57ac883c7b0f" translate="yes" xml:space="preserve">
          <source>What Graphite is and is not</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b1e079c7715cda254b44fecd65341c23c52ea4d" translate="yes" xml:space="preserve">
          <source>What is Graphite written in?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f69917be55421bfcd69ba0ccb5638d8ec10a7d1e" translate="yes" xml:space="preserve">
          <source>What is Graphite?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc8b3f003f14bbcef785eeec40ba724fce91565f" translate="yes" xml:space="preserve">
          <source>What is the coarsest precision you can use?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b68967c0c4d62f3535e02d95eb24dda6cc584211" translate="yes" xml:space="preserve">
          <source>What is the finest precision you will require?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00fd66250ac60a4acab29721a115ee0e522a675c" translate="yes" xml:space="preserve">
          <source>What license is Graphite released under?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="769bb19e615b7f8e2809e5882e2d05a18f57a531" translate="yes" xml:space="preserve">
          <source>When</source>
          <target state="translated">When</target>
        </trans-unit>
        <trans-unit id="c676644075f64f3d6e8f09c307656c5cca6aab9d" translate="yes" xml:space="preserve">
          <source>When AMQP_METRIC_NAME_IN_BODY is set to True in your carbon.conf file, the data should be of the same format as the plaintext protocol, e.g. echo &amp;ldquo;local.random.diceroll 4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e98590b42463fed9fd0528a8fb0c1ce25629b675" translate="yes" xml:space="preserve">
          <source>When Whisper writes to a database with multiple archives, the incoming data point is written to all archives at once. The data point will be written to the highest resolution archive as-is, and will be aggregated by the configured aggregation method (see &lt;a href=&quot;#rollup-aggregation&quot;&gt;Rollup Aggregation&lt;/a&gt;) and placed into each of the higher-retention archives. If you are in need for aggregation of the highest resolution points, please consider using &lt;a href=&quot;carbon-daemons&quot;&gt;carbon-aggregator&lt;/a&gt; for that purpose.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fcef76866fdb5707f64f7de7c807ea7951b0afb" translate="yes" xml:space="preserve">
          <source>When a graph is drawn where width of the graph size in pixels is smaller than the number of datapoints to be graphed, Graphite consolidates the values to to prevent line overlap. The consolidateBy() function changes the consolidation function from the default of &amp;lsquo;average&amp;rsquo; to one of &amp;lsquo;sum&amp;rsquo;, &amp;lsquo;max&amp;rsquo;, &amp;lsquo;min&amp;rsquo;, &amp;lsquo;first&amp;rsquo;, or &amp;lsquo;last&amp;rsquo;. This is especially useful in sales graphs, where fractional values make no sense and a &amp;lsquo;sum&amp;rsquo; of consolidated values is appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16ab56c494d907764454ca64b18434d39cac7691" translate="yes" xml:space="preserve">
          <source>When a graph is drawn where width of the graph size in pixels is smaller than the number of datapoints to be graphed, Graphite consolidates the values to to prevent line overlap. The cumulative() function changes the consolidation function from the default of &amp;lsquo;average&amp;rsquo; to &amp;lsquo;sum&amp;rsquo;. This is especially useful in sales graphs, where fractional values make no sense and a &amp;lsquo;sum&amp;rsquo; of consolidated values is appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="367160acf2ede8b68168ddfc17f79252531e8b0d" translate="yes" xml:space="preserve">
          <source>When a series is deleted from the data store (for example, by deleting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c1df6b13019dc939f2eb3e9252e00895448e01" translate="yes" xml:space="preserve">
          <source>When a series needs to be consolidated, this sets the fraction of values in an interval that must not be null for the consolidation to be considered valid. If there are not enough values then None will be returned for that interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ce16883da68ab2a9955b62a398c5dcd3e89e524" translate="yes" xml:space="preserve">
          <source>When data is retrieved (scoped by a time range), the first archive which can satisfy the entire time period is used. If the time period overlaps an archive boundary, the lower-resolution archive will be used. This allows for a simpler behavior while retrieving data as the data&amp;rsquo;s resolution is consistent through an entire returned series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d8a95589465603bbd6c7ef9b814f289a06b9799" translate="yes" xml:space="preserve">
          <source>When data is retrieved (scoped by a time range), the first slice which has data within the requested interval is used. If the time period overlaps a slice boundary, then both slices are read, with their values joined together. Any missing data between them are filled with null data points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab73abf1652c55358aeb006f3e599b16dea541d" translate="yes" xml:space="preserve">
          <source>When not passing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="777b6aee9f53856e8708f144a193e6cad954839a" translate="yes" xml:space="preserve">
          <source>When passing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="486e45c6f6ee76da4c11fa55ec9d575204c6974c" translate="yes" xml:space="preserve">
          <source>When querying tagged series, we start with the &lt;a href=&quot;functions#graphite.render.functions.seriesByTag&quot;&gt;seriesByTag&lt;/a&gt; function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6e1c74d09f147ed89e73f6ac28361b82e0fc2e3" translate="yes" xml:space="preserve">
          <source>When running with &lt;code&gt;RELAY_METHOD = rules&lt;/code&gt;, a &lt;code&gt;carbon-relay.py&lt;/code&gt; instance can run in place of a &lt;code&gt;carbon-cache.py&lt;/code&gt; server and relay all incoming metrics to multiple backend &lt;code&gt;carbon-cache.py&lt;/code&gt;&amp;rsquo;s running on different ports or hosts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ee732871c7b8b43fe2973d514b7807acd539cd" translate="yes" xml:space="preserve">
          <source>When using</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea19594a291c4faef5f9c9bee25310342291af2c" translate="yes" xml:space="preserve">
          <source>When using a tagged naming scheme it is much easier to add or alter individual tags as needed. It is important however to be aware that changing the number of tags reported for a given metric or the value of a tag will create a new database file on disk, so tags should not be used for data that changes over the lifetime of a particular metric.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dc6163dfecf371027da2b31835ea178b7c984a0" translate="yes" xml:space="preserve">
          <source>When using the new &lt;code&gt;URL_PREFIX&lt;/code&gt; parameter in &lt;code&gt;local_settings.py&lt;/code&gt; the &lt;code&gt;WSGIScriptAlias&lt;/code&gt; setting must look like the following (e.g. URL_PREFIX=&amp;rdquo;/graphite&amp;rdquo;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0f03cb853e2bdb55c66c088a41d70d680ef1006" translate="yes" xml:space="preserve">
          <source>When we talk about &amp;ldquo;Carbon&amp;rdquo; we mean one or more of various daemons that make up the storage backend of a Graphite installation. In simple installations, there is typically only one daemon, &lt;code&gt;carbon-cache.py&lt;/code&gt;. As an installation grows, the &lt;code&gt;carbon-relay.py&lt;/code&gt; and &lt;code&gt;carbon-aggregator.py&lt;/code&gt; daemons can be introduced to distribute metrics load and perform custom aggregations, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5757ed75f54417b9142c3ac5ea5eef9fef704fd" translate="yes" xml:space="preserve">
          <source>When writing a new test, look at the existing files to see if your test would fit in one. Otherwise simply create a new file named &lt;code&gt;test_&amp;lt;whatever&amp;gt;.py&lt;/code&gt; with the following content:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae575d5494562fb67007b234dffb4e0279df09b" translate="yes" xml:space="preserve">
          <source>When you have more than one Y-axis (because you selected &lt;em&gt;Apply Function | Special | Draw in second Y axis&lt;/em&gt; for at least one metric series), use the &lt;em&gt;Dual Y-Axis Options&lt;/em&gt; item on this menu. This provides individual control of both the left and right Y-axes, with the same settings as listed above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04269020e282a4cce05d18d32293cc4b972563cd" translate="yes" xml:space="preserve">
          <source>When you hover the mouse over a graph, a red cross icon appears at the top right. Click this to delete the graph from the dashboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aada5a78d6830cd94f5d1acad19f2a6d090b3528" translate="yes" xml:space="preserve">
          <source>When you open the Dashboard interface, no dashboard is open. You can either start building a new dashboard, or you can open an existing one (see &lt;a href=&quot;#opening-a-dashboard&quot;&gt;Opening a Dashboard&lt;/a&gt;) and modify that. If you&amp;rsquo;re working on a previously-saved dashboard, its name will show at the top of the completer and browser tree panels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2855ab4ae58df08ed07fa9c01d32811c1bc96be9" translate="yes" xml:space="preserve">
          <source>When you open the Dashboard interface, you&amp;rsquo;ll see the top of the page taken up by a completer. This allows you to select a metric series to show on a graph in the dashboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4bf8cc0d39e08061186cd9c917c1ebbc5f3ede7" translate="yes" xml:space="preserve">
          <source>Where HOSTNAME will be the server&amp;rsquo;s hostname and METRIC will be something like cpu_load, mem_usage, open_files, etc. Also let&amp;rsquo;s say we want to store this data with minutely precision for 30 days, then at 15 minute precision for 10 years.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b383fc769f1bfb4acb136b5be3ea84e9742db33" translate="yes" xml:space="preserve">
          <source>Which would result in:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b40174455ce0e7474096bd7d73ca6a6699c4a135" translate="yes" xml:space="preserve">
          <source>While Whisper allows for reliable storage of irregular updates, it is most space efficient when data points are stored at every update interval. This behavior is a consequence of the fixed-size design of the database and allows the reading and writing of series data to be performed in a single contiguous disk operation (for each archive in a database).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c010a73e47488c6c02bed8ee3cbf75cdd6f29d10" translate="yes" xml:space="preserve">
          <source>Whisper</source>
          <target state="translated">Whisper</target>
        </trans-unit>
        <trans-unit id="0389f5fcc9d4e340cafae0d738ade947cb1fde6d" translate="yes" xml:space="preserve">
          <source>Whisper databases contain one or more archives, each with a specific data resolution and retention (defined in number of points or max timestamp age). Archives are ordered from the highest-resolution and shortest retention archive to the lowest-resolution and longest retention period archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="150587c3ea405fd91e24254fe72ff3382aeeebe1" translate="yes" xml:space="preserve">
          <source>Whisper databases with more than a single archive need a strategy to collapse multiple data points for when the data rolls up a lower precision archive. By default, an average function is used. Available aggregation methods are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="686f6cbf24efd92e64e61ea9b6fdcb11317e1dae" translate="yes" xml:space="preserve">
          <source>Whisper is a fixed-size database, similar in design and purpose to RRD (round-robin-database). It provides fast, reliable storage of numeric data over time. Whisper allows for higher resolution (seconds per point) of recent data to degrade into lower resolutions for long-term retention of historical data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="004a4a2e98db27ae86a3bb011c2625d7ba8fcd28" translate="yes" xml:space="preserve">
          <source>Whisper is fast enough for most purposes. It is slower than RRDtool primarily as a consequence of Whisper being written in Python, while RRDtool is written in C. The speed difference between the two in practice is quite small as much effort was spent to optimize Whisper to be as close to RRDtool&amp;rsquo;s speed as possible. Testing has shown that update operations take anywhere from 2 to 3 times as long as RRDtool, and fetch operations take anywhere from 2 to 5 times as long. In practice the actual difference is measured in hundreds of microseconds (10^-4) which means less than a millisecond difference for simple cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfaa03301a167300801b1ac9e973b8ecf321f2e5" translate="yes" xml:space="preserve">
          <source>Whisper is installed Python&amp;rsquo;s system-wide site-packages directory with Whisper&amp;rsquo;s utilities installed in the bin dir of the system&amp;rsquo;s default prefix (generally &lt;code&gt;/usr/bin/&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa2d6d1e6b214dae6e86da5463321208c2d29070" translate="yes" xml:space="preserve">
          <source>Whisper is somewhat inefficient in its usage of disk space because of certain design choices:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f598c5af7fa7f4ed407503e5361b5dd4122e4ec2" translate="yes" xml:space="preserve">
          <source>Whisper: &lt;code&gt;git clone https://github.com/graphite-project/whisper.git&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79cea66ccfe4c31a915adc5d223d99e2300d7fa4" translate="yes" xml:space="preserve">
          <source>WhisperFile</source>
          <target state="translated">WhisperFile</target>
        </trans-unit>
        <trans-unit id="559aa818a5d6d603f2e2716ef1faa99d1335a9c9" translate="yes" xml:space="preserve">
          <source>Who already uses Graphite?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e466cd425ebb7ea931534f780382e8fbd72460f" translate="yes" xml:space="preserve">
          <source>Who is using Graphite?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45c828b3283ce84725c3ff91235c3faadd713242" translate="yes" xml:space="preserve">
          <source>Who should use Graphite?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4bcf0017b4c61b4982644f2655929e370c1adf4" translate="yes" xml:space="preserve">
          <source>Who writes and maintains Graphite?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3adc91e3d8849aa3bfcd029163c9a743119b1b91" translate="yes" xml:space="preserve">
          <source>Will reset the end date range automatically to the end of the base stat unless resetEnd is False. Example case is when you timeshift to last week and have the graph date range set to include a time in the future, will limit this timeshift to pretend ending at the current time. If resetEnd is False, will instead draw full range including future time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43c398bbba1d74d2f5e6dc5765441c1ded91db92" translate="yes" xml:space="preserve">
          <source>Windows Users</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c920d8e646dd6d6ca8b49636b4cf423b29a40f6" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;RELAY_METHOD = rules&lt;/code&gt; set, pattern/servers tuples in this file define which metrics matching certain regex rules are forwarded to which hosts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="217c4ea7ba939af759a02574d2014f27a12edb1c" translate="yes" xml:space="preserve">
          <source>With data getting into carbon, you probably want to look at graphs of it. So now we turn our attention to the webapp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfb93ee912110543ac77679629e83d6e67d3256e" translate="yes" xml:space="preserve">
          <source>Working on Graphite-web</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a1247b6ad1021553a2cc0798a50faf63fe9b0d7" translate="yes" xml:space="preserve">
          <source>Would find all series which match</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4e7b77d700c300221c404e96b7606d3bba5e12d" translate="yes" xml:space="preserve">
          <source>Would return multiple series which are each the result of applying the &amp;ldquo;averageSeries&amp;rdquo; function to groups joined on the specified tags resulting in a list of targets like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e71f020596823a50f2b547fa7fdc6aac875ed33" translate="yes" xml:space="preserve">
          <source>Would return multiple series which are each the result of applying the &amp;ldquo;sum&amp;rdquo; aggregation to groups joined on the nodes&amp;rsquo; list (0 indexed) resulting in a list of targets like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b64afaefe09cf29cafdc0eba5f182dc6847f51b7" translate="yes" xml:space="preserve">
          <source>Would return multiple series which are each the result of applying the &amp;ldquo;sumSeries&amp;rdquo; function to groups joined on the second node (0 indexed) resulting in a list of targets like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86be94640bbe232dadc80b33440f14d13dc8348a" translate="yes" xml:space="preserve">
          <source>Write the following configuration in &lt;code&gt;/etc/nginx/sites-available/graphite&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab2816d4bb9622be7220e5163963f6a9c487ee4d" translate="yes" xml:space="preserve">
          <source>Writing tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2857a6a7d922a20f4e8b76ba0339ead374f1165d" translate="yes" xml:space="preserve">
          <source>YYYY</source>
          <target state="translated">YYYY</target>
        </trans-unit>
        <trans-unit id="807a5d48db54a547417fe57a001bfcdc30f2cd6d" translate="yes" xml:space="preserve">
          <source>You can access the Dashboard interface directly at &lt;code&gt;http://my.graphite.host/dashboard&lt;/code&gt;, or via the link at the top of the Composer interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36704ac89a765b45e1c870cd44c13676c8066bb8" translate="yes" xml:space="preserve">
          <source>You can also run any number of &lt;a href=&quot;functions&quot;&gt;functions&lt;/a&gt; on the various metrics before graphing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ce551a81826bc07d30f52868f3ec7d5c097b616" translate="yes" xml:space="preserve">
          <source>You can filter the returned list by providing a regular expression in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ea1c70248297ca7c63b9ae377bb83c8dc45360" translate="yes" xml:space="preserve">
          <source>You can filter the returned list of values using the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf2675a62236033568961ab5060cb4d5bdae739" translate="yes" xml:space="preserve">
          <source>You can read &lt;a href=&quot;https://docs.djangoproject.com/en/stable/topics/testing/&quot;&gt;Django&amp;rsquo;s testing docs&lt;/a&gt; for more information on &lt;code&gt;django.test.TestCase&lt;/code&gt; and how tests work with Django.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a70855902f6ac30bc41ead9a1784b3b514efe719" translate="yes" xml:space="preserve">
          <source>You can run a single configuration with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3dbd9573acefc70af0b516fd78df8ecbec9ea5b" translate="yes" xml:space="preserve">
          <source>You can see all the configurations available by running:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47953a05dc5b4527f52feb09d8cb25087b83fbfe" translate="yes" xml:space="preserve">
          <source>You can use the &lt;em&gt;Dashboard | Save As&lt;/em&gt; menu item to save your dashboard for the first time, or to save it with a different name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="688a26a43b7aa33187e3da392b273b3baea6036c" translate="yes" xml:space="preserve">
          <source>You can use the HTTP api to get a list of available functions, or the details of a specific function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e43045d2f73e9fb7d954d1914a4c7bcb788da95a" translate="yes" xml:space="preserve">
          <source>You can use the HTTP api to get lists of defined tags, values for each tag, and to find series using the same logic as the &lt;a href=&quot;functions#graphite.render.functions.seriesByTag&quot;&gt;seriesByTag&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7e759d7134f5aa9af18af79514df13e90cd3e78" translate="yes" xml:space="preserve">
          <source>You could configure some aggregations like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e931c0cc699a219b5902338e0cbf8ede3e4e755" translate="yes" xml:space="preserve">
          <source>You must define at least one section as the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15df416869e9d0df4b861bce68c764bb230dc4b1" translate="yes" xml:space="preserve">
          <source>You must tell Django to create the database tables used by the graphite webapp. This is very straight forward, especially if you are using the default SQLite setup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89d2bb10fb6dd36e9bf2d06e27f95d6639f642c0" translate="yes" xml:space="preserve">
          <source>You will end up with &lt;code&gt;prod.applications.apache.www.requests&lt;/code&gt; instead of &lt;code&gt;prod.applications.apache.all.requests&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac380738fde917912588545ab1ffdac3aaf3e2e5" translate="yes" xml:space="preserve">
          <source>You would then send the &lt;code&gt;message&lt;/code&gt; object through a network socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="295d0eec4c8d2eea9e72a578858d55b489925e3c" translate="yes" xml:space="preserve">
          <source>a Python daemon that collects system metrics and publishes them to Graphite. It is capable of collecting cpu, memory, network, I/O, load and disk metrics. Additionally, it features an API for implementing custom collectors for gathering metrics from almost any source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea0973eb10b3c65ecc8aa7d5b53856926e46dca" translate="yes" xml:space="preserve">
          <source>a UNIX-like Operating System</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8de262a604c42ea1a52cfc3f1a48dcfb7ef4689" translate="yes" xml:space="preserve">
          <source>absolute()</source>
          <target state="translated">absolute()</target>
        </trans-unit>
        <trans-unit id="7e5d134fd4edca9d789182a67053f85c7cde6155" translate="yes" xml:space="preserve">
          <source>absolute(seriesList)</source>
          <target state="translated">absolute(seriesList)</target>
        </trans-unit>
        <trans-unit id="74e9278eb2b9f369e834c8ba256f670c94e59b06" translate="yes" xml:space="preserve">
          <source>aggregate()</source>
          <target state="translated">aggregate()</target>
        </trans-unit>
        <trans-unit id="ca3c5d0ddcc9558bf8b39547aa8936d7b1ee00b1" translate="yes" xml:space="preserve">
          <source>aggregate(seriesList, func, xFilesFactor=None)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="212df0b26475783b40f6709341e730a36fe5857a" translate="yes" xml:space="preserve">
          <source>aggregateLine()</source>
          <target state="translated">aggregateLine()</target>
        </trans-unit>
        <trans-unit id="af53764fec2aebdd83ad655b8fc20de4563f73bf" translate="yes" xml:space="preserve">
          <source>aggregateLine(seriesList, func='average', keepStep=False)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a199946c78e8a61aa11dda8cb15e4a0808d9d8b8" translate="yes" xml:space="preserve">
          <source>aggregateWithWildcards()</source>
          <target state="translated">aggregateWithWildcards()</target>
        </trans-unit>
        <trans-unit id="cadfd5514aab3c6f2e2598245b1783800de3c435" translate="yes" xml:space="preserve">
          <source>aggregateWithWildcards(seriesList, func, *positions)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a20214329ebb7d5e4170098e2e9de0fa63c3d97b" translate="yes" xml:space="preserve">
          <source>aggregation-rules.conf</source>
          <target state="translated">aggregation-rules.conf</target>
        </trans-unit>
        <trans-unit id="7c37f3cb0fbd667ea4e85aae45d924459adb6485" translate="yes" xml:space="preserve">
          <source>aggregationType,maxRetention,xFilesFactor,archiveCount</source>
          <target state="translated">aggregationType,maxRetention,xFilesFactor,archiveCount</target>
        </trans-unit>
        <trans-unit id="cbf19201a62534bec9f921923c84b9d2e9fcc957" translate="yes" xml:space="preserve">
          <source>alias()</source>
          <target state="translated">alias()</target>
        </trans-unit>
        <trans-unit id="4862413b5ee38e9ebc89b8c2f8c55c9248b85884" translate="yes" xml:space="preserve">
          <source>alias(seriesList, newName)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f59bd739687dcfb3c07af59b0aaa6cf79f5ad8c" translate="yes" xml:space="preserve">
          <source>aliasByMetric()</source>
          <target state="translated">aliasByMetric()</target>
        </trans-unit>
        <trans-unit id="8f06665aded2808af4f915cf6f34c2ec7f286335" translate="yes" xml:space="preserve">
          <source>aliasByMetric(seriesList)</source>
          <target state="translated">aliasByMetric(seriesList)</target>
        </trans-unit>
        <trans-unit id="f0317c8fbd05fab92989098f9d426589c62fc37f" translate="yes" xml:space="preserve">
          <source>aliasByNode()</source>
          <target state="translated">aliasByNode()</target>
        </trans-unit>
        <trans-unit id="1c94196fc8591272c027afe7d727e1b6dd11325a" translate="yes" xml:space="preserve">
          <source>aliasByNode(seriesList, *nodes)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23a12df6e8982d61270011e5820c35b427f573b6" translate="yes" xml:space="preserve">
          <source>aliasByTags()</source>
          <target state="translated">aliasByTags()</target>
        </trans-unit>
        <trans-unit id="eb081d51f4c0e4280693a909e0d37bd66fc9dad4" translate="yes" xml:space="preserve">
          <source>aliasByTags(seriesList, *tags)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8920a2003b2a060269dad280b735cf190ef8de67" translate="yes" xml:space="preserve">
          <source>aliasQuery()</source>
          <target state="translated">aliasQuery()</target>
        </trans-unit>
        <trans-unit id="8cb5fe0b8052242e55105f3faeba8e6207b117af" translate="yes" xml:space="preserve">
          <source>aliasQuery(seriesList, search, replace, newName)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b0555554b690d2cb5124d40ebb5c06d134e4bd3" translate="yes" xml:space="preserve">
          <source>aliasSub()</source>
          <target state="translated">aliasSub()</target>
        </trans-unit>
        <trans-unit id="86dee7368d832e7bc85c0639a1ebe51fe613c8c6" translate="yes" xml:space="preserve">
          <source>aliasSub(seriesList, search, replace)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b833570361b2165bb34a390dae33a9affc030e85" translate="yes" xml:space="preserve">
          <source>alpha()</source>
          <target state="translated">alpha()</target>
        </trans-unit>
        <trans-unit id="223563a1771fb5d544d03430b7e978d7f76d056b" translate="yes" xml:space="preserve">
          <source>alpha(seriesList, alpha)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="e5db9d3448f6ca6f853217f631c6ccdc79c0307b" translate="yes" xml:space="preserve">
          <source>and add the virtualenv&amp;rsquo;s python site-packages to the &lt;code&gt;graphite.wsgi&lt;/code&gt; file, python 2.6 in &lt;code&gt;/opt/graphite&lt;/code&gt; in this example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b30c94852661e83d72278e2bf374bc7e3ff10beb" translate="yes" xml:space="preserve">
          <source>and review your webapp logs. If you&amp;rsquo;re using the default graphite-example-vhost.conf, your logs will be found in /opt/graphite/storage/log/webapp/.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a183d814ca73d83b025d32f9949a8cb804156c6" translate="yes" xml:space="preserve">
          <source>apply a template (see &lt;a href=&quot;render_api#param-template&quot;&gt;template&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddd2a8f19c9abc78997e2c0b2954cec0281e65f6" translate="yes" xml:space="preserve">
          <source>applyByNode()</source>
          <target state="translated">applyByNode()</target>
        </trans-unit>
        <trans-unit id="13d33a40fcdf1b1fcb8f22d85becb2920a21faf0" translate="yes" xml:space="preserve">
          <source>applyByNode(seriesList, nodeNum, templateFunction, newName=None)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a6d5d94fb47f2ef2a016ae65996e8ebb737df1" translate="yes" xml:space="preserve">
          <source>aqua</source>
          <target state="translated">aqua</target>
        </trans-unit>
        <trans-unit id="f0fd0944e53706a2c81d1a669a32389f3ba07cb5" translate="yes" xml:space="preserve">
          <source>areaAlpha</source>
          <target state="translated">areaAlpha</target>
        </trans-unit>
        <trans-unit id="2e6dd292e8cff8b6a2ef47422e214b97949ffd34" translate="yes" xml:space="preserve">
          <source>areaBetween expects &lt;strong&gt;exactly one argument&lt;/strong&gt; that results in exactly two series (see example below). The order of the lower and higher values series does not matter. The visualization only works when used in conjunction with &lt;code&gt;areaMode=stacked&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94aa5cd4e1b77b8598746e6a64b42c3a7a3d3d79" translate="yes" xml:space="preserve">
          <source>areaBetween()</source>
          <target state="translated">areaBetween()</target>
        </trans-unit>
        <trans-unit id="cb8bdfca49c0d954ba0a7097253b953e4e437e05" translate="yes" xml:space="preserve">
          <source>areaBetween(seriesList)</source>
          <target state="translated">areaBetween(seriesList)</target>
        </trans-unit>
        <trans-unit id="3179cb38822ca3f4bd28e965d3f1a7a2d25721eb" translate="yes" xml:space="preserve">
          <source>areaMode</source>
          <target state="translated">areaMode</target>
        </trans-unit>
        <trans-unit id="b637cf2efe08d799dce3235d5fd34afb3d085867" translate="yes" xml:space="preserve">
          <source>as well as Request Cache (memcached) hits and misses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d938f0b51bfd56a29ca63f4fc6e6d18a3ec822c" translate="yes" xml:space="preserve">
          <source>asPercent()</source>
          <target state="translated">asPercent()</target>
        </trans-unit>
        <trans-unit id="1121f9b97d6770eee5ba6723448bb77bc0e6e856" translate="yes" xml:space="preserve">
          <source>asPercent(seriesList, total=None, *nodes)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50c69eea64845a02b44763444e916fee2f34fdf4" translate="yes" xml:space="preserve">
          <source>authentication backend. See the &lt;a href=&quot;https://docs.djangoproject.com/en/dev/howto/auth-remote-user/&quot;&gt;Django documentation&lt;/a&gt; for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93a8018f99fa5bd70a93649584b1721492478520" translate="yes" xml:space="preserve">
          <source>average</source>
          <target state="translated">average</target>
        </trans-unit>
        <trans-unit id="01b000a2d75b664ba30048b9aa636c97c8a2e9e2" translate="yes" xml:space="preserve">
          <source>averageAbove()</source>
          <target state="translated">averageAbove()</target>
        </trans-unit>
        <trans-unit id="4b4f2dc627e9889479ebccac0bac477ff88d36e9" translate="yes" xml:space="preserve">
          <source>averageAbove(seriesList, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d8e7f633f26dc358e95df058a70fa098fe45c81" translate="yes" xml:space="preserve">
          <source>averageBelow()</source>
          <target state="translated">averageBelow()</target>
        </trans-unit>
        <trans-unit id="4b2408bdb1b7709791c7db4c35d4390b8933bd5a" translate="yes" xml:space="preserve">
          <source>averageBelow(seriesList, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aebc1508e98df218f63191063fc7824d123ec1e4" translate="yes" xml:space="preserve">
          <source>averageOutsidePercentile()</source>
          <target state="translated">averageOutsidePercentile()</target>
        </trans-unit>
        <trans-unit id="f64d264c2eb41cb50fa4b21af2abc255fc4ca6f9" translate="yes" xml:space="preserve">
          <source>averageOutsidePercentile(seriesList, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8484bd1be45531f5e8115bd44144ca3ad7f4a48d" translate="yes" xml:space="preserve">
          <source>averageSeries()</source>
          <target state="translated">averageSeries()</target>
        </trans-unit>
        <trans-unit id="d1f6af8c7553039d10ba5c487b2a5d6f5f9edd2f" translate="yes" xml:space="preserve">
          <source>averageSeries(*seriesLists)</source>
          <target state="translated">averageSeries(*seriesLists)</target>
        </trans-unit>
        <trans-unit id="b68981ec84d5e9cfab23a1698dd4898edc21cb1b" translate="yes" xml:space="preserve">
          <source>averageSeriesWithWildcards()</source>
          <target state="translated">averageSeriesWithWildcards()</target>
        </trans-unit>
        <trans-unit id="f2d7dbe51a267ccf757234d0bf29b1876e1d77b0" translate="yes" xml:space="preserve">
          <source>averageSeriesWithWildcards(seriesList, *position)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97e77871b5fcc4941bebceb4338c97c1fd149f8c" translate="yes" xml:space="preserve">
          <source>avg</source>
          <target state="translated">avg</target>
        </trans-unit>
        <trans-unit id="870d252224979a90e62fe3dfae2a37da5097e6fa" translate="yes" xml:space="preserve">
          <source>bgcolor</source>
          <target state="translated">bgcolor</target>
        </trans-unit>
        <trans-unit id="7e57cfe843145135aee1f4d0d63ceb7842093712" translate="yes" xml:space="preserve">
          <source>binary</source>
          <target state="translated">binary</target>
        </trans-unit>
        <trans-unit id="466bc8cef3e71de796ec483e212724a2c2044c68" translate="yes" xml:space="preserve">
          <source>black</source>
          <target state="translated">black</target>
        </trans-unit>
        <trans-unit id="4c9a82ce72ca2519f38d0af0abbb4cecb9fceca9" translate="yes" xml:space="preserve">
          <source>blue</source>
          <target state="translated">blue</target>
        </trans-unit>
        <trans-unit id="2220f1ced585b828ed45609b7768979fb76c2c76" translate="yes" xml:space="preserve">
          <source>bootstrapInterval</source>
          <target state="translated">bootstrapInterval</target>
        </trans-unit>
        <trans-unit id="79b3d58a0c9c22123e86c8a8503bb7a7845fd66c" translate="yes" xml:space="preserve">
          <source>bosun</source>
          <target state="translated">bosun</target>
        </trans-unit>
        <trans-unit id="9166eeff1e5056d4b9be3fc9a74f67e3149ef467" translate="yes" xml:space="preserve">
          <source>brown</source>
          <target state="translated">brown</target>
        </trans-unit>
        <trans-unit id="d822b4c12a12f716bbc52150000e8ad31e8240bf" translate="yes" xml:space="preserve">
          <source>buckytools</source>
          <target state="translated">buckytools</target>
        </trans-unit>
        <trans-unit id="0aa7382338695a411e575d4b9ea1282b83db382c" translate="yes" xml:space="preserve">
          <source>build-index.sh</source>
          <target state="translated">build-index.sh</target>
        </trans-unit>
        <trans-unit id="62edcae5c5c6460537891184ff1b87ff2ba8f1e2" translate="yes" xml:space="preserve">
          <source>by the daemon, a common reason is a shortage of file descriptors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e474696b9fe8eb0613703a3a8af02a3445ebd89f" translate="yes" xml:space="preserve">
          <source>cacheTimeout</source>
          <target state="translated">cacheTimeout</target>
        </trans-unit>
        <trans-unit id="6b130b0b3a42fc7259c1ba41b62fe99065c3ac5e" translate="yes" xml:space="preserve">
          <source>cactiStyle()</source>
          <target state="translated">cactiStyle()</target>
        </trans-unit>
        <trans-unit id="588420687ac8c54f92e775be8eec20b30e87a7ab" translate="yes" xml:space="preserve">
          <source>cactiStyle(seriesList, system=None, units=None)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5e47b7d211d2e22a9ab311afc4f863f8b140bb0" translate="yes" xml:space="preserve">
          <source>cairocffi</source>
          <target state="translated">cairocffi</target>
        </trans-unit>
        <trans-unit id="d223dbe2340b27efca6805c6293032b39d848604" translate="yes" xml:space="preserve">
          <source>carbon</source>
          <target state="translated">carbon</target>
        </trans-unit>
        <trans-unit id="d704fa8a7a32c3a21cc4c2d6b19e3a2858eea86d" translate="yes" xml:space="preserve">
          <source>carbon-aggregator-cache.py</source>
          <target state="translated">carbon-aggregator-cache.py</target>
        </trans-unit>
        <trans-unit id="3db12c1d746a517898cabf333f80d8e22e07c577" translate="yes" xml:space="preserve">
          <source>carbon-aggregator.py</source>
          <target state="translated">carbon-aggregator.py</target>
        </trans-unit>
        <trans-unit id="68c491d407484d7088c50217969f9ca1351dc19f" translate="yes" xml:space="preserve">
          <source>carbon-c-relay</source>
          <target state="translated">carbon-c-relay</target>
        </trans-unit>
        <trans-unit id="d4c33a2adc2ab49bca07e6ab1158626cac05b99d" translate="yes" xml:space="preserve">
          <source>carbon-cache</source>
          <target state="translated">carbon-cache</target>
        </trans-unit>
        <trans-unit id="7a742aefebd3f62238f9fe40b0cc16819476664b" translate="yes" xml:space="preserve">
          <source>carbon-cache.py</source>
          <target state="translated">carbon-cache.py</target>
        </trans-unit>
        <trans-unit id="cf01c5f13939ab492eea5184f753eeccef0b03cc" translate="yes" xml:space="preserve">
          <source>carbon-clickhouse</source>
          <target state="translated">carbon-clickhouse</target>
        </trans-unit>
        <trans-unit id="1980fa6af7c789843c3973d82b591ff97eb85274" translate="yes" xml:space="preserve">
          <source>carbon-relay-ng</source>
          <target state="translated">carbon-relay-ng</target>
        </trans-unit>
        <trans-unit id="11e596f2bc8112f2ef12fa00186a0498249434cb" translate="yes" xml:space="preserve">
          <source>carbon-relay.py</source>
          <target state="translated">carbon-relay.py</target>
        </trans-unit>
        <trans-unit id="77380d5268decad1103be6dae5c32e7e485bba93" translate="yes" xml:space="preserve">
          <source>carbon.conf</source>
          <target state="translated">carbon.conf</target>
        </trans-unit>
        <trans-unit id="ba0e10a437a93c21c1af3ba635e6cb24351483dc" translate="yes" xml:space="preserve">
          <source>carbon_ch</source>
          <target state="translated">carbon_ch</target>
        </trans-unit>
        <trans-unit id="7c9a853bf5521a1be4d4cbedd24d8ba02273527c" translate="yes" xml:space="preserve">
          <source>carbonapi</source>
          <target state="translated">carbonapi</target>
        </trans-unit>
        <trans-unit id="7c80a91ae41af02bdd89cf4ffacd568f18a32c02" translate="yes" xml:space="preserve">
          <source>carbonate</source>
          <target state="translated">carbonate</target>
        </trans-unit>
        <trans-unit id="1e2a699362d27fd2e599ca8ceeebe04d8ca18a81" translate="yes" xml:space="preserve">
          <source>cassabon</source>
          <target state="translated">cassabon</target>
        </trans-unit>
        <trans-unit id="7db0111a059c7f5966d4ee016b3f2c63bf90505a" translate="yes" xml:space="preserve">
          <source>changed()</source>
          <target state="translated">changed()</target>
        </trans-unit>
        <trans-unit id="22c4ba8ab8d64e2303e6d6c208827a2742331235" translate="yes" xml:space="preserve">
          <source>changed(seriesList)</source>
          <target state="translated">changed(seriesList)</target>
        </trans-unit>
        <trans-unit id="a82ea0a159fa133328c3c7b0f657134a42804f31" translate="yes" xml:space="preserve">
          <source>client APIs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a709b55c95d96171c3741aa6437595cebcd8d3db" translate="yes" xml:space="preserve">
          <source>client daemons and tools</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad60fc0e836a79a993267e0df2d1b7c9817bcb3" translate="yes" xml:space="preserve">
          <source>collectd</source>
          <target state="translated">collectd</target>
        </trans-unit>
        <trans-unit id="3c720364b04573dcd0c21cbdbe63af36a7f14127" translate="yes" xml:space="preserve">
          <source>color()</source>
          <target state="translated">color()</target>
        </trans-unit>
        <trans-unit id="d0197acf95860d31b4cb1672cf7c7cdeda1deb5e" translate="yes" xml:space="preserve">
          <source>color(seriesList, theColor)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d7144f19bcbc9132915a023ce375fe6b91031b0" translate="yes" xml:space="preserve">
          <source>colorList</source>
          <target state="translated">colorList</target>
        </trans-unit>
        <trans-unit id="9fb56f5db63ac39bd691c641d96a47423b9f5b43" translate="yes" xml:space="preserve">
          <source>colors (see &lt;a href=&quot;render_api#param-colorlist&quot;&gt;colorList&lt;/a&gt;, &lt;a href=&quot;render_api#param-bgcolor&quot;&gt;bgcolor&lt;/a&gt;, &lt;a href=&quot;render_api#param-majorgridlinecolor&quot;&gt;majorGridLineColor&lt;/a&gt;, &lt;a href=&quot;render_api#param-minorgridlinecolor&quot;&gt;minorGridLineColor&lt;/a&gt; and &lt;a href=&quot;render_api#param-areaalpha&quot;&gt;areaAlpha&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c35f217c172e3da0e575b531cb14a20ba507bee" translate="yes" xml:space="preserve">
          <source>configuration settings related to tagging; the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bc9d26a24c219e9dacff92be300d15db27f3076" translate="yes" xml:space="preserve">
          <source>connection refused</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c52d766ea5430e4c5963f6ef14ea5d41855729e" translate="yes" xml:space="preserve">
          <source>consolidateBy()</source>
          <target state="translated">consolidateBy()</target>
        </trans-unit>
        <trans-unit id="e7eb14f7a4691e9c41a1b02a86061b811a18687c" translate="yes" xml:space="preserve">
          <source>consolidateBy(seriesList, consolidationFunc)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d742c6e079aae2bbac96da26d59ee6eb3369544d" translate="yes" xml:space="preserve">
          <source>constantLine()</source>
          <target state="translated">constantLine()</target>
        </trans-unit>
        <trans-unit id="9cf3230bf44fe4b94cd9a5db83af916d3fd823f6" translate="yes" xml:space="preserve">
          <source>constantLine(value)</source>
          <target state="translated">constantLine(value)</target>
        </trans-unit>
        <trans-unit id="4f458435523948c4a68c47478e1427bf413c8505" translate="yes" xml:space="preserve">
          <source>countSeries()</source>
          <target state="translated">countSeries()</target>
        </trans-unit>
        <trans-unit id="5cf773469957c006ba1fc735f185efcacc0dcda7" translate="yes" xml:space="preserve">
          <source>countSeries(*seriesLists)</source>
          <target state="translated">countSeries(*seriesLists)</target>
        </trans-unit>
        <trans-unit id="ed5aef1f3247008ed07233dd196542a8fe365e83" translate="yes" xml:space="preserve">
          <source>create a seriesList which is composed the original metric series stacked with time shifts starting time shifts from the start multiplier through the end multiplier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cc981744e5c893179434506139a3107851b061e" translate="yes" xml:space="preserve">
          <source>csv</source>
          <target state="translated">csv</target>
        </trans-unit>
        <trans-unit id="aee2e1daaca37b98a8e0251ab46e5677bc3c15f3" translate="yes" xml:space="preserve">
          <source>cumulative()</source>
          <target state="translated">cumulative()</target>
        </trans-unit>
        <trans-unit id="a3f42ebb8d284405284ffb76f483fddedf0ced65" translate="yes" xml:space="preserve">
          <source>cumulative(seriesList)</source>
          <target state="translated">cumulative(seriesList)</target>
        </trans-unit>
        <trans-unit id="2570a52f85a68e197c28fe42efd77397d4ef0770" translate="yes" xml:space="preserve">
          <source>currentAbove()</source>
          <target state="translated">currentAbove()</target>
        </trans-unit>
        <trans-unit id="31a6ad4cf3d4227eb94129e9a4c9e5a90e22ea65" translate="yes" xml:space="preserve">
          <source>currentAbove(seriesList, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe3e142a32937c0bbee1874fd950bc7ee410a0f" translate="yes" xml:space="preserve">
          <source>currentBelow()</source>
          <target state="translated">currentBelow()</target>
        </trans-unit>
        <trans-unit id="88c7a4ddf94d752de6ae2fca7a7d63277f2f07e2" translate="yes" xml:space="preserve">
          <source>currentBelow(seriesList, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c363836cf4e16666669a25da280a1865c2d2874" translate="yes" xml:space="preserve">
          <source>d</source>
          <target state="translated">d</target>
        </trans-unit>
        <trans-unit id="f96f3a54218b4f1a5eef133deb6ca1ab406842ff" translate="yes" xml:space="preserve">
          <source>d - day</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df2689c6722f184638a8c4db0a671613c61cabdb" translate="yes" xml:space="preserve">
          <source>darkblue</source>
          <target state="translated">darkblue</target>
        </trans-unit>
        <trans-unit id="2995037b441cfebfc43b64759ac63b96b7fb4480" translate="yes" xml:space="preserve">
          <source>darkgray</source>
          <target state="translated">darkgray</target>
        </trans-unit>
        <trans-unit id="94ce610c905057bbe36758d865d6c7992201133f" translate="yes" xml:space="preserve">
          <source>darkgreen</source>
          <target state="translated">darkgreen</target>
        </trans-unit>
        <trans-unit id="026de03c158459133fc5c5ee30c0453ede6f8e92" translate="yes" xml:space="preserve">
          <source>darkgrey</source>
          <target state="translated">darkgrey</target>
        </trans-unit>
        <trans-unit id="8f399aa4a4052581b0a5b91511fb4ac9be590c1f" translate="yes" xml:space="preserve">
          <source>darkred</source>
          <target state="translated">darkred</target>
        </trans-unit>
        <trans-unit id="bac510320fc86b01c0627c8518eec92e27c6a4ce" translate="yes" xml:space="preserve">
          <source>dashed()</source>
          <target state="translated">dashed()</target>
        </trans-unit>
        <trans-unit id="be92dc39fe78bf25cd4a7d78b9abce1970be1fc5" translate="yes" xml:space="preserve">
          <source>dashed(seriesList, dashLength=5)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f0c29a94eaf64c96172b9faa1305351f797b233" translate="yes" xml:space="preserve">
          <source>datapoint</source>
          <target state="translated">datapoint</target>
        </trans-unit>
        <trans-unit id="d37ea96618b880db5c20645f3d506826abd7df12" translate="yes" xml:space="preserve">
          <source>date +%s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7505d64a54e061b7acd54ccd58b49dc43500b635" translate="yes" xml:space="preserve">
          <source>default</source>
          <target state="translated">default</target>
        </trans-unit>
        <trans-unit id="31ae7bb8a84469b01ed03d5979ed33bbcf422f38" translate="yes" xml:space="preserve">
          <source>delay()</source>
          <target state="translated">delay()</target>
        </trans-unit>
        <trans-unit id="a6830f13ddd557a2bb9020c0c5b15bdfd67d4cdf" translate="yes" xml:space="preserve">
          <source>delay(seriesList, steps)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c81ca5a65f5bd0ae784fa56ce2b2c33c1b421c7" translate="yes" xml:space="preserve">
          <source>derivative()</source>
          <target state="translated">derivative()</target>
        </trans-unit>
        <trans-unit id="2cb9446dfd48026dc4f20fcfd121090e788445a1" translate="yes" xml:space="preserve">
          <source>derivative(seriesList)</source>
          <target state="translated">derivative(seriesList)</target>
        </trans-unit>
        <trans-unit id="6997a3928188f2cc9f3e37310384c4ebd33842c5" translate="yes" xml:space="preserve">
          <source>diffSeries()</source>
          <target state="translated">diffSeries()</target>
        </trans-unit>
        <trans-unit id="b36600b3b0aa73b231e3573c6f82a651fa5500bf" translate="yes" xml:space="preserve">
          <source>diffSeries(*seriesLists)</source>
          <target state="translated">diffSeries(*seriesLists)</target>
        </trans-unit>
        <trans-unit id="af443c56049caf5ce05919fc1f6248c038cdf323" translate="yes" xml:space="preserve">
          <source>divideSeries()</source>
          <target state="translated">divideSeries()</target>
        </trans-unit>
        <trans-unit id="b99027a8b31c1782af987686aed92c47ca1cc536" translate="yes" xml:space="preserve">
          <source>divideSeries(dividendSeriesList, divisorSeries)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c50f3fb93c1e4e11425638fdf48f0ed6d49594fb" translate="yes" xml:space="preserve">
          <source>divideSeriesLists()</source>
          <target state="translated">divideSeriesLists()</target>
        </trans-unit>
        <trans-unit id="a203a2074036e35fe2cc5ef38300feb4aaa1a600" translate="yes" xml:space="preserve">
          <source>divideSeriesLists(dividendSeriesList, divisorSeriesList)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19f2f18c702e989c4ff218a117fbd9bae24820de" translate="yes" xml:space="preserve">
          <source>divisor for the axis (see &lt;a href=&quot;render_api#param-ydivisors&quot;&gt;yDivisors&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f41ea085bf99af5b5ae7cd6755cf02841d669d3d" translate="yes" xml:space="preserve">
          <source>django-taggit</source>
          <target state="translated">django-taggit</target>
        </trans-unit>
        <trans-unit id="aefaf65f2f120cbdfd51ee695be282c3715538b3" translate="yes" xml:space="preserve">
          <source>drawAsInfinite()</source>
          <target state="translated">drawAsInfinite()</target>
        </trans-unit>
        <trans-unit id="2613770a80589746f1cba200ff18fe3d915a92cf" translate="yes" xml:space="preserve">
          <source>drawAsInfinite(seriesList)</source>
          <target state="translated">drawAsInfinite(seriesList)</target>
        </trans-unit>
        <trans-unit id="44dabb842d3cdb6b1945a0c17e03be5ca5b05382" translate="yes" xml:space="preserve">
          <source>drawNullAsZero</source>
          <target state="translated">drawNullAsZero</target>
        </trans-unit>
        <trans-unit id="b1080fb9b4b819e2cb3d3d221f2792eaca6af0fb" translate="yes" xml:space="preserve">
          <source>drawing on a logarithmic scale of the specified base (see &lt;a href=&quot;render_api#param-logbase&quot;&gt;logBase&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8d24fcf967fb13a5f29df9d624ee316dd584f1f" translate="yes" xml:space="preserve">
          <source>dygraph</source>
          <target state="translated">dygraph</target>
        </trans-unit>
        <trans-unit id="543d741c9558a8c8919915323d962743710a567f" translate="yes" xml:space="preserve">
          <source>e.g. given useSeriesAbove(ganglia.metric1.reqs,10,&amp;rsquo;reqs&amp;rsquo;,&amp;rsquo;time&amp;rsquo;), the response time metric will be plotted only when the maximum value of the corresponding request/s metric is &amp;gt; 10</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="828c8bd1dab857c00c8b4b45e05b2ef85ad12e48" translate="yes" xml:space="preserve">
          <source>endpoint.</source>
          <target state="translated">endpoint.</target>
        </trans-unit>
        <trans-unit id="ff491ef0d357cd761ed971f5dd9fdf2a0f152583" translate="yes" xml:space="preserve">
          <source>endpoint:</source>
          <target state="translated">endpoint:</target>
        </trans-unit>
        <trans-unit id="f8671f0a935fc482656fb9824d34f58724148d99" translate="yes" xml:space="preserve">
          <source>events()</source>
          <target state="translated">events()</target>
        </trans-unit>
        <trans-unit id="efc7c2e9b8b915c2399ee8e8284da4ece02cc2ab" translate="yes" xml:space="preserve">
          <source>events(*tags)</source>
          <target state="translated">events(*tags)</target>
        </trans-unit>
        <trans-unit id="0064580f6d68df6f9dc0baf78bf6ee90157383b1" translate="yes" xml:space="preserve">
          <source>exclude()</source>
          <target state="translated">exclude()</target>
        </trans-unit>
        <trans-unit id="0d57a0178b8a8026523b1943a83ffb49f1e14ce0" translate="yes" xml:space="preserve">
          <source>exclude(seriesList, pattern)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe3e44857d8cac05f8b5c65750561a3ca276dada" translate="yes" xml:space="preserve">
          <source>exponentialMovingAverage()</source>
          <target state="translated">exponentialMovingAverage()</target>
        </trans-unit>
        <trans-unit id="1629d604cf6f8d2156171d030a10bad753a5c5b7" translate="yes" xml:space="preserve">
          <source>exponentialMovingAverage(seriesList, windowSize)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb032591dc74f414a2d0adce5cf821561094d46f" translate="yes" xml:space="preserve">
          <source>fallbackSeries()</source>
          <target state="translated">fallbackSeries()</target>
        </trans-unit>
        <trans-unit id="36f1c7b9389eabbf39dce60213203c1376a29281" translate="yes" xml:space="preserve">
          <source>fallbackSeries(seriesList, fallback)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53cf10f46e66da0fc123259a33b5aeaba66fffe4" translate="yes" xml:space="preserve">
          <source>fgcolor</source>
          <target state="translated">fgcolor</target>
        </trans-unit>
        <trans-unit id="a0864af5ebda1c6fe2d098e441ea95907136604b" translate="yes" xml:space="preserve">
          <source>files from the whisper storage folders), it should also be removed from the tag database. Having series in the tag database that don&amp;rsquo;t exist in the data store won&amp;rsquo;t cause any problems with graphing, but will cause the system to do work that isn&amp;rsquo;t needed during the graph rendering, so it is recommended that the tag database be cleaned up when series are removed from the data store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bb4ca75941b7bbc5bc6a12be44b22fc9c8d234e" translate="yes" xml:space="preserve">
          <source>filter</source>
          <target state="translated">filter</target>
        </trans-unit>
        <trans-unit id="2be80ab4a34286fccefb94095d0f1c6311a93802" translate="yes" xml:space="preserve">
          <source>filterSeries()</source>
          <target state="translated">filterSeries()</target>
        </trans-unit>
        <trans-unit id="c58f1890e1e20d49ba103201accbcf2806bd637a" translate="yes" xml:space="preserve">
          <source>filterSeries(seriesList, func, operator, threshold)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79b19bb79291e1124c9004c6009d6f40acb29557" translate="yes" xml:space="preserve">
          <source>fnv1a_ch</source>
          <target state="translated">fnv1a_ch</target>
        </trans-unit>
        <trans-unit id="78d657f207b13fc2c0ac4149838b04127a8305a1" translate="yes" xml:space="preserve">
          <source>follows the same semantics as in Whisper storage schemas. Setting it to 0 (the default) means that only a single value in a given interval needs to be non-null, setting it to 1 means that all values in the interval must be non-null. A setting of 0.5 means that at least half the values in the interval must be non-null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cde92b20da3f2797d43803eb84a36670e7c5eb15" translate="yes" xml:space="preserve">
          <source>follows the same semantics as in Whisper storage schemas. Setting it to 0 (the default) means that only a single value in the series needs to be non-null for it to be considered non-empty, setting it to 1 means that all values in the series must be non-null. A setting of 0.5 means that at least half the values in the series must be non-null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a01e6573bcd8615149aaa29ccd443c62ef963cb8" translate="yes" xml:space="preserve">
          <source>fontBold</source>
          <target state="translated">fontBold</target>
        </trans-unit>
        <trans-unit id="61794bea0fb90f0aa30659920e7fec2c9f28cb3b" translate="yes" xml:space="preserve">
          <source>fontItalic</source>
          <target state="translated">fontItalic</target>
        </trans-unit>
        <trans-unit id="23b83935ef3b6ad8dc06cb3e2f0e28612cef9b82" translate="yes" xml:space="preserve">
          <source>fontName</source>
          <target state="translated">fontName</target>
        </trans-unit>
        <trans-unit id="aac3a17e35fbcb36f68691594a7824a881faa3f4" translate="yes" xml:space="preserve">
          <source>fontSize</source>
          <target state="translated">fontSize</target>
        </trans-unit>
        <trans-unit id="dbe1d8b117a9909561407d11f781e4ea2065def6" translate="yes" xml:space="preserve">
          <source>fonts (see &lt;a href=&quot;render_api#param-fontname&quot;&gt;fontName&lt;/a&gt;, &lt;a href=&quot;render_api#param-fontbold&quot;&gt;fontBold&lt;/a&gt;, &lt;a href=&quot;render_api#param-fontitalic&quot;&gt;fontItalic&lt;/a&gt;, &lt;a href=&quot;render_api#param-fontsize&quot;&gt;fontSize&lt;/a&gt; and &lt;a href=&quot;render_api#param-fgcolor&quot;&gt;fgcolor&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c48df59af2a998f43e95f84634da529279affe9" translate="yes" xml:space="preserve">
          <source>for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="785987648f85190cfde9eadc69fc7c46fe8a7433" translate="yes" xml:space="preserve">
          <source>format</source>
          <target state="translated">format</target>
        </trans-unit>
        <trans-unit id="0b1e95cfd9775191a7224d0a218ae79187e80c1d" translate="yes" xml:space="preserve">
          <source>from</source>
          <target state="translated">from</target>
        </trans-unit>
        <trans-unit id="21b8efe461931ed3b172163d8e66951aa38e7498" translate="yes" xml:space="preserve">
          <source>from / until</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c218e39efa2e1aae69f39d2054528369ce1e1f46" translate="yes" xml:space="preserve">
          <source>function</source>
          <target state="translated">function</target>
        </trans-unit>
        <trans-unit id="7fabe13db9d79fedc4298f4b53093afee2a91865" translate="yes" xml:space="preserve">
          <source>go-carbon</source>
          <target state="translated">go-carbon</target>
        </trans-unit>
        <trans-unit id="09feb137fd5e58ac9131bff6c66ba2e70260bf8c" translate="yes" xml:space="preserve">
          <source>gold</source>
          <target state="translated">gold</target>
        </trans-unit>
        <trans-unit id="c34f6f5a94902a9954e2f81f337a397adbb99bb6" translate="yes" xml:space="preserve">
          <source>graphOnly</source>
          <target state="translated">graphOnly</target>
        </trans-unit>
        <trans-unit id="3a4d030c0dd4f0d3658a73fb913863fb4099b125" translate="yes" xml:space="preserve">
          <source>graphType</source>
          <target state="translated">graphType</target>
        </trans-unit>
        <trans-unit id="b46de5d90df5cb27ae677cb5a2551db4e88f5e9c" translate="yes" xml:space="preserve">
          <source>graphite-beacon</source>
          <target state="translated">graphite-beacon</target>
        </trans-unit>
        <trans-unit id="f616cce9d31dbded38c09085a8c8d4cb22c50e17" translate="yes" xml:space="preserve">
          <source>graphite-clickhouse</source>
          <target state="translated">graphite-clickhouse</target>
        </trans-unit>
        <trans-unit id="94d17e99d8e78d3c9603ca66121df68645c487e0" translate="yes" xml:space="preserve">
          <source>graphite-dashboardcli</source>
          <target state="translated">graphite-dashboardcli</target>
        </trans-unit>
        <trans-unit id="01c7aa3e9391be14c5610d0ead49cc826c3e22a3" translate="yes" xml:space="preserve">
          <source>graphite-pollers</source>
          <target state="translated">graphite-pollers</target>
        </trans-unit>
        <trans-unit id="8aa83a82ce807daf1960ad9aa60992ac07ab606e" translate="yes" xml:space="preserve">
          <source>graphite-remote-adapter</source>
          <target state="translated">graphite-remote-adapter</target>
        </trans-unit>
        <trans-unit id="0df074c0f65484fa1e5b08450cf7737dd5c585d3" translate="yes" xml:space="preserve">
          <source>graphite-to-zabbix</source>
          <target state="translated">graphite-to-zabbix</target>
        </trans-unit>
        <trans-unit id="7133c1b7da062b39a705910e855ca44c4ecbdaf8" translate="yes" xml:space="preserve">
          <source>graphite.tags.redis.RedisTagDB</source>
          <target state="translated">graphite.tags.redis.RedisTagDB</target>
        </trans-unit>
        <trans-unit id="a211e0373f5c9bafa2a690de0e391131e95f864f" translate="yes" xml:space="preserve">
          <source>graphitus</source>
          <target state="translated">graphitus</target>
        </trans-unit>
        <trans-unit id="61e2f51ca8bab57ee8ea8bf4e59be45caf1b4dd9" translate="yes" xml:space="preserve">
          <source>gray</source>
          <target state="translated">gray</target>
        </trans-unit>
        <trans-unit id="bc74f4f071a5a33f00ab88a6d6385b5e6638b86c" translate="yes" xml:space="preserve">
          <source>green</source>
          <target state="translated">green</target>
        </trans-unit>
        <trans-unit id="4464be257a56d180a42ca489695540555841c635" translate="yes" xml:space="preserve">
          <source>grep()</source>
          <target state="translated">grep()</target>
        </trans-unit>
        <trans-unit id="cabc09f2b18c0c93b050be42df586db2dd24ad68" translate="yes" xml:space="preserve">
          <source>grep(seriesList, pattern)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d1f8f911da92c0ea535cad461fd773281a79638" translate="yes" xml:space="preserve">
          <source>grey</source>
          <target state="translated">grey</target>
        </trans-unit>
        <trans-unit id="814eb6ae3747293dc0a03e45406cc73e940e3b97" translate="yes" xml:space="preserve">
          <source>group()</source>
          <target state="translated">group()</target>
        </trans-unit>
        <trans-unit id="bf7c92c0c9f225a183d029633dc1f21d2110da31" translate="yes" xml:space="preserve">
          <source>group(*seriesLists)</source>
          <target state="translated">group(*seriesLists)</target>
        </trans-unit>
        <trans-unit id="8043206fd082618edeae818ebb72a87b59ff6403" translate="yes" xml:space="preserve">
          <source>groupByNode()</source>
          <target state="translated">groupByNode()</target>
        </trans-unit>
        <trans-unit id="d710439bb44440456001f154c7c2ecf9c2f7c9f2" translate="yes" xml:space="preserve">
          <source>groupByNode(seriesList, nodeNum, callback='average')</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fa9ace98ce7eb89906c7fca74904b704321dc5e" translate="yes" xml:space="preserve">
          <source>groupByNodes()</source>
          <target state="translated">groupByNodes()</target>
        </trans-unit>
        <trans-unit id="6201afc2526d4ec11000f08d265be5e978392c13" translate="yes" xml:space="preserve">
          <source>groupByNodes(seriesList, callback, *nodes)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db78a77b58317f609da19103f902d797ac8cb4b3" translate="yes" xml:space="preserve">
          <source>groupByTags()</source>
          <target state="translated">groupByTags()</target>
        </trans-unit>
        <trans-unit id="50595938f49aed2965618c6cc5a56c916801392f" translate="yes" xml:space="preserve">
          <source>groupByTags(seriesList, callback, *tags)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27d5482eebd075de44389774fce28c69f45c8a75" translate="yes" xml:space="preserve">
          <source>h</source>
          <target state="translated">h</target>
        </trans-unit>
        <trans-unit id="7d8bbe500c82bd1c413d29f341d0b6d1ca9e02df" translate="yes" xml:space="preserve">
          <source>h - hour</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73e7e545c519a38f0aec9e72df51f8ba169db34d" translate="yes" xml:space="preserve">
          <source>height</source>
          <target state="translated">height</target>
        </trans-unit>
        <trans-unit id="f653484987c9242b19db9e41e11681480de0938d" translate="yes" xml:space="preserve">
          <source>hideAxes</source>
          <target state="translated">hideAxes</target>
        </trans-unit>
        <trans-unit id="d709ae5f0ed1e409c6db977841d96fc23bd74e49" translate="yes" xml:space="preserve">
          <source>hideGrid</source>
          <target state="translated">hideGrid</target>
        </trans-unit>
        <trans-unit id="19128155b4a4391a57a9026241b73ad9291fc5b6" translate="yes" xml:space="preserve">
          <source>hideLegend</source>
          <target state="translated">hideLegend</target>
        </trans-unit>
        <trans-unit id="b1f8a52876131a88764af451efe7bf25ea81fb4b" translate="yes" xml:space="preserve">
          <source>hideNullFromLegend</source>
          <target state="translated">hideNullFromLegend</target>
        </trans-unit>
        <trans-unit id="e6ab6fa90fd8917e16747db592e168fc52414354" translate="yes" xml:space="preserve">
          <source>hideXAxis</source>
          <target state="translated">hideXAxis</target>
        </trans-unit>
        <trans-unit id="562638cccaab5289f1be9afee764b9147a17c1bb" translate="yes" xml:space="preserve">
          <source>hideYAxis</source>
          <target state="translated">hideYAxis</target>
        </trans-unit>
        <trans-unit id="7f664221978bdbea32ddf45e3ac6aae3a5c6751f" translate="yes" xml:space="preserve">
          <source>hiding of graph elements (see &lt;a href=&quot;render_api#param-graphonly&quot;&gt;graphOnly&lt;/a&gt;, &lt;a href=&quot;render_api#param-hideaxes&quot;&gt;hideAxes&lt;/a&gt;, &lt;a href=&quot;render_api#param-hideyaxis&quot;&gt;hideYAxis&lt;/a&gt; and &lt;a href=&quot;render_api#param-hidegrid&quot;&gt;hideGrid&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2ae8915c55ef2bac5d3922b0e086093941a3e3a" translate="yes" xml:space="preserve">
          <source>highest()</source>
          <target state="translated">highest()</target>
        </trans-unit>
        <trans-unit id="ea0413da580014055823acb9622bc65012479ada" translate="yes" xml:space="preserve">
          <source>highest(seriesList, n=1, func='average')</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d70fd1746c2fb3f639755c831f8f5979a1a2495c" translate="yes" xml:space="preserve">
          <source>highestAverage()</source>
          <target state="translated">highestAverage()</target>
        </trans-unit>
        <trans-unit id="3235e14bd058e17a0496fa089ddb860b11a68f8c" translate="yes" xml:space="preserve">
          <source>highestAverage(seriesList, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c5c197a128e6d4a0ebe97cab5100fb0a34b5fbd" translate="yes" xml:space="preserve">
          <source>highestCurrent()</source>
          <target state="translated">highestCurrent()</target>
        </trans-unit>
        <trans-unit id="364947466e78c817253fa936e2fbc15c2bfc31d3" translate="yes" xml:space="preserve">
          <source>highestCurrent(seriesList, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99a13b1ea653ca7ebe6a5204d769acef5ce7467d" translate="yes" xml:space="preserve">
          <source>highestMax()</source>
          <target state="translated">highestMax()</target>
        </trans-unit>
        <trans-unit id="1894c790312ecd1f702f084d32b0392925412a4d" translate="yes" xml:space="preserve">
          <source>highestMax(seriesList, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="782977c474a5262e90b748c067f4e66bee878514" translate="yes" xml:space="preserve">
          <source>hitcount()</source>
          <target state="translated">hitcount()</target>
        </trans-unit>
        <trans-unit id="1d02c9203f8b9aa7363e07e42a249c0d4a81f00d" translate="yes" xml:space="preserve">
          <source>hitcount(seriesList, intervalString, alignToInterval=False)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a2317cf803415dddf3372f81915a1a3fa694b92" translate="yes" xml:space="preserve">
          <source>holtWintersAberration()</source>
          <target state="translated">holtWintersAberration()</target>
        </trans-unit>
        <trans-unit id="0de78d1dbc44e76d12b87c3105f7528535f421a5" translate="yes" xml:space="preserve">
          <source>holtWintersAberration(seriesList, delta=3, bootstrapInterval='7d', seasonality='1d')</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b63b0af6c4bb164a10cf1d7fb56dcc008d9b4311" translate="yes" xml:space="preserve">
          <source>holtWintersConfidenceArea()</source>
          <target state="translated">holtWintersConfidenceArea()</target>
        </trans-unit>
        <trans-unit id="2ef6f8a9e2b8b257bc63a39a2029d9747360677b" translate="yes" xml:space="preserve">
          <source>holtWintersConfidenceArea(seriesList, delta=3, bootstrapInterval='7d', seasonality='1d')</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e968dc51491a91f4c6ad7e9127cf2083936a4d42" translate="yes" xml:space="preserve">
          <source>holtWintersConfidenceBands()</source>
          <target state="translated">holtWintersConfidenceBands()</target>
        </trans-unit>
        <trans-unit id="5940d761c73d421656b1a5bf685115e07c0cb388" translate="yes" xml:space="preserve">
          <source>holtWintersConfidenceBands(seriesList, delta=3, bootstrapInterval='7d', seasonality='1d')</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b1ffdf49293c512739237bf5c3e7a7af7739bb4" translate="yes" xml:space="preserve">
          <source>holtWintersForecast()</source>
          <target state="translated">holtWintersForecast()</target>
        </trans-unit>
        <trans-unit id="dd87ab7cea2b2cfc545f50f9792ecc5a5dd693f3" translate="yes" xml:space="preserve">
          <source>holtWintersForecast(seriesList, bootstrapInterval='7d', seasonality='1d')</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99012a110641febc35316f4cce0355ddbb05fb05" translate="yes" xml:space="preserve">
          <source>identity()</source>
          <target state="translated">identity()</target>
        </trans-unit>
        <trans-unit id="eea28f9348bb371173658298f926762c03fa844e" translate="yes" xml:space="preserve">
          <source>identity(name)</source>
          <target state="translated">identity(name)</target>
        </trans-unit>
        <trans-unit id="d5b57edc05fb6443cded7d174d5bb8e5261fa40b" translate="yes" xml:space="preserve">
          <source>importExport dashboards fromto Graphite servers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aca2c31f53ef274fa801ca4087797f09b1f2cf36" translate="yes" xml:space="preserve">
          <source>in the request parameters. The returned JSON is a compact representation by default, if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e97bd4251fcf9378360d93a76305decca51a2c56" translate="yes" xml:space="preserve">
          <source>influxgraph</source>
          <target state="translated">influxgraph</target>
        </trans-unit>
        <trans-unit id="237b642294da5cc6b963c7e1d466bf29ea75478c" translate="yes" xml:space="preserve">
          <source>integral()</source>
          <target state="translated">integral()</target>
        </trans-unit>
        <trans-unit id="b4f100f057ad1a7fb094211d69e7f37b1ca63811" translate="yes" xml:space="preserve">
          <source>integral(seriesList)</source>
          <target state="translated">integral(seriesList)</target>
        </trans-unit>
        <trans-unit id="e7abb0a726305ae5d1f0f943e7162d591fb8bafe" translate="yes" xml:space="preserve">
          <source>integralByInterval()</source>
          <target state="translated">integralByInterval()</target>
        </trans-unit>
        <trans-unit id="440233add2cd111039df918e2c7881ed6d43001d" translate="yes" xml:space="preserve">
          <source>integralByInterval(seriesList, intervalUnit)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1484f5e79255736d0486db17d8b5a0f5d4acd16" translate="yes" xml:space="preserve">
          <source>interpolate</source>
          <target state="translated">interpolate</target>
        </trans-unit>
        <trans-unit id="edceecffb5d2c087661f3bdd9b3fb958764baba5" translate="yes" xml:space="preserve">
          <source>interpolate()</source>
          <target state="translated">interpolate()</target>
        </trans-unit>
        <trans-unit id="8bf339705df6851f67bb071b81711fd496de3840" translate="yes" xml:space="preserve">
          <source>interpolate(seriesList, limit=inf)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="870e724e2015dcaf9af25d1100bcc316379fc13a" translate="yes" xml:space="preserve">
          <source>invert()</source>
          <target state="translated">invert()</target>
        </trans-unit>
        <trans-unit id="a6b2ba746d9bfed36812e442a63b705363a7ad0b" translate="yes" xml:space="preserve">
          <source>invert(seriesList)</source>
          <target state="translated">invert(seriesList)</target>
        </trans-unit>
        <trans-unit id="5cda01146b75c386688a290e9dd93b0444d5d1b1" translate="yes" xml:space="preserve">
          <source>is Graphite&amp;rsquo;s traditional consistent-hashing implementation. Alternatively, you can use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d6650460e7b1c44a344d7dd7a7310b57cfa391" translate="yes" xml:space="preserve">
          <source>is a seriesList, specifying</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="def7bb40232a4de6db916d04c682c9a96edca591" translate="yes" xml:space="preserve">
          <source>is not included in the list of parameters):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a49406094bd59f5d2c95db3dc58abecc3641a6a" translate="yes" xml:space="preserve">
          <source>is not specified, the sum of all points in the wildcard series will be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="463d7f5e776cba411075792123d088b762a36c54" translate="yes" xml:space="preserve">
          <source>is passed in the request parameters the returned JSON will be formatted with newlines and indentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="156f609e68d63c51077a7f799bfe07aef6971ccd" translate="yes" xml:space="preserve">
          <source>is set to True, percentile values are actual values contained in one of the supplied series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c2688121c14a382db5d553a6a62ba707580aec9" translate="yes" xml:space="preserve">
          <source>is similar to doing so from a source install. Arguments to the underlying &lt;code&gt;setup.py&lt;/code&gt; controlling installation location can be passed through</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60a5acd43b2f28eaac210c582a149c93f2e17d38" translate="yes" xml:space="preserve">
          <source>is specified, each series will be calculated as a percentage of that total. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cd617e9a66a53bda64195dd1a7fbc1824ce1a75" translate="yes" xml:space="preserve">
          <source>isNonNull()</source>
          <target state="translated">isNonNull()</target>
        </trans-unit>
        <trans-unit id="229e6da3e5a990951e4c85dc48a80bf6dc86b649" translate="yes" xml:space="preserve">
          <source>isNonNull(seriesList)</source>
          <target state="translated">isNonNull(seriesList)</target>
        </trans-unit>
        <trans-unit id="27636c9435767695bbb6401ff4a43595b4ec37da" translate="yes" xml:space="preserve">
          <source>jmx2graphite</source>
          <target state="translated">jmx2graphite</target>
        </trans-unit>
        <trans-unit id="088d94b74f66904c18afcb7fa9fcf0384f499932" translate="yes" xml:space="preserve">
          <source>jmxtrans</source>
          <target state="translated">jmxtrans</target>
        </trans-unit>
        <trans-unit id="05d97e6e9834ccf063c552e404b9ecafc5e4d662" translate="yes" xml:space="preserve">
          <source>json</source>
          <target state="translated">json</target>
        </trans-unit>
        <trans-unit id="def0b140f03f857ea362eab215b3da5f740c15ac" translate="yes" xml:space="preserve">
          <source>jsonp</source>
          <target state="translated">jsonp</target>
        </trans-unit>
        <trans-unit id="13812605ec66d702144168c7137f47284144c823" translate="yes" xml:space="preserve">
          <source>keep dashboards in YAML format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29573dfd84785981f3eeb4d9ee44fe492fe39790" translate="yes" xml:space="preserve">
          <source>keepLastValue()</source>
          <target state="translated">keepLastValue()</target>
        </trans-unit>
        <trans-unit id="56d336ec04a22a35a76f2f290f6e2e9036ca60bc" translate="yes" xml:space="preserve">
          <source>keepLastValue(seriesList, limit=inf)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4400cae0796f6f84a75141e14c8124c398b0d7c6" translate="yes" xml:space="preserve">
          <source>label (see &lt;a href=&quot;render_api#param-vtitle&quot;&gt;vtitle&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="213ed3ea453bf610688ff8041e0a3b7b6abb5e6e" translate="yes" xml:space="preserve">
          <source>last</source>
          <target state="translated">last</target>
        </trans-unit>
        <trans-unit id="e2e8377377cdbb9728af0449db77d9c34638cd01" translate="yes" xml:space="preserve">
          <source>leftColor</source>
          <target state="translated">leftColor</target>
        </trans-unit>
        <trans-unit id="954a506a26a866969383cfa8519855cf1e65124b" translate="yes" xml:space="preserve">
          <source>leftDashed</source>
          <target state="translated">leftDashed</target>
        </trans-unit>
        <trans-unit id="e8e6566911211c33317219d80c09632c92eba739" translate="yes" xml:space="preserve">
          <source>leftWidth</source>
          <target state="translated">leftWidth</target>
        </trans-unit>
        <trans-unit id="a759e03c3dc293c087988c285aa4a7bc91e4e080" translate="yes" xml:space="preserve">
          <source>legendValue()</source>
          <target state="translated">legendValue()</target>
        </trans-unit>
        <trans-unit id="2acf4cf0ae43e6eee2f5fba44291fd1ef7b85aee" translate="yes" xml:space="preserve">
          <source>legendValue(seriesList, *valueTypes)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33b44a4b329a7b75f1d698f507ed4a93792abcc4" translate="yes" xml:space="preserve">
          <source>legends (see &lt;a href=&quot;render_api#param-hidelegend&quot;&gt;hideLegend&lt;/a&gt; and &lt;a href=&quot;render_api#param-uniquelegend&quot;&gt;uniqueLegend&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea832b9e06e6d664e9a97e26d8a295260418d586" translate="yes" xml:space="preserve">
          <source>library. It also provides a query service for in-memory metric datapoints, used by the Graphite webapp to retrieve &amp;ldquo;hot data&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f45593ad2a7eb9178fc9e14aadaea64e9eb7e6ef" translate="yes" xml:space="preserve">
          <source>limit()</source>
          <target state="translated">limit()</target>
        </trans-unit>
        <trans-unit id="055ad0f9c97a070067b5209b874ecbe283d54f0c" translate="yes" xml:space="preserve">
          <source>limit(seriesList, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="931701710a5e307d0200942f74600306bbca477d" translate="yes" xml:space="preserve">
          <source>limit=X</source>
          <target state="translated">limit=X</target>
        </trans-unit>
        <trans-unit id="93a23080bc098a807bf68d1e8f554dd892bc5e63" translate="yes" xml:space="preserve">
          <source>line thickness (see &lt;a href=&quot;render_api#param-linewidth&quot;&gt;lineWidth&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daaae9932367d2bf881b7ab8cda43cb7a0a97d9d" translate="yes" xml:space="preserve">
          <source>lineMode</source>
          <target state="translated">lineMode</target>
        </trans-unit>
        <trans-unit id="7e88ec6beeb90db0082fc25fd542f5d9ed1efa6f" translate="yes" xml:space="preserve">
          <source>lineWidth</source>
          <target state="translated">lineWidth</target>
        </trans-unit>
        <trans-unit id="e1a0f97764e05adfa5a9ff15f7fd0ab1d030beb5" translate="yes" xml:space="preserve">
          <source>lineWidth()</source>
          <target state="translated">lineWidth()</target>
        </trans-unit>
        <trans-unit id="5f40d93741617ab4906e1748e9f7bb6b07ba6ba6" translate="yes" xml:space="preserve">
          <source>lineWidth(seriesList, width)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99b3bf6a73efad52209c83db20a7543b4d832150" translate="yes" xml:space="preserve">
          <source>linearRegression()</source>
          <target state="translated">linearRegression()</target>
        </trans-unit>
        <trans-unit id="7657cb07392bd6014015ca48fa00a5096463971d" translate="yes" xml:space="preserve">
          <source>linearRegression(seriesList, startSourceAt=None, endSourceAt=None)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27d878295b4bc6f87b53f0e17e04fec59ad8c729" translate="yes" xml:space="preserve">
          <source>linearRegressionAnalysis()</source>
          <target state="translated">linearRegressionAnalysis()</target>
        </trans-unit>
        <trans-unit id="c0449348b75dea139415ecfd0e0adc32bc95e95e" translate="yes" xml:space="preserve">
          <source>linearRegressionAnalysis(series)</source>
          <target state="translated">linearRegressionAnalysis(series)</target>
        </trans-unit>
        <trans-unit id="f7f2786e3ff4a008513f43a423a58a34b0b6b1b6" translate="yes" xml:space="preserve">
          <source>link in the Composer interface. This is useful for directing users to an external authentication link such as for Remote User authentication or a backend such as &lt;a href=&quot;https://launchpad.net/django-openid-auth&quot;&gt;django_openid_auth&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1641dc8eb2249698cfe1a2497bb0b9ece303121e" translate="yes" xml:space="preserve">
          <source>link used in the header of the Graphite Composer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="939bb46a04c3640c8c427e92b1b557e882e2d2a0" translate="yes" xml:space="preserve">
          <source>local</source>
          <target state="translated">local</target>
        </trans-unit>
        <trans-unit id="dc95fb67d1b95b32a26aa7846a7d264c5d03a073" translate="yes" xml:space="preserve">
          <source>localOnly</source>
          <target state="translated">localOnly</target>
        </trans-unit>
        <trans-unit id="efe3369bbbda819969cb6e2d4d1491f179143aad" translate="yes" xml:space="preserve">
          <source>local_settings.py</source>
          <target state="translated">local_settings.py</target>
        </trans-unit>
        <trans-unit id="ba7244c30cd8b0720af304a11043fdb50ef07a9f" translate="yes" xml:space="preserve">
          <source>logBase</source>
          <target state="translated">logBase</target>
        </trans-unit>
        <trans-unit id="1adbc8627d28b97ec3b4634484715311db2b3c72" translate="yes" xml:space="preserve">
          <source>logarithm()</source>
          <target state="translated">logarithm()</target>
        </trans-unit>
        <trans-unit id="a3ff03c52e168c6524062868648f5e963d9251bb" translate="yes" xml:space="preserve">
          <source>logarithm(seriesList, base=10)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6c67a85401f2a945ab6a794fa7ab87f16b84b95" translate="yes" xml:space="preserve">
          <source>lowest()</source>
          <target state="translated">lowest()</target>
        </trans-unit>
        <trans-unit id="a405bf82d937000dd1c24116e39b56e3634733a3" translate="yes" xml:space="preserve">
          <source>lowest(seriesList, n=1, func='average')</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c30f9207eb26a16e04df34cf12f0ba0cf4cf68d1" translate="yes" xml:space="preserve">
          <source>lowestAverage()</source>
          <target state="translated">lowestAverage()</target>
        </trans-unit>
        <trans-unit id="ce6db5214e932839572cbe1068b0824ab07e41dd" translate="yes" xml:space="preserve">
          <source>lowestAverage(seriesList, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3da7436cbd444cf789b2822f0b8ce624a702cc5" translate="yes" xml:space="preserve">
          <source>lowestCurrent()</source>
          <target state="translated">lowestCurrent()</target>
        </trans-unit>
        <trans-unit id="4806813e2834ef526b6c03b8ebb01b64ca35d84b" translate="yes" xml:space="preserve">
          <source>lowestCurrent(seriesList, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44a501df19d8a257fcd5dd3cd5f9cd41f2ca7de8" translate="yes" xml:space="preserve">
          <source>m - minute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2049e53550c8447e9b38a6bae2a6ef829032999" translate="yes" xml:space="preserve">
          <source>magenta</source>
          <target state="translated">magenta</target>
        </trans-unit>
        <trans-unit id="15de5b59a77fcdc04b42e6fb99771e2658dad41e" translate="yes" xml:space="preserve">
          <source>majorGridLineColor</source>
          <target state="translated">majorGridLineColor</target>
        </trans-unit>
        <trans-unit id="28e7b0a8345e64c0aaeb1c05806e1f876aafe90d" translate="yes" xml:space="preserve">
          <source>mapSeries()</source>
          <target state="translated">mapSeries()</target>
        </trans-unit>
        <trans-unit id="aa2bba2b76b1b9d0453d2d108273b3994ddf738c" translate="yes" xml:space="preserve">
          <source>mapSeries(seriesList, *mapNodes)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5033fb5f759a1d872e64738513ba3625e94162d5" translate="yes" xml:space="preserve">
          <source>margin</source>
          <target state="translated">margin</target>
        </trans-unit>
        <trans-unit id="0706025b2bbcec1ed8d64822f4eccd96314938d0" translate="yes" xml:space="preserve">
          <source>max</source>
          <target state="translated">max</target>
        </trans-unit>
        <trans-unit id="f6d062d99449a9174b44a67ba84f19d21736ffee" translate="yes" xml:space="preserve">
          <source>maxDataPoints</source>
          <target state="translated">maxDataPoints</target>
        </trans-unit>
        <trans-unit id="e5b603ef4d5ea89d76baa59058436e9fe76def1b" translate="yes" xml:space="preserve">
          <source>maxSeries()</source>
          <target state="translated">maxSeries()</target>
        </trans-unit>
        <trans-unit id="4e36e6aa0f5c0c8352678b1028e9e7338aac5784" translate="yes" xml:space="preserve">
          <source>maxSeries(*seriesLists)</source>
          <target state="translated">maxSeries(*seriesLists)</target>
        </trans-unit>
        <trans-unit id="7b82a6d089e9803f79043400f52b659fd4ea37d1" translate="yes" xml:space="preserve">
          <source>maximumAbove()</source>
          <target state="translated">maximumAbove()</target>
        </trans-unit>
        <trans-unit id="1c1027a2b0ed24c2d54b0bbc93d1fd81c9443eb6" translate="yes" xml:space="preserve">
          <source>maximumAbove(seriesList, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa22849ea6b74d4355653f1e7522b6bb99c8cb4" translate="yes" xml:space="preserve">
          <source>maximumBelow()</source>
          <target state="translated">maximumBelow()</target>
        </trans-unit>
        <trans-unit id="99e03c1ae0af7844facb392c29af1e689ceb4c1f" translate="yes" xml:space="preserve">
          <source>maximumBelow(seriesList, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5a39a3a7b3df7a7c25d3954cca5306e26c2073a" translate="yes" xml:space="preserve">
          <source>metric</source>
          <target state="translated">metric</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
