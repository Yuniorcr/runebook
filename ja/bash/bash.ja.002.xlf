<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="">
    <body>
      <group id="">
        <trans-unit id="49817fd6fc89f4786bb978f98a3a31b666bf485f" translate="yes" xml:space="preserve">
          <source>An array variable consisting of the individual words in the current command line. The line is split into words as Readline would split it, using &lt;code&gt;COMP_WORDBREAKS&lt;/code&gt; as described above. This variable is available only in shell functions invoked by the programmable completion facilities (see &lt;a href=&quot;programmable-completion#Programmable-Completion&quot;&gt;Programmable Completion&lt;/a&gt;).</source>
          <target state="translated">現在のコマンドラインの個々の単語で構成される配列変数。 上記のように &lt;code&gt;COMP_WORDBREAKS&lt;/code&gt; を使用して、Readlineが行を分割するように、行は単語に分割されます。 この変数は、プログラム可能な補完機能によって呼び出されるシェル関数でのみ使用できます（「 &lt;a href=&quot;programmable-completion#Programmable-Completion&quot;&gt;プログラム可能な補完&lt;/a&gt; 」を参照）。</target>
        </trans-unit>
        <trans-unit id="e444cdd3d38e10c7f2e87cc4998685a8f1fc68fb" translate="yes" xml:space="preserve">
          <source>An array variable containing all of the parameters in the current bash execution call stack. The final parameter of the last subroutine call is at the top of the stack; the first parameter of the initial call is at the bottom. When a subroutine is executed, the parameters supplied are pushed onto &lt;code&gt;BASH_ARGV&lt;/code&gt;. The shell sets &lt;code&gt;BASH_ARGV&lt;/code&gt; only when in extended debugging mode (see &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt; for a description of the &lt;code&gt;extdebug&lt;/code&gt; option to the &lt;code&gt;shopt&lt;/code&gt; builtin). Setting &lt;code&gt;extdebug&lt;/code&gt; after the shell has started to execute a script, or referencing this variable when &lt;code&gt;extdebug&lt;/code&gt; is not set, may result in inconsistent values.</source>
          <target state="translated">現在のbash実行呼び出しスタックのすべてのパラメーターを含む配列変数。 最後のサブルーチン呼び出しの最後のパラメーターはスタックの一番上にあります。 最初の呼び出しの最初のパラメーターは一番下にあります。 サブルーチンが実行されると、指定されたパラメーターが &lt;code&gt;BASH_ARGV&lt;/code&gt; にプッシュされます 。 シェルは、拡張デバッグモードの場合にのみ &lt;code&gt;BASH_ARGV&lt;/code&gt; を設定します（ &lt;code&gt;shopt&lt;/code&gt; &lt;code&gt;extdebug&lt;/code&gt; オプションの説明については、 Shoptビルトインを参照してください）。 シェルがスクリプトの実行を開始した後に &lt;code&gt;extdebug&lt;/code&gt; を設定するか、 &lt;code&gt;extdebug&lt;/code&gt; が設定されていないときにこの変数を参照すると、値が不整合になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="f85b6cd27ce68b4d5f5591ccc1816337286c957b" translate="yes" xml:space="preserve">
          <source>An array variable containing the current contents of the directory stack. Directories appear in the stack in the order they are displayed by the &lt;code&gt;dirs&lt;/code&gt; builtin. Assigning to members of this array variable may be used to modify directories already in the stack, but the &lt;code&gt;pushd&lt;/code&gt; and &lt;code&gt;popd&lt;/code&gt; builtins must be used to add and remove directories. Assignment to this variable will not change the current directory. If &lt;code&gt;DIRSTACK&lt;/code&gt; is unset, it loses its special properties, even if it is subsequently reset.</source>
          <target state="translated">ディレクトリスタックの現在の内容を含む配列変数。 ディレクトリは、組み込みの &lt;code&gt;dirs&lt;/code&gt; によって表示される順序でスタックに表示されます。 この配列変数のメンバーへの割り当ては、すでにスタックにあるディレクトリを変更するために使用できますが、 &lt;code&gt;pushd&lt;/code&gt; および &lt;code&gt;popd&lt;/code&gt; ビルトインを使用して、ディレクトリを追加および削除する必要があります。 この変数に割り当てても、現在のディレクトリは変更されません。 &lt;code&gt;DIRSTACK&lt;/code&gt; が設定されていない場合、その後リセットされても、特別なプロパティは失われます。</target>
        </trans-unit>
        <trans-unit id="fa313acc4290db5740c52a1a9d9418893bb7867b" translate="yes" xml:space="preserve">
          <source>An array variable containing the list of groups of which the current user is a member. Assignments to &lt;code&gt;GROUPS&lt;/code&gt; have no effect. If &lt;code&gt;GROUPS&lt;/code&gt; is unset, it loses its special properties, even if it is subsequently reset.</source>
          <target state="translated">現在のユーザーがメンバーであるグループのリストを含む配列変数。 &lt;code&gt;GROUPS&lt;/code&gt; への割り当ては無効です。 &lt;code&gt;GROUPS&lt;/code&gt; が設定されていない場合、その後リセットされても、その特別なプロパティは失われます。</target>
        </trans-unit>
        <trans-unit id="5eb9cf24f8e2f9c0f5f3e7415fcfb67b6c90f6be" translate="yes" xml:space="preserve">
          <source>An array variable containing the names of all shell functions currently in the execution call stack. The element with index 0 is the name of any currently-executing shell function. The bottom-most element (the one with the highest index) is &lt;code&gt;&quot;main&quot;&lt;/code&gt;. This variable exists only when a shell function is executing. Assignments to &lt;code&gt;FUNCNAME&lt;/code&gt; have no effect. If &lt;code&gt;FUNCNAME&lt;/code&gt; is unset, it loses its special properties, even if it is subsequently reset.</source>
          <target state="translated">現在実行呼び出しスタックにあるすべてのシェル関数の名前を含む配列変数。 インデックス0の要素は、現在実行中のシェル関数の名前です。 一番下の要素（最高のインデックスを持つ要素）は &lt;code&gt;&quot;main&quot;&lt;/code&gt; です。 この変数は、シェル関数の実行中にのみ存在します。 &lt;code&gt;FUNCNAME&lt;/code&gt; への割り当ては無効です。 &lt;code&gt;FUNCNAME&lt;/code&gt; が設定されていない場合、その後リセットされても、その特殊なプロパティは失われます。</target>
        </trans-unit>
        <trans-unit id="2ca086c729cd8769b8319b837f8007af03e3602e" translate="yes" xml:space="preserve">
          <source>An array variable created to hold the file descriptors for output from and input to an unnamed coprocess (see &lt;a href=&quot;coprocesses#Coprocesses&quot;&gt;Coprocesses&lt;/a&gt;).</source>
          <target state="translated">名前のないコプロセスからの出力および入力のためのファイル記述子を保持するために作成された配列変数（コプロセスを参照）。</target>
        </trans-unit>
        <trans-unit id="f1d1aa701682aa2534a751bc3dac4b6fc52387fb" translate="yes" xml:space="preserve">
          <source>An array variable created to hold the text read by the &lt;code&gt;mapfile&lt;/code&gt; builtin when no variable name is supplied.</source>
          <target state="translated">変数名が指定されていない場合に、組み込みの &lt;code&gt;mapfile&lt;/code&gt; によって読み取られたテキストを保持するために作成された配列変数。</target>
        </trans-unit>
        <trans-unit id="9890edf8c7f3cb741e889e1d2041b3e6ee9494b6" translate="yes" xml:space="preserve">
          <source>An array variable from which Bash reads the possible completions generated by a shell function invoked by the programmable completion facility (see &lt;a href=&quot;programmable-completion#Programmable-Completion&quot;&gt;Programmable Completion&lt;/a&gt;). Each array element contains one possible completion.</source>
          <target state="translated">Bashがプログラム可能な補完機能によって呼び出されたシェル関数によって生成された可能な補完を読み取る配列変数（「 &lt;a href=&quot;programmable-completion#Programmable-Completion&quot;&gt;プログラム可能な補完&lt;/a&gt; 」を参照）。 各配列要素には、1つの可能な補完が含まれます。</target>
        </trans-unit>
        <trans-unit id="032f83df13d7243eb6ee703b305875fe66115713" translate="yes" xml:space="preserve">
          <source>An array variable is considered set if a subscript has been assigned a value. The null string is a valid value.</source>
          <target state="translated">添え字に値が代入されている場合、配列変数はセットされていると見なされます。NULL 文字列は有効な値です。</target>
        </trans-unit>
        <trans-unit id="3e4ba7e20d0d5861b85a4b485e97a50af4f2229a" translate="yes" xml:space="preserve">
          <source>An array variable whose members are assigned by the &amp;lsquo;</source>
          <target state="translated">メンバーが 'によって割り当てられる配列変数</target>
        </trans-unit>
        <trans-unit id="e5fb9da983a81153b675febc370fd7d43ea294f1" translate="yes" xml:space="preserve">
          <source>An array variable whose members are the line numbers in source files where each corresponding member of &lt;var&gt;FUNCNAME&lt;/var&gt; was invoked. &lt;code&gt;${BASH_LINENO[$i]}&lt;/code&gt; is the line number in the source file (&lt;code&gt;${BASH_SOURCE[$i+1]}&lt;/code&gt;) where &lt;code&gt;${FUNCNAME[$i]}&lt;/code&gt; was called (or &lt;code&gt;${BASH_LINENO[$i-1]}&lt;/code&gt; if referenced within another shell function). Use &lt;code&gt;LINENO&lt;/code&gt; to obtain the current line number.</source>
          <target state="translated">&lt;var&gt;FUNCNAME&lt;/var&gt; の対応する各メンバーが呼び出されたソースファイルの行番号をメンバーとする配列変数。 &lt;code&gt;${BASH_LINENO[$i]}&lt;/code&gt; は、 $ {FUNCNAME [$ i]}が呼び出されたソースファイル（ &lt;code&gt;${BASH_SOURCE[$i+1]}&lt;/code&gt; ）の行番号です（または &lt;code&gt;${BASH_LINENO[$i-1]}&lt;/code&gt; 別のシェル関数内で参照される場合）。 &lt;code&gt;LINENO&lt;/code&gt; を使用して、現在の行番号を取得します。</target>
        </trans-unit>
        <trans-unit id="af169c4aad6b05ec1e966f36c83d8d7005cd7e0a" translate="yes" xml:space="preserve">
          <source>An array variable whose members are the source filenames where the corresponding shell function names in the &lt;code&gt;FUNCNAME&lt;/code&gt; array variable are defined. The shell function &lt;code&gt;${FUNCNAME[$i]}&lt;/code&gt; is defined in the file &lt;code&gt;${BASH_SOURCE[$i]}&lt;/code&gt; and called from &lt;code&gt;${BASH_SOURCE[$i+1]}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;FUNCNAME&lt;/code&gt; 配列変数内の対応するシェル関数名が定義されているソースファイル名をメンバーとする配列変数。 シェル関数 &lt;code&gt;${FUNCNAME[$i]}&lt;/code&gt; はファイル$ {BASH_SOURCE [$ i]}で定義され、 &lt;code&gt;${BASH_SOURCE[$i+1]}&lt;/code&gt; から呼び出されます</target>
        </trans-unit>
        <trans-unit id="35edd346f768fcd9ee1e2878caf16d4727ec2c2e" translate="yes" xml:space="preserve">
          <source>An array variable whose values are the number of parameters in each frame of the current bash execution call stack. The number of parameters to the current subroutine (shell function or script executed with &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;source&lt;/code&gt;) is at the top of the stack. When a subroutine is executed, the number of parameters passed is pushed onto &lt;code&gt;BASH_ARGC&lt;/code&gt;. The shell sets &lt;code&gt;BASH_ARGC&lt;/code&gt; only when in extended debugging mode (see &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt; for a description of the &lt;code&gt;extdebug&lt;/code&gt; option to the &lt;code&gt;shopt&lt;/code&gt; builtin). Setting &lt;code&gt;extdebug&lt;/code&gt; after the shell has started to execute a script, or referencing this variable when &lt;code&gt;extdebug&lt;/code&gt; is not set, may result in inconsistent values.</source>
          <target state="translated">現在のbash実行呼び出しスタックの各フレームのパラメーターの数を値とする配列変数。 現在のサブルーチン（ &lt;code&gt;.&lt;/code&gt; または &lt;code&gt;source&lt;/code&gt; で実行されるシェル関数またはスクリプト）へのパラメーターの数は、スタックの一番上にあります。 サブルーチンが実行されると、渡されたパラメーターの数が &lt;code&gt;BASH_ARGC&lt;/code&gt; にプッシュされます 。 シェルは、拡張デバッグモードの場合にのみ &lt;code&gt;BASH_ARGC&lt;/code&gt; を設定します（ &lt;code&gt;shopt&lt;/code&gt; &lt;code&gt;extdebug&lt;/code&gt; オプションの説明については、 Shoptビルトインを参照してください）。 シェルがスクリプトの実行を開始した後に &lt;code&gt;extdebug&lt;/code&gt; を設定するか、 &lt;code&gt;extdebug&lt;/code&gt; が設定されていないときにこの変数を参照すると、値が不整合になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="644a56cc1847242f7b3eb5598257652b047603a4" translate="yes" xml:space="preserve">
          <source>An associative array variable whose members correspond to the internal hash table of commands as maintained by the &lt;code&gt;hash&lt;/code&gt; builtin (see &lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;). Elements added to this array appear in the hash table; however, unsetting array elements currently does not cause command names to be removed from the hash table. If &lt;code&gt;BASH_CMDS&lt;/code&gt; is unset, it loses its special properties, even if it is subsequently reset.</source>
          <target state="translated">&lt;code&gt;hash&lt;/code&gt; ビルトイン（ &lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;Bourne Shell Builtinsを&lt;/a&gt;参照）によって維持されるコマンドの内部ハッシュテーブルにメンバーが対応する連想配列変数。 この配列に追加された要素はハッシュテーブルに表示されます。 ただし、配列要素の設定を解除しても、現在、コマンド名がハッシュテーブルから削除されることはありません。 &lt;code&gt;BASH_CMDS&lt;/code&gt; が設定されていない場合、その後リセットされても、その特別なプロパティは失われます。</target>
        </trans-unit>
        <trans-unit id="af5859e874886cdb1ddf21e5742b1e6226fe170c" translate="yes" xml:space="preserve">
          <source>An associative array variable whose members correspond to the internal list of aliases as maintained by the &lt;code&gt;alias&lt;/code&gt; builtin. (see &lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;). Elements added to this array appear in the alias list; however, unsetting array elements currently does not cause aliases to be removed from the alias list. If &lt;code&gt;BASH_ALIASES&lt;/code&gt; is unset, it loses its special properties, even if it is subsequently reset.</source>
          <target state="translated">メンバーが &lt;code&gt;alias&lt;/code&gt; ビルトインによって維持されるエイリアスの内部リストに対応する連想配列変数。 （ &lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;Bourne Shell Builtinsを&lt;/a&gt;参照してください）。 この配列に追加された要素はエイリアスリストに表示されます。 ただし、配列要素の設定を解除しても、現時点ではエイリアスリストからエイリアスが削除されることはありません。 &lt;code&gt;BASH_ALIASES&lt;/code&gt; が設定されていない場合、その後リセットされても、その特別なプロパティは失われます。</target>
        </trans-unit>
        <trans-unit id="fca5efbf92b800d08290da89c89c5c1b271827d2" translate="yes" xml:space="preserve">
          <source>An escape character.</source>
          <target state="translated">脱出キャラ。</target>
        </trans-unit>
        <trans-unit id="9a9035d6c34d533d04f6b7a05e9f5de07690c984" translate="yes" xml:space="preserve">
          <source>An event designator is a reference to a command line entry in the history list. Unless the reference is absolute, events are relative to the current position in the history list.</source>
          <target state="translated">イベント指定子は、履歴リストのコマンドラインエントリへの参照です。参照が絶対的なものでない限り、イベントは履歴リストの現在の位置からの相対的なものです。</target>
        </trans-unit>
        <trans-unit id="a4169a64dd8d1552aabc828b96115afa36b66ef7" translate="yes" xml:space="preserve">
          <source>An example inputrc file.</source>
          <target state="translated">inputrcファイルの例。</target>
        </trans-unit>
        <trans-unit id="7616a0cb0a5efad420a53b0c332e8e599cb210fc" translate="yes" xml:space="preserve">
          <source>An example shell function for generating possible completions.</source>
          <target state="translated">可能な補完を生成するためのシェル関数の例です。</target>
        </trans-unit>
        <trans-unit id="7e5fa57883d9bf7e3735c2074beadbd12d19d7ae" translate="yes" xml:space="preserve">
          <source>An index into &lt;code&gt;${COMP_WORDS}&lt;/code&gt; of the word containing the current cursor position. This variable is available only in shell functions invoked by the programmable completion facilities (see &lt;a href=&quot;programmable-completion#Programmable-Completion&quot;&gt;Programmable Completion&lt;/a&gt;).</source>
          <target state="translated">現在のカーソル位置を含む単語の &lt;code&gt;${COMP_WORDS}&lt;/code&gt; へのインデックス。 この変数は、プログラム可能な補完機能によって呼び出されるシェル関数でのみ使用できます（「 &lt;a href=&quot;programmable-completion#Programmable-Completion&quot;&gt;プログラム可能な補完&lt;/a&gt; 」を参照）。</target>
        </trans-unit>
        <trans-unit id="6193d16ce12acf45b8e18b71bd531c2ad8f6344f" translate="yes" xml:space="preserve">
          <source>An indexed array is created automatically if any variable is assigned to using the syntax</source>
          <target state="translated">インデックス付き配列は、任意の変数が構文</target>
        </trans-unit>
        <trans-unit id="6a8c368c57c3302e8b0dac17b95c434cf308233b" translate="yes" xml:space="preserve">
          <source>An interactive login shell sends a &lt;code&gt;SIGHUP&lt;/code&gt; to all jobs on exit if the &lt;code&gt;huponexit&lt;/code&gt; shell option has been enabled (see &lt;a href=&quot;signals#Signals&quot;&gt;Signals&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;huponexit&lt;/code&gt; シェルオプションが有効になっている場合、対話型ログインシェルは終了時にすべてのジョブに &lt;code&gt;SIGHUP&lt;/code&gt; を送信します（ &lt;a href=&quot;signals#Signals&quot;&gt;シグナルを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="befd6401b60b10cda25e5684211c470f451afe92" translate="yes" xml:space="preserve">
          <source>An interactive shell generally reads from and writes to a user&amp;rsquo;s terminal.</source>
          <target state="translated">対話型シェルは通常、ユーザーの端末から読み取りおよびユーザーの端末に書き込みます。</target>
        </trans-unit>
        <trans-unit id="f5937a112852c4e884ce08b30d70f06a04360ec1" translate="yes" xml:space="preserve">
          <source>An interactive shell is one started without non-option arguments, unless</source>
          <target state="translated">対話的なシェルは、オプション以外の引数なしで起動されます。</target>
        </trans-unit>
        <trans-unit id="4f15e2375ce8441424a30be0fe247b676ddf4759" translate="yes" xml:space="preserve">
          <source>An interactive shell will not exit upon reading EOF.</source>
          <target state="translated">対話型シェルはEOFを読んでも終了しません。</target>
        </trans-unit>
        <trans-unit id="435c8fb72723c7fb7507f1830dd3f0016b903ac6" translate="yes" xml:space="preserve">
          <source>An introduction to the shell.</source>
          <target state="translated">シェルの入門編。</target>
        </trans-unit>
        <trans-unit id="cedbd6925272d7dd15fe8ba2a4365347eeea9818" translate="yes" xml:space="preserve">
          <source>An older version of the bash_completion package is distributed with bash in the</source>
          <target state="translated">古いバージョンの bash_completion パッケージが bash と一緒に</target>
        </trans-unit>
        <trans-unit id="4c3503edec7f8f2fb276fe9373a5ee916d62ca0e" translate="yes" xml:space="preserve">
          <source>Any character that appears in a pattern, other than the special pattern characters described below, matches itself. The &lt;small&gt;NUL&lt;/small&gt; character may not occur in a pattern. A backslash escapes the following character; the escaping backslash is discarded when matching. The special pattern characters must be quoted if they are to be matched literally.</source>
          <target state="translated">以下に説明する特殊パターン文字以外のパターンに現れる文字は、それ自体と一致します。 &lt;small&gt;NUL&lt;/small&gt;文字はパターンでは使用できません。 バックスラッシュは次の文字をエスケープします。 エスケープするバックスラッシュは照合時に破棄されます。 特殊パターン文字は、文字どおりに一致させる場合は引用符で囲む必要があります。</target>
        </trans-unit>
        <trans-unit id="96fbf8be8e8b3b1637c65d31d53122984b4799a7" translate="yes" xml:space="preserve">
          <source>Any completions specified by a filename expansion pattern to the</source>
          <target state="translated">ファイル名の展開パターンで指定された補完が</target>
        </trans-unit>
        <trans-unit id="093317f6114bdaf1c9b80acdfb4744facce9ee53" translate="yes" xml:space="preserve">
          <source>Any element of an array may be referenced using &lt;code&gt;${&lt;var&gt;name&lt;/var&gt;[&lt;var&gt;subscript&lt;/var&gt;]}&lt;/code&gt;. The braces are required to avoid conflicts with the shell&amp;rsquo;s filename expansion operators. If the &lt;var&gt;subscript&lt;/var&gt; is &amp;lsquo;</source>
          <target state="translated">配列の要素は、 &lt;code&gt;${&lt;var&gt;name&lt;/var&gt;[&lt;var&gt;subscript&lt;/var&gt;]}&lt;/code&gt; を使用して参照できます。 中括弧は、シェルのファイル名展開演算子との競合を避けるために必要です。 &lt;var&gt;subscript&lt;/var&gt; が '</target>
        </trans-unit>
        <trans-unit id="05c84891da9124272ef091879d5a02832afcce76" translate="yes" xml:space="preserve">
          <source>Any function specified with</source>
          <target state="translated">で指定された関数</target>
        </trans-unit>
        <trans-unit id="737bb9637c4b416bd6a8828df88deaf130eff585" translate="yes" xml:space="preserve">
          <source>Append the history lines not already read from the history file to the current history list. These are lines appended to the history file since the beginning of the current Bash session.</source>
          <target state="translated">履歴ファイルからまだ読み込まれていない履歴行を現在の履歴リストに追加します。これらは、現在の Bash セッションの開始以降に履歴ファイルに追加された行です。</target>
        </trans-unit>
        <trans-unit id="fa371fc9ef369f423df1af5f429cb095d5abac4c" translate="yes" xml:space="preserve">
          <source>Append the new history lines to the history file. These are history lines entered since the beginning of the current Bash session, but not already appended to the history file.</source>
          <target state="translated">新しい履歴行を履歴ファイルに追加します。これらは現在の Bash セッションの開始時から入力されているが、まだ履歴ファイルに追加されていない履歴行です。</target>
        </trans-unit>
        <trans-unit id="d13a5c548dd1bd4f3955e89191f0212a7bdbf71b" translate="yes" xml:space="preserve">
          <source>Appendix A Reporting Bugs</source>
          <target state="translated">付録A バグの報告</target>
        </trans-unit>
        <trans-unit id="cfe09449cc8e33d24f5a69a34ea0dd5996ea6af0" translate="yes" xml:space="preserve">
          <source>Appendix B Major Differences From The Bourne Shell</source>
          <target state="translated">付録B ボーンシェルとの主な相違点</target>
        </trans-unit>
        <trans-unit id="4880cb1ef429add51eb9a787445961729f2e1ae9" translate="yes" xml:space="preserve">
          <source>Appendix C GNU Free Documentation License</source>
          <target state="translated">付録C GNU自由文書ライセンス</target>
        </trans-unit>
        <trans-unit id="f58cb6b3f24a0b908fae648b1fc2c206b57b18b0" translate="yes" xml:space="preserve">
          <source>Appendix D Indexes</source>
          <target state="translated">付録D インデックス</target>
        </trans-unit>
        <trans-unit id="c2c618827073f43083dd69ab40b02f7d6238db37" translate="yes" xml:space="preserve">
          <source>Apply the following &amp;lsquo;</source>
          <target state="translated">次を適用します '</target>
        </trans-unit>
        <trans-unit id="fdaa7306385ffcc4f28214e221decb76dcc0b272" translate="yes" xml:space="preserve">
          <source>Arguments to non-string format specifiers are treated as C language constants, except that a leading plus or minus sign is allowed, and if the leading character is a single or double quote, the value is the ASCII value of the following character.</source>
          <target state="translated">文字列以外の書式指定子の引数はC言語の定数として扱われますが、先頭のプラスまたはマイナス記号が許可されており、先頭の文字がシングルクォートまたはダブルクォートの場合、値は次の文字のASCII値となります。</target>
        </trans-unit>
        <trans-unit id="9fb75a7744b90e1d41f52f6bfdc6641917e4fac3" translate="yes" xml:space="preserve">
          <source>Arithmetic Expansion</source>
          <target state="translated">算術展開</target>
        </trans-unit>
        <trans-unit id="3edb8e1eef15c24a8864ca7944421bfa0563defa" translate="yes" xml:space="preserve">
          <source>Arithmetic expansion allows the evaluation of an arithmetic expression and the substitution of the result. The format for arithmetic expansion is:</source>
          <target state="translated">算術展開では、算術式の評価と結果の置換を行うことができます。算術展開のフォーマットは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="4c706e3b86ea549c90f68920d714563086d1fc02" translate="yes" xml:space="preserve">
          <source>Arithmetic on shell variables.</source>
          <target state="translated">シェル変数の算術。</target>
        </trans-unit>
        <trans-unit id="743a14b067caaa35a04f6582909f1857caf4c645" translate="yes" xml:space="preserve">
          <source>Arrange for the debugger profile to be executed before the shell starts. Turns on extended debugging mode (see &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt; for a description of the &lt;code&gt;extdebug&lt;/code&gt; option to the &lt;code&gt;shopt&lt;/code&gt; builtin).</source>
          <target state="translated">シェルが開始する前に実行されるデバッガープロファイルを準備します。 拡張デバッグモードをオンにします（ &lt;code&gt;shopt&lt;/code&gt; &lt;code&gt;extdebug&lt;/code&gt; オプションの説明については、 Shoptビルトインを参照してください）。</target>
        </trans-unit>
        <trans-unit id="86bda10308cd1e1c31d2fea35a9b89ba9752f3e0" translate="yes" xml:space="preserve">
          <source>Array Variables.</source>
          <target state="translated">配列変数。</target>
        </trans-unit>
        <trans-unit id="6a67461a5e834e4fd2df3f2b523d7f15a31181ff" translate="yes" xml:space="preserve">
          <source>Array variable names.</source>
          <target state="translated">配列変数名。</target>
        </trans-unit>
        <trans-unit id="b90cc9bfd23567a2ff5ba1f00e7c63ca6da8755e" translate="yes" xml:space="preserve">
          <source>Arrays</source>
          <target state="translated">Arrays</target>
        </trans-unit>
        <trans-unit id="7eabced6cb34d778f5f281e26063b9089172023e" translate="yes" xml:space="preserve">
          <source>Arrays are assigned to using compound assignments of the form</source>
          <target state="translated">配列は、以下の形式の複合代入を使用して代入されます。</target>
        </trans-unit>
        <trans-unit id="4bc9c32a38bca1b59308f5c7039a8648f444ed2e" translate="yes" xml:space="preserve">
          <source>As noted above, Bash requires the &lt;code&gt;xpg_echo&lt;/code&gt; option to be enabled for the &lt;code&gt;echo&lt;/code&gt; builtin to be fully conformant.</source>
          <target state="translated">上記のように、Bashでは、組み込みの &lt;code&gt;echo&lt;/code&gt; を完全に準拠させるために &lt;code&gt;xpg_echo&lt;/code&gt; オプションを有効にする必要があります。</target>
        </trans-unit>
        <trans-unit id="3aa589890cfda9df3fd8cfd7bc779b2770704045" translate="yes" xml:space="preserve">
          <source>As noted above, if a non-interactive shell is invoked with the</source>
          <target state="translated">上で述べたように、非インタラクティブなシェルが</target>
        </trans-unit>
        <trans-unit id="f432892286f6a7bf3732fb257a0a4599a1049c26" translate="yes" xml:space="preserve">
          <source>As you can see, the {} is replaced with each line read from standard input. While using &lt;code&gt;ls&lt;/code&gt; will work in most instances, it is not sufficient to deal with all filenames. If you need to accommodate special characters in filenames, you can use</source>
          <target state="translated">ご覧のとおり、{}は標準入力から読み取られた各行に置き換えられます。 &lt;code&gt;ls&lt;/code&gt; の使用はほとんどの場合に機能しますが、すべてのファイル名を処理するだけでは不十分です。 ファイル名に特殊文字を含める必要がある場合は、</target>
        </trans-unit>
        <trans-unit id="1d23ff97ad27a77304173e16b06d1cb07802965e" translate="yes" xml:space="preserve">
          <source>Assignment statements preceding &lt;small&gt;POSIX&lt;/small&gt; special builtins persist in the shell environment after the builtin completes.</source>
          <target state="translated">&lt;small&gt;POSIX&lt;/small&gt;特殊ビルトインの前の割り当てステートメントは、ビルトインが完了した後もシェル環境に残ります。</target>
        </trans-unit>
        <trans-unit id="54430ac198c8aa5f1b7e6151be8f8efafe05bce5" translate="yes" xml:space="preserve">
          <source>Assignment statements preceding shell function calls persist in the shell environment after the function returns, as if a &lt;small&gt;POSIX&lt;/small&gt; special builtin command had been executed.</source>
          <target state="translated">シェル関数呼び出しの前の割り当てステートメントは、 &lt;small&gt;POSIX&lt;/small&gt;特殊組み込みコマンドが実行されたかのように、関数が戻った後もシェル環境に残ります。</target>
        </trans-unit>
        <trans-unit id="6afff165a0368b6b32a90d8e10aaea87835226a0" translate="yes" xml:space="preserve">
          <source>Assignment statements preceding the command stay in effect in the shell environment after the command completes.</source>
          <target state="translated">コマンドの前にある割り当て文は、コマンドが完了した後もシェル環境で有効です。</target>
        </trans-unit>
        <trans-unit id="9d94b6b875d60484c4bb7340dd6a44faadd5efa2" translate="yes" xml:space="preserve">
          <source>Associative arrays are created using</source>
          <target state="translated">連想配列は</target>
        </trans-unit>
        <trans-unit id="312925ab15a73ffc2af430651a066fde15cd3475" translate="yes" xml:space="preserve">
          <source>At its base, a shell is simply a macro processor that executes commands. The term macro processor means functionality where text and symbols are expanded to create larger expressions.</source>
          <target state="translated">シェルの基本は、コマンドを実行するマクロプロセッサです。マクロプロセッサという用語は、テキストやシンボルを展開してより大きな式を作成する機能を意味します。</target>
        </trans-unit>
        <trans-unit id="9a33972941fa256c44269f0d323b7d43c6c92b66" translate="yes" xml:space="preserve">
          <source>Attempt completion on the text before point, comparing the text against lines from the history list for possible completion matches.</source>
          <target state="translated">ポイント前のテキストの補完を試み、履歴リストの行とテキストを比較して補完に一致する可能性があるかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="6a39cbb1d67c91fb900a7e0403b3bf4f7226464c" translate="yes" xml:space="preserve">
          <source>Attempt completion on the text before point, treating it as a command name. Command completion attempts to match the text against aliases, reserved words, shell functions, shell builtins, and finally executable filenames, in that order.</source>
          <target state="translated">ポイントの前のテキストをコマンド名として扱い、補完を試みます。コマンド補完は、エイリアス、予約語、シェル関数、シェルビルトイン、最終的に実行可能なファイル名の順に、テキストとの照合を試みます。</target>
        </trans-unit>
        <trans-unit id="0459206f5ad3b3f0d57f7aa7179ed400b6444bbf" translate="yes" xml:space="preserve">
          <source>Attempt completion on the text before point, treating it as a hostname.</source>
          <target state="translated">ポイント前のテキストをホスト名として扱い、補完を試みる。</target>
        </trans-unit>
        <trans-unit id="a275c647ae0a0312b3d4920af98c24668aed88b2" translate="yes" xml:space="preserve">
          <source>Attempt completion on the text before point, treating it as a shell variable.</source>
          <target state="translated">ポイント前のテキストをシェル変数として扱い、補完を試みます。</target>
        </trans-unit>
        <trans-unit id="3d3b29635546c0f2a5cf19e44ea8077397280344" translate="yes" xml:space="preserve">
          <source>Attempt completion on the text before point, treating it as a username.</source>
          <target state="translated">ポイント前のテキストをユーザ名として扱い、補完を試みる。</target>
        </trans-unit>
        <trans-unit id="d6bab22ea714bcffa182b9fb15b4394a520c76f3" translate="yes" xml:space="preserve">
          <source>Attempt filename completion on the text before point.</source>
          <target state="translated">ポイント前のテキストでファイル名補完を試みる。</target>
        </trans-unit>
        <trans-unit id="f9821e5eb38f2e8b0a52f3a8e01446975a7c1341" translate="yes" xml:space="preserve">
          <source>Attempt menu completion on the text before point, comparing the text against lines from the history list for possible completion matches.</source>
          <target state="translated">ポイント前のテキストのメニュー補完を試み、補完に一致する可能性があるかどうか、履歴リストの行とテキストを比較します。</target>
        </trans-unit>
        <trans-unit id="7cb32994a537e88f73ea5cb2abb8426080a63b09" translate="yes" xml:space="preserve">
          <source>Attempt to move point to the same physical screen column on the next physical screen line. This will not have the desired effect if the current Readline line does not take up more than one physical line or if the length of the current Readline line is not greater than the length of the prompt plus the screen width.</source>
          <target state="translated">次の物理画面行で同じ物理画面列にポイントを移動しようとします。これは、現在の Readline 行が 1 つ以上の物理行を占有していない場合、または現在の Readline 行の長さがプロンプトの長さに画面幅を加えた長さを超えていない場合には、期待した効果は得られません。</target>
        </trans-unit>
        <trans-unit id="13d9e19111325af7927ae0a41b76bcd6ea3d199d" translate="yes" xml:space="preserve">
          <source>Attempt to move point to the same physical screen column on the previous physical screen line. This will not have the desired effect if the current Readline line does not take up more than one physical line or if point is not greater than the length of the prompt plus the screen width.</source>
          <target state="translated">前の物理画面行の同じ物理画面列にポイントを移動しようとします。これは、現在のReadline行が1つ以上の物理行を占有していない場合や、pointがプロンプトの長さに画面幅を加えた長さを超えていない場合には、期待した効果は得られません。</target>
        </trans-unit>
        <trans-unit id="220ee35ed4573b6fb0cfebbad0e076d7b1ac9886" translate="yes" xml:space="preserve">
          <source>Attempt to perform completion on the text before point. The actual completion performed is application-specific. Bash attempts completion treating the text as a variable (if the text begins with &amp;lsquo;</source>
          <target state="translated">ポイントの前のテキストを補完しようとします。 実行される実際の完了はアプリケーション固有です。 Bashは、テキストを変数として処理して完了を試みます（テキストが 'で始まる場合</target>
        </trans-unit>
        <trans-unit id="dd38f839b1357eff12d518b6fb4026b120d6a7aa" translate="yes" xml:space="preserve">
          <source>Attributes may be specified for an array variable using the &lt;code&gt;declare&lt;/code&gt; and &lt;code&gt;readonly&lt;/code&gt; builtins. Each attribute applies to all members of an array.</source>
          <target state="translated">属性は、 &lt;code&gt;declare&lt;/code&gt; および &lt;code&gt;readonly&lt;/code&gt; ビルトインを使用して配列変数に指定できます 。 各属性は、配列のすべてのメンバーに適用されます。</target>
        </trans-unit>
        <trans-unit id="ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec" translate="yes" xml:space="preserve">
          <source>B</source>
          <target state="translated">B</target>
        </trans-unit>
        <trans-unit id="7e0604a488d54d9f299ba77ae94a81953953b191" translate="yes" xml:space="preserve">
          <source>B.1 Implementation Differences From The SVR4.2 Shell</source>
          <target state="translated">B.1 SVR4.2 シェルとの実装の違い</target>
        </trans-unit>
        <trans-unit id="83ce3f4acf93ed3b90143aea6c402f1321678e31" translate="yes" xml:space="preserve">
          <source>BASH</source>
          <target state="translated">BASH</target>
        </trans-unit>
        <trans-unit id="cf9ddd71d5abb35c4dc975f3ff42837b5796c67c" translate="yes" xml:space="preserve">
          <source>BASHOPTS</source>
          <target state="translated">BASHOPTS</target>
        </trans-unit>
        <trans-unit id="c07f33c6940db51fec5a37f1d85e6e8362bbcedb" translate="yes" xml:space="preserve">
          <source>BASHPID</source>
          <target state="translated">BASHPID</target>
        </trans-unit>
        <trans-unit id="cf3d32f64895e3788bf1901ce64365f52a9e6f18" translate="yes" xml:space="preserve">
          <source>BASH_ALIASES</source>
          <target state="translated">BASH_ALIASES</target>
        </trans-unit>
        <trans-unit id="258b6b7e4a89187b860f7b2655d09c8d7210b335" translate="yes" xml:space="preserve">
          <source>BASH_ARGC</source>
          <target state="translated">BASH_ARGC</target>
        </trans-unit>
        <trans-unit id="01c54e551259755e83a0fff7616a622a4067a261" translate="yes" xml:space="preserve">
          <source>BASH_ARGV</source>
          <target state="translated">BASH_ARGV</target>
        </trans-unit>
        <trans-unit id="7a11d398e7af6a3adf156972e739bddf7d6b054a" translate="yes" xml:space="preserve">
          <source>BASH_ARGV0</source>
          <target state="translated">BASH_ARGV0</target>
        </trans-unit>
        <trans-unit id="5c01c796a5f13cc5bb7278e4b45f1ec5e0365c27" translate="yes" xml:space="preserve">
          <source>BASH_CMDS</source>
          <target state="translated">BASH_CMDS</target>
        </trans-unit>
        <trans-unit id="76bf0b7d581793fe2d8cf96777d17a72e747ec1e" translate="yes" xml:space="preserve">
          <source>BASH_COMMAND</source>
          <target state="translated">BASH_COMMAND</target>
        </trans-unit>
        <trans-unit id="0dbc474a6e770083c18308c49f472e7b9cb38258" translate="yes" xml:space="preserve">
          <source>BASH_COMPAT</source>
          <target state="translated">BASH_COMPAT</target>
        </trans-unit>
        <trans-unit id="67984becedebb6da263539a67f9b637b095dee7f" translate="yes" xml:space="preserve">
          <source>BASH_ENV</source>
          <target state="translated">BASH_ENV</target>
        </trans-unit>
        <trans-unit id="5c43165c1308ba47baf2df514c998a2836dcbf42" translate="yes" xml:space="preserve">
          <source>BASH_EXECUTION_STRING</source>
          <target state="translated">BASH_EXECUTION_STRING</target>
        </trans-unit>
        <trans-unit id="1d977c87d3353fc2ff7058e1d4a60aec147953c3" translate="yes" xml:space="preserve">
          <source>BASH_LINENO</source>
          <target state="translated">BASH_LINENO</target>
        </trans-unit>
        <trans-unit id="5b80b526dd375f55cbae2d40bb873b7dbfdd684c" translate="yes" xml:space="preserve">
          <source>BASH_LOADABLES_PATH</source>
          <target state="translated">BASH_LOADABLES_PATH</target>
        </trans-unit>
        <trans-unit id="3e2e03217a33fcbc729516c4b07fafed561131d3" translate="yes" xml:space="preserve">
          <source>BASH_REMATCH</source>
          <target state="translated">BASH_REMATCH</target>
        </trans-unit>
        <trans-unit id="0baae2f0521cea3551cfbc39bf02f95c5ec08049" translate="yes" xml:space="preserve">
          <source>BASH_SOURCE</source>
          <target state="translated">BASH_SOURCE</target>
        </trans-unit>
        <trans-unit id="e3bfddbe8ce592e2e72254a4f1a4293aade7133b" translate="yes" xml:space="preserve">
          <source>BASH_SUBSHELL</source>
          <target state="translated">BASH_SUBSHELL</target>
        </trans-unit>
        <trans-unit id="02239ac4bb69e56474f712679c03ff8b6f03cacb" translate="yes" xml:space="preserve">
          <source>BASH_VERSINFO</source>
          <target state="translated">BASH_VERSINFO</target>
        </trans-unit>
        <trans-unit id="447f0586600fddd73e1166bb71334576f14e9b52" translate="yes" xml:space="preserve">
          <source>BASH_VERSION</source>
          <target state="translated">BASH_VERSION</target>
        </trans-unit>
        <trans-unit id="b19e46ea4a63de3a08c763dc27f0d40a8562f0b4" translate="yes" xml:space="preserve">
          <source>BASH_XTRACEFD</source>
          <target state="translated">BASH_XTRACEFD</target>
        </trans-unit>
        <trans-unit id="f620cacbc465c805c4e1c25e20fa57e55c09e33e" translate="yes" xml:space="preserve">
          <source>Bash</source>
          <target state="translated">Bash</target>
        </trans-unit>
        <trans-unit id="1d2140e9c186ba4c79d63ab511540a15728ae9eb" translate="yes" xml:space="preserve">
          <source>Bash Builtin Commands</source>
          <target state="translated">Bash 組み込みコマンド</target>
        </trans-unit>
        <trans-unit id="778de54221951d87d2fff578d429e650857ecf09" translate="yes" xml:space="preserve">
          <source>Bash Builtins</source>
          <target state="translated">バッシュ組み込み</target>
        </trans-unit>
        <trans-unit id="19fe050a832ad862f72117f033c08f61e34343c9" translate="yes" xml:space="preserve">
          <source>Bash Conditional Expressions</source>
          <target state="translated">Bash の条件式</target>
        </trans-unit>
        <trans-unit id="febdc089f94146b8e3dcee3ded46c3a70f9fa6cb" translate="yes" xml:space="preserve">
          <source>Bash Features</source>
          <target state="translated">バッシュ機能</target>
        </trans-unit>
        <trans-unit id="a69370a2dabaaa403ed0c85823816926cb374af6" translate="yes" xml:space="preserve">
          <source>Bash History Builtins</source>
          <target state="translated">バッシュの歴史 Builtins</target>
        </trans-unit>
        <trans-unit id="c4e254c154469cc28339b1767c2dc643554d5e43" translate="yes" xml:space="preserve">
          <source>Bash History Facilities</source>
          <target state="translated">バッシュの歴史施設</target>
        </trans-unit>
        <trans-unit id="558084a52c984d57c3303a89245922b38a45b03c" translate="yes" xml:space="preserve">
          <source>Bash POSIX Mode</source>
          <target state="translated">バッシュ POSIX モード</target>
        </trans-unit>
        <trans-unit id="f167125125d1d74e4ced29f29cb7ed5cc2d72e0c" translate="yes" xml:space="preserve">
          <source>Bash Reference Manual</source>
          <target state="translated">Bash リファレンスマニュアル</target>
        </trans-unit>
        <trans-unit id="702b271b9be7f4524530ed54f7def024b195d319" translate="yes" xml:space="preserve">
          <source>Bash Startup Files</source>
          <target state="translated">Bash の起動ファイル</target>
        </trans-unit>
        <trans-unit id="c457bb85807204243999c640208e0b5f6a526f2e" translate="yes" xml:space="preserve">
          <source>Bash Variables</source>
          <target state="translated">バッシュ変数</target>
        </trans-unit>
        <trans-unit id="b94be2a20e762976fbd6d00c02f9087209fa4365" translate="yes" xml:space="preserve">
          <source>Bash allows a function to override a builtin with the same name, and provides access to that builtin&amp;rsquo;s functionality within the function via the &lt;code&gt;builtin&lt;/code&gt; and &lt;code&gt;command&lt;/code&gt; builtins (see &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt;).</source>
          <target state="translated">Bashを使用すると、関数は同じ名前の組み込み関数をオーバーライドでき、 &lt;code&gt;builtin&lt;/code&gt; および &lt;code&gt;command&lt;/code&gt; 組み込み関数を介して、関数内のその組み込み関数の機能にアクセスできます（ &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash組み込み&lt;/a&gt;関数を参照）。</target>
        </trans-unit>
        <trans-unit id="45ea30664300fb4506c7c0c0341657bed07ca29c" translate="yes" xml:space="preserve">
          <source>Bash allows multiple option arguments when it is invoked (&lt;code&gt;-x -v&lt;/code&gt;); the SVR4.2 shell allows only one option argument (&lt;code&gt;-xv&lt;/code&gt;). In fact, some versions of the shell dump core if the second argument begins with a &amp;lsquo;</source>
          <target state="translated">bashでは、起動時に複数のオプション引数を使用できます（ &lt;code&gt;-x -v&lt;/code&gt; ）; SVR4.2シェルは1つのオプション引数（ &lt;code&gt;-xv&lt;/code&gt; ）のみを許可します。 実際、2番目の引数が「</target>
        </trans-unit>
        <trans-unit id="544840dfc1a95c6dd3a445461c9459b2d1327781" translate="yes" xml:space="preserve">
          <source>Bash also performs tilde expansion on words satisfying the conditions of variable assignments (see &lt;a href=&quot;shell-parameters#Shell-Parameters&quot;&gt;Shell Parameters&lt;/a&gt;) when they appear as arguments to simple commands. Bash does not do this, except for the &lt;var&gt;declaration&lt;/var&gt; commands listed above, when in &lt;small&gt;POSIX&lt;/small&gt; mode.</source>
          <target state="translated">また、Bashは、変数割り当ての条件（ &lt;a href=&quot;shell-parameters#Shell-Parameters&quot;&gt;シェルパラメーターを&lt;/a&gt;参照）を満たす単語が単純なコマンドの引数として出現する場合、その単語に対してチルダ拡張を実行します。 上記の &lt;var&gt;declaration&lt;/var&gt; コマンドを除いて、 &lt;small&gt;POSIX&lt;/small&gt;モードでは、bashはこれを行いません。</target>
        </trans-unit>
        <trans-unit id="386b9e0bb6527c98d16b6a49e87a9de31b05d0ac" translate="yes" xml:space="preserve">
          <source>Bash attempts to determine when it is being run with its standard input connected to a network connection, as when executed by the remote shell daemon, usually &lt;code&gt;rshd&lt;/code&gt;, or the secure shell daemon &lt;code&gt;sshd&lt;/code&gt;. If Bash determines it is being run in this fashion, it reads and executes commands from</source>
          <target state="translated">Bashは、リモートシェルデーモン（通常は &lt;code&gt;rshd&lt;/code&gt; ）またはセキュアシェルデーモン &lt;code&gt;sshd&lt;/code&gt; によって実行されるときのように、標準入力がネットワーク接続に接続されて実行されているかどうかを判断しようとします。 この方法で実行されているとBashが判断した場合、Bashはコマンドを読み取り、実行します。</target>
        </trans-unit>
        <trans-unit id="09a739a32bbb67b8ad38cb56f78cde59cbc50c41" translate="yes" xml:space="preserve">
          <source>Bash automatically assigns variables that provide information about the current user (&lt;code&gt;UID&lt;/code&gt;, &lt;code&gt;EUID&lt;/code&gt;, and &lt;code&gt;GROUPS&lt;/code&gt;), the current host (&lt;code&gt;HOSTTYPE&lt;/code&gt;, &lt;code&gt;OSTYPE&lt;/code&gt;, &lt;code&gt;MACHTYPE&lt;/code&gt;, and &lt;code&gt;HOSTNAME&lt;/code&gt;), and the instance of Bash that is running (&lt;code&gt;BASH&lt;/code&gt;, &lt;code&gt;BASH_VERSION&lt;/code&gt;, and &lt;code&gt;BASH_VERSINFO&lt;/code&gt;). See &lt;a href=&quot;bash-variables#Bash-Variables&quot;&gt;Bash Variables&lt;/a&gt;, for details.</source>
          <target state="translated">Bashは、現在のユーザー（ &lt;code&gt;UID&lt;/code&gt; 、 &lt;code&gt;EUID&lt;/code&gt; 、および &lt;code&gt;GROUPS&lt;/code&gt; ）、現在のホスト（ &lt;code&gt;HOSTTYPE&lt;/code&gt; 、 &lt;code&gt;OSTYPE&lt;/code&gt; 、 &lt;code&gt;MACHTYPE&lt;/code&gt; 、および &lt;code&gt;HOSTNAME&lt;/code&gt; ）、および実行中のBashのインスタンス（ &lt;code&gt;BASH&lt;/code&gt; 、 &lt;code&gt;BASH_VERSION&lt;/code&gt; 、および &lt;code&gt;BASH_VERSINFO&lt;/code&gt; ）に関する情報を提供する変数を自動的に割り当てます。 詳細については、 &lt;a href=&quot;bash-variables#Bash-Variables&quot;&gt;Bash変数&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="6b03e5596026fd937988a600d87ecbad53b046c3" translate="yes" xml:space="preserve">
          <source>Bash builtin commands to manipulate the directory stack.</source>
          <target state="translated">ディレクトリスタックを操作するための Bash ビルトインコマンド。</target>
        </trans-unit>
        <trans-unit id="eb533b109e619c69425173e7ca65ad98116b44f8" translate="yes" xml:space="preserve">
          <source>Bash builtin commands used to interact with job control.</source>
          <target state="translated">ジョブコントロールと対話するために使用される Bash ビルドインコマンド。</target>
        </trans-unit>
        <trans-unit id="ff0be66fbe096224a68531dfd5800e069c0bbad2" translate="yes" xml:space="preserve">
          <source>Bash can be configured to be &lt;small&gt;POSIX&lt;/small&gt;-conformant by default, by specifying the</source>
          <target state="translated">bashは、デフォルトで&lt;small&gt;POSIX準拠に&lt;/small&gt;なるように構成できます。</target>
        </trans-unit>
        <trans-unit id="4d65fab620faf5c73fdd4aba418d590920164c5d" translate="yes" xml:space="preserve">
          <source>Bash can expand positional parameters beyond &lt;code&gt;$9&lt;/code&gt; using &lt;code&gt;${&lt;var&gt;num&lt;/var&gt;}&lt;/code&gt;.</source>
          <target state="translated">Bashは &lt;code&gt;${&lt;var&gt;num&lt;/var&gt;}&lt;/code&gt; を使用して、位置パラメーターを &lt;code&gt;$9&lt;/code&gt; を超えて拡張できます。</target>
        </trans-unit>
        <trans-unit id="fa48b43e05495444b5fe410c516bc1e3db932030" translate="yes" xml:space="preserve">
          <source>Bash can open network connections to arbitrary machines and services with the redirection operators (see &lt;a href=&quot;redirections#Redirections&quot;&gt;Redirections&lt;/a&gt;).</source>
          <target state="translated">Bashは、リダイレクト演算子を使用して、任意のマシンおよびサービスへのネットワーク接続を開くことができます（ &lt;a href=&quot;redirections#Redirections&quot;&gt;リダイレクトを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="ba2aa8df3cfb8d66c029b8627befe4cd901e23be" translate="yes" xml:space="preserve">
          <source>Bash configuration</source>
          <target state="translated">バッシュ設定</target>
        </trans-unit>
        <trans-unit id="e37aa50aac07515085daccb4bc0e14a44fd3f67f" translate="yes" xml:space="preserve">
          <source>Bash contains features that appear in other popular shells, and some features that only appear in Bash. Some of the shells that Bash has borrowed concepts from are the Bourne Shell (</source>
          <target state="translated">Bash には他の人気のあるシェルにある機能と、Bash にしかない機能が含まれています。Bash がコンセプトを借りているシェルには、Bourne シェル (</target>
        </trans-unit>
        <trans-unit id="3e90a6d7cfc8043130cc0ea848e6590913b24f36" translate="yes" xml:space="preserve">
          <source>Bash contains the &amp;lsquo;</source>
          <target state="translated">バッシュには「</target>
        </trans-unit>
        <trans-unit id="c8fc436f0b7677c1b09ab20c652aadf53f41fa46" translate="yes" xml:space="preserve">
          <source>Bash does not allow unbalanced quotes. The SVR4.2 shell will silently insert a needed closing quote at &lt;code&gt;EOF&lt;/code&gt; under certain circumstances. This can be the cause of some hard-to-find errors.</source>
          <target state="translated">Bashでは、不均衡な引用は許可されません。 SVR4.2シェルは、特定の状況下で &lt;code&gt;EOF&lt;/code&gt; に必要な終了引用符を静かに挿入します。 これは、見つけにくいエラーの原因になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="d264ab74eb3b073ba76f5dd5b6e8eb63d2d75305" translate="yes" xml:space="preserve">
          <source>Bash does not fork a subshell when redirecting into or out of a shell control structure such as an &lt;code&gt;if&lt;/code&gt; or &lt;code&gt;while&lt;/code&gt; statement.</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt; や &lt;code&gt;while&lt;/code&gt; ステートメントなどのシェル制御構造にリダイレクトしたり、シェル制御構造からリダイレクトしたりしても、bashはサブシェルをフォークしません。</target>
        </trans-unit>
        <trans-unit id="f29215f4d4c2297a44eff82703c7a3ca03622b93" translate="yes" xml:space="preserve">
          <source>Bash does not have the &lt;code&gt;stop&lt;/code&gt; or &lt;code&gt;newgrp&lt;/code&gt; builtins.</source>
          <target state="translated">Bashには、 &lt;code&gt;stop&lt;/code&gt; または &lt;code&gt;newgrp&lt;/code&gt; ビルトインがありません。</target>
        </trans-unit>
        <trans-unit id="1ff98de1f471c94f01823fbc5399c29f642973cf" translate="yes" xml:space="preserve">
          <source>Bash does not use the &lt;code&gt;SHACCT&lt;/code&gt; variable or perform shell accounting.</source>
          <target state="translated">Bashは &lt;code&gt;SHACCT&lt;/code&gt; 変数を使用せず、シェルアカウンティングを実行しません。</target>
        </trans-unit>
        <trans-unit id="767bf3ad996123b6c83fc4a4c8391ab77e9d4bcd" translate="yes" xml:space="preserve">
          <source>Bash ensures that the &lt;code&gt;POSIXLY_CORRECT&lt;/code&gt; variable is set.</source>
          <target state="translated">Bashは、 &lt;code&gt;POSIXLY_CORRECT&lt;/code&gt; 変数が設定されていることを確認します。</target>
        </trans-unit>
        <trans-unit id="2695f29f0448deb02a72886a139d2e8d8ea3225e" translate="yes" xml:space="preserve">
          <source>Bash executes the value of the &lt;code&gt;PROMPT_COMMAND&lt;/code&gt; variable as a command before printing the primary prompt, &lt;code&gt;$PS1&lt;/code&gt; (see &lt;a href=&quot;bash-variables#Bash-Variables&quot;&gt;Bash Variables&lt;/a&gt;).</source>
          <target state="translated">Bashは、プライマリプロンプト &lt;code&gt;$PS1&lt;/code&gt; する前に、 &lt;code&gt;PROMPT_COMMAND&lt;/code&gt; 変数の値をコマンドとして実行します（ &lt;a href=&quot;bash-variables#Bash-Variables&quot;&gt;Bash変数を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="2a5b430a9110ad6f9b3b28bd8b08cde8282b417b" translate="yes" xml:space="preserve">
          <source>Bash expands and displays &lt;code&gt;PS1&lt;/code&gt; before reading the first line of a command, and expands and displays &lt;code&gt;PS2&lt;/code&gt; before reading the second and subsequent lines of a multi-line command. Bash expands and displays &lt;code&gt;PS0&lt;/code&gt; after it reads a command but before executing it. See &lt;a href=&quot;controlling-the-prompt#Controlling-the-Prompt&quot;&gt;Controlling the Prompt&lt;/a&gt;, for a complete list of prompt string escape sequences.</source>
          <target state="translated">Bashは、コマンドの最初の行を読み取る前に &lt;code&gt;PS1&lt;/code&gt; を展開して表示し、複数行コマンドの2行目以降を読み取る前に &lt;code&gt;PS2&lt;/code&gt; を展開して表示します。 Bashは、コマンドを読み取った後、実行する前に &lt;code&gt;PS0&lt;/code&gt; を展開して表示します。 プロンプト文字列のエスケープシーケンスの完全なリストについては、 &lt;a href=&quot;controlling-the-prompt#Controlling-the-Prompt&quot;&gt;「プロンプトの制御&lt;/a&gt; 」を参照してください。</target>
        </trans-unit>
        <trans-unit id="116c9a09f37376a672b6b462cca1993406778282" translate="yes" xml:space="preserve">
          <source>Bash functions are permitted to have local variables using the &lt;code&gt;local&lt;/code&gt; builtin, and thus useful recursive functions may be written (see &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt;).</source>
          <target state="translated">Bash関数は、 &lt;code&gt;local&lt;/code&gt; 組み込み関数を使用してローカル変数を持つことが許可されているため、有用な再帰関数を作成できます（ &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bashの組み込み&lt;/a&gt;関数を参照）。</target>
        </trans-unit>
        <trans-unit id="fc9818ce89b0bf3dee3310a04b7f6dfe16b2d0ee" translate="yes" xml:space="preserve">
          <source>Bash handles several filenames specially when they are used in redirections, as described in the following table. If the operating system on which Bash is running provides these special files, bash will use them; otherwise it will emulate them internally with the behavior described below.</source>
          <target state="translated">Bash はリダイレクトで使用されるいくつかのファイル名を、以下の表で説明されているように特別に扱います。Bash が動作しているオペレーティングシステムがこれらの特別なファイルを提供している場合、bash はこれらのファイルを使用しますが、そうでない場合は、以下に説明するような動作で内部的にエミュレートします。</target>
        </trans-unit>
        <trans-unit id="60c5b36217381fe3b270ff6dc191ece42d4d1903" translate="yes" xml:space="preserve">
          <source>Bash has &lt;var&gt;indirect&lt;/var&gt; variable expansion using &lt;code&gt;${!word}&lt;/code&gt; (see &lt;a href=&quot;shell-parameter-expansion#Shell-Parameter-Expansion&quot;&gt;Shell Parameter Expansion&lt;/a&gt;).</source>
          <target state="translated">Bashには、 &lt;code&gt;${!word}&lt;/code&gt; を使用した &lt;var&gt;indirect&lt;/var&gt; 変数展開があります（ &lt;a href=&quot;shell-parameter-expansion#Shell-Parameter-Expansion&quot;&gt;シェルパラメータの展開を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="95f439a70368a904a1d7ede6c3b0266032336d81" translate="yes" xml:space="preserve">
          <source>Bash has command history (see &lt;a href=&quot;bash-history-facilities#Bash-History-Facilities&quot;&gt;Bash History Facilities&lt;/a&gt;) and the &lt;code&gt;history&lt;/code&gt; and &lt;code&gt;fc&lt;/code&gt; builtins to manipulate it. The Bash history list maintains timestamp information and uses the value of the &lt;code&gt;HISTTIMEFORMAT&lt;/code&gt; variable to display it.</source>
          <target state="translated">Bashにはコマンド履歴（「 &lt;a href=&quot;bash-history-facilities#Bash-History-Facilities&quot;&gt;Bash履歴機能&lt;/a&gt; 」を参照）とそれを操作するための &lt;code&gt;history&lt;/code&gt; と &lt;code&gt;fc&lt;/code&gt; ビルトインがあります。 Bash履歴リストはタイムスタンプ情報を保持し、 &lt;code&gt;HISTTIMEFORMAT&lt;/code&gt; 変数の値を使用して表示します。</target>
        </trans-unit>
        <trans-unit id="8b299b8526275e73fcf210e53c32f05b32c1ee4d" translate="yes" xml:space="preserve">
          <source>Bash has command-line editing (see &lt;a href=&quot;command-line-editing#Command-Line-Editing&quot;&gt;Command Line Editing&lt;/a&gt;) and the &lt;code&gt;bind&lt;/code&gt; builtin.</source>
          <target state="translated">Bashにはコマンドライン編集（ &lt;a href=&quot;command-line-editing#Command-Line-Editing&quot;&gt;コマンドライン編集を&lt;/a&gt;参照）と組み込みの &lt;code&gt;bind&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="f6477ee86466cc8eddfc168fab96a566cd45cadd" translate="yes" xml:space="preserve">
          <source>Bash has much more optional behavior controllable with the &lt;code&gt;set&lt;/code&gt; builtin (see &lt;a href=&quot;the-set-builtin#The-Set-Builtin&quot;&gt;The Set Builtin&lt;/a&gt;).</source>
          <target state="translated">Bashには、ビルトイン &lt;code&gt;set&lt;/code&gt; 制御できるオプションの動作がはるかに多くあります（ &lt;a href=&quot;the-set-builtin#The-Set-Builtin&quot;&gt;ビルトインセットを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="8462604fa3784398a139f5b3a0d1acffa9df509f" translate="yes" xml:space="preserve">
          <source>Bash has multi-character invocation options (see &lt;a href=&quot;invoking-bash#Invoking-Bash&quot;&gt;Invoking Bash&lt;/a&gt;).</source>
          <target state="translated">Bashには複数文字の呼び出しオプションがあります（ &lt;a href=&quot;invoking-bash#Invoking-Bash&quot;&gt;Bashの&lt;/a&gt;呼び出しを参照）。</target>
        </trans-unit>
        <trans-unit id="3a87d05e00ceccd7e5e213a9bf32dee7008af48e" translate="yes" xml:space="preserve">
          <source>Bash has one-dimensional array variables (see &lt;a href=&quot;arrays#Arrays&quot;&gt;Arrays&lt;/a&gt;), and the appropriate variable expansions and assignment syntax to use them. Several of the Bash builtins take options to act on arrays. Bash provides a number of built-in array variables.</source>
          <target state="translated">Bashには、1次元の配列変数（ &lt;a href=&quot;arrays#Arrays&quot;&gt;配列を&lt;/a&gt;参照）と、それらを使用するための適切な変数展開と代入構文があります。 Bashビルトインのいくつかは、配列に作用するオプションを取ります。 Bashには、多数の組み込み配列変数が用意されています。</target>
        </trans-unit>
        <trans-unit id="1c61bed2865f6e972da028f1d603631a718c16b4" translate="yes" xml:space="preserve">
          <source>Bash has process substitution (see &lt;a href=&quot;process-substitution#Process-Substitution&quot;&gt;Process Substitution&lt;/a&gt;).</source>
          <target state="translated">Bashにはプロセス置換があります（ &lt;a href=&quot;process-substitution#Process-Substitution&quot;&gt;プロセス置換を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="e5323c9808a806dd2a3e97cbe0c709e031d1aa08" translate="yes" xml:space="preserve">
          <source>Bash has the &lt;code&gt;time&lt;/code&gt; reserved word and command timing (see &lt;a href=&quot;pipelines#Pipelines&quot;&gt;Pipelines&lt;/a&gt;). The display of the timing statistics may be controlled with the &lt;code&gt;TIMEFORMAT&lt;/code&gt; variable.</source>
          <target state="translated">Bashには、 &lt;code&gt;time&lt;/code&gt; 予約語とコマンドタイミングがあります（ &lt;a href=&quot;pipelines#Pipelines&quot;&gt;パイプラインを&lt;/a&gt;参照）。 タイミング統計の表示は、 &lt;code&gt;TIMEFORMAT&lt;/code&gt; 変数で制御できます。</target>
        </trans-unit>
        <trans-unit id="5a464e6bf80471c044018099bbfe8c46f31799c1" translate="yes" xml:space="preserve">
          <source>Bash implements &lt;code&gt;csh&lt;/code&gt;-like history expansion (see &lt;a href=&quot;history-interaction#History-Interaction&quot;&gt;History Interaction&lt;/a&gt;).</source>
          <target state="translated">Bashは &lt;code&gt;csh&lt;/code&gt; のような履歴拡張を実装します（ &lt;a href=&quot;history-interaction#History-Interaction&quot;&gt;履歴相互作用を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="d0b58a57d4447e5bfa8aa63762439f62d3b28bc1" translate="yes" xml:space="preserve">
          <source>Bash implements a &lt;code&gt;csh&lt;/code&gt;-like directory stack, and provides the &lt;code&gt;pushd&lt;/code&gt;, &lt;code&gt;popd&lt;/code&gt;, and &lt;code&gt;dirs&lt;/code&gt; builtins to manipulate it (see &lt;a href=&quot;the-directory-stack#The-Directory-Stack&quot;&gt;The Directory Stack&lt;/a&gt;). Bash also makes the directory stack visible as the value of the &lt;code&gt;DIRSTACK&lt;/code&gt; shell variable.</source>
          <target state="translated">Bashは &lt;code&gt;csh&lt;/code&gt; のようなディレクトリスタックを実装し、それを操作するための &lt;code&gt;pushd&lt;/code&gt; 、 &lt;code&gt;popd&lt;/code&gt; 、および &lt;code&gt;dirs&lt;/code&gt; ビルトインを提供します（ &lt;a href=&quot;the-directory-stack#The-Directory-Stack&quot;&gt;ディレクトリスタックを&lt;/a&gt;参照）。 また、Bashはディレクトリスタックを &lt;code&gt;DIRSTACK&lt;/code&gt; シェル変数の値として表示します。</target>
        </trans-unit>
        <trans-unit id="7d7647c6a9a349d22ae007897f67078abfede54f" translate="yes" xml:space="preserve">
          <source>Bash implements command aliases and the &lt;code&gt;alias&lt;/code&gt; and &lt;code&gt;unalias&lt;/code&gt; builtins (see &lt;a href=&quot;aliases#Aliases&quot;&gt;Aliases&lt;/a&gt;).</source>
          <target state="translated">Bashはコマンドエイリアスと、 &lt;code&gt;alias&lt;/code&gt; および &lt;code&gt;unalias&lt;/code&gt; ビルトインを実装しています（ &lt;a href=&quot;aliases#Aliases&quot;&gt;エイリアスを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="c831a68bfcdc8fab4e6e39e7e5daf03823604e0b" translate="yes" xml:space="preserve">
          <source>Bash implements essentially the same grammar, parameter and variable expansion, redirection, and quoting as the Bourne Shell. Bash uses the &lt;small&gt;POSIX&lt;/small&gt; standard as the specification of how these features are to be implemented. There are some differences between the traditional Bourne shell and Bash; this section quickly details the differences of significance. A number of these differences are explained in greater depth in previous sections. This section uses the version of &lt;code&gt;sh&lt;/code&gt; included in SVR4.2 (the last version of the historical Bourne shell) as the baseline reference.</source>
          <target state="translated">Bashは本質的に、Bourne Shellと同じ文法、パラメーターおよび変数の拡張、リダイレクト、引用を実装しています。 Bashは、これらの機能の実装方法の仕様として&lt;small&gt;POSIX&lt;/small&gt;標準を使用します。 従来のBourneシェルとBashの間にはいくつかの違いがあります。 このセクションでは、重要度の違いについて簡単に説明します。 これらの違いの多くは、前のセクションでさらに詳しく説明されています。 このセクションでは、SVR4.2に含まれている &lt;code&gt;sh&lt;/code&gt; のバージョン（歴史的なBourneシェルの最後のバージョン）をベースラインリファレンスとして使用します。</target>
        </trans-unit>
        <trans-unit id="d898eee1ff41c4acb0fd9bebe80a2cecac808a82" translate="yes" xml:space="preserve">
          <source>Bash implements extended pattern matching features when the &lt;code&gt;extglob&lt;/code&gt; shell option is enabled (see &lt;a href=&quot;pattern-matching#Pattern-Matching&quot;&gt;Pattern Matching&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;extglob&lt;/code&gt; シェルオプションが有効な場合、bashは拡張パターンマッチング機能を実装します（「 &lt;a href=&quot;pattern-matching#Pattern-Matching&quot;&gt;パターンマッチング&lt;/a&gt; 」を参照）。</target>
        </trans-unit>
        <trans-unit id="6bbb2c6fafc04cd2f98b59cc6392f2b0a106377d" translate="yes" xml:space="preserve">
          <source>Bash implements the &amp;lsquo;</source>
          <target state="translated">Bashは '</target>
        </trans-unit>
        <trans-unit id="4b15a48c135b87f05c1929116088cd1b59c2432f" translate="yes" xml:space="preserve">
          <source>Bash implements the &lt;code&gt;!&lt;/code&gt; keyword to negate the return value of a pipeline (see &lt;a href=&quot;pipelines#Pipelines&quot;&gt;Pipelines&lt;/a&gt;). Very useful when an &lt;code&gt;if&lt;/code&gt; statement needs to act only if a test fails. The Bash &amp;lsquo;</source>
          <target state="translated">Bashは &lt;code&gt;!&lt;/code&gt; パイプラインの戻り値を無効にするキーワード（パイプラインを参照）。 テストが失敗した場合にのみifステートメントが動作する必要がある &lt;code&gt;if&lt;/code&gt; 非常に役立ちます。 バッシュ '</target>
        </trans-unit>
        <trans-unit id="13692efe3f1aaf66422cb0e833e3667884c7c8a6" translate="yes" xml:space="preserve">
          <source>Bash implements the &lt;code&gt;for (( &lt;var&gt;expr1&lt;/var&gt; ; &lt;var&gt;expr2&lt;/var&gt; ; &lt;var&gt;expr3&lt;/var&gt; ))&lt;/code&gt; arithmetic for command, similar to the C language (see &lt;a href=&quot;looping-constructs#Looping-Constructs&quot;&gt;Looping Constructs&lt;/a&gt;).</source>
          <target state="translated">Bashは、C言語と同様に、コマンドの &lt;code&gt;for (( &lt;var&gt;expr1&lt;/var&gt; ; &lt;var&gt;expr2&lt;/var&gt; ; &lt;var&gt;expr3&lt;/var&gt; ))&lt;/code&gt; 演算を実装します （ &lt;a href=&quot;looping-constructs#Looping-Constructs&quot;&gt;ループ構造を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="d8a3a0a0ddac94d2f334434eb25424f78b936e61" translate="yes" xml:space="preserve">
          <source>Bash implements the full set of &lt;small&gt;POSIX&lt;/small&gt; filename expansion operators, including &lt;var&gt;character classes&lt;/var&gt;, &lt;var&gt;equivalence classes&lt;/var&gt;, and &lt;var&gt;collating symbols&lt;/var&gt; (see &lt;a href=&quot;filename-expansion#Filename-Expansion&quot;&gt;Filename Expansion&lt;/a&gt;).</source>
          <target state="translated">Bashは、 &lt;small&gt;POSIX&lt;/small&gt;ファイル名展開演算子の完全なセットを実装しています。これには、 &lt;var&gt;character classes&lt;/var&gt; 、 &lt;var&gt;equivalence classes&lt;/var&gt; 、 &lt;var&gt;collating symbols&lt;/var&gt; （ &lt;a href=&quot;filename-expansion#Filename-Expansion&quot;&gt;Filename Expansionを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="c886707487d65b8536cb1bd430acfcdc12fc48ee" translate="yes" xml:space="preserve">
          <source>Bash includes a &lt;code&gt;help&lt;/code&gt; builtin for quick reference to shell facilities (see &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt;).</source>
          <target state="translated">Bashには、シェル機能をすばやく参照する &lt;code&gt;help&lt;/code&gt; 組み込みヘルプが含まれています （ &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtinsを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="fca189adb9103ed71159cb5fb91098d1a90a2897" translate="yes" xml:space="preserve">
          <source>Bash includes a number of features to support a separate debugger for shell scripts.</source>
          <target state="translated">Bash にはシェルスクリプト用の独立したデバッガをサポートする機能がいくつかあります。</target>
        </trans-unit>
        <trans-unit id="7f2581a854538383fedb7e45a84a66bddc37aa19" translate="yes" xml:space="preserve">
          <source>Bash includes brace expansion (see &lt;a href=&quot;brace-expansion#Brace-Expansion&quot;&gt;Brace Expansion&lt;/a&gt;) and tilde expansion (see &lt;a href=&quot;tilde-expansion#Tilde-Expansion&quot;&gt;Tilde Expansion&lt;/a&gt;).</source>
          <target state="translated">Bashには、ブレース展開（ブレース展開を参照）およびチルダ展開（ &lt;a href=&quot;tilde-expansion#Tilde-Expansion&quot;&gt;ティルダ展開を&lt;/a&gt;参照）が含まれます。</target>
        </trans-unit>
        <trans-unit id="f999bc858121512c78fdd5a13a61ba2b603b8089" translate="yes" xml:space="preserve">
          <source>Bash includes the &amp;lsquo;</source>
          <target state="translated">バッシュには「</target>
        </trans-unit>
        <trans-unit id="f05fe047ca703eccb7dfa25a3930ddcc0cdc132f" translate="yes" xml:space="preserve">
          <source>Bash includes the &lt;code&gt;[[&lt;/code&gt; compound command, which makes conditional testing part of the shell grammar (see &lt;a href=&quot;conditional-constructs#Conditional-Constructs&quot;&gt;Conditional Constructs&lt;/a&gt;), including optional regular expression matching.</source>
          <target state="translated">Bashには、 &lt;code&gt;[[&lt;/code&gt; 複合コマンドが含まれています。これにより、条件付きテストがシェルの文法の一部になります（ &lt;a href=&quot;conditional-constructs#Conditional-Constructs&quot;&gt;条件付き構文を&lt;/a&gt;参照）。オプションの正規表現マッチングも含まれます。</target>
        </trans-unit>
        <trans-unit id="a12e38fc6970a8b0648535816c0fe6e361556705" translate="yes" xml:space="preserve">
          <source>Bash includes the &lt;code&gt;caller&lt;/code&gt; builtin, which displays the context of any active subroutine call (a shell function or a script executed with the &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;source&lt;/code&gt; builtins). This supports the bash debugger.</source>
          <target state="translated">Bashには &lt;code&gt;caller&lt;/code&gt; 組み込みが含まれており、アクティブなサブルーチン呼び出し（シェル関数、または &lt;code&gt;.&lt;/code&gt; または &lt;code&gt;source&lt;/code&gt; 組み込みで実行されるスクリプト）のコンテキストを表示します。 これはbashデバッガーをサポートします。</target>
        </trans-unit>
        <trans-unit id="743d885ca631dc0401d9228c9d3e841b29339ed5" translate="yes" xml:space="preserve">
          <source>Bash includes the &lt;code&gt;select&lt;/code&gt; compound command, which allows the generation of simple menus (see &lt;a href=&quot;conditional-constructs#Conditional-Constructs&quot;&gt;Conditional Constructs&lt;/a&gt;).</source>
          <target state="translated">Bashには、単純なメニューの生成を可能に &lt;code&gt;select&lt;/code&gt; 複合選択コマンドが含まれています （ &lt;a href=&quot;conditional-constructs#Conditional-Constructs&quot;&gt;条件付き構成を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="ddd93b5dc0dd303d99c501c1e7f52d775493b255" translate="yes" xml:space="preserve">
          <source>Bash includes the &lt;code&gt;shopt&lt;/code&gt; builtin, for finer control of shell optional capabilities (see &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;), and allows these options to be set and unset at shell invocation (see &lt;a href=&quot;invoking-bash#Invoking-Bash&quot;&gt;Invoking Bash&lt;/a&gt;).</source>
          <target state="translated">Bashには、 &lt;code&gt;shopt&lt;/code&gt; &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;ビルトインが&lt;/a&gt;含まれており、シェルのオプション機能を細かく制御できます（「 Shoptビルトイン 」 &lt;a href=&quot;invoking-bash#Invoking-Bash&quot;&gt;を&lt;/a&gt;参照）。これらのオプションは、シェルの起動時に設定および設定解除できます（「 Bashの起動」を参照）。</target>
        </trans-unit>
        <trans-unit id="4bb8b6e0bcc2dec1fa0d611629a713c4bbb4b446" translate="yes" xml:space="preserve">
          <source>Bash includes the &lt;small&gt;POSIX&lt;/small&gt; pattern removal &amp;lsquo;</source>
          <target state="translated">Bashには&lt;small&gt;POSIX&lt;/small&gt;パターンの削除が含まれています '</target>
        </trans-unit>
        <trans-unit id="6139947b5e85ab79d64b66c23e31237094ee627a" translate="yes" xml:space="preserve">
          <source>Bash inspects the value of the &lt;code&gt;ignoreeof&lt;/code&gt; option to &lt;code&gt;set -o&lt;/code&gt; instead of exiting immediately when it receives an &lt;code&gt;EOF&lt;/code&gt; on its standard input when reading a command (see &lt;a href=&quot;the-set-builtin#The-Set-Builtin&quot;&gt;The Set Builtin&lt;/a&gt;).</source>
          <target state="translated">Bashは、コマンドの読み取り時に標準入力で &lt;code&gt;EOF&lt;/code&gt; を受信するとすぐに終了するのではなく、 &lt;code&gt;ignoreeof&lt;/code&gt; オプションの値を検査して &lt;code&gt;set -o&lt;/code&gt; を&lt;a href=&quot;the-set-builtin#The-Set-Builtin&quot;&gt;設定し&lt;/a&gt;ます（Set Builtinを参照）。</target>
        </trans-unit>
        <trans-unit id="71926fe5295fc8d59b114b61105289705f44ecba" translate="yes" xml:space="preserve">
          <source>Bash installation</source>
          <target state="translated">バッシュインストール</target>
        </trans-unit>
        <trans-unit id="cf121c9f1655879d043645186fc6c44e8dacbbc6" translate="yes" xml:space="preserve">
          <source>Bash interprets special backslash-escaped characters in the prompt strings when interactive (see &lt;a href=&quot;controlling-the-prompt#Controlling-the-Prompt&quot;&gt;Controlling the Prompt&lt;/a&gt;).</source>
          <target state="translated">Bashは、対話型の場合、プロンプト文字列内の特殊なバックスラッシュエスケープ文字を解釈します（ &lt;a href=&quot;controlling-the-prompt#Controlling-the-Prompt&quot;&gt;プロンプトの制御を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="d809ced9a20e430dca76576c6df4d1215938aff9" translate="yes" xml:space="preserve">
          <source>Bash is &lt;small&gt;POSIX&lt;/small&gt;-conformant, even where the &lt;small&gt;POSIX&lt;/small&gt; specification differs from traditional &lt;code&gt;sh&lt;/code&gt; behavior (see &lt;a href=&quot;bash-posix-mode#Bash-POSIX-Mode&quot;&gt;Bash POSIX Mode&lt;/a&gt;).</source>
          <target state="translated">Bashは、 &lt;small&gt;POSIX&lt;/small&gt;仕様が従来の &lt;code&gt;sh&lt;/code&gt; の動作と異なる場合でも、 &lt;small&gt;POSIXに&lt;/small&gt; &lt;a href=&quot;bash-posix-mode#Bash-POSIX-Mode&quot;&gt;準拠しています&lt;/a&gt; （ Bash POSIXモードを参照）。</target>
        </trans-unit>
        <trans-unit id="37b5b8f9a555b07d3529f8091527d6a4a9ead810" translate="yes" xml:space="preserve">
          <source>Bash is an acronym for &amp;lsquo;</source>
          <target state="translated">バッシュは 'の頭字語です。</target>
        </trans-unit>
        <trans-unit id="81435f0a92436109dfc837576ea9016ffea48ccf" translate="yes" xml:space="preserve">
          <source>Bash is largely compatible with &lt;code&gt;sh&lt;/code&gt; and incorporates useful features from the Korn shell &lt;code&gt;ksh&lt;/code&gt; and the C shell &lt;code&gt;csh&lt;/code&gt;. It is intended to be a conformant implementation of the &lt;small&gt;IEEE&lt;/small&gt;&lt;small&gt;POSIX&lt;/small&gt; Shell and Tools portion of the &lt;small&gt;IEEE&lt;/small&gt;&lt;small&gt;POSIX&lt;/small&gt; specification (&lt;small&gt;IEEE&lt;/small&gt; Standard 1003.1). It offers functional improvements over &lt;code&gt;sh&lt;/code&gt; for both interactive and programming use.</source>
          <target state="translated">Bashは &lt;code&gt;sh&lt;/code&gt; とほぼ互換性があり、Kornシェル &lt;code&gt;ksh&lt;/code&gt; およびCシェル &lt;code&gt;csh&lt;/code&gt; の便利な機能が組み込まれています。 これは、 &lt;small&gt;IEEE&lt;/small&gt; &lt;small&gt;POSIX&lt;/small&gt;仕様（ &lt;small&gt;IEEE&lt;/small&gt;標準1003.1）の&lt;small&gt;IEEE&lt;/small&gt; &lt;small&gt;POSIX&lt;/small&gt;シェルおよびツール部分の準拠実装になることを目的としています。 インタラクティブとプログラミングの両方で使用できるように、 &lt;code&gt;sh&lt;/code&gt; よりも機能が向上しています。</target>
        </trans-unit>
        <trans-unit id="e355b3296c04b89d2634437bfef72ab6341f947b" translate="yes" xml:space="preserve">
          <source>Bash is the shell, or command language interpreter, for the &lt;small&gt;GNU&lt;/small&gt; operating system. The name is an acronym for the &amp;lsquo;</source>
          <target state="translated">Bashは、 &lt;small&gt;GNU&lt;/small&gt;オペレーティングシステムのシェル、つまりコマンド言語インタープリターです。 名前は、 'の頭字語です。</target>
        </trans-unit>
        <trans-unit id="eb52dbe275583d6b3d01277d2c1bca40f57f722a" translate="yes" xml:space="preserve">
          <source>Bash performs filename expansion on filenames specified as operands to input and output redirection operators (see &lt;a href=&quot;redirections#Redirections&quot;&gt;Redirections&lt;/a&gt;).</source>
          <target state="translated">Bashは、入力および出力リダイレクト演算子のオペランドとして指定されたファイル名に対してファイル名拡張を実行します（ &lt;a href=&quot;redirections#Redirections&quot;&gt;リダイレクトを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="c98c3bf58b20138e38d5c80a3f61df0cf4ef03fc" translate="yes" xml:space="preserve">
          <source>Bash performs the expansion by executing &lt;var&gt;command&lt;/var&gt; in a subshell environment and replacing the command substitution with the standard output of the command, with any trailing newlines deleted. Embedded newlines are not deleted, but they may be removed during word splitting. The command substitution &lt;code&gt;$(cat &lt;var&gt;file&lt;/var&gt;)&lt;/code&gt; can be replaced by the equivalent but faster &lt;code&gt;$(&amp;lt; &lt;var&gt;file&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">Bashは、サブシェル環境で &lt;var&gt;command&lt;/var&gt; を実行し、コマンド置換をコマンドの標準出力に置き換えて、末尾の改行を削除することにより、拡張を実行します。 埋め込まれた改行は削除されませんが、単語分割中に削除される場合があります。 コマンド置換 &lt;code&gt;$(cat &lt;var&gt;file&lt;/var&gt;)&lt;/code&gt; は、同等の高速な &lt;code&gt;$(&amp;lt; &lt;var&gt;file&lt;/var&gt;)&lt;/code&gt; で置き換えることができます 。</target>
        </trans-unit>
        <trans-unit id="0950fd9485da121372d36f565d3c12bfa92ccd8f" translate="yes" xml:space="preserve">
          <source>Bash provides a programmable word completion mechanism (see &lt;a href=&quot;programmable-completion#Programmable-Completion&quot;&gt;Programmable Completion&lt;/a&gt;), and builtin commands &lt;code&gt;complete&lt;/code&gt;, &lt;code&gt;compgen&lt;/code&gt;, and &lt;code&gt;compopt&lt;/code&gt;, to manipulate it.</source>
          <target state="translated">Bashは、プログラム可能な単語補完メカニズム（「 &lt;a href=&quot;programmable-completion#Programmable-Completion&quot;&gt;プログラム可能な補完&lt;/a&gt; 」を参照）と、それを操作するための &lt;code&gt;complete&lt;/code&gt; 、 &lt;code&gt;compgen&lt;/code&gt; 、および &lt;code&gt;compopt&lt;/code&gt; 組み込みコマンドを提供します。</target>
        </trans-unit>
        <trans-unit id="9fd51eb1cee21cece2fef3bece4447f62df75bbf" translate="yes" xml:space="preserve">
          <source>Bash provides looping constructs, conditional commands, and mechanisms to group commands and execute them as a unit.</source>
          <target state="translated">Bashにはループ構造、条件付きコマンド、コマンドをグループ化して単位として実行する仕組みがあります。</target>
        </trans-unit>
        <trans-unit id="4269ad6df17a8fece7b8bbbc28ece0c976d9f195" translate="yes" xml:space="preserve">
          <source>Bash provides one-dimensional indexed and associative array variables. Any variable may be used as an indexed array; the &lt;code&gt;declare&lt;/code&gt; builtin will explicitly declare an array. There is no maximum limit on the size of an array, nor any requirement that members be indexed or assigned contiguously. Indexed arrays are referenced using integers (including arithmetic expressions (see &lt;a href=&quot;shell-arithmetic#Shell-Arithmetic&quot;&gt;Shell Arithmetic&lt;/a&gt;)) and are zero-based; associative arrays use arbitrary strings. Unless otherwise noted, indexed array indices must be non-negative integers.</source>
          <target state="translated">Bashは、1次元のインデックス付き連想配列変数を提供します。 任意の変数をインデックス付き配列として使用できます。 組み込み &lt;code&gt;declare&lt;/code&gt; は明示的に配列を宣言します。 配列のサイズに上限はなく、メンバーにインデックスを付けたり、メンバーを連続して割り当てたりする必要もありません。 インデックス付き配列は整数を使用して参照され（算術式を含む（ &lt;a href=&quot;shell-arithmetic#Shell-Arithmetic&quot;&gt;シェルの算術演算を&lt;/a&gt;参照））、ゼロベースです。 連想配列は任意の文字列を使用します。 特に明記しない限り、インデックス付き配列のインデックスは負でない整数でなければなりません。</target>
        </trans-unit>
        <trans-unit id="d64f49b0a51331d7311fe0b83efe2779ef25e124" translate="yes" xml:space="preserve">
          <source>Bash provides optional case-insensitive matching for the &lt;code&gt;case&lt;/code&gt; and &lt;code&gt;[[&lt;/code&gt; constructs.</source>
          <target state="translated">bashは、 &lt;code&gt;case&lt;/code&gt; と小文字を区別しないオプションの照合を提供します。</target>
        </trans-unit>
        <trans-unit id="a5628528a2a5bf4621b9ef668c56ebdf95bcdc4a" translate="yes" xml:space="preserve">
          <source>Bash provides several ways to manipulate the environment. On invocation, the shell scans its own environment and creates a parameter for each name found, automatically marking it for &lt;var&gt;export&lt;/var&gt; to child processes. Executed commands inherit the environment. The &lt;code&gt;export&lt;/code&gt; and &amp;lsquo;</source>
          <target state="translated">Bashは、環境を操作するいくつかの方法を提供します。 起動時に、シェルは独自の環境をスキャンし、見つかった名前ごとにパラメーターを作成し、子プロセスへの &lt;var&gt;export&lt;/var&gt; に自動的にマークします。 実行されたコマンドは環境を継承します。 &lt;code&gt;export&lt;/code&gt; と '</target>
        </trans-unit>
        <trans-unit id="0bf189d9d299b736be01c2acc3f1ad98e00b71b8" translate="yes" xml:space="preserve">
          <source>Bash provides shell arithmetic, the &lt;code&gt;((&lt;/code&gt; compound command (see &lt;a href=&quot;conditional-constructs#Conditional-Constructs&quot;&gt;Conditional Constructs&lt;/a&gt;), and arithmetic expansion (see &lt;a href=&quot;shell-arithmetic#Shell-Arithmetic&quot;&gt;Shell Arithmetic&lt;/a&gt;).</source>
          <target state="translated">Bashは、シェル算術、 &lt;code&gt;((&lt;/code&gt; 複合コマンド（ &lt;a href=&quot;conditional-constructs#Conditional-Constructs&quot;&gt;条件付き構文を&lt;/a&gt;参照）、および算術展開（ &lt;a href=&quot;shell-arithmetic#Shell-Arithmetic&quot;&gt;シェル算術を&lt;/a&gt;参照））を提供します。</target>
        </trans-unit>
        <trans-unit id="6bd323432330e377287769c32351bbca8f05029b" translate="yes" xml:space="preserve">
          <source>Bash provides two builtin commands which manipulate the history list and history file.</source>
          <target state="translated">Bash には、履歴リストと履歴ファイルを操作する 2 つのビルトインコマンドが用意されています。</target>
        </trans-unit>
        <trans-unit id="3a1a3a5e7f95833d5c5e31aac549284c2b849879" translate="yes" xml:space="preserve">
          <source>Bash provides two ways to group a list of commands to be executed as a unit. When commands are grouped, redirections may be applied to the entire command list. For example, the output of all the commands in the list may be redirected to a single stream.</source>
          <target state="translated">Bash はコマンドのリストをグループ化して単位として実行する方法を 2 つ提供しています。コマンドがグループ化されると、コマンドリスト全体にリダイレクトが適用されます。例えば、リスト内の全てのコマンドの出力を一つのストリームにリダイレクトすることができます。</target>
        </trans-unit>
        <trans-unit id="bc15d0b2136f110a47248e25281e66c86eb8571e" translate="yes" xml:space="preserve">
          <source>Bash removes an exited background process&amp;rsquo;s status from the list of such statuses after the &lt;code&gt;wait&lt;/code&gt; builtin is used to obtain it.</source>
          <target state="translated">Bashは、組み込みの &lt;code&gt;wait&lt;/code&gt; を使用して取得したバックグラウンドプロセスのステータスを、そのステータスのリストから削除します。</target>
        </trans-unit>
        <trans-unit id="47b9dfe739f34670c2f2fb655d438fb5c6e5256f" translate="yes" xml:space="preserve">
          <source>Bash scripts often begin with &lt;code&gt;#! /bin/bash&lt;/code&gt; (assuming that Bash has been installed in</source>
          <target state="translated">多くの場合、Bashスクリプトは &lt;code&gt;#! /bin/bash&lt;/code&gt; 始まります。 / bin / bash （Bashがインストールされていると仮定</target>
        </trans-unit>
        <trans-unit id="4d812e15b0b5610dfdf8109d8905fbf7fdad870a" translate="yes" xml:space="preserve">
          <source>Bash supports the &amp;lsquo;</source>
          <target state="translated">Bashは '</target>
        </trans-unit>
        <trans-unit id="ecc62c79e4b33f78d61ddccfee7b3649b6812e73" translate="yes" xml:space="preserve">
          <source>Bash supports the &lt;code&gt;$&quot;&amp;hellip;&quot;&lt;/code&gt; quoting syntax to do locale-specific translation of the characters between the double quotes. The</source>
          <target state="translated">Bashは、 &lt;code&gt;$&quot;&amp;hellip;&quot;&lt;/code&gt; 引用構文をサポートして、二重引用符の間の文字のロケール固有の変換を行います。 の</target>
        </trans-unit>
        <trans-unit id="e624dec237a0450c66dca01ba02eec98d4311003" translate="yes" xml:space="preserve">
          <source>Bash supports the following looping constructs.</source>
          <target state="translated">Bash は以下のループ構造をサポートしています。</target>
        </trans-unit>
        <trans-unit id="fad306c7ec97bd44cb9be5688f908929552293e0" translate="yes" xml:space="preserve">
          <source>Bash treats a number of filenames specially when they are used in redirection operators (see &lt;a href=&quot;redirections#Redirections&quot;&gt;Redirections&lt;/a&gt;).</source>
          <target state="translated">Bashは、リダイレクト演算子で使用される場合に、いくつかのファイル名を特別に扱います（ &lt;a href=&quot;redirections#Redirections&quot;&gt;リダイレクトを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="a36c6522edce07265285b065f3bc113caea97c86" translate="yes" xml:space="preserve">
          <source>Bash uses certain shell variables in the same way as the Bourne shell. In some cases, Bash assigns a default value to the variable.</source>
          <target state="translated">Bash はボーンシェルと同じように特定のシェル変数を使用します。いくつかのケースでは、Bash はその変数にデフォルト値を割り当てます。</target>
        </trans-unit>
        <trans-unit id="3861c8e89059b54aa25a00a741a22b183e168af9" translate="yes" xml:space="preserve">
          <source>Bash will check for mail periodically, depending on the values of the &lt;code&gt;MAIL&lt;/code&gt;, &lt;code&gt;MAILPATH&lt;/code&gt;, and &lt;code&gt;MAILCHECK&lt;/code&gt; shell variables (see &lt;a href=&quot;bash-variables#Bash-Variables&quot;&gt;Bash Variables&lt;/a&gt;).</source>
          <target state="translated">Bashは、 &lt;code&gt;MAIL&lt;/code&gt; 、 &lt;code&gt;MAILPATH&lt;/code&gt; 、および &lt;code&gt;MAILCHECK&lt;/code&gt; シェル変数の値に応じて、メールを定期的にチェックします（ &lt;a href=&quot;bash-variables#Bash-Variables&quot;&gt;Bash変数を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="7a031fb4b54459f27072c9ee40c4b13ebd94a781" translate="yes" xml:space="preserve">
          <source>Basic Installation</source>
          <target state="translated">基本的なインストール</target>
        </trans-unit>
        <trans-unit id="ccae6c15c8f6bb4867f2de8a73cbe190c92425a6" translate="yes" xml:space="preserve">
          <source>Basic Shell Features</source>
          <target state="translated">基本的なシェルの特徴</target>
        </trans-unit>
        <trans-unit id="133040f7192692ef859238af29614bca61765eaf" translate="yes" xml:space="preserve">
          <source>Before a command is executed, its input and output may be &lt;var&gt;redirected&lt;/var&gt; using a special notation interpreted by the shell. Redirection allows commands&amp;rsquo; file handles to be duplicated, opened, closed, made to refer to different files, and can change the files the command reads from and writes to. Redirection may also be used to modify file handles in the current shell execution environment. The following redirection operators may precede or appear anywhere within a simple command or may follow a command. Redirections are processed in the order they appear, from left to right.</source>
          <target state="translated">コマンドが実行される前に、その入力と出力は、シェルによって解釈される特別な表記法を使用して &lt;var&gt;redirected&lt;/var&gt; されます。 リダイレクトにより、コマンドのファイルハンドルを複製したり、開いたり、閉じたり、さまざまなファイルを参照したり、コマンドが読み取ったり書き込んだりするファイルを変更することができます。 リダイレクトは、現在のシェル実行環境でファイルハンドルを変更するためにも使用できます。 次のリダイレクト演算子は、単純なコマンド内のどこにでも先行または出現したり、コマンドの後に続く場合があります。 リダイレクションは、左から右に表示される順序で処理されます。</target>
        </trans-unit>
        <trans-unit id="d419c32f096f03315c886b88ccd7749e6d5635ab" translate="yes" xml:space="preserve">
          <source>Begin a sequence of non-printing characters. This could be used to embed a terminal control sequence into the prompt.</source>
          <target state="translated">印刷しない文字のシーケンスを開始します。これは、ターミナル制御シーケンスをプロンプトに埋め込むために使用することができます。</target>
        </trans-unit>
        <trans-unit id="1bf611a231f374f343178fd17d3ca701a309e304" translate="yes" xml:space="preserve">
          <source>Begin assigning to &lt;var&gt;array&lt;/var&gt; at index &lt;var&gt;origin&lt;/var&gt;. The default index is 0.</source>
          <target state="translated">インデックス &lt;var&gt;origin&lt;/var&gt; で &lt;var&gt;array&lt;/var&gt; への割り当てを開始します。 デフォルトのインデックスは0です。</target>
        </trans-unit>
        <trans-unit id="a38a7f00d8703cdac6c8021898552624864dd359" translate="yes" xml:space="preserve">
          <source>Begin saving the characters typed into the current keyboard macro.</source>
          <target state="translated">現在のキーボードマクロに入力した文字の保存を開始します。</target>
        </trans-unit>
        <trans-unit id="d90a92b3e31feb999071d30ada8eac06ce9fb469" translate="yes" xml:space="preserve">
          <source>Bindable Readline Commands</source>
          <target state="translated">バインド可能なリードラインコマンド</target>
        </trans-unit>
        <trans-unit id="b5b2a61d38fa7ceb83f1e087e477bbdab50fb795" translate="yes" xml:space="preserve">
          <source>Boolean variables (those that can be set to on or off) are set to on if the value is null or empty, &lt;var&gt;on&lt;/var&gt; (case-insensitive), or 1. Any other value results in the variable being set to off.</source>
          <target state="translated">ブール変数（オンまたはオフに設定できる変数）は、値がnullまたは空の場合、 &lt;var&gt;on&lt;/var&gt; 、 オン （大文字と小文字を区別しない）、または1の場合に設定されます。その他の値の場合、変数はオフに設定されます。</target>
        </trans-unit>
        <trans-unit id="6951c04d742c15e74e65aafce21ab81d54b6fda5" translate="yes" xml:space="preserve">
          <source>Bourne Shell Builtins</source>
          <target state="translated">ボーン・シェル・ビルトイン</target>
        </trans-unit>
        <trans-unit id="af1c2e17f5314f5d3c045d05ac2ace66b95b558d" translate="yes" xml:space="preserve">
          <source>Bourne Shell Variables</source>
          <target state="translated">ボーンシェル変数</target>
        </trans-unit>
        <trans-unit id="78d7155d38e7898e65c8556e73ab878f79cc7745" translate="yes" xml:space="preserve">
          <source>Bourne shell</source>
          <target state="translated">ボーンシェル</target>
        </trans-unit>
        <trans-unit id="3397ab510fbae88c92acd3be3c9a2f21d54ea643" translate="yes" xml:space="preserve">
          <source>Bourne-Again SHell</source>
          <target state="translated">ボーンアゲインシェル</target>
        </trans-unit>
        <trans-unit id="53675dae9e58acb722badeebf978bee9e5e16f3f" translate="yes" xml:space="preserve">
          <source>Brace Expansion</source>
          <target state="translated">ブレース拡張</target>
        </trans-unit>
        <trans-unit id="10434965a7fa45f7f832b0aec27799f8228e6825" translate="yes" xml:space="preserve">
          <source>Brace expansion is a mechanism by which arbitrary strings may be generated. This mechanism is similar to &lt;var&gt;filename expansion&lt;/var&gt; (see &lt;a href=&quot;filename-expansion#Filename-Expansion&quot;&gt;Filename Expansion&lt;/a&gt;), but the filenames generated need not exist. Patterns to be brace expanded take the form of an optional &lt;var&gt;preamble&lt;/var&gt;, followed by either a series of comma-separated strings or a sequence expression between a pair of braces, followed by an optional &lt;var&gt;postscript&lt;/var&gt;. The preamble is prefixed to each string contained within the braces, and the postscript is then appended to each resulting string, expanding left to right.</source>
          <target state="translated">ブレース展開は、任意の文字列を生成できるメカニズムです。 このメカニズムは &lt;var&gt;filename expansion&lt;/var&gt; （「 &lt;a href=&quot;filename-expansion#Filename-Expansion&quot;&gt;ファイル&lt;/a&gt; 名の展開 」を参照）と似ていますが、生成されたファイル名が存在する必要はありません。 ブレース展開されるパターンは、オプションの &lt;var&gt;preamble&lt;/var&gt; 形式を取り、その後に一連のコンマ区切りの文字列、またはペアのブレースの間のシーケンス式が続き、その後にオプションの &lt;var&gt;postscript&lt;/var&gt; 続きます。 プリアンブルは中括弧内に含まれる各文字列の前に付けられ、その後、ポストスクリプトが結果の各文字列に追加され、左から右に拡張されます。</target>
        </trans-unit>
        <trans-unit id="7d9ab8c5d65b938be3c42c43a91019132ac43d31" translate="yes" xml:space="preserve">
          <source>Brace expansion is performed before any other expansions, and any characters special to other expansions are preserved in the result. It is strictly textual. Bash does not apply any syntactic interpretation to the context of the expansion or the text between the braces.</source>
          <target state="translated">ブレース展開は他の展開の前に行われ、他の展開に特別な文字は結果として保存されます。これは厳密にはテキストです。Bash は拡張子のコンテキストや中括弧の間のテキストに構文的な解釈を適用しません。</target>
        </trans-unit>
        <trans-unit id="37fc2e3d3ea6a3e81a4b67fed6280583663375cd" translate="yes" xml:space="preserve">
          <source>Brace expansions may be nested. The results of each expanded string are not sorted; left to right order is preserved. For example,</source>
          <target state="translated">中括弧展開は入れ子にすることができます。各展開された文字列の結果はソートされず、左から右への順序が保持されます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="93821391b71cff58968e2fa9b593d32441d80132" translate="yes" xml:space="preserve">
          <source>Breaks the input into words and operators, obeying the quoting rules described in &lt;a href=&quot;quoting#Quoting&quot;&gt;Quoting&lt;/a&gt;. These tokens are separated by &lt;code&gt;metacharacters&lt;/code&gt;. Alias expansion is performed by this step (see &lt;a href=&quot;aliases#Aliases&quot;&gt;Aliases&lt;/a&gt;).</source>
          <target state="translated">入力を単語と演算子に分割し、「引用」で説明されている引用規則に従います。 これらのトークンは &lt;code&gt;metacharacters&lt;/code&gt; 区切られています。 エイリアスの展開は、このステップで実行されます（ &lt;a href=&quot;aliases#Aliases&quot;&gt;エイリアスを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="46b73fe84096c617168a5ee324fc2931f9952181" translate="yes" xml:space="preserve">
          <source>Brings the &lt;var&gt;N&lt;/var&gt;th directory (counting from the left of the list printed by &lt;code&gt;dirs&lt;/code&gt;, starting with zero) to the top of the list by rotating the stack.</source>
          <target state="translated">スタックを回転させることにより、 &lt;var&gt;N&lt;/var&gt; 番目のディレクトリ（ &lt;code&gt;dirs&lt;/code&gt; によって出力されるリストの左から数えてゼロから数えます）をリストの一番上に移動します。</target>
        </trans-unit>
        <trans-unit id="8ed03600e19513d74388cb1ad97a36d32115c41d" translate="yes" xml:space="preserve">
          <source>Brings the &lt;var&gt;N&lt;/var&gt;th directory (counting from the right of the list printed by &lt;code&gt;dirs&lt;/code&gt;, starting with zero) to the top of the list by rotating the stack.</source>
          <target state="translated">スタックを回転させることにより、 &lt;var&gt;N&lt;/var&gt; 番目のディレクトリ（ &lt;code&gt;dirs&lt;/code&gt; によって出力されたリストの右から数えてゼロから数えます）をリストの一番上に移動します。</target>
        </trans-unit>
        <trans-unit id="f1c7bd5dfbc70feff63bb4c975105aed8228177c" translate="yes" xml:space="preserve">
          <source>Builtin Commands</source>
          <target state="translated">組み込みコマンド</target>
        </trans-unit>
        <trans-unit id="c7f69c3c309831e8c75433aa20c6c04149fceec0" translate="yes" xml:space="preserve">
          <source>Builtin Index</source>
          <target state="translated">組み込みインデックス</target>
        </trans-unit>
        <trans-unit id="fca58325283ee35d6a1ef927aa1c6c2591236dbc" translate="yes" xml:space="preserve">
          <source>Builtin commands are contained within the shell itself. When the name of a builtin command is used as the first word of a simple command (see &lt;a href=&quot;simple-commands#Simple-Commands&quot;&gt;Simple Commands&lt;/a&gt;), the shell executes the command directly, without invoking another program. Builtin commands are necessary to implement functionality impossible or inconvenient to obtain with separate utilities.</source>
          <target state="translated">組み込みコマンドはシェル自体に含まれています。 組み込みコマンドの名前が単純コマンドの最初の単語として使用されている場合（ &lt;a href=&quot;simple-commands#Simple-Commands&quot;&gt;単純コマンドを&lt;/a&gt;参照）、シェルは別のプログラムを呼び出さずにコマンドを直接実行します。 組み込みコマンドは、別個のユーティリティで取得することが不可能または不便な機能を実装するために必要です。</target>
        </trans-unit>
        <trans-unit id="abecce7e0f5df146665e14a1eb97afda29469f52" translate="yes" xml:space="preserve">
          <source>Builtin commands classified specially by POSIX.</source>
          <target state="translated">POSIXで特別に分類されたビルトインコマンド</target>
        </trans-unit>
        <trans-unit id="c6a4ea9017cbe0e1f10d114084edf6a9ff6d3079" translate="yes" xml:space="preserve">
          <source>Builtin commands inherited from the Bourne Shell.</source>
          <target state="translated">Bourne Shellから継承された組み込みコマンド。</target>
        </trans-unit>
        <trans-unit id="6fb02a4fbe3fb47e69e22b734705b7f4fa53dd38" translate="yes" xml:space="preserve">
          <source>Builtin commands to specify how to complete arguments for a particular command.</source>
          <target state="translated">特定のコマンドの引数を完了させる方法を指定するための組み込みコマンド。</target>
        </trans-unit>
        <trans-unit id="fa07ce53ecc83b10257b6124246c366a56178e23" translate="yes" xml:space="preserve">
          <source>Builtins to modify shell attributes and optional behavior.</source>
          <target state="translated">シェルの属性やオプションの動作を変更するためのビルトイン。</target>
        </trans-unit>
        <trans-unit id="f7fa12b8b38db827d7ce92009cc9fa53135c3ce6" translate="yes" xml:space="preserve">
          <source>By default, &amp;lsquo;</source>
          <target state="translated">デフォルトでは、 '</target>
        </trans-unit>
        <trans-unit id="d807145e5d7c1cda3ea5b36d16a797ed65cf0d01" translate="yes" xml:space="preserve">
          <source>By default, if a compspec is found, whatever it generates is returned to the completion code as the full set of possible completions. The default Bash completions are not attempted, and the Readline default of filename completion is disabled. If the</source>
          <target state="translated">デフォルトでは、compspec が見つかった場合、それが生成したものは何であれ、可能な補完のフルセットとして補完コードに返されます。デフォルトの Bash 補完は試みられず、ファイル名補完の Readline デフォルトは無効になります。もし</target>
        </trans-unit>
        <trans-unit id="2ea55945f2d6bda03f80b5e247bbd9f33429914b" translate="yes" xml:space="preserve">
          <source>By default, or when the</source>
          <target state="translated">デフォルトでは、または</target>
        </trans-unit>
        <trans-unit id="871734275acfef964a064fb4b7708161a8adeed9" translate="yes" xml:space="preserve">
          <source>By default, this command is unbound.</source>
          <target state="translated">デフォルトでは、このコマンドはバインドされていません。</target>
        </trans-unit>
        <trans-unit id="32096c2e0eff33d844ee6d675407ace18289357d" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="translated">C</target>
        </trans-unit>
        <trans-unit id="f631ddb4a806d2687f4d5c8aa3c048b37442b386" translate="yes" xml:space="preserve">
          <source>C-J</source>
          <target state="translated">C-J</target>
        </trans-unit>
        <trans-unit id="5ec9d3dadc7abaeb1f5f16db2365b2aeb6a2f74b" translate="yes" xml:space="preserve">
          <source>C-_</source>
          <target state="translated">C-_</target>
        </trans-unit>
        <trans-unit id="3bff8fb1aa290267671b1c50e3b32db24f00b295" translate="yes" xml:space="preserve">
          <source>C-a</source>
          <target state="translated">C-a</target>
        </trans-unit>
        <trans-unit id="c204a76fc3c1123c96b13dd7ec922d02d4b00e91" translate="yes" xml:space="preserve">
          <source>C-b</source>
          <target state="translated">C-b</target>
        </trans-unit>
        <trans-unit id="1d8e75405de8be939b05db3eef9ab4daa516674d" translate="yes" xml:space="preserve">
          <source>C-d</source>
          <target state="translated">C-d</target>
        </trans-unit>
        <trans-unit id="a7ef1e89e28b60bd53a0a5ab746fbcd131fdf224" translate="yes" xml:space="preserve">
          <source>C-e</source>
          <target state="translated">C-e</target>
        </trans-unit>
        <trans-unit id="dd71d43937255c2ba419c077fa824865f8267186" translate="yes" xml:space="preserve">
          <source>C-f</source>
          <target state="translated">C-f</target>
        </trans-unit>
        <trans-unit id="a6d13ed5d2d00101157246b7ae1e91a19d7d7406" translate="yes" xml:space="preserve">
          <source>C-g</source>
          <target state="translated">C-g</target>
        </trans-unit>
        <trans-unit id="d5eeac2f32301e2b964f421e02a44c5afa000881" translate="yes" xml:space="preserve">
          <source>C-k</source>
          <target state="translated">C-k</target>
        </trans-unit>
        <trans-unit id="2fef5b5a274737535a312ecc5d6b8de717c1cb77" translate="yes" xml:space="preserve">
          <source>C-l</source>
          <target state="translated">C-l</target>
        </trans-unit>
        <trans-unit id="c0aa2536c4ea15884e7f0c5dd834cc587ba56461" translate="yes" xml:space="preserve">
          <source>C-o</source>
          <target state="translated">C-o</target>
        </trans-unit>
        <trans-unit id="1666955c646a9bb3fabdb2404112bd45b66ccb34" translate="yes" xml:space="preserve">
          <source>C-q</source>
          <target state="translated">C-q</target>
        </trans-unit>
        <trans-unit id="74b18abb702cb69395f60707416dd8e1f9e92a32" translate="yes" xml:space="preserve">
          <source>C-r</source>
          <target state="translated">C-r</target>
        </trans-unit>
        <trans-unit id="78540d990eb5e51e46b3d550d8999b517398872e" translate="yes" xml:space="preserve">
          <source>C-s</source>
          <target state="translated">C-s</target>
        </trans-unit>
        <trans-unit id="ac7de9aff7d0daffb3ae53140a783f411f89c587" translate="yes" xml:space="preserve">
          <source>C-u</source>
          <target state="translated">C-u</target>
        </trans-unit>
        <trans-unit id="8e0be97e2cc76979d93e15014888863a6e79a7af" translate="yes" xml:space="preserve">
          <source>C-w</source>
          <target state="translated">C-w</target>
        </trans-unit>
        <trans-unit id="298ef629795cfb23ea736c739c02035ede13e0c6" translate="yes" xml:space="preserve">
          <source>C-x</source>
          <target state="translated">C-x</target>
        </trans-unit>
        <trans-unit id="48565510392a43d2b0a14deded91b2a0fe29f254" translate="yes" xml:space="preserve">
          <source>C-x C-u</source>
          <target state="translated">C-x C-u</target>
        </trans-unit>
        <trans-unit id="f286461016d3e4db77e8a575a1f55b2d71886961" translate="yes" xml:space="preserve">
          <source>C-y</source>
          <target state="translated">C-y</target>
        </trans-unit>
        <trans-unit id="837a86d556db6579fd141227d39be97c1d1033cc" translate="yes" xml:space="preserve">
          <source>CDPATH</source>
          <target state="translated">CDPATH</target>
        </trans-unit>
        <trans-unit id="b4a60f0a5aaff3255a3b5d61fdce469e51ce425d" translate="yes" xml:space="preserve">
          <source>CHILD_MAX</source>
          <target state="translated">CHILD_MAX</target>
        </trans-unit>
        <trans-unit id="689dd245f008400f0c1242bb06996164757f3836" translate="yes" xml:space="preserve">
          <source>COLLECTIONS OF DOCUMENTS</source>
          <target state="translated">ぶんしょしゅう</target>
        </trans-unit>
        <trans-unit id="2d5c5615b998898e7768ec56433dbebafc08a4d0" translate="yes" xml:space="preserve">
          <source>COLUMNS</source>
          <target state="translated">COLUMNS</target>
        </trans-unit>
        <trans-unit id="9416c652f11562c1a2ac149e08598792cd26d941" translate="yes" xml:space="preserve">
          <source>COMBINING DOCUMENTS</source>
          <target state="translated">合体</target>
        </trans-unit>
        <trans-unit id="c54d91f8309a8061ed8d3ce51bfc0402efdeb59b" translate="yes" xml:space="preserve">
          <source>COMPREPLY</source>
          <target state="translated">COMPREPLY</target>
        </trans-unit>
        <trans-unit id="573045655ccb7f151f94ec553cf8f112408e6d3d" translate="yes" xml:space="preserve">
          <source>COMP_CWORD</source>
          <target state="translated">COMP_CWORD</target>
        </trans-unit>
        <trans-unit id="12a4206f8b4410e57fcfe56d1a094d73b6d738d8" translate="yes" xml:space="preserve">
          <source>COMP_KEY</source>
          <target state="translated">COMP_KEY</target>
        </trans-unit>
        <trans-unit id="ba3578a9865f248604c8df591a2f9ecc5ac5ecab" translate="yes" xml:space="preserve">
          <source>COMP_LINE</source>
          <target state="translated">COMP_LINE</target>
        </trans-unit>
        <trans-unit id="725507daa12016c2d43e3b0a1b99d3dc87b064cd" translate="yes" xml:space="preserve">
          <source>COMP_POINT</source>
          <target state="translated">COMP_POINT</target>
        </trans-unit>
        <trans-unit id="5e0ef95695399d7cf870176ead1df3520a7f72e5" translate="yes" xml:space="preserve">
          <source>COMP_TYPE</source>
          <target state="translated">COMP_TYPE</target>
        </trans-unit>
        <trans-unit id="f464dd7fb3c7743aa15007c63b1aec837237ba49" translate="yes" xml:space="preserve">
          <source>COMP_WORDBREAKS</source>
          <target state="translated">COMP_WORDBREAKS</target>
        </trans-unit>
        <trans-unit id="b8ef04d62c426b79eb7b82899a7a138ae054223d" translate="yes" xml:space="preserve">
          <source>COMP_WORDS</source>
          <target state="translated">COMP_WORDS</target>
        </trans-unit>
        <trans-unit id="cf0c2f946b991eaed9b39914084c5c064a3f061f" translate="yes" xml:space="preserve">
          <source>COPROC</source>
          <target state="translated">COPROC</target>
        </trans-unit>
        <trans-unit id="343a641fe4a78507db7e2252ee941d90557af1bc" translate="yes" xml:space="preserve">
          <source>COPYING IN QUANTITY</source>
          <target state="translated">模写</target>
        </trans-unit>
        <trans-unit id="fb7016a4f1b2784abc4adfaf50a885353f7a7a75" translate="yes" xml:space="preserve">
          <source>CPU-COMPANY-SYSTEM</source>
          <target state="translated">CPU-COMPANY-SYSTEM</target>
        </trans-unit>
        <trans-unit id="b926330f493034aa4fdc02c7fbed8ace2f494177" translate="yes" xml:space="preserve">
          <source>Capitalize the current (or following) word. With a negative argument, capitalize the previous word, but do not move the cursor.</source>
          <target state="translated">現在の(または次の)単語を大文字にします。負の引数を指定すると、前の単語を大文字にしますが、カーソルは移動しません。</target>
        </trans-unit>
        <trans-unit id="e6e9221a2feb66cb5ed0d71b8833143034549d0d" translate="yes" xml:space="preserve">
          <source>Cause &lt;code&gt;read&lt;/code&gt; to time out and return failure if a complete line of input (or a specified number of characters) is not read within &lt;var&gt;timeout&lt;/var&gt; seconds. &lt;var&gt;timeout&lt;/var&gt; may be a decimal number with a fractional portion following the decimal point. This option is only effective if &lt;code&gt;read&lt;/code&gt; is reading input from a terminal, pipe, or other special file; it has no effect when reading from regular files. If &lt;code&gt;read&lt;/code&gt; times out, &lt;code&gt;read&lt;/code&gt; saves any partial input read into the specified variable &lt;var&gt;name&lt;/var&gt;. If &lt;var&gt;timeout&lt;/var&gt; is 0, &lt;code&gt;read&lt;/code&gt; returns immediately, without trying to read and data. The exit status is 0 if input is available on the specified file descriptor, non-zero otherwise. The exit status is greater than 128 if the timeout is exceeded.</source>
          <target state="translated">入力の完全な行（または指定された数の文字）が &lt;var&gt;timeout&lt;/var&gt; 秒以内に読み取られない場合、読み取りをタイムアウトさせて失敗を返します。 &lt;var&gt;timeout&lt;/var&gt; は、小数点に続く小数部分のある10進数です。 このオプションは、 &lt;code&gt;read&lt;/code&gt; が端末、パイプ、またはその他の特殊ファイルから入力を読み取る場合にのみ有効です。 通常のファイルから読み取る場合は効果がありません。 &lt;code&gt;read&lt;/code&gt; がタイムアウトした場合、 &lt;code&gt;read&lt;/code&gt; は、読み取られた入力の一部を指定された変数 &lt;var&gt;name&lt;/var&gt; に保存します。 &lt;var&gt;timeout&lt;/var&gt; が0の場合、 &lt;code&gt;read&lt;/code&gt; はデータを読み取ろうとせずに、すぐに戻ります。 指定されたファイル記述子で入力が利用可能な場合、終了ステータスは0です。それ以外の場合はゼロ以外です。 タイムアウトを超えると、終了ステータスは128より大きくなります。</target>
        </trans-unit>
        <trans-unit id="d45406ed9a39fda567678493e4d8511af4c5b5d3" translate="yes" xml:space="preserve">
          <source>Cause &lt;var&gt;shell-command&lt;/var&gt; to be executed whenever &lt;var&gt;keyseq&lt;/var&gt; is entered. When &lt;var&gt;shell-command&lt;/var&gt; is executed, the shell sets the &lt;code&gt;READLINE_LINE&lt;/code&gt; variable to the contents of the Readline line buffer and the &lt;code&gt;READLINE_POINT&lt;/code&gt; variable to the current location of the insertion point. If the executed command changes the value of &lt;code&gt;READLINE_LINE&lt;/code&gt; or &lt;code&gt;READLINE_POINT&lt;/code&gt;, those new values will be reflected in the editing state.</source>
          <target state="translated">&lt;var&gt;keyseq&lt;/var&gt; が入力されるたびに &lt;var&gt;shell-command&lt;/var&gt; が実行されるようにします。 &lt;var&gt;shell-command&lt;/var&gt; が実行されると、シェルは &lt;code&gt;READLINE_LINE&lt;/code&gt; 変数をReadline行バッファーの内容に設定し、 READLINE_POINT変数を挿入ポイントの現在の場所に設定します。 実行されたコマンドが &lt;code&gt;READLINE_LINE&lt;/code&gt; または &lt;code&gt;READLINE_POINT&lt;/code&gt; の値を変更した場合、それらの新しい値は編集状態に反映されます。</target>
        </trans-unit>
        <trans-unit id="47c50d83112a0125eb2f9000824249872255d108" translate="yes" xml:space="preserve">
          <source>Cause a shell function to stop executing and return the value &lt;var&gt;n&lt;/var&gt; to its caller. If &lt;var&gt;n&lt;/var&gt; is not supplied, the return value is the exit status of the last command executed in the function. If &lt;code&gt;return&lt;/code&gt; is executed by a trap handler, the last command used to determine the status is the last command executed before the trap handler. If &lt;code&gt;return&lt;/code&gt; is executed during a &lt;code&gt;DEBUG&lt;/code&gt; trap, the last command used to determine the status is the last command executed by the trap handler before &lt;code&gt;return&lt;/code&gt; was invoked. &lt;code&gt;return&lt;/code&gt; may also be used to terminate execution of a script being executed with the &lt;code&gt;.&lt;/code&gt; (&lt;code&gt;source&lt;/code&gt;) builtin, returning either &lt;var&gt;n&lt;/var&gt; or the exit status of the last command executed within the script as the exit status of the script. If &lt;var&gt;n&lt;/var&gt; is supplied, the return value is its least significant 8 bits. Any command associated with the &lt;code&gt;RETURN&lt;/code&gt; trap is executed before execution resumes after the function or script. The return status is non-zero if &lt;code&gt;return&lt;/code&gt; is supplied a non-numeric argument or is used outside a function and not during the execution of a script by &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;source&lt;/code&gt;.</source>
          <target state="translated">シェル関数に実行を停止させ、値 &lt;var&gt;n&lt;/var&gt; を呼び出し元に返します。 &lt;var&gt;n&lt;/var&gt; が指定されていない場合、戻り値は、関数で最後に実行されたコマンドの終了ステータスです。 &lt;code&gt;return&lt;/code&gt; がトラップハンドラーによって実行される場合、ステータスを決定するために使用される最後のコマンドは、トラップハンドラーの前に実行された最後のコマンドです。 &lt;code&gt;DEBUG&lt;/code&gt; トラップ中に &lt;code&gt;return&lt;/code&gt; が実行された場合、ステータスを判別するために使用される最後のコマンドは、 &lt;code&gt;return&lt;/code&gt; が呼び出される前にトラップハンドラーによって実行された最後のコマンドです。 &lt;code&gt;return&lt;/code&gt; は、で実行されているスクリプトの実行を終了するためにも使用できます &lt;code&gt;.&lt;/code&gt; （ &lt;code&gt;source&lt;/code&gt; ）組み込み &lt;var&gt;n&lt;/var&gt; またはスクリプト内で実行された最後のコマンドの終了ステータスをスクリプトの終了ステータスとして返します。 &lt;var&gt;n&lt;/var&gt; が指定されている場合、戻り値はその最下位8ビットです。 関数またはスクリプトの後で実行が再開する前に、 &lt;code&gt;RETURN&lt;/code&gt; トラップに関連付けられているコマンドが実行されます。 returnに数値以外の引数が指定されている場合、またはによるスクリプトの実行中にではなく関数の外部で使用されている場合、戻りステータスはゼロ以外になります &lt;code&gt;.&lt;/code&gt; または &lt;code&gt;source&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e2ba9ddce76bb572c5cf2c46d16a2e07a896c2bc" translate="yes" xml:space="preserve">
          <source>Cause changes to be applied over the entire event line. Used in conjunction with &amp;lsquo;</source>
          <target state="translated">イベント行全体に変更を適用します。 と組み合わせて使用​​します</target>
        </trans-unit>
        <trans-unit id="4f21c44fed98cfb4736d16c5cc7fe27c839dd4bc" translate="yes" xml:space="preserve">
          <source>Cause the &lt;code&gt;direxpand&lt;/code&gt; shell option (see &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;) to be enabled by default when the shell starts. It is normally disabled by default.</source>
          <target state="translated">シェルの起動時に、 &lt;code&gt;direxpand&lt;/code&gt; シェルオプション（ &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;Shopt Builtinを&lt;/a&gt;参照）をデフォルトで有効にします。 通常、デフォルトでは無効になっています。</target>
        </trans-unit>
        <trans-unit id="bceba0041e73d4a94f23d00a18b56956ea994b29" translate="yes" xml:space="preserve">
          <source>Cause the status of terminated background jobs to be reported immediately, rather than before printing the next primary prompt.</source>
          <target state="translated">終了したバックグラウンドジョブの状態を、次のプライマリプロンプトを印刷する前ではなく、直ちに報告するようにしました。</target>
        </trans-unit>
        <trans-unit id="151cb07b853c442fcf3f2ee439bec008eb5d136f" translate="yes" xml:space="preserve">
          <source>Causes &lt;code&gt;dirs&lt;/code&gt; to print the directory stack with one entry per line, prefixing each entry with its index in the stack.</source>
          <target state="translated">&lt;code&gt;dirs&lt;/code&gt; に、ディレクトリスタックを1行に1エントリずつ出力させ、各エントリの先頭にスタック内のインデックスを付けます。</target>
        </trans-unit>
        <trans-unit id="e782a56479c21e4133b7a66a5f698bdf297beaf9" translate="yes" xml:space="preserve">
          <source>Causes &lt;code&gt;dirs&lt;/code&gt; to print the directory stack with one entry per line.</source>
          <target state="translated">&lt;code&gt;dirs&lt;/code&gt; に、1行に1つのエントリがあるディレクトリスタックを出力させます。</target>
        </trans-unit>
        <trans-unit id="b1dbf73480a3691c206740a3e68211fd6855b20e" translate="yes" xml:space="preserve">
          <source>Causes &lt;code&gt;printf&lt;/code&gt; to expand backslash escape sequences in the corresponding &lt;var&gt;argument&lt;/var&gt; in the same way as &lt;code&gt;echo -e&lt;/code&gt; (see &lt;a href=&quot;#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;printf&lt;/code&gt; に、 &lt;code&gt;echo -e&lt;/code&gt; と同じ方法で対応する &lt;var&gt;argument&lt;/var&gt; バックスラッシュエスケープシーケンスを展開させます（ &lt;a href=&quot;#Bash-Builtins&quot;&gt;Bash Builtinsを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="5d60384fd31826cbc780a657654c4529869524b3" translate="yes" xml:space="preserve">
          <source>Causes &lt;code&gt;printf&lt;/code&gt; to output the corresponding &lt;var&gt;argument&lt;/var&gt; in a format that can be reused as shell input.</source>
          <target state="translated">&lt;code&gt;printf&lt;/code&gt; に、シェル入力として再利用できる形式で対応する &lt;var&gt;argument&lt;/var&gt; を出力させます。</target>
        </trans-unit>
        <trans-unit id="2e2a62239d9bda86c46cf27afe91bfcf846daca2" translate="yes" xml:space="preserve">
          <source>Causes &lt;code&gt;printf&lt;/code&gt; to output the date-time string resulting from using &lt;var&gt;datefmt&lt;/var&gt; as a format string for &lt;code&gt;strftime&lt;/code&gt;(3). The corresponding &lt;var&gt;argument&lt;/var&gt; is an integer representing the number of seconds since the epoch. Two special argument values may be used: -1 represents the current time, and -2 represents the time the shell was invoked. If no argument is specified, conversion behaves as if -1 had been given. This is an exception to the usual &lt;code&gt;printf&lt;/code&gt; behavior.</source>
          <target state="translated">&lt;code&gt;printf&lt;/code&gt; に、 &lt;var&gt;datefmt&lt;/var&gt; を &lt;code&gt;strftime&lt;/code&gt; （3）のフォーマット文字列として使用した結果の日時文字列を出力させます。 対応する &lt;var&gt;argument&lt;/var&gt; は、エポックからの秒数を表す整数です。 2つの特別な引数値を使用できます。-1は現在の時刻を表し、-2はシェルが呼び出された時刻を表します。 引数が指定されていない場合、変換は-1が指定されているかのように動作します。 これは、通常の &lt;code&gt;printf&lt;/code&gt; 動作の例外です。</target>
        </trans-unit>
        <trans-unit id="a08b8e851c899a305e4c6b9dfe1f2372d7784436" translate="yes" xml:space="preserve">
          <source>Change and report the hard limit associated with a resource.</source>
          <target state="translated">リソースに関連付けられたハードリミットを変更して報告します。</target>
        </trans-unit>
        <trans-unit id="d2fc2e4da975b43e0683f36b645afeee19f39729" translate="yes" xml:space="preserve">
          <source>Change and report the soft limit associated with a resource.</source>
          <target state="translated">リソースに関連付けられたソフトリミットを変更してレポートします。</target>
        </trans-unit>
        <trans-unit id="44846af504ce324d8605f01db4a18136dd14b76d" translate="yes" xml:space="preserve">
          <source>Change the behavior of Bash where the default operation differs from the &lt;small&gt;POSIX&lt;/small&gt; standard to match the standard (see &lt;a href=&quot;bash-posix-mode#Bash-POSIX-Mode&quot;&gt;Bash POSIX Mode&lt;/a&gt;). This is intended to make Bash behave as a strict superset of that standard.</source>
          <target state="translated">デフォルトの操作が&lt;small&gt;POSIX&lt;/small&gt;標準と異なる場合のBashの動作を変更して、標準に一致させます（ &lt;a href=&quot;bash-posix-mode#Bash-POSIX-Mode&quot;&gt;Bash POSIXモードを&lt;/a&gt;参照）。 これは、Bashをその標準の厳密なスーパーセットとして動作させることを目的としています。</target>
        </trans-unit>
        <trans-unit id="0f3ad73393ca1c353c8d3b2a06484f4b02e14846" translate="yes" xml:space="preserve">
          <source>Change the behavior of Bash where the default operation differs from the &lt;small&gt;POSIX&lt;/small&gt; standard to match the standard. This is intended to make Bash behave as a strict superset of that standard. See &lt;a href=&quot;bash-posix-mode#Bash-POSIX-Mode&quot;&gt;Bash POSIX Mode&lt;/a&gt;, for a description of the Bash &lt;small&gt;POSIX&lt;/small&gt; mode.</source>
          <target state="translated">標準に一致するように、デフォルトの操作が&lt;small&gt;POSIX&lt;/small&gt;標準と異なるBashの動作を変更します。 これは、Bashをその標準の厳密なスーパーセットとして動作させることを目的としています。 &lt;a href=&quot;bash-posix-mode#Bash-POSIX-Mode&quot;&gt;Bash POSIXモード&lt;/a&gt;の説明については、Bash &lt;small&gt;POSIX&lt;/small&gt;モードを参照してください。</target>
        </trans-unit>
        <trans-unit id="cbb8974ea34c93350a1529eadfdde40fcc13cca0" translate="yes" xml:space="preserve">
          <source>Change the current working directory to &lt;var&gt;directory&lt;/var&gt;. If &lt;var&gt;directory&lt;/var&gt; is not supplied, the value of the &lt;code&gt;HOME&lt;/code&gt; shell variable is used. Any additional arguments following &lt;var&gt;directory&lt;/var&gt; are ignored. If the shell variable &lt;code&gt;CDPATH&lt;/code&gt; exists, it is used as a search path: each directory name in &lt;code&gt;CDPATH&lt;/code&gt; is searched for &lt;var&gt;directory&lt;/var&gt;, with alternative directory names in &lt;code&gt;CDPATH&lt;/code&gt; separated by a colon (&amp;lsquo;</source>
          <target state="translated">現在の作業ディレクトリを &lt;var&gt;directory&lt;/var&gt; に変更します。 &lt;var&gt;directory&lt;/var&gt; が指定されていない場合、 &lt;code&gt;HOME&lt;/code&gt; シェル変数の値が使用されます。 &lt;var&gt;directory&lt;/var&gt; 続く追加の引数は無視されます。 シェル変数 &lt;code&gt;CDPATH&lt;/code&gt; が存在する場合は、それが検索パスとして使用されます。CDPATHの各ディレクトリ名は、コロン（ '</target>
        </trans-unit>
        <trans-unit id="407af34fa37c33517e6ca05aa8b706bed0d6b46a" translate="yes" xml:space="preserve">
          <source>Change the values of shell attributes and positional parameters.</source>
          <target state="translated">シェル属性と位置パラメータの値を変更します。</target>
        </trans-unit>
        <trans-unit id="9b59218df63dde48a3feeb097e5bf936cd130ccc" translate="yes" xml:space="preserve">
          <source>Changing directories with the &lt;code&gt;cd&lt;/code&gt; builtin.</source>
          <target state="translated">組み込みの &lt;code&gt;cd&lt;/code&gt; でディレクトリを変更する。</target>
        </trans-unit>
        <trans-unit id="edb31bb75fd315d4f5c9127f1a5e92abdf33e5f5" translate="yes" xml:space="preserve">
          <source>Chapter describing the command line editing features.</source>
          <target state="translated">コマンドライン編集機能を解説した章。</target>
        </trans-unit>
        <trans-unit id="7dea55cfff2fc60902ee44f5ba817d2ca35aad7f" translate="yes" xml:space="preserve">
          <source>Clear the history list. This may be combined with the other options to replace the history list completely.</source>
          <target state="translated">履歴リストをクリアします。これは他のオプションと組み合わせて、履歴リストを完全に置き換えることができます。</target>
        </trans-unit>
        <trans-unit id="f7dac2e2707d7916613ef16a3d87f5dbfbfa4328" translate="yes" xml:space="preserve">
          <source>Clear the screen and redraw the current line, leaving the current line at the top of the screen.</source>
          <target state="translated">画面をクリアして、現在の行を画面上部に残して再描画します。</target>
        </trans-unit>
        <trans-unit id="1fd5babfd59773e4b9a28a740b93b2702bf90485" translate="yes" xml:space="preserve">
          <source>Clear the screen, reprinting the current line at the top.</source>
          <target state="translated">画面をクリアして、現在の行を一番上に再印刷します。</target>
        </trans-unit>
        <trans-unit id="28d1837dbf4e1b81e1750f5c1f5094d12180a4ac" translate="yes" xml:space="preserve">
          <source>Clears the directory stack by deleting all of the elements.</source>
          <target state="translated">すべての要素を削除してディレクトリスタックをクリアします。</target>
        </trans-unit>
        <trans-unit id="3e5b9660cde1962adabbbea6202b6f3207a99875" translate="yes" xml:space="preserve">
          <source>Command Execution Environment</source>
          <target state="translated">コマンド実行環境</target>
        </trans-unit>
        <trans-unit id="1e9c66f240ad44b82b702550f265c1d3880beb1e" translate="yes" xml:space="preserve">
          <source>Command Grouping</source>
          <target state="translated">コマンドグループ化</target>
        </trans-unit>
        <trans-unit id="3531c279b9620ebb55a288373da55ef0656c4c04" translate="yes" xml:space="preserve">
          <source>Command History Expansion</source>
          <target state="translated">コマンド履歴の拡張</target>
        </trans-unit>
        <trans-unit id="c58a024ddf74da4e609ddb6cb105c407857b51c5" translate="yes" xml:space="preserve">
          <source>Command Line Editing</source>
          <target state="translated">コマンドライン編集</target>
        </trans-unit>
        <trans-unit id="72f3d56ef38f562fe2c2db25166a758cad8ae332" translate="yes" xml:space="preserve">
          <source>Command Search and Execution</source>
          <target state="translated">コマンド検索と実行</target>
        </trans-unit>
        <trans-unit id="65bc76a2fc0dadc75a9ee937c1c98b89fa46b4fa" translate="yes" xml:space="preserve">
          <source>Command Substitution</source>
          <target state="translated">コマンドの置換</target>
        </trans-unit>
        <trans-unit id="1a3eb5154f685e87f207c05d60033093863f0032" translate="yes" xml:space="preserve">
          <source>Command history (see &lt;a href=&quot;bash-history-facilities#Bash-History-Facilities&quot;&gt;Bash History Facilities&lt;/a&gt;) and history expansion (see &lt;a href=&quot;history-interaction#History-Interaction&quot;&gt;History Interaction&lt;/a&gt;) are enabled by default. Bash will save the command history to the file named by &lt;code&gt;$HISTFILE&lt;/code&gt; when a shell with history enabled exits.</source>
          <target state="translated">コマンド履歴（ &lt;a href=&quot;bash-history-facilities#Bash-History-Facilities&quot;&gt;Bash履歴機能を&lt;/a&gt;参照）および履歴拡張（ &lt;a href=&quot;history-interaction#History-Interaction&quot;&gt;履歴相互作用を&lt;/a&gt;参照）は、デフォルトで有効になっています。 履歴が有効なシェルが終了すると、bashはコマンド履歴を &lt;code&gt;$HISTFILE&lt;/code&gt; 指定されたファイルに保存します。</target>
        </trans-unit>
        <trans-unit id="6866e1be4122ab07ddbef5be25678b5218214da6" translate="yes" xml:space="preserve">
          <source>Command line options that you can give to Bash.</source>
          <target state="translated">Bash に与えることができるコマンドラインオプション。</target>
        </trans-unit>
        <trans-unit id="7670a907c42228501c1fefdd8569e1b0dc5a50ab" translate="yes" xml:space="preserve">
          <source>Command names. May also be specified as</source>
          <target state="translated">コマンド名。として指定することもできます。</target>
        </trans-unit>
        <trans-unit id="dd2f2df0a1b63211c1ce976e67546cd3aa6532a5" translate="yes" xml:space="preserve">
          <source>Command substitution allows the output of a command to replace the command itself. Command substitution occurs when a command is enclosed as follows:</source>
          <target state="translated">コマンド置換では、コマンドの出力をコマンド自体に置き換えることができます。コマンド置換は、以下のようにコマンドを囲んだ場合に発生します。</target>
        </trans-unit>
        <trans-unit id="c153dce78bd4b76aa0a8ee0ea8c07a0a7954bde5" translate="yes" xml:space="preserve">
          <source>Command substitution, commands grouped with parentheses, and asynchronous commands are invoked in a subshell environment that is a duplicate of the shell environment, except that traps caught by the shell are reset to the values that the shell inherited from its parent at invocation. Builtin commands that are invoked as part of a pipeline are also executed in a subshell environment. Changes made to the subshell environment cannot affect the shell&amp;rsquo;s execution environment.</source>
          <target state="translated">コマンド置換、括弧でグループ化されたコマンド、および非同期コマンドは、シェル環境で複製されたサブシェル環境で呼び出されます。ただし、シェルによってキャッチされたトラップは、起動時にシェルが親から継承した値にリセットされます。 パイプラインの一部として呼び出される組み込みコマンドは、サブシェル環境でも実行されます。 サブシェル環境に加えられた変更は、シェルの実行環境に影響を与えることはできません。</target>
        </trans-unit>
        <trans-unit id="1c3a8db228748db87eec94d2dfa56204049ba4e9" translate="yes" xml:space="preserve">
          <source>Command substitutions may be nested. To nest when using the backquoted form, escape the inner backquotes with backslashes.</source>
          <target state="translated">コマンドの置換は入れ子にすることができます。バックスクオート形式を使用している場合に入れ子にするには、内側のバックスクオートをバックスラッシュでエスケープしてください。</target>
        </trans-unit>
        <trans-unit id="3a9cdc9c6e6a587571f6f4be625717492211deef" translate="yes" xml:space="preserve">
          <source>Commands For Changing Text</source>
          <target state="translated">テキストを変更するためのコマンド</target>
        </trans-unit>
        <trans-unit id="0f603458c7bba6d82491ab224297eb15a9aed4bd" translate="yes" xml:space="preserve">
          <source>Commands For Completion</source>
          <target state="translated">完成のためのコマンド</target>
        </trans-unit>
        <trans-unit id="dcb93c01cd0f418f31a0349a777670d9a04cbbd4" translate="yes" xml:space="preserve">
          <source>Commands For History</source>
          <target state="translated">歴史のためのコマンド</target>
        </trans-unit>
        <trans-unit id="5994dde2ca8cf16f815ac45ae47cf200b7dc696d" translate="yes" xml:space="preserve">
          <source>Commands For Killing</source>
          <target state="translated">殺害のためのコマンド</target>
        </trans-unit>
        <trans-unit id="329cb5ac44eced8dd704aa6b97257cc78935f354" translate="yes" xml:space="preserve">
          <source>Commands For Manipulating The History</source>
          <target state="translated">履歴を操作するためのコマンド</target>
        </trans-unit>
        <trans-unit id="8d6bbee6b8e6fbc182b911af2255c2a6d3a8f6c3" translate="yes" xml:space="preserve">
          <source>Commands For Moving</source>
          <target state="translated">引越しのためのコマンド</target>
        </trans-unit>
        <trans-unit id="084f549cc654f41e93fbd4ca9a2d992ab730dbba" translate="yes" xml:space="preserve">
          <source>Commands For Text</source>
          <target state="translated">テキスト用コマンド</target>
        </trans-unit>
        <trans-unit id="f7dd42d8327137689e528bbaecc8cd7e644031ec" translate="yes" xml:space="preserve">
          <source>Commands for changing text.</source>
          <target state="translated">テキストを変更するためのコマンドです。</target>
        </trans-unit>
        <trans-unit id="b43bef0f00596bc5eb24bc2b7fc459c70f9cb2f0" translate="yes" xml:space="preserve">
          <source>Commands for killing and yanking.</source>
          <target state="translated">殺陣とヤンキーのコマンド。</target>
        </trans-unit>
        <trans-unit id="c386e3741a204dc08f2cb9ed3dab37f69eb9e72b" translate="yes" xml:space="preserve">
          <source>Commands in this branch of the &lt;code&gt;$if&lt;/code&gt; directive are executed if the test fails.</source>
          <target state="translated">&lt;code&gt;$if&lt;/code&gt; ディレクティブのこのブランチのコマンドは、テストが失敗した場合に実行されます。</target>
        </trans-unit>
        <trans-unit id="795c9ad7be7d0758e852ff0e782ef99044a478e9" translate="yes" xml:space="preserve">
          <source>Commands separated by a &amp;lsquo;</source>
          <target state="translated">'で区切られたコマンド</target>
        </trans-unit>
        <trans-unit id="7963e537f2082ae93c50e65ee8a4fd56187d5749" translate="yes" xml:space="preserve">
          <source>Commands that are a part of the shell.</source>
          <target state="translated">シェルの一部であるコマンド。</target>
        </trans-unit>
        <trans-unit id="fce06e20e5f7f74aacccab40b59b75a56c8f7305" translate="yes" xml:space="preserve">
          <source>Comments</source>
          <target state="translated">Comments</target>
        </trans-unit>
        <trans-unit id="37c3291b28fe4fcf4e224585008aa8ff6ca5de6a" translate="yes" xml:space="preserve">
          <source>Compilers and Options</source>
          <target state="translated">コンパイラとオプション</target>
        </trans-unit>
        <trans-unit id="493a48c734e8b25f7d6248767601663deada5b9e" translate="yes" xml:space="preserve">
          <source>Compiling For Multiple Architectures</source>
          <target state="translated">複数アーキテクチャ用のコンパイル</target>
        </trans-unit>
        <trans-unit id="e63b5fda96c513b8c6c03bc1e2bad742363ef10e" translate="yes" xml:space="preserve">
          <source>Complicated extended pattern matching against long strings is slow, especially when the patterns contain alternations and the strings contain multiple matches. Using separate matches against shorter strings, or using arrays of strings instead of a single long string, may be faster.</source>
          <target state="translated">長い文字列に対する複雑な拡張パターン・マッチングは、特にパターンに交互配列が含まれていたり、文字列に複数のマッチが含まれていたりする場合には、時間がかかります。短い文字列に対して別々のマッチを使用したり、単一の長い文字列の代わりに文字列の配列を使用したりすると、より高速になる場合があります。</target>
        </trans-unit>
        <trans-unit id="516ed6a202e3a73524d26a065c84277bee76e76d" translate="yes" xml:space="preserve">
          <source>Compound Commands</source>
          <target state="translated">複合コマンド</target>
        </trans-unit>
        <trans-unit id="d04e0a92aec08aa5a7a3ee5216b515499c875319" translate="yes" xml:space="preserve">
          <source>Compound commands are the shell programming language constructs. Each construct begins with a reserved word or control operator and is terminated by a corresponding reserved word or operator. Any redirections (see &lt;a href=&quot;redirections#Redirections&quot;&gt;Redirections&lt;/a&gt;) associated with a compound command apply to all commands within that compound command unless explicitly overridden.</source>
          <target state="translated">複合コマンドは、シェルプログラミング言語の構成要素です。 各構成要素は予約語または制御演算子で始まり、対応する予約語または演算子で終了します。 複合コマンドに関連付けられているリダイレクト（「 &lt;a href=&quot;redirections#Redirections&quot;&gt;リダイレクト&lt;/a&gt; 」を参照）は、明示的に上書きされない限り、その複合コマンド内のすべてのコマンドに適用されます。</target>
        </trans-unit>
        <trans-unit id="deeb953eb7ef69ac491f2aa55c295d5bec25ce8b" translate="yes" xml:space="preserve">
          <source>Concept Index</source>
          <target state="translated">コンセプトインデックス</target>
        </trans-unit>
        <trans-unit id="28fc57178ee113ee9b3b5b60ed84e7c75da158b8" translate="yes" xml:space="preserve">
          <source>Conditional Constructs</source>
          <target state="translated">条件付き構文</target>
        </trans-unit>
        <trans-unit id="3fcb10c945dc8f468ebf8ec6946b032b19bb158c" translate="yes" xml:space="preserve">
          <source>Conditional Init Constructs</source>
          <target state="translated">条件付き Init コンストラクタ</target>
        </trans-unit>
        <trans-unit id="1dd4675cc1d958e94e008d6aad8c15b5564f2e5c" translate="yes" xml:space="preserve">
          <source>Conditional expressions are used by the &lt;code&gt;[[&lt;/code&gt; compound command and the &lt;code&gt;test&lt;/code&gt; and &lt;code&gt;[&lt;/code&gt; builtin commands. The &lt;code&gt;test&lt;/code&gt; and &lt;code&gt;[&lt;/code&gt; commands determine their behavior based on the number of arguments; see the descriptions of those commands for any other command-specific actions.</source>
          <target state="translated">条件式は、 &lt;code&gt;[[&lt;/code&gt; 複合コマンドと &lt;code&gt;test&lt;/code&gt; および &lt;code&gt;[&lt;/code&gt; 組み込みコマンドで使用されます。 &lt;code&gt;test&lt;/code&gt; および &lt;code&gt;[&lt;/code&gt; コマンドは、引数の数に基づいてそれらの動作を決定します。 他のコマンド固有のアクションについては、それらのコマンドの説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="8117a98ae9efe0fd1a71e49ecf482c7ea30b28ad" translate="yes" xml:space="preserve">
          <source>Conditional key bindings in the inputrc file.</source>
          <target state="translated">inputrcファイル内の条件付きキーバインド。</target>
        </trans-unit>
        <trans-unit id="5d2b4a065324ed3c3da628bf5cb57fa94ad07e10" translate="yes" xml:space="preserve">
          <source>Connecting the input and output of several commands.</source>
          <target state="translated">複数のコマンドの入出力を接続します。</target>
        </trans-unit>
        <trans-unit id="cdb15c9f53115c5f9339546588f580f1bdc65ae3" translate="yes" xml:space="preserve">
          <source>Constants with a leading 0 are interpreted as octal numbers. A leading &amp;lsquo;</source>
          <target state="translated">先頭が0の定数は、8進数として解釈されます。 主要な '</target>
        </trans-unit>
        <trans-unit id="8a2442c733dc4d42993d58f2384aa9304cc50262" translate="yes" xml:space="preserve">
          <source>Contains the name of a file in the same format as</source>
          <target state="translated">と同じ形式のファイル名が含まれています。</target>
        </trans-unit>
        <trans-unit id="1210cc85a00377bcbf73a439aada0aeb8e0e481b" translate="yes" xml:space="preserve">
          <source>Controlling the Prompt</source>
          <target state="translated">プロンプトの制御</target>
        </trans-unit>
        <trans-unit id="ec96b0a3286527b85362f13dfabb077e7ab45469" translate="yes" xml:space="preserve">
          <source>Controls the action of the shell on receipt of an &lt;code&gt;EOF&lt;/code&gt; character as the sole input. If set, the value denotes the number of consecutive &lt;code&gt;EOF&lt;/code&gt; characters that can be read as the first character on an input line before the shell will exit. If the variable exists but does not have a numeric value, or has no value, then the default is 10. If the variable does not exist, then &lt;code&gt;EOF&lt;/code&gt; signifies the end of input to the shell. This is only in effect for interactive shells.</source>
          <target state="translated">唯一の入力として &lt;code&gt;EOF&lt;/code&gt; 文字を受け取ったときのシェルのアクションを制御します。 設定されている場合、この値は、シェルが終了する前に入力行の最初の文字として読み取ることができる連続した &lt;code&gt;EOF&lt;/code&gt; 文字の数を示します。 変数は存在するが数値がないか、値がない場合、デフォルトは10です。変数が存在しない場合、 &lt;code&gt;EOF&lt;/code&gt; はシェルへの入力の終わりを示します。 これは対話型シェルでのみ有効です。</target>
        </trans-unit>
        <trans-unit id="6002ea4f042d9c85781650caca5521414dd1dd5d" translate="yes" xml:space="preserve">
          <source>Controls what happens when Readline wants to ring the terminal bell. If set to &amp;lsquo;</source>
          <target state="translated">Readlineが端末のベルを鳴らしたいときの動作を制御します。 に設定した場合</target>
        </trans-unit>
        <trans-unit id="5c8a7a03c931d858f642a0ffafb460a33532b63c" translate="yes" xml:space="preserve">
          <source>Coprocesses</source>
          <target state="translated">Coprocesses</target>
        </trans-unit>
        <trans-unit id="17b241230490f5583b64ce80f56e5cecb791875d" translate="yes" xml:space="preserve">
          <source>Copy at most &lt;var&gt;count&lt;/var&gt; lines. If &lt;var&gt;count&lt;/var&gt; is 0, all lines are copied.</source>
          <target state="translated">最大で &lt;var&gt;count&lt;/var&gt; 行をコピーします 。 &lt;var&gt;count&lt;/var&gt; が0の場合、すべての行がコピーされます。</target>
        </trans-unit>
        <trans-unit id="2995b8338a670d15c3a7987a7725e793d3a22024" translate="yes" xml:space="preserve">
          <source>Copy the text in the region to the kill buffer, so it can be yanked right away. By default, this command is unbound.</source>
          <target state="translated">リージョン内のテキストをキルバッファにコピーして、すぐに取り出せるようにします。デフォルトでは、このコマンドはバインドされていません。</target>
        </trans-unit>
        <trans-unit id="6edd8b1e99d094b05e212ad2e9cdcfbbb8edb9cb" translate="yes" xml:space="preserve">
          <source>Copy the word before point to the kill buffer. The word boundaries are the same as &lt;code&gt;backward-word&lt;/code&gt;. By default, this command is unbound.</source>
          <target state="translated">ポイントの前の単語をキルバッファにコピーします。 単語の境界は、 &lt;code&gt;backward-word&lt;/code&gt; と同じです。 デフォルトでは、このコマンドはバインドされていません。</target>
        </trans-unit>
        <trans-unit id="39206e54a93de37916e39080e9da691c9ed6b95d" translate="yes" xml:space="preserve">
          <source>Copy the word following point to the kill buffer. The word boundaries are the same as &lt;code&gt;forward-word&lt;/code&gt;. By default, this command is unbound.</source>
          <target state="translated">ポイントに続く単語をキルバッファにコピーします。 単語の境界は &lt;code&gt;forward-word&lt;/code&gt; と同じです。 デフォルトでは、このコマンドはバインドされていません。</target>
        </trans-unit>
        <trans-unit id="fb533437eb7cefc07001f7d7e4ce2e0bf7aa1f2c" translate="yes" xml:space="preserve">
          <source>Copying and sharing this documentation.</source>
          <target state="translated">このドキュメントをコピーして共有すること。</target>
        </trans-unit>
        <trans-unit id="154784820baffd42626a2bcde20aa0381aaae095" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 2000, 2001, 2002, 2007, 2008 Free Software Foundation, Inc.</source>
          <target state="translated">Copyright&amp;copy;2000、2001、2002、2007、2008 Free Software Foundation、Inc.</target>
        </trans-unit>
        <trans-unit id="e437b60a6846f553df7ff9d9a352503a73b81bd3" translate="yes" xml:space="preserve">
          <source>Currently ignored.</source>
          <target state="translated">現在は無視されています。</target>
        </trans-unit>
        <trans-unit id="f5598cb3abd03849adb9eaee518fab6b063f99cb" translate="yes" xml:space="preserve">
          <source>Customizing Readline from a user&amp;rsquo;s view.</source>
          <target state="translated">ユーザーの視点からReadlineをカスタマイズする。</target>
        </trans-unit>
        <trans-unit id="456434af162a43c823a1d4cdd26b1c5b97f08279" translate="yes" xml:space="preserve">
          <source>Customizing the various prompt strings.</source>
          <target state="translated">様々なプロンプト文字列をカスタマイズします。</target>
        </trans-unit>
        <trans-unit id="50c9e8d5fc98727b4bbc93cf5d64a68db647f04f" translate="yes" xml:space="preserve">
          <source>D</source>
          <target state="translated">D</target>
        </trans-unit>
        <trans-unit id="7598c12b4a70fa343637f2c4c2dca159a35b4951" translate="yes" xml:space="preserve">
          <source>D.1 Index of Shell Builtin Commands</source>
          <target state="translated">D.1 シェル組み込みコマンドのインデックス</target>
        </trans-unit>
        <trans-unit id="19e84ca2c8daeb36c5dfe51d86645a62916d14f3" translate="yes" xml:space="preserve">
          <source>D.2 Index of Shell Reserved Words</source>
          <target state="translated">D.2 シェル予約語のインデックス</target>
        </trans-unit>
        <trans-unit id="c4130497620e966568118983378d1ee9151eede8" translate="yes" xml:space="preserve">
          <source>D.3 Parameter and Variable Index</source>
          <target state="translated">D.3 パラメータと変数のインデックス</target>
        </trans-unit>
        <trans-unit id="e5f57692ba17d9a6628c4dfb5fd9f9116c9d1fb3" translate="yes" xml:space="preserve">
          <source>D.4 Function Index</source>
          <target state="translated">D.4 機能インデックス</target>
        </trans-unit>
        <trans-unit id="f44a81b5ff3b971a394abd9b48b4b95bf752b406" translate="yes" xml:space="preserve">
          <source>D.5 Concept Index</source>
          <target state="translated">D.5 コンセプトインデックス</target>
        </trans-unit>
        <trans-unit id="fe1069b718d74dd44eea5b5e0c651c52d89c95b7" translate="yes" xml:space="preserve">
          <source>DIRSTACK</source>
          <target state="translated">DIRSTACK</target>
        </trans-unit>
        <trans-unit id="e89825345af888d019c3ca060aaf072506138fc4" translate="yes" xml:space="preserve">
          <source>DTD</source>
          <target state="translated">DTD</target>
        </trans-unit>
        <trans-unit id="14bac27f501e56e1330b139c1e675077f49a75f8" translate="yes" xml:space="preserve">
          <source>Declare variables and give them attributes. If no &lt;var&gt;name&lt;/var&gt;s are given, then display the values of variables instead.</source>
          <target state="translated">変数を宣言して属性を与えます。 &lt;var&gt;name&lt;/var&gt; が指定されていない場合は、代わりに変数の値を表示します。</target>
        </trans-unit>
        <trans-unit id="37a0421700cbe55eec8f11b79aaf182741f47044" translate="yes" xml:space="preserve">
          <source>Define if you are using the Andrew File System from Transarc.</source>
          <target state="translated">TransarcのAndrew File Systemを使用しているかどうかを定義します。</target>
        </trans-unit>
        <trans-unit id="ef613db953f4340bc7153c20f363c57f180784f2" translate="yes" xml:space="preserve">
          <source>Define this to make Bash link with a locally-installed version of Readline rather than the version in</source>
          <target state="translated">これを定義することで、Bash を、Readline のバージョンではなく、ローカルにインストールされたバージョンの Readline とリンクさせることができます。</target>
        </trans-unit>
        <trans-unit id="ca04fd20766d012c25aa0a3182361559b7f1886f" translate="yes" xml:space="preserve">
          <source>Define this to use the Purify memory allocation checker from Rational Software.</source>
          <target state="translated">これを定義すると、Rational Software の Purify メモリ割り当てチェッカを使用することができます。</target>
        </trans-unit>
        <trans-unit id="15225baac48fc3d689cb2b0f74b936eff4339ff7" translate="yes" xml:space="preserve">
          <source>Definitions</source>
          <target state="translated">Definitions</target>
        </trans-unit>
        <trans-unit id="03eaa9c0f30f58eed3bd3ee843ddbe2bab334034" translate="yes" xml:space="preserve">
          <source>Delete all spaces and tabs around point. By default, this is unbound.</source>
          <target state="translated">点の周りのスペースとタブをすべて削除します。デフォルトではバインドされていません。</target>
        </trans-unit>
        <trans-unit id="6e6b8f60fe75e6eeffcfdf108abcfd3c18849c6e" translate="yes" xml:space="preserve">
          <source>Delete any section Entitled &amp;ldquo;Endorsements&amp;rdquo;. Such a section may not be included in the Modified Version.</source>
          <target state="translated">「推奨」というタイトルのセクションを削除します。 このようなセクションは、変更バージョンに含まれていない場合があります。</target>
        </trans-unit>
        <trans-unit id="4b1f80c10d6a42826216351ebeda0c58abb0e624" translate="yes" xml:space="preserve">
          <source>Delete the character at point. If this function is bound to the same character as the tty &lt;small&gt;EOF&lt;/small&gt; character, as</source>
          <target state="translated">ポイントの文字を削除します。 この関数がtty &lt;small&gt;EOF&lt;/small&gt;文字と同じ文字にバインドされている場合、</target>
        </trans-unit>
        <trans-unit id="8490cc4157bab1c65b97ae0596f3d09c2612107a" translate="yes" xml:space="preserve">
          <source>Delete the character behind the cursor. A numeric argument means to kill the characters instead of deleting them.</source>
          <target state="translated">カーソルの後ろの文字を削除します。数値引数は、文字を削除するのではなく、文字を殺すことを意味します。</target>
        </trans-unit>
        <trans-unit id="929088c27b0eb60e04edcac70b2a85e5a8dc47b1" translate="yes" xml:space="preserve">
          <source>Delete the character to the left of the cursor.</source>
          <target state="translated">カーソルの左側の文字を削除します。</target>
        </trans-unit>
        <trans-unit id="12c9cb967e133f91fbd42892eb7fbd87ab2e1dc7" translate="yes" xml:space="preserve">
          <source>Delete the character under the cursor, unless the cursor is at the end of the line, in which case the character behind the cursor is deleted. By default, this is not bound to a key.</source>
          <target state="translated">カーソルが行末にある場合を除き、カーソルの下の文字を削除します。デフォルトでは、これはキーにバインドされていません。</target>
        </trans-unit>
        <trans-unit id="c01e827109bb2eb4866db3b0d831fb311b52847a" translate="yes" xml:space="preserve">
          <source>Delete the character underneath the cursor.</source>
          <target state="translated">カーソルの下の文字を削除します。</target>
        </trans-unit>
        <trans-unit id="15d917b3b6e79033cd47eceb20b989eb391e0bc9" translate="yes" xml:space="preserve">
          <source>Delete the history entries between positions &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, inclusive. Positive and negative values for &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; are interpreted as described above.</source>
          <target state="translated">&lt;var&gt;start&lt;/var&gt; 位置と &lt;var&gt;end&lt;/var&gt; 位置の間の履歴エントリを削除します。 &lt;var&gt;start&lt;/var&gt; と &lt;var&gt;end&lt;/var&gt; 正と負の値は、上記のように解釈されます。</target>
        </trans-unit>
        <trans-unit id="4342ef8d6b249dc53feb51cdecdd4814285cfadb" translate="yes" xml:space="preserve">
          <source>Delete the history entry at position &lt;var&gt;offset&lt;/var&gt;. If &lt;var&gt;offset&lt;/var&gt; is positive, it should be specified as it appears when the history is displayed. If &lt;var&gt;offset&lt;/var&gt; is negative, it is interpreted as relative to one greater than the last history position, so negative indices count back from the end of the history, and an index of &amp;lsquo;</source>
          <target state="translated">位置 &lt;var&gt;offset&lt;/var&gt; の履歴エントリを削除します。 &lt;var&gt;offset&lt;/var&gt; が正の場合、履歴が表示されるときに表示されるように指定する必要があります。 &lt;var&gt;offset&lt;/var&gt; が負の場合、最後の履歴位置よりも1大きいと解釈されるため、負のインデックスは履歴の最後からカウントされ、インデックスは '</target>
        </trans-unit>
        <trans-unit id="c5c189768f978900f4a41713270f18f3401e1e06" translate="yes" xml:space="preserve">
          <source>Deletes the character under the cursor if not at the beginning or end of the line (like &lt;code&gt;delete-char&lt;/code&gt;). If at the end of the line, behaves identically to &lt;code&gt;possible-completions&lt;/code&gt;. This command is unbound by default.</source>
          <target state="translated">行の先頭または末尾にない場合は、カーソルの下の文字を削除します（ &lt;code&gt;delete-char&lt;/code&gt; など ）。 行末にある場合は、 &lt;code&gt;possible-completions&lt;/code&gt; と同じように動作します。 このコマンドは、デフォルトではバインドされていません。</target>
        </trans-unit>
        <trans-unit id="515824f152954141db6bc26124f50abb56f1d2ef" translate="yes" xml:space="preserve">
          <source>Directory Stack Builtins</source>
          <target state="translated">ディレクトリ スタック ビルトイン</target>
        </trans-unit>
        <trans-unit id="df7e62eba7c2ae042c8910c743f296795ffb04cb" translate="yes" xml:space="preserve">
          <source>Directory names. May also be specified as</source>
          <target state="translated">ディレクトリ名。として指定することもできます。</target>
        </trans-unit>
        <trans-unit id="c3d2fe1fdef2a48f16fdb834b9035a2e098cb975" translate="yes" xml:space="preserve">
          <source>Disable (unset) each &lt;var&gt;optname&lt;/var&gt;.</source>
          <target state="translated">各 &lt;var&gt;optname&lt;/var&gt; を無効（設定解除）にします。</target>
        </trans-unit>
        <trans-unit id="2ac702e04dea45effb4c73f463693ecd4b38e8a1" translate="yes" xml:space="preserve">
          <source>Disable filename expansion (globbing).</source>
          <target state="translated">ファイル名の展開(グロブ)を無効にします。</target>
        </trans-unit>
        <trans-unit id="7e42646826d0e17364e9e5fe2f4137fb2e22c1a6" translate="yes" xml:space="preserve">
          <source>Discard the first &lt;var&gt;count&lt;/var&gt; lines read.</source>
          <target state="translated">読み込まれた最初の &lt;var&gt;count&lt;/var&gt; 行を破棄します。</target>
        </trans-unit>
        <trans-unit id="d237adb5528d6b85814dbb4c413e265a1e07d242" translate="yes" xml:space="preserve">
          <source>Display &lt;var&gt;prompt&lt;/var&gt;, without a trailing newline, before attempting to read any input. The prompt is displayed only if input is coming from a terminal.</source>
          <target state="translated">入力を読み取ろうとする前に、末尾の改行なしで &lt;var&gt;prompt&lt;/var&gt; を表示します 。 プロンプトは、入力が端末からのものである場合にのみ表示されます。</target>
        </trans-unit>
        <trans-unit id="b041c80d391d71e0ba553ace83ad8b38a5e19f03" translate="yes" xml:space="preserve">
          <source>Display Readline function names and bindings in such a way that they can be used as input or in a Readline initialization file.</source>
          <target state="translated">Readline の関数名とバインディングを、入力として、または Readline の初期化ファイルで使用できるように表示します。</target>
        </trans-unit>
        <trans-unit id="1d6e64c3f73f453a1ccfbfeedd265411e431a08d" translate="yes" xml:space="preserve">
          <source>Display Readline key sequences bound to macros and the strings they output in such a way that they can be used as input or in a Readline initialization file.</source>
          <target state="translated">マクロにバインドされたリードラインのキーシーケンスと、それらが出力する文字列を、入力として、またはリードラインの初期化ファイルで使用できるように表示します。</target>
        </trans-unit>
        <trans-unit id="dd7b566fe3c46da759396fc1a10283c1d81c851a" translate="yes" xml:space="preserve">
          <source>Display Readline key sequences bound to macros and the strings they output.</source>
          <target state="translated">マクロにバインドされているリードラインキー配列と、それらが出力する文字列を表示します。</target>
        </trans-unit>
        <trans-unit id="776f5ffc859e970b56a2cf65a0dec6fb2c09db8b" translate="yes" xml:space="preserve">
          <source>Display Readline variable names and values in such a way that they can be used as input or in a Readline initialization file.</source>
          <target state="translated">Readlineの変数名と値を、入力として、またはReadlineの初期化ファイルで使用できるように表示します。</target>
        </trans-unit>
        <trans-unit id="33c78521ae4336775ee8f73c7db5e7060930f2a0" translate="yes" xml:space="preserve">
          <source>Display a short description of each &lt;var&gt;pattern&lt;/var&gt;</source>
          <target state="translated">各 &lt;var&gt;pattern&lt;/var&gt; 短い説明を表示する</target>
        </trans-unit>
        <trans-unit id="13df7ff2e32c3f53ad77ed98b6ae5e4613663c61" translate="yes" xml:space="preserve">
          <source>Display a usage message on standard output and exit successfully.</source>
          <target state="translated">標準出力に使用メッセージを表示し、正常終了します。</target>
        </trans-unit>
        <trans-unit id="d274780c32ae730a904b56aad21ebe752668e21d" translate="yes" xml:space="preserve">
          <source>Display current Readline (see &lt;a href=&quot;command-line-editing#Command-Line-Editing&quot;&gt;Command Line Editing&lt;/a&gt;) key and function bindings, bind a key sequence to a Readline function or macro, or set a Readline variable. Each non-option argument is a command as it would appear in a Readline initialization file (see &lt;a href=&quot;readline-init-file#Readline-Init-File&quot;&gt;Readline Init File&lt;/a&gt;), but each binding or command must be passed as a separate argument; e.g., &amp;lsquo;</source>
          <target state="translated">現在のReadline（ &lt;a href=&quot;command-line-editing#Command-Line-Editing&quot;&gt;コマンドライン編集を&lt;/a&gt;参照）のキーと関数のバインドを表示する、キーシーケンスをReadline関数またはマクロにバインドする、またはReadline変数を設定する。 オプション以外の各引数は、Readline初期化ファイル（ &lt;a href=&quot;readline-init-file#Readline-Init-File&quot;&gt;Readline Init Fileを&lt;/a&gt;参照）に表示されるのと同じコマンドですが、各バインディングまたはコマンドは個別の引数として渡す必要があります。 例、 '</target>
        </trans-unit>
        <trans-unit id="d2fe07d8828653828685b8b089dd34fea3b9ad50" translate="yes" xml:space="preserve">
          <source>Display helpful information about builtin commands. If &lt;var&gt;pattern&lt;/var&gt; is specified, &lt;code&gt;help&lt;/code&gt; gives detailed help on all commands matching &lt;var&gt;pattern&lt;/var&gt;, otherwise a list of the builtins is printed.</source>
          <target state="translated">組み込みコマンドに関する役立つ情報を表示します。 &lt;var&gt;pattern&lt;/var&gt; が指定されている場合、 &lt;code&gt;help&lt;/code&gt; は &lt;var&gt;pattern&lt;/var&gt; に一致するすべてのコマンドの詳細なヘルプを提供します。それ以外の場合、組み込みのリストが出力されます。</target>
        </trans-unit>
        <trans-unit id="9dab646ab7d9d5e63e23a11a14e990f761b1752b" translate="yes" xml:space="preserve">
          <source>Display information only about jobs that have changed status since the user was last notified of their status.</source>
          <target state="translated">ユーザーに最後にステータスが通知されてからステータスが変更されたジョブのみの情報を表示します。</target>
        </trans-unit>
        <trans-unit id="3692188e608394fb73df30d0fe22dce78df518ce" translate="yes" xml:space="preserve">
          <source>Display only a short usage synopsis for each &lt;var&gt;pattern&lt;/var&gt;</source>
          <target state="translated">各 &lt;var&gt;pattern&lt;/var&gt; 短い使用法の概要のみを表示します</target>
        </trans-unit>
        <trans-unit id="0c9b571ad4ed3fef1517d31b187245d76cc23e45" translate="yes" xml:space="preserve">
          <source>Display only running jobs.</source>
          <target state="translated">実行中のジョブのみを表示します。</target>
        </trans-unit>
        <trans-unit id="d90cdeb1d587355bbb7e18899c35388a6f883fcc" translate="yes" xml:space="preserve">
          <source>Display only stopped jobs.</source>
          <target state="translated">停止しているジョブのみを表示します。</target>
        </trans-unit>
        <trans-unit id="0aca35e42be333733d273a1a92f97c0febbf2cfb" translate="yes" xml:space="preserve">
          <source>Display the description of each &lt;var&gt;pattern&lt;/var&gt; in a manpage-like format</source>
          <target state="translated">各 &lt;var&gt;pattern&lt;/var&gt; の説明をマンページのような形式で表示します</target>
        </trans-unit>
        <trans-unit id="f74b706494fda86557016603c50d49e430f9a8b2" translate="yes" xml:space="preserve">
          <source>Display the list of currently remembered directories. Directories are added to the list with the &lt;code&gt;pushd&lt;/code&gt; command; the &lt;code&gt;popd&lt;/code&gt; command removes directories from the list. The current directory is always the first directory in the stack.</source>
          <target state="translated">現在記憶されているディレクトリのリストを表示します。 ディレクトリは &lt;code&gt;pushd&lt;/code&gt; コマンドでリストに追加されます。 &lt;code&gt;popd&lt;/code&gt; コマンドは、リストからディレクトリーを削除します。 現在のディレクトリは常にスタックの最初のディレクトリです。</target>
        </trans-unit>
        <trans-unit id="34d8485b5d897710d31113cb43d9345d4695604e" translate="yes" xml:space="preserve">
          <source>Display version information about the current instance of Bash.</source>
          <target state="translated">現在のBashのインスタンスのバージョン情報を表示します。</target>
        </trans-unit>
        <trans-unit id="27d6038cc3733b6776628504624c331907206f68" translate="yes" xml:space="preserve">
          <source>Displays the &lt;var&gt;N&lt;/var&gt;th directory (counting from the left of the list printed by &lt;code&gt;dirs&lt;/code&gt; when invoked without options), starting with zero.</source>
          <target state="translated">ゼロから始まる &lt;var&gt;N&lt;/var&gt; 番目のディレクトリー（オプションなしで呼び出されたときに &lt;code&gt;dirs&lt;/code&gt; によって印刷されるリストの左から数えます）を表示します。</target>
        </trans-unit>
        <trans-unit id="3286e62f08c3730ccb855d2688237745eb71f7a0" translate="yes" xml:space="preserve">
          <source>Displays the &lt;var&gt;N&lt;/var&gt;th directory (counting from the right of the list printed by &lt;code&gt;dirs&lt;/code&gt; when invoked without options), starting with zero.</source>
          <target state="translated">ゼロから始まる &lt;var&gt;N&lt;/var&gt; 番目のディレクトリー（オプションなしで呼び出されたときに &lt;code&gt;dirs&lt;/code&gt; によって出力されるリストの右から数えます）を表示します。</target>
        </trans-unit>
        <trans-unit id="990b141381f13519c2b491643df0ac717b8f895e" translate="yes" xml:space="preserve">
          <source>Do not print messages saying which checks are being made.</source>
          <target state="translated">どのチェックが行われているかを示すメッセージを印刷しないでください。</target>
        </trans-unit>
        <trans-unit id="c58006228703ec1ca66e0a963c3a993b443dee27" translate="yes" xml:space="preserve">
          <source>Do not retitle any existing section to be Entitled &amp;ldquo;Endorsements&amp;rdquo; or to conflict in title with any Invariant Section.</source>
          <target state="translated">既存のセクションのタイトルに「推奨」というタイトルを付けたり、タイトルが不変セクションと競合したりしないでください。</target>
        </trans-unit>
        <trans-unit id="251452a47a32219e90f79387a9da32ca4b8669de" translate="yes" xml:space="preserve">
          <source>Do not use the &lt;small&gt;GNU&lt;/small&gt; Readline library (see &lt;a href=&quot;command-line-editing#Command-Line-Editing&quot;&gt;Command Line Editing&lt;/a&gt;) to read command lines when the shell is interactive.</source>
          <target state="translated">シェルがインタラクティブな場合は、 &lt;small&gt;GNU&lt;/small&gt; Readlineライブラリ（ &lt;a href=&quot;command-line-editing#Command-Line-Editing&quot;&gt;コマンドライン編集を&lt;/a&gt;参照）を使用してコマンドラインを読み取らないでください。</target>
        </trans-unit>
        <trans-unit id="34641df3f2b0c5ff59f2ad11c6421bd4c178800c" translate="yes" xml:space="preserve">
          <source>Do nothing beyond expanding &lt;var&gt;arguments&lt;/var&gt; and performing redirections. The return status is zero.</source>
          <target state="translated">&lt;var&gt;arguments&lt;/var&gt; を拡張してリダイレクトを実行する以外に何もしません。 戻り状況はゼロです。</target>
        </trans-unit>
        <trans-unit id="a764d2bad3e82bb92ba3944027f7bb869039b6c5" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t load the system-wide startup file</source>
          <target state="translated">システム全体の起動ファイルを読み込まない</target>
        </trans-unit>
        <trans-unit id="a95295542c97477950a6ff8084078b88de4746f5" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t read the</source>
          <target state="translated">読まない</target>
        </trans-unit>
        <trans-unit id="7bc4aeea2b858e5d0b2038c659c17e529fe4085a" translate="yes" xml:space="preserve">
          <source>Double Quotes</source>
          <target state="translated">ダブルクォート</target>
        </trans-unit>
        <trans-unit id="f4487e41802f7b30a9bf65cded281e61a35c118b" translate="yes" xml:space="preserve">
          <source>Drag the character before the cursor forward over the character at the cursor, moving the cursor forward as well. If the insertion point is at the end of the line, then this transposes the last two characters of the line. Negative arguments have no effect.</source>
          <target state="translated">カーソルの前の文字をカーソル位置の文字の上にドラッグして、カーソルを前方に移動させます。挿入点が行末にある場合は、行の最後の2文字を転置します。負の引数は何の効果もありません。</target>
        </trans-unit>
        <trans-unit id="baca3816508d8de24fa41abd4773ccf8791d0456" translate="yes" xml:space="preserve">
          <source>Drag the word before point past the word after point, moving point past that word as well. If the insertion point is at the end of the line, this transposes the last two words on the line.</source>
          <target state="translated">点の前の単語を点の後の単語の前にドラッグして、その単語の前にも点を移動します。挿入点が行末にある場合、これは行の最後の2つの単語を転置します。</target>
        </trans-unit>
        <trans-unit id="e0184adedf913b076626646d3f52c3b49c39ad6d" translate="yes" xml:space="preserve">
          <source>E</source>
          <target state="translated">E</target>
        </trans-unit>
        <trans-unit id="c423af33f5eb5f46fbb4c173f8687a3bcc990f06" translate="yes" xml:space="preserve">
          <source>EMACS</source>
          <target state="translated">EMACS</target>
        </trans-unit>
        <trans-unit id="086bfb42cb0e1f0682c42f25c92a8f7e76b5bda4" translate="yes" xml:space="preserve">
          <source>ENV</source>
          <target state="translated">ENV</target>
        </trans-unit>
        <trans-unit id="44b842b04070c1983ddf8a268f6776b7aaec802d" translate="yes" xml:space="preserve">
          <source>EPOCHREALTIME</source>
          <target state="translated">EPOCHREALTIME</target>
        </trans-unit>
        <trans-unit id="8243164d9ad28766052cc19c15ab5333891eda51" translate="yes" xml:space="preserve">
          <source>EPOCHSECONDS</source>
          <target state="translated">EPOCHSECONDS</target>
        </trans-unit>
        <trans-unit id="4481138366ccad9893f046cefc44f50e2a0b7198" translate="yes" xml:space="preserve">
          <source>ESC f</source>
          <target state="translated">エスケープエフ</target>
        </trans-unit>
        <trans-unit id="839fbe4758d9a6a0629c5c823cc01bc829cff0e3" translate="yes" xml:space="preserve">
          <source>ESC[11~</source>
          <target state="translated">ESC[11~</target>
        </trans-unit>
        <trans-unit id="35b281ecff53330dcc3be4101b1295fcfade40ad" translate="yes" xml:space="preserve">
          <source>EUID</source>
          <target state="translated">EUID</target>
        </trans-unit>
        <trans-unit id="49f9fcb8052d06c9792eeceaea5312aa2c693a8a" translate="yes" xml:space="preserve">
          <source>EXECIGNORE</source>
          <target state="translated">EXECIGNORE</target>
        </trans-unit>
        <trans-unit id="3c01441027ee1bb404320471e83b88b9c0a4cc16" translate="yes" xml:space="preserve">
          <source>Each &lt;var&gt;name&lt;/var&gt; is an associative array variable (see &lt;a href=&quot;arrays#Arrays&quot;&gt;Arrays&lt;/a&gt;).</source>
          <target state="translated">それぞれの &lt;var&gt;name&lt;/var&gt; は連想配列変数です（ &lt;a href=&quot;arrays#Arrays&quot;&gt;配列を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="d81512733c61c710cd7c3f7c9abe7a612aadaea7" translate="yes" xml:space="preserve">
          <source>Each &lt;var&gt;name&lt;/var&gt; is an indexed array variable (see &lt;a href=&quot;arrays#Arrays&quot;&gt;Arrays&lt;/a&gt;).</source>
          <target state="translated">それぞれの &lt;var&gt;name&lt;/var&gt; はインデックス付き配列変数です（ &lt;a href=&quot;arrays#Arrays&quot;&gt;配列を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="eedee81fde17cf8668c43cbf595d74b650f6b15d" translate="yes" xml:space="preserve">
          <source>Each clause must be terminated with &amp;lsquo;</source>
          <target state="translated">各句は 'で終了する必要があります</target>
        </trans-unit>
        <trans-unit id="58fa808b767a0867a3f6a1921a95e8c18caa014c" translate="yes" xml:space="preserve">
          <source>Each command in a pipeline is executed in its own subshell, which is a separate process (see &lt;a href=&quot;command-execution-environment#Command-Execution-Environment&quot;&gt;Command Execution Environment&lt;/a&gt;). If the &lt;code&gt;lastpipe&lt;/code&gt; option is enabled using the &lt;code&gt;shopt&lt;/code&gt; builtin (see &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;), the last element of a pipeline may be run by the shell process.</source>
          <target state="translated">パイプラインの各コマンドは、個別のプロセスである独自のサブシェルで実行されます（ &lt;a href=&quot;command-execution-environment#Command-Execution-Environment&quot;&gt;コマンド実行環境を&lt;/a&gt;参照）。 &lt;code&gt;lastpipe&lt;/code&gt; の &lt;code&gt;shopt&lt;/code&gt; を使用してlastpipeオプションが有効になっている場合（ &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;ビルトインのショップを&lt;/a&gt;参照）、パイプラインの最後の要素はシェルプロセスによって実行される可能性があります。</target>
        </trans-unit>
        <trans-unit id="9c03bd2e8cc875a9b297daf5040b75b7f459b3ad" translate="yes" xml:space="preserve">
          <source>Each of the shell metacharacters (see &lt;a href=&quot;definitions#Definitions&quot;&gt;Definitions&lt;/a&gt;) has special meaning to the shell and must be quoted if it is to represent itself. When the command history expansion facilities are being used (see &lt;a href=&quot;history-interaction#History-Interaction&quot;&gt;History Interaction&lt;/a&gt;), the &lt;var&gt;history expansion&lt;/var&gt; character, usually &amp;lsquo;</source>
          <target state="translated">シェルのメタ文字（ &lt;a href=&quot;definitions#Definitions&quot;&gt;定義を&lt;/a&gt;参照）のそれぞれは、シェルにとって特別な意味を持ち、それ自体を表す場合は引用符で囲む必要があります。 コマンド履歴拡張機能が使用されている場合（「 &lt;a href=&quot;history-interaction#History-Interaction&quot;&gt;履歴の相互作用&lt;/a&gt; 」を参照）、 &lt;var&gt;history expansion&lt;/var&gt; 文字、通常は '</target>
        </trans-unit>
        <trans-unit id="076892cde39a23965cfe9b72faa214616a3b15fe" translate="yes" xml:space="preserve">
          <source>Each redirection that may be preceded by a file descriptor number may instead be preceded by a word of the form {&lt;var&gt;varname&lt;/var&gt;}. In this case, for each redirection operator except &amp;gt;&amp;amp;- and &amp;lt;&amp;amp;-, the shell will allocate a file descriptor greater than 10 and assign it to {&lt;var&gt;varname&lt;/var&gt;}. If &amp;gt;&amp;amp;- or &amp;lt;&amp;amp;- is preceded by {&lt;var&gt;varname&lt;/var&gt;}, the value of &lt;var&gt;varname&lt;/var&gt; defines the file descriptor to close. If {&lt;var&gt;varname&lt;/var&gt;} is supplied, the redirection persists beyond the scope of the command, allowing the shell programmer to manage the file descriptor himself.</source>
          <target state="translated">ファイル記述子番号が前に付く可能性がある各リダイレクトは、代わりに{ &lt;var&gt;varname&lt;/var&gt; }という形式の単語が前に付く場合があります 。 この場合、&amp;gt;＆-と&amp;lt;＆-を除く各リダイレクト演算子に対して、シェルは10より大きいファイル記述子を割り当て、それを{ &lt;var&gt;varname&lt;/var&gt; }に割り当てます 。 &amp;gt;＆-または&amp;lt;＆-の前に{ &lt;var&gt;varname&lt;/var&gt; }がある場合、 &lt;var&gt;varname&lt;/var&gt; の値は、閉じるファイル記述子を定義します。 { &lt;var&gt;varname&lt;/var&gt; }が指定されている場合、リダイレクトはコマンドの範囲を超えて持続し、シェルプログラマーがファイル記述子を自分で管理できるようにします。</target>
        </trans-unit>
        <trans-unit id="9e01c0b40acc6ff6b5b39dde949086006567c089" translate="yes" xml:space="preserve">
          <source>Each time &lt;code&gt;hash&lt;/code&gt; is invoked, it remembers the full pathnames of the commands specified as &lt;var&gt;name&lt;/var&gt; arguments, so they need not be searched for on subsequent invocations. The commands are found by searching through the directories listed in &lt;code&gt;$PATH&lt;/code&gt;. Any previously-remembered pathname is discarded. The</source>
          <target state="translated">&lt;code&gt;hash&lt;/code&gt; が呼び出されるたびに、 ハッシュは &lt;var&gt;name&lt;/var&gt; 引数として指定されたコマンドの完全パス名を記憶しているため、以降の呼び出しで検索する必要はありません。 コマンドは、 &lt;code&gt;$PATH&lt;/code&gt; リストされているディレクトリを検索することで見つかります。 以前に記憶されたパス名はすべて破棄されます。 の</target>
        </trans-unit>
        <trans-unit id="123e55065b1bb04796125df7a6e3577bc3f78e26" translate="yes" xml:space="preserve">
          <source>Each time this parameter is referenced, a random integer between 0 and 32767 is generated. Assigning a value to this variable seeds the random number generator.</source>
          <target state="translated">このパラメータが参照されるたびに、0 から 32767 の間の乱数が生成されます。この変数に値を代入すると、乱数発生器の種となります。</target>
        </trans-unit>
        <trans-unit id="9de15e0f54460ee2a8fb5fc34ed944e24292ffde" translate="yes" xml:space="preserve">
          <source>Each time this parameter is referenced, it expands to the number of seconds since the Unix Epoch (see the documentation for the C library function &lt;var&gt;time&lt;/var&gt; for the definition of Epoch). Assignments to &lt;code&gt;EPOCHSECONDS&lt;/code&gt; are ignored. If &lt;code&gt;EPOCHSECONDS&lt;/code&gt; is unset, it loses its special properties, even if it is subsequently reset.</source>
          <target state="translated">このパラメーターが参照されるたびに、Unixエポック以降の秒数に展開されます（エポックの定義については、Cライブラリー関数の &lt;var&gt;time&lt;/var&gt; に関するドキュメントを参照してください）。 &lt;code&gt;EPOCHSECONDS&lt;/code&gt; への割り当ては無視されます。 &lt;code&gt;EPOCHSECONDS&lt;/code&gt; が設定されていない場合、その後リセットされても、特別なプロパティは失われます。</target>
        </trans-unit>
        <trans-unit id="d23c65da090f34b9b24f6196cd1c222bc5043e84" translate="yes" xml:space="preserve">
          <source>Each time this parameter is referenced, it expands to the number of seconds since the Unix Epoch as a floating point value with micro-second granularity (see the documentation for the C library function &lt;var&gt;time&lt;/var&gt; for the definition of Epoch). Assignments to &lt;code&gt;EPOCHREALTIME&lt;/code&gt; are ignored. If &lt;code&gt;EPOCHREALTIME&lt;/code&gt; is unset, it loses its special properties, even if it is subsequently reset.</source>
          <target state="translated">このパラメーターが参照されるたびに、マイクロ秒の粒度の浮動小数点値としてUnixエポック以降の秒数に展開されます（エポックの定義については、Cライブラリー関数の &lt;var&gt;time&lt;/var&gt; ドキュメントを参照してください）。 &lt;code&gt;EPOCHREALTIME&lt;/code&gt; への割り当ては無視されます。 &lt;code&gt;EPOCHREALTIME&lt;/code&gt; が設定されていない場合、その後リセットされても、特別なプロパティは失われます。</target>
        </trans-unit>
        <trans-unit id="ab7e24d1a7c1b084e231c996a57a6774124695a9" translate="yes" xml:space="preserve">
          <source>Each variable assignment is checked for unquoted tilde-prefixes immediately following a &amp;lsquo;</source>
          <target state="translated">各変数の割り当ては、 'の直後の引用符で囲まれていないチルダ接頭辞がチェックされます</target>
        </trans-unit>
        <trans-unit id="3e56658184f5ed970ac31170e5521d416018e6be" translate="yes" xml:space="preserve">
          <source>Each variable or function that is created or modified is given the export attribute and marked for export to the environment of subsequent commands.</source>
          <target state="translated">作成または変更された各変数または関数には、エクスポート属性が与えられ、後続のコマンドの環境にエクスポートするためのマークが付けられます。</target>
        </trans-unit>
        <trans-unit id="1dbbee03214c8ac8b2eef1098847051dd676995d" translate="yes" xml:space="preserve">
          <source>Each version of the License is given a distinguishing version number. If the Document specifies that a particular numbered version of this License &amp;ldquo;or any later version&amp;rdquo; applies to it, you have the option of following the terms and conditions either of that specified version or of any later version that has been published (not as a draft) by the Free Software Foundation. If the Document does not specify a version number of this License, you may choose any version ever published (not as a draft) by the Free Software Foundation. If the Document specifies that a proxy can decide which future versions of this License can be used, that proxy&amp;rsquo;s public statement of acceptance of a version permanently authorizes you to choose that version for the Document.</source>
          <target state="translated">ライセンスの各バージョンには、区別するバージョン番号が付与されています。 ドキュメントに、このライセンスの特定の番号付きバージョン「またはそれ以降のバージョン」が適用されると記載されている場合は、その指定されたバージョンまたは公開されたそれ以降のバージョンのいずれかの契約条件に従うオプションがあります（ドラフト）は、Free Software Foundationによるものです。 ドキュメントでこのライセンスのバージョン番号が指定されていない場合は、Free Software Foundationによって（ドラフトとしてではなく）これまでに公開された任意のバージョンを選択できます。 ドキュメントでプロキシがこのライセンスの将来のどのバージョンを使用できるかを決定できると指定されている場合、バージョンの承認に関するそのプロキシの公式声明は、ドキュメントにそのバージョンを選択することを永久に許可します。</target>
        </trans-unit>
        <trans-unit id="4fa0f6fb6e440f220b80c6c2d4888a44c80062d9" translate="yes" xml:space="preserve">
          <source>Enable &amp;lsquo;</source>
          <target state="translated">有効にする</target>
        </trans-unit>
        <trans-unit id="d2e79c185211b9e67e06f3c709cc53825cd10fe2" translate="yes" xml:space="preserve">
          <source>Enable (set) each &lt;var&gt;optname&lt;/var&gt;.</source>
          <target state="translated">各 &lt;var&gt;optname&lt;/var&gt; を有効（設定）します。</target>
        </trans-unit>
        <trans-unit id="d9b53a652990d85170f7e672f04e386535ffc526" translate="yes" xml:space="preserve">
          <source>Enable and disable builtin shell commands. Disabling a builtin allows a disk command which has the same name as a shell builtin to be executed without specifying a full pathname, even though the shell normally searches for builtins before disk commands. If</source>
          <target state="translated">ビルドインのシェルコマンドを有効にしたり無効にしたりします。ビルドインを無効にすると、シェルは通常ディスクコマンドの前にビルドインを検索しますが、シェルのビルドインと同じ名前のディスクコマンドをフルパス名を指定せずに実行することができます。もし</target>
        </trans-unit>
        <trans-unit id="6d1b4622d37f1b0ba8c0b777dbb1b996845c765c" translate="yes" xml:space="preserve">
          <source>Enable command history, as described in &lt;a href=&quot;bash-history-facilities#Bash-History-Facilities&quot;&gt;Bash History Facilities&lt;/a&gt;. This option is on by default in interactive shells.</source>
          <target state="translated">&lt;a href=&quot;bash-history-facilities#Bash-History-Facilities&quot;&gt;Bash履歴機能で&lt;/a&gt;説明されているように、コマンド履歴を有効にします。 このオプションは、対話型シェルではデフォルトでオンになっています。</target>
        </trans-unit>
        <trans-unit id="f864b3b1b5c427651d0d571f526ecca9b4ea802d" translate="yes" xml:space="preserve">
          <source>Enable support for &lt;a href=&quot;http://www.unix.org/version2/whatsnew/lfs20mar.html&quot;&gt;large files&lt;/a&gt; if the operating system requires special compiler options to build programs which can access large files. This is enabled by default, if the operating system provides large file support.</source>
          <target state="translated">オペレーティングシステムが大きなファイルにアクセスできるプログラムをビルドするために特別なコンパイラオプションを必要と&lt;a href=&quot;http://www.unix.org/version2/whatsnew/lfs20mar.html&quot;&gt;する&lt;/a&gt;場合は、 大きなファイルのサポートを有効にします。 オペレーティングシステムが大きなファイルをサポートしている場合、これはデフォルトで有効になっています。</target>
        </trans-unit>
        <trans-unit id="caa5de8f3263f981c15d4d450c0a6c3cd1952405" translate="yes" xml:space="preserve">
          <source>Enable the programmable completion facilities (see &lt;a href=&quot;programmable-completion#Programmable-Completion&quot;&gt;Programmable Completion&lt;/a&gt;). If Readline is not enabled, this option has no effect.</source>
          <target state="translated">プログラム可能な補完機能を有効にします（プログラム可能な補完を参照）。 Readlineが有効になっていない場合、このオプションは効果がありません。</target>
        </trans-unit>
        <trans-unit id="091713447eb488afdd7108e2315b018f0bf73492" translate="yes" xml:space="preserve">
          <source>Enabling &lt;small&gt;POSIX&lt;/small&gt; mode has the effect of setting the &lt;code&gt;inherit_errexit&lt;/code&gt; option, so subshells spawned to execute command substitutions inherit the value of the</source>
          <target state="translated">&lt;small&gt;POSIX&lt;/small&gt;モードを有効にすると、 &lt;code&gt;inherit_errexit&lt;/code&gt; オプションを設定する効果があるため、コマンド置換を実行するために生成されたサブシェルは、</target>
        </trans-unit>
        <trans-unit id="65863ba0a3dfba5f65b08c1631dea3f9d7e27214" translate="yes" xml:space="preserve">
          <source>Enabling &lt;small&gt;POSIX&lt;/small&gt; mode has the effect of setting the &lt;code&gt;shift_verbose&lt;/code&gt; option, so numeric arguments to &lt;code&gt;shift&lt;/code&gt; that exceed the number of positional parameters will result in an error message.</source>
          <target state="translated">&lt;small&gt;POSIX&lt;/small&gt;モードを有効にすると、 &lt;code&gt;shift_verbose&lt;/code&gt; オプションを設定する効果があるため、位置パラメーターの数を超える &lt;code&gt;shift&lt;/code&gt; する数値引数はエラーメッセージになります。</target>
        </trans-unit>
        <trans-unit id="c44f12b29415342c9dc8c04f8dc9beffb4ac4a7e" translate="yes" xml:space="preserve">
          <source>Enclosing characters in double quotes (&amp;lsquo;</source>
          <target state="translated">文字を二重引用符（ '</target>
        </trans-unit>
        <trans-unit id="51c33143a0b205ef393e882cb3244299516f9b08" translate="yes" xml:space="preserve">
          <source>Enclosing characters in single quotes (&amp;lsquo;</source>
          <target state="translated">文字を一重引用符で囲む（ '</target>
        </trans-unit>
        <trans-unit id="adf47705460fdb3365a684241a6b22caa01d806e" translate="yes" xml:space="preserve">
          <source>End a sequence of non-printing characters.</source>
          <target state="translated">印刷しない文字のシーケンスを終了します。</target>
        </trans-unit>
        <trans-unit id="d443a1185575c125d61e0af393b044d7b06ef572" translate="yes" xml:space="preserve">
          <source>Environment</source>
          <target state="translated">Environment</target>
        </trans-unit>
        <trans-unit id="fdd6abe4d3e43555fd6a8a4c1cf45b848e487e53" translate="yes" xml:space="preserve">
          <source>Equivalent to</source>
          <target state="translated">に相当する。</target>
        </trans-unit>
        <trans-unit id="435c41f6e2cb1bfb9f7b6bdcc6da8c24703575f7" translate="yes" xml:space="preserve">
          <source>Error tracing is enabled: command substitution, shell functions, and subshells invoked with &lt;code&gt;( &lt;var&gt;command&lt;/var&gt; )&lt;/code&gt; inherit the &lt;code&gt;ERR&lt;/code&gt; trap.</source>
          <target state="translated">エラートレースが有効になっています。コマンド置換、シェル関数、および &lt;code&gt;( &lt;var&gt;command&lt;/var&gt; )&lt;/code&gt; 呼び出されたサブシェルは、 &lt;code&gt;ERR&lt;/code&gt; トラップを継承します。</target>
        </trans-unit>
        <trans-unit id="b9e89b54ec73689553af30dd03b5f687e16616fb" translate="yes" xml:space="preserve">
          <source>Escape Character</source>
          <target state="translated">脱出キャラクター</target>
        </trans-unit>
        <trans-unit id="8847cc1e6aaa23fabc2736e3a258d26080f52b50" translate="yes" xml:space="preserve">
          <source>Evaluate &lt;var&gt;callback&lt;/var&gt; each time &lt;var&gt;quantum&lt;/var&gt; lines are read. The</source>
          <target state="translated">&lt;var&gt;quantum&lt;/var&gt; ラインが読み取られるたびに &lt;var&gt;callback&lt;/var&gt; 評価します 。 の</target>
        </trans-unit>
        <trans-unit id="d14aaf66892b62bb697f75d8e7158e39af015757" translate="yes" xml:space="preserve">
          <source>Evaluate a conditional expression &lt;var&gt;expr&lt;/var&gt; and return a status of 0 (true) or 1 (false). Each operator and operand must be a separate argument. Expressions are composed of the primaries described below in &lt;a href=&quot;bash-conditional-expressions#Bash-Conditional-Expressions&quot;&gt;Bash Conditional Expressions&lt;/a&gt;. &lt;code&gt;test&lt;/code&gt; does not accept any options, nor does it accept and ignore an argument of</source>
          <target state="translated">条件式 &lt;var&gt;expr&lt;/var&gt; を評価し、ステータス0（true）または1（false）を返します。 各演算子とオペランドは別々の引数でなければなりません。 式は、以下の&lt;a href=&quot;bash-conditional-expressions#Bash-Conditional-Expressions&quot;&gt;Bash条件式&lt;/a&gt;で説明するプライマリで構成されています。 &lt;code&gt;test&lt;/code&gt; はオプションを受け入れず、引数を受け入れて無視しません</target>
        </trans-unit>
        <trans-unit id="cdada53f6de22a42b1b986711fcd16d20111c5d8" translate="yes" xml:space="preserve">
          <source>Evaluation is done in fixed-width integers with no check for overflow, though division by 0 is trapped and flagged as an error. The operators and their precedence, associativity, and values are the same as in the C language. The following list of operators is grouped into levels of equal-precedence operators. The levels are listed in order of decreasing precedence.</source>
          <target state="translated">評価は固定幅整数で行われ、オーバーフローのチェックはありませんが、0による除算はトラップされエラーとしてフラグが立てられます。演算子とその優先順位、連想性、値はC言語と同じです。以下の演算子のリストは、優先順位の等しい演算子のレベルにグループ化されています。優先度の高いものから順に並べています。</target>
        </trans-unit>
        <trans-unit id="f81dbc80b5fb875e98fd2a393091d0c168bb041f" translate="yes" xml:space="preserve">
          <source>Event Designators</source>
          <target state="translated">イベント・デザイネーター</target>
        </trans-unit>
        <trans-unit id="2ce75041d97cf817b4ddd136ddb8befefae02f6f" translate="yes" xml:space="preserve">
          <source>Examples of suitable formats for Transparent copies include plain &lt;small&gt;ASCII&lt;/small&gt; without markup, Texinfo input format, LaTeX input format,</source>
          <target state="translated">トランスペアレントコピーに適した形式の例には、マークアップのないプレーン&lt;small&gt;ASCII&lt;/small&gt; 、Texinfo入力形式、LaTeX入力形式、</target>
        </trans-unit>
        <trans-unit id="db594b9f47a21a740021f6f7e42a911e26ff2311" translate="yes" xml:space="preserve">
          <source>Execute &lt;var&gt;consequent-commands&lt;/var&gt; as long as &lt;var&gt;test-commands&lt;/var&gt; has an exit status of zero. The return status is the exit status of the last command executed in &lt;var&gt;consequent-commands&lt;/var&gt;, or zero if none was executed.</source>
          <target state="translated">&lt;var&gt;test-commands&lt;/var&gt; の終了ステータスがゼロである限り、 &lt;var&gt;consequent-commands&lt;/var&gt; を実行します。 戻りステータスは、 &lt;var&gt;consequent-commands&lt;/var&gt; で最後に実行されたコマンドの終了ステータス、または何も実行されなかった場合はゼロです。</target>
        </trans-unit>
        <trans-unit id="2de40889c9c1b6f9d350aaca394da8db65d01d54" translate="yes" xml:space="preserve">
          <source>Execute &lt;var&gt;consequent-commands&lt;/var&gt; as long as &lt;var&gt;test-commands&lt;/var&gt; has an exit status which is not zero. The return status is the exit status of the last command executed in &lt;var&gt;consequent-commands&lt;/var&gt;, or zero if none was executed.</source>
          <target state="translated">&lt;var&gt;test-commands&lt;/var&gt; の終了ステータスがゼロでない限り、 &lt;var&gt;consequent-commands&lt;/var&gt; を実行します。 戻りステータスは、 &lt;var&gt;consequent-commands&lt;/var&gt; で最後に実行されたコマンドの終了ステータス、または何も実行されなかった場合はゼロです。</target>
        </trans-unit>
        <trans-unit id="0768f7f48d73715d585e325d6eb196981d869406" translate="yes" xml:space="preserve">
          <source>Execute commands from &lt;var&gt;filename&lt;/var&gt; (instead of</source>
          <target state="translated">&lt;var&gt;filename&lt;/var&gt; からコマンドを実行する（代わりに</target>
        </trans-unit>
        <trans-unit id="5247ecd754ea4e202126e713baa3638f4913dc8f" translate="yes" xml:space="preserve">
          <source>Executes the command (see &lt;a href=&quot;executing-commands#Executing-Commands&quot;&gt;Executing Commands&lt;/a&gt;).</source>
          <target state="translated">コマンドを&lt;a href=&quot;executing-commands#Executing-Commands&quot;&gt;実行し&lt;/a&gt;ます（ コマンドの実行を参照）。</target>
        </trans-unit>
        <trans-unit id="2b1d72d3eae7cf1fafda5045b2256094c6e6f7b3" translate="yes" xml:space="preserve">
          <source>Executing Commands</source>
          <target state="translated">コマンドの実行</target>
        </trans-unit>
        <trans-unit id="5a48defe538322ee2f065c55807333afe2662a5c" translate="yes" xml:space="preserve">
          <source>Executing files of shell commands.</source>
          <target state="translated">シェルコマンドのファイルを実行します。</target>
        </trans-unit>
        <trans-unit id="6f147bbcdc2ea57f6c81bec669ec536b253dc54b" translate="yes" xml:space="preserve">
          <source>Exit Status</source>
          <target state="translated">終了ステータス</target>
        </trans-unit>
        <trans-unit id="ecb36345a2317b8d4a7a335bcc2c46e455a8278e" translate="yes" xml:space="preserve">
          <source>Exit a login shell, returning a status of &lt;var&gt;n&lt;/var&gt; to the shell&amp;rsquo;s parent.</source>
          <target state="translated">ログインシェルを終了し、ステータス &lt;var&gt;n&lt;/var&gt; をシェルの親に返します。</target>
        </trans-unit>
        <trans-unit id="d5d3f93533c0dd804b9ad3f7128809a490d7e229" translate="yes" xml:space="preserve">
          <source>Exit after reading and executing one command.</source>
          <target state="translated">1つのコマンドを読み込んで実行した後に終了します。</target>
        </trans-unit>
        <trans-unit id="48d4f2e17614de2f309b6ea645a4186cf19a62af" translate="yes" xml:space="preserve">
          <source>Exit from a &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, &lt;code&gt;until&lt;/code&gt;, or &lt;code&gt;select&lt;/code&gt; loop. If &lt;var&gt;n&lt;/var&gt; is supplied, the &lt;var&gt;n&lt;/var&gt;th enclosing loop is exited. &lt;var&gt;n&lt;/var&gt; must be greater than or equal to 1. The return status is zero unless &lt;var&gt;n&lt;/var&gt; is not greater than or equal to 1.</source>
          <target state="translated">&lt;code&gt;for&lt;/code&gt; 、 &lt;code&gt;while&lt;/code&gt; 、 &lt;code&gt;until&lt;/code&gt; 、または &lt;code&gt;select&lt;/code&gt; ループを終了します。 &lt;var&gt;n&lt;/var&gt; を指定すると、 &lt;var&gt;n&lt;/var&gt; 番目のループが終了します。 &lt;var&gt;n&lt;/var&gt; は1以上でなければなりません。nが1以下でなければ、戻り状況はゼロです。</target>
        </trans-unit>
        <trans-unit id="e1b67480a95632a330a58d1eec571fd65498ed85" translate="yes" xml:space="preserve">
          <source>Exit immediately if a pipeline (see &lt;a href=&quot;pipelines#Pipelines&quot;&gt;Pipelines&lt;/a&gt;), which may consist of a single simple command (see &lt;a href=&quot;simple-commands#Simple-Commands&quot;&gt;Simple Commands&lt;/a&gt;), a list (see &lt;a href=&quot;lists#Lists&quot;&gt;Lists&lt;/a&gt;), or a compound command (see &lt;a href=&quot;compound-commands#Compound-Commands&quot;&gt;Compound Commands&lt;/a&gt;) returns a non-zero status. The shell does not exit if the command that fails is part of the command list immediately following a &lt;code&gt;while&lt;/code&gt; or &lt;code&gt;until&lt;/code&gt; keyword, part of the test in an &lt;code&gt;if&lt;/code&gt; statement, part of any command executed in a &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; or &lt;code&gt;||&lt;/code&gt; list except the command following the final &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; or &lt;code&gt;||&lt;/code&gt;, any command in a pipeline but the last, or if the command&amp;rsquo;s return status is being inverted with &lt;code&gt;!&lt;/code&gt;. If a compound command other than a subshell returns a non-zero status because a command failed while</source>
          <target state="translated">単一の単純なコマンド（単純なコマンドを参照）、リスト（ &lt;a href=&quot;lists#Lists&quot;&gt;リストを&lt;/a&gt;参照）、または複合コマンド（ &lt;a href=&quot;compound-commands#Compound-Commands&quot;&gt;複合コマンドを&lt;/a&gt;参照）で構成される&lt;a href=&quot;pipelines#Pipelines&quot;&gt;パイプ&lt;/a&gt;ライン（ パイプラインを参照）がゼロ以外のステータスを返した場合、直ちに終了します。 失敗したコマンドが、 &lt;code&gt;while&lt;/code&gt; または &lt;code&gt;until&lt;/code&gt; キーワードの直後のコマンドリストの一部、 &lt;code&gt;if&lt;/code&gt; ステートメントのテストの一部、 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; または &lt;code&gt;||&lt;/code&gt; で実行されたコマンドの一部である場合、シェルは終了しません。 最後の &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; または &lt;code&gt;||&lt;/code&gt; に続くコマンドを除くリスト 、パイプライン内の最後のコマンド以外のコマンド、またはコマンドの戻りステータスが &lt;code&gt;!&lt;/code&gt; 。 サブシェル以外の複合コマンドがゼロ以外のステータスを返す場合、コマンドが</target>
        </trans-unit>
        <trans-unit id="8680a8365685143354bf24857e0e80f34974d351" translate="yes" xml:space="preserve">
          <source>Exit the shell, returning a status of &lt;var&gt;n&lt;/var&gt; to the shell&amp;rsquo;s parent. If &lt;var&gt;n&lt;/var&gt; is omitted, the exit status is that of the last command executed. Any trap on &lt;code&gt;EXIT&lt;/code&gt; is executed before the shell terminates.</source>
          <target state="translated">シェルを終了し、ステータス &lt;var&gt;n&lt;/var&gt; をシェルの親に返します。 &lt;var&gt;n&lt;/var&gt; を省略すると、終了ステータスは最後に実行されたコマンドのステータスになります。 &lt;code&gt;EXIT&lt;/code&gt; のトラップは、シェルが終了する前に実行されます。</target>
        </trans-unit>
        <trans-unit id="ae95ddb1d665affd3e5c19cac30785e429c3a007" translate="yes" xml:space="preserve">
          <source>Expand &lt;var&gt;words&lt;/var&gt; (see &lt;a href=&quot;shell-expansions#Shell-Expansions&quot;&gt;Shell Expansions&lt;/a&gt;), and execute &lt;var&gt;commands&lt;/var&gt; once for each member in the resultant list, with &lt;var&gt;name&lt;/var&gt; bound to the current member. If &amp;lsquo;</source>
          <target state="translated">&lt;var&gt;words&lt;/var&gt; &lt;a href=&quot;shell-expansions#Shell-Expansions&quot;&gt;展開し&lt;/a&gt; （「 シェル展開 」を参照）、現在のメンバーにバインドされた &lt;var&gt;name&lt;/var&gt; して、結果のリスト内のメンバーごとに1回 &lt;var&gt;commands&lt;/var&gt; を実行します 。 もし '</target>
        </trans-unit>
        <trans-unit id="01e89565aa0bd1b8f0b74bdba39c7f802d41dca9" translate="yes" xml:space="preserve">
          <source>Expand the line as the shell does. This performs alias and history expansion as well as all of the shell word expansions (see &lt;a href=&quot;shell-expansions#Shell-Expansions&quot;&gt;Shell Expansions&lt;/a&gt;).</source>
          <target state="translated">シェルと同じように行を展開します。 これは、エイリアスと履歴の展開、およびすべてのシェルワードの展開を実行します（ &lt;a href=&quot;shell-expansions#Shell-Expansions&quot;&gt;シェルの展開を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="b7c3c8adf13cebde9cc1f4c0f3582e189e275c33" translate="yes" xml:space="preserve">
          <source>Expands to the names of variables whose names begin with &lt;var&gt;prefix&lt;/var&gt;, separated by the first character of the &lt;code&gt;IFS&lt;/code&gt; special variable. When &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;IFS&lt;/code&gt; 特殊変数の最初の文字で区切られた、名前が &lt;var&gt;prefix&lt;/var&gt; で始まる変数の名前に展開されます。 いつ '</target>
        </trans-unit>
        <trans-unit id="3c66389a5a628bc379008d93de82cba08eaff6a4" translate="yes" xml:space="preserve">
          <source>Expands to the process ID of the current Bash process. This differs from &lt;code&gt;$$&lt;/code&gt; under certain circumstances, such as subshells that do not require Bash to be re-initialized. Assignments to &lt;code&gt;BASHPID&lt;/code&gt; have no effect. If &lt;code&gt;BASHPID&lt;/code&gt; is unset, it loses its special properties, even if it is subsequently reset.</source>
          <target state="translated">現在のBashプロセスのプロセスIDに展開されます。 これは、Bashを再初期化する必要のないサブシェルなど、特定の状況下では &lt;code&gt;$$&lt;/code&gt; とは異なります。 &lt;code&gt;BASHPID&lt;/code&gt; への割り当ては無効です。 &lt;code&gt;BASHPID&lt;/code&gt; が設定されていない場合、その後リセットされても、その特別なプロパティは失われます。</target>
        </trans-unit>
        <trans-unit id="eeefa260632f8ab2be737460be21e67770fcef62" translate="yes" xml:space="preserve">
          <source>Expansion errors due to references to unbound shell variables after &amp;lsquo;</source>
          <target state="translated">'の後にバインドされていないシェル変数への参照が原因の展開エラー</target>
        </trans-unit>
        <trans-unit id="0b314ffc0ff89a0dc56ea5edc34ae51d3483fc9e" translate="yes" xml:space="preserve">
          <source>Expansion is performed on the command line after it has been split into &lt;code&gt;token&lt;/code&gt;s. There are seven kinds of expansion performed:</source>
          <target state="translated">展開は、 &lt;code&gt;token&lt;/code&gt; 分割された後にコマンドラインで実行されます 。 7種類の拡張が実行されます。</target>
        </trans-unit>
        <trans-unit id="1ac4bab2194250db443120ee805398c4d2705b33" translate="yes" xml:space="preserve">
          <source>Expansion of expressions within braces.</source>
          <target state="translated">中括弧内の表現の拡張。</target>
        </trans-unit>
        <trans-unit id="573839c911bc91001ab46fcd6f821b6ad19c30b9" translate="yes" xml:space="preserve">
          <source>Expansion of the ~ character.</source>
          <target state="translated">の文字を拡張しました。</target>
        </trans-unit>
        <trans-unit id="b9110ad38100e0120a06926de56afaff922ad458" translate="yes" xml:space="preserve">
          <source>Explicit null arguments (&lt;code&gt;&quot;&quot;&lt;/code&gt; or &lt;code&gt;''&lt;/code&gt;) are retained and passed to commands as empty strings. Unquoted implicit null arguments, resulting from the expansion of parameters that have no values, are removed. If a parameter with no value is expanded within double quotes, a null argument results and is retained and passed to a command as an empty string. When a quoted null argument appears as part of a word whose expansion is non-null, the null argument is removed. That is, the word &lt;code&gt;-d''&lt;/code&gt; becomes &lt;code&gt;-d&lt;/code&gt; after word splitting and null argument removal.</source>
          <target state="translated">明示的なnull引数（ &lt;code&gt;&quot;&quot;&lt;/code&gt; または &lt;code&gt;''&lt;/code&gt; ）は保持され、空の文字列としてコマンドに渡されます。 値を持たないパラメーターの展開から生じる、引用符で囲まれていない暗黙のnull引数は削除されます。 値のないパラメーターが二重引用符で囲まれている場合、結果としてNULL引数が保持され、保持されて空の文字列としてコマンドに渡されます。 引用符付きのnull引数が展開がnullでない単語の一部として現れる場合、null引数は削除されます。 つまり、単語分割とnull引数の削除後、単語 &lt;code&gt;-d''&lt;/code&gt; は &lt;code&gt;-d&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="e3f6b5a6badea5ccf39a4dce297b467741574a93" translate="yes" xml:space="preserve">
          <source>Expressions may be combined using the following operators, listed in decreasing order of precedence. The evaluation depends on the number of arguments; see below. Operator precedence is used when there are five or more arguments.</source>
          <target state="translated">式は以下の演算子を使用して結合することができます。評価は引数の数に依存します。演算子の優先順位は、引数が5つ以上ある場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="e338a97d4b0f0eac5ea1317fd365eb51cf4c99f5" translate="yes" xml:space="preserve">
          <source>Expressions may be combined using the following operators, listed in decreasing order of precedence:</source>
          <target state="translated">式は、以下の演算子を使用して結合することができます。</target>
        </trans-unit>
        <trans-unit id="21ca86863c85d11e4ca9e426df3df65eec06873a" translate="yes" xml:space="preserve">
          <source>Expressions may be unary or binary, and are formed from the following primaries. Unary expressions are often used to examine the status of a file. There are string operators and numeric comparison operators as well. Bash handles several filenames specially when they are used in expressions. If the operating system on which Bash is running provides these special files, Bash will use them; otherwise it will emulate them internally with this behavior: If the &lt;var&gt;file&lt;/var&gt; argument to one of the primaries is of the form</source>
          <target state="translated">式は単項または二項であり、次の原色から形成されます。 単項式は、ファイルのステータスを調べるためによく使用されます。 文字列演算子と数値比較演算子もあります。 Bashは、式で使用される場合、いくつかのファイル名を特別に処理します。 Bashが実行されているオペレーティングシステムがこれらの特殊ファイルを提供する場合、Bashはそれらを使用します。 それ以外の場合は、この動作で内部的にエミュレートし &lt;var&gt;file&lt;/var&gt; プライマリの1つのファイル引数が次の形式の場合</target>
        </trans-unit>
        <trans-unit id="e69f20e9f683920d3fb4329abd951e878b1f9372" translate="yes" xml:space="preserve">
          <source>F</source>
          <target state="translated">F</target>
        </trans-unit>
        <trans-unit id="9cc2370fcd9fe50317c29d91261a3416a1d00e72" translate="yes" xml:space="preserve">
          <source>FCEDIT</source>
          <target state="translated">FCEDIT</target>
        </trans-unit>
        <trans-unit id="4c71702721868782e12ff8ba7da961bd8786d5de" translate="yes" xml:space="preserve">
          <source>FIGNORE</source>
          <target state="translated">FIGNORE</target>
        </trans-unit>
        <trans-unit id="8b479d553d65e5451531188f34d9e74f00f8c92a" translate="yes" xml:space="preserve">
          <source>FUNCNAME</source>
          <target state="translated">FUNCNAME</target>
        </trans-unit>
        <trans-unit id="25f8234a9809818389cdbbbe221e27b8f5229b65" translate="yes" xml:space="preserve">
          <source>FUNCNEST</source>
          <target state="translated">FUNCNEST</target>
        </trans-unit>
        <trans-unit id="01d518fcb352228f88b2aaae230c46aebb3e8747" translate="yes" xml:space="preserve">
          <source>FUTURE REVISIONS OF THIS LICENSE</source>
          <target state="translated">今後の本ライセンスの改訂</target>
        </trans-unit>
        <trans-unit id="bc68cabfbfc112b9e52c75611ef91f892f0222be" translate="yes" xml:space="preserve">
          <source>Features found only in Bash.</source>
          <target state="translated">Bashにしかない機能。</target>
        </trans-unit>
        <trans-unit id="fe7ee2460c006b9bc9c729f0f939fa08ac7c8a62" translate="yes" xml:space="preserve">
          <source>File descriptor 0 is duplicated.</source>
          <target state="translated">ファイルディスクリプター0が重複しています。</target>
        </trans-unit>
        <trans-unit id="6e8963551cab1ada2bcfb4d478960f55e196b5c5" translate="yes" xml:space="preserve">
          <source>File descriptor 1 is duplicated.</source>
          <target state="translated">ファイルディスクリプター1が重複しています。</target>
        </trans-unit>
        <trans-unit id="2d2669fb224bcb2badbb005c1228f5596da7525d" translate="yes" xml:space="preserve">
          <source>File descriptor 2 is duplicated.</source>
          <target state="translated">ファイルディスクリプター2が重複しています。</target>
        </trans-unit>
        <trans-unit id="97ac467ead939914256511ca5ef9560952949b65" translate="yes" xml:space="preserve">
          <source>File names. May also be specified as</source>
          <target state="translated">ファイル名。として指定することもできます。</target>
        </trans-unit>
        <trans-unit id="b89c3e388470fc18eba45be427abbeefb68e2ec2" translate="yes" xml:space="preserve">
          <source>Filename Expansion</source>
          <target state="translated">ファイル名展開</target>
        </trans-unit>
        <trans-unit id="f8c77a3481d496a18d74ab5a952f281934bd67b0" translate="yes" xml:space="preserve">
          <source>Finally, Parallel can be used to run a sequence of shell commands in parallel, similar to &amp;lsquo;</source>
          <target state="translated">最後に、Parallelを使用して、シェルコマンドのシーケンスを並列に実行できます。</target>
        </trans-unit>
        <trans-unit id="8d675708a166f30cb09377438921d0e17b8b674a" translate="yes" xml:space="preserve">
          <source>Finally, any prefix and suffix specified with the</source>
          <target state="translated">最後に</target>
        </trans-unit>
        <trans-unit id="2d57771befe6e7f83eed8620aa1d0198dbf19dc2" translate="yes" xml:space="preserve">
          <source>First, the actions specified by the compspec are used. Only matches which are prefixed by the word being completed are returned. When the</source>
          <target state="translated">まず、compspecで指定されたアクションが使用されます。完了した単語の前にマッチしたものだけが返されます。その際に</target>
        </trans-unit>
        <trans-unit id="6633e2e0caf5fa978444e9320465d62816fc7b0c" translate="yes" xml:space="preserve">
          <source>First, the arithmetic expression &lt;var&gt;expr1&lt;/var&gt; is evaluated according to the rules described below (see &lt;a href=&quot;shell-arithmetic#Shell-Arithmetic&quot;&gt;Shell Arithmetic&lt;/a&gt;). The arithmetic expression &lt;var&gt;expr2&lt;/var&gt; is then evaluated repeatedly until it evaluates to zero. Each time &lt;var&gt;expr2&lt;/var&gt; evaluates to a non-zero value, &lt;var&gt;commands&lt;/var&gt; are executed and the arithmetic expression &lt;var&gt;expr3&lt;/var&gt; is evaluated. If any expression is omitted, it behaves as if it evaluates to 1. The return value is the exit status of the last command in &lt;var&gt;commands&lt;/var&gt; that is executed, or false if any of the expressions is invalid.</source>
          <target state="translated">最初に、算術式 &lt;var&gt;expr1&lt;/var&gt; は、以下に説明する規則に従って評価されます（ &lt;a href=&quot;shell-arithmetic#Shell-Arithmetic&quot;&gt;シェル演算を&lt;/a&gt;参照）。 算術式 &lt;var&gt;expr2&lt;/var&gt; は、評価がゼロになるまで繰り返し評価されます。 &lt;var&gt;expr2&lt;/var&gt; がゼロ以外の値に評価されるたびに、 &lt;var&gt;commands&lt;/var&gt; が実行され、算術式 &lt;var&gt;expr3&lt;/var&gt; が評価されます。 式が省略された場合、1と評価されたかのように動作します。戻り値は、実行された &lt;var&gt;commands&lt;/var&gt; の最後のコマンドの終了ステータス、または式のいずれかが無効な場合はfalseです。</target>
        </trans-unit>
        <trans-unit id="3910b9b885a8514ff80f83efddbc51c57949c732" translate="yes" xml:space="preserve">
          <source>First, the command name is identified. If a compspec has been defined for that command, the compspec is used to generate the list of possible completions for the word. If the command word is the empty string (completion attempted at the beginning of an empty line), any compspec defined with the</source>
          <target state="translated">まず、コマンド名が特定されます。そのコマンドに対してcompspecが定義されている場合、そのcompspecを使ってそのワードの補完可能なリストを生成します。コマンドの単語が空の文字列(空の行の先頭で補完が試みられる)であれば、その単語に対して</target>
        </trans-unit>
        <trans-unit id="3df8d48a78e473a88e082ff72f98eb7a4d6617d3" translate="yes" xml:space="preserve">
          <source>For a complete description, refer to the GNU Parallel documentation. A few examples should provide a brief introduction to its use.</source>
          <target state="translated">完全な説明はGNU Parallelのドキュメントを参照してください。いくつかの例で、その使用法を簡単に紹介します。</target>
        </trans-unit>
        <trans-unit id="821543598f885cdefc1bae15a68128743485ea4e" translate="yes" xml:space="preserve">
          <source>For almost every purpose, shell functions are preferred over aliases.</source>
          <target state="translated">ほとんどすべての目的のために、エイリアスよりもシェル関数の方が好まれます。</target>
        </trans-unit>
        <trans-unit id="31ea4cd505220cf7dc65cbd234d0346175138c04" translate="yes" xml:space="preserve">
          <source>For any section Entitled &amp;ldquo;Acknowledgements&amp;rdquo; or &amp;ldquo;Dedications&amp;rdquo;, Preserve the Title of the section, and preserve in the section all the substance and tone of each of the contributor acknowledgements and/or dedications given therein.</source>
          <target state="translated">「謝辞」または「献身」と題されたセクションについては、セクションのタイトルを保持し、そのセクションに提供された各貢献者の謝辞および/または献身のすべての内容および調子をセクションに保存します。</target>
        </trans-unit>
        <trans-unit id="700d2c8c8405332c3586f73a8c63632399d9b6d6" translate="yes" xml:space="preserve">
          <source>For each &lt;var&gt;name&lt;/var&gt;, indicate how it would be interpreted if used as a command name.</source>
          <target state="translated">&lt;var&gt;name&lt;/var&gt; ごとに、コマンド名として使用した場合にどのように解釈されるかを示します。</target>
        </trans-unit>
        <trans-unit id="af37e6fbbfbbcac7ffe32d937e4c6af958fa64b4" translate="yes" xml:space="preserve">
          <source>For each argument, a local variable named &lt;var&gt;name&lt;/var&gt; is created, and assigned &lt;var&gt;value&lt;/var&gt;. The &lt;var&gt;option&lt;/var&gt; can be any of the options accepted by &lt;code&gt;declare&lt;/code&gt;. &lt;code&gt;local&lt;/code&gt; can only be used within a function; it makes the variable &lt;var&gt;name&lt;/var&gt; have a visible scope restricted to that function and its children. If &lt;var&gt;name&lt;/var&gt; is &amp;lsquo;</source>
          <target state="translated">引数ごとに、 &lt;var&gt;name&lt;/var&gt; という名前のローカル変数が作成され、 &lt;var&gt;value&lt;/var&gt; が割り当てられます 。 オプションは、 &lt;code&gt;declare&lt;/code&gt; が受け入れる任意の &lt;var&gt;option&lt;/var&gt; することができます。 &lt;code&gt;local&lt;/code&gt; は関数内でのみ使用できます。 変数 &lt;var&gt;name&lt;/var&gt; に、その関数とその子に制限された可視スコープを持たせます。 &lt;var&gt;name&lt;/var&gt; が '</target>
        </trans-unit>
        <trans-unit id="6db6725e9e7d5c088630e348048d1e73fc7657d3" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="4d42487498c37e54e1153f378c44e641eeda4bc8" translate="yes" xml:space="preserve">
          <source>For example, if</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="ee147ac90812d13353d84ebd3346013384640894" translate="yes" xml:space="preserve">
          <source>For example, if a variable &lt;var&gt;var&lt;/var&gt; is declared as local in function &lt;var&gt;func1&lt;/var&gt;, and &lt;var&gt;func1&lt;/var&gt; calls another function &lt;var&gt;func2&lt;/var&gt;, references to &lt;var&gt;var&lt;/var&gt; made from within &lt;var&gt;func2&lt;/var&gt; will resolve to the local variable &lt;var&gt;var&lt;/var&gt; from &lt;var&gt;func1&lt;/var&gt;, shadowing any global variable named &lt;var&gt;var&lt;/var&gt;.</source>
          <target state="translated">たとえば、変数 &lt;var&gt;var&lt;/var&gt; が関数 &lt;var&gt;func1&lt;/var&gt; でローカルとして宣言されており、 &lt;var&gt;func1&lt;/var&gt; が別の関数 &lt;var&gt;func2&lt;/var&gt; を呼び出す場合 、 &lt;var&gt;func2&lt;/var&gt; 内から作成された &lt;var&gt;var&lt;/var&gt; への参照は、 &lt;var&gt;func1&lt;/var&gt; からローカル変数 &lt;var&gt;var&lt;/var&gt; に解決され、 varという名前のグローバル変数をシャドウします。</target>
        </trans-unit>
        <trans-unit id="ec4a58e34a67613579e3965238cc9042ea21fd77" translate="yes" xml:space="preserve">
          <source>For example, in the default C locale, &amp;lsquo;</source>
          <target state="translated">たとえば、デフォルトのCロケールでは、 '</target>
        </trans-unit>
        <trans-unit id="1b936fbe728022a646cda07e1ff2263d62ff893c" translate="yes" xml:space="preserve">
          <source>For example, it is easy to replace &lt;code&gt;xargs&lt;/code&gt; to gzip all html files in the current directory and its subdirectories:</source>
          <target state="translated">たとえば、 &lt;code&gt;xargs&lt;/code&gt; を現在のディレクトリとそのサブディレクトリにあるすべてのhtmlファイルをgzipに置き換えるのは簡単です。</target>
        </trans-unit>
        <trans-unit id="5f0a9b7bb1ae50175807be5f1d4f1df0bdba4cd2" translate="yes" xml:space="preserve">
          <source>For example, the following will match a line (stored in the shell variable &lt;var&gt;line&lt;/var&gt;) if there is a sequence of characters in the value consisting of any number, including zero, of space characters, zero or one instances of &amp;lsquo;</source>
          <target state="translated">たとえば、次の行は、ゼロを含む任意の数字、空白文字、0または1つの 'のインスタンスで構成される値に文字のシーケンスがある場合、（シェル変数 &lt;var&gt;line&lt;/var&gt; に格納されている）行と一致します。</target>
        </trans-unit>
        <trans-unit id="f0c62e669f41bf783284d8c6ac18be626ff41b56" translate="yes" xml:space="preserve">
          <source>For historical reasons, the &lt;small&gt;POSIX&lt;/small&gt; standard has classified several builtin commands as &lt;em&gt;special&lt;/em&gt;. When Bash is executing in &lt;small&gt;POSIX&lt;/small&gt; mode, the special builtins differ from other builtin commands in three respects:</source>
          <target state="translated">歴史的な理由により、 &lt;small&gt;POSIX&lt;/small&gt;標準はいくつかの組み込みコマンドを&lt;em&gt;特別なもの&lt;/em&gt;として分類しています。 Bashが&lt;small&gt;POSIX&lt;/small&gt;モードで実行されている場合、特別な組み込みコマンドは、次の3つの点で他の組み込みコマンドと異なります。</target>
        </trans-unit>
        <trans-unit id="3a1b9e9cc3d61418a49a71efef24c922a8fb54b3" translate="yes" xml:space="preserve">
          <source>For instance, assuming that there is a library of compspecs, each kept in a file corresponding to the name of the command, the following default completion function would load completions dynamically:</source>
          <target state="translated">例えば、コマンド名に対応するファイルに保存されているcompspecsのライブラリがあると仮定すると、以下のデフォルトの補完関数は、動的に補完をロードします。</target>
        </trans-unit>
        <trans-unit id="784d40d018fd5cad5221ec4e8f15af75cc3d75b4" translate="yes" xml:space="preserve">
          <source>For the shell&amp;rsquo;s purposes, a command which exits with a zero exit status has succeeded. A non-zero exit status indicates failure. This seemingly counter-intuitive scheme is used so there is one well-defined way to indicate success and a variety of ways to indicate various failure modes. When a command terminates on a fatal signal whose number is &lt;var&gt;N&lt;/var&gt;, Bash uses the value 128+&lt;var&gt;N&lt;/var&gt; as the exit status.</source>
          <target state="translated">シェルの目的のために、ゼロの終了ステータスで終了するコマンドは成功しました。 ゼロ以外の終了ステータスは、失敗を示します。 この一見反直感的なスキームが使用されているため、成功を示す明確に定義された1つの方法と、さまざまな失敗モードを示すさまざまな方法があります。 コマンドが番号が &lt;var&gt;N&lt;/var&gt; の致命的な信号で終了すると、Bashは終了ステータスとして値128+ &lt;var&gt;N&lt;/var&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="6360d0a5f78a80fd2c3b1455015f95ff24d49d46" translate="yes" xml:space="preserve">
          <source>Force the shell to run interactively. Interactive shells are described in &lt;a href=&quot;interactive-shells#Interactive-Shells&quot;&gt;Interactive Shells&lt;/a&gt;.</source>
          <target state="translated">シェルをインタラクティブに実行します。 インタラクティブシェルについては、 &lt;a href=&quot;interactive-shells#Interactive-Shells&quot;&gt;インタラクティブシェルで&lt;/a&gt;説明しています。</target>
        </trans-unit>
        <trans-unit id="50ec7604326dea76b8e89b9d6e7d98debb6b11f5" translate="yes" xml:space="preserve">
          <source>Function Index</source>
          <target state="translated">関数インデックス</target>
        </trans-unit>
        <trans-unit id="dd98fb172ddca2b4583bc0e0f0f1aacefb23c698" translate="yes" xml:space="preserve">
          <source>Function Key 1</source>
          <target state="translated">ファンクションキー1</target>
        </trans-unit>
        <trans-unit id="e1e4211f19a459bd591302cbd0a9d22886846a83" translate="yes" xml:space="preserve">
          <source>Function names and definitions may be listed with the</source>
          <target state="translated">関数名と定義は</target>
        </trans-unit>
        <trans-unit id="40d4d818f943e148d8fd7a8459c1099ae6979a20" translate="yes" xml:space="preserve">
          <source>Function names may not be the same as one of the &lt;small&gt;POSIX&lt;/small&gt; special builtins.</source>
          <target state="translated">関数名は、 &lt;small&gt;POSIX&lt;/small&gt;特殊組み込み関数の1つと同じではない場合があります。</target>
        </trans-unit>
        <trans-unit id="b2e1454a918213c05308895ef589284ac6291134" translate="yes" xml:space="preserve">
          <source>Function names must be valid shell &lt;code&gt;name&lt;/code&gt;s. That is, they may not contain characters other than letters, digits, and underscores, and may not start with a digit. Declaring a function with an invalid name causes a fatal syntax error in non-interactive shells.</source>
          <target state="translated">関数名は有効なシェル名でなければなりません。 つまり、文字、数字、アンダースコア以外の文字を含めることはできず、数字で始めることはできません。 無効な名前で関数を宣言すると、非対話型シェルで致命的な構文エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="9389dc80de92f750ba90e9f50496baed221c08e9" translate="yes" xml:space="preserve">
          <source>Function tracing is enabled: command substitution, shell functions, and subshells invoked with &lt;code&gt;( &lt;var&gt;command&lt;/var&gt; )&lt;/code&gt; inherit the &lt;code&gt;DEBUG&lt;/code&gt; and &lt;code&gt;RETURN&lt;/code&gt; traps.</source>
          <target state="translated">関数トレースが有効になっています。コマンド置換、シェル関数、および &lt;code&gt;( &lt;var&gt;command&lt;/var&gt; )&lt;/code&gt; 呼び出されたサブシェルは、 &lt;code&gt;DEBUG&lt;/code&gt; および &lt;code&gt;RETURN&lt;/code&gt; トラップを継承します。</target>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="b35666c449bc6a2c93c99818621b519d66fc564c" translate="yes" xml:space="preserve">
          <source>Functions are declared using this syntax:</source>
          <target state="translated">関数はこの構文を使用して宣言されます。</target>
        </trans-unit>
        <trans-unit id="7dba2b9985060c118805c0e646c421556a5e13db" translate="yes" xml:space="preserve">
          <source>Functions may be recursive. The &lt;code&gt;FUNCNEST&lt;/code&gt; variable may be used to limit the depth of the function call stack and restrict the number of function invocations. By default, no limit is placed on the number of recursive calls.</source>
          <target state="translated">関数は再帰的です。 &lt;code&gt;FUNCNEST&lt;/code&gt; 変数を使用して、関数呼び出しスタックの深さを制限し、関数呼び出しの数を制限できます。 デフォルトでは、再帰呼び出しの数に制限はありません。</target>
        </trans-unit>
        <trans-unit id="a36a6718f54524d846894fb04b5b885b4e43e63b" translate="yes" xml:space="preserve">
          <source>G</source>
          <target state="translated">G</target>
        </trans-unit>
        <trans-unit id="a888ad6cdff70dc1f30a46fbbf113db3b826181f" translate="yes" xml:space="preserve">
          <source>GLOBIGNORE</source>
          <target state="translated">GLOBIGNORE</target>
        </trans-unit>
        <trans-unit id="0e4ec8a54cfff9c2845fa38842cb6cd1bdea197d" translate="yes" xml:space="preserve">
          <source>GNU Free Documentation License</source>
          <target state="translated">GNU自由文書ライセンス</target>
        </trans-unit>
        <trans-unit id="f21ecd5fdbaaca4a9b6ad407e43e4a149da7aa62" translate="yes" xml:space="preserve">
          <source>GNU Parallel</source>
          <target state="translated">GNUパラレル</target>
        </trans-unit>
        <trans-unit id="572b5de1c4916bb0d6d9a63d28c4c31651f40945" translate="yes" xml:space="preserve">
          <source>GNU Parallel can replace certain common idioms that operate on lines read from a file (in this case, filenames listed one per line):</source>
          <target state="translated">GNUパラレルは、ファイルから読み込んだ行で動作するある種の一般的なイディオムを置き換えることができます(この場合、1行に1つずつ記載されているファイル名)。</target>
        </trans-unit>
        <trans-unit id="9920f873877a2c00d43ce366e00fcc4a026c2a0f" translate="yes" xml:space="preserve">
          <source>GNU Parallel, as its name suggests, can be used to build and run commands in parallel. You may run the same command with different arguments, whether they are filenames, usernames, hostnames, or lines read from files. GNU Parallel provides shorthand references to many of the most common operations (input lines, various portions of the input line, different ways to specify the input source, and so on). Parallel can replace &lt;code&gt;xargs&lt;/code&gt; or feed commands from its input sources to several different instances of Bash.</source>
          <target state="translated">GNU Parallelは、その名前が示すように、コマンドのビルドと並列実行に使用できます。 ファイル名、ユーザー名、ホスト名、ファイルから読み取った行など、同じコマンドを異なる引数で実行できます。 GNU Parallelは、最も一般的な操作の多く（入力行、入力行のさまざまな部分、入力ソースを指定するためのさまざまな方法など）の省略形のリファレンスを提供します。 Parallelは、 &lt;code&gt;xargs&lt;/code&gt; またはフィードコマンドを、その入力ソースからBashのいくつかの異なるインスタンスに置き換えることができます。</target>
        </trans-unit>
        <trans-unit id="1f8969d436579977f5b13e27e290ffdb25736672" translate="yes" xml:space="preserve">
          <source>GROUPS</source>
          <target state="translated">GROUPS</target>
        </trans-unit>
        <trans-unit id="1dbeaadcfa2f14613d9d91d2caac209a10086e09" translate="yes" xml:space="preserve">
          <source>General index for concepts described in this manual.</source>
          <target state="translated">このマニュアルで説明されている概念の一般的な索引。</target>
        </trans-unit>
        <trans-unit id="ffb502eed96b0e0d1fc435a5f6ebe2ec48930a05" translate="yes" xml:space="preserve">
          <source>Generate possible completion matches for &lt;var&gt;word&lt;/var&gt; according to the &lt;var&gt;option&lt;/var&gt;s, which may be any option accepted by the &lt;code&gt;complete&lt;/code&gt; builtin with the exception of</source>
          <target state="translated">&lt;var&gt;option&lt;/var&gt; sに従って &lt;var&gt;word&lt;/var&gt; 可能な完全一致を生成します 。これは、次の例外を除いて、 &lt;code&gt;complete&lt;/code&gt; 組み込みコマンドで受け入れられる任意のオプションです。</target>
        </trans-unit>
        <trans-unit id="fd70f263257984118ab228639692bdd13569f0b2" translate="yes" xml:space="preserve">
          <source>Getting Readline to do the typing for you.</source>
          <target state="translated">Readlineにタイピングをしてもらう。</target>
        </trans-unit>
        <trans-unit id="cba4bc90f5a1d0269ef8cbd9482887f10f77f42c" translate="yes" xml:space="preserve">
          <source>Getting at previous lines.</source>
          <target state="translated">前のセリフを取りに行くこと。</target>
        </trans-unit>
        <trans-unit id="99323b8804e03c3a5a84c311342b577caf41b7ed" translate="yes" xml:space="preserve">
          <source>Give each &lt;var&gt;name&lt;/var&gt; the &lt;code&gt;trace&lt;/code&gt; attribute. Traced functions inherit the &lt;code&gt;DEBUG&lt;/code&gt; and &lt;code&gt;RETURN&lt;/code&gt; traps from the calling shell. The trace attribute has no special meaning for variables.</source>
          <target state="translated">それぞれの &lt;var&gt;name&lt;/var&gt; に &lt;code&gt;trace&lt;/code&gt; 属性を付けます。 トレースされた関数は、呼び出し元のシェルから &lt;code&gt;DEBUG&lt;/code&gt; および &lt;code&gt;RETURN&lt;/code&gt; トラップを継承します。 trace属性は、変数に対して特別な意味を持ちません。</target>
        </trans-unit>
        <trans-unit id="eb56493b275ff2bb5b3cd590e09d93ad07e98047" translate="yes" xml:space="preserve">
          <source>Give each &lt;var&gt;name&lt;/var&gt; the &lt;var&gt;nameref&lt;/var&gt; attribute, making it a name reference to another variable. That other variable is defined by the value of &lt;var&gt;name&lt;/var&gt;. All references, assignments, and attribute modifications to &lt;var&gt;name&lt;/var&gt;, except for those using or changing the</source>
          <target state="translated">各 &lt;var&gt;name&lt;/var&gt; に &lt;var&gt;nameref&lt;/var&gt; 属性を付け、別の変数への名前参照にします。 その他の変数は &lt;var&gt;name&lt;/var&gt; の値によって定義されます。 &lt;var&gt;name&lt;/var&gt; へのすべての参照、割り当て、および属性の変更。ただし、</target>
        </trans-unit>
        <trans-unit id="20a5f73e86c8343b4b8a010a3e2038de94656587" translate="yes" xml:space="preserve">
          <source>Giving numeric arguments to commands.</source>
          <target state="translated">コマンドに数値引数を与える。</target>
        </trans-unit>
        <trans-unit id="099b74dac0cc412b3ed58c7cd5d5cceb9d23de2d" translate="yes" xml:space="preserve">
          <source>Group names. May also be specified as</source>
          <target state="translated">グループ名。として指定することもできます。</target>
        </trans-unit>
        <trans-unit id="36f92be4931e1adae5787fc625a3cf5e4c6d164a" translate="yes" xml:space="preserve">
          <source>Grouping Commands</source>
          <target state="translated">グループ化コマンド</target>
        </trans-unit>
        <trans-unit id="e8542359d131fc7210e38dfd60c72ef251889b55" translate="yes" xml:space="preserve">
          <source>Grouping commands by name.</source>
          <target state="translated">コマンドを名前でグループ化します。</target>
        </trans-unit>
        <trans-unit id="7cf184f4c67ad58283ecb19349720b0cae756829" translate="yes" xml:space="preserve">
          <source>H</source>
          <target state="translated">H</target>
        </trans-unit>
        <trans-unit id="40035b243fdc233025240891a44958da3b2edec9" translate="yes" xml:space="preserve">
          <source>HISTCMD</source>
          <target state="translated">HISTCMD</target>
        </trans-unit>
        <trans-unit id="b7fac907bfab2ab04db3bd76ad971d9c4228c588" translate="yes" xml:space="preserve">
          <source>HISTCONTROL</source>
          <target state="translated">HISTCONTROL</target>
        </trans-unit>
        <trans-unit id="8e59fc15e81bac6fbab38a312fb456c9970ee8ba" translate="yes" xml:space="preserve">
          <source>HISTFILE</source>
          <target state="translated">HISTFILE</target>
        </trans-unit>
        <trans-unit id="c0d1d2dc1c50c7ba70070c7b23d99342c1b919d4" translate="yes" xml:space="preserve">
          <source>HISTFILESIZE</source>
          <target state="translated">HISTFILESIZE</target>
        </trans-unit>
        <trans-unit id="b51ce5648e46354b5c84993c2e306ae8bbeb5b2b" translate="yes" xml:space="preserve">
          <source>HISTIGNORE</source>
          <target state="translated">HISTIGNORE</target>
        </trans-unit>
        <trans-unit id="6b3f3d17fc0c66fab7e4a26b67bf4c39d3118069" translate="yes" xml:space="preserve">
          <source>HISTSIZE</source>
          <target state="translated">HISTSIZE</target>
        </trans-unit>
        <trans-unit id="2a676d1b09daf5a7b2203fad03bc458b85438768" translate="yes" xml:space="preserve">
          <source>HISTTIMEFORMAT</source>
          <target state="translated">HISTTIMEFORMAT</target>
        </trans-unit>
        <trans-unit id="7731962fb19e09fff22c1be46abc4b02e9ff78eb" translate="yes" xml:space="preserve">
          <source>HOME</source>
          <target state="translated">HOME</target>
        </trans-unit>
        <trans-unit id="932e94343649a8891b99873911ca26d27cacf4f8" translate="yes" xml:space="preserve">
          <source>HOSTFILE</source>
          <target state="translated">HOSTFILE</target>
        </trans-unit>
        <trans-unit id="004663fef125f9479bf2ef658060b8d9bc34c7f1" translate="yes" xml:space="preserve">
          <source>HOSTNAME</source>
          <target state="translated">HOSTNAME</target>
        </trans-unit>
        <trans-unit id="fcb8906ef06cc4fbe423829dcb64ea818b193304" translate="yes" xml:space="preserve">
          <source>HOSTTYPE</source>
          <target state="translated">HOSTTYPE</target>
        </trans-unit>
        <trans-unit id="9f738ce8457f291b18ee47e665e96baa84f38fcd" translate="yes" xml:space="preserve">
          <source>HTML</source>
          <target state="translated">HTML</target>
        </trans-unit>
        <trans-unit id="37b4ed15dab727027485455d935c87fc79eed0a6" translate="yes" xml:space="preserve">
          <source>Help topics as accepted by the &lt;code&gt;help&lt;/code&gt; builtin (see &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt;).</source>
          <target state="translated">ヘルプビルトインで受け入れられるヘルプトピック（ &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bashビルトインを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="46d757ece3ee04110da0daaafd3fb3fe6a92eb57" translate="yes" xml:space="preserve">
          <source>Here are some examples illustrating substring expansion on parameters and subscripted arrays:</source>
          <target state="translated">ここでは、パラメータと添え字付き配列での部分文字列展開の例を示します。</target>
        </trans-unit>
        <trans-unit id="ed952c00f5cb59401032439885a8d022eb6a90b5" translate="yes" xml:space="preserve">
          <source>Here are the word designators:</source>
          <target state="translated">ここでは、言葉の指定子を紹介します。</target>
        </trans-unit>
        <trans-unit id="d6d52f9730a70d6e1c33fd5620375a435833e36e" translate="yes" xml:space="preserve">
          <source>Here is a complete list of the</source>
          <target state="translated">以下、完全なリストです。</target>
        </trans-unit>
        <trans-unit id="697bff6a62f6ddad9affd3c23f639d1a0e233a52" translate="yes" xml:space="preserve">
          <source>Here is an example of an &lt;var&gt;inputrc&lt;/var&gt; file. This illustrates key binding, variable assignment, and conditional syntax.</source>
          <target state="translated">以下は &lt;var&gt;inputrc&lt;/var&gt; ファイルの例です。 これは、キーバインディング、変数の割り当て、および条件付き構文を示しています。</target>
        </trans-unit>
        <trans-unit id="600278c68a7feb1a868a5ec74472bbcd6428595c" translate="yes" xml:space="preserve">
          <source>Here is an example that allows the user to pick a filename from the current directory, and displays the name and index of the file selected.</source>
          <target state="translated">ここでは、ユーザがカレントディレクトリからファイル名を選択し、選択したファイルの名前とインデックスを表示する例を示します。</target>
        </trans-unit>
        <trans-unit id="3816b46b9f531dbceabf9e71cca67437b8984275" translate="yes" xml:space="preserve">
          <source>Here is an example using &lt;code&gt;case&lt;/code&gt; in a script that could be used to describe one interesting feature of an animal:</source>
          <target state="translated">これは、動物の興味深い特徴の1つを説明するために使用できるスクリプトの使用例です。</target>
        </trans-unit>
        <trans-unit id="c0f3fbd7c5047f1575528bc673d7f9ffb5c67b78" translate="yes" xml:space="preserve">
          <source>Here is how to &lt;em&gt;yank&lt;/em&gt; the text back into the line. Yanking means to copy the most-recently-killed text from the kill buffer.</source>
          <target state="translated">テキストを行に&lt;em&gt;ヤンク&lt;/em&gt;する方法は次の&lt;em&gt;とおり&lt;/em&gt;です。 ヤンキングとは、最後にキルされたテキストをキルバッファからコピーすることです。</target>
        </trans-unit>
        <trans-unit id="abf00be55adf0eb5ff38d028f70ddf95e8082dc8" translate="yes" xml:space="preserve">
          <source>Here is the list of commands for killing text.</source>
          <target state="translated">テキストを殺すためのコマンド一覧です。</target>
        </trans-unit>
        <trans-unit id="c63fcb4d2eeb09ef32194f4d724f16d0dad22d86" translate="yes" xml:space="preserve">
          <source>Here, for example, is how to change from the default Emacs-like key binding to use &lt;code&gt;vi&lt;/code&gt; line editing commands:</source>
          <target state="translated">たとえば、ここでは、デフォルトのEmacsのようなキーバインディングから &lt;code&gt;vi&lt;/code&gt; 行編集コマンドを使用するように変更する方法を示します。</target>
        </trans-unit>
        <trans-unit id="563affddaa469d3c15210019ffdd8fdc943e789b" translate="yes" xml:space="preserve">
          <source>History Expansion</source>
          <target state="translated">歴史の展開</target>
        </trans-unit>
        <trans-unit id="012f57901bb9d5819c769fd3ba3f1634febf1ab7" translate="yes" xml:space="preserve">
          <source>History Interaction</source>
          <target state="translated">歴史の相互作用</target>
        </trans-unit>
        <trans-unit id="64f467b3669480337cc7db5e5946619f71ced84f" translate="yes" xml:space="preserve">
          <source>History expansion implements shell-like quoting conventions: a backslash can be used to remove the special handling for the next character; single quotes enclose verbatim sequences of characters, and can be used to inhibit history expansion; and characters enclosed within double quotes may be subject to history expansion, since backslash can escape the history expansion character, but single quotes may not, since they are not treated specially within double quotes.</source>
          <target state="translated">また、二重引用符で囲まれた文字は履歴拡張の対象となりますが、バックスラッシュは履歴拡張文字をエスケープすることができるため、二重引用符では特別な扱いを受けないため、二重引用符で囲まれた文字は履歴拡張の対象とはなりません。</target>
        </trans-unit>
        <trans-unit id="9b8069afd6f62815c142b182ee4a99d1754f61a1" translate="yes" xml:space="preserve">
          <source>History expansion is performed immediately after a complete line is read, before the shell breaks it into words, and is performed on each line individually. Bash attempts to inform the history expansion functions about quoting still in effect from previous lines.</source>
          <target state="translated">履歴展開は完全な行が読み込まれた直後、シェルが単語に分割する前に実行され、各行に対して個別に実行されます。Bash は前の行からの引用がまだ有効であることを履歴拡張機能に知らせようとします。</target>
        </trans-unit>
        <trans-unit id="3381af67492132d2a4caf0479daa928e8f33a833" translate="yes" xml:space="preserve">
          <source>History expansion takes place in two parts. The first is to determine which line from the history list should be used during substitution. The second is to select portions of that line for inclusion into the current one. The line selected from the history is called the &lt;em&gt;event&lt;/em&gt;, and the portions of that line that are acted upon are called &lt;em&gt;words&lt;/em&gt;. Various &lt;em&gt;modifiers&lt;/em&gt; are available to manipulate the selected words. The line is broken into words in the same fashion that Bash does, so that several words surrounded by quotes are considered one word. History expansions are introduced by the appearance of the history expansion character, which is &amp;lsquo;</source>
          <target state="translated">履歴の拡張は2つの部分で行われます。 1つ目は、置換時に履歴リストのどの行を使用するかを決定することです。 2つ目は、現在の行に含めるためにその行の一部を選択することです。 履歴から選択された行は&lt;em&gt;イベント&lt;/em&gt;と呼ばれ、その行の作用する部分は&lt;em&gt;単語&lt;/em&gt;と呼ばれ&lt;em&gt;ます&lt;/em&gt; 。 選択した単語を操作するために、さまざまな&lt;em&gt;修飾子&lt;/em&gt;を使用できます。 行はBashと同じ方法で単語に分割されるため、引用符で囲まれたいくつかの単語は1つの単語と見なされます。 歴史の拡大は、歴史の拡大の登場人物である登場人物、</target>
        </trans-unit>
        <trans-unit id="514e980bb78844737b79059ed05eea92bb3d5c9f" translate="yes" xml:space="preserve">
          <source>History expansions introduce words from the history list into the input stream, making it easy to repeat commands, insert the arguments to a previous command into the current input line, or fix errors in previous commands quickly.</source>
          <target state="translated">ヒストリー拡張は、ヒストリーリストの単語を入力ストリームに導入し、コマンドを繰り返したり、前のコマンドの引数を現在の入力行に挿入したり、前のコマンドのエラーを素早く修正したりすることを容易にします。</target>
        </trans-unit>
        <trans-unit id="5f21bba93908089603c978a9f533a18bdc96a963" translate="yes" xml:space="preserve">
          <source>History of visited directories.</source>
          <target state="translated">訪問したディレクトリの歴史。</target>
        </trans-unit>
        <trans-unit id="fec5fab020547b760b20f31e28d2aae836406f7d" translate="yes" xml:space="preserve">
          <source>History, how to use</source>
          <target state="translated">歴史、使い方</target>
        </trans-unit>
        <trans-unit id="44da3f7ae23c0f9579331166ec23b8aeb799208b" translate="yes" xml:space="preserve">
          <source>Hostnames, as taken from the file specified by the &lt;code&gt;HOSTFILE&lt;/code&gt; shell variable (see &lt;a href=&quot;bash-variables#Bash-Variables&quot;&gt;Bash Variables&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;HOSTFILE&lt;/code&gt; シェル変数で指定されたファイルから取得したホスト名（ &lt;a href=&quot;bash-variables#Bash-Variables&quot;&gt;Bash変数を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="00cb2a2ccd7a8407767b30f9e6ea317f10165bb0" translate="yes" xml:space="preserve">
          <source>How Bash expands parameters and the various expansions available.</source>
          <target state="translated">Bash がどのようにパラメータを拡張しているか、そして利用可能な様々な拡張があります。</target>
        </trans-unit>
        <trans-unit id="e0a559b6e2d7396ec3cfa484dc81a867c185bd73" translate="yes" xml:space="preserve">
          <source>How Bash expands simple commands before executing them.</source>
          <target state="translated">Bashが実行前に簡単なコマンドを展開する方法</target>
        </trans-unit>
        <trans-unit id="1bd508daa344caccdb8a1f6967644e19d7a6dd41" translate="yes" xml:space="preserve">
          <source>How Bash expands variables to their values.</source>
          <target state="translated">Bash はどのようにして変数を値に展開するのか。</target>
        </trans-unit>
        <trans-unit id="f5b4a297369087f4c540cb5e57a2efe0b4a1ec2b" translate="yes" xml:space="preserve">
          <source>How Bash finds commands and runs them.</source>
          <target state="translated">Bashがコマンドを見つけて実行する方法</target>
        </trans-unit>
        <trans-unit id="705f2ab5402b3ba23e553c50511554b980eb0aa7" translate="yes" xml:space="preserve">
          <source>How Bash lets you manipulate your command history.</source>
          <target state="translated">Bash を使ってコマンドの履歴を操作する方法。</target>
        </trans-unit>
        <trans-unit id="636121882b92cbf75206f96d8cfbccb5ba32e650" translate="yes" xml:space="preserve">
          <source>How and when quote characters are removed from words.</source>
          <target state="translated">引用文字がどのようにして、どのような時に言葉から削除されるのか。</target>
        </trans-unit>
        <trans-unit id="21ae32736e976f6f479c34b1f4f78ffb20a45583" translate="yes" xml:space="preserve">
          <source>How job control works.</source>
          <target state="translated">ジョブコントロールの仕組み</target>
        </trans-unit>
        <trans-unit id="43e045ed8644d318082b5e90c174a9f50fc83f94" translate="yes" xml:space="preserve">
          <source>How often (in seconds) that the shell should check for mail in the files specified in the &lt;code&gt;MAILPATH&lt;/code&gt; or &lt;code&gt;MAIL&lt;/code&gt; variables. The default is 60 seconds. When it is time to check for mail, the shell does so before displaying the primary prompt. If this variable is unset, or set to a value that is not a number greater than or equal to zero, the shell disables mail checking.</source>
          <target state="translated">シェルが &lt;code&gt;MAILPATH&lt;/code&gt; または &lt;code&gt;MAIL&lt;/code&gt; 変数で指定されたファイルでメールをチェックする頻度（秒単位）。 デフォルトは60秒です。 メールをチェックする時間になると、シェルはプライマリプロンプトを表示する前にチェックします。 この変数が設定されていない場合、またはゼロ以上の数値でない値に設定されている場合、シェルはメールチェックを無効にします。</target>
        </trans-unit>
        <trans-unit id="5122b04b98b6cb7d584575476e649f09c4d7854b" translate="yes" xml:space="preserve">
          <source>How the results of expansion are split into separate arguments.</source>
          <target state="translated">展開の結果をどのように分割して論証するか。</target>
        </trans-unit>
        <trans-unit id="91ec050b7b1aac4a30b57f25a6a475e935d12134" translate="yes" xml:space="preserve">
          <source>How the shell matches patterns.</source>
          <target state="translated">シェルがどのようにパターンにマッチするか</target>
        </trans-unit>
        <trans-unit id="d71617b2404084d1b08725b89d80672e41640a0a" translate="yes" xml:space="preserve">
          <source>How the shell stores values.</source>
          <target state="translated">シェルがどのように値を格納するか。</target>
        </trans-unit>
        <trans-unit id="8b7c6988e806e5646f59104182c8e2acee9730f8" translate="yes" xml:space="preserve">
          <source>How to build and install Bash on your system.</source>
          <target state="translated">システムにBashをビルドしてインストールする方法。</target>
        </trans-unit>
        <trans-unit id="2f77ae2b628a712579d274e8a46291eef2fccc5d" translate="yes" xml:space="preserve">
          <source>How to compile Bash for more than one kind of system from the same source tree.</source>
          <target state="translated">同じソースツリーから複数種類のシステムに対応したBashをコンパイルする方法</target>
        </trans-unit>
        <trans-unit id="a28eaf6fa6aaf527c86e1e3671902d5ef6673304" translate="yes" xml:space="preserve">
          <source>How to configure Bash for a particular system.</source>
          <target state="translated">特定のシステム用にBashを設定する方法</target>
        </trans-unit>
        <trans-unit id="f0f8e1130fc57d2263078286702d1c19fb91d332" translate="yes" xml:space="preserve">
          <source>How to delete text, and how to get it back!</source>
          <target state="translated">テキストを削除して、元に戻す方法をご紹介します</target>
        </trans-unit>
        <trans-unit id="05e816ad6ff499e8a84de7bfbfe9d1b1996c6c7d" translate="yes" xml:space="preserve">
          <source>How to enable and disable optional features when building Bash.</source>
          <target state="translated">Bashを構築する際のオプション機能の有効化・無効化方法</target>
        </trans-unit>
        <trans-unit id="d5236d96f61d2792963f3eaf76de99667edb6242" translate="yes" xml:space="preserve">
          <source>How to execute commands sequentially.</source>
          <target state="translated">コマンドを順次実行する方法</target>
        </trans-unit>
        <trans-unit id="813ed3f8c590e1bdcdb2be481fa1e8c746103f4d" translate="yes" xml:space="preserve">
          <source>How to expand ANSI-C sequences in quoted strings.</source>
          <target state="translated">引用符で囲まれた文字列でANSI-C配列を展開する方法。</target>
        </trans-unit>
        <trans-unit id="4eece67e35162b170cf9d961ea94c3fae85f53d6" translate="yes" xml:space="preserve">
          <source>How to inhibit all interpretation of a sequence of characters.</source>
          <target state="translated">文字列の解釈を全て阻害する方法</target>
        </trans-unit>
        <trans-unit id="c6731a99b5ecba395e4289f5c46fac1f860787f9" translate="yes" xml:space="preserve">
          <source>How to remove the special meaning from a single character.</source>
          <target state="translated">1文字から特殊な意味を削除する方法</target>
        </trans-unit>
        <trans-unit id="6e72088797abf5458ef6960bc9656ac417b355a0" translate="yes" xml:space="preserve">
          <source>How to remove the special meaning from characters.</source>
          <target state="translated">文字から特殊な意味を取り除く方法</target>
        </trans-unit>
        <trans-unit id="7ffede19048d638ee9ef09f4afdbfea1b37f2fa1" translate="yes" xml:space="preserve">
          <source>How to report bugs in Bash.</source>
          <target state="translated">Bashでバグを報告する方法</target>
        </trans-unit>
        <trans-unit id="ea31d447e64fb72cd59b54c080c5a8120dbfe6dd" translate="yes" xml:space="preserve">
          <source>How to set special options for various systems.</source>
          <target state="translated">各種システムに特別なオプションを設定する方法</target>
        </trans-unit>
        <trans-unit id="82bc02142700694f6b6122318960d1b2e4428232" translate="yes" xml:space="preserve">
          <source>How to set the various paths used by the installation.</source>
          <target state="translated">インストールで使用する各種パスの設定方法。</target>
        </trans-unit>
        <trans-unit id="c00aae970cf619c619c7b3b920486ff93f661cfd" translate="yes" xml:space="preserve">
          <source>How to share default configuration values among GNU programs.</source>
          <target state="translated">GNUプログラム間でデフォルトの設定値を共有する方法。</target>
        </trans-unit>
        <trans-unit id="f2d972e804df8548b8f356bcc808bb81153df671" translate="yes" xml:space="preserve">
          <source>How to specify comments.</source>
          <target state="translated">コメントの指定方法。</target>
        </trans-unit>
        <trans-unit id="2a1ba811a9c9c12030393b93f376ebfdfd284926" translate="yes" xml:space="preserve">
          <source>How to specify the possible completions for a specific command.</source>
          <target state="translated">特定のコマンドに対して可能な補完を指定する方法。</target>
        </trans-unit>
        <trans-unit id="8e3be43e6540767e16426cddb4974c3e474d3192" translate="yes" xml:space="preserve">
          <source>How to specify which history line to use.</source>
          <target state="translated">どの履歴行を使用するかを指定する方法</target>
        </trans-unit>
        <trans-unit id="56b0959eea40e34990aae302eef8cf5eb5b069ca" translate="yes" xml:space="preserve">
          <source>How to suppress most of the interpretation of a sequence of characters.</source>
          <target state="translated">文字列の解釈の大部分を抑える方法</target>
        </trans-unit>
        <trans-unit id="cf607e7d7a552c6a715e1836d6df53e868ab77cd" translate="yes" xml:space="preserve">
          <source>How to tell if a shell is interactive.</source>
          <target state="translated">シェルがインタラクティブかどうかの見分け方</target>
        </trans-unit>
        <trans-unit id="bdd8239cb856ce89dd3372fe7dac878485db32ea" translate="yes" xml:space="preserve">
          <source>How to translate strings into different languages.</source>
          <target state="translated">文字列を異なる言語に翻訳する方法。</target>
        </trans-unit>
        <trans-unit id="dd92555cbedbf0b5f464ebeadeb68f27c787c694" translate="yes" xml:space="preserve">
          <source>How to use arithmetic in shell expansions.</source>
          <target state="translated">シェル展開での算数の使い方。</target>
        </trans-unit>
        <trans-unit id="a767e1f2275bc99680c33ce015eb5b167ac9c9b3" translate="yes" xml:space="preserve">
          <source>However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.</source>
          <target state="translated">ただし、あなたが本許諾書に対する違反をすべて停止した場合、特定の著作権者からのあなたのライセンスは、(a)著作権者が明示的にかつ最終的にあなたのライセンスを終了しない限り、暫定的に、そして(b)著作権者が停止後60日前までに何らかの合理的な手段で違反をあなたに通知しなかった場合、永久的に、復権される。</target>
        </trans-unit>
        <trans-unit id="ca73ab65568cd125c2d27a22bbd9e863c10b675d" translate="yes" xml:space="preserve">
          <source>I</source>
          <target state="translated">I</target>
        </trans-unit>
        <trans-unit id="0d914f517894e879e7f3b7fb9c522cfbc7107752" translate="yes" xml:space="preserve">
          <source>IFS</source>
          <target state="translated">IFS</target>
        </trans-unit>
        <trans-unit id="250a90b315394455c4d9d5d4fabb0f1b1d0829a6" translate="yes" xml:space="preserve">
          <source>IGNOREEOF</source>
          <target state="translated">IGNOREEOF</target>
        </trans-unit>
        <trans-unit id="105dbc839d379bb3bc6e660152bcfe47aa6415db" translate="yes" xml:space="preserve">
          <source>INPUTRC</source>
          <target state="translated">INPUTRC</target>
        </trans-unit>
        <trans-unit id="8b367d081831f5cb1e344a8ac1182842c6489e78" translate="yes" xml:space="preserve">
          <source>INSIDE_EMACS</source>
          <target state="translated">INSIDE_EMACS</target>
        </trans-unit>
        <trans-unit id="393aca9083d526ef7eb9fa16234ec9d0e82d9ee3" translate="yes" xml:space="preserve">
          <source>Identical to &lt;code&gt;menu-complete&lt;/code&gt;, but moves backward through the list of possible completions, as if &lt;code&gt;menu-complete&lt;/code&gt; had been given a negative argument.</source>
          <target state="translated">&lt;code&gt;menu-complete&lt;/code&gt; と同じですが、 menu-completeに負の引数が与えられたかのように、可能な補完のリストを逆方向に移動します。</target>
        </trans-unit>
        <trans-unit id="751c68a3471b1c791efaee0a8e7c24ea0c266efd" translate="yes" xml:space="preserve">
          <source>If</source>
          <target state="translated">If</target>
        </trans-unit>
        <trans-unit id="b94b85388613ff812132cfe4fbfdcb534fff787e" translate="yes" xml:space="preserve">
          <source>If &amp;lsquo;</source>
          <target state="translated">もし '</target>
        </trans-unit>
        <trans-unit id="2359e55a7e838e90e550f9bbd0722902e3d12548" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;set -P&lt;/code&gt; is on, then:</source>
          <target state="translated">&lt;code&gt;set -P&lt;/code&gt; がオンの場合：</target>
        </trans-unit>
        <trans-unit id="258b0138a2ba1f7a90d47d1df6e659af050079fa" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;command&lt;/var&gt; is supplied, it replaces the shell without creating a new process. If the</source>
          <target state="translated">&lt;var&gt;command&lt;/var&gt; が指定されている場合、新しいプロセスを作成せずにシェルを置き換えます。 もし</target>
        </trans-unit>
        <trans-unit id="b5a1fc3d69ee41cf9a674904c93fe56f1af55533" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;directory&lt;/var&gt; is &amp;lsquo;</source>
          <target state="translated">&lt;var&gt;directory&lt;/var&gt; が '</target>
        </trans-unit>
        <trans-unit id="db7df46e1677118816bb3cc96d5f3d1bb016d823" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;fd&lt;/var&gt; is a valid integer, file descriptor &lt;var&gt;fd&lt;/var&gt; is duplicated.</source>
          <target state="translated">&lt;var&gt;fd&lt;/var&gt; が有効な整数の場合、ファイル記述子 &lt;var&gt;fd&lt;/var&gt; が複製されます。</target>
        </trans-unit>
        <trans-unit id="a6a36b0383dacfeba0b4991eeba9395c27107746" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;host&lt;/var&gt; is a valid hostname or Internet address, and &lt;var&gt;port&lt;/var&gt; is an integer port number or service name, Bash attempts to open the corresponding TCP socket.</source>
          <target state="translated">&lt;var&gt;host&lt;/var&gt; が有効なホスト名またはインターネットアドレスで、 &lt;var&gt;port&lt;/var&gt; が整数のポート番号またはサービス名である場合、Bashは対応するTCPソケットを開こうとします。</target>
        </trans-unit>
        <trans-unit id="f2f0ed2a344f7c56f9a525c7663a15403e6f8997" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;host&lt;/var&gt; is a valid hostname or Internet address, and &lt;var&gt;port&lt;/var&gt; is an integer port number or service name, Bash attempts to open the corresponding UDP socket.</source>
          <target state="translated">&lt;var&gt;host&lt;/var&gt; が有効なホスト名またはインターネットアドレスであり、 &lt;var&gt;port&lt;/var&gt; が整数のポート番号またはサービス名である場合、Bashは対応するUDPソケットを開こうとします。</target>
        </trans-unit>
        <trans-unit id="57b1f907c491aa38b767c7f9954197c94bad6d88" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;jobspec&lt;/var&gt; is given, output is restricted to information about that job. If &lt;var&gt;jobspec&lt;/var&gt; is not supplied, the status of all jobs is listed.</source>
          <target state="translated">&lt;var&gt;jobspec&lt;/var&gt; が指定されている場合、出力はそのジョブに関する情報に制限されます。 &lt;var&gt;jobspec&lt;/var&gt; が指定されていない場合、すべてのジョブのステータスがリストされます。</target>
        </trans-unit>
        <trans-unit id="d73828af7d0caf7a942515061caf0c104e019b26" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;limit&lt;/var&gt; is given, and the</source>
          <target state="translated">&lt;var&gt;limit&lt;/var&gt; が与えられた場合、</target>
        </trans-unit>
        <trans-unit id="6941cee87418ba29be43b7c02bc4186c948bebbe" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;name&lt;/var&gt; is an array variable, expands to the list of array indices (keys) assigned in &lt;var&gt;name&lt;/var&gt;. If &lt;var&gt;name&lt;/var&gt; is not an array, expands to 0 if &lt;var&gt;name&lt;/var&gt; is set and null otherwise. When &amp;lsquo;</source>
          <target state="translated">&lt;var&gt;name&lt;/var&gt; が配列変数の場合、 nameに割り当てられた配列インデックス（キー）のリストに展開され &lt;var&gt;name&lt;/var&gt; 。 &lt;var&gt;name&lt;/var&gt; が配列でない場合、 &lt;var&gt;name&lt;/var&gt; が設定されている場合は0に展開され、それ以外の場合はnullに展開されます。 いつ '</target>
        </trans-unit>
        <trans-unit id="90d2bf911877dcd018448b4fa11f17b521ec021a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;offset&lt;/var&gt; evaluates to a number less than zero, the value is used as an offset in characters from the end of the value of &lt;var&gt;parameter&lt;/var&gt;. If &lt;var&gt;length&lt;/var&gt; evaluates to a number less than zero, it is interpreted as an offset in characters from the end of the value of &lt;var&gt;parameter&lt;/var&gt; rather than a number of characters, and the expansion is the characters between &lt;var&gt;offset&lt;/var&gt; and that result. Note that a negative offset must be separated from the colon by at least one space to avoid being confused with the &amp;lsquo;</source>
          <target state="translated">&lt;var&gt;offset&lt;/var&gt; が0未満の数値に評価される場合、値は &lt;var&gt;parameter&lt;/var&gt; の値の末尾からの文字単位のオフセットとして使用されます 。 &lt;var&gt;length&lt;/var&gt; さが0未満の数値に評価される場合、それは文字数ではなく、 &lt;var&gt;parameter&lt;/var&gt; の値の末尾からの文字でのオフセットとして解釈され、展開は &lt;var&gt;offset&lt;/var&gt; とその結果の間の文字になります。 'と混同しないように、負のオフセットはコロンと少なくとも1つのスペースで区切る必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="e3dbd90979f11940416966a17c9767352edc8bca" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;parameter&lt;/var&gt; is &amp;lsquo;</source>
          <target state="translated">&lt;var&gt;parameter&lt;/var&gt; が 'の場合</target>
        </trans-unit>
        <trans-unit id="d3c8a9050458b1d1764aa5c7580bd7e24e51cf84" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;parameter&lt;/var&gt; is an indexed array name subscripted by &amp;lsquo;</source>
          <target state="translated">&lt;var&gt;parameter&lt;/var&gt; が 'で添え字が付けられたインデックス付き配列名の場合</target>
        </trans-unit>
        <trans-unit id="a933511083f809e12ed4d366a4222102893821f6" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;parameter&lt;/var&gt; is null or unset, nothing is substituted, otherwise the expansion of &lt;var&gt;word&lt;/var&gt; is substituted.</source>
          <target state="translated">&lt;var&gt;parameter&lt;/var&gt; がnullまたは未設定の場合、何も置換されません。それ以外の場合、 &lt;var&gt;word&lt;/var&gt; の展開が置換されます。</target>
        </trans-unit>
        <trans-unit id="1a7bff0cbd3600d20034bbb8a02954436a57e645" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;parameter&lt;/var&gt; is null or unset, the expansion of &lt;var&gt;word&lt;/var&gt; (or a message to that effect if &lt;var&gt;word&lt;/var&gt; is not present) is written to the standard error and the shell, if it is not interactive, exits. Otherwise, the value of &lt;var&gt;parameter&lt;/var&gt; is substituted.</source>
          <target state="translated">&lt;var&gt;parameter&lt;/var&gt; がnullまたは未設定の場合、 &lt;var&gt;word&lt;/var&gt; の展開（または &lt;var&gt;word&lt;/var&gt; が存在しない場合はその旨のメッセージ）が標準エラーに書き込まれ、対話型でない場合はシェルが終了します。 それ以外の場合は、 &lt;var&gt;parameter&lt;/var&gt; の値が置き換えられます。</target>
        </trans-unit>
        <trans-unit id="25480a13be311d09c224d460b7039fb7e1872e50" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;parameter&lt;/var&gt; is unset or null, the expansion of &lt;var&gt;word&lt;/var&gt; is assigned to &lt;var&gt;parameter&lt;/var&gt;. The value of &lt;var&gt;parameter&lt;/var&gt; is then substituted. Positional parameters and special parameters may not be assigned to in this way.</source>
          <target state="translated">&lt;var&gt;parameter&lt;/var&gt; が設定されていないかnullの場合、 &lt;var&gt;word&lt;/var&gt; の展開が &lt;var&gt;parameter&lt;/var&gt; に割り当てられます 。 次に、 &lt;var&gt;parameter&lt;/var&gt; の値が置き換えられます。 このように、位置パラメータと特殊パラメータを割り当てることはできません。</target>
        </trans-unit>
        <trans-unit id="053b8d6257ac8e3813c4da7fbe800e5f2cd50647" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;parameter&lt;/var&gt; is unset or null, the expansion of &lt;var&gt;word&lt;/var&gt; is substituted. Otherwise, the value of &lt;var&gt;parameter&lt;/var&gt; is substituted.</source>
          <target state="translated">&lt;var&gt;parameter&lt;/var&gt; が設定されていないかnullの場合、 &lt;var&gt;word&lt;/var&gt; の展開が置き換えられます。 それ以外の場合は、 &lt;var&gt;parameter&lt;/var&gt; の値が置き換えられます。</target>
        </trans-unit>
        <trans-unit id="062df1706c997e4e31b1720431e0fc925e957dd1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;value&lt;/var&gt; is not given, the variable is assigned the null string. All &lt;var&gt;value&lt;/var&gt;s undergo tilde expansion, parameter and variable expansion, command substitution, arithmetic expansion, and quote removal (detailed below). If the variable has its &lt;code&gt;integer&lt;/code&gt; attribute set, then &lt;var&gt;value&lt;/var&gt; is evaluated as an arithmetic expression even if the &lt;code&gt;$((&amp;hellip;))&lt;/code&gt; expansion is not used (see &lt;a href=&quot;arithmetic-expansion#Arithmetic-Expansion&quot;&gt;Arithmetic Expansion&lt;/a&gt;). Word splitting is not performed, with the exception of &lt;code&gt;&quot;$@&quot;&lt;/code&gt; as explained below. Filename expansion is not performed. Assignment statements may also appear as arguments to the &lt;code&gt;alias&lt;/code&gt;, &lt;code&gt;declare&lt;/code&gt;, &lt;code&gt;typeset&lt;/code&gt;, &lt;code&gt;export&lt;/code&gt;, &lt;code&gt;readonly&lt;/code&gt;, and &lt;code&gt;local&lt;/code&gt; builtin commands (&lt;var&gt;declaration&lt;/var&gt; commands). When in &lt;small&gt;POSIX&lt;/small&gt; mode (see &lt;a href=&quot;bash-posix-mode#Bash-POSIX-Mode&quot;&gt;Bash POSIX Mode&lt;/a&gt;), these builtins may appear in a command after one or more instances of the &lt;code&gt;command&lt;/code&gt; builtin and retain these assignment statement properties.</source>
          <target state="translated">&lt;var&gt;value&lt;/var&gt; が指定されていない場合、変数にはNULL文字列が割り当てられます。 すべての &lt;var&gt;value&lt;/var&gt; は、チルダ展開、パラメーターと変数の展開、コマンドの置換、算術展開、引用符の削除（詳細は後述）を受けます。 変数に &lt;code&gt;integer&lt;/code&gt; 属性が設定されている場合、 &lt;code&gt;$((&amp;hellip;))&lt;/code&gt; 展開が使用されていなくても、 &lt;var&gt;value&lt;/var&gt; は算術式として評価されます （ &lt;a href=&quot;arithmetic-expansion#Arithmetic-Expansion&quot;&gt;算術展開を&lt;/a&gt;参照）。 以下で説明する &lt;code&gt;&quot;$@&quot;&lt;/code&gt; を除いて、単語分割は実行されません。 ファイル名の展開は行われません。 割り当てステートメントは、 &lt;code&gt;alias&lt;/code&gt; 、 &lt;code&gt;declare&lt;/code&gt; 、 &lt;code&gt;typeset&lt;/code&gt; 、 &lt;code&gt;export&lt;/code&gt; 、 &lt;code&gt;readonly&lt;/code&gt; 、および &lt;code&gt;local&lt;/code&gt; 組み込みコマンド（ &lt;var&gt;declaration&lt;/var&gt; コマンド）の引数としても表示されます。 &lt;small&gt;POSIX&lt;/small&gt;モード（ &lt;a href=&quot;bash-posix-mode#Bash-POSIX-Mode&quot;&gt;Bash POSIXモードを&lt;/a&gt;参照）の場合、これらのビルトインは、コマンドビルトインの1つ以上のインスタンスの後にコマンドに表示され、これらの割り当てステートメントのプロパティを保持します。</target>
        </trans-unit>
        <trans-unit id="d8e30842d1ff4669f56f166866d66f203f4de618" translate="yes" xml:space="preserve">
          <source>If Bash finds this variable in the environment when the shell starts with value &amp;lsquo;</source>
          <target state="translated">シェルが値 'で始まるときに、環境でこの変数がBashによって検出された場合</target>
        </trans-unit>
        <trans-unit id="e3e57ae73348461cf9aaa21ecb851916a6610333" translate="yes" xml:space="preserve">
          <source>If Bash finds this variable in the environment when the shell starts, it assumes that the shell is running in an Emacs shell buffer and may disable line editing depending on the value of &lt;code&gt;TERM&lt;/code&gt;.</source>
          <target state="translated">シェルの起動時にBashがこの変数を環境で検出した場合、シェルはEmacsシェルバッファーで実行されていると &lt;code&gt;TERM&lt;/code&gt; 、 TERMの値によっては行編集を無効にすることがあります。</target>
        </trans-unit>
        <trans-unit id="4d0496e1d2eef697bda7e95938d73fcb6002b3c8" translate="yes" xml:space="preserve">
          <source>If Bash is invoked with the name &lt;code&gt;sh&lt;/code&gt;, it tries to mimic the startup behavior of historical versions of &lt;code&gt;sh&lt;/code&gt; as closely as possible, while conforming to the &lt;small&gt;POSIX&lt;/small&gt; standard as well.</source>
          <target state="translated">Bashが &lt;code&gt;sh&lt;/code&gt; という名前で呼び出された場合、 &lt;small&gt;POSIX&lt;/small&gt;標準にも準拠しながら、履歴バージョンの &lt;code&gt;sh&lt;/code&gt; の起動時の動作をできるだけ模倣しようとします。</target>
        </trans-unit>
        <trans-unit id="4034db360dd2a212318b0ef15c222ef04c163a2d" translate="yes" xml:space="preserve">
          <source>If Bash is started with the effective user (group) id not equal to the real user (group) id, and the</source>
          <target state="translated">有効なユーザ(グループ)IDが実際のユーザ(グループ)IDと等しくない状態でBashを起動すると</target>
        </trans-unit>
        <trans-unit id="a52a0b0164cda121640f100e1a9a4b00b09185f7" translate="yes" xml:space="preserve">
          <source>If Bash is started with the name &lt;code&gt;rbash&lt;/code&gt;, or the</source>
          <target state="translated">Bashが &lt;code&gt;rbash&lt;/code&gt; という名前で開始されている場合、または</target>
        </trans-unit>
        <trans-unit id="1fecb100bbeb2bb3fb9d1c798316637deea64496" translate="yes" xml:space="preserve">
          <source>If Bash is waiting for a command to complete and receives a signal for which a trap has been set, the trap will not be executed until the command completes. When Bash is waiting for an asynchronous command via the &lt;code&gt;wait&lt;/code&gt; builtin, the reception of a signal for which a trap has been set will cause the &lt;code&gt;wait&lt;/code&gt; builtin to return immediately with an exit status greater than 128, immediately after which the trap is executed.</source>
          <target state="translated">Bashがコマンドの完了を待機していて、トラップが設定されたシグナルを受信した場合、コマンドが完了するまでトラップは実行されません。 Bashが &lt;code&gt;wait&lt;/code&gt; ビルトインを介して非同期コマンドを待機している場合、トラップが設定されたシグナルを受信すると、128より大きい終了ステータスで &lt;code&gt;wait&lt;/code&gt; ビルトインがすぐに戻り、その直後にトラップが実行されます。</target>
        </trans-unit>
        <trans-unit id="a9ec556c59d8876506edf997447cbccad318b196" translate="yes" xml:space="preserve">
          <source>If Readline is being used to read the line, &lt;var&gt;text&lt;/var&gt; is placed into the editing buffer before editing begins.</source>
          <target state="translated">Readlineを使用して行を読み取る場合、 &lt;var&gt;text&lt;/var&gt; は編集を開始する前に編集バッファーに配置されます。</target>
        </trans-unit>
        <trans-unit id="0e69b39329c4f6a621c33584cac4a7b869fc8c9d" translate="yes" xml:space="preserve">
          <source>If a &lt;small&gt;POSIX&lt;/small&gt; special builtin returns an error status, a non-interactive shell exits. The fatal errors are those listed in the &lt;small&gt;POSIX&lt;/small&gt; standard, and include things like passing incorrect options, redirection errors, variable assignment errors for assignments preceding the command name, and so on.</source>
          <target state="translated">&lt;small&gt;POSIX&lt;/small&gt;特殊組み込みコマンドがエラーステータスを返す場合、非対話型シェルが終了します。 致命的なエラーとは、 &lt;small&gt;POSIX&lt;/small&gt;標準にリストされているエラーであり、誤ったオプションを渡すこと、リダイレクトエラー、コマンド名の前の割り当ての変数割り当てエラーなどが含まれます。</target>
        </trans-unit>
        <trans-unit id="13365b36d17aebf61f97d0c028c3adb38488bbd3" translate="yes" xml:space="preserve">
          <source>If a &lt;var&gt;sigspec&lt;/var&gt; is &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;EXIT&lt;/code&gt;, &lt;var&gt;arg&lt;/var&gt; is executed when the shell exits. If a &lt;var&gt;sigspec&lt;/var&gt; is &lt;code&gt;DEBUG&lt;/code&gt;, the command &lt;var&gt;arg&lt;/var&gt; is executed before every simple command, &lt;code&gt;for&lt;/code&gt; command, &lt;code&gt;case&lt;/code&gt; command, &lt;code&gt;select&lt;/code&gt; command, every arithmetic &lt;code&gt;for&lt;/code&gt; command, and before the first command executes in a shell function. Refer to the description of the &lt;code&gt;extdebug&lt;/code&gt; option to the &lt;code&gt;shopt&lt;/code&gt; builtin (see &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;) for details of its effect on the &lt;code&gt;DEBUG&lt;/code&gt; trap. If a &lt;var&gt;sigspec&lt;/var&gt; is &lt;code&gt;RETURN&lt;/code&gt;, the command &lt;var&gt;arg&lt;/var&gt; is executed each time a shell function or a script executed with the &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;source&lt;/code&gt; builtins finishes executing.</source>
          <target state="translated">&lt;var&gt;sigspec&lt;/var&gt; が &lt;code&gt;0&lt;/code&gt; または &lt;code&gt;EXIT&lt;/code&gt; の場合、シェルの終了時に &lt;var&gt;arg&lt;/var&gt; が実行されます。 &lt;var&gt;sigspec&lt;/var&gt; が &lt;code&gt;DEBUG&lt;/code&gt; の場合、コマンド &lt;var&gt;arg&lt;/var&gt; は、すべての単純なコマンド、コマンド、 &lt;code&gt;case&lt;/code&gt; コマンド、 &lt;code&gt;select&lt;/code&gt; コマンド、コマンドのすべての算術演算の前、およびシェル関数で最初のコマンドが実行される前に実行されます。 &lt;code&gt;DEBUG&lt;/code&gt; トラップへの影響の詳細については、 &lt;code&gt;shopt&lt;/code&gt; &lt;code&gt;extdebug&lt;/code&gt; オプションの説明を参照してください（ &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;を参照）。 &lt;var&gt;sigspec&lt;/var&gt; が &lt;code&gt;RETURN&lt;/code&gt; の場合、コマンド &lt;var&gt;arg&lt;/var&gt; は、シェル関数またはスクリプトがで実行されるたびに実行されます &lt;code&gt;.&lt;/code&gt; または、 &lt;code&gt;source&lt;/code&gt; ビルトインが実行を終了します。</target>
        </trans-unit>
        <trans-unit id="a72fe8140766e82198128f65ccc06b5a29e8da81" translate="yes" xml:space="preserve">
          <source>If a &lt;var&gt;sigspec&lt;/var&gt; is &lt;code&gt;ERR&lt;/code&gt;, the command &lt;var&gt;arg&lt;/var&gt; is executed whenever a pipeline (which may consist of a single simple command), a list, or a compound command returns a non-zero exit status, subject to the following conditions. The &lt;code&gt;ERR&lt;/code&gt; trap is not executed if the failed command is part of the command list immediately following an &lt;code&gt;until&lt;/code&gt; or &lt;code&gt;while&lt;/code&gt; keyword, part of the test following the &lt;code&gt;if&lt;/code&gt; or &lt;code&gt;elif&lt;/code&gt; reserved words, part of a command executed in a &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; or &lt;code&gt;||&lt;/code&gt; list except the command following the final &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; or &lt;code&gt;||&lt;/code&gt;, any command in a pipeline but the last, or if the command&amp;rsquo;s return status is being inverted using &lt;code&gt;!&lt;/code&gt;. These are the same conditions obeyed by the &lt;code&gt;errexit&lt;/code&gt; (</source>
          <target state="translated">&lt;var&gt;sigspec&lt;/var&gt; が &lt;code&gt;ERR&lt;/code&gt; の場合、 次の条件に従って 、パイプライン（単一の単純なコマンドで構成される場合があります）、リスト、または複合コマンドがゼロ以外の終了ステータスを返すたびに、コマンド &lt;var&gt;arg&lt;/var&gt; が実行されます。 失敗したコマンドが &lt;code&gt;until&lt;/code&gt; または &lt;code&gt;while&lt;/code&gt; キーワードの直後のコマンドリストの一部、 &lt;code&gt;if&lt;/code&gt; または &lt;code&gt;elif&lt;/code&gt; 予約語に続くテストの一部、 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; または &lt;code&gt;||&lt;/code&gt; で実行されるコマンドの一部である場合、 &lt;code&gt;ERR&lt;/code&gt; トラップは実行されません。 最後の &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; または &lt;code&gt;||&lt;/code&gt; に続くコマンドを除くリスト 、パイプライン内の最後のコマンド以外のコマンド、またはコマンドの戻りステータスが &lt;code&gt;!&lt;/code&gt; 。 これらは、 &lt;code&gt;errexit&lt;/code&gt; （</target>
        </trans-unit>
        <trans-unit id="4a8dddd2aa79e75a82a4e62f0a3930238f5783e2" translate="yes" xml:space="preserve">
          <source>If a command fails because of an error during expansion or redirection, the exit status is greater than zero.</source>
          <target state="translated">拡張またはリダイレクト中にエラーが発生してコマンドが失敗した場合、終了ステータスは0よりも大きくなります。</target>
        </trans-unit>
        <trans-unit id="9f4ebd9a4cebd1e4c2f77f7612e7b5154da1de76" translate="yes" xml:space="preserve">
          <source>If a command generates output, you may want to preserve the input order in the output. For instance, the following command</source>
          <target state="translated">コマンドが出力を生成する場合、出力の入力順を保持したい場合があります。例えば、次のコマンドは</target>
        </trans-unit>
        <trans-unit id="eac3ba182de487d22ed5cf529f45a62b5c753cbb" translate="yes" xml:space="preserve">
          <source>If a command is followed by a &amp;lsquo;</source>
          <target state="translated">コマンドの後に '</target>
        </trans-unit>
        <trans-unit id="262b44d58aab9d1ead94c6414c6bba9ae14a8b6a" translate="yes" xml:space="preserve">
          <source>If a command is hashed,</source>
          <target state="translated">コマンドがハッシュ化されている場合</target>
        </trans-unit>
        <trans-unit id="5e000e30b972d57a747a863f4ae2f50daa0da4ba" translate="yes" xml:space="preserve">
          <source>If a command is not found, the child process created to execute it returns a status of 127. If a command is found but is not executable, the return status is 126.</source>
          <target state="translated">コマンドが見つからない場合、コマンドを実行するために作成された子プロセスは、ステータス127を返します。コマンドが見つかったが実行できなかった場合、戻り値のステータスは126です。</target>
        </trans-unit>
        <trans-unit id="82ab2070fc48319330344cadfaf540dd91f6c571" translate="yes" xml:space="preserve">
          <source>If a command is terminated by the control operator &amp;lsquo;</source>
          <target state="translated">コマンドが制御演算子によって終了された場合 '</target>
        </trans-unit>
        <trans-unit id="abc1263d6ce57073633b138e4552d86410edbb8c" translate="yes" xml:space="preserve">
          <source>If a compound command or shell function executes in a context where</source>
          <target state="translated">複合コマンドやシェル関数が</target>
        </trans-unit>
        <trans-unit id="4c34cd465ee158ec90a06383d802e934fcac69a2" translate="yes" xml:space="preserve">
          <source>If a non-empty directory name from &lt;code&gt;CDPATH&lt;/code&gt; is used, or if &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;CDPATH&lt;/code&gt; からの空でないディレクトリ名が使用されている場合、または '</target>
        </trans-unit>
        <trans-unit id="d4fe338c512b01adf0185ba49be309db4cd94526" translate="yes" xml:space="preserve">
          <source>If a required argument is not found, and &lt;code&gt;getopts&lt;/code&gt; is not silent, a question mark (&amp;lsquo;</source>
          <target state="translated">必要な引数が見つからず、 &lt;code&gt;getopts&lt;/code&gt; がサイレントでない場合は、疑問符（ '</target>
        </trans-unit>
        <trans-unit id="2ce89a3e8a43d0af6ec3140b4d3e09d38d3041ca" translate="yes" xml:space="preserve">
          <source>If a section in the Document is Entitled &amp;ldquo;Acknowledgements&amp;rdquo;, &amp;ldquo;Dedications&amp;rdquo;, or &amp;ldquo;History&amp;rdquo;, the requirement (section 4) to Preserve its Title (section 1) will typically require changing the actual title.</source>
          <target state="translated">ドキュメントのセクションに「謝辞」、「献身」、または「履歴」というタイトルが付いている場合、タイトルを維持するための要件（セクション4）（セクション1）は、通常、実際のタイトルを変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="3a47e743e6678fe4fda2687d0ace14febef67ba1" translate="yes" xml:space="preserve">
          <source>If a special builtin returns an error status, a non-interactive shell exits.</source>
          <target state="translated">特別な組み込み関数がエラー・ステータスを返す場合、非インタラクティブ・シェルが終了します。</target>
        </trans-unit>
        <trans-unit id="5e1e3a36072e44af8a5b8ef5e9afa6bf7bd6777e" translate="yes" xml:space="preserve">
          <source>If a word begins with an unquoted tilde character (&amp;lsquo;</source>
          <target state="translated">単語が引用符で囲まれていないチルダ文字（ '</target>
        </trans-unit>
        <trans-unit id="7e7265774f9acdadda1e04c0ab8c46e91b84878b" translate="yes" xml:space="preserve">
          <source>If a word designator is supplied without an event specification, the previous command is used as the event.</source>
          <target state="translated">イベント指定をせずにワード指定子が与えられた場合は、前回のコマンドがイベントとして使用されます。</target>
        </trans-unit>
        <trans-unit id="8510134af5d86088511088bf4e350d6444de7bbc" translate="yes" xml:space="preserve">
          <source>If an attempt to exit Bash is made while jobs are stopped, (or running, if the &lt;code&gt;checkjobs&lt;/code&gt; option is enabled &amp;ndash; see &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;), the shell prints a warning message, and if the &lt;code&gt;checkjobs&lt;/code&gt; option is enabled, lists the jobs and their statuses. The &lt;code&gt;jobs&lt;/code&gt; command may then be used to inspect their status. If a second attempt to exit is made without an intervening command, Bash does not print another warning, and any stopped jobs are terminated.</source>
          <target state="translated">ジョブが停止している間（または、 &lt;code&gt;checkjobs&lt;/code&gt; オプションが有効になっている場合は実行中&lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;-Shopt Builtinを&lt;/a&gt;参照）にBashを終了しようとすると、シェルは警告メッセージを出力し、 &lt;code&gt;checkjobs&lt;/code&gt; オプションが有効になっていると、ジョブとそのジョブを一覧表示します。ステータス。 次に、 &lt;code&gt;jobs&lt;/code&gt; コマンドを使用して、それらのステータスを検査できます。 介在するコマンドなしで2回目の終了試行が行われた場合、Bashは別の警告を出力せず、停止したジョブはすべて終了します。</target>
        </trans-unit>
        <trans-unit id="d3e729ae4620d7ec47b9fe00986079e01731c823" translate="yes" xml:space="preserve">
          <source>If an invalid option is seen, &lt;code&gt;getopts&lt;/code&gt; places &amp;lsquo;</source>
          <target state="translated">無効なオプションが検出された場合、 &lt;code&gt;getopts&lt;/code&gt; は場所 '</target>
        </trans-unit>
        <trans-unit id="08a28d3d40efa7e859683962e041e759509d17ef" translate="yes" xml:space="preserve">
          <source>If arguments remain after option processing, and neither the</source>
          <target state="translated">オプション処理後に引数が残っていて</target>
        </trans-unit>
        <trans-unit id="4a87230db9c1a3eef3f9a043437908477ad36a5a" translate="yes" xml:space="preserve">
          <source>If calling &lt;code&gt;stat&lt;/code&gt; on /dev/fd/&lt;var&gt;N&lt;/var&gt; returns different results than calling &lt;code&gt;fstat&lt;/code&gt; on file descriptor &lt;var&gt;N&lt;/var&gt;, supply this option to enable a workaround. This has implications for conditional commands that test file attributes.</source>
          <target state="translated">/ dev / fd / &lt;var&gt;N&lt;/var&gt; で &lt;code&gt;stat&lt;/code&gt; を呼び出すと、ファイル記述子 &lt;var&gt;N&lt;/var&gt; で &lt;code&gt;fstat&lt;/code&gt; を呼び出す場合とは異なる結果が返される場合は、このオプションを指定して回避策を有効にします。 これは、ファイル属性をテストする条件付きコマンドに影響します。</target>
        </trans-unit>
        <trans-unit id="09110ceb312edde4d747bc8c112a4b117106a1ca" translate="yes" xml:space="preserve">
          <source>If either</source>
          <target state="translated">どちらかが</target>
        </trans-unit>
        <trans-unit id="b44eedd7e90480e54638ad99bec6e704d7f97b27" translate="yes" xml:space="preserve">
          <source>If either the</source>
          <target state="translated">のどちらかが</target>
        </trans-unit>
        <trans-unit id="2067a4e264c6515ec15b4710146ae8692a3581c1" translate="yes" xml:space="preserve">
          <source>If enabled, and the &lt;code&gt;cmdhist&lt;/code&gt; option is enabled, multi-line commands are saved to the history with embedded newlines rather than using semicolon separators where possible.</source>
          <target state="translated">有効にして &lt;code&gt;cmdhist&lt;/code&gt; オプションを有効にすると、複数行のコマンドは、可能な限りセミコロンの区切り文字を使用するのではなく、改行が埋め込まれた履歴に保存されます。</target>
        </trans-unit>
        <trans-unit id="824c50ce709b24ee6904d9f0c2d15a2975891952" translate="yes" xml:space="preserve">
          <source>If multiple options are supplied, the</source>
          <target state="translated">複数のオプションを指定した場合は</target>
        </trans-unit>
        <trans-unit id="aa5583b1e4cd263dafe517d60e590401e8055a96" translate="yes" xml:space="preserve">
          <source>If no arguments follow this option, then the positional parameters are unset. Otherwise, the positional parameters are set to the &lt;var&gt;arguments&lt;/var&gt;, even if some of them begin with a &amp;lsquo;</source>
          <target state="translated">このオプションの後に引数がない場合、定位置パラメーターは設定解除されます。 それ以外の場合、位置パラメータは、その一部が 'で始まる場合でも、 &lt;var&gt;arguments&lt;/var&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="da010fc212bc172ad7f55d1d9211e10715be88e0" translate="yes" xml:space="preserve">
          <source>If no command name results, redirections are performed, but do not affect the current shell environment. A redirection error causes the command to exit with a non-zero status.</source>
          <target state="translated">コマンド名が見つからない場合、リダイレクトが実行されますが、現在のシェル環境には影響しません。リダイレクトエラーが発生すると、コマンドはゼロ以外のステータスで終了します。</target>
        </trans-unit>
        <trans-unit id="3a3ff111f4e50defc3c963326ab30b3eb23f0e5c" translate="yes" xml:space="preserve">
          <source>If no command name results, the variable assignments affect the current shell environment. Otherwise, the variables are added to the environment of the executed command and do not affect the current shell environment. If any of the assignments attempts to assign a value to a readonly variable, an error occurs, and the command exits with a non-zero status.</source>
          <target state="translated">コマンド名の結果が出ない場合、変数の割り当ては現在のシェル環境に影響を与えます。そうでない場合、変数は実行されたコマンドの環境に追加され、現在のシェル環境には影響しません。代入のいずれかが読み取り専用の変数に値を代入しようとすると、エラーが発生し、コマンドはゼロ以外の状態で終了します。</target>
        </trans-unit>
        <trans-unit id="bbc609cffce471fc61c562933b7ac61039051f86" translate="yes" xml:space="preserve">
          <source>If no options or arguments are supplied, &lt;code&gt;set&lt;/code&gt; displays the names and values of all shell variables and functions, sorted according to the current locale, in a format that may be reused as input for setting or resetting the currently-set variables. Read-only variables cannot be reset. In &lt;small&gt;POSIX&lt;/small&gt; mode, only shell variables are listed.</source>
          <target state="translated">オプションまたは引数が指定されていない場合、 &lt;code&gt;set&lt;/code&gt; は、現在設定されている変数を設定またはリセットするための入力として再利用できる形式で、現在のロケールに従ってソートされたすべてのシェル変数および関数の名前と値を表示します。 読み取り専用変数はリセットできません。 &lt;small&gt;POSIX&lt;/small&gt;モードでは、シェル変数のみがリストされます。</target>
        </trans-unit>
        <trans-unit id="383ca8993ad81f9d1fdd804ab740bc0fd9b03292" translate="yes" xml:space="preserve">
          <source>If not supplied with an explicit origin, &lt;code&gt;mapfile&lt;/code&gt; will clear &lt;var&gt;array&lt;/var&gt; before assigning to it.</source>
          <target state="translated">明示的なオリジンが指定されていない場合、 &lt;code&gt;mapfile&lt;/code&gt; は &lt;var&gt;array&lt;/var&gt; を割り当てる前に配列をクリアします 。</target>
        </trans-unit>
        <trans-unit id="2f1907c8652486dcdb0aef31f1cba67addf23ad3" translate="yes" xml:space="preserve">
          <source>If set at shell invocation, or in a shell startup file, arrange to execute the debugger profile before the shell starts, identical to the</source>
          <target state="translated">シェルの起動時に設定されている場合、またはシェルのスタートアップファイルに設定されている場合、シェルが起動する前にデバッガプロファイルを実行するようにアレンジします。</target>
        </trans-unit>
        <trans-unit id="f88d67aae9fbbcc5e6bf0dc40d8e5dbe106478a0" translate="yes" xml:space="preserve">
          <source>If set to &amp;lsquo;</source>
          <target state="translated">に設定した場合</target>
        </trans-unit>
        <trans-unit id="d51ed3e3c224e99ee28d845cfc30fd35c5f6b79a" translate="yes" xml:space="preserve">
          <source>If set to a number greater than zero, the value is used as the number of trailing directory components to retain when expanding the &lt;code&gt;\w&lt;/code&gt; and &lt;code&gt;\W&lt;/code&gt; prompt string escapes (see &lt;a href=&quot;controlling-the-prompt#Controlling-the-Prompt&quot;&gt;Controlling the Prompt&lt;/a&gt;). Characters removed are replaced with an ellipsis.</source>
          <target state="translated">ゼロより大きい数に設定した場合、この値は、 &lt;code&gt;\w&lt;/code&gt; および &lt;code&gt;\W&lt;/code&gt; プロンプト文字列エスケープを展開するときに保持する末尾のディレクトリコンポーネントの数として使用されます（ &lt;a href=&quot;controlling-the-prompt#Controlling-the-Prompt&quot;&gt;プロンプトの制御を&lt;/a&gt;参照）。 削除された文字は省略記号に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="5b68feee700a99b10103483f1241e248ed15abb0" translate="yes" xml:space="preserve">
          <source>If set to a numeric value greater than 0, defines a maximum function nesting level. Function invocations that exceed this nesting level will cause the current command to abort.</source>
          <target state="translated">0 より大きい数値に設定すると、関数の入れ子レベルの最大値を定義します。この入れ子レベルを超える関数の呼び出しは、現在のコマンドを中止させます。</target>
        </trans-unit>
        <trans-unit id="670809062dff56fe36807cfbddd56a579b60b277" translate="yes" xml:space="preserve">
          <source>If set to a value greater than zero, &lt;code&gt;TMOUT&lt;/code&gt; is treated as the default timeout for the &lt;code&gt;read&lt;/code&gt; builtin (see &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt;). The &lt;code&gt;select&lt;/code&gt; command (see &lt;a href=&quot;conditional-constructs#Conditional-Constructs&quot;&gt;Conditional Constructs&lt;/a&gt;) terminates if input does not arrive after &lt;code&gt;TMOUT&lt;/code&gt; seconds when input is coming from a terminal.</source>
          <target state="translated">ゼロより大きい値に設定した場合、 &lt;code&gt;TMOUT&lt;/code&gt; は &lt;code&gt;read&lt;/code&gt; 組み込みのデフォルトのタイムアウトとして扱われます（ &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash組み込みを&lt;/a&gt;参照）。 端末からの入力である &lt;code&gt;TMOUT&lt;/code&gt; 秒後に入力が到着しない場合、 &lt;code&gt;select&lt;/code&gt; コマンド（ &lt;a href=&quot;conditional-constructs#Conditional-Constructs&quot;&gt;条件付き構文を&lt;/a&gt;参照）は終了します。</target>
        </trans-unit>
        <trans-unit id="61462ac11150a1700bd6dd7abcf2d1bfe805e210" translate="yes" xml:space="preserve">
          <source>If set to an integer corresponding to a valid file descriptor, Bash will write the trace output generated when &amp;lsquo;</source>
          <target state="translated">有効なファイル記述子に対応する整数に設定されている場合、Bashは生成されたトレース出力を書き込みます '</target>
        </trans-unit>
        <trans-unit id="55e2801478004893e245bebe0ebd35f57ed0f814" translate="yes" xml:space="preserve">
          <source>If set to the value 1, Bash displays error messages generated by the &lt;code&gt;getopts&lt;/code&gt; builtin command.</source>
          <target state="translated">値1に設定すると、Bashは、 &lt;code&gt;getopts&lt;/code&gt; 組み込みコマンドによって生成されたエラーメッセージを表示します。</target>
        </trans-unit>
        <trans-unit id="796d2c3ac2aaf92fa03e90984e01911ce8a12e62" translate="yes" xml:space="preserve">
          <source>If set, &lt;code&gt;$'&lt;var&gt;string&lt;/var&gt;'&lt;/code&gt; and &lt;code&gt;$&quot;&lt;var&gt;string&lt;/var&gt;&quot;&lt;/code&gt; quoting is performed within &lt;code&gt;${&lt;var&gt;parameter&lt;/var&gt;}&lt;/code&gt; expansions enclosed in double quotes. This option is enabled by default.</source>
          <target state="translated">設定されている場合、 &lt;code&gt;$'&lt;var&gt;string&lt;/var&gt;'&lt;/code&gt; および &lt;code&gt;$&quot;&lt;var&gt;string&lt;/var&gt;&quot;&lt;/code&gt; 引用は、二重引用符で囲まれた &lt;code&gt;${&lt;var&gt;parameter&lt;/var&gt;}&lt;/code&gt; 展開内で実行されます。 このオプションはデフォルトで有効になっています。</target>
        </trans-unit>
        <trans-unit id="3ba697a44bc6bec460de9aa0e93c98c6681c1a45" translate="yes" xml:space="preserve">
          <source>If set, Bash allows filename patterns which match no files to expand to a null string, rather than themselves.</source>
          <target state="translated">設定されている場合、Bash はファイルにマッチしないファイル名のパターンを、それ自身ではなくヌル文字列に展開することを許可します。</target>
        </trans-unit>
        <trans-unit id="1c9c75e31bb9b681e286b348e9c25b106aefd45b" translate="yes" xml:space="preserve">
          <source>If set, Bash attempts spelling correction on directory names during word completion if the directory name initially supplied does not exist.</source>
          <target state="translated">設定されている場合、最初に指定されたディレクトリ名が存在しない場合、Bash はワード補完中にディレクトリ名のスペルチェックを試みます。</target>
        </trans-unit>
        <trans-unit id="8ea4e8e58398143c1e3fe450d9180b6a8cff442f" translate="yes" xml:space="preserve">
          <source>If set, Bash attempts to save all lines of a multiple-line command in the same history entry. This allows easy re-editing of multi-line commands. This option is enabled by default, but only has an effect if command history is enabled (see &lt;a href=&quot;bash-history-facilities#Bash-History-Facilities&quot;&gt;Bash History Facilities&lt;/a&gt;).</source>
          <target state="translated">設定すると、Bashは複数行コマンドのすべての行を同じ履歴エントリに保存しようとします。 これにより、複数行のコマンドを簡単に再編集できます。 このオプションはデフォルトで有効になっていますが、コマンド履歴が有効になっている場合にのみ有効です（「 &lt;a href=&quot;bash-history-facilities#Bash-History-Facilities&quot;&gt;Bash履歴機能&lt;/a&gt; 」を参照）。</target>
        </trans-unit>
        <trans-unit id="ce93cbcbf2bf13d7cbf432beb64352e0cd28ed8f" translate="yes" xml:space="preserve">
          <source>If set, Bash changes its behavior to that of version 3.1 with respect to quoted arguments to the conditional command&amp;rsquo;s &amp;lsquo;</source>
          <target state="translated">設定されている場合、Bashはその動作をバージョン3.1の動作に変更します。</target>
        </trans-unit>
        <trans-unit id="83dba9325cbab8a67804115d4d3e4f4bb8140b01" translate="yes" xml:space="preserve">
          <source>If set, Bash changes its behavior to that of version 3.2 with respect to locale-specific string comparison when using the &lt;code&gt;[[&lt;/code&gt; conditional command&amp;rsquo;s &amp;lsquo;</source>
          <target state="translated">設定されている場合、 &lt;code&gt;[[&lt;/code&gt; 条件付きコマンドの 'を使用すると、Bashはその動作をバージョン3.2のロケール固有の文字列比較に関して変更します</target>
        </trans-unit>
        <trans-unit id="40ce7df7a9e5ee28d00fb786efa9d3c2857f04bb" translate="yes" xml:space="preserve">
          <source>If set, Bash changes its behavior to that of version 4.0 with respect to locale-specific string comparison when using the &lt;code&gt;[[&lt;/code&gt; conditional command&amp;rsquo;s &amp;lsquo;</source>
          <target state="translated">設定されている場合、 &lt;code&gt;[[&lt;/code&gt; 条件付きコマンドの 'を使用すると、Bashはロケール固有の文字列比較に関してその動作をバージョン4.0の動作に変更します</target>
        </trans-unit>
        <trans-unit id="dedf38582c3016bc9b5bdedd3a37498ef42f9ef1" translate="yes" xml:space="preserve">
          <source>If set, Bash checks the window size after each external (non-builtin) command and, if necessary, updates the values of &lt;code&gt;LINES&lt;/code&gt; and &lt;code&gt;COLUMNS&lt;/code&gt;. This option is enabled by default.</source>
          <target state="translated">設定されている場合、Bashは各外部（非組み込み）コマンドの後にウィンドウサイズをチェックし、必要に応じて &lt;code&gt;LINES&lt;/code&gt; および &lt;code&gt;COLUMNS&lt;/code&gt; の値を更新します。 このオプションはデフォルトで有効になっています。</target>
        </trans-unit>
        <trans-unit id="f5e42f2a09e7e82fc731ab4023374133df9ec15c" translate="yes" xml:space="preserve">
          <source>If set, Bash does not print a warning message if an attempt is made to use a quoted compound array assignment as an argument to &lt;code&gt;declare&lt;/code&gt;, makes word expansion errors non-fatal errors that cause the current command to fail (the default behavior is to make them fatal errors that cause the shell to exit), and does not reset the loop state when a shell function is executed (this allows &lt;code&gt;break&lt;/code&gt; or &lt;code&gt;continue&lt;/code&gt; in a shell function to affect loops in the caller&amp;rsquo;s context).</source>
          <target state="translated">設定すると、引用符で囲まれた複合配列の割り当てを &lt;code&gt;declare&lt;/code&gt; の引数として使用しようとした場合、Bashは警告メッセージを出力せず、単語拡張エラーを致命的でないエラーにして、現在のコマンドを失敗させます（デフォルトの動作はシェルを終了させる致命的なエラー）、およびシェル関数の実行時にループ状態をリセットしません（これにより、シェル関数の &lt;code&gt;break&lt;/code&gt; または &lt;code&gt;continue&lt;/code&gt; が呼び出し元のコンテキストのループに影響を与えることができます）。</target>
        </trans-unit>
        <trans-unit id="ea1d8d33934bc994a558d7250e4c61adae031df0" translate="yes" xml:space="preserve">
          <source>If set, Bash does not process the replacement string in the pattern substitution word expansion using quote removal.</source>
          <target state="translated">設定されている場合、Bashはパターン置換ワード展開の置換文字列を引用符除去を使って処理しません。</target>
        </trans-unit>
        <trans-unit id="4ce2629bcc9863de7662b108ac2c7e18c15136ce" translate="yes" xml:space="preserve">
          <source>If set, Bash includes filenames beginning with a &amp;lsquo;.&amp;rsquo; in the results of filename expansion. The filenames &amp;lsquo;</source>
          <target state="translated">設定すると、Bashは「。」で始まるファイル名を含めます。 ファイル名の展開の結果。 ファイル名 '</target>
        </trans-unit>
        <trans-unit id="151ad7e893455a1a3a11b2e7117190370182fff0" translate="yes" xml:space="preserve">
          <source>If set, Bash lists the status of any stopped and running jobs before exiting an interactive shell. If any jobs are running, this causes the exit to be deferred until a second exit is attempted without an intervening command (see &lt;a href=&quot;job-control#Job-Control&quot;&gt;Job Control&lt;/a&gt;). The shell always postpones exiting if any jobs are stopped.</source>
          <target state="translated">設定すると、対話型シェルを終了する前に、Bashは停止して実行中のジョブのステータスを一覧表示します。 ジョブが実行中の場合、これにより、介在するコマンドなしで2番目の出口が試行されるまで出口が延期されます（ &lt;a href=&quot;job-control#Job-Control&quot;&gt;ジョブ制御を&lt;/a&gt;参照）。 シェルは、ジョブが停止した場合、常に終了を延期します。</target>
        </trans-unit>
        <trans-unit id="2538c67c1bddf594e51e1cc292c098d52219f727" translate="yes" xml:space="preserve">
          <source>If set, Bash matches filenames in a case-insensitive fashion when performing filename expansion.</source>
          <target state="translated">設定されている場合、Bash はファイル名の展開時に大文字小文字を区別せずにファイル名をマッチさせます。</target>
        </trans-unit>
        <trans-unit id="2fb6f87344f0c630d7cdd094c16b6c4eae76b199" translate="yes" xml:space="preserve">
          <source>If set, Bash matches patterns in a case-insensitive fashion when performing matching while executing &lt;code&gt;case&lt;/code&gt; or &lt;code&gt;[[&lt;/code&gt; conditional commands, when performing pattern substitution word expansions, or when filtering possible completions as part of programmable completion.</source>
          <target state="translated">設定されている場合、Bashは、大文字小文字を区別しない方法でパターンを照合します。 &lt;code&gt;case&lt;/code&gt; または小文字の &lt;code&gt;[[&lt;/code&gt; 条件付きコマンドを実行しているとき、パターン置換語展開を実行するとき、またはプログラム可能な補完の一部として可能な補完をフィルタリングするときに。</target>
        </trans-unit>
        <trans-unit id="fa526e67dfbf3b2eaf6c5be01047df0255da3a3a" translate="yes" xml:space="preserve">
          <source>If set, Bash quotes all shell metacharacters in filenames and directory names when performing completion. If not set, Bash removes metacharacters such as the dollar sign from the set of characters that will be quoted in completed filenames when these metacharacters appear in shell variable references in words to be completed. This means that dollar signs in variable names that expand to directories will not be quoted; however, any dollar signs appearing in filenames will not be quoted, either. This is active only when bash is using backslashes to quote completed filenames. This variable is set by default, which is the default Bash behavior in versions through 4.2.</source>
          <target state="translated">設定されている場合、Bash は補完を実行する際に、ファイル名とディレクトリ名の中のすべてのシェルのメタキャラクタを引用します。設定されていない場合、Bash はドル記号のようなメタキャラクタを、補完される言葉のシェル変数参照に現れたときに、補完されたファイル名の中で引用される文字のセットから削除します。これは、ディレクトリに展開される変数名のドル記号は引用されないことを意味しますが、ファイル名に現れるドル記号も引用されません。これは、bash がバックスラッシュを使用して完了したファイル名を引用する場合にのみ有効です。この変数はデフォルトで設定されており、バージョン 4.2 以降の Bash のデフォルトの動作となっています。</target>
        </trans-unit>
        <trans-unit id="13f771755d078034a764360a2fa22176df155f9f" translate="yes" xml:space="preserve">
          <source>If set, Bash replaces directory names with the results of word expansion when performing filename completion. This changes the contents of the readline editing buffer. If not set, Bash attempts to preserve what the user typed.</source>
          <target state="translated">設定されている場合、Bash はファイル名補完を実行する際に、ディレクトリ名をワード展開の結果で置き換えます。これにより、リードライン編集バッファの内容が変更されます。設定されていない場合、Bash はユーザが入力したものを保持しようとします。</target>
        </trans-unit>
        <trans-unit id="23989e8210862fdc11296dd107bf3007f01cdb8b" translate="yes" xml:space="preserve">
          <source>If set, Bash saves the positional parameters to BASH_ARGV and BASH_ARGC before they are used, regardless of whether or not extended debugging mode is enabled.</source>
          <target state="translated">設定されている場合、拡張デバッグモードが有効かどうかに関わらず、Bash は使用される前に BASH_ARGV と BASH_ARGC に位置パラメータを保存します。</target>
        </trans-unit>
        <trans-unit id="5bb7d5096b9817b0ce116f65ab9f347af5231bfe" translate="yes" xml:space="preserve">
          <source>If set, Bash uses its value as the name of a directory in which Bash creates temporary files for the shell&amp;rsquo;s use.</source>
          <target state="translated">設定されている場合、Bashはその値を、Bashがシェルで使用する一時ファイルを作成するディレクトリの名前として使用します。</target>
        </trans-unit>
        <trans-unit id="9944b303cdb5e5ece86f98632299216c14c3e0f4" translate="yes" xml:space="preserve">
          <source>If set, Bash will send &lt;code&gt;SIGHUP&lt;/code&gt; to all jobs when an interactive login shell exits (see &lt;a href=&quot;signals#Signals&quot;&gt;Signals&lt;/a&gt;).</source>
          <target state="translated">設定されている場合、対話型ログインシェルが終了すると、Bashはすべてのジョブに &lt;code&gt;SIGHUP&lt;/code&gt; を送信します（ &lt;a href=&quot;signals#Signals&quot;&gt;シグナルを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="b01c605d4295e6f33c90d7585617060e8ea103f5" translate="yes" xml:space="preserve">
          <source>If set, Bash, when in &lt;small&gt;POSIX&lt;/small&gt; mode, treats a single quote in a double-quoted parameter expansion as a special character. The single quotes must match (an even number) and the characters between the single quotes are considered quoted. This is the behavior of &lt;small&gt;POSIX&lt;/small&gt; mode through version 4.1. The default Bash behavior remains as in previous versions.</source>
          <target state="translated">設定されている場合、 &lt;small&gt;POSIX&lt;/small&gt;モードの場合、Bashは二重引用符で囲まれたパラメーター展開内の単一引用符を特殊文字として扱います。 単一引用符は一致する必要があり（偶数）、単一引用符の間の文字は引用符で囲まれていると見なされます。 これは、バージョン4.1までの&lt;small&gt;POSIX&lt;/small&gt;モードの動作です。 デフォルトのBashの動作は、以前のバージョンと同じです。</target>
        </trans-unit>
        <trans-unit id="524dcc79e18562f7fc6d766d279f01ed2606c0e2" translate="yes" xml:space="preserve">
          <source>If set, a command name that is the name of a directory is executed as if it were the argument to the &lt;code&gt;cd&lt;/code&gt; command. This option is only used by interactive shells.</source>
          <target state="translated">設定すると、ディレクトリの名前であるコマンド名が、 &lt;code&gt;cd&lt;/code&gt; コマンドの引数であるかのように実行されます。 このオプションは対話型シェルでのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="9349e599bc48288e2bc0cf7ae88af2367fbcfd96" translate="yes" xml:space="preserve">
          <source>If set, aliases are expanded as described below under Aliases, &lt;a href=&quot;aliases#Aliases&quot;&gt;Aliases&lt;/a&gt;. This option is enabled by default for interactive shells.</source>
          <target state="translated">設定されている場合、エイリアスは、「エイリアス、エイリアス」で後述するように展開されます。 このオプションは、対話型シェルではデフォルトで有効になっています。</target>
        </trans-unit>
        <trans-unit id="01996a22c68871b270e9aa28572029220ba9f012" translate="yes" xml:space="preserve">
          <source>If set, and Readline is being used, Bash will attempt to perform hostname completion when a word containing a &amp;lsquo;</source>
          <target state="translated">設定されていて、Readlineが使用されている場合、Bashは、「</target>
        </trans-unit>
        <trans-unit id="7ea1e84fbbe570614555a80076b0ddaa4ce41c06" translate="yes" xml:space="preserve">
          <source>If set, and Readline is being used, Bash will not attempt to search the &lt;code&gt;PATH&lt;/code&gt; for possible completions when completion is attempted on an empty line.</source>
          <target state="translated">設定されていて、Readlineが使用されている場合、Bashは空の行で補完が試行されたときに、可能な補完の &lt;code&gt;PATH&lt;/code&gt; を検索しません。</target>
        </trans-unit>
        <trans-unit id="97eb2bb66597befe93514836295c1094a25f0b91" translate="yes" xml:space="preserve">
          <source>If set, and Readline is being used, a user is given the opportunity to re-edit a failed history substitution.</source>
          <target state="translated">設定されていて、Readlineが使用されている場合、失敗した履歴の置換を再編集する機会がユーザーに与えられます。</target>
        </trans-unit>
        <trans-unit id="9caef08bbd1665feb673ec3dcbb2b43d20573472" translate="yes" xml:space="preserve">
          <source>If set, and Readline is being used, the results of history substitution are not immediately passed to the shell parser. Instead, the resulting line is loaded into the Readline editing buffer, allowing further modification.</source>
          <target state="translated">設定されていてReadlineが使用されている場合、履歴置換の結果はすぐにシェルパーサには渡されません。その代わり、結果の行はReadline編集バッファにロードされ、さらに変更が可能になります。</target>
        </trans-unit>
        <trans-unit id="0430e5ba6c6756b1d6bb8b315c37057061725213" translate="yes" xml:space="preserve">
          <source>If set, and a file that Bash is checking for mail has been accessed since the last time it was checked, the message &lt;code&gt;&quot;The mail in &lt;var&gt;mailfile&lt;/var&gt; has been read&quot;&lt;/code&gt; is displayed.</source>
          <target state="translated">設定されていて、前回チェックされてからBashがメールをチェックしているファイルにアクセスした場合、 &lt;code&gt;&quot;The mail in &lt;var&gt;mailfile&lt;/var&gt; has been read&quot;&lt;/code&gt; というメッセージが表示されます。</target>
        </trans-unit>
        <trans-unit id="6359e84564f30cc604b526da5a0776f958c16285" translate="yes" xml:space="preserve">
          <source>If set, and job control is not active, the shell runs the last command of a pipeline not executed in the background in the current shell environment.</source>
          <target state="translated">設定されていて、ジョブ制御がアクティブでない場合、シェルは現在のシェル環境でバックグラウンドで実行されていないパイプラインの最後のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="bceb55bbf9b565581f0c0cd00f48ba9e9be82b89" translate="yes" xml:space="preserve">
          <source>If set, and programmable completion is enabled, Bash treats a command name that doesn&amp;rsquo;t have any completions as a possible alias and attempts alias expansion. If it has an alias, Bash attempts programmable completion using the command word resulting from the expanded alias.</source>
          <target state="translated">設定されていて、プログラム可能な補完機能が有効になっている場合、Bashは補完機能のないコマンド名を可能なエイリアスとして扱い、エイリアスの拡張を試みます。 エイリアスがある場合、Bashは、エイリアスを展開した結果のコマンドワードを使用してプログラム可能な補完を試みます。</target>
        </trans-unit>
        <trans-unit id="1ece77937e574f2030045d06aa2e5131a108b370" translate="yes" xml:space="preserve">
          <source>If set, any trap on &lt;code&gt;DEBUG&lt;/code&gt; and &lt;code&gt;RETURN&lt;/code&gt; are inherited by shell functions, command substitutions, and commands executed in a subshell environment. The &lt;code&gt;DEBUG&lt;/code&gt; and &lt;code&gt;RETURN&lt;/code&gt; traps are normally not inherited in such cases.</source>
          <target state="translated">設定されている場合、 &lt;code&gt;DEBUG&lt;/code&gt; および &lt;code&gt;RETURN&lt;/code&gt; のトラップは、シェル関数、コマンド置換、およびサブシェル環境で実行されるコマンドによって継承されます。 このような場合、 &lt;code&gt;DEBUG&lt;/code&gt; トラップと &lt;code&gt;RETURN&lt;/code&gt; トラップは通常継承されません。</target>
        </trans-unit>
        <trans-unit id="de069878dada4d702b6a71bd07d34a6994d2e6e4" translate="yes" xml:space="preserve">
          <source>If set, any trap on &lt;code&gt;ERR&lt;/code&gt; is inherited by shell functions, command substitutions, and commands executed in a subshell environment. The &lt;code&gt;ERR&lt;/code&gt; trap is normally not inherited in such cases.</source>
          <target state="translated">設定されている場合、 &lt;code&gt;ERR&lt;/code&gt; のトラップは、シェル関数、コマンド置換、およびサブシェル環境で実行されるコマンドによって継承されます。 このような場合、 &lt;code&gt;ERR&lt;/code&gt; トラップは通常継承されません。</target>
        </trans-unit>
        <trans-unit id="8b36606b48de4cdd3638d27e0de266cb6333319b" translate="yes" xml:space="preserve">
          <source>If set, calling &lt;code&gt;unset&lt;/code&gt; on local variables in previous function scopes marks them so subsequent lookups find them unset until that function returns. This is identical to the behavior of unsetting local variables at the current function scope.</source>
          <target state="translated">設定されている場合、前の関数スコープのローカル変数で &lt;code&gt;unset&lt;/code&gt; を呼び出すと、それらにマークが付けられ、その後の検索で、その関数が戻るまで未設定であることがわかります。 これは、現在の関数スコープでローカル変数を設定解除する動作と同じです。</target>
        </trans-unit>
        <trans-unit id="fbd5e98b4ada631ae8afc0b3ace1cea1bc1fb5b6" translate="yes" xml:space="preserve">
          <source>If set, command substitution inherits the value of the &lt;code&gt;errexit&lt;/code&gt; option, instead of unsetting it in the subshell environment. This option is enabled when &lt;small&gt;POSIX&lt;/small&gt; mode is enabled.</source>
          <target state="translated">設定されている場合、コマンド置換は、サブシェル環境で &lt;code&gt;errexit&lt;/code&gt; オプションの設定を解除するのではなく、 errexitオプションの値を継承します。 このオプションは、 &lt;small&gt;POSIX&lt;/small&gt;モードが有効な場合に有効になります。</target>
        </trans-unit>
        <trans-unit id="e3b8b47e3cef60b23b50d3ae86ab70fe0a37f010" translate="yes" xml:space="preserve">
          <source>If set, do not resolve symbolic links when performing commands such as &lt;code&gt;cd&lt;/code&gt; which change the current directory. The physical directory is used instead. By default, Bash follows the logical chain of directories when performing commands which change the current directory.</source>
          <target state="translated">設定すると、現在のディレクトリを変更する &lt;code&gt;cd&lt;/code&gt; などのコマンドを実行するときにシンボリックリンクを解決しません。 代わりに物理ディレクトリが使用されます。 デフォルトでは、現在のディレクトリを変更するコマンドを実行すると、Bashはディレクトリの論理チェーンに従います。</target>
        </trans-unit>
        <trans-unit id="9f88675f12cacf08b380a7cf5af85cdd408a6411" translate="yes" xml:space="preserve">
          <source>If set, local variables inherit the value and attributes of a variable of the same name that exists at a previous scope before any new value is assigned. The &lt;var&gt;nameref&lt;/var&gt; attribute is not inherited.</source>
          <target state="translated">設定されている場合、ローカル変数は、新しい値が割り当てられる前に、前のスコープに存在する同じ名前の変数の値と属性を継承します。 &lt;var&gt;nameref&lt;/var&gt; 属性は継承されません。</target>
        </trans-unit>
        <trans-unit id="c15922052fb6e6f230ba76c62507ba296628a0d0" translate="yes" xml:space="preserve">
          <source>If set, minor errors in the spelling of a directory component in a &lt;code&gt;cd&lt;/code&gt; command will be corrected. The errors checked for are transposed characters, a missing character, and a character too many. If a correction is found, the corrected path is printed, and the command proceeds. This option is only used by interactive shells.</source>
          <target state="translated">設定すると、 &lt;code&gt;cd&lt;/code&gt; コマンドのディレクトリコンポーネントのスペルの小さなエラーが修正されます。 チェックされるエラーは、転置された文字、欠落している文字、および文字が多すぎます。 修正が見つかると、修正されたパスが出力され、コマンドが続行されます。 このオプションは対話型シェルでのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="e16241ced739fb607c71b1addd6fdb4c7812708b" translate="yes" xml:space="preserve">
          <source>If set, patterns which fail to match filenames during filename expansion result in an expansion error.</source>
          <target state="translated">設定されている場合、ファイル名の展開中にファイル名との一致に失敗したパターンは展開エラーとなります。</target>
        </trans-unit>
        <trans-unit id="dd353747d5b7e8ed81af0e7f92fdf7b1d6ed6f9c" translate="yes" xml:space="preserve">
          <source>If set, prompt strings undergo parameter expansion, command substitution, arithmetic expansion, and quote removal after being expanded as described below (see &lt;a href=&quot;controlling-the-prompt#Controlling-the-Prompt&quot;&gt;Controlling the Prompt&lt;/a&gt;). This option is enabled by default.</source>
          <target state="translated">設定されている場合、プロンプト文字列は、以下で説明するように展開された後、パラメーター展開、コマンド置換、算術展開、引用符の削除を受けます（ &lt;a href=&quot;controlling-the-prompt#Controlling-the-Prompt&quot;&gt;プロンプトの制御を&lt;/a&gt;参照）。 このオプションはデフォルトで有効になっています。</target>
        </trans-unit>
        <trans-unit id="ee08c8ac1fddd9aaad9cb8aa674d274440992f17" translate="yes" xml:space="preserve">
          <source>If set, range expressions used in pattern matching bracket expressions (see &lt;a href=&quot;pattern-matching#Pattern-Matching&quot;&gt;Pattern Matching&lt;/a&gt;) behave as if in the traditional C locale when performing comparisons. That is, the current locale&amp;rsquo;s collating sequence is not taken into account, so &amp;lsquo;</source>
          <target state="translated">設定すると、パターンマッチングの括弧式（「 &lt;a href=&quot;pattern-matching#Pattern-Matching&quot;&gt;パターンマッチング&lt;/a&gt; 」を参照）で使用される範囲式は、比較を実行するときに従来のCロケールの場合と同様に動作します。 つまり、現在のロケールの照合シーケンスは考慮されないため、 '</target>
        </trans-unit>
        <trans-unit id="532961dedcbffcb75500ae01cf7dfa330bdbd494" translate="yes" xml:space="preserve">
          <source>If set, shell error messages are written in the standard &lt;small&gt;GNU&lt;/small&gt; error message format.</source>
          <target state="translated">設定すると、シェルエラーメッセージは標準の&lt;small&gt;GNU&lt;/small&gt;エラーメッセージ形式で書き込まれます。</target>
        </trans-unit>
        <trans-unit id="a0f445855a089d9e1ff1d19ba6a442ce38852aeb" translate="yes" xml:space="preserve">
          <source>If set, the &lt;code&gt;echo&lt;/code&gt; builtin expands backslash-escape sequences by default.</source>
          <target state="translated">設定されている場合、 &lt;code&gt;echo&lt;/code&gt; ビルトインはデフォルトでバックスラッシュエスケープシーケンスを展開します。</target>
        </trans-unit>
        <trans-unit id="7401d5a39dde09f90702593f121ccff9d32a79ec" translate="yes" xml:space="preserve">
          <source>If set, the &lt;code&gt;source&lt;/code&gt; builtin uses the value of &lt;code&gt;PATH&lt;/code&gt; to find the directory containing the file supplied as an argument. This option is enabled by default.</source>
          <target state="translated">設定されている場合、組み込みの &lt;code&gt;source&lt;/code&gt; は &lt;code&gt;PATH&lt;/code&gt; の値を使用して、引数として指定されたファイルを含むディレクトリを検索します。 このオプションはデフォルトで有効になっています。</target>
        </trans-unit>
        <trans-unit id="929ecd64341730633669db0878e9d6103a5c68a2" translate="yes" xml:space="preserve">
          <source>If set, the extended pattern matching features described above (see &lt;a href=&quot;pattern-matching#Pattern-Matching&quot;&gt;Pattern Matching&lt;/a&gt;) are enabled.</source>
          <target state="translated">設定すると、上記の拡張パターンマッチング機能（「 &lt;a href=&quot;pattern-matching#Pattern-Matching&quot;&gt;パターンマッチング&lt;/a&gt; 」を参照）が有効になります。</target>
        </trans-unit>
        <trans-unit id="d25abd86d6c395156512cf9d8235fb585d7dcc4c" translate="yes" xml:space="preserve">
          <source>If set, the history list is appended to the file named by the value of the &lt;code&gt;HISTFILE&lt;/code&gt; variable when the shell exits, rather than overwriting the file.</source>
          <target state="translated">設定されている場合、履歴リストは、シェルの終了時に、ファイルを上書きするのではなく、 &lt;code&gt;HISTFILE&lt;/code&gt; 変数の値で指定されたファイルに追加されます。</target>
        </trans-unit>
        <trans-unit id="0dfbb4f731ea9e5935a750ccb2c4ae145387d5b7" translate="yes" xml:space="preserve">
          <source>If set, the pattern &amp;lsquo;</source>
          <target state="translated">設定されている場合、パターン '</target>
        </trans-unit>
        <trans-unit id="d20efcf1f5218c0f6dde042bc148eec1dfd84659" translate="yes" xml:space="preserve">
          <source>If set, the programmable completion facilities (see &lt;a href=&quot;programmable-completion#Programmable-Completion&quot;&gt;Programmable Completion&lt;/a&gt;) are enabled. This option is enabled by default.</source>
          <target state="translated">設定すると、プログラム可能な完了機能（「 &lt;a href=&quot;programmable-completion#Programmable-Completion&quot;&gt;プログラム可能な完了&lt;/a&gt; 」を参照）が有効になります。 このオプションはデフォルトで有効になっています。</target>
        </trans-unit>
        <trans-unit id="1cfd778c33d0a5bb3623ddc496866a42f25b4b02" translate="yes" xml:space="preserve">
          <source>If set, the return value of a pipeline is the value of the last (rightmost) command to exit with a non-zero status, or zero if all commands in the pipeline exit successfully. This option is disabled by default.</source>
          <target state="translated">このオプションを設定すると、パイプラインの戻り値は、0 以外のステータスで終了する最後の (右端の)コマンドの値、またはパイプライン内のすべてのコマンドが正常に終了した場合は 0 になります。このオプションは、既定では無効になっています。</target>
        </trans-unit>
        <trans-unit id="0e4ecae825db827904953ed14cd72be66025462a" translate="yes" xml:space="preserve">
          <source>If set, the shell suppresses multiple evaluation of associative array subscripts during arithmetic expression evaluation, while executing builtins that can perform variable assignments, and while executing builtins that perform array dereferencing.</source>
          <target state="translated">設定されている場合、シェルは、変数の代入を実行できるビルドインの実行中、および配列の参照を実行するビルドインの実行中に、算術式の評価中に連想配列添え字の多重評価を抑制します。</target>
        </trans-unit>
        <trans-unit id="aee2679701e687e1a860e08a9cd9723e0988c9a9" translate="yes" xml:space="preserve">
          <source>If set, the suffixes specified by the &lt;code&gt;FIGNORE&lt;/code&gt; shell variable cause words to be ignored when performing word completion even if the ignored words are the only possible completions. See &lt;a href=&quot;bash-variables#Bash-Variables&quot;&gt;Bash Variables&lt;/a&gt;, for a description of &lt;code&gt;FIGNORE&lt;/code&gt;. This option is enabled by default.</source>
          <target state="translated">設定されている場合、 &lt;code&gt;FIGNORE&lt;/code&gt; シェル変数で指定されたサフィックスにより、単語の補完が実行されるときに、無視される単語が唯一の可能な補完であっても、単語が無視されます。 &lt;code&gt;FIGNORE&lt;/code&gt; の説明については、 &lt;a href=&quot;bash-variables#Bash-Variables&quot;&gt;Bash変数を&lt;/a&gt;参照してください。 このオプションはデフォルトで有効になっています。</target>
        </trans-unit>
        <trans-unit id="e7fa24bc01eb5c7c545872c6bce0f30c3c535a3f" translate="yes" xml:space="preserve">
          <source>If set, the value is interpreted as a command to execute before the printing of each primary prompt (&lt;code&gt;$PS1&lt;/code&gt;).</source>
          <target state="translated">設定されている場合、値は各プライマリプロンプト（ &lt;code&gt;$PS1&lt;/code&gt; ）の印刷前に実行するコマンドとして解釈されます。</target>
        </trans-unit>
        <trans-unit id="3d9b7696c9777c3fdef5f5f1690ef14ee23382d9" translate="yes" xml:space="preserve">
          <source>If the</source>
          <target state="translated">の場合は</target>
        </trans-unit>
        <trans-unit id="9b7453082b85c0dfe273fa0bac742afa84cc65ae" translate="yes" xml:space="preserve">
          <source>If the &amp;lsquo;</source>
          <target state="translated">'</target>
        </trans-unit>
        <trans-unit id="4a22cb6827833044b2ede9b1dcf1c374590cf127" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;HISTTIMEFORMAT&lt;/code&gt; is set, the time stamp information associated with each history entry is written to the history file, marked with the history comment character. When the history file is read, lines beginning with the history comment character followed immediately by a digit are interpreted as timestamps for the following history entry.</source>
          <target state="translated">&lt;code&gt;HISTTIMEFORMAT&lt;/code&gt; が設定されている場合、各履歴エントリに関連付けられているタイムスタンプ情報が、履歴コメント文字でマークされた履歴ファイルに書き込まれます。 履歴ファイルが読み取られると、履歴コメント文字の直後に数字が続く行は、次の履歴エントリのタイムスタンプとして解釈されます。</target>
        </trans-unit>
        <trans-unit id="054839071066ec9f34f4cf4abd12d33d1e4bc044" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;extglob&lt;/code&gt; shell option is enabled using the &lt;code&gt;shopt&lt;/code&gt; builtin, several extended pattern matching operators are recognized. In the following description, a &lt;var&gt;pattern-list&lt;/var&gt; is a list of one or more patterns separated by a &amp;lsquo;</source>
          <target state="translated">組み込みの &lt;code&gt;shopt&lt;/code&gt; を使用して &lt;code&gt;extglob&lt;/code&gt; シェルオプションを有効にすると、いくつかの拡張パターンマッチング演算子が認識されます。 以下の説明では、 &lt;var&gt;pattern-list&lt;/var&gt; は、 'で区切られた1つ以上のパターンのリストです。</target>
        </trans-unit>
        <trans-unit id="db1456589cde9f027231d50a5ef788521caa8a2b" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;huponexit&lt;/code&gt; shell option has been set with &lt;code&gt;shopt&lt;/code&gt; (see &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;), Bash sends a &lt;code&gt;SIGHUP&lt;/code&gt; to all jobs when an interactive login shell exits.</source>
          <target state="translated">&lt;code&gt;shopt&lt;/code&gt; で &lt;code&gt;huponexit&lt;/code&gt; シェルオプションが設定されている場合（ &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;Shopt Builtinを&lt;/a&gt;参照）、インタラクティブログインシェルが終了すると、Bashはすべてのジョブに &lt;code&gt;SIGHUP&lt;/code&gt; を送信します。</target>
        </trans-unit>
        <trans-unit id="05896284c1b6e1c762ed3c503a01a064c0179e7b" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;show-mode-in-prompt&lt;/var&gt; variable is enabled, this string is displayed immediately before the last line of the primary prompt when emacs editing mode is active. The value is expanded like a key binding, so the standard set of meta- and control prefixes and backslash escape sequences is available. Use the &amp;lsquo;</source>
          <target state="translated">&lt;var&gt;show-mode-in-prompt&lt;/var&gt; 変数が有効な場合、この文字列は、emacs編集モードがアクティブなときに、プライマリプロンプトの最終行の直前に表示されます。 値はキーバインディングのように展開されるため、メタプレフィックスとコントロールプレフィックスの標準セットとバックスラッシュエスケープシーケンスを使用できます。 使用 '</target>
        </trans-unit>
        <trans-unit id="a47328a5af0ba72502c03a74fccfa6394c9482d6" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;show-mode-in-prompt&lt;/var&gt; variable is enabled, this string is displayed immediately before the last line of the primary prompt when vi editing mode is active and in command mode. The value is expanded like a key binding, so the standard set of meta- and control prefixes and backslash escape sequences is available. Use the &amp;lsquo;</source>
          <target state="translated">&lt;var&gt;show-mode-in-prompt&lt;/var&gt; 変数が有効になっている場合、vi編集モードがアクティブでコマンドモードのときに、この文字列はプライマリプロンプトの最終行の直前に表示されます。 値はキーバインディングのように展開されるため、メタプレフィックスとコントロールプレフィックスの標準セットとバックスラッシュエスケープシーケンスを使用できます。 使用 '</target>
        </trans-unit>
        <trans-unit id="e74f6642baaada2241bf823143088cfb8b1c430a" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;show-mode-in-prompt&lt;/var&gt; variable is enabled, this string is displayed immediately before the last line of the primary prompt when vi editing mode is active and in insertion mode. The value is expanded like a key binding, so the standard set of meta- and control prefixes and backslash escape sequences is available. Use the &amp;lsquo;</source>
          <target state="translated">&lt;var&gt;show-mode-in-prompt&lt;/var&gt; 変数が有効になっている場合、この文字列は、vi編集モードがアクティブで挿入モードのときに、プライマリプロンプトの最終行の直前に表示されます。 値はキーバインディングのように展開されるため、メタプレフィックスとコントロールプレフィックスの標準セットとバックスラッシュエスケープシーケンスを使用できます。 使用 '</target>
        </trans-unit>
        <trans-unit id="30998f0fe4e2941544fd8bc821fc1183fd2c1673" translate="yes" xml:space="preserve">
          <source>If the Cover Text requirement of section 3 is applicable to these copies of the Document, then if the Document is less than one half of the entire aggregate, the Document&amp;rsquo;s Cover Texts may be placed on covers that bracket the Document within the aggregate, or the electronic equivalent of covers if the Document is in electronic form. Otherwise they must appear on printed covers that bracket the whole aggregate.</source>
          <target state="translated">セクション3のカバーテキスト要件がドキュメントのこれらのコピーに適用される場合、ドキュメントが全体の半分未満である場合、ドキュメントのカバーテキストは、ドキュメントを集約内で囲むカバーに配置するか、またはドキュメントが電子形式の場合、カバーの電子的同等物。 それ以外の場合は、骨材全体を囲む印刷されたカバーに表示する必要があります。</target>
        </trans-unit>
        <trans-unit id="b01b14a92da64769140796d5db1f7480425aa3ee" translate="yes" xml:space="preserve">
          <source>If the Modified Version includes new front-matter sections or appendices that qualify as Secondary Sections and contain no material copied from the Document, you may at your option designate some or all of these sections as invariant. To do this, add their titles to the list of Invariant Sections in the Modified Version&amp;rsquo;s license notice. These titles must be distinct from any other section titles.</source>
          <target state="translated">変更されたバージョンに、第2セクションとしての資格があり、ドキュメントからコピーされた資料が含まれていない新しい前書きセクションまたは付録が含まれている場合、これらのセクションの一部またはすべてを不変として指定することができます。 これを行うには、変更されたバージョンのライセンス通知の不変セクションのリストにタイトルを追加します。 これらのタイトルは、他のセクションのタイトルとは異なる必要があります。</target>
        </trans-unit>
        <trans-unit id="ae42262454a5127278c1909c79b76841c7b45277" translate="yes" xml:space="preserve">
          <source>If the builtin command &lt;code&gt;return&lt;/code&gt; is executed in a function, the function completes and execution resumes with the next command after the function call. Any command associated with the &lt;code&gt;RETURN&lt;/code&gt; trap is executed before execution resumes. When a function completes, the values of the positional parameters and the special parameter &amp;lsquo;</source>
          <target state="translated">組み込みコマンド &lt;code&gt;return&lt;/code&gt; が関数で実行されると、関数は完了し、関数呼び出し後の次のコマンドから実行が再開されます。 &lt;code&gt;RETURN&lt;/code&gt; トラップに関連するコマンドは、実行が再開する前に実行されます。 関数が完了すると、位置パラメータと特別なパラメータの値 '</target>
        </trans-unit>
        <trans-unit id="9414ef2fe2583852563464aa2c575ff4cb02f6ca" translate="yes" xml:space="preserve">
          <source>If the characters following the tilde in the tilde-prefix consist of a number &lt;var&gt;N&lt;/var&gt;, optionally prefixed by a &amp;lsquo;</source>
          <target state="translated">チルダ接頭辞のチルダに続く文字が数字 &lt;var&gt;N&lt;/var&gt; で構成され、オプションで接頭辞 'が付いている場合</target>
        </trans-unit>
        <trans-unit id="0f66c975b1e9edc53dfe72b4e402ff8bc30f4da7" translate="yes" xml:space="preserve">
          <source>If the command name contains no slashes, the shell attempts to locate it. If there exists a shell function by that name, that function is invoked as described in &lt;a href=&quot;shell-functions#Shell-Functions&quot;&gt;Shell Functions&lt;/a&gt;.</source>
          <target state="translated">コマンド名にスラッシュが含まれていない場合、シェルはそれを見つけようとします。 その名前のシェル関数が存在する場合、その関数は、「 &lt;a href=&quot;shell-functions#Shell-Functions&quot;&gt;シェル関数」で&lt;/a&gt;説明されているように呼び出されます。</target>
        </trans-unit>
        <trans-unit id="f20af8e5f490bb85cabed38dc27315b8be4a2484" translate="yes" xml:space="preserve">
          <source>If the command run by the &lt;code&gt;DEBUG&lt;/code&gt; trap returns a non-zero value, the next command is skipped and not executed.</source>
          <target state="translated">&lt;code&gt;DEBUG&lt;/code&gt; トラップによって実行されたコマンドがゼロ以外の値を返した場合、次のコマンドはスキップされ、実行されません。</target>
        </trans-unit>
        <trans-unit id="4b6d40a13b60a08f621b0b1d4a57fe5e59527120" translate="yes" xml:space="preserve">
          <source>If the command run by the &lt;code&gt;DEBUG&lt;/code&gt; trap returns a value of 2, and the shell is executing in a subroutine (a shell function or a shell script executed by the &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;source&lt;/code&gt; builtins), the shell simulates a call to &lt;code&gt;return&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DEBUG&lt;/code&gt; トラップによって実行されたコマンドが値2を返し、シェルがサブルーチン（ &lt;code&gt;.&lt;/code&gt; または &lt;code&gt;source&lt;/code&gt; 組み込みによって実行されるシェル関数またはシェルスクリプト）で実行されている場合、シェルは &lt;code&gt;return&lt;/code&gt; への呼び出しをシミュレートします。</target>
        </trans-unit>
        <trans-unit id="f83971eccd504a2e75124443fa3d5576d5f18348" translate="yes" xml:space="preserve">
          <source>If the command was not begun asynchronously, the shell waits for the command to complete and collects its exit status.</source>
          <target state="translated">コマンドが非同期的に開始されていない場合、シェルはコマンドが完了するのを待ち、その終了ステータスを収集します。</target>
        </trans-unit>
        <trans-unit id="4ae4fb110d63c7096c1b994332344374159c067f" translate="yes" xml:space="preserve">
          <source>If the control variable in a &lt;code&gt;for&lt;/code&gt; loop has the nameref attribute, the list of words can be a list of shell variables, and a name reference will be established for each word in the list, in turn, when the loop is executed. Array variables cannot be given the nameref attribute. However, nameref variables can reference array variables and subscripted array variables. Namerefs can be unset using the</source>
          <target state="translated">&lt;code&gt;for&lt;/code&gt; ループの制御変数にnameref属性がある場合、単語のリストはシェル変数のリストにすることができ、ループが実行されると、リスト内の各単語に対して名前参照が確立されます。 配列変数にnameref属性を与えることはできません。 ただし、nameref変数は配列変数および添え字付き配列変数を参照できます。 Namerefは、</target>
        </trans-unit>
        <trans-unit id="d888181452fabb4419c2b1daf7d28c4d9a94611c" translate="yes" xml:space="preserve">
          <source>If the description for a command says that it &amp;lsquo;kills&amp;rsquo; text, then you can be sure that you can get the text back in a different (or the same) place later.</source>
          <target state="translated">コマンドの説明に「テキストを削除する」と記載されている場合は、後で別の（または同じ）場所にテキストを戻すことができます。</target>
        </trans-unit>
        <trans-unit id="05397a050dc8c9703cdaf1abb09d6dada14f1d08" translate="yes" xml:space="preserve">
          <source>If the effective uid is 0, &lt;code&gt;#&lt;/code&gt;, otherwise &lt;code&gt;$&lt;/code&gt;.</source>
          <target state="translated">実効uidが0の場合は &lt;code&gt;#&lt;/code&gt; 、それ以外の場合は &lt;code&gt;$&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="da1a1344c2ffc23e855a0673f3f4c0b321925609" translate="yes" xml:space="preserve">
          <source>If the first argument is &amp;lsquo;</source>
          <target state="translated">最初の引数が '</target>
        </trans-unit>
        <trans-unit id="0e911ffd5bbeed35045cf2ac99ba15b01c5758dc" translate="yes" xml:space="preserve">
          <source>If the first argument is exactly &amp;lsquo;</source>
          <target state="translated">最初の引数が正確に '</target>
        </trans-unit>
        <trans-unit id="e9f08dd4da402efbb0a5b33aeef095b7ba5e7a6b" translate="yes" xml:space="preserve">
          <source>If the first character of &lt;var&gt;parameter&lt;/var&gt; is an exclamation point (!), and &lt;var&gt;parameter&lt;/var&gt; is not a &lt;var&gt;nameref&lt;/var&gt;, it introduces a level of indirection. Bash uses the value formed by expanding the rest of &lt;var&gt;parameter&lt;/var&gt; as the new &lt;var&gt;parameter&lt;/var&gt;; this is then expanded and that value is used in the rest of the expansion, rather than the expansion of the original &lt;var&gt;parameter&lt;/var&gt;. This is known as &lt;code&gt;indirect expansion&lt;/code&gt;. The value is subject to tilde expansion, parameter expansion, command substitution, and arithmetic expansion. If &lt;var&gt;parameter&lt;/var&gt; is a nameref, this expands to the name of the variable referenced by &lt;var&gt;parameter&lt;/var&gt; instead of performing the complete indirect expansion. The exceptions to this are the expansions of ${!&lt;var&gt;prefix&lt;/var&gt;*} and ${!&lt;var&gt;name&lt;/var&gt;[@]} described below. The exclamation point must immediately follow the left brace in order to introduce indirection.</source>
          <target state="translated">&lt;var&gt;parameter&lt;/var&gt; の最初の文字が感嘆符（！）であり、 &lt;var&gt;parameter&lt;/var&gt; が &lt;var&gt;nameref&lt;/var&gt; ではない場合、間接参照のレベルが導入されます。 Bashは、残りの &lt;var&gt;parameter&lt;/var&gt; を展開することによって形成された値を新しい &lt;var&gt;parameter&lt;/var&gt; として使用します 。 次に、これが展開され、その値が元の &lt;var&gt;parameter&lt;/var&gt; 展開ではなく、残りの展開で使用されます 。 これは、 &lt;code&gt;indirect expansion&lt;/code&gt; と呼ばれます。 値は、チルド展開、パラメーター展開、コマンド置換、および算術展開の対象となります。 &lt;var&gt;parameter&lt;/var&gt; が名前参照の場合、これは完全な間接展開を実行する代わりに、 &lt;var&gt;parameter&lt;/var&gt; によって参照される変数の名前に展開されます 。 これの例外は、$ {！の展開です。 &lt;var&gt;prefix&lt;/var&gt; *}および$ {！ &lt;var&gt;name&lt;/var&gt; [@]}以下で説明します。 感嘆符は、間接参照を導入するために、左中括弧の直後に続く必要があります。</target>
        </trans-unit>
        <trans-unit id="d8625d646fa2af7dff7580fe1d9a273c1a1771ef" translate="yes" xml:space="preserve">
          <source>If the login name is invalid, or the tilde expansion fails, the word is left unchanged.</source>
          <target state="translated">ログイン名が無効な場合や、チルダ展開に失敗した場合は、その単語はそのままになります。</target>
        </trans-unit>
        <trans-unit id="9343f2fce82acf4542b2a16221e2bb2edfc14433" translate="yes" xml:space="preserve">
          <source>If the metafied character &lt;var&gt;x&lt;/var&gt; is upper case, run the command that is bound to the corresponding metafied lower case character. The behavior is undefined if &lt;var&gt;x&lt;/var&gt; is already lower case.</source>
          <target state="translated">メタ化された文字 &lt;var&gt;x&lt;/var&gt; が大文字の場合、対応するメタ化された小文字にバインドされているコマンドを実行します。 &lt;var&gt;x&lt;/var&gt; が既に小文字の場合の動作は未定義です。</target>
        </trans-unit>
        <trans-unit id="3652b088dd6ef0f515c30a1a29bdbba1f912556d" translate="yes" xml:space="preserve">
          <source>If the name does not match a function, the shell searches for it in the list of shell builtins. If a match is found, that builtin is invoked.</source>
          <target state="translated">名前が関数と一致しない場合、シェルはシェルの組み込み関数のリストからそれを検索します。一致するものが見つかった場合は、その組み込み関数が起動されます。</target>
        </trans-unit>
        <trans-unit id="dfd1f09748ba192d26affcb3d19a5e031f053962" translate="yes" xml:space="preserve">
          <source>If the name is neither a shell function nor a builtin, and contains no slashes, Bash searches each element of &lt;code&gt;$PATH&lt;/code&gt; for a directory containing an executable file by that name. Bash uses a hash table to remember the full pathnames of executable files to avoid multiple &lt;code&gt;PATH&lt;/code&gt; searches (see the description of &lt;code&gt;hash&lt;/code&gt; in &lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;Bourne Shell Builtins&lt;/a&gt;). A full search of the directories in &lt;code&gt;$PATH&lt;/code&gt; is performed only if the command is not found in the hash table. If the search is unsuccessful, the shell searches for a defined shell function named &lt;code&gt;command_not_found_handle&lt;/code&gt;. If that function exists, it is invoked in a separate execution environment with the original command and the original command&amp;rsquo;s arguments as its arguments, and the function&amp;rsquo;s exit status becomes the exit status of that subshell. If that function is not defined, the shell prints an error message and returns an exit status of 127.</source>
          <target state="translated">名前がシェル関数でも組み込み関数でもなく、スラッシュも含まれていない場合、Bashは &lt;code&gt;$PATH&lt;/code&gt; 各要素を検索して、その名前の実行可能ファイルを含むディレクトリを探します。 Bashはハッシュテーブルを使用して実行可能ファイルの完全パス名を記憶し、複数の &lt;code&gt;PATH&lt;/code&gt; 検索を回避します（ &lt;a href=&quot;bourne-shell-builtins#Bourne-Shell-Builtins&quot;&gt;Bourne Shell Builtinsの&lt;/a&gt; &lt;code&gt;hash&lt;/code&gt; の説明を参照）。 &lt;code&gt;$PATH&lt;/code&gt; 内のディレクトリの完全検索は、コマンドがハッシュテーブルで見つからない場合にのみ実行されます。 検索が失敗した場合、シェルは &lt;code&gt;command_not_found_handle&lt;/code&gt; という名前の定義済みシェル関数を検索します。 その関数が存在する場合は、元のコマンドと元のコマンドの引数を引数として別の実行環境で呼び出され、関数の終了ステータスがそのサブシェルの終了ステータスになります。 その関数が定義されていない場合、シェルはエラーメッセージを出力し、127の終了ステータスを返します。</target>
        </trans-unit>
        <trans-unit id="f530b0ef8e20407d7d685925ddafd5d56930b0c7" translate="yes" xml:space="preserve">
          <source>If the operating system on which Bash is running supports job control, Bash contains facilities to use it. Typing the &lt;var&gt;suspend&lt;/var&gt; character (typically &amp;lsquo;</source>
          <target state="translated">Bashが実行されているオペレーティングシステムがジョブ制御をサポートしている場合、Bashにはそれを使用する機能が含まれています。 &lt;var&gt;suspend&lt;/var&gt; 文字（通常は「</target>
        </trans-unit>
        <trans-unit id="f467cea5a3baad26f30dc33b725ee0e20015f1e6" translate="yes" xml:space="preserve">
          <source>If the pipeline is not executed asynchronously (see &lt;a href=&quot;lists#Lists&quot;&gt;Lists&lt;/a&gt;), the shell waits for all commands in the pipeline to complete.</source>
          <target state="translated">パイプラインが非同期で実行されない場合（ &lt;a href=&quot;lists#Lists&quot;&gt;リストを&lt;/a&gt;参照）、シェルはパイプライン内のすべてのコマンドが完了するまで待機します。</target>
        </trans-unit>
        <trans-unit id="212a14fc281d3000c828b63409f5331515c588fb" translate="yes" xml:space="preserve">
          <source>If the previously-applied actions do not generate any matches, and the</source>
          <target state="translated">以前に適用されたアクションでマッチが生成されず、かつ</target>
        </trans-unit>
        <trans-unit id="2e63922ec9b7d407e0fe264eb09d2bcba6980b4e" translate="yes" xml:space="preserve">
          <source>If the redirection operator is &amp;lsquo;</source>
          <target state="translated">リダイレクト演算子が '</target>
        </trans-unit>
        <trans-unit id="59230d41e9af73b73329d9b9dd8fc87548195f3c" translate="yes" xml:space="preserve">
          <source>If the required texts for either cover are too voluminous to fit legibly, you should put the first ones listed (as many as fit reasonably) on the actual cover, and continue the rest onto adjacent pages.</source>
          <target state="translated">どちらかの表紙に必要なテキストがボリュームがありすぎて読みにくい場合は、最初にリストアップされているものを実際の表紙に(合理的に収まる数だけ)載せ、残りのものは隣のページに続けて載せてください。</target>
        </trans-unit>
        <trans-unit id="d06d8152807b8f77cfbe145131f509497b38d79c" translate="yes" xml:space="preserve">
          <source>If the search is successful, or if the command name contains one or more slashes, the shell executes the named program in a separate execution environment. Argument 0 is set to the name given, and the remaining arguments to the command are set to the arguments supplied, if any.</source>
          <target state="translated">検索が成功した場合、またはコマンド名に 1 つ以上のスラッシュが含まれている場合、シェルは指定されたプログラムを別の実行環境で実行します。引数 0 は与えられた名前に設定され、コマンドへの残りの引数は、もしあれば与えられた引数に設定されます。</target>
        </trans-unit>
        <trans-unit id="7fdbb85479a122cfee88f7d44a4c73b22755a154" translate="yes" xml:space="preserve">
          <source>If the second argument is one of the binary conditional operators (see &lt;a href=&quot;bash-conditional-expressions#Bash-Conditional-Expressions&quot;&gt;Bash Conditional Expressions&lt;/a&gt;), the result of the expression is the result of the binary test using the first and third arguments as operands. The &amp;lsquo;</source>
          <target state="translated">2番目の引数が2進条件演算子（ &lt;a href=&quot;bash-conditional-expressions#Bash-Conditional-Expressions&quot;&gt;Bash条件式を&lt;/a&gt;参照）の1つである場合、式の結果は、1番目と3番目の引数をオペランドとして使用した2進テストの結果です。 「</target>
        </trans-unit>
        <trans-unit id="d69b794650bef337e72e3298fb850c85885ed1a7" translate="yes" xml:space="preserve">
          <source>If the substitution appears within double quotes, word splitting and filename expansion are not performed on the results.</source>
          <target state="translated">置換が二重引用符で囲まれている場合、単語の分割やファイル名の展開は行われません。</target>
        </trans-unit>
        <trans-unit id="0b8cff8050c947a078b23cdfbe99842ebe251678" translate="yes" xml:space="preserve">
          <source>If the tilde-prefix is &amp;lsquo;</source>
          <target state="translated">チルダプレフィックスが '</target>
        </trans-unit>
        <trans-unit id="77c19eb829524ff3830be892be9daab526e2586c" translate="yes" xml:space="preserve">
          <source>If the value is null, no timing information is displayed. A trailing newline is added when the format string is displayed.</source>
          <target state="translated">値がNULLの場合、タイミング情報は表示されません。フォーマット文字列が表示されると、末尾に改行が追加されます。</target>
        </trans-unit>
        <trans-unit id="b29c2bc636919907e5727e599653ad33a35ef415" translate="yes" xml:space="preserve">
          <source>If there are no options, a list of the shell builtins is displayed. The</source>
          <target state="translated">オプションがない場合は、シェルのビルドインのリストが表示されます。オプションがない場合は、シェルビルドインのリストが表示されます。</target>
        </trans-unit>
        <trans-unit id="dd38cdf1358ce5370d2ae926cab8b09f8209e5cc" translate="yes" xml:space="preserve">
          <source>If there is a command name left after expansion, execution proceeds as described below. Otherwise, the command exits. If one of the expansions contained a command substitution, the exit status of the command is the exit status of the last command substitution performed. If there were no command substitutions, the command exits with a status of zero.</source>
          <target state="translated">拡張後にコマンド名が残っている場合は、以下のように実行が進みます。それ以外の場合、コマンドは終了します。拡張のいずれかにコマンド置換が含まれていた場合、コマンドの終了ステータスは、最後に実行されたコマンド置換の終了ステータスとなります。コマンドの置換がなかった場合、コマンドの終了ステータスはゼロで終了します。</target>
        </trans-unit>
        <trans-unit id="ef831694cfe0e1766f40148e94f715f89ddf8e51" translate="yes" xml:space="preserve">
          <source>If this execution fails because the file is not in executable format, and the file is not a directory, it is assumed to be a &lt;var&gt;shell script&lt;/var&gt; and the shell executes it as described in &lt;a href=&quot;shell-scripts#Shell-Scripts&quot;&gt;Shell Scripts&lt;/a&gt;.</source>
          <target state="translated">ファイルが実行可能形式ではなく、ファイルがディレクトリではないためにこの実行が失敗した場合、そのファイルは &lt;var&gt;shell script&lt;/var&gt; と見&lt;a href=&quot;shell-scripts#Shell-Scripts&quot;&gt;なされ&lt;/a&gt; 、 シェルはシェルスクリプトで説明されているようにそれを実行します。</target>
        </trans-unit>
        <trans-unit id="a9cbb1826e5bd276b241f84d5fb0cf0f72a33b28" translate="yes" xml:space="preserve">
          <source>If this is set, Bash checks that a command found in the hash table exists before trying to execute it. If a hashed command no longer exists, a normal path search is performed.</source>
          <target state="translated">これが設定されている場合、Bash はハッシュテーブルで見つかったコマンドが存在するかどうかを確認してから実行しようとします。ハッシュ化されたコマンドが存在しなくなった場合、通常のパス検索が行われます。</target>
        </trans-unit>
        <trans-unit id="7d993244d80213308de5ea31430b494a883f910a" translate="yes" xml:space="preserve">
          <source>If this is set, a non-interactive shell will not exit if it cannot execute the file specified as an argument to the &lt;code&gt;exec&lt;/code&gt; builtin command. An interactive shell does not exit if &lt;code&gt;exec&lt;/code&gt; fails.</source>
          <target state="translated">これが設定されている場合、非組み込みシェルは、組み込みコマンド &lt;code&gt;exec&lt;/code&gt; の引数として指定されたファイルを実行できない場合、終了しません。 &lt;code&gt;exec&lt;/code&gt; が失敗した場合、対話型シェルは終了しません。</target>
        </trans-unit>
        <trans-unit id="cd439d48a99ce19464c09456bd0704d9996fdf10" translate="yes" xml:space="preserve">
          <source>If this is set, an argument to the &lt;code&gt;cd&lt;/code&gt; builtin command that is not a directory is assumed to be the name of a variable whose value is the directory to change to.</source>
          <target state="translated">これが設定されている場合、ディレクトリーではない &lt;code&gt;cd&lt;/code&gt; 組み込みコマンドへの引数は、値が変更されるディレクトリーである変数の名前であると想定されます。</target>
        </trans-unit>
        <trans-unit id="1fc99e904ebf11747e18bd0280b940e9b71a9adf" translate="yes" xml:space="preserve">
          <source>If this is set, the &lt;code&gt;shift&lt;/code&gt; builtin prints an error message when the shift count exceeds the number of positional parameters.</source>
          <target state="translated">これが設定されている場合、 &lt;code&gt;shift&lt;/code&gt; ビルトインは、シフトカウントが位置パラメーターの数を超えるとエラーメッセージを出力します。</target>
        </trans-unit>
        <trans-unit id="aa9c5fa227ef993e47df813205672fbe87b28590" translate="yes" xml:space="preserve">
          <source>If this option is given, backslash does not act as an escape character. The backslash is considered to be part of the line. In particular, a backslash-newline pair may not then be used as a line continuation.</source>
          <target state="translated">このオプションを指定した場合、バックスラッシュはエスケープ文字としては動作しません。バックスラッシュは行の一部とみなされます。特に、バックスラッシュと改行のペアは、その場合、行の続きとして使用することはできません。</target>
        </trans-unit>
        <trans-unit id="0b35702eed6ed9a377ce23daf4e3ad1266e3ab93" translate="yes" xml:space="preserve">
          <source>If this option is present, or if no arguments remain after option processing, then commands are read from the standard input. This option allows the positional parameters to be set when invoking an interactive shell or when reading input through a pipe.</source>
          <target state="translated">このオプシ ョ ンが存在する場合、 ま たはオプシ ョ ン処理後に引数が残らない場合には、 コマンドは標準入力か ら読み込まれます。このオプションは、対話型シェルを呼び出すときや、パイプを介して入力を読み込むときに位置パラメータを設定できるようにします。</target>
        </trans-unit>
        <trans-unit id="777e91878a06be51cd1833b132b824e91b78809d" translate="yes" xml:space="preserve">
          <source>If this parameter is set to a filename or directory name and the &lt;code&gt;MAILPATH&lt;/code&gt; variable is not set, Bash informs the user of the arrival of mail in the specified file or Maildir-format directory.</source>
          <target state="translated">このパラメータがファイル名またはディレクトリ名に設定され、 &lt;code&gt;MAILPATH&lt;/code&gt; 変数が設定されていない場合、Bashは指定されたファイルまたはMaildir形式のディレクトリにメールが到着したことをユーザーに通知します。</target>
        </trans-unit>
        <trans-unit id="88d7176ed8843fa0356bde0b33b22ab8e357f85d" translate="yes" xml:space="preserve">
          <source>If this variable is in the environment when Bash starts, the shell enters &lt;small&gt;POSIX&lt;/small&gt; mode (see &lt;a href=&quot;bash-posix-mode#Bash-POSIX-Mode&quot;&gt;Bash POSIX Mode&lt;/a&gt;) before reading the startup files, as if the</source>
          <target state="translated">Bashの起動時にこの変数が環境内にある場合、シェルは、スタートアップファイルを読み取る前に、 &lt;small&gt;POSIX&lt;/small&gt;モード（ &lt;a href=&quot;bash-posix-mode#Bash-POSIX-Mode&quot;&gt;Bash POSIXモードを&lt;/a&gt;参照）に入ります。</target>
        </trans-unit>
        <trans-unit id="f1b89889d40b4d7ed3d3571f50654adabf775633" translate="yes" xml:space="preserve">
          <source>If this variable is not set, Bash acts as if it had the value</source>
          <target state="translated">この変数が設定されていない場合、Bash は値が</target>
        </trans-unit>
        <trans-unit id="f193f77ae6c578e085525731e2ade93975c1d7b6" translate="yes" xml:space="preserve">
          <source>If this variable is set and not null, its value is used as a format string for &lt;var&gt;strftime&lt;/var&gt; to print the time stamp associated with each history entry displayed by the &lt;code&gt;history&lt;/code&gt; builtin. If this variable is set, time stamps are written to the history file so they may be preserved across shell sessions. This uses the history comment character to distinguish timestamps from other history lines.</source>
          <target state="translated">この変数が設定されていてnullでない場合、その値は &lt;var&gt;strftime&lt;/var&gt; のフォーマット文字列として使用され、 &lt;code&gt;history&lt;/code&gt; 組み込みによって表示される各履歴エントリに関連付けられたタイムスタンプを出力します。 この変数が設定されている場合、タイムスタンプは履歴ファイルに書き込まれるため、シェルセッション全体で保持される可能性があります。 これは、履歴コメント文字を使用して、タイムスタンプを他の履歴行と区別します。</target>
        </trans-unit>
        <trans-unit id="676ae2b7cf28a1e7f203d97bc2401be482723d3d" translate="yes" xml:space="preserve">
          <source>If this variable is set when Bash is invoked to execute a shell script, its value is expanded and used as the name of a startup file to read before executing the script. See &lt;a href=&quot;bash-startup-files#Bash-Startup-Files&quot;&gt;Bash Startup Files&lt;/a&gt;.</source>
          <target state="translated">シェルスクリプトを実行するためにBashが呼び出されたときにこの変数が設定されている場合、その値は展開され、スクリプトを実行する前に読み取る起動ファイルの名前として使用されます。 &lt;a href=&quot;bash-startup-files#Bash-Startup-Files&quot;&gt;Bashスタートアップファイルを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f28ca2e8f75483fc478ec8c1ba2646d3681c8ad5" translate="yes" xml:space="preserve">
          <source>If you do not have a Meta or &lt;code&gt;ALT&lt;/code&gt; key, or another key working as a Meta key, the identical keystroke can be generated by typing &lt;code&gt;ESC&lt;/code&gt;&lt;em&gt;first&lt;/em&gt;, and then typing &lt;code&gt;k&lt;/code&gt;. Either process is known as &lt;em&gt;metafying&lt;/em&gt; the &lt;code&gt;k&lt;/code&gt; key.</source>
          <target state="translated">Metaキーまたは &lt;code&gt;ALT&lt;/code&gt; キー、またはMetaキーとして機能する別のキーがない場合は、 &lt;em&gt;最初&lt;/em&gt;に &lt;code&gt;ESC&lt;/code&gt; を入力してから &lt;code&gt;k&lt;/code&gt; を入力することで、同じキーストロークを生成できます。 どちらのプロセスも &lt;code&gt;k&lt;/code&gt; キーの&lt;em&gt;メタファイ化&lt;/em&gt;として知られています。</target>
        </trans-unit>
        <trans-unit id="d959cdc013e27164e0b6fbacf47517d98590f9b4" translate="yes" xml:space="preserve">
          <source>If you have Invariant Sections without Cover Texts, or some other combination of the three, merge those two alternatives to suit the situation.</source>
          <target state="translated">カバー・テキストのない不変部がある場合や、この3つの組み合わせがある場合は、状況に応じてこれら2つの選択肢を統合してください。</target>
        </trans-unit>
        <trans-unit id="ad1b8a7db5a735690b717ff819d3d51d6e5400ec" translate="yes" xml:space="preserve">
          <source>If you have Invariant Sections, Front-Cover Texts and Back-Cover Texts, replace the &amp;ldquo;with&amp;hellip;Texts.&amp;rdquo; line with this:</source>
          <target state="translated">インバリアントセクション、フロントカバーテキスト、バックカバーテキストがある場合は、「with&amp;hellip;Texts」を置き換えます。 これに合わせて：</target>
        </trans-unit>
        <trans-unit id="973407fb9d8484275f138c80804c3c11c43dc6b0" translate="yes" xml:space="preserve">
          <source>If you have to use a &lt;code&gt;make&lt;/code&gt; that does not supports the &lt;code&gt;VPATH&lt;/code&gt; variable, you can compile Bash for one architecture at a time in the source code directory. After you have installed Bash for one architecture, use &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;VPATH&lt;/code&gt; 変数をサポートしない &lt;code&gt;make&lt;/code&gt; を使用する必要がある場合は、ソースコードディレクトリで一度に1つのアーキテクチャのBashをコンパイルできます。 1つのアーキテクチャにBashをインストールしたら、「</target>
        </trans-unit>
        <trans-unit id="fc3797f7197bba97fa8222f26600e2e48affc612" translate="yes" xml:space="preserve">
          <source>If you need to do unusual things to compile Bash, please try to figure out how &lt;code&gt;configure&lt;/code&gt; could check whether or not to do them, and mail diffs or instructions to &lt;a href=&quot;mailto:bash-maintainers@gnu.org&quot;&gt;bash-maintainers@gnu.org&lt;/a&gt; so they can be considered for the next release.</source>
          <target state="translated">Bashをコンパイルするために通常とは異なることを行う必要がある場合は、 &lt;code&gt;configure&lt;/code&gt; がそれらを実行するかどうかを確認する方法を理解し、差分または指示を&lt;a href=&quot;mailto:bash-maintainers@gnu.org&quot;&gt;bash-maintainers@gnu.orgに&lt;/a&gt;メールして、次のリリースで検討できるようにしてください。</target>
        </trans-unit>
        <trans-unit id="83aedbaa45e9f84bfa1fcbbeea8869b139d5088a" translate="yes" xml:space="preserve">
          <source>If you need to protect special characters such as newlines in file names, use find&amp;rsquo;s</source>
          <target state="translated">ファイル名の改行などの特殊文字を保護する必要がある場合は、find's</target>
        </trans-unit>
        <trans-unit id="12078bff72a7a0d0b47a2085949d8643b6a58c14" translate="yes" xml:space="preserve">
          <source>If you publish or distribute Opaque copies of the Document numbering more than 100, you must either include a machine-readable Transparent copy along with each Opaque copy, or state in or with each Opaque copy a computer-network location from which the general network-using public has access to download using public-standard network protocols a complete Transparent copy of the Document, free of added material. If you use the latter option, you must take reasonably prudent steps, when you begin distribution of Opaque copies in quantity, to ensure that this Transparent copy will remain thus accessible at the stated location until at least one year after the last time you distribute an Opaque copy (directly or through your agents or retailers) of that edition to the public.</source>
          <target state="translated">100部を超える『文書』の不透明コピーを発行または配布する場合は、機械読み取り可能な透明コピーを各不透明コピーに添付するか、または各不透明コピーに、一般のネットワーク利用者が公開標準のネットワークプロトコルを使用して『文書』の完全な透明コピーをダウンロードできるコンピュータ・ネットワーク上の場所を明記しなければならない。後者のオプションを使用する場合、あなたが不透明コピーの配布を数量的に開始する際には、あなたがその版の不透明コピーを最後に(直接または代理店や小売店を通じて)公衆に配布した時から少なくとも1年後まで、この透明コピーが指定された場所でアクセス可能な状態を維持するように、合理的に慎重な措置を取らなければならない。</target>
        </trans-unit>
        <trans-unit id="259996a1220d546fc0064aba80c2b9da3313fa17" translate="yes" xml:space="preserve">
          <source>If you publish printed copies (or copies in media that commonly have printed covers) of the Document, numbering more than 100, and the Document&amp;rsquo;s license notice requires Cover Texts, you must enclose the copies in covers that carry, clearly and legibly, all these Cover Texts: Front-Cover Texts on the front cover, and Back-Cover Texts on the back cover. Both covers must also clearly and legibly identify you as the publisher of these copies. The front cover must present the full title with all words of the title equally prominent and visible. You may add other material on the covers in addition. Copying with changes limited to the covers, as long as they preserve the title of the Document and satisfy these conditions, can be treated as verbatim copying in other respects.</source>
          <target state="translated">100を超えるドキュメントの印刷されたコピー（または通常はカバーが印刷されているメディアのコピー）を発行し、ドキュメントのライセンス通知にカバーテキストが必要な場合は、これらのコピーを明確かつ読みやすい形でカバーに含める必要があります。表紙テキスト：表紙の表紙テキストと裏表紙の裏表紙テキスト。 どちらのカバーも、これらのコピーの発行者であることを明確かつ読みやすく特定する必要があります。 表紙は、タイトルのすべての単語が等しく目立つように表示された完全なタイトルを提示する必要があります。 カバーに他の素材を追加することもできます。 変更をカバーに限定してコピーすると、ドキュメントのタイトルが保持され、これらの条件を満たす限り、他​​の点では逐語的なコピーとして扱うことができます。</target>
        </trans-unit>
        <trans-unit id="6730d9b385f08c2cf6be9d05fb9bf6a7f7ae50d2" translate="yes" xml:space="preserve">
          <source>If you want to build Bash in a directory separate from the source directory &amp;ndash; to build for multiple architectures, for example &amp;ndash; just use the full path to the configure script. The following commands will build bash in a directory under</source>
          <target state="translated">ソースディレクトリとは別のディレクトリにBashをビルドする場合（たとえば、複数のアーキテクチャ用にビルドする場合）は、configureスクリプトの完全パスを使用するだけです。 次のコマンドは、bashを以下のディレクトリにビルドします</target>
        </trans-unit>
        <trans-unit id="186f9f4f8bfcc1b6dbd98b1ddbc6918a65ae8d2e" translate="yes" xml:space="preserve">
          <source>If you want to match a character that&amp;rsquo;s special to the regular expression grammar, it has to be quoted to remove its special meaning. This means that in the pattern &amp;lsquo;</source>
          <target state="translated">正規表現の文法に特別な文字を一致させる場合は、その特別な意味を取り除くために引用符で囲む必要があります。 これは、パターン '</target>
        </trans-unit>
        <trans-unit id="ab7363fb921e78e0a7556aab74f823ea4f39495e" translate="yes" xml:space="preserve">
          <source>If you want to set default values for &lt;code&gt;configure&lt;/code&gt; scripts to share, you can create a site shell script called &lt;code&gt;config.site&lt;/code&gt; that gives default values for variables like &lt;code&gt;CC&lt;/code&gt;, &lt;code&gt;cache_file&lt;/code&gt;, and &lt;code&gt;prefix&lt;/code&gt;. &lt;code&gt;configure&lt;/code&gt; looks for</source>
          <target state="translated">共有する &lt;code&gt;configure&lt;/code&gt; スクリプトのデフォルト値を設定する場合は、 &lt;code&gt;CC&lt;/code&gt; 、 &lt;code&gt;cache_file&lt;/code&gt; 、 &lt;code&gt;prefix&lt;/code&gt; などの変数のデフォルト値を提供する &lt;code&gt;config.site&lt;/code&gt; というサイトシェルスクリプトを作成できます。 &lt;code&gt;configure&lt;/code&gt; 探す</target>
        </trans-unit>
        <trans-unit id="b740d12c534adf1e78083987d4914f9a914ca40f" translate="yes" xml:space="preserve">
          <source>If your document contains nontrivial examples of program code, we recommend releasing these examples in parallel under your choice of free software license, such as the GNU General Public License, to permit their use in free software.</source>
          <target state="translated">あなたの文書にプログラムコードの自明でない例が含まれている場合、自由ソフトウェアでの使用を許可するために、GNU一般公衆ライセンスのような自由ソフトウェアライセンスを選択して、これらの例を並行してリリースすることを推奨します。</target>
        </trans-unit>
        <trans-unit id="ad807d7010690da3b367c158778dc87f36daca62" translate="yes" xml:space="preserve">
          <source>Importing function definitions from the shell environment at startup.</source>
          <target state="translated">起動時にシェル環境から関数定義をインポートする</target>
        </trans-unit>
        <trans-unit id="7bfc53bff471d024384b520ef7eb191e4bb09ec3" translate="yes" xml:space="preserve">
          <source>In a non-interactive shell, or an interactive shell in which the &lt;code&gt;interactive_comments&lt;/code&gt; option to the &lt;code&gt;shopt&lt;/code&gt; builtin is enabled (see &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;The Shopt Builtin&lt;/a&gt;), a word beginning with &amp;lsquo;</source>
          <target state="translated">非インタラクティブシェル、または &lt;code&gt;shopt&lt;/code&gt; &lt;a href=&quot;the-shopt-builtin#The-Shopt-Builtin&quot;&gt;ビルトイン&lt;/a&gt;の &lt;code&gt;interactive_comments&lt;/code&gt; オプションが有効になっているインタラクティブシェル（「 Shopt Builtin 」を参照）では、 'で始まる単語</target>
        </trans-unit>
        <trans-unit id="02b2d522d02685102f94404bf4b0d657a9e31c49" translate="yes" xml:space="preserve">
          <source>In a questionable attempt at security, the SVR4.2 shell, when invoked without the</source>
          <target state="translated">セキュリティ上の疑わしい試みとして、SVR4.2 シェルが</target>
        </trans-unit>
        <trans-unit id="acd7ffcb27a06d2f814691335100fc8359783d24" translate="yes" xml:space="preserve">
          <source>In addition to command names, readline allows keys to be bound to a string that is inserted when the key is pressed (a &lt;var&gt;macro&lt;/var&gt;).</source>
          <target state="translated">コマンド名に加えて、readlineを使用すると、キーを押したときに挿入される文字列（ &lt;var&gt;macro&lt;/var&gt; ）にキーをバインドできます。</target>
        </trans-unit>
        <trans-unit id="93c833fa4e72f9033538088f0593e7bc9024232e" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;small&gt;GNU&lt;/small&gt; Emacs style escape sequences, a second set of backslash escapes is available:</source>
          <target state="translated">&lt;small&gt;GNU&lt;/small&gt; Emacsスタイルのエスケープシーケンスに加えて、バックスラッシュエスケープの2番目のセットが利用可能です。</target>
        </trans-unit>
        <trans-unit id="0c5729dabfd311f795dc7288f0cc0f352dd8db0d" translate="yes" xml:space="preserve">
          <source>In addition to the creation of a subshell, there is a subtle difference between these two constructs due to historical reasons. The braces are &lt;code&gt;reserved words&lt;/code&gt;, so they must be separated from the &lt;var&gt;list&lt;/var&gt; by &lt;code&gt;blank&lt;/code&gt;s or other shell metacharacters. The parentheses are &lt;code&gt;operators&lt;/code&gt;, and are recognized as separate tokens by the shell even if they are not separated from the &lt;var&gt;list&lt;/var&gt; by whitespace.</source>
          <target state="translated">サブシェルの作成に加えて、歴史的な理由により、これら2つの構成には微妙な違いがあります。 中かっこは &lt;code&gt;reserved words&lt;/code&gt; ので、 &lt;code&gt;blank&lt;/code&gt; のsまたは他のシェルメタ文字で &lt;var&gt;list&lt;/var&gt; から区切る必要があります。 括弧は &lt;code&gt;operators&lt;/code&gt; であり、空白で &lt;var&gt;list&lt;/var&gt; から区切られていなくても、シェルでは個別のトークンとして認識されます。</target>
        </trans-unit>
        <trans-unit id="c2e6fbde158335869362b0e379cc922ff5d488fa" translate="yes" xml:space="preserve">
          <source>In addition, several keys have their own names. Specifically, &lt;code&gt;DEL&lt;/code&gt;, &lt;code&gt;ESC&lt;/code&gt;, &lt;code&gt;LFD&lt;/code&gt;, &lt;code&gt;SPC&lt;/code&gt;, &lt;code&gt;RET&lt;/code&gt;, and &lt;code&gt;TAB&lt;/code&gt; all stand for themselves when seen in this text, or in an init file (see &lt;a href=&quot;readline-init-file#Readline-Init-File&quot;&gt;Readline Init File&lt;/a&gt;). If your keyboard lacks a &lt;code&gt;LFD&lt;/code&gt; key, typing &lt;code&gt;C-j&lt;/code&gt; will produce the desired character. The &lt;code&gt;RET&lt;/code&gt; key may be labeled &lt;code&gt;Return&lt;/code&gt; or &lt;code&gt;Enter&lt;/code&gt; on some keyboards.</source>
          <target state="translated">さらに、いくつかのキーには独自の名前があります。 具体的には、 &lt;code&gt;DEL&lt;/code&gt; 、 &lt;code&gt;ESC&lt;/code&gt; 、 &lt;code&gt;LFD&lt;/code&gt; 、 &lt;code&gt;SPC&lt;/code&gt; 、 &lt;code&gt;RET&lt;/code&gt; 、および &lt;code&gt;TAB&lt;/code&gt; はすべて、このテキストまたはinitファイル（ &lt;a href=&quot;readline-init-file#Readline-Init-File&quot;&gt;Readline Initファイルを&lt;/a&gt;参照）で見たときに、それ自体を表しています。 キーボードに &lt;code&gt;LFD&lt;/code&gt; キーがない場合、 &lt;code&gt;C-j&lt;/code&gt; と入力すると、目的の文字が生成されます。 一部のキーボードでは、 &lt;code&gt;RET&lt;/code&gt; キーに &lt;code&gt;Return&lt;/code&gt; または &lt;code&gt;Enter&lt;/code&gt; のラベルが付いている場合があります。</target>
        </trans-unit>
        <trans-unit id="8b3be7d7807edefafd0966948d79f5327f1f6852" translate="yes" xml:space="preserve">
          <source>In addition, the &lt;code&gt;C-x C-r&lt;/code&gt; command re-reads this init file, thus incorporating any changes that you might have made to it.</source>
          <target state="translated">さらに、 &lt;code&gt;C-x C-r&lt;/code&gt; コマンドはこのinitファイルを再読み取りするため、ファイルに加えた変更が組み込まれます。</target>
        </trans-unit>
        <trans-unit id="b95dacbd396bc51b6d40d63fdc5a99b5e400172e" translate="yes" xml:space="preserve">
          <source>In addition, the following table describes the special characters which can appear in the prompt variables &lt;code&gt;PS0&lt;/code&gt;, &lt;code&gt;PS1&lt;/code&gt;, &lt;code&gt;PS2&lt;/code&gt;, and &lt;code&gt;PS4&lt;/code&gt;:</source>
          <target state="translated">さらに、次の表は、プロンプト変数 &lt;code&gt;PS0&lt;/code&gt; 、 &lt;code&gt;PS1&lt;/code&gt; 、 &lt;code&gt;PS2&lt;/code&gt; 、および &lt;code&gt;PS4&lt;/code&gt; に表示される可能性がある特殊文字について説明しています。</target>
        </trans-unit>
        <trans-unit id="8a023a1f8d31694303fdf19bf34bafab5048fffb" translate="yes" xml:space="preserve">
          <source>In an interactive shell, the value is interpreted as the number of seconds to wait for a line of input after issuing the primary prompt. Bash terminates after waiting for that number of seconds if a complete line of input does not arrive.</source>
          <target state="translated">対話型シェルでは、この値はプライマリプロンプトを発行してから一行の入力を待つための秒数として解釈されます。Bash は、完全な入力行が到着しない場合、その秒数を待った後に終了します。</target>
        </trans-unit>
        <trans-unit id="fdba83de9a185c5d0269395ce15a272761068752" translate="yes" xml:space="preserve">
          <source>In each of the cases below, &lt;var&gt;word&lt;/var&gt; is subject to tilde expansion, parameter expansion, command substitution, and arithmetic expansion.</source>
          <target state="translated">以下のいずれの場合でも、 &lt;var&gt;word&lt;/var&gt; はチルダ展開、パラメータ展開、コマンド置換、および算術展開の対象となります。</target>
        </trans-unit>
        <trans-unit id="776f3e487a8a68ec6f7020b12d39b7d82631cfe9" translate="yes" xml:space="preserve">
          <source>In most cases a list of commands in a compound command&amp;rsquo;s description may be separated from the rest of the command by one or more newlines, and may be followed by a newline in place of a semicolon.</source>
          <target state="translated">ほとんどの場合、複合コマンドの説明に含まれるコマンドのリストは、コマンドの残りの部分から1つ以上の改行で区切られ、セミコロンの代わりに改行が続く場合があります。</target>
        </trans-unit>
        <trans-unit id="52fc1c75570831d9162a7f56b56ea8e34f6226d0" translate="yes" xml:space="preserve">
          <source>In order to enter characters into the line, simply type them. The typed character appears where the cursor was, and then the cursor moves one space to the right. If you mistype a character, you can use your erase character to back up and delete the mistyped character.</source>
          <target state="translated">行に文字を入力するには、文字を入力するだけです。入力された文字はカーソルがあった場所に表示され、カーソルは1スペース右に移動します。文字を誤入力した場合は、消去文字を使って誤入力した文字をバックアップして削除することができます。</target>
        </trans-unit>
        <trans-unit id="dfca208f0049bbff96fae9f0ee95f08078198a8c" translate="yes" xml:space="preserve">
          <source>In order to switch interactively between &lt;code&gt;emacs&lt;/code&gt; and &lt;code&gt;vi&lt;/code&gt; editing modes, use the &amp;lsquo;</source>
          <target state="translated">&lt;code&gt;emacs&lt;/code&gt; と &lt;code&gt;vi&lt;/code&gt; 編集モードをインタラクティブに切り替えるには、「</target>
        </trans-unit>
        <trans-unit id="51978bf956b8794338f8c4cf3a067f0a540b285c" translate="yes" xml:space="preserve">
          <source>In overwrite mode, characters bound to &lt;code&gt;self-insert&lt;/code&gt; replace the text at point rather than pushing the text to the right. Characters bound to &lt;code&gt;backward-delete-char&lt;/code&gt; replace the character before point with a space.</source>
          <target state="translated">上書きモードでは、 &lt;code&gt;self-insert&lt;/code&gt; バインドされた文字は、テキストを右に押すのではなく、ポイントでテキストを置き換えます。 &lt;code&gt;backward-delete-char&lt;/code&gt; にバインドされた文字は、ポイントの前の文字をスペースに置き換えます。</target>
        </trans-unit>
        <trans-unit id="acc6f4c088642eb7f8737b1a54d1b8d8a8f44c63" translate="yes" xml:space="preserve">
          <source>In the above example,</source>
          <target state="translated">上記の例では</target>
        </trans-unit>
        <trans-unit id="abf9823b3792f5beb81f16b1fe9e504eb5e9f0f2" translate="yes" xml:space="preserve">
          <source>In the absence of any traps, &lt;code&gt;SIGINT&lt;/code&gt; is caught and handled (see &lt;a href=&quot;signals#Signals&quot;&gt;Signals&lt;/a&gt;). &lt;code&gt;SIGINT&lt;/code&gt; will interrupt some shell builtins.</source>
          <target state="translated">トラップがない場合、 &lt;code&gt;SIGINT&lt;/code&gt; がキャッチされて処理されます（ &lt;a href=&quot;signals#Signals&quot;&gt;シグナルを&lt;/a&gt;参照）。 &lt;code&gt;SIGINT&lt;/code&gt; は一部のシェル組み込みを中断します。</target>
        </trans-unit>
        <trans-unit id="105bd8bc0640d79759a2a90ca4a1c85a26636658" translate="yes" xml:space="preserve">
          <source>In the absence of any traps, Bash ignores &lt;code&gt;SIGTERM&lt;/code&gt; (see &lt;a href=&quot;signals#Signals&quot;&gt;Signals&lt;/a&gt;).</source>
          <target state="translated">トラップがない場合、Bashは &lt;code&gt;SIGTERM&lt;/code&gt; を無視します（ シグナルを参照）。</target>
        </trans-unit>
        <trans-unit id="5cda68fb93baabdacea520a528ee305f4e985aca" translate="yes" xml:space="preserve">
          <source>In the combination, you must combine any sections Entitled &amp;ldquo;History&amp;rdquo; in the various original documents, forming one section Entitled &amp;ldquo;History&amp;rdquo;; likewise combine any sections Entitled &amp;ldquo;Acknowledgements&amp;rdquo;, and any sections Entitled &amp;ldquo;Dedications&amp;rdquo;. You must delete all sections Entitled &amp;ldquo;Endorsements.&amp;rdquo;</source>
          <target state="translated">組み合わせでは、さまざまな元のドキュメントの「履歴」というタイトルのセクションを結合して、「履歴」というタイトルの1つのセクションを形成する必要があります。 同様に、「謝辞」というタイトルのセクションと「献身」というタイトルのセクションを組み合わせます。 「推薦」というタイトルのセクションをすべて削除する必要があります。</target>
        </trans-unit>
        <trans-unit id="6258da724ae30a7bd686127a1de1b959fc5247b9" translate="yes" xml:space="preserve">
          <source>In the context where an assignment statement is assigning a value to a shell variable or array index (see &lt;a href=&quot;arrays#Arrays&quot;&gt;Arrays&lt;/a&gt;), the &amp;lsquo;</source>
          <target state="translated">代入ステートメントがシェル変数または配列インデックス（ &lt;a href=&quot;arrays#Arrays&quot;&gt;配列を&lt;/a&gt;参照）に値を代入しているコンテキストでは、 '</target>
        </trans-unit>
        <trans-unit id="47ba31c55cf17ab9234a30dc016e247f26027b3f" translate="yes" xml:space="preserve">
          <source>In the example above,</source>
          <target state="translated">上記の例では</target>
        </trans-unit>
        <trans-unit id="6054c41c039baa67beb6220428bddb9dcb8f61e2" translate="yes" xml:space="preserve">
          <source>In the following descriptions, &lt;em&gt;point&lt;/em&gt; refers to the current cursor position, and &lt;em&gt;mark&lt;/em&gt; refers to a cursor position saved by the &lt;code&gt;set-mark&lt;/code&gt; command. The text between the point and mark is referred to as the &lt;em&gt;region&lt;/em&gt;.</source>
          <target state="translated">以下の説明では、 &lt;em&gt;ポイント&lt;/em&gt;は現在のカーソル位置&lt;em&gt;を&lt;/em&gt;指し、 &lt;em&gt;マーク&lt;/em&gt;は &lt;code&gt;set-mark&lt;/code&gt; コマンドで保存されたカーソル位置を指します。 ポイントとマークの間のテキストは、 &lt;em&gt;リージョン&lt;/em&gt;と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="f9e9924a14a939202e524f8d54c079b3361a4f8f" translate="yes" xml:space="preserve">
          <source>In the following descriptions, if the file descriptor number is omitted, and the first character of the redirection operator is &amp;lsquo;</source>
          <target state="translated">以下の説明で、ファイル記述子番号が省略され、リダイレクト演算子の最初の文字が 'の場合</target>
        </trans-unit>
        <trans-unit id="936662e2ff52735b6e8de158c20eb900ce6d2796" translate="yes" xml:space="preserve">
          <source>In the second form, &lt;var&gt;command&lt;/var&gt; is re-executed after each instance of &lt;var&gt;pat&lt;/var&gt; in the selected command is replaced by &lt;var&gt;rep&lt;/var&gt;. &lt;var&gt;command&lt;/var&gt; is intepreted the same as &lt;var&gt;first&lt;/var&gt; above.</source>
          <target state="translated">2番目の形式では、選択したコマンド内の &lt;var&gt;pat&lt;/var&gt; の各インスタンスが &lt;var&gt;rep&lt;/var&gt; に置き換えられた後で、 &lt;var&gt;command&lt;/var&gt; が再実行されます。 &lt;var&gt;command&lt;/var&gt; は上記と同じように解釈されます。</target>
        </trans-unit>
        <trans-unit id="b4c9c6f987e14cc39c69cce18793290b45b8c829" translate="yes" xml:space="preserve">
          <source>Include &lt;code&gt;csh&lt;/code&gt;-like brace expansion ( &lt;code&gt;b{a,b}c&lt;/code&gt; &amp;rarr; &lt;code&gt;bac bbc&lt;/code&gt; ). See &lt;a href=&quot;brace-expansion#Brace-Expansion&quot;&gt;Brace Expansion&lt;/a&gt;, for a complete description.</source>
          <target state="translated">&lt;code&gt;csh&lt;/code&gt; のようなブレース展開を含めます（ &lt;code&gt;b{a,b}c&lt;/code&gt; &amp;rarr; &lt;code&gt;bac bbc&lt;/code&gt; ）。 詳細については、 &lt;a href=&quot;brace-expansion#Brace-Expansion&quot;&gt;ブレース拡張を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f37101c8da0de163cd9ec8919b0c95749d4e46c5" translate="yes" xml:space="preserve">
          <source>Include an unaltered copy of this License.</source>
          <target state="translated">このライセンスの変更されていないコピーを含めてください。</target>
        </trans-unit>
        <trans-unit id="6d48dc0547638595849dd7293cce4c2c8803508e" translate="yes" xml:space="preserve">
          <source>Include command history and the &lt;code&gt;fc&lt;/code&gt; and &lt;code&gt;history&lt;/code&gt; builtin commands (see &lt;a href=&quot;bash-history-facilities#Bash-History-Facilities&quot;&gt;Bash History Facilities&lt;/a&gt;).</source>
          <target state="translated">コマンド履歴と、 &lt;code&gt;fc&lt;/code&gt; および &lt;code&gt;history&lt;/code&gt; 組み込みコマンドを含めます（ &lt;a href=&quot;bash-history-facilities#Bash-History-Facilities&quot;&gt;Bash履歴機能を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="23c33e6a9c711a4ef6e0de93e9edd5dc0fcd18e2" translate="yes" xml:space="preserve">
          <source>Include support for &lt;code&gt;csh&lt;/code&gt;-like history substitution (see &lt;a href=&quot;history-interaction#History-Interaction&quot;&gt;History Interaction&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;csh&lt;/code&gt; のような履歴置換のサポートを含めます（ &lt;a href=&quot;history-interaction#History-Interaction&quot;&gt;履歴の相互作用を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="fcd4d1d8d16796e7e10435ccfdf1234d31d66bad" translate="yes" xml:space="preserve">
          <source>Include support for a &lt;code&gt;csh&lt;/code&gt;-like directory stack and the &lt;code&gt;pushd&lt;/code&gt;, &lt;code&gt;popd&lt;/code&gt;, and &lt;code&gt;dirs&lt;/code&gt; builtins (see &lt;a href=&quot;the-directory-stack#The-Directory-Stack&quot;&gt;The Directory Stack&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;csh&lt;/code&gt; のようなディレクトリスタックと &lt;code&gt;pushd&lt;/code&gt; 、 &lt;code&gt;popd&lt;/code&gt; 、および &lt;code&gt;dirs&lt;/code&gt; ビルトインのサポートを含めます（ &lt;a href=&quot;the-directory-stack#The-Directory-Stack&quot;&gt;ディレクトリスタックを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="ae8823eba1fe6af3fc8854f6dceeff5ba3a8f237" translate="yes" xml:space="preserve">
          <source>Include support for a &lt;em&gt;restricted shell&lt;/em&gt;. If this is enabled, Bash, when called as &lt;code&gt;rbash&lt;/code&gt;, enters a restricted mode. See &lt;a href=&quot;the-restricted-shell#The-Restricted-Shell&quot;&gt;The Restricted Shell&lt;/a&gt;, for a description of restricted mode.</source>
          <target state="translated">&lt;em&gt;制限付きシェルの&lt;/em&gt;サポートを含めます。 これが有効になっている場合、Bashは &lt;code&gt;rbash&lt;/code&gt; として呼び出されると制限付きモードに入ります。 制限付きモードの説明については、 &lt;a href=&quot;the-restricted-shell#The-Restricted-Shell&quot;&gt;制限付きシェルを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="08137dd0a94c8fe61752fd5a565f5ca1868e59f0" translate="yes" xml:space="preserve">
          <source>Include support for case-modifying attributes in the &lt;code&gt;declare&lt;/code&gt; builtin and assignment statements. Variables with the &lt;var&gt;uppercase&lt;/var&gt; attribute, for example, will have their values converted to uppercase upon assignment.</source>
          <target state="translated">組み込みの &lt;code&gt;declare&lt;/code&gt; ステートメントと割り当てステートメントに、大文字小文字を変更する属性のサポートを含めます。 たとえば、 &lt;var&gt;uppercase&lt;/var&gt; 属性を持つ変数は、割り当て時に値が大文字に変換されます。</target>
        </trans-unit>
        <trans-unit id="79652870d76d9dc4d92510ebd79937754f61ac34" translate="yes" xml:space="preserve">
          <source>Include support for case-modifying word expansions.</source>
          <target state="translated">大文字小文字を修飾する単語展開のサポートを含める。</target>
        </trans-unit>
        <trans-unit id="9652f104e6bcc36329b35fc55d0fe4f137df4fb4" translate="yes" xml:space="preserve">
          <source>Include support for command-line editing and history with the Bash version of the Readline library (see &lt;a href=&quot;command-line-editing#Command-Line-Editing&quot;&gt;Command Line Editing&lt;/a&gt;).</source>
          <target state="translated">ReadlineライブラリのBashバージョンにコマンドライン編集と履歴のサポートを含めます（ &lt;a href=&quot;command-line-editing#Command-Line-Editing&quot;&gt;コマンドライン編集を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="8ea7279bad2b6c05dc67100447cb96ae787fdd27" translate="yes" xml:space="preserve">
          <source>Include support for coprocesses and the &lt;code&gt;coproc&lt;/code&gt; reserved word (see &lt;a href=&quot;pipelines#Pipelines&quot;&gt;Pipelines&lt;/a&gt;).</source>
          <target state="translated">コ &lt;code&gt;coproc&lt;/code&gt; サポートとcoproc予約語を含めます（ &lt;a href=&quot;pipelines#Pipelines&quot;&gt;パイプラインを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="ce1057c164b1c9c64f899236af3180fa51a2e884" translate="yes" xml:space="preserve">
          <source>Include support for importing function definitions exported by another instance of the shell from the environment. This option is enabled by default.</source>
          <target state="translated">シェルの別のインスタンスによってエクスポートされた関数定義を環境からインポートするサポートを含めます。このオプションはデフォルトで有効になっています。</target>
        </trans-unit>
        <trans-unit id="99d5fc71d3d9ad53444e7309bea67a07e61b048e" translate="yes" xml:space="preserve">
          <source>Include support for matching &lt;small&gt;POSIX&lt;/small&gt; regular expressions using the &amp;lsquo;</source>
          <target state="translated">'を使用した&lt;small&gt;POSIX&lt;/small&gt;正規表現のマッチングのサポートを含める</target>
        </trans-unit>
        <trans-unit id="83ad9eb4e9a64b1f5ad0a6bec7a8781dec0bbfeb" translate="yes" xml:space="preserve">
          <source>Include support for one-dimensional array shell variables (see &lt;a href=&quot;arrays#Arrays&quot;&gt;Arrays&lt;/a&gt;).</source>
          <target state="translated">1次元配列シェル変数のサポートを含めます（ &lt;a href=&quot;arrays#Arrays&quot;&gt;配列を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="2ca4232fcf0d840864e3259aeea182e99a3c9dd5" translate="yes" xml:space="preserve">
          <source>Include support for recognizing &lt;code&gt;time&lt;/code&gt; as a reserved word and for displaying timing statistics for the pipeline following &lt;code&gt;time&lt;/code&gt; (see &lt;a href=&quot;pipelines#Pipelines&quot;&gt;Pipelines&lt;/a&gt;). This allows pipelines as well as shell builtins and functions to be timed.</source>
          <target state="translated">&lt;code&gt;time&lt;/code&gt; を予約語として認識するためのサポートと、 時間に続くパイプラインのタイミング統計を表示するためのサポートを含めます（ &lt;a href=&quot;pipelines#Pipelines&quot;&gt;パイプラインを&lt;/a&gt;参照）。 これにより、パイプラインだけでなく、シェルの組み込み関数や関数の時間を計測できます。</target>
        </trans-unit>
        <trans-unit id="6b3e316cb2abba0ed34fdcb0f8ff1797d729c4e7" translate="yes" xml:space="preserve">
          <source>Include support for the &lt;code&gt;((&amp;hellip;))&lt;/code&gt; command (see &lt;a href=&quot;conditional-constructs#Conditional-Constructs&quot;&gt;Conditional Constructs&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;((&amp;hellip;))&lt;/code&gt; コマンドのサポートを含めます（ &lt;a href=&quot;conditional-constructs#Conditional-Constructs&quot;&gt;条件付き構文を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="19fc1d7250d16771acb76de6ec69f38c9d8d60cb" translate="yes" xml:space="preserve">
          <source>Include support for the &lt;code&gt;[[&lt;/code&gt; conditional command. (see &lt;a href=&quot;conditional-constructs#Conditional-Constructs&quot;&gt;Conditional Constructs&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;[[&lt;/code&gt; 条件付きコマンドのサポートを含めます。 （ &lt;a href=&quot;conditional-constructs#Conditional-Constructs&quot;&gt;条件付き構成を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="5c70178ab357435e6786f148594a0417a44372a7" translate="yes" xml:space="preserve">
          <source>Include support for the alternate form of the &lt;code&gt;for&lt;/code&gt; command that behaves like the C language &lt;code&gt;for&lt;/code&gt; statement (see &lt;a href=&quot;looping-constructs#Looping-Constructs&quot;&gt;Looping Constructs&lt;/a&gt;).</source>
          <target state="translated">C言語の &lt;code&gt;for&lt;/code&gt; ステートメントのように動作する &lt;code&gt;for&lt;/code&gt; コマンドの代替形式のサポートを含めます（ &lt;a href=&quot;looping-constructs#Looping-Constructs&quot;&gt;ループ構造を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="ec69a59a3545823bf8466b4d739c9bc65470598e" translate="yes" xml:space="preserve">
          <source>Include support for the bash debugger (distributed separately).</source>
          <target state="translated">bash デバッガのサポートを含む (別途配布)。</target>
        </trans-unit>
        <trans-unit id="a38210d3d2cf777e266e4e73ccafcbddde65c070" translate="yes" xml:space="preserve">
          <source>Include support for the extended pattern matching features described above under &lt;a href=&quot;pattern-matching#Pattern-Matching&quot;&gt;Pattern Matching&lt;/a&gt;.</source>
          <target state="translated">上記の「パターンマッチング」で説明した拡張パターンマッチング機能のサポートを含めます。</target>
        </trans-unit>
        <trans-unit id="5617c0dcf0a06bdacc90381e950b7d3327be91e1" translate="yes" xml:space="preserve">
          <source>Include the &lt;code&gt;help&lt;/code&gt; builtin, which displays help on shell builtins and variables (see &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt;).</source>
          <target state="translated">ビルトイン &lt;code&gt;help&lt;/code&gt; 含めます。これは、シェルのビルトインと変数に関するヘルプを表示します（ &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bashビルトインを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="d0c109a13625dc09e3f3d9f8ed668f83daf955ee" translate="yes" xml:space="preserve">
          <source>Include the &lt;code&gt;select&lt;/code&gt; compound command, which allows the generation of simple menus (see &lt;a href=&quot;conditional-constructs#Conditional-Constructs&quot;&gt;Conditional Constructs&lt;/a&gt;).</source>
          <target state="translated">単純なメニューの生成を可能に &lt;code&gt;select&lt;/code&gt; 複合選択コマンドを含めます（ &lt;a href=&quot;conditional-constructs#Conditional-Constructs&quot;&gt;条件付き構成を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="98ddfd2fcb3db286949b7e1b30f3bc46531b32ce" translate="yes" xml:space="preserve">
          <source>Include, immediately after the copyright notices, a license notice giving the public permission to use the Modified Version under the terms of this License, in the form shown in the Addendum below.</source>
          <target state="translated">著作権表示の直後に、本使用許諾書の条件の下で修正版を使用することを公衆に許可するライセンス通知を、下記の補遺に示された形式で含めるようにしてください。</target>
        </trans-unit>
        <trans-unit id="bafc536987bae59572bd4d7cee3e20b1d578c491" translate="yes" xml:space="preserve">
          <source>Incremental searches begin before the user has finished typing the search string. As each character of the search string is typed, Readline displays the next entry from the history matching the string typed so far. An incremental search requires only as many characters as needed to find the desired history entry. To search backward in the history for a particular string, type</source>
          <target state="translated">インクリメンタル検索は、ユーザーが検索文字列を入力し終わる前に開始されます。検索文字列の各文字が入力されると、Readlineは、これまでに入力された文字列に一致するヒストリの 次のエントリを表示します。インクリメンタル検索では、必要な履歴項目を見つけるのに必要な文字数だけを 入力するだけで済みます。特定の文字列の履歴を後方に検索するには、次のように入力します。</target>
        </trans-unit>
        <trans-unit id="522533bd13a86a35c057d83bb8162f29b4eb6954" translate="yes" xml:space="preserve">
          <source>Incremental undo, separately remembered for each line.</source>
          <target state="translated">行ごとに個別に記憶されるインクリメンタルなアンドゥ。</target>
        </trans-unit>
        <trans-unit id="4b886372e2855e2cd32c2349c1096abd80921f3d" translate="yes" xml:space="preserve">
          <source>Incremented by one each time a new instance of Bash is started. This is intended to be a count of how deeply your Bash shells are nested.</source>
          <target state="translated">Bash の新しいインスタンスを起動するたびに 1 つずつ増加します。これは、Bash シェルがどれだけ深くネストされているかを数えるためのものです。</target>
        </trans-unit>
        <trans-unit id="3a41f2a411df07a0f72ac2e480854008ae6f6f92" translate="yes" xml:space="preserve">
          <source>Incremented by one within each subshell or subshell environment when the shell begins executing in that environment. The initial value is 0.</source>
          <target state="translated">シェルがその環境で実行を開始したときに、各サブシェルまたはサブシェル環境内で 1 つずつ増加します。初期値は 0 です。</target>
        </trans-unit>
        <trans-unit id="7f755e41ce627af0222ceee4e0d6d2f3858e3aab" translate="yes" xml:space="preserve">
          <source>Index Entry</source>
          <target state="translated">インデックスエントリ</target>
        </trans-unit>
        <trans-unit id="bcefb5437bfab999cc8a93b525748cd20b539fbf" translate="yes" xml:space="preserve">
          <source>Index of Bash builtin commands.</source>
          <target state="translated">Bash 組み込みコマンドのインデックス。</target>
        </trans-unit>
        <trans-unit id="5ae4e49df3217a02eb6534a0c5c648f4dc6ff126" translate="yes" xml:space="preserve">
          <source>Index of Bash reserved words.</source>
          <target state="translated">Bash予約語のインデックス。</target>
        </trans-unit>
        <trans-unit id="ac6bf955791a05020c5db624b5c43aa732584c74" translate="yes" xml:space="preserve">
          <source>Index of Shell Builtin Commands</source>
          <target state="translated">シェル組み込みコマンドのインデックス</target>
        </trans-unit>
        <trans-unit id="ae3342927761f2a2013ddf5aaffcec14ca115148" translate="yes" xml:space="preserve">
          <source>Index of Shell Reserved Words</source>
          <target state="translated">シェル予約語のインデックス</target>
        </trans-unit>
        <trans-unit id="5c51c5d792dfa40ea6eaa2c3da75b322c50cd65b" translate="yes" xml:space="preserve">
          <source>Index of bindable Readline functions.</source>
          <target state="translated">バインド可能なReadline関数のインデックス。</target>
        </trans-unit>
        <trans-unit id="f642ee196088372ea886186c6c617515599afd3f" translate="yes" xml:space="preserve">
          <source>Indexes</source>
          <target state="translated">Indexes</target>
        </trans-unit>
        <trans-unit id="d8bf034ca34b2e1090ab79dfdd6df9eb3649ecc1" translate="yes" xml:space="preserve">
          <source>Individual builtins may be enabled or disabled using the &lt;code&gt;enable&lt;/code&gt; builtin (see &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bash Builtins&lt;/a&gt;).</source>
          <target state="translated">ビルトインを有効にすると、個々のビルトインを有効または無効にできます（ &lt;a href=&quot;bash-builtins#Bash-Builtins&quot;&gt;Bashビルトインを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="36bf2bbc71654be3a9fb288228872771ba5913ce" translate="yes" xml:space="preserve">
          <source>Insert all completions of the text before point that would have been generated by &lt;code&gt;possible-completions&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;possible-completions&lt;/code&gt; によって生成されるポイントの前に、テキストのすべての補完を挿入します。</target>
        </trans-unit>
        <trans-unit id="51c899f9c6a36af69f71f53579673d97f6c6a826" translate="yes" xml:space="preserve">
          <source>Insert last argument to the previous command (the last word of the previous history entry). With a numeric argument, behave exactly like &lt;code&gt;yank-nth-arg&lt;/code&gt;. Successive calls to &lt;code&gt;yank-last-arg&lt;/code&gt; move back through the history list, inserting the last word (or the word specified by the argument to the first call) of each line in turn. Any numeric argument supplied to these successive calls determines the direction to move through the history. A negative argument switches the direction through the history (back or forward). The history expansion facilities are used to extract the last argument, as if the &amp;lsquo;</source>
          <target state="translated">前のコマンドに最後の引数（前の履歴エントリの最後の単語）を挿入します。 数値引数を使用すると、 &lt;code&gt;yank-nth-arg&lt;/code&gt; とまったく同じように動作します。 &lt;code&gt;yank-last-arg&lt;/code&gt; を連続して呼び出すと、履歴リスト内を戻り、各行の最後の単語（または最初の呼び出しの引数で指定された単語）が順番に挿入されます。 これらの連続した呼び出しに提供される数値引数は、履歴を移動する方向を決定します。 負の引数は、履歴を介して方向を切り替えます（後方または前方）。 履歴拡張機能は、最後の引数を抽出するために使用されます。</target>
        </trans-unit>
        <trans-unit id="310399bcedf57d54d7471b78b856e75c1beb2c1d" translate="yes" xml:space="preserve">
          <source>Insert the character into the line at the cursor.</source>
          <target state="translated">カーソル位置の行に文字を挿入します。</target>
        </trans-unit>
        <trans-unit id="c39c979a9871b542978913310993b374023a2cf1" translate="yes" xml:space="preserve">
          <source>Insert the first argument to the previous command (usually the second word on the previous line) at point. With an argument &lt;var&gt;n&lt;/var&gt;, insert the &lt;var&gt;n&lt;/var&gt;th word from the previous command (the words in the previous command begin with word 0). A negative argument inserts the &lt;var&gt;n&lt;/var&gt;th word from the end of the previous command. Once the argument &lt;var&gt;n&lt;/var&gt; is computed, the argument is extracted as if the &amp;lsquo;</source>
          <target state="translated">前のコマンドの最初の引数（通常は前の行の2番目の単語）をポイントに挿入します。 引数 &lt;var&gt;n&lt;/var&gt; を使用して、前のコマンドから &lt;var&gt;n&lt;/var&gt; 番目の単語を挿入します（前のコマンドの単語は単語0で始まります）。 負の引数を指定すると、前のコマンドの最後から &lt;var&gt;n&lt;/var&gt; 番目の単語が挿入されます。 引数 &lt;var&gt;n&lt;/var&gt; が計算されると、引数は '</target>
        </trans-unit>
        <trans-unit id="d1125a01c8b91e5041b6a63ed1a1277bf925e2cb" translate="yes" xml:space="preserve">
          <source>Insert yourself.</source>
          <target state="translated">あなた自身を挿入します。</target>
        </trans-unit>
        <trans-unit id="9efc96d34a8c1a78d0022d104007d9a8a3ef3ef0" translate="yes" xml:space="preserve">
          <source>Installation Names</source>
          <target state="translated">インストール名</target>
        </trans-unit>
        <trans-unit id="de9f8e2188b9605d3821e60f54247965098f9c5b" translate="yes" xml:space="preserve">
          <source>Installation instructions.</source>
          <target state="translated">設置方法の説明。</target>
        </trans-unit>
        <trans-unit id="3ceb87d7ed8aaab5dec98b38916e0c7dcfb07e0f" translate="yes" xml:space="preserve">
          <source>Installing Bash</source>
          <target state="translated">Bashのインストール</target>
        </trans-unit>
        <trans-unit id="bb2b5d4dfd6d698c256f1a086e45a1de9b61d4da" translate="yes" xml:space="preserve">
          <source>Interactive Shell Behavior</source>
          <target state="translated">インタラクティブなシェルの動作</target>
        </trans-unit>
        <trans-unit id="aba9ffd5b8a8c781a49eeeeded988fd69a2644bc" translate="yes" xml:space="preserve">
          <source>Interactive Shells</source>
          <target state="translated">インタラクティブシェル</target>
        </trans-unit>
        <trans-unit id="e9e6bffaf4f8a8e7d642ee16dbae8deacb40f522" translate="yes" xml:space="preserve">
          <source>Interactive shells are described in &lt;a href=&quot;interactive-shells#Interactive-Shells&quot;&gt;Interactive Shells&lt;/a&gt;.</source>
          <target state="translated">インタラクティブシェルについては、 &lt;a href=&quot;interactive-shells#Interactive-Shells&quot;&gt;インタラクティブシェルで&lt;/a&gt;説明しています。</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="d44f3813a0a1ea25d6216259a03a52cefb25574a" translate="yes" xml:space="preserve">
          <source>Introduction and Notation</source>
          <target state="translated">導入と表記</target>
        </trans-unit>
        <trans-unit id="1310dcc8c1d7695ce4c6c152ec693ea6eacd943a" translate="yes" xml:space="preserve">
          <source>Introduction to Line Editing</source>
          <target state="translated">ライン編集入門</target>
        </trans-unit>
        <trans-unit id="a78c74e831be415e85867a2b53146048ff76ed5b" translate="yes" xml:space="preserve">
          <source>Invoke an editor on the current command line, and execute the result as shell commands. Bash attempts to invoke &lt;code&gt;$VISUAL&lt;/code&gt;, &lt;code&gt;$EDITOR&lt;/code&gt;, and &lt;code&gt;emacs&lt;/code&gt; as the editor, in that order.</source>
          <target state="translated">現在のコマンドラインでエディターを呼び出し、結果をシェルコマンドとして実行します。 Bashは、エディターとして &lt;code&gt;$VISUAL&lt;/code&gt; 、 &lt;code&gt;$EDITOR&lt;/code&gt; 、および &lt;code&gt;emacs&lt;/code&gt; をこの順序で呼び出そうとします。</target>
        </trans-unit>
        <trans-unit id="7a808face373d931bb97a4af094b6366115ae0bb" translate="yes" xml:space="preserve">
          <source>Invoked as an interactive login shell, or with</source>
          <target state="translated">対話的なログインシェルとして、あるいは</target>
        </trans-unit>
        <trans-unit id="1d6d3dcd12b83b916aac351644c87ba945a36914" translate="yes" xml:space="preserve">
          <source>Invoked as an interactive non-login shell</source>
          <target state="translated">対話的な非ログインシェルとして起動</target>
        </trans-unit>
        <trans-unit id="c840d1aebd1cc8867415b5f8d365d04381cc4eb3" translate="yes" xml:space="preserve">
          <source>Invoked by remote shell daemon</source>
          <target state="translated">リモートシェルデーモンによって呼び出される</target>
        </trans-unit>
        <trans-unit id="d80f0ae695c457d4a95bb4248f58561935f10edf" translate="yes" xml:space="preserve">
          <source>Invoked in &lt;small&gt;POSIX&lt;/small&gt; mode</source>
          <target state="translated">&lt;small&gt;POSIX&lt;/small&gt;モードで呼び出されます</target>
        </trans-unit>
        <trans-unit id="2a29e8987c12c4681adfb70a9ff1ef8cdb64eb6d" translate="yes" xml:space="preserve">
          <source>Invoked non-interactively</source>
          <target state="translated">非対話的に呼び出される</target>
        </trans-unit>
        <trans-unit id="826936663d02f73cb6f3cbefcfc4702b02f52f77" translate="yes" xml:space="preserve">
          <source>Invoked with name &lt;code&gt;sh&lt;/code&gt;</source>
          <target state="translated">名前 &lt;code&gt;sh&lt;/code&gt; で呼び出されました</target>
        </trans-unit>
        <trans-unit id="41af4936f217a0404b7b3b602511db7f712e9292" translate="yes" xml:space="preserve">
          <source>Invoked with unequal effective and real &lt;small&gt;UID/GID&lt;/small&gt;s</source>
          <target state="translated">等しくない有効な実&lt;small&gt;UID / GIDで&lt;/small&gt;呼び出されました</target>
        </trans-unit>
        <trans-unit id="9c548b18bbf97d4b70a80c25b9237a5aebd9f45b" translate="yes" xml:space="preserve">
          <source>Invoking Bash</source>
          <target state="translated">バッシュの呼び出し</target>
        </trans-unit>
        <trans-unit id="029b86474413e5f992d7a5f714852cbf01ca2dcd" translate="yes" xml:space="preserve">
          <source>Is this Shell Interactive?</source>
          <target state="translated">これはシェル・インタラクティブですか?</target>
        </trans-unit>
        <trans-unit id="b9285aeb8182cef9880c06325f2441654400c114" translate="yes" xml:space="preserve">
          <source>It is possible to have a variable and a function with the same name; &lt;code&gt;sh&lt;/code&gt; does not separate the two name spaces.</source>
          <target state="translated">同じ名前の変数と関数を持つことが可能です。 &lt;code&gt;sh&lt;/code&gt; は2つの名前空間を分離しません。</target>
        </trans-unit>
        <trans-unit id="29d682ce4731cc5ebfe926cf429b60ff1fd158a6" translate="yes" xml:space="preserve">
          <source>It is possible to obtain the keys (indices) of an array as well as the values. ${!&lt;var&gt;name&lt;/var&gt;[@]} and ${!&lt;var&gt;name&lt;/var&gt;[*]} expand to the indices assigned in array variable &lt;var&gt;name&lt;/var&gt;. The treatment when in double quotes is similar to the expansion of the special parameters &amp;lsquo;</source>
          <target state="translated">配列のキー（インデックス）と値を取得できます。 $ {！ &lt;var&gt;name&lt;/var&gt; [@]}と$ {！ &lt;var&gt;name&lt;/var&gt; [*]}は、配列変数 &lt;var&gt;name&lt;/var&gt; に割り当てられたインデックスに展開します。 二重引用符で囲まれたときの処理は、特別なパラメーターの展開と同様です '</target>
        </trans-unit>
        <trans-unit id="01730ad215a52da832cdc90865fedfa60910f52d" translate="yes" xml:space="preserve">
          <source>It is requested, but not required, that you contact the authors of the Document well before redistributing any large number of copies, to give them a chance to provide you with an updated version of the Document.</source>
          <target state="translated">大量のコピーを再配布する前に、文書の著者に連絡して、文書の最新版を提供する機会を与えることが望まれるが、必須ではない。</target>
        </trans-unit>
        <trans-unit id="58668e7669fd564d99db5d581fcdb6a5618440b5" translate="yes" xml:space="preserve">
          <source>J</source>
          <target state="translated">J</target>
        </trans-unit>
        <trans-unit id="45c9d11599074bb63e1dd7a5059ab11259e3a168" translate="yes" xml:space="preserve">
          <source>JPG</source>
          <target state="translated">JPG</target>
        </trans-unit>
        <trans-unit id="b7507ee66a0315e37375e7fa4fde2a28c84b2e48" translate="yes" xml:space="preserve">
          <source>Job Control</source>
          <target state="translated">ジョブコントロール</target>
        </trans-unit>
        <trans-unit id="9ce00b107bece6e5d05a22c354ac0a7844522ee8" translate="yes" xml:space="preserve">
          <source>Job Control (see &lt;a href=&quot;job-control#Job-Control&quot;&gt;Job Control&lt;/a&gt;) is enabled by default. When job control is in effect, Bash ignores the keyboard-generated job control signals &lt;code&gt;SIGTTIN&lt;/code&gt;, &lt;code&gt;SIGTTOU&lt;/code&gt;, and &lt;code&gt;SIGTSTP&lt;/code&gt;.</source>
          <target state="translated">ジョブ制御（ジョブ制御を参照）はデフォルトで有効になっています。 ジョブ制御が有効な場合、Bashはキーボードで生成されたジョブ制御信号 &lt;code&gt;SIGTTIN&lt;/code&gt; 、 &lt;code&gt;SIGTTOU&lt;/code&gt; 、および &lt;code&gt;SIGTSTP&lt;/code&gt; を無視します。</target>
        </trans-unit>
        <trans-unit id="9ff630d22dbf623cca727da91bc11bd64f6bf183" translate="yes" xml:space="preserve">
          <source>Job Control Basics</source>
          <target state="translated">ジョブコントロールの基本</target>
        </trans-unit>
        <trans-unit id="9b5b8ec4af061fa149960775ceec6be8fca89cc6" translate="yes" xml:space="preserve">
          <source>Job Control Builtins</source>
          <target state="translated">ジョブコントロールビルトイン</target>
        </trans-unit>
        <trans-unit id="84ce27a7ad8afd61171f2a624012ee6722fe2ad0" translate="yes" xml:space="preserve">
          <source>Job Control Variables</source>
          <target state="translated">ジョブ制御変数</target>
        </trans-unit>
        <trans-unit id="01f3733bdc0670b240a60dd6f87ff3d21daaf17d" translate="yes" xml:space="preserve">
          <source>Job control is enabled (see &lt;a href=&quot;job-control#Job-Control&quot;&gt;Job Control&lt;/a&gt;). All processes run in a separate process group. When a background job completes, the shell prints a line containing its exit status.</source>
          <target state="translated">ジョブ制御が有効になっている（ &lt;a href=&quot;job-control#Job-Control&quot;&gt;ジョブ制御を&lt;/a&gt;参照）。 すべてのプロセスは別のプロセスグループで実行されます。 バックグラウンドジョブが完了すると、シェルは終了ステータスを含む行を出力します。</target>
        </trans-unit>
        <trans-unit id="291cfa00911cbfa3478bd3c6a34fd2e75f150d32" translate="yes" xml:space="preserve">
          <source>Job control refers to the ability to selectively stop (suspend) the execution of processes and continue (resume) their execution at a later point. A user typically employs this facility via an interactive interface supplied jointly by the operating system kernel&amp;rsquo;s terminal driver and Bash.</source>
          <target state="translated">ジョブ制御とは、プロセスの実行を選択的に停止（一時停止）し、後で実行を継続（再開）する機能を指します。 ユーザーは通常、オペレーティングシステムカーネルのターミナルドライバーとBashが共同で提供するインタラクティブインターフェイスを介してこの機能を使用します。</target>
        </trans-unit>
        <trans-unit id="3939a315e8eaf8d2814bae9f39fd2fee452f773c" translate="yes" xml:space="preserve">
          <source>Job names, if job control is active. May also be specified as</source>
          <target state="translated">ジョブ制御が有効な場合は、ジョブ名。のように指定することもできます。</target>
        </trans-unit>
        <trans-unit id="722c3f42b12510fdd11075d489a240fe079e232b" translate="yes" xml:space="preserve">
          <source>Job number &lt;code&gt;n&lt;/code&gt; may be referred to as &amp;lsquo;</source>
          <target state="translated">ジョブ番号 &lt;code&gt;n&lt;/code&gt; は '</target>
        </trans-unit>
        <trans-unit id="97334835cf3bd4ff49ed61b961b56ec9717c5314" translate="yes" xml:space="preserve">
          <source>Jump to:</source>
          <target state="translated">ジャンプしてください。</target>
        </trans-unit>
        <trans-unit id="a7ee38bb7be4fc44198cb2685d9601dcf2b9f569" translate="yes" xml:space="preserve">
          <source>K</source>
          <target state="translated">K</target>
        </trans-unit>
        <trans-unit id="4094ecbe8dc357339a9eda4dfd61ef3af94bcda9" translate="yes" xml:space="preserve">
          <source>Key Bindings</source>
          <target state="translated">キーバインド</target>
        </trans-unit>
        <trans-unit id="cc4837611e356bedd08fd92c8bd27ef9a22790ca" translate="yes" xml:space="preserve">
          <source>Keyboard Macros</source>
          <target state="translated">キーボードマクロ</target>
        </trans-unit>
        <trans-unit id="bb1b6518bbf36cc047b4c3269881f855522cc8b1" translate="yes" xml:space="preserve">
          <source>Kill all characters on the current line, no matter where point is. By default, this is unbound.</source>
          <target state="translated">点がどこにあっても、現在の行のすべての文字を消去します。デフォルトでは、これはバインドされていません。</target>
        </trans-unit>
        <trans-unit id="648f13248b3847d61a1f89cd76b06aac2ae31d09" translate="yes" xml:space="preserve">
          <source>Kill backward from the cursor to the beginning of the current line.</source>
          <target state="translated">カーソルから現在の行の先頭まで逆方向にキルします。</target>
        </trans-unit>
        <trans-unit id="b30e4b6bbffe5f53777064b7b1f25e77be5aaaf2" translate="yes" xml:space="preserve">
          <source>Kill from point to the end of the current word, or if between words, to the end of the next word. Word boundaries are the same as &lt;code&gt;forward-word&lt;/code&gt;.</source>
          <target state="translated">ポイントから現在の単語の終わりまで、または単語間の場合は次の単語の終わりまで殺します。 単語の境界は &lt;code&gt;forward-word&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="ed456754c6eff11239c224ec6f708ace9d87ecee" translate="yes" xml:space="preserve">
          <source>Kill from point to the end of the current word, or if between words, to the end of the next word. Word boundaries are the same as &lt;code&gt;shell-forward-word&lt;/code&gt;.</source>
          <target state="translated">ポイントから現在の単語の終わりまで、または単語間の場合は次の単語の終わりまで殺します。 単語の境界は &lt;code&gt;shell-forward-word&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="9ffbf8547e6beb6fd3a22032bae5f6a4eca48a29" translate="yes" xml:space="preserve">
          <source>Kill from the cursor the start of the current word, or, if between words, to the start of the previous word. Word boundaries are the same as those used by</source>
          <target state="translated">カーソルから現在の単語の先頭を、単語間であれば前の単語の先頭をキルします。単語の境界線は</target>
        </trans-unit>
        <trans-unit id="fc1e73bdb9d198500a5293b86f2b2a3464cc8d11" translate="yes" xml:space="preserve">
          <source>Kill from the cursor to the end of the current word, or, if between words, to the end of the next word. Word boundaries are the same as those used by</source>
          <target state="translated">カーソルから現在の単語の最後まで、単語間であれば次の単語の最後までKillします。単語の境界線は</target>
        </trans-unit>
        <trans-unit id="311a4cde3db454c3849e6ee13e45582356a552a1" translate="yes" xml:space="preserve">
          <source>Kill from the cursor to the previous whitespace. This is different than</source>
          <target state="translated">カーソルから前のホワイトスペースにキルします。とは異なります。</target>
        </trans-unit>
        <trans-unit id="0ecb0ef048ba441b7755a53bd46945b1e20c2c91" translate="yes" xml:space="preserve">
          <source>Kill the text from point to the end of the line.</source>
          <target state="translated">ポイントから行末までのテキストを殺す。</target>
        </trans-unit>
        <trans-unit id="a6ffad75f2cec42a116c1a0e5d568a0039830396" translate="yes" xml:space="preserve">
          <source>Kill the text from the current cursor position to the end of the line.</source>
          <target state="translated">現在のカーソル位置から行末までのテキストをキルします。</target>
        </trans-unit>
        <trans-unit id="04c841ce2d4253cd79155b6e3949e02bf6c53e61" translate="yes" xml:space="preserve">
          <source>Kill the text in the current region. By default, this command is unbound.</source>
          <target state="translated">現在の領域のテキストを削除します。デフォルトでは、このコマンドはバインドされていません。</target>
        </trans-unit>
        <trans-unit id="f90603f79ddaf8e0226787803ee944e6f568c103" translate="yes" xml:space="preserve">
          <source>Kill the word behind point, using white space and the slash character as the word boundaries. The killed text is saved on the kill-ring.</source>
          <target state="translated">ポイントの後ろにある単語を、ホワイトスペースとスラッシュを単語の境界として使用してキルします。キルしたテキストはキルリングに保存されます。</target>
        </trans-unit>
        <trans-unit id="f5997899e032ace476cc7eef39bb34b06c94ae54" translate="yes" xml:space="preserve">
          <source>Kill the word behind point, using white space as a word boundary. The killed text is saved on the kill-ring.</source>
          <target state="translated">空白を単語の境界として使用して、ポイントの後ろの単語をキルします。キルしたテキストはキルリングに保存されます。</target>
        </trans-unit>
        <trans-unit id="1fea2d6f0be014cb4b6bedac3fd797f026257b42" translate="yes" xml:space="preserve">
          <source>Kill the word behind point. Word boundaries are the same as &lt;code&gt;backward-word&lt;/code&gt;.</source>
          <target state="translated">ポイントの後ろの単語を殺します。 単語の境界は、 &lt;code&gt;backward-word&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="84bdeb981aed42b434759620c7937dc2c98dcce5" translate="yes" xml:space="preserve">
          <source>Kill the word behind point. Word boundaries are the same as &lt;code&gt;shell-backward-word&lt;/code&gt;.</source>
          <target state="translated">ポイントの後ろの単語を殺します。 単語の境界は &lt;code&gt;shell-backward-word&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="377ef541daa0c559de537f46058454ce4547bbc1" translate="yes" xml:space="preserve">
          <source>Killing And Yanking</source>
          <target state="translated">キリングとヤンキー</target>
        </trans-unit>
        <trans-unit id="d160e0986aca4714714a16f29ec605af90be704d" translate="yes" xml:space="preserve">
          <source>L</source>
          <target state="translated">L</target>
        </trans-unit>
        <trans-unit id="e6e6ef4e9ff2ecd01c6ad84aff62c4f65a5fbef3" translate="yes" xml:space="preserve">
          <source>LANG</source>
          <target state="translated">LANG</target>
        </trans-unit>
        <trans-unit id="5e30f55f199c19ff025f03687ec4a6fb2479b26d" translate="yes" xml:space="preserve">
          <source>LC_ALL</source>
          <target state="translated">LC_ALL</target>
        </trans-unit>
        <trans-unit id="5e5d1059964c8ee92a88f0555d21b5678f8be79d" translate="yes" xml:space="preserve">
          <source>LC_COLLATE</source>
          <target state="translated">LC_COLLATE</target>
        </trans-unit>
        <trans-unit id="c2a9d7cc4f606b876ad7de9b8f4f4a1e28dcf12b" translate="yes" xml:space="preserve">
          <source>LC_CTYPE</source>
          <target state="translated">LC_CTYPE</target>
        </trans-unit>
        <trans-unit id="200bab83e3da485315fd8db2fd91df4231e04a6b" translate="yes" xml:space="preserve">
          <source>LC_MESSAGES</source>
          <target state="translated">LC_MESSAGES</target>
        </trans-unit>
        <trans-unit id="c922bf83e996b383077b42767c480fd9317d728f" translate="yes" xml:space="preserve">
          <source>LC_NUMERIC</source>
          <target state="translated">LC_NUMERIC</target>
        </trans-unit>
        <trans-unit id="823feb18075201a2009bf899a2b4bee49397d8df" translate="yes" xml:space="preserve">
          <source>LC_TIME</source>
          <target state="translated">LC_TIME</target>
        </trans-unit>
        <trans-unit id="bfce9d9d778f491183fdbb57d94b09b3f50b2846" translate="yes" xml:space="preserve">
          <source>LINENO</source>
          <target state="translated">LINENO</target>
        </trans-unit>
        <trans-unit id="0d7f037733ef398e4fa6caee3e4a76955c742eba" translate="yes" xml:space="preserve">
          <source>LINES</source>
          <target state="translated">LINES</target>
        </trans-unit>
        <trans-unit id="dbfdd62c22d142fb89ad0f50c9a45f31239755f2" translate="yes" xml:space="preserve">
          <source>Letting Readline Type For You</source>
          <target state="translated">リードラインにタイプを任せる</target>
        </trans-unit>
        <trans-unit id="0d0db8c2b020268e4b2e48ddcbb42e59195d905a" translate="yes" xml:space="preserve">
          <source>Licensed under the GNU Free Documentation License.</source>
          <target state="translated">GNUフリー・ドキュメンテーション・ライセンスの下でライセンスされています。</target>
        </trans-unit>
        <trans-unit id="3c584b03c51b0bbeffeccc97a9b960239a36436e" translate="yes" xml:space="preserve">
          <source>List all key sequences bound to shell commands and the associated commands in a format that can be reused as input.</source>
          <target state="translated">シェルコマンドにバインドされているすべてのキーシーケンスと、それに関連するコマンドを、入力として再利用できる形式でリストアップします。</target>
        </trans-unit>
        <trans-unit id="3f529bec4d07453233e9cea0f36dbf54def12aa1" translate="yes" xml:space="preserve">
          <source>List current Readline function names and bindings.</source>
          <target state="translated">現在の Readline 関数名とバインディングを一覧表示します。</target>
        </trans-unit>
        <trans-unit id="8b8e450b07a8a6d28388b4347569efa2489edbee" translate="yes" xml:space="preserve">
          <source>List current Readline variable names and values.</source>
          <target state="translated">現在のReadline変数名と値を一覧表示します。</target>
        </trans-unit>
        <trans-unit id="81844ddfcde68c31fdf2fc102b2f0ca33a634238" translate="yes" xml:space="preserve">
          <source>List of variables that exist in Bash.</source>
          <target state="translated">Bashに存在する変数の一覧です。</target>
        </trans-unit>
        <trans-unit id="a42204e2bb1eefc84bb3b1bf10ab724cfb44f943" translate="yes" xml:space="preserve">
          <source>List on the Title Page, as authors, one or more persons or entities responsible for authorship of the modifications in the Modified Version, together with at least five of the principal authors of the Document (all of its principal authors, if it has fewer than five), unless they release you from this requirement.</source>
          <target state="translated">タイトルページに、修正版の修正の著作権を持つ一人または複数の個人または団体を著作者として記載し、さらに、この要件から解放されない限り、文書の主要著作者のうち少なくとも5人(主要著作者が5人未満の場合はすべての主要著作者)と一緒に記載してください。</target>
        </trans-unit>
        <trans-unit id="de83ac9739dc3eb70e15b6c9285b4b7206938222" translate="yes" xml:space="preserve">
          <source>List only the process &lt;small&gt;ID&lt;/small&gt; of the job&amp;rsquo;s process group leader.</source>
          <target state="translated">ジョブのプロセスグループリーダーのプロセス&lt;small&gt;ID&lt;/small&gt;のみをリストします。</target>
        </trans-unit>
        <trans-unit id="8b2356b25df63e113adc66f527a48249cc9e7985" translate="yes" xml:space="preserve">
          <source>List process &lt;small&gt;ID&lt;/small&gt;s in addition to the normal information.</source>
          <target state="translated">通常の情報に加えて、プロセス&lt;small&gt;IDを&lt;/small&gt;リストします。</target>
        </trans-unit>
        <trans-unit id="4791291906b728b3ff5195d2c300dad9c80cb52a" translate="yes" xml:space="preserve">
          <source>List the names of all Readline functions.</source>
          <target state="translated">すべての Readline 関数の名前を一覧表示します。</target>
        </trans-unit>
        <trans-unit id="0588e814f2d21cdbbba6703f05050bf44f4d26ec" translate="yes" xml:space="preserve">
          <source>List the possible completions of the text before point, treating it as a command name.</source>
          <target state="translated">ポイントの前のテキストの可能な補完をリストアップし、それをコマンド名として扱います。</target>
        </trans-unit>
        <trans-unit id="4e7d8c02ded0a86831aa8dc760c443da3780f8b5" translate="yes" xml:space="preserve">
          <source>List the possible completions of the text before point, treating it as a filename.</source>
          <target state="translated">ポイントの前のテキストをファイル名として扱い、可能な補完をリストアップします。</target>
        </trans-unit>
        <trans-unit id="32c364e760f2dcc9773d5f67bc8c8b2c41b3e5de" translate="yes" xml:space="preserve">
          <source>List the possible completions of the text before point, treating it as a hostname.</source>
          <target state="translated">ポイントの前のテキストをホスト名として扱い、可能な補完をリストアップします。</target>
        </trans-unit>
        <trans-unit id="787c208564164447207cca1fc91e2359bc7e27df" translate="yes" xml:space="preserve">
          <source>List the possible completions of the text before point, treating it as a shell variable.</source>
          <target state="translated">シェル変数として扱い、ポイントの前のテキストの可能な補完をリストアップします。</target>
        </trans-unit>
        <trans-unit id="7748706420d46a17640eae54d47e278df748f65d" translate="yes" xml:space="preserve">
          <source>List the possible completions of the text before point, treating it as a username.</source>
          <target state="translated">ポイントの前のテキストをユーザー名として扱い、可能な補完をリストアップしてください。</target>
        </trans-unit>
        <trans-unit id="18cba9bae09e335253831c1faa4e5feece845846" translate="yes" xml:space="preserve">
          <source>List the possible completions of the text before point. When displaying completions, Readline sets the number of columns used for display to the value of &lt;code&gt;completion-display-width&lt;/code&gt;, the value of the environment variable &lt;code&gt;COLUMNS&lt;/code&gt;, or the screen width, in that order.</source>
          <target state="translated">ポイントの前にテキストの可能な補完をリストします。 補完を表示するとき、Readlineは、表示に使用される列の数を、complete &lt;code&gt;completion-display-width&lt;/code&gt; の値、環境変数 &lt;code&gt;COLUMNS&lt;/code&gt; の値、または画面の幅の順に設定します。</target>
        </trans-unit>
        <trans-unit id="57c9502a7d7d48fd4a86b45fefb2b163491c3ae1" translate="yes" xml:space="preserve">
          <source>Lists</source>
          <target state="translated">Lists</target>
        </trans-unit>
        <trans-unit id="a4a97c2b2e7d7b37d9f11ba3ccda555463bceba2" translate="yes" xml:space="preserve">
          <source>Lists of Commands</source>
          <target state="translated">コマンド一覧</target>
        </trans-unit>
        <trans-unit id="0919ea0ff2c98d0bec36e30ca7274851b56675cb" translate="yes" xml:space="preserve">
          <source>Literal tildes that appear as the first character in elements of the &lt;code&gt;PATH&lt;/code&gt; variable are not expanded as described above under &lt;a href=&quot;tilde-expansion#Tilde-Expansion&quot;&gt;Tilde Expansion&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;PATH&lt;/code&gt; 変数の要素の最初の文字として現れるリテラルティルダは、ティルダ展開で前述したように展開されません。</target>
        </trans-unit>
        <trans-unit id="8709e97731b1d3c30dd2bfc5464bbdfb32ec5150" translate="yes" xml:space="preserve">
          <source>Local variables &quot;shadow&quot; variables with the same name declared at previous scopes. For instance, a local variable declared in a function hides a global variable of the same name: references and assignments refer to the local variable, leaving the global variable unmodified. When the function returns, the global variable is once again visible.</source>
          <target state="translated">ローカル変数は、以前のスコープで宣言された同名の変数を「シャドウ」します。例えば、関数内で宣言されたローカル変数は、同じ名前のグローバル変数を隠します。参照と代入はローカル変数を参照し、グローバル変数は変更されません。関数が戻ると、グローバル変数が再び表示されます。</target>
        </trans-unit>
        <trans-unit id="0a0a3d9b1f0215dda9247d514ef33401ca13e150" translate="yes" xml:space="preserve">
          <source>Locale Translation</source>
          <target state="translated">ロケール翻訳</target>
        </trans-unit>
        <trans-unit id="1a59cf22a5c9bec8f8a98ec4cb5b2f0dbd04d8a1" translate="yes" xml:space="preserve">
          <source>Locale-Specific Translation</source>
          <target state="translated">地域固有の翻訳</target>
        </trans-unit>
        <trans-unit id="a262a1284fca7a73f90fac6c73ecc09b7ab28766" translate="yes" xml:space="preserve">
          <source>Locate and remember (hash) commands as they are looked up for execution. This option is enabled by default.</source>
          <target state="translated">実行のために検索されたコマンドを検索して記憶します(ハッシュ)。このオプションはデフォルトで有効になっています。</target>
        </trans-unit>
        <trans-unit id="04e3682353b56a2921e33cef86a36a973e382a38" translate="yes" xml:space="preserve">
          <source>Look for the Bash source code in directory &lt;var&gt;dir&lt;/var&gt;. Usually &lt;code&gt;configure&lt;/code&gt; can determine that directory automatically.</source>
          <target state="translated">ディレクトリ &lt;var&gt;dir&lt;/var&gt; でBashソースコードを探します。 通常、 &lt;code&gt;configure&lt;/code&gt; はそのディレクトリを自動的に決定できます。</target>
        </trans-unit>
        <trans-unit id="5c8606f02f484a20125d607e5631dda3a0ec841f" translate="yes" xml:space="preserve">
          <source>Looping Constructs</source>
          <target state="translated">ループ構造体</target>
        </trans-unit>
        <trans-unit id="887791bfe6656ace33a7a1ed37824f33be8c2ebf" translate="yes" xml:space="preserve">
          <source>Lowercase the current (or following) word. With a negative argument, lowercase the previous word, but do not move the cursor.</source>
          <target state="translated">現在の(またはそれに続く)単語を小文字にします。負の引数を指定すると、前の単語を小文字にしますが、カーソルは移動しません。</target>
        </trans-unit>
        <trans-unit id="c63ae6dd4fc9f9dda66970e827d13f7c73fe841c" translate="yes" xml:space="preserve">
          <source>M</source>
          <target state="translated">M</target>
        </trans-unit>
        <trans-unit id="f56099d279d3bbbe13433ab2b41f59ecda17c1b5" translate="yes" xml:space="preserve">
          <source>M--</source>
          <target state="translated">M--</target>
        </trans-unit>
        <trans-unit id="eb0aec4ec21a4101bd0ef2f34229c444b30b385e" translate="yes" xml:space="preserve">
          <source>M-- C-k</source>
          <target state="translated">M...C-k</target>
        </trans-unit>
        <trans-unit id="e7bf8d901f8b8e35548ee2a63db64dd733f5d157" translate="yes" xml:space="preserve">
          <source>M-1 0 C-d</source>
          <target state="translated">M-1 0 C-d</target>
        </trans-unit>
        <trans-unit id="7591f331f91ebb10d139ef84c05c78dc46889d88" translate="yes" xml:space="preserve">
          <source>M-C-k</source>
          <target state="translated">M-C-k</target>
        </trans-unit>
        <trans-unit id="e286729ebdb433a6094d1271b49c5a2c6f950ccc" translate="yes" xml:space="preserve">
          <source>M-DEL</source>
          <target state="translated">M-DEL</target>
        </trans-unit>
        <trans-unit id="dfec75d824ab931885b10c2deb8b602ddf385540" translate="yes" xml:space="preserve">
          <source>M-b</source>
          <target state="translated">M-b</target>
        </trans-unit>
        <trans-unit id="a213eb1de2d97fd8ab6c0c8486e553f7cdc3e521" translate="yes" xml:space="preserve">
          <source>M-d</source>
          <target state="translated">M-d</target>
        </trans-unit>
        <trans-unit id="add69bf7aa5e86e6ac1a17b8047a626986b67564" translate="yes" xml:space="preserve">
          <source>M-f</source>
          <target state="translated">M-f</target>
        </trans-unit>
        <trans-unit id="748e454f60558bf0c3ce84d737eb8fc02adbf9f8" translate="yes" xml:space="preserve">
          <source>M-k</source>
          <target state="translated">M-k</target>
        </trans-unit>
        <trans-unit id="7555a33395fef6db20d121fb58c3221aa124e48c" translate="yes" xml:space="preserve">
          <source>M-y</source>
          <target state="translated">M-y</target>
        </trans-unit>
        <trans-unit id="2b244c1d5a036154c667f4e8f2cbb11d28354647" translate="yes" xml:space="preserve">
          <source>MACHTYPE</source>
          <target state="translated">MACHTYPE</target>
        </trans-unit>
        <trans-unit id="0d8e8b084c29a8155c26beb49eacf204d8ae1d30" translate="yes" xml:space="preserve">
          <source>MAIL</source>
          <target state="translated">MAIL</target>
        </trans-unit>
        <trans-unit id="4ffbf590e83ed87f3d80a00d234078b4a4f9687c" translate="yes" xml:space="preserve">
          <source>MAILCHECK</source>
          <target state="translated">MAILCHECK</target>
        </trans-unit>
        <trans-unit id="104c0e0ec1abd728c0704330d49265585de58880" translate="yes" xml:space="preserve">
          <source>MAILPATH</source>
          <target state="translated">MAILPATH</target>
        </trans-unit>
        <trans-unit id="adfc4d4553286d737f63d291ea9f48fa98119854" translate="yes" xml:space="preserve">
          <source>MAPFILE</source>
          <target state="translated">MAPFILE</target>
        </trans-unit>
        <trans-unit id="10dfafbed59fc9d1d09c3566fd534d347478066d" translate="yes" xml:space="preserve">
          <source>MODIFICATIONS</source>
          <target state="translated">MODIFICATIONS</target>
        </trans-unit>
        <trans-unit id="330f70a96b57455e60ea79f3c77c8b9bbc80e7f2" translate="yes" xml:space="preserve">
          <source>Major Differences From The Bourne Shell</source>
          <target state="translated">ボーンシェルとの主な違い</target>
        </trans-unit>
        <trans-unit id="9a13cb3801daadaaaad284f639ac522e78e3a2c1" translate="yes" xml:space="preserve">
          <source>Make &lt;var&gt;name&lt;/var&gt;s readonly. These names cannot then be assigned values by subsequent assignment statements or unset.</source>
          <target state="translated">&lt;var&gt;name&lt;/var&gt; 読み取り専用にします。 これらの名前には、その後の割り当てステートメントで値を割り当てたり、設定を解除したりすることはできません。</target>
        </trans-unit>
        <trans-unit id="fe79a4c96a8c61dd84b3d8f4de5922900deeb84f" translate="yes" xml:space="preserve">
          <source>Make Bash &lt;small&gt;POSIX&lt;/small&gt;-conformant by default (see &lt;a href=&quot;bash-posix-mode#Bash-POSIX-Mode&quot;&gt;Bash POSIX Mode&lt;/a&gt;).</source>
          <target state="translated">デフォルトでBash &lt;small&gt;POSIXに&lt;/small&gt;準拠させる（ &lt;a href=&quot;bash-posix-mode#Bash-POSIX-Mode&quot;&gt;Bash POSIXモードを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="6b144f0bbad3df69b9624985274f440eaf0aa843" translate="yes" xml:space="preserve">
          <source>Make the &lt;code&gt;echo&lt;/code&gt; builtin expand backslash-escaped characters by default, without requiring the</source>
          <target state="translated">&lt;code&gt;echo&lt;/code&gt; ビルトインがデフォルトでバックスラッシュエスケープ文字を展開するようにします。</target>
        </trans-unit>
        <trans-unit id="6fa29f841406e9273e65e66ce6799c3e9dd10f08" translate="yes" xml:space="preserve">
          <source>Make the shell a restricted shell (see &lt;a href=&quot;the-restricted-shell#The-Restricted-Shell&quot;&gt;The Restricted Shell&lt;/a&gt;).</source>
          <target state="translated">シェルを制限付きシェルにします（ &lt;a href=&quot;the-restricted-shell#The-Restricted-Shell&quot;&gt;制限付きシェルを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="ef3baab5ee04d1e09d8422381233dab83b426a22" translate="yes" xml:space="preserve">
          <source>Make this shell act as if it had been directly invoked by login. When the shell is interactive, this is equivalent to starting a login shell with &amp;lsquo;</source>
          <target state="translated">このシェルを、ログインによって直接呼び出されたかのように動作させます。 シェルが対話型の場合、これはログインシェルを「</target>
        </trans-unit>
        <trans-unit id="836efb6e25a091dcb4ff8e1dbb2f0be6a5cbf14c" translate="yes" xml:space="preserve">
          <source>Makefile</source>
          <target state="translated">Makefile</target>
        </trans-unit>
        <trans-unit id="05def473aba0558d1630fcc42989825be8af3535" translate="yes" xml:space="preserve">
          <source>Makefilefile</source>
          <target state="translated">Makefilefile</target>
        </trans-unit>
        <trans-unit id="9c56c02dacd4da9dbffdc1f5f297ac43b8810db6" translate="yes" xml:space="preserve">
          <source>Makes &lt;var&gt;dir&lt;/var&gt; be the top of the stack, making it the new current directory as if it had been supplied as an argument to the &lt;code&gt;cd&lt;/code&gt; builtin.</source>
          <target state="translated">&lt;var&gt;dir&lt;/var&gt; をスタックの最上位にし、 &lt;code&gt;cd&lt;/code&gt; 組み込み関数への引数として指定された場合と同じように、それを新しい現在のディレクトリにします。</target>
        </trans-unit>
        <trans-unit id="b14d955de5a31afe35f83846b2704bd26c502ad0" translate="yes" xml:space="preserve">
          <source>Making Bash behave more closely to what the POSIX standard specifies.</source>
          <target state="translated">Bashの動作をPOSIX標準が指定しているものに近づけた。</target>
        </trans-unit>
        <trans-unit id="4e836fdc2572ab23d5dc8c36bd613ac6b0f82d63" translate="yes" xml:space="preserve">
          <source>Manual</source>
          <target state="translated">Manual</target>
        </trans-unit>
        <trans-unit id="33a11ddeb40a5ea23b8ede803f8e1aa69d8e1704" translate="yes" xml:space="preserve">
          <source>Manual: Appendices</source>
          <target state="translated">マニュアル 付録</target>
        </trans-unit>
        <trans-unit id="19cfb484b6178f6b9d15f8147a01c01331ec01b8" translate="yes" xml:space="preserve">
          <source>Manual: Indexes</source>
          <target state="translated">マニュアル インデックス</target>
        </trans-unit>
        <trans-unit id="f5c70dc1930929d3c5404a84596e92ae32dcc16d" translate="yes" xml:space="preserve">
          <source>Many more examples &amp;ndash; an extensive collection of completions for most of the common GNU, Unix, and Linux commands &amp;ndash; are available as part of the bash_completion project. This is installed by default on many GNU/Linux distributions. Originally written by Ian Macdonald, the project now lives at &lt;a href=&quot;https://github.com/scop/bash-completion/&quot;&gt;https://github.com/scop/bash-completion/&lt;/a&gt;. There are ports for other systems such as Solaris and Mac OS X.</source>
          <target state="translated">さらに多くの例（ほとんどの一般的なGNU、Unix、およびLinuxコマンドの補完の広範なコレクション）は、bash_completionプロジェクトの一部として入手できます。 これはデフォルトで多くのGNU / Linuxディストリビューションにインストールされています。 Ian Macdonaldによって最初に作成されたプロジェクトは、現在&lt;a href=&quot;https://github.com/scop/bash-completion/&quot;&gt;https://github.com/scop/bash-completion/にあります&lt;/a&gt; 。 SolarisやMac OS Xなどの他のシステム用のポートがあります。</target>
        </trans-unit>
        <trans-unit id="929820933cbf583ca61cd2cbd76a10ebbdad3ab7" translate="yes" xml:space="preserve">
          <source>Many of the builtins have been extended by &lt;small&gt;POSIX&lt;/small&gt; or Bash.</source>
          <target state="translated">ビルトインの多くは、 &lt;small&gt;POSIX&lt;/small&gt;またはBashによって拡張されています。</target>
        </trans-unit>
        <trans-unit id="3a76fa952b85656089b18b552030f74bffcd3a78" translate="yes" xml:space="preserve">
          <source>Mark each &lt;var&gt;name&lt;/var&gt; as readonly. The values of these names may not be changed by subsequent assignment. If the</source>
          <target state="translated">各 &lt;var&gt;name&lt;/var&gt; を読み取り専用としてマークします。 これらの名前の値は、その後の割り当てでは変更できません。 もし</target>
        </trans-unit>
        <trans-unit id="5c65f494822786d72599a219e58b5ad8b9f74bd3" translate="yes" xml:space="preserve">
          <source>Mark each &lt;var&gt;name&lt;/var&gt; for export to subsequent commands via the environment.</source>
          <target state="translated">環境を介して後続のコマンドにエクスポートするために、各 &lt;var&gt;name&lt;/var&gt; をマークします。</target>
        </trans-unit>
        <trans-unit id="dbc3f611fc43d45dcdc3e407212c20046c1b9585" translate="yes" xml:space="preserve">
          <source>Mark each &lt;var&gt;name&lt;/var&gt; to be passed to child processes in the environment. If the</source>
          <target state="translated">環境内の子プロセスに渡される各 &lt;var&gt;name&lt;/var&gt; をマークします。 もし</target>
        </trans-unit>
        <trans-unit id="47b2a5bb2c23f338ee6a62b187c1d3e2b1eb1b0e" translate="yes" xml:space="preserve">
          <source>Matches any one of the enclosed characters. A pair of characters separated by a hyphen denotes a &lt;var&gt;range expression&lt;/var&gt;; any character that falls between those two characters, inclusive, using the current locale&amp;rsquo;s collating sequence and character set, is matched. If the first character following the &amp;lsquo;</source>
          <target state="translated">囲まれた文字のいずれかに一致します。 ハイフンで区切られた1組の文字は、 &lt;var&gt;range expression&lt;/var&gt; 示します。 現在のロケールの照合シーケンスと文字セットを使用して、これらの2つの文字の間にあるすべての文字が照合されます。 'に続く最初の文字が</target>
        </trans-unit>
        <trans-unit id="bb8a96214111f641ec065d807d183c827eb89b95" translate="yes" xml:space="preserve">
          <source>Matches any single character.</source>
          <target state="translated">任意の1文字にマッチします。</target>
        </trans-unit>
        <trans-unit id="60598833231b6c5c16760ebcb6b5a9ce13a7da8b" translate="yes" xml:space="preserve">
          <source>Matches any string, including the null string. When the &lt;code&gt;globstar&lt;/code&gt; shell option is enabled, and &amp;lsquo;</source>
          <target state="translated">null文字列を含む任意の文字列に一致します。 &lt;code&gt;globstar&lt;/code&gt; シェルオプションが有効で、かつ '</target>
        </trans-unit>
        <trans-unit id="580bc9960e476459e3ccd80437aa6badf17a078d" translate="yes" xml:space="preserve">
          <source>Matches anything except one of the given patterns.</source>
          <target state="translated">指定されたパターン以外のものにマッチします。</target>
        </trans-unit>
        <trans-unit id="bbc361d5b4d32c141da2e7dda8d5139e01c8f063" translate="yes" xml:space="preserve">
          <source>Matches one of the given patterns.</source>
          <target state="translated">与えられたパターンのいずれかにマッチします。</target>
        </trans-unit>
        <trans-unit id="507ef24c56912e7e6756bece3eb9f74e4cd3a4c1" translate="yes" xml:space="preserve">
          <source>Matches one or more occurrences of the given patterns.</source>
          <target state="translated">指定されたパターンの1つまたは複数の出現にマッチします。</target>
        </trans-unit>
        <trans-unit id="dcd86c7bd75a865687eb9ebbdc1a8b2be66c3323" translate="yes" xml:space="preserve">
          <source>Matches zero or more occurrences of the given patterns.</source>
          <target state="translated">指定されたパターンの0回以上の出現にマッチします。</target>
        </trans-unit>
        <trans-unit id="3c265be742c89b975ed703f6c4d6f306c544e2e2" translate="yes" xml:space="preserve">
          <source>Matches zero or one occurrence of the given patterns.</source>
          <target state="translated">指定されたパターンの出現回数が0回または1回の場合にマッチします。</target>
        </trans-unit>
        <trans-unit id="ef742df294c22559e343cc21d8a45225c22f195c" translate="yes" xml:space="preserve">
          <source>Metafy the next character typed. This is for keyboards without a meta key. Typing &amp;lsquo;</source>
          <target state="translated">入力した次の文字をメタファイします。 これは、メタキーのないキーボード用です。 タイピング '</target>
        </trans-unit>
        <trans-unit id="0eb76460945245eee981e7f4e80d50ea11d83432" translate="yes" xml:space="preserve">
          <source>Miscellaneous Commands</source>
          <target state="translated">その他のコマンド</target>
        </trans-unit>
        <trans-unit id="7b775d8f987b6e8e0ceeb2569624f232e86e2599" translate="yes" xml:space="preserve">
          <source>Modern systems provide more secure ways to implement a restricted environment, such as &lt;code&gt;jails&lt;/code&gt;, &lt;code&gt;zones&lt;/code&gt;, or &lt;code&gt;containers&lt;/code&gt;.</source>
          <target state="translated">最新のシステムは、 &lt;code&gt;jails&lt;/code&gt; 、 &lt;code&gt;zones&lt;/code&gt; 、 &lt;code&gt;containers&lt;/code&gt; などの制限された環境を実装するためのより安全な方法を提供します。</target>
        </trans-unit>
        <trans-unit id="3a7ea294bf33134dce4b142b8b7182de29b978b2" translate="yes" xml:space="preserve">
          <source>Modifiers</source>
          <target state="translated">Modifiers</target>
        </trans-unit>
        <trans-unit id="14d16343acee667618ed3e2abddff9294d37ada9" translate="yes" xml:space="preserve">
          <source>Modify completion options for each &lt;var&gt;name&lt;/var&gt; according to the &lt;var&gt;option&lt;/var&gt;s, or for the currently-executing completion if no &lt;var&gt;name&lt;/var&gt;s are supplied. If no &lt;var&gt;option&lt;/var&gt;s are given, display the completion options for each &lt;var&gt;name&lt;/var&gt; or the current completion. The possible values of &lt;var&gt;option&lt;/var&gt; are those valid for the &lt;code&gt;complete&lt;/code&gt; builtin described above. The</source>
          <target state="translated">&lt;var&gt;option&lt;/var&gt; sに従って &lt;var&gt;name&lt;/var&gt; ごとの補完オプションを変更します。 &lt;var&gt;name&lt;/var&gt; sが指定されていない場合は、現在実行中の補完オプションを変更します。 &lt;var&gt;option&lt;/var&gt; が指定されていない場合は、各 &lt;var&gt;name&lt;/var&gt; 補完オプションまたは現在の補完を表示します。 &lt;var&gt;option&lt;/var&gt; の可能な値は、上記の &lt;code&gt;complete&lt;/code&gt; 組み込みに有効な値です。 の</target>
        </trans-unit>
        <trans-unit id="04121c88ece5c186f18f267948470d8744f5e497" translate="yes" xml:space="preserve">
          <source>Modify shell optional behavior.</source>
          <target state="translated">シェルのオプション動作を変更します。</target>
        </trans-unit>
        <trans-unit id="331756640fcecc796eafaad9e2ab28526a0aed94" translate="yes" xml:space="preserve">
          <source>Modifying Shell Behavior</source>
          <target state="translated">シェルの動作を変更する</target>
        </trans-unit>
        <trans-unit id="fbf4fccd6de98d8a8fc56159af58c88a0799f1f0" translate="yes" xml:space="preserve">
          <source>Modifying the results of substitution.</source>
          <target state="translated">置換の結果を修正する。</target>
        </trans-unit>
        <trans-unit id="f0b6d569baa669ab5166eda7946cffd9aa8c24fb" translate="yes" xml:space="preserve">
          <source>More complex shell commands are composed of simple commands arranged together in a variety of ways: in a pipeline in which the output of one command becomes the input of a second, in a loop or conditional construct, or in some other grouping.</source>
          <target state="translated">より複雑なシェルコマンドは、あるコマンドの出力が 2 番目の入力になるようなパイプライン、ループや条件構成、その他のグループ化など、様々な方法で配置されたシンプルなコマンドで構成されています。</target>
        </trans-unit>
        <trans-unit id="a6f7b0cba471a3fb5a86435ad9b95d4d3186ccdc" translate="yes" xml:space="preserve">
          <source>More features unique to Bash may be found in &lt;a href=&quot;bash-features#Bash-Features&quot;&gt;Bash Features&lt;/a&gt;.</source>
          <target state="translated">Bashに固有のその他の機能は、 &lt;a href=&quot;bash-features#Bash-Features&quot;&gt;Bash Featuresにあります&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="dc5f2e099e3643dce228ebc5118d6bc9d530a456" translate="yes" xml:space="preserve">
          <source>Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.</source>
          <target state="translated">さらに、特定の著作権者からのあなたのライセンスは、著作権者が何らかの合理的な手段で違反をあなたに通知した場合には永久に復活し、これはあなたがその著作権者から(いかなる作品についても)本ライセンスの違反の通知を初めて受けた場合であり、あなたがその通知を受け取ってから30日以内に違反を治した場合です。</target>
        </trans-unit>
        <trans-unit id="2d949bb6b18e78526fdb3309145863c0fff7acfb" translate="yes" xml:space="preserve">
          <source>Most versions of Unix make this a part of the operating system&amp;rsquo;s command execution mechanism. If the first line of a script begins with the two characters &amp;lsquo;</source>
          <target state="translated">Unixのほとんどのバージョンでは、これをオペレーティングシステムのコマンド実行メカニズムの一部にしています。 スクリプトの最初の行が2文字で始まる場合 '</target>
        </trans-unit>
        <trans-unit id="03a568ed0d0916cdf5158fedc938163865f34d79" translate="yes" xml:space="preserve">
          <source>Move &amp;lsquo;back&amp;rsquo; through the history list, fetching the previous command.</source>
          <target state="translated">前のコマンドをフェッチして、履歴リストを「戻る」。</target>
        </trans-unit>
        <trans-unit id="802387d1306c70f90614ec5492974da0b34d6702" translate="yes" xml:space="preserve">
          <source>Move &amp;lsquo;forward&amp;rsquo; through the history list, fetching the next command.</source>
          <target state="translated">次のコマンドをフェッチして、履歴リストを「進む」。</target>
        </trans-unit>
        <trans-unit id="ea22070bff60174ad9198aadedea01b9e334bc86" translate="yes" xml:space="preserve">
          <source>Move back a character.</source>
          <target state="translated">キャラを戻してください。</target>
        </trans-unit>
        <trans-unit id="f03abbd943590e5b676ac24ffec0cb3457a839fb" translate="yes" xml:space="preserve">
          <source>Move back one character.</source>
          <target state="translated">一文字戻します。</target>
        </trans-unit>
        <trans-unit id="555b84b86186f36ece3db4f40fd957046b94b4f4" translate="yes" xml:space="preserve">
          <source>Move back to the start of the current or previous word. Words are composed of letters and digits.</source>
          <target state="translated">現在または前の単語の先頭に戻ります。単語は文字と数字で構成されています。</target>
        </trans-unit>
        <trans-unit id="609e1270ca78a70ff45889670fd3fd78ff7848ad" translate="yes" xml:space="preserve">
          <source>Move back to the start of the current or previous word. Words are delimited by non-quoted shell metacharacters.</source>
          <target state="translated">現在または前の単語の先頭に戻ります。単語は、引用符で囲まれていないシェルのメタキャラクタで区切られています。</target>
        </trans-unit>
        <trans-unit id="4b202f08f962725726cf136388f4e14e523a12a8" translate="yes" xml:space="preserve">
          <source>Move backward a word.</source>
          <target state="translated">単語を後ろに移動します。</target>
        </trans-unit>
        <trans-unit id="6be232605df98981975e07d50911ad5d613980f6" translate="yes" xml:space="preserve">
          <source>Move forward a character.</source>
          <target state="translated">キャラを進める。</target>
        </trans-unit>
        <trans-unit id="d13a0267e092ec63b89b3880303a5185a25c3196" translate="yes" xml:space="preserve">
          <source>Move forward a word, where a word is composed of letters and digits.</source>
          <target state="translated">単語が文字と数字で構成されている単語を前進させます。</target>
        </trans-unit>
        <trans-unit id="9b8cd052c7c7c6b3baf215b9ba57515984535bce" translate="yes" xml:space="preserve">
          <source>Move forward one character.</source>
          <target state="translated">一文字進めます。</target>
        </trans-unit>
        <trans-unit id="606acc9a1c4941929e33d5ba6380faad05f1999a" translate="yes" xml:space="preserve">
          <source>Move forward to the end of the next word. Words are composed of letters and digits.</source>
          <target state="translated">次の単語の最後まで進む。単語は文字と数字で構成されています。</target>
        </trans-unit>
        <trans-unit id="b89d7ec6d2bd93bddd819bc89f1f0d6a26143b09" translate="yes" xml:space="preserve">
          <source>Move forward to the end of the next word. Words are delimited by non-quoted shell metacharacters.</source>
          <target state="translated">次の単語の最後まで進みます。単語は、引用符で囲まれていないシェルのメタキャラクタで区切られています。</target>
        </trans-unit>
        <trans-unit id="02b23ca4886e6967ab15ea2dc46e9717e5be7448" translate="yes" xml:space="preserve">
          <source>Move to the end of the input history, i.e., the line currently being entered.</source>
          <target state="translated">入力履歴の末尾、つまり現在入力中の行に移動します。</target>
        </trans-unit>
        <trans-unit id="2a6ce964c353d7fc77f5427c386721059f89e58e" translate="yes" xml:space="preserve">
          <source>Move to the end of the line.</source>
          <target state="translated">最後尾に移動します。</target>
        </trans-unit>
        <trans-unit id="b197771ca8ea11c5879847015686b2f25546c56c" translate="yes" xml:space="preserve">
          <source>Move to the first line in the history.</source>
          <target state="translated">履歴の1行目に移動します。</target>
        </trans-unit>
        <trans-unit id="e8be6e00fb1b714d59f81a250036a76f44d397aa" translate="yes" xml:space="preserve">
          <source>Move to the start of the current line.</source>
          <target state="translated">現在の行の先頭に移動します。</target>
        </trans-unit>
        <trans-unit id="4c0251a5384fa6d692664ca6c0665abebb12594c" translate="yes" xml:space="preserve">
          <source>Move to the start of the line.</source>
          <target state="translated">行の先頭に移動します。</target>
        </trans-unit>
        <trans-unit id="53d14d8e8ec047e7ce0acf9c1000fbfe93a8d444" translate="yes" xml:space="preserve">
          <source>Moving about the input line.</source>
          <target state="translated">入力ラインを移動します。</target>
        </trans-unit>
        <trans-unit id="14c0fe91993a2f846fb463f4f9af616666e24b26" translate="yes" xml:space="preserve">
          <source>Moving about the line.</source>
          <target state="translated">ラインを移動します。</target>
        </trans-unit>
        <trans-unit id="b51a60734da64be0e618bacbea2865a8a7dcd669" translate="yes" xml:space="preserve">
          <source>N</source>
          <target state="translated">N</target>
        </trans-unit>
        <trans-unit id="e69fc18a69727f31dc484cc6cc5d98f4552fffd6" translate="yes" xml:space="preserve">
          <source>NOTES</source>
          <target state="translated">NOTES</target>
        </trans-unit>
        <trans-unit id="884999f8c31d1e58342a8bbb16985f2346ae4228" translate="yes" xml:space="preserve">
          <source>Names of all shell variables. May also be specified as</source>
          <target state="translated">すべてのシェル変数の名前。以下のように指定することもできます。</target>
        </trans-unit>
        <trans-unit id="855dac7ef3e4b8def896fa4ab44b01a71f10d1b7" translate="yes" xml:space="preserve">
          <source>Names of disabled shell builtins.</source>
          <target state="translated">無効化されたシェルのビルドインの名前。</target>
        </trans-unit>
        <trans-unit id="2625ff45ce1ef5f0a4dc736a4f560f0b09467a01" translate="yes" xml:space="preserve">
          <source>Names of enabled shell builtins.</source>
          <target state="translated">有効になっているシェル・ビルトインの名前。</target>
        </trans-unit>
        <trans-unit id="dd42d546f44ab55e4cace8a66a8665c92c311d05" translate="yes" xml:space="preserve">
          <source>Names of exported shell variables. May also be specified as</source>
          <target state="translated">エクスポートされたシェル変数の名前。として指定することもできます。</target>
        </trans-unit>
        <trans-unit id="cf305f7f425a639788a5ceb75efe5eff28e05a46" translate="yes" xml:space="preserve">
          <source>Names of running jobs, if job control is active.</source>
          <target state="translated">ジョブ制御が有効な場合、実行中のジョブの名前。</target>
        </trans-unit>
        <trans-unit id="3d36dd11e7e18e31675c16c2b2bc011a6f22d9fc" translate="yes" xml:space="preserve">
          <source>Names of shell builtin commands. May also be specified as</source>
          <target state="translated">シェル組み込みコマンドの名前。として指定することもできます。</target>
        </trans-unit>
        <trans-unit id="f3e4ba5fcc703baf196cfbafd0cf45e47a01ccd4" translate="yes" xml:space="preserve">
          <source>Names of shell functions.</source>
          <target state="translated">シェル関数の名前。</target>
        </trans-unit>
        <trans-unit id="3aaf14106fd44ec96ea787010350180d7786fa15" translate="yes" xml:space="preserve">
          <source>Names of stopped jobs, if job control is active.</source>
          <target state="translated">ジョブ制御が有効な場合、停止しているジョブの名前。</target>
        </trans-unit>
        <trans-unit id="599beb2be4e642c95316c695b3cb8b79ac302110" translate="yes" xml:space="preserve">
          <source>Next, any command specified with the</source>
          <target state="translated">次に</target>
        </trans-unit>
        <trans-unit id="e7a2f42bd50eaa66febaa97d85e69b1e9650256b" translate="yes" xml:space="preserve">
          <source>Next, the string specified as the argument to the</source>
          <target state="translated">次に、引数に指定した文字列が</target>
        </trans-unit>
        <trans-unit id="ef13a5a0b262b0ac5dca1d912e920c21ac0452e9" translate="yes" xml:space="preserve">
          <source>No parameter and variable expansion, command substitution, arithmetic expansion, or filename expansion is performed on &lt;var&gt;word&lt;/var&gt;. If any part of &lt;var&gt;word&lt;/var&gt; is quoted, the &lt;var&gt;delimiter&lt;/var&gt; is the result of quote removal on &lt;var&gt;word&lt;/var&gt;, and the lines in the here-document are not expanded. If &lt;var&gt;word&lt;/var&gt; is unquoted, all lines of the here-document are subjected to parameter expansion, command substitution, and arithmetic expansion, the character sequence &lt;code&gt;\newline&lt;/code&gt; is ignored, and &amp;lsquo;</source>
          <target state="translated">&lt;var&gt;word&lt;/var&gt; では、パラメータと変数の展開、コマンドの置換、算術展開、またはファイル名の展開は行われません。 &lt;var&gt;word&lt;/var&gt; の一部が引用符で囲まれている場合、 &lt;var&gt;delimiter&lt;/var&gt; は &lt;var&gt;word&lt;/var&gt; の引用符の削除の結果であり、ヒアドキュメントの行は展開されません。 &lt;var&gt;word&lt;/var&gt; が引用符で囲まれていない場合、ヒアドキュメントのすべての行がパラメータ展開、コマンド置換、および算術展開の対象となり、文字シーケンス &lt;code&gt;\newline&lt;/code&gt; は無視され、 '</target>
        </trans-unit>
        <trans-unit id="b11e4927fbb66107c5529cfa17ebc2f1d5088f44" translate="yes" xml:space="preserve">
          <source>Non-builtin commands started by Bash have signal handlers set to the values inherited by the shell from its parent. When job control is not in effect, asynchronous commands ignore &lt;code&gt;SIGINT&lt;/code&gt; and &lt;code&gt;SIGQUIT&lt;/code&gt; in addition to these inherited handlers. Commands run as a result of command substitution ignore the keyboard-generated job control signals &lt;code&gt;SIGTTIN&lt;/code&gt;, &lt;code&gt;SIGTTOU&lt;/code&gt;, and &lt;code&gt;SIGTSTP&lt;/code&gt;.</source>
          <target state="translated">Bashによって開始される非組み込みコマンドには、シグナルハンドラーが、その親からシェルによって継承された値に設定されています。 ジョブ制御が有効でない場合、非同期コマンドは、これらの継承されたハンドラーに加えて、 &lt;code&gt;SIGINT&lt;/code&gt; および &lt;code&gt;SIGQUIT&lt;/code&gt; を無視します。 コマンド置換の結果として実行されるコマンドは、キーボードで生成されたジョブ制御信号 &lt;code&gt;SIGTTIN&lt;/code&gt; 、 &lt;code&gt;SIGTTOU&lt;/code&gt; 、および &lt;code&gt;SIGTSTP&lt;/code&gt; を無視します。</target>
        </trans-unit>
        <trans-unit id="c485ae1fdc8aaec172e2cfbb73ba1b1edd86f00d" translate="yes" xml:space="preserve">
          <source>Non-incremental searches read the entire search string before starting to search for matching history lines. The search string may be typed by the user or be part of the contents of the current line.</source>
          <target state="translated">非インクリメンタル検索は、一致する履歴行の検索を開始する前に、検索文字列全体を読み込みます。検索文字列はユーザが入力したものでも、現在の行の内容の一部でも構いません。</target>
        </trans-unit>
        <trans-unit id="2c6ec55c5b4bfe5089bd9904bc736c7597d8e5c2" translate="yes" xml:space="preserve">
          <source>Non-interactive shells exit if &lt;var&gt;filename&lt;/var&gt; in &lt;code&gt;.&lt;/code&gt;&lt;var&gt;filename&lt;/var&gt; is not found.</source>
          <target state="translated">非対話型シェルは、 &lt;var&gt;filename&lt;/var&gt; がの場合に終了します &lt;code&gt;.&lt;/code&gt; &lt;var&gt;filename&lt;/var&gt; が見つかりません。</target>
        </trans-unit>
        <trans-unit id="7cabefe578a859ab8e65ca427392ad944a8360d2" translate="yes" xml:space="preserve">
          <source>Non-interactive shells exit if a parameter expansion error occurs.</source>
          <target state="translated">非インタラクティブなシェルは、パラメータ展開エラーが発生した場合に終了します。</target>
        </trans-unit>
        <trans-unit id="d1d6b4f667281a0903111799342dc09dac1a5b7f" translate="yes" xml:space="preserve">
          <source>Non-interactive shells exit if a syntax error in an arithmetic expansion results in an invalid expression.</source>
          <target state="translated">非インタラクティブなシェルは、算術展開の構文エラーで無効な式が発生した場合に終了します。</target>
        </trans-unit>
        <trans-unit id="7f3b130b3679867796e7b2794d8d4d0a8d2adf7b" translate="yes" xml:space="preserve">
          <source>Non-interactive shells exit if there is a syntax error in a script read with the &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;source&lt;/code&gt; builtins, or in a string processed by the &lt;code&gt;eval&lt;/code&gt; builtin.</source>
          <target state="translated">で読み込まれたスクリプトに構文エラーがある場合、非インタラクティブシェルは終了します &lt;code&gt;.&lt;/code&gt; または &lt;code&gt;source&lt;/code&gt; ビルトイン、または &lt;code&gt;eval&lt;/code&gt; ビルトインによって処理される文字列。</target>
        </trans-unit>
        <trans-unit id="7c27101824728b035245beb759417f36eeb9e65c" translate="yes" xml:space="preserve">
          <source>Notation used in this text.</source>
          <target state="translated">本文中で使用している表記法。</target>
        </trans-unit>
        <trans-unit id="e867b380c598d9e97d14aa2959425a607f995453" translate="yes" xml:space="preserve">
          <source>Note that for historical reasons, in the most common usage the curly braces that surround the body of the function must be separated from the body by &lt;code&gt;blank&lt;/code&gt;s or newlines. This is because the braces are reserved words and are only recognized as such when they are separated from the command list by whitespace or another shell metacharacter. Also, when using the braces, the &lt;var&gt;list&lt;/var&gt; must be terminated by a semicolon, a &amp;lsquo;</source>
          <target state="translated">歴史的な理由により、最も一般的な使用法では、関数の本体を囲む中括弧は &lt;code&gt;blank&lt;/code&gt; sまたは改行で本体から分離する必要があることに注意してください。 これは、中かっこが予約語であり、空白または別のシェルメタ文字によってコマンドリストから区切られている場合にのみ認識されるためです。 また、中括弧を使用する場合、 &lt;var&gt;list&lt;/var&gt; はセミコロン、 '</target>
        </trans-unit>
        <trans-unit id="5d0eea6cc1840504408ea16ccadd02eec4fd32c0" translate="yes" xml:space="preserve">
          <source>Note that if no expansion occurs, no splitting is performed.</source>
          <target state="translated">展開が発生しない場合は、分割が行われないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="85099ec840523ed8d40cae98363cbd5b2fc921b8" translate="yes" xml:space="preserve">
          <source>Note that the order of redirections is significant. For example, the command</source>
          <target state="translated">リダイレクトの順番が重要であることに注意してください。例えば、コマンド</target>
        </trans-unit>
        <trans-unit id="74848d504d1ec5c74a9815027d3618d6e3ab1fad" translate="yes" xml:space="preserve">
          <source>Note that when the mode is interpreted as an octal number, each number of the umask is subtracted from &lt;code&gt;7&lt;/code&gt;. Thus, a umask of &lt;code&gt;022&lt;/code&gt; results in permissions of &lt;code&gt;755&lt;/code&gt;.</source>
          <target state="translated">モードが8進数として解釈される場合、umaskの各数値は &lt;code&gt;7&lt;/code&gt; から減算されることに注意してください。 したがって、 &lt;code&gt;022&lt;/code&gt; の umaskは &lt;code&gt;755&lt;/code&gt; の許可になります。</target>
        </trans-unit>
        <trans-unit id="f2ac05f5cec4f5c8c50a92866154dc88ab43649c" translate="yes" xml:space="preserve">
          <source>Note that wherever a &amp;lsquo;</source>
          <target state="translated">どこにでも注意してください '</target>
        </trans-unit>
        <trans-unit id="e51443fffacab700dcc08997d3c849facc3f9f48" translate="yes" xml:space="preserve">
          <source>Notice how</source>
          <target state="translated">どのように注意してください。</target>
        </trans-unit>
        <trans-unit id="997abb76eabee288731fc2937ad66abaea3fbea8" translate="yes" xml:space="preserve">
          <source>Numeric Arguments</source>
          <target state="translated">数値引数</target>
        </trans-unit>
        <trans-unit id="08a914cde05039694ef0194d9ee79ff9a79dde33" translate="yes" xml:space="preserve">
          <source>O</source>
          <target state="translated">O</target>
        </trans-unit>
        <trans-unit id="5f3b987e1c3e6ec569bd126e904cef54fefe3c88" translate="yes" xml:space="preserve">
          <source>OLDPWD</source>
          <target state="translated">OLDPWD</target>
        </trans-unit>
        <trans-unit id="e0f5679bbe22565a79e204b53492d29f42dbd248" translate="yes" xml:space="preserve">
          <source>OPTARG</source>
          <target state="translated">OPTARG</target>
        </trans-unit>
        <trans-unit id="866d071acdc9c3f8972bdadac2552f784a86d267" translate="yes" xml:space="preserve">
          <source>OPTERR</source>
          <target state="translated">OPTERR</target>
        </trans-unit>
        <trans-unit id="6594723d07b6ee2e01bbe899b4f410b577b84e90" translate="yes" xml:space="preserve">
          <source>OPTIND</source>
          <target state="translated">OPTIND</target>
        </trans-unit>
        <trans-unit id="67fb5233053001445a2a79934c6ec463131f2ddc" translate="yes" xml:space="preserve">
          <source>OSTYPE</source>
          <target state="translated">OSTYPE</target>
        </trans-unit>
        <trans-unit id="0a38dbc78e366f12451b07667d8eb4386b2e3e9d" translate="yes" xml:space="preserve">
          <source>Of the two forms, the first is preferred. This is semantically equivalent to</source>
          <target state="translated">2つの形式のうち、1つ目の形式が好ましい。これは、意味的には</target>
        </trans-unit>
        <trans-unit id="60cc2e1aa5c6781f9d89f9ab563e754633cc2620" translate="yes" xml:space="preserve">
          <source>Of these list operators, &amp;lsquo;</source>
          <target state="translated">これらのリスト演算子の '</target>
        </trans-unit>
        <trans-unit id="d9f43fe082c76f430e5842d0449865dc57520a1d" translate="yes" xml:space="preserve">
          <source>Often during an interactive session you type in a long line of text, only to notice that the first word on the line is misspelled. The Readline library gives you a set of commands for manipulating the text as you type it in, allowing you to just fix your typo, and not forcing you to retype the majority of the line. Using these editing commands, you move the cursor to the place that needs correction, and delete or insert the text of the corrections. Then, when you are satisfied with the line, you simply press &lt;code&gt;RET&lt;/code&gt;. You do not have to be at the end of the line to press &lt;code&gt;RET&lt;/code&gt;; the entire line is accepted regardless of the location of the cursor within the line.</source>
          <target state="translated">多くの場合、インタラクティブセッション中に長い行のテキストを入力すると、その行の最初の単語のスペルが間違っていることに気づくだけです。 Readlineライブラリには、入力時にテキストを操作するための一連のコマンドが用意されているため、タイプミスを修正するだけで、大部分の行を再入力する必要はありません。 これらの編集コマンドを使用して、修正が必要な場所にカーソルを移動し、修正のテキストを削除または挿入します。 次に、ラインに満足したら、単に &lt;code&gt;RET&lt;/code&gt; を押します。 &lt;code&gt;RET&lt;/code&gt; を押すために行の最後にいる必要はありません。 行内のカーソルの位置に関係なく、行全体が受け入れられます。</target>
        </trans-unit>
        <trans-unit id="e0049a66519cae71159800bb77a35007bc2d76d3" translate="yes" xml:space="preserve">
          <source>On</source>
          <target state="translated">On</target>
        </trans-unit>
        <trans-unit id="8ebccea227af14bbb1599e724e0522b214338baf" translate="yes" xml:space="preserve">
          <source>On systems that can support it, there is an additional expansion available: &lt;var&gt;process substitution&lt;/var&gt;. This is performed at the same time as tilde, parameter, variable, and arithmetic expansion and command substitution.</source>
          <target state="translated">それをサポートできるシステムでは、追加の拡張が利用可能です： &lt;var&gt;process substitution&lt;/var&gt; 。 これは、チルド、パラメーター、変数、および算術展開とコマンド置換と同時に実行されます。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
